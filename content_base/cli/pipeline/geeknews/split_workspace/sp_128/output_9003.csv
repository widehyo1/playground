"https://news.hada.io/topic?id=12267","세계에서 가장 부유한 25가족의 재산, 지난해 43% 급증","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    세계에서 가장 부유한 25가족의 재산, 지난해 43% 급증

요약 제목: 세계 최고 부유한 가족들 2023

     * 본 기사는 2023년 세계에서 가장 부유한 가족들에 대한 내용을 다룸.
     * 기사는 해당 가족들의 재산 규모, 사업 영역, 그리고 그들의 부가 어떻게 형성되었는지 등에 대한 정보를 제공할 것으로 보임.
     * 이러한 정보는 경제적 관점에서 흥미로운 인사이트를 제공하며, 부의 분배와 경제적 영향력에 대한 논의를 촉진할 수 있음.

GN⁺의 의견

     * 이 기사에서 가장 중요한 점은 세계에서 가장 부유한 가족들의 현재 상태와 그들이 어떻게 그 위치에 오르게 되었는지에 대한 이해를 돕는 것임.
     * 이러한 내용은 경제적 성공과 부의 축적에 관심이 있는 사람들에게 매우 흥미로운 정보를 제공하며, 부의 불평등과 경제적 파워의 집중에 대한 중요한 토론을 이끌어낼 수 있음.

        Hacker News 의견

     * QQQ 지수가 올해 47% 상승함. 이는 전체 시장이 2023년에 상승했기 때문에 놀랍지 않은 현상.
     * 해당 목록이 이상한 이유는 첫 세대의 재산과 단일 상속인이 통제하는 재산을 제외하는 방법론 때문.
     * 시장의 변동성을 고려할 때 연초 대비 수익률(YTD)만을 사용하는 것은 적절하지 않음. 예를 들어, 최근 2-5년간의 주식 시장 수익률과 비교해볼 필요가 있음.
     * 제목이 클릭베이트에 가까움. 지난 5년간의 재산 증가를 계산하면 더 흥미로운 제목을 만들 수 있을 것.
     * 현재 부자들의 재산 구성에 대한 세부적인 분석이 궁금함. 초기에 비즈니스를 통해 돈을 벌었지만, 지금은 주식, 채권, 부동산 등에 주로 투자되어 있는지 의문.
     * 나스닥이 40% 상승함에 따라 개인의 재산도 상당한 비율로 증가함. 제목이 다소 어리석게 느껴짐.
     * 미국 인구의 99%가 경기 침체를 경험하는 반면, 경제 통계는 경제가 호황인 것처럼 보임. 현재의 고용 시장 상태와 Toys for Tots의 기부 감소 및 장난감 기부 필요성 증가는 경제가 실제로 나쁘다는 지표.
     * 개인이 수백만 달러 이상을 소유할 필요가 전혀 없음. 그 이상의 금액은 95%의 세율로 과세되어야 함.
     * 삼성이나 현대와 같은 대기업이 목록에 포함되지 않은 것에 대해 놀람.
"
"https://news.hada.io/topic?id=12314","MemoryCache - 브라우저기반 Local AI를 강화하기 위한 Mozilla의 프로젝트 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          MemoryCache - 브라우저기반 Local AI를 강화하기 위한 Mozilla의 프로젝트

     * 로컬 데스크톱 환경을 온디바이스 AI 에이전트로 전환하기 위한 실험적인 개발 프로젝트
     * 브라우저에 저장된 로컬 파일로 온디바이스 모델을 강화하여 보다 개인화된 맞춤형 경험을 제공
     * 현재 MemoryCache는 privateGPT의 로컬 복사본을 보강하기 위한 스크립트 및 간단한 도구 세트
          + Firefox 확장: 페이지를 /Downloads/ 폴더의 하위 디렉터리에 저장하는 간단한 '프린터' 역할과, 브라우저에서 로컬 컴퓨터로 메모와 정보를 빠르게 저장하는 기능을 포함
          + 쉘 스크립트 : /Downloads/MemoryCache/ 디렉터리의 변경 사항을 인식하고 privateGPT의 ingest.py 스크립트를 실행
          + 사람이 더 쉽게 읽을 수 있도록, 웹페이지를 PDF로 자동 저장 가능하게 수정한 Firefox SaveAsPDF API 코드

   다 좋은데 자꾸 브라우저를 잡다한 고물상으로 만드려고 하지는 않았으면 좋겠네요.
   과거의 internet suite에서 얻은 교훈이 있을텐데 말이죠.

   브라우저는 브라우저. AI는 AI. 필요할 때 따로 실행시키면 그만.

        Hacker News 의견

     * Reddit에서 이 주제에 대해 이야기했었음. 데이터를 모델로 보내는 대신, 모델이 우리의 데이터가 저장된 로컬로 오고 로컬에 머물게 해야 함. 많은 오픈소스 소프트웨어가 개인 데이터를 로드하지만 이미지나 비디오는 처리하지 못함. 미래에는 모두가 자신만의 모델을 가질 수 있겠지만, 현재는 기술은 있지만 모두가 자신만의 QLORA, RAG, 요약기를 가질 수 있는 제품/오픈소스 소프트웨어가 부족함. 메시지/문서뿐만 아니라 우리가 읽고 쓰는 것, 생각하는 것도 개인의 독특함을 만듦. 우리의 브라우징 기록은 우리가 읽는 것에 대해 많은 것을 말해주지만 구글이 광고를 위해 사용하는 것 외에는 이를 활용하는 사람이 거의 없음. 거의 모든 사람이 특정 뉴스 사이트, 소셜 네트워크, 유튜브 비디오 등을 읽는 습관이 있음. 오늘 이 세 가지로부터 요약을 해줌.*
          + 데이터를 모델로 보내는 것이 아니라, 모델이 사용자의 로컬 데이터에 접근하도록 해야 한다는 의견.
          + 현재 많은 오픈소스 소프트웨어가 있지만 이미지와 비디오 처리는 부족함.
          + 개인의 독특함은 읽고 쓰는 것, 생각하는 것에도 반영되며, 브라우징 기록을 활용하는 사례가 부족함.
     * Mozilla는 Firefox와 정치적 설교로 많은 비판을 받지만, 개인 정보 보호와 사용자 친화적인 기술 개발 능력이 여전히 있다고 믿음. FF 내장 오프라인 번역기를 자주 사용하고, 서버 파크 없이 로컬에서 실행될 수 있다는 것이 마법 같음. 이 실험이 성공하기를 바람.*
          + Mozilla가 개인 정보 보호와 사용자 친화적인 기술 개발에 여전히 능력이 있다는 긍정적인 의견.
          + Firefox 내장 오프라인 번역기의 로컬 실행 능력에 대한 감탄.
     * 브라우징 사용과 관련하여 이것은 나에게 적합하지 않음. 브라우징 기록과 '대화'하는 것을 원하지 않음. 브라우저가 OS에서 북마크의 실제 내용을 검색할 수 있도록 인덱싱해주길 바람. chatGPT에서 얻는 피드백 루프가 로컬 GPT 대응보다 항상 더 나을 것으로 가정함. 하지만 중요한 정보가 담긴 페이지를 북마크하고 여러 번 돌아가 볼 가치가 있음. 이를 위해 해결책을 만들기 시작함. 로컬 브라우저 저장소의 북마크를 크롤링하고, 해당 페이지를 다운로드하여 OS의 검색 인덱스에 추가함. 이것은 몇 년 동안 나의 고민거리였음.*
          + 브라우저가 OS에서 북마크 내용을 인덱싱하는 기능을 원하는 사용자의 의견.
          + 중요한 정보가 담긴 페이지를 북마크하고 쉽게 검색할 수 있는 해결책을 개발 중임.
     * 브라우징 기록과 페이지 내용과 '대화'할 수 있는 방법을 정말로 원함. 방문한 페이지를 나중에 처리하기 위해 자동으로 저장할 수 있는 방법이 있나요? 10년 이상 전에 찾아봤지만 좋은 해결책을 찾지 못함.*
          + 브라우징 기록과 페이지 내용을 나중에 처리할 수 있는 방법에 대한 관심.
     * 여기에 무언가 있을 수 있음. 거대 기업과의 왕복을 줄이고, 각 프롬프트로 그들을 풍요롭게 하는 대신, 개인 정보를 훨씬 더 존중하는 작은 로컬 모델을 사용함. 이러한 운영 모델에는 오픈소스 기여를 하거나 심지어 자금을 지원할 의향이 있음. 비록 Mozilla 조직의 큰 팬은 아니지만, 열외자를 응원하는 것을 좋아함.*
          + 개인 정보를 존중하는 작은 로컬 모델의 사용에 대한 지지.
          + 해당 운영 모델에 기여하거나 자금을 지원할 의향이 있음.
     * 기존의 북마크는 기억에 의존하는 조직 방식이 확장성이 없어 실패함. 이러한 인터페이스는 확장 가능하며, 올바르게 수행되면 전체적으로 대체할 수 있음. 생각해보면, 이것은 모든 로컬 파일에도 사용될 수 있으며, 파일 시스템-데이터베이스 개념의 더 나은 버전으로 작용할 수 있음. 또는 특정 지식 기반(예: LLM 기반 Zotero)에 대해서도 사용될 수 있음.*
          + 북마크의 확장성 문제와 새로운 인터페이스의 잠재적 대체 가능성에 대한 의견.
          + 이 인터페이스가 로컬 파일이나 특정 지식 기반에도 적용될 수 있음.
     * 관심 있는 사람을 위한 PrivateGPT 저장소 링크: https://github.com/imartinez/privateGPT. 공식 웹사이트에서 링크되지 않은 것 같음.*
          + PrivateGPT 저장소에 대한 정보 공유.
     * Firefox OS 시대를 경험한 전 인턴으로서, 이것은 미래에 Mozilla가 제공하는 OS로의 재진입 가능성을 느낌. 인터넷은 사람들을 연결하기 위해 태어났지만, 모든 멋진 기능을 브라우저에 통합하는 것이 최적의 방법은 아님. Firefox OS는 기본적으로 작은 리눅스 커널에 Gecko와 HTML5 렌더링이었음. iOS와 iPadOS처럼 Mozilla가 장치/플랫폼에 대해 비슷한 OS를 제공할 수 있음. 지난 5년 동안 AR과 VR에 투자해왔기 때문에 결국 다른 Firefox OS에 베팅할 수도 있음을 놀라지 않을 것임.*
          + Mozilla가 미래에 자체 OS를 다시 제공할 수 있는 가능성에 대한 추측.
     * 포크된 저장소로 링크하려고 했나요? https://memorycache.ai/developer-blog/2023/… 링크는 https://github.com/misslivirose/Memory-Cache로 연결되지만, https://github.com/Mozilla-Ocho/Memory-Cache를 의미한 것인가요?*
          + 특정 GitHub 저장소 링크에 대한 질문.
     * 오랫동안 이것을 하고 있음. FF 솔루션은 단지 더 자동화된 것일 뿐임.
          + Firefox 솔루션에 대한 개인적인 경험 공유.
"
"https://news.hada.io/topic?id=12283","PysimpleGUI 기술 관련 소식","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          PysimpleGUI 기술 관련 소식

PySimpleGUI 소개

     * PySimpleGUI는 모든 수준의 파이썬 프로그래머가 GUI를 만들 수 있게 하는 파이썬 패키지임.
     * ""layout""을 사용하여 GUI 창을 정의하고, tkinter, Qt, WxPython, Remi 중 하나를 사용하여 창을 생성하고 상호 작용함.
     * PySimpleGUI 코드는 기본 프레임워크를 직접 사용하는 것보다 간단하고 짧으며, ""boilerplate code""를 많이 구현함.
     * 필요한 경우 프레임워크의 위젯과 창에 직접 접근할 수 있어, PySimpleGUI API를 통해 노출되지 않거나 접근할 수 없는 설정이나 기능도 확장 가능함.

""GUI Gap"" 극복

     * 파이썬은 많은 사람들을 프로그래밍 커뮤니티로 끌어들였으나, 대부분의 파이썬 프로그램은 ""커맨드 라인"" 기반이며, 일반 사용자에게는 접근성이 떨어짐.
     * GUI를 추가하면 프로그램이 더 접근하기 쉬워지고, 사용자 범위가 확장됨.
     * GUI는 일부 프로그램과 상호 작용을 더 쉽게 만들고, 명령줄 인터페이스에 익숙한 사용자에게도 도움이 됨.

오픈 소스 사용 인정

     * PySimpleGUI 또는 PySimpleGUI 계정의 저장소에서 사용된 패키지 목록 제공.
     * 프로젝트에서 오픈 소스 소프트웨어를 사용하는 경우 사용된 패키지에 대한 정보를 제공하는 것이 좋음.

""바"" 넘기기

     * GUI 프로그래밍 학습 장벽이 높다는 의견에 대해, PySimpleGUI 프로젝트는 이를 낮추려고 시도함.
     * 사용자들이 PySimpleGUI를 통해 성공적으로 GUI 프로그램을 만들고 기쁨과 감사를 표현하는 이메일을 받음.

교육 자료

     * PySimpleGUI 공식 Udemy 코스가 있으며, 쿠폰 코드를 사용할 수 있음.
     * www.PySimpleGUI.org에서 문서를 찾을 수 있으며, 다양한 문서와 쉽게 검색할 수 있는 기능을 제공함.
     * 수백 페이지의 문서와 예제 프로그램을 통해 빠르게 효과적으로 배울 수 있음.

GN⁺의 의견

   이 글에서 가장 중요한 것은 PySimpleGUI가 파이썬 사용자들이 GUI를 쉽게 만들 수 있도록 도와주는 도구라는 점입니다. 초보자부터 전문가까지 모든 수준의 개발자가 사용할 수 있으며, 다양한 프레임워크와 통합할 수 있는 능력을 제공합니다. 이 글이 흥미로운 이유는 프로그래밍에 대한 접근성을 높이고, 더 많은 사람들이 자신의 아이디어를 실현할 수 있게 만드는 PySimpleGUI의 잠재력을 보여주기 때문입니다.

        Hacker News 의견

     * Jira 시간 로깅을 위해 PySimpleGUI를 사용한 프로젝트
          + Jira 웹사이트 사용의 불편함으로 인해, 할당된 이슈 목록과 로그 및 코멘트 추가 버튼이 있는 데스크톱 앱 개발에 관심.
          + Tkinter 사용 시 UI 디자인에 어려움을 겪었으나, PySimpleGUI를 통해 속도가 크게 향상됨.
          + Jira API와 연동하여 원하는 기능을 구현하고 UI 개발을 배울 수 있는 좋은 프로젝트였음.
     * GUI 프레임워크에 대한 흥미와 PySimpleGUI의 장점
          + 네이티브 데스크톱 경험이 웹 기반 UI보다 우수하다고 생각함.
          + PySimpleGUI의 간소화된 이벤트 루프와 다중 백엔드 접근 방식이 혁신적이라고 평가.
          + 데이터 구조와 함수를 기반으로 자동으로 GUI를 생성하는 아이디어에 대한 관심 표현.
     * PySimpleGUI의 미적 측면과 스타일링의 어려움
          + PySimpleGUI의 예제가 90년대 스타일로 보이지만, CLI를 사용할 수 없는 비기술 사용자를 위한 프로토타이핑/내부 도구에 적합.
          + 네이티브 UI의 성능은 좋지만 스타일링이 웹페이지보다 어려움.
          + Python GUI에서 Flutter나 SwiftUI와 같이 적은 노력으로 멋진 외관을 제공하는 컴포넌트에 대한 질문.
     * PySimpleGUI에 대한 개선 제안
          + 리스트 대신 삽입 순서를 기억하는 딕셔너리 사용 제안.
          + PyQt를 사용한 경험에서 속성/시그널 설정과 위젯 중첩을 동시에 수행하는 방식이 유용했음.
          + 간단한 GUI를 빠르게 구축하는 데 도움이 되는 라이브러리로서 PySimpleGUI에 감사함.
     * VB6나 Delphi/Lazarus의 사용 편의성에 근접한 진전
          + 인터랙티브 GUI 빌더의 필요성과 이를 통한 개발 편의성 향상에 대한 기대감 표현.
          + WxPython과 WxFormBuilder의 호환성 문제를 경험하고, 이를 해결하기 위한 노력과 PySimpleGUI에 대한 긍정적인 평가.
     * Python 데스크톱 애플리케이션 개발의 패키징 문제
          + 다수의 의존성이 있는 경우, 배포 가능한 바이너리를 생성하는 기존 도구들의 문제점.
          + PyInstaller나 cx_freeze 사용 시 발생하는 동적 모듈 로딩 문제와 누락된 파일 문제.
          + Java의 jar와 같은 표준화된 독립 프로그램 패키징 방법의 필요성 제기.
     * CustomTKinter에 대한 선호도
          + CustomTKinter의 우아하고 현대적인 테마와 시스템에 따른 라이트/다크 테마 지원에 대한 선호.
     * VB6의 빠른 애플리케이션 개발 공백에 대한 의견
          + VB6의 드래그 앤 드롭 GUI 빌더의 힘과 그에 대한 공백을 채울 수 있는 도구의 부재에 대한 놀라움.
     * CLI 인터페이스를 가진 도구에 GUI를 추가하는 고려
          + 데스크톱 리눅스를 사용하지 않는 사용자를 위해 CLI 도구에 GUI를 덧붙이는 아이디어에 대한 고민.
          + 이러한 변환을 시도한 다른 사람의 경험과 예상되는 도전 과제에 대한 궁금증.
     * PySimpleGUI를 사용한 비소프트웨어 팀의 경험
          + 빠른 UI 개발에 유용하지만 복잡성이 증가함에 따라 유지 관리와 탐색이 어려워짐.
          + 스타일링이 미흡했으나, 단기간 프로토타이핑에 적합할 수 있음.
"
"https://news.hada.io/topic?id=12304","포틀랜드 부흥을 위해 공공 장소에서의 마약 사용 금지를 추진하는 관계자들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                포틀랜드 부흥을 위해 공공 장소에서의 마약 사용 금지를 추진하는 관계자들

포틀랜드 부흥을 위한 공공 마약 사용 금지 추진

     * 오리건 주 포틀랜드 중심부에서 비즈니스 이탈과 마약 과용 사례가 증가함에 따라, 주지사 티나 코텍은 마약 비범죄화 법의 일부를 철회하고 경찰의 마약 단속 강화를 제안.
     * 코텍 주지사의 계획에 따라, 주 의회는 공공 장소에서의 마약 사용 금지를 고려하고, 경찰은 마약 유통 방지를 위한 추가 자원을 받게 될 예정.
     * 코텍 주지사는 이 조치가 포틀랜드 도심 지역의 안전감 회복에 도움이 될 것이라고 밝힘. 해당 지역은 주요 소매업체들의 이탈로 어려움을 겪고 있음.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 오리건 주 포틀랜드가 마약 비범죄화 법의 일부를 되돌리고 공공 장소에서의 마약 사용을 금지하는 방안을 고려하고 있다는 것이다. 이는 도심 지역의 안전과 질서 회복을 목표로 하며, 이러한 변화가 사회에 미칠 영향에 대한 흥미로운 논의를 촉발할 수 있다. 지역 사회의 안전과 경제 활성화를 위한 조치로서, 이러한 정책 변화는 다른 지역이나 국가에도 영향을 미칠 수 있는 중요한 사례가 될 수 있다.

        Hacker News 의견

     * 마약 합법화에 대한 의견 변화

     한 사용자는 포틀랜드의 실험을 통해 마약 합법화에 대한 자신의 의견이 크게 바뀌었다고 언급함. 포틀랜드는 대규모 투자를 통해 쉼터, 치료 프로그램, 상담사 등을 제공했지만, 과다복용 사례는 두 배 이상 증가했고 쉼터는 절반 이상 비어 있음. 이 사용자는 이 실험이 실패했다고 생각하며, 중독자를 감옥에 가두는 것을 원하지 않지만, 도시가 사람들이 살고 싶어하는 곳이 되어야 한다고 주장함.
     * 시애틀 지역의 마약 문제

     다른 사용자는 시애틀 지역이 포틀랜드와 유사하게 공공장소에서의 마약 사용 문제를 겪고 있다고 언급함. 수십 년 동안 진보적인 정치인들이 범죄화 해소 노력을 이끌고 막대한 공공 자금을 치료 및 해로 감소 프로그램에 투자했지만, 문제는 여전히 최악의 상태임.
     * 주택 가격 문제와 마약 사용

     한 사용자는 포틀랜드의 주택 가격 문제를 지적하며, 사람들이 공공장소에서 마약을 사용하는 이유가 개인 공간에서 사용할 여유가 없기 때문이라고 언급함. 이 사용자는 주택 부족의 결과를 해결하기 위해 다른 모든 방법을 시도하는 것처럼 보이지만 실제로 충분한 주택을 건설하는 것을 제외한다고 비판함.
     * 마약 합법화와 규제 필요성

     또 다른 사용자는 마약의 범죄화 해소만으로는 부족하며, 마약을 합법화하고 규제해야 한다는 입장을 제시함. 이 사용자는 헤로인 중독자인 친구의 친척 사례를 들어, 대부분의 과다복용이 펜타닐로 인한 것이며, 합법화하면 사회에 해를 끼치지 않는 '기능적 중독자'가 될 수 있다고 주장함.
     * 마약 범죄화 해소 후 관리 부족

     한 사용자는 마약 범죄화 해소 후 적절한 후속 입법이나 관리가 이루어지지 않아 문제가 발생했다고 지적함. 이는 미국 정치에서 승리를 축하하기 어려운 이유로, 승리가 불량 관리로 인해 실패할 운명에 처해 있다고 비판함.
     * 마약 사용자로 인한 피해자들의 목소리

     한 피해자는 마약 사용자로 인해 자신과 다른 무고한 사람들이 신체적, 정신적으로 큰 피해를 입었다고 언급함. 이 사용자는 마약 사용을 허용하는 입장에 대해 비판하며, 피해자 지원 그룹에 참석할 것을 권함.
     * 포르투갈의 마약 정책

     포르투갈의 마약 정책을 언급한 사용자는 포르투갈에서는 마약의 종류나 사용 장소에 관계없이 중독 여부가 중요하다고 설명함. 포르투갈은 강력한 사회 안전망을 가지고 있으며, 때로는 너무 강하다고 느껴질 정도라고 언급함.
     * 마약 사용과 공공장소의 문제

     한 사용자는 마약 사용 장애를 가진 사람들을 감옥에 가두는 것과 공공장소를 사용 불가능하게 만드는 반사회적 행동을 허용하는 것 사이에 중간 지점이 있어야 한다고 주장함. 마약은 합법이지만 공공장소에서의 사용과 공공장소에서의 술에 취하는 행위는 엄격히 금지되어야 한다고 생각함.
     * 마약 사용의 정신 건강 문제

     마약 사용을 정신 건강 문제로 보는 사용자는 사람들이 기분이 좋지 않을 때 기분을 좋게 만드는 것을 복용하는 것은 자가 치료의 일종이라고 언급함. 비만 역시 마찬가지로 '무엇'이 아니라 '왜'를 치료해야 한다고 주장함.
     * 펜타닐 문제

     펜타닐이 문제라고 지적하는 사용자는 펜타닐이 매우 저렴하고 거의 모든 것에 섞일 수 있으며, 치명적인 용량을 투여하기 쉽고 매우 중독성이 강하다고 언급함.
"
"https://news.hada.io/topic?id=12254","Zen - 간단하고 효율적인 크로스플랫폼 Ad-Blocker 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Zen - 간단하고 효율적인 크로스플랫폼 Ad-Blocker 오픈소스

     * 시스템-와이드 광고 차단 및 개인정보 보호 도구
          + 모든 어플리케이션의 HTTP 요청을 인터셉트하는 프록시를 세팅하여 동작
          + 시스템 레벨로 동작하므로 브라우저 확장으로는 막지 못하는 광고, 추적 스크립트 등까지 모두 차단
     * 윈/맥/리눅스 지원
     * 필터가 기본 제공되며 EasyList 스타일 필터를 쉽게 추가 가능
     * 첫 설치시에 Root Certificate를 설치함. 이 인증서는 로컬에서 생성되며 외부로 전혀 나가지 않음

   zen 동작시키면, 카톡은 서비스 차단시켜 버리네요. 참고하세요

   Rust로 작성된 비슷한 동작을 하는 privaxy (https://github.com/barre/privaxy) 도 있습니다.
"
"https://news.hada.io/topic?id=12219","Meta, 이미지 생성을 통한 콘텐츠 제작 지원 서비스 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Meta, 이미지 생성을 통한 콘텐츠 제작 지원 서비스 소개

   페이스북과 인스타그램, 왓츠앱 등을 보유한 메타가 자체 인공지능 기술을 자사 제품들에 실험적으로 도입하고 있다고 공식적으로 밝혔습니다. 제공하는 기능은 AI 생성된 게시물 댓글 제안, 커뮤니티 채팅 주제 제안, 검색 결과 제공, 쇼핑의 제품 설명 개선 등에 사용됩니다. 또한, 창의적인 취미를 가진 사람들을 위한 새로운 독립 실행형 경험인 'imagine with Meta AI'를 구동하고 있습니다.

   Outpainting이나 Upscaling 등의 기술을 제공하여 1:1 해상도의 이미지를 9:16으로 바꾸거나 콘텐츠에 맞는 적절한 이미지 추천 및 생성 기술을 제공 합니다.

   한국에서는 아직 안되나보네요?ㅠ
"
"https://news.hada.io/topic?id=12311","Stability AI, Edge 기기를 위한 Stable LM Zephyr 3B LLM 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Stability AI, Edge 기기를 위한 Stable LM Zephyr 3B LLM 공개

     * 7B 모델보다 60% 작은 30억개의 파라미터를 가진 LLM
     * 명령어 추종 및 Q&A 작업에 알맞게 튜닝된 모델
     * 고성능 하드웨어 없이도 다양한 디바이스에서 정확하고 반응이 빠른 출력이 가능
     * 비상업적 용도로 사용 가능한 라이센스로 배포
"
"https://news.hada.io/topic?id=12281","x.com 은 트위터인데, [a-z].com은 뭘까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     x.com 은 트위터인데, [a-z].com은 뭘까?

     * 한글자 도메인은 딱 3개만 동작: q, x, z
          + q.com 은 미국의 광케이블 인터넷 제공사인 Quantum Fiber가 소유
          + z.com 은 용도가 없는데 최근에 홍콩 회사가 $220k(약 3억원)에 구입. 2014년에 $6.8M(90억원)에 팔렸는데 가격이 내림
     * 왜 q/x/z 제외하고는 없을까 ?
          + .com 을 만들고 나서 IANA에서 단일 문자 도메인 구매 기능을 철회했고 이미 구매한 것만 그대로 유지
     * [a-z].org 는 어떨까?
          + a/c/e/f/g/q/u/v/w/x/y 등 도메인이 실제 사용중
          + m 은 판매용으로 나와있음
          + c.org 같은 경우 change.org 로 리디렉션됨
          + e.org 는 영국의 에너지 공급자
          + f.org 는 FinTech Labs 라는데 ToS 랑 개인정보 약관이 웃김
          + g.org 는 가장 흥미로운 비쥬얼을 가지는데, 아마도 f.org 와 소유자가 동일한 듯(웹사이트 구조/용어가 비슷)
          + i.org 는 Meta가 소유하고 있는데 연결이 안됨
          + q.org 는 Web3 회사
          + u.org 는 Understood 라는 NGO
          + v.org 는 V Foundtaion 이 소유하고 있음. ""암을 극복해서 이기기"" 라고 써있음
          + w.org 는 Wordress 가 소유하고 있음
          + x.org 는 X.Org 재단
          + y.org 는 YMCA가 소유
     * [a-z].co 는 ? 몇개 제외하고 다 액티브 하거나 판매중
          + t.co(트위터) 와 g.co(구글) 가 짧은 주소로 사용
          + a.co 는 아마존
          + b.co 와 h.co 는 Bestseller
          + m.co 는 Volvo
          + o.co 는 Beyond
          + s.co 는 Snapchat
     * [a-z].net 은 ? 딱 두개만 살아있음
          + i.net 은 판매중
          + q.net 은 Desmond Llewelyn 에 대한 추모 사이트 (제임스 본드에서 Q 역할을 했던 배우)
     * 솔직히 약간 실망했음
          + x.org, x.com, q.net 같이 독특한 것들을 많이 기대했는데
          + .co 도메인의 22개중 13개가 판매용으로 나와있었고, y.co 나 i.org 같은 것들은 연결 에러가 남
     * 추신: 1.co 나 1.org 는 있지만, 1.com 이나 1.net 은 없음

   org.org이 전 제일 신기해요. 레딧 [1] 에서 찾은 사실인데, It works!만 띄우는 사이트라고 해서 좀 찾아보니, 과거부터 개인용 아파치 웹서버로만 쭉 사용되었던 거 같아요.
   지금 접속되는 하위경로는 또다른 개인용 웹사이트의 트래픽을 재는 링크 [2] 랑 해적방송국 홈페이지 [3] 하나..
   [1] https://reddit.com/r/todayilearned/…
   [2] http://mail.org.org/mrtg/
   [3] https://mail.org.org/index.html

   저번에 스팀에서 s.team 도메인을 쓰길래 궁금해서 찾아봤는데 실질적으로 쓰이는 도메인은 생각보다 그렇게 많지 않네요.

   세상엔 정말 알 수 없는... 그런데 계속 유지되는 웹 사이트가 많다는 생각이 드네요.

   재미잇네요 ㅋ

   글 올라오고 나서 q.com 에 많이 몰려갔는지 해당 도메인은 접속이 잘 안되네요.
   g.org 는 정말 뭔가 신기한 비쥬얼 입니다.

   무언가 종교 같기도하고..ㅋㅋ
"
"https://news.hada.io/topic?id=12222","메타의 새 AI 이미지 생성기, 11억 장의 인스타그램과 페이스북 사진으로 훈련","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              메타의 새 AI 이미지 생성기, 11억 장의 인스타그램과 페이스북 사진으로 훈련

     * Meta가 ""Imagine with Meta AI""라는 새로운 AI 이미지 생성기를 출시
     * 이 AI는 11억 개의 공개된 Facebook과 Instagram 사진으로 훈련
     * 사용자가 작성한 프롬프트로부터 새로운 이미지를 생성 가능

""Imagine with Meta AI""의 기능과 사용 방법

     * ""Imagine with Meta AI""는 Emu 이미지 합성 모델을 기반으로 함.
     * 이전에는 Instagram과 같은 메시징 및 소셜 네트워킹 앱에서만 이 기술을 사용할 수 있었음
     * 이제는 무료 독립형 AI 이미지 생성 웹사이트를 통해 누구나 접근 가능함

이미지 생성 예시

     * ""Imagine with Meta AI"" 웹사이트에서 생성된 다양한 AI 이미지 예시 제공
     * 예시에는 ""근육질의 바바리안"", ""차 안에서 맥주 캔을 든 고양이"", ""불타는 치즈버거"" 등이 포함됨
     * 각 이미지는 1280x1280 픽셀 크기로 JPEG 형식으로 저장 가능하며, ""Imagined with AI"" 워터마크가 포함됨

AI 이미지 생성기의 성능 비교

     * Stable Diffusion, DALL-E 3, Midjourney와 유사한 AI 이미지 생성기임
     * Meta의 AI 이미지 생성기는 복잡한 프롬프트를 잘 처리하며, 인종적 다양성을 포함한 사람 이미지 생성에 강점을 보임
     * 그러나 텍스트 렌더링이나 다른 미디어 출력(수채화, 자수, 펜과 잉크 등)에서는 혼합된 결과를 보임

   아래처럼 표시되는 걸 보니 아직 한국에서는 접근이 안 되나 보네요

   회원님의 위치에서는 사용할 수 없습니다
   회원님의 위치에서는 아직 Meta AI로 상상하기 기능을 사용할 수 없습니다. AI at Meta에 대해 자세히 알아보고 나중에 다시 시도해보세요.

        Hacker News 의견

     * 사용자가 생성한 콘텐츠로 훈련하는 것이 저작권이 있는 이미지를 합법적으로 사용하는 방법인가에 대한 의문 제기

     사용자가 자신의 소셜 미디어에 공개적으로 올린 이미지를 메타가 모델 훈련에 사용할 때, 사용자 계약에 자신이 콘텐츠 소유권을 가지고 있다는 내용이 포함되어 있어 메타가 저작권 소재를 훈련에 사용하는 것에 대한 면책 가능성을 제공하는지에 대한 의문.
     * 유럽 연합(EU)에서 메타의 서비스를 이용하려는 사용자에게 경고

     메타 계정 생성을 요구하고 페이스북/인스타그램 프로필을 통합하도록 유도한 후, 서비스가 해당 지역에서 이용 불가능하다는 사실을 알려줌.
     * 특정 유명인의 이미지 생성 요청에 대한 AI의 대응 방식

     테일러 스위프트의 이미지 생성을 요청하면 거부하지만, ""Blank Space""를 부르는 유명한 가수의 이미지를 요청하면 때때로 테일러 스위프트처럼 보이는 이미지를 생성함.
     * 메타 AI 업데이트 링크 제공

     메타의 AI 업데이트 중 하나로, 메타의 AI 도구에 대한 링크와 메타 AI 업데이트에 대한 추가 정보 링크를 제공함.
     * 메타 AI의 지역 제한에 대한 궁금증

     메타 AI가 특정 지역에서 이용 불가능한 이유에 대한 의문 제기.
     * ""진짜"" 사람들을 기반으로 훈련된 AI가 못생긴 사람들의 이미지를 더 쉽게 생성할 수 있는지에 대한 질문

     DALL-E에게 못생긴 DnD 캐릭터 초상화를 생성하도록 설득하는 것이 어려운 점을 언급하며, 메타 AI가 이를 더 잘 처리할 수 있는지에 대한 의문.
     * 메타 AI가 생성하는 이미지의 특징에 대한 관찰

     생성된 모든 이미지가 열대 섬의 해변에서 인플루언서와 할머니의 조합처럼 보인다는 이야기.
     * 메타 계정 로그인 과정에 대한 불만

     페이스북 계정으로 인증한 후에도 메타 계정이 필요하다는 메시지를 받고, 이것이 메타 계정의 이용약관을 수락하도록 유도하는 사기가 아닌지 의심함.
     * 페이스북이 공개적으로 볼 수 있는 사진 11억 장 이상을 다른 목적으로도 사용했을지에 대한 궁금증

     페이스북이 대규모의 공개 사진을 모델 훈련 외에 다른 용도로 사용했을 가능성에 대한 의문 제기.
     * 메타 AI의 복잡한 프롬프트 처리 능력에 대한 평가

     메타 AI가 Stable Diffusion XL보다는 복잡한 프롬프트를 더 잘 처리하지만, DALL-E 3만큼은 아니라는 평가. Stable Diffusion XL의 구현이 SD 1.5보다 나쁘거나 DALL-E 3과 경쟁할 수 있는 수준으로 다양하다는 점을 언급함.
"
"https://news.hada.io/topic?id=12294","Audiobox - Meta의 오디오 생성을 위한 새로운 파운데이션 모델","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Audiobox - Meta의 오디오 생성을 위한 새로운 파운데이션 모델

     * 음성 입력과 자연어 텍스트 프롬프트를 조합하여 음성과 음향 효과를 생성
          + 다양한 사용 사례에 맞는 맞춤형 오디오를 쉽게 만들 수 있음
     * 올해 초 공개한 Voicebox 를 개선하여 음성, 음향 효과(개 짖는 소리, 자동차 경적, 천둥 소리 등 짧고 불연속적인 소리), Soundscape(소리풍경)에 대한 생성 및 편집 기능을 통합하고 다양한 입력 메커니즘을 통해 각 사용 사례의 제어 가능성을 극대화함
     * 자연어 프롬프트를 사용하여 생성하고자 하는 소리나 음성 유형을 설명할 수 있음
          + ""흐르는 강물과 지저귀는 새소리""와 같은 프롬프트로 사운드스케이프 생성 가능
          + ""젊은 여성이 높은 음조와 빠른 속도로 말함""이라고 입력하여 원하는 음성 생성
     * 오디오 음성 입력과 텍스트 스타일 프롬프트를 결합하여 어떤 환경(예: ""성당에서"") 또는 어떤 감정(예: ""슬프고 천천히 말함"")에도 해당 음성의 음성을 합성할 수 있음
          + 자유형 음성 스타일 변경을 위해 이중 입력(음성 프롬프트 및 텍스트 설명 프롬프트)을 지원하는 최초의 모델
     * 다양한 음성 스타일에서 스타일 유사성 측면에서 Voicebox 보다 30% 이상 뛰어난 성능을 보임
     * 음성 연구 분야에서 실적이 있는 엄선된 연구자 및 학술 기관에 오디오박스를 공개하여 이 연구 분야의 최첨단 기술을 발전시키고 이 작업의 책임감 있는 AI 측면을 다룰 수 있는 다양한 파트너를 확보할 수 있도록 지원함

   Meta, 음성용 Generative AI 모델 Voicebox 공개
"
"https://news.hada.io/topic?id=12322","구글, 무제한 저장공간 약속 후 취소; 기자에게 평생 작업 자료 삭제 통보","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               구글, 무제한 저장공간 약속 후 취소; 기자에게 평생 작업 자료 삭제 통보

   240테라는 좀..

        Hacker News 의견

     * 기사 제목은 실제로 ""Google Promises Unlimited Cloud Storage; Then Cancels Plan; Then Tells Journalist His Life’s Work Will Be Deleted Without Enough Time To Transfer The Data""로, 내용은 다음과 같음:
          + 한 기자가 ""무제한"" 플랜이 존재할 때 237.22TB의 비디오를 구글 드라이브에 업로드함.
          + 구글이 무제한 플랜을 중단하고, 기자가 유료 플랜을 사용하지 않아 계정이 읽기 전용 상태가 됨.
          + 유효한 계정에 대한 결제가 없으므로 계정이 종료될 예정임.
          + 해당 데이터를 S3에 저장하는 데 월 $5000가 소요되며, 기자는 이 비용을 지불하고 싶어하지 않아 계정 종료 전에 비디오 파일 저장 비용을 부담할 누군가를 찾아야 함.
     * 구글에 대한 비판이 있을 수 있지만, 이 문제는 구글만의 문제가 아니며, 기술 산업 전반에 걸친 문화적 태도/접근 방식임:
          + 사용자를 확보하기 위해 서비스를 저렴하게 제공하거나 무료로 제공하고, 사용자를 묶어두었다가 가격을 올려 수익을 창출하는 전략임.
          + 이러한 전략은 많은 사람들을 부유하게 만들었으며, 쉽게 바뀌지 않을 것임.
          + 저자는 이러한 회사와 거래를 거부하고 그 이유를 설명함.
     * 기자의 다른 백업이 없는 이유는 FBI가 그의 모든 자료를 압수했기 때문임.
     * 기자는 ""무제한"" 저장 공간을 제공하는 Workspace 계정을 가지고 있었으며, 이는 다수 사용자가 있는 비즈니스나 교육 기관을 대상으로 한 것임.
          + 구글은 사람들이 한 계정에 대해 지불하고도 무제한 저장 공간을 얻을 수 있는 허점을 발견한 후 오래전에 무제한 저장을 중단함.
          + 기자가 표준 드라이브 고객으로서 사용한 저장 공간에 대해 지불했다면 이 문제는 발생하지 않았을 것임.
     * 약 250TB의 데이터를 7일 안에 이동하는 것은 비현실적임.
          + 7일 동안 평균 3.6Gbit/s의 전송 속도가 필요하며, 이는 구글과 같은 대기업에게는 문제가 되지 않지만 대부분의 사람들에게는 불가능함.
     * 구글은 고객을 무감각하게 대하는 태도로 오랫동안 비판을 받아왔으며, 기술적 지식이 적은 사람들도 구글에 대한 의존을 줄이려는 움직임을 보임.
     * 구글은 언제든지 기존의 호환성을 깨뜨리고, 프로젝트와 제품을 취소하며, 비효율적인 언어와 프레임워크를 사용하여 유지 관리 비용을 높이는 경향이 있음.
          + 이러한 문제로 인해 구글을 생산 환경에서 의존하는 것에 대한 경고가 반복됨.
     * 200TB의 데이터를 구글 드라이브에서 관리하는 것은 불가능에 가까움.
          + 구글 드라이브는 몇 GB 정도의 ""일반적인"" 소비자를 위해 설계되었으며, 대량의 데이터를 관리하기에는 적합하지 않음.
     * Workspace 계정이 읽기 전용 상태에 있으며, 아직 삭제되지 않았지만, 구글 드라이브에서 수TB의 중복 백업을 삭제함.
          + 휴지통을 비우는 사용자 경험이 좋지 않으며, API를 사용하여 휴지통을 비우는 것이 가장 쉬운 방법임.
     * 클라우드를 싫어하는 이유 중 하나는 계정이나 데이터가 모호한 이용 약관이나 정책으로 인해 임의로 삭제될 수 있기 때문임.
          + 중요한 데이터는 암호화된 백업이나 일시적인 공유를 위해 클라우드를 사용하지만, 중요한 것들은 클라우드에만 저장하지 않음.
"
"https://news.hada.io/topic?id=12335","LLM을 위한 Bash 원라이너 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          LLM을 위한 Bash 원라이너 기술

LLaMA 파일 프로젝트 소개

     * Mozilla와 협력하여 'llamafile'이라는 오픈 소스 프로젝트를 시작함.
     * 이 프로젝트는 사용자의 컴퓨터에서 LLM을 실행하는 새롭고 최고의 방법임.
     * GitHub에서 5.6k 스타, Hacker News에서 1073개의 업보트를 받았으며, Hackaday에서 언론 보도를 받음.

시작하기

     * 시작하는 가장 쉬운 방법은 Hugging Face에서 사전 빌드된 .llamafile 파일을 다운로드하는 것임.
     * 이 튜토리얼에서 사용할 파일은 LLaVA라는 멀티모달 비전 모델에 대한 커맨드 라인 인터페이스임.
     * LLaVA는 OpenAI API로는 불가능한 이미지 설명과 같은 작업을 수행할 수 있음.

이미지 요약

     * UNIX 해커로서 llama.cpp 코드베이스를 더 쉘 스크립트화하고 맨 페이지를 작성하여 개선함.
     * LLM을 한 줄로 프로그래밍하는 것보다 더 나은 것은 없음.
     * 이미지에 대한 질문을 하고, 표준 출력으로 답을 출력하는 방법을 설명함.

파일명 생성

     * 웹에서 다운로드한 많은 이미지를 자동으로 이름을 바꾸는 방법을 제시함.
     * 언어 제약을 사용하여 텍스트 생성을 제어하고, 안전한 파일명을 생성할 수 있음.

URL 요약

     * Mistral 7b instruct llamafile은 HTML URL을 요약하는 데 사용할 수 있음.
     * links 명령어의 출력을 파이프하여 사용하면 됨.

도서관 챗봇

     * llamafile을 표준 UNIX 커맨드 라인 도구로 사용할 수 있음.
     * LLaMA 모델을 대화형 모드에서 실행하는 방법을 설명함.

코드 완성

     * Wizard Coder llamafile을 다운로드하면 Emacs나 Vim 편집기에서 현재 줄을 자동 완성할 수 있음.

이메일 작성

     * Rocket 3b 모델을 사용하여 제품을 판매하는 데 도움이 되는 이메일을 작성하는 방법을 제시함.

결론

     * llamafile이 커맨드 라인에서 생산성을 높이는 데 어떻게 도움이 될 수 있는지에 대한 다섯 가지 예시를 제공함.

GN⁺의 의견

     * 이 글에서 가장 중요한 것은 사용자가 자신의 컴퓨터에서 LLM을 실행할 수 있는 새로운 방법인 'llamafile' 프로젝트의 출시임.
     * 'llamafile'은 다양한 작업을 자동화하고, 특히 이미지와 텍스트를 처리하는 데 있어서 효율적인 도구임.
     * 이 프로젝트는 오픈 소스이며, 개발자들이 기여하고 활용할 수 있는 기회를 제공함으로써, 커뮤니티 내 협력과 혁신을 촉진할 잠재력을 가지고 있음.
"
"https://news.hada.io/topic?id=12329","구글, Imagen 2 이미지 생성 AI 정식 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글, Imagen 2 이미지 생성 AI 정식 출시

     * Google Cloud가 이제 Imagen 2를 Vertex AI 고객들에게 제공 시작
     * Google DeepMind 기술을 사용하여 개발
     * 매우 사실적인 고품질, 고해상도 이미지 생성
     * 정확한 텍스트 오버레이가 포함된 이미지를 만들기 위한 다국어 텍스트 렌더링 지원
     * 비즈니스, 브랜드, 제품용 다양한 로고를 생성하고, 이를 다양한 표면에 오버레이 할 수 있는 기능을 제공
     * 이미지에서 캡션을 생성하고 이미지 세부 정보에 대한 질문에 대한 유익한 텍스트 응답을 얻기 위한 시각적 질문과 답변 가능
     * 기업용 텍스트-이미지 기능 : 브랜드 요구사항에 맞는 이미지 생성 기능을 제공
     * Google의 책임 있는 AI 원칙에 부합하는 이미지 생성을 보장하기 위한 안전 조치를 포함
"
"https://news.hada.io/topic?id=12257","애플, 안드로이드용 iMessage 클라이언트 "Beeper Mini" 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               애플, 안드로이드용 iMessage 클라이언트 ""Beeper Mini"" 차단

     * Beeper는 iMessage를 역공학하여 안드로이드 사용자에게 파란색 말풍선 텍스트를 제공하는 서비스
     * Beeper Mini는 최근 출시된 후 Apple에 의해 접근이 차단되어 오류 메시지가 발생하고 메시지 전송이 중단됨
     * 오류 메시지는 ""서버 조회 실패: 조회 요청 시간 초과""라고 빨간 글씨로 표시됨

Apple의 iMessage 전략

     * Apple은 iMessage를 자사 생태계에 사용자를 묶어두는 주요 도구로 보고 있어 안드로이드용 iMessage 앱 출시를 하지 않음
     * EU 규제가 iMessage의 상호운용성을 강제할 것으로 기대되었으나, 비즈니스 사용자 사이에서 충분히 인기가 없다는 이유로 규제에서 제외될 가능성이 높음
     * 이로 인해 Apple은 Beeper Mini의 기능을 차단하지 않을 이유가 없어 보임

Beeper Mini의 미래와 보안 문제

     * Beeper Mini는 안드로이드 사용자가 아이폰 사용자와 마치 아이폰에서 문자를 보내는 것처럼 iMessage를 사용할 수 있게 해주는 기술을 사용함
     * Beeper Mini는 중개자 없이 직접 메시지를 전송하므로 Apple 서버에는 iMessage를 원래 지원하는 기기에서 온 것처럼 보임
     * Beeper Mini의 창립자는 이 서비스가 아이폰 사용자의 보안을 향상시키고, 암호화된 채팅을 안드로이드 사용자와 할 수 있게 한다고 주장함

GN⁺의 의견

     * 가장 중요한 것은 Beeper Mini가 iMessage를 안드로이드 사용자에게 제공하려 했던 혁신적인 시도가 Apple에 의해 차단되었다는 점임.
     * 이 기사는 기술의 상호운용성과 사용자의 보안에 대한 중요한 논의를 제기하며, 기술 생태계 내에서 대기업의 영향력과 독점적 행태에 대한 흥미로운 사례를 보여줌.

   역시 막았군요.... 좀 아쉽네요.

   Beeper Mini - 안드로이드에서 iMessage를 사용하게 해주는 써드파티 앱

   역시나.. 이런 방식의 소프트웨어는 살아남기 힘들다는 현실

        Hacker News 의견

     * 최근 및 관련 기사:
          + Beeper Mini – Android용 iMessage 클라이언트: 2023년 12월에 공개되어 863개의 댓글이 달린 프로젝트.
          + iMessage 설명: iMessage에 대한 설명이 담긴 글로, 2023년 12월에 143개의 댓글이 달림.
     * 해커 정신에 대한 의문:
          + Apple을 옹호하는 사람들의 반응에 실망함.
          + Beeper Mini는 클라이언트 측에서 작동하므로 무료 버전의 가능성이 있음.
          + Apple이 iMessage를 E2EE(End-to-End Encryption)로 주장하지만, 메시지가 클라이언트에서 복호화된 후에도 Apple에 의해 수집되지 않는다는 증거는 없음.
          + iMessage를 사용하기 위해 Apple에 대한 신뢰가 필요함.
          + Apple 제품을 소유한 경우에도 iMessage 사용에 대한 비용 지불이 문제가 될 수 있음.
     * 예상된 결과에 대한 논의:
          + Beeper Mini의 작동 방식에 대한 의도적인 무시가 있었음.
          + Apple 장치 식별자를 사용하여 장치 인증을 수행하는 방식이 문제가 될 수 있음.
          + Apple이 서비스를 차단할 이유는 서비스를 악용하거나 스팸을 보내는 행위를 막기 위함임.
          + Beeper Mini와 그 기술은 필요한 보안 조치를 제공하지 않아 문제가 될 수 있음.
     * Apple의 iPhone 사용자 보호에 대한 질문:
          + Apple이 안전하지 않은 서비스를 허용하는 대신 자체적으로 문제를 해결할 것임.
          + Beeper Mini 클라이언트에 대한 Apple의 통제 부재로 인해 사용자의 개인 정보가 위험에 노출될 수 있음.
     * Gruber의 예측에 대한 언급:
          + Beeper Mini가 잘 작동하지만, Apple이 Android용 iMessage 클라이언트를 원한다면 직접 출시할 것임.
          + Beeper가 공식 지원되지 않는 서비스에 대해 구독료를 받는 것은 무책임함.
     * Beeper의 계산에 대한 추측:
          + Beeper가 서비스 중단 발표로 얻을 수 있는 언론의 관심이 기술적 투자 가치가 있다고 판단했을 것임.
          + Beeper는 다른 서비스를 제공하고 있으며, 일부 사람들이 그 서비스에 관심을 가질 것임.
     * Beeper CEO의 반응:
          + Apple이 iPhone 사용자의 개인 정보 보호와 보안을 중요시한다면, 왜 Android 사용자와 암호화된 메시지를 주고받을 수 있는 서비스를 중단시키는지에 대한 의문 제기.
          + Apple이 RCS 지원을 발표함으로써, 그들이 안전하지 않은 SMS로 돌아가야 하는 문제를 인식하고 있음을 보여줌.
     * 누수하는 추상화 법칙에 대한 언급:
          + Apple이 API를 변경할 경우, 하위 추상화가 영향을 받을 수 있음.
          + Apple의 API는 폐쇄적이며, 이는 Apple의 철학의 핵심임.
     * iMessage for Windows 공유를 하지 않은 이유:
          + Apple이 계정을 차단할 수 있는 가능성 때문에 공유하지 않음.
     * Beeper Mini 등록 정보 생성에 사용되는 바이너리에 대한 추측:
          + Apple이 최근 등록된 장치를 블랙리스트에 올릴 수 있음.
     * 다른 사람의 플랫폼에서 애플리케이션을 구축하는 것의 위험성:
          + 폐쇄적인 플랫폼에서만 애플리케이션을 구축하고 사용하는 한, 이러한 문제가 계속 발생할 것임.
"
"https://news.hada.io/topic?id=12285","더그 엥겔바트의 1968년 데모","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           더그 엥겔바트의 1968년 데모

더그의 위대한 데모: 1968

     * 1968년 12월 9일, 더그 엥겔바트는 샌프란시스코의 시빅 오디토리움에서 열린 컴퓨터 컨퍼런스에서 ""인간 지능 증진을 위한 연구 센터""라는 제목의 발표를 함.
     * 더그는 연단에 서기보다는 맞춤형 콘솔에 앉아 30마일 떨어진 연구실에 있는 NLS 컴퓨터를 통해 발표를 진행하며, 연구실 팀원들이 화상 회의로 참여하여 시스템의 기능을 라이브로 시연함.
     * 이 데모는 ""모든 데모의 어머니""로 알려지며 컴퓨팅 역사의 중요한 사건으로 기록됨.

데모 체험하기

     * 데모의 하이라이트 버전과 인터랙티브 버전, 주석이 달린 버전 등 다양한 형태로 데모를 체험할 수 있는 자료 제공.
     * 데모 프로젝트의 사진 갤러리, 1969년에 이어진 데모의 후속 작업, 더그의 연구 논문 등을 볼 수 있음.
     * 데모의 배경 이야기, 데모를 진행한 이유, 데모 당시의 상황 등에 대한 정보 제공.

더 큰 비전의 일부

     * 더그와 그의 팀은 약 2년 동안 NLS 시스템을 ""제로부터"" 개발하여 일상적인 작업에 사용함.
     * 이 시스템은 지능 증진과 집단 지능을 향상시키는 새로운 방법론과 기술을 함께 발전시키며 미래의 조직과 작업 방식을 선도함.
     * 데모는 지속적인 혁신의 일부로, 미래의 조직을 위한 기술과 방법론의 공동 발전을 목표로 함.

데모에 대한 성찰

     * 데모의 제작 과정, 시연된 시스템, 그것을 가능하게 한 팀, 데모의 개념과 진화, 중요성 등에 대한 정보 제공.
     * 더그와 그의 팀은 데모와 관련된 이야기를 공유하며, 데모가 열린 당시의 혁신적인 연구실 환경을 설명함.
     * 데모의 여러 주년 행사에서는 패널 토론을 통해 데모의 준비 과정, 무대 뒤의 상황, 그 당시와 현재의 작업의 중요성에 대해 논의함.

동료, 언론, 대통령

     * 오바마 대통령을 포함한 여러 인물들이 데모와 더그 엥겔바트를 언급하며 그의 업적을 인정함.
     * 데모에 대해 반영하는 다양한 연사와 패널리스트들의 의견을 볼 수 있으며, 데모에 대한 언론의 관심도 확인 가능함.
     * 더그 엥겔바트는 데모로 인해 여러 상을 수상하며 그의 기여를 인정받음.

예술적 창작물에서 영감을 받다

     * 데모는 학생들의 프로젝트, 오페라 등 다양한 예술 작품에서 영감을 주며 재해석됨.
     * 데모의 목표와 비전을 담은 애니메이션과 음악, 비디오, 라이트쇼 등이 제작되어 데모의 영향력을 보여줌.

웹에서 보기

     * 더그 엥겔바트의 여러 혁신적인 첫 시도들과 관련된 자료를 웹에서 확인할 수 있음.
     * 스탠퍼드 대학의 MouseSite에서 1968년 데모에 대한 자세한 정보와 아카이브 비디오, 사진, 기술 논문 등을 볼 수 있음.
     * 더그의 연구실에서 발표한 논문과 프레임워크, 워크스테이션의 역사 등을 포함한 다양한 자료를 제공함.

GN⁺의 의견

   이 기사에서 가장 중요한 것은 더그 엥겔바트와 그의 팀이 1968년에 선보인 데모가 현대 컴퓨팅 기술의 발전에 얼마나 큰 영향을 끼쳤는지를 보여주는 것임. 이 데모는 인터랙티브 컴퓨팅, 마우스, 화상 회의 등 혁신적인 기술을 대중에게 처음으로 선보인 역사적인 사건으로, 오늘날 우리가 사용하는 많은 기술의 기원을 찾아볼 수 있음. 이러한 역사적인 순간을 기념하고, 그 당시의 혁신적인 사고와 미래에 대한 비전을 되돌아보는 것은 기술의 발전뿐만 아니라 우리가 어떻게 더 나은 미래를 만들어 갈 수 있는지에 대한 영감을 줌.
"
"https://news.hada.io/topic?id=12308","23andMe, 해킹 피해 고객의 소송 제기 방지를 위한 이용 약관 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                23andMe, 해킹 피해 고객의 소송 제기 방지를 위한 이용 약관 변경

변경된 서비스 약관

     * 유전자 검사 회사 23andMe가 해킹 사건 이후 서비스 약관 변경.
     * 새 약관은 고객이 집단 소송이나 배심원 재판에 참여하는 것을 방지.
     * 고객이 서면으로 동의하지 않을 경우 자동으로 새 약관에 동의한 것으로 간주.

해킹 사건의 영향

     * 23andMe는 해커가 700만 명의 개인 정보에 접근한 것을 발표.
     * 해킹으로 인해 사진, 이름, 지리적 위치, 가계 정보 등이 노출됨.
     * 해커들은 유대인과 중국인 사용자의 프로필을 인터넷에 판매.

법적 대응

     * 23andMe는 이미 여러 집단 소송을 당함.
     * 새 약관은 집단 소송을 금지하여 공개 재판 정보를 숨김.
     * 전문가들은 약관 변경이 법적 보호를 충분히 제공하지 않을 것이라고 지적.

온라인 반응

     * 새 약관에 대한 온라인에서의 분노와 비판.
     * 사용자들은 회사가 자신들을 보호하기 위해 노력하는 것으로 해석.

GN⁺의 의견

     * 이 기사는 개인 정보 보호와 기업의 책임에 대한 중요한 논의를 제기함.
     * 23andMe의 약관 변경은 사용자 권리와 법적 분쟁 해결 방식에 영향을 미침.
     * 해킹 사건과 그에 따른 기업의 대응은 사이버 보안의 중요성을 강조하는 사례임.

        Hacker News 의견

     * 자동으로 고객을 더 제한적인 이용약관(TOS)에 동의하게 만드는 것은 의심스러운 행위임. 법적 전문가는 아니지만, 법원이 데이터 유출 사건 이후 변경된 TOS를 허용하지 않을 것으로 보임. 회사가 사후 법적 문제를 피하려는 것이 명백하기 때문에, 유출 당시의 TOS에 따라 사건을 평가할 것으로 예상됨.
     * 23andMe 계정을 삭제하고 샘플을 파괴할 것을 상기시킴. 이 끔찍한 회사가 다음에 어떤 정보를 팔지 모르기 때문임.
     * 새로운 TOS를 거부하려면 legal@23andme.com으로 이메일을 작성하여 보내면 됨.
     * 보안에 신경 쓰는 사람들, 특히 기술 분야 종사자들이 자신의 유전체 정보를 쉽게 넘기지 않을 것이라고 생각했으나, 23andMe 고객 대부분이 일반 대중임을 알게 됨. WorldCoin이나 스타트업 파티에서 망막 스캔을 기꺼이 제공하는 사람들에 대해 읽고 의아해함.
     * 거래 후 한쪽 당사자에게 유리하게 약관을 변경하는 것을 '사기'라고 함.
     * 중재에 관한 사실 정보를 모으고 있으며, 아직 완성되지는 않았지만 유용하고 출처가 잘 정리된 자료임.
     * 23andMe의 해킹 사건에 대해 알지 못하는 사람들을 위해, 이 회사는 Anne Wojcicki가 이끌고 있으며, 해커들이 사진, 전체 이름, 지리적 위치, 가계도 관련 정보, 관련 가족 구성원의 이름 등 민감한 사용자 정보에 접근했다고 발표함. Wojcicki의 자매는 1999년부터 구글 마케팅 분야에서 일해온 인물로, AdWords, AdSense, DoubleClick, GoogleAnalytics, 그리고 손실을 보는 데이터 수집 및 광고 자회사인 YouTube에서 일함. 가족 내에서 개인 데이터 수집을 이윤 창출 수단으로 사용하는 것으로 보임.
     * 정보 공유에 감사함. 새로운 TOS에서 탈퇴하고 이미 제기된 집단 소송에 참여할 것임. 특히 매우 민감한 데이터를 다룰 때는 보안을 진지하게 생각해야 함.
     * 이전 TOS와 새로운 TOS를 빠르게 비교해보려 했지만, 큰 변화를 식별하지 못함. 실제 변경 사항이 무엇인지 알고 싶음. 많은 기사들이 새로운 TOS를 비판하지만, 실제 단어의 차이를 보여주는 곳은 없음.
     * 해커가 700만 명의 개인 정보에 접근한 것에 대해, 시스템에 침입해도 그렇게 많은 사람들의 정보에 접근할 수 없어야 함. 데이터베이스는 각각 별도의 접근 제한이 있는 여러 '셀'로 나눠져야 함. 이는 스파이 네트워크가 한 스파이의 타락이 전체 시스템을 무너뜨리는 것을 방지하기 위해 사용하는 같은 원리임. 또는 전함의 방수 구획과 같다고 생각할 수 있음.
"
"https://news.hada.io/topic?id=12349","미첼, HashiCorp를 떠나며 회고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         미첼, HashiCorp를 떠나며 회고

Mitchell Hashimoto의 작별 인사

     * HashiCorp 공동 창업자 Mitchell Hashimoto가 회사를 떠나며 진심 어린 작별 인사를 전함.
     * 11년 이상의 시간을 회사와 함께한 후, 새로운 도전을 위해 회사를 떠날 예정임.
     * 회사가 일상적인 운영에 그를 필요로 하지 않도록, 다른 리더들이 이끌 수 있게 만드는 것이 중요하다고 느낌.

회사와의 소중한 추억

     * HashiCorp의 초기 단계부터 현재에 이르기까지, 많은 중요한 순간들을 회상함.
     * 첫 번째 HashiConf 2015와 전체 회사 오프사이트 모임은 특히 기억에 남는 경험임.
     * 기술에 대한 열정뿐만 아니라 회사를 이루는 사람들과의 관계가 중요하다는 것을 깨달음.

HashiCorp의 미래와 영향력

     * HashiCorp가 창립될 당시 논란이 되었던 다중 클라우드와 같은 세계관이 이제는 널리 받아들여짐.
     * HashiCorp Configuration Language (HCL)가 GitHub Octoverse 보고서에서 오픈 소스 프로젝트에서 가장 많이 사용되는 언어 중 하나로 선정됨.
     * 회사의 지속적인 영향력과 성장 가능성에 대해 자부심을 느끼며, 회사의 미래를 응원함.

GN⁺의 의견

     * Mitchell Hashimoto의 작별 인사는 기술 산업에서 한 시대의 마감을 의미하며, 그의 리더십과 기술에 대한 열정이 HashiCorp를 클라우드 인프라스트럭처 및 자동화 도구 분야의 선두 주자로 만든 주요 요소임.
     * 그의 이야기는 창업자가 자신의 회사를 넘어서도 성장할 수 있도록 준비하는 중요성을 강조하며, 이는 모든 창업자와 리더에게 교훈이 됨.
     * HashiCorp의 미래와 Hashimoto가 새롭게 맞이할 도전은 클라우드 및 오픈 소스 커뮤니티에게 흥미로운 발전을 예고함.

        Hacker News 의견

     * Mitchell Hashimoto가 2010년에 Vagrant를 해커뉴스에 처음 소개했을 때와 마찬가지로, 14년 후 자신의 이임 소식이 같은 위치에 올랐다며 이상한 경험이라고 말함. 초기 커뮤니티 지원에 감사함을 표시.
     * Mitchell을 롤모델로 삼는 한 사용자는 그가 뛰어난 엔지니어이자 겸손한 인간이라며 그가 앞으로 만들어낼 놀라운 것들을 기대함.
     * Mitchell이 단순히 훌륭한 제품을 만들고 싶어하는 뛰어난 엔지니어라는 인상을 받았다고 한 사용자. 그의 열정에 대해 솔직하며, 회사 운영에서 한발 물러나 개발자로 돌아간 것에 대해 존경함을 표함.
     * Mitchell은 창작자에서 창업자, 최고경영자를 거쳐 다시 개발자로 돌아간 유일한 사람이라며, Zig에 대한 그의 글이 매우 도움이 되었다고 한 사용자.
     * Mitchell이 실제로 코딩을 자주 했다는 점을 존경한다고 한 사용자. 많은 리더들이 말만 하고 행동이 없는 반면, Mitchell은 항상 코딩을 해왔음.
     * HashiCorp가 Vagrant로 시작한 작은 회사에서 Terraform, Nomad, Consul, Vault로 존경받는 회사가 되었지만, 이제는 조직과 커뮤니티가 꺼리는 존재가 되었다고 한 사용자. 여전히 업계 표준을 설정했지만 부정적인 길을 걷고 있다고 평가함.
     * 한 영웅이 악당이 되는 것을 피하기 위해 리더십에서 물러난 Mitchell을 칭찬하는 사용자. HashiCorp의 논란이 생기기 전에 물러나 그의 유산이 훼손되지 않았다고 함.
     * HashiCorp가 BSL로 전환한 것에 대해 누가 책임이 있는지 묻는 사용자. Mitchell이 회사 운영에서 손을 뗀 후 HashiCorp가 멋지지 않게 되자 떠나는 것이라고 추측함.
     * 한 사용자는 Vagrant를 멋진 도구라고 칭찬하며, 첫 인턴십에서 VM을 쉽게 구동할 수 있었던 경험을 회상함. Mitchell에게 행운을 빔.
"
"https://news.hada.io/topic?id=12278","나쁜 소식, Emacs","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              나쁜 소식, Emacs

Emacs 30 버전의 문제점과 포크 버전의 생성

     * Emacs의 마스터 브랜치가 중대한 변경으로 인해 사용자와 개발자들의 우려에도 불구하고 손상됨.
     * 해당 변경으로 인해 Emacs 레지스터와의 상호작용이 불편해지고, 간단한 작업에도 추가적인 키 입력이 요구됨.
     * 개선된 포크 버전을 만들어 사용 및 개발 중이며, 관심 있는 사람들의 참여를 환영함.

Emacs 마스터 브랜치의 안정성과 최근의 변화

     * Emacs 마스터 브랜치는 개발 버전으로, 최신 개발 사항을 경험하고자 하는 사용자들이 추적함.
     * 최근 몇 년간 Emacs 유지보수자들의 노력으로 마스터 브랜치는 매우 안정적이었음.
     * 그러나 최근 변경으로 인해 사용자들이 불쾌한 놀라움을 경험함.

사용자 경험의 저하와 커뮤니티의 반응

     * 새로운 변경으로 인해 사용자 경험이 저하되었으며, 이전의 효율적인 동작을 선택적으로 복원할 것을 요청하는 목소리가 커짐.
     * 커뮤니티 구성원들의 명확한 의견에도 불구하고, 변경을 옹호하는 개발자의 태도로 인해 문제가 해결되지 않음.
     * 유지보수자들은 사용자 경험을 희생하면서도 변경을 고수하는 태도를 보임.

새로운 포크 버전의 개발과 사용자의 자유

     * 사용자의 자유를 중요시하는 저자는 기존 Emacs의 이상한 변경을 강요받는 것을 거부하고 새로운 포크 버전을 생성함.
     * 이 포크 버전은 마스터 브랜치에서 좋은 변경 사항만을 선택적으로 가져오며, 저자의 개발로도 개선됨.
     * 포크 버전에 관심이 있는 사람들은 저자의 저장소에서 클론할 수 있으며, 협업과 제안을 환영함.

GN⁺의 의견

   이 글에서 가장 중요한 것은 Emacs 30 버전에서 발생한 사용자 경험의 저하와 이에 대한 커뮤니티의 반응입니다. Emacs는 오랫동안 개발자들 사이에서 맞춤화와 확장성으로 사랑받아왔기 때문에, 이러한 변화가 사용자들에게 어떤 영향을 미칠지에 대한 관심이 높습니다. 또한, 한 개발자가 커뮤니티의 의견을 무시하고 자신의 변경을 강행하는 과정은 오픈 소스 프로젝트에서의 의사결정과 협업 문화에 대한 흥미로운 사례를 제공합니다. 이 글은 사용자들이 소프트웨어의 변화에 어떻게 반응하고, 필요에 따라 자신만의 해결책을 찾아가는 과정을 잘 보여주고 있습니다.

        Hacker News 의견

     * Emacs 개발 브랜치에서 중대한 변경이 발생하고 일부 사용자들이 우려를 표현할 때, 그 변경은 즉시 되돌려지지 않음. 장단점이 토론되고, 다양한 해결책이 구현 및 개선되며, 마침내 타협점을 찾음.
          + 사용자들의 우려 제기는 3일 전부터 시작됐으며, 이 과정이 이미 결론지어진 것은 아님.
          + Eli의 최근 메시지에서는 새로운 행동이 기존 것보다 훨씬 합리적이라는 두 사람 간의 초기 토론을 언급하며, 이제 다른 의견이 제시된 후에야 행동 기준에 대해 논의 중임을 밝힘.
     * Emacs에서 복사(또는 ""레지스터""라고 더 일반적으로 불리는 기능)의 작동 방식을 변경하는 커밋이 최근 수락됨. 이제 Emacs는 발생하는 일을 보여주는 미니버퍼를 열고, 사용자가 Enter 키를 눌러 변경을 수락하도록 요구함.
          + 이는 기본 동작을 변경하고, 쉽게 구성할 수 없을 가능성이 있으며, 충분한 논의 없이 이루어진 것으로 보임.
          + Vim 사용자에 대한 비유를 통해 이 변경이 얼마나 불편한지 설명하고, 이 문제를 제기하려 했던 OP의 노력과 개발자 Thierry의 반응을 서술함.
     * 메일링 리스트를 검토한 결과, 이 행동을 되돌릴 수 있는 옵션이 있을 것으로 보임.
          + 이 옵션은 원래 글이 게시되기 전에 언급되었지만, 글쓴이가 이를 보지 못했을 수도 있음.
          + 이 옵션이 문제를 해결할 것으로 예상되지만, ginko의 답글에 따르면 여전히 Enter 키 입력이 필요할 수 있음.
     * Emacs에서는 근육 기억을 중요한 고려사항으로 여겨야 함.
     * 개발자의 입장에서는 안정성을 원하는 사용자들은 릴리스 브랜치를 사용하거나 마스터에서 커밋을 고정해야 함. 개발 브랜치는 진행 중인 기능을 개발하기 위해 사용되며, 때때로 이러한 변경이 자주 발생할 수 있음.
     * 글쓴이의 태도는 다소 고집스럽고, 이 기능을 사용하는 사람이 매우 적음을 지적함. 무급 유지보수자가 먼저 상의하지 않고 약간 변경한 것이 마스터 브랜치를 ""파괴""하는 것으로 간주되어서는 안 됨.
     * Emacs를 떠난 지 20년이 지났지만, 이 변경이 상당히 혼란스러운 것으로 이해됨. ""주방 싱크대""로 자부하는 Emacs가 기존 행동으로 되돌릴 수 있는 옵션을 추가하지 않은 이유를 이해하지 못함.
     * Emacs의 핵심은 매우 사용자 정의가 가능한 플랫폼이라는 점이며, 어떤 기능의 동작이 마음에 들지 않으면 몇 줄의 Lisp 코드로 직접 수정할 수 있음. 한 가지 기능의 변경으로 인해 전체 프로젝트를 포크하는 것은 말이 되지 않음.
     * Emacs의 또 다른 포크/재구현을 시도하는 것이 유일한 해결책으로 보임. 이번에는 분명 성공할 것이며, 다른 모든 것들처럼 전혀 관련이 없지 않을 것임.
     * 이 변경에 대한 ""다른 쪽""의 주장은 무엇인가? 이러한 의견이 있는 변경은 보통 변경 뒤에 합리적인 이유가 있음. 혹은 그렇지 않을 수도 있음.
"
"https://news.hada.io/topic?id=12259","고품질 소프트웨어 개발 방법을 배우지 못하는 현실","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      고품질 소프트웨어 개발 방법을 배우지 못하는 현실

소프트웨어 품질 구축 방법에 대한 교육 부재

     * 대학에서 컴퓨터 과학을 공부할 때 소프트웨어 품질 보증(QA)에 대한 교육이 누락됨.
     * 대부분의 시간이 알고리즘, 컴퓨터 작동 방식, 언어 및 개념의 역사 등에 할애됨.
     * 프로젝트 관리 접근법과 스크럼에 대한 학기가 있지만 QA는 전혀 다루지 않음.

기업들의 시간 내 제품 출시 방식

     * 기업들은 예산 문제로 QA 표준과 조치를 가장 먼저 프로젝트에서 제외함.
     * 개발이 지연되거나 범위가 확대되면 QA에 충분한 시간이 남지 않음.
     * 최소한의 비구조화된 테스팅을 거쳐 불안정한 소프트웨어를 출시함.

햄스터 휠에서 벗어나는 방법

     * 프로젝트에서 누락된 QA 조치에 대해 말하기 위해 경험과 자신감을 쌓는 데 몇 년이 걸림.
     * 누락된 모니터링을 찾고, 생산 시스템이 실패하는 등의 문제를 겪음.
     * QA 조치를 구현하지 않으면 제대로 배우지 못하는 문제가 발생함.

    돈에 대해 이야기하기

     * 소프트웨어가 '더 안정적'이거나 '유지 관리가 훨씬 쉬워질 것'이라고 설명하는 것은 비개발자에게 구체적이지 않음.
     * QA를 하지 않는 비용에 대해 이야기해야 함.
     * QA 조치를 예시와 함께 비용 측면에서 설명하는 것이 효과적임.

    최소 효과량

     * QA 조치를 과도하게 설계하지 않고 프로젝트의 진행을 막지 않아야 함.
     * 애플리케이션의 핵심 기능을 테스트하고 항상 예상대로 작동하는지 확인하는 것이 중요함.
     * '최소 효과량'(MED) 개념을 사용하여 가장 중요한 부분부터 시작함.

    주의 깊게 살펴보는 것들

     * 새 프로젝트를 시작하거나 참여할 때 QA 개념을 찾음.
     * 팀이 QA에 대해 생각했는지를 보여주는 문서나 테스팅 계획이 중요함.
     * 새로운 코드를 작성할 때 테스트를 함께 작성하는 것이 코드가 실제로 테스트 가능하도록 구조화되도록 함.

프로젝트 이점

     * 품질에 대해 이야기하고 가능한 해결책을 제안함으로써 개발자로서의 영향력을 확장함.
     * QA 조치를 통해 프로젝트가 건강한 속도로 성장할 수 있음.

프로젝트를 개선하는 방법

     * QA 조치를 사용하여 프로젝트에서 품질 소프트웨어를 작성하는 사람으로 알려질 수 있음.
     * 프로젝트에서 MED를 고려하고 팀 내에서 변화를 위한 목소리가 되어야 함.

GN⁺의 의견

   이 글에서 가장 중요한 것은 소프트웨어 개발 과정에서 품질 보증(QA)의 중요성과 이를 구현하는 방법에 대한 인식 부족이다. QA는 종종 간과되지만, 장기적으로 프로젝트의 성공과 안정성을 위해 필수적이다. 이 글은 초급 소프트웨어 엔지니어들에게 QA의 중요성을 인식시키고, 실제 프로젝트에서 QA를 통합하는 구체적인 방법을 제시함으로써 흥미롭고 유익하다.

        Hacker News 의견

     * 소프트웨어 엔지니어링은 컴퓨터 과학(CS)의 핵심 주제가 아니라 다른 영역에서 가르치는 경우가 많으며, 선택 과목이나 소프트웨어 엔지니어링 과정에서 다루어짐.

     CMU에서는 소프트웨어 엔지니어링 석사 및 박사 프로그램을 운영하며, 블로그 포스트에서 언급된 내용을 포함하여 다양한 주제를 가르침.
     * 컴퓨터 과학 학위를 가진 사람들과 협업하는 것이 더 쉬움을 경험함. 이들은 좋은 알고리즘의 중요성을 이해하고 있으며, 파서나 암호화를 직접 구현하려 하지 않음.

     소프트웨어 엔지니어링 분야에서는 팀워크와 품질에 대한 순진한 생각을 교정하는 과정이 부족함을 지적함.
     * 고품질의 소프트웨어 개발은 경험 많은 회사에서 배울 수 있음.

     과거에는 FAANG 회사들이었지만, 현재는 TailScale과 같은 회사들에서 배울 수 있음. 무의미한 마이크로서비스, 도커, JSON 처리 등을 남발하지 않고, 퀵체크, 가설 검증, 퍼징 등을 활용하여 품질을 높일 수 있음.
     * 버그 없는 소프트웨어를 시간 내에 배포해야 한다는 주장은 품질 소프트웨어에 대한 기사를 시작하기에 부적절한 전제임.

     버그 없는 코드를 배포할 수 있다고 믿는 것은 현실과 동떨어진 생각임.
     * 컴퓨터 엔지니어링 프로그램과 인턴십 및 실습을 강조하는 대학들이 있음.

     많은 대학의 CS 학과는 수학 학과에서 분화되어 이론에 중점을 둠. 대학은 단순한 직업 학교가 아니라 복잡한 자료를 마스터하는 능력을 훈련하는 곳임.
     * 대학에서 산업용 소프트웨어 빌딩을 가르친다는 주장은 과장된 것임.

     지속적인 배포 파이프라인이 일반화된 현재, 품질 보증 부서가 수동으로 버그를 확인하는 것은 구식 방법으로 여겨짐.
     * 소프트웨어가 '더 안정적'이거나 '유지 보수가 쉬워질 것'이라는 논리는 코드베이스에 직접 작업하지 않는 사람들에게 설득력이 없음.

     개발자는 품질 보증(QA)을 하지 않는 비용에 대해 말하며, 이것이 비즈니스와 관리자에게 이해되는 언어임.
     * 품질, 시간, 의사소통 복잡성, 비용 중 세 가지를 선택할 수 있음.

     소프트웨어 엔지니어링은 공장 프로세스를 적용하기 어려운 팀 스포츠이며, 팀워크와 개인의 성장을 중시해야 함.
     * 소프트웨어 개발자는 품질 높은 소프트웨어를 만드는 방법을 배웠지만, 회사를 운영하는 MBA나 이사회가 이를 이해하지 못해 실제로 적용하기 어려움을 겪음.

     대부분의 직장에서 소프트웨어 개발자의 의견은 대체로 무시됨.
     * 품질은 실제로 연습을 통해서만 습득할 수 있는 속성임.

     품질 높은 결과물을 만들어내는 능력은 반복적인 실습을 통해 얻어짐.
"
"https://news.hada.io/topic?id=12340","광고 없는 도시들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               광고 없는 도시들

        Hacker News 의견

     * 스위스 여행 중 도시의 물리적 공간에 광고가 훨씬 적은 것을 발견하고 이로 인해 도시의 아름다움과 개성이 돋보였다고 느낌.
     * 자신의 도시에서는 야외 광고 공간 계약을 자전거 공유 프로그램 제공과 연계하여, 광고 공간을 독점적으로 판매하면서 도시의 미관을 개선하고 건강한 교통 수단을 촉진함.
     * 도로와 고속도로에 설치된 광고판이 운전 중 주의를 분산시키는 것에 대해 의문을 제기하며, 광고 없는 도시를 지지함.
     * 광고로 가득 찬 도시의 시각적 과부하가 생동감을 주는 것을 좋아하며, 광고 없는 도시에 반대하는 개인적인 견해를 표현함.
     * 모든 광고를 차단하여 삶이 더 평화롭고 고요해졌다고 느끼며, 물리적 공간의 광고를 제거하는 이니셔티브를 지지함.
     * 공공 표지판에 대한 중요 정보를 놓치는 경우가 많아, 광고의 과잉으로 인해 중요한 정보를 필터링하는 경향이 있다고 생각함.
     * 물리적 광고나 빌보드가 없는 도시나 국가를 방문했을 때, 시각적 자극이 줄어들어 쾌적함을 느낌.
     * 광고에 대한 다양한 정도가 있으며, 일반적인 광고는 문제가 되지 않지만, 대규모 광고는 시각적으로 불쾌하고, 추적 기능이 포함된 디지털 광고는 시민적으로 불쾌함.
     * 광고가 개인의 주의를 빼앗아 평화로운 생각을 방해한다고 느낌.
     * 광고 없는 환경이 주의 산만함을 줄이는 데 도움이 되므로, ""Adfree Cities""와 관련된 콘텐츠에 관심이 없음.
"
"https://news.hada.io/topic?id=12220","W3C, X/트위터를 떠나 Mastodon에서 활동 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    W3C, X/트위터를 떠나 Mastodon에서 활동 시작

     * W3C는 공식적으로 더 이상 X/Twitter 에서 활동하지 않으며, 모든 팔로워들은 w3c.social Mastodon 으로 이동할 것을 요청
     * 모든 W3C 관련된 계정에 동일한 조치를 취하도록 권장중
     * 이 마스토돈 인스턴스는 World Wide Web Consortium (W3C) 활동에 관련된 사람들을 위한 공간으로, W3C 팀의 몇몇 자원봉사자들이 운영함.

   어느 정도 규모 되는 조직이면 자기들 서버로 옮기는 것이 아무래도 낫죠
   그럼에도 굳이 자체 클라이언트를 사용할 필요도 없구요
   표준 인터페이스의 힘입니다

   연합 붐은 온다...!

   트위터 참 좋아하는 서비스인데.. 새 주인이 점점 더 나락으로 빠지게 하는 ㅠ
"
"https://news.hada.io/topic?id=12302","RSS 노출 요청노출 요청

RSS 피드의 중요성

     * 웹사이트 방문자들이 RSS 피드 링크를 쉽게 찾을 수 있도록 하는 것의 중요성 강조.
     * 많은 웹사이트들이 RSS 링크를 노출하지 않아 사용자가 피드를 수동으로 찾아야 하는 경우가 있음.
     * RSS 링크를 노출함으로써 RSS의 존재를 상기시키고, 오픈 웹을 지지하는 긍정적인 행동임.

RSS 자동 발견 기능

     * 웹사이트에 <link> 태그를 사용하여 application/rss+xml 타입으로 RSS 피드를 자동으로 발견할 수 있게 하는 표준 방법 설명.
     * 많은 사이트들이 이러한 표준 링크를 누락시키고 있으며, 피드 리더가 URL을 통해 자동으로 피드를 찾는 데 사용하는 첫 단계임.
     * RSS 피드가 있는 경우, 웹사이트의 <head> 부분에 특정 링크 태그를 포함시켜야 함.

다양한 피드 링크의 예시

     * 웹사이트가 여러 RSS 피드를 가지고 있는 경우, 각각의 피드에 대한 링크 태그를 <head> 부분에 포함시킬 수 있음.
     * 예를 들어, JSON 피드와 팟캐스트 피드를 링크하고자 할 때 각각의 타입에 맞는 링크 태그를 사용함.

RSS 버튼 디자인

     * RSS 버튼을 추가할 때, RSS 특유의 오렌지 색상을 사용하고 RSS 버튼처럼 보이게 하는 것이 좋음.
     * 이러한 디자인은 사용자가 RSS 버튼을 쉽게 인식하도록 도움.

GN⁺의 의견

     * 이 글에서 가장 중요한 것은 웹사이트 운영자들이 RSS 피드를 쉽게 찾을 수 있도록 노출하는 것의 중요성임.
     * RSS는 사용자들이 콘텐츠를 구독하고 원하는 정보를 효율적으로 받아볼 수 있는 오픈 웹의 핵심 기능 중 하나이기 때문에, 이 글은 웹 개발자들에게 특히 흥미로울 수 있음.
     * 웹사이트에 RSS 피드를 통합하고 이를 사용자들이 쉽게 발견할 수 있도록 하는 방법을 제시함으로써, 정보의 개방성과 접근성을 높이는 방법을 공유하는 것이 긍정적이고 유익함.

   꼭꼭 숨겨져있는 사이트 많죠. 정말 구독하고 싶을 때는 /rss, /rss.xml, /index.xml, /feed, /feed.xml을 직접 입력해보곤 해요.

        Hacker News 의견

     * YouTube 채널은 RSS 피드를 제공하며, 뉴스 리더에 URL을 붙여넣어 구독할 수 있음. 브라우저에 RSS 구독 버튼을 다시 추가하는 확장 프로그램 사용이 가능함.
     * RSS/Atom 피드가 노출되지 않는 주된 이유는 Google Reader와 같은 서비스의 종료와 브라우저의 RSS 피드 지원 중단 때문임. 브라우저에 기능을 다시 추가하여 피드를 찾고 뉴스 리더로 구독할 수 있어야 함.
     * 블로그 피드 구독을 공개적으로 밝히는 것이 좋음. 사이트 소유자에게 긍정적인 피드백을 보내거나 HN에 댓글을 남겨 구독 사실을 알릴 수 있음. 이는 품질 있는 콘텐츠 제작자에게 동기를 부여함.
     * RSS 피드의 일관성이 떨어질 수 있음. 때로는 피드에 내용이 포함되어 있고, 때로는 링크만 제공됨. 링크를 통해 콘텐츠를 스크래핑할 때는 사이트별로 특수 코드가 필요할 수 있음. LLM의 등장으로 이러한 데이터를 ML 파이프라인용 데이터 소스로 판매하는 시장이 생길 수 있음.
     * 많은 사이트에서 자동 발견 기능이 작동하지 않거나 누락되어 있어, Temboz 피드 리더는 숨겨진 RSS 또는 Atom 피드를 찾기 위해 여러 접미사를 시도함.
     * 일부는 RSS를 공개하지 않으려는 이유로 구독자에 대한 이해도를 원함. 그러나 대형 RSS 리더는 고수준의 분석 데이터를 제공하여 RSS 독자 수를 추정할 수 있음. 이 기능을 지원하는 리더가 더 많아지길 바람.
     * HN에서 공유된 RSS/Atom 피드를 기반으로 한 hn-blogs.kronis.dev를 만들었음. 이는 매일 최신 게시물을 가져오며, 다양한 방식으로 통합되어 있음. 때로는 피드 유형이 잘못 보고되거나 메타데이터가 충분하지 않을 수 있음.
     * 일부 피드는 시간이 지나면 기사를 잃어버리지만 다른 피드는 그렇지 않음. 피드 XML 자체가 제한된 수의 기사만 포함하고 있음. 뉴스리더가 오래된 기사를 보존하도록 하려면 어떻게 해야 하는지에 대한 질문.
     * 한 사용자가 자신의 페이지 하단에 RSS 아이콘을 추가함. 오늘날 모든 사이트에 ""application/rss+xml"" 링크가 있다고 가정하지 않는 사용자들을 위해 RSS를 더 명확하게 표시하는 것이 중요함.
     * RSS가 억제되었다는 사실이 분노를 불러일으킴.
"
"https://news.hada.io/topic?id=12286","Meta, 생성형 AI의 신뢰와 안전을 위한 Purple Llama 프로젝트 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Meta, 생성형 AI의 신뢰와 안전을 위한 Purple Llama 프로젝트 발표

     * 개발자들이 책임감 있게 생성 AI 모델을 배포할 수 있도록 지원하기 위해, 개방형 신뢰 및 안전 도구와 평가를 제공하는 엄브렐라 프로젝트
     * 첫번째 단계로 두가지 도구를 공개
          + CyberSec Eval : LLM들을 위한 사이버보안 안전 평가 벤치마크
          + Llama Guard : 배포가 쉽도록 최적화된 입출력 필터링을 위한 Safety Classifier
     * AI Alliance, AMD, AWS, Google Cloud, Hugging Face, IBM, Intel, Lightning AI, Microsoft, MLCommons, NVIDIA, Scale AI 등과 협력하여 이러한 도구를 오픈 소스 커뮤니티에 제공할 예정

왜 Purple 인가?

     * 제너레이티브 AI가 제시하는 도전들을 진정으로 완화하려면 공격(레드팀)과 방어(블루팀) 태세를 모두 갖춰야 한다고 믿음
     * 레드팀과 블루팀의 조합으로 구성된 퍼플팀은 잠재적 위험을 평가하고 완화하기 위한 협업적 접근 방식
     * Purple Llama 프로젝트는 연구 및 상업적 사용을 가능하게 하는 허가적 라이선스로 제공될 예정
     * 이는 커뮤니티 협업을 촉진하고 생성 AI 개발을 위한 신뢰 및 안전 도구의 개발 및 사용을 표준화하는 중요한 단계

   AI Alliance - https://thealliance.ai 가 뭔가 하고 봤는데 IBM과 Meta가 주도해서 만든 연합이네요.
   50개가 넘는 회사/단체들이 참여했는데, 정작 OpenAI, Google, NVidia, Microsoft 같은데는 다 빠져서 이게 뭔가 싶은.. ㅎㅎ
"
"https://news.hada.io/topic?id=12271","밀리미터의 중요성: 콴타스 항공 32편의 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       밀리미터의 중요성: 콴타스 항공 32편의 이야기

요약: Qantas 항공 32편의 위기 극복 이야기

     * 2010년 11월 4일, 싱가포르에서 이륙한 Qantas A380 항공기가 엔진 폭발로 심각한 손상을 입음.
     * 항공기의 거의 모든 주요 시스템이 손상되었으나, 조종사들은 냉정한 판단으로 469명의 승객과 승무원을 무사히 착륙시킴.
     * 사고 원인은 너무 얇게 제작된 엔진의 한 오일 파이프에서 시작되었으며, 이는 설계 결정과 가공 로직의 숨겨진 결함, 엔진 동작에 대한 잘못된 가정에서 비롯됨.

요약: A380의 안전성과 항공 안전의 발전

     * A380은 2007년에 도입된 세계에서 가장 큰 여객기로, 많은 항공사들이 운영 모델에 부적합하다고 판단하여 대부분이 기피함.
     * Qantas는 A380을 주문하여 운영 중이었으며, 사고 항공기는 호주의 항공 선구자 Nancy-Bird Walton의 이름을 딴 것이었음.
     * A380의 설계에 내장된 명시적인 보호 장치들이 최악의 상황에서도 항공기를 안전하게 지키는 데 중요한 역할을 함.

요약: Qantas 항공 32편의 비상 착륙 과정

     * 조종사들은 다양한 시스템 장애 경고에 직면하여 비상 상황에 대처해야 했음.
     * 착륙 장비 문제, 제동력 상실, 정지하지 않는 엔진 등 여러 문제에도 불구하고 안전하게 착륙함.
     * 항공기는 착륙 후 여전히 문제를 겪었으나, 모든 승객은 무사히 탈출함.

GN⁺의 의견

   이 글에서 가장 중요한 것은 항공 안전에 대한 신뢰를 높일 수 있는 사례로, Qantas 항공 32편의 사고와 그에 대한 대응 과정을 통해 보여준다. 조종사들의 숙련된 대처와 A380의 설계 안전성이 합쳐져 대형 재난을 막을 수 있었다는 점이 매우 흥미롭다. 이 이야기는 항공 여행에 대한 두려움을 줄이고, 항공기의 안전 설계와 조종사의 중요성을 강조하는 좋은 예가 될 것이다.

        Hacker News 의견

     * 항공 사고 조사 보고서의 상세한 사건 연대기를 읽을 때 미소 짓게 됨
          + 단일 결함 부품을 정확히 파악하고 그 부품이 사용되기까지의 전 과정과 환경을 추적하는 것은 항공 산업의 견고함을 보여줌
          + 실수는 발생하지만, 그에 대한 대응 방식이 중요함
          + FAANG의 SRE로서 항공 산업에 감탄하며, 소프트웨어/기술 산업도 언젠가 이와 동등해지기를 희망함
          + 기사 작성자 Kyra Dempsey에게 최대의 칭찬을 보냄
     * 비상 착륙 경험에서 승무원의 지시에 따른 승객들의 질서 있는 행동이 인상적임
          + 최근에는 짐을 가지고 탈출하는 사람들의 사진을 보며 위험을 느낌
          + 언론이 사고 현장에서 승객들의 반응을 취재하는 것은 실제로 일어남
     * 항공 엔진 정비 회사에서 근무한 경험과 QA 소프트웨어 개발 경험 공유
          + 엔진에 대한 깊은 지식을 가진 엔지니어들과의 대화가 인상적임
          + QA 관리자의 엄격함과 중요성에 대한 존경심 표현
          + 매일 전 세계에서 발생하는 작은 문제들과 엔진 결함, 위험성 평가 및 모니터링 과정에 대한 설명
     * 항공기 설계 소프트웨어에서 두 개의 거의 유사한 기준점(datum)을 사용할 때 경고를 발생시키는 것이 표준이 되어야 한다는 의견 제시
     * Kyra Dempsey(Admiral Cloudberg)를 세계적인 보물로 칭하며 그녀의 글을 추천함
     * 압력 하에서 뛰어난 조종 능력을 발휘하는 조종사들에 대한 찬사와 United Airlines Flight 232의 사례 소개
     * 착륙 접근 시 안전한 공속 범위가 매우 좁다는 점과 이를 성공적으로 수행한 조종사의 능력에 대한 칭찬
     * Mentour Pilot의 항공 사고 분석에 대한 중독을 고백하며 관련 동영상 링크 공유
     * QF32 비행의 조종사가 직접 쓴 책을 읽고 그의 경험과 결정에 대한 인상을 공유
     * Qantas A380의 엔진 실패와 그로 인한 인도네시아 바탐 섬의 파편 낙하 사건, 그리고 이로 인한 혼란과 주식 시장의 반응에 대한 설명

   위 요약은 각 댓글의 내용을 간결하게 전달하면서도, 중립적인 태도를 유지하고, 주제에서 벗어나지 않으며, 모호함이나 풍자, 논란의 여지를 배제한 내용을 담고 있습니다. 필요한 배경 지식은 간결하게 추가되었습니다.
"
"https://news.hada.io/topic?id=12246","무제한 뷔페의 경제학무제한 뷔페의 경제학 (2020)

무제한 뷔페의 경제학

     * 무제한 뷔페는 미국 문화를 상징하는 현상으로, 소액의 비용으로 다양한 음식을 마음껏 먹을 수 있는 곳임.
     * 뷔페 사업이 고객에게 무제한으로 음식을 제공하면서도 어떻게 수익을 낼 수 있는지 업계 전문가와 셰프, 뷔페 소유주들의 인터뷰를 통해 알아봄.

20달러짜리 뷔페의 내역 분석

     * 뷔페는 고정된 가격에 무제한으로 음식을 제공하지만, 레스토랑에는 추가 비용이 발생하지 않음.
     * 전국의 다양한 뷔페 가격을 분석한 결과, 평균적으로 약 20달러의 가격이 책정됨.
     * 뷔페는 매우 낮은 마진으로 운영되며, 노동 비용을 최소화하여 이익을 창출함.

뷔페와 평균의 법칙

     * 대량으로 음식을 소비하는 고객도 있지만, 대부분의 고객은 평균적인 양이나 그보다 적은 양을 섭취하여 뷔페의 손실을 상쇄함.
     * 뷔페는 고객이 더 적은 양의 음식을 섭취하도록 유도하는 다양한 전략을 사용함.
     * 음료수 판매를 통해 추가 이익을 얻으며, 극단적인 상황에서는 정책 남용자들에 대한 조치를 취하기도 함.

뷔페 산업의 변화

     * 뷔페 수가 감소하는 추세에 있으며, 이는 음식 배달 앱의 확산과 건강에 대한 소비자의 인식 변화 때문임.
     * 남아있는 뷔페 체인들은 고객의 경험을 개선하고, 품질 높은 음식을 제공하여 변화에 적응하고 있음.

GN⁺의 의견

     * 이 기사에서 가장 중요한 점은 뷔페 사업이 어떻게 고객에게 무제한 음식을 제공하면서도 수익을 낼 수 있는지에 대한 경제적 원리를 설명하고 있다는 것임.
     * 사람들에게 흥미로운 이유는 많은 이들이 즐겨 찾는 뷔페가 어떻게 운영되는지에 대한 호기심을 충족시켜주기 때문임.

        Hacker News 의견

     * 이 기사를 좋아하는 한 사용자는 각 장이 특정 비즈니스의 단위 경제를 분석하는 책을 기꺼이 읽을 것이라고 언급함. 또한, 이 사용자는 어느 날 자신의 아이들과 함께 간 회전초밥 뷔페에서 옆 테이블에 앉은 두 남성이 초밥에서 생선만 먹고 밥과 야채를 버리는 모습을 목격한 일화를 공유함.
     * 1990년대에 뷔페에서 일했던 한 사용자는 피자의 재료 비용이 매우 낮았으며, 피자를 만드는 것이 주요 업무였고, 피자가 매우 맛있었다고 회상함. 또한, 레스토랑에는 아케이드 게임이 있는 작은 게임룸이 있었으며, 아이들이 피자 몇 조각을 먹은 후 게임을 하러 가면서 레스토랑에 이익을 남겼음.
     * 불가리아의 한 뷔페에서 본 새로운 메커니즘에 대해 이야기하는 사용자는 샐러드와 전분질 음식은 셀프 서비스였지만, 고기는 웨이터가 큰 꼬치에 꽂아 직접 썰어주는 방식이었으며, 이는 고기 소비를 제한하는 효과가 있었다고 설명함.
     * 미주리의 작은 마을에서 자란 한 사용자는 17세가 되기 전까지 중국 음식을 먹어본 적이 없었으며, 중국 뷔페를 매우 좋아했다고 함. 그는 친구와 함께 자주 뷔페를 방문했으며, 많은 양의 음식을 먹었지만, 레스토랑은 나중에 폐업했다고 함.
     * 어린 시절 가족과 함께 간 뷔페에서 아버지가 게 다리를 먹는 모습을 기억하는 사용자는 게 다리가 뷔페에서 비용이 많이 드는 아이템 중 하나라고 언급함.
     * 한 사용자는 2030년까지 모든 레스토랑 음식의 80%가 집에서 먹힐 것이라는 기사 내용에 대해 사람들이 집순이 문화에 더 깊이 빠져드는 것이 슬프다고 의견을 표현함.
     * 자신의 팀을 정기적으로 뷔페로 데려가는 한 관리자는 이상적인 고객으로 아이를 동반한 가족과 여성이 많이 먹지 않는 커플을 꼽으며, 인도네시아에서의 뷔페 가격과 미국의 가격을 비교함.
     * 레스토랑을 개업하고 싶어하는 한 사용자는 임대료가 수익의 3배라는 기사 내용을 보고 자신의 부동산을 소유하는 것에 대한 확신을 갖게 되었다고 말함. 임대료가 비즈니스를 어렵게 만들 수 있기 때문에, 소유 부동산은 비즈니스가 실패할 경우 팔 수 있는 자산이 될 수 있다고 덧붙임.
     * 대학 식당의 저렴한 음식을 그리워하는 사용자는 IKEA의 음식이 유사한 경험을 제공한다고 언급하며, 몰의 푸드코트나 코스트코는 가격 대비 만족도가 떨어진다고 평가함.
     * 한 사용자는 아버지와 그의 친구가 피자헛 뷔페에 갔을 때 친구가 샐러드 볼에 드레싱을 전부 부어 매니저를 화나게 했던 일화를 공유함.
"
"https://news.hada.io/topic?id=12305","Together, StripedHyena-7B 모델 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Together, StripedHyena-7B 모델 공개

     * 매우 긴(Ultra Long) 컨텍스트를 지원하기 위해 Transformer를 대체할 새로운 아키텍처인 Hyena를 이용
          + Hyena 는 신호처리에서 영감을 받은 시퀀스 모델 기반
     * 짧은/긴 컨텍스트 평가에서 Transformers와 경쟁하는 최초의 대체 모델
     * OpenLLM 리더보드 작업에서 Llama-2, Yi 및 Mistral 7B와 비슷한 성능을 발휘하며, 긴 컨텍스트 요약에서 우수한 성능을 냄
     * StripedHyena는 긴 시퀀스 훈련, 미세 조정 및 생성에 더 빠르고 메모리 효율이 높음
     * 새로운 모델 접목(Model Grafting) 기법을 사용해 최적화되어 훈련 중에 모델 아키텍처를 변경할 수 있음
          + StripedHyena는 트랜스포머와 하이에나의 아키텍처 구성 요소를 접목하여 얻은 것으로, 더 긴 컨텍스트 데이터로 보강된 RedPajama 데이터 세트를 혼합하여 학습시킴
"
"https://news.hada.io/topic?id=12256","Pororoca - HTTP/2 와 HTTP/3를 지원하는 HTTP 조사 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Pororoca - HTTP/2 와 HTTP/3를 지원하는 HTTP 조사 도구

     * Postman 에서 영감 받아서 많은 부분을 향상시킨 HTTP 테스팅 도구
     * 윈/맥/리눅스 지원
     * 콜렉션 단위 환경 지원
     * 쉬운 변수 관리 및 Secret 변수 지원
     * 콜렉션 및 환경 설정을 하나의 파일로 Export
     * Postman 과 Export/Import 호환
     * Postman 대비 2~3배 적은 메모리 사용량
     * 테스팅 자동화 가능
     * Websocket 지원
     * 빠른 스타트업 시간

   또 포스트맨 대안...? 포스트맨은 항상 승리하나봐요.
"
"https://news.hada.io/topic?id=12251","미스트랄 "믹스트랄" 8x7B 32k 모델 [자석]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      미스트랄 ""믹스트랄"" 8x7B 32k 모델 [자석]

        Hacker News 의견

     * Andrej Karpathy의 의견:
          + MistralAI의 새로운 오픈 소스 LLM (Large Language Model)에 대한 소개
          + params.json 파일에서 주목할 만한 설정들:
               o hidden_dim / dim = 14336/4096 => MLP 확장이 3.5배
               o n_heads / n_kv_heads = 32/8 => 4배의 멀티쿼리
               o ""moe"" => 전문가의 혼합으로 상위 2개 중 8배
          + 관련 코드는 GitHub에서 확인 가능
          + AI 혁명에 대한 과장된 프로모션 비디오가 없음
          + NeurIPS라는 큰 딥러닝 컨퍼런스가 다가오기 때문에 많은 AI 활동이 일어나고 있음
     * 다른 LLM 소식:
          + Mistral/Yi는 'neural alignment'라는 새로운 기술로 미세 조정된 모델을 사용하여 Hugging Face 리더보드에서 다른 모델들을 압도함
          + 7B 모델이 대부분의 70B 모델들을 '이김'
          + 테스트 중인 34B 모델이 매우 좋아 보임
          + 이 기술이 Mistral Moe에 적용되면 매우 뛰어난 모델이 될 수 있음
          + 데스크톱에서 실행 가능한 OSS가 GPT-4에 도전하는 중요한 변곡점일 수 있음
     * Mistral의 접근 방식:
          + Mistral은 설명에 크게 신경 쓰지 않으나, 이러한 스타일이 Google의 연마된 기업 발표보다 더 신뢰감을 줌
     * 간단한 발표 방식:
          + 90년대 방식으로 간단한 발표를 선호함
     * Mistral의 모델 사양:
          + 전문가의 혼합(Mixture of Experts) 구조를 가진 params.json 파일 공개
     * Mistral과 Google의 발표 방식 비교:
          + Google의 Gemini 발표와 대조적인 Mistral의 모델 발표 방식
          + Mistral은 Stanford의 Megablocks를 기반으로 훈련된 것으로 보임
     * Mistral의 마케팅 전략:
          + 다른 회사들이 랜딩 페이지와 프로모션 비디오에 주를 두는 반면, Mistral은 간단하게 모델을 공개함
     * Mistral의 공개 정보:
          + 전문가의 혼합 아키텍처를 사용
          + 7B 파라미터를 가진 8개의 전문가
          + 총 96GB의 가중치로, 일반적인 홈 GPU에서는 실행 불가능
"
"https://news.hada.io/topic?id=12343","Safari 17.2의 새로운 WebKit 기능들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Safari 17.2의 새로운 WebKit 기능들

HTML

     * Exclusive Accordion: <details> 엘리먼트에 name 속성 지원. 하나 선택시 다른 아이템 자동으로 닫음
     * <input> 필드에 autocomplete=""one-time-code"" 넣어서 문자로 수신한 OTP코드 자동입력 지원

CSS

     * CSS Nesting 할때 엘리멘트 셀렉터에 & 붙여야 하는 제한 사라짐
     * rcap, rex, ric, rch 등의 Root 유닛 지원
     * CSS Motion Path를 웹 표준을 더 준수하도록 업데이트
     * 애니메이션과 트랜지션에 linear() 함수 지원 추가
     * rem(), mod(), round() 등의 수학함수 지원
     * counter-set 속성 지원
     * -webkit-mask-box-image 에서 브라우저 프리픽스를 제거하고 mask-border-[mode|outset|repeat|slice|source|width] 직접 지원
     * Custom Highlights API 지원: ::selection 같은 것을 ::highlight() 함수로 커스텀 지정 가능

Image 와 Video

     * Responsive Image를 Preloading 지원 : <link rel=preload>의 imagesrcset/imagesizes 를 <img>의 srcset/sizes 처럼 그대로 이용 가능
     * imageOrientation 속성의 이미지 값 그대로 사용하는 것을 none 에서 from-image로 더 적절하게 변경
     * SVG의 <image crossorigin> 지원
     * H264 L1T2 코덱 지원
     * webkitPreservesPitch 에서 브라우저 프리픽스 제거하고 HTMLMediaElement.preservesPitch 로 추가

JavaScript

     * import attributes 지원 (임포트 할때 타입 정보 추가 가능)
     * Intl.NumberFormat 의 FormatApproximately 지원

Web API

     * Fetch Priority 지원: 이미지, 스크립트, CSS 등에 대해서 fetchpriority=[high|low|auto] 등 설정 가능
     * Form Validation 시에 title 속성 지원. 검증 에러시에 title 값을 보여줌
     * CanvasRenderingContext2D.prototype.reset() 지원
     * 특정 마우스 이벤트를 disabled된 폼 컨트롤에 보내기 지원 : mouseenter, mouseleave, mousemove, mouseover, mousewheel 등. click/mouseup/mousedown 은 받지 못함

Web Apps

     * Login Cookies: 웹앱을 맥의 ""Add to Dock"" iOS의 ""Add to HomeScreen"" 했을때도 Login Cookie를 저장해서 로그인 유지 가능
     * 웹앱 아이콘이 깔끔하게 보이도록 변경. 최고의 경험을 위해서는 SVG 나 1024x1024 이상의 이미지를 제공 필요
     * 맥의 웹앱에서 ""상태 표시줄 보기 활성화"" 가능. 웹앱 창에서 처음으로 로딩할 페이지를 쉽게 변경 가능

WebGL

     * 새로운 WebGL 확장 지원: EXT_blend_func_extended, WEBGL_clip_cull_distance

Privacy

     * blob partitioning 추가

Web Inspector

     * 컬러 팔레트에서 Color Variable 지원
     * 애니메이션 타이밍 조정해서 보기
"
"https://news.hada.io/topic?id=12242","소음이 많은 SVG 제작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             소음이 많은 SVG 제작

SVG 소음 효과 추가하기

     * 웹 기술의 발전이 웹 디자인에 어떻게 영향을 미치는지에 대한 관심
     * 디스플레이의 픽셀 밀도 증가가 사진에서 벡터 일러스트레이션으로의 전환을 촉진함
     * 최근 디자인 트렌드에서는 질감이 있는 그림자나 조명 효과를 사용하는 소음 텍스처가 등장

Studio Vellekoop & León

     * 소음 텍스처 스타일에 대한 개인적 취향과 이를 SVG로 재현하는 어려움
     * SVG에 대한 흥미와 다양한 효과를 내는 방법에 대한 탐구
     * SVG 최적화 도구인 SVGO의 등장과 직접 SVG를 작성하는 경험 공유

기본 도형과 그라데이션

     * SVG에서 원이나 사각형 같은 기본 도형을 쉽게 그릴 수 있음
     * 그라데이션 적용 시 컴포넌트 재사용을 위해 베이스 색상에 따라 변하는 그라데이션 필요
     * 마스크 사용법과 <defs>를 이용해 도형을 한 번만 정의하고 use 요소로 참조하는 방법 소개

결과

     * <feTurbulence> 필터를 사용하여 인공적인 소음 텍스처 생성
     * 색상 변화를 제거하고 선택된 채우기 색상과 자연스럽게 혼합하기 위한 필터 효과 적용
     * 최종적으로 만족스러운 일러스트레이션을 생성하였으나, Safari에서는 다르게 렌더링됨

추가 정보 2023년 12월 7일

     * Hacker News에 글을 제출하여 일부 반응을 얻음
     * 2021년 Jimmy Chion이 작성한 CSS Tricks의 유사한 주제 기사 소개
     * 글을 쓸 당시에는 이전 기사를 인지하지 못했으나, 이제 보충 자료로 링크함

GN⁺의 의견

   이 글에서 가장 중요한 것은 웹 디자인의 최신 트렌드 중 하나인 소음 텍스처를 SVG로 구현하는 방법에 대한 탐구이다. 이러한 내용은 웹 디자이너와 개발자에게 흥미로운 주제일 뿐만 아니라, 최신 웹 디자인 기술을 배우고자 하는 초급 소프트웨어 엔지니어에게도 유익한 정보를 제공한다. SVG를 사용한 디자인의 유연성과 최적화 방법에 대한 실용적인 예시를 통해, 독자들은 복잡한 디자인 효과를 효율적으로 구현하는 방법을 배울 수 있다.

   역시 기대를 저버리지 않는 사파리! 20년대의 IE라는 이름이 아깝지 않네요

        Hacker News 의견

     * SVG를 사용하여 캔버스에서 만들 수 없었던 그림자 효과를 구현하려 했으나, Safari에서 CSS 그림자가 작동하지 않아 SVG 네이티브 필터를 사용해야 했음. 다른 브라우저와 보이는 모습이 달라서 Safari를 감지하고 CSS 버전을 비활성화하는 자바스크립트를 사용함.
     * ""재귀적 음양""에 대한 배경은 해당 블로그에 설명되어 있으며, 텍스처를 가지고 놀아볼 계획이지만 Safari에서 다르게 보이는 것이 좌절감을 줌. SVG 해석에 대한 표준화가 이루어질지 궁금함.
     * SVG로 특정 일러스트레이션 스타일을 재현하는 것이 쉽지 않아서 답답함을 느낌. 이 스타일을 ""dithering""이라고 하며, CSS-Tricks의 ""Grainy Gradients"" 페이지에서 같은 기술을 설명함. CSS를 사용하여 전체 이미지에 적용하는 대안도 있음.
     * SVG를 사용하여 복잡한 컨퍼런스 포스터를 만들었지만, 브라우저와 프로그램마다 다르게 렌더링됨. SVG를 포함/링크하여 임베드할 수 있지만, 다른 SVG를 포함하면 작동하지 않음. 브라우저가 ""보안"" 문제로 임베드/링크된 이미지를 표시하지 않을 때가 있음. 복잡한 SVG를 PDF로 변환하는 것은 일관성 없이 메모리 부족 문제를 일으킴. SVG를 PDF로 변환하는 각 도구마다 결과가 다름. Inkscape와 같은 도구는 때때로 포함된 SVG를 래스터 그래픽으로 처리함.
     * 필름 사진작가들이 필름의 결을 없애려 애썼지만, 디지털 사진작가들은 그것을 다시 추가하려는 경향이 있음. 디지털의 깔끔함 속에서 이러한 예시들이 매력적으로 느껴짐.
     * Inkscape가 다양한 필터 효과를 통해 이러한 노이즈를 추가할 수 있으며, Plain SVG로 내보내면 feTurbulence의 사용을 코드에서 확인할 수 있음. 또한, Affinity Designer 2가 노이즈를 어떻게 처리하는지 비교해봄. 내보낸 SVG에는 base64 jpeg 이미지로 노이즈가 포함됨.
     * ""ApeFest"" 웹사이트는 CSS 애니메이션(실제로는 JS로 이동)을 사용하여 ""무작위로"" 움직이는 타일형 PNG 오버레이를 사용하여 동적인 노이즈를 생성함. 기술적으로 단순하지만 효과적임.
     * SVG 필터의 외관이 엔진과 스케일링 요소에 따라 크게 달라지기 때문에, 미묘한 부분에서만 사용하며, 정밀도가 중요하지 않은 경우에만 사용함. feDisplacementMap과 같은 필터는 안티앨리어싱을 파괴하여 사용하고 싶은 상황의 절반을 망침.
     * 페이지 배경으로 사용하지 말 것을 권장함. 이전에 시도했을 때 다양한 기기에서 이상한 버그가 발생하고, 큰 사이트의 경우 페이지가 완전히 멈추거나 SVG가 일정 크기 이상에서 렌더링이 중단됨.
     * Perlin Noise와 그 후속인 Fractal Noise는 사실감을 더하거나 ""유기적"" 느낌을 주는 데 매우 효과적임. 예를 들어, ""알라딘(1992)""에서 동굴에서 탈출하는 장면에 효과적으로 사용됨.
     * 확대/축소 수준에 독립적인 방식으로 효과를 만드는 방법에 대한 관심이 있음. 또한, 무작위성을 추가하는 것과 관련하여, 주어진 크기에서 하나의 올바른 렌더 결과를 정의할 수 있는 시드(seed)를 설정하는 방법이 있는지 궁금함.
"
"https://news.hada.io/topic?id=12316","Ask HN: 버전 관리를 위해 Git보다 나은 방법이 있을까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Ask HN: 버전 관리를 위해 Git보다 나은 방법이 있을까요?

   버전 관리 시스템(VCS)에 있어 Git이 최종적인 해결책인지, 아니면 더 나은 시스템이 가능한지에 대한 질문

주요 답변들

     * Git을 배우는 것이 다른 VCS를 사용하거나 새로운 VCS를 만드는 것보다 훨씬 유익함
     * Git CLI는 좋지 않아서 다양한 곳에서 Git UI 문제를 해결하려고 노력중
     * Jujutsu는 다른 분산 버전 관리 시스템(DVCS)의 장점을 결합하고 혁신적인 개념을 도입함
     * SQLite 개발자가 만든 Fossil 은 파일의 기록을 앞뒤로 추적가능
     * Pijul 도 유망함
     * Git 내부는 복잡하지 않지만, 인터페이스가 혼란스러움
     * 대규모 바이너리 파일에 대해서는 아직 부족함. LFS는 어색
     * Darcs 도 괜찮음

   대용량 파일을 자주 다루는 게임 개발자 입장에서는 git을 사용하는데 한계가 있을 수 밖에 없다고 생각합니다.
   git은 snapshot 방식으로 저장하기 때문에 파일이 조금만 바뀌어도 저장 용량이 크게 늘 수 밖에 없습니다. snapshot이 아닌 delta 방식으로 저장해야 해결이 되는데 이는 git의 기본 설계 철학을 훼손할 수 있는 것이어서 차라리 같은 DVCS이면서 delta 방식으로 저장하는 mercurial을 사용하는 것이 좋지 않을까 싶습니다.

        Hacker News 의견

     * 많은 사람들이 Git을 처음이자 유일한 버전 관리 시스템(VCS)으로 접하게 되었음.
          + 이전에 RCS, CVS, SVN을 사용하다 Git으로 넘어온 경험이 있음.
          + Git은 이전 시스템들의 근본적인 구조적 결함을 해결함.
          + Git의 한계는 사용자가 Git을 어떻게 사용하는지 아는 데에 있음.
          + Git의 복잡한 UI를 단순화하려는 시도는 Git의 강력함을 약화시킬 수 있음.
          + Git을 배우는 것이 다른 VCS를 사용하거나 새로운 VCS를 만드는 것보다 훨씬 유익함.
     * Git이 ""더 나은"" VCS가 되기 위해 어떤 측면을 개선해야 하는지에 대한 질문.
          + Git의 CLI 사용자 인터페이스는 복잡함.
          + Git은 빠르게 성장할 수 있었지만, CLI 사용자 경험을 희생함.
          + 여러 회사들이 Git UI 문제를 해결하기 위해 다양한 솔루션을 제공함.
     * Jujutsu 버전 관리 시스템이 다른 분산 버전 관리 시스템(DVCS)의 장점을 결합하고 혁신적인 개념을 도입함.
          + 해커뉴스에서 여러 차례 논의된 바 있음.
     * Sqlite의 창시자들이 만든 Fossil이라는 시스템.
          + Fossil은 Git과 달리 파일의 역사를 앞뒤로 추적할 수 있는 기능을 제공함.
     * Git이 완벽하지는 않지만 대체제보다는 낫다는 의견.
          + Git의 기능 발견성이 혼란스럽고 복잡함.
          + Git을 배우는 것은 많은 노력을 요구하지만, 기본 명령어만 사용할 때는 문제가 없음.
     * Git의 내부 작동은 복잡하지 않으나, 사용자 인터페이스가 혼란스러움.
          + Git 자체가 아니라 사용자 인터페이스를 단순화하는 것이 필요함.
     * Fossil이라는 시스템이 Git의 대안으로 제시됨.
          + Fossil은 Git 저장소의 중앙집중화 문제를 해결하는 포지 툴을 포함함.
     * Git이 기본적으로 큰 파일/이진 자산을 더 잘 다루었으면 하는 바람.
          + LFS(Large File Storage)는 괜찮지만 완벽하지 않음.
          + CLI는 문제가 없으며, 많은 대체 도구들이 존재함.
     * Sqlite의 Fossil과 Facebook의 Sapling이 Git의 대안으로 언급됨.
     * Git의 인터페이스를 개선할 수 있는 방법에 대한 개인적인 이론.
          + 저장소를 방향성 그래프로 더 집중하고, 언어를 그래프와 같은 용어로 사용함.
          + 수학적 배경을 가진 사람들에게 Git을 더 쉽게 배울 수 있게 함.
"
"https://news.hada.io/topic?id=12310","FFmpeg, 수십 년 만에 "가장 복잡한 리팩토링"으로 CLI 멀티스레딩 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              FFmpeg, 수십 년 만에 ""가장 복잡한 리팩토링""으로 CLI 멀티스레딩 도입

FFmpeg CLI 멀티스레딩 지원

     * FFmpeg 명령줄 인터페이스(CLI)가 멀티스레딩을 지원하는 기능이 FFmpeg Git에 병합됨.
     * 이는 FFmpeg 7.0이 내년 초에 출시되기 전에 이루어진 변화로, 비디오 트랜스코딩에 널리 사용되는 중요한 오픈소스 프로젝트에 있어 큰 개선임.
     * 멀티코어 프로세서가 일반화된 현재, 이러한 개선은 매우 유익함.

복잡한 리팩토링 작업

     * FFmpeg 개발자들은 최근 기술 발표에서 이 멀티스레딩 작업을 ""수십 년 만에 FFmpeg CLI에서 이루어진 가장 복잡한 리팩토링 중 하나""라고 설명함.
     * 개발자들은 사용자들에게 테스트를 요청하며, 발견된 문제를 FFmpeg Trac에 보고해 달라고 촉구함.

구현된 기술적 변화

     * 병합된 패치에는 스레드 인식 트랜스코드 스케줄링 인프라 추가, 인코딩을 별도의 스레드로 이동, 그 외 여러 저수준 변경사항이 포함됨.
     * FFmpeg를 스레드 아키텍처로 전환하는 것은 각 구성 요소(디뮬서, 디코더, 필터, 인코더, 먹서)가 별도의 스레드에서 이미 실행되고 있었지만, 이제 실제로 병렬로 실행될 수 있게 됨을 의미함.

GN⁺의 의견

     * FFmpeg의 멀티스레딩 지원은 비디오 트랜스코딩 작업의 효율성을 크게 향상시킬 수 있는 중요한 발전임.
     * 이러한 복잡한 리팩토링 작업은 개발자들에게 많은 도전을 제시했으며, 이는 FFmpeg가 지속적으로 현대 컴퓨팅 환경에 적응하고 발전하고 있음을 보여줌.
     * 사용자들과 개발자들에게 이 변화가 실제 성능에 어떤 영향을 미칠지 관찰하는 것은 흥미로운 일이 될 것임.

        Hacker News 의견

     * 멀티스레딩/프로세싱 최적화에 대한 이론
          + 과거에는 이미지 하나를 읽고 처리하며 렌더링하는 데 상당한 시간이 소요되었으나, 하드웨어와 소프트웨어 기술의 발전으로 이제는 훨씬 빨라짐.
          + 예전에는 여러 워커가 한 프레임을 처리하는 것이 효율적이었지만, 현재는 단일 워커가 여러 워커를 동원하는 것보다 더 효율적으로 프레임을 처리할 수 있음.
          + 현대의 시스템은 FFmpeg가 처음 만들어졌을 때의 시스템과는 완전히 다른 환경을 가지고 있어, 작업 부하를 어떻게 정의하고 스케줄링하며 분배하고 추적한 후 최종 결과물로 합칠지에 대한 재고가 필요함.
          + FFmpeg 팀이 이러한 도전을 받아들인 것에 대해 칭찬함. FFmpeg는 오픈 소스 인프라의 정점으로, 문명이 구축되는 데 필수적인 요소임.
     * VDD@Dublin 행사의 강연 녹화
          + 강연의 녹화본을 찾고 있었으나, 저자의 사이트나 여기서 쉽게 찾을 수 없음.
          + 업데이트: YouTube에서 발견함!
     * 멀티코어 성능 향상에 대한 고민
          + 현재 인코더들은 동시에 같은 프레임을 처리하기 위해 여러 스레드를 사용함. 프레임을 여러 영역으로 나누고 각 스레드가 특정 영역을 처리하는 방식이 일반적임.
          + 대안으로, 키 프레임 세그먼트를 독립적으로 처리하는 방법을 제안함. 이 방법은 코덱을 일반적이고 효율적인 방식으로 병렬화할 수 있으며, 프레임을 영역으로 나누는 것으로 인한 압축 효율 저하나 스레드 간 통신 오버헤드가 없음.
          + 이 방법의 문제점으로는, 메모리에 N*키 프레임 주기의 프레임을 로드해야 하고, N 프레임을 인코딩하는 데 필요한 추가 메모리 오버헤드가 있음.
          + 그러나 많은 경우에 이러한 문제점들은 큰 문제가 되지 않을 것으로 보임. 대부분의 경우 많은 RAM을 사용하고 고정된 키 프레임 간격으로 출력하는 것에 만족함.
          + 프레임 내 병렬 처리와 키 프레임 세그먼트 병렬 처리를 결합하여 높은 병렬성을 달성하면서도 품질 저하를 최소화할 수 있음.
     * 지속적인 리베이스 작업의 도전
          + 매일 들어오는 변경 사항을 지속적으로 리베이스하는 것은 상당한 도전이었음.
          + 이제 FFmpeg에 통합되었기 때문에 앞으로는 작업이 훨씬 쉬워질 것임.
          + 큰 승리이며, 이는 속도 향상에 크게 기여할 것임.
     * FFmpeg의 가상 디스플레이 버퍼 스트리밍 시작 시간 개선 기대
          + LLMStack 프로젝트에서 FFmpeg를 사용하여 브라우저 비디오를 스트리밍함.
          + 현재는 각 도구를 호출할 때마다 파이프라인을 부팅하는 데 눈에 띄는 지연이 있음.
          + FFmpeg의 개선은 이러한 최적화 작업에 확실히 도움이 될 것임.
     * FFmpeg C API 강의 홍보
          + Udemy에서 FFmpeg C API를 가르치는 강의를 홍보함.
     * FFmpeg 코드베이스에 대한 궁금증
          + FFmpeg 코드베이스에 대해 잘 모르지만, 거대한 커밋 없이 천천히 어떻게 변경을 진행할 수 있을지 궁금함.
          + 발표에 따르면 700개의 커밋이 있었는데, 이것이 별도의 브랜치였는지, 아니면 프로젝트에 서서히 병합되었는지 궁금함.
     * 클라우드 서비스 운영자의 관점
          + Netflix와 같은 클라우드 서비스를 운영하는 경우, 이미 각 기계에서 수천 개의 FFmpeg 프로세스를 실행하고 있으므로, 본질적으로 이미 멀티코어 작업임.
     * VapourSynth의 스레드 필터 처리 경험 공유
          + 거의 10년 동안 VapourSynth에서 스레드 필터 처리를 즐기고 있음.
          + 이번 FFmpeg의 개선도 훌륭하지만, '품질' 비디오 인코딩을 위한 VapourSynth 전처리 + av1an 인코딩 작업 흐름에는 큰 변화가 없을 것임.
     * FFmpeg의 멀티코어 지원에 대한 질문
          + FFmpeg가 모든 포함된 코덱에서 멀티코어를 사용할 수 있게 되었는지 궁금함.
          + 오디오 호스팅 서비스를 위해 FFmpeg를 사용하여 LAME로 MP3를 인코딩하는데, 긴 파일의 인코딩 시간을 개선할 수 있다면 좋을 것임.
"
"https://news.hada.io/topic?id=12243","구글, '드라이브 데이터 손실 문제 해결' 선언하며 반대 의견 담긴 포럼 스레드 잠금","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            구글, '드라이브 데이터 손실 문제 해결' 선언하며 반대 의견 담긴 포럼 스레드 잠금

구글 드라이브 데이터 손실 문제 해결 선언, 사용자들은 여전히 문제 제기

     * 구글이 최근 몇 달 동안 두 번째로 데이터 손실 문제를 겪고 있음.
     * 구글 드라이브에서 일부 사용자의 파일이 누락되는 현상이 발생함.
     * 구글은 11월 27일에 이 문제를 인정하고 일주일 후 해결책을 발표함.

파일 동기화 문제로 설명되지만 사용자들은 해결되지 않았다고 주장

     * 구글은 드라이브 데스크톱 앱 버전 84.0.0.0부터 84.0.4.0에서 ""동기화 문제""가 발생했다고 설명함.
     * 사용자들은 문서와 스프레드시트가 누락되었으며, 이는 웹 인터페이스에서 생성 및 저장된 것으로 데스크톱 앱과 관련 없음을 지적함.
     * 많은 사용자들이 2023년 5월부터 문서 저장이 중단되었다고 보고함.

복잡한 복구 지침과 포럼에서의 의사소통 차단

     * 구글은 복구 지침을 제공하며, 드라이브 데스크톱 앱 버전 85.0.13.0 이상에서 특별한 디버그 UI를 통한 파일 복구를 제안함.
     * 명령줄을 사용한 파일 복구 방법도 제시되었으며, 구글은 누락된 파일이 드라이브 캐시에 있을 것이라는 희망을 나타냄.
     * 구글은 문제가 해결되었다고 주장하며 관련 포럼 스레드를 170개의 답변 후에 잠그고, 추가 스레드를 ""중복""으로 표시하며 잠금.

사용자 피드백은 구글의 해결책이 효과가 없다고 지적

     * 스레드가 잠기기 전 몇몇 답변은 구글의 해결책이 효과가 없다고 제안함.
     * 사용자들은 ""해결책이 대부분의 사람들에게 효과가 없다""고 비판하고, ""구글 드라이브가 내 파일을 삭제했기 때문에 복구할 수 없다""고 주장함.
     * 드라이브 앱 데이터 폴더에 몇 달 된 파일 복사본이 있을 것이라는 생각은 믿기 어려움.

GN⁺의 의견

   이 기사에서 가장 중요한 것은 구글 드라이브 사용자들이 경험한 데이터 손실 문제와 구글의 대응 방식에 대한 것임. 사용자들은 구글이 제시한 해결책이 효과가 없다고 보고하고 있으며, 구글은 포럼에서의 의사소통을 차단함으로써 문제 해결보다는 PR 피해 최소화에 더 관심이 있는 것처럼 보임. 이 문제는 구글 드라이브가 신뢰성을 바탕으로 성장한 서비스인 만큼, 사용자들의 신뢰를 유지하기 위한 구글의 노력과 투명성이 중요함을 보여줌. 데이터 손실은 개인 사용자뿐만 아니라 비즈니스 사용자에게도 중대한 문제이기 때문에, 이 기사는 기술 서비스의 신뢰성과 대응 메커니즘에 대한 중요성을 강조하는 흥미로운 사례로 볼 수 있음.

   예전에 원드라이브 사용할 때도 데이터가 계속 한두개씩 사라져서 깊은 분노를 느낀 이후 NAS로 옮겼죠..
   인터넷에서는 NAS는 언제 터질지 모른다.. 대기업이 관리해주는 클라우드가 차라리 낫다.. 같은 의견이 많지만 5년 쓰면서 한 번도 그런 적 없네요~ 전기세도 얼마 안들고!

        Hacker News 의견

     * 문제 해결 방법에 대한 비판
          + 문제가 발생했을 때 블로그 포스트를 작성하여 상황을 설명하고, 영향을 받은 사람들과 그 정도, 해결 가능성, 조치 사항, 재발 방지 대책 등을 명확히 해야 함.
          + 구글 드라이브 데스크톱 클라이언트에 숨겨진 수정을 배포하는 것은 클라우드에서 파일이 사라진 문제에 대해 비논리적임.
          + 실제 데이터 손실이 발생했다면, 그 사실을 숨기려고 해서는 안 되며, 구글이 이 문제를 투명하게 인정하지 않는 것에 대해 의문을 제기함.
     * 클라우드 백업에 대한 의존성 지적
          + 사람들은 클라우드가 데이터를 잃어버리지 않을 것이라고 생각하지만, 실제로 데이터 손실이 발생할 수 있음을 간과함.
     * 구글 지원 서비스의 문제 제기
          + 구글 플레이 계정을 개설하려다가 신원 확인 이메일을 놓쳐 계정이 제한되고, 지원팀이 문제 해결에 도움이 되지 않는 경험을 공유함.
     * 구글 인프라 내의 버그 가능성
          + 구글 드라이브 데스크톱 앱을 사용하지 않은 사용자들도 데이터 손실을 경험했다는 보고가 있어, 구글 인프라 내부에 버그가 있을 수 있음을 시사함.
     * 개인 네트워크 저장장치(NAS)의 중요성 강조
          + 스트리밍 서비스에서 콘텐츠가 사라지거나 유튜브 비디오가 삭제되는 등의 문제로 인해 NAS의 중요성이 부각됨.
     * 구글의 대응에 대한 풍자
          + 구글이 '지옥의 운영자'에서 영감을 받은 것처럼 보임을 풍자적으로 언급함.
     * 구글 드라이브 사용 중 발생한 문제
          + 스마트폰 앱을 통해 이미지를 업로드한 후 데스크톱에서 찾아 다운로드하려 했지만, 파일이 존재하지 않는다는 메시지를 받은 경험을 공유함.
     * 파일 삭제 문제 확인
          + 3월에 일부 파일이 삭제된 것을 확인하고, 이전에 발표된 5백만 파일 제한이 없어진 것과 관련이 있을 수 있음을 추측함.
     * 클라우드 서비스의 신뢰성에 대한 의문
          + 클라우드가 결국 다른 사람의 컴퓨터이며, S3와 같은 서비스는 매우 안정적이라고 믿지만, 클라우드 컴퓨팅 비용이 비싸고 가격 경쟁력 있는 대안이나 온프레미스 솔루션이 필요함을 언급함.
"
"https://news.hada.io/topic?id=12250","Kagi Search – 유료 벽 기사 표시기 및 개선된 날씨 위젯","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Kagi Search – 유료 벽 기사 표시기 및 개선된 날씨 위젯

최신 업데이트 요약

     * 검색 결과에서 유료 기사 표시 기능 추가
     * 기본 단위 설정 기능 추가
     * 날씨 위젯 개선

버그 수정 및 개선 사항

     * 파이어폭스 및 크롬용 Kagi 검색 확장 프로그램 업데이트
     * 요약기 텍스트 포맷팅 및 복사 버튼 추가
     * 위키피디아 미리보기 기본 확장 옵션 추가
     * 검색 결과에 구글 지도 및 애플 지도 링크 추가
     * 요약기와 핵심 순간 비교 기능 개선

Kagi 어시스턴트

     * 인용구 스니펫 기능 추가
     * 어시스턴트 속도 및 신뢰성 향상
     * 긴 입력에 대한 414 오류 수정 작업 진행 중

GPT 4 Turbo 및 호주 지역 업데이트

     * GPT 4 Turbo Kagi 어시스턴트에 추가
     * 호주 시드니 데이터 센터 개선으로 호주 지역 대기 시간 감소
     * 판매세 부과 시작 예정

새로운 지역 및 기능

     * 남미 상파울루 데이터 센터 개설
     * 연간 검색 횟수 변경으로 유연성 증가
     * Kagi 통계 페이지 신설

Kagi 어시스턴트 베타

     * 어시스턴트 베타 버전 Ultimate 회원에게 제공
     * 다양한 AI 모드와 GPT-4, Claude-2 모델 사용

무제한 검색 제공

     * 월 $10에 무제한 검색 서비스 제공

렌즈 공유 기능

     * 다른 Kagi 사용자와 렌즈 공유 가능

Kagi Small Web 발표

     * 웹 인간화를 위한 Kagi Small Web 프로젝트 시작

새로운 결제 방법

     * PayPal, Venmo, iDEAL, Giropay, Bitcoin 및 Bitcoin Lightning 지원

Kagi 통계 업데이트

     * 해커 뉴스 및 Reddit 토론 지표 표시

GN⁺의 의견

   이 글에서 가장 중요한 것은 Kagi 검색 엔진의 지속적인 개선과 사용자 경험 향상을 위한 노력임. 최신 기술과 기능을 통해 사용자들에게 더 나은 검색 결과와 편의성을 제공하려는 Kagi의 의지가 흥미롭고, 이러한 변화가 사용자들에게 어떤 영향을 미칠지 주목할 만함.

        Hacker News 의견

     * 구글 대안을 찾던 한 사용자는 Kagi를 사용하게 되었음. 구글의 광고 가득한 검색 결과에 실망했으며, Kagi가 2011년의 구글 같은 느낌을 준다고 함. 사용자는 Kagi에서 도메인을 조합하여 '렌즈'를 만들어 특정 도메인들만 검색할 수 있으며, 이용자의 선호에 따라 검색 결과를 맞춤화할 수 있다고 함. 광고 없이 사용자 데이터를 판매하지 않는 점과 검색 결과의 질이 더 우수하다고 평가함.
     * Kagi에 대한 만족감을 표현한 또 다른 사용자는 검색 결과의 순위가 마음에 들고, 검색 대상이 검열되지 않는다고 함. 하지만 월 $5 결제에도 중간에 사용량이 끝나는 것에 대한 우려를 표현하며, $10 결제로 올릴지 고민 중임. 해커뉴스의 업데이트가 때때로 광고 같다고 느끼지만 Kagi의 성공을 바람.
     * 'Early Adopter'로 Kagi를 사용하는 한 사람은 구글보다 우수한 검색 결과에 만족하며, 구글 제품 하나를 더 줄일 수 있어 좋다고 함. 도메인 차단 및 선호 설정이 원활하며, Kagi의 Universal Summarizer와 FastGPT 등의 기능을 활용하고 있음. Kagi의 커뮤니티 포럼이 Discord가 아닌 개방적이고 색인 가능한 플랫폼으로 옮겨졌으면 한다고 바람.
     * Kagi에 대한 열렬한 찬사에 대해 의문을 제기하는 사용자도 있음. 100회 무료 검색을 제공받았지만 아직 사용하지 않았고, 드물게 사용할 서비스에 대해 월 구독료를 지불할 의향이 없음. 500회 검색에 $20 정액제가 있다면 이용할 의향이 있음.
     * 무료 체험 후 1년 구독을 결정한 사용자는 Bing보다 관련성 높은 결과와 빠른 인터페이스에 만족함. Kagi의 GPT 기반 문서 요약 기능을 유용하게 사용하고 있으며, MacOS 전용 웹브라우저 Orion도 추천함.
     * 약 2개월간 Kagi를 기본 검색 엔진으로 사용한 사용자는 광고 없이 검색 결과를 볼 수 있어 정신적 에너지를 절약할 수 있어 가치 있다고 느낌. 특정 검색에는 여전히 구글을 사용하지만, 사용자가 고객이 되어 광고주가 아닌 원칙을 유지하는 비즈니스 모델에 만족함.
     * 비영어 검색 경험에 대한 질문이 있음. 구글은 외국어 검색 시 너무 똑똑해지려 하고, 따옴표나 도메인 제한을 무시하는 등의 문제가 있어 사용하기 불편함. 구글은 예전처럼 노력하면 좋은 결과를 얻을 수 있었지만, 지금은 뉴스나 스팸, 관련 없는 '자동 수정' 결과만 보여줌.
     * Kagi를 기본 검색 엔진으로 한 달간 사용한 사용자는 구글보다 나은 검색 경험을 제공한다고 평가함. 구글 검색은 SEO에 의해 범람하고 있으며, 유용한 내용을 찾기 어려워짐. Kagi는 무의미한 기사를 덜 보여주고, 특정 도메인의 결과를 고정하거나 조정할 수 있는 '개인화된 결과' 기능이 마음에 듦.
     * Kagi를 사용하는 또 다른 사용자는 ublock이나 pihole에 의해 차단되지 않는 링크를 클릭할 수 있는 평화로운 마음을 가져다준다고 함.
     * Kagi 사용에 문제를 겪은 사용자는 구글을 사용하여 지역 커피숍 찾기, 리뷰 확인, 제품 구매 등 일상적인 검색에 의존함. Kagi는 연구에는 좋지만 일상적인 검색에는 그다지 적합하지 않다고 느낌.
"
"https://news.hada.io/topic?id=12282","미스트랄 AI, 20억 달러로 평가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          미스트랄 AI, 20억 달러로 평가

유럽 인공지능 분야의 주요 발전

     * 파리 기반 스타트업 Mistral AI가 €450백만의 투자를 유치하여 기업 가치가 $2억에 달함.
     * 투자 라운드를 주도한 Andreessen Horowitz를 비롯하여 Nvidia Corp와 Salesforce가 추가 투자에 참여함.
     * 이번 자본 유입은 Mistral AI의 혁신적 접근과 AI 산업에서의 잠재적 변화 가능성을 입증함.

기술 발전과 시장 영향

     * Mistral AI는 Mistral 7B라는 대형 언어 모델을 통해 혁신을 주도함.
     * Mistral 7B는 맞춤형 훈련, 튜닝, 데이터 처리 방법으로 AI 기술에서 중요한 진전을 나타냄.
     * Mistral 7B는 지식 압축 및 심층 추론 능력을 타 모델보다 적은 매개변수로 구현, 성능 향상 및 지속 가능성에 기여함.

유럽 AI 환경과 경쟁 우위

     * Mistral AI의 투자 유치는 유럽이 글로벌 AI 분야에서 빠르게 성장하고 있음을 나타냄.
     * Mistral AI는 오픈소스 접근 방식과 효율적인 모델 개발에 중점을 두어 OpenAI와 같은 기업들과 차별화됨.
     * 유럽의 AI 스타트업에 대한 대규모 투자는 지역이 경쟁적이고 빠르게 변화하는 인공지능 분야에서 자리매김하고 있음을 보여줌.

GN⁺의 의견

   이 기사에서 가장 중요한 것은 유럽 기반의 AI 스타트업 Mistral AI가 큰 투자를 유치하여 시장에서 주목받고 있다는 점이다. 이는 유럽이 글로벌 AI 분야에서 미국과 아시아에 이어 중요한 플레이어로 부상하고 있음을 시사한다. 특히 Mistral AI의 오픈소스 대형 언어 모델인 Mistral 7B는 성능과 효율성 면에서 혁신을 가져올 잠재력을 가지고 있어, 이 기사가 AI 기술에 관심 있는 사람들에게 흥미로울 것이다.

        Hacker News 의견

     * Mistral AI의 인기
          + LLM(Large Language Models)에 대한 과대평가가 많지만 Mistral의 7B 모델과 파생 모델들은 그 평가를 받을 만함.
          + Mistral의 다음 제품(상업 제품일 것으로 예상)과 MoE(Model of Expertise) 모델 세트(무료로 출시됨)에 대한 기대감.
          + 01.AI의 Yi-34B 모델도 주목할 만하며, Mac에서 로컬로 실행해본 결과 놀라운 성능을 보임.
     * Mistral AI의 오픈소스 전략
          + Mistral AI가 주목받은 이유 중 하나는 단기적인 수익성을 고려하지 않고 Mistral-7B를 오픈소스로 공개했기 때문.
          + AI 생태계 전체에 좋은 오픈소스 소프트웨어를 통해 비즈니스를 만들도록 인센티브를 제공하는 것이 중요함.
     * Nvidia의 자금 지원에 대한 의문
          + Nvidia가 회사들에게 자사 하드웨어 구매를 위한 자금을 제공하는 것이 높은 이윤을 남기는 의심스러운 평가 방식이라는 의견.
     * 유럽 스타트업에 대한 기대와 현실
          + 유럽 스타트업의 성공에 대한 기대감과 함께, 미국 벤처캐피탈에 대한 아쉬움을 표현.
     * Mistral의 잠재력과 지속 가능성
          + Mistral이 잠재력이 크지만 적절한 수익화 전략 없이는 장기적으로 지속 가능한 수익성을 달성하기 어려울 수 있음.
     * 기업 가치 평가에 대한 회의적인 시각
          + 기업 가치 평가가 의미가 없어지고 있으며, 투자자들이 자신들의 의제에 맞춰 높은 가치를 매기는 경우가 많음.
          + AI 분야에서의 자본 조달은 주로 클라우드/GPU 비용을 상쇄하기 위한 것임.
     * AI 산업의 자가 만족 문제
          + AI 산업이 마케팅에 의해 만들어진 함정에 빠지고 있음.
          + LLM은 흥미로운 장난감이지만, 구현이 자원 및 에너지 소모가 크고 불분명함.
          + 실제 문제 해결은 합리적 접근을 통해 이루어져야 함.
     * 유럽 스타트업의 경쟁력과 프라이버시
          + 유럽 스타트업이 주요 기업들과 성공적으로 경쟁하기를 바람.
          + OpenAI가 사용자 프롬프트를 기본적으로 훈련 데이터로 사용하는 것과 같은 프라이버시 침해가 표준이 되는 것을 원치 않음.
     * 비즈니스 모델에 대한 질문
          + 비즈니스 모델이 무엇인지에 대한 궁금증 표현.
     * Nvidia와 TSMC의 시장 지배력
          + AI 경쟁에서 Nvidia와 TSMC가 실질적인 경쟁자 없이 강력한 시장 지배력을 가지고 있음.
          + 누가 AI 경쟁에서 이기든, 그들의 GPU와 제조 공정이 필요함.
"
"https://news.hada.io/topic?id=12326","오늘, 가장 중대한 감시 투표 중 하나. FBI의 감시 활동 중단될까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                오늘, 가장 중대한 감시 투표 중 하나. FBI의 감시 활동 중단될까?

미국의 대규모 감시 투표

     * 미국 정치인들이 FISA ""개혁"" 법안인 2023년 FISA 개혁 및 재승인 법안(FRRA)에 대해 투표 예정.
     * 이 법안은 미국 및 비미국 시민에 대한 감시 가능성을 대폭 확대하는 내용 포함.
     * Mozilla, Tuta, Tor Project 등 프라이버시 중심 기업들이 FISA 702 감시 조치를 고착화하지 말 것을 정책 입안자들에게 촉구.

스노든 유출 사건 10년 후

     * 미국은 여전히 불법적인 감시 프로그램을 통해 미국 시민을 감시함.
     * FISA 702조는 미국 당국이 테러 공격을 방지하기 위해 외국인을 감시할 수 있도록 허용하지만, NSA가 수집한 대량의 미국 시민 데이터가 FBI에 의해 영장이나 상당한 이유 없이 남용됨.
     * 이러한 관행은 종료되어야 하며, FISA 702조는 재승인되어서는 안 됨.

공개 서한 요구사항

     * Tuta를 포함한 프라이버시 중심 기업들은 공동 서한을 통해 다음과 같이 명확히 함:
          + 의회는 NDAA를 통해 FISA 702의 재승인으로 감시 남용에 대한 백지 수표를 제공해서는 안 됨.
          + 의회는 강력한 감시 개혁 법안인 정부 감시 개혁 법안(GSRA) 또는 감시 자유 보호 및 영장 없는 감시 종료 법안(PLEWSA)을 통과시켜야 함.
          + 하원 및 상원 정보위원회 법안과 같은 조치는 감시 남용의 현 상태를 고착화하고 확대할 뿐임.

FISA 702조에 반대하는 공개 서한

     * 인터넷 기반 제품 및 서비스 제공업체들로 구성된 그룹이 의회에 서한을 보내며 다음을 지지함:
          + 일관된 감시 남용에 대한 초당적 우려를 효과적으로 해결하는 입법안 지지.
          + 감시 자유 보호 및 영장 없는 감시 종료 법안을 칭찬하며, 이 법안을 더욱 강화할 것을 권장.
          + 국방수권법을 통한 702조의 재승인은 감시 남용에 대한 고무적인 승인이 될 것이며, 이에 강력히 반대함.
          + 디지털 제품 및 서비스 제공자로서 고객의 신뢰에 의존하며, 감시 남용이 입법에서 해결되지 않으면 인터넷의 경제적 및 사회적 힘이 약화될 것임.
          + 현재 입법 논의는 FISA 702조의 임박한 만료에 의해 촉발되었지만, 정부의 감시 방법에 대한 적절한 감독과 책임성 부재를 포함한 유사한 문제를 해결하는 진정한 개혁안이 필요함.
          + 감시 자유 보호 및 영장 없는 감시 종료 법안은 중요한 개선을 이룰 것이며, 특히 미국인에 대한 702 감시에 대한 철저한 영장 요구 사항을 포함함.
          + 법안에 대한 투명성과 책임성을 강화하는 것을 고려해야 함.

GN⁺의 의견

     * 이 기사는 미국 내에서 진행되고 있는 감시 관련 법안의 중요성을 강조함.
     * 프라이버시를 중시하는 기업들이 공동으로 감시 남용에 반대하는 목소리를 내는 것은 시민의 권리 보호와 디지털 경제의 신뢰성에 중요한 영향을 미칠 수 있음.
     * 이러한 논의는 인터넷 사용자의 프라이버시와 관련된 법적 및 정책적 변화에 대한 관심을 불러일으키며, 개인 정보 보호와 관련된 기술적 대응책에 대한 중요성을 부각시킴.

        Hacker News 의견

     * 정부 감시 투명성 법안에 대한 희망
          + 한 사용자는 정부 감시 투명성 법안이 실제로 효과를 발휘하기를 바람. 이 법안이 통과되면 감시 영장의 사용 빈도와 권력자들의 책임성에 대한 통찰력을 얻을 수 있을 것으로 기대함.
          + 소프트웨어 엔지니어로서 해당 사용자는 감시 프로그램의 효과를 측정할 수 있는 다양한 지표를 보고 싶어함. 예를 들어, 테러 음모 저지 횟수, 감시 프로그램 비용, 경미한 범죄 적발 횟수, 권력 남용 분석가 수, 미국인 및 전 세계 프로필 수, 불법 이민 적발 횟수 등을 시간별로 나타내는 막대 그래프를 원함.
     * 섹션 702에 반대하는 기업들에 대한 주의
          + 마이크로소프트, 구글, 애플과 같은 대형 기업들이 섹션 702에 반대하지 않는 것에 주목해야 한다는 의견 제시. 이들 기업이 플랫폼의 프라이버시에 진정으로 관심이 있다면, 투표 전에 이를 분명히 했어야 한다는 지적.
     * 대규모 감시와 자유의 상충
          + 대규모 감시가 자유에 반하는 것이지만, 구체적이고 직접적인 피해를 식별하기 어려움. 감시 체계가 비밀 유지와 내부 통제를 잘 활용하여 일상생활에 미치는 영향을 제한하고 있음. 실제 피해를 찾거나 사람들이 이 문제에 관심을 가지게 하는 방법에 대한 질문 제기.
     * 미국 시민에 대한 무단 감시
          + 미국 시민을 영장 없이 감시하는 것을 의미하는지에 대한 질문.
     * 자유의 땅에서의 감시
          + 미국을 '자유의 땅'이라고 칭하면서도 감시가 이루어지고 있음을 비꼬는 댓글.
     * Betteridge의 법칙
          + 질문으로 끝나는 모든 헤드라인은 ""아니오""로 대답할 수 있다는 Betteridge의 법칙을 언급.
     * 정부의 편집증적 행동
          + 정부가 편집증적으로 행동하며, 어떤 불가능한 사건이라도 감시를 정당화하기 위한 명분으로 사용한다는 의견.
     * 투표의 중요성과 FBI의 행동
          + 실제로 투표가 중요한지, FBI가 위헌적인 행동을 멈출지에 대한 의문 제기. 대답은 부정적임을 암시.
"
"https://news.hada.io/topic?id=12345","Mozilla, Android용 Firefox의 확장 기능 지원 확대","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Mozilla, Android용 Firefox의 확장 기능 지원 확대

     * 모질라가 안드로이드용 파이어폭스 사용자를 위해 450개 이상의 새로운 확장 프로그램을 AMO(Android용 Addons.mozilla.org) 페이지에서 출시함.
     * 이번 출시는 모바일에서 개방형 확장 프로그램 생태계의 시작을 알리며, 개발자들은 확장 프로그램을 자유롭게 만들고 배포할 수 있고, 사용자들은 쉽게 설치할 수 있음.
     * 파이어폭스의 엔지니어링 부사장인 Vicky Chin은 개인의 인터넷 경험을 맞춤화하기 위해 확장 프로그램이 처음 만들어졌다고 언급하며, 안드로이드용 파이어폭스에서 이 경험을 제공하게 되어 기쁘다고 전함.

개방형 확장 프로그램 생태계로의 여정

     * 브라우저 확장 프로그램은 많은 사람들의 일상적인 인터넷 경험에 필수적인 부분이 되었음.
     * 파이어폭스 데스크톱 사용자의 거의 절반은 온라인 경험을 맞춤화하기 위해 확장 프로그램을 설치함.
     * 모질라는 모든 사람을 위한 개방적이고 접근 가능한 인터넷을 위한 미션을 바탕으로 독립적인 개발자 커뮤니티와 협력하여 확장 프로그램을 제공함.
     * 안드로이드 생태계는 데스크톱 확장 프로그램만큼의 다양한 콘텐츠를 개발하는 데 시간이 걸리겠지만, 이미 몇몇 주요 데스크톱 확장 프로그램이 안드로이드용 파이어폭스에서 사용 가능함.

이동 중에 도움이 되는 확장 프로그램

     * 모바일 기기는 빠른 정보 검색, 기사 읽기, 음악 듣기, 레시피 찾기 등 많은 것에 의존함.
     * 간단하고 예측 가능하며 집중할 수 있는 경험의 가치를 이해함.
     * Midnight Lizard, Dark Background and Light Text, Worldwide Radio와 같은 확장 프로그램이 오늘 사용 가능함.

개발자 커뮤니티에 감사

     * 안드로이드용 파이어폭스에서 개방형 확장 프로그램 생태계 출시를 위해 확장 프로그램을 호환 가능하게 만든 모든 개발자들에게 감사함.
     * 수백 명의 개발자가 웨비나에 참여하여 이 프로젝트에 창의적인 에너지를 불어넣음.
     * 파이어폭스의 엔지니어링 디렉터인 Giorgio Natili는 혁신의 기회가 매우 크다고 언급하며, 개발자들이 안드로이드용 파이어폭스 사용자를 위한 새로운 브라우징 경험과 기능을 만들어내는 것을 보는 것이 흥미롭다고 전함.

GN⁺의 의견

     * 이번 업데이트는 사용자가 자신의 모바일 인터넷 경험을 개인화할 수 있는 새로운 기회를 제공함.
     * 개방형 확장 프로그램 생태계는 사용자와 개발자 모두에게 창의적인 가능성을 열어주며, 이는 파이어폭스가 다른 브라우저와 차별화되는 중요한 특징임.
     * 안드로이드용 파이어폭스의 확장 프로그램 출시는 사용자들이 보다 편리하고 개인화된 모바일 웹 경험을 할 수 있게 하여 흥미로운 발전임.

        Hacker News 의견

     * 안드로이드와 호환되는 것으로 개발자가 표시한 모든 확장 프로그램이 이제 AMO(Add-ons Mozilla Org)에 표시됨. 데스크톱 모드로 전환하면 AMO의 다른 확장 프로그램도 설치 가능함. 안드로이드용 파이어폭스는 처음부터 애드온을 지원했으나, 2020년 UI를 다시 쓰기로 결정하면서 확장 지원에 대한 재구현 시간이 필요했음. 그럼에도 불구하고, 안드로이드용 파이어폭스 재작성 시 확장 지원을 숨긴 채로 출시함. 처음부터 uBlock Origin과 같은 중요한 확장 프로그램을 포함해 추천 확장 목록에 소수만 활성화되었고, 시간이 지나면서 점진적으로 추가됨. Nightly 버전이나 Fennec F-Droid(안정적인 파이어폭스의 재구축 버전)에서는 사용자 지정 확장 컬렉션을 활성화할 수 있는 기능이 거의 처음부터 있었으며, 대부분의 확장 프로그램이 수년간 잘 작동함. 그럼에도 왜 이
       기능이 오랫동안 지연되었는지는 의문임.
     * 안드로이드용 파이어폭스가 애드온 지원과 함께 존재하는 것에 대해 감사함을 표함. uBlock과 함께 사용하는 것이 모바일 경험을 견딜 수 있게 만듦.
     * 안드로이드용 파이어폭스가 드디어 안정 버전에서 확장 프로그램을 지원하게 되어 기쁨. 'I still don't care about cookies', 'ublock origin', 'dark reader'와 같은 확장 프로그램은 모바일 웹을 실용적으로 만듦. 파이어폭스의 브라우저 점유율은 약 2-3%에 불과하지만, 개인 정보 보호와 광고 차단에 있어 최선의 선택이므로 사용을 고려해볼 것을 권장함.
     * 안드로이드용 파이어폭스에서 탭의 총 수를 제한하는 확장 프로그램을 추천해달라는 요청. 데스크톱에서는 'Limit Tabs'가 잘 작동하지만, 안드로이드에서는 아직 사용할 수 없음.
     * 다른 모든 확장 프로그램을 지원하는 브라우저처럼 자체 서명된 확장 프로그램을 허용해야 한다는 의견.
     * 크롬/크로미움에서 파이어폭스로 전환한 이유 중 하나는 안드로이드에서 uBlock과 파이어폭스가 작동하기 때문임. Kiwi Browser를 사용해본 경험이 있지만, 광고 차단 없이 웹을 탐색하는 경험은 견딜 수 없었음. 아직 데스크톱에서는 크롬을 사용 중이지만, 그것도 변할 수 있음.
     * 이제 특정 도메인에 대한 쿠키를 자동으로 삭제하는 확장 프로그램을 설치할 수 있게 됨. 이 기능은 데스크톱 버전의 파이어폭스에는 있지만 모바일 버전에는 없었음.
     * 파이어폭스 확장 프로그램 덕분에 장치가 다크 모드로 전환되면 해커뉴스를 포함한 거의 모든 웹사이트에서 자동으로 다크 모드가 적용됨. 보통 이 기능은 웹사이트 CSS에서 명시적으로 지원해야 함.
     * iOS에서 확장 프로그램(또는 자체 엔진 등)을 제대로 지원하기 위해 더욱 노력해야 한다는 의견.
     * uBlock Origin 다음으로 중요한 확장 프로그램은 'Multi-Account-Containers'임. 이를 통해 브라우징 컨텍스트 간에 적절한 격리가 가능해져서, 프로그레시브 웹 앱(PWA)을 실제로 사용 가능하고 네이티브 앱에 대한 좋은 대안으로 만듦. 현재 PWA는 브라우저로 쿠키를 유출하기 때문에, 브라우저에서 '익명으로' 탐색하는 동안 PWA에 로그인할 수 없음.
"
"https://news.hada.io/topic?id=12275","OpenAPI 스펙을 SDK로 만들어주는 CLI도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      OpenAPI 스펙을 SDK로 만들어주는 CLI도구
"
"https://news.hada.io/topic?id=12226","플레이스테이션, 디지털 소유권의 불편함을 계속 상기시켜","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     플레이스테이션, 디지털 소유권의 불편함을 계속 상기시켜

디지털 소유권의 불안정성

     * 소니가 최근 디지털 ""소유권""의 불안정성을 상기시키는 두 가지 사례를 제공함.
     * 지난주 소니는 라이선스 ""계약""으로 인해 사용자들이 구매한 Discovery 콘텐츠를 더 이상 볼 수 없으며, 2023년 12월 31일부터 라이브러리에서 해당 콘텐츠가 제거될 것이라고 발표함.
     * 월요일에는 많은 사용자들이 예상치 못한 PlayStation Network 계정 정지를 경험하여, 멀티플레이어 게임이나 클라우드 스트리밍은 물론, 소니 PlayStation 마켓플레이스에서 디지털로 구매한 게임에 대한 접근도 차단됨.

디지털 ""소유""의 허망함

     * 디지털 콘텐츠의 다운로드와 접근이 물리적 복사본을 구매하기 위해 매장에 가는 것보다 쉽지만, 플랫폼 소유자가 디지털 스토어프론트, 그 콘텐츠, 그리고 계정 시스템을 유지 관리하는 데 대한 신뢰가 필요함.
     * 최근 닌텐도의 Wii U와 3DS eShop 폐쇄는 회사가 디지털 콘텐츠 구매를 결정할 수 있는 권력을 가지고 있음을 상기시켜 줌.
     * 구글이 Stadia를 폐쇄했을 때처럼, 디지털 콘텐츠 구매가 장기적으로는 대여에 가까울 수 있음을 보여줌.

GN⁺의 의견

     * 이 기사는 디지털 콘텐츠 소유권의 불확실성에 대해 중요한 사례를 제공함.
     * 소니의 최근 행동은 사용자들이 디지털 콘텐츠에 대한 실제 소유권을 갖고 있지 않다는 사실을 강조함.
     * 이러한 사례들은 소비자들에게 플랫폼에 대한 신뢰와 디지털 대 물리적 구매 선택에 대해 다시 생각하게 만듦, 이는 많은 사람들에게 흥미로운 주제임.
"
"https://news.hada.io/topic?id=12231","Loco - 사이드 프로젝트와 스타트업을 위한 1인 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Loco - 사이드 프로젝트와 스타트업을 위한 1인 프레임워크

     * 1인 팀을 만들기 위한 기능들을 모두 제공 : 서비스, 데이터, 이메일, 백그라운드 작업, 태스크, CLI 등
     * Rust 를 이용하여 구현한 Rails 컨셉
     * 1인 개발자에게 최적화 되었지만 쉽게 스케일 가능 : 필요에 따라 Loco를 분할, 재구성 또는 일부만 사용 가능
     * SaaS 템플릿 앱 제공
          + 손쉽게 CRUD API 추가
          + JWT 기반의 사용자 인증 포함

   rust를 할 줄 알아야 하는군요
"
"https://news.hada.io/topic?id=12245","Fairphone 5: 10점 만점을 유지할 수 있을까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Fairphone 5: 10점 만점을 유지할 수 있을까?

Fairphone 5 분해: 여전히 10/10일까?

     * Fairphone 5의 분해 과정은 전작과 유사하며, 모듈성과 주요 부품의 쉬운 접근성이 특징임.
     * 새로운 OLED 화면과 업그레이드된 카메라 외에도, 더 나은 방수 등급과 배터리 용량 증가가 눈에 띔.

개선된 개방성

     * 플라스틱 뒷면 커버를 분리하는 초기 개방 절차는 동일하며, Fairphone 4 대비 변경된 외형과 나노 코팅 두께 증가로 방수 등급이 소폭 향상됨.
     * 배터리는 이전 모델보다 더 많은 공간을 차지하며, 용량이 4200mAh로 증가함.

사소하지만 신중한 개선

     * 수리 시 편의성을 높이기 위한 개선 사항이 있으며, 상단 모듈의 커넥터 커버가 분리되지 않도록 모듈에 연결됨.
     * 카메라는 개별적으로 교체 가능하며, USB-C 포트 교체도 더 간단해짐.

핵심 변경 사항

     * 내부의 주요 변경 사항은 표면적인 부품을 제거하면 바로 보이며, Fairphone 4 스타일의 코어 모듈 대신, 안드로이드 폰에서 흔히 보는 메인보드와 딸 보드의 분리된 구조를 채택함.
     * 이 변경은 배터리 공간 확보를 위한 것으로, 새로운 레이아웃은 실수로 연결을 끊어서는 안 되는 부분에 대한 추가적인 주의를 요구함.

스냅드래곤을 넘어서

     * Fairphone 5는 하드웨어뿐만 아니라 소프트웨어 지속성에 대한 약속으로 내구성을 보여줌.
     * 5개의 안드로이드 버전 업그레이드와 최소 8년의 보안 업데이트를 약속하며, 목표는 10년임.
     * Qualcomm의 QCM6490 SoC를 사용하여 산업 및 상업 IoT 애플리케이션용으로 설계되었으며, 장기간 지원을 제공함.

10/10을 유지하기

     * Fairphone 5는 이전 모델의 장점을 유지하고 수리 경험을 개선한 몇 가지 잘 생각된 개선 사항을 추가함.
     * 모듈식 디자인과 핵심 부품에 대한 쉬운 접근성, 합리적인 가격의 교체 부품을 제공하며, 필요한 수리 정보도 제공함.
     * 메인보드와 딸 보드의 새로운 레이아웃은 전통적일 수 있지만, 전반적인 수리 가능성에 영향을 주지 않음.

GN⁺의 의견

     * Fairphone 5의 가장 중요한 특징은 수리 가능성과 소프트웨어 지속성에 대한 강한 약속임.
     * 이 기사는 특히 지속 가능한 기술과 사용자의 수리 권리에 관심이 있는 사람들에게 흥미로울 것임.
     * Fairphone의 지속 가능한 접근 방식과 장기간 지원 약속은 소비자들에게 더 나은 선택을 할 수 있는 기회를 제공하며, 이는 기술 산업에서 중요한 변화를 이끌 수 있는 잠재력을 가지고 있음.

        Hacker News 의견

     * Fairphone 5 사용자의 긍정적인 경험
          + Fairphone 5에 대한 만족감 표현: 스마트폰이 고품질이며 빠른 성능을 제공함
          + 이전 모델(Fairphone 2) 대비 큰 개선을 느낌
          + 아이폰에서 전환한 사용자로서 안드로이드의 프로그래밍 가능성에 만족함 (Termux를 통한 유닉스 배포판 실행, Tasker로 이벤트 기반 파이썬 스크립트 실행 등)
     * 스마트폰의 빠른 노후화에 대한 우려
          + 스마트폰이 3년마다 구식이 되어 새로 구매해야 하는 현실에 대한 불만
          + Framework 노트북을 구매하고 성공적으로 업그레이드한 경험 공유
          + 시간이 지나면서 업그레이드 가능한 스마트폰에 대한 관심 표현
     * Fairphone의 지속 가능성 노력에 대한 호평
          + Fairphone 웹사이트에서 코발트 크레딧 구매를 통해 DRC(콩고민주공화국)의 코발트 광산 노동자들의 근무 환경 개선 지원
          + 관련된 지속 가능성 노력에 대한 추가 정보 제공
     * Fairphone의 모듈 업그레이드 가능성에 대한 오해
          + Fairphone의 모듈이 시간이 지나면서 호환되지 않을 수 있다는 점에 대한 실망
          + 여전히 수리 가능성이 높은 것은 긍정적이지만, 3년마다 새로운 폰을 구매해야 한다는 점에 대한 아쉬움
     * Fairphone 구매를 고려하다가 보류한 사용자의 경험
          + 무선 충전 기능 부재, 카메라 품질, 액세서리 가격 등에 대한 우려로 구매를 보류함
          + Framework 노트북에 대한 만족감과 비교하며 지속 가능성에 대한 지지와 한계에 대한 의견 표현
     * Fairphone의 크기에 대한 불만
          + Fairphone의 크기가 너무 커서 일상 사용에 부적합하다고 느낌
          + 더 작은 버전의 제작을 희망함
     * Fairphone 3 사용자의 부정적인 경험
          + 비싼 가격에도 불구하고 18개월 만에 고장남
          + 수리 가능성에 대한 기대와 달리 메인 보드 교체 비용과 재고 부족으로 인해 새 폰 구매로 결정함
     * Fairphone의 가격 대비 가치에 대한 의문
          + 같은 가격으로 3년마다 새 폰을 구매하는 것이 더 나을 수 있음
     * Fairphone의 부품 교체 가능성에 대한 비판
          + 메인보드와 메인 프레임이 분리되지 않아 수리 가능성에 제한을 느낌
          + 알루미늄 프레임의 쉬운 손상과 교체 불가능성으로 인해 케이스 사용이 필요함
"
"https://news.hada.io/topic?id=12352","QA 팀을 해체한 것이 잘못된 결정이었을지도 모른다는 지적","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    QA 팀을 해체한 것이 잘못된 결정이었을지도 모른다는 지적

QA 팀을 없애는 것이 실제로 나쁜 결정이었을 수도 있다

     * 소프트웨어 배포의 가장 느린 부분은 테스팅임. 연속적인 배포가 존재하는 이유가 테스팅이기 때문에, 이것이 병목 지점이 되는 것은 최적화된 상태로 간주됨.
     * 최적화의 습관과 행동은 QA 팀을 병목 지점으로 보고 이를 제거하려는 산업의 경향으로 이어짐. 이로 인해 QA 역할에 대한 존중이 감소하고, 질 좋은 소프트웨어를 생산하지 못하는 문제가 발생함.
     * 개발자들은 소프트웨어 품질 관리를 제대로 파악하지 못함. 많은 조직들이 소프트웨어 품질에 대한 책임 소재를 모르고 있으며, QA 기능을 유지한 곳들도 이를 위한 자리를 찾는 데 어려움을 겪음.

소프트웨어 실천에서 품질을 관리하기 위해 해야 할 일

     * 결함 추적: 사용자가 버그에 대한 정보를 제공하고 개발자가 버그를 기록할 수 있는 방법이 필요함.
     * 트리아주: 버그 트리아주는 버그를 할당, 우선순위 지정, 정리, 분류, 중복 제거 등을 관리하는 과정임.
     * 결함 조사: 버그를 재현하는 것은 버그 관리의 중요한 부분으로, 실제 문제를 파악하고 해결하기 위한 엔지니어링 노력이 필요함.
     * 집중: 품질에 집중하는 사람들이 회사에 있어야 하며, 품질과 속도 사이의 균형을 위해 품질을 옹호하는 사람이 필요함.
     * 엔드 투 엔드 테스팅: 시스템의 소유권 문제는 복잡한 아키텍처로 인해 발생하며, 이는 제품 출시 전 실제 사용 테스트의 부재로 이어짐.

GN⁺의 의견

     * QA 팀을 없애는 것은 장기적으로 볼 때 소프트웨어 품질에 심각한 영향을 미칠 수 있는 관리상의 실수임.
     * 소프트웨어 개발 과정에서 품질 보증은 중요한 업무이며, 이를 무시하거나 경시하는 태도는 결국 실패로 이어질 수 있음.
     * 이 기사는 소프트웨어 산업 내에서 QA의 중요성을 재조명하고, 품질 관리에 대한 적절한 인식과 조직 내에서의 역할 분담의 필요성을 강조하는 데 흥미로움을 제공함.

        Hacker News 의견

     * 1970년대 후반 IBM에서 제품 보증 업무를 담당하며, 담당 제품(워드 프로세싱 시스템)의 테스트 코드 작성 및 하드웨어 구축을 했음. 개발팀에게는 테스트 케이스를 구체적으로 공개하지 않고 일반적인 문제점만 전달하여 버그 수정을 유도했음. 이 방식으로 발견한 버그와 개발팀이 수정한 버그 간의 불일치를 통해 남은 버그의 추정치를 통계적으로 계산할 수 있었음.
     * QA 팀이 없는 조직에서는 '스니프 테스트'라는 개념을 도입했음. 이는 회사의 모든 사람이 새 기능을 짧은 시간(보통 1시간) 동안 집중적으로 테스트하는 세션으로, 많은 버그 티켓을 생성하는 결과를 가져왔음. 간단한 테스트들이 문제를 일으키는 경우가 많았지만, 이제는 더 이상 놀랍지 않음.
     * 15-20년 전에 일했던 두 회사는 최고 수준의 QA 팀에 투자했으며, 이들은 개발자들이 생각하지 못한 버그를 찾아내는 데 뛰어난 능력을 보였음. QA 팀이 제품 출시 여부를 결정하는 최종 권한을 가졌음. 현재 많은 회사들은 개발자가 자동화된 테스트를 작성하고 코드 커버리지에 많은 시간을 소비하는 것이 더 나은 방법이라고 생각하지만, 실제로 작동하지 않는 제품을 많이 보았음. 자동화된 테스트가 나쁘다는 것이 아니라, 인간 QA 테스터를 없애는 것에 대한 문제 제기임.
     * 조직에서 가장 양심적인 직원들은 종종 가장 불만을 가지고 있음. 그들은 품질 문제를 인식하고 해결하려 하지만 인정받지 못하며, 품질에 대해 말하면 느리게 움직이려는 사람으로 취급받음. '빠르게 움직이고 물건을 부수는' 사람들이 계속해서 보상을 받는 동안, 그들은 뒤처리하는 데 화를 내며, 조직 내에서 신경 쓰는 것이 커리어에 해가 될 수 있음을 느낌.
     * QA는 비즈니스와 상위 경영진에 의해 '비용 센터'로 간주되는 경향이 있음. '비용 센터'로 여겨지는 부서에서 일하는 것은 피해야 한다는 가설이 있으며, 보상과 인정은 항상 수익을 창출하는 사람들에게 돌아감. QA는 더 많은 일을 더 적은 인원으로 해야 하고, 실패에 대해 비난받으며, 비즈니스가 슬림해져야 할 때 해고되는 첫 번째 장소가 될 수 있음.
     * QA 엔지니어들은 뛰어난 디버깅 능력을 가지고 있음. 그들은 파이프라인, 소스 코드, 테스트 디렉토리 등 애플리케이션의 모든 측면에서 작업하며, 종종 소프트웨어 엔지니어들이 파이프라인 오류 메시지를 읽지 않고, 기본 문제를 무시하며, 해결책을 추측하는 데 날을 보냄. QA 엔지니어에 대한 무시는 기사에서 과장된 것이 아니며, QA 조직이 엔지니어링 조직만큼 엄격한 면접 과정을 거치지 않기 때문에 QA 엔지니어들은 열등하게 여겨짐.
     * 개인적인 경험에 따르면, 실제로 엔지니어링을 위한 테스트를 작성하는 QA 팀을 만나본 적이 없음. 대부분의 QA 팀은 '테스트 계획'을 수동으로, 또는 드물게 자동화된 브라우저/장치 테스트를 통해 실행함. 이러한 테스트 유형은 가치가 있지만, '단위 테스트'나 '통합 테스트'만큼은 아님. 이 모델에서는 실제 QA 팀보다 엔지니어링 팀이 실제로 QA 역할을 하게 되며, QA 팀은 종종 버그가 아닌 것을 버그로 찾아내어 가치를 떨어뜨림.
     * 마이크로소프트는 QA 팀을 없앤 이후 윈도우와 클라우드 제품에서 더 많은 버그가 발생하는 것을 목격함.
"
"https://news.hada.io/topic?id=12295","Beeper Mini의 귀환","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Beeper Mini의 귀환

     * Beeper Mini의 업데이트 버전이 출시되어 안드로이드에서 iMessage로의 메시지 전송 및 수신 문제를 해결
     * 새로운 기능 개선으로 채팅이 마지막 읽지 않은 메시지에서 열리고, 비디오 플레이어가 개선됨
     * Beeper를 무료로 사용할 수 있게 변경함. 상황이 안정되면 구독을 다시 고려할 예정임
     * Beeper Mini의 보안과 개인 정보 보호는 이전과 동일하며, 기기에서 끝까지 암호화됨
     * 전화번호 등록 기능이 아직 작동하지 않아 모든 사용자는 AppleID로 로그인해야 함
     * Play Store 순위가 급격히 하락했으므로 좋은 리뷰를 남겨주면 도움이 됨

Beeper Mini에 무슨 일이 있었나

     * Beeper Mini는 화요일에 출시되어 Play Store 차트 상위 20위에 올랐으며, 역사상 가장 빠르게 성장한 유료 Android 애플리케이션으로 기록됨
     * Android와 iPhone 사용자가 고품질 이미지/비디오, 암호화, 이모티콘, 타이핑 상태, 읽음 확인 등의 현대적인 채팅 기능으로 함께 채팅할 수 있는 것이 성공의 이유임
     * 금요일에 메시지 전송 및 수신 문제가 보고되었고, Beeper Mini를 다시 작동시키기 위해 팀이 노력함
     * Beeper Cloud 사용자는 이제 문제 없이 메시지를 전송하고 수신할 수 있음
     * Beeper Mini 업데이트가 출시되어 사용자가 로그인하고 메시지를 전송 및 수신할 수 있게 됨

Apple의 입장

     * Apple은 iMessage에 가짜 자격증명을 이용하는 기술을 차단하여 사용자를 보호한다고 발표함
     * 이러한 기술은 메타데이터 노출, 원치 않는 메시지, 스팸, 피싱 공격의 위험을 증가시킬 수 있음
     * Beeper Mini는 Android와 iPhone 사용자 간의 통신을 더 안전하게 만들었다고 주장함
     * Beeper Mini는 iPhone 사용자가 Android 사용자에게 암호화되지 않은 SMS 메시지를 보내는 문제를 해결함
     * Beeper는 채팅의 보안과 소비자 선택권을 강화하기 위해 노력 중임
     * Beeper Mini의 보안과 개인 정보 보호에 대한 Apple의 주장에 대해 Beeper는 이견을 제시함
     * Beeper Mini는 암호화되어 있으며, 연결 방법은 오픈 소스로 누구나 검토할 수 있음
     * Beeper는 앱의 보안과 개인 정보 보호에 대한 헌신을 더욱 강화하고자 함

   애플 입장이 이해가 가지 않는 건 아니지만, 창이 이기면 재미있을 것 같네요.

   Beeper Mini - 안드로이드에서 iMessage를 사용하게 해주는 써드파티 앱
   애플, 안드로이드용 iMessage 클라이언트 ""Beeper Mini"" 차단

   창과 방패의 싸움처럼 되어 가는 것 같은데.. 과연 어찌 될려나요.

        Hacker News 의견

     * 메시지 앱의 사용자 경험 문제
          + 메시지가 이메일 주소를 통해 전송되고 수신될 수 있음.
          + 아이폰 사용자가 안드로이드 전화번호를 기존 iMessage 암호화 그룹 채팅에 추가하면, 메시지 앱이 기본적으로 전체 그룹 채팅을 암호화되지 않은 SMS로 전환함.
          + 단일 비애플 기기를 포함하여 그룹 채팅을 시작하면, 그룹 MMS로 전환되어 애플 ID 이메일 주소로 추가된 사람들이 이메일로 메시지를 받게 됨.
          + 메시지가 MMS로 전환될 때, 이메일 주소와 전화번호를 명확히 구분해야 함.
     * AOL/MSN 채팅 전쟁의 역사
          + AOL이 자체 클라이언트의 버퍼 취약점을 프로토콜의 일부로 만들어 ""승리""함.
          + 나중에 법원이 타임 워너 합병의 일환으로 메시징 상호운용성을 요구했으나, AOL은 이를 구현하지 않음.
     * Beeper Mini에 대한 사용자의 인내심 문제
          + 많은 사용자들이 Beeper Mini를 사용하는 것에 대해 주저할 것으로 예상됨.
          + 애플의 벽돌 정원을 뚫는 것에 대한 사용자의 인내심이 낮을 것임.
     * iOS의 기본 메시지 앱에 대한 오해
          + iOS는 타사 메시징 및 VoIP 앱을 시스템에 통합할 수 있는 API를 제공함.
          + 연락처 앱에서 메시지와 통화 옵션이 최상위 옵션으로 제시되며, 타사 옵션도 애플의 기본 앱과 동등하게 취급됨.
     * 애플의 벽돌 정원을 뚫으려는 집착 문제
          + 이미 Signal이나 WhatsApp과 같은 안전한 크로스 플랫폼 메시징 서비스가 존재함.
          + 이는 이미 해결된 문제이며, 새로운 솔루션을 필요로 하지 않음.
     * Beeper의 최선의 결과에 대한 궁금증
          + 애플이 타사 iMessage 클라이언트를 허용하지 않을 것이 명백함.
          + Beeper가 애플의 차단 예산을 소진하고 법적 조치를 피한 후에도, 애플이 안드로이드용 공식 iMessage 클라이언트를 출시할 가능성이 높음.
     * iMessage에 대한 시각의 사회적 네트워크 의존성
          + 미국 내 청소년들을 포함한 일부 사용자들은 iMessage를 사용하지 않으면 불이익을 겪을 수 있음.
          + 애플이 이를 이용하여 제품 구매를 강요하는 것은 반경쟁적이고 비도덕적임.
     * Beeper의 무료 사용 전략에 대한 의문
          + Beeper가 무료로 제공되면서 Play Store 순위가 급격히 하락함.
          + 애플과의 지속적인 고양이와 쥐 게임이 예상되며, 이러한 서비스를 사용하거나 지불하려는 사용자가 적을 것임.
     * 모든 당사자에 의한 소소한 행동
          + 이미 보편적인 앱이 존재하므로 새로운 앱에 대한 필요성이 낮음.
          + 기술적으로 많은 옵션이 있음에도 불구하고 채팅 앱을 둘러싼 싸움은 단지 주목을 끌기 위한 멜로드라마임.
     * 안드로이드와 아이폰 사용자 간의 고품질 채팅 욕구
          + 이미 고품질 이미지/비디오, 암호화, 이모지, 입력 상태, 읽음 확인 등의 기능을 제공하는 다양한 채팅 앱이 존재함.
          + 사용자들이 절실히 원하는 것으로 보이지 않으며, 기존 채팅 앱들은 내일 작동을 멈추지 않을 것임.
"
"https://news.hada.io/topic?id=12240","리튬 "부족" 거품의 또 다시 붕괴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          리튬 ""부족"" 거품의 또 다시 붕괴

리튬 ""부족"" 거품 붕괴, 가격 1년 만에 77% 하락

     * 리튬 가격이 상하이에서 거래되며 벤치마크로 사용되는 배터리 등급 리튬 카보네이트의 현물 가격이 1년 전 정점 대비 77% 하락함.
     * 2020년 8월 톤당 CNY 39,500에서 2022년 11월 CNY 600,000까지 1,410% 급증한 후, 리튬 부족이라는 추측이 나왔으나, 고가로 인해 새로운 생산이 온라인에 등장함.
     * 새로운 생산으로 인해 리튬 과잉이라는 새로운 이야기가 나오면서 가격이 급락함.

미국, 주요 리튬 생산국으로 부상할 수도

     * 스타더스트 파워라는 스타트업이 SPAC과 합병을 통해 상장할 예정이며, 이를 통해 첫 리튬 정제소를 건설할 계획임.
     * 리튬은 전 세계적으로 풍부하며, 특히 미국에서도 발견되어 전기차 배터리 산업에 공급될 예정임.
     * 미국 내에서는 네바다에서 세계 최대 규모 중 하나일 수 있는 리튬 매장지 발견, 엑손모빌의 리튬 생산 계획 발표 등 리튬 생산에 대한 다양한 프로젝트가 진행 중임.

GN⁺의 의견

     * 리튬 가격의 급격한 변동은 투자자들의 관심을 끌고 있으며, 리튬이 전기차 배터리의 핵심 원료로서 중요성이 높아지고 있음.
     * 미국 내에서도 리튬 생산에 대한 다양한 프로젝트가 진행되고 있어, 미래에는 주요 리튬 생산국으로 부상할 가능성이 있음.
     * 이 기사는 리튬 시장의 동향과 미국 내 리튬 생산의 전망을 제시하며, 에너지 전환과 관련된 산업의 변화에 대한 흥미로운 통찰을 제공함.

   며칠 전에 리튬 생산 국산화 했다고 뉴스 나온걸 스쳐지나가듯이 본 것 같은데
   타이밍 참 재미있네요

        Hacker News 의견

     * 상하이에서 거래되는 배터리급 리튬 카보네이트의 현물 가격이 글로벌 벤치마크로 사용되는 것에 대한 의문 제기
          + 2022년 중국은 미국이나 유럽보다 킬로그램당 2배 더 높은 가격을 지불함
          + 2023년에는 전 세계적으로 가격이 하락하며 중국 가격이 미국 및 유럽 가격과 비슷해짐
     * 배터리 구성 요소 가격의 최근 급등에도 불구하고, 전체 제품 가격은 계속해서 하락 추세
          + BNEF 연례 조사에서 배터리 팩 가격이 14% 감소함을 보여줌
          + 리튬 비용이 배터리 전체 비용에서 차지하는 비중이 작고 다른 구성 요소들의 대체 가능성 때문에 단일 구성 요소 가격은 전체 배터리 비용에 큰 변동을 일으키지 않음
          + 나트륨이 리튬을 대체할 가능성도 있음
     * 유명한 경제학자 줄리안 사이먼의 70년대 및 80년대 예측 언급
     * 기사의 편향된 표현에 대한 비판과 함께 리튬에 대한 이해를 돕는 유튜브 채널 'The Limiting Factor' 및 CWU에서 스트리밍된 강연 추천
     * 네바다주에서 발견된 세계 최대 리튬 매장량에 대한 논의
          + 네바다주는 정부 소유 비율이 90%이며, 리튬 생산을 늘리라는 요구에도 불구하고 매장량 활용에 어려움을 겪음
     * 희토류와 관련된 캘리포니아의 마운틴 패스 광산의 역사적 가격 변동과 생산 중단 및 재개 사례 언급
     * 기사 제목이 클릭베이트라는 비판과 함께 2020년 8월 저점 대비 여전히 300% 높은 가격 언급
     * 에너자이저 배터리 가격에 대한 개인적 경험 공유
          + 특정 배터리를 요구하는 Nest 연기 감지기로 인해 한 번에 약 $200의 비용 발생
     * 나심 탈레브의 격언 인용: ""과잉 공급이 부족을 따르지 않는 것을 본 적은 있지만, 부족이 과잉 공급을 따르지 않는 것은 본 적이 없다.""
     * 팬데믹 이전 수준으로 돌아가는 듯한 리튬 가격과 전기차 수요 증가에 대한 언급
"
"https://news.hada.io/topic?id=12247","잃어버린 "X-Files" 노래","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           잃어버린 ""X-Files"" 노래

        Hacker News 의견

     * 2000년대 초반, 한 사용자가 친구와 함께 즐거움을 위해 커스텀 '카운터 스트라이크' 맵을 만들었음. 이 맵들은 인터넷 서버에서 거의 플레이되지 않았지만, 10년 후 터키 인터넷 카페에서 인기를 끌었고, 사람들이 집에서 인터넷을 사용하게 되면서 해당 맵의 .bsp 파일을 찾게 됨.
     * 'X-파일' 관련 음악 CD에는 '트랙 0'이라는 숨겨진 트랙이 있어, 첫 번째 트랙을 되감아야만 들을 수 있음. 이는 CD의 'pregap'을 사용한 것으로, 모든 CD 또는 DVD 플레이어가 이를 지원하는 것은 아님.
     * 온라인에서 잃어버린 미디어를 찾는 부분 커뮤니티가 있으며, YouTube와 Reddit에서 17초짜리 오디오 클립을 바탕으로 한 노래를 찾으려 시도 중임. 아직 성공하지 못함.
     * 'X-파일'의 한 에피소드에 사용된 또 다른 노래가 오랫동안 찾아지지 않았으나, 워싱턴포스트 기사와 노래 작곡가의 업데이트를 통해 해결됨.
     * 한 사용자는 트위터의 사용자 경험이 나빠져서 더 이상 링크를 클릭하지 않게 됨을 표현함.
     * 파키스탄의 한 카페에서 들은 노래를 찾기 위해 여러 시도를 한 후, 결국 SoundCloud 링크를 통해 정확한 리믹스 버전을 찾아냄.
     * 'X-파일'을 보며 느꼈던 향수를 회상하는 사용자의 의견.
     * 'X-파일' 에피소드에 사용된 또 다른 노래가 공개되지 않은 원래 가수의 렌디션으로, 이 노래를 찾기 위한 노력이 있었음.
     * 데이비드 두코브니가 'X-파일' 주제곡의 가사를 공개한 클립이 있음.
"
"https://news.hada.io/topic?id=12288","Ask HN: 해커를 위한 최고의 UI 디자인 강좌는?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask HN: 해커를 위한 최고의 UI 디자인 강좌는?

     * 실용적인 UI 기술을 구축하기 위한 더 현실적인 튜토리얼, 예시, 연습이 들어있는 UI 디자인 과정을 추천해 주세요
     * ""react tutorials""보다는 고급이지만, 혁신적인 Bret Victor의 ""Magic Ink"" 보다는 접근하기 쉬운 내용을 선호

답변들 정리

     * UI 디자인에 도움이 되는 링크들
          + Don’t Make Me Think
          + The Design of Everyday Things
          + Designing Interfaces, 3rd Edition
          + Nielsen Norman Group Interaction Design: 3-Day Course
          + Apple Human Interface Guidelines
          + A Dao of Web Design
          + Usability Testing
          + 가장 중요한 것은 읽는게 아닌 실천하는 것. ""개밥먹기(Dogfooding)""
               o Getting started with the web
          + 당신의 UI가 사용자들에게 해롭지 않은지 생각해보는 것도 중요함
               o https://www.deceptive.design/
               o https://www.humanetech.com/key-issues
     * ""Refactoring UI"" : 몇시간만에 읽을수 있는 책이지만, 프로젝트 디자인에 큰 도움이 됨
     * 그림 그리기를 배우면서 괜찮은 UI를 만들수 있게 됨. Proko.com에 훌륭한 강좌가 있음. 책으로는 Andrew Loomis 의 ""Fun with a Pencil"", Betty Edwards의 ""Drawing on the Right Side of the Brain"" 추천
     * Apple의 ""Human interface guidelines""가 내 경력에 큰 도움이 되었음
     * Erik Kennedy 의 https://www.learnui.design
     * Shift Nudge https://shiftnudge.com/
     * Design for Hackers https://designforhackers.com/
     * CSS for JS https://css-for-js.dev/
     * Daniel Jackson의 Concept design in three easy steps
     * Universal Principles of Design 책
     * https://hackdesign.org/
     * Practical UI https://www.practical-ui.com
     * https://www.refactoringui.com/

   디자인 어렵군요 ㅎㅎ,,

   유용한 사이트들이 많네요.
   저도 애플, MS, 안드로이드에서 각자 공개한 디자인 가이드라인으로 많은 도움을 받았습니다.

        Hacker News 의견

     * ""Refactoring UI"" 책은 몇 시간 만에 읽을 수 있지만, 프로젝트 디자인에 큰 도움이 됨. 깊이 있는 내용은 아니지만, 간단하고 빠른 해킹에 유용함.
     * 애플의 인간 인터페이스 가이드라인은 경력 동안 개발한 윈도우 GUI 애플리케이션, 앱, 웹사이트 개선에 많은 도움이 됨. 가이드라인을 읽은 후 훨씬 더 단순한 UI를 만들 수 있게 됨.
     * 단순한 폼 디자인도 못하던 것에서 괜찮은 UI 디자인을 할 수 있게 된 것은 그림 그리기를 배운 덕분임. 최고의 UX 디자이너들은 미술 학교 출신이 많으며, 디자인에 중점을 두기보다는 페이지 전체의 구성과 색상 선택이 중요함.
     * UI 디자인에 대한 좋은 이해를 돕는 자료들로 ""Don't Make Me Think"", ""The Design of Everyday Things"", ""Designing Interfaces, 3rd Edition"" 등의 책과 Nielsen Norman Group의 인터랙션 디자인 코스, 애플 인터페이스 가이드라인 등이 있음. 실제로 연습하는 것이 중요함.
     * ""Design for Hackers"" 책은 UI 패턴, 색상 구성 및 전반적인 UI 디자인에 대한 통찰력을 제공함. 그래픽 UI에 더 초점을 맞추고 있지만, TUI와 CLI에도 일반화할 수 있는 충분한 일반적인 디자인 고려 사항을 제공함.
     * Erik Kennedy의 ""learnui.design"" 코스는 비싸지만 UI, UX, 랜딩 페이지 디자인에 대해 체계적으로 분석하고 구성한 최고의 코스 중 하나임. 실용적이며, 블로그를 통해 디자인에 대한 그의 생각을 맛볼 수 있음.
     * ""The Non-Designer's Design Book""은 디자인 기초에 대한 최고의 자료로, 모든 종류의 디자인에 널리 적용 가능하며, 읽은 사람들에게 큰 호응을 얻고 있음. ""Refactoring UI"" 역시 웹에 중점을 둔 유용한 자료임.
     * 스티브 잡스의 제품 디자인 접근 방식과 애플 키노트를 읽고 보는 것이 도움이 됨. ""맛""을 개발하는 것이 중요하며, 이를 통해 디자인에 대한 감각을 키울 수 있음.
     * Josh Comeau의 ""CSS for JS Devs"" 코스는 개발자의 사고방식에 resonating하는 CSS의 기본을 배우는 데 좋은 방법임.
     * 디자이너로서 가장 좋은 연습은 작동하는 디자인과 작동하지 않는 디자인을 보고 그 이유를 분석하는 것임. 디자인은 주어진 목표, 요구 사항, 제약 조건 하에서 문제를 해결하는 방법임. 디자인에 대한 관심이 있고 세부 사항에 신경을 쓰는 것이 어떤 직업에서든 좋은 성과를 내는 데 중요함.
"
"https://news.hada.io/topic?id=12299","저지연, 저손실 및 확장 가능한 처리량을 제공하는 L4S 인터넷 서비스: RFC 9330","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           저지연, 저손실 및 확장 가능한 처리량을 제공하는 L4S 인터넷 서비스: RFC 9330

L4S 인터넷 서비스 아키텍처 개요

     * L4S 아키텍처의 목표: 인터넷 애플리케이션의 낮은 대기 시간, 낮은 혼잡 손실, 확장 가능한 처리량 제어 달성
     * 핵심 인사이트: 대기 시간의 근본 원인은 큐 자체가 아니라 송신자의 용량 탐색 혼잡 제어기에 있음
     * 새로운 혼잡 제어 알고리즘: 기존의 큰 대기 시간을 유발하는 혼잡 제어 알고리즘에서 벗어나, 용량을 매우 적은 대기로 탐색할 수 있는 새로운 혼잡 제어 알고리즘 채택 가능
     * ECN의 수정된 형태: 네트워크에서 명시적 혼잡 알림(ECN)의 수정된 형태를 통해 지원, 낮은 대기 시간과 높은 처리량 동시 달성 가능
     * 점진적 배포 중점: 새로운 혼잡 제어 클래스와 '클래식' 혼잡 제어가 공유 네트워크에서 공존할 수 있는 메커니즘 정의

L4S 아키텍처 구성 요소

     * 호스트: 확장 가능한 혼잡 제어 알고리즘은 이미 존재하며, 기존의 클래식 혼잡 제어 알고리즘과 달리, 흐름 속도가 증가해도 회복 시간이 일정하게 유지됨
     * 네트워크: L4S 트래픽이 클래식 트래픽의 대기 시간으로부터 격리되도록 하며, 두 개의 큐를 사용하여 대기 시간을 분리하지만 대역폭은 분리하지 않음
     * 프로토콜: 호스트가 L4S와 클래식 패킷을 구분할 수 있도록 식별자를 사용하며, 네트워크가 각각의 패킷을 별도로 처리할 수 있도록 함

GN⁺의 의견

   이 글에서 가장 중요한 것은 L4S 아키텍처가 인터넷 서비스의 낮은 대기 시간, 낮은 손실, 확장 가능한 처리량을 달성하기 위한 새로운 접근 방식을 제시한다는 점입니다. 이 아키텍처는 기존의 혼잡 제어 알고리즘의 한계를 극복하고, ECN을 활용하여 효율적인 통신을 가능하게 합니다. 이는 네트워크 설계자, 운영자 및 사용자에게 흥미로운 주제가 될 수 있으며, 인터넷의 미래 발전에 중요한 영향을 미칠 수 있습니다.

        Hacker News 의견

     * 수신자가 송신자에게 네트워크 혼잡을 알리는 방법에 대한 궁금증
          + RFC 3168 문서에서 자세한 정보 확인 가능
          + ECN(Efficient Congestion Notification)을 지원하는 세 가지 플래그 존재
               o 송신자가 ECN 지원 가능함을 알리는 ECT(Echo Congestion Experienced) 플래그
               o 라우터가 혼잡함을 수신자에게 알리는 CE(Congestion Experienced) 플래그
               o 수신자가 ACK 패킷을 송신자에게 보낼 때 설정하는 ECN-Echo 플래그
               o 송신자는 ECN-Echo 플래그를 받고 패킷 손실이 있었다고 가정하고 혼잡에 대응
               o 송신자는 CWR(Congestion Window Reduced) 플래그를 설정하여 ECN-Echo 플래그에 대한 인지와 대응을 수신자에게 알림
     * ECN 기술의 실제 데모 관람 경험
          + IETF 118에서 ECN 기술의 라이브 데모 관람
          + 버퍼 블로트(buffer bloat)를 완전히 제거하여 비디오 채팅에 매우 유용
          + IP 패킷에 추가 비트를 삽입하여 버퍼가 가득 찼음을 알리는 기술로, 미래적인 기술로 느껴짐
     * Bob Briscoe의 관련 연구 추천
          + ECN 관련 연구에 오랜 시간을 투자한 Bob Briscoe의 고전적인 논문들 추천
     * Comcast 네트워크에서의 L4S 테스트
          + 케이블 플랜트에서의 L4S 테스트 결과를 담은 슬라이드 데크 공유
          + ISP가 고속 통행료를 부과할 가능성에 대한 추측
     * L4S 기술을 사용한 RC 카 비디오 피드 데모 발견
          + RC 카의 비디오 피드에서 L4S 기술을 사용하는 데모 영상 링크 공유
     * L4S에 대한 웨비나 시리즈 소개
          + L4S에 대해 더 배우고 싶다면 understandinglatency.com에서 시작하는 웨비나 시리즈 소개
          + L4S의 저자들, Comcast의 L4S 현장 시험 책임자, 비판적인 목소리를 가진 사람들이 발표자로 참여
     * L4S 발음에 대한 재치 있는 제안
          + L4S를 ""L-Force""로 발음하기를 바라는 댓글
     * L4S의 공정성 문제와 해결 방안
          + 혼잡 피드백을 무시하고 대역폭의 더 큰 부분을 차지하려는 '악의적' 행위자 존재 시 문제 발생
          + 공정한 대기열(fair queuing)과 혼잡 제어가 공정한 대기열을 감지할 수 있도록 L4S를 보완하는 것이 해결책
          + 공정한 대기열 인식 혼잡 제어에 대한 GitHub 링크 공유
     * L4S의 지연 시간 피드백 루프 축소 설명
          + L4S가 지연 시간 피드백 루프를 줄이는 방식에 대한 설명이 담긴 비디오 링크 공유
     * 비디오 회의 및 스트리밍 개선에 대한 혼란
          + 비디오 회의와 스트리밍이 UDP를 사용하는데, TCP 기반의 L4S가 어떻게 개선에 기여하는지에 대한 혼란 표현
"
"https://news.hada.io/topic?id=12253","충치를 일으키는 박테리아보다 우세한 유전자 변형 박테리아","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    충치를 일으키는 박테리아보다 우세한 유전자 변형 박테리아

Lantern Bioworks의 충치 방지 FAQ 요약

     * Lantern Bioworks는 유전자 변형 박테리아를 이용해 충치를 유발하는 박테리아와 경쟁하여 충치를 방지하는 제품을 개발함.
     * 이 박테리아는 충치를 일으키지 않으며, 성공적으로 작동한다면 충치를 과거의 일로 만들 수 있음.
     * 제품의 이름은 ""Lumina""로, 충치 유발 박테리아인 _streptococcus mutans_의 유전자 변형 균주임.

BCS3-L1이란 무엇인가?

     * BCS3-L1은 경쟁하는 구강 박테리아를 죽이는 약한 항생제를 생산하고, 자기 자신은 그 항생제에 면역이 있음.
     * 설탕을 알코올로 대사시키는 다른 화학 경로를 사용하며, 이로 인해 젖산을 생성하지 않아 충치를 유발하지 않음.
     * 유전자 전달을 담당하는 펩타이드가 없어 다른 박테리아와의 유전자 교환을 방지함.

BCS3-L1의 기원과 개발 과정

     * 플로리다 대학의 제프리 힐먼 교수가 1985년에 발견하고 수십 년에 걸쳐 개발함.
     * FDA 승인을 얻기 위해 설립된 회사 Oragenics는 FDA의 불가능한 시험 요구로 인해 포기함.
     * Aaron Silverbook은 이 박테리아를 상업화하기 위해 Oragenics와 거래를 하여 레시피와 샘플을 확보함.

Lumina 사용 방법

     * 특별한 연마제 기반 제품으로 치아를 닦은 후 면봉으로 바르는 방식으로 사용함.
     * 한 번의 사용으로 영구적으로 구강에 남아 있으며, 다른 사람에게 전염될 가능성은 낮음.
     * 신생아에게 전염될 수 있으며, 제거하려면 극단적인 구강 항생제 치료가 필요할 수 있음.

Lumina의 안전성

     * 구강 내 다른 박테리아가 이미 항생제를 분비하고 있으며, Lumina가 분비하는 양은 미미함.
     * Lumina가 구강 미생물군을 교란하지 않으며, 다른 박테리아가 항생제에 대한 저항성을 개발할 가능성은 낮음.

Lumina와 알코올 생성

     * Lumina는 알코올을 생성하지만, 이로 인해 취하거나 건강에 해로운 수준은 아님.
     * 특정 상황에서 알코올의 영향을 받을 수 있지만, 일반적으로는 중요하지 않은 양임.

Lumina 판매 계획

     * 2024년 1월부터 온두라스의 프로스페라에서 바이오해커들에게 $20,000에 판매할 예정임.
     * FDA 승인을 얻기 위해 프로바이오틱스로 분류되어 더 낮은 기준을 적용받으려는 전략을 사용함.
     * 사용자들이 직접 박테리아를 전달하는 것이 가능하지만, 대부분의 사람들은 몇 백 달러의 일회성 비용을 지불할 것으로 예상됨.

GN⁺의 의견

   이 글에서 가장 중요한 것은 유전자 변형 박테리아를 이용한 충치 예방 기술의 혁신성과 그 상업화를 위한 독특한 접근 방식임. 이 기술이 흥미로운 이유는 전통적인 치과 치료 방식을 넘어서는 새로운 가능성을 제시하며, 바이오해커와 일반 대중에게 큰 관심을 끌 수 있기 때문임. Lumina가 실제로 충치를 예방할 수 있다면, 이는 의료 분야에 큰 변화를 가져올 수 있는 혁신적인 발전으로 볼 수 있음.

        Hacker News 의견

     * 이야기가 너무 오래되었고 증거가 약하며, 주장이 사기에 가까움
          + 해당 균주가 같은 생태적 자리를 차지하는 S mutans를 능가한다는 주장은 이 균주도 낮은 pH 환경을 만들고 견딜 수 있어야만 사실일 수 있음. 산을 같은 정도로 생성한다면 충치도 일으킬 것임.
          + 단일 적용으로는 지속적인 식민화를 일으키기에 부족함. 심지어 매일 여러 번의 구강 프로바이오틱스 적용도 식민화로 이어지지 않음. 구강 프로바이오틱스는 주로 박테리오신을 통해 작용하며, 식민화는 매우 드문 경우에만 발생함.
          + S mutans만이 충치를 일으키는 것은 아님. S sobrinus, S wiggsiae, B dentium 등 다른 여러 산생성 종들도 충치를 유발함.
     * FDA가 특정한 연구 참가자 조건을 요구함
          + FDA가 18-30세의 틀니를 사용하는 독신자들을 대상으로 한 연구를 요구했으나, 이러한 조건을 충족하는 참가자를 찾기 어려워 연구자는 다른 프로젝트로 전환함.
     * 저자가 무료 샘플을 받았을 가능성
          + 저자의 배우자가 무료 샘플을 받았고, 저자 역시 받았을 가능성이 있음, 비록 그들이 키스를 하지 않는 가정에서 살고 있다 하더라도.
     * 구강 관리에 대한 개인적인 방법 공유
          + 매일 밤 설탕으로 입을 헹구는 것 외에도 칫솔질을 함으로써 문제가 없었다고 함.
     * 에리스리톨, 자일리톨, 소르비톨 사탕의 장기 섭취가 치아 관련 변수에 미치는 영향에 대한 연구 링크
          + 자일리톨과 에리스리톨이 Streptococcus mutans의 실시간 생물막 형성을 억제함.
          + 두 가지 설탕을 함께 사용하는 것이 더 효과적일 수 있음.
     * 개인적인 치아 건강 경험 공유
          + 고령에도 불구하고 충치가 없었던 증조할머니의 이야기와, 저자 본인도 치아 건강이 좋은 경험을 나눔.
     * FDA의 연구 요구 사항에 대한 질문
          + FDA가 실제로 특정 연구 요구 사항을 설정했는지 공개 기록을 통해 확인할 수 있는지, 아니면 단순히 주장에 의존해야 하는지에 대한 의문 제기.
     * 연구 레시피가 오픈소스로 공개됨
          + 관련된 기사에서 연구 레시피가 오픈소스로 공개되었다고 함.
     * 유전자 조작 박테리아를 이용한 치료법의 잠재적 미래 가능성에 대한 의견
          + 유전자 조작 박테리아를 이용한 치료법이 미래에 큰 잠재력을 가질 수 있다는 의견 제시.
     * 일본에서 진행 중인 치아 재생 약물에 대한 인간 임상 시험 소식 관련 링크
          + 일본의 한 스타트업이 2024년에 치아 재생 약물에 대한 인간 임상 시험을 시작할 예정이라는 소식 공유.
     * 치즈 제조에서 유사한 원리 활용
          + 좋은 곰팡이가 치즈에 자라면 나쁜 곰팡이가 자리 잡기 어려워진다는 치즈 제조와 관련된 원리 설명.
"
"https://news.hada.io/topic?id=12348","아름다운 코드에 대하여","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              아름다운 코드에 대하여

     * 아름다움이란?
          + 아름다움은 사람이 느끼는 가치
          + 놀라움, 새로움, 안정성, 편안함, 단순성 등을 주는 것
          + 놀라운 것과 자연스러운 것으로 나눌 수 있음
          + 아름다움(깨달음)을 느끼기 위해선 어느정도 기본적인 지식이 필요함
          + 아름다움은 생존을 위한 것. 이해할 수 없는 것을 보면 불쾌함을 느낌
     * 아름다운 코드에 대한 정의
          + 코드는 혼자 일하는 것이 아니기 때문에 아름다울수록 좋다
          + 이상적으론 읽으며 걸리는 부분이 단 하나도 없는 코드
          + 자연스러운 코드가 좋다
     * 아름다운 코드를 이루는 네 가지
          + 사회적, 신뢰적, 선형적, 선언적
               o 사회적이고 신뢰적인 부분은 안정성을 추구
               o 선형적이고 선언적인 부분은 심미성을 추구
          + 사회적인 코드
               o 주변 상황을 모두 고려한 코드
               o 관습이나 규칙, 미션을 따르는 것
               o 언어의 사회성과 유사함
          + 신뢰적인 코드
               o 믿고 사용할 수 있는 코드
               o 믿을 수 없다면 직접 확인해야 하는 코드가 됨
               o 순수 함수, 멱등성, 사이드 이펙트 등을 고려
               o 사이드 이펙트가 전혀 없을 수는 없기에 문서나 예외가 있음을 알릴 수 있음
          + 선형적인 코드
               o 코드를 읽을 때 위에서 아래로 한 번만 읽어도 되는 것
               o 선형적이면 뇌과학적으로 작업 기억 공간이 처리하기 쉬워짐
          + 선언적인 코드
               o 코드가 무엇을 하는지 정확히 알리는 것
               o 적절한 이름을 지어주는 것이 좋음
               o 뇌과학적으로 단기 기억 공간이 처리하기 쉬워짐
     * 현실적으로
          + 아름다운 코드라는 것은 한 번에 뚝딱 나오는 게 아님
          + 완벽하게 아름다운 코드라는 것은 흔하지 않음
          + 따라서 점진적 개선과 코드 수식이라는 개념이 필요함
          + 점진적 개선
               o 리팩터링을 하는 것
               o 점검과 개선을 반복하여 70~80%의 품질을 계속 유지하는 것
               o 언제 점검과 개선을 해야할까?
                    # 코드 오너십이 흐려질 때
                         @ 작성된 코드에 대한 지식이 흐려질 때
                    # 악취를 느낄 때
                         @ 코드를 볼 때 불편함을 느낄 때
          + 코드 수식
               o 코드를 아름답게 보여지도록 꾸며주는 것
               o 대표적으로 테스트, 코드 리뷰, 문서화, 주석 등이 사용됨
               o 테스트
                    # 코드를 더 신뢰할 수 있게 만들어줌
                    # 작동을 보장하고 테스트 자체가 문서가 될 수 있음
               o 코드 리뷰
                    # 검증을 통해 코드를 더 신뢰할 수 있게 만들어줌
                    # 코드 오너십 전파를 하기 때문에 코드의 사회성도 높일 수 있음
                    # 무조건적인 코드 리뷰는 병목이 될 수도 있음
               o 문서화
                    # 코드를 더 이해할 수 있게 해줌
                    # 문서화를 해야하는 시점은 다른 개발자가 해당 코드에 대한 맥락과 설계, 규칙을 알아야 할 때
                    # UML 같은 도구를 이용하면 더 좋음
               o 주석
                    # 어쩔 수 없이 생기는 복잡한 코드 영역은 문서보다 주석으로 설명하는 것이 좋음
     * 코드 품질은 중요하지만 아름다운 코드가 꼭 성공을 보장하는 것은 아님
          + 오히려 설계나 업무 프로세스를 더 고려해야할 수도 있음
          + 코드 품질이 꼭 제품 품질을 보장하는 것은 아니다

   ㅋㅋㅋㅋㅋㅋ

   사회적인 코드 중요하겠네요 ㅎㅎ

   잘 정리된 좋은 글이라 생각합니다. 팀내 코드 퀄리티로 이슈가 자주 발생한다면 읽고 모여서 토의하기도 좋을거 같네요.

   난해할 수 있는 토픽인데 술술 읽히네요. 감사합니다!

   역시 점진적 개선이 중요하죠. 뭐든 첫술에 배부를 수는 없으니까요.

   본인이 짠 코드에 심미적 아름다움을 느끼는 취미는 그냥 개인 관점으로 남아야지. 돈받는 프로가 회사코드를 예술적 관점으로 접근하고 주니어들에게 이상한 마인드나 주입시키는 시니어는 제발 되지 맙시다. 아니면 개발자 때려치고 그림이나 그리던가 뭔 예술타령이야...

   ""아름다움"" 이라는 단어에 잘못 꽂히셨군요

   제목만 읽는 청년

   ㅎ 좀 많이 오버하긴 했네요
"
"https://news.hada.io/topic?id=12318","E3 공식적으로 종료공식적으로 종료

     * E3, 게임 산업의 가장 큰 박람회였으나 공식적으로 종료됨
     * 새로운 경쟁자 등장, 파트너사의 철수, 관객 습관 변화, 팬데믹으로 인한 혼란이 E3의 몰락 원인
     * 1995년 시작된 E3는 여러 시도 끝에 부활하지 못하고 종료됨
     * 온라인 비디오 뉴스 컨퍼런스와 같은 새로운 기회가 등장하면서 전시회 참가 비용이 절감됨
          + 2011년 닌텐도가 'Direct' 형식의 비디오 뉴스 컨퍼런스를 시작
          + 2018년 소니 플레이스테이션의 이탈로 다른 업체들도 참가 철회

E3의 마지막 순간들

     * 최근 E3 박람회는 일반 대중에게 개방하여 관심 증대를 시도
     * 팬데믹으로 인해 게임 출판사들이 온라인 뉴스 컨퍼런스 형식을 채택
     * ESA의 스탠리 피에르-루이스는 기업들이 소비자와 비즈니스 관계를 다양한 방법으로 접근할 수 있음을 인식

E3의 역사적 중요성

     * E3 이전에는 비디오 게임이 라스베가스의 CES에서 소개되었으나 주목받지 못함
     * 그래서 ESA는 게임 출판사와 창작자가 소매업체와 만날 수 있는 전시회로 E3를 창설했음
     * E3는 멀티미디어 헤드라인을 만드는 대규모 이벤트로 성장함
     * 게임 어워드 시상식이 E3의 문화적 영향력을 대부분 흡수했지만, 광고와 마케팅에 중점을 두어 업계의 작품에 대한 인정을 방해 한다고 비판받음
     * 피에르-루이스는 E3의 종료가 비디오 게임 산업이 다양한 방식으로 번성했음을 의미함을 언급

GN⁺의 의견

     * E3의 종료는 게임 산업의 변화와 디지털 시대의 새로운 마케팅 전략의 중요성을 강조함
     * 온라인 이벤트와 개별 기업의 쇼케이스가 새로운 표준으로 자리잡고 있음을 보여줌
     * 이러한 변화는 게임 산업의 지속적인 혁신과 창의성을 촉진하며, 게임 커뮤니티와의 직접적인 소통을 강화하게 될 것

        Hacker News 의견

     * E3의 쇠퇴
          + E3는 과거의 유물로, 90년대와 2000년대 초반에는 미출시 게임의 미디어를 거의 접할 수 없었음. 잡지나 웹사이트의 스크린샷이 전부였고, E3는 소매업자들에게 새로운 제품을 알리고, 매장 공간을 확보하게 하며, 주류 미디어가 뉴스를 전파하는 데 중요한 역할을 함. 오늘날에는 YouTube, Twitch 등을 통해 게임 영상과 콘텐츠를 쉽게 볼 수 있어 E3는 단순한 마케팅 이벤트가 됨. 비용이 많이 들고, 라이브 무대에서의 실수나 데모 재앙의 위험이 있어 출판사와 플랫폼 소유자들이 부담을 느낌. 소니는 팬데믹 이전에 이미 E3를 떠나 자체 쇼케이스를 선택함. 이는 점점 더 많은 회사들이 따르는 모델이 됨. E3는 매년 중간에 재미있는 이벤트로, 그해 후반에 나올 멋진 것들을 미리 볼 수 있는 기회를 제공했으며, 라이브 프레젠테이션에서 전설적인 순간들도 있었음.
     * 게임과 기술 분야의 관계
          + 어릴 때부터 게임을 많이 했지만, 19살이 되면서 대부분의 관심을 잃음. 기술 분야 대학에서는 LAN 파티를 위한 방이 있었고, 한 강사가 비공식 대화를 위해 Discord를 설정함. 소프트웨어 엔지니어와 기술 종사자들 사이에서 게임이 얼마나 인기 있는지, 그리고 이 산업과 게임의 관계에 대해 다른 사람들의 생각을 듣고 싶음.
     * E3 2000 쇼 플로어 영상
          + 비디오 게임 역사 재단이 E3 2000 쇼 플로어 영상을 업로드함. 이는 시간의 캡슐로, MGS2의 교묘하게 속이는 트레일러가 포함되어 있음. 2000년에 머물러야 할 많은 것들도 있음.
     * E3의 추억
          + 1997년에 대학 친구들과 함께 펜실베니아에서 애틀랜타로 로드 트립을 갔던 추억이 있음. 온라인으로 연결된 Doom/Quake 중독자들과 함께하고, 어떻게든 '프레스' 배지를 얻어 일반 대중에게 공개되지 않은 것들을 볼 수 있었음. 3DFX와 Tomb Raider가 도처에 있었고, 더 단순하고 즉각적으로 연결되지 않은 세상에서 재미있는 시간을 보냄.
     * 게임 산업의 상업화
          + 게임 산업은 할리우드처럼 완전한 수익화를 이룸. 많은 게임이 일반적이고, 많은 AAA 게임은 단순히 재탕에 불과함.
     * E3의 관련성 상실
          + 2005년에 E3가 관련성을 잃어가는 것을 느낌. 새 게임을 처음 보기 위해 수천 마일을 여행했지만, 집에 있는 친구들이 인터넷에서 이미 트레일러를 보고 있었음. 회사들은 여름 한가운데 큰 이벤트 없이도 게임을 광고할 수 있다는 것을 깨달음. Nintendo Directs, State of Plays, Xbox Game Showcases와 같은 행사는 짧은 통지로 개최할 수 있고, 전시장 일부를 임대하는 것보다 훨씬 저렴하며, 무대 프레젠테이션보다 문제가 적음. 코로나 이전에는 네트워킹과 다른 개발자 및 출판사와의 만남이 E3를 지속시켰지만, 모두가 잠겨 있고 이벤트가 취소되면서, 결국 비싼 Direct나 비슷한 것으로 전락함.
     * E3의 종말
          + 새로운 경쟁자, 파트너의 철수, 관객 습관의 변화, 팬데믹 시대의 혼란이 E3의 몰락을 이끔. 1995년에 시작된 E3를 되살리려는 노력이 수년간 이어짐.
     * 90년대의 종말
          + 부스 남성과 부스 여성에게 작별을 고함. 90년대 시대의 공식적인 종말.
"
"https://news.hada.io/topic?id=12353","메인프레임 COBOL 프로그래머인 어머니와의 인터뷰 (2016)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  메인프레임 COBOL 프로그래머인 어머니와의 인터뷰 (2016)

메인프레임 COBOL 프로그래머인 어머니 인터뷰

     * 어머니는 태어나기 전부터 EU 내에서 가장 큰 은행 중 하나에서 근무하고 있음.
     * 은행 프로그래밍 세계는 대부분의 사람들이 익숙한 것과는 완전히 다른 세계임.
     * 어머니와 그녀의 팀이 일을 그만두면 은행은 몇 주 안에 망할 것임.

1991년

     * 어머니는 Nordbanken(현재 Nordea)에서 내부 교육을 시작함.
     * 다양한 테스트를 치르고 IQ 테스트, 심리 검사, 멀티태스킹 테스트를 통과함.
     * IBM 메인프레임 COBOL 프로그래머로 시작하여 25년 후에도 같은 은행에서 같은 직무를 수행함.

COBOL

     * COBOL은 함수형 Haskell이나 동시성 Golang과 같은 멋진 프로그래밍 언어는 아님.
     * COBOL은 명령형, 절차적 언어이며 2002년부터 객체 지향적임.
     * 메인프레임 프로그래밍 맥락에서 COBOL을 아는 사람이 거의 없음.

데이터베이스

     * 주 데이터베이스는 IMS라고 불리며, IBM이 아폴로 프로그램을 위해 만든 계층적 데이터베이스임.
     * DB2로의 마이그레이션 시도 중이지만, 이는 수년이 걸릴 작업임.
     * DB2 데이터베이스는 현재 약 10TB의 데이터를 보유하고 있음.

배치

     * 시스템의 약 80%는 배치 작업으로 구성됨.
     * 배치 작업은 특정 시간이나 간격으로 실행되며, 데이터 처리나 다른 은행/기관에 데이터를 전송함.

은행이 직면한 문제들

     * 메인프레임을 사용하는 은행들은 처리해야 할 많은 문제들이 있음.
     * 프로그래머들이 늙어가고 있으며, 새로운 직원이 독립적으로 일하기까지 2-3년이 걸림.
     * 수십 년 된 프로그램들이 있으며, 아무도 그것들이 무엇을 하는지 모름.

최종 단어

     * Nordea와 다른 은행들이 앞으로 몇 년 동안 어떤 새로운 기술을 도입할지 매우 흥미로움.

Q & A

     * IBM 메인프레임 COBOL 프로그래밍을 선택한 이유? 컴퓨터와 함께 일하고 싶었기 때문.
     * 하루 중 가장 나쁜 일은? 동료가 중요한 시스템 모듈에 점을 빼먹어 은행이 16시간 동안 다운됨.
     * 은행의 미래는 어떻게 될까? 메인프레임을 현대적인 것으로 교체해야 함을 인식하고 있음.
     * 90년대에 여성 프로그래머로서 직면한 도전은? 문제 없었음.
     * 20년 넘게 같은 코드베이스로 일하는 것이 지루해지나? 새로운 시스템을 만드는 것은 항상 재미있었음.
     * 은행을 위한 코드를 작성하는 것이 무섭나? 매우 무섭지만, 테스트 환경이 견고해서 대부분 원활하게 진행됨.
     * 은행을 위한 큰 실수를 한 적이 있나? 1997년에 은퇴 저축 계좌에서 불법적으로 돈을 인출할 수 있게 만드는 실수를 함.
     * 작업 환경은 어떤가? 개인 책상에서 열린 공간으로 이동했으며, 이를 매우 싫어함.

GN⁺의 의견

     * 메인프레임과 COBOL 언어는 여전히 금융 산업에서 중요한 역할을 하고 있으며, 이 기술에 대한 전문 지식은 매우 가치가 있음.
     * 은행 시스템의 복잡성과 오래된 기술에 대한 의존도는 새로운 시스템으로의 전환을 어렵게 만들고, 이는 큰 도전 과제임.
     * 이 인터뷰는 기술의 빠른 발전과 비교하여 일부 산업에서 여전히 오래된 기술을 사용하고 있음을 보여주며, 이는 흥미로운 대조를 이룸.

        Hacker News 의견

     * 은행 프로그래밍 세계는 대부분의 개발자들이 익숙한 것과는 매우 다름.
          + 은행 프로그래밍에 대한 추가 정보를 원한다면 ""An oral history of Bank Python""을 읽는 것이 좋음.
          + 젊은 메인프레임 프로그래머가 높은 급여를 받을 것이라는 통념과 달리, 실제로는 평균적이거나 그 이하일 수 있음.
          + COBOL을 아는 것보다, COBOL로 코딩된 비즈니스 로직에 대한 기관 지식이 더 가치 있음.
     * 금융 서비스 분야의 시스템 통합 컨설턴트로 일하면서 핵심 은행 시스템과의 통합 경험 공유.
          + 기존 통합 포인트를 재사용하는 것이 새로운 인터페이스를 협상하는 것보다 효율적임.
          + 통합은 보통 저녁 시간 전에 구조화된 문서를 배치 처리하기 위해 전달함.
          + 데이터 추출 시 '현대적인' API를 찾기 어려우며, 규제 및 컴플라이언스와의 협상이 필요함.
          + 컴플라이언스 담당자들이 IT보다 더 실용적이고 해결책 중심적일 수 있음.
     * 프로그래밍 역사에 대한 개인적인 가족 이야기 공유.
          + 할머니는 펀치 카드로 프로그래밍했고, 아버지는 소련 메인프레임에서 FORTRAN과 COBOL을 사용함.
          + 본인은 다양한 언어로 프로그래밍하며, 현재 자녀도 고등학교에서 자바와 파이썬을 배우고 있음.
     * COBOL 프로그래머들이 은행을 유지하는 데 중요한 역할을 하고 있으며, 이들이 갑자기 그만두면 은행과 경제에 큰 영향을 미칠 수 있음.
          + 스웨덴의 Nordea 은행의 경우, 이러한 시나리오가 스웨덴 및 북유럽 경제에 영향을 줄 수 있음.
     * 보험 회사 IT 부서에서 일한 경험을 공유.
          + 프로그래밍보다는 도메인 지식의 원천으로서 중요한 역할을 함.
          + 과거에는 모든 것이 물리적 문서로 저장되었으며, 이를 재정리하는 프로젝트가 있었음.
     * 업무 환경에 대한 개인적인 의견 공유.
          + 개인 책상에서 ""사용 가능한 곳을 선택하는"" 오픈 공간으로 이동했으며, 이에 대해 불만족함.
     * 소련에서 위성 궤도 계산을 했던 할머니에 대한 이야기 공유.
          + 할머니가 위성 궤도 계산에 관여했다는 것을 알게 되어 흥미로움.
     * 여성 프로그래머들이 COBOL을 유지하는 데 중요한 역할을 했던 경험 공유.
          + 과거에는 여성 프로그래머가 많았으나, 젊은 프로그래머들 사이에서는 남성이 더 많아진 경향이 있음.
     * COBOL이 ""멋진"" 언어는 아니지만, 메인프레임이 ""레트로 쿨""이 될 만큼 오래되었으며, 대부분 리눅스를 옵션으로 실행할 수 있음.
          + FORTRAN에 대한 관심을 가지고 있으며, COBOL에 대해서도 같은 관심을 가질 수 있을지 고민 중임.
"
"https://news.hada.io/topic?id=12303","10개의 차트로 살펴본 빅테크의 미래 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          10개의 차트로 살펴본 빅테크의 미래

     * 빅테크의 지배력:
          + 빅테크 6개사(마이크로소프트, 애플, Meta, 구글, 아마존, Nvidia) 시가총액은 $11T가 넘음
          + 전체 10억달러 유니콘 클럽(1200개 유니콘 스타트업)의 시가총액합 $3.8T의 3배
          + 가장 큰 유니콘도 빅테크의 큰 경쟁자가 될 가능성은 낮음
     * 빅테크 클럽에 신규 회원 가입:
          + NVidia가 $1T 시총에 도달해서 새로 클럽에 가입
          + 메타와 테슬라는 각 $1.1T/$1.2T 까지 갔다가 현재는 $0.9T/$0.8T
     * 매출 성장 둔화:
          + 규모가 커지면서 성장이 둔화되고 있음
          + 성장 촉진을 위해 생성AI, 양자 컴퓨팅, AR/VR 같은 최신 기술을 통해 새 시장에 진출하려고 할 것
     * 효율성으로의 복귀:
          + 빅테크 들도 2021년에 지나치게 확장했고 이후 비용 절감에 나섰음
          + 현재는 2020년 보다는 훨씬 더 많은 사람을 고용하고 있지만, 채용속도는 여전히 느려질 가능성이 있음
     * 블록버스터 인수:
          + 역사적으로 대규모 인수는 거대 기술 기업이 새로운 수익원을 확보하고 새로운 제품 라인을 출시하는 데 핵심이었음
          + 2014년 Facebook에 인수된 WhatsApp은 현재 전 세계적으로 20억 명 이상의 사용자를 보유하고 있으며 미국에서 가장 빠르게 성장하는 Meta의 서비스 중 하나
          + 2023년 10월에 마무리된 Microsoft의 690억 달러 규모의 Activision 인수는 최근 주목할 만한 것. Microsoft의 최고 매출에 75억 달러의 수익을 가져올 것
     * 규제 압력으로 M&A가 위축됨
          + 23년 3분기에 대형 기술 M&A 규모는 정체됨
          + 비록 거대 기술 기업들이 완전히 조용해지지는 않았지만(마이크로소프트의 액티비전 인수는 규제 당국과의 2년 가까운 싸움 끝에 4분기에 성사됨), 건강한 기술 생태계를 위해서는 이들이 다시 게임에 참여해야 함. 하지만 FTC의 현재 태도로는 쉽지 않을 것으로 보임
          + 당분간은 핵심 기술 역량이나 인재를 노리는 이들 기업의 소규모 거래가 이어질 것으로 예상
     * 미국 벤처캐피털을 훨씬 능가하는 빅테크 R&D 지출:
          + 미국에서는 대기업의 R&D 투자가 미국 전체 벤처 자금보다 큰 폭으로 앞섰음
          + 이는 기술 혁신을 주도하는 이들 기업의 규모를 잘 보여줌
     * AI에 올인:
          + 거대 기술 기업들은 특히 제너레이티브 AI 분야에서 컴퓨팅 성능과 개발 자금을 지원하며 유망한 AI 스타트업에 힘을 실어주고 있음
          + 이러한 투자는 클라우드 컴퓨팅(구글, 아마존, 마이크로소프트) 및 AI 칩(엔비디아)과 같은 핵심 비즈니스에 투입될 수 있음
     * 서로의 영역에서 융합하기:
          + 빅 테크의 수익원은 점점 더 겹쳐지고 있음
          + 예를 들어, 경쟁이 치열해지고 기업 고객이 워크로드를 최적화함에 따라 클라우드 컴퓨팅 매출 성장이 둔화중
          + 대신 아마존, 마이크로소프트, 구글은 클라우드 컴퓨팅 비즈니스에 활력을 불어넣기 위해 컴퓨팅 집약적인 AI에 주목하는 중. Microsoft는 최근 분기에 Azure 성장의 3%를 AI가 차지했다고 밝혔음
     * 아마존은 디지털 광고 영역에서 선두주자인 구글과 메타의 점유율을 계속 가져가고 있음
     * 빅 테크가 서로의 핵심 사업을 발전시키면서 새로운 시장에서의 성장도 모색중. 의료, 핀테크, 통신 및 기타 업종에 혁신을 불러일으키고 있지만, 문제점이 없는 것은 아님

   좋은 내용 감사합니다.
"
"https://news.hada.io/topic?id=12307","Epic vs. Google: 앱스토어 반독점 재판에서 구글이 패배함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Epic vs. Google: 앱스토어 반독점 재판에서 구글이 패배함

     * Epic은 2020년 인앱 구매 수수료 문제로 분쟁을 벌인 끝에 Android의 Google Play 스토어가 불법적인 독점에 해당한다고 주장하며 Google을 고소
     * 12월 11일, 배심원단은 구글의 독점력, 반경쟁적 행위, 사업 부문 간의 불법적 관계에 대한 모든 질문에 '예'라고 답함
     * 배심원단은 Google이 Android 앱 배포 및 인앱 결제 시스템에서 불법 독점을 하고 있으며, Google Play 앱 스토어와 Google Play 결제 서비스 간의 불법적인 연계가 있다고 결정함
     * Google은 Android와 Google Play가 다른 주요 모바일 플랫폼보다 더 많은 선택과 개방성을 제공한다고 주장하며, 항소할 계획임을 밝힘.

GN⁺의 의견

     * 이 사건은 기술 산업 내에서의 독점적 행위와 경쟁에 대한 중요한 사례로, 특히 앱 개발자와 소비자에게 영향을 미칠 수 있는 법적 판결의 중요성을 강조함.
     * Google과 같은 대형 플랫폼의 시장 지배력에 대한 법적 도전은 기술 산업의 미래에 대한 규제와 경쟁의 균형을 모색하는 데 중요한 역할을 함.
     * 이 기사는 Fortnite과 같은 인기 있는 게임을 중심으로 한 법적 다툼을 통해 기술과 법의 교차점에 대한 흥미로운 통찰을 제공함.

   정작 더 독점스러운 애플은 이겼는데, 구글은 져버려서 재미나게 되네요.

   구글이 개발자를 모두 공정하고 평등하게(fairly and equally) 대하지 않았다는게 큰 듯

   애플 재판은 일반적인 배심원단 재판이 아닌 판사 재판으로 해서 그렇다는 의견도 있더라고요. 그런데 찾아보니, Epic Games vs Apple 소송 때 판사 재판이 된게 양쪽 다 배심원단 재판을 거부해서 그렇게 되었더라구요. (https://www.gamesindustry.biz/epic-and-apple-decline-trial-by-jury)

        Hacker News 의견

     * 한 해커뉴스 사용자는 다른 인터넷 사용자들보다 해커뉴스 사용자들이 더 똑똑하고 합리적이라고 생각함. 그러나 구글과 애플의 앱 스토어를 스타벅스나 도넛 가게, 식당과 같은 다른 비즈니스 모델과 비교하는 것을 보고 놀람. 소비자는 다른 비즈니스에서는 선택할 수 있지만 모바일 앱 스토어에서는 그럴 수 없음. 스타벅스나 넷플릭스 없이 살 수도 있고, 필요하면 다른 제공업체로 바꿀 수도 있지만, 모바일 앱 스토어 세계에서는 그럴 수 있는 옵션이 없음. 은행, 웨어러블 기기, 심지어 많은 정부 서비스들이 애플/안드로이드 앱 스토어를 통해 앱을 제공하므로, 사용자는 이 앱 스토어들만 사용해야 함. 모바일을 무시하고 브라우저만 사용하는 것은 실용적이지 않음. 이 시점에서 앱 스토어는 독점이며 소비자들이 영향을 받고 있음. 애플/구글이 최고의
       앱 스토어를 제공하고 더 안전하고, 신뢰할 수 있으며, 신뢰할 만하다고 주장할 수 있지만(오늘날 그렇지 않음), 소비자들에게 다른 앱 스토어에서 앱을 다운로드하고 싶은 위험을 감수하고 싶다면 그럴 수 있는 선택권도 제공해야 함.
     * 구글이 패소한 이유에 대해 궁금해하는 사람들을 위해, 'Epic v. Google' 사건은 구글, 스마트폰 제조업체, 큰 게임 개발자들 사이의 비밀 수익 공유 거래에 초점을 맞추고 있으며, 구글 임원들은 내부적으로 이러한 거래가 경쟁 앱 스토어를 억제하기 위해 설계되었다고 믿고 있음. 애플의 경우에는 같은 상황을 발견하지 못했기 때문에, 이것이 애플의 사건에 큰 영향을 미치지 않을 것이라고 생각하지만, 법률 전문가는 아니므로 더 많은 지식이 있는 사람이 설명해주길 바람.
     * OEM 거래의 영향은 간과할 수 없으며, 실제로 안드로이드가 TV나 IoT에서 지배적이지 않은 이유 중 하나는 구글이 다른 회사들이 바보가 아니라는 사실을 이해하지 못했기 때문임. 예를 들어, 오랫동안 Play 스토어가 있는 기기를 만들고 싶다면 Play 스토어가 없는 어떤 안드로이드 기기도 만들 수 없었음. 플랫폼 수수료로 수십억 달러를 벌면서 이런 일을 하면 다른 모든 사람들이 자신들의 앱 스택을 바닐라 임베디드 리눅스 위에 구축하는 것이 더 나은 생각이라고 생각하는 것에 놀라지 말아야 함. 물론 종종 OEM의 의도는 정직하지 않지만, 구글의 행동으로 인해 광고 기술 짐승을 섬기지 않는 안드로이드 기기를 생산하려는 어떤 정직한 행위자의 출현도 방지됨.
     * 구글이 독점적 지위를 이용해 반경쟁적인 일을 했다는 것이 배심원단의 판결인데, 그 중 하나가 모든 것에 대해 30%의 수수료를 취하는 것임. 사이드로딩은 이미 허용되고 있으므로, 제3자 인앱 결제를 허용하는 것이 해결책일 수 있음. 애플에게도 결국 이런 일이 일어나길 바람.
     * 애플이 에픽에 대한 소송에서 이긴 이유와 구글이 패소한 이유에 대한 혼란이 많은데, 애플이 이긴 주요 이유는 소비자들이 아이폰을 구매할 때 앱 다운로드 옵션이 앱 스토어로 제한되어 있다는 것을 미리 알고 있다는 사실임. 그 제한에 동의하지 않는다면 다른 전화기를 구매할 수 있었지만, 아이폰을 구매하기로 결정한 것은 그들이 ""도전적인 제약에 미리 동의했다""는 것을 의미함. 미국 법에 따르면 소비자가 미리 애프터마켓 제약에 동의하면 그 애프터마켓은 반독점 목적으로 독점으로 간주되지 않음. 이는 'Eastman Kodak v. Image Technical Services'와 'Newcal v. Ikon' 사건에서 확립된 선례임.
     * 리나 칸이 구글에 대한 반독점 사건을 마침내 진행할 수 있을지 궁금함. 애플 대 에픽 사건에서 판사들이 빅테크를 지지한 것과 마이크로소프트가 블리자드 인수에 대해 같은 입장을 취한 것이 흥미로움. 마치 판사들이 빅테크를 두려워하는 것처럼 보이지만, 일반인으로 구성된 배심원단은 독점을 있는 그대로 보는 것 같음.
     * 에픽이 구글과 애플로부터 원하는 거의 모든 것을 얻고 있는 것으로 보임. EU가 애플 사건에 필요한 모든 일을 하는 데 손을 내밀고 있기 때문임. 이 두 스토어는 가까운 미래에도 지배적일 것임 (>95% 점유율), 하지만 적어도 고객들은 선택권을 가질 것임. 구글/애플이 수수료를 더 합리적인 수준인 10~15%로 낮추기로 결정한다면 어떨까? 앱 스토어/플레이 스토어 수수료는 그들의 주요 수익원이 아니므로, 이러한 법적 위험을 완화하기 위한 합리적인 비용일 수 있지만, 그들은 그렇게 하지 않기로 선택함.
     * 미국의 높은 반독점 기준에도 불구하고 애플과 구글의 앱 스토어는 반경쟁적임. 대기업들은 앱 스토어 수수료 때문에 앱 내에서 서비스 가입이 불가능하게 만들었음. 구글과 애플이 취하는 수수료는 많은 작은 기업들에게는 감당할 수 없을 정도로 높아서, 이러한 반경쟁적 관행 때문에 얼마나 많은 유망한 스타트업들이 질식되었는지 알 수 없음. 이것은 독점에 의해 만들어진 단순한 경제적 비효율성이며, 이것은 끝나야 함.
     * 포스트가 The Verge 기사에 링크되어 있고, 여기 모든 사람들이 애플 재판에 대해 언급하고 있으므로, 에픽과 애플 소송의 판결에 대한 링크를 제공함.
     * 구글은 애플보다 개발자 친화적임. 에픽과 개발자들이 여기서 승리를 거둔 것을 보고 기쁨, 하지만 법원이 애플 편을 든 것은 유감임. 앱 스토어/플레이 스토어 이중독점이 깨지는 것을 보고 싶었음.
"
"https://news.hada.io/topic?id=12338","Upstage, 10.7B SOLAR 모델을 상용화 가능한 라이선스로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Upstage, 10.7B SOLAR 모델을 상용화 가능한 라이선스로 공개

     * 기존의 Llama2 7B의 능력을 극대화하기 위해 Depth Up-Scaling 기술을 개발하여 적용
     * 벤치마크상 매개변수가 30억개 미만인 모델에서는 뛰어난 성능을 보이며, 6배 크기의 QWEN 이나 최근 출시된 Mixtral 8x7B 모델을 능가
          + OpenLLM 리더보드에서 74.2점으로 1등. 알리바바의 QWEN-72B가 73.6, Mixtral-8x7B가 72.6
     * Instruction 파인튜닝이 잘 적용됨
     * 이번 공개된 모델은 영어 기반이기 때문에 한국어 성능은 낮을 수 있음

   Upstage 는 카카오톡에서 사용가능한 AI 인 AskUp 제작사입니다.
   Alibaba, 오픈소스 AI 모델 QWEN 공개
   Mistral AI, Llama 2 70B 모델보다 뛰어난 Mixtral 8x7B 모델 공개
"
"https://news.hada.io/topic?id=12227","내가 가장 좋아하는 추적 도구 모음: eBPF, QEMU, Perfetto","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               내가 가장 좋아하는 추적 도구 모음: eBPF, QEMU, Perfetto

트레이싱 도구 소개

     * 트레이싱에 대한 열정과 경험을 바탕으로 다양한 트레이싱 방법 소개
     * 새롭고 흥미로운 트레이싱 도구 2개 포함
     * 트레이싱의 핵심: 시스템에서 발생한 타임스탬프 데이터 수집 및 타임라인 UI 시각화

데이터를 타임라인 UI에 쉽게 시각화하기

     * Chromium Event JSON Format을 이용한 간단한 JSON 형식의 이벤트 데이터 시각화
     * Google의 Perfetto 또는 Catapult 뷰어를 통한 트레이싱 파일 확인
     * Python 유틸리티를 활용하여 트레이스 파일을 클릭 가능한 링크로 변환 및 공유

고급 포맷: Fuchsia Trace Format과 Perfetto Protobuf

     * Fuchsia Trace Format (FTF): 크기가 큰 트레이스 파일을 위한 간단하고 컴팩트한 바이너리 포맷
     * Perfetto Protobuf: 더 많은 기능을 지원하는 컴팩트 포맷, Protobuf 라이브러리를 통한 생성 가능

다양한 트레이싱 도구

     * Speedscope, pprof, Rerun 등 다양한 트레이스 시각화 도구 소개
     * Trace Compass, Firefox Profiler 등의 프로파일러 뷰어 언급

트레이싱 방법

     * 하드웨어 브레이크포인트, perf, GDB 스크립팅 등 저수준 트레이싱 방법 소개
     * Intel Processor Trace를 활용한 프로그램 실행 추적
     * magic-trace: 함수 호출을 시각화하는 트레이스 파일 생성 도구

계측 기반 트레이싱 프로파일러

     * Tracy, Optick, Perfetto 등의 계측 기반 트레이싱 프로파일러 비교
     * 추가 정보를 포함하는 이벤트 데이터의 중요성 강조

eBPF

     * 리눅스 커널을 이용한 트레이싱을 위한 eBPF 서브시스템 소개
     * BCC, bpftrace, ply 등의 eBPF 트레이싱 도구 소개

eBPF 예시: Anthropic의 Perfetto 기반 패킷 및 사용자 이벤트 트레이싱

     * 네트워킹 코드의 꼬리 지연 분석을 위해 BCC와 Perfetto 시각화 결합
     * eBPF를 이용한 사용자 공간 이벤트 트레이싱 및 C 헬퍼를 통한 이벤트 처리 최적화

바이너리 계측

     * 소스 코드 접근이 불가능할 때 사용되는 바이너리 계측 방법 소개
     * bpftime, E9Patch, Frida 등의 도구 설명

분산 트레이싱

     * 서비스 간 트레이싱을 위한 OpenTelemetry, Zipkin, Odigos 등의 솔루션 언급

샘플링 프로파일러

     * 주기적으로 프로그램의 전체 호출 스택 샘플링하는 프로파일러 소개
     * Speedscope, Samply 등의 시간 축을 포함하는 UI 사용

QEMU 계측

     * 모든 트레이싱 도구가 실패할 때 사용되는 QEMU의 전체 에뮬레이션 및 훅킹
     * Cannoli, QEMU TCG Plugins, usercorn 등의 도구 소개

GN⁺의 의견

   이 글에서 가장 중요한 것은 다양한 유형의 문제를 해결하기 위해 사용할 수 있는 트레이싱 방법의 폭넓은 카탈로그를 제공한다는 점이다. 초급 소프트웨어 엔지니어에게도 이해하기 쉬운 수준으로 다양한 트레이싱 도구와 방법을 소개하고 있어, 트레이싱에 관심이 있는 사람들에게 매우 유익하고 흥미로운 내용을 담고 있다. 특히, 실제 사례를 통해 eBPF 트레이싱과 Perfetto 시각화를 결합한 예시는 실무에서의 적용 가능성을 보여주며, 독자들에게 새로운 인사이트를 제공할 수 있을 것이다.

        Hacker News 의견

     * Spall 개발자의 의견:
          + Spall은 글에서 언급된 경량 프로파일러 중 하나임.
          + 저자의 '암시적 순서 트리'에 대한 블로그 포스트가 인상적이었으며, 큰 트레이스를 위한 트리에 대한 다른 사람의 관점을 볼 수 있어 좋았음.
          + eytzinger-ordered 4-ary 트리가 165fps 이상에서도 30억 개 이상의 함수를 처리하는 데 문제가 없음.
          + 현재 타임스탬프 델타 압축을 작업 중이며, 이를 통해 이벤트를 더 작은 공간에 담아내려고 함.
          + Spall의 네이티브 빌드에서 128GB RAM으로 100억 개의 이벤트를 처리할 수 있기를 희망함.
     * Windows 애플리케이션 작업자에게 ETW 추천:
          + Windows 애플리케이션을 작업하는 사람들에게 Event Tracing for Windows(ETW)를 추천함.
          + Bruce Dawson의 블로그가 ETW에 대한 최고의 시작점임.
     * 오픈 소스 솔루션에 대한 개요:
          + 공간 내 오픈 소스 솔루션에 대한 상당히 좋은 개요임.
          + 시간 여행 디버깅이라는 중요한 트레이싱 영역이 누락되었음.
          + 하드웨어 트레이스, 계측, 결정적 재생을 활용하는 흥미로운 솔루션이 있음.
          + 프로그램의 특정 시점으로 돌아가 메모리를 전체적으로 재구성하여 디버깅할 수 있는 시각화 통합이 있으면 더 좋음.
     * Anthropic에서의 채용 방식:
          + Anthropic에서 Tristan과 함께 일할 기회에 대한 마지막 제안이 매우 매력적임.
          + Tristan이 작업할 내용에 대해 잘 설명함.
          + 블로그 포스트에 트레이스의 스크린샷이 더 있으면 좋을 것 같음.
     * Python 프로그램과 패킷 상관관계 기술:
          + 특정 인자를 가진 시스템 호출을 추적하여 Python 프로그램의 사용자 공간 이벤트와 패킷 간 상관관계를 찾는 기술에 대한 감탄.
     * IDE 플러그인 개발 팀의 경험:
          + 생산 중인 앱에 전통적인 디버거의 기능을 추가하는 IDE 플러그인을 개발 중임.
          + 사용자가 런타임 중 임의의 변수를 분석하여 코드 내에서 무슨 일이 일어나는지 이해할 수 있게 함.
          + 이 플러그인은 무료임.
     * JavaScript 실행 비용 프로파일링에 대한 업계의 필요:
          + JavaScript의 실행 비용을 결정적으로 프로파일링하는 더 나은 방법이 필요함.
          + Chromium에서 Linux perf를 이용한 시도가 있었지만, 해당 변경 사항은 제거됨.
          + CI에서 JavaScript의 비용을 결정적으로 측정하는 방법에 대한 팁이 궁금함.
     * dtrace 언급 및 bcantrill의 란트:
          + 저자가 dtrace를 간단히 언급함.
          + bcantrill이 bpftrace가 이벤트를 조용히 잃어버리는 문제와 dtrace가 그렇지 않은 이유에 대해 최근에 한 란트를 확인할 것을 추천함.
     * 유용한 도구들에 대한 감사:
          + 글에서 언급된 유용한 도구들에 대한 감사의 표현.
"
"https://news.hada.io/topic?id=12292","야근과 생산성 감소 사이의 놀라운 연관성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         야근과 생산성 감소 사이의 놀라운 연관성

연구 결과 요약: 업무 시간 외 근무와 생산성 감소의 놀라운 연관성

     * 업무 시간 외 근무는 종종 생산성 감소와 관련이 있으며, 이는 직원이 많은 업무를 동시에 처리하고 있어 우선순위 설정과 시간 관리에 도움이 필요함을 나타냄.
     * 업무 시간 중 휴식을 취하는 것은 직원의 생산성과 웰빙을 향상시키지만, 모든 책상 근로자의 절반은 거의 또는 전혀 휴식을 취하지 않음.
     * 책상 근로자들은 하루 중 집중적으로 일할 수 있는 이상적인 시간은 약 4시간이며, 하루에 2시간 이상 회의에 참석하는 것은 대부분의 근로자들이 회의 부담을 느끼는 분기점임.

생산성은 일하는 시간의 양이 아니라 질

     * 전 세계 책상 근로자들은 업무 시간 관리에 어려움을 겪고 있으며, 직급별로 이 문제를 다르게 경험함.
     * 많은 근로자들이 휴식 없이 일상 업무를 처리하고 있으며, 이러한 근로자들은 높은 소진(burnout) 경험률을 보임.
     * 휴식을 취하는 근로자들은 일과 삶의 균형, 스트레스 관리 능력, 전반적인 만족도 및 생산성에서 더 높은 점수를 보임.

최적의 생산성 시간: 아침형인지 밤형인지에 상관없이 오후의 침체는 현실

     * 책상 근로자들은 업무 시간의 70%가 생산적이라고 보고함.
     * 생산성이 가장 높은 시간에 대한 응답은 다양하지만, 대부분의 근로자들은 오후 늦게가 업무를 위한 최악의 시간이라고 동의함.
     * 가장 생산적인 사람들은 시간 관리 전략을 사용하며, 특정 작업을 완료하기 위해 시간을 차단하고, 특정 시간에만 이메일을 확인하며, 집중 타이머를 설정하는 등의 방법을 사용함.

업무의 ""골디락스 존"": 생산성을 최적화하기 위한 업무일과의 균형

     * 모든 산업, 역할, 직급에 적용되는 일률적인 일정은 없지만, 데이터 분석을 통해 직원들의 성공을 위한 공식이 나타남.
     * 집중 시간, 협업 시간, 사회적 연결, 휴식 시간의 이상적인 균형을 나타내는 ""골디락스 존""이 있음.
     * 회의에 너무 많은 시간을 할애하는 것은 집중할 시간이 부족하다고 느끼는 근로자들과 관련이 있음.

책상 근로자들이 AI에게 가장 원하는 것은?

     * 책상 근로자들은 AI 도구의 잠재력에 대해 흥분하고 있으며, 시간 관리에 대한 더 많은 통제를 기대함.
     * AI 도구의 도입은 아직 초기 단계에 있으며, 근로자의 20%만이 업무에 AI 도구를 사용한 경험이 있음.
     * 근로자들은 AI가 미래에 회의 노트 및 요약, 글쓰기 지원, 워크플로우 자동화 등에서 가장 가치를 제공할 것으로 기대함.

GN⁺의 의견

   이 연구에서 가장 중요한 것은 업무 시간 외 근무가 생산성에 부정적인 영향을 미칠 수 있다는 점과 휴식이 생산성과 웰빙에 긍정적인 영향을 미친다는 점입니다. 이 글은 직장인들에게 흥미로울 수 있으며, 업무와 휴식의 균형을 찾는 데 도움이 될 수 있는 유용한 정보를 제공합니다. AI 기술의 발전이 업무 효율성을 높이는 데 어떻게 기여할 수 있는지에 대한 기대감도 흥미로운 주제입니다.

   모두가 알고 있지만 애써 무시하는 사실이죠.

   정말 알고있는걸까요?

        Hacker News 의견

     * 경험에 따르면, 일하는 시간은 중요하지 않음. 관리자가 사전에 업무를 완전히 이해하는 것은 드물고, 개발자들도 마찬가지일 수 있음. 일정이 과도하거나 부족한 경우가 자주 발생하며, 문제가 생기면 그에 맞게 일해야 함. 때로는 일찍 끝낼 수도 있지만, 이는 완전히 근로자의 손에 달린 것은 아님. 시작하기 전까지는 알 수 없음. 더 중요한 것은 시간 내에 신뢰할 수 있는 결과를 내고 모두가 그 과정에 만족하는 것임. 이는 팀 전체에서 이루기 복잡한 균형임. 장기적인 이익을 인식하고 각자의 역할에 만족해야 함. 약속된 결과 없이 야간에 천천히 일하는 것은 일부에게 큰 기쁨임. 때때로 다음 날 무엇을 할지 알기 위해 업무와 놀아야 함. 이는 요구되는 범위를 벗어나지만, 관리의 거짓과 스트레스로 덮인 평범한 프로젝트 대신 성공적인 프로젝트에
       필수적임.
     * 슬랙의 직장인 지수에 따르면, 퇴근 후에도 일하는 것을 의무감으로 여기는 직원들보다 퇴근 시 로그오프하는 직원들이 20% 높은 생산성 점수를 기록함. 그러나 이 '생산성' 데이터는 자가 보고된 것으로, 야간 근무자들이 실제보다 낮게, 9-5 근무자들이 실제보다 높게 평가했을 가능성을 배제할 수 없어 이 데이터는 무의미함.
     * 퇴근 후에도 일하는 것을 의무감으로 여기는 직원들이 20% 낮은 생산성 점수를 기록했다는 주장에 대해, 생산성이 낮은 사람들이 더 많은 시간을 일해야 할 수도 있음을 지적함.
     * 표준 근무 시간 외에 일하는 것이 선택적이고 개인의 일정이나 개인적인 야망을 더 잘 맞추기 위한 경우, 부정적인 영향을 보고하지 않으며 웰빙과 생산성 점수에서 약간의 상승을 보고함.
     * ADHD를 가지고 있다고 생각하기 전에는, 다음 회의나 다음에 누군가가 방해할 일에 대비해 '준비' 상태로 많은 시간을 보냈음. 다른 사람들이 집에 간 후에야 실제 업무를 시작할 수 있었음.
     * 야간 근무가 생산성 손실을 초래하는지, 아니면 뒤처지는 사람들이 따라잡기 위해 야간 근무를 하는지에 대한 통제 방법에 대한 질문 제기.
     * 이 주제는 많은 감정과 문화적 차이를 포함하고 있음. '문화적 차이'는 일본에서의 10-12시간 근무일이 일반적인 것처럼 거시적일 수도 있고, 개인의 다른 생활 패턴처럼 미시적일 수도 있음. 한 직원은 이상적인 엔지니어였지만, 일찍 출근하는 것은 불가능했음. 정오쯤 출근해 새벽 2시까지 남아 있었음. 일본인들은 그를 좋아했지만, 미국 HR은 싫어했고, 관리자로서 여러 번 문제가 되었음. 그러나 그의 이상한 근무 시간을 지지했고, 일본이 지지해 주었음. 은퇴 후에는 직장 생활보다 더 열심히 일하며 생산적임. 중요한 것은 자신의 일정을 관리하는 것임.
     * 최근 큰 토론이 있었음: [해당 토론 링크]
     * 정규 근무 시간 외에 일하는 것을 의무로 느끼지 않는 것이 중요함. 가장 생산적인 시간은 이른 아침이나 늦은 밤임. 그 시간에는 직업적으로나 개인적으로 일어나는 일이 적어 방해받지 않고 집중할 수 있음. 정규 근무 시간 외에 더 창의적이고 생산적이라는 것을 알기에, 낮 시간에는 휴식을 취하고 나중에 시간을 보충함.
     * '생산성 점수'가 무엇인지에 대한 의문 제기. 사람들이 생산적이라고 느끼는 것을 '점수'라고 부르는지에 대한 정보를 찾을 수 없음.
"
"https://news.hada.io/topic?id=12270","구이(Gooey): 거의 모든 파이썬 커맨드 라인 프로그램을 완전한 GUI 애플리케이션으로 변환","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         구이(Gooey): 거의 모든 파이썬 커맨드 라인 프로그램을 완전한 GUI 애플리케이션으로 변환

Gooey를 사용하여 Python 콘솔 프로그램을 GUI 애플리케이션으로 변환하기

     * Gooey는 Python 3 콘솔 프로그램을 사용자 친화적인 GUI 애플리케이션으로 변환하는 도구임.
     * 커맨드 프롬프트 대신 GUI를 제공하여 프로그램을 더 쉽고 아름답게 만들 수 있음.
     * 비프로그래머 대상의 스크립트나 데이터 이동 등의 작업을 위한 유틸리티를 만들 때 유용함.

Gooey의 작동 방식

     * Gooey는 argparse 선언이 있는 메소드에 데코레이터를 추가하여 코드에 연결됨.
     * 실행 시 파이썬 스크립트를 파싱하여 ArgumentParser 참조를 추출하고 GUI를 조립함.
     * GooeyParser를 사용하여 GUI에서 표시되는 위젯을 더 세밀하게 제어할 수 있음.

Gooey의 국제화

     * Gooey는 다양한 언어로 쉽게 번역될 수 있으며, 현재 18개 이상의 번역이 포함되어 있음.
     * 새로운 언어 지원은 gooey/languages/ 디렉토리에 키/값 쌍을 추가하는 것만큼 간단함.

Gooey의 전역 설정

     * Gooey의 전반적인 모양과 느낌은 데코레이터에 인수를 전달하여 사용자 정의할 수 있음.
     * 인코딩, 언어, 시작 크기, 폰트 설정 등 다양한 구성 요소를 사용자 정의할 수 있음.

Gooey의 레이아웃 사용자 정의

     * Gooey는 몇 가지 간단한 사용자 정의를 통해 유연한 레이아웃을 제공함.
     * 사이드바 표시 여부, 탭 그룹 사용 등을 통해 다양한 레이아웃 옵션을 제공함.

Gooey의 실행 모드

     * Gooey는 내용 유형과 사용자의 경험 수준에 맞게 레이아웃을 조정할 수 있는 여러 가지 표시 모드를 제공함.
     * 고급, 기본, 설정 없음 모드를 통해 다양한 사용자 요구에 맞춤형 GUI를 제공할 수 있음.

Gooey의 메뉴

     * 사용자 정의 메뉴 그룹과 항목을 Gooey의 메뉴 바에 추가할 수 있음.
     * 다양한 유형의 메뉴 옵션을 지원하여 프로그램 정보, 메시지 대화 상자, 링크 등을 제공함.

Gooey의 동적 검증

     * 사용자 입력을 프로그램에 전달하기 전에 Gooey는 선택적으로 사전 검증을 실행하여 모든 인수가 검증을 통과하는지 확인할 수 있음.

Gooey의 생명주기 이벤트 및 UI 제어

     * Gooey는 프로그램의 성공적인 실행이나 실패에 대한 추가 후속 조치를 취하고 UI의 현재 상태를 제어할 수 있는 생명주기 후크를 제공함.

Gooey의 진행 상황 표시

     * Gooey는 텍스트 진행 업데이트를 기반으로 진행 상황 표시줄의 상태를 업데이트할 수 있음.
     * 정규 표현식과 사용자 정의 평가 표현식을 통해 진행 상황을 Gooey에 알릴 수 있음.

Gooey의 아이콘 사용자 정의

     * Gooey는 기본 아이콘을 사용자 정의 이미지/아이콘으로 대체할 수 있는 기능을 제공함.
     * image_dir 인수를 통해 사용자 정의 이미지 디렉토리를 지정할 수 있음.

Gooey의 패키징

     * Gooey를 실행 파일로 패키징하는 것은 매우 쉬우며, pyinstaller를 사용하여 애플리케이션을 준비된 실행 파일로 번들링할 수 있음.

GN⁺의 의견

   이 글에서 가장 중요한 것은 Gooey가 파이썬 콘솔 프로그램을 GUI 애플리케이션으로 쉽게 변환할 수 있다는 점입니다. 이는 프로그래머가 아닌 사용자들에게 프로그램을 더 친숙하고 접근하기 쉽게 만들어 줄 수 있으며, 이로 인해 개발자들은 사용자 인터페이스에 대한 걱정 없이 로직에 집중할 수 있습니다. Gooey의 다양한 설정과 사용자 정의 옵션은 개발자들에게 매력적인 선택지를 제공하며, 이는 GUI 개발의 진입 장벽을 낮추는데 크게 기여할 수 있습니다.

        Hacker News 의견

     * Gooey 프로젝트에 대한 개발자의 설명
          + Gooey는 오래된 프로젝트로, 처음 시작할 때는 argparse가 탄탄한 선택이었음.
          + 현재 Gooey는 JSON을 사용하며 argparse와 분리되어 있음.
          + argparse는 여전히 주요 인터페이스로 남아 있으나, 다른 대안이 마땅치 않음.
          + Gooey를 이용해 파이썬뿐만 아니라 임의의 실행 파일도 호출할 수 있음.
          + 마지막 커밋이 2년 전이라는 점에 대해, 나이가 들고 우선순위가 바뀌면서 무료로 소프트웨어 작업을 정당화하기 어려워졌다는 아쉬움 표현.
     * Gooey와 argparse의 관계에 대한 논의
          + argparse는 간단한 작업에 적합하지만, Click 기반의 CLI가 많고, Click을 기반으로 하는 인기 있는 CLI 라이브러리도 존재함.
          + Click과 호환되는지 확인되지 않았으며, argparse에만 국한된다면 ""거의 모든""이라는 표현은 정확하지 않을 수 있음.
          + 프로젝트에 대한 신뢰를 주지 못하는 열린 이슈들이 있음에도 불구하고, 프로젝트 자체는 흥미로운 아이디어를 담고 있음.
     * Gooey 관련 이전 토론 링크 제공
          + 2021년 6월과 2014년 8월에 해커뉴스에서 Gooey에 대한 토론이 있었음을 알려주는 링크.
     * 운영 체제와 셸이 프로그램을 더 잘 실행할 수 있기를 바라는 의견
          + 프로그램이 JSON/프로토콜 형식으로 통신하여 셸 명령 구조나 GUI를 개선할 수 있기를 희망함.
          + 현재는 셸 완성 파일을 내보내고, 다양한 플래그 스타일과 파싱 라이브러리가 존재하며, GUI는 없는 상황임.
     * Textual 프레임워크 소개
          + Python으로 간단한 API를 사용해 터미널과 웹 브라우저에서 실행되는 사용자 인터페이스를 구축할 수 있는 Textual 프레임워크 소개.
     * ffmpeg을 위한 GUI 버전에 대한 문의
          + ffmpeg의 파라미터를 GUI로 제공하는 도구에 대한 관심 표현.
     * 사용자 입력을 기대하는 CLI 도구와 Gooey의 통합 방법에 대한 질문
          + 게임 엔진 디버깅을 위한 bisect 스크립트에 GUI를 추가하여 사용자가 문제를 진단하는 데 도움을 줄 수 있는 방법에 대한 관심.
     * GUI에서 CLI로 변환하는 도구에 대한 관심
          + 반대로 GUI를 CLI로 변환하는 도구에 대한 희망 표현.
     * Naked Objects 컨셉에 대한 언급
          + Java 클래스와 어노테이션을 정의하면 GUI나 웹 프론트엔드가 자동으로 생성되는 아이디어인 Naked Objects에 대한 설명.
     * Gooey가 웹 앱을 생성할 수 있을지에 대한 호기심
          + Gooey가 React나 JS가 없는 웹 앱을 생성할 수 있는지에 대한 궁금증.
          + CLI 프로그램 앞에 웹 프론트엔드를 두는 저코드 도구인 Python Script Server에 대한 비교 언급.
"
"https://news.hada.io/topic?id=12331","Whisper로 비교한 Nvidia 4090과 M1/M2/M3 with MLX","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Whisper로 비교한 Nvidia 4090과 M1/M2/M3 with MLX

     * 애플이 공개한 머신러닝 프레임워크 MLX의 성능 벤치마크
     * 10분짜리 오디오를 Whisper로 Transcribe
          + M1 Pro(2021모델) + MLX + 32GB 램 : 216초
          + I7 + 4090 + 64GB 램 : 186초
               o 2000€ 짜리 GPU가 M1에 비해 30초(16%) 빠름
          + M2 Ultra(76 GPU) : 95초
          + M3 Max (40 GPU) : 100초
     * Nvidia에 최적화된 insanely-fast-whisper 를 사용하면 4090으로 8초만에 끝남
          + 이 모델을 M1에서 돌리면 359초로 더 오래 걸림

   MLX - 애플 실리콘을 위한 Numpy와 비슷한 어레이 프레임워크
"
"https://news.hada.io/topic?id=12321","Trippy - Traceroute 와 ping을 결합한 네트워크 이슈 분석 도구 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Trippy - Traceroute 와 ping을 결합한 네트워크 이슈 분석 도구 오픈소스

     * 멀티 프로토콜 추적 : ICMP, UDP, TCP, IPv4 & IPv6
     * 멀티 플랫폼(Rust): 맥,리눅스,BSD,윈도우
     * 다양한 추적 옵션 커스터마이징: 패킷 사이즈 & 페이로드 패턴, TTL, 라운드 기간, Hops, 소스&데스티네이션 포트, 소스 어드레스 및 인터페이스
     * 깔끔한 TUI 인터페이스: 멀티 타겟 추적, Hop Stat 표시, 인터랙티브 월드 맵 및 RTT 차트, 컬러테마 및 키바인딩 지원
     * DNS: 시스템, 외부 및 커스텀 리졸버 지원, 레이지 리버스 DNS 쿼리, ASN 및 이름 검색
     * json, csv 등으로 트레이싱 리포트 작성. Graphviz dot 차트 제공
     * Equal-cost multi-path routing (ECMP): classic, paris, dublin
     * RFC4884 ICMP Multi-Part Messages
     * Unprivileged 모드 지원

   잠깐 설치해서 살펴보니
   포트 지정 옵션도 있어 네트워크를 통한 접근여부 확인 관련 대부분의 기능을 제공하는 듯 합니다. 네트워크용 top 같은 느낌이네요.
"
"https://news.hada.io/topic?id=12236","Gemini "오리" 데모, 실시간이나 음성으로 진행되지 않아","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Gemini ""오리"" 데모, 실시간이나 음성으로 진행되지 않아

        Hacker News 의견

     * 첫 번째 컴퓨터 과학 수업에서 라즈베리 파이를 사용하여 코딩 경험이나 지도 없이 ""무언가""를 만들라는 과제를 받음.
          + 세 명의 팀원은 습기 센서를 구매하여 홍수 감지 시스템을 만들어 다리 아래에 설치하고, 홍수가 날 때 관련자에게 이메일을 보내는 아이디어를 생각함.
          + 시연에서는 간단한 스크립트를 실행하여 ""습기 대기"", ""습기 감지"" 등의 메시지를 출력하고, 이메일을 보낸 것처럼 연출하여 프로젝트를 성공적으로 마침.
     * 구글이 트랜스포머를 발명했음에도 불구하고 여러 분야에서 경쟁사에게 밀리는 상황에 대한 실망감 표현.
          + 구글 문서도구, 클라우드 서비스, 자율주행 기술 등에서 마이크로소프트, 아마존, 테슬라 등에게 시장을 내주고 있음.
     * 선다르 피차이가 AI 모델에 사실 여부를 판단하기 어려운 질문을 하여 모델의 정확성에 의문을 제기함.
          + 벤치마크 결과는 큰 개선이 없었지만, 시연에서는 정확한 정보를 제공하는 것처럼 보임.
          + 다중 모달 모델이 AI 발전에 중요하다고 보지만, 모델이 실제로 인과관계를 모델링하는지에 대한 증명이 필요함.
     * 젬마이니 웹페이지와 내용이 애플 마케팅을 모방한 것처럼 느껴짐.
          + 과장된 언어 사용, 다양성에 대한 과도한 강조, 불필요한 애니메이션 등이 작은 회사가 큰 회사인 것처럼 보이려는 시도로 보임.
     * 구글의 모델 발표가 비디오와 오디오 입력을 받을 수 있다고 했지만, 실제로는 편집된 시연이었음을 지적함.
          + 음악 생성 부분도 실제 모델의 출력이 아니라 단순한 설명에 불과했음.
          + 구글이 벤치마크와 시연을 조작하고, 주주들을 위한 과장된 홍보에만 집중하고 있다고 비판함.
     * Swype 텍스트 입력 방식을 오랫동안 사용해온 경험을 공유함.
          + 처음에는 익숙하지 않을 수 있지만, 사용에 익숙해지면 매우 효율적임.
          + 모든 제품이 처음에는 어려움을 겪을 수 있으나, 시간이 지나면 장점이 부각됨.
     * 트위터를 통해 연결된 블룸버그 페이지가 내려간 상황을 보고함.
          + 새로운 페이지에서는 일부 내용이 조작되었다고 언급함.
     * 영상, 오디오, 이미지 등이 실제인지 아닌지에 대한 신뢰 문제를 제기함.
          + 원격 근무자가 실제 인간인지, 부분적으로 생성된 존재인지 어떻게 확인할 수 있을지에 대한 의문을 표함.
     * 젬마이니 기능에 대한 잘못된 인식을 가질 수 있지만, 실시간 상호작용이 곧 앱에 포함될 것으로 기대함.
     * AI 기능에 대한 오해가 있을 수 있지만, 영상에는 편집에 대한 면책 조항이 있음.
          + 이미 좋은 음성 인식과 텍스트 음성 변환 기술이 존재하므로, 이 부분은 문제가 되지 않음.
          + 주요 질문은 컵 게임과 관련된 부분으로, 모델이 짧은 비디오 입력을 받는지 여부에 대한 궁금증을 나타냄.
"
"https://news.hada.io/topic?id=12277","Standard Webhooks Specification","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Standard Webhooks Specification

     * 웹훅을 쉽고, 안전하고, 안정적으로 전송하기 위한 오픈소스 도구 및 가이드 라인
     * Zapier, Twilio, ngrok, Supabase, Kong 등의 엔지니어들이 기술 운영 위원회를 구성
     * Standard Webhooks 소개
          + 웹훅은 점점 더 대중화되고 있으며, 세계 유수의 기업에서 자사 API 사용자에게 이벤트를 전송하는 데 사용중
          + 하지만 웹훅 제공업체마다 서로 다른 구현 방식과 다양한 품질을 사용하는 등 생태계가 세분화되어 있음
          + 심지어 고품질의 구현도 다양하기 때문에 본질적으로 호환되지 않아, 이러한 파편화는 공급자와 소비자 모두에게 고통이며 혁신을 저해함
          + 소비자 입장에서는 공급자마다 웹훅을 다르게 처리하고, 웹훅을 검증하는 방법을 다시 배워야 하며, 맞춤형 구현으로 인해 문제가 발생하기도 함
          + 공급자의 입장에서는 이미 해결된 문제(보안, 이전 버전과의 호환성 등)에 대해 다시 설계해야 한다는 것을 의미
          + 우리는 업계 전반에 걸쳐 웹훅을 표준화하는 간단한 솔루션을 제안함
          + 이 디자인 문서에서는 기존 업계 모범 사례를 기반으로 한 엄격한 웹후크 가이드라인을 제안하며, 이를 ""Standard Webhooks""라고 부름
          + ""Standard Webhooks""는 JWT가 API 인증을 위해 수행한 일을 웹후크에서도 수행할 수 있다고 믿음
          + 일관되고 다양한 구현에서 지원되는 공통 프로토콜을 채택하면 위의 문제를 해결하고 웹후크 생태계의 새로운 도구와 혁신을 가능하게 할 것
          + 이를 위해 우리는 웹후크 전송을 위한 오픈 소스 및 커뮤니티 중심의 도구와 가이드라인을 만들었음
     * 디자인 목표 : 보안, 신뢰성, 상호 운용성, 단순성, 이전 버전 및 이후 버전과의 호환성
     * Payload 는 HTTP Body에 넣어서 보내지면, JSON 으로 구성. 최대 크기 제한은 없으나 20kb 이하를 권장
     * 웹훅의 Authenticy 확인을 위해 메타데이터 및 Signature Scheme을 정의
"
"https://news.hada.io/topic?id=12344","해커들이 발견한 제3자 수리 후 고장 나도록 설계된 기차","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    해커들이 발견한 제3자 수리 후 고장 나도록 설계된 기차

기차 제조사의 비밀 해제

     * 폴란드의 기차 운행에 영향을 미치는 독특한 수리권 문제가 발생함.
     * 윤리적 해킹 그룹인 Dragon Sector가 기차 소프트웨어 분석을 요청받음.
     * 기차 제조사 Newag는 해커들을 명예훼손으로 고소하겠다고 위협함.

기차는 제3자 수리 후 고장 나도록 설계됐다는 주장

     * Dragon Sector는 Newag가 Impuls 기차의 제어 시스템에 코드를 입력해 독립 수리점에서 며칠 동안 주차된 경우 기차가 작동하지 않도록 했다고 주장함.
     * 특정 위치에서 기차가 움직이지 않도록 하는 논리가 적용되었으며, 이 위치는 SPS와 같은 업체의 서비스 홀임.
     * 특정 부품이 제조사 승인된 일련번호 없이 교체된 경우 기차가 작동하지 않도록 하는 코드도 포함되었다고 함.

소송 위협이 해커들을 침묵시키지 못함

     * Dragon Sector는 기차 운전사의 패널에서 입력할 수 있는 '문서화되지 않은 잠금 해제 코드'를 발견하여 기차를 다시 작동시킴.
     * Newag는 소프트웨어에 의도적인 고장을 유발하는 솔루션을 도입한 적이 없다고 주장함.
     * Dragon Sector와 SPS는 기차의 제어 시스템을 방해한 적이 없다고 부인함.

GN⁺의 의견

     * 이 사건은 소비자의 수리권을 둘러싼 중요한 논쟁을 제기함. 제조사가 독점적인 수리 서비스를 강제하려는 시도에 대한 윤리적, 법적 문제가 대두됨.
     * 해커들이 기차의 소프트웨어를 분석하여 문제를 해결한 것은 기술의 힘과 지식 공유의 중요성을 보여줌.
     * 이 기사는 기술적 문제를 넘어서 기업의 정책과 소비자 권리에 대한 흥미로운 토론을 촉발시킬 수 있는 잠재력을 가짐.

        Hacker News 의견

     * 이전 관련 토론 스레드:
          + 이전 토론 1
          + 이전 토론 2
     * 제품 설계 문제에 대한 불만:

     ""제품이 고장 나도록 설계된 것뿐만 아니라, 실제 운행 중에도 고장 날 수 있는 상황까지 초래했다는 사실이 문제임. 제조사가 승객의 생명을 위험에 빠뜨린 것에 대해 회사 경영진에게 개인적 책임을 물어야 한다고 생각함.""
     * 더 나은 기사 작성 요청:
          + 기사 링크
     * 소프트웨어 조작에 대한 의혹:

     ""Dragon Sector에 따르면, Newag은 Impuls 기차의 제어 시스템에 코드를 입력하여, GPS 추적기가 기차가 독립 정비소에 며칠 동안 주차되어 있음을 감지하면 작동을 중지시키도록 했다고 함. 이는 매우 심각한 문제로 보임.""
     * 개발자의 증거 보존 희망:

     ""이를 구현하도록 지시받은 개발자가 누가 지시했는지를 증명하는 문서를 보관했기를 바람. 그렇지 않으면 충성이 어떻게 보상받는지 알게 될 것임.""
     * 중복된 뉴스에 대한 지적:
          + 원본 뉴스 토론
          + 회사의 반박
          + 중복된 토론
     * 원격 조작 가능성에 대한 회사의 부인:

     ""Newag은 '어떠한 원격 개입도' '사실상 불가능하다'고 주장함. 하지만 경험상, 자동화/로봇 시스템을 유지하는 대부분의 회사들은 원격으로 소프트웨어에 빠르고 효율적으로 접근하기 위한 '백도어'를 유지하고 있으며, 이는 시스템을 원격으로 비활성화하기 위함이 아니라 문제를 해결하거나 수정하기 위함임. 따라서 '불가능하다'고 말하는 것은 사실이 아님.""
     * 사기 혐의에 대한 법적 처벌 가능성:

     ""사기 혐의로 기소되고 구금될 수 있는 지점이 있는지 궁금함.""
     * 사건 요약:

     ""폴란드 기차 유지보수 회사 SPS는 Newag이 제조한 기차들이 '무작위로' 고장 나고 수리가 불가능해지면서, 수리 지연에 대한 벌금을 폴란드 정부로부터 수백만 달러를 물게 되자 의심을 품음. SPS는 비밀리에 해커 그룹 Dragon Sector를 고용해 2개월 동안 Newag 기차 코드를 조사하도록 함. 해커들은 '후기 자본주의' 또는 구체적으로는 기업 보호주의, 방해, 몸값 요구 등을 포함하는 놀라운 사실을 발견함. 예를 들어, 해커들이 발견한 비밀 코드 중 일부는 다음과 같음:
          + 기차가 5개 폴란드 기차 유지보수 회사의 창고 주변 지리적 영역에 들어가면 기차를 고장 나게 함.
          + 기차가 100만 킬로미터를 달리면 고장 나게 함.
          + 기차가 10일 동안 움직이지 않으면 고장 나게 함.
          + '고장'을 비활성화하는 비밀 버튼 조합이 있음.""
     * 소프트웨어 조작 방법에 대한 놀라움:

     ""경쟁사의 위도/경도에 기차가 주차되어 있으면 기차를 무력화시키는 방식으로, 코드에 백도어나 다른 재미있는 이스터 에그를 추가하는 방법에는 여러 가지가 있지만, 이들은 매우 번거롭고 명백한 착취 방법을 선택함.""
"
"https://news.hada.io/topic?id=12327","2024년에 공공 도메인에 들어갈 작품들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         2024년에 공공 도메인에 들어갈 작품들

     * 디즈니의 스팀보트 윌리(미키마우스), J.R.R. 톨킨, 아가사 크리스티, 버지니아 울프 등이 포함
     * 매년 1월 1일, 새로운 작품들이 공공 도메인에 들어가며 자유롭게 즐기고, 공유하고, 재사용할 수 있게 됨
     * 2024년에는 1953년에 사망한 사람들의 작품(저작권 기간이 '사후 70년'인 국가), 1973년에 사망한 사람들의 작품(저작권 기간이 '사후 50년'인 국가), 그리고 1928년에 출판된 미국의 영화와 책들이 공공 도메인에 포함됨
     * 12월을 거치며 매일 새로운 작품이 공개되는 달력 형식으로, 1월 1일이 되면 모든 작품이 공개되며 특별한 블로그 포스트가 게시될 예정임

GN⁺의 의견

     * 공공 도메인에 들어가는 작품들은 창작자의 사후 일정 기간이 지난 후 누구나 자유롭게 이용할 수 있게 되는데, 이는 문화와 지식의 자유로운 유통을 촉진하는 중요한 사건임
     * 2024년에는 칼 블로스펠트, 파블로 피카소, 월트 디즈니의 '스팀보트 윌리' 등 유명한 작품들이 공공 도메인에 포함되어, 이러한 작품들을 더 많은 사람들이 접하고 재창조할 수 있는 기회가 될 것임
     * 공공 도메인의 중요성을 이해하고, 이를 통해 창작물이 어떻게 사회적 가치를 창출하고 문화적 유산이 보존되는지 인식하는 것은 모든 창작자와 이용자에게 유익함

   미국 저작권법에 Disney가 끼친 영향

   요기 보시면 디즈니가 얼마나 노력했는지 알 수 있습니다. 이제는 드디어 풀리나 보네요.

        Hacker News 의견

     * 2024년에 저작권이 만료되는 책들에 대한 흥분
          + 2024년에는 아가사 크리스티, W.E.B. 듀보이스, 에블린 워, 나보코프, D.H. 로렌스, H.G. 웰스, 버지니아 울프, A.A. 밀른의 책들이 저작권 만료를 앞두고 있음.
          + 브레히트의 희곡 ""셋펜니 오페라""와 유진 오닐의 ""Strange Interlude""도 포함됨.
     * 디즈니 애니메이션과 '스팀보트 윌리' 저작권 문제
          + 디즈니 애니메이션은 '스팀보트 윌리'의 클립과 노래를 오랫동안 오프닝 버퍼로 사용해왔음.
          + 이는 월트 디즈니에 대한 경의의 표시로 존 라세터가 디즈니 애니메이션을 맡았을 때 처음 사용되었으나, 저작권 법률가들은 이로 인해 '스팀보트 윌리'를 공공 도메인에서 사용하는 것이 저작권 침해가 될 수 있다고 주장함.
          + 이 문제가 법적으로 시험될지 주목됨.
     * '스팀보트 윌리'의 공공 도메인 진입 예정
          + '스팀보트 윌리'가 공공 도메인으로 진입할 예정이며, 디즈니가 이를 막으려고 안간힘을 쓸 것으로 예상되는 한 해의 마지막 3주가 흥미로울 것임.
     * J.R.R. 톨킨의 저작권 만료에 대한 혼란
          + J.R.R. 톨킨의 작품이 그가 사망한 1973년 이후 뉴질랜드(및 기타 국가들)에서 내년에 공공 도메인으로 진입하는지, 아니면 영국에서 출판되었기 때문에 그렇지 않은지, 또는 뉴질랜드 등 일부 국가에서는 공공 도메인으로 진입하지만 다른 국가에서는 그렇지 않은지에 대한 의문 제기.
     * UI 디자인의 비효율성에 대한 비판
          + UI 디자이너가 일상적인 정보를 전달하기 위해 가장 비효율적인 방법을 만들려고 시도하는 것 같은 느낌을 줌.
     * T-spline 특허 만료 소식
          + T-spline에 대한 특허가 2024년에 만료되며, 이는 3D 모델링 시스템에 큰 소식임.
     * '잔 다르크의 수난' 영화의 공공 도메인 진입
          + 칼 테오도르 드라이어 감독의 '잔 다르크의 수난'은 무성 영화 중에서도 꽤 좋은 작품임.
          + 과거에는 저렴한 DVD 출시를 의미했을 수 있지만, 현재 영화의 공공 도메인 진입의 중요성에 대해 확신할 수 없음.
     * 공공 도메인의 날 2024년 관련 정보
          + 3일 전 관련 기사: ""2024년 공공 도메인의 날이 다가온다: 알아야 할 것들""
     * 코리도어 크루의 미키 마우스 계획
          + 코리도어 크루가 1월 1일에 미키 마우스와 관련된 무언가를 계획 중임.
     * 공공 도메인 진입에 대한 비판적 견해
          + 거의 모든 사람들이 자신에게 영향을 준 작품이 공공 도메인으로 진입하기 전에 사망하는 것은 나쁜 일이라는 의견 제시.
"
"https://news.hada.io/topic?id=12351","보이저 1호, 지구와의 통신 중단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           보이저 1호, 지구와의 통신 중단

보이저 1호의 통신 문제

     * NASA의 보이저 1호 우주선이 컴퓨터 오류를 겪고 있으며, 이로 인해 46년 된 탐사선과 지구 간의 통신에 문제가 발생함.
     * 엔지니어들이 이 문제를 해결하기 위해 노력 중이며, 이 우주선은 태양계 외곽의 미지의 우주 영역을 탐험 중임.
     * 보이저 1호는 지구에서 약 240억 킬로미터 떨어진 가장 먼 우주선이며, 그의 쌍둥이인 보이저 2호는 200억 킬로미터 이상을 여행함.

보이저 프로브의 장수 비결

     * 보이저 프로브는 원래 5년간 지속될 것으로 설계되었으나, 현재까지 가장 오래 운영된 우주선으로 기록됨.
     * 이들의 예상보다 긴 수명은 목표였던 목성, 토성, 천왕성, 해왕성 근접 비행을 성공한 후에도 우리 태양계 및 그 너머에 대한 추가적인 통찰을 제공함.
     * 그러나 예상치 못한 긴 여정은 도전 없이 이루어진 것은 아니며, 보이저 1호는 현재 세 개의 온보드 컴퓨터 중 하나에서 문제를 겪고 있음.

장거리 오류

     * 문제는 11월 14일에 처음 발견되었으며, 비행 데이터 시스템의 통신 장치가 반복적인 패턴의 이진 코드를 보내고 있음.
     * 우주선은 여전히 지구에서 전송된 명령을 수신하고 수행할 수 있지만, 통신 장치의 문제로 인해 과학적 또는 공학적 데이터가 지구로 반환되지 않음.
     * NASA 엔지니어들은 문제의 근본 원인에 대한 정보를 수집하고 있으며, 이 과정은 몇 주가 걸릴 수 있음.

보이저 프로브 유지 관리

     * 보이저 프로브의 수명을 연장하기 위해 팀은 점차적으로 기기를 끄고 전력을 절약하고 있음.
     * 두 우주선 모두 예상치 못한 문제와 통신 중단을 겪었으며, 보이저 2호는 2020년에 7개월 동안 지구와 통신할 수 없었음.
     * 팀은 보이저 1호가 정기적으로 데이터를 보내는 것을 복구하기를 희망하고 있으며, 장기적인 가치는 그 지속 기간에 있음.

   GN⁺의 의견:
     * 보이저 1호의 통신 문제는 우주 탐사의 한계와 기술의 지속 가능성에 대한 중요한 사례를 제공함.
     * 이 기사는 인류가 보낸 기계가 어떻게 수십 년 동안 우주의 미지를 탐험하고 있는지에 대한 흥미로운 통찰을 제공함.
     * 보이저 프로브의 장수는 과학적 호기심과 인간의 탐험 정신을 상징하며, 이는 사람들에게 영감을 줄 수 있는 요소임.

        Hacker News 의견

     * 한 고등학교 수학 및 과학 교사는 자신이 가장 좋아하는 그래프가 보이저 1호가 태양계를 벗어났음을 보여주는 그래프라고 말함. 이 교사는 학생들과 이 그래프를 공유하며 하루 종일을 보냈고, 학생들이 그 의미를 깨닫는 순간을 보는 것이 매우 즐거웠음을 회상함.
     * 한 사용자는 보이저 우주선이 처음 발사되었을 때는 어렸지만, 1980년대 중반부터 이 우주선의 모험을 따라왔음을 밝힘. 넵튠을 지나가는 동안 TV 특별 방송에서 단 하나의 사진만 받고 색상을 입힐 시간이 없었던 것에 실망했던 기억을 나눔. 그러나 보이저 우주선을 설계하고 오랜 시간 동안 운영해온 엔지니어들의 창의성에 늘 영감을 받았다고 강조함.
     * 보이저에 대해 읽을 때마다 인간으로서 자부심과 존경심을 느낀다고 말하는 사용자가 있음. 우리가 매우 해로운 환경에서 46년 동안 멀어져 가면서도 여전히 작동하고 우리에게 '엽서'를 보내는 우주 탐사선을 보낼 수 있었다는 사실이 놀랍다고 표현함.
     * 다른 댓글에서 언급된 것처럼, 보이저의 후속 모델을 생각할 때가 지났으며, 외계 행성을 지나치는 것이 아니라 보이저보다 더 빠른 속도로 우주를 탐험할 수 있는 기술에 대해 논의함. 이온 추진, 광항해, 그리고 핵분열을 이용한 추진 방법이 가능한 옵션으로 제시됨.
     * 한 사용자는 스타트렉 모션 픽처 감독판을 성인이 되어 처음으로 본 후 NASA와 공상과학 사이의 연결고리가 인상적이었다고 언급함.
     * 우주선이 지구로부터 매우 멀리 떨어져 있음에도 불구하고 여전히 신호를 받을 수 있는 방법에 대해 궁금해하는 사용자가 있음. 안테나가 어떻게 그렇게 방향성을 가지면서도 지구를 정확히 향할 수 있는지, 또한 잡음을 어떻게 제거하는지에 대한 의문을 제기함.
     * 머스크의 저렴한 로켓을 이용해 더 많은 이러한 탐사선을 발사하지 않는 이유에 대해 의아해하는 사용자가 있음.
     * 보이저 1호가 46년 동안 22광시간을 여행한 것에 대해 흥미롭다고 말하는 사용자가 있음.
     * NASA가 다시 연락할 수 없게 되고, 보이저가 우리의 기억 조각을 안고 혼자 어둠 속으로 용감하게 나아갔다면, 결국 그것을 이해할 수 있는 종족에 의해 발견되기를 바란다는 사용자의 희망적인 메시지가 있음.
     * 보이저 우주선을 작동시키고 소프트웨어 업데이트를 개발하는 팀에 대한 최근 다큐멘터리 ""It's Quieter in the Twilight"" (2022)에 대해 언급하는 사용자가 있음.
"
"https://news.hada.io/topic?id=12232","Dropbase - 파이썬으로 회사 내부용 관리도구 작성하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Dropbase - 파이썬으로 회사 내부용 관리도구 작성하기

     * 관리자 앱 및 사내용 웹앱 작성을 위한 개발자용 노코드 플랫폼
     * 기존 파이썬 라이브러리 와 스크립트를 쉽게 임포트해서 사용 가능
     * 프론트엔드 코드 작성없이 UI 컴포넌트를 선택하고 데이터 함수 또는 파이썬 스크립트에 연결하는 것 만으로 앱 작성
     * 모든 앱은 테이블 뷰와 위젯 사이드바로 구성
          + 테이블 뷰에 테이블을 배치하고 사이드바 위젯에 UI 구성 요소를 배치하여 관리자 패널, 청구 대시보드, 내부 엔지니어링 도구 등 무엇이든 빠르게 구축할 수 있음

   요새 노코드 툴에 관심있어서 들어가봤는데 오픈소스는 아닌 듯 보이네요

   Interesting.
"
"https://news.hada.io/topic?id=12296","Mistral AI, Llama 2 70B 모델보다 뛰어난 Mixtral 8x7B 모델 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Mistral AI, Llama 2 70B 모델보다 뛰어난 Mixtral 8x7B 모델 공개

     * ""High-quality Sparse Mixture of Experts Model (SMoE, 고품질 희소 전문가 모델)""
     * Llama 2 70B를 대부분 벤치마크에서 능가하며, 6배 빠른 추론
     * 대부분의 표준 벤치마크에서 GPT 3.5와 비슷하거나 더 나은 성능을 보임
     * 허용 라이센스가 있는 가장 강력한 오픈 웨이트 모델이며, 비용/성능 면에서 가장 우수한 모델
     * 32k 토큰 컨텍스트 지원
     * 영어/프랑스어/이탈리아어/독일어/스페인어 처리
     * 코드 생성에서 강력한 성능을 보임
     * MT-Bench 에서 8.3점을 획득한 Instruction-Following 모델로 미세 조정 가능
     * MMLU 70.6% (Llama 2 70B 69.9%, GPT 3.5 70.0%)

희소 아키텍처를 활용한 오픈 모델의 경계 확장

     * Mixtral은 희소 전문가 네트워크로, 디코더 전용 모델임
     * 피드포워드 블록이 8개의 서로 다른 파라미터 그룹 중에서 선택하여, 각 레이어마다 토큰마다 라우터 네트워크가 두 개의 전문가 그룹을 선택하고 그 출력을 결합함
     * 이 기술은 모델의 파라미터 수를 증가시키면서 비용과 지연 시간을 제어할 수 있게 해주며, Mixtral은 총 46.7B의 파라미터를 가지지만 토큰 당 12.9B의 파라미터만 사용함

성능

     * Mixtral은 Llama 2 모델과 GPT3.5 기본 모델과 비교하여 대부분의 벤치마크에서 동등하거나 더 나은 성능을 보임.
     * Mixtral은 Llama 2 70B 모델과 비교하여 더 진실된 답변을 제공하고(TruthfulQA 벤치마크에서 73.9% 대 50.2%), BBQ 벤치마크에서 더 적은 편향을 보임.
     * Mixtral은 프랑스어, 독일어, 스페인어, 이탈리아어, 영어를 능숙하게 다룸.

지시에 따른 모델

     * Mixtral 8x7B Instruct는 지시에 따른 성능을 최적화하기 위해 감독된 미세 조정과 직접적인 선호도 최적화(DPO)를 거침.
     * MT-Bench에서 8.30의 점수를 달성하여 GPT3.5와 비슷한 성능을 가진 최고의 오픈 소스 모델이 됨.

Mixtral의 오픈 소스 배포 스택으로 배포

     * 커뮤니티가 완전한 오픈 소스 스택으로 Mixtral을 실행할 수 있도록 vLLM 프로젝트에 변경 사항을 제출함.
     * 현재 Mistral AI는 Mixtral 8x7B를 mistral-small 엔드포인트 뒤에서 사용하고 있으며, 베타 버전으로 이용 가능
     * 모든 생성 및 임베딩 엔드포인트에 대한 얼리억세스를 위해 등록 가능함

   아랫 댓글에서도 언급되어있지만, 처음에 8x7B를 보고 그럼 파라미터 총 갯수가 56B인가? 싶었네요.

        Hacker News 의견

     * Andrej Karpathy의 의견:
          + Mixtral 8x7B에 대한 공식 포스트와 vLLM의 추론 코드 공개
          + HuggingFace의 MoE(Mixture of Experts) 설명이 유익함
          + 70B 모델의 성능을 12.9B 밀도 모델의 추론 속도로 달성
          + ""open weights""라는 용어 사용에 긍정적인 반응
          + ""8x7B""라는 이름이 오해의 소지가 있음을 지적
          + 각 토큰과 레이어가 8개 중 2개의 전문가를 선택하는 방식에 대한 혼란 언급
          + Mistral-medium 모델에 대한 소개
     * Huggingface에서의 모델 이용 가능성:
          + Mistralai와 TheBloke에서 Mixtral 모델 사용 가능
     * 소프트웨어 엔지니어를 위한 설명 요청:
          + 전문가의 혼합이 어떻게 작동하는지에 대한 이해가 필요함
     * Mixtral 8x7B의 크기에 대한 반응:
          + 45억 파라미터를 ""small"" 모델로 간주하는 것에 대한 흥미 표현
     * AI의 미래에 대한 전망:
          + MoE가 AI의 미래가 될 것이라는 긍정적인 전망
     * MoE의 작동 원리와 장단점에 대한 질문:
          + MoE가 기존 모델에 비해 어떤 이점이 있는지에 대한 설명 필요
     * 모델 파라미터에 대한 혼란:
          + ""8x7B""라는 이름과 실제 파라미터 수, 토큰 생성 시 사용되는 파라미터에 대한 혼란 표현
     * Mistral의 접근 방식에 대한 설명:
          + Mistral이 모델을 검열하지 않고 자유로운 접근을 추구한다고 CEO가 언급
     * Mixtral 8x7B의 언어 능력:
          + 프랑스어, 독일어, 스페인어, 이탈리아어, 영어를 능숙하게 다룸
     * 모델과 가중치에 대한 정보 요청:
          + 모델과 가중치에 대한 링크 요청
     * 시장 경쟁력에 대한 질문:
          + GPT 3.5를 앞서는 모델을 가지고 있지만, OpenAI/Google과의 경쟁에서 어떤 기회가 있는지에 대한 의문과 미래 전망에 대한 질문
"
"https://news.hada.io/topic?id=12306","FrankenPHP v1.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          FrankenPHP v1.0 릴리즈

     * Go로 작성된 PHP 어플리케이션 서버 (Powered by Caddy)
     * 명령 하나로 프로덕션급 PHP 서버를 실행 가능
     * Symphony, Laravel, Wordpress 를 자체 지원
     * PHP 앱을 독립형, 자체 실행가능한 바이너리로 패키지해서 쉬운 배포 가능
     * PHP 8.2+ 및 대부분의 PHP 확장, 모든 Caddy 모듈과 호환
     * 워커모드로 어플리케이션 한번 부팅 후 메모리에서 유지 가능
     * 실시간 이벤트를 브라우저에 JavaScript 이벤트로 전송
     * Zstandard 및 GZip 압축 지원
     * 구조화 로깅
     * 내장 Promethues Metric 으로 Caddy Monitoring
     * HTTPS, HTTP/2, HTTP/3 네이티브 지원
     * 자동 HTTPS 인증서 및 갱신
     * Graceful Release로 제로 다운타임 앱 배포 가능
     * HTTP 103 Early Hints 웹표준 지원

   fpm이 필요 없군요 이제

   드디어 1.0!
"
"https://news.hada.io/topic?id=12230","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   주말에는 보통 가족과 보냅니다.
   이번에주엔 시에서 하는 뮤지컬을 관람하고, 아이랑 놀기로 하였습니다.

   개발자 지인들과 함께 글램핑 다녀왔습니다.
   어째 요즘은 모였다 하면 개발경력 도합 100년 넘어가는 모임이 되네요 ㅎㅎㅎ

   커튼 설치하고 오븐 설치합니다. 집 꾸미기가 한창이네요. 연말이라 누군가를 만나야 하는데... 자차 생기고 나서 모임을 피하고 있습니다 .ㅠ

   그림 그리는 모임이 있는데 연말모임 해요~
   하얀코끼리라는 선물교환 게임을 하기로 했어요.
"
"https://news.hada.io/topic?id=12252","안녕, 클린 코드(2020)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            안녕, 클린 코드(2020)

코드 정리 작별 인사

     * 동료가 일주일 내내 작성한 코드를 저녁 늦게 체크인함.
     * 그래픽 편집기 캔버스에서 모양의 크기를 조절하는 기능 구현.
     * 코드는 작동했지만 반복적이었음.

다음 날 아침...

     * 상사가 개인적으로 대화를 요청하여 코드 변경을 되돌리라고 요청함.
     * 처음에는 충격을 받았지만, 결국 상사의 결정이 옳았음을 깨달음.

단계

     * ""깨끗한 코드""에 집착하고 중복 제거에 몰두하는 것은 많은 개발자가 겪는 단계임.
     * 코드에 자신이 없을 때, 측정 가능한 것에 자신의 자존감과 전문적인 자부심을 연결하는 것이 유혹적임.
     * 추상화를 배우고 나면 반복되는 코드를 볼 때마다 추상화를 사용하고 싶어짐.

GN⁺의 의견

     * 중요한 것은 코드의 ""깨끗함""을 추구하는 것이 목표가 아니라, 복잡한 시스템을 다루는 과정에서 일종의 방어 메커니즘이라는 점임.
     * ""깨끗한 코드""는 개발자가 미지의 영역에서 길잡이 역할을 할 수 있도록 도와주지만, 그것에만 집착하지 않고 놓아줄 줄 알아야 함.
     * 이 글은 개발자들에게 코드를 작성하고 유지보수하는 과정에서 협업과 실용성의 중요성을 일깨워주는 흥미로운 관점을 제공함.

        Hacker News 의견

     * ""클린 코드""는 브랜드 개선이 필요함
          + 클린 코드의 목적은 코드를 더 단순하고 유지보수하기 쉽게 만드는 것
          + 소프트웨어의 가치는 시간이 지남에 따라 변화할 수 있는 능력에 있음
          + 리팩토링이 유지보수를 더 어렵게 만들었다면 그것은 클린 코드가 아님
          + 원 개발자와 리팩토링에 대해 논의하지 않은 것은 클린 코드와는 별개의 문제
     * 코드 중복이 때로는 좋을 수 있지만 클린 코드가 나쁘다는 증거는 아님
          + 10줄의 반복되는 수학 계산을 함수로 대체했다면 더 클린해질 수 있음
          + PR을 리뷰하고 기준에 맞지 않으면 거절해야 함
          + 클린 코드의 중요성을 무시하는 태도는 결국 아무도 작업하고 싶어하지 않는 코드베이스로 이어짐
          + 더 나은 커뮤니케이션과 절제가 필요한 교훈
     * 동료가 복사 및 붙여넣기로 많은 코드를 작성함
          + 리팩토링은 리뷰를 위해 올라가야 함
          + 상사가 직접 개입하여 되돌리라고 지시하는 것은 나쁜 신호
          + 복사 및 붙여넣기가 함수 작성보다 낫다는 교훈이 아님
     * 클린 코드 버전이 더러운 코드를 대체했을 가능성이 높음
          + 팀에서 일하는 방법에 대한 교훈이 필요함
     * 코드 변경 시 동료 리뷰가 필요함
          + 좋은 프로세스가 부족한 것을 인식해야 함
          + 코드 리팩토링은 필요할 때만 해야 함
     * 금융 분야에서는 유사하지만 다른 제품을 다루는 경우가 많음
          + 과도한 추상화를 피하고 클린 코드를 유지하는 것이 중요함
     * Haskell과 같은 언어는 언어 수준에서 추상화를 극대화함
          + 프로젝트별 추상화를 최소화하면서도 학습 비용이 높음
     * 반복되는 수학 계산을 별도의 함수로 이동시키는 것이 클린 코드에 해당함
          + 인터페이스 형성으로 보이는 리사이즈 함수들을 리팩토링하는 것은 잘못됨
     * 나쁜 추상화에 대한 설명
          + 미래 사용을 충분히 고려하지 않고 설계하는 것이 문제임
     * Rob Pike는 ""조금의 복사가 조금의 의존성보다 낫다""고 말함
          + DRY 원칙은 때로는 추상화를 추가하지만, 추상화가 충분히 직교하지 않으면 오히려 문제를 악화시킴
"
"https://news.hada.io/topic?id=12300","존 카맥과 존 로메로, 'DOOM' 30주년 기념 토크 재회","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   존 카맥과 존 로메로, 'DOOM' 30주년 기념 토크 재회

'Doom' 30주년 기념

     * id Software의 공동 창립자인 John Carmack과 John Romero가 'Doom'의 30주년을 기념하여 재회함.
     * 두 개발자는 FPS 게임 'Doom'의 개발 과정과 그 당시의 기술적 한계에 대해 회상함.
     * Carmack은 Doom 엔진에 더 화려한 그래픽 효과를 넣지 못한 것에 대한 아쉬움을 표현함.
     * Romero는 Doom이 Wolfenstein보다 복잡한 맵을 가능하게 했지만, Quake와 3D 가속이 등장하면서 개발이 복잡해지고 화면에 표시할 수 있는 적의 수가 제한되었다고 언급함.
     * 두 개발자 모두 90년대 PC 게임의 큰 박스 포장과 부가적인 아이템들에 대한 애정을 표현함.
     * Romero는 Doom 멀티플레이어가 처음 작동했을 때의 경험을 회상하며, 그 게임이 얼마나 멋질지 기대했다고 말함.
     * Carmack과 Romero는 Doom 커뮤니티에 감사의 말을 전하며, 게임이 오랫동안 사랑받을 수 있었던 것에 대해 자부심을 느낌.

GN⁺의 의견

     * 'Doom'의 30주년 기념 행사에서 두 명의 전설적인 개발자가 재회하여 게임의 개발 과정과 그들의 작업에 대한 비판적인 시각을 공유했다는 점이 중요함.
     * 이 기사는 게임 개발의 역사와 기술적 진보에 대한 통찰을 제공하며, 게임 커뮤니티가 어떻게 오랜 시간 동안 게임을 살아있게 유지하는지에 대한 감사의 메시지를 전달함으로써 흥미롭다.

        Hacker News 의견

     * 1992년 캔자스페스트에서 어린 나이에 여러 그룹을 돌아다니며 해킹 활동을 하고 미성년자임에도 맥주를 구걸했던 재미있는 경험
          + 어느 3D 게임 개발자들이 한 달 만에 80만 달러 이상을 벌어들였고, 빠른 차를 구입할 수 있었다는 이야기를 들음
          + Wolf3D 게임을 플라즈마 스크린 랩톱에서 짧게 시연하는 것을 보고 인상적이었음
          + 다음 날, 존 카맥이 컴퓨터 실험실에 들어와 자신이 만든 8비트 타일 기반 2D 어드벤처 게임 'Wraith'를 칭찬하자, 카맥은 ""Wraith 이후로 많이 발전했다""고 답함
          + 당시 카맥은 곧 'Doom'을 출시할 예정이었음
     * 'Doom'에 대해 더 알고 싶은 사람들을 위해, id 소프트웨어의 시작과 존 로메로와 존 카맥의 커리어를 다룬 'Masters of Doom'이라는 책 추천
          + Masters of Doom - Wikipedia
     * 30년 전에 만든 소프트웨어에 대해 열정적으로 이야기하는 두 전설의 대화를 듣는 것은 매우 즐거웠음
          + 적 AI를 개선하는 것이 반드시 게임을 더 재미있게 만들지는 않는다는 그들의 답변이 인상적이었음
          + 카맥이 많은 사랑받는 게임들이 소스 코드를 공개하지 않는 것에 대해 아쉬워함
          + 'Doom'의 장수는 부분적으로 소스 코드 공개 덕분이라고 언급함
     * 초기 id 소프트웨어 팀이 게임 개발 실력을 연마한 곳은 Softdisk라는 게임 구독 서비스 회사였음
          + 매달 새로운 게임을 고객에게 제공하는 서비스를 통해 매달 게임 개발 연습과 과정을 반복함
          + 'Doom'의 셰어웨어 버전 개발 기간은 4개월로, 오늘날 기준으로 매우 짧지만, 당시에는 평소보다 많은 시간을 가진 것으로 여겨짐
          + 존 로메로가 초기 id 소프트웨어에 대해 이야기하는 여러 강연이 유튜브에 있음
               o John Romero's Early id Software Talk - YouTube
     * 'Doom'이 종교적 교육으로 인한 지옥/저주에 대한 극심한 공포에서 벗어나는 데 도움을 줬음에 감사함
     * 1993년 상사가 'Doom'을 플레이하기 위해 6000달러짜리 윈도우즈 컴퓨터를 구입한 기억
          + 상사는 이미 다른 회사로 이직 중이었고, 컴퓨터 그래픽 전문가로서 'Doom'의 기술적 성과를 높이 평가함
          + 본인은 'Doom'에 크게 감명받지 못했음, 아마도 그러한 기술적 성과를 이해할 배경 지식이 부족했기 때문일 것임
     * 'Half-Life'가 25주년을 맞이했는데, 'Doom'과 'Half-Life' 사이에 단 5년밖에 차이가 나지 않는다는 사실이 놀랍음
     * 젊은 시절 카맥이 검을 들고 있는 사진을 보는 것은 충격적임
          + 카맥을 늘 노련한 현자로만 상상했기 때문에 젊은 전사로서의 모습이 새롭게 다가옴
     * 사진 속 무기에 대한 배경 이야기
          + 스콧 호스트(게임 'Raptor: Call of the Shadows' 제작자)에 따르면, 카맥과 함께 댈러스 르네상스 박람회에 갔을 때, 'Angel Sword' 부스에서 카맥이 어떤 검을 구매할지 물었고, 호스트는 곡선이 있는 검을 추천함
          + 도끼는 8000달러, 검은 12000달러였음
     * 존 로메로가 사용하는 로지텍 웹캠이 본인이 사용하는 것과 같다는 사실과, 초점을 맞추기 위해 소리 지르는 것에 대한 이야기
"
"https://news.hada.io/topic?id=12346","바르셀로나 슈퍼컴퓨팅 센터, 새로운 오픈소스 RISC-V 칩 'Sargantana' 발표 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           바르셀로나 슈퍼컴퓨팅 센터, 새로운 오픈소스 RISC-V 칩 'Sargantana' 발표

     * BSC가 설계한 Lagarto 프로세서 패밀리의 3세대는 유럽 고성능 칩 개발에서 한 걸음 나아감
     * RISC-V 오픈 하드웨어 기술을 기반으로 한 새 프로세서는 유럽 기술 주권을 달성하고 대규모 다국적 기업에 대한 의존도를 줄이는 중요한 진전
     * 오픈 소스 컴퓨팅 기술 개발의 선두주자인 BSC는 바르셀로나를 반도체 설계 분야의 혁신 허브로 만들기 위해 노력 중임

Sargantana 칩의 발표

     * 바르셀로나 슈퍼컴퓨팅 센터(BSC-CNS)는 수요일 BSC에서 완전히 설계된 오픈 소스 프로세서의 세 번째 세대인 Sargantana 칩을 발표함
     * Sargantana는 유럽에서 RISC-V 오픈 소스 컴퓨팅 기술 연구 분야에서 BSC의 선도적 위치를 강화하는 중요한 발전
     * Sargantana는 스페인에서 개발된 첫 오픈 소스 칩인 Lagarto 프로세서의 세 번째 세대로, DRAC 프로젝트의 일환으로 개발되었으며, 학술 수준에서 유럽에서 가장 진보된 오픈 소스 칩 중 하나임
     * 새로운 Sargantana는 성능이 이전 세대인 Lagarto Hun(2019)과 DVINO(2021)보다 뛰어나며, 라가르토 패밀리 중 처음으로 기가헤르츠 장벽을 돌파한 프로세서임

오픈 소스 ISA의 중요성

     * 새 프로세서의 명령어 세트 아키텍처(ISA)가 오픈 소스이므로, 독점적이지 않고 모두에게 접근 가능하여, 독점 아키텍처의 제한 없이 협력을 통한 혁신을 가능하게 함.
     * RISC-V 무료 하드웨어 아키텍처는 소프트웨어 세계에서 리눅스가 가져온 것과 같은 하드웨어 세계의 기술 혁명을 가져올 수 있음.
     * BSC의 Mateo Valero 소장은 이 오픈 하드웨어가 유럽의 기술 주권을 보장하고 유럽 산업 경쟁력을 유지하는 데 필수적이며, 칩 설계에 오픈 소스 도입을 선도하는 BSC의 역할을 강화한다고 언급함.

BSC가 주도하는 공동 작업

     * 멕시코 국립 공과대학의 컴퓨팅 연구 센터(CIC-IPN), 국립 마이크로일렉트로닉스 센터(CNM-CSIC), 카탈루냐 공과대학(UPC), 바르셀로나 자치대학(UAB), 바르셀로나 대학(UB), 로비라 이 비르질리 대학(URV) 등의 다른 대학 및 연구 센터의 연구원들이 Sargantana 개발에 참여함.
     * 프로젝트는 BSC 연구원 Miquel Moretó가 조정했으며, 그는 오픈 소스 반도체 설계가 전 세계 기업과 학술 기관 간의 협력을 가능하게 하는 장점을 강조함.
     * Moretó는 Sargantana가 아직 컴퓨터나 다른 기기에서 사용될 수 있도록 설계된 것은 아니라고 지적하면서, 이것이 스페인과 유럽이 미래에 점점 경쟁력 있는 프로세서를 설계할 수 있게 하는 기술이며, 이 분야의 미래 전문가를 교육하는 데 기여할 것이라고 덧붙임.

유럽의 RISC-V 리더십

     * Mateo Valero는 바르셀로나를 프로세서 설계 분야의 국제적 기준점으로 만들겠다는 아이디어를 지지함.
     * Sargantana 프로젝트는 카탈루냐 정부의 지원을 받아 ERDF 운영 프로그램의 유럽 자금으로부터 자금을 받았으며, 스페인 정부가 승인한 산업 변혁 프로젝트 중 가장 높은 투자를 받는 PERTE Chip의 전략적 변혁 프로젝트에서 얻은 결과를 사용할 것임.
     * Sargantana 발표식은 바르셀로나 BSC 시설에서 스페인 오픈 하드웨어 얼라이언스(SOHA)의 첫날 일환으로 열렸으며, 이 단체는 스페인 대학 및 연구 센터들이 모여 오픈 컴퓨터 기술 및 아키텍처 분야의 연구를 촉진하고, 고품질 일자리 창출을 가능하게 하는 인재 양성에 기여하는 것을 목표로 함.

GN⁺의 의견

     * Sargantana 칩의 발표는 유럽이 기술적으로 독립적이고 경쟁력 있는 반도체 산업을 구축하는 데 중요한 이정표임.
     * 오픈 소스 RISC-V 아키텍처의 채택은 혁신과 협력을 촉진하며, 유럽 내에서 기술 주권을 확립하는 데 기여할 것임.
     * 이 프로젝트는 유럽의 고성능 컴퓨팅, 인공 지능, 자동차 산업, 사물 인터넷 등 다양한 분야에서 사용될 수 있는 지역적이고 개방적인 대안을 제공하는 것을 목표로 함.

   유럽/중국은 RISC-V 에 힘을 쏟는 수 밖에 없을듯 합니다.
   삼성은 모뎀과 이미지 센서, LG는 NPU에 RISC-V를 활용 한다고는 하는데, 외부로 보이는 건 잘 없어서 아쉽네요.

        Hacker News 의견

     * 유럽연합(EU)의 명확한 로드맵을 보고 싶어 함
          + 경쟁력보다는 보안과 경제적 자립에 초점
          + 40-20nm 수준의 칩을 현지에서 생산하면 위험 감소, 소규모 국가의 현지 생산 가능성 증가, 대부분의 칩 요구 사항 해결
          + 필요한 칩은 최첨단 AI가 아닌 일반적인 제어용
          + 현지 제조업체에 대한 선택권과 인센티브 제공을 위한 플러그 앤 플레이 대안 제공
          + 보안이 큰 이점
          + 민감한 회사의 CEO, 보안 서비스 책임자, 조달 담당 장군이 신뢰할 수 있는 국가에서 제조된 오픈 소스 칩을 사용하는지 여부
          + 과정이 길고 힘들며 위험 부담이 큼
          + 철강과 다른 재료가 ""선호 국가""에서 만들어지는 것처럼 실리콘에도 동일한 원칙 적용
     * 오픈 소스 프로세서 프로젝트에 대한 의견
          + 비현실적인 설계 목표를 설정하는 경향이 있음
          + 마이크로아키텍처에 비순차적 설계를 도입하려는 욕구가 있으나 결과적인 성능이 정당화되지 않음
          + Sargantana 프로젝트는 CoreMark/MHz 성능이 낮음
          + CoreMark는 고성능 컴퓨팅이나 일반 애플리케이션 코어에는 큰 관련이 없으나 유용한 성능 테스트
          + 메모리 시스템에 대한 스트레스가 적어 간단한 설계로 더 나은 성능을 낼 수 있음
          + 검증은 새로운 생산 품질 CPU 설계에서 중요한 부분이나 논문에서 논의되지 않음
     * ""sargantana""는 카탈루냐어로 흔한 작은 도마뱀을 의미함
     * Sargantana 프로세서에 대한 사전 인쇄 논문 링크 제공
          + 22nm 공정에서 1.26GHz의 클록 속도를 가진 RISC-V 프로세서
     * 저렴한 가격의 다중 프로젝트 웨이퍼 서비스에 대한 언급
          + 구글의 OpenMPW Free Silicon Chip Program과 EU의 다중 프로젝트 웨이퍼 서비스 예시 제공
     * BSC(바르셀로나 슈퍼컴퓨팅 센터)와 오픈 소스 컴퓨팅 기술에 대한 소개
          + BSC가 오픈 소스이며 대기업에 의존하지 않는 기술을 개발함
          + 대기업과 연계되지 않은 사람들이 컴퓨터 하드웨어를 생산할 수 있는지에 대한 궁금증
     * HBO 시리즈 ""30 coins"" 시즌 2에서 BSC가 등장하는 장면 언급
     * 새로운 Sargantana 칩에 대한 발표
          + BSC에서 완전히 설계되었으며 멕시코의 연구 기관과 협력함
     * 칩이 오픈 소스인지에 대한 의문 제기
          + 오픈 소스 브랜딩을 사용하지만 실제로는 공개되지 않은 노력에 대한 불만 표현
     * 웹 아카이브 링크 제공
"
"https://news.hada.io/topic?id=12265","판사, 존 디어를 상대로 한 "Right To Repair" 소송 진행 허용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               판사, 존 디어를 상대로 한 ""Right To Repair"" 소송 진행 허용

        Hacker News 의견

     * 농업 분야에서 수리권이 큰 이슈가 되고 있으며, Big Bud가 완전히 수리 가능한 트랙터를 시장에 다시 출시함. 사전 주문이 상당하다는 소문이 있음.
     * 소송을 기각하도록 요청하는 행위가 패소로 이어질 경우, 두 배의 손해배상을 지불해야 한다는 의견 제시. 양측이 상대방의 비용을 증가시키기 위해 사건을 지연시키는 것은 비합리적임.
     * 서비스 네트워크를 보존하려는 시도를 이해하지만, 이것이 사람들이 구매한 기계를 수리하는 것을 방해하는 타당한 이유가 되지 않음. 이러한 변화가 진행되는 것을 긍정적으로 평가함.
     * 수리권에 관한 법률과는 관련이 없어 보이지만, 이는 반독점 사건으로 보임. John Deere가 수리 산업을 독점하려는 시도가 문제가 되고 있음.
     * 200년 된 회사인 John Deere가 이러한 행태로 짧은 시간에 많은 신뢰를 잃었다는 것에 대한 놀라움.
     * 수리권을 반드시 확보해야 하며, 그렇지 않을 경우 불평등 격차가 크게 벌어짐. 보수적인 공화당원으로서, 이 법적 변화가 좌파가 제기해온 정당한 불만을 해결하는 데 많은 도움이 될 것임.
     * 수리권에 대한 변화가 마침내 일어나고 있음에 대한 긍정적인 반응.
"
"https://news.hada.io/topic?id=12297","미스트랄: 첫 AI 엔드포인트, 조기 접근 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       미스트랄: 첫 AI 엔드포인트, 조기 접근 가능

Mistral AI의 새로운 플랫폼 서비스 베타 출시

     * Mistral AI가 개발자들을 위해 강력한 오픈 생성 모델과 이를 효율적으로 배포하고 맞춤화할 수 있는 방법을 제공함.
     * 텍스트 지시에 따라 텍스트를 생성하는 세 가지 챗봇 엔드포인트와 임베딩 엔드포인트를 제공하는 첫 플랫폼 서비스의 베타 접근을 오늘 시작함.
     * 각 엔드포인트는 다른 성능/가격 트레이드오프를 가짐.

생성 엔드포인트

     * 'mistral-tiny'와 'mistral-small'은 현재 공개된 두 모델을 사용하며, 'mistral-medium'은 배포 환경에서 테스트 중인 프로토타입 모델을 사용함.
     * 모델들은 사용자가 쉽게 제어하고 사용하기 즐거운 모델을 만들기 위해 효율적인 미세 조정과 직접적인 선호도 최적화 같은 가장 효과적인 정렬 기술을 통합함.
     * 'Mistral-tiny'는 영어만 지원하며, 'Mistral-small'은 여러 언어와 코드를 지원하고, 'Mistral-medium'은 최상위 서비스 모델 중 하나로 평가됨.

임베딩 엔드포인트

     * 'Mistral-embed'는 검색 기능을 염두에 둔 임베딩 모델을 제공하며, 1024의 임베딩 차원을 가짐.
     * 이 임베딩 모델은 MTEB에서 55.26의 검색 점수를 달성함.

API 사양

     * API는 경쟁사가 처음 제안한 인기 있는 챗봇 인터페이스의 사양을 따름.
     * Python과 Javascript 클라이언트 라이브러리를 제공하여 엔드포인트를 쿼리할 수 있음.
     * 엔드포인트는 사용자가 모델 출력에 대한 더 높은 수준의 모더레이션을 설정할 수 있도록 시스템 프롬프트를 제공할 수 있음.

베타 접근에서 일반 사용 가능성으로의 확장

     * 오늘부터 누구나 API를 등록하여 사용할 수 있으며, 용량을 점진적으로 늘려갈 예정임.
     * 비즈니스 팀이 요구 사항을 파악하고 접근을 가속화하는 데 도움을 줄 수 있음.
     * 플랫폼을 완전히 자체 서비스 가능한 상태로 안정화하는 과정에서 불안정한 부분이 있을 수 있음.

감사의 말

     * NVIDIA가 TensorRT-LLM과 Triton 통합을 지원하고, TRT-LLM과 호환되는 희소 전문가 혼합을 만드는 데 함께 작업해준 것에 대해 감사함.

GN⁺의 의견

     * 이 기사에서 가장 중요한 것은 Mistral AI가 새로운 생성 모델과 임베딩 모델을 개발자들에게 제공하며, 이를 통해 더 나은 텍스트 생성과 임베딩 기능을 사용할 수 있게 되었다는 점임.
     * 이러한 기술은 인공지능의 발전을 촉진하고, 다양한 언어와 코드를 지원하는 능력은 글로벌 시장에서의 응용 가능성을 크게 확장시킬 것임.
     * 개발자들에게는 새로운 도구와 API를 통해 창의적인 프로젝트와 솔루션을 개발할 수 있는 흥미로운 기회를 제공하고, 이는 기술의 미래에 대한 기대를 높이는 소식임.

        Hacker News 의견

     * 작은 회사(약 30명 규모)가 20억 달러의 평가를 받고, 가장 성능이 좋은 70억 모델과 70억*8 MOE 모델을 만들어냄. 이 모델들은 700억 모델의 성능을 내면서 140억 모델의 추론 파워만 필요함. 이는 OpenAI보다 더 큰 위협이 될 수 있으며, 최근의 투자로 인해 곧 트래픽 부하를 감당할 수 있게 확장하고, 업계의 다양한 문제에 실망한 최고의 연구원들을 끌어들일 수 있을 것임.
     * Mistral-medium 모델이 벤치마크에서 GPT-3.5와 Google의 Gemini Pro 모델을 큰 차이로 이김. 실제 성능도 벤치마크만큼 인상적일 것으로 기대되며, 안전 필터가 선택적으로 제공되는 것은 안전한 애플리케이션에도 큰 이점임.
     * Mistral의 가격이 공개됨. Mistral-medium은 100만 출력 토큰당 8달러, Mistral-small은 1.94달러로, GPT-3.5와 GPT-4의 가격과 비교했을 때 경쟁력이 있음을 시사함.
     * Fabrice Bellard의 TextSynth 서버가 Mistral 7B 모델을 지원하기 시작함. CUDA 지원, BNF 문법 및 JSON 스키마 샘플링 등의 기능이 추가됨.
     * 경쟁은 세계를 발전시키는 방법임. 작고 큰 플레이어들이 경쟁적인 모델을 가지고 있어 기쁨. 벤치마크를 발표할 때 자신들에게 유리하게 조정된 테스트 방식이 아쉬움. 오픈 벤치마크를 통해 주요 모델들을 공정하게 비교하는 작업이 필요함.
     * 이러한 모델들의 컨텍스트 크기 제한에 대한 논의가 부족함. 슬라이딩 윈도우 기술은 실제로 기억력을 약 8k 토큰으로 제한하여 많은 작업에 부족함. Llama2 파생 모델들은 파라미터 수 때문만이 아니라 제공되는 작은 컨텍스트 때문에 미세 조정이 필요함.
     * ""조기 접근 가능한 엔드포인트""는 실제로는 ""엔드포인트에 대한 조기 접근을 위한 대기 목록""을 의미함. API 접근은 현재 초대 전용이며, 최고의 모델에 대한 접근을 구독할 수 있을 때 알려줄 것임.
     * ChatGPT-3.5를 이긴 것은 정말 대단한 성과임. GPT-3.5는 일상적인 것들에 충분하지 않아 GPT-4에 대한 기대가 큼.
     * Mistral API가 경쟁사가 제안한 인기 있는 채팅 인터페이스의 사양을 따름. 이는 재미있고 마음에 듦.
     * Mistral-embed는 1024 차원의 임베딩 모델을 제공하며, 검색 능력을 염두에 두고 설계됨. MTEB에서 55.26의 검색 점수를 달성함. 이 임베딩 모델이 오픈 소스로 제공될지에 대한 정보는 아직 없음.
"
"https://news.hada.io/topic?id=12324","Netflix, 년 2회 인게이지먼트(시청 현황) 보고서 발행","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Netflix, 년 2회 인게이지먼트(시청 현황) 보고서 발행

     * 2021년부터 주간 Top10 및 인기작 리스트를 공개했음
     * 이제 년간 2회(6개월마다) ‘인게이지먼트(시청 현황) 보고서’를 발행할 예정
          + 반기별로 회원들이 최소 5만 시간 이상 시청한 모든 오리지널 및 라이선스 작품의 시청 시간
          + 넷플릭스 TV 시리즈 및 영화의 공개일
          + 전 세계에서의 시청 가능 여부
     * 약 18,000여 편의 작품 및 약 1,000억 시간에 달하는 시청 시간을 다루고 있으며, 이는 넷플릭스 전체 시청 시간의 99%를 차지
     * 엑셀 파일로 제공되어 다운로드 가능
     * 동향과 인사이트
          + ‘지니 & 조지아’, ‘아리스 인 보더랜드’, ‘예감’, ‘아우터뱅크스’, ‘너의 모든 것’, ‘샬럿 왕비: 브리저튼 외전’, ‘엑스오, 키티’ 등의 인기작을 비롯해 ‘머더 미스터리 2’, ‘익스트랙션 2’ 등의 영화 후속편까지 새롭게 탄생하거나 성장하고 있는 IP들의 존재감을 확인하실 수 있습니다.
          + ‘나이트 에이전트’, ‘외교관’, ‘성난 사람들’, ‘더 글로리’, ‘Alpha Males’,’푸바’, ‘Fake Profile’ 등 새로운 이야기와 떠오르는 스타들이 어떻게 많은 관객과 팬덤에 열기를 불어넣고 있는지 확인하실 수 있습니다.
          + ‘내 이름은 마더’, ‘루터: 태양의 몰락’, ‘유 피플’, ‘에이전트 A.K.A.’, ‘멕시코 만세!’, ‘헝거’ 등 넷플릭스 영화들 역시 다양성과 관객 규모를 보여주고 있습니다.
          + 비영어권 콘텐츠가 전체 시청 시간의 30%를 차지하며 큰 인기를 얻었습니다.
          + 넷플릭스에서 시청하실 수 있는 콘텐츠가 공개 이후에도 오랜 기간 동안 꾸준한 사랑을 받았습니다. 일례로, ‘서부 전선 이상 없다’는 2022년 10월 공개됐으나, 올해 1월부터 6월 사이 8천만 시청 시간을 기록했습니다.
          + 이전에 라이선스를 획득한 오래된 작품에 대한 수요도 높아져, 회원들과 콘텐츠의 권리 소유자들에게 상당한 가치를 창출하고 있습니다.
"
"https://news.hada.io/topic?id=12323","제조사가 인위적으로 멈춰버린 기차를 수리한 폴란드 해커들, 철도 회사로부터 위협 받아","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            제조사가 인위적으로 멈춰버린 기차를 수리한 폴란드 해커들, 철도 회사로부터 위협 받아

폴란드 기차 해킹 사건 요약

     * 폴란드 남서부 지역 철도 회사의 기차가 독립 정비 업체의 수리 후 제조사에 의해 작동 불가 상태로 만들어짐.
     * 제조사는 기차를 해킹한 백해커들을 고소하겠다고 위협함.
     * 폴란드 인프라 및 수리 업계에서 논란이 일고 있으며, 제조사는 기차의 안전 문제를 주장하나 증명하지 못함.

부품 결합 방지 메커니즘

     * 기차 제조사 NEWAG는 GPS 추적기가 독립 정비 업체에 일정 기간 머물렀다는 것을 감지하거나, 제조사 승인된 시리얼 번호 없이 특정 부품이 교체되었다는 것을 감지하면 기차가 작동하지 않도록 하는 코드를 내장함.
     * 이러한 '부품 결합 방지' 메커니즘은 농부들이 존 디어 트랙터를 회사의 승인 없이 수리하는 것을 방지하고, 애플이 아이폰의 독립 수리를 방지하는 데 사용됨.

해커들의 기차 수리

     * 폴란드 기차 운영사 Lower Silesian Railway는 독립 정비 업체 SPS를 통해 정기적인 유지보수를 실시하다가 기차가 작동하지 않는 문제에 직면함.
     * SPS는 Dragon Sector라는 백해커 그룹에 도움을 요청함.
     * Dragon Sector는 기차 소프트웨어에 내장된 '작업장 감지' 시스템을 발견하고, 기차 운전사 패널에서 입력할 수 있는 '잠금 해제 코드'를 찾아 문제를 해결함.

제조사의 반응

     * NEWAG는 기차 소프트웨어에 고의적인 오류를 유발하는 솔루션을 도입하지 않았다고 주장하며, 해커들을 고소하겠다고 위협함.
     * NEWAG는 철도 교통 안전에 대한 위협과 법적 조항 위반을 이유로 해커들의 행동을 비난함.

유럽 저작권 법률

     * 유럽의 저작권 및 정보 사회 지침 2001년 제6조는 DRM 우회에 대해 미국의 DMCA 제1201조보다 엄격하며, 수리 면제가 구체적으로 명시되어 있지 않음.
     * 이로 인해 Dragon Sector와 같은 연구자들에게 추가적인 법적 위험이 발생할 수 있음.

GN⁺의 의견

     * 이 사건은 제조사가 독점적인 수리를 강요하고 독립적인 수리를 방해하는 글로벌 문제의 한 예시임.
     * 백해커들이 기술적인 장벽을 넘어 수리를 가능하게 한 것은 소비자의 권리와 독립 수리 산업에 중요한 승리임.
     * 이 사건은 수리 권리에 대한 법적 및 정책적 논의에 영향을 미칠 수 있는 중요한 사례로, 기술 보호 조치의 한계와 소유권에 대한 논쟁을 촉발시킬 수 있음.

        Hacker News 의견

     * 팬데믹 최고조 시기에 폴란드 해커가 개발한 동글이 미국 수리 전문가들에 의해 DRM을 우회하여 COVID-19 환자들을 살리기 위한 인공호흡기 사용에 필요했다는 기사를 썼음.
          + 이는 매우 악랄한 행위임. 수리권에 대해 다른 이들처럼 감정적으로 투자하지 않지만, DRM이 생존에 필수적인 기기의 작동을 어렵게 만드는 것은 부패함을 의미함. 이러한 회사들을 부끄러워해야 함.
          + 수리권을 지지하는 사람들은 이러한 사례를 지적해야 함. 이것이 바로 다른 사람들도 지지하고 싶게 만드는 주된 이유임.
     * Newagg가 해커들에게 대응할 가능성은 없다고 생각함. 해커들은 제3자 IT 네트워크/시스템을 해킹한 것이 아니라 철도 회사가 소유한 기차를 해킹함.
     * 관련 링크:
          + 일주일 전 원본 뉴스 스토리 토론: 해커뉴스 논의 링크
          + 회사의 후속 조치: ""폴란드 기차 제조사, 경쟁사의 기차 소프트웨어를 망가뜨렸다는 주장을 부인함"" 해커뉴스 후속 조치 링크
          + 404의 늦은 품질에 대한 추가 정보
     * Gynvael Coldwind (Dragon Sector의 일원이지만 해당 기차를 해킹한 팀의 일원은 아님)가 회사의 방어 논리가 결함이 있다는 기사를 작성함.
          + 주로 리버스 엔지니어링, 컴파일 과정, 최종 바이너리에서의 레이아웃 - .text, .data 섹션, 오프셋 등에 대해 다룸.
          + 코드 케이브 및 후킹에 대한 링크 제공
          + 결국, 기사는 EU 내에서 이러한 해킹의 법적 지위가 불분명함을 논의함.
          + 대형 산업 장비 구매자들이 DRM을 선호하는 공급업체를 시장에서 밀어낼 수 있기를 바라지만 현실은 그렇지 않음을 지적함.
     * DRM이 양방향으로 작용하는 것에 대해 만족함. 제조사가 제품을 잠그려고 하는 것은 자유롭지만, 그것이 공개되어야 하며, 소유자는 자신이 소유한 것을 조작할 자유가 있음. 그들이 기차를 소유함.
     * 이 이야기에서 얻은 교훈은 제조사들이 더 많은 돈을 벌기 위해 사용자들을 속이는 것이 ""너무 작아서 맞서 싸울 수 없는 문제""가 아니라 무제한적인 탐욕임을 지적함.
     * Dragon Sector가 Newag의 성명에 대한 답변을 포함한 기사에 대한 직접 링크 제공:
          + 해커들의 Newag에 대한 응답 기사 링크
          + 이번에는 더 많은 세부 사항이 있을 것으로 보임. 예를 들어, 펌웨어의 Newag 서비스 차이점에 대한 '이전/이후' 비교를 가지고 있으며, 여기에 흥미로운 변경 사항이 있음.
          + 이것이 사실이라면, ""무단 해커""들이 Newag 내부에 있을 수 있음을 시사함.
     * 기사가 DRM을 설명으로 사용하는 것을 싫어함. 이것은 DRM이나 소프트웨어 조작 방지와는 아무런 관련이 없음.
          + 제조사가 제3자 수리점을 무능하게 보이게 하기 위해 은밀하게 포함한 소프트웨어 부분임.
          + DRM은 공식적으로 문서화된 조작 방지처럼 보이게 만듦. 기사 자체는 좋지만 제목과 기사 내용에서 DRM 사용은 잘못됨.
     * 이것은 분명히 NEWAG 자체의 혐의에 대한 주목을 증가시킬 것이며 역효과를 낼 것임.
          + NEWAG의 경영진과 책임자들은 사기 음모 외에도 명예훼손 혐의로 형사 기소되어야 함.
          + NEWAG이 제3자 수리점의 부정 행위에 대해 고의로 거짓말을 했으며, 자사 수리점에서 서비스를 받도록 고객을 유도하거나 요구하는 데 이용했다는 것이 명백함.
"
"https://news.hada.io/topic?id=12339","호주, 엔지니어드 스톤 금지 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           호주, 엔지니어드 스톤 금지 예정

호주, 인공석 금지로 세계 최초 결정

     * 2024년 7월부터 대부분의 주와 영토에서 인공석 사용 금지 예정
     * 호주의 수천 개 욕실과 주방에서 발견되는 재료
     * 의사와 노동자들이 건강과 안전 문제로 금지를 요구함

인공석, 폐 질환 증가로 인기 소재에 대한 우려

     * 인공석은 내구성과 저렴함으로 인기를 끌었으나, 폐 질환 실리코시스 발병률 증가로 우려됨
     * 호주 가정의 약 2-3백만 가구에 인공석 벤치탑 설치 추정
     * 실리코시스는 젊은 남성 노동자들에게 주로 영향을 미치며, 일상 활동조차 어려움을 겪게 함

수천 명의 노동자들을 위한 '중요한 승리'

     * 안전 작업 호주가 금지 방안을 조사하고, 저실리카 인공석이 안전하게 시장에 남을 수 있는지 검토함
     * 보고서는 안전한 실리카 수준이 없다고 결론내림: ""모든 인공석 사용 금지해야 함""

인공석 대안은 무엇인가?

     * 사용 목적과 원하는 외관에 따라 다양한 재료가 대안이 될 수 있음: 자연석, 도자기, 라미네이트, 타일, 콘크리트, 목재/목공

'가장자리에서 아무것도 아닌 것으로'

     * 실리코시스는 주로 인공석 노동자들 사이에서 발생하며, 빠른 진행과 사망률이 높음
     * 대부분의 진단받은 인공석 노동자들은 35세 이하임
     * 병으로 인해 일상 활동에 어려움을 겪는 노동자들의 삶이 파괴됨

세부 사항은 아직 결정되어야 함

     * 2024년 3월에 다른 회의를 개최하여 이미 시행된 인공석 계약에 대한 전환 기간 세부 사항을 결정할 예정
     * 건설 및 주택 건설 산업에 ""상당한 혼란""을 피하기 위해 6개월의 전환 기간이 충분하지 않다고 주장함

GN⁺의 의견:

     * 이 글에서 가장 중요한 것은 호주 정부가 노동자들의 건강을 보호하기 위해 인공석 사용을 금지하기로 결정한 것임. 이는 세계 최초의 조치로, 실리코시스와 같은 직업성 폐 질환의 위험을 줄이기 위한 중대한 단계임.
     * 이 결정은 건설 및 주택 건설 산업에 큰 변화를 가져올 것이며, 대체 재료에 대한 수요 증가와 새로운 안전 기준의 필요성을 촉발할 것임.
     * 이 글이 흥미로운 이유는 일반적으로 주방과 욕실의 아름다움을 더하는 재료가 실제로 노동자들의 생명을 위협할 수 있다는 사실을 드러내고 있기 때문임. 이는 소비자와 산업 종사자 모두에게 안전과 건강에 대한 새로운 인식을 제공함.

        Hacker News 의견

     * SafeWork Australia의 결정에 대한 전체 논리를 읽는 것이 매우 중요함. 엔지니어드 스톤 사용에 대한 금지 결정은 해당 산업이 규정을 준수하지 않는 혼란 상태에 있어 다른 옵션을 권장하기보다는 완전한 금지를 제안함.
     * 일부는 SafeWork의 결정이 이해되지 않음. 천연석에도 실리카가 존재하는데, 천연석 카운터탑은 금지되지 않는 반면, 실리카 함량이 낮은 엔지니어드 스톤을 추구하는 산업에 대한 금지가 불합리하다고 느낌.
     * 금지가 실제 문제인 PPE/안전 작업 관행을 무시하는 행동을 해결하지 못한다고 지적함. 제안된 '더 안전한 대안' 중 하나인 화강암도 실리카 함량이 높아, 실리코시스 발병 시간이 단지 두 배로 늘어날 뿐이라고 주장함.
     * 제조 방법을 금지하는 것이 최종 제품을 금지하는 것보다 더 합리적이라는 의견 제시. 안전하게 제조하고 현장 조정을 할 수 있는 방법을 발명한다면 시장에서 보상받아야 한다고 주장함.
     * 건설 현장에서 PPE를 착용하는 직원을 본 적이 없다는 경험담 공유. 이는 안전 관행이 제대로 이행되지 않고 있음을 시사함.
     * 정치인들의 결정이 어리석다고 비판함. 기계로 사전 절단하거나 먼지 처리가 가능한 도구 사용을 금지하는 대신, 전체 분야를 금지하는 것은 무리라는 의견 제시.
     * 엔지니어드 석영 카운터탑을 재설치한 경험을 공유하며, 이 방법이 돌 운송을 줄이고, 절단을 간소화하며, 폐기 시 낭비를 줄일 수 있다고 설명함.
     * 호주의 석탄 채굴에 대한 비교를 통해, 석탄 채굴이 전기의 80%를 생산하고 직접적인 채굴 사고로 인한 사망률은 낮지만 호흡기 및 스트레스 관련 문제로 인한 사망률이 높다는 점을 지적함.
     * 최종 제품이 안전하고 실용적이며 청소가 쉬운 표면을 제공함에도 불구하고 제품을 금지하는 대신 안전 관행을 강화하고 위반자에게 무거운 벌금을 부과하며 근로자를 교육해야 한다는 의견 제시.
     * 엔지니어드 스톤이 그토록 사랑받는 제품인지, 그리고 정말로 다른 대안이 없는지에 대한 의문 제기.
     * 캘리포니아에서 비슷한 문제가 있었지만, 그것은 주로 큰 슬래브를 연마하는 것에 관한 것이었고, 이번 문제는 설치하는 석공들에 관한 것으로 보임. 엔지니어드 스톤이 주로 20~30대 남성들에게 영향을 미치며, 이들의 가족이 있다면 어린 자녀들이 있을 것이고, 그들의 폐 건강이 심각하게 손상될 수 있음.
"
"https://news.hada.io/topic?id=12336","미국 기관, Starlink에 대한 9억 달러 보조금 재지급 결정 않음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                미국 기관, Starlink에 대한 9억 달러 보조금 재지급 결정 않음

FCC의 SpaceX Starlink 지원금 거부 결정 재확인

     * 미국 연방통신위원회(FCC)는 2022년에 내린 SpaceX의 위성 인터넷 부문인 Starlink에 대한 8억 8550만 달러의 농촌 광대역 보조금 거부 결정을 재확인함.
     * FCC는 이 결정이 Starlink의 기본 프로그램 요건 미충족과 약속된 서비스 제공 능력을 입증하지 못한 점에 기반함.
     * FCC 의장 Jessica Rosenworcel은 법적, 기술적, 정책적 검토를 거쳐 해당 신청자가 부담을 충족하지 못했다고 밝힘.

SpaceX의 Starship 발사 실패와 관련된 이유

     * FCC는 Starship 로켓의 성공적인 발사 실패를 이유 중 하나로 들며, Starship의 미래 발사의 불확실성이 Starlink의 의무 이행 능력에 영향을 줄 수 있다고 언급함.
     * FCC는 2022년 8월, 속도 테스트 데이터를 바탕으로 보조금을 철회함.

SpaceX의 반응과 FCC 내부 의견 분분

     * SpaceX는 FCC의 결정에 대해 심히 실망하고 당혹스럽다고 밝힘. Starlink가 농촌 인터넷 프로그램 목표 달성에 있어 최고의 옵션이라고 주장함.
     * FCC 내 2명의 공화당 소속 위원은 2025년 목표를 3년 일찍 적용하는 것은 부적절하다고 지적하며, 바이든 행정부의 머스크에 대한 분노가 원인일 수 있다고 제안함.
     * FCC 위원 Brendan Carr는 FCC가 머스크의 사업에 대한 행정기관들의 대열에 합류했다고 언급하며, 이 결정이 바이든 행정부의 규제적 괴롭힘 패턴에 부합한다고 주장함.
     * Elon Musk는 X에서 FCC의 결정은 이해할 수 없다고 밝힘. Starlink가 실제로 농촌 광대역 문제를 해결하는 유일한 회사라고 주장하며, 프로그램 해체와 세금 환급을 제안함.

Starlink의 성과와 향후 전망

     * 공화당 소속 FCC 위원 Nathan Simington은 2023년 9월 기준으로 Starlink가 약 200만 명의 가입자를 확보했다고 언급함.
     * SpaceX는 매월 더 많은 위성을 궤도에 올리고 있으며, 이는 더 빠르고 신뢰할 수 있는 서비스로 이어질 것으로 기대됨.

        Hacker News 의견

     * 스타링크는 RDOF 신청 시 최소 기준인 25/3Mbps가 아닌 100/20Mbps 서비스를 목표로 제시함.
          + 스타링크가 목표 속도에 도달하지 못해 자격을 상실한 것은 기존 네트워크의 속도 미달 때문만이 아님.
          + FCC는 스타링크가 2025년까지 100/20Mbps 속도를 50만 가입자에게 제공할 기술적 능력이 있는지 평가해야 했음.
          + 스타링크는 스타십 발사에 성공하면 속도 목표 달성이 가능하다고 주장했으나, 아직 스타십은 성공적인 발사를 하지 못함.
          + 당시 사용 가능한 통계에 따르면 스타링크의 전송 속도는 이미 감소 추세였고, 2025년에는 네트워크 사용량이 훨씬 많을 것으로 예상됨.
          + 스타링크가 의무를 이행하기 전에 해결해야 할 기술적 도전 과제가 있으며, 아직 해결되지 않았음.
          + FCC는 스타링크에 자금을 지원하는 것이 도박이라고 보고 안전한 방법을 선호함.
     * 텍사스 북동부 농촌 지역에 사는 한 사용자의 부모님은 스타링크를 주 인터넷 연결로 사용함.
          + 2022년 9월부터 하루에 네 번 자동 속도 테스트를 실행했으며, 속도는 하루 중 변동이 있지만 평균 다운로드 100Mbps, 업로드 10Mbps임.
     * 한 사용자는 정부 보조금을 제공하는 기업에 대한 국민의 소유권 부여에 대해 긍정적인 의견을 제시함.
          + 보조금에 대해 잘 알지 못하지만, 보조금이나 정책 지원을 통해 기업에게 유리한 출발을 제공하는 경우 국민이 소유권을 가질 수 있도록 하는 것이 좋다고 생각함.
     * LTD Broadband와 같은 다른 큰 2020년 수혜자도 더 이상 자격이 없다는 것이 원래 결정과 일치함.
     * 한 사용자는 10년 이상 농촌 지역 서비스 구축에 실패한 기업에게 이 자금을 받지 못하게 하고, 보조금 수령이 즉각적인 도로 점용권을 부여해야 한다고 주장함.
          + 대부분의 장소에서 지하에 광케이블을 설치하는 데 거의 비용이 들지 않으며, 법적으로 허용되는 곳에서는 독립적인 ISP들이 수익성 있게 광케이블을 설치하는 데 문제가 없음.
     * FCC가 요구 사항을 준수하고 이를 위한 테스트 체계를 가지고 있는 것에 대해 한 사용자가 만족함.
          + 스타링크 자체 서비스 사양은 100/20Mbps 요구 사항에 훨씬 못 미침.
          + 현재 스타링크는 다운로드 25-100Mbps, 업로드 5-10Mbps를 약속하고 있으나, 혼잡 지역에서는 저녁 시간에 종종 이마저도 제공하지 못함.
          + 스타링크가 실패하면 남겨진 인프라가 없기 때문에 RDOF가 지원하는 광케이블 설치는 보조금을 받는 회사가 사라져도 오래 지속될 것임.
     * 스타링크가 제공할 수 없는 성능 수준을 목표로 한다면, 이 결정은 합리적임.
          + 그러나 스타링크의 지속적인 개발에 스타십이 필요하다는 언급이 포함된 것은 다소 이상함.
          + 이 부분에 대한 세부 사항을 놓치고 있을 수도 있지만, 매우 추측적으로 보임.
     * RDOF 경매 블록에 거주하는 사람들이 진행 상황이나 업데이트를 어떻게 알 수 있는지에 대한 정보를 찾는 방법을 묻는 사용자가 있음.
          + 경매 종료 후 4년이 지난 지금, 이것이 실제로 일어날지 궁금함.
          + 회의적인 시각에서는 아직 시작조차 하지 않았고, 6년 내에 또는 아마도 영원히 제공하지 않을 가능성이 높다고 생각함.
          + 한편, 지난 2년 동안 스타링크는 유일하게 어느 정도 안정적이고 낮은(ish) 지연 시간으로 사용할 수 있는 서비스임.
          + 스타링크가 2025년까지 100/20을 일관되게 제공할 것이라는 믿음이 있으며, 차터가 그때까지 기가비트를 제공할 것이라고는 생각하지 않음.
     * 스타링크 서비스를 사용해본 사람에게는 분명히 놀라운 것이며, FCC의 이번 조치는 스페이스X의 성공에 영향을 미치지 않을 것임.
          + FCC의 행동은 그들의 기관을 당혹스럽게 만들고, 이 프로그램이 도와야 할 사람들에게 해를 끼침.
     * 스타링크의 전국 평균 대역폭이 농촌 지역보다 나쁠 수 있다는 주장은 타당함.
          + 큰 격차를 메우기에 충분한지는 확실치 않지만, 스타링크는 셀 내 다른 사용자가 적을수록 더 잘 작동하기 때문에 덜 밀집된 지역에 적합함.
"
"https://news.hada.io/topic?id=12312","FCC가 높은 광대역 요금을 조사할지도 모른다는 이유로 통신 업계가 분노","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                FCC가 높은 광대역 요금을 조사할지도 모른다는 이유로 통신 업계가 분노

   어느 나라에서도 통신사 가지고 비슷한 논란이 있던데~

        Hacker News 의견

     * 채터누가 출신이자 도시에서 제공하는 광섬유 인터넷 사용자로서의 관점:
          + EPB Fiber는 모든 전기 고객에게 제공되며, 놀라운 서비스를 제공함.
          + 300/300Mbps, 1Gbps/1Gbps, 20Gbps/20Gbps 속도의 동기식 인터넷과 최근에는 큐비트 기능이 가능한 광섬유 연결을 출시함.
          + 월 $57.99라고 광고할 때, 그 금액이 정확히 세금 포함 월 청구서에 표시됨.
          + 이 서비스는 테네시 주에서 다른 지방 자치단체가 유사한 시립 광섬유 ISP를 구현하는 것을 금지하고, EPB가 전기 공급 지역 외부의 고객에게 광섬유를 제공하는 것을 방지할 정도로 좋은 평가를 받음.
          + 기술 관련 직종의 사람들이 이 지역으로 이사 온 이유 중 ""인터넷""을 상위 5가지 이유 중 하나로 꼽음.
     * FCC가 조사해야 할 '가격 인상' 관행에 대한 의견:
          + 계획의 속도와 기능을 '무료'로 증가시킨 후 몇 달 뒤에 요금을 인상하고 사용자가 눈치채지 못하기를 바라는 관행.
          + 처음에는 Comcast를 통해 월 $35에 25/5Mbps 서비스를 이용했으나, 매년 속도 증가를 발표하고 몇 달 후에는 비즈니스 및 경제적 요인을 이유로 요금 인상을 통보함.
          + 가장 낮은 요금제를 사용하고 있음에도 불구하고 월 $60 이상을 지불하고 있으며, 이는 3개의 휴대폰 요금보다 많은 금액임.
          + 이러한 관행은 부정직하며, 정부가 부여한 독점권이 없다면 어제라도 다른 ISP로 전환할 의향이 있음.
     * 미국의 대형 광대역 제공업체들은 정책 및 가격 투명성에 알레르기가 있음:
          + FCC에게 제안된 소비자 광대역 라벨에 세금과 수수료를 명시하는 것이 불가능하다고 주장함.
     * FCC에 대한 불만과 인터넷 성능에 대한 관점:
          + FCC가 일반적으로 무능하거나 일을 제대로 하려는 의지가 없다는 점과, 링크의 최대 처리량에 초점을 맞추는 것에 대한 불만.
          + 기가비트 케이블 연결을 사용하는 이유는 필요성 때문이 아니라, 케이블/광대역 ISP에 의해 구현된 계층화된 연결과 QoS 때문이며, 이것이 비즈니스 시간 동안 낮은 지연 시간을 경험할 수 있는 유일한 방법임.
          + 광대역 ISP는 지속적인 패킷 손실 문제를 겪고 있으며, 이는 물리적 인프라가 오래되고 유지 관리되지 않기 때문임.
          + 인터넷 성능과 디지털 경험은 단순히 얼마나 많은 최대 처리량을 얻는지가 아니라, 서비스 신뢰성, QoS, 트랜짓 품질, 손실, 지연, 지터 등에 관한 것이며, 이는 재택 근무자들에게 흔한 비디오 및 음성 통화에 큰 영향을 미침.
     * 지난 8년 동안 Spectrum 요금이 거의 두 배로 증가한 경험:
          + 서비스 가동 시간이나 성능에 대한 불만은 없으나, 속도는 그 기간 동안 100Mbps에서 160Mbps로 증가함.
          + 인플레이션, 임금 등을 고려하더라도, 요금 인상의 상당 부분이 단순히 '왜냐하면'인지 의문.
          + 다른 옵션으로는 속도가 매우 느린 지역 무선 제공업체나 DSL이 있으며, Tmobile과 Verizon이 홈 무선 서비스를 시작하고 있음.
     * 뉴욕시에서 Verizon FiOS를 합리적인 가격에 이용하는 경험:
          + 뉴욕시와 주 정부가 Verizon과 Spectrum을 견제하려고 노력함.
          + 중서부에 사는 부모님은 느린 AT&T DSL과 비싸지만 약간 빠른 Comcast/Spectrum/Consolidated 케이블 인터넷 사이에서 선택해야 했음.
          + Google Fiber가 출시되면서 상황이 완전히 바뀜. 처음에는 도심, 그 다음에는 교외, 그리고 최근에는 Spectrum과 AT&T를 선호하는 도시 의회와 싸우며 외곽 지역까지 서비스를 확장함.
          + 이로 인해 기존 운영자들의 가격이 안정되고 다소 하락함.
          + Spectrum은 500Mbps 다운로드가 표준이 되었고, AT&T는 Google Fiber가 서비스를 제공하지 않는 지역에서 GPON 네트워크를 구축함.
          + 경쟁이 가져다주는 이점을 강조함.
     * 주요 미국 도시 외곽에 거주하며 겪는 인터넷 서비스의 문제:
          + 가정용 서비스로 얻을 수 있는 최고 속도가 20/1Mbps로 매우 느림.
          + 절반 정도의 시간을 휴대폰을 사용함.
          + 현재의 상황에 대한 불만을 표현함.
     * 다운타운 피닉스에서 CenturyLink FTTH를 이용하는 경험:
          + 대칭형 1Gbps 서비스를 월 $65에 제공하며, 모든 수수료와 세금이 포함됨.
          + Cox는 경쟁력이나 생존 본능이 부족하여 월 $110에 1.25TB 데이터 제공, 무제한 데이터는 추가로 $50 요금이 부과됨.
          + CenturyLink의 서비스가 훨씬 우수하며, 이전 DSL 제품과 비교할 때 현재의 서비스가 최고라고 평가함.
     * Google Fiber가 등장하여 인터넷 서비스에 대한 논의가 활발해진 것에 대한 의견:
          + 2000년대 후반과 2010년대 초반에 이 주제가 활발하게 논의되었으며, Google Fiber가 문제를 제기하려고 나타남.
          + 전문 관리 계급이 진보를 막는 것이 그들의 유일한 임무라는 것을 암묵적으로 이해하고 있으며, 그로 인해 불행하고 협력하기 어려움.
     * FCC에 대한 비판적인 기사 제목에 대한 의견:
          + 기사 제목이 '화난'이라는 단어를 사용하여 과장된 표현을 사용했다는 의견.
          + ArsTechnica 기사가 이를 '흥분'이라고 묘사했으나, 케이블 제공업체에 대한 불만이 있음에도 불구하고, 이러한 편집 및 추측이 정당화되지 않는다는 견해를 표현함.
"
"https://news.hada.io/topic?id=12301","현재 공식 RSS 피드 지원은 없지만 해결책을 마련 중입니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   현재 공식 RSS 피드 지원은 없지만 해결책을 마련 중입니다

크롬 개발자용 정보

     * 개발자를 위한 크롬 블로그 구독을 희망하는 경우, 현재 공식 RSS 피드 지원은 없음.
     * RSS 피드에 대한 지원을 활발히 개발 중에 있으며, 이해와 인내에 감사함을 표함.
     * 블로그 방문을 권장하며, 도움이 되었는지에 대한 피드백을 요청함.

GN⁺의 의견

     * 이 글에서 가장 중요한 것은 크롬 개발자 블로그에 대한 RSS 피드 지원이 현재는 없지만, 곧 제공될 예정이라는 점임.
     * 개발자 커뮤니티에게 유용한 정보를 제공하는 크롬 블로그의 업데이트를 RSS를 통해 받고 싶어하는 이들에게 흥미로운 소식이 될 것임.

   화제가 되니 순식간에 해결됐네요. 어딜 가나 똑같나봐요 ^^

        Hacker News 의견

     * 크롬 개발팀 엔지니어가 공식적인 지원을 기다리는 대신 직접 비공식 RSS 피드 생성기를 만들어 공개한 것에 대한 흥미로운 사례

     한 크롬 개발팀 엔지니어가 내부 문제 해결을 기다리는 것보다 직접 RSS 피드 생성기를 만들어 공개하는 것이 더 쉬운 상황을 재미있게 지적함. 이전의 구글이라면 내부적으로 빠르게 해결할 수 있었을 문제임.
     * 사이트 운영 팀장의 현재 상황 설명

     사이트를 RSS 피드 자동 생성을 지원하지 않는 새 인프라로 이전했으며, 이전 작업 마감일을 맞추기 위해 누락된 기능을 나중에 처리해야 했다고 설명함. 빠른 해결을 위해 노력 중임.
     * 크롬의 RSS 지원 부족에 대한 지적

     크롬이 시장을 장악하기 시작했을 때, 다른 주요 브라우저들은 RSS를 지원했지만 크롬은 사용자에게 원시 XML을 보여주며 RSS 지원이 부족했다는 의견 제시.
     * 웹 자동화에 대한 접근성 감소에 대한 우려

     웹이 점점 더 자동화/기계 친화적이지 않아지고 있다는 점을 지적하며, 과거에는 간단한 스크립트로 해결할 수 있었던 작업을 수동으로 해야 하는 현실을 비판함.
     * 구글이 RSS를 위협으로 보고 있다는 의견

     구글이 사용자들이 정보를 찾기 위해 구글에 의존하게 만들고자 하기 때문에 RSS를 위협으로 본다는 주장.
     * 간단한 스크립트를 통한 RSS 피드 생성 방법 공유

     curl과 sed 명령어를 사용하여 간단한 스크립트로 RSS 피드를 생성하는 방법을 제시함.
     * 개인 개발자가 구글보다 효율적으로 RSS를 구현했다는 자부심

     한 웹 개발자가 자신이 만든 블로그에 RSS를 성공적으로 구현했다며, 이를 구글에 가르쳐줄 수 있을 것이라는 자신감을 표현함.
     * 구글의 관리 부재에 대한 비판적인 의견

     구글 내에서 이러한 문제가 발생하는 것에 대해 농담처럼 보이는 관리 부재를 비판함.
     * 구글 블로그의 RSS 피드 지원에 대한 미래 가능성 언급

     구글 블로그가 현재 공식적인 RSS 피드 지원이 없지만, 해결책을 찾고 있다는 메시지가 미래에 RSS 피드를 지원할 것임을 암시함.
"
"https://news.hada.io/topic?id=12249","이스라엘을 지지하는 정보 전쟁","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            이스라엘을 지지하는 정보 전쟁

요약: 프로-이스라엘 정보 전쟁의 내부

     * 프로-이스라엘 정보 전쟁의 내부
          + 이스라엘 정부 주도의 줌 회의, 왓츠앱 채팅 로그 등을 통해 온라인 담론을 형성하고 친팔레스타인 목소리를 침묵시키려는 대규모 노력이 드러남.
          + 이스라엘과 하마스 간의 갈등이 심화되면서 프로-이스라엘 투자자, 기술 경영진, 활동가, 이스라엘 정부 관리들이 온라인에서 이스라엘을 지지하는 스크립트에서 벗어난 최소한의 편차에 대응하기 위해 노력을 강화함.
          + 왓츠앱 그룹은 실리콘밸리의 프로-이스라엘 커뮤니티가 아이디어를 교환하고 적을 식별하며 미디어, 학계, 비즈니스 세계에서 이스라엘을 방어하는 방법을 협력하는 스위치보드 역할을 함.
     * ‘IDF의 요청에 따른 압력 유지’
          + 이스라엘 방위군(IDF) 대변인은 줌 회의를 통해 실리콘밸리의 프로-이스라엘 활동가들에게 의회의 입법자들에게 압력을 유지하고 대학, 미디어, 싱크탱크, 엘리트 집단에서 영향력을 행사할 것을 요청함.
          + 하마스의 공격 이후 이스라엘 사회에 큰 충격을 준 대량 학살에 대응하여 이스라엘은 가자 지구 침공을 시작함. 이 과정에서 16,000명 이상의 팔레스타인인들이 사망하고 100만 명 이상이 집을 잃음.
          + J-Ventures의 왓츠앱 그룹은 친팔레스타인 견해를 표현하는 직원들을 해고하고 활동가들을 처벌하는 데 열심히 노력함. 또한, 팔레스타인 지지자들의 행사를 취소하는 데 성공함.
     * ‘조롱이 효과적’: 소셜 미디어 전쟁
          + 온라인 공간은 J-Ventures를 넘어 프로-이스라엘 활동의 중심지임. 이스라엘 외교부는 다양한 온라인 광고를 출시하고 플랫폼에서 광고 공간을 구매하여 이스라엘에 대한 지지를 확산시키려 함.
          + 소셜 미디어에서 이스라엘을 옹호하는 이스라엘 정부와 실리콘밸리 및 이스라엘 기술 회랑의 고위 인사들은 프로-이스라엘 담론을 전파하는 데 긴밀히 협력함.
          + 이스라엘 정부는 온라인 담론을 유지하는 것을 공공 지지를 유지하는 중요한 영역으로 보고 있으며, 이를 위해 다양한 웹 세미나와 전략 세션을 주최함.
     * ‘안전하고 포용적인 환경’ — 이견이 없는
          + 최근 몇 달 동안 가자 전쟁과 이스라엘과 관련된 의견을 표현한 수십 명의 개인이 해고됨. 대부분은 친팔레스타인 견해를 표현한 이유로 해고됨.
          + 왓츠앱 채팅은 이스라엘 비판자들을 해고하고 공공 행사를 억제하는 데 뒤에서 조직적인 노력을 보여줌. 범위는 학생 단체의 자금 출처 조사부터 대학 내 행사에 대한 압력까지 다양함.
     * 입법자들과의 교류
          + J-Ventures 팀은 강력한 명단을 통해 넓은 청중에게 도달함. 투자 기금은 자사의 포트폴리오 회사들이 APEC CEO 서밋에 참여했으며, 캘리포니아 주지사와의 로비 연결고리를 가지고 있음을 강조함.
          + J-Ventures 팀은 AIPAC과 같은 강력한 프로-이스라엘 로비 단체와 관련된 활동가들을 포함하고 있으며, 이들은 다른 그룹 구성원들에게 의회와의 접촉 방법에 대한 조언을 제공함.

GN⁺의 의견

   이 글에서 가장 중요한 것은 기술 업계와 이스라엘 정부 간의 긴밀한 협력을 통해 온라인 담론을 형성하고 친팔레스타인 목소리를 억제하려는 조직적 노력이 드러난 점입니다. 이는 기술과 정치가 어떻게 상호 작용하는지, 그리고 국가 간 갈등이 어떻게 글로벌 플랫폼에서 전개되는지에 대한 흥미로운 사례를 제공합니다. 이 글은 국제 정치와 소셜 미디어의 영향력이 어떻게 결합되어 공공의 의견을 형성하는지에 대한 이해를 돕고, 이러한 활동이 개인의 자유와 표현의 자유에 어떤 영향을 미칠 수 있는지에 대한 중요한 토론을 촉발할 수 있습니다.

        Hacker News 의견

     * 모든 참여자에게: 댓글을 달기 전에 사이트 지침을 숙지하고, 댓글이 지침 내에서 엄격하게 이루어지도록 해달라는 요청. 특히, 논란이 많은 주제일수록 댓글은 더 신중하고 실질적이어야 함을 강조.
     * TikTok에서는 친팔레스타인 의견이 친이스라엘 의견보다 약 36대 1, 다른 온라인 플랫폼에서는 8대 1로 우세함. 이러한 플랫폼들은 친팔레스타인 의견을 우선시하는 경향이 있으며, 반이스라엘 의견을 창출하는 것으로 보임.
     * 미국 내 의견은 친이스라엘로 기울어져 있으나, Z세대는 거의 50/50으로 나뉨. 온라인에서 일어나는 현상은 이스라엘에 유리하지 않음. 또한, 무슬림과 유대인의 인구 비율과 인도의 TikTok 차단 상황이 관련이 있을 수 있음.
     * J-Ventures의 하스바라(Hasbara) WhatsApp 그룹이 친팔레스타인 의견을 표현하는 활동가와 직원을 해고하고 처벌하는 데 힘쓰고 있음. 이러한 행위가 미국 법률 하에서 합법인지에 대한 의문 제기. 일부 주에서는 정치적 차별을 금지하고 있으며, 이러한 억압 활동에 관련된 사람들은 ""미등록 외국 대리인""으로 간주될 수 있음.
     * 미국이 이스라엘에 집중하는 이유에 대한 의문 제기. AIPAC과 이스라엘 로비가 미국 정책을 이끌고 있으며, 이는 미국에 직접적인 이익이 없는 동시에 국제적인 관계에 해를 끼칠 수 있음. 또한, 이스라엘의 서방 동맹으로서의 충성도에 대한 의문 제기.
     * 반유대주의와 이스라엘의 행동에 대한 비판을 혼동하는 것에 대한 지적. 이스라엘의 대응을 비판하는 것이 반유대주의가 아님을 명확히 함.
     * 소셜 미디어에서의 반이스라엘 선전과 거짓말에 대한 우려 표현. 이스라엘인들이 진실을 전달하려는 노력이 오해를 받고 있음을 지적.
     * 모스크바-테헤란-베이징 ""봇 군단 외교 독트린""이 미국의 우파와 좌파를 동시에 급진화시키는 방법을 보여주고 있음을 지적. 반이스라엘 선전이 실제보다 더 많은 친이스라엘 담론을 은폐하고 있음을 제안.
     * 미국이 이스라엘과 팔레스타인 간의 문제에서 중립을 유지하고 군사적 지원을 중단할 수 있는 제3의 옵션을 고려하지 못하게 하는 정보 전쟁의 일부로 보임. 미국이 양측의 갈등에 개입하지 않고 인도적 지원에 집중해야 함을 주장.
     * 유럽연합의 행동이 더 문제가 되고 있음을 지적. 이스라엘에 대한 지지가 서방의 대응에 대한 부정적인 이미지를 만들고 있음을 언급.
     * 이 기사가 특정 이슈에 대한 의견을 형성하기보다는 다른 더 조직적이고 자금이 풍부한 이익 단체들이 이와 유사한 활동을 대규모로 하고 있을 수 있다는 추측을 하게 함.
"
"https://news.hada.io/topic?id=12347","테슬라 FSD Timeline","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            테슬라 FSD Timeline

Elon Musk가 FSD에 대해서 했던 말들을 시간순으로 정리

     * 2014년 9월: 테슬라의 자율주행 시스템(FSD)이 6년 내에 사람보다 10배 안전해질 것이라는 예측.
     * 2015년 12월: 완전 자율주행 기능이 약 2년 내에 실현될 것이라고 발표.
     * 2016년 1월: 약 2년 후에는 땅으로 연결되어 국경에 막히지 않는 한 어디서든 차량 호출 기능(Summon)이 작동할 것이라고 예상.
     * 2016년 6월: 자율주행은 해결된 문제라고 생각하며, 완전 자율주행은 2년 이내에 가능하고 인간보다 안전할 것이지만, 규제는 적어도 1년은 더 걸릴 것이라고 발표.
     * 2016년 10월: 머스크는 내년 말까지 LA의 집에서 타임스 스퀘어까지 완전 자율주행을 시연할 것이라고 발표. 이동 중 단 한 번의 손길도 필요 없으며 충전도 포함됨.
     * 2017년 1월: 전체 자율주행 기능이 언제부터 현저하게 달라질 것인가? - 엘론: 아마 3개월, 확실히 6개월 이내에.
     * 2017년 1월: 최소 4단계에서 5단계 자율주행에 필요한 센서 하드웨어와 컴퓨팅 파워가 지난해 10월부터 생산된 모든 테슬라에 탑재됨.
     * 2017년 3월: [테슬라에서 잠들 수 있을 것인가?] 대략 2년 후에 가능할 것이라고 예측.
     * 2017년 5월: 연안에서 연안까지의 오토파일럿 데모 업데이트는? - 올해 말까지 계획대로 진행 중. 단지 소프트웨어에 제한이 있음. 작년 10월부터 생산된 모든 HW2 테슬라 차량이 이를 수행할 수 있음.
     * 2018년 3월: 내년 말까지 [2019년 말] 자율주행은 기본적으로 모든 운전 모드를 포괄하며, 인간보다 적어도 100%에서 200% 더 안전할 것으로 예상.
     * 2018년 11월: 테슬라가 고객의 문 앞까지 자체 배송할 수 있는 기술적 가능성은 약 1년 후에 있을 것이며, 이후 규제 기관의 결정에 달려있음.
     * 2019년 1월: 99.9999%의 안전성을 달성해야 함. 올해 말까지 FSD가 안전하다고 생각하며, 그 이후에 규제 기관이 승인할 시기를 결정할 것임.
     * 2019년 2월: 올해 안에 완전 자율주행 기능을 완성할 것임. 차량이 주차장에서 당신을 찾아 목적지까지 단 한 번의 개입 없이 데려다 줄 것임. 이는 의문의 여지가 없음. 내년 말까지 목적지에서 잠들어 깨어나는 것이 기본적으로 안전할 것임.
     * 2019년 4월: 최소 6개월 동안은 핸들을 잡고 있어야 할 것으로 예상함.... 시스템이 너무 빠르게 개선되고 있어 이는 곧 중요하지 않게 될 것임. 올해 말이지만 늦어도 내년에는 사람의 개입이 안전을 감소시킬 것임을 알게 될 것임. 감소시킨다고!
     * 2019년 4월: 올해 안에 자율주행 기능을 완성할 것으로 기대하며, 내년 2분기쯤에는 핸들을 만지지 않고 창밖을 볼 수 있을 정도로 충분히 자신감을 가질 것으로 예상함.
     * 2019년 5월: 작년에 LA/NY 오토파일럿 여정을 속일 수 있었지만, 올해 그렇게 하면 테슬라 전체 자율주행을 사용하는 모든 사람이 할 수 있을 것임.
     * 2020년 4월: 로보택시 출시/배치... 올해 기능적으로 좋아 보임. 규제 승인은 큰 미지수임.
     * 2020년 4월: 내년에는 네트워크 차량대에서 로보택시가 운영될 수 있을 것으로 보임, 모든 시장은 아니지만 일부에서는 가능함.
     * 2020년 7월: 5단계 또는 완전 자율주행이 이루어질 것이며, 매우 빠르게 일어날 것이라고 확신함. 테슬라에서는 5단계 자율주행이 매우 가까웠음. 올해 기본 기능을 완성할 수 있을 것이라고 확신함. 근본적인 문제는 남아있지 않음. 많은 작은 문제들이 있으며, 그 모든 작은 문제들을 해결하고 전체 시스템을 결합하는 것이 도전임.
     * 2020년 10월: FSD 베타 출시가 오늘 밤에 이루어질 예정임. 매우 천천히 조심스럽게 진행될 것임.
     * 2020년 12월: 내년에 테슬라 고객 기반에게 완전 자율주행을 제공할 수 있을 것이라고 매우 확신함. 그러나 적어도 일부 관할 구역은 내년에 완전 자율주행을 허용할 것임.
     * 2020년 12월: 테슬라가 내년에 5단계를 달성할 것이라고 매우 확신함, 100% 확신함.
     * 2021년 1월: 테슬라 전체 자율주행이 올해 평균 운전자보다 안전한 수준에서 작동할 것이라고 확신함. 그러나 규제 기관의 말은 할 수 없음.
     * 2021년 1월: FSD는 2021년 말까지 5단계 자율성을 가질 수 있을 것임.
     * 2021년 3월: FSD 베타에 대한 수요가 높아서 차량 디스플레이의 서비스 섹션에 ""베타 다운로드"" 버튼을 약 10일 후에 추가할 예정임.
     * 2021년 3월: FSD 8.3 빌드는 다음 주 말까지 QA 테스트를 마칠 예정이므로, 그때쯤 다운로드 버튼이 나타날 것임.
     * 2021년 3월: 다음 주요 릴리스는 4월이 될 것임. 레이더 없이 순수 비전만 사용할 것임. 이것이 실제 세계 AI의 길임.
     * 2021년 4월: 5월 버튼 출시는 열망적인 목표. 제한된 베타 버전 V9.0의 성과에 달렸지만, 6월 이후로 넓은 베타 출시(즉, 버튼)가 이루어지지 않을 것이라고 놀랄 것이다. FSD 구독은 다음 달에 확실히 이루어질 것임.
     * 2021년 4월: 제한된 v9 FSD 베타 출시에 대한 지혜? - 아마도 2주 후
     * 2021년 4월: 결정적 요인은 순수 비전만으로 비전+레이더보다 더 높은 안전성을 달성하고 증명하는 것이다. 거의 다 왔다. FSD 베타 V9.0은 당신의 마음을 사로잡을 것임.
     * 2021년 4월: 사실이다. 자동 조종 장치/ FSD의 개선 속도에 주목하는 사람이라면 테슬라의 자동 조종 장치/FSD가 이미 고속도로 운전에 대해 초인적이며 도시 거리에 대해서도 빠르게 접근하고 있다는 것을 깨닫게 될 것임.
     * 2021년 5월: 레이더 제거와 안전성 확인에 집중해야 했다. 그 출시는 다음 주에 미국 생산으로 나갈 것이다. 그런 다음 순수 비전 FSD와 V9 베타를 다듬는 데 1-2주가 걸릴 것이며, V8과 V9의 차이는 거대함.
     * 2021년 5월: 넓은 베타 출시까지 아마도 1-2개월 걸릴 것 같다. 하지만 이러한 것들은 정확히 예측하기 어렵다. 순수 비전 주행을 위해 수행해야 할 작업은 FSD에 필요했기 때문에, 보이는 것보다 훨씬 더 많은 진전이 이루어졌다.
     * 2021년 5월: 순수 비전 자동 조종 장치가 북미에서 출시되고 있다. 이 생산 릴리스의 업데이트가 2주 후에 있을 것이며, 그 후 1주일에 FSD 베타 V9.0(역시 순수 비전)이 출시될 것이다. FSD 구독은 대략 같은 시기에 활성화될 것임.
     * 2022년 1월: 올해 인간보다 더 안전한 FSD를 달성하지 못하면 놀랄 것임.

GN⁺의 의견

     * 이 기사는 테슬라의 자율주행 기술(FSD) 개발에 대한 일론 머스크의 낙관적인 예측을 시간 순으로 보여줌.
     * 자율주행 기술은 교통 안전과 효율성을 크게 향상시킬 잠재력을 가지고 있어, 많은 사람들이 이 기술의 발전에 큰 관심을 가짐.
     * 일론 머스크의 과거 발언들은 그의 기술에 대한 자신감과 미래 지향적인 비전을 반영하며, 이는 테슬라의 혁신적인 이미지를 강화하는 데 기여함.

   GN+ 번역 좋네요~

   저렇게 질러대서 그나마 지금 이 정도까지 올 수 있지 않았나 싶습니다.

   일런 머스크의 거짓말 기록이군요.

   전 테슬라 차는 참 좋아합니다만, 일런머스크가 FSD에 대해서 지껄이는 내용은 그냥 흘려듣는 중입니다.

   이 페이지 상단에도 ""I still believe Tesla will have the first general / consumer FSD :)"" 라고 써있긴 한데, 저도 그거에는 동의해요.
   아마도 가장 FSD를 잘 하긴 하겠지만, 언제 될지는 미지수..

   저기서 시간 예측만 빼면 대부분 다 맞아들어가고 있죠.
   원래 개발자가 하는 일정 예측은 곱하기 2를 하고 단위를 하나 올려야 맞다는 농담도 있습니다.
   (좀 신중하게 말했으면 더 좋았을 거라 생각은 들지만요.)

   다른 자동차 메이커들의 거짓말하고는 본질적으로 다릅니다. 애초에 그걸 실제로 하기 위한 준비 과정도 없이 약속만 했던 사례들이 수두룩 합니다. (사례들은 굳이 언급하진 않겠습니다.)

   테슬라 팬들도 일론이 말하는 날짜는 믿지 않지만 그게 언젠간 될 거라는 건 믿고 있습니다. 늘 그래왔듯이 말이죠.

        Hacker News 의견

     * 유럽에서 2019년 초에 모델 3이 출시될 때 이른바 FSD 패키지에 약 7,500유로를 지불했음. 5년이 지난 지금, FSD는 거의 아무 기능도 하지 못함. 핀란드 고속도로에서 속도 제한을 인식하지 못하는 등 기본적인 기능조차 수행하지 못함. 어린아이도 읽을 수 있는 도로 표지판을 인식하지 못하는 자율주행차는 당혹스러움. 캘리포니아의 일부 도로에서는 테슬라가 손수 조정하여 진전의 환상을 보여주기 위해 더 잘 작동할 것으로 추측함. 이번 경험 후 다시 테슬라를 구매할 생각이 없음. 낙관주의는 좋지만, 이러한 과대 광고는 교통에서 의존하는 것의 능력에 대해 잘못된 생각을 줄 수 있어 위험함.
     * ""2년 후면 될 거야, 믿어!""라고 말하는 것이 단순한 낙관주의를 넘어 거짓 광고나 시장 조작이 되는 시점은 언제인가? 이런 말을 4년 동안 공개적으로 해왔고, 결국 모든 것을 철회함. 다른 사람이 이런 일을 했다면 투자자와 주주들에게 큰 타격을 입었을 텐데, 사람들은 여전히 그의 멋짐에 대해 이야기하고 싶어 함. 다른 인물 중심의 숭배와 비슷함.
     * AI 연구의 근본적인 문제는 남아있는 기본적인 도전이 없다고 생각하는 것임. 많은 작은 문제들이 있고, 이 모든 작은 문제들을 해결하고 전체 시스템을 조립하는 것이 도전임. 변두리 사례가 얼마나 많고, 얼마나 많은 사례를 우아하게 처리해야 ""충분히 좋다""고 할 수 있는지에 대한 문제임. 사람들이 예상하는 것보다 더 긴 꼬리를 가지고 있고, 이를 해결하기 위해 필요한 변화는 매우 근본적임. 동시에, 성공하기를 진심으로 바라며, FSD는 세기의 가장 변혁적인 기술 발전 중 하나가 될 수 있다고 생각함.
     * 아이작슨의 새로운 머스크 전기를 읽으면, 과도한 기한을 정하고, 직원들을 밤 3시까지 일하게 하고, 군사 지휘관처럼 그들에게 소리치는 머스크의 접근 방식이 테슬라와 스페이스X에서 놀랍도록 잘 작동했음을 알 수 있음. 그들은 누구도 가능하다고 생각하지 않았던 비즈니스 목표를 달성했음. 그러나 증거는 이러한 접근 방식이 자율주행차를 개발하는 연구 문제에는 효과가 없다는 것을 시사함. 소프트웨어 엔지니어에게 소리치고 밤새워 AI 연구 돌파구를 만들도록 할 수는 없음. 스페이스X/테슬라와의 차이점은 문제가 근본적으로 제조 및 효율성 문제였고 (결국 우리는 1969년에 달에 도달했음), 과학 연구의 문제가 아니었음.
     * 1년도 채 되지 않아, 테슬라가 주차된 비행기에 천천히 충돌하는 비디오가 있었음. 이는 그들이 가장 쉬운 부분조차 해결하지 못했다는 것을 나타냄: 정지된 설정에서 무언가가 있으면, 그것에 충돌하지 말고 멈춤. 그것은 개발/발표 후 7년이 지난 2022년의 일임. 숨을 참고 기다리지 않음.
     * AI가 개발자를 대체할 것이라는 모든 이야기를 듣고 나서 실제로 최고의 모델로 물건을 만들어보고, 간단한 JSON 스키마에 따라 JSON 함수 호출을 생성하는 데 실패하고 매개변수가 어떻게 생겼는지에 대해 말도 안 되는 것을 만들어내는 것을 보는 것과 같음.
     * 테슬라 모델 S를 오랫동안 가지고 있었음. 고조명/저조명 조정이나 와이퍼 조정을 신뢰할 수 있게 하지 못함. 이러한 문제들은 완전 자율주행보다 조금 더 쉬운 문제로 보임.
     * 2019년 말까지 약속된 로보택시 서비스는 어디에 있나?
     * 2019년에 FSD를 구입함. 오늘날에는 그때보다 더 나빠짐. 더 자주 급제동을 하고, 덜 사용하게 되었으며, 환불받을 수 없다는 사실이 아쉬움. 또한, 자동 와이퍼가 완전히 작동을 멈춤. 비가 많이 올 때 더 이상 작동하지 않음.
     * 모델 Y의 완전 자율주행 기능을 매우 좋아함. 매일 사용하고 여전히 자동차가 도시 곳곳을 자율주행하는 것에 대해 혼자 웃음. 일론이 과대 광고를 하고 FSD가 지금까지 완벽해지기를 바랐던 댓글 섹션의 불만을 이해하지만, 더 긍정적인 댓글이 없는 것이 믿기지 않음. 친구들에게 FSD와 테슬라의 가속도, 산타 모드, ""배출"" 모드 등을 보여줄 때마다, 그들은 항상 놀라워하며 나 역시 놀라움. 미래에 살고 있고 그것을 즐김.
"
"https://news.hada.io/topic?id=12332","Pinterest가 정리한 2024년 주요 트렌드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Pinterest가 정리한 2024년 주요 트렌드

     * 4.8억명의 사람들이 Pinterest를 이용하여 인생의 다음 계획에 필요한 것들을 수집함
     * ""Pinterest Predicts""는 아직-트렌드가-아닌 내년에 새롭게 떠오를 것들을 공유하는 보고서

뷰티

     * Blue Beauty : 60년대 아쿠아마린 메이크업이 현대적으로 재해석됨. Gen Z와 밀레니얼 세대가 새롭게 채택 중임
     * Head to Glow : 고급 로션과 홈 스파 경험에 초점을 맞춘 바디케어가 부상함
     * Make It Big : 더 크고, 대담하며, 생동감 있는 스타일로. 밀레니얼 세대와 Z세대는 볼륨감 있는 헤어스타일과 조각적인 디자인의 주얼리를 선호

축하

     * Groovy Nuptials : 70년대 영감의 웨딩 트렌드가 부활. 디스코 및 히피 스타일의 레트로 스타일

엔터테인먼트

     * Jazz Revival : 전자 음악대신 빈티지 재즈에 대한 관심이 증가. 재즈 음악에서 영감을 받은 옷차림, 어둡게 조명된 장소, 로우파이(저품질) 스타일

패션

     * Bow Stacking : 의류, 신발, 헤어, 주얼리에 섬세한 ""리본""이 인기를 끌 것으로 예상됨
     * Eclectic Grandpa : 할아버지 스타일에서 영향을 받은 ‘그랜파 코어’ 스타일이 강세를 보임. 복고풍의 거리 패션, 멋진 가디건, 개인 맞춤 옷 등 개성적이고 복고적인 스타일

식음료

     * Melty Mashups: 버거 퀘사디야, 피자 파이와 같은 이색적인 음식 조합이 각광받음
     * Tropic Like It's Hot: 트로피컬(열대식) 음식과 인테리어 트렌드가 두각을 나타냄

취미와 관심사

     * Making a Racket: 배드민턴에 대한 관심이 증가
     * Be Jelly: 해파리(jellyfish)에서 영감을 받은 데코 및 뷰티 아이디어가 유행함. 부드럽고 유연하고 투명 또는 반투명한 질감
     * Give a Scrap: 업사이클링(재활용)이 유행할 것. 베이비붐 세대(Boomers)와 X세대(Gen X)가 기본 티셔츠(basic tees)를 자신만의 독특한 스타일로 변형. 사용 가능한 모든 자르기와 찢기 기법이 포함
     * Knockout Workouts: 스트레스 해소 방법으로 무술에 집중할 것. 카라테, 킥복싱, 주짓수와 같은 전투 스포츠에 몰두하여 자신만의 시간을 보낼 것으로 예상. 신체적인 활동을 통해 스트레스를 해소하고, 동시에 정신적인 집중과 자기관리 능력을 향상시킬 수 있는 방법
     * Aquatecture: 집을 꾸미는 새로운 방식으로 '작은 수족관 디자인'과 과장된 '거북이 테라리움'에 집중할 것

홈 인테리어

     * Kitschens : 비전통적인 주방 디자인이 인기를 끌 것. 중고품 , 빈티지 가전 제품, 그리고 강렬한 색상의 도장으로 새롭게 꾸밀 것
     * Western Gothic : 빈티지 아메리카나(미국 전통) 스타일과 어두운, 감성적인 색조를 혼합한 디자인을 의미. DIY(Do-It-Yourself) 요소가 강조될 것
     * Cafécore : 집안에 개인적인 커피 만들기 공간(커피 스테이션)을 설치하는 것이 자신의 개성을 표현하는 새로운 방식
     * Hot Metals : 메탈릭 톤, 특히 은색 톤과 대담한 크롬이 대중적인 인기를 얻을 것. 'trusty neutrals' 즉, 신뢰할 수 있는 중성적 색상들을 더 'hardcore' 즉, 강렬하고 과감한 메탈릭 색상으로 바꿀 것

육아

     * Inchstones: 부모들이 자녀들의 작은 성취들을 축하하는 트렌드. 가족 내의 소소한 행복과 성취를 더욱 가치 있게 여기는 문화를 반영

여행

     * Rest Stops: 사람들이 여행 계획을 느긋하게 하고 충분한 수면을 취할 수 있도록 하는 방향으로 변화할 것
     * Dirt Flirts: 오프로드(비포장도로 주행) 스타일을 채택. 4륜 구동 차량을 준비하고 산으로 여행을 떠날 것

Well-being

     * Big Talk : 더 깊은 인간 관계를 맺는 것에 중점을 둘 것. 대화를 시작하는 새로운 방법과 친밀한 질문들을 찾을 것

   확실히 문화권을 타는가보군요. 한국과는 거리가 멀어보이네요..

   아무리 not-yet-trending 이라지만.. 너무 제 상식과 동떨어진게 많아서 신기했네요.
"
"https://news.hada.io/topic?id=12315","macOSPilot - macOS를 위한 음성+비젼 CoPilot","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  macOSPilot - macOS를 위한 음성+비젼 CoPilot

     * macOS의 모든 어플리케이션에서 사용가능한, 음성과 비젼을 이용한 AI 어시스턴트
     * 단축키를 누르고 음성으로 질문하면, 현재 컨텍스트 기반으로 음성 답변을 출력
          + 현재 윈도우의 스크린샷을 만들어서 OpenAI GPT Vision에게 보냄
          + 질문은 OpenAI Whisper API를 이용해서 받아쓰기 한후 텍스트로 함께 보내짐
          + 받아온 텍스트 답변을 OpenAI TTS를 이용해서 음성으로 변환하여 출력
     * NodeJS/Electron 으로 개발함
     * 기본 단축키는 Cmd + Shift + '

        Hacker News 의견

     * ""OSX"" 대신 ""macOS""라는 용어를 프롬프트에서 사용하는 것이 더 나은지, 아니면 초기에 선택한 것을 크게 고민하지 않았는지에 대한 질문.
          + 게시자는 비디오를 훑어보며 궁금증을 표함.
          + 관련 코드 링크 제공.
     * 응답으로 TTS 대신 스트리밍 텍스트 옵션을 추가할 것을 제안.
          + 음성 명령 대신 텍스트를 사용하는 것도 고려해볼 것.
          + 비슷한 종류의 조수를 오랫동안 시도해본 경험을 공유하며, 디스코드에서 연락하자고 제안.
     * 리눅스 설정에 대한 유사한 스크립트를 작성했다고 언급.
          + XFCE 키보드 단축키와 연결.
          + 스크립트 사용 빈도가 낮다고 언급.
     * OpenAI API 사용 시 지출 한도를 설정할 것을 권장.
          + 텍스트 모델과 비전 모델의 비용 차이를 빠르게 알게 될 수 있음을 경고.
          + 가격이 비슷하다는 것을 확인하고 긍정적인 평가.
     * 프로젝트에 대한 긍정적인 반응.
          + 스크린샷이 혼란스러운 부분을 명확히 하는 데 도움이 될 것 같다고 언급.
          + 사용하지 않을 때 창을 숨길 수 있는 방법에 대한 질문.
     * 프로젝트를 ""open""AI가 아닌 로컬 LLMs와 함께 작동하도록 만들 계획이 있는지 질문.
     * 터미널 자체에 통합하여 무언가를 구축하고 싶다는 의견.
          + 스크린샷을 피하고 터미널에서 직접 작업하는 것이 간단하다고 언급.
          + 터미널에서 AI에게 명령을 내리는 형식의 예시 코드 제공.
          + 바쁜 일상 속에서 시간을 내기 어렵다는 토로.
     * ""macOSpilot이 NodeJS/Electron을 사용한다""는 정보에 대한 부정적인 반응.
     * 디지털 오디오 워크스테이션 Ableton Live와 함께 사용해본 경험 공유.
          + 매우 유용하고 시간을 절약해줄 것 같다는 긍정적인 평가.
          + 상호작용 비디오 링크 제공.
          + 부정적인 댓글에 대한 의문 제기.
     * ls 명령의 결과를 기다리는 동안 생산성에 대한 상상을 공유.
"
"https://news.hada.io/topic?id=12229","Resume Matcher - AI를 이용한 이력서 교정 도구 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Resume Matcher - AI를 이용한 이력서 교정 도구 오픈소스

     * LLM을 이용하여 Job Description에 맞게 이력서를 수정 제안해주는 도구
     * 많은 회사들이 사용하는 ATS(Applicant Tracking Software)의 기능을 모방해서 이력서를 ATS 친화적으로 만들고, 가독성을 개선하며, 인사이트를 제안
          + Python을 이용하여 이력서&JD를 파싱하여 키워드 추출
          + textacy 를 이용하여 Key Term들도 추출하여 더 넓은 맥락을 이해
          + Qdrant를 이용하여 이력서가 JD에 얼마나 근접하게 매칭하는지 벡터 검색을 진행
"
"https://news.hada.io/topic?id=12248","열차 버전 '디젤게이트' 사건 – 중량급 하드웨어 해킹 발생","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   열차 버전 '디젤게이트' 사건 – 중량급 하드웨어 해킹 발생

기사 요약: 폴란드 열차 해킹 사건

     * 폴란드 열차 제조사 Newag의 Impuls 45WE 열차가 정비 중 갑자기 멈춤.
     * 정비를 담당한 SPS는 문제를 해결하지 못하고, Dragon Sector 팀이 해결에 나섬.

입찰 승리, 서비스 실패

     * SPS는 1,000,000km 주행 후 필수 정비를 위한 입찰에서 Newag를 이겨 정비 계약을 따냄.
     * 정비 후 열차가 작동하지 않아, SPS는 문제 해결을 위해 매뉴얼을 참고하지만 해결책을 찾지 못함.

미스터리한 고장

     * 두 번째 열차도 같은 문제로 정비 후 작동하지 않음.
     * 제조사인 Newag는 도움을 거부하고, 더 많은 열차가 정비 후 멈춰 서게 됨.

폴란드 최고의 해커들

     * 열차 운행 중단으로 인해 대중교통에 차질이 생기고, SPS는 Dragon Sector 팀에게 도움을 요청함.
     * Dragon Sector 팀은 열차의 컴퓨터 시스템을 분석하여 문제를 해결하기 위해 노력함.

마감일 추격과 열차 고장

     * Lower Silesian Railway는 Newag와 협력하여 고장난 열차를 수리하기로 결정함.
     * Dragon Sector 팀은 마감일이 다가오면서 문제 해결을 위해 밤낮으로 작업함.

열차가 고장난 이유

     * 열차 소프트웨어 코드에는 특정 GPS 좌표에서 10일 이상 머무를 경우 열차를 작동하지 못하게 하는 조건이 숨겨져 있음.
     * 열차 부품 교체 시 열차를 차단하는 메커니즘과 차단 해제 방법도 발견됨.

날짜 확인이 어려움

     * 다른 열차는 날짜 관련 조건으로 인해 압축기 오류를 보고하며 작동하지 않는 문제가 발생함.

하드웨어 놀라움

     * 열차 내에는 ""UDP<->CAN 컨버터""라고 표시된 장치가 발견되어 원격 통신이 가능한 것으로 추정됨.

브로츠와프뿐만 아니라

     * SPS가 Newag의 고장난 열차를 수리한 사실이 다른 회사에 알려지며, 유사한 문제가 흔한 것으로 밝혀짐.

다음은 무엇인가

     * 제조사의 해결책에 대한 평가는 독자와 고객에게 맡겨짐.
     * 폴란드에서는 이 문제에 대해 관심을 표명하는 것 외에는 별다른 조치가 없음.

GN⁺의 의견

     * 이 사건에서 가장 중요한 것은 열차 소프트웨어에 숨겨진 조건들이 발견되었다는 점임.
     * 이 기사가 흥미로운 이유는 평범한 열차 정비가 전문 해커들의 개입으로 큰 사이버 보안 이슈로 변모했기 때문임.

        Hacker News 의견

     * 최근 관련 기사: 폴란드 기차, 타사 정비소에서 수리 시 시스템 잠김 현상 발생
          + 폴란드의 기차가 경쟁사의 정비소에서 10일 이상 머무를 경우 기차의 시스템이 '벽돌'처럼 작동하지 않게 되는 코드가 발견됨. 이는 단순히 수리 정보의 장벽을 넘어서는 행위로, 고의적인 재산 훼손으로 보임.
     * 경쟁사에서 수리할 때 제품을 고의로 파괴하는 것은 대담한 행위임.
     * 기사 제목이 오해의 소지가 있음. 이 사건은 디젤게이트처럼 인위적인 환경에서 인증을 통과하려는 것이 아니라, 경쟁사에서 수리를 받았다는 이유로 부품의 가짜 고장을 보고하고 기차 운행을 중단시키는 것임.
     * 폴란드 내에서 이 문제에 대해 관심을 표명한 기관은 있으나, 소비자 보호나 경쟁 보호 관련 기관에서 구체적인 조치가 취해진 바는 없음.
     * 이러한 엔진 제어 시스템의 문제를 해결하기 위해 인터페이스를 표준화하여 규제 기관을 속이지 않고 센서의 출력을 교체할 수 있게 하는 것이 해결책일 수 있음.
     * 소프트웨어를 통한 고의적인 방해 행위로 보이며, 이는 고객이 제조사의 서비스를 이용하도록 강제하는 것으로 보임. 법원의 판결에 관심이 집중됨.
     * 기차 펌웨어의 품질이 일반적으로 좋지 않은 것으로 보이며, 이번 스캔들이 더 큰 주의를 끌기를 바람. 과거 독일 Deutsche Bahn과 스위스에서도 비슷한 소프트웨어 문제가 보고됨.
     * 주로 영어 콘텐츠를 소비하며, 다른 나라의 콘텐츠는 주로 대형 미디어를 통해 유출된 것만 접함. 번역을 통해 더 많은 좋은 콘텐츠를 접할 수 있을지 궁금함.
"
"https://news.hada.io/topic?id=12225","Meta, AI 관련 새로운 기능 업데이트 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Meta, AI 관련 새로운 기능 업데이트

Meta AI의 진화

     * 메타 AI는 가상 비서로, 질문에 답하고 사진을 생성하는 등의 기능을 제공
     * 모바일에서 더 상세한 응답 제공, 검색 결과의 더 정확한 요약 등으로 더 유용해짐
     * 메타 AI를 사용하려면 메시징 플랫폼에서 ""AI 채팅 생성""을 선택하거나, 그룹 채팅에서 ""@MetaAI""를 타이핑하고 도움을 요청함

친구들과 이미지 생성 및 변형하기

     * 메타 AI의 텍스트-이미지 생성 기능인 'imagine'을 통해 채팅에서 이미지를 생성하고 공유할 수 있음
     * 'reimagine'이라는 새로운 기능을 추가하여, 친구들이 이미지에 대한 아이디어를 제시하고 메타 AI가 새로운 이미지를 생성함

메타 AI에서 Reels 경험하기

     * Reels는 새로운 콘텐츠를 발견하고 창작자와 연결되며 영감을 얻는 데 유용함
     * 메타 AI 채팅에서 Reels를 소개하여, 예를 들어 도쿄 여행 계획 시 방문할 장소를 추천하고 관련 Reels을 공유할 수 있음

페이스북에서의 경험 향상

     * 메타 AI를 활용하여 사용자가 생일 인사를 만들거나, 피드 게시물을 편집하고, 페이스북 데이팅 프로필을 작성하는 등의 일상적인 경험을 돕고 있음
     * 페이스북에서 AI 생성 이미지를 쉽게 만들고 공유할 수 있는 방법을 테스트 중임

창작자가 팬들에게 응답하는 데 도움

     * 창작자가 커뮤니티와 더 빠르고 쉽게 소통할 수 있도록 DM에서 제안된 답변을 테스트 중임

메타 AI와 함께 상상하기 체험

     * 메타 AI의 텍스트-이미지 생성 기능인 'imagine'을 채팅 외부에서도 사용할 수 있도록 확장함
     * 미국에서 시작하여 imagine.meta.com 에서 창작 취미가 있는 사람들이 이미지를 생성할 수 있음

메타 AI와 대화하기

     * 메타 AI 외에도 다른 AI들을 개선 중이며, 검색 기능을 추가하고 있음
     * 일부 AI에 장기 기억 기능을 실험 중으로, 대화 내용을 기억하고 이어갈 수 있게 됨

보이지 않는 워터마킹, 레드 팀 테스트 및 향후 업데이트

     * AI가 생성한 콘텐츠의 투명성을 위해 보이지 않는 워터마킹을 도입할 예정임
     * 레드 팀 테스트를 통해 AI의 안전성을 지속적으로 개선하고 있음
     * 사용자의 피드백을 바탕으로 AI를 개선하고 있으며, AI의 가능성을 탐구하는 데 초점을 맞추고 있음

GN⁺의 의견

     * 이 기사에서 가장 중요한 것은 메타가 AI 기술을 활용하여 사용자 경험을 향상시키고, 창의적이고 몰입감 있는 애플리케이션을 제공하기 위한 노력임.
     * AI의 진화와 통합된 기능들이 사람들에게 흥미로운 이유는 기술이 일상 생활에 어떻게 융합되어 새로운 창작과 소통의 방식을 제공하는지를 보여주기 때문임.

   페이스북에서 유명 인사에게 DM을 보내면,
   해당 유명 인사의 모든 DM 내용을 개인적으로 학습한 AI가 자동화된 답변을 보내주는 상상을 해봤어요...
"
"https://news.hada.io/topic?id=12341","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   다음 달 부터 스프링 관련 프로젝트에 투입되기 때문에 사놓은 인강들을 보면서 보낼거 같습니다.

   갑자기 추워져서 집에서 따뜻하게 드라마 보고 쉬려고요. 지난주 지인들과 하얀코끼리라는 애물단지 선물 교환 게임을 했었는데, 목도리, diy 조명, 에코백, 꽃씨앗, 미술용품 등이 나와 재미있었어요.
"
"https://news.hada.io/topic?id=12290","Show GN: U0.wtf - 브랜드를 알리는 짧은 URL","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Show GN: U0.wtf - 브랜드를 알리는 짧은 URL

   U0.wtf는 브랜드를 알리고 싶은 개발자, 마케터분들을 위한 짧은 URL 플랫폼입니다.

   제품 기능
     * 링크 및 브랜드 성과 애널리틱스
     * 브랜드를 알리는 커스텀 도메인
     * 클릭 전환율을 높이는 커스텀 소셜 미디어 썸네일 이미지
     * QR 코드 생성기
     * 링크 개인화 (*iOS, Android 타게팅, 비밀번호 설정, 링크 감추기 등)

   오픈소스
     * AGPL 라이센스 제품인 Dub을 한국 여건에 알맞도록 현지화 (예: 카카오톡 링크 미리보기, 원화결제, 유료 플랜 구매시 오픈카톡방 공유 등에 적합하도록 더 많은 트래픽 분석 제공) 하였으며 마찬가지로 AGPL 라이센스가 적용됩니다. (https://u0.wtf/license)

   버그 및 피드백
     * 긱뉴스 댓글, GitHub Issue나 제품 내 라이브 채팅, 이메일을 통해서 문의를 남길 수 있습니다.

   깔끔하고 좋네요~

   말씀 감사드립니다 :)

   UX 상에 혼동이 있는 것 같아 적어둬요!

   커스텀 도메인 기능의 경우 만들고 계신 제품이나 브랜드 홈페이지 용도로 사용중인 도메인이 아닌 남는 도메인을 사용해주세요

   안녕하세요! 저는 Empty.app이라고 제품을 개발하고 있는 다운이라고 해요.

   최근 저는 제품 런칭에 앞서 여러 매체들을 리스트업하고, 매체들에 따른 여러가지 캠페인 URL들을 어떻게 관리해야 할지에 대해서 짧게 고민을 한 적이 있는데요.

   이런 고민을 해결해주는 제품들이 영미권에는 몇몇 존재하지만, 한국에는 제가 원하는 느낌의 제품이 많이 없어서 아쉽다는 생각을 했습니다.

   그래서 주말동안 잠시 시간을 내서 한국분들이 사용하시기 쉽고 브랜드 커뮤니케이션에 최적화된 짧은 URL 관리도구를 만들어보았습니다 :)
"
"https://news.hada.io/topic?id=12298","Show HN: 가짜 Google Gemini 데모를 GPT-4를 사용하여 재제작, 이번엔 실제로 구현","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Show HN: 가짜 Google Gemini 데모를 GPT-4를 사용하여 재제작, 이번엔 실제로 구현

GPT-4를 이용한 구글 제미니 가짜 데모의 리메이크, 이번엔 진짜임

     * 구글 제미니의 가짜 데모를 GPT-4를 사용하여 리메이크한 프로젝트.
     * 실제로 작동하는 데모가 제공되며, 관련 코드는 GitHub 레포지토리에서 확인 가능.
     * 프로젝트는 Greg Technology에 의해 만들어짐.

GN⁺의 의견

     * 이 기사에서 가장 중요한 점은 GPT-4를 활용하여 과거의 가짜 데모를 실제로 구현한 프로젝트의 존재.
     * 인공지능 기술의 발전이 실제로 사용 가능한 혁신적인 결과물을 만들어내는 과정을 보여주는 사례로서 흥미로움.

        Hacker News 의견

     * ""가짜 Gemini 데모의 '마법'""은 LLM이 지속적으로 오디오와 비디오 입력을 받고, 사용자의 대화나 그림 그리기가 끝나는 시점을 알아채고 적절한 시기에 응답하는 것처럼 보였음.
     * 소스 코드 검토 결과, 데모는 비디오 피드의 스크린샷을 800ms마다 캡처하고 사용자가 그림을 완성할 때까지 기다린 후 마지막 세 스크린샷을 전송함. 이러한 방식으로 LLM과 상호작용하는 것은 연속적인 오디오-비디오 입력 없이는 자연스럽지 않게 느껴짐을 증명함.
     * 회사들이 왜 이런 식으로 거짓말을 하는지 이해할 수 없음. 실제로 많은 것을 잃을 수도 있는데, 이러한 과장된 홍보는 단기적으로는 도움이 될지 몰라도 장기적으로는 도움이 되지 않음.
     * Google DeepMind는 실제로 최첨단 LLM을 가지고 있지 않았다고 확신함. ChatGPT가 출시되었을 때 Google은 AI 안전성 때문에 더 나은 모델을 공개하지 않았다고 했지만, 실제로는 그렇지 않았음.
     * GPT-4V는 매우 인상적이며, 시각이나 멀티모달리티에 관심이 있는 사람은 LLaVA를 시도해볼 것을 권장함. 개인적으로 7B q5_k 변형을 사용해보고 매우 인상적이라고 생각함.
     * GPT-4V를 사용하여 유사한 데모를 만들 수 있었음. Google이 진실된 마케팅을 했다면 모두가 적절하게 인상을 받았을 것이지만, 대신 일반 대중을 위한 오해의 소지가 있는 마케팅 비디오를 만들어 기술 전문가들에게 실망을 안겨줌.
     * Google의 AI 대화 번역 앱을 실제로 사용해보려고 했지만, 실제 대화에는 전혀 사용할 수 없음. 데모에서는 자연스럽게 보였지만 실제로는 작동하지 않았음을 확인함.
     * JPEG 이미지만이 GPT-4와의 유일한 인터페이스로 사용되는 것은 낭비라고 생각함. 인간의 눈은 '프레임' 자체보다는 프레임 간의 차이를 인식함. 비디오 코덱처럼 내부 상태가 키 프레임과 델타로 작동하는 모델이 실시간 비디오 처리의 다음 큰 단계가 될 수 있음.
     * Google DeepMind는 실제로 최첨단 언어 모델을 가지고 있지 않았다고 확신함. ChatGPT 출시 당시 Google은 AI 안전성 때문에 더 나은 모델을 공개하지 않았다고 했지만, 실제로는 그렇지 않았음.
     * 이 데모의 지연은 API를 통한 것이므로 용서될 수 있음. 로컬 인프라에서의 추론은 거의 즉각적이므로, 이 데모는 해당 인프라에 접근할 수 있다면 다른 모든 것을 능가할 것임.
     * Sagittarius라는 이름을 선택한 것은 별자리에서 Gemini와 정반대에 위치해 있기 때문에 재미있음.
"
"https://news.hada.io/topic?id=12287","자신만의 레트로 컴파일러 개발","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            자신만의 레트로 컴파일러 개발

컴파일러 제작 입문서 출시

     * 공개 도메인에 속한 전체 코드를 포함한 자체 호스팅 컴파일러의 소스 코드 연구.
     * T3X/0 언어는 Pascal과 BCPL에서 유래, 매우 단순함.
     * 20페이지 분량의 매뉴얼 포함, C나 Pascal 같은 절차적 프로그래밍 언어와 Z80 CPU 어셈블리 언어에 대한 기본 지식 필요.

컴파일러 제작에 대한 상세한 설명

     * 상세한 다이어그램, 표, 예시를 통한 철저한 설명.
     * 어휘 분석, 구문 분석, 코드 생성, 간단한 최적화 등의 주제 포함.
     * BDOS 인터페이스와 런타임 라이브러리에 대한 설명도 수록.

GN⁺의 의견

     * 이 책은 컴파일러 제작에 대한 전반적인 이해를 돕기 위해 상세한 설명과 예시를 제공함.
     * 프로그래밍 언어의 기본 구조와 컴파일 과정에 대한 깊은 통찰을 제공하며, 특히 구식 컴퓨터와 저수준 프로그래밍에 관심 있는 초급 소프트웨어 엔지니어에게 매력적임.
     * 실제 코드를 통한 학습이 가능하여, 이론뿐만 아니라 실제 컴파일러 제작 기술을 습득하는 데 유익함.

        Hacker News 의견

     * 새로운 컴파일러 책 출간 소식
          + 최신 컴파일러 책이 발표됨. 이전 ""Write Your Own Compiler""의 확장판으로, CP/M 시스템의 Z80에서 코드 생성에 대해 논의함.
          + 4MHz Z80 시스템에서 10분 안에 자가 컴파일이 가능한 컴파일러의 복잡성에 대해 탐구.
          + 코드는 무료이지만 책은 유료임.
     * C 멀티패스 컴파일러 및 어셈블러 개발 경험 공유
          + 오래된 x86 CPU를 위한 TypeScript로 작성된 C 멀티패스 컴파일러 및 어셈블러를 만듦.
          + 해당 프로젝트는 GitHub에서 확인 가능함.
     * 현대 CPU 및 GPU 최적화에 대한 책에 대한 기대
          + 책이 흥미로워 보이지만, 현대 CPU와 GPU 최적화, 빠른 동시성 GC를 가진 현대 VM 설계 및 작성에 대해 논의하는 The Dragon Book의 후속작을 기다림.
     * 실용적인 컴파일러 구축에 대한 추천
          + ""Practical Compiler Construction 2nd Ed.""의 실제 책을 소유하고 있으며, 관심 있는 사람들에게 추천함.
     * 책의 내용에 대한 일관성 개선 제안
          + 무료 챕터를 읽고, 초보자에게 어려울 수 있는 부분을 발견함.
          + 언어의 문법 같은 기본 개념 설명 후 바로 고급 주제로 넘어가는데, 이로 인해 일관성이 부족하다고 느낌.
          + 다음 작품에서는 이러한 점을 개선할 것을 제안함.
     * 새로운 프로그래밍 언어 T3X 학습 필요성에 대한 우려
          + 책이 흥미롭지만, 독자가 CP/M 시스템에서 처음부터 컴파일러를 작성하고 개발하기 위해 T3X라는 새로운 프로그래밍 언어를 배워야 함.
     * CP/M과 같은 OS 작성에 대한 책에 대한 관심
          + CP/M과 같은 운영체제를 직접 작성하는 방법에 대한 책에 대한 관심 표명.
     * 레트로 컴퓨팅에 대한 집중 이유에 대한 질문
          + 레트로 컴퓨팅에 집중하는 이유에 대한 궁금증.
          + 레트로 타겟이 더 단순하고 이해하기 쉬워서 층을 쌓아가며 배울 수 있는지, 아니면 저자가 레트로 분야에 더 익숙해서 더 나은 책을 쓸 수 있는지에 대한 의문 제기.
"
"https://news.hada.io/topic?id=12224","매직 더 개더링 드래프트에서 미스트랄 7B의 세밀한 조정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    매직 더 개더링 드래프트에서 미스트랄 7B의 세밀한 조정

요약: 인공지능의 미세조정 기술 탐구

     * 미세조정 기술의 효과와 난이도
          + 미세조정은 GPT-4의 기능을 보완하고 속도 및 비용 효율성을 약속함.
          + 실제로 미세조정이 얼마나 효과적이고 어려운지에 대한 정보 부족을 해결하기 위해 직접 실험 진행.

문제 선택

     * Magic the Gathering (MTG) 드래프트를 통한 모델의 추론 능력 테스트
          + MTG는 전략적 카드 게임으로, 드래프트는 무작위 카드 풀에서 카드를 선택하여 덱을 구성하는 방식.
          + 드래프트는 추론과 새로운 데이터에 대한 이해가 필요한 복잡한 작업으로 적합함.
          + 17lands라는 서비스에서 제공하는 대규모 역사적 데이터를 활용하여 최고의 플레이어들의 드래프트 선택을 ""ground truth""로 사용.

결과 및 요약

     * 미세조정된 7B 모델의 성능
          + 미세조정된 7B 모델이 GPT-4를 능가하고 인간 수준에 근접한 성능을 보임.
          + GPT-3.5를 미세조정하는 것이 더 나은 결과를 보일 수 있으나, 비용이 매우 높음.
          + 미세조정은 여전히 실험적인 과정이며, 특히 프롬프트 엔지니어링이 시간이 많이 소요됨.
          + 새로운 카드 세트에 대한 미세조정 후, 보이지 않는 카드 세트에서도 일반화 능력을 보임.

현장 보고: 방법과 학습 과정

     * 데이터 구축
          + 17lands의 CSV 파일 형식 데이터를 텍스트 형식으로 변환하여 미세조정에 적합하게 함.
          + 데이터 포맷팅은 도전적이며 실험적인 과정임.
     * 미세조정 실행
          + GPU 접근성 문제로 Runpod에서 시간당 GPU를 대여함.
          + axolotl을 사용하여 미세조정 최적화를 쉽게 구현함.
     * 평가
          + 실험 시작 전에 평가 기준을 마련하는 것이 중요함.
          + 언어 모델에 대한 평가 기준 설정이 어려울 수 있음.

주요 교훈

     * 미세조정의 효과
          + 새로운 데이터에 대한 미세조정은 GPT-4보다 정확도와 비용 측면에서 뛰어남.
          + 미세조정은 올바르게 수행하는 데 실험적인 과정이 필요하며, 프롬프트 엔지니어링보다 배우기 어려운 특수 기술임.

Magic 관련 추가 정보

     * 미세조정된 AI 드래프트 봇의 성능
          + Magic Arena 로그에 연결된 드래프트 모델을 사용하여 드래프트 보조 앱을 개발함.
          + 미세조정된 모델이 선택을 생성하지만, GPT-4가 설명을 제공함.
          + 여러 AI 드래프트 봇을 시뮬레이션하여 인간 드래프터와 유사한 성능을 보임.

GN⁺의 의견

   이 글에서 가장 중요한 점은 미세조정 기술이 기존의 대형 언어 모델(GPT-4 등)의 성능을 능가할 수 있는 잠재력을 가지고 있으며, 이를 통해 특정 작업에 대한 인공지능의 이해도와 효율성을 크게 향상시킬 수 있다는 것이다. 이 글이 흥미로운 이유는 실제 적용 사례를 통해 미세조정의 구체적인 과정과 그 효과를 보여주기 때문이며, 이는 초급 소프트웨어 엔지니어들에게도 인공지능 기술의 발전 가능성과 그 적용 방법을 이해하는 데 도움이 될 것이다.

        Hacker News 의견

     * LLM의 미세 조정에서 단순한 개념조차 어렵게 실현될 수 있음을 보여주는 점이 인상적임. 양질의 초기 데이터셋과 모델을 가지고도 이는 도전적인 과제였음.
     * LLM이 자연스러운 정답이 없는 문제에 적합하다는 생각이 들었음. 완벽한 카드를 선택하는 것은 계산상 불가능하지만, 좋은 카드를 선택하는 것은 가능하며 LLM이 인간 수준의 성능에 근접할 수 있음.
     * LLM을 미세 조정하여 해결할 수 있는 문제 집합이 존재할 것으로 보임. 일상생활에 혁명적인 변화는 아니지만, Magic: the Gathering과 같은 게임에서 흥미로운 플레이 스타일을 가진 봇과 대결하는 것을 기대함.
     * 최고의 플레이어들의 드래프트 선택을 분석하여 ""진실된 데이터""를 추출하는 방법에 대한 의문 제기. 승률로 정렬된 데이터는 최고의 플레이어가 아닌 가장 운이 좋은 플레이어를 반영할 수 있음.
     * LLM이 규칙 지식을 어느 정도 가질 수 있지만, 카드의 희귀성, 비용 등을 주로 고려할 가능성이 높음. 드래프트의 ""정확성""에 대한 의문 제기.
     * LLM의 손실을 0으로 만드는 대신, Axolotl을 사용하여 가중치가 있는 손실을 사용해보는 것이 도움이 될 수 있음. 도메인 적응이 미세 조정에 도움이 될 수 있음.
     * 에이전트에게 주어진 프롬프트가 카드의 이름만 포함하고 있으며, 이전 선택과의 맥락을 유지하지 않는 것으로 보임. 이는 봇이 좋은 드래프트를 하는 것이 순전히 우연일 수 있음을 시사함.
     * Magic the Gathering: Arena를 해킹하여 100% 승률을 달성한 사례에 대한 링크 공유. 이는 MTGA의 Sparky라는 가상 AI가 복잡하지 않을 수 있음을 시사함.
     * Magic: The Gathering을 위한 LLM 미세 조정에 대한 관심 표현. 카드 유사성 브라우저를 구축 중이며, InstructorXL을 사용하여 여러 프롬프트를 시도했지만 아직 만족스러운 결과를 얻지 못함. 이 게시물이 영감을 주었음.
     * 각 카드를 토큰으로 취급하고 드래프트 상태를 입력으로 사용하여 선택할 카드를 예측하는 작은 모델을 사용할 수 있는지에 대한 궁금증.
     * Mistral을 시작점으로 사용하지 않고 신경망을 훈련하여 드래프트를 수행하는 것과 비교하는 것이 흥미로울 것임. LLM 구성 요소가 왜 중요한지 명확하지 않음.
     * 드래프트를 LLM으로 표현할 수 있다는 것이 매우 흥미로움. 최고의 드래프트 AI는 어떤 형태로든 표현 학습을 활용함.
"
"https://news.hada.io/topic?id=12258","FDA, CRISPR 기반 빈혈증 치료제 승인기반 빈혈증 치료제 승인

CRISPR 기반 치료제 FDA 승인

     * FDA가 세계 최초로 CRISPR 유전자 편집 기술을 기반으로 한 치료제인 Casgevy를 승인함.
     * Casgevy는 Vertex Pharmaceuticals와 CRISPR Therapeutics에 의해 만들어졌으며, 만성적이고 수명을 단축시키는 혈액 질환인 지중해빈혈증에 대한 잠재적 치료법을 제공함.
     * 이 치료제는 DNA 돌연변이를 효율적이고 정확하게 수정하여 유전 질환에 대한 새로운 유전자 의약품 시대를 열었음.

임상 시험 및 승인 과정

     * Casgevy는 미국 내 약 10만 명의 환자에게 영향을 미치는 지중해빈혈증으로 인한 반복적인 통증 발작을 제거하는 것으로 나타남.
     * Casgevy의 과학적 명칭인 exa-cel은 CRISPR에 의해 가능해진 유전적 수정이 평생 지속될 것으로 설계되었으나, 확인을 위해서는 수년간의 추적 관찰이 필요함.
     * FDA의 결정은 영국 규제 기관이 약물을 처음으로 승인한 지 3주 후에 나왔으며, 유럽 연합에서는 내년에 승인이 예상됨.

치료제의 가격과 접근성

     * Casgevy의 가격은 220만 달러로 설정되었으며, Bluebird Bio의 다른 지중해빈혈증 치료제인 Lyfgenia는 310만 달러로 책정됨.
     * 이 치료법들은 병원에서 수주에서 수개월 동안 치료를 받아야 하며, 준비 단계에서 심각한 부작용을 일으킬 수 있음.
     * Casgevy와 Lyfgenia의 널리 사용되는 치료법으로 자리 잡을지 여부는 여전히 불확실함.

Casgevy의 작동 원리

     * Casgevy는 환자 자신의 혈액 줄기세포를 편집하여 태아 헤모글로빈의 높은 수준을 생산하도록 함.
     * 태아 헤모글로빈은 정상적인 산소 운반 형태로, 태아 발달 중에 생성되지만 출생 후 곧 중단됨.
     * Casgevy는 CRISPR-Cas9 효소를 사용하여 BCL11A 유전자의 특정 부위에서 절단을 만들어 태아 헤모글로빈의 생산을 방해하는 DNA 브레이크를 비활성화함.

Casgevy의 임상 시험 결과

     * Casgevy의 승인을 지원하는 Vertex와 CRISPR Therapeutics의 임상 시험에는 12세에서 35세 사이의 30명의 지중해빈혈증 환자가 참여함.
     * 치료 후 3개월 이내에 모든 참가자들이 보호 수준의 태아 헤모글로빈을 생산하기 시작함.
     * 참가자 중 28명이 평균 22개월 동안 통증 발작 없이 지냄.

GN⁺의 의견

   이 기사에서 가장 중요한 것은 CRISPR 기술을 기반으로 한 첫 번째 치료제인 Casgevy가 FDA의 승인을 받았다는 점이다. 이는 유전자 편집 기술이 실제로 환자들에게 잠재적인 치료법을 제공할 수 있음을 보여주는 역사적인 순간이다. 지중해빈혈증과 같은 유전 질환을 가진 사람들에게 새로운 희망을 제공하며, 이 기술이 의학 분야에서 얼마나 빠르게 발전하고 있는지를 보여준다. 이러한 진보는 유전 질환 치료에 대한 새로운 패러다임을 제시하며, 많은 사람들에게 흥미로운 뉴스가 될 것이다.

        Hacker News 의견

     * Dave Friedberg이 CEO로 있는 Ohalo라는 회사가 CRISPR로 편집한 감자에 대한 승인을 받음
          + 하나의 감자는 베타카로틴 농도를 높여 영양가를 향상시키는 것에 초점을 맞추고, 다른 하나는 감자의 포도당과 과당 함량을 줄여 차가운 저장 중에 발생하는 부패를 줄일 수 있음
     * Lyfgenia의 승인은 치료를 받은 환자들이 후에 혈액암을 발병할 가능성에 대한 경고를 포함함
          + 치료를 받은 두 환자가 혈액암으로 사망했으나, 암은 Lyfgenia가 아닌 치료를 위한 화학요법 때문에 발생한 것으로 결론
     * 낫세포빈혈증을 유발하는 유전자는 말라리아에 대한 부분적 면역을 제공하기 때문에 시간이 지나도 인구에서 제거되지 않음
     * 최근 인공지능(AI) 관련 콘텐츠가 많으며, 의료 분야의 변화에 가장 큰 기대를 함
          + 모든 질병을 치료하고, 사람들이 원한다면 디자이너 바디를 가질 수 있게 될 것
     * 이웃에 낫세포빈혈증을 앓고 있는 성인 자녀가 두 명 있으며, 그들의 고통스러운 삶을 지켜보는 것은 매우 힘듦
          + 자주 발생하는 응급차 방문과 병원에서의 장기 입원, 일상생활에서의 많은 고통을 겪음
          + 딸은 합병증으로 인해 법적으로 실명 상태이며, 아들은 직장을 유지하려고 노력했지만 결국 할 수 없었음
     * CRISPR을 이용한 유전자 수정 과정 설명
          + 환자로부터 줄기세포를 채취
          + Cas9 유전자, 원하는 유전적 수정을 위한 가이드 RNA, 항생제 저항성 유전자가 포함된 DNA 플라스미드 준비
          + 플라스미드를 채취한 줄기세포에 전기천공법으로 주입
          + 항생제가 포함된 영양 배지에서 전기천공된 줄기세포를 성장시킴
          + 유전적으로 수정된 세포를 확장하고 동결
          + 화학요법을 통해 결함이 있는 골수 줄기세포를 제거
          + 수정된 줄기세포를 환자에게 주입하여 골수를 CRISPR 수정으로 재구성하여 유전적 돌연변이를 교정함
     * CRISPR에 대한 문이 열림으로써 역사적인 순간임
     * Casgevy의 가격이 220만 달러로 책정됨
          + 환자들은 치료 전후로 몇 주에서 몇 달 동안 병원에 머물러야 함
     * FDA가 낫세포빈혈증을 치료할 수 있는 첫 CRISPR 유전자 편집 치료를 고려 중임
     * 이 치료법의 작동 메커니즘은 태아 헤모글로빈의 생산을 증가시키는 것으로, 태아 헤모글로빈은 낫세포 돌연변이의 영향을 받지 않음
          + 모든 살아 있는 사람(태아 제외)은 이 태아 헤모글로빈 유전자의 정상 복제본을 가지고 있으며, 이를 재활성화하기만 하면 됨
"
"https://news.hada.io/topic?id=12266","OpenBao – HashiCorp Vault의 오픈소스 포크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   OpenBao – HashiCorp Vault의 오픈소스 포크

     * 시크릿, 인증서, 키를 포함한 민감한 데이터를 관리/저장/배포하는 솔루션
     * 개방형 거버넌스 원칙에 따라 OSI가 승인한 오픈소스 라이선스에 따라 제공할 계획

주요 기능

     * 안전한 시크릿 저장소: 임의의 키/밸류를 저장. 저장전에 암호화하므로 원시데이터 접근 권한만으로는 시크릿 접근 불가. 디스크 및 Consul 등에 쓰기 가능
     * 동적 시크릿: AWS 및 SQL DB를 위한 온디맨드 시크릿 생성 지원. 요청시에 유효한 권한이 있는 키쌍을 생성하고 임대 기간이 만료되면 자동으로 해지
     * 데이터 암호화: 데이터를 저장하지 않고도 암호화 및 복호화 지원. 보안팀은 암호화 매개변수를 정의 가능하며, 개발자는 자체 암호화 방법을 설계할 필요없이 SQL DB 등에 암호화된 데이터를 저장 가능
     * 임대 및 갱신: 모든 시크릿에는 임대 기간이 있음. 임대가 종료되면 자동으로 시크릿을 해지. 내장된 갱신 API로 임대 갱신 가능
     * 해지: 시크릿 해지 기능을 기본적으로 지원. 단일 시크릿 뿐만 아니라 시크릿 트리(특정 사용자가 읽은 모든 시크릿 또는 특정 유형의 모든 시크릿등)도 해지 가능. 키 롤링 및 침입시 시스템 잠금을 지원

   관련된 뉴스 Open source forkers stick an OpenBao in the oven
     * HashiCorp가 Terraform 소프트웨어에 대한 경쟁 제한 라이센스를 도입한 것에 대한 반발로, Linux Foundation이 HashiCorp의 비밀 관리 프로젝트인 Vault에 대한 오픈 소스 대안을 지원하려는 움직임이 확대됨
     * Tokyo의 Open Source Summit에서 Sebastian Stadil(Scalr의 공동 창립자 겸 CEO 이자 Terraform의 포크인 OpenTofu 프로젝트의 오거나이저)이 OpenBao 에 대해 발표함
     * OpenBao는 Vault의 포크로, 개발자들이 비밀번호, 토큰, 인증서, API 키 등을 관리하는 데 도움을 줌
     * HashiCorp는 Vault 및 다른 소프트웨어들을 비즈니스 소스 라이센스로 전환했으며, 이로 인해 경쟁 클라우드 회사들은 이 소프트웨어를 경쟁 제품으로 제공하는 것이 금지됨. 이에 대한 반응으로 경쟁업체들은 Vault 코드를 Mozilla PLv2라는 OSI-준수 라이센스로 포크함
     * OpenBao 프로젝트는 Linux Foundation에 의해 주도되고 있으며, IBM 개발자들이 LF Edge를 통해 이를 이끌고 있음. 이 프로젝트는 아직 IBM에 의해 공식적으로 승인되지 않았으며, Linux Foundation의 인정을 받기 위해서는 지속 가능성을 입증하는 특정 기준을 충족해야 함
     * HashiCorp가 Terraform의 라이선스를 변경한 이유에 대해 아마도 HashiCorp가 현금을 소모하고 있으며, 이자율이 상승함에 따라 수익을 창출하기 위한 조치를 취할 것이라고 언급함
     * HashiCorp는 2024년 제3분기에 1억 4610만 달러의 수익을 보고했으며, 이는 전년 대비 17% 증가한 수치임

        Hacker News 의견

     * 최근 관련 소식: HashiCorp Vault가 OpenBAO로 포크됨
          + 2023년 12월, 해커뉴스에 게시된 OpenBAO에 대한 논의가 활발함. 아직 초기 단계이며 사용 가능한 상태는 아니지만, 기여할 기회가 많음.
          + 기여를 원한다면 Matrix 채팅방에 참여하거나 메일링 리스트에 가입할 수 있음.
     * HashiCorp Vault 유료 버전 사용자 의견
          + 온프레미스 HSM과의 연동 및 FIPS 준수를 위해 Vault 사용 중. HSM과 함께 사용하기에 Vault만큼 가볍고 쉬운 소프트웨어를 모름. 중간 CA 서명 저장 및 HSM에 샤드 저장을 통한 Vault 자동 언실링 사용 중. OpenBAO는 이러한 요구사항을 충족시키지 못함.
     * Nomad 포크에 대한 기대감 표현
     * 비밀 관리 도구에 대한 개발자 간 '성전' 우려
          + 비밀번호 및 자격증명을 관리하는 도구의 불안정성에 대한 우려. YAML 파일 내 이름을 지속적으로 업데이트하는 번거로움부터, 악의적인 개발자가 보안 취약점을 의도적으로 추가할 수 있다는 높은 수준의 걱정까지 있음. 이러한 문제가 발생하지 않을 것이라는 보장이 있는지 질문.
     * OpenBAO 개발 관련 링크 제공
     * Open Source 포크에 대한 감사와 함께 Vault 및 Consul 사용에 대한 회피 의사 표현
          + 이러한 소프트웨어가 최근 몇 년간 사용자의 일을 더 어렵게 만들었다고 느낌.
     * OpenBAO 보안 및 사용자 신뢰 중요성 강조
          + Vault에서 발견된 보안 문제를 책임감 있게 공개하도록 요청하는 안내 문구에서 'Vault'를 'OpenBAO'로 변경해야 한다는 지적.
"
"https://news.hada.io/topic?id=12289","Critique - 구글이 개발자 만족도 97%로 코드 리뷰의 고통을 덜어주는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Critique - 구글이 개발자 만족도 97%로 코드 리뷰의 고통을 덜어주는 방법

     * 많은 ex-구글러들이 그리워하는 구글의 코드 리뷰 도구 ""Critique""
     * 구글 내부에서 조사한 결과 개발자 97%가 Critique에 만족한다고 함

구글의 코드 리뷰 가이드 라인

     * 완벽함보다는 지속적인 개선을 권장
     * 코드베이스의 상태 유지 또는 개선
     * 스타일 가이드를 따르기
     * 항상 지식을 공유하기: 코드 리뷰를 통해 언어 기능, 코드베이스 및 기타 관련 아티팩트에 대한 지식 공유 권장
     * 변경 사항을 작게 작성하기(약 200줄 정도)
     * 경량화에 대한 엄격한 기준(24시간 이내에 코드 변경 사항을 검토, 가급적 한 명의 검토자)
     * 정중함과 전문성: 신뢰와 존중의 문화를 유지하는 것이 중요

Critique: 구글의 코드 리뷰 도구

     * 엔지니어가 코드 변경 사항을 효율적으로 검토하고 제출 가능
     * 최근 논문 - Resolving code review comments with ML에 의하면 포괄적인 AI 기반 코드 리뷰 도구를 사용중
          + 리뷰어가 코드에 코멘트를 남기면 Critique에서 ML 기반 편집 제안을 표시
          + 코드 리뷰 작성자는 버튼 하나만 클릭하면 해당 코멘트를 전체적으로 수정할 수 있음

  코드 리뷰 흐름

     * 단계 1: 변경 작성
          + CL(또는 Pull Request)는 구글의 내부 코드 편집기 Cider 에서 작성됨
          + Critique 및 기타 사내 Google 도구와 긴밀하게 통합되어 개발자 생산성을 높여줌
          + Prereview 도구: 검토 전에 변경 사항을 다듬고, 차이점, 빌드 및 테스트 결과, 스타일 확인을 표시
          + Diff 보기 및 시각화: 구문 강조 표시, 상호 참조, 인트라라인 Diffing, 공백 무시, 이동 감지 기능
          + 정적 분석기의 결과를 표시하여 중요한 결과를 강조하고 수정 제안을 제공. Critique 내에서 실행되는 자동화 테스트인 ""presubmits"" 를 포함
     * 단계 2: 리뷰 요청
          + 풀 리퀘스트를 검토할 준비가 되면 코드 작성자는 검토자를 추가하고 공식적으로 검토를 위해 전송
          + 검토를 위해 PR/CL이 전송되면 현재 코드 스냅샷에 아직 없는 경우 ""Presubmits""가 실행됨. 즉, 검토에 참여하는 모든 사람이 코드에 문제가 있는지 여부를 알 수 있음
          + 코드 리뷰를 익명화하여 코드 작성자를 검토자로부터 익명으로 유지할 수도 있음. 하지만 Google은 익명 코드 리뷰와 '실제' 코드 리뷰 간에 유용한 차이를 발견하지 못했음
     * 단계 3과 4: 변경 사항을 이해하고 댓글 달기
          + 누구나 변경 사항에 댓글을 달 수 있으며, 검토 진행 상황을 추적하고 댓글을 해결할 수 있는 기능을 제공
          + 해결되지 않은 댓글은 변경 사항 작성자가 확실히 해결해야 할 작업 항목을 나타냄. 이러한 코멘트는 코드 작성자가 직접 댓글에 답장할 때 '해결됨'으로 표시 가능
          + 해결된 댓글에는 변경 작성자의 조치가 필요하지 않을 수 있는 선택 사항 또는 정보 제공 댓글이 포함
          + 검토 상태를 확인할 수 있는 대시보드와 특정 코드 검토에 참여한 사람들이 현재 대기 중인 사람이 누구인지 알 수 있는 ""Attention Set""이 있음
     * 단계 5: 변경 승인
          + 위에서 언급했듯이 리뷰가 등록되려면 적어도 한 명의 리뷰어로부터 LGTM(Looks Good To Me)을 받아야 함
          + 코드 작성자가 댓글을 달 때 직접 해결된 댓글로 표시할 수는 있지만 해결되지 않은 댓글이 0개여야 함
          + 또한 코드가 들어가는 코드베이스 부분의 소유자의 승인과 가독성 승인이 필요
          + 이 모든 작업은 한 명의 리뷰어가 수행할 수 있음
     * 단계 6: 변경 사항 커밋하기
          + Critique 자체 내에서 변경 내용을 제출하고 커밋
          + Critique은 변경 사항이 제출된 후에도 유용함
          +

     ""Google 연구원들은 Critique의 용도가 코드 검토 이상으로 확장된다는 강력한 증거를 발견했음. 변경 사항 작성자는 Critique을 사용하여 Diff를 검토하고 분석 도구 결과를 찾아봄. 경우에 따라 코드 검토는 변경 사항 개발 프로세스의 일부로, 검토자는 구현을 완료하는 방법을 결정하기 위해 미완성 변경 사항을 보낼 수 있음. 또한 개발자는 변경 사항이 승인된 후에도 제출된 변경 사항의 이력을 검토하기 위해 Critique을 사용함.""

Google의 최신 코드 리뷰 통계

     * 변경 작성 빈도:
          + 중앙값: 주당 3번 변경
          + 80%의 작성자가 매주 7건 미만으로 변경
     * 리뷰 빈도:
          + 중앙값: 주당 4건의 변경 내용을 리뷰
          + 검토자의 80%는 매주 10개 미만의 변경사항을 처리
     * 주당 리뷰에 소요되는 시간:
          + 평균 주당 3.2시간
          + 중앙값 주당 2.6시간
     * 초기 피드백 대기 시간:
          + 작은 변경: 평균 시간 1시간 미만
          + 매우 큰 변경: 약 5시간
     * 전체 리뷰 프로세스 시간:
          + 모든 코드 크기의 평균 지연 시간: 4시간 미만
          + 다른 회사와의 비교:
               o AMD: 17.5시간(승인까지 걸리는 시간 중앙값)
               o Chrome OS: 15.7시간
               o Microsoft 프로젝트: 14.7시간, 19.8시간, 18.9시간
               o Microsoft(다른 연구): 24시간

왜 Critique을 구글러들이 사랑할까?

     * 정적 분석: 코드에 대한 실행 가능한 피드백을 자동으로 제공하는 모든 기능을 갖춘 정적 분석 도구 제품군을 보유. 이를 통해 코드 작성자와 검토자가 모두 시간을 절약할 수 있으며, 검토자는 뻔한 항목을 일일이 지적할 필요가 없음
     * 가장 최근에 변경된 파일에만 집중: 코드의 최신 '스냅샷'에만 집중할 수 있음. 이전 스냅샷, 커밋 및 코드 변경 사항은 표시되지 않으므로 사용자 인터페이스가 더 깔끔
     * 친숙한 Side-by-Side Diff 인터페이스: 기본적으로 ""마지막 리뷰와의 차이점""이 표시
     * 머신러닝 기반 제안: Google의 새로운 ML 기반 제안 기능으로 코드 리뷰 속도가 엄청나게 빨라짐
     * 다른 Google 도구와의 긴밀한 통합: Critique은 Google의 IDE 및 버그 트래커와 같은 기타 내부 도구와 매우 잘 통합되어, 생산성이 향상됨. 여기에는 코드, 댓글, 티켓의 손쉬운 연결이 포함
     * '작업 세트' 추적: 누가 다음 작업을 수행해야 하는지 알 수 있음
     * 만족스러운 게임화: Critique이 게임화되도록 설계된 것은 아니지만, 구글러들은 Critique이 '녹색으로 전환'되어 PR을 제출할 준비가 되었을 때(모든 테스트 통과, 검토자 LGTM 승인) 즐거웠다고 얘기함
     * 레딧에 달렸던 코멘트 들
          + 수많은 코드를 매우 효율적으로 검토할 수 있는 놀라운 키보드 단축키
          + 기본적으로 ""마지막 리뷰와 다름""을 표시
          + ""코드 이동 감지"" 기능이 있어서 코드의 변경 사항에 집중할 수 있음
          + 리뷰어든 작성자이든 누가 조치를 취해야 하는지 알려주는 놀라운 기능을 제공
          + 크롬 확장 프로그램과 함께 사용하면 알림을 쉽게 받고 리뷰 대기열을 확인할 수 있음
          + 내부적으로 누구나 코드 리뷰 데이터에 대해 쿼리를 실행하여 인사이트를 수집할 수 있음
          + 코드와 댓글의 자동 연결(티켓 및 이동/링크 포함)
          + 여러 라운드의 코드가 포함된 PR의 진행 상황을 훨씬 쉽게 이해할 수 있도록 PR의 분석 및 내역과 코멘트를 표 형식으로 볼 수 있음
          + 선택 사항, 참고 사항 등 댓글의 용어/태그가 매우 일관적

생각과 시사점

     * 이러한 기능 중 상당수는 오늘날 다른 도구에서도 사용할 수 있지만, 이 도구가 사랑받는 이유는 Google 고유의 워크플로와 코드베이스에 대한 도구의 긴밀한 통합과 극도의 '개인화' 덕분이라고 생각
     * 동시에 모든 회사가 Critique 및 관련 도구를 정확히 복제하는 것은 현실적으로 불가능하다는 뜻이기도 함. 예를 들어, 일부 도구는 모노레포 구조로 인해 발생하는 문제에 특화되어 있음
     * Critique 자체가 오픈소스로 제공되지는 않겠지만, Gerrit는 Critique과 유사한 도구. 이 역시 Google에서 만들고 유지 관리하는 오픈 소스 코드 검토 도구
     * 하지만 구글은 개발자의 생산성을 위해 많은 노력과 고민을 하고 있다고 생각. 그들은 자신의 연구를 자유롭게 게시하며, 그들의 작업에서 유용한 시사점을 얻을 수 있음

   Gerrit 에 ChatGPT 를 붙이려는 시도는 있긴 하네요
   https://github.com/xielong/chatgpt-code-review-gerrit-plugin

   가장 크게 느껴지는 점은 Critique 에서는 일련의 연속된 CL 을 리뷰할 수 있다는 점이네요. GitHub 에서는 PR 체인을 직접적으로 지원하지 않는게 불편하구요. 그래서 하나의 큰 PR이 되거나 이전 PR이 머지 될때까지 기다려야 하구요.

   GitHub도 비슷한 게 있는데 언제 오픈할지

     https://githubnext.com/projects/copilot-for-pull-requests

   정적 분석과 ml 기반 제안은 없지만 글을 보니 github 리뷰 기능과 많이 흡사하네요. github 리뷰를 많이 쓰는 입장에서 critique에서 제공하는 다른 기능도 더 도입되면 좋겠네요.

   구글의 코드리뷰 가이드 [한글 번역]
"
"https://news.hada.io/topic?id=12268","C#으로 제작된 픽셀 아트 ECS 게임 엔진 'Murder'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   C#으로 제작된 픽셀 아트 ECS 게임 엔진 'Murder'

Murder Engine 소개

     * Murder Engine은 MonoGame 위에 구축된 픽셀 아트 ECS 게임 엔진의 소스를 제공함.
     * 개발 중인 엔진으로, 많은 변경과 불완전한 부분이 있을 수 있으며, 안정적인 릴리스를 위해 노력하지만 완벽하지 않음을 경고함.

엔진 구축 방법

     * 게임 잼 프로젝트나 Hello World 프로젝트를 시작으로, 예제를 통해 Murder 아키텍처를 이해하고 ECS의 세계, 엔티티, 컴포넌트 생성 방법을 배울 것을 권장함.
     * 아키텍처는 루트, 리소스, 소스, 게임, 게임 에디터 등의 구조로 되어 있으며, 외부 에디터가 없어 프로젝트에 대한 완전한 통제가 가능함.
     * 에디터는 별도의 프로젝트로, 게임 코드와 분리되어 있어 에디터 측에서 원하는 작업을 자유롭게 할 수 있음.
     * Murder를 위한 nuget 패키지는 아직 없으며, .csproj에서 git 서브모듈을 참조하는 방식을 권장함.
     * ECS가 엔진에 어떻게 적용되는지 알고 싶다면 Murder가 사용하는 Bang 프레임워크 문서를 참조할 것을 추천함.

요구 사항

     * Linux, MacOS, Windows, SteamDeck에서 에디터를 실행할 수 있으며, .NET 8 SDK가 설치되어 있어야 함.
     * 게임은 이러한 아키텍처로 배포됨.
     * 콘솔 지원은 아직 진행 중임.

기여하기

     * 아직 초기 단계이지만, 제안이나 피드백이 있다면 연락을 환영함.

✨ 에디터 예제

GN⁺의 의견

     * Murder Engine은 개발 중인 픽셀 아트 ECS 게임 엔진으로, MonoGame을 기반으로 하고 있음이 중요함.
     * 이 엔진은 개발자가 완전한 통제를 할 수 있도록 설계되었으며, 다양한 플랫폼을 지원함.
     * 이 글은 소프트웨어 개발에 관심 있는 사람들에게 흥미로울 수 있으며, 새로운 게임 엔진의 개발 과정과 참여 기회를 제공하기 때문에 매력적임.
"
"https://news.hada.io/topic?id=12317","Apple, iPhone 15 Pro에 공간 동영상 촬영 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Apple, iPhone 15 Pro에 공간 동영상 촬영 도입

     * 오늘 iOS 17.2 출시와 함께 공간 동영상(Spatial Video) 촬영이 가능해짐
     * 촬영된 영상은 내년 출시될 Apple Vision Pro에서 감상 가능
     * 메인 카메라와 울트라 와이드 카메라 2개로 함께 동영상을 촬영후 울트라 와이드의 시야각을 메인에 맞춰서 3차원 동영상을 만들어냄
     * 1080p 30프레임 표준 다이내믹 레인지로 촬영됨
     * 하나의 파일로 저장되며, 아이폰 및 다른 기기에서는 일반 2D 영상처럼 보임

   17.2 업데이트 하고 설정-카메라-포맷 가서 ""Apple Vision Pro용 공간 비디오"" 를 활성화 시켜야 고글(비전 프로) 아이콘이 보이네요.
   공간 비디오 1분 촬영시 파일 크기가 약 130MB 이고, 촬영시 무조건 가로로만 찍어야 합니다.
"
"https://news.hada.io/topic?id=12263","버라이즌, 가짜 "수색 영장"에 속아 스토커에게 피해자의 휴대폰 데이터 제공","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               버라이즌, 가짜 ""수색 영장""에 속아 스토커에게 피해자의 휴대폰 데이터 제공

     * 버라이즌이 가짜 경찰과 수색 영장에 속아 피해자의 주소와 통화 기록을 스토커에게 제공함
     * 스토커인 로버트 마이클 글라우너는 피해자의 집 근처에서 체포되었으며, 당시 칼을 소지하고 있었음
     * 글라우너는 피해자와 온라인 로맨틱 관계를 맺었으나, 관계 종료 후에도 연락을 시도함

가짜 경찰, 위조된 판사 서명

     * 글라우너는 가짜 이메일과 수색 영장을 버라이즌 보안 지원 팀(VSAT)에 보내 버라이즌을 속임.
     * 버라이즌은 이메일이 프로톤 메일 주소에서 발송되었음에도 불구하고 요청이 사기인지 인지하지 못함
     * 수색 영장에는 존재하지 않는 경찰관의 이름과 위조된 판사 서명이 포함되어 있었음

버라이즌, 주소와 통화 기록 제공

     * 버라이즌은 가짜 문서를 검토한 후 피해자의 주소와 통화 기록을 글라우너에게 제공함.
     * 버라이즌 웹사이트에 따르면, VSAT는 법적 요구 사항을 비밀리에 처리하고 모든 적용 가능한 법률을 준수함
     * 버라이즌은 사건에 대해 법 집행 기관과 협력하고 있다고 밝힘

GN⁺의 의견

   이 기사에서 가장 중요한 점은 버라이즌이 가짜 경찰과 수색 영장에 속아 피해자의 개인 정보를 제공한 사건에 대한 것임. 이러한 사건은 개인 정보 보호와 기업의 법적 요청 처리 시스템의 취약점을 드러내며, 이는 많은 사람들에게 흥미로운 주제가 될 수 있음. 특히, 사이버 보안과 개인 정보 보호에 관심이 있는 사람들에게 이 사건은 중요한 학습 사례로 작용할 수 있음.

        Hacker News 의견

     * 법원 명령을 위조하는 것은 매우 쉬움
          + 미국 내 1700개 이상의 카운티에서 사용하는 특정 양식을 베라이존이나 다른 기업이 알 방법이 없음
          + 연방 소환장은 통일되어 있고 비공개로 파일링되어 있어서 더 쉬움
          + 베라이존은 서기실에 전화해서 소환장 발부 여부를 확인할 수 없음
          + 문서는 간단한 복사용지에 인쇄되어 있고 보안 기능이 없음
          + 소액 청구 소송을 제기하여 소환장을 발급받는 것도 쉬움
          + 민사 소환장은 형사 소환장보다 시간이 조금 더 걸리고 서비스 비용을 지불해야 하지만 문제될 것 없음
     * 베라이존 대변인은 이 사건에 대해 법 집행 기관과 협력하고 있다고 밝힘
     * 소규모 커뮤니티 ISP에서 아르바이트하는 한 사람은 법적 시스템과 두 번 접촉함
          + 처음 요청을 받았을 때 진위 여부를 어떻게 확인해야 할지 고민함
          + 절차는 영장의 모든 연락처 정보를 버리고, 신뢰할 수 있는 출처(공식 주 웹페이지)에서 새로운 연락처를 찾아 확인하는 것으로 정함
          + 베라이존도 이 절차를 채택했다면 이번 사건을 잡아낼 수 있었을 것임
     * TV 프로그램 '미스터 로봇'에서 비슷한 사례가 묘사됨
          + 주인공이 휴대폰 번호로 특정 인물을 찾아내기 위해 NYPD 팩스 라인을 가장하거나 가로채고, 통신사로부터 데이터를 얻기 위해 NYPD가 사용하는 문서를 위조함
          + 위조된 팩스를 보내고 응답을 기다림
          + 공공 와이파이를 사용하여 익명성을 유지하고 NYPD 팩스 번호를 위조하여 더 정통해 보이게 함
     * 판사가 서명한 명령의 유효성을 확인하는 주된 방법이 쉽게 위조될 수 있는 서명을 보는 것임
     * 이메일에는 'Proton Mail 보안 이메일로 보냄'이라는 프로톤 메일 기본 서명이 포함되어 있음
          + '발신' 필드에서는 눈치채지 못할 수도 있지만, 이것이 어떻게 경고 신호를 일으키지 않을 수 있는지 의문
          + 경찰이 개인 계정을 사용하여 이러한 일을 처리하는 것이 일상적일 수도 있음
     * 이러한 문서가 위조되는 것은 매우 흔함
          + 긴급성(생명과 죽음의 문제), 미처리 시 법적 책임이나 공개 시 벌금에 대한 언급과 결합됨
          + 변호사는 이제 어떻게 대처해야 할지 결정해야 함
          + 이러한 사건들은 빙산의 일각에 불과함
          + 문서를 위조하고 보내는 데 드는 비용이 거의 없기 때문에 인터넷 시대에는 이러한 영장 처리 방식이 전혀 적합하지 않음
          + 충분한 경찰서가 해킹당해 현실적인 템플릿을 얻고 때로는 직접 이메일 접근까지 가능함
          + 공격자에게 유리하게 비용/이익/위험 관계가 변화함
     * 원래 이야기의 미친 점을 제외하고, 햄스터닷컴이라는 포르노 웹사이트의 데이팅 기능을 통해 만난 사건에 대해 놀람
          + 포르노 사이트의 데이팅 기능이 사기나 피싱 시도가 아니라는 것을 몰랐음
     * 베라이존과 같은 대기업에는 법 집행 요청에 응답하기 위한 특정 절차가 있어야 함
     * 이메일은 PGP로 서명되어야 할 것 같음
     * 어머니의 재산을 정리할 때, 서명을 검증할 수 없는 두 장의 간단한 문서(사망증명서와 상속증명서)를 위조하여 얼마나 큰 피해를 입힐 수 있는지 무서움을 느낌
          + 이메일로 스캔하거나 사진을 보내거나 전화로 친절하게 대화하는 것만으로 거의 모든 일을 처리할 수 있음
          + 은행 계좌를 폐쇄하는 것과 같은 몇 가지 작업은 개인의 출석과 신분증으로 인증이 필요함
          + 어떤 문서가 어떻게 생겼는지만 알면 세상이 발 아래에 있음
"
"https://news.hada.io/topic?id=12221","곰팡이 교육 과정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               곰팡이 교육 과정

곰팡이 교육 과정 소개

     * 곰팡이 예방 및 제거에 대한 개요를 제공하는 과정
     * 2001년 3월 EPA의 자발적 지침 문서인 '학교 및 상업 건물에서의 곰팡이 제거'를 기반으로 함
     * 공중 보건 및 환경 보건 전문가, 건물 관리자, 관리인, 제거업자, 계약자 및 곰팡이 문제에 대응하는 다른 전문가들이 관심을 가질 수 있음

과정 최적 설정

     * 화면 해상도가 1024x768 이상일 것
     * 브라우저에서 JavaScript가 활성화되어 있을 것
     * 팝업 차단기를 해제하고 접근성 문제가 있을 경우 연락 요망

과정 탐색 방법

     * 각 장의 페이지 상단 오른쪽에 있는 수직 메뉴 바를 사용하여 주요 요소 간 이동
     * 과정 장 사이 이동 및 추가 자원(과정 PDF 버전, 곰팡이 지식 테스트, 곰팡이 이미지 라이브러리) 접근 가능
     * 장 내에서는 페이지 상단의 메뉴를 사용하여 강의 간 이동

교육 학점 및 기타 교육적 사용

     * 일부 기관에서 이 과정을 보거나 공부하는 것에 대해 CEU(계속 교육 학점)를 제공할 수 있음
     * NEHA와 ACAC는 이 과정을 완료하면 각각 최대 4.5 CE 시간과 4 재인증 크레딧(RCs)을 승인함

GN⁺의 의견

   이 과정은 곰팡이 문제에 대응하는 다양한 전문가들에게 유용한 정보를 제공하며, EPA의 지침을 바탕으로 한 곰팡이 예방 및 제거에 대한 포괄적인 개요를 담고 있음. 과정은 온라인에서 접근 가능하며, 사용자들이 쉽게 탐색하고 추가 자원을 활용할 수 있도록 설계되었음. 또한, NEHA와 ACAC와 같은 기관들이 이 과정을 인정하여 교육 학점을 제공하는 것은 전문가들에게 지속적인 학습 기회를 제공하고 자격을 유지하는 데 도움이 될 수 있음. 이러한 점들은 곰팡이 관련 문제에 대한 이해를 높이고 싶은 사람들에게 매우 흥미롭고 유익한 자료가 될 것임.

        Hacker News 의견

     * 곰팡이 노출 경험
          + 허리케인 샌디로 인해 홍수 피해를 입은 아파트에 살았음.
          + 곰팡이 성장을 막기 위한 조치가 없어 걱정됨.
          + 이사 후 심각한 알레르기 증상과 기타 건강 문제 발생.
          + 이사 중 검은 곰팡이 발견, 사진 촬영 및 공기 품질 테스트 실시.
          + 혈액 검사로 곰팡이에 대한 면역 반응 확인, 곰팡이가 증상의 원인임을 확신.
          + 이사 후 거의 2년간 회복 기간 필요, 문서화로 인한 합의금 수령.
          + 새로운 집 이사 전에도 곰팡이 공기 테스트 실시 중요성 강조.
     * 글루텐 민감성과 곰팡이
          + 글루텐 민감성 증가가 실제로는 곡물에 있는 곰팡이에 대한 민감성일 수 있음.
          + 빵, 간장 등 섭취 후 코막힘과 두통 경험.
          + 알레르기 검사에서 글루텐에 대한 반응 없음.
          + 미국에서 허용되는 곡물의 곰팡이 오염 수준이 높음.
          + 미국 내 곡물 섭취 문제는 글루텐이 아닌 곰팡이 민감성일 가능성.
     * 집에서의 곰팡이 제거 경험
          + 집에서 곰팡이 제거 중, 다양한 증상 경험.
          + 침실과 공조 시스템에서 검은 곰팡이 발견.
          + 곰팡이 제거 후 증상 감소 목격.
     * 곰팡이에 대한 일반적인 정보
          + 실내 환경에서 곰팡이와 곰팡이 포자를 완전히 없애는 것은 불가능.
          + 곰팡이 성장을 제어하기 위해 습기 관리 필요.
          + 다양한 종류의 곰팡이 존재, 일부는 해롭지 않지만 일부는 건강 문제 유발.
          + 곰팡이 제거는 전문가에게 맡겨야 함, 직접 제거 시 공기 중으로 포자 확산 위험.
          + 과산화수소가 곰팡이 제거에 효과적임.
          + 보험사는 곰팡이 제거 비용 지불을 꺼림, 증거 기록 중요성 강조.
     * 곰팡이 제거 사기 경험
          + 곰팡이 제거 사기 피해자가 될 수 있음.
          + 곰팡이 제거 업체들이 다양한 방법으로 사기를 칠 수 있음.
          + 곰팡이 노출 증상에 대한 해결책으로 많은 비용 지출.
     * 곰팡이 관련 건강 문제에 대한 책 추천
          + 곰팡이 노출로 인한 복잡한 건강 문제를 다루는 책 ""Toxic"" 추천.
     * 곰팡이로 인한 가정 내 문제
          + 가족 구성원의 행동으로 인한 반복적인 홍수와 곰팡이 발생.
          + 가족이 문제 해결을 포기하고 집이 손상되고 건강 문제 발생 가능성.
     * 곰팡이 제거 제품 추천
          + 실내 홍수 경험 후 Decon 30 제품 추천.
          + 타임에서 추출한 티몰이 주성분으로 사용자 친화적.
     * 곰팡이 제거에 대한 간단한 가이드
          + 실내 곰팡이 성장은 습기 관리로 제어 가능.
          + 건물을 철거하지 않고도 건조함으로써 곰팡이 문제 해결 가능.
          + 공기질 문제는 모니터링 및 필터링으로 해결.
     * 곰팡이 링커에 대한 오해
          + 글의 주제가 소프트웨어 링커인 'mold'에 관한 것으로 오해할 수 있음.
"
"https://news.hada.io/topic?id=12325","무중단 Postgres 업그레이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           무중단 Postgres 업그레이드

Postgres 업그레이드를 위한 준비

     * 리스크 평가: 업그레이드 과정에서 발생할 수 있는 리스크 목록 작성 및 중요도에 따른 정렬.
     * 리스크 해결 방안 모색: 리스크를 완전히 제거하거나 시간에 걸쳐 분산시킬 수 있는 해결책 고려.
     * 리스크 목록 업데이트: 프로젝트 진행 중 새로운 리스크 발견 시 목록 갱신.

모니터링 및 메트릭스에 대하여

     * 시스템 모니터링: 데이터베이스와 시스템의 건강을 모니터링하기 위한 철저한 도구 사용.
     * 핵심 메트릭스 관찰: 트랜잭션 ID, CPU 사용량, 대기 세션, 쿼리 지연 시간, API 응답 지연 등 주요 메트릭스 모니터링.

Postgres 업그레이드 옵션

    현장 업그레이드 (제로 다운타임 업그레이드에는 부적합)

     * 현장 업그레이드의 한계: AWS RDS에서 실행 시 데이터베이스 재부팅 필요, 데이터 양에 따라 시간 소요.

    복제 기반 업그레이드

     * 복제 기반 업그레이드 선택: 점진적인 마이그레이션 단계, 실제 워크로드와 데이터로 새 데이터베이스 테스트, 업그레이드 제어력 확보.
     * 소스 및 대상 데이터베이스 설정: 복제 슬롯 설정, wal_level을 logical로 설정.

테이블 복제 방법 선택

    ""작은"" 테이블 복제

     * 작은 테이블 복제: 간단한 추가와 구독 새로 고침으로 복제 가능.

    큰, 추가 전용 테이블

     * 추가 전용 테이블 복제: copy_data 옵션을 false로 설정하여 미래 변경 사항만 복제 후, 백업에서 이전 데이터 백필.

    많은 업데이트가 있는 큰 테이블

     * 업데이트가 많은 큰 테이블 복제: 테이블 크기 축소, VACUUM 실행, 테이블 파티셔닝 고려.

테이블 복제 상태 확인

     * 복제 상태 모니터링: pg_subscription_rel 시스템 테이블을 통해 복제 상태 확인, 한 번에 하나의 테이블 복제 권장.

복제 중단

     * 복제 중단 방법: 필요 시 테이블 복제 중단 및 구독 새로 고침으로 롤백 가능.

복제 슬롯 이전에 대한 주의

     * 복제 슬롯 이전 문제: 복제 슬롯의 LSN은 기본 데이터베이스에 고유하므로 새 데이터베이스로 직접 복사 불가.

마이그레이션 마무리

     * 테이블 일치성 검증: 두 데이터베이스 간 테이블 행 수 일치 확인, 필요 시 무작위 샘플링으로 데이터 일치성 검증.

애플리케이션 수준 변경

     * 데이터베이스 연결 변경: 애플리케이션을 새 데이터베이스에 연결하도록 변경, 트래픽 전환 전략 수립.

시퀀스에 대한 추가 사항

     * 시퀀스 동기화: 복제 과정에서 시퀀스 값 동기화되지 않으므로, 수동으로 시퀀스 값을 설정.

최종 점검 체크리스트

     * 최종 점검: 테이블 일치성, 구독 상태, 스키마 일치, 데이터베이스 크기, 복제본 추가, 인덱스 재구성, 성능 테스트, 리스크 평가, 스테이징 환경에서의 연습.

최종 전환

     * 최종 전환 실행: 저녁 시간대에 테이블 복제, 스테이징 환경에서 여러 번 연습 후, 최종 점검 및 플래그 전환.

GN⁺의 의견

     * 중요성: Knock은 제로 다운타임으로 Postgres 11.9에서 15.3으로 업그레이드하는 복잡한 과정을 성공적으로 수행함. 이는 데이터베이스 관리와 서비스 가용성에 중요한 이정표를 제시함.
     * 흥미로움: 복제 기반 업그레이드 접근법은 데이터베이스 관리자들에게 새로운 데이터베이스로의 부드러운 전환을 가능하게 하며, 이는 기술 커뮤니티에 큰 관심을 끌 수 있음.
     * 재미: Knock의 업그레이드 과정은 체계적인 리스크 관리와 문제 해결 과정을 통해 복잡한 기술적 도전을 극복하는 모범 사례를 보여줌.

        Hacker News 의견

     * 대용량 테이블을 복사하는 것보다 더 나은 방법이 존재함.
          + 복제 슬롯 생성, 스냅샷 취득, 새 인스턴스로 스냅샷 복원, LSN 진행, 복제 시작으로 논리적 복제본을 만들 수 있음.
          + Instacart의 기사가 이 과정을 설명하고 있음.
          + 기사에 작은 오류가 있을 수 있지만, TB 크기 인스턴스를 업그레이드하는 데 여러 번 성공적으로 사용함.
     * 여기서 제시된 접근법은 흥미롭고 잘 문서화되어 있지만, ""현대 고객은 100% 가용성을 기대한다""는 문장에 동의하지 않음.
          + 고객이나 공급자로서의 경험에 따르면, 가용성보다 일관성이 훨씬 중요함.
          + 벤더가 다운타임을 공지할 때 데이터를 신중하게 다루고 있다는 신호로 받아들여 안도감을 느낌.
     * AWS가 이제 블루-그린 배포를 지원함.
     * 대부분의 문제를 자동화하는 도구를 작성함.
          + 도구는 GitHub에서 공유되며, 피드백이나 아이디어를 통해 확장할 수 있음.
     * hava.io에서 AWS RDS PostgreSQL 11.13에서 15.5로 마이그레이션 중임.
          + pglogical을 사용한 단방향 복제 방식을 선택함.
          + 이 방식은 빠르지 않지만, 점진적으로 데이터베이스를 새 인스턴스로 복제하는 데 몇 일이 걸릴 수 있음.
          + 스토리지 유형과 크기를 변경하는 더 많은 자유를 제공함.
     * 어떠한 다운타임도 Knock 서비스에는 받아들일 수 없다는 주장에 의문을 표함.
          + 복잡한 시스템은 사고와 다운타임이 발생함.
          + 사전에 공지된 15분 다운타임은 대부분의 SaaS 비즈니스에 문제가 되지 않음.
          + 엔지니어링 시간을 제품 개발이나 개발 팀의 속도 향상에 투자하는 것이 사용자에게 더 만족을 줄 수 있음.
          + 데이터베이스 마이그레이션에서 ""적은 다운타임""과 ""제로 다운타임"" 마이그레이션을 만드는 데 드는 작업량 차이가 큼.
     * 백업에서 복제를 초기화할 수 없다는 것에 놀람.
          + 기존 안정적인 DB 내용을 새 서버로 스트리밍하는 번거로움을 줄일 수 있었을 것임.
          + ""제로 다운타임""이라고 하지만, 실제로는 새 서버로 전환하는 몇 초간의 다운타임이 있음.
          + 일관성 유지 방법에 대한 세부 사항이 누락됨.
          + 롤백 옵션에 대한 언급이 없으며, 대규모 데이터에 대한 일회성 이전 작업을 수행할 때는 항상 이전 단계로 되돌릴 계획이 필요함.
     * 데이터베이스 자격증명만 입력하면 제로 다운타임으로 Postgres 업데이트를 수행하는 올인원 도구에 관심이 있는지 물음.
     * 시퀀스 사용에 대한 것이 흥미로움.
          + 시퀀스 대신 주로 순차적 UUID나 HiLo 알고리즘을 사용함.
     * 분산 시스템에서 발생하는 문제는 적절한 sleep(1000)으로 해결할 수 있음을 농담으로 표현함.
          + Postgres는 DBA에게 친숙하지 않은 시스템이지만, 예전보다는 나아짐.
"
"https://news.hada.io/topic?id=12241","제너레이티브 AI에서 개방적 신뢰와 안전성을 향한 Purple Llama","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                제너레이티브 AI에서 개방적 신뢰와 안전성을 향한 Purple Llama

Purple Llama 프로젝트 발표

     * Purple Llama는 개발자들이 책임감 있게 생성 AI 모델을 배포할 수 있도록 지원하는 오픈 트러스트 및 안전 도구와 평가를 제공하는 프로젝트.
     * CyberSec Eval은 LLM에 대한 사이버보안 안전 평가 벤치마크 세트이며, Llama Guard는 배포가 용이한 입력/출력 필터링을 위한 안전 분류기.
     * AI Alliance, AMD, AWS, Google Cloud, Hugging Face, IBM, Intel, Lightning AI, Microsoft, MLCommons, NVIDIA, Scale AI 등과 협력하여 이러한 도구를 오픈 소스 커뮤니티에 제공할 예정.

생성 AI의 새로운 혁신

     * 생성 AI는 대화형 AI, 사실적 이미지 생성, 대규모 문서 요약 등을 가능하게 하는 혁신적인 기술.
     * Llama 모델은 1억 번 이상 다운로드되었으며, 이러한 혁신은 오픈 모델에 의해 주도됨.
     * 개발자들이 신뢰를 구축하고 책임감 있는 AI 연구와 기여를 할 수 있도록 안전 협력이 중요함.

Purple Llama 프로젝트의 첫 걸음

     * 사이버보안과 LLM 프롬프트 안전은 현재 생성 AI 안전에 중요한 분야.
     * 사이버보안 평가 벤치마크는 CWE 및 MITRE ATT&CK와 같은 업계 지침과 표준에 기반하고 있으며, 보안 전문가와 협력하여 구축됨.
     * Llama Guard는 개발자들이 위험한 출력을 방어할 수 있도록 공개적으로 사용 가능한 모델을 제공함.

Purple 팀의 중요성

     * 공격(레드 팀)과 방어(블루 팀) 자세를 모두 취해야 생성 AI의 도전을 완화할 수 있음.
     * Purple 팀은 레드 팀과 블루 팀의 책임을 모두 포함하는 협력적 접근 방식으로, 생성 AI에도 동일한 정신이 적용됨.

오픈 생태계를 향한 노력

     * Meta는 탐색적 연구, 오픈 사이언스, 크로스 협업을 AI 노력의 기초로 삼고 있으며, 오픈 생태계를 만들기 위한 중요한 기회가 있음.
     * AI Alliance, AMD, Anyscale, AWS 등 많은 파트너들과 협력하여 오픈 트러스트 및 안전을 추진할 예정.

앞으로의 방향

     * NeurIPs 2023에서 워크샵을 개최하여 이 도구들을 공유하고 기술적인 심층 분석을 제공할 예정.
     * 안전 지침과 모범 사례는 지속적인 대화가 필요하며, 커뮤니티의 의견을 기대함.

GN⁺의 의견

     * 이 기사에서 가장 중요한 것은 새로운 생성 AI 기술의 안전하고 책임감 있는 사용을 지원하기 위해 Meta가 Purple Llama 프로젝트를 발표했다는 점임.
     * 이 프로젝트는 사이버보안 평가 도구와 입력/출력 필터링 모델을 포함하여 개발자들이 생성 AI를 안전하게 배포할 수 있도록 지원하는 것을 목표로 함.
     * 이러한 노력은 AI 기술의 발전을 촉진하고, 개발자 커뮤니티에 신뢰를 구축하며, 오픈 소스 생태계를 강화하는 데 기여할 것으로 기대됨.

        Hacker News 의견

     * 새로운 ""책임감 있는 AI 모델 및 경험 배포"" 이니셔티브에서 프롬프트 인젝션 위협에 대한 인식 부족이 이해되지 않음.
          + 27페이지짜리 책임 사용 가이드에서 프롬프트 인젝션을 ""콘텐츠 제한 우회 시도""로 잘못 설명한 단 하나의 언급 발견.
          + ""CyberSecEval""은 대규모 언어 모델의 사이버보안 위험 평가를 위한 벤치마크로 보이지만, 코드 생성 모델이 불안전한 코드를 생산하는 위험과 공격자가 새로운 공격을 만드는 데 LLM을 사용하는 위험만 다룸.
          + ""Llama Guard""는 영어로 된 유해 콘텐츠를 여러 범주에서 탐지하는 데만 관심이 있으며, 프롬프트 인젝션 탐지 모델 출시 시도는 하지 않음에 다행이라고 생각함.
          + 프롬프트 인젝션은 개인 AI 어시스턴트와 같은 LLM 기반 애플리케이션을 책임감 있게 배포하기 위해 극복해야 할 가장 큰 도전으로, LLM이 개인 데이터와 신뢰할 수 없는 입력(요약해야 하는 이메일 등)에 모두 접근할 때 잘못될 위험이 있음.
     * 보안 연구자로서, LLM을 사용하여 ""악성"" 코드를 생성하는 것은 정당한 목적이며, 이는 실습을 위하거나 책임 있는 당사자에게 문제를 보여주기 위함임에도 불구하고, LLM이 사이버보안 관련 요청을 돕지 않는다는 발표에 동시에 기쁘고 실망함.
     * 원래 연구자들이 무엇을 하든, 사람들은 검열되지 않은 데이터로 모델을 훈련하거나 조정할 것이며, 검열되지 않은 모델은 이미 Llama에 대해 쉽게 이용 가능하며, 유사한 크기의 검열된 모델보다 성능이 뛰어남.
     * 마이크로소프트의 승리 정의는 AI 추론 제품/서비스의 호스트가 되는 것으로, 스타트업이 유용한 AI 제품을 만들고 MSFT는 그들로부터 세금을 징수하며 더 많은 데이터 센터를 건설함.
          + 메타의 전략에 대해 아직 깊이 생각해보지 않았지만, 이제 시도해보고 싶음.
          + 올해 초 Llama의 출시/유출로 전장이 바뀌었으며, 오픈소스 애호가들이 이를 가져다가 AI 연구자들이 시도하지 않았던 최적화를 시작함.
          + 이 최적화 추진은 메타 경쟁자가 궁극적인 세금 당국자가 되는 것을 우회하는 것으로 볼 수 있음.
          + 메타가 오픈소스 커뮤니티가 FAANG 경쟁자와 일종의 대리전을 벌일 것이라고 기대하는 것인지 의문.
          + 오픈소스 커뮤니티가 메타를 신뢰할 것 같지 않으며, FOSS 집단은 원한을 품는 법을 알고 있고 메타는 그들의 핵심 이념에 반하는 것으로 여겨짐.
          + 메타 AI 전략이 메타에게 돈을 벌어다주는 방법과 개발자/고객을 메타버스로 유도하는 방법에 대한 명확한 경로를 보지 못함.
     * 새로운 모델이 아니라 그냥 ""안전""에 대한 헛소리일 뿐임.
     * 페이스북에서 거미에 대한 농담으로 집에 불을 지르자는 댓글을 달았다가 AI에 의해 신속하게 플래그되고, 인간의 신속한 항소 거부로 인해 페이스북 사용을 중단함.
          + 모든 주요 기술/소셜 미디어 회사가 ""신뢰와 안전""이라는 용어를 재활용하는 것을 기억하라고 조언함.
     * 메타가 마이크로소프트의 복잡한 로그인 경험 만들기 방식을 따르는 것처럼 보이는 재미있는 사건 발생.
          + ai.meta.com에 로그인하려 했지만, 메타 계정이 필요하다는 사실을 알게 됨.
          + 계정을 만들었지만, 해당 지역에서는 사용할 수 없다는 사실을 알게 됨.
     * 모델에 접근할 수 있다면, 이 LLM에서 ""로보토미화""나 ""안전""을 제거하기 위해 재훈련하거나 미세 조정하는 것이 얼마나 어려울지 궁금함.
     * 모델은 Hugging Face에서 사용할 수 있으며, Google Colab에서 무료로 실행 가능함.
     * ChatGPT를 두 번 사용했으나, Linux 관리 작업에 대한 기본적인 질문에 대해 두 번 모두 잘못된 답변을 받음.
"
"https://news.hada.io/topic?id=12255","Electron의 2023년 에코시스템 요약","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Electron의 2023년 에코시스템 요약

Electron Forge 7과 그 이후

     * Electron Forge 7 출시: Electron 애플리케이션을 패키징하고 배포하는 전체 도구인 Electron Forge의 최신 버전 출시
     * 주요 변경 사항: macOS 노터리제이션을 위한 notarytool로의 전환, 최소 Node.js 버전을 16.4.0으로 상향 조정, electron-prebuilt 및 electron-prebuilt-compile 지원 중단
     * 주요 특징: Google Cloud Storage로 직접 게시하는 기능, ESM forge.config.js 파일 지원, 빌드 속도 향상을 위해 Makers 병렬 실행 지원

  더 나은 정적 저장소 자동 업데이트

     * Squirrel 업데이트 기술: Electron의 autoUpdater 모듈을 지원하는 Squirrel.Windows와 Squirrel.Mac 업데이트 기술
     * 정적 저장소 방식 개선: 서버 없이 자동 업데이트를 위한 설정이 간소화됨, Electron Forge의 Zip 및 Squirrel.Windows 메이커가 autoUpdater 호환 업데이트 매니페스트 생성 지원, update-electron-app v2.0.0 출시로 생성된 매니페스트 읽기 가능

  @electron/ 확장된 우주

     * @electron/ 네임스페이스로의 통합: Electron 관련 패키지들이 @electron/ 네임스페이스로 재배치됨.
     * 일관성 있는 패키지 관리: 첫 번째 파티 패키지들이 @electron/ 네임스페이스로 통합되어 사용자 패키지와 구분됨
     * 예외: Electron 핵심은 electron 패키지로 계속 출시되며, Electron Forge는 @electron-forge/ 네임스페이스로 계속 출시될 예정

  @electron/windows-sign 소개

     * Windows 코드 서명 표준 변경: 2023년 6월 1일부터 Windows 코드 서명 인증서 키가 FIPS 호환 하드웨어에 저장되어야 함
     * 새로운 코드 서명 솔루션: Windows 코드 서명을 독립적인 단계로 분리하여 @electron/osx-sign이 macOS에서 하는 것과 유사한 방식으로 처리
     * 피드백 요청: @electron/windows-sign 패키지 사용 후 피드백 요청

  다음?

     * 연말 조용한 기간: 12월 동안은 연례 조용한 기간으로, 2024년 Electron 개발 경험을 개선하기 위한 방안 모색 예정
"
"https://news.hada.io/topic?id=12330","당신이 자살 충동을 느낄 때는 배치 요리를 하지 않는다 (2020)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 당신이 자살 충동을 느낄 때는 배치 요리를 하지 않는다 (2020)

음식 빈곤과 비만에 대한 대응

     * 음식 빈곤, 비만, 일반적인 음식 문제가 언론에 오를 때마다, 저자는 트위터에서 오는 댓글들에 대비함.
     * Annunziata Rees-Mogg가 감자가 오븐 칩보다 싸다고 언급한 것에 대한 반응으로, 저자는 감자의 가격을 잘 알고 있음을 밝힘.
     * 저자는 다양한 형태의 감자 가격을 알고 있으며, 통조림 감자가 가장 경제적인 구매 방법임을 알고 있음.

경제적 어려움 속에서의 삶

     * 저자는 아이를 가진 후 일자리를 잃고 주거 혜택이 중단되어 퇴거당한 경험을 가지고 있음.
     * 저자는 지난 7년간 비슷한 상황에 처한 가정들을 돕기 위해 대부분 무료로 일해왔음.
     * 저자는 사람들이 편의 식품을 선택하는 다양한 이유를 이해하며, 정신 건강 문제나 자살 충동과 같은 상황에서는 대량 조리가 무의미할 수 있음을 인지함.

저자의 개인적인 경험과 성공

     * 저자는 베스트셀러 작가로서 여러 권의 책을 집필했으나, 여전히 주택을 구매할 수 없는 상황임.
     * 저자는 신용 등급이 낮고, 여러 번 이사를 해야 했으며, 불안정한 재정 상태에 대한 두려움을 가지고 있음.
     * 저자는 가난에서 벗어난 것은 우연이었으며, 블로그를 통해 글을 쓰기 시작했고, 이것이 출판 계약으로 이어졌음.

가난과 특권에 대한 저자의 견해

     * 저자는 가난과 특권이 대부분 우연에 의해 결정된다고 보며, 무지는 선택이라고 주장함.
     * 저자는 자신의 경험을 바탕으로 다른 사람들을 돕기 위해 노력하고 있으며, 가난이 사람의 뇌 구조를 바꿀 수 있다고 믿음.
     * 저자는 자신의 이야기를 통해 사회 변화를 촉구하며, 특권층이 가진 무지와 무관심을 비판함.

GN⁺의 의견

     * 이 글은 가난과 식품 빈곤에 대한 개인적인 경험을 바탕으로 한 저자의 강렬한 메시지를 전달함.
     * 저자는 자신의 어려움을 극복하고 다른 사람들을 돕기 위해 노력하는 모습을 통해, 사회적 문제에 대한 인식을 높이고자 함.
     * 이 글은 가난이 단순히 재정적인 문제가 아니라 정신 건강과 사회적 안정성에까지 영향을 미칠 수 있음을 보여줌으로써, 독자들에게 깊은 인상을 남김.

        Hacker News 의견

     * 첫 번째 댓글 요약:
          + 가난에서 벗어나 현재는 재능 있는 사람들과 일하지만, 과거 불우한 학교에서 만난 사람들이 더 재능이 있었음.
          + 가난했던 시절의 많은 사람들이 여전히 가난한 상태로 남아 있으며, 이는 가난이 가져온 여러 문제들 때문임.
          + 새로운 사회적 환경에서는 본인의 재능을 DNA와 노력 덕분이라고 생각하지만, 가난한 사람들이 부자들이 보기에 '나쁜' 결정을 내리는 것은 단지 생존을 위한 것임을 알고 있음.
          + 재능과 지능은 어디에나 존재하며, 뛰어나고 야심 찬 사람들이 많음.
          + 아무도 다른 사람들보다 훨씬 낫지 않지만, 전후 미국은 사람들에게 그들이 특별하다는 생각을 팔아왔음.
          + 가난을 선택하는 사람은 없으며, 인류는 가난을 없애고 모두에게 더 많은 기회를 제공하는 데 집중함으로써 더 빠르게 발전할 수 있음.
     * 두 번째 댓글 요약:
          + 글을 읽으며 무언가가 빠져 있는 듯한 느낌을 받았고, 그것이 '커뮤니티'의 부재임을 깨달음.
          + 제3세계 이민자로서, 출생국에서 이렇게 고립된 삶을 살아가는 것은 상상하기 어려움.
          + 고향에서는 아이들이 준비될 때까지, 종종 25-30세까지 부모와 함께 살고, 돈을 절약하기 위해 많은 사람들이 큰 집에 함께 살며 우연히 커뮤니티를 형성함.
          + 가난한 사람들 사이에서는 한 명이 대량 구매하여 커뮤니티에 분배함으로써 돈과 시간을 절약함.
          + 블로그에서 아버지의 언급이 빠져 있어 무책임한 인물로 보임.
          + 서구의 지역사회와 혈연 커뮤니티로부터의 지원 부족은 두려움을 느끼게 함.
          + 개인주의와 독립성이 지원 시스템으로부터 멀어지는 것을 의미하지 않아야 함.
     * 세 번째 댓글 요약:
          + 32세의 나이에 부모님 집으로 돌아가 돌봄을 요청하고 싶은 절박함을 표현함.
          + 영미권 밖에서는 이런 상황이 꽤 정상적이며, 절박한 상황에서 아이를 돌보아야 한다면 부모님이 도와주기를 간청할 것임.
     * 네 번째 댓글 요약:
          + 잭 먼로(Jack Monroe)가 후원자들로부터 받은 돈을 무모하게 썼다는 내용을 읽고 이야기의 매력이 감소함을 느낌.
          + 가난한 사람들이 돈을 받은 후 어리석은 행동을 하는 것은 흔한 일이지만, 이야기의 매력은 줄어듦.
     * 다섯 번째 댓글 요약:
          + 영국에서 좋지 않은 환경에서 살아온 경험이 있어 글이 깊이 공감됨.
          + 현재 상황에서 벗어나려는 노력 중임.
     * 여섯 번째 댓글 요약:
          + 훌륭한 기사로, 해커뉴스에 어떻게 올라왔는지 모르겠지만, 이런 종류의 글을 더 많이 제출해달라는 요청.
     * 일곱 번째 댓글 요약:
          + ADHD가 있는 사람들은 자살, 가난, 약물 남용 등의 위험이 더 높으며, 이러한 문제들은 스펙트럼상에 존재함.
          + ADHD가 있는 사람들은 가난하거나 자살하거나 약물 남용하는 통계의 일부가 아닐 수도 있지만, 그런 상황이 되지 않기 위해 노력해야 함.
          + 좋은 집과 직업이 있어도 안전감이나 안정감을 느끼지 못하고 가난에서 벗어나지 못한 내면적 느낌을 흔들어 버리기 어려움.
     * 여덟 번째 댓글 요약:
          + 작가의 가난한 삶에 대한 이유가 명확하지 않으며, 정신 질환, 아동 학대 등이 이유일 수 있음.
          + 가난이 대부분 우연이라는 결론을 받아들이기 위해서는 더 많은 설명이 필요함.
     * 아홉 번째 댓글 요약:
          + 가족과 함께 살고 부모님을 돌보며 자녀를 키우는 것이 인간 역사상 정상적인 것이었음.
          + 영국에서는 모르겠지만, 농촌 인구가 상당하며, 모든 것이 도시보다 저렴함.
          + 집을 잃고, 어머니가 돌아가시고, 겨울에 길거리에 쫓겨난 사람들이 있으며, 이들은 노숙자나 쓰레기장에서 살아가는 사람들보다 나은 상황임.
          + 저자가 쉽지 않은 상황에 있지만, 일부는 의도적인 선택일 수 있음.
     * 열 번째 댓글 요약:
          + 조지 오웰의 '위건 부두로 가는 길' 인용으로, 가난한 사람들이 건강한 음식보다는 맛있는 것을 선호하는 경향을 설명함.
          + 실업 상태에서는 맛없고 건강한 음식을 먹고 싶어하지 않으며, 오히려 작은 즐거움을 찾게 됨.
"
"https://news.hada.io/topic?id=12260","CPNG - PNG와 100% 하위 호환되는 포크 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     CPNG - PNG와 100% 하위 호환되는 포크 발표

     * CPNG(""Compatible Network Graphics"")는 약 30년 된 PNG 이미지 형식의 100% 호환 가능한 포크. PNG의 기능을 현대적으로 확장하면서도 기존의 브라우저, 운영체제, 엔진 등과의 호환성 유지
     * 목표: 기존 PNG보다 인코딩/디코딩 속도가 훨씬 빠르며 (인코딩 10배 이상, 디코딩 2-3배 이상), 이를 통해 새로운 기능을 추가할 수 있는 동력과 라이브러리 채택
     * 주요 특징:
          + Constrained Deflate 스트림: 기존 라이브러리 대비 인코딩 속도를 10-25배, 디코딩 속도를 2-3배 향상시키는 기능으로, 이미 fpng/fpnge에서 구현됨
          + 멀티스레드 인코딩/디코딩: Apple이 이미 사용 중인 기술. CPNG 부가 청크에 탐색 테이블 추가, 이미지를 스트립 단위로 병렬 인코딩/디코딩 가능.
          + FP16 및 LOGLUV32 지원: HDR 이미지를 PNG만 지원하는 브라우저와 OS에서도 합리적인 방식으로 볼 수 있도록 설계. HDR 데이터는 간단하고 빠른 절차를 통해 손실 없이 복구 가능
          + .EXR 대안으로서의 CPNG: .EXR 형식은 너무 많은 압축 형식을 지원하여 실제로는 호환되지 않음. CPNG는 손실 없는 톤 매핑 대안을 제공하며, 대부분의 브라우저와 OS에서 미리보기 가능.
          + LOGLUV32의 설계: 파일 크기 부풀림을 피하면서 진정한 HDR을 달성하기 위한 설계 진행 중. 다른 ""HDR"" 솔루션들은 실제로 사용되는 비트보다 더 많은 16비트 픽셀을 저장해야 함을 지적하며, 이는 낭비라고 주장.
     * 라이브러리 작성자의 중요성: 호환성을 유지하는 한, 실질적으로 형식을 제어하는 것은 라이브러리 작성자임.

GN⁺의 의견

     * CPNG는 기존의 PNG 형식과 완벽하게 호환되면서도 현대적인 기능을 추가한 새로운 이미지 형식으로, 특히 인코딩/디코딩 속도의 혁신적인 향상과 HDR 지원이 주목할 만함.
     * 이러한 발전은 웹 개발자, 그래픽 디자이너, 소프트웨어 엔지니어 등 다양한 분야의 전문가들에게 매우 유익하고 흥미로운 변화를 가져올 것으로 기대됨.
     * 호환성을 중심으로 한 접근 방식은 기술의 발전과 사용자 경험 향상을 동시에 추구하는 현대 소프트웨어 개발의 중요한 원칙을 반영함.

   오잉... 과연 새로운 이미지 표준이 될 수 있을까요?

   아직도 차세대 이미지 표준은 webp 말고는 딱히 성공한 게 없긴 한데...
   Webp도 결국 구글이 크롬 점유율로 밀어붙인 느낌이고...

        Hacker News 의견

     * PNG 포맷이 여러 호환되지 않는 버전으로 분화될 가능성에 대한 우려

     PNG의 초기 역사에서 이미 알파 채널, 점진적 렌더링, APNG 지원의 불일치 문제가 있었음. PSD와 SVG 파일도 오랫동안 브라우저나 기기, 앱, 버전에 따라 다르게 보이는 문제가 있었음. PNG를 확장하는 것은 거의 모든 실제 사용에서 문제를 일으킬 수 있으며, 새로운 기능을 사용하는 디자이너로 인해 이미지가 ""깨져"" 보일 수 있음. HDR과 같은 일부 기능은 일부 렌더러에서만 표시될 수 있어 ""하위 호환""이라도 문제가 될 수 있음. 새로운 포맷을 만들고 필요에 따라 웹페이지와 장치가 대체하는 것이 더 나을 수 있음.
     * PNG를 개선하려는 이유와 그 가치에 대한 긍정적인 평가

     PNG에 새로운 기능을 하위 호환 가능한 방식으로 통합할 수 있다면, 모든 브라우저, 운영 체제, 엔진 등과 즉시 호환될 수 있어 가치가 있음.
     * libpng의 인코딩 속도가 jpg나 tiff보다 10배 이상 느린 점과 LOGLUV32 기술에 대한 칭찬

     libpng의 인코딩 속도가 느린 점을 발견하고, LOGLUV32 부분이 매우 영리하다고 생각함. 톤맵된 대체 이미지와 기존 위에 구축하는 아이디어가 마음에 들지만, 포맷 확장이 호환성 문제로 이어지지 않기를 바람.
     * 새로운 이미지 포맷에 대한 열정적인 반응과 엔지니어링에 대한 감상

     개인적으로 필요하지 않음에도 이에 대해 읽는 것을 즐겼으며, 이러한 사려 깊은 이미지 포맷과 글쓰기 작업이 더 많이 필요함.
     * 현대 이미지 포맷의 효율성에 대한 궁금증

     손실 없는 포맷과 손실 있는 포맷에서 각각 어떤 것이 크기나 압축 해제 속도 측면에서 가장 효율적인지, 현재 기술의 상태에 대해 궁금함.
     * JPEG XT와 JPEG-HDR에 대한 언급 부족 지적

     JPEG XT와 JPEG-HDR에 대한 언급이 없음을 지적함.
     * PNG의 간소화된 하위 호환 가능한 버전에 대한 아이디어 제시

     PNG의 간소화된 버전을 만들어 저복잡성 임베디드 시스템에서 사용할 수 있도록 하고, 기존 이미지 뷰어와의 호환성을 유지하면서 ""전체 PNG""를 구현할 필요가 없도록 함. DEFLATE는 이미 압축되지 않은 블록을 지원하기 때문에 이는 하위 호환 방식으로 작동함.
     * ""100% 하위 호환""의 의미에 대한 질문과 APNG와의 유사성에 대한 의견

     ""100% 하위 호환""이 정확히 무엇을 의미하는지, 새로운 기능을 사용하는 파일이 있을 때 합리적인 이미지를 반환하는 APNG와 유사한 방식으로 하위 호환되는지에 대한 의문 제기.
     * CPNG에 대한 감탄과 CPNG를 인식하는 라이브러리의 성능 향상에 대한 기대

     CPNG를 인식하는 라이브러리에 대한 성능 향상이 인상적이며, CPNG를 인식하지 못하는 기존 라이브러리가 CPNG 이미지를 읽을 때 성능 저하가 발생하는지, CPNG가 PNG보다 얼마나 더 클지에 대한 궁금증 표현.
"
"https://news.hada.io/topic?id=12350","Microsoft Windows AI Studio 프리뷰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Microsoft Windows AI Studio 프리뷰

     * 최신 AI 개발 도구와 모델 카달로그를 연동하여 생성형 AI 앱 개발을 간소화
          + Azure AI Studio Catalog 와 Hugging Faces 등을 검색하고 다운로드, 파인튜닝 및 테스트 가능
     * 프리뷰에서 실행 가능한 액션들
          + 모델 파인 튜닝(QLoRA)
          + RAG 프로젝트
          + Phi-2 모델 플레이 그라운드
          + Windows 최적화된 모델들 (Hugging Face, GitHub등을 한곳에서 검색/다운로드하고 즉시 사용)
     * 현재는 NVIDIA GPU에서만 실행 가능
     * 향후에는 모든 윈도우 하드웨어에서 AI 모델을 실행할 수 있도록 ORT/DML을 워크플로우에 통합할 예정
"
"https://news.hada.io/topic?id=12233","구글의 최고 AI "Gemini" 데모는 조작되었다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글의 최고 AI ""Gemini"" 데모는 조작되었다

Google의 Gemini AI 모델 데모 조작 논란

     * Google의 새로운 Gemini AI 모델이 대중에게 첫 선을 보인 후 혼합된 반응을 받음
     * 가장 인상적인 데모가 사실상 조작된 것으로 밝혀져 사용자들의 신뢰에 타격을 줌
     * ""Hands-on with Gemini: Interacting with multimodal AI""라는 비디오가 100만 조회수를 기록하며, 다양한 입력에 유연하고 반응적인 멀티모달 모델의 능력을 선보임

실제와 다른 데모

     * 비디오는 실시간으로 이루어진 것처럼 보이지만, 실제로는 이미지 프레임과 텍스트 프롬프트를 사용하여 Gemini의 능력을 테스트한 것임
     * 실제 상호작용과는 다르게, 비디오에서는 반응 속도와 정확성, 그리고 모델과의 상호작용 방식에 대해 오해를 불러일으킬 수 있는 내용을 담고 있음
     * ""레이턴시를 줄이고, Gemini 출력을 단축했습니다.""라는 경고 문구가 있긴 하지만, 매우 매력적으로 보임

문서화된 능력과의 차이

     * 비디오에서는 직관적이고 단어 없는 평가로 보이는 반면, 문서화된 능력은 모델이 개별 제스처를 바탕으로 추론하지 않고, 모든 제스처를 한 번에 보여주고 힌트를 줘야 함을 나타냄
     * 예를 들어, 비디오에서는 종이 공이 컵 아래에서 바뀌는 것을 모델이 즉각적으로 감지하는 것처럼 보이지만, 실제로는 활동을 설명해야 하고, 모델을 훈련시켜야 함
     * Google은 이 동영상이 ""Gemini의 실제 결과물을 보여준다""고 말한건 사실이지만 ""데모를 몇 가지 편집했다(이 사실을 투명하게 공개하고 있다)""고 말하는 것은 사실이 아님. 이 동영상은 데모가 아니며, 실제로는 데모를 알리기 위해 만든 것과는 매우 다른 상호작용을 보여줌

GN⁺의 의견

     * Google의 Gemini AI 모델 데모 비디오가 실제 모델의 능력을 과장하여 제작된 것으로 드러나, 기술의 신뢰성에 의문을 제기함.
     * 멀티모달 AI의 발전 가능성과 현재 기술의 한계를 동시에 보여주는 사례로, AI 기술의 진정한 현황을 이해하는 데 중요한 교훈을 제공함.
     * 이 사건은 AI 기술의 발표와 데모가 실제 사용자 경험과 얼마나 일치하는지에 대한 투명성과 정직성의 중요성을 강조함으로써, 기술 분야에 종사하는 사람들에게 흥미로운 논의를 제공함.

   바드도 처음엔 기대를 모았었죠

   구글 글래스 생각나네요... 그때도 세상이 바뀌는 줄 알았는데

   화이팅!

   놀라운 영상이기는 했는데, 짧은 시간에 편집해서 제공하다 보면 나올수 밖에 없는 이슈라고 생각 되네요.
   구글이 많이 힘든가 보다 생각도 들고, 실제로 나와보면 알겠지 라는 생각도 함께 듭니다.
   어쨋거나 OpenAI가 혼자 달려나가는 것보다는 경쟁이 더 좋으니까, 구글도 화이팅

   안타까웠습니다.
   비전, 가치는 어려울 때에 더더욱 지켜야 하는 것이지 않나 싶습니다.
"
"https://news.hada.io/topic?id=12337","Dropbox: Dropbox에서 제3자 AI 파트너 접근 거부 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Dropbox: Dropbox에서 제3자 AI 파트너 접근 거부 방법

        Hacker News 의견

     * 트위터에 접근할 수 없거나 원하지 않는 사람들을 위해, 개인 계정의 설정은 여기에 있고, 팀 계정의 관리자 콘솔 설정은 여기에 있다. 미국 기업 계정의 경우 기본적으로 설정이 켜져 있었음. 설정에 대한 설명은 팀 구성원이 Dropbox에서 AI를 사용하여 더 빠르게 작업할 수 있도록 하며, 검증된 기술 파트너만 사용한다고 함. 조직의 데이터는 내부 모델 훈련에 사용되지 않으며, 제3자 서버에서 30일 이내에 삭제된다고 함. ""자세히 알아보기"" 링크는 여기로 연결됨. Dropbox는 사용자 데이터를 동의 없이 모델 훈련에 사용하지 않는다고 주장하며, Dropbox AI 알파에 참여하는 팀의 경우 기본적으로 옵션이 켜져 있다고 함. 그러나 해당 옵션은 본인이 가입한 적 없음에도 불구하고 켜져 있었으며, 현재 참여 중이지 않다고 확인함. 데이터 사용 동의가 기본적으로
       선택될 것이라는 데 대해 신뢰가 없음.
     * 설정을 '끔'으로 바꾸면 사용자의 의사가 존중될 것이라고 가정하는 것이지만, 미래에 이와 같은 일이 다시 발생하지 않을 것이라는 보장은 없음. Dropbox 사용을 중단하는 것이 더 나은 선택이며, 이렇게 하면 파일이 무단으로 접근당하지 않을 것이라는 확신을 가질 수 있음.
     * Dropbox와 같은 회사들이 신중하게 구축한 명성을 이런 식으로 훼손하는 이유를 이해할 수 없음.
     * 계정에서 해당 설정을 끔으로 전환함. 이런 유형의 설정을 기본적으로 켜는 회사들을 참을 수 없음. Apple도 몇 iOS 버전 전에 광고 설정과 관련하여 같은 일을 함.
     * 유럽 기반으로 Dropbox에 로그인하여 설정을 확인함. 설정이 없었음. 인용된 트윗을 클릭하여 추가로 확인한 결과, 계정은 미국에서 생성되었지만 현재는 유럽 연합(EU)에 있음. Dropbox 내부의 ""새로운 소식""에서 2023년 10월 10일자로 다음과 같은 내용을 발견함: ""Dropbox AI를 사용하여 필요한 콘텐츠를 빠르게 찾을 수 있음. Dropbox 내용에 대한 질문을 하면 몇 초 안에 답변을 받을 수 있으며, 키워드 검색 대신 일상 언어로 필요한 파일을 찾을 수 있음. 검색 결과에는 각 파일의 간략한 요약이 포함됨. 개별 파일을 열면 Dropbox AI 파일 미리보기 기능을 사용하여 긴 문서부터 장편 비디오에 이르기까지 콘텐츠를 명확하고 간결한 설명으로 요약하여 시간과 노력을 절약할 수 있음. Dropbox AI는 현재 알파 버전이며 미국 내에서만 영어로 Dropbox Pro, Standard, Advanced, Essentials,
       Business, Business Plus 사용자에게 제공됨. 일부 기능은 곧 비미국 고객을 대상으로 테스트할 수 있음.""
     * 이 트윗은 오해의 소지가 있으며, 문서에 따르면 이것은 AI 기능을 제공하기 위해 API를 사용하는 것임. Dropbox 내의 파일은 AI 기능과 상호 작용을 선택할 때만 제3자 AI로 전송됨.
     * 계정을 확인한 결과 해당 옵션이 켜져 있었으며, 끔으로 전환함. 처음부터 켜져 있었다는 것은 전혀 받아들일 수 없음. 좋은 대안이 있다면 알려달라고 요청함. 암호화된 옵션을 선호함.
     * 설정에 대한 직접 링크 제공: 여기
     * 몇 년 전 Dropbox 사용을 중단함. Dropbox가 파일을 삭제하고 저작권이 없는 파일은 허용되지 않는다는 경고 이메일을 보냈기 때문임. 그러나 삭제된 파일은 개인적으로 사용하기 위해 자신의 CD에서 추출한 MP3 파일이었음. 이를 통해 Dropbox가 실제로 파일을 스캔하며 프라이버시가 전혀 없다는 것을 깨달음. Sync.com을 몇 년 동안 사용해왔으며 훨씬 나은 서비스임. 그러나 파일 데이터의 총 크기가 특정 수준(아마도 1TB 정도)을 넘어서면 소프트웨어와 시스템이 완전히 망가짐. 더 많은 공간에 대한 돈을 지불하게 되지만, 시스템 버그로 인해 사용할 수 없음.
     * Dropbox 웹사이트에 있는 설명: 제3자 파트너의 인공 지능(AI)을 사용하여 Dropbox에서 더 빠르게 작업할 수 있음. 검증된 기술 파트너만 사용하며, 데이터는 내부 모델 훈련에 사용되지 않고, 제3자 서버에서 30일 이내에 삭제됨.
     * 유럽에 거주하는 본인의 경우 설정이 꺼져 있었음. 도움말 페이지에 따르면, 영어를 선호 언어로 설정한 국가에서만 사용 가능하며, 캐나다, 영국(UK), 유럽 경제 지역(EEA) 내 국가는 제외됨. 여기에서 확인 가능함.
"
"https://news.hada.io/topic?id=12223","서버리스를 재고하다: FLAME 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          서버리스를 재고하다: FLAME 기술

FLAME 패턴: 애플리케이션의 탄력적인 확장을 위한 새로운 접근법

     * 서버리스/FaaS(Function as a Service)는 탄력적인 확장과 사용량 기반 비용 지불이라는 장점을 제공하지만, 실제로는 더 많은 복잡성을 초래함.
     * 기존 앱 코드를 함수로 감싸서 임시 앱 복사본에서 실행할 수 있다면 자동 확장이 가능해질 것임.
     * FLAME(Fleeting Lambda Application for Modular Execution) 패턴은 전체 애플리케이션을 람다처럼 취급하여 모듈식 부분을 단기간 인프라에서 실행함.

  FLAME 패턴

     * FLAME 패턴은 서버 관리 없이, 앱 코드의 특정 부분에 대한 수요 기반의 세밀한 탄력적 확장을 원함.
     * 기존 애플리케이션을 다시 작성하거나 독점 런타임에서 부분적으로 작성할 필요가 없음.
     * Elixir의 flame 라이브러리는 FLAME 패턴을 구현하며, Fly.io 백엔드 어댑터를 포함하지만, 앱 코드를 실행할 수 있는 API를 제공하는 모든 클라우드에서 사용 가능함.

  FLAME 백엔드

     * Fly.io 인프라에서 FLAME.FlyBackend는 새로운 Machine을 부팅하여 약 3초 내에 부모 작업에 연결할 수 있음.
     * FLAME은 LocalBackend와 FlyBackend를 기본으로 제공하지만, 서버를 프로비저닝하고 앱 코드를 실행할 수 있는 API를 제공하는 모든 호스트가 FLAME 백엔드로 작동할 수 있음.
     * Fly.io는 애플리케이션을 도커 이미지로 패키징하여 실행하기 때문에, 동일한 이미지로 새로운 Machine을 부팅하기만 하면 됨.

  FLAME 외부의 Elixir

     * Elixir는 프로세스 감독과 분산 메시징과 같은 기능을 무료로 제공하기 때문에 FLAME 모델에 매우 적합함.
     * 언어가 합리적인 동시성 기본 요소를 가지고 있다면, 이 패턴을 활용할 수 있음.
     * JavaScript 애플리케이션에서도 FLAME 패턴을 구현할 수 있는 예제가 있으며, 모듈식 실행을 새 파일로 이동하여 실행함.

  배경 작업 프로세서에 대해

     * FLAME은 배경 작업 프로세서 내에서 잘 작동하지만, 작업 라이브러리가 작업 풀을 확장하는 것과는 별개의 문제임.
     * 내구성을 보장하는 작업과 탄력적 실행을 분리하는 것이 중요함.

  탄력적 확장을 위한 풀링

     * Elixir의 FLAME 구현을 통해 탄력적 풀의 러너를 정의할 수 있으며, 이를 통해 제로로 확장하고 최대 동시성 한계를 가진 FLAME 서버를 탄력적으로 확장할 수 있음.

  프로세스 배치

     * Elixir에서 상태를 가진 애플리케이션 부분은 프로세스 기본 요소를 중심으로 구축되며, FLAME.call이나 FLAME.cast로 감싸진 상태로 잘 작동함.

  원격 모니터링

     * 부모가 러너를 스핀업할 때, 러너는 작업이 없을 때 자체적으로 아이들링을 관리하고 부모 노드와의 연결이 끊어지면 안전하게 종료되도록 해야 함.

GN⁺의 의견

   이 글에서 가장 중요한 것은 FLAME 패턴이 기존의 서버리스/FaaS 접근법의 복잡성을 줄이면서 애플리케이션의 탄력적 확장을 단순화할 수 있다는 점입니다. 이 패턴은 개발자들이 기존 코드를 크게 변경하지 않고도 필요한 부분만 빠르게 확장할 수 있게 해주며, 이는 클라우드 인프라를 사용하는 많은 소프트웨어 엔지니어들에게 매력적인 솔루션이 될 수 있습니다. FLAME 패턴은 특히 Elixir와 같은 언어에서 강력한 도구가 될 수 있으며, 다른 언어로의 구현 가능성도 탐색되고 있어 다양한 개발 환경에서의 적용을 기대하게 합니다.

        Hacker News 의견

     * 100개 이상의 람다 함수로 구성된 애플리케이션을 4년간 다루며 겪은 고통과 복잡성에 대해 이 글이 서버리스 FaaS 아키텍처의 단점을 잘 지적함.
          + 초기에는 이러한 단점이 눈에 띄지 않으며, 사용량이 적을 때 무료이고 유지보수가 거의 필요 없는 등의 분명한 장점이 있음.
          + 하지만 시간이 지나면서 상호 의존성으로 인해 점점 더 경직된 람다 워크플로우의 혼란을 겪고, 자체 관리하는 모놀리식 접근 방식을 선택하고 약간의 추가 비용을 지불하는 것이 나았을 것이라는 생각이 듦.
     * 글의 저자로서, FLAME 패턴을 자바스크립트, Go 등 다른 언어로 구현하려는 사람들에게 흥미를 불러일으키기를 바라며, 질문에 답변할 준비가 되어 있음.
     * PiCloud 서비스는 작업을 투명하게 워커에게 전달하는 모델을 사용했었고, 이는 Elixir가 아닌 다른 언어에서도 유사하게 적용될 수 있음을 시사함.
     * FLAME을 사용하면 기존 앱 코드를 함수로 감싸서 임시 앱 복사본에서 실행할 수 있으며, 이는 서버리스 환경에서 프로세스를 분기하는 것과 유사함.
     * Windmill.dev는 소스 코드 수준에서 추상화 단위를 고려하며, 주요 함수와 임포트를 파싱하여 인수와 의존성을 추출하고 원하는 런타임에서 코드를 실행함.
     * FLAME을 사용하면 개발 및 테스트 러너가 로컬 백엔드에서 실행되므로 서버리스 환경에서 좋은 로컬 개발 경험을 제공함.
     * ""Flame.call""을 사용할 때마다 새로운 앱 프로세스를 시작하고 실행 컨텍스트를 복사하는데, 이는 스케일링에 간단한 해결책이지만 앱 시작 시간에 추가되는 지연과 메모리 사용에 대한 고려가 필요함.
     * 해커뉴스의 헤드라인 대문자 사용에 대한 비판과 함께, 서버리스 원칙이 아닌 serverless.com 회사의 재고에 대한 희망을 표현함.
     * Inngest.com은 기존 코드를 서버리스 함수로 사용할 수 있게 하는 것과 유사한 방식을 제공하며, 코드의 상태를 외부에서 관리하고, 모니터링 및 관찰 가능성의 중요성을 강조함.
     * ""Long Lambda""라는 시스템을 만들어 람다가 15분 이상 실행될 수 있다면 모든 작업을 람다에서 처리할 수 있으며, 로컬에서 실행 및 디버깅이 가능함.

   이 요약은 각 댓글의 주요 내용을 간결하게 전달하며, 초급 소프트웨어 엔지니어가 이해하기 쉬운 수준으로 작성되었습니다. 배경 지식이 필요한 부분은 최소한으로 설명하였으며, 중립적인 태도를 유지하고 주제에서 벗어나지 않았습니다.
"
"https://news.hada.io/topic?id=12239","그는 아마존에 대해 폭로했다. 그는 여전히 대가를 치르고 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   그는 아마존에 대해 폭로했다. 그는 여전히 대가를 치르고 있다

요약 제목: 아마존 내부 고발자의 이야기

     * 아마존에서 부정적인 사례를 고발한 인물의 경험과 그로 인한 결과에 대한 이야기.
     * 고발 이후의 개인적인 영향과 직업적인 변화에 초점을 맞춤.
     * 글로벌 기업의 내부 문제를 드러내는 과정에서 겪는 어려움과 그에 따른 사회적, 경제적 영향을 조명.

GN⁺의 의견

     * 이 기사는 아마존과 같은 대기업에서 발생할 수 있는 내부 문제를 고발한 이후의 개인적인 희생과 그로 인한 사회적 영향에 대해 중요한 통찰을 제공함.
     * 고발자의 경험은 기업 윤리와 투명성에 대한 중요성을 강조하며, 이는 소프트웨어 엔지니어를 포함한 모든 직업군에게 중요한 교훈을 줌.
     * 이러한 이야기는 고발자 보호의 필요성과 기업 내부에서의 정의 실현에 대한 흥미로운 논의를 촉발시키기 때문에 많은 사람들에게 관심을 끌 수 있음.

        Hacker News 의견

     * 서방에서의 내부고발 경험은 대체로 매우 나쁜 결과를 초래함. 윤리적으로 부적절한 일을 거부하고 사퇴한 뒤 떠나는 것이 유일한 선택지이지만, 많은 사람들이 그럴 여유가 없음. 사회가 부패하고 법이 부유하고 강력한 이들에게는 다르게 적용되는 현실에 대한 비판.
     * 중국 내부고발자의 편지 링크 제공: [PDF] <a href=""https:&#x2F;&#x2F;chinalaborwatch.org&#x2F;wp-content&#x2F;uploads&#x2F;2022&#x2F;01&#x2F;English-%E5%94%90%E6%98%8E%E8%8A%B3%E7%BB%99Jeff-Bezos%E7%9A%84%E4%B9%A6%E4%BF%A1.pdf"" rel=""nofollow noreferrer"">편지 보기</a>
     * 중국에서 사실상 노예제가 합법이며, 그들의 사법 시스템이 완전히 부패했다는 것은 놀라운 소식이 아님. 이 사건이 다르게 끝날 것이라고 생각했다면 놀랄 일.
     * 중국 경쟁법에 따르면, 내부고발자는 영업 비밀 도용으로 인해 사업에 피해를 입었다는 증거를 제시해야 함. 폭스콘은 내부고발자의 폭로로 인해 급여 인상으로 140만 위안(약 15만 파운드)의 비용이 발생했다고 주장.
     * 매트 레빈(Matt Levine)의 단골 독자로서, 이것은 증권 사기 소송의 기회로 보임. 아마존이 공장이 현지 노동법을 준수하고 내부고발자를 보호한다고 주장했을 것이라는 점에서 대기업의 표준적인 주장.
     * 기사와 내부고발자의 편지를 읽고 매우 슬픔을 느낌. 내부고발자에게 영광은 없으며, 그의 삶은 망가졌고, 그가 보호하려 했던 노동자들 중 하나가 됨. 내부고발자의 편지를 읽은 기업 소유주라면, 무언가를 시도하지 않고는 살 수 없을 것.
     * 내부고발자에게 연락하여 자금 모금을 조직할 방법이 있는지에 대한 질문.
     * 미국에는 IRS와 관련된 내부고발자 보상 프로그램이 있었으며, 이는 매우 성공적인 프로그램 중 하나였음. 회사의 탈세를 고발하면 IRS로부터 상당한 금액을 받음. 탈세 금액이 적으면 보상도 적어 고발할 가치가 없으므로 IRS는 소규모 회사의 탈세를 어느 정도 원함.
     * 유료 벽을 우회하는 기사 링크 제공: <a href=""http:&#x2F;&#x2F;archive.today&#x2F;UAYFP"" rel=""nofollow noreferrer"">기사 보기</a>
"
"https://news.hada.io/topic?id=12237","SVG 튜토리얼튜토리얼

SVG 튜토리얼 요약

     * Hunor Márton Borbély가 만든 SVG 튜토리얼로, 기본적인 도형부터 시작하여 복잡한 애니메이션까지 SVG 이미지 코딩 방법을 단계별로 배울 수 있음.
     * 기본 도형 그리기, 크리스마스 트리, 생강 쿠키 인형, 집 만들기 등 다양한 주제를 다루며, 클립 패스, 그라데이션, 베지어 곡선, 텍스트 경로 따라 그리기 등 SVG의 다양한 기능을 소개함.
     * 또한, 자바스크립트를 이용한 시계 그리기, SVG 요소에 인터랙션 추가하기, 자바스크립트로 SVG 다이어그램 생성하기 등 SVG와 다른 기술들을 결합하는 방법도 포함됨.

GN⁺의 의견

     * 이 튜토리얼은 초급 소프트웨어 엔지니어들이 SVG 이미지를 코딩하는 기초부터 고급 기술까지 체계적으로 배울 수 있는 좋은 자료임.
     * 특히, 실제 시간을 표시하는 시계를 만드는 방법이나 SVG 요소에 인터랙션을 추가하는 등 실용적인 예제들이 포함되어 있어, 학습자들에게 매우 유익하고 흥미로운 경험을 제공할 것으로 보임.
     * SVG를 배우고자 하는 사람들에게 이 튜토리얼은 그래픽 웹 디자인의 이해를 넓히고, 웹 페이지에 독창적인 시각적 요소를 추가하는 능력을 향상시킬 수 있는 매력적인 학습 자료가 될 것임.

        Hacker News 의견

     * SVG와 React의 조합은 과소평가되고 있음. React의 모든 기능과 추상화를 활용할 수 있으며, DOM 대신 임의의 그래픽을 렌더링할 수 있음. 그래프와 차트 렌더링에 사용해보니, 특정 상황에서는 Canvas를 압도함. 예를 들어, 간단한 상호작용이 필요하지만 픽셀 단위 조작 같은 복잡한 그래픽은 필요하지 않을 때 유용함.
     * SVG는 유연한 포맷으로, 관련 튜토리얼을 통해 배우는 데 시간을 할애할 가치가 있음. React 컴포넌트와 결합하여 SVG를 이용하면 HTML만으로는 어려운 멋진 UI를 구현할 수 있음.
     * React로 구현한 인터랙티브한 ""Circle of Fifths"" 컴포넌트를 음악 이론 사이드 프로젝트에 사용함. 해당 컴포넌트는 사용 가능한 상태이며, SVG를 이용해 Circle of Fifths를 구축하는 과정에 대한 블로그 포스트가 도움이 됨.
     * SVG의 <clip-path> 사용 예시에서, 큰 원을 두 번 정의하는 것은 비효율적임. 크기를 변경할 때 두 곳 모두 수정해야 하므로, defs를 이미 사용하고 있다면 원을 한 번만 정의하고 재사용하는 것이 더 나음.
     * SVG와 React를 이용한 인라인 SVG 코딩은 재미있으며, <foreignObject> 태그를 사용하면 HTML 내에서 SVG를 활용할 수 있어 HTML이 더 잘하는 작업(링크, 이미지, 기본 플렉스박스 스타일링 등)에 유용함.
     * 몇 년 전, 인터페이스 작업 중 SVG를 사용했을 때, 두 가지 색상 스킴을 위해 단순히 SVG 파일 내의 색상 코드를 찾아 바꾸는 것으로 디자이너를 놀라게 함.
     * 튜토리얼에 대한 긍정적인 피드백에 감사함을 표시하며, 발견된 오류를 수정함. 아직 미세 조정 중이며, 예를 들어 Twitter에서 썸네일 미리보기가 작동하지 않는 이유를 아는 사람이 있는지 궁금함.
     * SVG ""태그""라는 용어에 대한 작은 불만이 있음. HTML을 처음 시작했을 때는 모든 것을 ""태그""라고 불렀지만, XHTML이 등장한 후 ""요소""라고 부르기 시작함. 여전히 ""태그""라고 생각하지만, 이제는 ""요소""라고 말함.
     * 곡선과 클리핑에 대한 예시가 특히 마음에 듦. path를 선호하는데, 거의 모든 것을 할 수 있고 다른 방법보다 덜 장황함. 그림 그리기에 서툴고 이미지를 싫어해서, 성능과 편의를 위해 사이드 프로젝트 전체를 SVG로 구축함. 이 튜토리얼을 통해 리팩토링할 부분이 많다는 것을 깨달음.
     * 텍스트와 이미지를 함께 사용한 예시를 보고 싶음. 현재 이 문제로 고군분투 중이며, 정렬은 까다로운 문제임. Inkscape를 사용해 본 경험이 있지만, 필요한 것을 생성하기 위해 XML 작성 쪽에 속함.
     * SVG를 직접 코딩하는 것이 일반적인 관행인지, 아니면 예를 들어 Figma에서 그림을 그리고 SVG 파일을 생성하는 것이 일반적인지 궁금함.
"
"https://news.hada.io/topic?id=12274","Ask GN: 파이썬 한글 검색","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Ask GN: 파이썬 한글 검색

   오타가 많아도 어느 잘 검색되는 파이썬 라이브러리나 방법론이 있을까요?

   rdbms 를 사용하고 풀텍스트가 대상이라면 postgresql에 대부분 초점을 맞추구요. 그보다 쉬운길을 걷는다면 mongodb
   어렵고 아찔한길을 걷는 다면 , 한글을 정준분해해서 해시비교하거나, 아스키값우로 치환해서 색인하는등의 방법이 있는데, 기본은 nfd나 nfc 관련 대응부터입니다

   상세한 답변 감사합니다.

   관련 내용에 대해 알아 봐야겠네요.

   문득 생각난 글이 있긴합니다. 다만 자바스크립트 라이브러리이고 오타보단 초성 검색에 효과적이라는 점..?
   https://taegon.kim/archives/10671

   GeekNews에서 본적이 있는거네요.

   답변 감사합니다.
"
"https://news.hada.io/topic?id=12234","Windows 11, 리눅스상에서의 윈도우 게임 성능 테스트에서 더 느린것으로 나타나","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Windows 11, 리눅스상에서의 윈도우 게임 성능 테스트에서 더 느린것으로 나타나

     * Valve의 Proton을 이용해서 윈도우용 게임 5종을 리눅스에서 실행해서 윈도우와 성능 비교 테스트 수행
          + 사이버펑크 2077, Forspoken, 라쳇 & 클랭크, 스타필드, Talos Principle II 등
     * Arch Linux, Pop!_OS, Nobara Linux(개인이 관리하는 Fedora 기반 배포본) 등에서 테스트했는데 리눅스가 성능이 더 뛰어난 것으로 결과가 나옴
          + FPS의 경우 최고 6% 정도 빠르고, 대부분 약 1~5% 정도 리눅스가 빠름
     * 윈도우가 백그라운드에서 더 많은 작업을 수행하고 있기 때문인 것으로 판단
     * Talos Principle II 의 경우 Nobara Linux 에서 71.5 FPS, 윈도우 11은 65.1 FPS

   뭔가 스팀 OS 지원을 더 늘리려는 느낌이 드네요

   맥 머신에 네이티브로 리눅스를 깔고 여기서 게임을 돌릴 수도 있겠네요

   이미 맥에서 게임 포팅 툴킷으로 비슷한 효과를 얻을 수 있으며
   아사히 리눅스가 아직 게임을 자유자재로 구동할 수 있는 수준까지는 아닌 걸로 알고 있습니다.

   그리고 아키텍처가 달라서 변환레이어 (로제타, box86)에서 발생하는 성능 손실이 상당합니다.

   Vm 말고 네이티브로요...

   맥이 일단 arm계열이라 x86 게임을 네이티브로 돌릴수가 없어요

   아.. 제가 너무 시대에 뒤떨어졌네요
   전 아직 인텔 맥을 쓰고있어서 ㅜㅜ

   큰 수치 차이는 아닙니다만, 원래 빠른 리눅스 성능에 빠른 호환레이어가 붙고, 쓸데없는 백그라운드작업이 없으니 이런 결과도 나오는군요.
   밸브가 놀라운 일을 하고 있다고 생각합니다. 점점 윈도우 점유율을 줄이는 건 게임쪽이 될 듯
"
"https://news.hada.io/topic?id=12228","공통 음성 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                공통 음성 기술

모질라 커먼 보이스 프로젝트 소개

     * 모질라 커먼 보이스는 기계가 실제 사람들이 어떻게 말하는지를 배울 수 있도록 돕는 프로젝트임.
     * 음성 기술을 사용 가능하게 만들기 위해 개발자들은 방대한 양의 음성 데이터가 필요함.
     * 대부분의 데이터는 대기업에 의해 사용되며 대다수 사람들에게는 접근할 수 없어 혁신을 저해한다고 생각함.

음성 데이터 기록 및 검증 현황

     * 현재까지 29,000시간의 음성이 기록되었으며, 그 중 18,000시간이 검증됨.

다양한 언어 지원

     * 커먼 보이스 프로젝트는 전 세계 다양한 언어를 지원하며, 사용자들은 자신의 언어로 기여할 수 있음.

고품질 공개 데이터셋 구축 지원

     * 프로필을 만들지 않아도 기여할 수 있지만, 익명의 인구통계 데이터를 제공하여 제출된 데이터를 풍부하게 만들 수 있음.
     * 프로필 정보는 음성 인식의 정확성을 훈련하는 데 사용되는 오디오 데이터의 질을 향상시킴.
     * 사용자는 여러 언어에 걸쳐 자신의 진행 상황과 지표를 추적할 수 있음.
     * 전 세계 다른 기여자들과 진행 상황을 비교할 수 있음.
     * 개인 및 프로젝트 목표에 대한 진행 상황을 확인할 수 있음.
     * 원한다면 프로젝트 업데이트와 새로운 정보에 대한 이메일 목록에 선택적으로 가입할 수 있음.

GN⁺의 의견

   이 기사에서 가장 중요한 것은 모질라가 음성 인식 기술을 개발하고자 하는 개발자들에게 필요한 대규모 음성 데이터를 제공하기 위해 커먼 보이스 프로젝트를 시작했다는 점입니다. 이 프로젝트는 기술 혁신을 촉진하고자 하는 모질라의 노력을 보여주며, 전 세계 다양한 언어를 지원함으로써 많은 사람들이 기술 발전에 기여할 수 있는 기회를 제공합니다. 이는 기술의 민주화를 추구하는 모질라의 철학을 반영하며, 많은 사람들에게 흥미롭고 매력적인 이니셔티브가 될 것입니다.

        Hacker News 의견

     *
          + FF의 TTS는 사용하기 쉬운 텍스트-음성 변환 시스템을 원하는 사람들에게 중요한 프로젝트임. 브라우저에 내장되어 있어서 콘솔에서 간단한 코드를 실행하여 다양한 TTS 예제를 들을 수 있음. 일부 브라우저는 오프라인으로도 가능하지만 다른 브라우저는 클라우드 기반 TTS 시스템을 사용함.
     *
          + Common Voice Android는 프로젝트에 기여하고 싶은 사람들에게 유용한 앱임. 사용자는 자신이 구사하는 언어로 음성을 녹음하고 다른 사용자의 기여를 검증할 수 있음. 공식 웹사이트 버전보다 사용자 친화적인 디자인을 가지고 있음.
     *
          + 크라우드소싱 데이터셋은 OpenAI와 같은 회사들의 행위가 공정 이용에 해당하지 않는다고 법원이 결정할 경우, 기초 모델을 구축하는 유일한 방법이 될 수 있음. 이러한 시나리오가 발생할 가능성을 낮게 보지 않음.
     *
          + 이 데이터셋은 최근의 음성 모델들이 훈련된 것보다 훨씬 작지만, 자기 감독 학습보다는 지도 학습을 위한 것이며, 특정 언어에 대한 모델의 성능을 향상시키기 위한 미세 조정에 여전히 유용함.
     *
          + AI와 딥페이크 기술의 최근 사건들을 고려할 때, 이와 같은 프로젝트에 '내 목소리 기부'에 동의하기 전에 어떤 보증이 필요함. 프로젝트가 음성 인식을 위한 것인지, 생성을 위한 것인지 명확하지 않음.
     *
          + 모질라가 관련된 음성-텍스트 소프트웨어를 취소하거나 다른 회사로 이전한 적이 있었는지 궁금함. 아니면 그것은 다른 것이었을까?
     *
          + 리눅스 파이어폭스의 리더 모드에서 텍스트-음성 변환 기능이 매우 나쁜 이유는 무엇인가? 스티븐 호킹의 텍스트-음성 변환보다 훨씬 나쁨.
     *
          + OpenAI가 진정으로 개방적이길 바랐지만, 이제는 마이크로소프트의 꼭두각시가 되어 기업 이익 목표를 추구함. 이와 HuggingFace와 같은 프로젝트는 보기 좋으며, HuggingFace가 GitHub처럼 마이크로소프트에 인수되지 않기를 바람.
     *
          + 여기 있는 사람들 중 '독서 목소리'와 평소 대화 목소리가 다른 사람이 얼마나 되는가? 대부분의 훈련 데이터가 '대본처럼' 들린다면 대화 모델을 훈련시킬 수 있는가?
     *
          + 관련된 뉴스 링크들이 제공되어 있으며, 이는 Mozilla Common Voice 프로젝트의 진행 상황과 음성 데이터셋의 확장에 대한 정보를 제공함.
"
"https://news.hada.io/topic?id=12284","인터넷상의 오아시스, Omg.lol","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          인터넷상의 오아시스, Omg.lol

인터넷의 오아시스, omg.lol

     * 2022년 가을, 필자는 트위터 사용을 늘림.
     * 트위터리픽과 트윗봇 macOS 앱을 번갈아 사용하며, 알고리즘 대신 시간 순서대로 트윗을 보는 것이 재미있음.
     * 그러나 2023년 1월 12일, 갑작스럽게 두 앱이 트위터 접근을 잃음.
     * 일시적 오류를 기대했으나, 엘론 머스크가 서드파티 API 접근을 예고 없이 차단한 것으로 밝혀짐.
     * 이후 트위터는 분열되고 많은 사람들이 다른 플랫폼으로 이동함.

마스토돈에 우연히 가입하다

     * 엘론이 서드파티 트위터 클라이언트를 차단하기 일주일 전, omg.lol이라는 서비스에 가입함.
     * omg.lol은 재미있고 기발한 서비스로, 마스토돈 인스턴스도 제공하지만 처음엔 주목하지 않음.
     * omg.lol의 마스토돈 인스턴스를 통해 쉽게 마스토돈에 접근할 수 있게 됨.
     * 유료 서비스이기 때문에 관리자에게 부담을 주지 않고 스팸 보호에도 도움이 됨.
     * 트위터가 망가진 후 마스토돈에 올인하여, 팔로워는 적지만 게시물 참여도는 높아짐.

omg.lol에서 제공하는 멋진 기능들

     * omg.lol은 서브도메인을 제공하며, 이메일 포워딩, 웹 페이지, DNS 관리, Now 페이지, Statuslog, 웹로그, Pastebin, 이미지 호스팅, PURLs, Switchboard, 공개 키 저장소, 소유 증명 서비스, API 접근 등 다양한 기능을 포함함.
     * omg.lol은 지속적으로 서비스를 확장하고 개선하고 있어, 제공되는 기능 목록은 빠르게 변할 수 있음.

멋진 커뮤니티

     * omg.lol에 가입하면 친절하고 흥미로운 사람들로 구성된 커뮤니티의 일원이 됨.
     * 마스토돈이 아니더라도 IRC와 디스코드를 연결하는 채팅 서비스를 통해 다른 회원들과 소통 가능함.

Adam의 힘을 활용하다

     * omg.lol의 창시자이자 건축가인 Adam Newbold는 커뮤니티에서 매우 활동적임.
     * Adam은 피드백에 귀 기울이고, 긍정적인 에너지를 가지고 있으며, 다양한 창의적인 프로젝트를 진행 중임.

작은 웹

     * 개인 웹사이트, 쿠키 커터 마케팅 기계가 아닌 블로그, 하이퍼텍스트 기묘함 등을 포함한 다른 종류의 인터넷을 즐김.
     * 개인 프로젝트가 많으며, 이러한 인터넷은 구글의 첫 몇 페이지의 광고가 아닌 것들을 탐색할 때 신선한 공기와 같음.
     * 개인 웹사이트를 만드는 것은 기업 소셜 미디어 프로필보다 더 보람참.
     * 웹사이트 제작에 도움이 되는 서비스, 도구, 튜토리얼을 제공함.

GN⁺의 의견

     * 이 글에서 가장 중요한 것은 인터넷 커뮤니티와 개인 웹사이트의 가치를 재발견하는 경험임.
     * omg.lol은 개인적이고 창의적인 온라인 활동을 장려하며, 이는 현대의 중앙집중화된 소셜 미디어 플랫폼과 대조를 이룸.
     * 이 글은 개인의 온라인 표현과 커뮤니티 구축에 대한 새로운 관점을 제공하며, 기술에 관심 있는 사람들에게 흥미로운 대안을 소개함.

        Hacker News 의견

     * omg.lol의 문제점
          + omg.lol 도메인에 대한 Wayback Machine 아카이브가 불가능하므로, 해당 인터넷 부분이 미래에 보존되지 않을까 우려됨.
     * 소규모 커뮤니티와 ""올드 웹"" 스타일의 상호작용
          + 소규모 커뮤니티와 올드 웹 스타일의 상호작용은 매력적이나, 발견 가능성에 문제가 있음. 사람들을 어떻게 찾고 팔로우할 수 있는지, RSS를 여전히 사용하는지, 아니면 Mastodon/ActivityPub에 의존하는지 등이 불분명함.
     * omg.lol 사용 경험
          + 약 1년간 omg.lol을 사용해온 사용자로서, 블로그 포스트를 작성하고 친구들과 웹사이트를 공유하던 과거로 돌아간 듯한 단순함과 즐거움을 느낌.
     * omg.lol에 대한 긍정적인 인상
          + omg.lol을 오아시스로 비유하며, 이 글이 상쾌하고 개인적인 포스트로서 긍정적인 인상을 줌.
     * 웹의 창의성
          + 웹 페이지, DNS, 이메일 포워딩, 개인 도메인 등을 통해 해커들이 창의적으로 웹의 다음 세대 모습을 탐색하고 있음을 보여줌. 상업주의와 폐쇄적 정원에 빠지지 않기를 바람.
     * Github 페이지와의 비교
          + Github 페이지와 유사하지만 더 사회적인 측면이 강조된 것 같음. Github가 이 방향으로 나아갈 것으로 예상했지만, Github가 사회적 요소를 배제한 것은 현명한 결정이었을 수 있음.
     * omg.lol에 대한 호응
          + 개인적으로는 omg.lol이 적합한지 확신할 수 없지만, 이를 좋아할 많은 사람들이 있을 것으로 생각됨. 기존 Mastodon 인스턴스에서 계정을 만드는 온보딩 도구가 필요하다는 의견 제시.
     * 구독 기반 소셜 미디어 모델에 대한 의문
          + CDN, 대역폭, 비디오/이미지 저장소의 비용 때문에 구독 기반 소셜 미디어 모델로의 전환은 어려울 것으로 예상됨. 소셜 미디어에 모두가 참여하는 것이 목적인지에 대한 질문 제기.
     * 웹 디자인 자료에 대한 관심
          + 페이지 하단에 링크된 ""웹 디자인 in 4 min""이 매우 흥미로움.
     * PHP에 대한 보안 우려
          + PHP는 오랫동안 보안에 취약한 기술로 인식되어 왔으나, 2023년 현재 이러한 우려가 여전히 합리적인지에 대한 의문 제기.
"
"https://news.hada.io/topic?id=12334","HN에 물어보세요: 자신의 사용을 위해 만든 앱들은 무엇인가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  HN에 물어보세요: 자신의 사용을 위해 만든 앱들은 무엇인가요?

CLI, GUI, 웹, 모바일 등의 사용자 인터페이스에 대한 관심

     * 사용자 인터페이스는 커맨드 라인 인터페이스(CLI), 그래픽 사용자 인터페이스(GUI), 웹, 모바일 등 다양한 형태가 존재함.
     * 이러한 인터페이스들은 사용자와 컴퓨터 시스템 간의 상호작용을 가능하게 하며, 각각의 특성과 사용 환경에 따라 선택됨.
     * 사용자의 관심과 필요에 따라 적절한 인터페이스를 선택하는 것이 중요함.

   GN⁺의 의견:
     * 사용자 인터페이스는 기술의 접근성을 결정하는 중요한 요소로, 사용자 경험(UX)을 향상시키는 데 핵심적인 역할을 함.
     * CLI는 전문가 사용자에게 강력한 제어를 제공하는 반면, GUI는 직관적인 사용이 가능하여 일반 사용자에게 친숙함.
     * 웹과 모바일 인터페이스는 접근성과 편의성을 제공하여 현대 생활에서 빠르게 확산되고 있으며, 이는 기술의 민주화에 기여함.

        Hacker News 의견

     * 고양이 입양 경험
          + 한 커플이 battersea.org.uk에서 입양하려 했으나 웹사이트 업데이트가 늦어 적합한 고양이를 놓침.
          + 웹사이트의 내부 JSON API를 이용해 Elixir 앱을 만들어 고양이 데이터를 실시간으로 받아 트위터로 알림을 받음.
          + 이 방법으로 ""Fluff""라는 검은 고양이를 빠르게 발견하고 입양에 성공함.
     * 개인 게임 개발 경험
          + 개발자는 자신만을 위한 게임을 개발하며, 다양한 게임과 앱을 만듦.
          + 2단계 인증 코드를 QR 코드로 암호화하여 사진 스트림에 저장하는 앱 등을 개발함.
     * 개인용 도구에서 공개 앱으로
          + 색맹인 개발자가 자신의 필요에 맞춰 색상 인식 도구를 만들었고, 이후 Pantone 라이선스를 받아 완성된 앱으로 발전시킴.
          + 색맹을 위한 CBVision, 호흡을 돕는 Unwind, 디지털 눈 피로를 줄이는 LookAway 등의 앱을 개발함.
     * 독일어 Umlauts 입력 도구
          + QWERTY 키보드를 사용하면서 독일어 Umlauts(ä, ö, ü, ß)를 쉽게 입력할 수 있는 도구를 개발함.
          + 이 도구는 대체 철자를 사용하여 원하는 텍스트를 독일어로 변환함.
     * 팟캐스트 광고 차단기
          + 미국 외 지역에 거주하는 개발자가 미국 팟캐스트의 반복되는 광고를 차단하기 위해 앱을 만듦.
          + XML 피드를 가져와 오디오 지문 인식 라이브러리를 사용하여 광고를 식별하고 제거함.
     * 다양한 개인 프로젝트
          + 간단한 스프레드시트와 JavaScript REPL 결합 앱, Lisp 기반의 CAD 앱, 우주 정거장 건설 게임, 파일 전송 도구, 웹 기반 성경 독서 앱 등을 개발함.
     * 교육적 웹사이트 및 게임
          + 인기 있는 비픽션 책을 요약하여 기억에 도움을 주는 웹사이트, 사용자 생성 미디어 데이터베이스, 간결한 세계 뉴스 제공 사이트, Wordle에서 영감을 받은 단어 추측 게임을 만듦.
     * 디지털 기록 검색에 대한 집착
          + 방문한 웹 페이지의 전문을 검색할 수 있는 크롬 확장 프로그램, 모든 브라우저의 검색 기록을 수집하는 도구, ChatGPT UI와 전문 검색 기능을 결합한 앱을 개발함.
     * 맥 OS용 진행 상태 표시 앱
          + 시간 인식을 돕는 메뉴 바 앱으로, 진행 상태를 시각적으로 표시하고, 작업을 비디오 캡처하는 기능을 포함함.
     * 트리 기반 할 일 관리 앱
          + 개발자는 자신의 일상을 관리하기 위해 트리 기반의 할 일 앱을 만들고, 이를 통해 다양한 프로그래밍 기술을 배움.
"
"https://news.hada.io/topic?id=12276","X(트위터), ChatGPT 경쟁제품인 Grok을 X 프리미엄 구독자 대상으로 배포 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           X(트위터), ChatGPT 경쟁제품인 Grok을 X 프리미엄 구독자 대상으로 배포 시작

     * 미국내 X Premium Plus (월 $16) 구독자 대상으로 배포 시작
     * Grok은 ChatGPT와 유사한 지식 기반을 바탕으로 대화식으로 질문에 답변함
          + ""약간의 재치""와 ""반항아(rebellious)""적인 성향을 가지고 있다고 알려짐
     * 웹, iOS 및 Android의 X 사이드 메뉴에서 접근 가능
     * Grok은 웹의 데이터(2023년 3분기까지)와 인간 어시스턴트의 피드백을 바탕으로 학습된 Grok-1이라는 생성 모델 기반
     * 다른 챗봇과 달리 Grok은 X에 게시된 게시물의 실시간 데이터를 응답에 통합할 수 있으므로 이론적으로는 최신 정보로 질문에 답변할 수 있음
          + ""오늘 AI에서 무슨 일이 일어나고 있나요?""와 같은 질문을 받으면 Bard나 ChatGPT와 같은 챗봇은 학습 데이터와 웹 액세스 필터의 한계를 반영하는 모호하고 오래된 답변을 제공
          + 반면에 Grok은 최근의 헤드라인에서 답변을 조합함. 물론 아직 소스 선택 방식이나 오답의 빈도는 명확하지 않음
"
"https://news.hada.io/topic?id=12261","구매가 소유가 아니라면, 해적행위도 도둑질이 아니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구매가 소유가 아니라면, 해적행위도 도둑질이 아니다

""구매가 소유가 아니라면, 해적행위도 도둑질이 아니다""

     * 20년 전, Cory Doctorow는 _Wired_의 편집장 Chris Anderson과 DRM(Digital Rights Management)이 적용된 디지털 기기에 대한 _Wired_의 긍정적인 리뷰에 대해 공개적으로 실망감을 표현함.
     * Doctorow는 _Wired_가 리뷰에서 제품의 기능을 추천하지만, 제조업체가 언제든지 기능을 변경하거나 제거할 수 있다는 점을 지적하며, 이러한 사실을 소비자에게 명확히 알려야 한다고 주장함.
     * HP와 같은 회사들이 인터넷에 연결된 잉크젯 프린터를 통해 ""보안 업데이트""를 통해 소비자가 구매한 제3자 잉크를 거부하도록 프린터를 변경하는 사례를 들어 DRM의 문제를 설명함.

""구매가 소유가 아니라면, 해적행위도 도둑질이 아니다""의 의미

     * 기업들은 이미 지불한 제품의 기능, 가격, 사용 가능성을 변경하는 유혹에 빠지기 쉬움.
     * DRM이 적용된 제품을 역공학하는 것은 법적으로 중범죄가 될 수 있으며, 이는 사용자의 수정을 범죄화함.
     * 제품의 수리권을 둘러싼 문제의 핵심은 기술이 아닌 법적 장벽에 있음.

외부 및 내부 압력에 의한 제품의 퇴화

     * 기술 회사가 원격으로 기능을 비가역적으로 다운그레이드할 수 있는 제품을 설계하면 외부 및 내부 당사자로부터 이러한 다운그레이드를 요구하도록 유도함.
     * 예를 들어, Adobe는 Photoshop에서 Pantone 색상을 사용할 수 있는 계약이 종료되어 사용자들이 자신의 작업물을 보기 위해 추가 요금을 지불해야 한다고 발표함.
     * 소니와 같은 회사들이 원격으로 기능을 비가역적으로 다운그레이드할 수 있는 기능을 설계함으로써, 예를 들어 Warner TV 쇼를 구매한 Playstation 사용자들에게 구매한 비디오가 영구적으로 삭제될 것이라는 메시지를 보냄.

GN⁺의 의견

   이 글에서 가장 중요한 것은 기술 제품의 소유권과 관련된 현대적 문제에 대한 인식의 중요성임. DRM과 같은 기술이 소비자의 권리를 제한하고, 기업이 이미 판매한 제품의 기능을 변경할 수 있는 권한을 가짐으로써, 소비자의 신뢰와 소유권에 대한 개념을 훼손한다는 점이 흥미롭다. 이러한 문제는 소비자들이 기술 제품을 구매할 때 고려해야 할 중요한 요소이며, 기술과 법률의 상호작용에 대한 더 깊은 이해를 요구한다.

        Hacker News 의견

     * 디지털 콘텐츠의 소유권 문제에 대한 우려

     디지털 콘텐츠 소유권에 대한 법적 규제 필요성에 동의함. 저작권자의 권리를 보호하지 못하면 해적들이 도덕적으로 정당화될 수 있음.
     * 디지털 콘텐츠 접근성의 문제 경험담

     8년 전에 구매한 오디오북이 라이브러리에서 사라짐. 다시 구매할 수도 없는 상황에 직면함. 예술 작품을 즐기고 싶을 뿐인데, 문제는 작가가 아닌 이윤을 추구하는 유통업자들에게 있음.
     * 사회 계약의 파괴와 불공정한 영향력 행사

     사회 계약이 깨진 현실에 해적질이 만연함을 이해함. 일부 기업이나 사람들이 더 많은 영향력을 행사하기 위해 미래를 고려하지 않고 단기적인 이익을 추구함.
     * 기업 운영 방식에 대한 비판적 견해

     기업이 고객과의 약속을 자주 변경하는 경영 방식에 대한 비판적 견해를 표현함.
     * 저작권 침해와 도난의 구분

     저작권 침해는 도난과 다르며, 저작권 로비가 과장된 주장으로 자신들의 입장을 약화시킴.
     * 소비자 경험과 기업의 제품 전략 비판

     과거에는 기업들이 가격 경쟁과 기능 우위를 통해 경쟁했으나, 현재는 자사 제품 간의 경쟁과 소비자에게 광고를 강요하는 전략을 사용함.
     * 디지털 콘텐츠 소비에 대한 비판적 시각

     디지털 콘텐츠 구매가 실제로는 소유권을 제공하지 않는 현실에 대한 비판. 이는 예상 가능하고 불가피한 결과임.
     * 소비자 보호를 위한 제안

     소비자에게 명확한 정보를 제공해야 함. ""구매""라는 용어는 실제로 영구적이고 철회할 수 없는 사용권을 의미할 때만 사용해야 함.
     * 지불과 소유권의 차이에 대한 설명

     지불은 소유권을 의미하지 않으며, 저작권 침해와 도난은 서로 다른 개념임.
     * 거래의 합법성과 도덕성에 대한 논의

     양 당사자의 동의가 필요한 거래에서 판매자가 소비자를 속이는 경우가 있음. 불법적인 사용에 대한 동의 없이는 거래가 합법적이지 않을 수 있음.
     * 저작권 침해와 윤리적 정당성에 대한 철학적 고찰

     저작권 침해가 항상 비윤리적인 것은 아니며, 때로는 저작권 침해가 도덕적으로 정당화될 수 있음.
"
"https://news.hada.io/topic?id=12279","리눅스용 앱 개발","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               리눅스용 앱 개발

리눅스 애플리케이션 제작의 중요성

     * 리눅스 사용자들은 새로운 소프트웨어에 대한 수요가 높음.
     * 리눅스 앱 스토어와 저장소는 독점적인 대응물에 비해 애플리케이션의 수가 부족함.
     * 기술 애호가들은 리눅스용 새 앱을 만드는 데 열정과 창의력을 발휘하도록 권장됨.

리눅스 배포판 대신 애플리케이션을 만들어야 하는 이유

     * 개인적으로 필요한 앱 아이디어가 있다면 다른 사람들도 비슷한 욕구를 가질 수 있음.
     * 새로운 애플리케이션은 리눅스에서 새로운 개발자를 영감을 줄 수 있음.
     * 애플리케이션 개발은 창의적인 활동이며, 프로젝트 완성 시 얻는 성취감은 매우 보람참.
     * 애플리케이션 제작은 커뮤니티 형성을 촉진하며, 리눅스 커뮤니티는 개발자의 성공을 돕고자 함.
     * 애플리케이션 개발 기술은 매우 탐낼 만한 기술이며, 무료 교육 자료를 통해 배울 수 있음.
     * 인기 있는 유료 애플리케이션과 서비스를 구축하여 수입원을 창출할 수 있음.

리눅스 배포판을 모두 대상으로 하기

     * 리눅스는 매우 다양한 대상으로, 수백 개의 배포판이 있으나, 일단 출시되면 애플리케이션은 일반적으로 어디서나 작동함.
     * 소프트웨어 패키징 및 배포 시스템이 잘 문서화되어 있어 개발자가 사용자에게 애플리케이션을 전달할 수 있음.

시작하기

     * GNOME 프로젝트는 GNOME Shell 데스크톱을 구축하고 Gjs 및 Gtk를 기반으로 개발을 가능하게 함.
     * KDE는 Plasma 데스크톱을 제작하고 애플리케이션을 만들기 위한 도구와 프레임워크를 제공함.
     * elementary OS는 개발자가 애플리케이션을 구축할 수 있는 데스크톱과 생태계를 구축함.
     * Electron은 JavaScript, HTML, CSS를 사용하여 크로스플랫폼 데스크톱 앱을 만들 수 있게 함.
     * Ubuntu Touch는 다양한 기기에서 실행되도록 설계된 오픈 소스 운영 체제임.

개발자 의견

     * 리눅스 앱 생태계를 번성시켜 리눅스를 대중에게 보급해야 함.
     * 리눅스를 원하는 운영 체제로 만들기 위해 훌륭한 앱이 필요함.
     * 데스크톱 리눅스는 훌륭한 앱을 만들 뿐만 아니라 플랫폼 API를 형성하고 전반적인 방향을 영향을 줄 수 있는 독특한 기회를 제공함.

창작물 공유하기

     * AppCenter는 독립 개발자를 위한 오픈, 원하는 만큼 지불하는 앱 스토어 및 빌드 서비스임.
     * AppImage는 모든 주요 리눅스 배포판에서 실행할 수 있는 데스크톱 리눅스 애플리케이션을 배포함.
     * Flatpak은 리눅스 데스크톱 애플리케이션을 배포하기 위한 프레임워크임.
     * openSUSE Build Service는 openSUSE 배포판 개발 및 다른 배포판을 위한 패키지 제공을 위한 공개 인스턴스임.
     * Snapcraft는 스냅을 빌드하기 위한 강력하고 사용하기 쉬운 커맨드 라인 도구임.

GN⁺의 의견

   이 기사에서 가장 중요한 것은 리눅스 사용자들이 새로운 애플리케이션을 갈망하고 있으며, 기술 애호가들이 리눅스 배포판을 만드는 대신 애플리케이션을 만들도록 격려하는 것임. 이는 리눅스 생태계를 확장하고, 개발자 커뮤니티를 강화하며, 개인의 창의력을 발휘할 수 있는 기회를 제공함. 이 글은 리눅스에 대한 열정을 가진 사람들에게 흥미로울 것이며, 리눅스 앱 개발의 다양한 시작점과 자원을 제공함으로써 개발자들에게 매력적인 가이드를 제공함.

        Hacker News 의견

     * 리눅스에는 아직 안정적인 핵심 프레임워크 세트가 존재하지 않으며, 다른 플랫폼들은 더 많은 프레임워크를 기본적으로 제공하고, 덜 자주 변경됨.
     * 리눅스 패키지 이름 규칙이 일관성이 없어 혼란스러움. 예를 들어, 패키지 이름에 'dev', 'version' 또는 숫자가 뒤에 붙는 패턴이 명확하지 않음.
     * 새로운 소프트웨어 개발도 좋지만, 기존 프로젝트에 기여하거나 중단된 프로젝트를 부활시키는 것도 고려해야 함. 이를 위한 데이터베이스의 필요성 제기.
     * 크로스-OS 호환 앱 개발을 위한 도구 부족에 대한 불만이 있지만, Electron 외에도 Qt, Flutter, Kirigami와 같은 솔루션이 존재함.
     * 오픈소스 소프트웨어가 시장과 경쟁하지 않으며, 사용자 경험이 떨어지는 것을 당연하게 여기는 문제 제기. 오픈소스도 사용자로부터 위험에 노출되어야 함.
     * 오픈소스 노트 앱 개발자가 광고만으로 생계를 유지하기 어려워 프리미엄 기능 유료화를 시도했지만, 앱이 완전히 오픈소스이기 때문에 모두가 소스를 컴파일할 수 있음. 다음 앱은 폐쇄 소스로 출시할 계획이며, 리눅스 커뮤니티에 긍정적인 영향을 줄 것으로 기대함.
     * 리눅스 배포판을 만드는 대신 애플리케이션을 만들어야 한다는 주장에 대한 예시가 부족함.
     * 리눅스 배포판을 만드는 것을 중단하고 애플리케이션 개발에 집중하라는 의견에 대해, 사람들이 무엇을 해야 할지 지시하는 것을 듣지 말라는 반론.
     * 맥에서 리눅스로 전환한 사용자는 리눅스가 하드웨어와 주변기기 지원이 좋지만 앱 스토어가 미완성처럼 느껴짐. 우분투를 중심으로 작성된 소프트웨어가 많아 다른 배포판으로 전환하는 데 주저함.
     * 리눅스 사용자들이 지불하지 않는다는 인식 때문에 리눅스용 애플리케이션을 개발하는 것이 더 어렵다는 의견.
     * 리눅스 배포판을 만드는 것이 아니라 애플리케이션을 만들어야 한다는 의견에 동의함.
"
"https://news.hada.io/topic?id=12333","속삭임: 엔비디아 RTX 4090 대 M1 프로 MLX 비교","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   속삭임: 엔비디아 RTX 4090 대 M1 프로 MLX 비교

Nvidia RTX 4090 대비 Apple MLX 프레임워크 성능 비교

     * Apple이 Apple Silicon용 머신러닝 프레임워크를 출시함.
     * 이 프레임워크의 성능을 벤치마킹하기 위해 Whisper 예제 사용함.
     * Python 코드를 통해 오디오 파일을 대상으로 성능 측정을 진행함.

결과

     * 10분짜리 오디오 파일을 처리하는 데 M1 Pro는 216초, Nvidia 4090은 186초가 소요됨.
     * Nvidia 최적화 모델을 사용하면 8초만에 처리 가능함.
     * Macbook과 PC의 하드웨어 사양이 상세히 기술됨.

놀라운 속도의 Whisper

     * HackerNews에서 화제가 된 기사로, 사용자가 Nvidia 4090으로 8초만에 처리한 사례 공유함.
     * MacOS에서도 실험을 진행했으며, 결과는 MLX 버전보다 느림.

M2 Ultra / M3 Max 업데이트

     * M2 Ultra와 M3 Max에서 동일한 오디오 파일을 처리한 결과, M1보다 훨씬 빠르지만 두 GPU 간에는 비슷한 속도를 보임.

비교

     * 여러 요인에 의해 정확하지 않을 수 있지만 대략적인 성능 비교가 가능함.

전력 소비

     * PC와 Macbook의 전력 소비 차이를 측정함.
     * Nvidia 4090이 작동 중일 때와 대기 상태일 때의 PC 전력 소비 차이는 242W, M1 GPU 코어가 작동 중일 때와 대기 상태일 때의 Macbook 전력 소비 차이는 38W임.

왜 이런 테스트를 하는가?

     * https://podpodgogo.com에서 팟캐스트 검색 엔진을 운영하며, 수천 개의 에피소드를 전사하여 전문 검색 가능하게 하고 데이터 마이닝을 수행함.

   GN⁺의 의견:
     * 이 기사에서 가장 중요한 점은 Apple Silicon용 머신러닝 프레임워크의 성능이 Nvidia의 최신 소비자용 그래픽 카드와 비교했을 때 경쟁력이 있다는 것임.
     * 특히 노트북에서 이러한 성능을 낼 수 있다는 점이 매우 흥미롭고, 이는 머신러닝 작업에 있어서 휴대성과 성능 사이의 균형을 찾는 사용자들에게 매력적인 선택지가 될 수 있음.
     * 전력 소비 측면에서도 Macbook이 상대적으로 효율적이라는 점이 강조되며, 이는 환경적 지속 가능성과 비용 효율성을 중시하는 사용자들에게 중요한 정보가 될 수 있음.

        Hacker News 의견

     * OpenAI Whisper 저장소를 사용하는 것 같음. 진정한 비교를 위해서는 MLX를 4090에서 실행되는 faster-whisper나 insanely-fast-whisper와 비교해야 함.
          + 실제 사용 사례에서 faster whisper가 이전 세그먼트 텍스트를 포함할 때 품질이 더 좋다는 것을 발견함.
          + faster whisper는 OpenAI/whisper보다 대략 4-5배 빠르며, insanely-fast-whisper는 faster whisper보다 또 다시 3-4배 빠름.
          + 4090에서 실행된 Whisper가 매우 최적화되지 않았다면 이러한 결과는 의심스러움.
     * Apple MLX의 최신 릴리스를 활용하고 있으며, Apple 특화 최적화를 사용하는 코드임.
          + MLX가 Mac과 iOS에서 Swift 바인딩이 출시되면 주목을 받을 것으로 예상됨.
          + 현재 C++20 컴파일 문제가 있을 수 있음.
     * Whisper가 순차적인 특성과 정수 수학 때문에 선택되었는지, 다른 모델에도 이러한 결과가 적용되는지 의문.
          + MLX에서 아직 최적화되지 않은 연산이 있음.
          + CPU/GPU에 직접 연결된 매우 빠른 RAM의 장점과 이로 인한 지연 시간/공동 접근성 관점에서 인상적인 숫자임.
          + M3 Max 시스템의 비용이 4090의 약 2배임을 고려할 가치가 있음.
     * Mac M1에서 Whisper를 실행하는 것은 쉬우나 MLX를 기본적으로 사용하지 않음.
          + MLX를 사용하도록 설정하는 데 필요한 것을 파악하기 위해 몇 시간을 소비함.
          + GPU가 있는 VM을 빌려 몇 분 만에 Whisper를 시작함.
     * 어떤 것이 X 작업에 대해 최고의 선택인지에 대한 많은 논쟁이 있겠지만, 낮은 전력 소비에서 이러한 성능 수준을 제공하는 것이 매력적임.
     * Apple의 Vision Pro를 고려할 때, 노트북에서는 큰 의미가 없을 수 있지만 전력을 많이 소모하는 헤드셋에서는 큰 이점임.
     * 좋은 오픈 소스 필사 및 발화자 식별 앱이나 워크플로우에 대한 도움 요청.
          + 몇 가지를 살펴봤지만 잘 작동하지 않고 충돌함.
     * 대부분의 GPU에서 1시간 분량의 오디오를 1분 이내에 필사할 수 있는 Whisper 파생 저장소 사용 권장.
"
"https://news.hada.io/topic?id=12244",".lottie - 새로운 웹플레이어 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         .lottie - 새로운 웹플레이어 소개
"
"https://news.hada.io/topic?id=12309","유튜브, 사기 광고 삭제 거부","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            유튜브, 사기 광고 삭제 거부

YouTube의 스캠 광고 문제

     * YouTube에는 실제로 보이는 딥페이크 기술을 사용한 스캠 광고가 증가함.
     * 사용자가 스캠 광고를 신고해도 YouTube는 이를 내리지 않고, Google 정책에 위배되지 않는다고 답변함.
     * 스캠 광고가 계속 운영되는 것은 YouTube가 광고 수익을 중시하기 때문일 가능성이 있음.

사용자들의 경험과 의견

     * 다수의 사용자가 스캠 광고를 신고해도 YouTube가 조치를 취하지 않는 경험을 공유함.
     * 일부 사용자는 YouTube가 광고로부터 수익을 얻기 때문에 스캠 광고를 제대로 관리하지 않는다고 지적함.
     * YouTube가 스캠 광고를 허용하는 것에 대해 법적 조치가 필요하다는 의견도 있음.

GN⁺의 의견

     * YouTube 플랫폼에서 스캠 광고가 증가하는 현상은 사용자들의 신뢰를 저하시키고, 플랫폼의 안전성에 대한 우려를 증가시킴.
     * YouTube가 스캠 광고에 대한 신고에 적극적으로 대응하지 않는 것은 장기적으로 플랫폼의 명성에 부정적인 영향을 미칠 수 있음.
     * 이 문제는 사용자들이 광고 차단 툴을 사용하도록 유도하며, 이는 광고를 통해 수익을 얻는 콘텐츠 제작자들에게도 영향을 줄 수 있음.

   광고가 상품인 기업인데 광고의 품질을 전혀 신경쓰지 않고, 또 그걸 아무도 문제삼지 않는 아이러니.
   음식점에서 문제 있는 음식 팔면 영업 정지 시키던데.

        Hacker News 의견

     * 한 사용자는 캐나다에서 유명한 아이스하키 선수 웨인 그레츠키와 블루제이스 선수를 이용한 부동산 사기 광고를 신고했으나, 정책 위반으로 간주되지 않았다고 말함. 광고가 주요 수익원이기 때문에 플랫폼을 관리할 동기가 없다고 지적함.
     * 또 다른 사용자는 자신의 노부모가 스웨덴 TV 웹사이트 디자인을 모방한 암호화폐 사기 광고를 클릭한 것을 목격했다고 함. 이 사용자는 유튜브가 안전한 광고를 제공해야 한다고 주장함.
     * 트위터의 광고 감독이 실수로 효과적이라고 언급한 사용자가 있음. 사용자들이 오해의 소지가 있는 트윗을 신고할 수 있는 '커뮤니티 노트' 기능 덕분에 광고도 사실 확인이 가능하다고 함.
     * 인터넷 광고에 대한 규제가 필요하다고 주장하는 사용자가 있음. TV와 신문이 사기 광고를 막기 위해 규제를 받았던 것처럼, 인터넷도 비슷한 문제에 직면해 있다고 함.
     * 유튜브에서 가짜 의료 치료 광고를 자주 보고 신고했지만, 구글 정책을 위반하는 명백한 광고임에도 불구하고 내려지지 않았다고 불만을 표하는 사용자가 있음.
     * 광고 네트워크가 자신들의 서비스를 통해 이루어진 사기에 대해 민사적 책임을 져야 한다는 의견을 제시하는 사용자가 있음. 이렇게 하면 구글이 태도를 바꿀 것이라고 주장함.
     * 체코에서 잘 알려진 인물과 회사를 사칭하는 금융 사기 광고를 신고했지만, 유튜브 정책 위반으로 간주되지 않았다는 사용자의 경험담이 있음.
     * 구글 맵스와 같은 다른 구글 서비스에서도 사기 허용이 문제가 되고 있으며, 정책이나 법이 집행되지 않으면 의미가 없다고 지적하는 사용자가 있음.
     * 구글 광고 전반에 걸쳐 사기성 광고가 문제가 되고 있으며, 이를 해결하기 위해 제3자 광고 보안 회사를 고용한 경험을 공유하는 사용자가 있음.
     * 아마존이 광고 없는 콘텐츠를 가능하게 하는 방법을 보여주고 있으며, 아마존이나 넷플릭스가 유튜브의 경쟁자로 광고 없는 플랫폼을 출시할 수 있다는 의견을 제시하는 사용자가 있음.
"
"https://news.hada.io/topic?id=12264","JC, 인기 있는 커맨드라인 도구들의 출력을 JSON으로 변환","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   JC, 인기 있는 커맨드라인 도구들의 출력을 JSON으로 변환

JCJSON 변환기 요약

     * jc는 CLI 도구, 파일 타입, 일반 문자열의 출력을 JSON 형식으로 변환하여 스크립트에서 더 쉽게 파싱할 수 있게 함.
     * dig 명령어의 예시를 통해 JSON 형식으로 변환된 출력을 확인할 수 있으며, 이를 jq나 jello 같은 도구로 추가 처리 가능.
     * 파이썬 라이브러리로도 사용 가능하며, 이 경우 JSON 대신 파이썬 딕셔너리, 딕셔너리 리스트 또는 딕셔너리의 게으른 반복 가능 객체를 반환.

JCJSON 변환기 설치 방법

     * pip, OS 패키지 저장소, 바이너리 다운로드를 통해 설치 가능.
     * 다양한 리눅스 배포판, macOS, FreeBSD에서 사용 가능한 설치 명령어 제공.

JCJSON 변환기 사용 방법

     * STDIN에서 파이프된 입력을 받아 이전 명령어의 출력을 STDOUT으로 JSON 형식으로 출력.
     * ""매직"" 구문을 사용하여 명령어 앞에 jc를 붙여 변환하거나 /proc 파일 경로 앞에 사용 가능.
     * 다양한 파서 옵션과 슬라이스 기능을 통해 출력 포맷 조정 및 특정 라인 처리 가능.

JCJSON 변환기의 특징

     * 기본 및 원시 데이터 표현 제공, 스키마에 따라 알려진 숫자를 int/float JSON 값으로 변환.
     * --raw 옵션 또는 raw=True 파라미터를 사용하여 원시, 전처리된 JSON 접근 가능.
     * 스트리밍 파서를 통해 대량의 명령어 출력을 메모리 효율적으로 처리.

JCJSON 변환기의 중요성

     * 유닉스 철학을 21세기에 적용하려는 프로젝트의 동기와 사용 사례들을 블로그 포스트와 인터뷰에서 확인할 수 있음.
     * Bash 스크립팅, Ansible, Saltstack, Nornir, FortiSOAR 등 다양한 환경에서 명령어 출력 파싱에 유용.

JCJSON 변환기의 호환성

     * 일부 파서는 플랫폼에 구애받지 않고 작동하며, 플랫폼 특정 출력을 변환하는 파서는 호환성 경고 메시지를 생성할 수 있음.
     * 모든 파서 정보는 jc -ap를 실행하여 확인 가능.

JCJSON 변환기 기여 방법

     * 코드나 파서 추가/개선에 대한 기여 환영, jc/parsers/foo.py 또는 jc/parsers/foo_s.py를 템플릿으로 사용하여 풀 리퀘스트 제출 가능.

GN⁺의 의견

   이 글에서 가장 중요한 것은 jc가 다양한 명령어, 파일 타입, 문자열의 출력을 JSON으로 변환하여 프로그래밍적으로 처리할 수 있게 해준다는 점이다. 이는 개발자들이 데이터를 더 쉽게 다룰 수 있게 하며, 특히 유닉스와 리눅스 환경에서 스크립팅을 할 때 유용하다. 이 글이 흥미로운 이유는 jc가 소프트웨어 개발과 시스템 관리에서의 자동화와 효율성을 크게 향상시킬 수 있는 도구이기 때문이다.

        Hacker News 의견

     * FreeBSD에서 libxo 라이브러리를 사용하여 명령어 출력을 JSON 형식으로 변환하는 문제 해결
          + ls 명령어는 지원되었으나 제거된 사례 존재
          + 모든 유틸리티에서 지원되지 않음
          + PowerShell은 기본적으로 구조화된 출력 제공
          + Unix/Linux에서도 --json 플래그 표준화 필요성 제기
     * 유지보수의 어려움에 대한 우려 표현
          + 버전 관리, 명령어 플래그 변경 등 유지보수가 어려울 것으로 예상
          + --<CMD> 툴 사용법이 도움말/매뉴얼을 복잡하게 만들 수 있음
     * Nushell이라는 도구 소개
          + 쉘 자체로서 구조화된 데이터를 제공하는 접근 방식
     * CLI 도구들이 JSON 출력을 지원하는 것에 대한 긍정적인 평가
          + 실제로 JSON 형식이지만 복잡하거나 불필요한 경우가 많아 실용성에 의문
     * jc 도구의 사용법에 대한 의견
          + jc dig example.com이 dig example.com | jc --dig보다 나은 주 사용법이어야 함
     * PowerShell에서 모든 출력이 객체로 되어 있는 것에 대한 선호도 표현
          + Bash 스크립트 작성 시 해당 기능이 그리워짐
     * jc 도구 유지보수를 맡는 이에 대한 존경 표현
     * --json 옵션을 받아들이는 현대적인 유닉스 명령어 도구 목록에 대한 질문
          + 해당 정보를 저장소에 추가하는 것이 유용할 수 있음
     * 유닉스의 설계 결함에 대한 지적
          + 명령어 프로그램이 호출 프로그램에게 정수형 종료 코드만을 출력
          + GUI 프로그램이 명령어 프로그램을 호출할 때 제한적인 정보를 얻음
     * textfsm을 사용하지 않은 것에 대한 의외의 표현
          + 네트워크 장비의 CLI 출력을 파싱하는 데 textfsm이 널리 사용됨
"
"https://news.hada.io/topic?id=12262","W4 게임즈, Godot 엔진을 활용한 비디오 게임 개발을 위해 1500만 달러 조달","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            W4 게임즈, Godot 엔진을 활용한 비디오 게임 개발을 위해 1500만 달러 조달

W4 Games, Godot 엔진을 중심으로 한 비디오 게임 개발의 변곡점 추진을 위해 1500만 달러 조달

     * W4 Games는 OSS Capital과 Naval Ravikant(AngelList 창립자)를 포함한 투자자 그룹으로부터 시리즈 A 펀딩을 통해 1500만 달러를 조달함.
     * 비디오 게임 산업은 이미 강력한 성장률을 보이고 있으며, 인구 통계의 변화, 인터넷 접근성 확대, 신흥 기술의 등장, 비게임 산업의 채택 증가로 인해 수요가 급증할 것으로 예상됨.
     * Godot 엔진은 무료이며 오픈 소스 기술로, 개발자들이 2D 및 3D 게임을 만드는 데 도움을 주며, 이 엔진을 중심으로 한 생태계 구축에 전념하고 있음.

W4 Games의 성장과 Godot 엔진 생태계 지원 계획

     * W4 Games는 Godot 엔진의 오픈 소스 개발을 지원하고, Godot 게임을 위한 W4 콘솔과 W4 클라우드와 같은 제품 및 서비스를 구축하여 Godot의 확장을 촉진할 계획임.
     * 북미, 유럽, 아시아로의 국제 확장과 Godot 교육 프로그램 개발을 목표로 하고 있으며, 향후 18개월 동안 인력을 두 배 이상 확대할 예정임.

W4 Games 소개

     * W4 Games는 2021년에 설립된 아일랜드 스타트업으로, Godot 베테랑과 경험 많은 기업가들이 창립함.
     * 전통적으로 독점 솔루션에 의존해온 게임 산업에 상업적 오픈 소스 소프트웨어(COSS) 비즈니스 모델을 도입하여 혁신을 추구함.
     * 2021년 W4 Games는 OSS와 Lux Capital의 주도로 시드 투자 라운드를 마감하고, SISU Ventures와 Red Hat의 공동 창립자인 Bob Young의 참여를 받음.

GN⁺의 의견

     * 이 기사에서 가장 중요한 점은 W4 Games가 Godot 엔진을 중심으로 한 생태계 구축에 전념하며, 오픈 소스 기술을 통해 게임 개발의 새로운 지평을 열고자 하는 노력임.
     * 오픈 소스 소프트웨어의 성장과 게임 산업 내에서의 혁신적인 변화는 기술에 관심 있는 사람들에게 흥미로운 소식이며, 이는 개발자들에게 더 많은 자유와 유연성을 제공할 것으로 기대됨.

        Hacker News 의견

     * 축하의 말
          + Godot는 훌륭한 오픈 소스 소프트웨어이며, 이를 강화하는 모든 것이 시장 전체에 이득임.
     * 라이선스 변경에 대한 우려와 기대
          + 제3자 기여자 목록과 CLA(Contributor License Agreement) 부재를 고려할 때, Godot의 라이선스를 독점적인 것으로 변경할 가능성은 낮으며, 현재 Godot 팀이 그럴 의사가 없음을 시사함.
     * 투자 회수에 대한 벤처 캐피탈의 기대
          + 벤처 캐피탈이 어떻게 투자금과 그 이상의 수익을 기대하는지 명확하지 않으나, ""콘솔 지원""이 그 목적일 수도 있음을 인정하며, 업계에 대한 더 많은 정보를 원함.
     * Godot의 게임 개발 가능성
          + Godot가 단순한 게임에만 한정되었다고 생각했으나, 최근 Unity 라이선스 문제 이후 Godot로 복잡한 게임을 개발할 수 있는지에 대한 관심이 증가함.
     * Godot의 발전 속도에 대한 인상
          + Godot 팀이 프로젝트를 잘 이끌어가고 있으며, Blender와 Godot가 중소 규모 스튜디오의 주요 선택지가 될 수 있는 미래에 대한 기대감 표현.
     * Godot 엔진 학습 자료 추천
          + Godot 엔진에 대한 훌륭한 입문 자료로, 다른 엔진이나 게임 엔진의 기능에도 적용 가능한 지침 제공.
     * Godot의 장기적 발전에 대한 지지
          + Godot가 3D 모델링 분야의 Blender처럼 되기까지는 아직 갈 길이 멀지만, 모든 개선과 자금 지원이 환영받음.
     * Godot와 W4Games의 관계에 대한 혼란
          + W4Games가 Godot를 소유하지 않고, Godot 개발자를 대상으로 한 BaaS(Backend as a Service)를 구축하고 있으며, 이것이 소유권에 실질적인 차이를 만들지 않음을 FAQ를 통해 확인함.
     * Godot의 독립성 유지에 대한 희망
          + Godot가 시간이 지나도 자신의 정체성을 유지하기를 바라며, Unity가 처음에 독립 개발자들에게 인기 있었던 것처럼 Godot도 그러하기를 희망함.
     * 주요 오픈 소스 프로젝트의 잠재력에 대한 기대
          + Blender가 이미 그 잠재력을 발휘하고 있으며, Godot, OpenToonz, GIMP 등 다른 주요 오픈 소스 프로젝트도 결국 그 뒤를 따를 것으로 기대함.
     * Godot가 게임 개발 엔진의 Blender가 되기를 바라는 희망
          + Godot가 게임 개발 엔진 분야에서 Blender와 같은 위치에 오르기를 희망함.
     * Godot 사용 시 아트 작업의 어려움
          + Unity에서는 저렴한 가격으로 준비된 아트 자산을 구할 수 있었지만, Godot에서는 유사한 마켓플레이스를 알지 못해 아트 작업에 어려움을 겪음.
"
"https://news.hada.io/topic?id=12328","스트리밍 가능한 메모리 효율적인 라디언스 필드, SMERF","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    스트리밍 가능한 메모리 효율적인 라디언스 필드, SMERF

실시간 대규모 장면 탐색을 위한 스트리밍 가능한 메모리 효율적인 방사선 필드(SMERF)

     * 실시간 시점 합성 기술의 발전으로 거의 사진 같은 장면을 실시간으로 렌더링하는 것이 가능해짐.
     * 래스터화가 가능한 명시적 장면 표현과 레이 마칭에 기반한 신경 필드 간의 긴장 관계가 존재함.
     * SMERF는 대규모 장면에서 실시간 방식으로 최고의 정확도를 달성하는 뷰 합성 접근법을 소개함.

대규모 장면을 처리하기 위한 표현력 증대 방법

     * 대규모 다중 방 장면을 여러 독립적인 서브모델로 모델링하고, 렌더링 시 카메라 원점에 기반하여 서브모델을 선택함.
     * 복잡한 시점 의존적 효과를 모델링하기 위해 각 서브모델 내에서 그리드에 정렬된 연기된 MLP 파라미터를 추가로 인스턴스화함.
     * 각 서브모델이 전체 장면을 표현하지만, 고해상도로 모델링되는 것은 서브모델에 할당된 그리드 셀뿐임.

표현력 극대화를 위한 증류(distillation) 활용 방법

     * 이미지 품질을 증류를 통해 크게 향상시킬 수 있음을 보여줌.
     * 최신 오프라인 방사선 필드(Zip-NeRF)를 먼저 훈련시키고, 이 모델의 RGB 색상 예측을 자체 모델의 감독으로 사용함.
     * 선생님 모델의 체적 밀도 값을 최소화하여 선생님과 학생 간의 볼륨 렌더링 가중치의 차이를 최소화함.

GN⁺의 의견

     * SMERF는 대규모 장면에서 실시간으로 고품질의 뷰 합성을 가능하게 하는 혁신적인 기술임.
     * 이 기술은 웹 브라우저 내에서 6DOF 내비게이션을 가능하게 하고, 다양한 일반 소비자 기기에서 실시간 성능을 제공함.
     * SMERF의 접근 방식은 실시간 뷰 합성 분야에서 기존 기술을 능가하는 성능을 보여주며, 이는 가상 현실, 게임 개발, 온라인 부동산 투어 등 다양한 분야에 응용될 수 있는 흥미로운 발전임.

        Hacker News 의견

     * 베를린 위치의 화장실 벽에 있는 거울이 옆 방의 주방을 통해 볼 수 있음. 깊이 측정 알고리즘이 시차를 사용하고 거울이 창문처럼 혼란을 주어 이러한 현상이 발생하는 것으로 추정됨. 거울 뒷면이 주방에 흐릿한 영역을 만들지만, 그 흐릿함을 통해 양쪽 방을 볼 수 있음. 이 효과는 약간 으스스하게 느껴짐. 벽을 통과하는 유령 같은 느낌을 받음. 2년 된 s21fe에서도 인상적으로 잘 작동함.
     * 베를린 데모에서 공간을 탐험하면서 더 많은 이미지가 스트리밍되는 것이 매우 인상적임. TV 반사 효과도 매우 인상적임. 하지만 모든 이미지가 로드될 때까지 장면이 렌더링되지 않아 초기 이미지 약 40개가 모두 로드되는 데 시간이 오래 걸림. 이미지가 도착하는 대로 부분적으로 렌더링을 시작하는 것이 가능한지, 아니면 첫 번째 큰 렌더링을 하기 전에 모든 이미지를 기다려야 하는지 궁금함.
     * fulllivingroom 데모에 대한 몇 가지 질문이 있음. (FPS 모드 선호)
         1. 입력된 이미지는 몇 개인가?
         2. 이 모델을 계산하는 데 얼마나 걸리는가?
         3. 이 모델을 브라우저에서 모든 레벨 등으로 준비하는 데 얼마나 걸리는가?
         4. VR에서 이것을 시도해 본 적이 있는가?
     * 이 렌더링 기법과 Cyberpunk 2077에서 생성된 BD 장면 사이에 어떤 관련이 있는지 궁금함. 볼륨과 ""복셀""의 동작이 매우 비슷해 보임.
     * Two Minutes Paper를 통해 이 기술을 따라가고 있으며, 사용하는 것을 기대하고 있음. 할아버지가 2년 전에 돌아가셨는데, 데모에서 사용한 것처럼 사진을 찍어두었음. 감사함.
     * 캡처, 처리 및 탐색 가능한 3D 워크스루를 호스팅하는 오픈 소스 툴체인이 있는지 궁금함 (예: 오픈 소스 Matterport와 같은 것).
     * 3D 가우시안 스플래팅과 성능, 품질 또는 데이터 크기 측면에서 이 기술이 어떻게 비교되는지에 대한 정보가 매우 인상적임.
     * 이 기술들로부터 볼 수 있는 것은 매우 정확한 단일 탐색 가능한 3D 이미지임. 그러나 기능 및 객체 감지, 차단 및 추출에 대해서는 아직 아무것도 보지 못함. 희망적으로는 더 효율적이고 스트리밍 가능한 코덱이 분석에 더 쉽게 적용될 수 있는 구조를 필요로 함.
     * 소비자 VR에서 이 기술을 언제 볼 수 있을지 궁금함. 이미 있을 것으로 예상했지만, 계산 제약 때문에 아직 없는 것 같음. Quest 2/3에서 실행하기에 충분한 계산 제약을 해소하는지, 또는 양안 사용을 방해하는 다른 요소가 있는지 궁금함.
     * 저자에게 질문: 장면의 모델을 재구성하기 위해 최적화나 튜닝 방법을 사용하지 않는 기회가 있는지 궁금함. 장면의 뷰를 렌더링하는 효율적인 방법을 개선하고 있지만, 장면은 여전히 정적임. 장면을 재구성하는 데도 시간이 걸림. 비싼 재구성 비용 없이도 RF와 GS의 훌륭한 모습과 디테일을 달성할 수 있는 방법이 있는지, 이제 렌더링이 빠르게 이루어지는 새로운 표현으로 전통적인 CG 방법을 사용하여 장면을 탐욕스럽게 재구성할 수 있는 방법이 있는지 궁금함. 오해가 있다면 미리 사과하며, 여러분이 진행하는 작업에 대해 정말 감사함.
"
"https://news.hada.io/topic?id=12342","Microsoft, 2.7B로 작지만 강력한 Phi-2 언어 모델 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Microsoft, 2.7B로 작지만 강력한 Phi-2 언어 모델 공개

     * SLM: Small Language Model
     * 2.7B 모델임에도 최대 25배 큰 모델과 같거나 더 좋은 성능을 보임
          + Mistral 7B, Llama-7B/13B 성능을 능가
          + 코딩 및 수학같은 다단계 추론에서는 25배 큰 Llama-2-70B 모델보다도 뛰어남
          + Google Gemini Nano 2 보다 더 작지만, 동일하거나 더 뛰어난 성능을 발휘
     * GPT-4, Llama-2 같은 모델보다 적은 컴퓨팅 파워로도 텍스트 생성, 이미지 설명 같은 유사한 작업 수행 가능
     * 크기가 작기 때문에 기계적인 해석 가능성, 안전성 개선 또는 다양한 작업에 대한 파인튜닝 실험을 포함하여 연구자에게 이상적인 플레이그라운드임

   Weights는 여기 https://huggingface.co/microsoft/phi-2

        Hacker News 의견

     * GPT-3와 Phi-2의 파라미터 수 비교
          + GPT-3는 1740억 개의 파라미터를 가지고 있음.
          + Phi-2는 27억 개의 파라미터를 가지고 있어, GPT-3보다 약 65배 작음.
     * 훈련 데이터 양 비교
          + GPT-3는 3000억 개의 토큰으로 훈련됨.
          + Phi-2는 14000억 개의 토큰으로 훈련되어, GPT-3보다 약 5배 많은 데이터로 훈련됨.
     * 인간 언어 습득과 인공지능
          + 인간 아기가 언어를 배우는 데 약 3000만 개의 ""토큰-동등"" 학습 데이터가 필요함.
          + 이는 인간의 생물학적 구조가 언어 습득에 특화되어 있으며, 가능한 인간 언어의 가설 공간을 줄이는 강력한 ""가이드""나 제약을 가지고 있음을 시사함.
          + 언어 모델이 더 적은 데이터로 학습할 수 있는 유사한 구조를 찾을 수 있는지 궁금함.
     * Phi-2의 가중치 공개 여부
          + Phi-2의 가중치는 공개되었으나, Azure 스튜디오에 로그인해야만 다운로드할 수 있음.
          + Azure AI 스튜디오에서 Phi-2 페이지를 찾아 ""artifacts"" 탭을 클릭하면 다운로드 가능함.
     * Phi-2 훈련 비용
          + Phi-2는 96개의 A100 GPU에서 14일 동안 훈련됨.
          + 이는 훈련 비용이 약 3만 USD 정도임을 의미함.
          + LLM(Large Language Model) 훈련 비용이 자동차 구매 비용보다 저렴해지면, AI의 민주화에 크게 기여할 수 있음.
     * Phi-2의 연구용 제한
          + ""연구용으로만 사용""이라는 제한이 있음에도 불구하고, Phi-2의 성능은 다양한 기기에서의 로컬 사용 가능성을 높임.
          + 성능이 우수하다고 주장되어 미래가 밝고/무섭다는 의견이 있음.
     * 소형 모델 경쟁
          + 최근 소형 모델 분야에서 심각한 경쟁이 있음.
          + 이러한 소형 모델의 주요 목표는 휴대폰/노트북 등에 로컬로 배포되어 새로운 세대의 앱/사용자 인터페이스를 이끌어낼 수 있음.
     * Phi-2와 Mistral 7B의 성능 비교
          + 27억 크기의 Phi-2가 70억 크기의 Mistral 7B보다 더 나은 성능을 보임은 인상적임.
     * 웹사이트 접속 문제
          + 웹사이트에 접속할 수 없으나, 캐시된 버전을 통해 확인 가능함.
     * Phi-2의 배포 방식
          + Phi-1.5는 huggingface에 배포되었으나, Phi-2는 Azure AI 스튜디오에만 추가되어 개발자들이 가입하도록 유도함.
          + Microsoft가 huggingface와 같은 ML의 GitHub에 참여하지 않는 이유에 대한 의문이 있음.
     * Phi-2 모델의 다운로드 가능 여부
          + Phi-2 모델을 로컬로 다운로드할 수 있는지, 아니면 Azure에서만 사용 가능한지에 대한 질문이 있음.
"
"https://news.hada.io/topic?id=12319","현대적인 iOS 내비게이션 패턴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           현대적인 iOS 내비게이션 패턴

iOS 앱 구조를 위한 내비게이션 패턴

     * iOS 앱은 고정된 계층 구조를 가지며, 이로 인해 사용자는 내비게이션 옵션을 예측할 수 있음.
     * 내비게이션 패턴은 사용자가 현재 위치와 이전 위치를 인지하고, 어떻게 돌아갈지 이해하는 데 도움을 줌.

드릴다운 내비게이션

     * 드릴다운은 정보 트리 구조를 단계별로 탐색하는 패턴으로, 수평적 전환 애니메이션을 사용함.
     * 상태를 저장하지 않으며, 내비게이션 바는 현재 화면의 제목을 표시함.
     * 목록 행에 있는 공개 지시자는 계층 내 더 깊이 드릴다운할 수 있음을 나타냄.

플랫 내비게이션

     * 플랫 내비게이션은 계층을 루트 레벨에서 나누고 탭 바로 표시함.
     * 탭 바 아이템은 앱의 주요 기능을 중심으로 구성되며, 사용자의 기대와 앱에 대한 인지 모델을 형성함.
     * 탭 바는 모달 시트에 의해 일시적으로 가려지지 않는 한 앱 전체 화면에 항상 표시됨.

피라미드 패턴

     * 피라미드 패턴은 부모 화면으로 돌아가지 않고도 같은 계층 레벨의 형제 뷰 간에 빠르게 이동할 수 있게 함.
     * 수평 스와이프 제스처나 버튼을 사용하여 미디어 앱 내에서 형제 뷰 간 이동이 가능함.

허브 앤 스포크 패턴

     * 허브 앤 스포크 패턴은 계층의 최상위에 있는 서로 관련 없는 대규모 아이템 컬렉션에 적합함.
     * iOS 홈 화면은 허브로서 운영 체제의 신뢰할 수 있는 ""중립 상태""를 제공함.

오버레이 내비게이션

     * 오버레이는 사용자의 주의를 요구하며, 모달 오버레이는 사용자 작업이 필요함.
     * 고마찰 모달은 사용자의 결정을 필요로 하며, 특정 작업 완료에 집중함.
     * 저마찰 모달은 쉽게 해제될 수 있으며, 단일 작업 알림 대화상자는 가능한 피해야 함.

내장된 내비게이션

     * 내장된 내비게이션 패턴은 iOS의 엄격한 구조와 공간 모델에 특별한 주의를 요함.
     * 상태 변경은 계층 위치를 변경하지 않으며, 상태 변경은 계층이나 모달이 아닌 것을 확인해야 함.

단계별 내비게이션

     * 단계별 패턴은 가이드 투어, 설정 흐름, 온보딩 튜토리얼과 같은 일련의 화면을 선형 흐름으로 연결함.
     * 단계별 시퀀스는 모달 오버레이에 포함되어야 하며, 완료 또는 닫기 버튼으로 시퀀스를 마무리함.

콘텐츠 중심 내비게이션

     * 콘텐츠 중심 내비게이션은 하이퍼링크나 버튼을 통해 사용자를 어떤 다른 페이지나 뷰로 순간 이동시킴.
     * iOS 앱에서는 하이퍼텍스트, 몰입형 게임 또는 비선형 콘텐츠를 제외하고 이 패턴을 피해야 함.

GN⁺의 의견

     * 이 글은 iOS 앱 개발자들에게 매우 유용할 수 있으며, 사용자 경험을 향상시키는 데 중요한 내비게이션 패턴을 제공함.
     * 드릴다운, 플랫, 피라미드 등 다양한 내비게이션 패턴은 앱의 사용성과 접근성을 높이는 데 기여함.
     * 특히, 모달과 오버레이 내비게이션의 사용은 사용자의 작업 흐름에 중대한 영향을 미칠 수 있으므로, 개발자들은 이를 신중하게 고려해야 함.

   안녕하세요! 저도 이 글을 동료에게 공유하다가 알게 되었는데요. 네비게이션이 아니라 내비게이션이 한국어 맞춤법에 맞는 표준어라고 합니다. ㅎㅎ 영어를 발음한거라 사실 어떤 것이 맞다. 라고 하기 애매할 수도 있겠지만 많은 분들이 보는 곳이니 이왕이면 표준어에 맞게 쓰여지면 좋을 것 같아 슬쩍 댓글을 달아봅니다.

   이 글은 GPT-4가 요약을 한 내용인데요. GPT가 ""내비게이션""을 잘 쓰다가 가끔 ""네비게이션""도 혼용해서 쓰는듯 합니다. 수정해 두었습니다 ㅎㅎ
"
"https://news.hada.io/topic?id=12293","기계식 시계기계식 시계 (2022)

요약 제목: 기계식 시계의 원리와 구조

     * 현대 휴대용 장치의 세계에서 기계식 시계가 시간을 추적하는 가장 편리한 방법이었던 것은 불과 몇십 년 전의 일임.
     * 기계식 시계는 배터리나 전자 부품 없이 작동 가능함.
     * 이 글에서는 기계식 시계의 내부 메커니즘인 '무브먼트'의 작동 원리를 설명함.

기계식 시계의 동력원

     * 기계식 장치는 에너지를 저장하는 여러 방법을 가지고 있으며, 그 중 하나는 스프링을 사용하는 것임.
     * 기계식 시계는 일반적인 코일 스프링이 아닌 나선형 토션 스프링을 사용함.
     * 토션 스프링은 감았다가 풀리면서 회전 운동을 제공하며, 이는 시계 바늘을 회전시키는 데 유용함.

기어

     * 기어는 서로 다른 축 사이의 회전 속도를 변경하는 데 사용됨.
     * 기어의 이빨 수는 회전 속도에 영향을 미치며, 기어 열차를 통해 속도를 점진적으로 증가시킴.

탈출 기구(Escapement)

     * 탈출 기구는 에너지 저장된 메인스프링의 에너지를 제어하여 시계의 속도를 조절함.
     * 탈출 바퀴와 팔레트 포크로 구성되며, 팔레트 포크가 탈출 바퀴의 회전을 제어함.

밸런스

     * 밸런스는 시계의 정확한 시간 추적을 위한 요소로, 밸런스 휠과 밸런스 스프링으로 구성됨.
     * 밸런스 휠은 주기적으로 왕복 운동을 하며, 이 운동은 시계의 정확한 진동수를 유지함.

메인플레이트(Mainplate)

     * 메인플레이트는 시계 무브먼트의 주요 구조를 형성하며, 다양한 부품들이 이에 장착됨.
     * 루비 보석은 축이 회전하는 베어링 역할을 하며, 특수 오일을 사용하여 마찰을 줄임.

클릭(Click)

     * 클릭 메커니즘은 메인스프링이 자체적으로 풀리는 것을 방지함.
     * 클릭은 메인스프링을 감는 동작을 가능하게 하고, 자동으로 풀리는 것을 막아줌.

모션 웍스(Motion Works)

     * 시계의 초침, 분침, 시침을 제어하는 기어 세트로 구성됨.
     * 각 바늘은 정확한 속도로 회전하도록 설계되어 시간을 정확하게 표시함.

날짜 표시 기능

     * 날짜 표시 기능은 시계의 추가적인 기능으로, 현재 날짜를 표시함.
     * 날짜 변경 메커니즘은 시간과 날짜를 조정할 수 있도록 설계됨.

키리스 웍스(Keyless Works)

     * 키리스 웍스는 시계의 외부 조작 인터페이스인 크라운과 스템을 통해 시계를 감고 시간과 날짜를 조정함.
     * 이 메커니즘은 사용자가 시계의 기능을 쉽게 조작할 수 있도록 함.

GN⁺의 의견

   이 글에서 가장 중요한 것은 기계식 시계의 복잡하고 정교한 메커니즘이 어떻게 시간을 정확하게 추적하는지에 대한 설명임. 기계식 시계의 원리를 이해하는 것은 시간을 측정하는 고전적인 방법에 대한 존경과 기술적 호기심을 불러일으키며, 디지털 시대에도 여전히 매력적인 공학의 예술작품으로 남아있는 이유를 설명해줌.

        Hacker News 의견

     * 이 블로그와 Wristwatch Revival의 멋진 수리 비디오 덕분에 시계 수리라는 취미에 빠짐. 시계 수리는 인내심이 많이 필요하지만, 개별 부품으로 분해하고 청소한 후에 다시 조립하는 과정이 매우 만족스러움. 현재 프로젝트는 기계식 시계 제작 시도 중.
     * 기계식 시계의 개념은 시침만 있고, 메인스프링 배럴이 무브먼트 전체를 둘러싸며, 베젤을 돌려서 감는 방식. 시침은 내부 배럴에 직접 장착되어 12시간마다 한 바퀴 회전. 나머지 무브먼트는 내부 배럴의 회전 속도를 조절하는 역할. 시간 설정은 베젤을 반시계 방향으로 돌려서 무브먼트와 시침을 조정하는 방식. 정확도는 래칫의 위치에 따라 결정되며, 이 시계는 어차피 정확한 시간을 유지하지 않으므로 큰 문제가 되지 않음.
     * Seiko 5 기계식 시계를 소유하고 있으나, 정확도 유지에 대한 인내심이 부족함. 시계가 자주 자기화되어 시간이 빨라지거나, 자기화를 제거한 후에는 느려짐. 매일 조정해야 하며, 언제나 몇 분의 오차를 고려해야 함. 이전에는 NIST 원자 시계 신호를 사용하여 매일 자동 조정되는 솔라파워드 Casio를 착용했으나, 이후로는 기계식 시계로 돌아가지 않을 것임.
     * 기계식 시계와 스마트워치 사이에서 갈등. 손목에서의 알림 기능은 필요 없지만, Apple Watch의 활동 및 심박수 추적 기능을 즐김. Samsung Withings와 같은 스마트 기능이 있는 기계식 시계를 착용했지만, 정확한 심박수와 활동 측정에 의문. 30일 배터리 수명은 매력적. 경제적인 시작점으로 Vostok과 Seiko 브랜드를 추천함.
     * 복잡한 주제를 명확하고 아름답게 설명한 글에 감탄. 관련 다큐멘터리 'The Watchmaker's Apprentice'는 기계식 시계 제작에 대한 헌신을 보여줌.
     * 이 사이트의 인터랙티브 애니메이션에 오랫동안 감탄해옴. 비슷한 애니메이션을 만들기 위해 어떤 도구나 라이브러리를 사용할지 궁금함. 저자는 canvas API를 사용하여 수작업으로 만든 것으로 보임.
     * 이전에 매우 인기 있었던 원본 포스팅 링크 제공.
     * 스마트워치가 기계식 시계보다 훨씬 더 많은 기능을 제공하며, 대부분의 소비자에게 매력적임. 그러나 기계식 시계를 구매하는 것은 예술 형태이며, 특정 시계(예: Rolex)는 지위 상징임. 모든 종류의 시계에 끌리는 사람으로서 이 글을 매우 즐겁게 읽음. Omega Planet Ocean 시계를 벗고 밸런스 휠과 더블 배럴을 들여다봄.
     * 이 글은 아날로그 시계/시계 작동 방식에 대한 궁금증을 해결해줌. 기사를 읽은 후에는 멋진 시계를 원해서가 아니라 기계적 경이를 소유하고 싶어서 Seiko 5 오토매틱을 구입함.
     * 같은 형식의 다른 주제들에 대한 링크 제공: 자전거, 소리.
"
"https://news.hada.io/topic?id=12280","파이어폭스, 계속해서 속도 향상 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          파이어폭스, 계속해서 속도 향상 중

파이어폭스의 속도 향상

     * 웹 브라우징은 현대 생활의 중요한 부분이며, 경험의 질은 일상의 질에 직접적인 영향을 미침.
     * 모질라는 웹의 성능을 중요한 구성 요소로 보고 있으며, 온라인 경험을 개선하기 위해 파이어폭스의 속도를 높이는 데 주력함.
     * 지난 한 해 동안 파이어폭스의 속도가 크게 향상되었다는 사실을 보고하게 되어 매우 기쁨.

벤치마크에서의 개선

     * 브라우저 성능을 판단하는 한 방법은 업계 벤치마크를 사용하는 것임.
     * 특히 인기 있는 벤치마크인 Speedometer 2.1에서 측정 가능한 개선을 보임.
     * 2023년 1월 이후 파이어폭스의 Speedometer 점수가 50% 향상되어 사용자들에게 눈에 띄는 성능 개선을 제공함.

웹에서의 성능

     * 벤치마크가 중요하지만, 실제 사용자 경험을 모방하는 것에 불과하다는 점을 지적함.
     * 실제 사용자가 성능 개선을 체감하고 있는지 확인하는 것이 중요함.
     * 페이지 로딩 속도가 평균 15% 빨라진 것을 포함하여 성능 지표에서 개선이 관찰됨.
     * 벤치마크 점수의 개선이 실제 파이어폭스 사용자들에게 체감되고 있다는 것을 보는 것은 매우 만족스러움.
     * 기술적인 세부 사항에 대해 더 알고 싶다면 Mozilla Hacks의 최근 블로그 포스트를 확인하라고 권장함.
     * 파이어폭스 성능 팀에게 흥미진진한 한 해였으며, 앞으로도 개선 작업을 멈추지 않을 예정임.
     * Mozilla Hacks에서 향후 몇 주 안에 더 많은 기술적인 세부 사항을 공유할 예정임.

GN⁺의 의견

     * 이 기사에서 가장 중요한 것은 파이어폭스 브라우저의 성능이 크게 향상되었다는 점이며, 이는 사용자들이 더 빠르고 효율적인 웹 서핑 경험을 할 수 있게 해줌.
     * 사용자들이 실제로 체감할 수 있는 속도 개선이 이루어졌다는 점이 흥미롭고, 이는 기술 발전이 일상 생활에 긍정적인 영향을 미칠 수 있음을 보여줌.

   안드로이드 Firefox Nightly 사용중인데 최근에 체감될 정도로 많이 빨라졌더라구요

   확장 프로그램 몇 개 설치하면 앱 실행 후 첫 로딩이 정말 느렸었는데 이제 거의 불편하지 않아요

        Hacker News 의견

     * 파이어폭스의 안정성 향상 필요성

     사용자는 윈도우에서 파이어폭스를 며칠간 열어두면 멈추는 현상을 경험함. 모질라는 파이어폭스를 재시작하라고 제안하지만, 이로 인해 열려있는 탭들을 잃을 위험이 있음. 세션 복원 기능도 충돌 후 탭 복원이 불가능하여 불만족스러움. 이에 대한 대안으로 Brave 브라우저 사용 고려 중.
     * 파이어폭스의 경쟁 전략 문제

     ARC 브라우저는 작은 팀이 개발하지만 사용자 경험을 매끄럽게 만드는 데 집중함. 파이어폭스는 학계, 연구자, 저널리스트 등 전문가들의 작업을 용이하게 하는 기능을 추가하여 사용자 경험을 향상시킬 수 있음. 크롬보다 약간 느리더라도 작업 효율성을 높일 수 있다면 그것이 중요함.
     * 모바일 파이어폭스의 성능 문제

     구형 픽셀 4a 사용자는 파이어폭스에서 입력 시 종종 빈 화면이 나타나는 문제를 겪음. 앱을 재시작하거나 새 탭을 열어야 하는 불편함이 있으며, 이는 인터넷 문제가 아닌 것으로 보임.
     * 맥OS에서의 파이어폭스 사용성 문제

     맥OS에서의 텍스트 처리 방식, 단축어 무시 등이 사용자에게 거슬림. 이러한 작은 디테일들이 개선된다면 파이어폭스를 주 브라우저로 사용할 의향이 있음. 현재는 맥OS에서 잘 작동하는 사파리를 사용 중.
     * 파이어폭스의 속도에 대한 인식

     사용자는 파이어폭스의 속도가 문제가 되었던 적을 기억하지 못함. 소프트웨어의 반응 속도는 중요하지만, 인간이 느낄 수 있는 한계를 넘어서면 차이를 감지하기 어려움. 파이어폭스는 이미 ""빠름""이 중요한 지점을 넘어선 지 오래임.
     * 텔레메트리의 이점

     자유 소프트웨어 커뮤니티가 일반적으로 회의적인 텔레메트리의 이점을 인정함. 사용자는 파이어폭스의 텔레메트리 기능을 활성화하기로 결정함, 비록 민감한 데이터를 포함할 수 있다는 우려가 있지만.
     * 리눅스에서의 파이어폭스 성능 차이

     리눅스 배포판에 따라 파이어폭스의 성능이 크게 달라질 수 있음. 모질라는 기본 파이어폭스 바이너리에 공격적인 컴파일, 링크 시간, 프로파일 가이드 최적화를 사용하는 반면, 데비안 같은 배포판은 안전한 옵션으로 컴파일하고 최적화를 거의 활성화하지 않음.
     * 파이어폭스의 작은 불편함들

     파이어폭스를 전체 화면으로 사용할 때 스크롤 문제 등 작은 불편함들이 존재함. 크롬이나 사파리와 같은 다른 브라우저들은 예상대로 작동하지만 파이어폭스는 이러한 부분에서 사용자를 실망시킴.
     * 파이어폭스의 시장 위치

     모질라가 수백만 달러를 받고 있음에도 불구하고 파이어폭스가 크롬에 비해 명확한 선택이나 매우 가까운 두 번째 선택이 아닌 이유에 대한 의문 제기. 브라우저 개발이 수십억 달러 프로젝트가 되었거나 모질라가 경쟁할 자원이 부족한 것인지.
     * 맥OS에서의 파이어폭스 사용 문제

     맥OS 사용자는 파이어폭스에서 AppleScript와 같은 OS 수준의 스크립팅 기능을 제거한 모질라의 결정으로 인해 사용을 중단함. 맥OS에서 파이어폭스를 사용하는 것은 매우 번거로움. 맥OS의 텍스트 처리, 글꼴 렌더링, 시스템-와이드 맞춤법 검사기 미사용 등이 플랫폼에 대한 무관심으로 느껴짐.
"
"https://news.hada.io/topic?id=12238","23andMe, 구속적 중재를 강제하는 이용 약관 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    23andMe, 구속적 중재를 강제하는 이용 약관 업데이트

23andMe, 강제 중재 조항 업데이트로 사용자 권리 제한

     * 23andMe는 보안 침해 사건에 대응하여 강력한 보안 조치를 취하기보다는 법적 보호막을 선택함.
     * 사용자들은 분쟁 해결을 위해 법원이 아닌 중재를 받도록 하는 약관 변경에 직면함.
     * 중재에서는 제3자 중재인이 양측의 주장을 듣고 증거를 검토한 후 최종적이고 법적으로 집행 가능한 결정을 내림.

중재 조항의 주요 내용

     * 초기 분쟁 해결 기간: 23andMe 서비스에 문제가 있을 경우, 고객 지원팀에 연락하여 법적 절차 없이 문제를 신속하게 해결하려고 시도해야 함.
     * 법원 대신 중재: 문제가 60일 이내에 해결되지 않으면, 법원 소송 대신 중재 절차를 밟게 됨.
     * 중재인의 결정: 중재인의 결정은 최종적이며, 법을 따라야 하고 법원이 내릴 수 있는 어떤 판결도 내릴 수 있음.
     * 중재 예외 사항: 지적 재산 분쟁이나 소액 청구 등 일부 상황에서는 법원으로 갈 수 있음.
     * 집단 소송 금지: 다른 사람들과 함께 집단 소송이나 집단 중재를 제기할 수 없음.
     * 분리 가능성: 이 분쟁 해결 섹션의 어떤 부분이 법적으로 집행 불가능하더라도 나머지는 여전히 적용됨.

사용자 알림 및 약관 변경에 대한 선택권

     * 23andMe는 이메일을 통해 사용자에게 약관 변경 사항을 알리기 시작함.
     * 사용자는 이메일 수신 후 30일 이내에 새로운 약관에 동의하지 않을 권리가 있음.
     * 이메일에는 약관에서 명시된 주소와 다른 ""legal@23andme.com"" 주소가 포함되어 있으나, 강제 중재를 거부하려면 ""arbitrationoptout@23andme.com"" 주소로 이메일을 보내야 함.

중재의 문제점

     * 중재는 소비자에게 불리하며, 기업은 중재인 선정에서 정보 우위를 가지고 있음.
     * 중재인들은 기업 친화적인 결정을 내릴 경우 미래 사건에 선정될 가능성이 높아지는 것을 알고 있음.
     * 23andMe는 이러한 중재 조항을 통해 미래의 보안 침해 사건에 대한 보호를 강화하려고 함.

강제 중재 거부 방법 (이메일 템플릿)

     * 보안 침해로 영향을 받은 사용자는 강제 중재를 거부하기 위해 이메일 템플릿을 사용할 수 있음.
     * 이메일은 ""legal@23andme.com"", ""customercare@23andme.com"", ""arbitrationoptout@23andme.com"" 주소로 보내야 하며, 강제 중재 조항 변경에 동의하지 않음을 명시해야 함.
     * 거부 의사를 명확히 하고 추후 증거로 사용하기 위해 회신을 저장하고 거부가 확인되었음을 명시적으로 요청해야 함.

GN⁺의 의견

   이 기사에서 가장 중요한 것은 23andMe가 사용자의 권리를 제한하는 약관 변경을 시행하고 있으며, 이로 인해 사용자들이 법적 분쟁 해결 방식에 큰 변화를 경험하게 될 것이라는 점이다. 이러한 변경은 소비자에게 불리한 중재를 강제하고 집단 소송의 가능성을 차단하는 것으로, 사용자들이 자신의 권리를 보호하기 위해 적극적으로 대응해야 하는 상황을 만들어냈다. 이는 개인정보 보호와 소비자 권리에 대한 중요한 이슈를 다루고 있어 많은 사람들에게 흥미로울 것이다.

        Hacker News 의견

     * 서비스 약관(TOS)을 읽을수록 소프트웨어 서비스에 대한 ""공통 법""이 필요하다는 생각이 듦. 예를 들어, 정보 제공자, 소셜 네트워크, 실세계 인터페이스 등의 사전 정의된 카테고리와 클라이언트가 소셜 네트워크를 해킹하려 시도할 수 없거나 소셜 네트워크 소유자가 데이터를 제3자에게 재판매할 수 없는 등의 사전 설정된 규칙이 필요함. 현재 시스템은 기업들이 TOS에서 가능한 많은 법적 권리를 주장하도록 유도하며, 이는 법의 지배를 약화시키고 사용자들이 불리한 협상 위치에 놓이게 함.
     * 23andMe의 최신 약관 변경에 동의하지 않으며, 업데이트된 TOS에서 탈퇴하고자 하는 공식 요청 이메일 예시 제공.
     * 사용자의 확인이나 동의 없이 서비스 약관을 변경하는 것이 법적으로 유효하거나 집행 가능한지에 대한 의문 제기.
     * 보안 문제가 발생한 후 TOS를 변경하여 손해를 줄이려는 시도에 대한 의문 제기. 좋은 변호사가 이를 도전할 수 있을 것이라는 의견.
     * 데이터 유출로 인한 분쟁이 발생할 것을 예상하고, 유사한 주장이 여러 건 제기될 경우 중재 절차를 간소화하려는 의도를 가진 것으로 보임.
     * TOS에 동의하지 않은 친척들이 데이터 유출로 인해 법적 권리를 가질 수 있으며, 이로 인해 거대한 집단 소송이 이끌어질 가능성에 대한 추측.
     * 어머니가 서비스를 이용하여 친척들의 이름을 기입했으나, 결과는 실망스러웠고, 본인의 DNA 정보가 이 회사의 데이터베이스에 저장되어 있으며, 이에 대해 어떠한 조치도 취할 수 없다는 불만 표출.
     * 강제 중재가 부과되었을 때, 수천 건의 개별 사건을 처리할 수 없는 기업들에게 이것이 역효과를 낼 수 있다는 긍정적인 측면 언급.
     * 유머러스한 조언으로, DNA를 변경하고 모든 세포에 2단계 인증(2FA)을 활성화하라는 농담.
     * 유럽연합(EU)/유럽경제지역(EEA)/유럽자유무역연합(EFTA)에서 강제 중재가 허용되는지, 프랑스나 독일 고객의 경우 어떻게 되는지에 대한 질문과, 이해하기 어렵고 집행 불가능한 계약을 만드는 것이 불법이 되어야 한다는 의견 제시.
"
