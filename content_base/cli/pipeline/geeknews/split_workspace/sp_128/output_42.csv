"https://news.hada.io/topic?id=5480","rails기반 React SSR기반에서 클라이언트 서버로 분리하기까지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 rails기반 React SSR기반에서 클라이언트 서버로 분리하기까지

   오늘의집은 react-rails를 사용하여 React를 서버사이드 랜더링하는 구조로 개발되어 있었음
   - 기존 erb라는 템플릿언어 기반에 React를 붙이기 위해 react-rails를 사용하게 됨
   - 클라이언트 자체가 ruby on rails에 의존하다보니 개발환경 구성이 어려워질 뿐만 아니라 클라이언트 로직과 관련된 서버 수정이 필요할 때 ruby 코드를 수정해야하는 이슈가 발생하였음

   그래서 오늘의집에 맞는 클라이언트 서버를 개발을 진행함
   - git subtree를 사용하여 히스토리를 보존한 채 저장소를 분리함
   - 기존 ruby 서버를 의존하는 형태로 만들어져 있어 적절한 오픈소스를 찾기 어려워 클라이언트 서버를 상황에 맞게끔 새로 개발하게 되었음
"
"https://news.hada.io/topic?id=5556","Google Jax - 고성능 머신러닝 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Google Jax - 고성능 머신러닝 라이브러리

   ""사용하기 쉬운 것을 빠르게 만들어서 머신러닝에 적용""
   - Python과 Numpy만을 결합
   ㅤ→ XLA 를 이용해서 Numpy를 GPU/TPU에서 컴파일하고 실행
   ㅤ→ 파이썬 함수를 API 하나로 JIT 컴파일 해서 XLA 최적화된 커널에 쉽게 넣을 수 있음
   ㅤ→ 다수의 GPU/TPU 에서의 실행도 쉽게 (vmap, pmap)
   - 기존 파이썬+Numpy 성능을 훨씬 뛰어넘음

   DeepMind는 Jax 기반으로 전체를 리팩토링 했음
   https://deepmind.com/blog/article/using-jax-to-accelerate-our-research
"
"https://news.hada.io/topic?id=5512","방어적(Defensive) CSS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           방어적(Defensive) CSS

   특정 CSS문제가 생기지 않도록 하는 스니펫 콜렉션
   - Flexbox 줄바꿈 → flex-wrap: wrap;
   - 여유 공간 주기 → margin-right: 1rem;
   - 줄바꿈 되지 않아야할 긴 콘텐츠 → text-overflow: ellipsis; white-space:nowrap; overflow: hidden;
   - 이미지 늘려짐/찌그러짐 방지 → object-fit: cover;
   - 스크롤 연쇄 잠금 → overscroll-behavior-y: contain;
   - CSS 변수 폴백 값 주기 → max-width: calc(100% - var(--actions-width, 70px));
   - 고정 높이 → height 보다는 min-height 사용
   - 고정 넓이 → width 보다 min-width 사용
   - 배경 반복 제거 → background-repeat: no-repeat;
   - 버티컬 미디어 쿼리 활용 → position:sticky 같은거 쓸 때 특정 세로크기 이상에서만 적용 @media (min-height:600px) {}
   - Flexbox 아이템 배열시 justify-content: space-between; 대신 gap: 1rem; 사용
   - 이미지 위에 하얀 텍스트 올리때 이미지 로딩 실패시 대응 → background-color: grey; 사용
   - CSS Grid 위에서 고정 값 사용은 조심 → 항상 미디어 쿼리 사용할 것
   - 필요할때만 스크롤바 보이기 → overflow-y: auto;
   - 스크롤바 생길때 레이아웃 변화 없애기 → scrollbar-gutter: stable;
   - Flexbox 에서 최소 콘텐츠 사이즈 지정 → min-width: 0; (기본값이 auto 여서 overflow 발생 )
   - CSS Grid에서 최소 콘텐츠 사이즈 지정 → minmax() 사용
   - CSS Grid 사용시 Auto Fit vs. Auto Fill → 대부분의 경우 auto-fill 이 나음
   - 이미지 최대 넓이 지정 → max-width: 100%
   - 그리드 컨테이너 차일드에 postition: sticky 사용시 align-self: start 적용
   - 그룹 셀렉터 지정은 다른 브라우저에서는 안될수 있으니 각각으로 분리할 것
"
"https://news.hada.io/topic?id=5459","로봇 주방의 자동화 레벨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             로봇 주방의 자동화 레벨

   자동차의 자율주행 5레벨과 비슷하게 로봇 주방의 자동화 레벨을 설정해본다면?
   레벨0: 모든게 수작업인 전통 주방
   레벨1: 스마트 오븐/프라이어등 스마트 기기로 간단한 작업 자동화. 많은 패스트푸드 체인점과 QSR(퀵서비스 레스토랑)이 여기에 도달
   레벨2: 기존 주방에서 많은 시간이 드는 작업들이 자동화로 레벨1에서 레벨2는 기능상 큰 차이. 그릇 모으기, 피자에 토핑 올리기, 웍으로 밥 볶기 등의 작업들은 직원들의 주의가 필요함. 아직 이런 기능들의 시스템은 많지 않지만 로봇 비용이 떨어지고 컴퓨터 비전이 강력해지면서 많이 나오게 될 것. 문제 발생시에는 사람을 투입해서 흐름을 제어/복원해야 하고, 원격에서 조작도 가능
   레벨3: 자동화 시스템이 처음부터 끝까지 전체 레시피 처리. 반죽부터 뜨거운 피자를 자르는 것까지, 또는 날 생선을 가지고 초밥을 만드는 등. 중간 과정에서 실수나 실패를 처리하기 위해 직원의 감독은 여전히 필수. 조리법은 표준화 되어 있고, 어려운 개인화 주문들은 아직 직원이 처리해야 함. 2020년대에는 레벨2와 함께 이정도가 많이 채택 될 것
   레벨4: 레벨3과의 주요 차이점은 시스템이 매우 견고하고 품질 표준에서 벗어나는 경우가 거의 없다는 것. 기능면에서는 큰 차이가 없지만, 엔지니어링 관점에서는 큰 도전임. 주방 직원은 맞춤 주문이 필요한 경우에만 조리에 참여하고, 일상적인 품질 관리를 위해서는 관여하지 않음. 주문이 표준화 되어있는 QSR에게는 이는 완전 자율과 비슷함. 모든 엣지 케이스를 처리하는 것은 어려운 문제기 때문에 대규모 체인점에서 이 정도 수준의 자동화를 채택하려면 2030년정도 까지 기다려야 할 것. 이 단계가 되면 오늘날의 QSR 품질 수준과 비슷한 음식 자판기를 가지게 될 것
   레벨5: 임의의 커스터마이제이션 및 레시피를 사용 가능하고, 요리 과정의 모든 단계가 세부적으로 제어됨. 이 레벨이 되면 간단한 포장요리용 레시피부터 미슐랭 스타 요리에 이르는 다양한 품질 범위를 포함. 이런 시스템을 개선하는 데는 수십년이 걸릴 것이지만 우리가 사는 방식에 미치는 영향은 매우 클 것. 음식 배달의 효율성이 증가되면서, 주방이 없는 아파트가 인구 밀도가 높은 지역에서 표준이 될 수도 있음. 자동화된 시스템을 원격으로 관리할 수 있으므로, 레시피는 AI 알고리즘에 의해 소프트웨어수준의 속도로 A/B 테스트 가능. 이전 주문에 대한 피드백 이나 게인 데이터에 의해 레시피가 초 개인화 되는 경향도 생길 것

   회사 근처에 로봇이 커피를 내주는 무인 커피숍이 있다는 소문만 들었는데 의외로 높은 레벨이네요? ^^;

   중간에 정리한 표가 보기 좋은 것 같아서 걔도 살짝 번역해 봤습니다.
   https://i.imgur.com/Eqjtknh.png
   가장 흥미로운 워딩은 이렇게 자동화가 되면 ""주방이 없는 아파트""가 인구 밀집 지역에서 유용할 것이란 얘기였어요. 드론 배송과 음식 자판기면 정말 가능해지지 않을까요

   오 재밌네요. 이 말씀 들으니까 저는 화장실도 없앨수 있을까 싶어요. 대소변처리만 해야된다면 수도는 꼭 필요치 않으니까 이동식으로 어떻게
"
"https://news.hada.io/topic?id=5467","Pglet - 백엔드 개발자를 위한 Web UI 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Pglet - 백엔드 개발자를 위한 Web UI 프레임워크

   - 백엔드 개발자들이 HTML/CSS/JS 지식 없이도, 잘 아는 언어들로 프론트엔드 개발자들처럼 웹앱을 개발할 수 있게
   ㅤ→ 파이썬, Bash, Powershell, Node.js
   - 별도로 실행되는 Pglet 서버와 IPC 기반으로 통신
   ㅤ→ 앱 디플로이 과정없이 바로 실행 가능할듯
   ㅤ→ 로컬 또는 호스팅 환경 지원
   ㅤ→ 다수의 백엔드와 연동하는 중간 계층으로 동작
"
"https://news.hada.io/topic?id=5474","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   시국이 시국이라 불안하긴 하지만 약 2년만에 치과에 검진받으러 방문합니다. 태어난지 84일된 아기도 엄마아빠 따라서 치과에 가게 되네요. (아직 치과에 볼 일은 없는 아기지만요.)
   업무 관련해서는 android dev summit 동영상과 iPadOS 관련 문서를 좀 더 읽고 싶습니다.

   무려 3개월 전에 예매해두었던 뮤지컬 보러 다녀오려고요.
   지난 주엔 영화 예매해두고 깜박하고 못 갔네요. 뮤지컬은 캘린더에 잊지 않고 넣어두었어요...

   새로나온 맥 OS 몬트래이?를 올려보려합니다. 혹시 어떤문제가 있는지 아시는분 공유좀 부탁드려요.. ㅠㅠ

   베타때부터 쓰고 있지만 큰 문제는 없었던 것 같습니다.

   그렇군요. 항상 새로운 OS나오면 기존에 쓰던 툴들이 업데이트가 늦어져서 오류가 발생했었는데 그래서 새로운 OS 이전 버전을 깔고 쓰고 있었는데.. 한번 도전해봐야것네요. 감사합니다.

   전 나오자 마자 쓴 것 같은데.. 특별한 문제는 없었던 거 같아요.

   그렇군요.. 감사합니다.

   지난주에는 근 1년만에 블로그에 먼지를 털었더니 나름 기분이 좋아졌어요 https://xguru.net/2238
   이 여세를 몰아서 이번 주말에도 하나 더 적어볼까? 합니다.

   이번 주말에는, 새로운 기능과 깔끔한 코드에 정신 팔려서 계속 늦어지고 있던 토이 프로젝트 완성을 시켜보려합니다! 항상 토이 프로젝트를 진행하다보면, 욕심이 생겨서 시간이 계속 끌리네요 ㅠㅠ..
   ""일단 완성하고보자!"" 라는 생각을 몇번이나 하지만 이제는 정말 완성하고 볼 예정입니다!
"
"https://news.hada.io/topic?id=5535","The Matrix Awakens : 언리얼 엔진 5 테크 데모","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  The Matrix Awakens : 언리얼 엔진 5 테크 데모

   - Unreal Engine 5를 이용한 영화 매트릭스 기반 시네마틱 오픈월드 인터랙티브 테크 데모
   ㅤ→ PS5 와 XSX 에서 무료 다운로드 가능
   ㅤ→ 엔진 기능 활용 : 월드 파티션, 나나이트, 루멘, 카오스, 후디니, 매스 프레임워크, 나이아가라, 메타휴먼..
   - 라나 와쇼스키가 각본&연출
   - 키애누 리브스와 캐리앤 모스가 네오와 트리니티 역을 재연

   마케팅 부서 ㅋㅋㅋ

   메트릭스 좋아하는데 재현해놓다니 엄청나네요.
   VR로 경험해보고 싶네요.

   나나이트가 저는 오타인줄 알았는데!
   박박 나나 짜짜 오타가 아니었군요!

   지난번 나나이트 테크데모도 대박이라고 생각했는데 이번 건 입이 다물어 지지가 않았습니다.

   4K 영상 보기 : https://www.youtube.com/watch?v=WU0gvPcc3jQ
   PS5 : https://store.playstation.com/ko-kr/concept/10004087/
   XSX : https://xbox.com/ko-kr/games/…
"
"https://news.hada.io/topic?id=5501","GraphJin - 빠른 GraphQL API 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GraphJin - 빠른 GraphQL API 만들기

   - GraphQL을 효율적인 SQL쿼리로 전환해주는 컴파일러
   ㅤ→ SQL문장만으로 벡엔드 API를 더 빠르게 만들기 가능
   - 라이브러리 또는 스탠드얼론 서비스로 이용 가능
   - 자체 보안 기능
   ㅤ→ 개발시에 사용한 쿼리는 자동으로 Allow List에 등록되며, 이 리스트에 있는 쿼리만 Production 에서 실행 가능
   ㅤ→ 이를 통해 빠른 속도를 보장하며 모든 SQL 쿼리가 DB에 직접 전달
   - Go로 만들어진 오픈소스
"
"https://news.hada.io/topic?id=5497","MiroTalk SFU - 오픈소스 Zoom/Teams 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   MiroTalk SFU - 오픈소스 Zoom/Teams 대체제

   - WebRTC 와 MediaSoup SFU 기반 실시간 화상통화 서비스
   - 플러그인 없이 브라우저 기반. 데스크탑/모바일
   - 스크린 공유, 파일 공유, 채팅, 화이트보드
   - 무제한 대화방/사용자 지원
   - 룸 URL 공유 기능
   - 4K 까지 웹캠 스트리밍 가능
   - 에코 캔슬 및 노이즈 감소 적용
   - 실시간 유튜브 영상 공유
   - 스크린/영상/오디오 녹화 지원
   - REST API 제공
"
"https://news.hada.io/topic?id=5555","Toyota, 스마트키 원격시동 하려면 월 $8 구독 서비스 가입 필요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Toyota, 스마트키 원격시동 하려면 월 $8 구독 서비스 가입 필요

   - 2018년부터 출시된 새 차들은 Audio Plus의 3년 무료 구독을 받았음
   ㅤ→ RF라디오를 사용하는 스마트키(Key-Fob)로 원격시동이 가능
   ㅤ→ 이 3년 기간이 끝나자 키팝이 동작하지 않음
   ㅤ→ 인터넷 접속이 전혀 필요없는 스마트 키임에도 년 구독을 요구하는 것
   - 월 $8 또는 년 $80 구독이 필요
   - 정작 2018년 11월 이전에 나온 도요타 차량은 그렇지 않음

   스마트폰 이용하는 기능들은 다른 자동차 제조사들 이런 저런 비용을 받기는 하던데..
   오프라인으로 동작하는 키팝만 이용하는 사람한테도 돈 받겠다는 건 좀..
"
"https://news.hada.io/topic?id=5558","Log4Shell 업데이트 : log4j 두번째 취약점 발견","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Log4Shell 업데이트 : log4j 두번째 취약점 발견

   - CVE-2021-44228 에 추가로 CVE-2021-45046 보고
   - 44228을 수정한 Log4j 2.15.0 이 릴리즈 되었으나 놓친 부분이 있음
   ㅤ→ 기본 설정이 아닐때 추가공격이 가능한 부분이 있어서 이를 수정한 2.16.0 릴리즈
   ㅤ→ log4j 사용자는 즉시 2.16.0 으로 업그레이드 하기를 권장

   CVE-2021-42550 - logback 도 취약점 발견 : https://boho.or.kr/data/secNoticeView.do/…

   CVE-2021-44228 – log4j - 취약점 보고 https://news.hada.io/topic?id=5534
"
"https://news.hada.io/topic?id=5463","PHP 재단 설립재단 설립

   - PHP 커뮤니티의 멤버들이 참여해서 비영리 재단을 설립
   - PHP 언어의 발전을 위해 파트타임/풀타임 개발자들을 고용 예정
   - 참여사
   ㅤ→ Automattic (워드프레스)
   ㅤ→ Acquia (Drupal)
   ㅤ→ JetBrains (IDE)
   ㅤ→ Laravel (프레임워크)
   ㅤ→ Zend (프레임워크)
   ㅤ→ Symfony (프레임워크)
   ㅤ→ Craft CMS (CMS)
   ㅤ→ Private Packagist (Composer)
   ㅤ→ Tideways (프로파일링 & 모니터링)
   ㅤ→ PrestaShop (이커머스)
   - 재단을 설립한 주요 이유 중 하나는 키 컨트리뷰터인 Nikita Popov가 PHP를 떠나서 LLVM에 집중하기로 했기 때문
   ㅤ→ 2011년부터 PHP 작업을 시작했고, JetBrains에서 3년간 PHP 7.4, 8.0, 8.1 작업을 진행한 사람
   - OpenCollective 를 이용해서 도네이션 받을 예정
   ㅤ→ 년간 $300,000 정도 모금을 예상
   ㅤ→ JetBrains 는 매년 $100,000 후원
   ㅤ→ OP.GG 가 $10,000 으로 회사중 3위라는게 눈에 띄네요.

   리눅스 재단 같은 큰 재단에도 합류해서 안정적으로 계속 개발되었으면 좋겠어요.
   글고보니 90년대말 00년대초 IT 붐 시기에 리눅스 서버에 아파치 php 는 거의 표준이었던 것 같은데 php가 리눅스의 성공에 기여한 바도 적지는 않을 것 같네요? ^^;

   Jetbrains : https://blog.jetbrains.com/phpstorm/2021/11/the-php-foundation/
   Laravel : https://laravel-news.com/announcing-the-php-foundation
"
"https://news.hada.io/topic?id=5527","Go의 Defer와 Rust의 Drop","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Go의 Defer와 Rust의 Drop

   - 리소스를 자동으로 해제하기 위해서 Go에서는 Defer를 사용할 수 있음
   ㅤ→ 하지만, 루프 내에서 리소스가 할당되거나 하는 경우에는 방법이 없는 것은 아니지만 복잡해짐
   ㅤ→ 실수할 여지가 항상 있음
   - Rust에서는 리소스에 대해 Drop trait을 구현해 리소스를 자동으로 해제할 수 있음
   ㅤ→ 루프 등의 경우에도 Defer와 같은 문제가 없고 Defer를 통한 리소스 해제 호출이 필요하지 않음

   Go에도 try-resource에 대한 제안은 있지만 딱히 신경쓰는 것 같지는 않네요:
   https://github.com/golang/go/issues/29120
   이런 것을 보면, 리소스의 해제를 다른 모듈 아래로 감추지 않으려고 하는 것은 Go의 철학이기도 한 것 같구요.
   https://stackoverflow.com/questions/59044658/…
"
"https://news.hada.io/topic?id=5568","GD.CSS - GovUK 스타일의 미니멀 CSS 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GD.CSS - GovUK 스타일의 미니멀 CSS 프레임워크

   ""Great Default CSS""
   - 영국 디지털정부 포털인 GovUK 스타일에서 영향 받음
   - class를 사용하지 않고 HTML만 사용
   - 브라우저간 호환성 보다는 전체 경험을 같게 하는데 초점
   ㅤ→ 자신만의 CSS Reset 사용 가능
   - 157개의 CSS 셀렉터, 약 120개의 HTML5 태그 지원
   - 21kb (비압축)
"
"https://news.hada.io/topic?id=5549","AWS Graviton2 평가시 고려해야할 것들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       AWS Graviton2 평가시 고려해야할 것들

   - ""인텔이 정리한"" AWS Graviton2 (ARM 칩) 대비 인텔 칩이 나은 점
   1. 모든 워크로드에 적합한 성능
   ㅤ→ AWS는 Graviton2가 x86대비 40%가 빠르다고 하지만, 특정 시나리오에만 맞음
   ㅤ→ 인텔 Xeon M5 인스턴스가 Graviton2 M6g 대비 DB,Web/Java,싱글 쓰레드 계산에서 1.8x 성능이 뛰어남
   2. 어떤 솔루션이 더 저렴할까요?
   ㅤ→ AWS는 Graviton2가 20% 저렴하다고 주장
   ㅤ→ Intel® Xeon® M5 인스턴스가 일반 워크로드에 대해선 가성비 면에서 더 뛰어남
   3. 단일 클라우드 포팅을 하지 않습니다
   ㅤ→ 포팅엔 시간과 비용이 듭니다
   ㅤ→ ARM은 모든 소프트웨어를 실행하지 못합니다
   4. 멀티클라우드로 비즈니스 안정성 향상
   ㅤ→ 특정 솔루션에 얽매여서 비즈니스 유연성을 제한할 필요는 없음
   ㅤ→ 많은 클라우드 솔루션에서 호환성 및 지원 기능 보장
   5. Microsoft와 다른 ISV 앱을 사용하십니까? 인텔에서 실행하세요
   ㅤ→ 인텔은 최고의 상업 소프트웨어 프로바이더와 오랜 관계를 맺고 있음
   ㅤ→ SAP, VMWare, Microsoft SQL Server, Exhange Server..
   ㅤ→ 중요한 엔터프라이즈 도구에는 인텔® 프로세서 기반 인스턴스가 더 적합한 선택
   6. 까다로운 워크로드인가요? 인텔이 제공합니다
   ㅤ→ ARM 기반 인스턴스 대비 가격 대비 성능이 평균 8배 더 좋은 AI 추론
   ㅤ→ ARM 대비 성능이 65% 더 좋은 데이터베이스 클라우드
   ㅤ→ MySQL 성능은 거의 1.7배 향상되었으며 가격 대비 성능은 1.4배 이상 좋음
   ㅤ→ Apache Spark는 1.7배 빠르게 실행되었으며 가격 대비 성능은 1.4배 이상 좋음
   7. 보안 문제
   ㅤ→ 보안이 중요하지만, Graviton2 는 E2E 응용프로그램 보안을 제공하지 않음
   ㅤ→ 인텔은 하드웨어에 기본 부분임
   ㅤ→ Intel SGX는 가장 많이 연구되고 검증된 TTE(tested trusted execution environment) 임
   8. 승리를 위한 HPC
   ㅤ→ 비즈니스용 고성능 컴퓨팅에 적합
   ㅤ→ LS-DYNA, Relion, Monte Carlo, Ansys Fluent, Converge, Altair RADIOSS, Siemens Star-CCM+, Dassault SIMULIA, MSC Nastran 같은 툴박스는 인텔에서 더 잘 실행됨
   9. 무한한 확장
   ㅤ→ 여러 클라우드 플랫폼에 걸쳐 50,000개 이상의 인텔 기반 인스턴스 유형이 있음
   ㅤ→ 이는 확장을 용이하게 함
   ㅤ→ 이러한 고급 플랫폼에는 PCIe 4세대를 통한 대용량 메모리와 빠른 네트워킹, 스토리지, 이전 세대보다 39% 커진 메모리 대역폭도 제공
   10. 인텔은 모든 클라우드의 워크로드에 입증된 플랫폼입니다
   ㅤ→ 인텔은 인텔® 프로세서와 플랫폼에서 제품을 테스트하고 검증, 최적화한 폭넓은 소프트웨어 및 하드웨어 솔루션 파트너 생태계를 통해 클라우드 지원 코어를 10억 개 이상 제공하는 신뢰할 수 있는 공급 업체

   인하다 추텔아...

   탄소 배출량은... Cloudflare도 환경을 위해 ARM으로 넘어가고 있는데 인텔은 자기 사업 챙기기 바쁘네요. ㅎㅎ
   https://news.hada.io/topic?id=4712

   와.. 진짜 이렇게 까지 하는 인텔이 안쓰럽네요 ㅎㅎ

   한글 페이지는 이미지가 깨지네요. 영문 페이지는 아래입니다.
   https://intel.com/content/www/…
   인텔이 AWS Graviton2 키워드로 구글 광고로 이 페이지를 노출하고 있다는 군요.
   신경이 많이 쓰이는 듯한데.. 왠지 애처롭습니다.
"
"https://news.hada.io/topic?id=5491","Polly.js - HTTP를 녹화/재생하는 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Polly.js - HTTP를 녹화/재생하는 라이브러리

   - Netflix가 만든 오픈소스
   - HTTP 인터랙션을 녹화/재생/저장 하는 JS 라이브러리
   ㅤ→ 브라우저 및 Node에서 사용 가능
   - 별다른 설정없이 HTTP Req/Res를 Mock 가능
   - 간단하지만 직관적이고 강력한 API제공
   - Mocha 및 QUnit 지원
   - 이벤트를 Intercept, Pass-Through, Attach 가능
   - 느리게 또는 빠르게 재생 가능
"
"https://news.hada.io/topic?id=5538","오라클, Ampere Arm A1 인스턴스 평생 무료로 제공","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   오라클, Ampere Arm A1 인스턴스 평생 무료로 제공

   - 기존에 사용 가능했던 AMD EPYC VM 2개에 추가
   - 2개의 Ampere Altra 80 Codre 3.0Ghz CPU 기반의 머신. 100Gbps 네트워킹, 1TB 메모리
   ㅤ→ VM.Standard.A1.Flex 인스턴스
   ㅤ→ 무료티어에서 4개의 코어와 24GB 메모리, 46GB 스토리지 까지 사용 가능
   - A1 인스턴스는 기본 가격도 저렴
   ㅤ→ 코어당 $0.01/시간, $0.0015/GB
   ㅤ→ EC2 의 a1.xlarge 가 4코어/8GB 에 시간당 $0.102 인것에 비해 약 25% 저렴

   - 2021.12.19 현재 Seoul (ap-seoul-1) 리젼에서 A1 인스턴스 생성 불가
   - 에러메시지는 Out of capacity 입니다.

   - 오라클 클라우드에서 평생 무료 VPS 제공 https://news.hada.io/topic?id=2517
"
"https://news.hada.io/topic?id=5529","NoteApps.info - 27종의 노트 앱 및 서비스 비교","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   NoteApps.info - 27종의 노트 앱 및 서비스 비교

   * Evernote, OneNote, Notion, Roam Research, Logseq, Obsidian, Craft등 27종의 노트 앱 및 서비스를 기능별 지원여부 정리 및 비교
   * 기능별 지원여부
   ** Appearance - 다크모드나 포커스모드, 테마 등 지원여부
   ** Content Uploads & Embeds - 업로드나 임베드 가능 컨텐츠(이미지, PDF, 문서)
   ** Customer-centric - 채팅지원여부, 무료버전 유무, 로드맵 등
   ** Encryption/Security - 2FA 지원여부, 암호화 여부 등
   ** Formatting Supported - 코드(구문강조)나 각주, LaTeX, Markdown 지원여부 등
   ** Import/Export and Data Backups - 노트 가져오기/내보내기 및 버전 히스토리 지원여부 등
   ** Integrations/Extensibility - API나 IFTTT/Zapier 지원여부, 템플릿, 칸반(Kanban), 그래프 뷰 등
   ** Login Providers - 애플/구글계정으로 로그인지원 여부
   ** Mobile/Tablet - iOS및 안드로이드의 위젯 및 공유기능 지원여부
   ** Offline - 오프라인 상태에서의 접근 지원여부
   ** Performance Benchmarks - 각 플랫폼별 기능 사용시 걸리는 속도
   ** Platforms - 웹이나 앱(Windows/macOS/Linux/Android/iOS) 지원여부
   ** Search & Navigation - 검색기능 및 백링크 지원여부 등
   ** Sharing/Collaboration - 실시간 협업이나 URL을 통한 게시 등
   ** Tables - 표 및 수식(Formula) 지원여부
   ** Tasks & Scheduling (Calendar) - 일정 및 캘린더관련 기능 지원여부
   ** Web Capture - 웹 클리핑 기능관련
   * 지원하는 기능들을 모두 스크린샷으로 캡처하여 제공
   * 앱이나 서비스를 최대 4개 골라서 비교할 수 있음
   * 주의: 이 웹사이트는 Amplenote의 개발사(alloy.dev)에서 만들었음을 감안해주세요.

   Notion 쪽 데이터가 상당히 옛날 것같습니다
"
"https://news.hada.io/topic?id=5582","Ask GN: 남들에게 꼭 추천하는 책이 있으신가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask GN: 남들에게 꼭 추천하는 책이 있으신가요?

   남들과 대화 중에 꼭 한번 읽어보라고 추천하게 되는 책들이 있으신가요 ?
   소설도 좋고, 자기계발 서적도 좋고, 만화책도 좋아요. (개발서적은 많이 나왔으니 제외하고..)
   저는
   - 무협 안 읽어본 분들에겐 김용의 ""영웅문"",
   - 판타지 안 읽어본 분들에겐 이영도의 ""눈물을 마시는 새/피를 마시는 새"",
   - 소설 많이 안 본 분들에겐 시드니 셀던의 ""내일이 오면""
   정도를 많이 추천합니다.

   몇년 사이에 읽은 책 중
   - 가장 기억에 나는 건, 카뮈의 <이방인>
   - 가장 많이 이야기 한 건, 한승태의 <고기로 태어나서>

   <고기로 태어나서>는 우리가 먹는 닭과 돼지와 개가 어떻게 생산되는지, 그리고 그 주변에서 살아가는 사람들의 풍경이 궁금 하신 분에게 강력하게 추천 드립니다. 읽고 나면 대체육 지지가 되실지도, 또는 이 작가분의 다음 책을 더더욱 기다리게 되실지도 모릅니다.

   제가 읽었던 책 중에서 가장 추천하는 책은 아닙니다만, 근래에 읽은 책 중에서 가장 흥미롭고 엔지니어라면 누구든지 한번 생각 해볼 만한 주제를 다루는 책을 추천 드립니다.
   1. 니콜라스 카의 <생각하지 않는 사람들>
   2. 세리 터클의 <외로워지는 사람들>
   3. 클라이브 톰슨의 <생각은 죽지 않는다>
   4. 수전 그린 필드의 <마인드 체인지>
   우리는 엔지니어로서 수많은 공학적 솔루션을 내놓지만, 이 문제 해결이 인간에게 어떤 영향을 미치는 지는 모르거나 관심 밖에 둘 때가 많습니다. 이 책들은 이런 기술이 인간을 어떻게 바꿀 것인가를 심리학적인 관점에서 접근합니다. 인간이 미래에 어떻게 생각하게 될 것인가, 기술이 거기에 어떤 영향을 할 것인 가 궁금한 분들은 꼭 읽어 보시기 바랍니다.

   추천해 주산 <생각하지 않는 사람들> 뉴욕타임즈 서평
   https://newspeppermint.com/2015/12/01/m-addiction/
   6년 전에 읽었지만 저는 아무런 실천을 못 했군요ㅠㅠ

   저는 이 책을 읽고 해낸게 여러 책을 동시에 읽지 않는 것이네요.
   모르겠습니다. 인생의 한 시절에는 여러 권을 동시에 읽는 것이 필요한지도. 하지만 이제 한 번에 한 권만 읽는 습관을 가지니 만족하게 되네요

   자유론

   만화를 추천하자면 저는 미야자키 하야오가 직접 그린 만화 ""나우시카""를 추천하고 싶습니다. 애니메이션은 만화 책의 1권만 해당하고 나머지 6권은 이보다 훨씬 방대한 이야기를 들려줍니다. 거의 반지의 제왕 수준으로 세계관도 훌륭합니다.

   저는 글쓰기에 시작하고 싶으신 분들이나, 혹은 유명한 작가는 글을 어떻게 쓰나 궁금하신 분에겐 '유혹하는 글쓰기'를 추천해드리고 싶어요. 스티븐 킹이 어떤 마음가짐으로 글을 쓰는지 정말 읽기 쉽고 부드럽게 풀어주는데요. 그러면서도 읽을 때마다 새로운 게 발견되는 참 좋은 책이랍니다.

   저는 책 입문을 하고 싶어하는 분들에게는 ""책은 도끼다""
   좋은 책을 추천해주고 싶을 때는 ""자기 앞의 생"", ""참을 수 없는 존재의 가벼움""
   위 책들 제외하고 영향을 받았던 책들 중 뽑아보면 ""미움받을 용기"", ""우리는 언젠가 만난다"", ""슬픔을 공부하는 슬픔"" 정도가 떠오르네요 ~! 좋은 책들 참 많은데요 ㅎ

   + 눈물을 마시는 새 정말 재밌게 봤는데 요즘 크래프톤 발표 때문인지 얘기가 전보다 더 자주 들리는 것 같아요. 재밌게 본 분들이 많은듯 ㅎ 또 요즘 AI를 보면서 왠지 하늘치 유적 생각도 나더라고요 ㅎ

   곰곰히 생각해 보니, 이 정도 목록이 만들어지네요~
   - 인문: 피터 틸의 <제로 투 원>, 나심 탈레브의 <스킨 인더 게임>
   - 만화: <홀리랜드>, <도박묵시록 카이지>
   - 웹툰: <덴마>
   - PodCast: <과학하고 앉아있네>
   - 영화: (1994)

   저도 제로투원 추천

   듄(Dune)
   포스트 트루스(Post Truth)
   추천합니다.

   이윤기님의 소설 하늘의 문 추천합니다

   - 대니얼 길버트 ""행복에 걸려 비틀거리다"": 지르기 전의 행복의 기대치와 지르고 난 후의 만족도가 왜 다른지 과학적으로 설명합니다.
   - 조너선 하이트 ""바름 마음"": 정치적 좌파와 우파가 어떻게 다른 도덕적 스펙트럼을 가지고 있는지 설명합니다. 둘다 도덕적이지만 스펙트럼은 다르다. https://en.wikipedia.org/wiki/Moral_foundations_theory

   좋은 책 많이 추천해주셨네요. 기록했다가 읽어보겠습니다. 감사합니다.
   전 최근에 육아 책을 너무 안 읽은 것 같아서 육아 책을 보고 있습니다.
   '숙제의 힘' 책을 최근에 읽었는데, 규칙을 통한 자율 양육을 하는 방법을 알려 줍니다. 책을 본 후 가족 회의를 통해 자녀가 매일 어떤 숙제를 어느 양만큼 해야 하는지 정하고 조금씩 규칙을 고쳐나가며 습관을 만들려고 노력하고 있어요. 자녀가 스스로 학습하고 숙제하길 원하는 아빠 엄마에게 도움이 되는 책이라 추천합니다.

   원피스 빅맘 나오기 전까지

   - 한강, ""노랑무늬영원""
   - 스티븐 핑커, ""우리 본성의 선한 천사""
   - 브라이언 그린, ""우주의 구조""
   - 브라이언 그린, ""멀티 유니버스""
   - 백석, ""정본 백석 시집"" (문학동네)
   - 최은영, ""쇼코의 미소""
   - 김연수, ""세계의 끝 여자친구""
   - 허연, ""나쁜 소년이 서 있다""

   내후년 오십줄에 접어드는데 인생에 영향을 줬다고 생각하는 책들입니다.
   - 만행: 하버드에서 화계사까지
   - 사피엔스: 유인원에서 사이보그까지
   - 호모 데우스
   - 정의란 무엇인가
   - 죽음이란 무엇인가
   - 조화로운 삶

   조화로운 삶은 얼마전에 다시 읽었네요. 좋은 책입니다.

   좋은 책들이 많이 추천되는군요.
   이미 언급된 책들을 제외하고 한 권만 추천하자면, 사회심리학자 리처드 니스벳의 『마인드웨어: 생각은 어떻게 작동되는가』를 선택하겠습니다.
   http://www.yes24.com/product/goods/30574351
   https://ridibooks.com/books/1546000277
   참고로 이 책의 내용 중 일부는 EBS 《위대한 수업, 그레이트 마인즈》에서 저자가 직접 강연하기도 했습니다.
   https://home.ebs.co.kr/greatminds/replay/…
   P.S.
   서적은 아닙니다만, 《위대한 수업, 그레이트 마인즈》에는 좋은 강연들이 많으니 찾아보시는 것을 추천합니다.

   그레이트 마인즈 시리즈는 너무 별로였어요. 연사들의 수준에 비해 너무나도 기초적인 수준의 정보 전달만 있었다고 생각합니다. 예를 들어 리처드 도킨스를 데려와선 진화론의 기초만 설명하는걸로 5부작을 마무리했죠.
   EBS의 기본 방향성이 <중학생이 이해할 수 있는 수준>이다 보니 너무나도 실망스러운 결과가 나왔다고 생각합니다.

   사람마다 지식 수준의 편차가 크니까, 그런 부분은 솔직히 어쩔 수가 없지요. 왜 보통 TV 뉴스 또한 내용을 이해할 수 있는 최소 수준을 중학생 수준으로 잡는다고 하지 않습니까.
   제가 생각하는 그 프로그램의 장점은 다루는 범위의 너비라고 봅니다. 각 분야의 권위자들이 자기 분야의 기초적이면서도 중요한 내용을 짚고 넘어가는 것이니까요. 뇌과학자가 분리뇌 연구에서 시작한 자신의 연구가 어떻게 감정 및 기억에 관한 신경회로에 관한 것으로 발전했는지에 관한 생생한 이야기를 들려줌으로서 현대의 생명과학이 어떤 식으로 이루어지는지에 관한 한 단면을 살피는 것이나, 법학자가 미국 헌법의 첫 부분을 각 조문별로 해설하며 중요하게 여겨지는 대법원 판례들을 짚어주는 것이나, 행동경제학자가 생활 속에서 활용될 수 있는 실용적인 심리학 지식을 알려주는 것이나, 정치경제학 교수가 지금도 계속되고 있는 미·중 무역전쟁에 관해 잘 모르는 사람도 알 수 있게끔 현대의 국제무역체제 성립 역사부터 간략하게 요약하는 것은
   많은 사람에게 충분히 교양으로 유익하다고 봅니다.

   요 몇년간 개발서적만 읽었지만..
   - <팩트풀니스>
   - <노 임팩트 맨>
   - <제랄드 와인버그의 글쓰기책>
   - <컨설팅의 비밀>

   저는 개발 외적인 책 추천이 필요할 때는 탈벤샤하르의 '행복이란 무엇인가'와 빅토르 프랑클의 '죽음의 수용소에서'라는 책을 추천하곤 합니다!
   행복이란 무엇인가는 무엇인가 시리즈 중 하나(셸리 케이건의 죽음이란 무엇인가, 마이클 샌댈의 정의란 무엇인가)고, 행복이라는 주제를 심도깊게 다루는데 그 내용이 우리가 보편적으로 생각하는 행복에서 나아가 개인이 추구해야 할 행복이라는 가치를 정의하고 있어 살아가는데 좋은 주제라고 생각되어 좋았던 기억이 있습니다!
   죽음의 수용소에서는 아우슈비츠에서의 기억을 떠올리며 심리학자의 시선에서 홀로코스트 기간동안의 고통스러운 기억을 그려내는데, 이전에 소개한 행복과 관련된 인생을 살아가는데 필요한 '의미'라는 주제를 깊게 고민해볼 수 있게 이야기하고 있어 좋았던 기억이 있네요!

   같은 홀로코스트에 대한 내용을 다루고 퓰리처 상도 수상한 그래픽노블 <쥐: 한 생존자의 이야기>도 같이 추천합니다.
   몇년 전에 아우슈비츠 가면서 말해 주신 책을 처음 읽고, 쥐를 20년 만에 다시 읽었는데, 예전과 느낌이 많이 다르더라고요. 주변에서 보이는 차별에 대해 좀 더 민감해졌고요. 결국 시작은 사소한 차별들이 당연하게 된거부터였으니...

   이걸 보고 생각난 것인데, 어떤 경우에는 책을 읽을 때의 상황과 책의 내용이 맞물릴 때 특히 기억에 깊이 남기도 하더군요.
   예를 들어 셸리 케이건 교수님의 책은 할아버지께서 암 수술을 받으신 직후 다른 가족들과 교대로 병 간호를 하는 동안 우연히 빌릴 기회가 있어서 읽었거든요. 죽음과 꽤나 가까운 장소에서 죽음에 관해 철학적으로 생각하는 책을 읽는다는 경험은 굉장히 인상깊었습니다.

   정의란 무엇인가 -> 세상에 고정된 진리는 없다는걸 배웠습니다
   총균쇠 -> 인류의 발전을 환경과 지리, 자원의 관점으로 볼 수 있습니다
   자유의지란 없다 -> 총균쇠와 마찬가지로 인간의 선택에 의외로 의지가 차지 하는 부분은 그리 크지 않다는걸 느꼈습니다
   메트로폴리스 -> 도시의 발전상과 목적, 밀도에 대한 고민을 할 수 있었습니다

   인생의 책이라면 도올의 ""중용, 인간의 맛"" 을 유튜브에 있는 강의와 함께 추천합니다. 어떻게 살 아갈지에 대한 좋은 제안이다 싶습니다.
   톨스토이의 이반 일리치의 죽음 - 순간을 살아가는 우리에게 죽음을 생각해보게 하는 거장의 책이네요.

   저는 노자의 도덕경을 추천합니다.
   원문은 너무 추상적이어서 뜻을 곱씹는데 힘이 많이 들고
   도덕경 읽기는 나이가 들 때마다, 주석자 마다 맛이 달라서
   새 주석이 나올 때 마다 사보는 편입니다ㅎㅎ
   도덕경 한줄요약 : 물처럼 살아라.

   저는
   - 소설은 밀란 쿤데라의 ""농담"",
   - 만화는 도다 세이지의 ""스키엔티아"",
   - 과학교양서는 랜들 먼로의 ""위험한 과학책"",
   - 인문교양서는 한스 로슬링의 ""팩트풀니스""
   를 주변에 추천합니다.

   팩트풀니스 저도 추천합니다.
"
"https://news.hada.io/topic?id=5466","영국 규제당국, Meta가 인수했던 Giphy를 매각하라고 명령","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  영국 규제당국, Meta가 인수했던 Giphy를 매각하라고 명령

   - 페이스북이 작년 5월에 GIF 공유 서비스 Giphy를 $400M(4억달러)에 인수하기로 합의 한 뒤, 독점 금지 관련 조사가 진행됨
   - 영국의 경쟁시장국(Competition and Markets Authority, CMA)은
   ㅤ→ ""이 인수는 소셜 미디어 플랫폼간의 경쟁을 줄이고, 이미 상당한 시장 지배력을 더 높일 수 있다"" 며 매각을 지시
   ㅤ→ 다른 플랫폼이 Giphy 서비스에 접근 하는 것을 거절/제한 하거나 접근 조건을 변경하는 등의 방법으로 지배력 강화 가능
   ㅤ→ 또한 이 거래를 통해 Giphy의 광고 비즈니스를 폐쇄해서, 페이스북 광고 비즈니스와의 경쟁을 제거했기 때문에 이 딜은 Uncompetitive함
   ㅤ→ 혁신적이었던 Giphy의 광고 서비스를 복원할 것을 지시

   * 페이스북, Animated GIF 공유서비스 Giphy를 4억달러에 인수 https://news.hada.io/topic?id=2087
   CMA는 이미 이 거래 조사과정에서 페이스북이 명령을 위반 한것에 대해 약 $70M(칠천만 달러, 900억원)의 벌금을 부과한 바 있음
   - https://reuters.com/technology/…
   근데 영국 규제당국이 페이스북에 지시한다고 무조건 이행해야 하는 것도 아닌지라, 이미 합병 완료된 건을 어케 하려나 싶네요.
   Giphy 안팔면 영국에서 페이스북 서비스 못하게 철수시킬 수 있을지도 잘 모르겠고요.
"
"https://news.hada.io/topic?id=5548","Deno 가 TC39 에 합류","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Deno 가 TC39 에 합류

   - Deno Company 가 JavaScript 표준(ECMA-262)을 담당하는 ECMA International에 합류
   - TC39 기술 위원회 에서 서버사이드 자바스크립트 사용자들을 위한 기능에 집중할 것
   ㅤ→ ES 모듈 그래프 상에서 비-JS 애셋들에 대한 더 나은 지원
   ㅤ→ 명시적 자원 관리에 대한 더 나은 지원
   ㅤ→ (비동기) 반복을 위한 더 광범위한 표준 라이브러리 함수
   - TypeScript 도 Deno 에코 시스템의 핵심이므로, 앞으로 TypeScript 와 JavaScript의 더 긴밀한 얼라인을 추진하는데도 노력

   Deno의 미래에 대한 다른 분들의 생각이 궁금하네요

   ECMAScript와 TC39 - 자바스크립트 언어의 표준인 ECMAScript와 TC39에 대해 소개합니다.
   https://ahnheejong.name/articles/ecmascript-tc39/
   The Deno Company 발표 https://news.hada.io/topic?id=3978
"
"https://news.hada.io/topic?id=5484","안드로이드, 연말을 맞아 새로운 기능들 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        안드로이드, 연말을 맞아 새로운 기능들 공개

   - Family Bell : 내 일정 알림을 가족 및 다양한 기기로 전송
   - 새로운 위젯 : Google Play Books, Youtube Music, Google Photos People & Pets
   - Google Photos 에 새로운 홀리데이/생일/졸업 등의 Memories 추가
   - 차에 안드로이드 폰 연결시 Android Auto 자동 런치 가능
   - 안드로이드를 디지털 자동차 키로 사용 (Pixel 6, 갤럭시S21 을 호환되는 BMW에서 이용)
   - 특정 기간동안 사용하지 않은 앱들에 대해서 부여했던 권한들을 자동으로 리셋
   - Emoji Kitchen 을 통해서 이모지를 합쳐서 스티커로 변환기능 지원. 이모지를 선물상자로 감싸는 기능도 제공

   다른 기능은 몰라도 권한 회수는 원래 있던 기능인데요...

   그거 안드로이드 11에서 새 기능을 공개한거는 맞는데,
   12월 부터는 이 기능 자체를 안드로이드 6(API 레벨 23) 이상의 모든 기기로 확대한다는 얘기인듯 합니다.
   https://android-developers.googleblog.com/2021/09/…
"
"https://news.hada.io/topic?id=5506","re:Invent 2021에서 추가된 새 EC2 인스턴스 타입들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  re:Invent 2021에서 추가된 새 EC2 인스턴스 타입들

   - AWS에는 현재 475개의 인스턴스 타입이 있음
   - 최근에 추가된 인스턴스 타입과 그들이 어떤 위치인지 인스턴스명을 읽는 법을 정리한 글
   1. Graviton : C7g, lm4gn, ls4gen, G5g
   2. AMD : M6a
   3. Intel : X2idn, X2iedn, l4i
   4. 특수목적 : Mac2, Trn1
"
"https://news.hada.io/topic?id=5551","Google Fonts Knowledge","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Google Fonts Knowledge

   - 구글 폰트 팀이 Typography 관련 자료를 모은 지식 저장소
   - 폰트에 대한 기초 소개 : Punctuation, Weights, Glyphs, OpenType ..
   - Typeface 선택 및 페어링 하는 법
   - 사용 관련 : 알맞는 Line Height 선택, Kerning, Web Fonts 사용
   - 예제와 함께 잘 정리된 용어 사전(Glossary)
"
"https://news.hada.io/topic?id=5460","Python x ARM: Graviton2 실전 도입기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Python x ARM: Graviton2 실전 도입기

   - AB180에서 기존 애플리케이션을 Graviton(ARM)으로 이전하면서 겪었던 내용을 정리한 글
   - Graviton에 대한 간략한 소개 및 x86과의 차이점
   - Python 애플리케이션을 ARM에서 실행하기 위해 필요한 과정
   - 실제 이전하면서 겪었던 어려움, 또 그걸 어떻게 해결했는지
   - 그래서 비용은 얼마나 줄었는지
   → Graviton 이전 후 15% 가량 비용 감소

   AWS 가 Graviton - ARM64 용 php 속도를 개선했다는 기사도 생각이 나요. https://news.hada.io/topic?id=2539
"
"https://news.hada.io/topic?id=5577","2022년 UX와 웹 디자인 트렌드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          2022년 UX와 웹 디자인 트렌드

   1. 원격 사용자 조사가 표준이 됨
   2. 가상 화이트 보드에 더 많은 사람들이 참여하게 될 것
   3. 제품/UX 디자이너들이 건강/웰빙등에 더 많은 고려를 하게 되고, 사람들을 좋은 방향으로 유도할 것
   4. 원격 업무가 더 잘 진행되도록 하기 위한 보조 도구들이 나올 것(구글 캘린더의 회의시간 분석, 화상회의 참여자별 말한 시간을 알려주는 카운터 등)
   5. VR에 대한 푸시로 더 많은 아바타와 3D 시각화를 보게 될 것
   6. 메타버스든 아니든, 온라인과 오프라인 삶이 더 많이 엮이게 될 것
   7. 접근성에 대한 더 많은 기대
   8. 디자이너들이 모션(애니메이션)에 대해서 좀 더 책임감을 가지고 접근
   9. 타이포그래피는 더 커질 것(Oversized Typography)
   10. 포용적 디자인(Inclusive Design) 이 젠더 중립성을 상향시키고, UX연구를 더 확장 시킬 것
   11. UX와 AI가 가까워 짐. 사용자에게 제공하는 가치에 대해서 더 전략적으로 생각해야

   'Inclusive Design'은 문맥을 보면 '포용적 디자인'이 더 적합하다고 생각합니다.

   아, 한국어 표현으로는 그게 더 맞겠네요 고맙습니다!

   GeekNews 늘 잘 읽고 있습니다. 고맙습니다.
"
"https://news.hada.io/topic?id=5543","베네딕트 에반스의 기술 트렌드 2022: 미래를 향한 3단계","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   베네딕트 에반스의 기술 트렌드 2022: 미래를 향한 3단계

   - 베네딕트 에반스의 2022년 리포트 (94p 슬라이드) 간추린 요약
   - 세가지 단계
   ㅤ→ Future : 2030년을 위한 기술 비젼들
   ㅤ→ Present : 2010년대의 아이디어를 실행한 스타트업들
   ㅤ→ Past : 2000년대의 아이디어로 Disrupt된 기존 경제들
   [ Future : 2030년을 위한 기술 비젼들 ]
   - Web3, Metaverse
   ㅤ→ 그리고... LEO 위성, 대체육, AI, ESG, 퀀텀, 로보틱스..
   - 훌륭한 리브랜딩
   ㅤ→ 암호화폐(가치,결제,이체) ⇨ Web3 (소프트웨어, 인터넷 비즈니스, 네트웍을 만드는 새로운 구축모델)
   ㅤ→ VR/AR(게이밍 헤드셋, 니치 산업용도구) ⇨ Metaverse(스마트폰 이후의 플랫폼)
   ## Web3 : 차세대 인터넷의 꿈
   ㅤ→ 사용자가 만들고, 사용자가 네트워크 와 돈을 컨트롤
   ㅤ→ Web3 = Open Source 2
   - NFT : 요즘 가장 뜨거운(white-hot) 아이디어
   - Helium : People-Powered Networks, 블록체인을 기반으로 하는 분산형 무선 인프라
   - 아직은 재미나지만, 명확하지 않음
   ## Metaverse : 유니버설 스크린의 비젼
   - 관심은 많아지고 있고, 오큘러스 퀘스트2가 1년만에 1천만개를 팔았지만, 락다운에서도 급증하진 않음
   - 현재까진 VR/Oculus 보다 Roblox 가 더 큰 얘기임
   ㅤ→ 과연 히트치고 사라진 게임과 달리 10년이상 플랫폼으로 존속할수 있을까 ?
   ㅤ→ 2.5~3.5억 게임 사용자는 Snap 사용자와 비슷한 수준이고, 10억 아이폰 사용자에 비하면 일부분
   ㅤ→ 모바일이 게임의 TAM(전체시장) 규모를 키우긴 했음
   - AR/VR 이 얼마나 유니버설(보편적)하게 될수 있을까?
   ## 2030
   - VR 과 Crypto은 기술로선 훌륭한데, 정말 유용할까 ?
   - 미래가 오는데 꽤 오래걸릴수 있음
   - AI 와 VR 도 꽤 오랜 기간의 '겨울'을 겪었음. 앞으로 한번 또는 두번의 겨울이 더 찾아올수도
   - 하지만 유니버설한 것들이 있음
   ㅤ→ Identify, Self-expression, Place and Self
   [ Present : 2010년대의 아이디어를 실행한 스타트업들 ]
   - 요즘 회사들은 뭘 만들고 있을까 ?
   ㅤ→ 지난 십년간의 훌륭한 아이디어들 : SaaS, Cloud, 머신러닝, DT, 워크플로우, 자동화, 이미지 인식, 핀테크, 보이스, 비디오, 라이브 스트리밍
   ㅤ→ Web3, Metaverse 와 그외 모든 것들
   ## Digital Transformation
   - 엔터프라이즈 기술의 세대 변화
   ㅤ→ 메인프레임 → 클라이언트/서버, PCs, Oracle, Microsoft → Cloud, SaaS, 머신러닝
   - 클라우드로의 이관은 아직도 초기
   ㅤ→ 기업 IT의 10~15%, 워크플로우의 20~30% 만 클라우드로 이전됨
   - 아직도 메인프레임은 있음 (IBM 메인프레임은 2020년에도 계속 설치중)
   - Hyperscaler 의 증가
   ㅤ→ 알파벳(구글)과 Microsoft 두 회사가 올해 클라우드 인프라에 47조원($40bn)를 썼음
   - 더 많은 SaaS들이 나오고, 많은 분야에서 사용중
   ㅤ→ 기술분야의 회사들은 약 150개, 미디/리테일은 125개, 제조업은 100개, 정부는 75개, 에너지는 50개..
   - 클라우드는 파일 공유가 아닌 ""Workflow""
   ㅤ→ 전문가용 비디오를 위한 Frame.io : 이메일/슬랙/파일공유/구글쉬트를 대체. 모든 부분에서 머신러닝을 사용하지만 보이지 않음
   - 수천개의 회사들이 지난 십년간 배운 모든 것들을 모든 분야에 적용중
   [ Past ]
   - ""인터넷이 음악과 신문에 했던 모든 일들이 모든 사람에게 일어나는 중""
   - 인터넷이 진입장벽을 산업 하나씩 무너뜨림. 신문-책-유료TV 로 옮겨가며
   - 유료TV가 ""천천히 그러다 갑자기"" 무너졌다면, 리테일은 오랫동안 ""끓는 물속의 개구리(Boiled Frog)""였음
   - 콘텐츠 분야 신규 진입자들의 투자금액이 기존 콘텐츠 회사들을 뛰어넘음 (넷플릭스, 아마존..)
   - 영국의 16-34세들은 전체 영국의 TV산업 보다 더 많은 시간을 미국의 콘텐츠 스트리밍에 쓰는 중
   - 애플은 iPhone 과 Apple TV를 2007년 같은 이벤트 에서 발표했음
   ㅤ→ 하지만 10년 이상 TV 소프트웨어는 Backwater(후미진 곳, 정체된 곳) 였음
   ㅤ→ 라이브에서 스트리밍으로 가면서 이제 TV는 새로운 격전지
   ㅤ→ 목표는 $200bn(240조원)이 넘는 TV 광고 시장
   - Youtube 는 2005년, Hulu는 2007년에 시작
   ㅤ→ 오래된 아이디어들이 드디어 동작하게 됨
   ## Retail 언번들링
   - 락다운이 미래의 수용 여력을 앞당김 (다만, USA가 다른 나라에 비해 약함)
   ㅤ→ 영국인의 80%가 온라인에서 정기적으로 구매하지만, 이탈리아는 그 1/3 밖에 안됨
   ㅤ→ 식료품을 제외하면 영국의 40% 소매판매는 온라인으로 이뤄짐
   - 모든 사람이 온라인으로 물건을 구매하는데, ""어떻게 구매할까?""
   ㅤ→ 박스 배송 or 손/자전거 배송
   - 아마존은 지난 1년간 배송비용에 $74bn(87조원)을 사용. 2022년엔 UPS/Fedex를 넘어설 에정
   - 새로운 채널, 새로운 어그리게이터 : 이커머스 아마존이 카-커머스(Car-Commerce) 월마트를 넘어섬
   - 새로운 채널들은 새로운 통행료 요금소를 가짐
   ㅤ→ Merchant Media : 아마존은 $25bn(약 30조)의 광고 수익을 내고 있고, 아마도 AWS보다 더 많은 현금을 만들고 있을 것
   - 끊임없이 생겨나는 경쟁자들
   ㅤ→ Shopify가 지난 1년간 총거래액 $160bn(190조원에 도달)
   - 또 다른 언번들링 방식
   ㅤ→ 아마존의 60%가 이제 Marketplace (아마존 직접 판매가 아닌 오픈마켓)
   ㅤ→ Shopify도 아마존 Marketplace의 45% 정도 규모
   - 애플 같은 새로운 Gatekeeper 의 등장 (ATT 같은 개인화 광고 차단)
   ㅤ→ 이건 D2C 브랜드 들에게 큰 영향을 줌
   ㅤ→ 작은 브랜드 들이 온라인에서는 더 큰 판매량을 보여줌
   - 유명 브랜드들도 이커머스를 배워 가는중 (로레알은 27%가 이커머스 판매)
   - Zara 와 H&M이 정체하는 동안 Shein이 새로운 UX와 데이터 모델로 파고듬 (대규모의 사용자 Acquisition 예산을 사용)
   ㅤ→ 미국 10대들에게 5% 이하에서 시작하여 1년간 5배이상 성장
   ㅤ→ 어느 추측에선 Shein 이 현재 미국에서 가장 큰 Fast Fashion Retailer임 (SPA)
   - 백화점을 슈퍼스토어 들이 밀어냈듯이, 이커머스가 백화점과 슈퍼스토어들을 넘어섬
   [ 결론 ]
   - 소프트웨어가 세상을 먹어치우면, 모든 것이 소프트웨어 질문이 됨
   - 기술이 미래를 만드는 동안, 산업은 그에 맞추기위해 조정 중
   - 음악은 인터넷에 의해서 초기에 전복된 산업중의 하나. 지금은 어떨까 ?
   ㅤ→ 2010년까지 규모가 줄어들다가, 스트리밍에 의해서 다시 성장중
   - 플랫폼 rent : 애플은 전체 음악시장 또는 넷플릭스 만큼의 수익을 앱스토어 수수료로 벌어들이는 중
   - 플랫폼 leverage : 애플은 플랫폼과 설치된 기기들 기반으로 $100bn(115조원)이 넘는 수익을 내는 중
   - 애플의 전체 수익은 음반시장 규모의 20배가 넘음
   - 기술 스타트업 에코시스템에는 더 많은 돈이 쏟아지는 중 ($100bn, 115조원)
   ㅤ→ 규모가 예전 닷컴 버블 수준으로 올라왔지만, 그때처럼 약속만이 아닌 현실 기반으로 투자가 진행
   - 테슬라의 현재 가치는 전체 자동차 산업보다 더 많은 가치를 지닐 것이라는 것을 가정함
   - 기술 회사들은 큰 회사들에게 어카운팅 도구를 팔아왔지만, 이제는 우리 삶의 일부임
   - GM,Ford,Chrysler 가 1950년대 포춘 500 회사들 수익의 20%를 차지했음
   ㅤ→ 이렇게 팔린 차들로 만들어진 Car-Commerce 때문에 수익을 낸 사람들은 누굴까? 디트로이트 일까? 아님 Retailer 일까 ?

   자료에 나온 문장과 그래프가 엄청 좋네요

   - Tech in 2020: 거인들의 어깨에 서서 https://news.hada.io/topic?id=1483
   2021년은 제가 건너뛰었네요.
   - Tech in 2021: Great Unbundling https://static1.squarespace.com/static/50363cf324ac8e905e7df861/…
"
"https://news.hada.io/topic?id=5590","PullRequest - Code Review as a Service","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 PullRequest - Code Review as a Service

   - 코드 리뷰를 온디맨드로 제공하는 서비스
   - 개발팀이 사용하는 도구를 그대로 이용해서, 코드상에 있는 보안 위협/크래시/성능 이슈등을 리뷰
   ㅤ→ GitHub/GitLab/BitBucket
   - 아마존/구글/마이크로소프트/Uber/Slack 등에서 경험을 가진 리뷰어 네트워크 보유
   - 개발자 스크리닝(기술 면접) 지원하는 Qualified, 전체 프로젝트를 평가하는 Project-Review 등의 서비스도 제공

   지금은 단순한 것밖에 안될 것처럼 보이는데, 조금씩 더 발전시키면 재밌는 프로덕트가 될 수도 있을 것 같아요.

   정적 분석의 프론트엔드를 GitHub/GitLab 등에서의 PR/MR 인터페이스로 대체한 느낌이네요.

   먹힐 것 같기도 하네요

   기술 면접은 모르겠는데
   프로젝트는 문맥이 중요한데 잘될까 모르겠어요

   어.. 음.. 나름 유용하겠다 싶으면서도, 뭔가 이상한 느낌이 드는군요.
   코드 리뷰가 단순히 저것만을 위한게 아닐텐데..
"
"https://news.hada.io/topic?id=5461","ESG 평가는 AI로 어떻게 도약하고 있을까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ESG 평가는 AI로 어떻게 도약하고 있을까?

   - 글로벌 지속가능투자자산(GSIA)에 따르면, ESG 투자 규모는 2016년 약 2경7281조원(22조8390억달러), 2018년 약 3경6651조원(30조6830억달러), 지난해 약 4경2167조원(35조3010억달러)로 증가함
   - ESG 투자가 활발해지면서 ESG 정보도 중요해짐
   → 기업 ESG 경영 현황과 시장 반응 등이 그 예임
   → 기업 ESG 보고서, ESG 관련 언론 보도, 소셜 미디어 글은 이 내용을 담고 있음
   → ESG 등급 또는 점수도 ESG 정보 중 하나임
   → 요즘은 자연어 처리, 머신러닝, 컴퓨터 비전 등 AI 기술로 ESG 정보를 수집, 분석해서 ESG 평가에 활용함
   - 미국 기업 센스폴리오
   → 딥러닝 알고리즘으로 언론보도·보도자료·소셜 미디어 글·기업 보고서 등 ESG 관련 주제를 검색하고, 활자를 분석함
   → 자연어 처리 기술로는 주제, 긍·부정적 내용, 말뭉치와 활자의 객·주관성을 파악함
   - 스위스 기업 렙리스크
   → 인쇄 매체·온라인 매체·소셜미디어·정부기관·규제기관·싱크 탱크·뉴스레터 등을 조사함
   → 관련 위험 사건을 자동 확인하도록 지원하고자 머신러닝으로 자료를 분석함
   → 각 위험 사건은 머신러닝 모델 예측에 기반해 관련 기업, 프로젝트, ESG 현안 등 모든 엔티티에 자동 태그됨
   - 중국 기업 위뱅크
   → 컴퓨터 비전, 머신러닝 기술로 위성 이미지에서 ESG 정보를 수집·분석함
   → 여기서 기업의 환경 영향을 조사함
"
"https://news.hada.io/topic?id=5530","Show GN: 해피타입 - 매일 아침 명언 타이핑","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Show GN: 해피타입 - 매일 아침 명언 타이핑

   안녕하세요.
   지인의 소개로 긱뉴스를 알게되어 눈팅만 하다가 처음 Show에 글을 써보네요.
   최근 핫한 Flutter로 1인 개발한 앱을 소개시켜드리려 합니다.
   (플러터는 dart 언어를 사용하고, 크로스플랫폼을 지원합니다.)
   // 앱소개 -----
   많은 명언 앱이 있습니다.
   많은 명언 앱에서는 명언을 그저 눈으로 읽기만 합니다.
   그저 읽기만 해서는 도움이 되지 않습니다.
   우리의 뇌와 마음은 다양한 자극을 줄수록, 많이 곱씹을수록 더 깊은 의미를 받아들일 수 있습니다.
   매일 아침 좋은 글을 타이핑해보는 건 어떨까요?
   눈으로 따라 읽는 것뿐만 아니라, 손가락으로 타이핑함으로써 더 많은 자극을 받을 수 있습니다.
   더 많이 생각하게 되고, 더 많이 마음에 새길 수 있습니다.
   변화는 작은 것에서부터 시작합니다.
   지금 해피타입하세요!
   * 구글 플레이 다운로드 : https://play.google.com/store/apps/details?id=net.tonysoft.happy_type
   * 앱스토어 다운로드 : https://apps.apple.com/app/id1592023798#?platform=iphone

   문구 첫 글자 작성할 때마다 자모 분리가 일어나네요. 사용하는 기종은 LG Wing (LM-F100N), Android 버전 11, 입력기는 LG 키보드입니다.

   안녕하세요!
   LG 기기에서는 확인을 못해봤는데, 덕분에 버그를 알게됐네요~ 감사합니다 ㅠ_ㅠ
   LG키보드가 LG 핸드폰의 기본 소프트웨어 키보드를 말씀하시는게 맞을까요?

   네, 맞습니다. 기본 소프트웨어 키보드입니다. 문구를 입력할 때 공백 키를 한번 더 누로고 시작하면 자모 분리가 일어나지 않더군요. 예를 들어 ""행복한 하루를 보내세요.""에서 '행복한' + 공백 + 공백 + '하루를' 이런 식으로 입력하면 분리가 일어나지 않습니다.

   우아 북모리 만드신 분이셨네요!! 정말 꾸준히 개발하셨군요 존경스럽습니다!!!!
   제가 원하는 앱 자꾸 만들어주셔서 넘 고맙고 넘 부럽...

   안녕하세요!
   북모리를 알고있으시네요!ㅎ 감사합니다.
   원하시는 앱이라니 영광이군요~ :)

   재미난 컨셉이네요!
   폰트나 효과가 깔끔해서 첫 경험이 굉장히 좋네요. (아이폰에서 확인했습니다)
   - 타이핑할 때 피드백이 크지 않아서, 약간의 진동을 통해서 햅틱 효과를 주면 색다르겠다 싶은 느낌이 드네요. 명언 별로 중요 문장에 액센트를 더 준다 느낌으로 해도 좋고요.
   - 명언 타이핑 완료 후 꽃가루? 날리는 애니메이션 끝난 후에 다음 화면으로 돌아가는 X 버튼이 좌상단이라서 이상하게 어색합니다. 화면이 가운데가 비어있으니 복사/스크린샷저장/다른 명언 쳐보기 등의 버튼이 가운데 있어도 좋을 것 같아요.
   - 배지 보인 후에 우상단 X를 눌러야만 화면이 꺼지는데 화면 아무데나 눌러도 꺼지면 편할 것 같아요.
   - 뒤져봐도 다른 명언 쳐보기 버튼은 없네요? 원래 없는걸까 싶은데.. 하루에 몇개까지는 쳐볼 수 있게 하고 더 이상 치고 싶은 경우에 해제하는 기능을 프리미엄에 추가해도 좋지 않을까 싶네요 ^^;;
   * 올리실때 Show 로 선택이 안된듯 하여 제가 옮겨두었습니다~

   @xguru님 상세한 피드백 정말 감사합니다!!!
   하나 하나가 다 의미있는 피드백이네요 :)
   추가로 이야기 나누고 싶은 부분들만 언급해보자면요~
   타이핑 완료 후에 각종 버튼이 나오는 방향 너무 너무 좋네요. 말씀해주신 것과 거의 비슷한 방향으로 좀 더 고민해보겠습니다~
   원래 기획 컨셉이 이랬거든요~
   - 하루에 하나의 명언만 타이핑하자.
   - 더 타이핑하고 싶다면 같은 날짜에는 동일한 문장을 여러번 타이핑하도록 하자.
   - 다른 명언을 타이핑하고 싶다면 다른 날짜를 선택해서 치도록 하자
   그래서 일부러 만든 제약인 셈인데, 그게 사용자로 하여금 의문을 갖게 만들었네요..ㅠ
   아마 다른 유저분들도 비슷한 방향으로 의문을 가질 수 있을 것 같아요.
   정말 중요한 부분을 짚어주신 것 같아 너무 감사드립니다!
   * Show 선택이 안돼있었군요.ㅠ 다음부터 잘 확인해서 올릴게요ㅎ
"
"https://news.hada.io/topic?id=5546","Dracula - 227+개의 앱/쉘을 위한 다크모드 테마","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Dracula - 227+개의 앱/쉘을 위한 다크모드 테마

   - 모든 환경에서 하나의 공통된 다크 테마를 적용 가능
   ㅤ→ 공통 팔레트 색상은 깃헙에 공개 : BG #282a36 , FG #f8f8f2, 선택 #44475a, 코멘트 #6272a4 등
   - VSCode, Notepad++, iTerm, Vim, Zsh, JetBrains, Slack, Xcode, Emacs, Chrome 등 다양한 앱을 지원
   - 개발자에게 좀 더 최적화된 Pro 버전은 별도 ($60)
   ㅤ→ 좀 더 수학적으로 고려된 색상 팔레트 및 폰트 등과 추가 테마들 지원
   Q: 밝은 모드는 지원 안 하나요?
   A: 아뇨. 드라큘라는 빛을 견딜 수 없습니다.
"
"https://news.hada.io/topic?id=5588","Open Subscription Platforms - 구독 플랫폼들의 개방 여부 확인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Open Subscription Platforms - 구독 플랫폼들의 개방 여부 확인

   - 유/무료 구독플랫폼이 구독자이메일/콘텐츠/결제 데이터/고객정보 등 데이터 Export를 지원하는지 등을 정리
   - 오픈 : Substack, Ghost, Podia, Memberful, WooCommerce, Memberstack, REvue, Pico Payments, Memberspace
   - 클로즈드 : Medium, Patreon, Convertkit, Gumroad, Twitch
"
"https://news.hada.io/topic?id=5554","Excel 월드컵 FMWC 2021 최종 승자 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Excel 월드컵 FMWC 2021 최종 승자 발표

   - ""Excel as eSports"" 를 표방하는 Financial Modeling World Cup
   - 실제 사례 데이터를 가지고 엑셀로 문제를 해결하는 대회
   ㅤ→ 해결해야하는 질문 목록을 주고 이에 맞는 재무 모델을 생성해서 제출
   - MS가 후원하며 상금은 총 $10,000 (1등 $3000, 2등 $2000)
   - 매년 시행되며, 올해는 전세계 128명이 참가
   - 전세계 랭킹표도 있고 현재는 미국의 Diarmuid Early 가 11700 점으로 세계랭킹 1위
   - 하지만 이번 대회에선 세계 랭킹 3위인 호주의 Andrew Ngai 가 1등

   모든 경기는 유튜브로 스트리밍 됩니다
   - https://www.youtube.com/channel/UCOlnCUAKLENyFC8wftR-oNw
"
"https://news.hada.io/topic?id=5561","freesound - 약 50만개의 무료 소리/효과 DB","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    freesound - 약 50만개의 무료 소리/효과 DB

   - CC 라이센스로 공유된 다양한 소리 및 효과음 들
   - 누구나 업로드 가능
   - geotag 로 지도 기반 검색 가능
   - tag 별 검색 지원 : ambient, bass, city, drums, electronic, loop, nature, metal, wind..
"
"https://news.hada.io/topic?id=5579","Kinesis Advantage 360 Pro 인체공학 키보드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Kinesis Advantage 360 Pro 인체공학 키보드

   - Pro 버전은 블루투스 지원 (키보드간 및 장비와 연결 모두, 최대 4대 페어링)
   ㅤ→ ZMK 오픈소스 펌웨어 기반
   - 좌우 2개로 분리된 인체공학 키보드
   ㅤ→ 각 키보드가 휘어진 형태로 손목과 손가락이 자연스러운 포지션
   ㅤ→ 키간 간격을 줄여서 멀리 뻗지 않아도 됨
   - 76키 레이아웃 : 엄지 클러스터 (Win,Ctrl,Enter,Space,PgUp,PgDn..)
   - 3단 높이 조절
   - Gateron 갈색 스위치 : 저압 55g
   ㅤ→ 내년엔 UpgradeKeyboards 통해서 축 교체 가능하게 지원 예정
   - Pro 버전은 백라이트 내장
   - Pro $439 , 일반 $399

   55g 정도면 저압은 아닌것 같네요 😅😅 저압 원하시면 게이트론 백축 추천합니다. 35g

   스플릿 오쏘리니어 스타일이 적응하기 어렵긴 하더군요 키배열을 다양하게 바꿔봐도 한 달 넘게 쓴 정도로는... 기존 키보드 속도를 따라가질 못 하고 있습니다. 다만 코딩이 이렇고, 글 쓰기는 굉장히 편합니다. 손등 손목 어깨등 전반적으로 좋아졌습니다.

   엄지 클러스터에 오쏘 배열인게 상당히 솔깃한 제품이네요. 다만 zmk가 qmk에 비해서 아직 개발중인 기능이 (생각보다) 많아서 고민스럽긴 합니다. 배터리 상태에서 백라이트도 배터리가 얼마나 버텨줄지 살짝.. 회의적입니다.

   저걸 쓰려면 많은... 노력이 필요합니다(... ) 저는 그 노력을 하지 못해서 창고에 먼지만 먹어가고 있는데... 어찌 처분할지부터 좀 고민이군요...

   중고 삽니다

"https://news.hada.io/topic?id=5485","미 연방거래위원회(FTC), Nvidia의 ARM 인수를 막기 위한 소송을 제기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              미 연방거래위원회(FTC), Nvidia의 ARM 인수를 막기 위한 소송을 제기
   - Kinesis 키보드 3년 사용 후기 https://news.hada.io/topic?id=2674

   블루투스 지원하면 고려해봐야지 했는데 드디어 나왔네요.
   - 작년 9월 NVidia가 ARM을 47조원(40B)에 인수하는 계약을 체결
   저 중간에 링크 케이블까지 무선으로 바꿔줘서 더 좋구요.
   - FTC는 이 수직결합으로 인해 경쟁 회사들이 자체 칩을 개발하는 것에 통제권을 가지게 될 것이며,
   미국시간 12/20 부터니까 아마도 오늘 저녁쯤 부터 Drop.com 에서 프리오더 가능합니다.
   - 특히 이 결합을 통해서 ARM 기반 제품을 사용하는 3가지 시장의 경쟁에 해를 끼칠 것이라고 판단
   (저녁까지 지름을 더 고민해 볼 시간이 있군요..)
   ㅤ→ 승용차용 첨단 운전자 지원 시스템(ADAS)

   ㅤ→ 데이터센터 서버에 사용되는DPU SmartNIC
   15분 만에 솔드아웃 되었네요... 내년 여름에 리테일 발매 한다고 합니다.
   ㅤ→ 클라우드 서비스가 사용하는 ARM 기반의 CPU들

   마틴 파울러 옹의 후기라니!
   - 또한 ARM의 라이센스 계약으로 인해, NVidia가 경쟁사의 민감한 정보에 접근이 가능해져 경쟁에 피해를 줄 가능성이 있음
   - 투표 결과는 4-0 이었으며, 행정 심판은 2022년 8월 9일로 예정
   - 조사기간 동안 FTC 멤버들은 EU, 영국, 일본 및 한국의 경쟁 기관 직원들과 긴밀하게 협력했음
"

   - Nvidia, ARM을 47조원에 인수 https://news.hada.io/topic?id=2847
   미국은 그동안 수직 결합으로 인해 효율성을 증대시킨다는 것을 밀어주는 입장이었는데,
   이번 것은 좀 의외의 진행이긴 하네요.
"
"https://news.hada.io/topic?id=5552","Imagor - 빠른 이미지 프로세싱 서버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Imagor - 빠른 이미지 프로세싱 서버

   - Docker로 배포 가능
   - Go 오픈소스로 라이브러리로도 사용 가능
   - libvips 기반으로 ImageMagick 보다 4-8x 빠름
   - thumbor URL 문법 지원 : 크기조정, trim, crop, align, padding, filter..
   - 필터 : blur, rotate, grayscale, watermark, sharpen..

   Github에 가보니 imagor인것 같습니다.

   으헛 제목에서 r 이 사라졌군요 ㅠ 변경해두었습니다. 고맙습니다.
"
"https://news.hada.io/topic?id=5478","Open Replay - 오픈소스 세션 재생 스택 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Open Replay - 오픈소스 세션 재생 스택

   - FullStory / LogRocket 의 오픈소스 대체제
   - 사용자들이 웹앱을 어떻게 사용하는지 세션을 그대로 재생할 수 있게 해주는 도구
   ㅤ→ 네트웍 활동, 콘솔 로그, JS 에러, CPU/메모리 사용량 등을 캡쳐
   ㅤ→ 브라우저에서 디버깅 하는것과 비슷한 환경 제공
   ㅤ→ 사용자의 화면을 실시간으로 보면서 서포트 가능
   - ~18KB 정도의 트래커가 비동기로 데이터를 전송해서 성능 저하를 최소화
   - Omni-Search 기능으로 사용자 액션 이나 세션에 대해 검색/필터링 가능
   - AWS/GCP/Azure 등에 쉽게 배포 가능
   - Sentry, Datadog, CloudWatch, Stackdriver 등과 연동 지원
"
"https://news.hada.io/topic?id=5584","3주만에 '노션'으로 데이팅 서비스 만들기 - 노션 이력서 소개팅","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  3주만에 '노션'으로 데이팅 서비스 만들기 - 노션 이력서 소개팅

   - 3주만에 노션, 페이퍼폼, 우피를 활용하여 데이팅 서비스 MVP 만든 비하인드 스토리
   - 기존 데이팅 서비스의 문제
   - 실제 데이팅 니즈를 온전히 반영하고 있지 않다는 것
   - 가벼운 만남과 선의 사이에 있는 니즈를 공략
   - 오프라인 만남과 같은 '자연스러운' 맥락 있는 만낭을 온라인에서 유도하는 것을 목표
   - MVP 만들기
   - 온라인 상에서 온전한 맥락을 전달하기 위해, 새로운 형식의 프로필을 만드는 것에 집중
   - 나머지 영역은 최소한으로 개발 - 노션, 페이퍼폼, 우피 같은 툴 최대한 활용
   - 노션 이력서 소개팅이 된 이유
   - 노션의 높은 자유도와 노션 이력서 문화에서 영감을 받음
   - 입체적인 개인을 보여주는데 가장 적합한 툴이라고 판단
   - 서비스 특징
   - 페이퍼폼으로 내용만 채우면 노션 API 를 활용하여 자동으로 노션 이력서 생성
   - 우피를 활용하여 웹사이트 서빙
   - 12월 24일 부터 매주 2명씩 소개
   *홍보 관련 규정을 찾아봤는데, 딱히 없어서 HackerNews 처럼 직접 만든 서비스 이야기도 관심을 갖으실 수도 있을 것 같아 제작기를 공유합니다. 문제 있으면 알려주시고, 질문과 관심 모두 환영합니다!

   git shos로 옮겨주세요 운영자님

   Show 항목을 이야기하시는 건가요? 해당 항목도 검토해봤는데, 가이드를 읽어보니 단순 서비스 소개가 아닌 제작기 형태는 geek news가 더 적합한 것 같아, 일단 geek news에 올렸습니다. 참고 부탁드립니다.

   실제 매칭성공(?) 사례가 얼마나 있는지 궁금합니다

   마지막 문단 보고 홍보/소개 인줄 알았는데 아니었군요. 죄송합니다.

   내일부터 첫 소개 시작이라서 아직 매칭 사례는 없습니다 ㅎㅎ 프리 오픈 기간이여서 신청만 먼저 받고 있고, 현재 210명이 넘는 분들이 제출해주셨습니다!
"
"https://news.hada.io/topic?id=5580","Bottles - 리눅스에서 윈도우 소프트웨어를 쉽게 실행하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Bottles - 리눅스에서 윈도우 소프트웨어를 쉽게 실행하기

   ""Wine을 더 쓰기 쉽게""
   - 윈도우 프로그램 실행을 위한 환경별 세팅 지원
   ㅤ→ Gaming, Software, Custom
   - 모든 윈도우 환경을 쉽게 조정 : dxvk, vkd3d, 게임모드, esync, fsync 등
   - 디펜던시 관리자 제공 : 원하는 패키지만 추가로 설치
   - 버전 관리자 : 언제든 Bottle의 이전 State로 복원 가능. 새로운 디펜던시 설치시 자동으로 새 State 생성
   - 완전한 샌드박싱으로 안전함 (Flatpak 사용)

   몇번 사용 해 봤는데 관리하기 편해서 좋네요

   아직 안 써 봤지만 유용할 것 같아요. 감사합니다!

   Wine Gui 매니저는 Wine 개발사 CodeWeavers가 직접 만든 CrossOver라는 상용 프로그램이 이미있긴 합니다.

   후기가 궁금하네요.
   Wine 이 불편해 VM 으로 윈도우 프로그램을 사용하고 있는데, VM 도 좋은게 아니여서요.
"
"https://news.hada.io/topic?id=5508","Threadit - 비동기 협업 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Threadit - 비동기 협업 도구

   - 자신이 한 업무/데모/HowTo 등을 쉽게 영상으로 만들어 공유하는 비동기 협업 도구
   ㅤ→ 화면 녹화
   ㅤ→ 여러개의 비디오 클립을 하나로 묶기
   ㅤ→ 코멘트 및 답글
   - 웹사이트 및 크롬 확장으로 바로 작성 가능
   - 용도
   ㅤ→ 제품 개발 : 시간대가 다른 팀원들끼리 협업 가능. 스탠드업 미팅, 코드 리뷰, QA 등
   ㅤ→ 마케팅 및 디자인 : 피드백/디자인 리뷰, 스프린트, Research read-outs
   ㅤ→ 세일즈 및 고객 관리 : 개인화된 피치, 제품 데모
   ㅤ→ 고객 지원 : 트러블 슈팅 & 디버깅, How-to, 티켓 관리
   ㅤ→ 리더십 소통 : 1:n 대화, 비동기 All-hands, 프로젝트 업데이트 및 승인 받기
   - 구글 사내벤처 인큐베이터 Area120 에서 만든 서비스
"
"https://news.hada.io/topic?id=5531","NFT가 궁금한 당신을 위한 꼼꼼 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         NFT가 궁금한 당신을 위한 꼼꼼 가이드

   Q. 엔에프티가 뭔가요?
   Q. 엔에프티를 왜 사나요?
   Q. 포토카드 엔에프티를 사면 저작권도 나한테 오나요?
   Q. 팬들이 엔에프티를 사면 창작자에겐 뭐가 좋나요?
   Q. 누구나 엔에프티를 만들어 팔 수 있나요?
   Q. 엔에프티 가격을 결정하는 가장 중요한 요인은 무엇인가요?
   Q. ‘지루한 원숭이들의 요트클럽’(BAYC) 엔에프티 가격은 왜 수십억원도 넘나요?
   Q. 어떤 블록체인에서 발행된 엔에프티를 사야 하나요?
   Q. 남의 그림이나 사진을 엔에프티로 만들 수도 있나요?
   Q. 엔에프티도 비트코인처럼 지갑 주소만 알면 손쉽게 주고받을 수 있나요?
   Q. 비트코인처럼 엔에프티도 쉽게 현금화가 가능한가요?

   위 기사 말미에 보면 NFT와 부동산의 유사성을 지적하는 내용이 있는데, 그래서 그런지 NFT를 통한 부동산 거래도 시도되는 모양이더군요.
   소유권 이전에 단 22분…이제 아파트도 NFT로 사고판다
   https://realty.chosun.com/site/data/…
"
"https://news.hada.io/topic?id=5564","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   6부작 XBOX 다큐멘터리 [Power On: The Story of Xbox] 전편을 다 시청할 겁니다.
   https://news.hada.io/topic?id=5569

   연말 계획대로 <이펙티브 타입스크립트> 부터 시작해 독서를 시작했어요

   최근 개봉했던 영화 듄의 원작 소설을 읽으려고 해요~ 1권만 900쪽이 넘네요.

   듄 홀린듯이 왕화관에서 나와서 또 홀린듯이 소설 샀는데 홀린듯이 금세 읽는 신비한 경험을 하게했죠. 정말 재밌는 책이었습니다

   저는 올해 SimplyPiano 로 피아노 배우기를 시작했는데요.
   한 4달 정도 했는데, 지금 베토벤의 ""엘리제를 위하여"" 를 치기 시작했어요.
   느린/보통/빠른 속도의 세가지 버전 모두 별 3개를 따기 위해 열심히 연습중입니다.
   이번 주말엔 빠른 버전 별 3개를 위해 열심히 쳐보려구요.
"
"https://news.hada.io/topic?id=5486","Boox Mira Pro - 25.3인치 e-Ink 모니터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Boox Mira Pro - 25.3인치 e-Ink 모니터

   - 25.3인치, 16 단계 그레이(모노크롬)
   - 3200x1800 (145ppi, 16:9)
   - HDMI, Mini HDMI, USB-C, DP
   - VESA 지원, 듀얼 스피커 내장
   - 리프레시 속도 조절 : Normal, Text, Video, SlideShow 모드
   - $1799
   - Tilt (40°), Pivot(90°), 높이조절(50mm) 가능한 별도의 Adjustable Ergonomic Stand 출시 예정
   - 13.3인치의 터치 가능한 타블렛형 모델도 있음 ($799)

   글 많이 보는 사람한테 딱 일듯 해서.. 혹하는군요.
   모노크롬인데 비해 가격은 좀 너무한듯 하지만..
"
"https://news.hada.io/topic?id=5581","내가 2021년에 배운 52가지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           내가 2021년에 배운 52가지

   2014년부터 매년 새로 배운 52가지를 정리하는 Tom Whitwell의 재미난 리스트. 일부만 발췌 번역
   1. 매일 백만명이 터키앱 Faladdin에 마시고 난 커피 침전물 사진을 올려서 개인화된 운세를 받아 봄
   2. 19세기 초, 천연두의 백신인 우두를 스페인에서 미국으로 운송하기 위해 24명의 스페인 고아를 이용했음
   ㅤ→ 2명에게 우두를 팔에 감염시키고, 9~10일후 병이 나아질 때쯤 다시 다른 쌍을 감염시켜서 목적지까지 우두 바이러스를 살려둠
   3. 뷰티 라이브 스트리머 Li Jiaqi 가 타오바오 12시간 쇼 한번에 2.2조원($1.9b) 어치 물품을 판매
   4. 지난 20년간 소비된 미국 전력의 10%가 러시아 핵탄두에서 나온 것
   5. 일부 남아프리카 학생들을 급식비를 벌기 위해 학교 Wi-Fi 암호를 판매함. 4G 데이터가 너무 비싸기 때문에, 주민들은 학교 네트웍을 이용하기 위해 6km를 걸어감.
   7. 세계에서 2번째로 인기있는 (테슬라 모델3 다음으로) 전기차는 $5000짜리 홍광 미니(Wuling HongGuang Mini)
   8. ""Airline Food""는 프로그램이 제리 사인펠드의 스탠드업 코미디 처럼 보이게 만드는 프로그래밍 언어
   9. 파워포인트 초기 버전의 기술팀은 43%가 여성이었음. 당시 실리콘밸리의 평균 여성 비율은 10%
   10. 직장에서 낮잠을 짧게 자면 생산성, 심리적 웰빙 및 인지능력이 크게 향상됨. 대조적으로, 밤에 30분을 더 잔다고 비슷한 개선은 나타나지 않음
   12. 좋은 이메일 제목을 작성하는 방법 : 짧게 만들기(33글자), 저널리즘적 가정을 피하고, 실험을 멈추지 마세요
   13. 1980년대에는 그래프를 그리거나, 문서의 단어 수를 세거나, 랜드스케이프로 인쇄하려면 $50~$100 별도 컴퓨터 프로그램을 구입해야 했음
   14. 개방형 사무실에서 노이즈 캔슬링 헤드폰을 착용하면 인지 오류를 14% 줄여주지만, 진짜 정적(silence)은 이 에러들을 1/3로 줄임
   15. 중국 정부는 Flash Cafe(맥스웰 하우스가 후원하고, 음악가를 초대해서 대화하고 커피를 제공하고 작은 공연을 하는 리얼리티 쇼) 같은 ""과도하게 재미있는"" 콘텐츠를 단속중
   16. 유용한 답변을 원하면, 답변자의 시간과 에너지와 관심을 존중하는 질문을 하세요
   17. 새 Hummer 전기차의 배터리 무게는 오리지널 랜드 로버의 무게와 비슷
   18. 많은 랜섬웨어는 러시아어 또는 우크라이나어등 (크레믈린과 연관있는 나라의) 언어 키보드가 있는 컴퓨터엔 설치되지 않도록 설계됨
   20. 여성의 관리자가 아들이 아닌 딸의 아버지 일 경우 상대 소득이 4% 증가함. 이 ""딸 효과""는 덴마크 중소기업의 25년간 데이터에서 발견됨
   22. 비마그루맙(Bimagrumab)은 체중을 줄이고, 근육량을 증가시키는 단일클론항체(단 하나의 항원결정기에만 항체 반응을 하는 순수항체. 다른 세포는 손상하지 않고 적용 가능)
   ㅤ→ 원래 근소모치료제로 나왔다가 실패하고, 비만 치료제로 임상 성공
   24. ""중국 식당 증후군""(CRS, 중국 음식은 MSG가 들어서 이상 증상이 발현한다는 주장)은 1968년도 한 정형외과 의사의 인종 차별적 장난이었음
   27. Baileys Irish Cream 은 1973년 Soho의 광고 제작자 2명이 45분 만에 발명한 것
   29. Crunchbase에 등록된 195,000개 이상의 소프트웨어 회사중 15% 이하만 외부 투자를 받았고, 97% 이상이 실리콘 밸리 외부에 기반을 두고 있음
   30. 일본 지퍼회사 YKK는 지퍼 테마의 애니메이션도 만들고 있음
   31. 좋은 품질의 오디오는 당신이 말하는 걸 19% 더 똑똑해 보이게 함
   32. 우리가 나비를 계속 잘못 그리고 있음. 살아있는 나비는 대부분 앞날개가 머리 앞으로 나가지 않음. 🦋 죽은 뒤에 날개를 앞으로 부자연스럽게 펼쳐 놓은 것
   34. Ford는 공유 차량에서 나는 악취를 식별한 다음, 승객을 덜 냄새나는 차량으로 이동시키는 앱을 특허로 등록함
   35. 반도체 클린룸은 외과 수술실보다 1000배 더 깨끗해야 함. 이제 단일 트랜지스터가 바이러스 보다 훨씬 작기 때문
   36. B2 폭격기에 들어가는 HSN-3000 부품은 핵 폭발시에 빠르게 이온화 방사선을 감지해서 컴퓨터를 꺼서 전자 장치를 보호하고 다시 켜주는 장비
   37. 개인의 ""탄소 발자국(Carbon Footprint)"" 개념은 2000년대 초 BP(브리티시 페트롤리엄, 세계 5대 석유 회사중 하나)가 만든 것
   39. 시각장애인이 사용하는 지팡이는 생각보다 복잡하고 정교하고 다양하다
   ㅤ→ 세라믹/나일론/연필/마쉬멜로우 등 팁에 따라 다르고, 자동차에서 오는 빛을 반사하고, 5초안에 빠르게 접고 펼 수 있어야 하고, 탄소섬유 등으로 가벼우면서도 노면의 느낌을 그대로 전달
   40. 소셜 미디어 헤드라인이 빠르게 진화하는 중. 점점 더 짧아짐(11단어 & 65자가 이상적)
   41. 초당 태어나는 사람보다 200배 많은 컴퓨터가 만들어 지는 중(ARM 칩이 초당 842개 팔리고, 사람은 초당 4.3명 태어남)
   42. 반려견을 위한 웨이트 기구 및 단백질 쉐이크는 이제 큰 시장임
   43. 프라이버시는 생산성과 연결됨. 전화기 공장에서 생산라인의 작업자 주위에 커튼을 칠 경우 생산량이 10~15%증가 했음
   44. 100명의 짐바브웨인 커뮤니티가 Falkland 섬에서 10년간 지뢰를 제거 중(아르헨티나가 1982년 74일간 점령하면서 심어 놓은 25000개의 지뢰)
   45. 피칭 덱에 자연 이미지(잔디, 나무, 무지개)를 추가하면 투자 가능성이 약간 높아짐
   46. 크메르(Khmer)어에는 74글자가 있어서 전화 키보드로 입력하기 어려움. 그래서 페이스북 메신저 음성 트래픽의 절반이 캄보디아 에서 발생
   47. 전 세계 보톡스 산업은 연간 단 몇 밀리그램의 보톨리누스 독소로 커버 됨. 순수한 결정형태의 보톨리누스 독소는 킬로그램당 $100 trillion(100조 달러, 십경 원)
   ㅤ→ 순수한 6g의 보툴리누스 독소(약 1티스푼)는 2억 명을 죽일 수 있는 것으로 추산됨
   48. 중국은 매 주마다 거대한 자동차 배터리 공장이 오픈. 그 외의 세계에서는 몇 달에 1개 오픈
   49. 51%의 경우 단순히 마취와 절개만 하는 가짜 수술이 진짜 수술만큼 효과가 있음
   50. 1시간에 $64만 내면, 개인용 제트기 내부처럼 보이는 LA 사진 스튜디오를 빌려서 인스타그램에 개인용 제트기를 타는 사진을 올릴 수 있음
   52. 14년간 14000명의 호주인 대상 연구에 의하면 승진이나 해고 모두가 정서적 웰빙이나 삶의 만족도에 영향을 미치지 않는 것으로 나타남

   12번의 실험을 멈추지 말라는 게 무슨 의미인가요?

   제목을 바꿔가면서 A/B 테스트 하라는 의미입니다.
   원글을 쓴 TheHustle의 콘텐츠 담당 Brad Wolverton은 매일 4개의 제목을 바꿔가면서 테스트한다고 합니다.

   아.. 원글에 나와있네요. 감사합니다!!

   내가 2020년에 배운 52가지 https://news.hada.io/topic?id=3330
"
"https://news.hada.io/topic?id=5510","Ask GN: 이번 연말에 뭐 하실 건가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Ask GN: 이번 연말에 뭐 하실 건가요?

   2021년도 이제 곧 끝나갑니다.
   이 연말을 어떻게 보내야지 의미가 있을까요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋아요.
   전 일단 미뤄 놓았던 책읽기(특히 <이펙티브 타입스크립트>)를 할 생각입니다.

   이더리움 컨트랙트 관련 책 2권과 함께, 지내려고 합니다~
   * 마스터링 이더리움
   * 이더리움 쿡북
   최근에 Solana 컨트랙트 개발을 시작했는데, 이더리움 쪽을 보면서 역사 공부를 하면 도움이 되지 않을까 하는 기대감을 가지고 있습니다. ㅎㅎ..

   저는 이번에도 야금야금 저금해둔 행복 저금통을 열어보려고 해요.
   한 해동안 기분 좋은 일이 생기면 메모지에 내용을 간단히 작성해서 1천원부터 5만원까지 함께 저금해 두고 연말에 열어보거든요.
   목표한 바를 이룬 것부터 도움을 주거나 받은 것, 운동 10회 완수 등 소소한 것까지 적어요.
   하나씩 까보면.. 올해 이래서 기분 좋았구나~ 하고 좋은 기억을 살리고, 현금도 챙기고(?) 훈훈한 연말을 보낼 수 있습니다.
   올해 소소한 것은 까먹고 저금 안한 적이 많았는데 내년엔 좀 더 세세하게 해보고 싶어요.

   블로그 글쓰기 열심히 하려고 합니다.
   저도 최근에 이펙티브 타입스크립트 다 읽어서 반갑네요. https://steady-study.super.site/effective-typescript

   2021년 사이드 프로젝트 진척 보고서를 적고 있습니다. 그리고, 최근 일 때문에 바빠서 GeekNews에도 두문불출했는데(.. ) 슬슬 다시 시간을 마련해보려고요.

   저는 일 때문에 미뤄두었던 개인 프로젝트를 해보려 해요.

   새해 초에 뭔가를 시작하려고 하면 괜히 멋쩍은? 기분이 들어서 막 힘내서 하기가 뭐해지더라고요.
   그래서 연말부터 먼저 시작해 두면, 새해엔 그걸 구체화 하는 기분이 나면서 괜히 2년차 느낌이 들더군요.
   저는 긱뉴스 운영 하면서 생각해둔 아이템들을 내년에 본격적으로 더 시작해보려고 하는데요.
   올 연말엔 그 중 첫 아이템을 좀 여러 행태로 구체화하는 작업을 하려고 합니다.
   머리속에만 두니 아직도 정리가 잘 안되네요.
   내년엔 코로나 걱정없이 뭔가를 해볼 수 있기를 기원합니다.

   리스트가 궁금합니다

   처음 아이템은 '커뮤니티' 관련이에요 ;)

   아들하고 둘이서 캠핑 좀 가볼려구요.
   포터블... 무시동히터 들구요.
"
"https://news.hada.io/topic?id=5522","Discord의 새 Premium 멤버쉽, 창작자들이 서버로 수익을 낼 수 있게 지원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Discord의 새 Premium 멤버쉽, 창작자들이 서버로 수익을 낼 수 있게 지원

   - 9:1 수익 배분
   - Premium 멤버쉽 가입한 사용자들에게 더 많은 콘텐츠 및 접근을 허용하는 모델
   ㅤ→ 약 10명의 창작자 서버에게만 열어서 테스트 중
   ㅤ→ 여러 티어로 구성해서 차별화된 특전 제공 가능
   ㅤ→ 프리미엄 멤버들에게 어떤 추가 기능을 제공할 것인가도 알아보는 중
   - 현재는 데스크탑/웹 에서만 활성화(모바일앱에선 구글/애플 수수료 때문)

   사실 슬랙과 디스코드의 기능은 비슷하긴 한데, 슬랙과는 명확히 다른 방향으로 가네요.
   슬랙은 언젠가부터 특별히 좋아지는게 안보여서.. 혁신이 필요합니다 ㅡ.ㅡ+
"
"https://news.hada.io/topic?id=5539","에디슨이 썼던 창의력을 강화하는 잠자는 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        에디슨이 썼던 창의력을 강화하는 잠자는 기술

   - 예술가 살바도르 달리와 발명가 토마스 에디슨이 사용한 수면 기술이 실제로 창의성을 고취시키는데 효과가 있는 연구 결과 발표
   - 창의력을 높이기 위해선, ""현실이 환상과 섞이는 특정 수면 단계가 시작되는 시점에 깨어나야 함""
   ㅤ→ 이 방법을 사용하기 위해 에디슨과 달리는 의자에서 잠이 드는 동안 숟가락이나 공 같은 물건을 들고 있었음
   ㅤ→ (단계에 들어가면서) 표류할 때 물건을 떨어뜨려서 소음이 생기고 그들을 깨움
   ㅤ→ 잠깐의 무의식 상태에서 시간을 보내고 나면, 일을 시작할 준비가 됨
   - 최면 상태 또는 N1으로 알려진 이 초기 수면 단계는 깊은 잠에 빠지기 전 몇분 동안만 지속되지만 ""창의력을 위한 이상적인 칵테일"" 일수 있다고 ScienceAdvances에 발표한 논문에서 발표
   - 인간은 밤 수면시간의 약 5%를 N1 상태로 보내지만, 아직 이 단계는 많이 연구되지 않았음
   ㅤ→ N1 단계에서는 눈을 감고도 모양, 색상, 약간의 꿈을 상상할수 있지만, 여전히 방에서 나는 소리를 들을 수 있음
   ㅤ→ 이 패턴은 사람에 따라 매우 다름
   - 쉽게 잠들수 있는 103명의 건강한 참가자들에게 전날 잠을 조금 덜 자도록 요청
   ㅤ→ 숨은 패턴이 있는 수학 문제를 풀게 한 후
   ㅤ→ 의자 및 편안한 위치에서 손을 팔걸이 밖으로 걸고 가벼운 컵을 들고 자게 한 후에(떨어뜨리는게 가능하도록)
   ㅤ→ 잠시 후 다시 더 많은 수학 문제를 풀게 함
   ㅤ→ N1 상태에서 15초 정도 머물렀던 사람이 숨겨진 룰을 알아내는게 83% 정도 더 높은 기회를 보인 것으로 나옴. 깨어있었던 사람은 30%
   ㅤ→ 두 그룹의 차이는 단 1분 이었음. 하지만 참가자가 더 깊은 수면인 N2로 들어가면 효과가 사라짐
   - 이 연구는 대부분 무시되는 ""최면술의 효과""에 대한 주요 증거가 되기도 함
   - 가장 중요한 결과는 이 향상된 인사이트를 이용하려면, '더 깊이 잠들지 않고 일어나서 다시 작업으로 돌아가야' 한다는 것
   - 왜 N1이 창의성을 부스트 하는지에 대한 이유는 아직 모름
   - 이 단계에선 머리속에 좋은 아이디어가 있다면 그걸 잡는 능력도 가지게 된다는 것

   에디슨은 잠을 제대로 자지 않아서 틈만 나면 졸았다는 걸로 유명하더라고요. 보통은 평생 그렇게 살면 건강하게는 못 산다고 하는데…

   와 고딩때 수능 모의고사 보다가 잘 졸았는데 그 때는 너무 깊이 잤나보네요… ㅋㅋㅋ

   제가 수업이나 세미나 참석 중에 연필 들고 졸다가 떨어뜨린 적이 종종 있는데..

   ㅋㅋㅋ 그 때가 창의력의 핵심이었던 것
"
"https://news.hada.io/topic?id=5494","Markdown-it - 빠르고 확장가능한 마크다운 파서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Markdown-it - 빠르고 확장가능한 마크다운 파서

   - CommonMark 스펙을 따르며 확장들을 추가(URL 자동 링크, Typographer등)
   - 문법 설정 가능해서 자체 룰 추가 및 기존 룰 변경도 가능
   - 빠르고 안전
   - JS 오픈소스
   - 다양한 플러그인 제공
   ㅤ→ GFM : Tables, Strikethrough ~~ ~~
   ㅤ→ subscript ~2~ [, superscript ^th^ ^
   ㅤ→ footnote [^1], [^longnote]
   ㅤ→ definition list ]

   ㅤ→ abbreviations *[HTML]
          ㅤ→ emoji 깃헙이 제공하는 이모지 전체 지원. :) :-( 같은 이모티콘 숏컷도 지원
"
"https://news.hada.io/topic?id=5498","Ask GN: 이달의 구인공고 - 멤버를 찾고 계신가요 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ask GN: 이달의 구인공고 - 멤버를 찾고 계신가요 ?

   현재 근무중인 스타트업에서 같이 일할 멤버를 찾고 계시다면
   회사 소개 / JD / 위치 / 리모트 가능 여부 / 연락방법(이메일,웹사이트) 등을 적어주세요.
   ""멤버가 직접 1개의 댓글로 홍보를 작성""하시면 됩니다. (서치펌 등은 불가)
   이 글은 매월 첫번째 월요일에 등록됩니다.
   해당 회사의 공고에 관심있으시면 기재된 메일등으로 연락하시기 바랍니다.
   작성 예)
   하다 | 프론트엔드 개발자, 디자이너 | 서울 역삼 | Remote 가능 | https://hada.io | jobs@hada.io
   하다는 긱뉴스를 개발 및 운영하는 스타트업 입니다. 저희는 이러 저러 해서 엄청 좋은 회사입니다~~
   [1] 프론트엔드 개발자 JD : 내용 또는 URL
   [2] 디자이너 JD : 내용 또는 URL

   LISTLY | Backend Developer, Frontend Developer, Software Engineer, Site Reliability Engineer | 원격근무 | https://listly.io/ | changmin@listly.io
   저희 경쟁력은 데이터 수집의 과정을 알고리즘으로 완전 자동화하고 직관적 UX 를 제공하는데 있습니다. 덕분에 실무자들도 스스로 원하는 데이터를 즉시 받을 수 있고, 개발자 또한 데이터 수집 과정의 고통을 덜어 내고 있습니다. 브라우저 확장프로그램과 웹 사이트를 통해 실시간 글로벌 서비스하고 있습니다.

   [1] 개발자 전직군 채용 중: https://www.notion.so/LISTLY-2b15d94e5c884d15925a596f6072ebb6

   서울로보틱스 | Research / Software / MLOps / QA Engineer | 서울 교대역 | 코로나로 인한 재택근무 중 | https://www.seoulrobotics.org/ | recruit@seoulrobotics.org
   서울로보틱스는 머신러닝을 기반으로 한 3D Computer Vision Software(SENSR)를 주력으로 하는 테크 스타트업입니다.
   세상은 3차원으로 되어 있지만, 컴퓨터 비전 기술은 여전히 세상을 2차원으로 인식하는데 머물러 있습니다.
   저희는 “Making Robots Intelligent - 로봇을 더 똑똑하게, 삶을 더 편리하게, 세상을 더 안전하게” 라는 비전을 바탕으로, 로봇이 3차원으로 세상을 정확하게 인식할 수 있도록 라이다 센서를 활용한 Computer Vision 기술을 개발하고 있습니다.
   특히 저희 핵심 소프트웨어(SENSR)는 뛰어난 성능과 높은 호환성을 경쟁력으로 가지고 있으며, 서울로보틱스는 이러한 핵심 소프트웨어를 통해 글로벌 라이다 시장을 선점하는데 주력하고 있습니다. 주된 산업 분야는 자율주행, 스마트시티, 스마트 팩토리 입니다.
   서울로보틱스를 한 문장으로 정의하면 다음과 같습니다.
   Team SR = Best Talents + Best Environment (Horizontal Culture +High-level Equipment + Creative Office)
   서울로보틱스와 함께 더욱 안전하고 스마트한 자율주행 시대를 만들어 나갈 멤버를 찾습니다!
   보다 자세한 회사 소개와 채용 포지션은 이 링크에서 확인해주세요
   [1] 전직군 채용공고: https://recruit.seoulrobotics.org/

   블랙탠저린 | 백엔드 개발자, 앱 개발자, 머신러닝 개발자 | 서울 이대역 | https://cocon.style/ | job@blacktangerine.kr
   사업자 낸지 1개월차에 이 모든 것이 이루어진 드림팀은?
   1) 정부지원 2.2억 받고
   2) 창업대회 1등하고
   3) 탑티어 하우스(매쉬업엔젤스)에서 투자
   4) 2022년 3월 팁스 예정
   블랙탠저린은 사람들이 개성을 쉽고 재밌게 발견하고 옷으로 표현할 수 있게 돕는
   AI 패션 스타일리스트 '코콘'을 만들고 있습니다.
   이런 꿈을 현실에 가져오기 위해,
   데이터와 기술을 바탕으로 사람들의 옷 사는 방식을 바꾸려는
   개발자 4명, 디자이너 1명, 기획자 1명이 달리고 있는 중입니다.
   12년차 개발자(서울대,창업&엑싯 2번 경험)가 dev ops를
   20년차 개발자(포항공대, 창업&스타트업 경험)가 엔진을
   7년차 개발자(해외대, 창업&대기업 경험)가 백엔드를 맡고있습니다.
   남들과 다른 삶을 살고 싶다면, 세상을 바꿀 원대한 꿈을 꾸었다면 함께 할 동료가 필요합니다. 우리 함께해요.
   [1] 백엔드 개발자 JD : https://blacktangerine.notion.site/a4f4d278071d4f77baca9142b69cd58b
   [2] 앱 개발자 JD : https://blacktangerine.notion.site/0757f38ff5fb41e5aa786c8d8b708246
   [3] 머신러닝 개발자 JD : https://blacktangerine.notion.site/c1478079731449ab8c4a508255a5aa9b

   큐피스트 | iOS Engineer / Frontend Engineer | 서울 강남구 역삼동 | https://www.cupist.com | recruit@cupist.com
   큐피스트는 올해 Series A 투자를 성공적으로 마치고 라이브스트리밍과 데이팅을 결합한 '라이브 데이팅' 플랫폼으로의 서비스 확장 단계에 있습니다. 이전에 없던 새로운 서비스를 만들면서 회사 개발 역량의 확장을 위해 정말 소중한 분들에게 도움을 구하고 있습니다.
   [1] iOS Engineer JD : https://notion.so/cupist/…
   [2] Frontend Engineer JD : https://notion.so/cupist/Front-end-12c63c3c17f840ce94b93707bf205d9e/

   구름 | 풀스택 개발자, 자연어 처리 AI R&D 엔지니어 포함 전직군 | 판교 | Remote 불가능 | https://goorm.io
   구름은 “모두가 개발자가 된다”라는 비전으로, 구름 서비스를 통해 모두가 개발자가 될 수 있는 ‘개발자 성장’ 중심의 생태계를 만들어나가고 있습니다.
   클라우드 SW교육환경 구름EDU, SW역량을 향상시킬 수 있는 구름LEVEL, 클라우드 기반의 코딩 테스트 구름DEVTH, 클라우드 기반 구름IDE를 서비스중에 있습니다.
   자유롭고 젊은 분위기에서 일하고 저희와 함께 성정하실 구르미를 찾고있습니다!
   [1] 풀스택 엔지니어 : https://recruit.goorm.io/efef511b-c340-4f6f-af02-c8ff3f2aa679
   [2] 자연어처리 AI R&D 엔지니어 : https://recruit.goorm.io/b5ba6abd-4b6d-41e6-aa1a-90c530d407e6
   [3] 전직군 : https://recruit.goorm.io/

   *Remote 불가능 -> Remote 부분적 가능

   💎 AB180(에이비일팔공) | 소프트웨어 엔지니어 | 서울 서초(사당역 1분) | https://abit.ly/ab180-hiring-at-geeknews | hr@ab180.co
   🎉 좋은 소식 먼저! 페이스북의 비즈니스/데이터 파트너가 되었어요! 🎉
   모바일 측정 파트너(MMP) 멀티터치 기여도 분석 파트너(MTA)로 동시 선정된건 세계 최초에요.
   기술력과 능력을 인정받은만큼, 더 많은 분들과 더 많은 성장을 할 수 있을 거라고 생각해요.
   유니콘부터 대기업까지 쓰는 제품을 만들며 함께 성장해요 —
   초당 100만 건의 트래픽 처리, 월 2,000만 MAU, 월 100억 이벤트 수집 및 분석, 실시간 대규모 데이터 분석 및 성과 극대화를 위한 머신러닝을 경험하실 수 있어요.
   AB180은 '에어브릿지'라는, 웹과 앱에서의 사용자 행동을 분석하고 마케팅 성과를 측정해서 더 좋은 퍼포먼스를 낼 수 있도록 돕는 도구를 만들고 있어요. GS SHOP, KB증권, 버거킹, 다노, 펫프렌즈 등 많은 기업들에서 저희의 제품을 사용하고 있어요.
   - ✈️ 에어브릿지 → https://airbridge.io
   - 🧑🏻‍💻 기술 블로그 → https://engineering.ab180.co
   저희에 대해 궁금하시다면 아래의 공고를 확인해주세요 :)
   [1] Junior Backend Engineer : https://abit.ly/ab180-backend-junior-gn
   [2] Senior Backend Engineer : https://abit.ly/ab180-backend-senior-gn
   [3] Data Engineer : https://abit.ly/ab180-data-senior-gn
   [4] Core(Database Engine) Software Engineer - Database Engine : https://abit.ly/ab180-dbe-gn

   휴먼스케이프 | 소프트웨어 엔지니어 (상시 채용) | 서울 강남 (봉은사역 근처) | 재택, 재실근무 중 자유롭게 가능 (코로나 이슈로 재택근무 권장) | https://humanscape.io/ | recruit@humanscape.io
   [회사 소개]
   휴먼스케이프는 환자와 세상을 연결함으로써 질병으로 고통받는 사람이 건강한 일상을 향유할 수 있도록 힘쓰고 있는 6년차 IT 헬스케어 스타트업입니다. 희귀질환 환자를 위한 건강관리 서비스 '레어노트', 온라인 임상시험 정보 및 중개 웹 서비스 '한국임상정보'를 만들고 있습니다.
   [주요 업무]
   소프트웨어 엔지니어로서 제품이나 기능의 기술적 과제를 수행합니다. '레어노트' 혹은 '한국임상정보'의 프론트엔드 (React, React Native, Next.js) 및 백엔드 (Node.js (koa), Django) 개발을 담당하시게 됩니다. 원하는 부분에 스스로 기여해주시면 됩니다 :)
   [기술 스택]
   프론트엔드는 주로 React, 백엔드는 주로 Node.js 혹은 Django를 사용하고 있습니다.
   이외 저희가 사용중인 기술 스택은 모두 StackShare에 정리해두고 꾸준히 업데이트하고 있습니다.
   https://stackshare.io/companies/humanscape/
   [채용 공고]
   Software Engineer: https://bit.ly/recruit_human_Dev
   궁금한 점이 있으시면 언제나 henry@humanscape.io 혹은 recruit@humanscape.io 로 편하게 연락 주세요!

   CLASS101 | Software Engineer | 서울 중구 | https://class101.net | https://jobs.class101.net/dev
   클래스101은 ‘모두가 사랑하는 일을 하며 살 수 있도록’ 이라는 비전 아래 2018년 서비스를 론칭한, ‘준비물 까지 챙겨주는 온라인 클래스 플랫폼’ 입니다.
   최근 굿워터 캐피탈의 주도로 시리즈 B 300억 투자 유치에 성공하면서, 업계 리딩 컴퍼니로써, 글로벌 플랫폼으로의 성장가능성을 인정받았습니다. 시리즈C,D를 넘어 함께 NO.1 글로벌 플랫폼을 만들어 나갈 정예 개발자 분을 모십니다.
   Software Engineer 채용공고: https://jobs.class101.net/dev/swe

   블록체인 게임엔진, 라이브러리와 이를 활용한 play to earn (p2e) model 의 fully decentralized serverless idle MMO RPG game 인 Nine Chronicles 를 만들고 서비스하고 있습니다. / 블록체인, 웹백엔드, 웹프론트엔드, 게임클라이언트, 프로덕트 디자이너, Game PD, 글로벌 커뮤니티 매니저, HR Manager, 테크리쿠르터, 테크니컬 라이터 / 선릉역 인근 / 100% 리모트 + 자율 출퇴근제 시행중 (2년째) / yoshi@planetariumhq.com / https://recruit.planetariumhq.com/ / 4년째 만들어온 기술이 게임을 통해 빛을 발하고 있으며 본투비글로벌 서비스로 미친 성장을 (할 예정이 아니라) 이미 하고 있습니다. 블록체인이나 게임 둘 중에 하나를 경험해보셨고 다른 한쪽에 관심이 있는 분들은 직군을 가리지 않고 연락 부탁드립니다. :)

   앤트 / 프론트앤드 개발자, 디자이너 / 서울 역삼 or 대전 충남대 / Remote 가능 / https://labnote.co / nitrogen@ant-inc.co / 저희 앤트는 바이오, 나노 연구 계통에서 작성하는 연구노트라는 것을 전자화 시킨 서비스로 해당 산업 분야에 꼭 필요한 솔루션입니다. 현재 블루포인트파트너스 및 매쉬업에서 시장성을 인정받아 시드투자를 받고 진행 중입니다. 함께 할 멤버분들을 기다립니다!
   https://www.wanted.co.kr/company/23265

   와 좋은 서비스를 구인공고로 알게 되었네요. 가능하시면 Show 에도 한번 소개해주시면 좋을 것 같습니다.
   ( 랩노트 첫페이지에 mp4 영상들이 s3 denied로 나와서 플레이가 안됩니다. ^^; )
"
"https://news.hada.io/topic?id=5473","Square, 회사 이름을 Block 으로 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Square, 회사 이름을 Block 으로 변경

   - 신용카드 리더 비즈니스를 확장해서 블록체인 기술에 집중하겠다는 의지를 표명
   - Square는 판매자를 위한 상거래 솔루션 및 뱅킹 서비스 브랜드로 유지
   - Cash App(송금), Spiral(비트코인 관련 기술, 예전 Square Crypto), TIDAL(고품질 음악), TBD54566975(tbDEX 프로토콜) 등의 각자 브랜드 유지하고, 조직도 그대로
   - 기존 NYSE 티커인 SQ는 그대로

   Block의 새 도메인은 https://block.xyz/

   굉장히 리소스를 많이 사용하는 사이트네요...
"
"https://news.hada.io/topic?id=5472","2021 디자인 툴 설문조사디자인 툴 설문조사

   - 전세계 UX/Product/UI/Web/Graphic 디자이너 3300명 대상 (한국 111명)
   - 맥(2506), 윈(526), 리눅스(17), 멀티(287)
   - 경력 : 10+(974), 6~10(790), 3~5(853)..
   - 디지털 화이트보딩
   ㅤ→ 실제 사용 : Miro > FigJam > Figma > Mural > Whimsical
   ㅤ→ 평점기준 : Whimsical > Miro > Figma > FigJam > Mural
   ㅤ✓ Miro가 작년에 이어 탑 유지
   ㅤ✓ FiJam이 무료로 풀렸음에도 아직 Figma를 많이 사용
   - UI 디자인
   ㅤ→ 실제 사용 : Figma : Sketch > Adobe XD > Adobe Illustrator > Adobe Photoshop
   ㅤ→ 평점기준 : Framer(4.7) > Figma(4.7) > Sketch(4.1) > Adobe XD > Adobe Illustrator
   ㅤ✓ 전체 응답자의 77%가 Figma 를 사용
   ㅤ✓ Framer 와 Figma 의 평가 점수가 가장 훌륭
   - 프로토타이핑
   ㅤ→ 실제 사용 : Figma > Adobe XD > InVision > ProtoPie > Sketch
   ㅤ→ 평점기준 : ProtoPie(4.6) > Framer(4.4) > UxPin > Webflow > Axure
   ㅤ✓ UI 디자인에 Figma를 사용하는 사람중의 81%가 프로토타이핑에도 Figma를 이용
   ㅤ✓ 좀 더 좋은 도구를 원할때 ProtoPie, Framer, Principle등을 추가로 활용
   - Handoff (협업 및 소통)
   ㅤ→ 실제 사용 : Figma > Zeplin > Adobe XD > InVision > 코드작성 > Sketch
   ㅤ→ 평점기준 : Zeplin(4.1) > Figma(4.0)> Adobe XD(3.6) > Sketch
   ㅤ✓ Zeplin, InVision, Abstract 는 UI디자인 도구가 아닌 이 카테고리의 메인 플레이어들
   ㅤ✓ 대부분의 UI 디자인 도구들이 협업을 위해 HandOff 기능을 추가하면서 이 카테고리가 좁아짐
   ㅤ✓ Notion, Jira, Confluence 등도 많이들 활용

   - 디자인 시스템
   ㅤ→ 실제 사용 : Figma > Sketch > Adobe XD > Storybook > Zeroheight
   ㅤ→ 평점기준 : Figma(4.3) > ZeroHeight(4.2) > Zeplin(4.0) > Notion > Storybook
   ㅤ✓ 디자인 시스템 컴포넌트 생서, 문서 작성, 공유등 다양한 기능의 묶음
   ㅤ✓ 다양한 도구들이 이용중
   - 버전관리
   ㅤ→ 실제 사용 : Figma > Google Drive > GitHub > Dropbox > OneDrive
   ㅤ→ 평점기준 : GitHub > Bitbucket > Dropbox > Gitlab > Figma
   ㅤ✓ Figma 가 다른 도구의 필요성을 거의 다 제거해 버림
   ㅤ✓
   - 사용자 테스팅
   ㅤ→ 실제 사용 : Zoom > Google Meet > Maze > User Testing > Microsoft Teams
   ㅤ→ 평점기준 : Useberry > Maze > Optimal Workshop > UserTesting > Loopback
   ㅤ✓ 일반 화상회의 도구보다 Useberry 나 Maze 같은 전용 테스팅 도구의 평점이 훨씬 높음
   ㅤ✓ 24%의 응답자가 사용자 테스팅을 안한다고 응답
   - Research Recruiting (신규 카테고리, 조사자 모집 및 관리)
   ㅤ→ 실제 사용 : UserTesting > SurveyMonkey > Maze > UserInterviews > UserZoom
   ㅤ→ 평점기준 : UXtweak > UserInterviews > Userzoom > Maze > UserTesting
   ㅤ✓ 많이 선택한 도구외의 응답인 Other가 특히 높은 신규 카테고리
   ㅤ✓ 평점이 3.5 정도로 매우 낮음
   - Research Repository(신규 카테고리, 연구 세션 정보를 관리 및 태깅)
   ㅤ→ 실제 사용 : Notion > Google Drive > Confluence > Google Sheets > Miro > Airtable
   ㅤ→ 평점기준 : Dovetail > Notion > Airtable > Miro > Google Drive
   ㅤ✓ 38%의 사용자가 이런 도구를 활용
   ㅤ✓ 대부분 일반 지식저장소 도구인 Notion, Confluence, Google Drive 등을 활용
   ㅤ✓ 많이 사용되지는 않지만 Dovetail 사용자가 4.2점으로 가장 만족했음
   - 2021 디자이너 툴킷
   ㅤ→ Digital Whiteboarding : Miro
   ㅤ→ UI Design, Prototyping, Handoff, Design Systems, Versioning : Figma
   ㅤ→ User Testing : Zoom
   ㅤ→ Research Recruiting : UserTesting
   ㅤ→ Research Repository : Notion
   2022년에 가장 기대되는 도구?
   - Figma(862) > Framer(152) > FigJam(147) > ProtoPie(98) > WebFlow(92)

   한국에서 개발중인 ProtoPie 의 평점이 높은게 인상적이네요.

   - 2020 디자인 툴 설문조사 https://news.hada.io/topic?id=3405
   작년에 이어 올해도 Figma 의 천하통일이네요.
   Adobe XD는 계속 내려가고 있고, ProtoPie 는 조금 더 상승했네요.
"
"https://news.hada.io/topic?id=5505","Fe - 이더리움을 위한 스마트 컨트랙트 언어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Fe - 이더리움을 위한 스마트 컨트랙트 언어

   - Python 과 Rust에 영향을 받은, EVM(Ethereum Virtual Machine)을 위한 정적 타입 언어
   - 기능과 목표
   ㅤ→ 경계 및 오버플로 검사
   ㅤ→ 동적 프로그램 동작 제한을 통한 결정가능성(Decidability) 제공
   ㅤ→ 더 정확한 Gas 예측
   ㅤ→ 정적 타입
   ㅤ→ Pure 함수 지원
   ㅤ→ 재진입 제한
   ㅤ→ 정적 루핑
   ㅤ→ 모듈 임포트
   ㅤ→ 표준 라이브러리
   ㅤ→ YUL IR로 EVM 과 eWASM을 타겟
   ㅤ→ WASM으로 Fe 컨트랙트를 브라우저에서 컴파일
   ㅤ→ Rust를 통해 안전하고 강력한 구현체 개발
   - 아직 개발 초기 단계
   ㅤ→ 2021년초 알파 릴리즈 되었고, 월 릴리즈 사이클 진행중
"
"https://news.hada.io/topic?id=5518","SyncedStore CRDT - React/Vue용 실시간 협동 지원 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             SyncedStore CRDT - React/Vue용 실시간 협동 지원 라이브러리

   - Yjs CRDT 라이브러리 기반
   - 멀티 사용자 및 멀티 기기용 분산 협업 어플리케이션 개발 지원
   - 동작들은 로컬에서 처리되고, 백그라운드에서 자동으로 싱크하여 빠름
   - 오프라인 작업 지원
   - 다양한 Sync 프로바이더 : WebRTC, IndexDB(오프라인), WebSocket
   - 쉬운 API
   store.todos.push({ completed: false, title: ""Get groceries"" });
   store.todos[0].completed = true;
"
"https://news.hada.io/topic?id=5532","자바스크립트는 왜 프로토타입을 선택했을까","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         자바스크립트는 왜 프로토타입을 선택했을까

   '왜' JS에선 상속을 위해서 클래스가 아니라 프로토타입을 선택했을까? /
   호이스팅과 This는 왜 이 모양일까? 에 대한 답을 찾아서
   - 플라톤과 이데아, 그리고 클래스 기반 객체지향프로그래밍
   - 분류(Classification)
   - 프로토타입(Prototype)
   - 의미사용이론(the use theory of meaning)
   - 가족 유사성(Family Resemblance)
   - Rosch 의 프로토타입 이론
   - 프로토타입 기반 객체지향 프로그래밍
   - 자바스크립트 — 프로토타입
   - 자바스크립트 — 어휘적 범위(lexical scope)
   - 자바스크립트 — this

   음.. 제 생각과는 일부 다른게 있는데 글 써봐야겠습니다.
"
"https://news.hada.io/topic?id=5514","Firefox 95 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Firefox 95 릴리즈

   - RLBox 샌드박싱 기술을 모든 플랫폼에 적용
   ㅤ→ 프로세스 샌드박싱이 아닌 모듈 샌드박싱
   ㅤ→ WASM을 이용해서 브라우저의 5개 모듈을 분리, 버그 및 악의 있는 코드를 차단
   ㅤㅤ⇨ Graphite(폰트), Hunspell(스펠체커), Ogg(멀티미디어), Expat(XML 파서), woff2(웹폰트)
   - 윈도우 10/11 스토어에서 Firefox 다운로드 지원
   - 맥/윈도우 서버 버전에서 이벤트 처리시 CPU 사용량 감소
   - 맥 에서 전체화면 비디오 디코딩시 전력 사용량 감소(넷플릭스 & 아마존 프라임 )
   - PIP 버튼을 비디오 반대쪽으로 이동 가능
   - Spectre 같은 사이드 채널 공격에 대응하기 위해 Site Isolation 이 모든 Firefox 사용자에게 활성화 됨
   - 맥에서 콘텐트 프로세스가 더 빠르게 시작
"
"https://news.hada.io/topic?id=5534","CVE-2021-44228 – log4j - 취약점 보고– log4j - 취약점 보고

   java의 logging 프레임워크인 log4j에서 취약점이 보고 되었습니다.
   - 영향받는 버전 : 2.0 ~ 2.14.1
   - 수정 버전 >= 2.15.0-rc1
   - Apache log4j 라이브러리를 사용하는 모든 시스템에 패치를 할 것을 권고
   - 영향 받는 대표적인
   * Apache Struts
   * Apache Solr
   * Apache Druid
   * Apache Flink
   * ElasticSearch
   * Flume
   * Apache Dubbo
   * Logstash
   * Kafka
   * Spring-Boot-starter-log4j2

   아 log4j가 logging하는 함수에요?
   이름만 보고 math log4인줄 알았는데

   특정 문자열이 포함된 내용을 로그로 남기면 Remote Code Execution (RCE) 이 가능한 버그 입니다.

   한편, 이 보안 취약점을 이용하여 마인크래프트 서버를 둠 서버로 만들어버리는 사람도 나온 모양입니다. Rip and Tear!
   https://twitter.com/gegy1000/status/1469714451716882434

   ㅋㅋㅋㅋ 마인크래프트 서버까지 둠 포팅을..

   적용받는 범위가 원체 크다보니 국내 언론에선 ""컴퓨터 역사상 최악 취약점 발견"" 이라는 제목으로 낚시질 장사를 하고 계시더군요...

   영향받는 제품 중 이름만 들어도 알 수 있는 제품들이 많다 보니, 영향받는 범위도 장난 아닌 모양이군요.
   취약점을 재현하는 방법에 관해서는 아래 기사에 나와 있습니다.
   [PC Magazine] Countless Servers Are Vulnerable to Apache Log4j Zero-Day Exploit
   https://pcmag.com/news/…

   SpringBoot의 경우 아래의 링크에 따라서 작업하시면 좋습니다.
   https://spring.io/blog/2021/12/10/log4j2-vulnerability-and-spring-boot
   maven
   2.15.0
   gradle
   ext['log4j2.version'] = '2.15.0'
"
"https://news.hada.io/topic?id=5517","Ask GN: 연말에 감사인사 보내는 좋은 서비스가 있을까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Ask GN: 연말에 감사인사 보내는 좋은 서비스가 있을까요?

   요즘 쓰기 좋은 이메일 서비스는 많은데 실물 우편을 보내주는 서비스가 있을까요?
   웰컴키트 제작 서비스들도 좋은 것들이 많은데, 아예 웰컴 키트 같이 유용하고 작은선물 + 브랜드 + 연말연시 감사 인사 서비스가 실물로 배달이 통으로 되는 서비스가 있으면 좋겠다는 생각이 드네요.
   발달장애인이 일하는 회사 베어베터 같은데서 아예 패키지로 묶어서 서비스 해주면 뜻도 깊고 좋을텐데, 혹시 이런 유사한 서비스 아시는분 있나요?

   기프트팩 AI https://giftpack.ai/kr 같은 서비스가 비슷하긴 한데 많이 B2B 스럽긴 합니다.

   가입해서 봤는데 굉장히 잘되 있네요. 안타깝게도 한국어는 지원되는데 한국에서 서비스가 되는것 같지 않습니다. 무슨 선물이 가능한가 봤는데 선물검색이 안되네요^^
   프로덕트 헌트에 유사 서비스가 있어서 이것저것봤는데 역시 북미권은 인센티브, 팁? 문화가 발달해서 그런지 다양한 서비스가 있네요.
   추천 감사합니다. ❤️

   우체국에서 이런 서비스를 하고 있네요.
   심지어 자작 편지지 만들면, 그걸로 출력해서 배달해주는 서비스도 하네요.
   e-그린우편 [소형봉투] https://service.epost.go.kr//hybridn.HybridIntro.postal?type=A

   우체국에서도 하는군요.
   근데 좀더 모던? 한 것이면 좋겠네요. 뭔가 프로그램을 다운로드 받고 봉투도 너무 고지서 봉투 같고요. 딱 이런 느낌이다 하는게 찾아봤는데 잘 없는거 같습니다.
   추천 감사해요 👍
"
"https://news.hada.io/topic?id=5567","구글, 새로운 AR 기기와 OS를 개발중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         구글, 새로운 AR 기기와 OS를 개발중

   - 구글은 AR 초기에 리더였지만 요즘 애플/페북에 비해 뜸한 느낌이었으나,
   - OS 개발자인 Mark Lucovsky가 구글에 새로 조인해 AR OS팀 리드가 됨
   ㅤ→ 그는 Meta에서 Mixed Reality OS팀에 있었고,
   ㅤ→ DEC에서 Dave Cutler와 함께 MS로 옮겨서 Windows NT 설계 및 개발을 담당했던 엔지니어
   - 다른 구인공고를 통해서 구글이 Apple/Meta 만큼 AR에 적극적이라는 것을 인상을 줌
"
"https://news.hada.io/topic?id=5575","Overpass - 셀프호스트 스트리밍 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Overpass - 셀프호스트 스트리밍 플랫폼

   - 자신만의 스트리밍 서비스를 만들어 주는 오픈소스
   - 인증은 Discord OAuth 사용하고, 디스코드 서버의 사용자 대상으로 스트리밍
   - 웹브라우저로 스트림 재생 지원
   - 모든 스트림은 자동으로 저장되어 차후에 누구나 재생 가능
   - 도커이미지 제공
"
"https://news.hada.io/topic?id=5569","[동영상] Power On: The Story of Xbox","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   [동영상] Power On: The Story of Xbox

   Microsoft의 콘솔 게임기 XBOX의 역사를 다룬 6부작 다큐멘터리 [Power On: The Story of Xbox]가 XBOX 공식 YouTube 채널에 올라왔습니다. (한국어 자막 지원)
   아직 1부만 보고 왔는데, 1990년대 당시 소니 플레이스테이션에 대한 MS의 시각이나 사내 정치에 따른 뒷이야기 같은 것이 소개되어 아주 재미있습니다. 애초에 XBOX 프로젝트 자체가 생산성 소프트웨어 중심이던 MS 사내의 “이단자들”(1부의 제목)이라 불리던 DirectX 팀에서 기획된 것이었다거나, 4초 이내로 부팅이 완료되는 프로토타입 제품을 빌 게이츠 앞에서 시연하여 단순 PPT 파일만 준비했던 다른 팀을 제쳤다는 일화 등 흥미로운 이야기가 많습니다. 이번 주말에는 이걸 끝까지 봐야겠군요.

   다 보고 나서 각 영상 내용을 정리해 봤어요.
   요약 내의 견해는 모두 다큐멘터리 속의 관점 그대로입니다.

   # 제6장: TV냐, 아니냐? (TV…Or Not TV)
   * 돈 매트릭은 키넥트 다음으로 Xbox 사용자 층을 늘릴 방도를 TV에서 찾았다. 그래서 다음으로 집중할 대상을 홈 엔터테인먼트 분야로 선정했다. Xbox에서 TV 편성표를 보여주고, 스트리밍 서비스를 위한 영상 컨텐츠를 확보하고, 스티븐 스필버그(Steven Spielberg)와 협력하기로 하였으며, Xbox 브랜드로 자체 컨텐츠 제작을 시작하려 하였다.
   * 2013년 5월 21일, Xbox One이 공개되었다. 그런데 이 공개 행사에서는 게임 이야기 대신 온통 TV에 대한 이야기만 나왔다. 발표 직후부터 반응은 매우 부정적이었다. Xbox 팀은 게임 관련 이야기는 몇 주 뒤에 열릴 E3에서나 하면 될 거라고 생각했지만 그렇지 않았던 것이다. 상당수 게이머들은 이를 게이머에 대한 배신으로 받아들였다.
   * 문제는 더 있었다. E3에서 공개된 Xbox One의 가격은 499달러였는데, 같은 날 공개된 경쟁 제품인 Playstation 4의 가격은 399달러였다. 게다가 성능은 Playstation 4 쪽이 오히려 더 우위였다. 특히 Xbox One에는 본체에 키넥트 센서가 내장되어 있었는데, 이는 가격 상승 요인으로 작용했다. 사람들은 고작 지능형 셋톱박스 따위에 499달러를 쓰고 싶지 않았다.
   * 정책 관련 문제도 있었다. Xbox One은 기본적으로 상시 온라인 연결이 필요한 컨셉으로 만들어졌으며, 게임 디스크를 넣고 나서 온라인 인증을 통해 라이선스를 부여받도록 되어 있었다. 이러한 정책은 친구에게 게임 공유하는 것도 못하게 막고, 중고 게임을 사고 팔 때도 문제가 될 수 있었다. 소니는 이 점을 저격하는 광고 영상을 만들었다.
   * E3 행사 18일 뒤인 2013년 7월 1일, 돈 매트릭의 사임이 발표되었다. Xbox One의 판매가 개시되었으나, 초기에 충성 고객층이 제품을 구입한 시기 뒤로는 계속 Playstation 4에 판매량이 밀리고 있었다. 이러한 위기 상황에서 필 스펜서(Phil Spencer)가 Xbox를 맡게 된다.
   * 필 스펜서는 먼저 Xbox의 주 고객층은 어디까지나 게이머라는 점을 분명히 하고, 다시금 게임에 집중하기로 결정한다. 이를 위해 엔터테인먼트에 대한 대규모 투자를 중단하고, 자체 컨텐츠 제작을 위한 엔터테인먼트 스튜디오는 폐쇄하였다. 또, 키넥트 센서가 빠진 399달러짜리 Xbox One을 출시하였다. 다른 조치로는, 인디 게임 개발자를 위한 새로운 플랫폼을 준비하고 게임의 자체 배급을 허용하였다. 이를 ID@Xbox 프로그램이라고 한다.
   * 이후 MS는 마인크래프트를 만든 모장(Mojang)을 25억 달러에 인수했다. 사람들은 MS가 마인크래프트를 Xbox에서만 돌리게 제한하지 않을까 우려했지만, 그런 일은 벌어지지 않았다.
   * 게임 구독 서비스인 게임 패스를 만든 것도 큰 변화 중 하나였다. 수십 달러짜리 게임을 여러 개 구입하는 것이 힘든 사람이라도, 친구들과 함께 공유하는 구독 라이브러리를 통해 여러 종류의 같은 게임을 즐기는 것이 가능했다. 이는 진입장벽을 낮추어 플레이어의 수를 늘리는 효과를 내었다. 실제로 게임 구독을 하는 사람들이 게임을 더 많이 한다고 한다.
   * Playstation 4에 비해 뒤쳐진 성능 우위를 되돌리기 위해, 성능이 향상된 Xbox One X도 출시한다. 또한 그 무렵부터 필 스펜서는 여러 게임 스튜디오를 인수하는 방식으로 많은 게임을 확보하고자 하였다. 그 정점은 베데스다(Bethesda) 인수였다. 베데스다 인수는 MS 역사상 3번째로 큰 인수였다고 한다.
   * MS는 Project xCloud라는 이름으로 클라우드 게임 스트리밍 서비스를 시작했다. 또한 장애가 있거나 개발도상국과 같은 환경의 사람들도 게임을 즐길 수 있도록 노력하고 있다. 이는 비디오 게임을 하는 전세계 25억 명을 기회로 보는 것으로, MS 정도의 회사가 추구해야 할 규모이다.
   * 게임으로 인해 직접 만나본 적 없는 멀리 있는 사람들과 유의미한 관계를 맺을 수 있게 되었다. 코로나19로 인한 사회적 거리두기 상황에서, 아이들은 마인크래프트를 통해 서로 만나곤 한다. 이러한 커뮤니티는 계속 성장할 것이다. 우리는 좋은 기회를 잡아 Xbox라는 플랫폼을 통해 문화를 형성하였다.

   # 제5장: 죽음의 붉은 고리 (The Red Ring of Death)
   * Xbox 360은 경쟁 제품이던 Playstation 3를 능가하기 위해, CPU 등을 직접 설계하여 사용하였다. 그러나 이렇게 기성 제품이 아닌 부품의 준비가 늦어지게 되자, 개발 및 생산의 다른 분야에서도 연쇄적인 지연이 발생하게 되었다. 예를 들어, 출시 9개월 전인 2005년 2월이 되어서야 겨우 주문한 CPU가 처음 도착하였다. 그래서 개발팀은 디자인 수정 및 생산 라인 준비를 동시에 진행하는 수밖에 없었다.
   * Xbox 360을 대량 생산하기 시작하자 불량이 발생하는 사례가 속출하였다. 제품 100개를 생산하면 고작 50~60개만 QC(품질검사)를 통과하였다. 설계가 잘못된 건지, 아니면 테스트 절차가 잘못된 건지 판단할 시간도 없어서 일단 불량품은 한 곳에 쌓아두고 있었다. 이를 “뼈 더미”라고 불렀는데, 가장 많을 때는 불량품이 60만 개를 넘겼다.
   * 정확한 문제가 무엇인지는 구체적으로 나오지 않았지만, 하여튼 엔지니어들은 몇 달만에 문제를 해결하고 대량생산을 진행하여 정해진 일정에 출시할 수 있었다. 이는 크리스마스 전의 놓칠 수 없는 대목이고, 동시에 Playstation 3가 출시되기 1년 전이었다. Xbox 360은 적절한 시기에 399달러라는 적절한 가격으로 시장에 진입할 수 있었다. 경쟁 제품인 소니의 Playstation 3는 블루레이 디스크 재생이 가능한 고급 엔터테인먼트 기기였지만, 북미에서의 판매 가격이 599달러에 이르렀다. 그래서 Xbox 팀은 경쟁사의 가격 책정에 안도하였다.
   * 그런데 2006년 6월경부터 이전에는 본 적 없는 새로운 종류의 문제가 인터넷 게시판에서부터 눈에 띄기 시작했다. Xbox 360이 고장나는 사례가 자꾸 보고되는 것이었다. 가장 눈에 띄는 특징은 전원부 주변에 한쪽이 뚫린 붉은 고리 모양의 불빛이 깜빡거린다는 것이었다.
   * Xbox 360에는 컨트롤러의 Xbox 로고 및 전원부 주변에 4분할된 고리 모양의 LED 불빛을 보여주는 기능이 있었다. 원래는 함께 모여 게임을 할 때 각자 잡고 있는 컨트롤러를 구분하기 쉽게 하기 위한 기능이었지만, 무언가 문제가 있을 때 빨간색으로 표시를 하는 기능도 있었다. 이런 현상이 발생하는 문제를 “코어 디지털 에러”라고 부르는데, 비유하자면 자동차의 엔진 점검 표시등과 같았다.
   * 제품 고장을 호소하는 사람이 늘어나면서, 교체 기기를 받는 데 걸리는 시간도 늘어났다. 더 큰 문제는 교체받은 기기에서도 동일한 증상이 반복되었다는 것이었다. 사용자들은 제품 교체를 위한 반송 상자를 ‘골판지 관짝’(Cardboard Coffin)이라고 불렀다.
   * MS는 해당 문제의 원인을 명확하게 밝히지 않았다. 문제가 발생한 제품의 옆면이 뜨거워지는 현상이 있었기 때문에 발열이 원인일 것으로 보는 사용자들이 대다수였으나, 정확한 원인이 공식적으로 공개된 적은 이 다큐멘터리 공개 전까지는 없었다.
   * 사실, 당시에는 MS도 정확한 원인이 무엇인지 감을 잡지 못했다고 한다. 그래서 처음에는 고장 원인을 오판하고 뼈 더미에 있는 제품을 고친 뒤 그걸 교체품으로 사용자들에게 보냈다. 그러나 그렇게 보낸 제품들이 다시 고장나는 것을 보고서야 문제가 다른 곳에 있다는 것을 깨닫게 되었다. 결국 고장의 원인을 계속 명확하게 밝히지 못한 채 생산을 일시 중단하고야 말았다. 이 문제의 근본 원인을 밝히는 데는 몇 달이 걸렸다고 한다.
   * 이 고장의 근본 원인은 (다들 추정했던 것처럼) 소위 말하는 냉납(Cold Solder Joint) 현상이 GPU(Graphics Processing Unit) 쪽에서 발생한 것이었다. 제품이 켜졌다 꺼질 때마다 GPU 칩에서 많은 열이 발생하였다 식는데, 이게 반복되면 칩과 기판을 연결하는 납땜 부위에 열응력(Thermal Stress)이 가해져 금이 가거나 아예 접촉이 끊어지는 것이다.
   * 원인은 알아내었지만, 이걸 고치는 것도 문제였다. 제품을 리콜하는 데는 엄청난 비용이 들기 때문이었다. 판매 손실까지 고려하면 지불해야 할 총 비용은 11억 5천만 달러에 달하는 것으로 계산되었다. 스티브 발머는 이 비용 지불을 즉각 승인하였다. 만약 이 비용을 지불하지 않았더라면 Xbox는 더 이상 존재하지 않았을 것이다. MS는 모든 Xbox 360의 보증 기간을 1년에서 3년으로 늘렸으며, 이 문제로 인한 제품 교환은 2011년까지 이어졌다.
   * Xbox가 재기할 수 있었던 데에는 2가지 요인이 있었다. 유명한 게임 타이틀들을 보유하고 있었던 점과, 프로그래밍하기 쉬운 콘솔에 대한 게임 개발자들의 지지가 그것이었다. 예를 들면 2006년 11월 7일 출시된 기어스 오브 워는 발매 당시 기종을 막론하고 가장 뛰어난 그래픽을 구현한 게임으로, 2주만에 백만 장이나 팔리며 하드코어 게이머에게 크게 어필하였다. 그 외에도 매스 이펙트, 스플린터 셀, 콜 오브 듀티, 포르자 등 이름만 들어도 다들 아는 게임 시리즈를 확보하고 있었다.
   * 2007년 9월 25일, 헤일로 3의 판매가 개시되었다. 첫 하루 동안에만 1억 7천만 달러 이상의 수익을 올려 일일 수익 신기록을 세웠다. 모든 것이 잘 나가고 있는 것처럼 보일 때, Xbox 팀의 수장이었던 피터 무어(Peter Moore)는 EA 스포츠로 이직하기로 하였다. 역설적이게도, 새로운 Xbox 팀의 수장으로는 EA의 전 사장이었던 돈 매트릭(Don Mattrick)이 임명되었다.
   * 돈 매트릭은 Xbox의 사용자 폭을 더 넓혀야 한다고 생각했다. 이를 위해서는 Xbox가 좀 더 일상적인 체험에 쓰여야 한다고 생각했고, 이를 위해 엔터테인먼트 기능을 강화하기로 하였다. 그래서 스트리밍 서비스를 위한 영화를 확보하기 시작했으며, 당시에는 우편 DVD 대여 업체였던 넷플릭스(Netflix)에 Xbox를 통해 볼 수 있는 스트리밍 서비스를 제안하였다. 이것이 넷플릭스의 성장에 큰 역할을 하게 되었다. 그리고 트위터나 페이스북 같은 SNS 서비스도 Xbox로 쓸 수 있게 하였다.
   * 한편, 게임 업체의 또다른 강자인 닌텐도는 2006년 연말연시에 Wii를 출시하여 큰 반향을 일으킨다. 움직임을 기반으로 신체활동을 통해 플레이할 수 있는 게임은 참신하였으며, 건강 관리에도 도움이 되었다. 닌텐도가 이런 방식으로 노인과 여성, 부모와 자식 등 전통적으로 게이머가 아닌 사람들을 공략하는 것을 보고, 빌 게이츠는 Wii 리모콘을 베끼지 않으면서도 비슷한 것을 하고 싶어했다.
   * 돈 매트릭은 아예 손에 아무런 컨트롤러도 쥐지 않고 카메라를 통해 동작을 기록하여 직관적으로 게임을 조작한다는 아이디어를 생각해 내었다. 그래서 TV 쪽에 붙일 수 있는 적외선 기반 모션 컨트롤러인 키넥트를 만들기 시작했다. 이걸 만들기 위해서는 대부분의 기술을 새로 만들어야 했다. 키넥트는 2010년 11월 4일 처음 발매되었는데, 2달만에 8백만 개 이상 판매되었다. 이 센서는 진지한 게이머에게는 별로 흥미를 주지 못했지만, VR/AR 연구 등에는 큰 영향을 주었다. 요즘 키넥트는 대체로 게이밍 이외의 분야에서 사용된다고 한다.

   # 제4장: 멋지네요, 이 다음은요? (Cool…Now What?)
   * MS에 인수된 번지 스튜디오(Bungie Studio)에서 Xbox 독점 게임으로 만들던 헤일로는 Xbox의 성공에 있어 매우 중요했지만, 정작 출시일이 임박해서도 버그가 많고 프레임 레이트가 너무 낮았다. 출시까지 얼마 남지 않게 되자, 결국 MS 게임 스튜디오의 수장이던 에드 프리스(Ed Fries)는 헤일로 개발팀을 가둬놓다시피 했다. 소위 말하는 “크런치 모드”였다. 이제는 게임의 완성도보다도 제때 출시하는 것 자체가 목표가 되었다.
   * Xbox와 함께 출시된 헤일로 게임에 대한 반응은 뜨거웠다. 몰입감이 대단하다는 것이 공통적인 평가였다. 단순한 게임이 아니라 일종의 사회 현상이 되었다. Xbox 사용자의 절반이 헤일로를 플레이했다.
   * 헤일로는 콘솔 게임기 컨트롤러로도 FPS를 몰입감 있게 플레이하는 것이 가능하다는 것을 증명하였다. 그 영향력은 오늘날까지 내려오고 있다.
   * 헤일로의 멀티플레이어 기능은 그 당시의 다른 어떤 플랫폼에서도 체험할 수 없는 것이었다. PC로 게임하던 컴퓨터 괴짜(Geek)들이 복잡한 설정을 통해 LAN 파티를 열던 경험을 이제 Xbox의 이더넷 포트를 통해서 누구나 손쉽게 할 수 있게 되었다. 디스플레이가 모자라도 화면 분할 기능이 있었다. 다들 한 집에 모여서 같은 게임을 즐기는 현상이 일어났다.
   * Xbox 팀은 여기서 한 걸음 더 나아가, Xbox Live 개념을 구상하였다. 인터넷을 통해 멀티플레이를 한다는 개념은 당시로서는 대담하였으며 그때까지 만들어진 적 없는 첨단 신기술을 요구하였다. 이 기술의 개발을 위해 몇십억 달러가 투자되었다.
   * 또한 미국 곳곳에서 게이머들을 인터뷰하여 Xbox Live에 들어갈 기능 요구사항을 도출하였는데, 그 중에는 실시간 보이스챗이 있었다. 이건 스카이프(Skype)가 생겨나기도 전의 일이었기 때문에, 결국 직접 만들어야 했다.
   * 다른 요구사항으로는 여러 게임에서 공통으로 쓸 수 있는 ID 개념이 있었다. 이는 게이머태그(Gamertag)라고 불리게 된다. 이 게이머태그를 통해 친구 추가나 게임 플레이 통계 등을 기록하게 된다.
   * Xbox Live 개발에 관한 의구심도 있었다. 과연 거기에 게이머들이 돈을 지불할 것인가 하는 문제 때문이었다. 특히 당시는 초고속 인터넷이 널리 보급되지 않았기 때문에, 이걸 쓰기 위해 인터넷 연결 비용까지 추가로 내어야 할 수도 있었다. 반대하는 사람들만으로 한 부서를 꾸릴 수 있을 지경이었다.
   * Xbox Live는 Xbox 출시 1주년인 2002년 11월 15일에 출시되었는데, MS 사내의 낙관론자조차 놀라게 할 정도의 대성공이었다. Xbox Live의 커뮤니티 기능은 큰 영향을 주었다. Xbox Live를 통해 커뮤니티가 생성되면 거기에 있는 친구들 때문에 사람들이 쉽게 떠나지 못하는 효과가 있었다. Xbox Live를 하는 중년 남성이 많은데, 이들은 퇴근 후 게임을 통해 놀면서 잡담을 나눈다. 지금은 헤드셋을 낀 채 게임으로 친구들과 수다 떠는 것이 매우 일반화되었지만, 당시로서는 Xbox Live가 처음이었다. 어찌 보면 Xbox Live는 매우 선도적인 SNS 플랫폼이었다.
   * 헤일로의 대성공은 번지 스튜디오에 헤일로 2에 대한 큰 중압감을 주었다. 그러나 그들은 중요한 것만 남기고 덜어내는 능력이나 제작 일정 관리 기술이 부족했고, 결국 게임의 완성도를 위해서는 헤일로 2 작업물의 대부분을 재작업해야 하는 처지에 놓이게 된다. 그래서 에드 프리스는 헤일로 2의 출시 일정을 1년 늦추려 했지만, MS 입장에서는 헤일로 2가 빨리 나올수록 좋았기 때문에 이를 탐탁치 않게 여겼다. 간신히 로비 바흐가 일정 연기를 승인해줘서 양보하기는 했지만, 에드 프리스는 그때 처음으로 MS 퇴사를 진지하게 생각하게 되었다. 결국 2004년 1월, 에드 프리스는 퇴사하였다. 그러나 그가 벌어주고 간 1년의 추가 시간은 헤일로 2에 큰 차이를 가져다준다.
   * 헤일로 2는 출시 첫날에만 240만 장이 팔리며 그때까지의 어떤 영화보다도 높은 첫날 매출을 기록하였으며, 게임을 넘어 일종의 문화 현상이 된다. 또한 이러한 성공은 Xbox Live에도 큰 영향을 주었다. 미국에서 Xbox가 닌텐도의 판매량을 제치는 일까지 벌어졌다.
   * 이러한 성공에 고무된 MS는 차기 Xbox인 Xbox 360을 준비하였다. 이건 게임에 덧붙여 디지털 엔터테인먼트 허브로서의 기능을 추가하였으며, 온라인 게임 다운로드가 가능한 디지털 상점이나 ‘업적’ 달성과 같은 신개념도 추가하였다. 고성능을 달성하기 위해 기성 제품이 아닌 자체적인 칩셋을 개발하여 사용하는 등 많은 엔지니어링 노력도 투입되었다.
   * Xbox 360은 2005년 11월 22일 출시되었다. 다들 Xbox가 크게 성공하였음을 인정했고, 앞으로의 미래도 탄탄대로일 것이라 여겼다. 하지만 어느 순간부터 온라인 게시판이나 게임 언론, 소매업자 등로부터 서서히 부정적인 의견이 몰려오기 시작했다.

   # 제3장: XBox는 시들해졌나? (And It Didn't Turn On)
   * Xbox는 2001년 11월에 출시될 예정이었는데, 공개 후 고작 18개월만에 제품 개발을 마치고 대량생산하여 판매하기 시작한다는 것은 5~7년 정도 걸리던 일반적인 콘솔 게임기 개발 기간에 비하면 미친듯이 짧았다. 설상가상으로 지금껏 이 프로젝트를 이끌던 릭 톰슨이 퇴사하였다.
   * 그래서 로비 바흐(Robbie Bach)가 프로젝트 리더가 되었는데, 그는 이 기간을 “최악의 18개월”이라 하였다. 젊은 괴짜(Nerd)밖에 없는 팀에서 유일하게 ‘어른’으로서의 역할을 맡았고, 게임을 해본 적조차 없었기 때문에 처음부터 모든 것을 배워 나가느라 실패가 잦았으며, 무엇보다도 일정 압박이 심했다.
   * 처음에 4명으로 시작했던 팀은 수천 명 규모로 불어났기 때문에, MS 본사에서 좀 떨어진 곳에 있는 밀레니엄 캠퍼스로 이사하였다. 팀원들이 업무시간 뒤에도 퇴근하지 않고 모여서 게임을 하는 (별로 건강하지 않은) 문화가 있었기 때문에, 마치 대학 기숙사 같은 분위기였다. 잘못된 의사결정을 한 적도 있었으나, 전반적으로 다들 젊고 열정 넘치며 자유로웠다. 이는 여타 다른 MS 조직의 분위기와는 이질적이었다.
   * 첫번째 마일스톤은 2001년도 CES(Consumer Electronics Show)였다. Xbox는 기존에 MS가 만들던 인체공학 위주의 주변기기와는 완전히 다른 분류의 제품이었으므로 디자인을 결정하는 것 또한 어려웠다. 최종 결정된 디자인은 마치 강력한 힘을 자랑하는 자동차 엔진 덮개처럼 보였다. 또한 CES에서 더 락(Dwayne Johnson)을 데려와 빌 게이츠와 만나는 장면을 연출하여, 기술적으로는 보여준 게 없음에도 불구하고 사람들에게 강한 인상을 주는 데 성공했다.
   * 게임기와 동시에 출시할 게임 타이틀을 확보하는 것도 난관이었다. 출시까지 시간이 촉박하였으므로 처음부터 새로운 게임을 만들 수는 없었다. 그래서 북미, 유럽, 일본의 게임사들을 돌며 현재 개발 중인 게임을 Xbox용으로 출시하도록 설득하였다. 돌이켜보면 GTA 3의 가치를 전혀 알아보지 못하고 놓치는 등 아까운 실수도 있었지만, 헤일로를 Xbox 독점 출시 타이틀로 확보한 것처럼 큰 성과도 있었다.
   * 그 당시 FPS(First-Person Shooter)는 키보드 및 마우스로만 할 수 있는 PC 전용 게임 장르로 여겨졌으나, 헤일로의 성공은 콘솔 게임기 컨트롤러로도 충분히 FPS 게임 플레이가 가능하다는 것을 입증하는 의미가 있었다.
   * Xbox의 컨트롤러는 처음부터 너무 크다는 의견이 많았지만, 수정하기에는 시간이 너무 촉박하여 당시로서는 어쩔 수 없었다.
   * 2001년 5월 17일의 E3(Electronic Entertainment Expo) 행사 또한 중요한 마일스톤이었다. 제품 출시 이전 대중이 실질적으로 제품을 체험할 수 있는 첫 기회였기 때문이었다. 아침 8시에 제품을 발표하는데, 발표 중에 전원 스위치를 눌러도 제품이 켜지지 않는 일이 벌어졌다. 설상가상으로 킬러 타이틀 기대작인 헤일로의 데모 버전은 프레임 레이트가 너무 낮아 뚝뚝 끊기는 것이 눈에 보였다. 명백한 위기 상황이었다. 로비 바흐는 이 일로 사직서까지 냈지만, 빌 게이츠와 스티브 발머는 이를 반려하였다.
   * 무리한 출시 일정으로 데스마치(Death march)가 이어졌다. 그러나 연말연시를 놓치면 한 해를 날리는 것이나 다름없었기 때문에 어쩔 수 없었다. 세계 각국의 규제를 통과하는 과정도 생각보다 시간이 많이 걸렸고, 부품 공급이 지연되는 것도 문제였다. 하루하루가 도전이었다. 그러나 결국 모든 어려움을 극복하고 제품을 출시하는 데 성공하였다.
   * 오리지널 버전의 Xbox는 2001년 11월 15일 뉴욕 타임스 스퀘어의 토이저러스 매장에서 처음 출시되었다. 빌 게이츠는 출시 현장에서 처음으로 Xbox를 구매한 20살 고객 에드워드 글럭스먼(Edward Glucksman)에게 직접 제품을 건네며 자신이 대신 돈을 지불했다. 그는 Xbox를 구입하기 위해 처음으로 혼자 버스를 타고 뉴욕에 왔는데, 귀가할 때는 리무진을 타게 되었다고 한다.

   # 제2장: 밸런타인데이 대참사 (The Valentine's day Massacre)
   * 릭 톰슨은 1987년부터 MS 하드웨어 부문에서 일했던 사람이었지만, 콘솔 게임기 제조는 MS로서는 완전히 새로운 영역이었다.
   * 콘솔 게임기는 소니, 닌텐도, 세가 등 일본 회사들이 점유하던 시장이었고, 그들은 게임기 자체는 손해 보면서 팔되 게임 소프트웨어 판매로 수익을 얻고 있었다. 만약 MS가 이 시장에 뛰어든다면 사업 초기에는 20억 달러를 손해 볼 것으로 예측되었다. 그 이후의 불확실한 수익을 위해 엄청난 리스크를 감수해야 하는 것이었다.
   * 처음에는 하드웨어 생산을 위해 다른 PC 생산 업체와 협업하려 했으나, 협업에 나서는 회사가 아무도 없었다. 콘솔 게임기에서 하드웨어는 손해 보면서 파는 것이라는 점을 다들 알고 있었기 때문이었다. 그래서 직접 하드웨어를 만들어야 했지만, 경험도 없는 데다 주어진 일정이 촉박하였다. 하다못해 닌텐도를 인수할까 하는 시도까지 했지만, 닌텐도는 회사를 전혀 팔고 싶어하지 않았으므로 무산되었다.
   * OS 준비도 문제였다. Windows를 있는 그대로 사용하게 되면 너무 무거운 데다가, 다른 팀에서 간섭할 가능성도 높았다. 예를 들어, Office 팀은 Xbox에서 MS Office를 실행시킬 수 있는지 물어왔다. 그래서 Xbox 팀은 Windows NT 커널만 떼어다 개조해서 사용하고 싶었으나, Windows 팀에서는 그걸 공유할 생각이 없었다. 그러자 Xbox 팀은 한밤중에 서버에서 Windows 소스 코드를 훔쳐와서 필요없는 부분은 다 잘라내거나 재작성하여 Windows NT 커널의 극히 작은 부분만 남겨 사용했다. 이건 빌 게이츠나 스티브 발머의 허가를 받지 않은 행동이었다.
   * 2000년 2월 14일 오후 4시경, Xbox 프로젝트의 진행 가부를 결정할 최종 회의가 열렸다. Xbox에서 Windows가 있는 그대로 실행되지 않는다는 것을 알게 된 빌 게이츠는 분노하여 오랫동안 미친 듯이 화를 내었다. 그러나 소니의 위협에 관해 누군가 지적하자 빌 게이츠는 잠시 생각하더니 결국 스티브 발머와 함께 5분만에 프로젝트 진행을 결정하였다. 프로젝트 초기 개발자금으로 10억 달러를 승인받았다.
   * 게임기의 성공을 위해서는 게임 타이틀을 제작할 개발자들의 지지 또한 얻어야 했다. MS는 에이지 오브 엠파이어의 성공으로 전략 시뮬레이션 게임을 비롯한 일부 PC 게임에 경험이 있었지만, 콘솔 게임기를 플레이하는 게이머는 완전히 다른 고객층이었다. 그런 고객들은 MS가 게임 사업을 하고 있다고 인식하지조차 않았다. 이런 인식에서 벗어나려면 먼저 콘솔용 게임을 제작하는 개발자들을 확보해야 했다.
   * 게임 개발자를 확보하기 위해 GDC(Game Developers Conference) 2000에서 발표를 하려면 먼저 시연용 프로토타입이 필요했다. 이를 위해 통짜 알루미늄을 깎아 18kg이나 되는 커다란 X자 형태의 프로토타입 기기를 만들었으나, 내부는 엉망진창이었다. 2000년 3월 20일 발표 당일, 행사장으로 운반된 프로토타입 3대는 모두 고장나서 동작하지 않았다. 급히 현장에서 기판을 납땜하여 수리한 끝에, 간신히 빌 게이츠와 여러 청중 앞에서 프로토타입 Xbox로 돌아가는 DirectX 8의 각종 고급 기술 데모를 보여줄 수 있었다. 다행히 물리 엔진이나 사실적인 물 표현 등을 통해 개발자들에게 깊은 인상을 주는 데 성공하였다.
   * 프로젝트의 작명도 문제였다. 사람들은 마이크로소프트가 재미없는 회사라고 인식하고 있었으므로, MS로서의 이미지를 환기시키지 않을 새로운 브랜드를 만들어야 했다. 그러나 수백개의 작명 후보들이 모두 영 시원찮았고, 결국 프로젝트의 코드명이던 XBox를 그냥 그대로 브랜드명으로 쓰기로 하였다.

   # 제1장: 아웃사이더들 (The Renegades)
   * 빌 게이츠(Bill Gates)가 세운 마이크로소프트(Microsoft)는 Windows 95 출시를 기점으로 폭발적으로 성장했으나, 악의 제국 이미지를 지닌 거대 기술기업이 되었다.
   * 한편, 1990년대 후반 소니가 지녔던 ‘Playstation 콘솔 게임기가 거실의 멀티미디어 엔터테인먼트 플랫폼이 되는 미래’라는 비전은 MS에는 가정용 PC를 대체할 수 있는 실질적 위협으로 여겨졌다. 그러나 MS는 Windows 운영체제 및 그 위에서 돌아가는 Office 소프트웨어로 돈을 버는 회사였으므로, 구성원들 스스로도 게임과는 거리가 멀다고 여겼다.
   * 한편, MS 내에서도 소수 조직이던 DirectX 개발팀은 모두 게임을 좋아하는 사람들이었는데, DirectX를 네이티브하게 실행시킬 수 있는 PC와 유사한 아키텍쳐의 기기(Box)가 있다면 좋겠다고 생각한다. 이러한 기기가 있다면 전용 칩셋을 사용하기 때문에 프로그래밍이 어려운 일본의 콘솔 게임기보다 게임 개발자 친화적일 것이었다.
   * 그러나 그들은 이런 구상을 실현할 수 있는 경험이 전혀 없었다. 일단 경영진을 설득해야 했다. 그래서 DirectX 팀은 MS라는 거대 조직의 구성을 잘 아는 냇 브라운(Nat Brown)을 영입하였다. 냇 브라운은 프로젝트를 추진하려면 먼저 코드명이 필요하다고 했다. DirectX를 네이티브하게 실행시키는 박스니까 DirectX Box라 불렸고, 나중에는 X-Box가 코드네임이 되었다.
   * 한편 MS의 게임 그룹 또한 처음에는 소수 조직이었지만, 에이지 오브 엠파이어의 성공으로 수익이 나면서 빌 게이츠의 신임을 얻는다. 그러나 MS는 여전히 일부 PC 게임 영역에만 국한된 회사였다. 그때 DirectX 팀이 게임 그룹을 찾아와서 Xbox 프로젝트를 제안한다. 구조적으로는 사실상 PC나 다름없는 기기로, MS가 콘솔 게임기 시장에 진입할 가능성을 보여주었다. 그래서 이 두 팀은 동맹을 맺는다.
   * 기회는 빨리 찾아왔다. 1999년 3월 2일 소니가 Playstation 2를 발표하면서 “PC의 종말”을 언급하자, 빌 게이츠가 DirectX 팀에 이 게임기에 관한 기술적 분석을 요청한다. DirectX 팀은 Playstation 2의 칩셋인 Emotion Engine이 지닌 강점과 약점을 분석한 보고서 말미에 ‘우리도 콘솔 게임기를 만들 수 있다’는 내용을 어필한다.
   * 빌 게이츠는 그해의 연례 생각 주간 때 ‘소니가 AOL 같은 케이블 업체와 손을 잡고 공격적인 마케팅을 하면 어떻게 될까’라는 질문을 진지하게 고민하였고, 이것이 Windows PC를 가정에서 몰아낼 위험성을 심각하게 받아들였다. 그래서 사내 공지를 통해 종합 게임 전략을 논의할 사람이 있는지 불러모았다. 이때 DirectX 팀은 준비해 두었던 파워포인트 프레젠테이션을 이 회의에서 공개하여 사내에 큰 파문을 일으켰다.
   * 그러나 사내에 다른 경쟁자도 있었다. Windows CE 팀이었는데, 그들은 세가와 협업하여 드림캐스트에 Windows CE를 탑재했던 경험이 있었기 때문이었다. 이 팀은 콘솔 게임기 하드웨어 관련 경험이 있었기 때문에 임원들의 지지를 받았다. 그들은 3DO 등 전통적인 콘솔 게임기와 유사한 게임기 개발을 주장하였다.
   * DirectX 팀의 주장은 달랐다. 차세대 게임기는 PC와 유사한 아키텍쳐로 만들어 하드디스크와 이더넷(Ethernet) 포트를 반드시 넣어야 한다는 것이었다. 이는 큰 논쟁으로 이어졌다. 빌 게이츠는 의도적으로 이 두 팀 간에 사내 경쟁을 붙였다.
   * 그래서 DirectX 팀은 PC를 개조하여 3~4초만에 부팅이 끝나는 프로토타입 Xbox를 만들어 툼 레이더를 돌리는 시연을 빌 게이츠에게 직접 보여준다. 이는 빌 게이츠에게 아주 깊은 인상을 남긴다. 고작 파워포인트 프레젠테이션만 준비했던 Windows CE 팀의 패배였다.
   * 당시 빌 게이츠는 CEO 역할을 스티브 발머(Steven Ballmer)에게 넘기고 있었다. 따라서 회사가 돈이 많이 드는 새로운 사업을 시작하려면 스티브 발머의 동의 또한 얻어야 했다. 스티브 발머는 처음에는 비디오 게임 사업에 회의적이었으므로 설득하기 어려웠으나, 곧 본격적으로 시작될 3D 온라인 게임 분야에서 Windows로 개발한 게임을 거실마다 놓아 각 가정에 독특한 경험을 선사할 수 있다는 점을 어필하여 간신히 설득할 수 있었다.
   * 스티브 발머는 이 새로운 분야의 사업을 시작하기 위해 키보드 및 마우스 등 주변기기를 만들던 MS 하드웨어 부문의 임원이던 릭 톰슨(Rick Thompson)을 XBox의 책임자로 임명하였다.

   저번주에 한번에 끝까지 몰아봤는데 정말 재미있었어요. 완전 강추합니다 'ㅁ '/

   MS의 거대한 뻘짓들도 모두 다뤄서 아주 흥미로웠어요. 11억 달러짜리 레드링과... TVTV텔레비전 참사... 위기를 어떻게 이겨내는지 나와서 다 아는 것임에도 두근거렸습니다.

   ""윈도우나 오피스 같은 지루한 소프트웨어를 만드는 회사""에서 나온 게임기 하드웨어라, renegades 라는 제목이 참 어울리네요

   재미나네요. 아직 다 보진 못했는데 초기 부분만 나온게 아쉽습니다.
   전 Xbox는 하위호환 프로젝트가 가장 흥미로운데 그 부분도 추가되면 좋을 것 같아요.
   Xbox 하위호환 작업 팀, 재미있는 비화 공개! https://bbs.ruliweb.com/xbox/board/300003/read/2114020
"
"https://news.hada.io/topic?id=5578","2022년 PyTorch 와 TensorFlow 비교","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     2022년 PyTorch 와 TensorFlow 비교

   - 보통 TensorFlow는 산업용, PyTorch는 연구용 이라고 얘기하지만 이건 옛날 정보에 기반한 이야기
   - 실용적인 고려사항 : 보통 3가지 비교로 귀결
   ㅤ→ 모델가용성 : 공개적으로 사용할 수 있는 모델이 얼마나 많은가
   ㅤ→ 배포인프라 : 얼마나 효율적으로 배포가 가능한가
   ㅤ→ 에코시스템 : 다양한 환경/하드웨어
   ## Model Availability
   - PyTorch,TensorFlow 모두 자체 공식 모델 리포지토리가 있음
   - HuggingFace
   ㅤ→ PyTorch 에서만 사용가능한게 85%, 독점이 아닌 모델도 50%는 사용가능. 전체의 16%만 TensorFlow에서 사용 가능(8%만 TF)
   ㅤ→ Top 30 인기 모델들의 경우, 모든게 PyTorch에서 사용 가능하지만 TensorFlow는 그중 18개만 사용 가능
   - 연구 논문
   ㅤ→ 매년 제출되는 논문들에서의 PyTorch 사용량은 계속 증가
   ㅤ→ 2017년 7%에서 시작해서 2021년엔 거의 80%까지 차지
   ㅤ→ TensorFlow 1 의 어려움 때문에 PyTorch를 많이 선택
   ㅤ→ 이런 어려움은 2019년에 나온 TensorFlow 2 에서 많이 개선되었지만, 이미 PyTorch가 연구 중심으로 자리잡음
   ㅤ→ 2018년에 TensorFlow를 썼던 연구자들중의 55%가 2019년 PyTorch 로 옮김
   ㅤ→ 2018년에 PyTorch를 사용한 연구자중의 85%는 2019년에도 PyTorch를 사용
   - Papers With Code 자료에 따르면
   ㅤ→ Tensorflow는 계속 줄어들고, PyTorch 및 다른 프레임워크들이 점점 많이 사용중
   ㅤ→ TensorFlow 2 출시후에도 이런 추세는 계속. 기존 TF1에서 겪었던 어려움을 되돌리기엔 역부족
   - 결론적으로 모델 가용성 면에서는 PyTorch가 시장을 장악
   - 그외 예외들
   ㅤ→ GoogleAI 는 TensorFlow 를 주로 사용했으나, Google Brain은 JAX/Flax 사용
   ㅤ→ DeepMind 도 JAX를 도입하고, Jax 용 신경망 라이브러리인 Haiku 도 개발 (Sonnet for JAX)
   ㅤ→ JAX : 구글이 따로 만든 프레임워크. 연구쪽에서 인기를 끌어가는 중
   ## Deployment
   - TensorFlow는 처음부터 배포 지향 어플리케이션에 최적이었음
   ㅤ→ TensorFlow Serving, TensorFlow Lite 등으로 클라우드/서버/모바일/IoT 기기등에 고통없이 배포 가능
   - PyTorch는 배포관점에서 매우 부진했지만, 최근 몇년간 이 격차를 줄이기 위해 노력
   ㅤ→ TorchServe 와 PyTorch Live
   - 결론적으로, 아직은 배포관점에서는 TensorFlow 가 더 뛰어남
   ㅤ→ 특히 TFLite 를 로컬 및 Coral 기기에서 사용 가능한 부분은 다른 산업에도 꼭 필요
   ㅤ→ PyTorch Live는 모바일에만 집중하며, TorchServe 는 아직 초기 상태
   ## Ecosystems
   - PyTorch
   ㅤ→ 공식 PyTorch Hub가 존재 : Audio/Vision/NLP 등 다양한 모델을 가지고 있음
   ㅤ→ SpeechBrain : 공식 오픈소스 스피치 툴킷, ASR/화자인식,인증 등 많은 기능을 가지고 있음
   ㅤ→ Fast.ai 를 비롯해서 다양한 도구와 라이브러리들이 있음
   ㅤ→ TorchElastic : AWS+Facebook 협업 프로젝트
   ㅤ→ TorchX : 빠른 머신러닝 개발및 배포용 라이브러리
   ㅤ→ PyTorch Lightning : Keras of PyTorch
   - TensorFlow
   ㅤ→ 공식 TensorFlow Hub : BERT를 포함한 다양한 모델
   ㅤ→ Model Garden : SOTA(State-of-the-ART) 모델에 대한 소스코드 저장소
   ㅤ→ TensorFlow Extended(TFX) : 모델 배포를 위한 E2E 플랫폼
   ㅤ→ Vertex AI : 구글 클라우드의 Unified 머신러닝 플랫폼
   ㅤ→ Media Pipe : 얼굴 인식, 손 트래킹, 객체 인식등의 기능을 만드는 머신 러닝 파이프라인을 만드는 멀티모달, 크로스플랫폼 프레임워크
   ㅤ→ Coral : 로컬 AI를 내장한 제품(IOT)을 지원하기 위해 만들어진 툴킷
   ㅤ→ TensorFlow.js : 머신러닝을 위한 JavaScript 라이브러리
   ㅤ→ TensorFlow Cloud : 로컬 개발환경을 구글 클라우드에 연결
   ㅤ→ Colab : 클라우드기반 노트북 환경 (Jupyter와 비슷)
   ㅤ→ Playground : 신경망 기본을 이해하기 좋은 교육 도구
   ㅤ→ Datasets : 구글이 정기적으로 공개하는 데이터셋을 저장(PyTorch 사용자도 이용가능)
   - 결론적으로, TensorFlow가 에코시스템 은 더 뛰어남
   ㅤ→ 그동안 구글이 많이 투자 했음
   ㅤ→ 구글 클라우드와 연결하거나, Coral 기기등으로 포팅하기 쉽게하는 것등도 몇몇 분야에서 더 훌륭
   ## 그럼 둘 중에 뭘써야 할까 ?
   - 해당 산업에 있다면, 어떤 인더스트리에 있는지에 따라 선택이 다를 수 있음 (원문에 쉬운 선택을 위한 플로우 차트 제공)
   ㅤ→ 산업 환경에서 딥러닝을 쓴다면 이미 TensorFlow를 쓰고 있을 것이고 그대로 가도 됨
   ㅤ→ TorchServe 때문에 PyTorch도 고려해 볼 수는 있음
   ㅤ→ 모바일 이라면 PyTorch Live 이용, 오디오/비디오 입력이라면 TensorFlow를
   ㅤ→ IoT에서 AI를 사용한다면 TensorFlow Lite + Coral
   - 연구자라면 ?
   ㅤ→ 이미 아마도 PyTorch를 쓰고 있을 것이고 그대로 가도 됨
   ㅤ→ 특별한 예외로 Reinforcement Learning을 한다면 TensorFlow를 고려
   ㅤ→ TensorFlow를 쓰기 싫다면 JAX도 한번 고려해 볼만
   ㅤ→ 뭘 선택하든, 2022년엔 JAX는 지켜봐야 함
   - 교수라면 ?
   ㅤ→ 교육 과정의 목표에 따라 다를 수 있음
   ㅤ→ 현업에서 바로 머신 러닝을 사용할 엔지니어를 배출하려면 TensorFlow
   ㅤ→ 딥러닝 과 딥러닝 모델에 대해 이해하려면 PyTorch
   - 커리어 변경을 한다면 ?
   ㅤ→ PyTorch / TensorFlow 둘 다 좋은 옵션
   ㅤ→ 더 사용하기 쉬운 것을 선택할 것
   ㅤ→ 특정한 프레임워크에 귀속되지 않는 다면 업계에서 표준으로 사용되는 TensorFlow 가 나을 것
   ㅤ→ 구인/구직 시에 TensorFlow 쪽이 더 나았음
   - 취미로 딥러닝을 한다면?
   ㅤ→ 뭘 하려는지에 따라 다르지만, 기본적으로 PyTorch가 나음
   - 딥러닝 완전 초보자라면 ?
   ㅤ→ Keras 로 시작하는 것을 추천
   ㅤ→ Python 네이티브와 비슷한 환경을 찾는다면 PyTorch, 특히 PyTorch Lightning

   - Google Jax - 고성능 머신러닝 라이브러리 https://news.hada.io/topic?id=5556
   2019/2020년에 나왔던 얘기들과 비교해 보는 것도 재미납니다.
   - 머신러닝 프레임워크의 현재 [2019] https://news.hada.io/topic?id=696
   - 머신러닝 전문가들이 예견하는 2020년의 AI 방향 https://news.hada.io/topic?id=1213
   - AI를 독학하고 구글에 들어간 연구원 인터뷰 https://news.hada.io/topic?id=1347
   - TensorFlow 생태계: 머신러닝 개발부터 배포까지 https://news.hada.io/topic?id=1757
   - 구글이 만든 머신러닝 단기집중과정 with TensorFlow [한국어] https://news.hada.io/topic?id=1052
"
"https://news.hada.io/topic?id=5468","Ask GN: CRUD / CSV import 를 지원하는 빠르게 만들 수 있는 db 오픈소스 툴 추천해주세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask GN: CRUD / CSV import 를 지원하는 빠르게 만들 수 있는 db 오픈소스 툴 추천해주세요

   - ORM 으로 database modeling 관리 (CRUD) 가 가능하면 좋겠습니다. ORM 이 필수는 아니지만 모델링 관리가 쉬우면 좋겠습니다.
   - database schema 를 정의하고, 데이터를 넣을 수 있어야 합니다. (툴에서 지원하는 editor + csv import)
   - 큰 노력 없이 데이터를 웹으로 서빙 할 수 있으면 좋겠습니다.
   - 그래프 뷰를 추가할 수 있도록 지원되면 좋겠습니다.
   - auth 기능이 있어야 합니다.
   이런 요구사항 만족하는 쉬운 어드민 툴 있을까요?
   감사합니다!

   https://github.com/vuerd/vuerd
   이런 것도 도움이 되실지 모르겠네요.

   추천 감사합니다! 요건 제가 필요한 것보다는 좀 더 백엔드 기능에 초점을 맞춘 제품 같네요. :)

   이거 사용하시면 편하게 됩니다. :)
   https://retool.com/

   와 감사합니다! 거의 맞을 것 같은데.. open source alternatives 들도 보이고.. 이 쪽으로 좀 더 살펴봐야겠어요. 도움 주셔서 감사합니다.

   역시 딱 맞는 거 같진 않지만, 여기에 소개되었던 prisma도 있죠.
   https://news.hada.io/topic?id=2239
   원래 node.js용으로 나온 것이지만 python이나 go 언어 클라이언트도 있습니다.

   안내 감사합니다. db 는 이렇게 스키마 작성하면 될 것 같고, 프론트까지 강력하게 붙어주면 제가 원하는 제품일 것 같은데 좀 더 살펴보겠습니다. 감사해요.

   딱 맞는거 같진않지만..
   여기에 소개 되었던...
   https://news.hada.io/topic?id=5312

   거의 딱 맞는 것 같아요.. retool 과 요것 사이에서 고민입니다... ㅎㅎㅎ 감사해요

   음.. 쉽지는 않지만 가장 먼저 떠오르는 아이디어는
   - Django 로 ORM CRUD
   - Metabase 로 시각화
   하면 어떨까 싶습니다.

   아이디어 감사합니다. 제가 시간이 충분하면 뭔가 이것저것 붙여볼텐데, 상대적으로 사소하고 작은 플젝이라 싸고 빠르게 실행할 수 있는 툴을 쓸 것 같네요.
"
"https://news.hada.io/topic?id=5572","PNG Parser Differential","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        PNG Parser Differential

   - 병렬 디코딩 PNG 구현 버그를 이용해서, 애플 기기에서만 다르게 보이는 PNG 이미지 만들기
   ㅤ→ 애플 기기에서는 ""HELLO APPLE"" 과 올드 매킨토시 이미지
   ㅤ→ 그외 기기에서는 ""HELLO WORLD"" 와 구형 IBM PC가 보임
   - 간단한 소스 코드를 공개해서 누구나 비슷한 이미지 생성 가능

   이미지에 표시되는 줄 픽셀이 뭔가 키인가보네요.

   오 기기에 대응하는 이미지를 만들 수 있겠네요.
"
"https://news.hada.io/topic?id=5587","애자일 안한 이야기 (39p Slide)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         애자일 안한 이야기 (39p Slide)

   ""애자일 비 전문가이고 애자일 하겠다는 생각을 가진적이 별로 없는 사람으로서 애자일에 도움을 받아 개발 과정의 어려움을 극복하고 조금이나마 더 유용한 소프트웨어를 만들려고 노력했던 이야기를 정리해 봤습니다.""
   - 애자일과 첫만남
   - 객체지향의 재발견
   - 애자일 성공사례
   ㅤ→ 진짜 성공 이유 : 현장 상주 고객(On-Site Customer)
   - 개발조직의 두가지 함정
   - 완전한 팀(Whole Team)
   - 버스 인자(Bus Factor)
   - O2O 스타트업
   - 오늘 하던 일을 못하게 되어도...
   - 일이 일을 만들게 하지 말자
   - Agile에 관심이 없는 이유
   - 그건 Agile이 아니야!
   - 고통(Pain) 주도 개발 vs. 원칙(Principle) 주도 개발
"
"https://news.hada.io/topic?id=5487","Tesla, 어린이용 ATV Cybersquad 발매","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Tesla, 어린이용 ATV Cybersquad 발매

   - 최대 70kg, 시속 16km, 최대 24km 운행가능
   - $1900

   2-4주내 배송이라는데.. 바로 품절 되었더군요.
"
"https://news.hada.io/topic?id=5471","AWS Private 5G - 사설 5G 셀룰러 망 구축하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   AWS Private 5G - 사설 5G 셀룰러 망 구축하기

   - 회사들이 자신만의 5G 네트웍을 구성하기 위한 매니지드 서비스
   ㅤ→ 디바이스, 센서, 머신등을 모두 연결
   ㅤ→ AR/VR, IoT, 헬스케어, 리테일 스마트 팩토리 등
   ㅤ→ 미국내에서는 3.5Ghz CBRS(Citizens Broadband Radio Service) 대역을 사용
   - 관련 하드웨어 및 소프트웨어 모두 AWS가 제공
   ㅤ→ 커버리지 및 용량을 지정하면 네트웍 하드웨어를 AWS가 배송 (스몰셀 베이스 스테이션과 서버, SIM등)
   ㅤ→ 콘솔에서 하드웨어 설정하고 SIM 카드를 디바이스에 꼽으면 즉시 관리 가능
   - 연결기기 수가 아닌 사용량 대비 과금

   프라이빗 LTE 네트워크, ""CBRS""를 아시나요 https://www.itworld.co.kr/insight/203084
   FCC, 구글에 3.5㎓ 공유주파수 사용권 부여···美 이통시장 파란 예고 https://m.etnews.com/20200224000306
   ""시민 광대역 무선 서비스(Citizens Broadband Radio Service, CBRS)는 프라이빗 LTE 네트워크를 구축하고, 퍼블릭 4G/5G 서비스 대역을 확장하는데 사용할 수 있는 3.5GHz 대역에서의 공유 무선 주파수 대역을 말한다.""
   ""한국은 3.5GHz 주파수 대역을 2018년 차세대 이동통신 5G 주파수라는 이름으로 통신 3사가 낙찰받아 사실상의 5G 주력 주파수 대역으로 사용하고 있다""
   음.. 이것만 봐선 한국에선 계속 못 쓸 서비스 일 수도..
"
"https://news.hada.io/topic?id=5545","CloudGraph - AWS/Azure 정보 취득용 GraphQL API","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               CloudGraph - AWS/Azure 정보 취득용 GraphQL API

   - 멀티 환경/멀티 클라우드 정보 취득용 오픈소스 API
   - 클라우드 자원을 표준화한 후 복잡한 관계를 GraphQL로 한번에 쿼리 가능 (Read-Only 접근)
   - 예)
   ㅤ→ AWS 계정의 us-east-1 리전에 있느 모든 M5 EC2 인스턴스의 ARN,일 비용, EBS 볼륨 읽어오기
   ㅤ→ 내 모든 AWS 계정에서 ""Production"" 태그를 가진 모든 VPC 관련 리소스 리스트하기
"
"https://news.hada.io/topic?id=5557","Principal(수석) 소프트웨어 엔지니어는 어떤 일을 하는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Principal(수석) 소프트웨어 엔지니어는 어떤 일을 하는가

   - 구글,페북,아마존 등에서 Level 7+ 정도에 해당, 연간 총 보수 $800K(9.5억원) 정도
   정의
   * 일반적으로 여러 팀/조직 단위에서 영향을 미치는 initiative를 파악하고 추진하고 완수할 수 있어야 함
   - 비즈니스에 중요하고, 조직~회사 단위로 영향을 미치는 기회를 식별
   - 주요 성공 지표를 식별하고, 크리티컬 패스에 있는 중요 요소에 집중
   - 제품에서 발생하는 공통적인 문제들을 추상화 하고, 공통 인프라를 사전에 수정
   - 조직의 엔지니어링 문화에 지속적으로 영향을 미침
   - 시니어 엔지니어 및 매니저 채용에 도움을 줌
   - 업계의 새로운 제품 과 기술을 평가
   아키타입(Archetypes)
   * 경험에 의하면, 회사들은 수석 엔지니어의 성장을 지원하기 위해 특정 아키타입과 페어링 함
   1. Generalist : 제품/서비스 분야의 리더. 지속적으로 영향을 미치고 제품을 딜리버
   2. Specialist : 특정한 영역의 전문가. 자신이 속한 분야의 발전에 지속적으로 기여
   3. Coding Machine : 복잡한 문제에 대한 솔루션을 구축하고, 대부분의 엔지니어보다 훨씬 빠르게 수행
   4. Product Manager(PM) Hybrid : XFN(크로스펑셔널) 커뮤니케이션, 제품 전략, 기술 솔루션 등이 같이 필요한 복잡한 비즈니스 문제를 해결
   간단히 말해서,
   - ""조직 수준""의 영향을 미치려면, 수석 엔지니어들의 작업 대상을 매우 잘 선택하고, 최대한 활용 해야 함
   ㅤ→ 예를 들어, 일의 성공 및 영향력 극대화를 위해 수석 엔지니어들은 일반적으로 ""이사 수준""의 엔지니어링 리더들에게 직접 보고 함

   아키타입별 제 느낌은
   1번은 데미스 하사비스
   2번은 제프리 힌튼
   3번은 제프 딘

   예를 들어주시니 더 이해가 잘 되는군요. 원글 쓴 사람한테 이 댓글을 보내야..!

   좋은 말들 잘 써놨는데 실제 있었던 사례들이 궁금하네요. 조직 ~ 회사 단위로 영향을 미치는 기회가 무엇이 있었고, 어떤 의사 결정을 내려서 추진했었던 것인지 등...

   조직의 구성이 어떤가에 따라 다를 수 있는 얘기입니다만, 해외 기업에서 보통 Principal(수석) 이란 단어가 붙은 사람들은 어떤 사람인가를 알아보는데 괜찮은 자료인듯 해서 옮겨봅니다.
"
"https://news.hada.io/topic?id=5565","logo-ls - 파일 아이콘과 Git 연동 기능 내장 ls ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   logo-ls - 파일 아이콘과 Git 연동 기능 내장 ls

   - 250+개의 아이콘
   - 600+개 이상의 파일과 확장자, 디렉토리 지원
   - Git 상태 연동
   - Go 로 작성되어 네이티브 수준의 속도
   - 트루컬러 지원
"
"https://news.hada.io/topic?id=5499","Uutils - GNU Coreutils를 Rust로 재작성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Uutils - GNU Coreutils를 Rust로 재작성

   - GNU Coreutils가 C로 작성되어 이식성이 떨어지므로, Rust로 재작성해서 유니버설(크로스플랫폼) 및 더 안전한 CLI 모음을 만들려는 오픈소스 프로젝트
   ㅤ→ 리눅스(ARM,PowerPC,Risc-V,X86), 윈도우, 맥, BSD, 안드로이드 등
   - Cargo 또는 GNU Make로 빌드 가능

   이와 비슷하게 Rust 로 coreutil CLI를 하나하나 만들어가며 배우는 책도 있습니다.
   Rust From the Ground Up - Real World CLI Programming in Rust
   https://rftgu.rs/
   아직 얼리억세스 상태이고 20% 완성

   좋은정보 감사합니다. 요즘 러스트에 관심이 생겨서 지켜보는 중이였는데 기본 문법좀 공부하고 이 책으로 CLI 만들어봐야 겠네요
"
"https://news.hada.io/topic?id=5521","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   이 글을 보면 뭔가 생산성 있는 걸 해야할 것 같은 부담을 받지만
   이번 주도 고기 구워 먹고 늘어지게 쉴 것 같습니당.. ㅎㅎ

   저도요 ㅎㅎ
   맛있는 것 먹으며 디즈니+ 보려고요.

   사실은 저도 많이 쉽니다. 그러니 블로그 글 하나를 몇주에 걸쳐서 하나 쓰죠.. ^^;;

   지난주말엔 블로그 글을 작성했는데, 길어져서 아직 못끝냈어요.
   이번주까지 연장해서 마무리 해볼까 합니다.
"
"https://news.hada.io/topic?id=5462","Fluent Search - Windows 용 강력한 종합 검색/창 전환 유틸리티","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Fluent Search - Windows 용 강력한 종합 검색/창 전환 유틸리티

   최근에 발견하고 쾌재를 부른 앱이 있어서 올립니다. 2주 정도 사용하고 있는데 아주 만족스럽습니다. (쓰고나서 읽어보니 뭔가 광고 같은 느낌이 들어서 좀 어색하네요. 너무 잘 쓰고 있어서 그런거니 이해부탁드립니다.)
   가장 멋지다고 느끼는 기능은 Screen Search 기능인데, 다들 잘 아시는 Vimium 과 같은 키보드 접근 방식으로 Windows 컨트롤 전체를 접근하도록 해주는 기능입니다. hap-Hunt and Peck 을 기존에 사용해 왔는데, hap는 한 번 힌트를 표시하는 데에 길게는 10초 까지도 걸리는 경우가 자주 있어 쓰기가 불편했습니다. FluentSearch 는 정말 호출하자마자 표시될 정도로 어마어마하게 빠릅니다. 이 기능 하나만으로도 FluentSearch 를 따라올 비슷한 툴은 없는 듯합니다.
   그리고 프로세스 전환 기능도 사용할 수 있습니다. 이 기능도 다른 툴과는 다르게, 부가적인 기능이 있어서 아주 좋습니다. 일단 창 수준보다 한 단계 더 들어가서 탭 수준까지 전환이 가능하다는 점이 하나이고, 프로세스에 태그를 달아둘 수 있는 기능이 또 하나의 강력한 장점입니다.
   예를 들어 많은 msedge 창(프로세스) 중에 하나는 특별히 Roam Research 용으로 사용하는 경우에, 거기에 roam 이라는 태그를 달아두고 그 태그를 이용해서 창 전환을 할 수 있습니다. Roam Research 를 예로 드는 이유는 Roam 의 경우 창 제목에 그냥 노트 제목만 표시하지 Roam 이라는 문자열을 포함하지 않아서 일반적인 창 전환 유틸리티로는 접근하기 불편하기 때문입니다. (최근에 알게 된 사실이지만 msedge 의 창 이름 붙이기 기능을 활용하면 해결이 가능하긴 합니다.)
   저는 다른 기능은 모두 끄고 이 두 가지만으로 아주 만족스럽게 Fluent Search 를 사용하고 있는데, 이 녀석은 종합적인 검색 기능을 제공하는 녀석이라서 아래와 같은 기능도 제공하고 있습니다.
   - 어플리케이션 실행
   - 파일 검색
   - 커맨드 실행
   - 웹 검색
   - MS To Do 검색(로그인 필요)
   - 시스템 설정 검색
   - 계산기
   - 크로미움 계열 브라우저 방문 기록 검색

   1. hunt-and-peck은 Pycharm의 버튼들이 인덱싱 안됐었는데 얘는 되네요.(ctrl-m)
   2. 에디터화면 등도 라인별로 불필요하게 인덱싱되는걸 보니 스크린캡쳐 한것 기반으로 클릭할 장소를 판단하는듯 하네요. 그래서 속도가 훨씬 빠르군요.

   한글 타이핑을 커서가 미묘하게 따라오지 못하는 기분이네요.

   한글 폰트 뭐로 어떻게 바꿔야 검색창에서 한글 입력시 깨지지 않을까요?

   여기에 소개되었던 Pretendard 폰트로도 한글이 깔끔하게 잘 나오네요. https://news.hada.io/topic?id=4538

   네이버 D2Coding 폰트로 적용하니 한글나오네요.

   한글폰트를 바꾸니 안깨지네요.

   와 어떻게 바꾸셨어요?

   Settings -> Appearance ->Text -> Font family 변경하시면됩니다.

   Power Toys Runs가 느려서 불편했었는데
   이거 너무 좋네요!
   감사합니다!!

   알프레드 같은 프로그램인가요? 현재 회사에서 윈도우 피씨를 쓰고 있는데 한번 설치해 봐야겠네요

   맞습니다. 알프레드에 Vimac 도 합친 느낌이죠.

   좋은정보 감사합니다.

   Listrary에 Quick Switch라는 기능(익스플로러와 파일 선택 다이얼로그를 동기화 해주는 기능)때문에 썼었는데 Fluent Search에도 Settings > Advanced > Context > Copy context to file dialogs 라는 설정으로 있네요. 한동안 써봐야겠어요.

   저도 Listary 잘 쓰고 있는데 사용하시고 비교글 올려주시면 큰 도움이 되겠습니다

   검색 창에 한글이 깨져서 나오네요.
   https://github.com/adirh3/Fluent-Search/issues/148

   아쉽네요... 그래도 검색 키워드에 네모 현상은 나오지만 검색은 되니 당분간 사용해 보는것도 좋을거 같네요.~ 감사합니다.

   맞아요. 동작은 해서 쓰고 있었는데 이슈도 있었네요!

   오 빠르고 좋네요. 하드의 파일 인덱싱 중인데도 메모리는 25MB 수준이네요.
   Everything 대용으로도 좋을 듯

   프로그램 추천 감사합니다. 한번 살펴봐야 겠네요. 시스템 리소스 사용량 궁금하군요
   윈도우 파워바 툴로는 Launchy 를 쓰고 있는데 얼마전에 파워토이 내장 런처 한번 써보려다가 느리고 메모리 점유율 높아서 꺼뒀던 기억이 나는군요

   저도 Powertoys run 초창기에, 그리고 최근에도 써보고는 좀 실망이라 유지보수 안되고 있는 switcheroo 를 수년간 써오고 있었는데 Fluent Search 를 써보고 바로 갈아탔습니다 ^^
"
"https://news.hada.io/topic?id=5502","틱톡에서 3자리수 전환율 광고 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          틱톡에서 3자리수 전환율 광고 만들기

   - 광고 실적 데이터 분석을 통해 입증
   - 전환율 상승 모범사례
   ㅤ→ 고해상도(720p) 영상이 312% 높음
   ㅤ→ 9:16 풀스크린이 91% 높음
   ㅤ→ 명확한 CTA를 보이면 152% 증가
   ㅤ→ 21초에서 34초 사이가 280% 높음
   - 업종별
   ㅤ→ 이커머스
   ㅤㅤ⇨ 여러 장면을 혼합하면 38% 증가
   ㅤㅤ⇨ CTA를 명확하게 표시하면 80% 증가
   ㅤㅤ⇨ 음성해설 + 오퍼링이 87% 증가
   ㅤ→ 게임
   ㅤㅤ⇨ 더 많은 행동, 더 많은 재미, 더 많은 참여 : 5개 이상의 씬으로 구성된 광고가 171% 높음
   ㅤㅤ⇨ 첫 7초안에 화면 텍스트를 보여준 영상이 전환율 43% 높음. 가능한 빨리 텍스트를 표시하는 것이 좋음

   TikTok for Business 사이트 에 유용한 정보가 꽤 많이 올라오고, 한국어로도 운영 됩니다.
   - https://www.tiktok.com/business/ko/
   블로그도 있는데요. https://www.tiktok.com/business/ko/blog 모든 글이 번역되어 올라오는게 아니라, 이 글은 아직 안올라왔네요.
"
"https://news.hada.io/topic?id=5465","Asciinema 3.0 - 4배 작고, 50배 빠르게","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Asciinema 3.0 - 4배 작고, 50배 빠르게

   - 터미널 화면을 녹화하고 공유하는 도구
   - 밑바닥부터 JavaScript와 Rust로 재개발 해서 50배 빠른 가상 터미널 인터프리터를 구현
   ㅤ→ Rust를 WASM으로 컴파일
   - 이전 버전은 ClojureScript로 개발
   ㅤ→ 속도가 느리고, 크기도 크고, JS 에코시스템과 연동이 쉽지 않았음
   - React.js 에서 SolidJS로 변경한 것도 속도 개선에 영향을 줌
   ㅤ→ 또한 플레이어가 자체적으로 React.js를 써서, 다른 React 앱에 임베딩 하기 어려웠던 것도 해결
   - 화면 크기에 따른 자동 스케일링 지원
   - WebSocket과 커스텀 Driver 도 지원

   React.js 한때는 트렌드를 선도 했지만 발전이 느려서 라이브러리 구동 속도가 느리고 구현하기에 너무 장황하죠 React.js 는 SolidJS 등등 과 같이 전반적인 혁신이 필요합니다.

   요즘들어 Rust로 재작성되는 프로젝트가 많은 것 같네요 ㅎㅎ 속도가 주된 이유겠죠?

   * Asciinema - 터미널 화면을 녹화하고 공유 https://news.hada.io/topic?id=1050
   * Solid - Reactive JS 라이브러리 https://news.hada.io/topic?id=4940
"
"https://news.hada.io/topic?id=5560","Pico.css - 미니멀 CSS 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Pico.css - 미니멀 CSS 프레임워크

   - 모든 네이티브 HTML 엘리먼트 지원
   - 다크모드 자동 활성화 : HTML 또는 어떤 태그에든 data-theme=""dark""
   - SCSS 로 커스터마이즈 가능
   - .class 를 거의 사용하지 않음 ( classless 버전도 별도로 존재 )
   - 8.5kb minified & gzipped

   MVP.css - A minimalist stylesheet https://news.hada.io/topic?id=1773
   CSS Bed : No-Class CSS Frameworks https://news.hada.io/topic?id=1896
"
"https://news.hada.io/topic?id=5500","소니, Xbox 게임패스 경쟁 서비스 준비 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       소니, Xbox 게임패스 경쟁 서비스 준비 중

   - 블룸버그가 관계자 및 문서를 통해 알아낸 것
   - 코드명 Spartacus라고 불리는 Playstation용 월 구독 서비스
   ㅤ→ 월 비용을 내고 최신 또는 클래식 게임을 플레이 가능
   - 내년 봄 출시를 목표
   ㅤ→ 기존 PlayStation Plus 와 PlayStation Now 를 통합할 것
   ㅤ→ PS Plus 브랜드는 유지하고, PS Now는 중단할 것으로 보임
   - 3개의 티어
   ㅤ1. 현재의 PS Plus 혜택
   ㅤ2. PS4 와 PS5 게임 카탈로그 제공
   ㅤ3. PS1~3 및 PSP 게임 라이브러리와 게임 스트리밍, 확장 데모 등을 제공
   - Microsoft의 게임패스는 1800만명의 구독자를 확보해서 ""비디오 게임계의 Netflix"" 라고 불림
   ㅤ→ 월 $10~$15 를 내고 수백개의 게임을 무제한 이용 가능
   - 소니는 클라우드 게이밍에도 자원을 투입중
   ㅤ→ Microsoft의 xCloud 게임 스트리밍에 대응

   솔직히 온라인서비스에서는 소니가 많이 뒤쳐지는 듯
   MS가 하위호환으로 게임 라이브러리들 계속 늘리면서, 게임패스와 xCloud로 더 미래지향적으로 가는거 같기는 합니다.
   AR/XR 분야에서 MS는 오피스 쪽에 치중한다고 발표를 했는데, 사실 게임은 게임대로 잘하고 있어서 AR/XR에서 MS가 한자리 차지하고 나면 거기다 XBOX랑 연결하는건 뻔한 수순일 것 같아요.

   베데스다(제니맥스) 인수건을 포함해서, 현재 Xbox Game Studio는 23개 개발 스튜디오를 소유하고 있고, 계속 더 인수할 거라고 얘기했습니다.
   https://gamesindustry.biz/articles/…
   처음에 마이크로소프트가 게임기 만든다고 했을 때 다들 비웃었는데 이정도까지 키울줄은..
"
"https://news.hada.io/topic?id=5507","PiBox Mini - 라즈베리 Pi 스토리지 서버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      PiBox Mini - 라즈베리 Pi 스토리지 서버

   - Raspberry Pi CM4 와 하드디스크를 추가하면 바로 NAS가 되는 하드웨어
   ㅤ→ 현재는 2개의 SSD가 들어가는 Mini 모델만
   ㅤ→ 3.5 2개/5개 및 SSD 5개 들어가는 버전도 출시 예정
   - 자신이 원하는 OS로 NAS 구성 가능
   - HDMI, RJ45, 2 USB-A X 2, 1 USB-C
"
"https://news.hada.io/topic?id=5585","고수들이 본 NFT의 미래","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             고수들이 본 NFT의 미래

   오늘자 팩플에서 '고수들이 본 NFT의 미래'라는 제목으로 좋은 내용을 발행해서 요약해 봅니다.
   기사 원본은 URL에 있습니다만, 뉴스레터를 구독하는 것이 팩플에 더 많은 도움이 될 겁니다 ㅎㅎ
   https://bit.ly/factpl_letter
   * * * * *
   1. 블록체인 (그라운드 X)
   - IP 기반의 NFT는 파괴력은 분명하지만 관건은 ‘어떻게 접근하느냐’
   - NFT에 담길 콘텐츠/IP를 소비자가 구매해야 할 이유가 명확해야 함
   - 단순 상품이 아닌, 커뮤니티와 문화를 전파
   - 생산자와 소비자가 일체가 된, 이익공동체를 만들어 내는 게 NFT의 핵심
   2. 게임 (위메이드)
   - 경제적 가치가 있고 가격이 변하는 모든 재화는 NFT가 될 것
   - NFT 기술에 대해 명확한 이해가 필요: 그림을 NFT로 만든다고 해서 그 그림의 진품 여부까지 보증되지 않음
   - 디지털 아이템은 게임 회사가 진품 검증 기관 역할을 할 수 있음
   - 양질의 게임에 접목하는 게 NFT의 핵심 경쟁력
   3. 미술 (아라리오 갤러리)
   - 미술 시장에서 작품의 물리적 소유가 ‘소유권의 소유’로 대체되고 있음
   - NFT를 ‘미술의 대중화’로 볼 수 있지만, 판매자의 마케팅 용어 (미술 시장은 상위 1%의 작품이 전체 매출의 90%를 차지)
   - 지금의 NFT 아트는 시각적으로 강하고 키치하며 블링블링한 작품이 인기이나, 앞으로는 컨셉추얼한(본질을 꿰뚫는) 경향이 두드러질 것
   - 그러나 최근 예술계의 중요한 화두가 ‘환경’과 ‘소수자 문제’인데 반해 NFT는 이 흐름에 역행하고 있는 점(채굴비용, 개도국 어린이)은 지켜봐야 함
   4. 엔터테인먼트 (하이브)
   - NFT는 창조적 활동을 통해 무형적 가치가 생성되는 게임, 예술, 엔터 등과 융합됐을 때 진가를 발휘
   - NFT 활용은 투트랙으로 (기존 오프라인 상품·서비스는 유지하면서 디지털 전환 또는 병행이 더해지는 방향)
   - 엔터의 근간인 아티스트와 아티스트의 창작물, 팬덤은 변하지 않음: NFT는 아티스트 IP를 강화할 ‘수단’일 뿐
   5. 규제 (디코드 법무법인)
   - 법·제도적 측면에서 NFT는 준비된 게 거의 없음
   - 오프라인 원본과 디지털 원본의 관계, 관계 보증 주체, NFT 민팅(발행) 과정의 권리자 관계 정리 등이 법률적으로 해결, 설명될 필요
   - 가장 시급한 건 NFT 유형에 따라 명확한 가이드라인을 제시하는 것
"
"https://news.hada.io/topic?id=5566","Rails 7.0 릴리즈 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Rails 7.0 릴리즈

   - 몇년전까지는 불가능했던 비젼들이 이제 주요 기술들이 자리잡으면서 모두 가능해짐
   ㅤ→ ES6/ESM, HTTP/2, Import Maps
   ㅤ→ Node 가 필요 없는 개발 환경
   - Hotwire + Turbo + Stimulus 가 기본 추천 옵션
   ㅤ→ 기존 Webpack, Turbolinks 와 Rails UJS를 대체
   ㅤ→ Webpack에 깊게 연동되었던 것에서 다양한 JS번들러가 가능하도록 느슨하게 커플링 (esbuild, rollup.js 등)
   ㅤ→ Node에 의존하던 CSS 번들러도 느슨하게 : Tailwind CSS, Bootstrap, SaaS, PostCSS 등
   - Active Record 에 encrypted attributes 추가 (HEY에서 사용하던 것을 가져옴)
   - marginalia 젬을 다시 Active Record QueryLogs 에 업스트림
   - 비동기 쿼리 로딩

   아직 7로 올리진 않았지만 웹팩은 미리 걷어내고, hotwire+turbo+stimulus 잘 쓰고 있습니다.
   행복합니다.

   ror 팬입니다. 계속 열심히 만들어줘서 감사하게 생각합니다.
   rails 가 없었으면 저는 뭘로 코딩하고 있었을까...
   아마 장고를 선택했으려나... 궁금하긴 하네요. ㅎ
   https://jeho.page/essay/2021/12/17/ruby-on-rails-7.html

   * JS 번들링/트랜스파일링 없는 최신 웹앱 https://news.hada.io/topic?id=4868
   위 글에서 얘기하던 것들이 Rails에 다 반영 되었네요.
"
"https://news.hada.io/topic?id=5537","when - 터미널에서 타임존별 시간 계산하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       when - 터미널에서 타임존별 시간 계산하기

   - 타임존에 따른 시간 계산을 편하게
   - 유명 도시 및 공항코드 지원
   $ when ""2 hours ago in sfo""
   $ when ""5pm in yyz -> sfo""
   $ when ""5pm in vienna -> london""
   $ when ""4pm on 17.05.2021 in vienna -> tokyo""
   $ when ""4pm yesterday in vienna -> vienna va""
   $ when ""in 4 hours in san francisco""
   $ when ""2pm in 2 days in new delhi
   $ when ""now in yyz -> sfo -> vie -> lhr""
   $ when ""unix 1639067620 in tokyo""
"
"https://news.hada.io/topic?id=5573","팬데믹이 테크 산업을 어떻게 바꾸고 있는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        팬데믹이 테크 산업을 어떻게 바꾸고 있는가?

   - 클라우드, 하드웨어, 경쟁이라는 세 가지 변화가 테크 산업을 강타
   1. 클라우드의 확산
   ㅤ→ 수혜자는 소규모 기업들 : Snowflake, Twilio, Okta
   ㅤ→ 기존 테크 기업들도 클라우드 사업 확장 : Salesforce, Adobe, Oracle, SAP, Cisco, Dell, IBM
   2. 컴퓨터 판매가 오히려 증가
   ㅤ→ 재택근무가 늘어나면서 집에서 업무에 사용하는 고성능 컴퓨터에 대한 수요도 커짐
   ㅤ→ 반도체 기업의 호실적은 하드웨어 업계가 부활의 신호탄을 쏘아 올렸다는 점을 보여줌
   ㅤ→ 인텔, TSMC, 삼성은 대규모 투자계획을 밀어붙일 수 있을까 ?
   3. 테크 업계의 경쟁이 더 치열해 짐
   ㅤ→ 앱마켓 수수료 인하
   ㅤ→ 원격근무 시장 주도권 : 구글, 마이크로소프트, 세일즈포스, 줌
   ㅤ→ 페이스북은 Snapchat, TikTok
   ㅤ→ 아마존은 월마트, Shopify
   - 앞의 두 가지는 지금 같은 빠른 속도로 영원히 지속되지는 않을 것
   - 경쟁 국면이 얼마나 지속될지는 누구도 쉽게 답을 내리지 못함
"
"https://news.hada.io/topic?id=5520","GitHub Code Search 기술 프리뷰 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      GitHub Code Search 기술 프리뷰 공개

   - 새로운 코드 검색기능으로 5백만 공개 Repo의 코드를 인덱싱하며, 추가로 자신이 접근 권한을 가진 Private Repo도 검색 가능
   - Code 에 최적화된 인덱스와 스마트 랭킹으로 원하는 코드를 빠르게 찾기
   - 단어 매칭, 부분 문자열 매칭, 특수 문자 및 정규식 지원
   - org: 및 repo: 등으로 검색 범위 설정. 자동 완성 지원
   - language: , path:, extension: 및 OR, NOT 등으로 필터링
   - symbol: 로 심볼 정의 검색
   - Waitlist 등록 후 활성화되어야 사용 가능

   https://grep.app/
   이 프로젝트의 확장판 같은 느낌이네요. Show HN에 개발자가 올린 적이 있는데, Github CTO가 채용해도 되냐고(.. ) 올렸던 그 전설의 프로젝트..

   저도 혹시 그 개발자( @danfox ) 가 그 이후에 어디 갔나 찾아봤는데 흔적을 찾을 수가 없네요.
"
"https://news.hada.io/topic?id=5511","이 달의 CT 스캔 : 에어팟의 진화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          이 달의 CT 스캔 : 에어팟의 진화

   - 매달 CT 스캐너로 특정 물품을 상세히 찍어서 공개하는 페이지
   - 스크롤 하면서 물체를 회전시키며 내부를 설명하는 형식
   - 이번 달은 2016년부터 공개된 AirPods 시리즈
   ㅤ→ AirPods 1세대
   ㅤ→ AirPods Pro
   ㅤ→ AirPods 3세대
   - 지난달에는 레고 Minifigure 였음
   ㅤ→ 이전 데이터 보는 링크가 없어서 웹아카이브 통해서 봐야함

   레고 미니피규어 보기 https://web.archive.org/web/20211122210134/…
"
"https://news.hada.io/topic?id=5533","애플 앱 스토어, 사용자 정의 제품 페이지 생성 기능 추가 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    애플 앱 스토어, 사용자 정의 제품 페이지 생성 기능 추가

   - 제품 페이지 최적화 기능 : 여러 버전의 아이콘/스크린샷/미리보기 를 활용하여 A/B 테스트 가능
   - 맞춤 제품 페이지 : 앱 제품 페이지의 추가버전을 만들어 고유한 URL로 공유
   ㅤ→ 다양한 스크린샷, 미리보기, 홍보 문구 포함 가능
   ㅤ→ 완전히 현지화 가능하며 특정 분야/캐릭터/쇼/게임플레이 기능들을 강조하여 홍보
"
"https://news.hada.io/topic?id=5489","Blender 3.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Blender 3.0 릴리즈

   - 오픈소스 2D/3D 콘텐츠 저작 도구
   - 2x~8x 빨라진 렌더링
   ㅤ→ 뷰포트 탐색 및 빛 조작 속도 개선
   ㅤ→ 노이즈 제거 및 쉐도우 처리 개선
   ㅤ→ 재작성된 Shadow Catcher
   ㅤ→ 더 현실적인 피부 처리
   - Asset 브라우저 추가
   ㅤ→ 드래그앤 드롭으로 쉽게
   ㅤ→ 자신만의 카탈로그로 관리 가능
   ㅤ→ 메타데이터 태깅 지원
   - Geometry Nodes 확장
   ㅤ→ Fields 컨셉을 추가해서 데이터와 함수를 전달 가능
   ㅤ→ Curve 와 Text 개체에도 지원
   - 사용자 인터페이스 개선
   - WYSIWYG
   ㅤ→ 비디오 시퀀서가 썸네일 프리뷰 지원
   ㅤ→ 프리뷰 화면에서 트랜스폼 도구 사용 가능

   바뀐게 너무 많아서 6분 단축 영상으로 보는게 편하네요
   https://www.youtube.com/watch?v=JZIFWEY3l6k
"
"https://news.hada.io/topic?id=5547","가디언의 2022년 기술 예측","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            가디언의 2022년 기술 예측

   - 트위터가 다시 움직임 : 슈퍼팔로우, Revue, 수익화, CEO교체
   - NFT는 계속 과장될 것 : 그거 다 NFT없이도 가능했던거 아냐? 돈버는건 플랫폼 뿐
   - 우버 및 Gig Economy는 돈을 벌기위해 노력할 것
   - 잭 도시(트위터 창업자)는 새로운 블록체인 회사를 시작할 것. 피터 틸이 투자할 수도
   - DAO가 새로운 SPAC 이 될 것 : 작년엔 다 SPAC으로 상장했지만 실적은 저조했음
   - 사람들이 VR을 다시 접하게 될 것 - 메타버스
   - 인디 게임들이 계속 부흥기(르네상스)를 가지게 될 것
   - 팟캐스트 버블은 터지지 않을 것
   - 하지만 뉴스레터 버블은 터질 수도..
   - Ports are the new ports : 애플이 새 맥북프로에 포트를 다시 추가했음. ""Back to the Future""
"
"https://news.hada.io/topic?id=5483","Ask GN: 지금까지 만나보셨던 탁월한 개발자들의 공통적인 특징은 무엇이었나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Ask GN: 지금까지 만나보셨던 탁월한 개발자들의 공통적인 특징은 무엇이었나요?

   학습, 성장, 생산성 같은 화두로 요즘 계속 생각하다 보니 이런 주제가 궁금해지네요.
   더 나아가서, 좋은 개발자와 탁월한 개발자는 어떤 점에서 다르다고 생각하시나요?
   '개발자'를 여러분이 속해 있거나, 잘 아는 다른 역할/직군으로 바꿔서 대답해주셔도 감사하겠습니다. (e.g., 테크 리드, CTO, CEO, 창업자, 디자이너, PM, ...)
   저는 탁월한 개발자의 공통점이 크게 다음 세 가지라고 생각합니다.
   - 문제 인식: 다른 사람들이 문제라고 인지하지도 못하는 것을 발견하고, 개선 가능성을 찾습니다.
   - 문제 정의: 문제 상황과 원인을 굉장히 다양한 층위와 관점에서 바라보고, 그동안의 경험을 패턴화하여 문제를 훨씬 더 쉬운(또는 더 효과적인, 더 근본적인) 문제로 환원시킵니다.
   - 문제 해결: 선택 가능한 여러 솔루션을 떠올릴 수 있고, 각 솔루션의 트레이드오프를 이해하여, 현재 조직의 상황에 맞게 솔루션을 선택합니다. 그 의사결정을 어떤 시점에 어떤 신호를 보고 바꿀지도 알고 있습니다. 그리고 작은 단위로, 빠르게 피드백을 받아볼 수 있는 방법으로 해결법을 적용합니다.

   패션감각 0점.
   공통점이라 하면 이것밖에 생각이 안나네요.
   농담반 진담반입니다.....ㅋㅋ

   기본적으로 저도 개발자는 문제를 해결하는 사람이라고 생각합니다.
   꼭 개발자라고 한정해서 얘기할 필요는 없을 것 같은데, 저는 탁월한 사람들의 특징으로 '연결'을 꼽겠습니다.
   지식과 경험, 아이디어 등등 많은 것들이 머리 속에 있는데 그것들을 잘 연결하는 사람인가가 중요하다고 생각하는데요.
   문제를 발견했을 때 해결책을 떠올리는 것이 1차적인 연결이지만,
   문제와 문제를 연결해서 복합적인 상황을 떠올리고, 다른 해결책을 찾는 것도 연결이고,
   해결책과 아이디어들 여러가지를 연결해서 더 간편하고 유연하고 뛰어난 해결책을 만들어 내는 것도 연결 이라고 생각합니다.
   꼭 개발뿐만 아니라, 개발과 비즈니스 적인 요소를 연결 지어 생각하거나 전혀 상관없는 것들을 연결하는 것이 요즘 시대에 아주 중요한 능력이 아닐까 생각합니다.

   페이스북에도 질문을 해봤는데 김창준님이 논문을 참고해보라는 댓글을 달아주셨습니다. 왜 이 생각을 못했나 싶네요.
   “What Makes a Great Software Engineer?” 라는 2015년 논문이 150회 인용됐길래 읽어보려고 합니다.
   https://ieeexplore.ieee.org/abstract/document/7194618

   spilist2 안녕하세요! 페북에서도 질문 올리신 거 봤던 것 같습니다 :) 저도 항상 가지고 있는 고민인데, 혹시 논문내용은 추천하실만한 내용일까요?

   논문이 아마 박사논문(dissertation)인듯한데 PDF 기준 300페이지나 되더라고요. https://digital.lib.washington.edu/researchworks/bitstream/…
   그래서 아직 2장까지밖에(introduction, related works) 못읽었지만, 여기까지만 해도 내용은 무척 마음에 듭니다. 문장도 어렵지 않게 쓰여있고요. 추천드립니다.

   공유해주신 논문 중에 6장이 가장 핵심인 것 같아서 읽었는데 ㅎㅎ 내용이 좋네요! 다시 한번 저도 돌아보게되고!! ㅎㅎ 감사합니다.

   질문을 던져놓고 구글 검색을 해보니 몇 가지 글이 보이는군요. 10x engineers 라는 키워드도 있네요.
   https://linkedin.com/pulse/great-engineer-vs-good-marissa-fayer-mba/
   - 좋은 개발자는 문제를 해결하는 특별한 도구들을 갖추고 있다. 좋은 개발자는 체계적이고 합리적이며, 모든 각도에서 바라보고, 모든 가능한 입출력을 분석한다.
   - 탁월한 개발자는 위에 언급한 모든 능력을 기반으로, 이를 즉시 사용 가능한 해결책에 적용한다. 이미 알려진 패턴들(과학과 수학의 원리들, 린 개발 원칙 등)을 창의적인 방법으로 새로운 실생활의 문제에 적용한다.
   - 가장 탁월한 개발자들은 귀를 기울일 줄 줄 안다. 문제에 귀를 기울이고, 이해관계자와 그들이 가치를 두는것에 귀를 기울이고, 시장에 귀를 기울이고, 피드백에 귀를 기울인다. 그리고 창의적인 방법을 떠올리는 내면의 소리에 귀를 기울인다.
   ==
   https://www.quora.com/How-do-you-identify-a-good-vs-great-engineer
   답변이 엄청 많은데.. vote 높은 거 몇 개만 보면
   1. (컨베이어 벨트에 선풍기 가져온 사람 예를 들면서) 게으른 사람은 언제나 일하지 않을 방법을 찾는다. 게으른 엔지니어가 최고의 엔지니어다.
   2. 좋은 엔지니어는 요청받은 문제를 푼다. 가끔씩 본인의 기술 역량을 향상시키기 위한 수업을 듣는다. 탁월한 엔지니어는 요청받은 것에서 한발 더 나아간다.
   - 사람들이 질문이 있으면 그를 찾는다.
   - 끊임없이 학습한다.
   - 아는 걸 지속적으로 공유한다.
   - 옳다고 생각하는 것을 고수하지만, 언제 포기해야 할지도 알고 있다.
   - 손을 더럽히는 걸 두려워하지 않는다.
   3. 나쁜 엔지니어는 시스템에 버그가 있을 때 왜 고치기 어려운지 변명한다. 좋은 엔지니어는 본인의 전문성에 기반하여 버그를 고친다. 탁월한 엔지니어는 주어진 문제 뒤에 숨겨진 의미를 찾는다.
   - 모든 다른 시스템에는 유사한 버그가 없는지(또는 이미 고쳐졌는지) 체크한다.
   - 유사한 버그가 또 일어나는 걸 피할 수 있는 장기적 해결책이나 설계를 제안한다. (각 해결책 사이의 cost/benefit analysis 첨부)
   - 본인의 전문 영역 밖으로도 눈을 돌려, 다른 그룹에서 유사한 문제를 겪진 않았는지 찾아본다. (또는 이미 컨택해 봤다)
"
"https://news.hada.io/topic?id=5469","AWS re:Invent 주요 출시 소식 요약 전체 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    AWS re:Invent 주요 출시 소식 요약 전체 보기

   분석
   * Amazon Kinesis Data Streams 온디맨드 – 용량 관리 없이 대규모로 데이터 스트리밍
   * AWS Lake Formation – 자동 압축 기능이 있는 셀 수준 보안 및 관리되는 테이블
   애플리케이션 통합
   * 신규 – Amazon EventBridge와 함께 Amazon S3 이벤트 알림 사용
   * API용 AWS Data Exchange 발표: 일관된 인증으로 타사 API 찾기, 구독 및 사용
   아키텍처
   * AWS Well-Architected 맞춤형 렌즈 발표: 내부 모범 사례로 Well-Architected 프레임워크 확장
   인공 지능/기계학습
   * Amazon SageMaker Canvas 발표 – 비즈니스 분석가를 위한 코드 없는 시각적 기계 학습 기능
   * Amazon CodeGuru Reviewer, Secrets Detector 기반 하드코딩된 암호 식별 및 보호
   AWS 마켓플레이스
   * 새로운 기능 – Containers Anywhere용 AWS Marketplace, 모든 환경 Kubernetes 클러스터 배포 가능
   컴퓨팅
   * AWS Graviton2 프로세서 기반의 새로운 스토리지 최적화 Amazon EC2 인스턴스(Im4gn 및 Is4gen)
   * 새로운 기능 – 2가지 AWS Outposts 서버 출시
   * 미리 보기 – 새로운 AWS Graviton3 프로세서로 구동되는 Amazon EC2 C7g 인스턴스
   * 신규 – Amazon EC2 M6a 인스턴스 , 3세대 AMD EPYC 프로세서 기반
   * 새로운 기능 – Amazon CloudWatch에 대한 실제 사용자 모니터링
   * 신규 – Amazon CloudWatch Evidently – 실험 및 기능 관리
   * 신규 – Amazon EC2 G5g 인스턴스, AWS Graviton2 프로세서 및 NVIDIA T4G Tensor Core GPU 기반
   * AWS Compute Optimizer 새로운 기능 – 절감 기회 및 성능 위험을 추정하기 위한 리소스 효율성 지표
   * AWS Compute Optimizer 새로운 기능 – 룩백 기간을 3개월로 연장하는 향상된 인프라 지표
   컨택센터
   * Amazon Connect – 기계 학습 기반 호출 요약 기능 출시
   컨테이너
   * Karpenter 소개 – 오픈 소스 고성능 Kubernetes 클러스터 자동 확장기
   * Amazon Elastic Container Registry용 풀스루 캐시 리포지토리 발표
   사물 인터넷
   * 신규 – AWS Systems Manager를 사용하여 AWS IoT Greengrass 에지 디바이스 안전하게 관리
   관리 도구
   * AWS Control Tower의 새로운 기능 – 데이터 상주 요구 사항을 충족하는 데 도움이 되는 리전 거부 및 가드레일
   * 신규 – Terraform용 AWS Control Tower 계정 팩토리
   * 새로운 기능 – Amazon CloudWatch에 대한 실제 사용자 모니터링
   * 신규 – Amazon CloudWatch Evidently – 실험 및 기능 관리
   마이그레이션 서비스
   * 미리 보기 – AWS Migration Hub Refactor Spaces 기반 애플리케이션 점진적 리팩토링
   로봇 공학
   * 미리 보기 – AWS IoT RoboRunner 로봇 플릿 관리 애플리케이션 구축
   보안
   * Amazon CodeGuru Reviewer, Secrets Detector 기반 하드코딩된 암호 식별 및 보호
   * 새로운 Amazon Inspector – 클라우드 워크로드에 대한 개선된 자동화된 취약점 관리
   스토리지
   * Amazon FSx for Lustre를 위한 향상된 Amazon S3 통합
   * 신규 – AWS Snowball Edge를 사용한 오프라인 테이프 마이그레이션
   * 미리 보기 – AWS Backup, Amazon S3에 대한 지원 추가
   * Amazon S3 Glacier는 데이터를 보관할 수 있는 최고의 장소입니다 – S3 Glacier Instant Retrieval 스토리지 클래스 소개
   * 새로운 기능 – Amazon S3에 저장된 데이터에 대한 액세스 관리 간소화
   * AWS Backup의 새로운 기능 – VMware 및 VMware Cloud on AWS 지원
   * 새로운 기능 – OpenZFS용 Amazon FSx
   * AWS Nitro SSD – I/O 집약적 애플리케이션을 위한 고성능 스토리지
   * 새로운 기능 – Amazon EBS 스냅샷용 휴지통
   * 새로운 기능 – Amazon EBS 스냅샷 아카이브
   양자 기술
   * Amazon Braket 하이브리드 작업 소개 – 하이브리드 양자-고전 워크로드를 설정, 모니터링 및 효율적으로 실행
"
"https://news.hada.io/topic?id=5503","CTO를 어떻게 뽑을까를 어떻게 뽑을까

   - 현재 일하고 있는 CTO들은 어떤 사람인가
   - 꼭 있어야 할까
   - 그래도 필요해
   - 하지만 어떻게 뽑을까
   ㅤ→ 판단 기준
   ㅤㅤ⇨ 현재의 기술 스택과 일치할 필요는 없다
   ㅤㅤ⇨ 개발을 가장 잘하는 사람일 필요는 없다
   ㅤㅤ⇨ 외부 활동과 발표 경력이 많을 필요는 없다
   ㅤ→ 유효한 전략
   ㅤㅤ⇨ 사업의 목표와 계획, 그리고 고민을 담은 자료를 준비하자
   ㅤㅤ⇨ 현재 받고 있을 대우보다 더 큰 미래를 보여주자
   ㅤㅤ⇨ 구인 서비스에만 맡기지 말고, 적극적으로 찾자
   - 그리고,
   ㅤ→ 스타트업에서의 평균 근속 년수는 어차피 짧다
   ㅤ→ 조직의 성장에 따라 특정 직무 종사자에게 요구되는 역할은 지속적으로 달라지기 마련
   ㅤ→ 이 과정에서 부족한 부분이 있다 하더라도 개인의 탓으로만 돌리지 말고, 함께 더 나아지는 방법을 찾아나가는 것이 건전하다고 생각
   ""가장 효과적인 구인 수단은 좋은 제품 그 자체라고 생각한다""

   요약에서 아래 내용이 빠진 것 같네요 ㅎㅎ
   어떤 기술 이력을 가졌는가 보다, 시장의 변화를 읽고 유연하게 대처할 수 있는지가 중요하다.
   오히려 개발을 잘 하는 사람들을 끌어모을 수 있는 소프트 스킬과 인품이 더 귀하다.
"
"https://news.hada.io/topic?id=5550","log4j 보안 취약점 동작원리 및 jenkins 서버 확인 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  log4j 보안 취약점 동작원리 및 jenkins 서버 확인 방법

   - 문제의 원인
   ㅤ→ log4가 로그를 출력할 때 로그에 사용자ID 등이 있을때 자동으로 내부에서 운영중인 LDAP 서버 등에 접속을 해서 변환하는 기능을 제공
   ㅤ→ 이 기능을 이용하면 해커의 서버로 접속해서 해커가 만든 악성 코드를 서버로 다운로드 받게 하고 이 코드를 이용해서 서버를 탈취 가능
   - Jenkins는 log4j를 사용하지 않아서 문제 없지만, 플러그인에서는 사용 가능하기 때문에 확인 필요
"
"https://news.hada.io/topic?id=5544","객체지향 시스템과 패러다임 그리고 철학","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         객체지향 시스템과 패러다임 그리고 철학

   - 클래스와 프로토타입의 가장 커다란 차이는 객체 생성 방식 [클래스 -> 인스턴스 vs 객체 -> 복사된 객체].
   - 가장 큰 공통점은 객체지향이며, 프로그램을 객체라는 단위로 나누고 상호작용하게 하는 것.
   - 객체지향의 핵심인 캡슐화를 잘하기 위한 가장 간단한 방법은 추상화를 잘 하는 것.
   - 추상화는 데이터 위주의 성질(고전적 OOP), 형태(타입), 상태(데이터 주도 설계)와 관계 중심인 시간(절차지향), 행동(함수형), 정의(논리형), 상황(도메인 주도 설계, AOP) 등으로 나누어 생각할 수 있음.
   - 잘 분류하고 설계하기 위해서 사고의 형식을 인식하게 만드는 다양한 범주의 이해가 있다면 좋음 [예) 칸트의 4강 12목].
   - 철학과 패러다임
   - 절차형: 시간은 대부분의 추상화에 영향을 미치며, Goto처럼 컨텍스트가 섞이게 만드는 문법은 좋지 않음.
   - 함수형: 행동의 형태로 나타내려 하기 때문에 타입(형태)와 깊은 연관관계.
   - 논리형: 사실과 규칙으로 논리를 구성하고, 질의를 함으로서 술어논리의 결과를 얻을 수 있음.
   - 전통적 OOP: 직관적. 하지만 완벽한 속성을 알아내기는 불가능함.
   - 데이터 주도 설계: 로직의 상태를 다루려는 함수형과 달리 컴퓨터 자체에서의 상태를 줄이려 시도. 캐시 히트를 높혀서 성능향상을 가져옴.
   - 도메인 주도 설계: 전통적 OOP와 달리 도메인과 맥락에 따라 다르게 설계를 함(그림이론-용도의미론과 비슷), 서브도메인의 의존성 주입을 하는 AOP를 사용하면 구현이 편해짐.
   - MVP
   - 프로토타입 제작: 중요한 기능이 포함되어야 하며 디자이너, 개발자, 재무등의 관점에 따라 달라질 수 있음. 많은 사람들이 중요하다고 생각하는 제품의 유사도에 따라 전형적인 요건.
   - MVP: 최소한의 완성도가 보장된 사용이 가능하고, 최종단계로 생각하는 제품과 유사하게 설계해야함.
   - 객체지향과 존재
   - 플라톤: 보편적 성질이 불변하며 실재하고, 개별적 존재들은 보편적 특성이 결여된 채로 존재한다 주장.
   - 아리스토텔레스: 개별적 개체만이 근본적 실체이며, 보편자는 상하/포함 관계에서 나타나는 표상이라 주장.
   - 클래스-인스턴스는 플라톤의 이데아론을, 프로토타입-복제된 객체는 아리스토텔레스 실체론과 유사.

   처음에 쓰려던 목표는
   - 전통적 OOP는 그림이론, 도메인 주도 설계는 용도의미론과 유사.
   - 클래스-인스턴스는 플라톤의 이데아론을, 프로토타입-복제된 객체는 아리스토텔레스 실체론과 유사.
   둘이었는데 생각보다 너무 길어졌네요.
   배경지식이 아예 없으면 살짝 어렵게 느껴질 수도 있습니다.

   자바스크립트는 왜 프로토타입을 선택했을까
   https://news.hada.io/topic?id=5532
   를 보다가 생각이 나서 적은 글 입니다.

   이 글과 같이 비교하면서 한번 읽어보겠습니다!

   감사합니다!!

   어? 스페이스 여러개를 넣는게 안되나보네요 ㅠㅠ

   아 의도적으로 공간을 차지하는 경우가 좀 있어서..
   빈 줄 및 빈 공간 여러개는 줄이도록 해두었습니다 ㅠ

   이해했습니다.
   다음부터 올릴 때 고려해야겠네요.
"
"https://news.hada.io/topic?id=5495","Apache Guacamole - 클라이언트 필요 없는 리모트 데스크탑 게이트웨이 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Apache Guacamole - 클라이언트 필요 없는 리모트 데스크탑 게이트웨이

   - 전용 플러그인/클라이언트 없이 HTML5 웹브라우저 만으로 원격 데스크탑 접속 가능
   ㅤ→ Guacamole 프로토콜을 이용하며, 서버에 설치된 guacd가 RDP,VNC 등 다른 프로토콜에 연결
   - 잘 정리된 API 제공 (C,Java,JS 클라이언트)
   - Auth 지원 : DB기반, LDAP, OpenID Connect, SAML, RADUIS
   - 2FA 지원 : Duo 및 TOTP

   저희 회사에서 쓰고 있는데
   장점으로는 세션공유를 하기 때문에,
   RDP가 VNC처럼 screen sharing 이 가능해요. 터미널도 그렇구요.
   그리고 원격접속했을때 작업기록들을 영상이나 텍스트(터미널)로 저장가능해요

   RDP는 모르겠으나 VNC를 이용했을때 실사용성은 0에 수렴합니다..
   ssh도 지원을 해서 간단한 작업용 게이트웨이로 쓰기는 좋아보였네요.

   nas에 설치해서 가끔씩 잘 쓰고 있습니다.
   가장 잘 썼을 때가 군대에 있었을 때...
"
"https://news.hada.io/topic?id=5559","리눅스 X Server에 맥북과 같은 터치패드 제스쳐 기능 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  리눅스 X Server에 맥북과 같은 터치패드 제스쳐 기능 추가

   ""Linux Touchpad Like a MacBook Pro"" (LTLMBP) 프로젝트의 일환
   - 저수준 입력 드라이버인 libinput 기반에서 처리
   - X Server, Wayland, Mutter 및 다른 Wayland 디스플레이 서버등에서 동작
   - Gtk/Qt Widget 툴킷에서 동작. ""다른 위젯 툴킷에선 아직 동작 안함""
   현재까지 마일스톤
   - X Server 21.1에 제스쳐 구현 추가
   - QT Widget 6.2에 Wayland 터치패스 제스쳐 구현 추가
   - Gtk Widget 4.5에 X11 터치패드 제스쳐 구현 추가
   - Qt X11 구현 및, XWayland용 구현체는 내년초에 공개 예정

   드디어!!! 공식으로 들어가는 건가요??
   와!!!!!!

   Elementary os가 멀티터치는 잘 지원하더라고요.
   https://blog.elementary.io/multitouch-gestures-in-elementary-os-6/
   Elementary와 Pop_OS!가 리눅스 GUI는 쌍끌이하는 것 같습니다.
"
"https://news.hada.io/topic?id=5492","Engo HUD AR 글래스 - 싸이클/러닝용 스마트 안경 사용기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Engo HUD AR 글래스 - 싸이클/러닝용 스마트 안경 사용기

   - 42그램, 12시간 사용가능, $427
   - 심박수, 경과시간, 속도, 거리, 고도, 파워 등 표시
   - 정보가 우측 안경의 상단 좌측 구석에 프로젝션 하여 표시됨 (약 3미터 쯤 앞에 있는 것처럼 보임 )
   ㅤ→ 전방을 볼때는 거슬리지 않고 읽을수 없지만, 살짝 왼쪽위를 보면 그때 보이는 방식
   ㅤ→ 설정 단계에서 약간의 높이 조절 가능
   - 스마트폰 또는 Garmin 기기와 페어링 가능
   - 한번에 총 6개의 필드 표시 가능하며, 각각 운동에 맞는 5개의 스크린 생성 지원
   ㅤ→ 왼쪽 안경 앞에서 손 흔들어 스크린 변경 가능. 하지만 잘 안되기도
   - 비포장 도로에서도 안경이 흔들리지 않고, 화면 잘 확인하면서 앞을 볼 수 있었음
   - 변경 되었으면 하는 부분
   ㅤ→ 센서 연결 여부가 보이지 않아서 불편. 지금은 센서 이름이 ""Disconnected""로 변경됨
   ㅤ→ 멈추거나 특정 속도 이하로 내려가면 Ride가 멈추도록 해야함 Garmin이 하는 것처럼
   ㅤ→ Strava Export 지원 필요. 현재는 GPX 수동 Export만 가능
   - 다음 버전을 기다려야할 이유
   ㅤ→ 현재의 제스처 방식보다 물리 버튼이 있었으면.. (수영용 안경인 Form 은 이게 아주 잘 되어있음)
   ㅤ→ 방수가 되지 않는 듯 (제조사에 확인 중)
   ㅤ→ 디스플레이가 더 컸으면 좋겠음
   - 글자들이 투명하니 도로 주행을 방해하지 않으면서 데이터를 계속 볼 수 있도록 좀 더 공격적으로 표시해도 될 듯
   - 쓰기에 편하고 재미난 글래스지만, 가성비가 좋다고 생각되지는 않음
   ㅤ→ 특히나 Garmin 사용자가 아니고 스마트폰 GPS만 사용하는 경우라면

   글에도 있지만, 원래 처음에 HN에 아래 링크가 올라왔을 때는 그냥 그런가 보다 했는데,
   실 사용기가 올라오니 좀 볼만 하네요. 자전거 타시는 분들중 Garmin 장비 쓰는 분들은 사실만 할듯
   - https://engoeyewear.com/products/engo-eyewear
   - https://road.cc/content/tech-news/…
"
"https://news.hada.io/topic?id=5519","아마존, Alexa.com을 2022/5/1에 운영 중지 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   아마존, Alexa.com을 2022/5/1에 운영 중지 예정

   - 약 3천만개 웹사이트의 웹 트래픽 데이터 및 글로벌 사이트 순위를 제공하는 사이트
   - 25년 간의 운영을 마치고 서비스 중단
   - 신규 구독은 중지되고 기존 사용자만 내년 5월까지 사용 가능
   - 데이터 Export 지원

   - 1996년에 설립되어 1999년에 아마존에 $250M 금액에 인수됨
   - Alexa 라는 이름은 이집트의 프톨레마이오스 왕조 시절 Alexandria 도서관에 대한 오마쥬
   - Alexa 의 공동 창립자인 Brewster Kahle 은 Alexa 인수금액을 가지고 공익적인 일을 하기 위해 Internet Archive 를 설립했음
   Alexa 데이터는 그래도 종종 쓸만했는데.. 이제 대체제인 https://similarweb.com/ 이 더 잘 되겠군요.
"
"https://news.hada.io/topic?id=5479","React Native Test App - 모든 플랫폼용 테스트앱을 패키지로 제공","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             React Native Test App - 모든 플랫폼용 테스트앱을 패키지로 제공

   - Microsoft가 사내에서 사용하는 도구를 오픈소스로 공개한 것
   - React Native 용 라이브러리/패키지를 만드는 사람들을 위한 도구
   - React Native 버전이 바뀌거나, 새 버전의 XCode/iOS/Gralde 등이 나왔을 때 내 라이브러리를 테스트 하기 위한 업그레이드 및 프로젝트 설정 등 귀찮은 작업들을 대신 해주는 도구
   - iOS/macOS/Android/Windows 등 각 플랫폼별 지원
"
"https://news.hada.io/topic?id=5470","lazygit - 심플한 터미널 Git UI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        lazygit - 심플한 터미널 Git UI

   ""강력한 Git을 아주 사용하기 쉽게""
   - 윈/맥/리눅스 및 대부분의 환경 지원
   - 쉬운 파일 추가 및 최근 브랜치 체크아웃
   - 보기 편한 머지 충돌 해결 화면
   - log/diff 스크롤해서 보기
   - 빠른 푸시/풀
   - 모든 기능을 키보드 단축키로
   ㅤ→ z : undo , ctrl+z : redo (reflog 기반 작업을 쉽게 처리)

   오 이 Tool 너무 잘쓰고 있어요

   비슷한 걸로 rust로 구현한 gitui가 있습니다.
   https://github.com/extrawurst/gitui

   gitui를 잘 사용하고 있네요.
"
"https://news.hada.io/topic?id=5562","Ask GN: 재택환경에서 어떤 책상을 사용하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask GN: 재택환경에서 어떤 책상을 사용하시나요?

   이번에 이사를 가면서 제대로 된 책상을 하나 구매하려고 합니다.
   이전 회사에서 퍼시스 모션데스크를 잘 썼어서 모션데스크를 구매할까 하는데
   문득 긱뉴스 개발자분들은 재택환경에서 어떤 책상을 사용하는지 궁금해서요!
   추천 부탁드립니다 ㅎㅎㅎ

   책상은 이케아 이도센 모션데스크 쓰고요 (LINAK 모터 입니다)
   루나랩 모니터암으로 듀얼모니터 구성하고 맥북프로 쓰는데 CalDigit TS3+ 썬더볼트독이랑 연결합니다.
   의자는 회사 특판 허먼밀러입니다..
   요즘 헤드파이까지 꽂혀서 헤드폰, DAC, AMP까지 샀네요ㅠ
   재택을 2년쯤 하니 계속 지르기만 하는데 아직 M1 Pro/Max칩 들어간 맥미니 나오길 기다리고 있습니다ㅎ

   저는 (회사에서 사용했던) 동일 모델 퍼시스 모션데스크를 구매해서 사용하고 있습니다. 다른 건 모르겠지만, PC홀더 옵션은 비추입니다. 미들 타워 케이스임에도 많이 흔들거려서 지금은 빼고 사용하고 있습니다 ㅠㅠ 지금 생각하면 PC홀더 대신 사이드 스크린 옵션을 구매했으면 하는 아쉬움이 있습니다. 의외로 저렴하지 않아서요.
   모니터암을 사용하려면, 책상과 벽 사이 공간을 조금 넉넉하게 여유를 두세요. 퍼시스 모션데스크 설치 기사님들이 와서 진행할 때, 잘 가이드해서 하는 것이 좋습니다. 나중에 직접 하는 것이 좀 부담스럽습니다.
   (가능하다면) 꼭 너비 1800 모델 추천드립니다. 동일 너비의 일반 책상보다 조금 작은 느낌이 들 수 있어서요. 크기와 무관하게 아주 만족하면서 사용하고 있습니다.
   약 1년 정도 사용해 보니 모션데스크 없는 재택은 이제 상상하기 힘드네요. 허먼 밀러 의자와 같이 사용하고 있는데, 책상이 더 중요하다고 느끼고 있습니다. 제한된 예산이라면 모션 데스크 구매를 우선적으로 사라고 강추드립니다~

   아 그런가요?! pc홀더 무조건 구입하는 거라고 생각하고 있었는데, 그러면 pc를 홀더 말고 어디에 두시나요? 책상 위에 두기도 그렇고 그렇다고 바닥에 두면 데스크 올릴 때 선이 문제라서요!
   1600 생각중이었는데 1800 추천을 많이들 하시네요 고려해봐야겠어요ㅎㅎ
   그리고 허먼밀러도 같이 사려고 생각중입니다 감사해요:)

   일반 데스크톱은 책상 밑에 두고, 모니터/USB 케이블을 꽤 긴 것 사용해서 연결하고 있습니다. 한가지 팁을 드리면 방 바닥에 다이소 모니터 받침대를 두고, 그 위에 PC를 올리고 사용하니까 조금 깔끔해지는 느낌을 받았습니다.
   아니면 맥 미니 또는 NUC 같은 미니PC를 사용하고, 책상위에 올려서 사용하는 것도 방법입니다. 전 요즘 VSCode로 원격개발서버에 붙어서 작업하는 경우가 대부분이라서요.

   루나랩 책상 + 의자 쓰는데 가격대비 나쁘지 않습니다만 서서 키보드 칠 때 책상이 흔들리는 느낌이 있어서 좀 불만족스럽네요.

   루나랩 모니터암 포지션이랑 풀커버 마우스패드 때문에 강력 후보중 하나인데...ㅠㅠ 그런 단점이..

   루나 데스크탑 써보신분 있나요

   이케아 18만원짜리 베칸트 쓰고 있는데 4년째 그럭저럭 잘 쓰고 있습니다.
   가로 180cm 짜리라면 더 좋았을텐데 160cm 인것이 조금 아쉽...
   https://www.ikea.com/kr/ko/p/bekant-desk-white-s09222563/

   아... 저도 방 사이즈상 160 맥시멈일 것 같은데 아쉽네요 ㅠㅠ

   저는 uplift 전동데스크 씁니다

   요건 검색해봐도 잘 안나오는데, 알리바바에서 주문하셨나요?

   모션데스크 프레임만 구입 + 원래 쓰던 책상 상판 결합.. 해서 사용중입니다.
   근무중 1/3 이상은 서서 일하고, 서서 일할땐 루나랩 밸런스보드 사용합니다. (맨바닥은 발바닥이 아프더라구요)

   오 밸런스보드 좋네요. 저도 알아봐야겠어요.

   회사에선 실내화나 운동화 신고 일하니 괜찮은데....
   집에선 맨발로 서서 일하니 발바닥 아파서 못하겠더라구요.
   오래 서있어도 힘든 빡센 밸런스 보드 아니고 쿠션감도 좋아서 장시간 서서 일할때 최고입니다.
   (나름 코어 근육도 눈꼽만큼은... 단련되겠죠 ㅋㅋㅋ)

   오! 좋은 제품 추천 감사합니다
   이것도 구매해야겠어요

   저는 집에서는 Gaze Desk Duo 를 사용합니다.
   https://kickstarter.com/projects/gazelab/…
   회사에서는 저도 퍼시스 모션데스크 사용했었는데요.
   다음번에는 꼭 모션데스크가 아니라면 Ikea IDÅSEN 같이 초기 설치시에 높이 조절이 되는 것을 하나 하고,
   https://www.ikea.com/kr/ko/p/idasen-desk-black-dark-grey-s39281037/
   추가로 옆에다가 서서 일하거나 바 의자 두고 앉을수 있는 스탠딩테이블을 별도로 두는게 어떨까 생각중입니다.
   https://www.desker.co.kr/product/DSAD412H/WWWW
   최근에 요렇게 Ikea + 데스커로 꾸민 사무실을 가봤는데 꽤 마음에 들었어요.
   집에서는 높이 조절을 자주 하지는 않더라구요.

   그런 방법도 있겠네요! 다양한 세팅 생각해봐야겠어요:)
   그 와중에 Gaze Desk Duo 이거 맘에 드네요ㅎㅎ

   저는 에렉투스플러스라는곳의 모션데스크를 사용합니다.
   리낙모터쓰면서 원하는 크기를 찾다보니 선택폭이 적더라고요 ^^;

   찾아보니 모터 장점 때문에 에렉투스에서 프레임만 사고 상판 결합을 하는 분도 있네요! 좋은 정보 감사합니다:)
"
"https://news.hada.io/topic?id=5493","pg_graphql - PostgreSQL용 GraphQL 확장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  pg_graphql - PostgreSQL용 GraphQL 확장

   - PostgreSQL의 기존 스키마를 조사하여 Resolver로 GraphQL 스키마를 구성(Reflection)
   ㅤ→ 초당 2k req 처리
   ㅤ→ 자동 스키마 업데이트
   ㅤ→ Relay 호환 Pagination
   ㅤ→ 추가 서버 없이 DB안에서 서버리스로 구동
   - PostgreSQL에 접속하는 어떤 언어에서든 GraphQL로 쿼리 가능
   ㅤ→ PostgREST 에서도 바로 호출 가능
   - Hasura / Graphile 대비 경량의 솔루션

   Supabase 팀이 만든 오픈소스내네요
   - Supabase 공개 베타 시작 - 오픈소스 Firebase 대체제 https://news.hada.io/topic?id=3347
   pg_graphql 소개글 ""A GraphQL extension for PostgreSQL""
   - https://supabase.com/blog/2021/12/03/pg-graphql
   - PostgRest - PostgreSQL DB를 RESTful API로 직접 접근하게 만들어주는 웹서버 https://news.hada.io/topic?id=859
"
"https://news.hada.io/topic?id=5488","스마트폰 하나로 번호 2개 `e심` 연내 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       스마트폰 하나로 번호 2개 `e심` 연내 발표

   이달 중에 국내에서도 eSIM 도입 방안이 발표될 예정

   저는 이미 티플러스모바일(https://www.tplusmobile.com/view/main.do) 통해서 e-sim을 쓰고 있는데 어떤게 더 달라지는지 궁금하네요 ㅎㅎ

   모든 통신사가 e-SIM을 지원하면 편하게 왔다 갔다 할 수 있지 않을까요 ? ㅎㅎ

   현재 USIM 판매로 수익을 내는데다, 번호이동이 쉬워져서 과연 제대로 도입될지 의문이네요.
   아이폰 XS,11,12는 물리심+eSIM 듀얼심 지원하고
   아이폰 13부터는 듀얼 e-SIM 도 지원합니다.

   이제 e-SIM 등록비를 받아먹겠죠 ㅎㅎ
"
"https://news.hada.io/topic?id=5541","Turborepo - 고성능 빌드 시스템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Turborepo - 고성능 빌드 시스템

   - Vercel이 인수
   - JavaScript/TypeScript Monorepo를 위한 빠른 빌드 시스템
   ㅤ→ 프론트엔드 에는 모노레포가 생산성에 좋지만, 툴링이 복잡했기에 그걸 개선한 도구
   - 인크리멘털 빌드 지원
   - 타임스탬프가 아닌 콘텐츠를 인식하는 해슁
   - 리모트 캐슁으로 동료 및 CI/CD 시스템이 더 빠르게 빌드 가능
   - 모든 코어를 사용하는 병렬 실행
   - 런타임코드 / 소스맵을 건드리지 않는 Zero Runtime Overhead
   - 모노레포에서 특정 타겟용 서브셋만 생성해서 PaaS 배포를 빠르게
   - Task Pipelines : 태스크 간에 연결을 정의해서 빌드를 언제 어떻게 실행할지 최적화

   Vercel 의 Turborepo 인수 소식 : https://vercel.com/blog/vercel-acquires-turborepo
"
"https://news.hada.io/topic?id=5504","2022년에 뭐 하세요? 클라우드에서 개발 하실래요? (Cloud-based development)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        2022년에 뭐 하세요? 클라우드에서 개발 하실래요? (Cloud-based development)

   크롱북에서 개발하는 개발자 이야기
   - 세팅을 자동화 해줌
   - 각 프로젝트마다 별도의 컨테이너가 띄어져 런타임 버전 관리 걱정이 없음
   - 협업시, 온보딩을 위한 세팅 가이드가 필요없어짐, 사전에 설정을 정의해두면 알아서 세팅이 완료됨
"
"https://news.hada.io/topic?id=5553","유니티와 함께하는 메타버스 입문서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           유니티와 함께하는 메타버스 입문서

   * 게임엔진 Unity가 메타버스의 개념부터 시장전망까지 다양한 예제로 이해하기 쉽게 설명한 e북(39p)
   1. 메타버스의 개요
   - 메타버스란?
   - 글로벌 IT 기업 리더들이 바라보는 메타버스
   - 디지털과 현실 세계, 융합의 공간
   - 성공적인 메타버스 사례
   - 다양한 분야에서의 메타버스
   - 인터넷의 새로운 패러다임, 메타버스
   - 온라인 게임과 메타버스
   2. 메타버스의 제작 기반 : 게임, VR 기기, AI
   - 게임 디자인
   - VR 기기
   - 인공지능(AI)
   3. 유니티와 메타버스
   - 유니티의 장점
   - Unity로 열어가는 메타버스 세계
   - Unity의 메타버스 적용 사례
   - Unity 시작하기
"
"https://news.hada.io/topic?id=5526","Ask GN: 일기를 쓰는데 가장 괜찮은 앱, 프로그램, 웹 서비스는 어떤걸까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Ask GN: 일기를 쓰는데 가장 괜찮은 앱, 프로그램, 웹 서비스는 어떤걸까요?

   혹시 일기를 쓰시는 분 계시면 어떤 앱, 프로그램, 웹 서비스 쓰시는지 궁금합니다.
   모바일 앱, 윈/맥/리눅스 프로그램, 웹 기반 모두 지원하면 좋겠지만 하나만 지원해도 괜찮습니다.
   추천 부탁드리겠습니다

   전 텀블러로 써요.
   마이크로블로그지만 나쁘지 않습니다

   iOS에서 DayOne을 5년째 쓰고있습니다.

   일기 포맷 자체를 하루에 한 줄 만 쓰는 편이라 (ex: 12/10 금, 재택, 가족모임@xyz..)
   그냥 가볍다고 느껴지는 구글 킵을 사용 중 입니다.

   간단하게 Simple note 요. 어지간한 플랫폼으로 가능 + 웹으로도 가능.
   근데 기능이 말그대로 너무 심플해요. 메모장 수준. ㅎㅎ
   https://simplenote.com/

   웹기반이 편하긴할 것 같습니다. 추천 감사합니다

   종이 노트 + 깃 + 마크다운 조합이요

   오 그런 방법도 있군요 감사합니다

   저는 Obsidian + Daily Notes 플러그인으로 매일 기록해둘 것을 남기고 있습니다.
   일기겸 그날 그날 한 일들, 산 물건들, 나중에 볼 링크들도 기록하고, 다른 노트들과 링크도 합니다.
   https://help.obsidian.md/Plugins/Daily+notes
   - 첫 화면으로 세팅 후 매일 들어가면 당일 노트 자동 생성
   - 지나간 경우 달력 화면에서 날짜 클릭하면 해당 날짜의 노트가 자동으로 생성
   모바일/데스크탑 상관없이 다 공유되고요
   iCloud 폴더를 활용해서 윈도우/맥/아이폰 동기화 해서 사용합니다.

   저는 Obisidan + Calendar 조합으로 쓰고 있습니다. Sync 월정액 내면서 윈도우 + Mac 기기 두 대 + iOS 모두 연동 시키고 있어용. 그런데 Daily Notes랑 기능이 똑같군요(... ) 대신 Sync는 좀 더 편합니당. 아무런 신경을 안 써도 알아서 추적해주고. Version 히스토리도 무제한으로 제공해줘용.

   감사합니다. 한번 살펴봐야겠네요 😄😄
"
"https://news.hada.io/topic?id=5516","Show GN: 게임을 발견하고, 플레이를 공유하는 제이크 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Show GN: 게임을 발견하고, 플레이를 공유하는 제이크

   (밑에 들여쓰기가 안되어 있어서 다시 올립니다 ㅠㅠ)
   안녕하세요. 이렇게 긱뉴스에 쇼를 올리게 됩니다.
   매일 아침마다 새로운 뉴스 보고 서비스에 적용하고 싶은 좋은 오픈소스나 서비스를 만나면 적용해보다가 이렇게 서비스를 베타로 런칭하고 올리게 되어 느낌이 새롭네요.
   저는 어릴적부터 게임을 좋아했는데요. 항상 이 게임들을 이야기 하고, 또 다른 사람들의 게임에 대한 이야기도 듣고 싶었는데 마땅한 서비스가 없었습니다. 일부 커뮤니티가 있지만, 대부분 게임과 다른 이야기를 하고 내 플레이를 올리게 되면 돌아오는 건 안좋은 댓글 뿐이었어요.
   또, 저는 정말 많은 게임을 하는걸 좋아하는데 그때 그 게임에 대한 감정이나 내 짧은 이야기를 남기고 싶었습니다.
   그래서 제이크라는 서비스를 만들게 되었습니다.
   제이크 라는 서비스 명은 어릴적 나랑 같이 게임 이야기를 나누던 친구를 대상화했습니다.
   7년간 앱개발만 하다가.. 처음으로 웹 개발을 배우면서 만든 베타 서비스라서 일부 기능이 동작하지 않고 버그가 많지만.. 써보시고 다양한 의견을 받았으면 좋겠습니다.
   서비스는 긱뉴스에서 6달러로 서비스 운영하기를 참고하여 기술 스택을 정했고 현재 전체 비용으로 약 30달러 정도 나가고 있습니다.
   - 프론트엔드
   - Vercel 배포 (취미 계정으로 무료 플랜 사용)
   - Next.js (React)
   - 백엔드
   - Serverless (Node.js Koa Framework)
   - AWS Lambda 배포 (월 100만 리퀘스트 무료)
   - GraphQL
   - 검색엔진
   - Elastic Cloud App Search (클라우드 10달러)
   - DB
   - DynamoDB
   - Elastic (8달러)
   - RDS (MariaDB) (8달러)
   - 통합 모니터링
   - AWS Lightsail에서 Grafana (3.5달러)
   - CDN
   - S3 (~1달러)
   - Cloudflare CDN (무료)
   - DNS
   - Cloudflare DNS (무료)

   멋진 분이시네요
   저도 게임 좋아하는데 써보겠습니다!

   감사합니다 ㅎㅎㅎ

   오. 그렇지 않아도 제가 만들어볼까 하던 서비스인데.. 먼저 진행하셨군요 ^^ 응원합니다.

   앗 ㅎㅎ 응원 감사합니다 ㅎㅎ

   퀄리티가 좋네요! 익숙한 느낌이라 검색하고 둘러보는데 어색하지 않았어요.
   반응보고 이야기하러 곳이니,
   메인에서 뜨거운 반응이 있는지 정도를 알 수 있으면, 저라면 안해본 게임이라도 눌러보고 돌아다녀 볼 거 같아요.

   감사합니다 ㅎㅎ
   조금 사용자가 늘고 데이터가 쌓이면 메인페이지에 쌓인 데이터를 기준으로 다양한 큐레이션을 준비중에 있습니다.
   중간중간에 생각나시면 둘러봐주세요.

   메인 화면 멋지네요!
   글을 쓸때 게임을 선택해 달라는걸 눌러도 아무런 게임이 안뜨던데, 제이크 내에서 각 게임별 멤버에 가입해야 글을 쓸수 있는건가보네요.
   글을 쓸때 아직 멤버가입하지 않은 게임도 검색해서 가입할 수 있으면 좋을것 같아요.
   또는 처음 가입했을때 사이트 사용법을 간단하게 알려주는 온보딩 팝업같은게 있으면 좋을것 같아요.

   감사합니다 ㅎㅎ 메인화면에 신경을 많이 쓴 보람이 있네요.
   멤버 가입이 없을때를 생각하지 못했었네요.. 의견 전부 감사합니다.

   와 첫화면이 인상적이네요. (저 요즘 포르자 호라이즌 5 하고 있어서.. )
   근데 첫 페이지에 서비스에 대한 소개 글이 없는 게 아쉬운 것 같아요.
   ""게임에 대한 소소한 이야기를 나누어요"" 정도는 있어야 하지 않을까 싶은데.. ^^;
   첫 화면에 게임 종류 상관없이 최근에 올라온 반응들만 텍스트로 먼저 보이는 부분이 있으면 사이트가 더 생동감 있게 느껴 질 것 같아요.
   하나의 그룹안에서 클릭했을 때, 그룹의 다른 게임으로 이동하는 옵션이 있으면 주루룩 보기가 좋을 것 같아요. (2020 GOTY 에서 둠 이터널 선택시 앞의 라오어나 뒤의 동물의 숲으로 이동하기)

   의견 감사합니다.
   사이트 기획도 처음이라 그런지 미처 생각하지 못한 부분이 있네요 ㅎㅎ
   주신 의견 사이트 방향에 맞춰서 고민해서 적용해보도록 하겠습니다.
   감사합니다~!

   기술 스택 정하는데 큰 도움을 준 토픽
   - 스타트업을 년6$로 운영하기 https://news.hada.io/topic?id=1621
"
"https://news.hada.io/topic?id=5477","2021 Web Almanac - 웹의 현재 보고서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2021 Web Almanac - 웹의 현재 보고서

   매년 발간하는 방대한 보고서
   - 8.2M개의 웹사이트, 39.5TB의 데이터를 처리해서 만든 지표
   올해 새로 들어간 챕터는 Structured Data 와 WebAssembly
   4개 파트, 24개의 챕터
   #1 Page Content : CSS, JavaScript, Markup, Structured Data, Media, WebAssembly, Third Parties
   #2 User Experience : SEO, Accessibility, Performance, Privacy, Security, Mobile Web, Capabilities, PWA
   #3 Content Publishing : CMS, Ecommerce, Jamstack
   #4 Content Distribution : Page Weight, Resource Hints, CDN, Compression, Caching, HTTP
   Structured Data
   - Schema.org , DCMI(Dublin Core Metadata Initiative), OpenGraph, Microformat, RDFa, Microdata, JSON-LD
   - RDFa (60%), Open Graph (57%) 로 폭넓게 사용중
   WebAssembly
   - 데스크탑(3854, 0.06%), 모바일 (3173, 0.04%) 정도의 웹사이트에서 WASM 사용
   - 가장 많이 쓰이는 WASM 라이브러리 : Amazon IVS(비디오) > Hyphenopoly > Blazor > ArcGIS > Draco

   2019 Web Almanac - 웹의 현재 보고서 https://news.hada.io/topic?id=921
   2020 Web Almanac - 웹의 현재 보고서 https://news.hada.io/topic?id=3391
"
"https://news.hada.io/topic?id=5524","애플, 외부 결제 허용에 관한 지연 요청 승인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       애플, 외부 결제 허용에 관한 지연 요청 승인

   - 에픽 vs 애플 소송에서 외부 결제 옵션을 12/9 까지 허용하라고 명령한 것에 대해서,
   '엔지니어링, 경제, 비즈니스 및 다른 문제들 파악을 위해 몇달이 걸릴 것' 이라며 지연을 요청한 항소가 승인 됨
   - 이 항소가 해결될 때까지 지연되며 그때까지 앱스토어는 그대로 운영 가능
   - 이 지연은 외부 결제 옵션을 허용해야 한다는 기존 판결에는 영향 없음

   참 오락 가락 하네요. 애플은 이 몇달 안에 어떤 안을 들고 나올까요..?
   - 에픽 vs 애플, 판사가 외부 결제 옵션을 12/9까지 허용하라고 명령 https://news.hada.io/topic?id=5361
   - Epic vs. Apple, 애플은 다른 인앱결제 방법을 허용해야 한다고 판결 https://news.hada.io/topic?id=4998
"
"https://news.hada.io/topic?id=5536","Cool Cats NFT를 구축하면서 배운 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Cool Cats NFT를 구축하면서 배운 것

   - Coinmonks 블로그의 ‘What I learned from building Cool Cats NFT’글 번역
   - 솔리디티 언어로 NFT를 구축한 경험을 편안하게 풀어낸 글
   - 테스트, 테스트, 또 테스트 - 문키즈
   - 메인넷(Mainnet)론칭하기
   - 솔리디티 컨트랙트의 최적화
   ㅤ→ 저렴한 민팅을 위한 gwei절감
   ㅤ→ 지역 변수
   ㅤ→ 조건문
   ㅤ→ if 블록 정렬
   ㅤ→ 솔리디티 문법 - 두려움의 존재
   - 쿨캣 쿠축하기
   ㅤ→ 쿨캣 솔리디티 컨트랙트
   ㅤ→ 메타데이터 서버
   ㅤ→ 캐릭터 빌더
   - 향후 계획
"
"https://news.hada.io/topic?id=5542","JetBrains Compose Multiplatform 1.0.0 정식 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              JetBrains Compose Multiplatform 1.0.0 정식 릴리즈

   - Kotlin을 위한 Reactive 데스크탑 & 웹 UI 프레임워크
   ㅤ→ Android, Desktop, Web 간에 UI 코드 공유
   ㅤ→ 윈/맥/리눅스 용 네이티브 앱 빌드
   - Google Jetpack Compose 기반
   - Compose for Desktop
   ㅤ→ 메뉴, 키보드 단축키, 창 조작, 알림 관리 등을 위한 데스크톱 확장 프로그램
   ㅤ→ Skia 이용 하드웨어 가속 렌더링.
   ㅤ→ 다양한 언어를 위한 강력한 텍스트 렌더링 및 레이아웃
   ㅤ→ 탁월한 AWT 및 Swing 상호 운용성
   ㅤ→ Kotlin Multiplatform을 통해 Jetpack Compose Android 애플리케이션과 코드 공유
   ㅤ→ UI 요소 수준의 Android Compose 호환성
   ㅤ→ 독립 실행형 애플리케이션 번들 제작 지원
   - Compose for Web
   ㅤ→ Android/데스크톱에서 사용되는 것과 동일한 반응 엔진으로 공통 코드베이스를 사용 가능
   ㅤ→ Kotlin/JS용 풍부한 UI 생성을 위한 프레임워크.
   ㅤ→ 일반적인 모든 프런트엔드 개발 시나리오를 포괄하는 편리한 Kotlin DOM DSL
   ㅤ→ 포괄적인 CSS-in-Kotlin/JS API

   - JetBrains Compose - 코틀린용 데스크탑 UI 툴킷 https://news.hada.io/topic?id=3154
"
"https://news.hada.io/topic?id=5574","Create-React-App 5.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Create-React-App 5.0 릴리즈

   - WebPack 5 + JEst 27 + ESLint 8 + PostCSS 8
   - Tailwind 지원
   - Fast Refresh 개선
   - yarn/npm 패키지 매니저 감지를 환경 변수로 하도록 변경
   - Node 10/12 지원 안함
"
"https://news.hada.io/topic?id=5496","아마존 CTO의 2022년 이후 기술 예측","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        아마존 CTO의 2022년 이후 기술 예측

   워너 보겔스 박사의 글
   #1 AI 지원 소프트웨어 개발이 본격화
   - ML을 통해 개발자의 효율성을 높이고, 만드는 것에만 집중하게 함
   - Amazon DevOps Guru/CodeGuru, GitHub Copilot, GPT-3
   #2 클라우드가 네트워크 엣지에서 고도로 전문화 될 것
   - 클라우드가 끝단까지 확장하여 창고, 식당, 소매점, 농장 등을 변화 시킬 것
   - Amazon Scout/Monitron, AWS Panorama
   - 기존 중앙 집중식 인프라를 넘어서 예상치 못한 환경들로 확장해 나갈 것
   - 자동차, 주전자, TV 및 도로를 달리는 트럭과 상품을 운송하는 선박 비행기까지 모든 곳에 포함 될 것
   #3 시니어 케어 분야에서 스마트 공간(Smart Space) 기술이 뜰 것
   - 집과 건물들이 사람들의 요구사항을 도와주기 위해 더 좋아지면서, 노인들에게 가장 큰 영향을 주게 될 것
   - 일본의 Z-Works는 노인 케어를 개선하고 기술을 통해 스케일하는 것에 집중
   ㅤ→ 노인 가정의 침대와 방 전체에 센서를 배치하고 지속적인 데이터 분석을 위해 모든 센서를 클라우드에 연결
   ㅤ→ 단순히 생체 신호를 모니터링 하는 것 뿐만 아니라, 기계학습을 통해서 화장실에 갔다가 돌아오지 않는지 등을 알수 있게 되고, 이를 통해 다른 사람에게 확인하라고 통지 가능
   ㅤ→ Ambient 컴퓨팅 같은 컨셉에 도달
   - 향후 몇년간 다양한 형태로 스마트 공간들을 보게 될것이지만, 노인 케어 쪽에 가장 큰 영향을 주게 될 것
   - 조명을 어둡게 하고, 문을 잠그고, 까먹은 오븐을 끄는 것 부터, 기술을 통해 좀 더 상황에 맞는 능동적인 작업을 하게 될 것
   #4 지속가능성(Sustainability)이 자신만의 아키텍처를 가지게 될 것
   - 2022년엔 개발자는 구축중인 시스템과 어플리케이션에 대해 지속가능성을 고려한 결정을 내리기 시작할 것
   - 개발자로서 보안/성능/안전성/비용 같은 것에 대해 최적화 하는 아키텍처를 고민하도록 훈련 받아왔음
   ㅤ→ 여기에 지속가능성도 추가하게 될 것
   - 앞으로 몇년안에 개발자들이 자신들이 해결하는 문제뿐만 아니라 지구를 고려하는 지속가능성을 의식한 아키텍처를 구축하는데 적극적인 역할을 하게 될 것
   - 무조건 속도 및 품질을 높이는게 아니라, 탄소 발자국을 줄이기 위한 기능을 제공하고 수행하여 지구에 긍정적인 영향을 주는 것들을 고려
   - 그리드의 친환경 에너지를 활용하기 위해 어플리케이션 실행하는 곳을 선택하거나, 실행에 필요한 시간을 고려하거나, 사용할 칩셋을 지정하는 등
   - 웹 스케일로 운영할때 작은 절약이 큰 영향을 줄 수 있음
   - 개발자들이 비 가동시 자원을 끄는(Switch Off)것에 대한 고려를 하게 될 것
   ㅤ→ Always on이 좋지만 비용이 들게 되므로, ""가장 친환경적인 에너지는 사용하지 않는 에너지"" 라는 만트라가 생기는 것을 볼수 있을 것
   - AWS는 2025년까지 100% 재생에너지로 운영할 계획
   ㅤ→ 풍력,태양열,수력 으로 클라우드를 운영하는 것은 모든 개발자,회사들이 가져야할 지속가능성에 대한 책임의 일부일 뿐
   #5 연결(Connectivity)의 새로운 물결은 새로운 종류의 어플리케이션을 가져올 것
   - 저궤도(Low Earth Orbit) 위성은 지구 구석구석에 저렴한 광대역(Broadband)을 제공할 예정
   ㅤ→ 교사/학생/중소기업 및 거의 모든 사람이 온라인에 접속 가능하게 해서 수십억 명의 삶을 변화 시킬 것
   - 향후 5년간 2만개 이상의 위성의 지구위의 LEO에 올라가게 될 것
   ㅤ→ 그중 1500개는 Amazon의 Project Kuiper 위성 네트워크로 전세계에 인터넷이 제공되지 않거나 느린 곳에 빠르고 저렴한 광대역을 제공하는 것을 목표로 함 (첫번째 위성이 2022년 가을에 궤도 진입 예정)
   ㅤ→ 이 행성 규모의 광대역과 제공될 것은 이에 혜택을 받을 완전히 새로운 종류의 응용 프로그램
   - 오늘날 대부분의 디지털 어플리케이션은 낮은 비트레이트 또는 간헐적인 연결(종종 끊기는)을 가지는 기존 네트워크에 제한을 받음
   ㅤ→ 지속 연결, 대역폭, 높은 지연시간의 제약을 받지 않으면 미개척 가능성의 세계가 현실이 될 것
   - 유비쿼터스 연결을 통해서 지금까지는 불가능했던 사용 사례들을 만들기 시작했음
   ㅤ→ 모든 어린이가 동일한 학습도구를 사용하거나, 중소기업들이 더 많은 고객을 확보하기 위해 다양한 디지털 도구를 사용하고 시골 및 외딴 지역에서 일자리를 창출
   ㅤ→ 원격에서 Reforestation(재조림, 인위적으로 나무를 심는 것)을 모니터링 하거나, 화재 및 홍수와 같은 재난 상황을 더 잘 추적하고 신속하게 조치를 취할수 있음
   ㅤ→ 대기업들은 태양열 설비, 중장비, 멀리 떨어진 건물들의 사용 및 유지 보수를 원격에서 최적화
   ㅤ→ 차량, 비행기, 선박을 보유한 운송회사들은 클라우드에 업로드된 지속적인 데이터 스트림에 접근하거나, 지상/공중/수상에 있는 운송수단들에 정기적인 업데이트가 가능
   - 유비쿼터스 연결은 지능형 공간에서 지능형 도시, 지능형 국가로 그리고 마지막으로 지능형 세상으로 우리를 데려갈 것

   이 글의 한국어 번역문:
   http://channy.creation.net/blog/1492

   전 5번이 가장 큰 변화가 될거라 생각합니다.
   아마존이 Kuiper를 얘기하고 있지만, SpaceX 가 쏘아 올리고 있는 스타링크가 사실 더 빠르게 시장을 장악할 수도 있을 것 같아요.
   - SpaceX의 저궤도 위성 인터넷 Starlink 4개월 이용기 https://news.hada.io/topic?id=4676
"
"https://news.hada.io/topic?id=5589","HTTP Toolkit - HTTP 디버깅용 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     HTTP Toolkit - HTTP 디버깅용 오픈소스

   - 모든 HTTP/HTTPS 리퀘스트를 인터셉트 및 보기/Rewrite/Redirect/Inject Error 지원
   - 다양한 환경의 HTTP 요청을 설정 필요없이 바로 캡쳐가능
   ㅤ→ 브라우저/안드로이드 앱/백엔드(Node/Pyhon/Java/Ruby..)/터미널 및 Electron앱 등
   - 윈도우/맥/리눅스
   - HTTP 정보를 MDN에서 바로 조회 가능하게 연결
   - Monaco 에디터로 메시지 바디 보기 지원 (하이라이트 & 구문강조)
   - 브레이크 포인트를 통해 HTTP 트래픽을 잠시 멈추거나 실시간 편집 가능

   postman 대용인가요?

   Postman 이 유료화에만 너무 신경 쓰면서 다소 복잡해지고 있어서, 좋은 대안이라는 평가가 많네요.
"
"https://news.hada.io/topic?id=5583","Show GN: 북모리 - 기록하고 기억하는 독서노트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Show GN: 북모리 - 기록하고 기억하는 독서노트

   안녕하세요. 지난 번에 이어 제가 1인 개발한 서비스를 소개시켜드리려 합니다.
   한 번 써보시고 피드백 부탁드립니다 :)
   클라이언트는 Flutter로 개발했고, 파이어베이스의 각종 서비스들을 활용해서 서버리스로 구성했습니다.
   Flutter는 리액트 네이티브처럼 크로스 플랫폼을 지원하고 있고, 현재 iOS, Android는 꽤 쓸만하고, 웹, PC 는 계속 발전 중입니다.
   퍼포먼스(성능)가 네이티브에 비해 별로 떨어지지 않기 때문에 플러터를 시작하게 됐고, 하나의 소스 코드로 여러 개의 플랫폼에 대응할 수 있다는게 정말 큰 장점인 것 같습니다.
   * 클라이언트 : Flutter / Dart
   * 인앱결제 검증 서버 : Firebase Functions
   * 원격 설정 데이터 : Firebase Remote Config
   * 유입 등 각종 지표 분석 : Firebase Analytics
   * 크래시 분석 : Firebase Crashlytics

   // 앱 소개
   북모리는 책을 더 잘 기억할 수 있도록 도와주는 앱입니다.
   다양한 책의 상태를 관리할 수 있고, 강력한 독서 노트 기능을 제공합니다.
   여러 종류의 통계와 독서 타이머 같은 기능도 제공합니다.
   출시한지는 1년이 넘었고, 꾸준한 업데이트로 각종 기능들을 보강하고 있습니다:)
   느리지만 조금씩 성장을 이어가고 있고, 유저 반응도 괜찮은 것 같습니다~
   * 안드로이드 : https://bookmory.web.app/?platform=a
   * iOS : https://bookmory.web.app/?platform=i

   북모리가 Flutter로 개발되었군요.
   너무 잘 사용하고 있습니다.
   그리고 웹 버전 기다리고 있습니다~!

   너무 깔끔하게 잘 만들고 계속 업그레이드 하면서 발전 중이셔서 보탤만한 말이 없네요. 훌륭합니다!
   웹에서도 쓸 수 있게 되면 좋겠어요 ㅎㅎ

   @xguru님께 이런 칭찬을 듣다니 영광입니다.ㅎ
   웹 버전이라니..ㅎ 큰 숙제를 던져주시는군요 :)

   웹 버전이 지원 되면, 개인이 작성한 독서 노트를 인터넷에서도 검색 가능할 수 있게 되면서 다양한 용도로 사용이 가능해질 것 같아요.
   ( 개인/책/노트 별로 공개/비공개 여부 지정 기능 같은 게 추가되어야 겠지만..)
   이렇게 되면 여러 사람의 공개 노트를 묶어서 온라인 서점 같은 데에 제공해주는 유료 서비스도 가능해지지 않을까요 ? ^^

   네네. 맞아요.ㅎ 웹버전으로 한다면 공개 여부 설정이 필수로 들어가야할 것 같구요.
   역시 비즈니스적으로 잘 푸시는군요~ 그런 방향도 괜찮은 것 같습니다.
   비슷한 방향으로 좀 더 고민해볼 필요가 있겠네요~
"
"https://news.hada.io/topic?id=5509","Diskitude - 내 윈도우의 용량은 누가 잡아먹나","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Diskitude - 내 윈도우의 용량은 누가 잡아먹나

   - 윈도우 파일시스템의 큰 파일들을 쉽게 찾아볼 수 있게 해주는 앱
   - 맥용 DaisyDisk와 유사한 결과화면
   - 10KB의 적은 용량 (C/OpenGL/GDI 로 Win32 API 직접 호출)
   - 마우스 포인터를 올리면 경로 표시, 클릭하면 탐색기에서 열기
   - 오른쪽 버튼 클릭시 해당 폴더만 상세 보기

   다른 윈도용 디스크 용량 확인 툴
   - SpaceSniffer: http://www.uderzo.it/main_products/space_sniffer/
   - Windirstat: https://windirstat.net/
   - WizTree: https://diskanalyzer.com/

   저는 windirstat 을 주로 사용합니다.
"
"https://news.hada.io/topic?id=5490","Zinc 검색 엔진 - 경량 ElasticSearch 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Zinc 검색 엔진 - 경량 ElasticSearch 대체제

   - 풀 텍스트 인덱싱 지원하는 검색엔진
   - Go로 작성된 오픈소스로 100MB 램 이하에서 실행가능
   ㅤ→ 싱글 바이너리로 설치 및 실행
   - API 에서 데이터를 수집하여 Kibana로 검색하는 경우에 바로 대체하여 사용 가능
   ㅤ→ 데이터 수집용 ElasticSearch API 호환 (싱글 레코드 또는 Bulk API)
   ㅤ→ Kibana를 지원하는 것은 아니며, 자체 UI 제공
   - Bluge 인덱싱 라이브러리 사용
   - Vue로 작성된 검색 UI
   - 자체 인증 내장

   - Sonic - 빠르고 가벼운 Schema-less 검색 백엔드 https://news.hada.io/topic?id=3856
   ElasticSearch가 무겁다 보니 경량 대체제들은 계속 보이는 듯 합니다.
"
"https://news.hada.io/topic?id=5571","Polars - Rust/Python 용 빠른 DataFrame 라이브러리 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Polars - Rust/Python 용 빠른 DataFrame 라이브러리

   - 멀티쓰레디드 데이터프레임
   ㅤ→ Lazy | Eager 실행
   ㅤ→ SIMD
   ㅤ→ 쿼리 최적화
   ㅤ→ 강력한 Expression API
   - Rust로 작성되어 Rust 환경에서 기존 DataFrame API 를 그대로 사용
   ㅤ→ 물론 Python 에서도 그대로 이용 가능
   - Apache Arrow 스펙을 그대로 안전하게 구현한 Arrow2 Rust Crate 기반
"
"https://news.hada.io/topic?id=5464","Automa - 크롬 브라우저 자동화 확장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Automa - 크롬 브라우저 자동화 확장

   - No-Code 블록 연결 방식으로 웹 브라우저를 자동화
   - 폼 자동 채우기, 반복 작업, 스크린샷 저장, 데이터 스크래핑 등의 다양한 작업 지원
   ㅤ→ 웹훅 호출, CSV/JSON Export, 탭/창 열기/닫기, 프레임 선택..
   - 원하는 시간에 스케쥴링 가능

   영상을 봤더니...
   쓰기 쉽겠네요.
"
"https://news.hada.io/topic?id=5563","State of CSS 2021 보고서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         State of CSS 2021 보고서

   - 전세계 8714명 대상 설문조사
   - CSS 신기능 도입
   ㅤ→ Layout
   ㅤㅤ⇨ CSS Grid : 83%가 사용 (>2020 73%)
   ㅤㅤ⇨ Subgrid : 12.7%가 사용 (>2020 6.1%)
   ㅤㅤ⇨ Flexbox : 98.7%
   ㅤㅤ⇨ CSS Multi-column : 38.8% (>33.5%)
   ㅤㅤ⇨ CSS Writing Modes : 15.4%
   ㅤㅤ⇨ aspect-ratio : 37.1% (>22.4%)
   ㅤ→ Shape & Graphics
   ㅤㅤ⇨ object-fit : 69.2% (>60.5%)
   ㅤㅤ⇨ clip-path : 56% (>49.1%)
   ㅤ→ Interactions
   ㅤㅤ⇨ CSS Scroll Snap : 30% (>21.1%)
   ㅤㅤ⇨ pointer-events : 70.5%
   ㅤ→ Typography
   ㅤㅤ⇨ font-variant 20% / initial-letter 28.4% 는 줄어드는중
   ㅤㅤ⇨ line-clamp : 29.5% (>20.3%)
   ㅤ→ Accessbility
   ㅤㅤ⇨ prefers-reduced-motion : 26.7% (>15.8%)
   ㅤㅤ⇨ prefers-color-scheme : 28.6% (>18.8%)
   ㅤ→ Other
   ㅤㅤ⇨ CSS Varialbles : 84.4% (>74.7%)
   ㅤㅤ⇨ @supports : 46% (>40.6%)
   ㅤㅤ⇨ CSS Containment : 9.6% (>6.4%)
   ㅤㅤ⇨ will-change : 33.5% (~28.8%)
   ㅤㅤ⇨ CSS Comparison Functions min(), max(), clamp(): 62.5% (>47%)
   - 선호기술
   ㅤ→ 전/후 처리기 : PostCSS 91% > SaSS 84% > Stylus 35% > Less 34% > Assembler CSS 26%(신규 진입)
   ㅤㅤ⇨ 그외 : Styled Components, Tailwind CSS, CSS-in-JS..
   ㅤ→ CSS Framework : Tailwind 78% > PureCSS 70% > Ant Design 56% > Bulma 54% > Semantic UI 47%
   ㅤ→ CSS-in-JS : vanilla-extract 87% > CSS Modules 86% > Windi CSS 84% > Styled Components 77% > Stitches 76%
   - 그외 많이 쓰는 도구들
   ㅤ→ Prettier , Autoprefixter, Stylelint, PurgeCSS, cssnano
   ㅤ→ 브라우저 : 크롬 67.4% > Firefox 46.8% > 사파리 23.6 % > 사파리 iOS 16.8% > Edge 16.5% > 크롬 안드로이드 13.6% > Brave 8.8%
   가장 많이 보는 블로그 : CSS-Tricks, Smashing magazine, dev.to, Medium
   가장 많이 보는 사이트 : Stack Overflow, MDN, W3Schools
   가장 많이 듣는 팟캐스트 : Syntax, Shop Talk Show, The CSS Podcast
   올해의 대상
   - 가장 많이 채택된 기능 : CSS Comparison Functions
   - 가장 만족스런 기술 : PostCSS
   - 가장 관심 많은 기술 : CSS Modules
   조사한 대상 정보
   - 영어 사용자가 72%, 스페인어 5.5%, 러시아어 5.3%
   - 나이 : 24~34 37.8% > 35~44 21.9% > 18~24 7.8% > 45-54 5%
   - 경력 : 5~10년 22.3% , 10~20년 22.3% > 2~5년 16.6% > 20년 이상 7%
   - 회사크기 : 100~1000명 17.1% > 1000명 이상 12.4% > 20~50명 10.1% > 50~100명 > 8.5%
   - 연봉 : $50~100K 22.7% > $30~50K 14.7% > $100K~$200K 13.6% > $10K~$30K 11.2% > $200K 이상 1.9%
   - 젠더 : 남성 65.4%, 여성 8.3%

   State of CSS 2020 보고서 https://news.hada.io/topic?id=3304
"
"https://news.hada.io/topic?id=5591","Ask GN: 2021년 올해 최고의 콘텐츠는 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Ask GN: 2021년 올해 최고의 콘텐츠는 ?

   올 한해 나온 콘텐츠 중에서 가장 재밌었다/강력 추천한다 싶은 콘텐츠는 어떤게 있으신가요?
   넷플릭스/디즈니/티빙/웨이브 같은 OTT 오리지널부터 영화, 게임, 만화 등 상관없이 꼽아주세요.
   어제 올린 책 추천 글이 흥해서, 매년 종류별로 추천을 받아서 정리하면 좋겠다 싶었어요
   https://news.hada.io/topic?id=5582

   넷플릭스 '오징어 게임'입니다.

   영화 ""듄""이요. 2년만에 극장 가서 본 영화가 이거라는 것에 감동했습니다.

   듄과 아케인입니다

   저는 음악 추천합니다. 나이트오프의 ""알고있지만"", ""친구"", 그리고 이이언의 솔로 2집 ""Fragile"" 을 올해 많이 들었네요.
   나이트오프와 못의 보컬 이이언씨는 딱 맞는 가사를 딱 맞는 타이밍에 넣을 줄 아는 뮤지션이라 생각해요. 미니멀하면서도 치밀하게 설계된 사운드도 대단하구요.

   저는 넷플릭스 인간수업이 제일 기억에 오래 남는 것 같습니당. ㅎㅎ
   다소 유치할 수도 있지만. 이야기를 잘 이끌어나가는거 같아요.

   저의 올해 OTT 오리지널 최고작은 티빙의 ""술꾼도시여자들"" 입니다. 웹툰 원작인데 배우들의 열연으로 초월이식 되었다고 봐요. 안보셨다면 강력 추천합니다.
   그외에 ""괴물"", ""완다 비전"", ""D.P"" 도 좋았어요.
   영화는 ""듄"", 게임은 ""포르자 호라이즌 5"", ""하데스""(스위치 버전이 올해 나와서 적어봅니다), ""메트로이드 드레드""

   저도 '듄' 너무 좋아서 원작이랑 메이킹필름책까지 구매했네요.

   최근에 스위치로 하데스 사서 해보는데 정말 잘만들었더라구요.
   게임 플레이 자체도 재밌지만, 로그라이크의 반복 플레이를 스토리와 엮어내서 플레이의 당위성을 만들어 주는게 인상 깊었습니다

   하데스 정말.. 기깔난거같아요 ㅋㅋㅋㅋ 저두 요 댓글때문에 기억났네요.
"
"https://news.hada.io/topic?id=5476","Strapi v4 릴리즈 - 오픈소스 헤드리스 CMS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Strapi v4 릴리즈 - 오픈소스 헤드리스 CMS

   - v3 : RBAC, 드래프트 기능, SSO인증, i18n 추가
   - v4 : 플러그인을 통한 쉬운 확장이 가능하도록 코어 부터 재 작성
   ㅤ→ UI & 접근성 개선 : Strapi Design System 적용
   ㅤ→ 새로운 Plugin API (v3 플러그인 호환 안됨)
   ㅤ→ 개선된 DB 쿼리 엔진 추가
   ㅤ→ 더 강력해진 REST & GraphQL API
   ㅤ→ Content API 와 Admin API를 분리하고, Content API는 API Token으로 관리 가능
"
"https://news.hada.io/topic?id=5525","Ask GN: 온라인 페어작업을 위한 도구나 방법으로 추천해주실 만한 게 있을까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Ask GN: 온라인 페어작업을 위한 도구나 방법으로 추천해주실 만한 게 있을까요?

   애자일의 여러 실천법을 비대면으로 실행할 때, 대면했을 때와 유사한 효과를 내려면 여러가지 측면에서 노력을 더 해야 하더군요.
   그 중 페어 프로그래밍(페어 작업)은, 대면에서는 자연스럽게 되는 ""같은 화면과 컨텍스트를 공유""하는 부분이 특히 어려웠습니다. 시도해본 방법은
   1. IDE의 기능/익스텐션(e.g., Live Share) 이용
   장점
   - 각자가 본인이 편한 키보드/환경으로 할 수 있음
   단점
   - (도구에 따라) 목소리는 같이 통합해서 들을 수 있게 해주는데 얼굴은 안 보이는 경우가 많음 -> 보조 도구를 사용하거나 포기
   - 서로가 같은 화면을 보고 있지 않아도 되니, 컨텍스트가 같이 움직이지 않을 수 있음
   - 비개발 직군의 동료와 페어작업을 하기에는 적합하지 않음
   2. Zoom에서 화면 공유 + 원격 제어
   장점
   - 누구에게나 익숙한 비대면 회의 도구를 그대로 사용
   - 얼굴이 보이고 화면을 공유하는 게 자연스러워 컨텍스트 공유가 잘 됨
   - 원격 제어를 누군가에게 넘기는 것이 대면 페어 작업에서 키보드를 넘기는 것과 유사하게 느껴짐
   단점
   - 제어권을 받은 사람이 한/영 전환이나, 대/소문자 전환 같은 게 원하는대로 하기 어려움 (이유를 아직 못 찾았습니다)
   - 제어권을 받은 사람이 다른 창을 띄우거나 하는 등의 행위가 어렵거나 부자연스러움
   이정도입니다. 최근에 https://tuple.app/ 이라는 것도 알게 됐는데 유료라서, 팀원과 함께 프리 트라이얼을 시도해볼까 싶네요.
   나는 이렇게 하니까 효과적이더라, 같은 경험을 공유해주시면 감사하겠습니다.

   Jetbrains IDE를 쓰신다면 Code With Me를 강추합니다 :)
   https://www.jetbrains.com/ko-kr/code-with-me/
   Following 기능, Following 하게 만드는(!) 기능 모두 있고,
   로컬 개발 환경을 공유하게 만들 수도 있고... 여러모로 원격 페어에 아주 좋더라고요~

   저는 jetbrains 안쓰지만 쓰시는 분들에게는 추천할 수 있겠네요. 감사합니다~

   저는 리모트 페어 프로그래밍을 잘 하지 않아서 ^^;; 사용 경험은 아니고 아는 도구만 소개해 드립니다.
   Pop https://pop.com/
   - Slack 에 인수되었던 Screenhero 의 개발자가 나와서 새로 차린 스타트업입니다.
   - 처음부터 리모트 페어 프로그래밍을 타겟으로 시작한 서비스라서 훌륭하다는 평가가 많습니다.
   - 호스트가 화면을 공유하고, 참여자는 제어가 가능합니다.
   - 각 참가자의 커서에 그 사람 아이콘이 보이고, 캠으로 참가자 얼굴도 보여줍니다.
   - 화이트 보드 기능도 지원합니다.
   - 여러명이 참여 가능하고, 대부분의 데스크탑/모바일 환경을 지원합니다.
   - 무료 버전도 있고, 베타기간중이라 프로 버전도 무료입니다.
   Pop의 원래 이름은 Screen 이었는데 GNU Screen 때문에 이름이 바뀌었습니다.
   - Screen - 재택근무자를 위한 빠른 화면 공유 서비스 https://news.hada.io/topic?id=1772
   화면 공유를 위한 기능은 CoScreen 도 괜찮습니다.
   - CoScreen - 원격근무시 협업을 위한 화면 공유 도구 https://news.hada.io/topic?id=999
   긱뉴스에 2년 전에 올린거라 설명이 지금이랑은 조금 차이가 있네요.
   역시 서로의 얼굴 보는 기능도 포함하고 있습니다.

   pop.com 감상 (줌 + 원격제어와 비교)
   - zoom보다 확실히 빠르고 리소스를 덜 씁니다.
   - 줌은 원격 제어를 호스트가 게스트에게 줘야 하는데, 팝은 게스트가 원할 때 제어할 수 있습니다. 리스크가 있는 선택이지만 확실히 편하긴 하더군요.
   - 줌의 원격 제어보다 훨씬 속도가 빠르고 안정적입니다. 다만 네트워크 문제인지, 상대가 내 것을 통제할 때 앱이 꺼진 적이 종종 있었습니다.
   - 팝이 아직 베타라서 그런지, 아니면 회사 컴퓨터 보안 때문인지 모르겠지만 아무튼 기본적인 동작이 잘 안 되거나(웹사이트에 구글 계정으로 로그인하니 계속 signing in... 만 뜨는데 실제로 새로고침해보면 로그인이 되어있음), 줌에서 경험해서 있을 거라고 예상했던 기능이 없거나(배경화면 필터링) 하는 게 종종 있었습니다. 아직 MVP에만 집중하는 느낌.
   - 전체적으로는 상당히 만족스러웠습니다.

   Zoom에도 free draw를 할 수 있는 annotate 기능이 있는데, Pop은 annotate 모드로 전환하지 않아도 바로 그릴 수 있고, 참여자들의 커서가 실시간으로 보인다는 점이 차이점이라 할만하네요.

   Arch Linux 사용자 분들이 사용하실 수 있는 AUR도 있군요.
   https://aur.archlinux.org/packages/pop-bin/
   (Pop도 너무 일반적인 이름인 것 같...)

   오, pop 괜찮아 보이네요. 한번 써보겠습니다. 추천 감사합니다!
"
"https://news.hada.io/topic?id=5586","Omnizart - 음악 전체를 필사(Transcribe)해주는 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Omnizart - 음악 전체를 필사(Transcribe)해주는 오픈소스

   ""Omniscient Mozart(전지전능한 모짜르트)""
   - MP3/유튜브 링크의 음악에서 보컬/드럼/코드/비트/악기 등을 자동으로 Transcribe(필사)
   ㅤ→ MIDI 및 MP3 로 생성해 줌
   - 파이썬 라이브러리
   ㅤ→ 구글 Colab 에서 바로 실행하거나 Replicate에서 실행 가능
   - 모드
   ㅤ→ music : 악기의 음표 필사
   ㅤ→ drum : 타악기의 이벤트 필사
   ㅤ→ vocal : 음표 레벨의 보컬 멜로디 필사
   ㅤ→ vocal-contour : 프레임 레벨의 보컬 멜로디 필사
   ㅤ→ chord : 코드 진행 필사
   ㅤ→ beat : 비트 필사

   한번 써봤는데 melodyne 같은 상용소프트웨어에 준할 정도네요.
   피아노만 나오는 부분은 거의 완벽하고, 여러 악기가 함께 나오는 부분도 보컬 멜로디나 악기 멜로디 같은 탑노트는 만족스러운 수준으로 뽑아주네요.

   Colab에서 제가 좋아하는 John Legend 의 All Of Me 유튜브 뮤직비디오 링크를 넣어봤는데,
   앞부분 피아노 부분은 MIDI로 거의 완벽하게 잘 뽑아내 주네요. 뒤에 음이 겹치는 부분은 조금 복잡하긴 합니다만..
   악보 구하기 힘든 노래들은 한번 돌려볼 만 한 거 같아요.
   MIDI로 뽑아서 Sibelius 나 MuseScore 에 넣어서 살짝 편집한 뒤 악보로 뽑으면 될 듯
"
"https://news.hada.io/topic?id=5523","구글 플레이 앱 제목에 넣을 수 없는 단어에 "광고 없음" 도 추가 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 구글 플레이 앱 제목에 넣을 수 없는 단어에 ""광고 없음"" 도 추가

   - 앱의 순위를 조작하기 위해 가격이나 기타 프로모션 정보가 표시된 텍스트 또는 이미지를 앱 제목, 아이콘, 개발자 이름에 사용하는 행위를 금지
   ㅤ→ 스토어 실적 및 순위 표시: '올해의 앱', '1위/#1', '20XX Play 최고의 앱', '인기' 등 단어 및 뱃지 아이콘
   ㅤㅤ⇨ 정책 내용엔 없지만 '광고 없음/No Ads' 도 안됨 (최근 리젝 됨)
   ㅤ→ 가격과 홍보 정보 표시 : '10% 할인', '50달러 캐시백', '기간 한정 무료'
   ㅤ→ '신작/New' , '에디터 추천/Editor's Choice' 등
   * 2021/9/29 이후 부터 새로 적용된 정책

   No Ads를 넣었다가 리젝된 사람의 글 https://news.ycombinator.com/item?id=29497680
"
"https://news.hada.io/topic?id=5570","밸브, "Steam Deck용 독점 게임은 없을 것"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     밸브, ""Steam Deck용 독점 게임은 없을 것""

   - 내년 2월 출시 예정인 휴대용 게임기
   - 새로 변경된 FAQ에 ""독점 게임은 의미가 없음. 스팀덱은 기본적으로 PC이고 PC처럼 게임을 실행해야 함""
   - SteamOS를 통해서 게임 외에 다른 앱들도 설치 가능
   ㅤ→ 또한 SteamOS 자체도 별도의 OS로 배포할 예정
   ㅤ→ Unity, Epic(Unreal), Godot 등과 긴밀히 협력 중
   - 스팀덱을 PC의 외장 컨트롤러로 이용 가능

   밸브, 휴대용 PC게임 콘솔 Steam Deck 공개 https://news.hada.io/topic?id=4617
"
"https://news.hada.io/topic?id=5540","이 웹사이트는 48% 배터리가 남아있습니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        이 웹사이트는 48% 배터리가 남아있습니다

   - ""High-Tech Problems, Low-Tech Solutions"" 를 다루는 ""LOW←TECH"" 매거진 웹사이트
   ㅤ→ 태양열로 가동하고 있어서 가끔 오프라인 됨
   - 사용 전력을 최소화 하기 위한 다양한 노력
   ㅤ→ Static 사이트, 기본 폰트에 디더링된 이미지 등
   ㅤ→ 약 1~2.5와트만 사용
   - 페이지 배경에 현재 사이트의 남은 전원이 표시됨
   ㅤ→ 현재 사용 전력양, CPU 온도 및 부하, 솔라판넬이 활성화 상태인지 등도 같이 표시

   ㅈㅐ밌네요

   아침엔 46퍼였는데 지금은 44퍼.. 정말 재밌는 시도네요

   8시간전에 HN에 올라왔을때는 81% 였네요. 방문자가 늘면서 급격히 감소중 ㅎㅎㅎ
   바르셀로나 시간은 지금 한밤중이라 충전도 못하고 있어서 더 그런듯 합니다.
"
"https://news.hada.io/topic?id=5475","Amazon EC2 M1 맥 인스턴스 프리뷰 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Amazon EC2 M1 맥 인스턴스 프리뷰 발표

   - 작년에 추가된 베어메탈 EC2 Mac 인텔 인스턴스(mac1.metal) 에 M1 맥도 추가 (mac2.metal)
   - M1 Mac Mini, 4 성능 + 4 효율 CPU 코어, 12vCPU, 16 GiB
   - AWS Nitro System : 10 Gbps VPC Network bandwidth + 8 Gbps EBS storage bandwidth
   - 인텔 맥 대비 60% 나은 가성비
"
"https://news.hada.io/topic?id=5513","microStudio - 온라인 무료 게임엔진 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       microStudio - 온라인 무료 게임엔진

   - 게임 제작, 프로그래밍 배우기, 플레이, 공유, 프로토타이핑, 잼 가능한 도구
   - 웹브라우저에서 모든 기능 사용 가능, 클라우드에 저장되어 어디서든 접근
   - 2D 게임 작성을 위한 스프라이트/지도 제작 및 코드 작성 도구 모두 포함
   - microScript(Lua에서 영향받은 간단한 언어) 및 Python, JavaScript, Lua 언어 지원
   - 게임패드, 터치스크린, 키보드/마우스 입력
   - 웹(HTML5)/윈/맥/리눅스용으로 게임 Export 지원
   - 오프라인용 스탠드얼론 어플리케이션 제공 : 윈/맥/리눅스/라즈베리 파이
"
