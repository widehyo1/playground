"https://news.hada.io/topic?id=5977","Microsoft를 잊지 말아요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Microsoft를 잊지 말아요

   ""Redmond의 거인을 이해하면 클라우드 인프라, 스타트업 전략, 소프트웨어의 미래에 대한 귀중한 교훈을 얻을 수 있음""
   크기에 비해 Microsoft는 기술 분야에서 간과되는 회사임
   1. 애플,페이스북,아마존,구글 처럼 사랑받는 소비자 브랜드가 아님
   2. VC 성공사례도 아님. 너무 수익성이 좋았기에 창업자가 IPO시에 지분의 70%를 소유
   ㅤ→ IPO후 지분율 : 빌게이츠 44.8%, 폴 알렌 24.9% (스티브 발머도 6.8%)
   3. FAMGA중 가장 오래된 회사로, 다른 주(워싱턴 State)에 숨어있음
   하지만 가진 카드들을 잘 사용한다면 최초의 $10T(10조달러, 1경원) 회사가 될 수 있음
   이 글은
   ㅤ1. Microsoft가 무엇인지 이해하고
   ㅤ2. 글로벌 지배 경로를 그려보고
   ㅤ3. 그들에게 배운 내용을 스타트업에 적용해보려고 함
   # Part 1 Microsoft란 ?
   - 간결하게 정의하기 어려운 회사
   - 구글의 검색, 애플의 아이폰, 아마존의 이커머스, 페이스북의 소셜 네트웍 같은 멱법칙을 보이는 대표 상품이 없음
   ㅤ→ 원문에선 Singular Power Law Product 로 표현
   - Microsoft의 수백가지 제품을 이해하는 것은 어려움
   - 역사적 맥락에서 과거의 Microsoft를 통해서 현재 Microsoft가 어떤 것인지 알 수 있음
   (이 부분은 간단히 요약합니다)
   - 1970년대에 모든 가정에 컴퓨터를 보급해야 한다는 미션 아래 회사를 설립했음
   - 1999년에는 시총 $620B로 세계에서 가장 가치있는 회사가 되었지만, 2002년에는 60% 하락
   - 닷컴붐과 함께 사업 다각화는 실패했고, 명확한 성장동력 없이 FAMGA에 대해서 반응적인 태도로 일관
   - 2010년대에 와서 FAMGA들이 가지지 못한 엔터프라이즈 배포와 그 신뢰 기반이 새로운 성장동력인 클라우드를 가지게 함
   - CSA였던 Ray Ozzie의 실험으로 2006년에 시작했던 Azure는 처음엔 ""Windows in the Cloud"" 였으나, 고객이 원했던 것은 아마존 EC2가 제공했던 사용하기 쉬운 가상 머신 이었음.
   - AWS가 4년 정도 먼저 시장에 나왔기에 Azure는 AWS가 학습한 것들을 바로 습득할 수 있었음
   - 아마존과 달리 Microsoft는 엔터프라이즈 배포 채널을 가지고 있었기에 사업이 본격화 되기 시작
   - Azure는 출시 9년만인 2019년에 $10b run rate에 도달하면서 AWS/GCP 보다 훨씬 빠름
   - 현재 Azure는 매출이 $30b가 넘는 괴물
   - 2020년대에는 Azure가 회사 성장의 대부분을 차지할 것
   - Azure는 역사상 $10b/$30b 매출에 가장 빠르게 도달한 B2B 제품 (AWS/Salesforce 등보다 훨씬 빠름)
   - MBA 사례 연구에서 새CEO Satya Nadella는 Azure를 통해서 Microsoft를 재창조 했다는 공로를 인정
   ㅤ→ 특히나 Steve Ballmer 아래에서 부진한 세월을 보내고 나서
   - Microsoft 의 리더십을 이해하는 프레임워크는 로마제국
   - 빌게이츠는 Romulus(로물루스, 로마의 건국자), Nadella는 Augustus(아우구스투스, 로마제국을 세운 위대한 황제)
   - Nadella는 탁월한 CEO로 ""no""의 문화에서 ""yes""의 문화로 변화시켰음
   # Part 2 $10T로 가는 길
   - 올바른 전략과 실행을 통해서, Microsoft는 최초의 $10T 기업이 될 수 있음
   - 만약 내가 회사를 운영한다면 ?
   ㅤ→ 먼저 현금 $130B 와 시총 $2.3T의 시가총액이 강점
   ㅤ→ Fortune 5000 회사중에서 탁월한 배포 채널과 96,000여명의 뛰어난 엔지니어들
   - 강력한 무형 자산을 보유중
   ㅤ→ FAMGA의 회사들과 다르게 독점 금지에 대한 면역이 있음
   ㅤ→ 이것은 다소 구조적인데, 소프트웨어 시장은 소비자 인터넷 시장보다 덜 독점적이기 때문
   ㅤ→ 가장 빠르게 성장하는 Azure 조차도 시장점유율이 19%에 불과함
   ㅤ→ 거의 무제한에 가까운 현금과 자본, 약간의 반독점 면제를 통해 Microsoft는 인수적(Acquisitive)이여야 함
   - 주주들을 달래줄 금융 공학적 성장 전략도 있음
   ㅤ→ 애플은 팀쿡이 2011년 CEO로 취임한 후 2012년 말부터 자사주 매입을 시작했으며 현재 분기당 $20B씩 지속적으로 매입중
   ㅤ→ 팀쿡이 취임한 후 애플의 주가는 10배 이상 오름
   ㅤ→ Microsoft도 Nadella가 취임한 2014년부터 공격적으로 자사주 매입을 시작한 것은 놀라운 일이 아님
   - Microsoft가 탈 4가지의 새로운 물결 : demographics, data, developers, depth (인구통계, 데이터, 개발자, 깊이)
   ## Demographics : 인구 통계가 Microsoft의 TAM을 확장시킴
   - Microsoft의 제품은 Fortune 5000 기업들 도처에 있지만 젊은 사용자와 성장하는 기술회사엔 없음
   - 젊은 + 기술 계층을 위한 도구를 인수하는게 어떨까
   ㅤ→ Airtable : 자동화를 앞세운 경량 CRM + Excel
   ㅤ→ Notion : 35세 이하를 위한 Office 365
   ㅤ→ Miro : 새로운 오피스 제품군인 디지털 칠판
   - 이들을 인수함으로써 2020년대에도 오피스를 성공시킬 젊은 생산성 도구 사용자들을 잡을수 있을 것
   - 스타트업 출신 젊은 직원들을 채용함으로써 내부에서도 데모그래픽에 투자할 수 있음
   ## Developers : 개발자는 Azure를 좋아해야함
   - Azure는 의심할것 없는 거대한 비즈니스 지만, 다음 세대 개발자들에게는 쿨하지 않음
   - 그들이 없다면 Azure는 탑다운 세일에 갇혀 버릴 것
   - 1990년대에 Microsoft는 리눅스와 오픈소스를 싫어했지만, 이 잘못을 깨닫고 투자하기 시작
   - 나델라 CEO는 2015년에 ""Microsoft ♥ Linux"" 라고 얘기하고 2018년에 GitHub을 인수했으며, Azure는 Linux를 잘 지원
   - GitHub을 가진다는 것만으로 젊은 개발자들이 Azure를 좋아하게 만들 수는 없음
   - Microsoft의 임무는 새로 찾은 개발자의 사랑을 우아하게 활용하는 것
   - 구글이 사용자에게 Meet을 강요하는 것처럼 하지 말 것
   - 사용자들을 Azure로 푸시하기 전에 더 깊은 오픈소스 및 개발자 도구에 대한 지원이 필요함
   - IDE는 매우 파편화된 시장이므로, 여기서 롱테일을 추구하는 것은 매우 매력적
   - 또한 젊은 개발자들이 좋아하는 Replit 같은 것을 인수하는 것도 고려해 볼만
   ## Data : 데이터가 Microsoft의 핵심 제품을 강화시킴
   - 스프레드시트는 비즈니스 컴퓨팅에 킬러앱이었고 Excel이 시장을 지배했고, 데이터 분석 및 금융 전문가 세대를 만들어냄
   - 하지만 중간자 적인 입장을 취하면서 개척지를 잃어버리고, 최신 생산성 도구들이 Excel의 멈춰버린 혁신의 갭을 채움
   ㅤ→ 취약한 UX는 Airtable 과 Asana가,
   ㅤ→ 취약한 데이터 기능들은 최신 CRUD기반 어플리케이션들이,
   ㅤ→ 취약한 커스터마이징 기능과 통합은 버티컬 소프트웨어 회사들이 나타날 자리를 내줌
   ㅤ→ 취약한 협업 기능은 Google Sheets의 자리를 만들었고,
   ㅤ→ 취약한 백엔드 아키텍처와 상호운용성이 최신 데이터 스택이 들어올 자리를 내어줌
   - Excel이 플랫폼의 잠재력을 깨닫는 대신, 그냥 훌륭한 어플리케이션으로 남음
   - Microsoft는 최신 데이터 분석가를 위한 것들을 많이 가지고 있음
   ㅤ→ Synapse를 이용한 데이터 웨어하우징
   ㅤ→ Data Factory를 이용한 데이터 파이프라이닝
   ㅤ→ PowerBI를 통한 시각화
   - 하지만 요즘 팀들은 Microsoft를 선택하지 않고 Fivetran + dbt + snowflake를 선택함
   - Microsoft는 비즈니스 데이터 경쟁에서 잃어버린 시간을 만회하기 위해 업계 최고의 회사들에 돈을 써야함
   - 개인적으로 ELT 단계의 각 회사들을 인수하는 것은 어떨까 함
   ㅤ→ E와 L 에서 최고는 Fivetran 이고, T에서 최고는 dbt 임
   - 이게 돌 하나로 3마리 새를 잡는 법임
   ㅤ→ Microsoft를 선도 제품들로 데이터 파이프라이닝에서 이길 수 있게 하고,
   ㅤ→ 최고 수준의 데이터 팀 수만개를 가져올 수 있고,
   ㅤ→ 그들을 Azure로 푸시할 수 있음
   - Microsoft의 기존 제품 스위트내에도 고객데이터를 가져올 수 있는 큰 기회들이 있음
   - 예를들어, Microsoft는 Salesforce와 경쟁하기 위해 최고의 위치에 있는 회사이기도 함
   - Microsoft의 CRM 제품인 Dynamics는 그 가능성의 일부임
   ## Depth : 깊이는 새로운 시장에서 Microsoft가 이기는 방법임
   - Microsoft의 역사에서 방어적인 제품군들은 대부분 덜 성공적이었음
   - Bing은 구글의 그늘아래 살고 있고, Surface는 iPad의 그늘에, Skype는 Zoom의 그늘아래 있음
   - 하지만 이 제품들은 엔터프라이즈에서의 강점이 아닌, 소비자 인터넷에서의 약점을 보상하기 위한 시도들 이었음
   - Microsoft가 엔터프라이즈 배포를 활용할 때는 방어적이라도 승리함
   - 내가 만약 Microsoft 제품 전략을 책임지고 있다면, 난 ARR $100m에 도달한 모든 엔터프라이즈 소프트웨어 회사들과 경쟁할 것
   - 그들의 고상한 미션과 AI기반 비젼을 고려할 때, 간단한 SaaS 제품의 복제를 시도하기엔 자부심이 너무 강할 수 있음
   - 하지만 페이스북은 새로운 스타트업의 제품을 자비없게 베끼는 것도 상대적으로 성공적인 전략이라는 것을 보여줬음
   - 신제품 라인을 개발하기 위해 내부에서 창업자정신을 독려하는 것은 도전적이 겠지만
   - 수백만달러 매출을 올리던 AWS를 Azure가 따라잡을 수 있었다면, 다른 카테고리에도 충분히 할 수 있음
   - 각 제품들은 Microsoft의 배포에서 혜택을 받을 것이고, 각 카테고리에서 적어도 2자리수 이상의 시장 점유율은 보장 되어 있음
   - 유행에 뒤쳐진 제국주의가 되는 것을 감수하더라도, 세계 최대 소프트웨어기업으로서 Microsoft는 모든 비즈니스 소프트웨어 카테고리에서 선두 제품을 가지고 있어야 함
   - 1990년대에는 윈도우, 오피스, 액셀 등을 가졌지만, 2010년에는 Microsoft가 모든 카테고리를 따라하기엔 비즈니스 소프트웨어 분야가 너무 빠르게 확대되었음
   - 대부분의 시장에서 따라잡기 위해 움직이고 있지만 내부 개발로는 충분하지 않음
   - M&A에 의해 보완되어야 함. 몇몇 아이디어는
   ㅤ→ DocuSign : 전자서명은 소프트웨어의 주요 트렌드 중 하나고 DocuSign 은 분명한 리더
   ㅤ→ Figma : 놀랍게도 Microsoft는 Adobe에 대한 대응이 없음. Figma 라면 Demographics 과 Depth 모두를 잡을 수 있음
   ㅤ→ Zoom : Teams의 영상 통화가 있지만 젊은 사용자들에게는 Zoom이 표준임. 웹 회의 마켓을 이길수 있는 기회이고, 현재 고객 기반과는 다른 사용자를 얻을 수 있는 기회
   - 위 예는 포괄적인 사례는 아님
   - Microsoft는 Bessemer Cloud Index에 있는 모든 회사들에 대해 Build(같은 걸 만들거나), Buy(사버리거나), Ignore(무시하거나) 하는 분류 작업을 해야함
   - 새로운 소프트웨어 회사를 Microsoft의 배포 엔진에 꼽음으로써 그들의 성장을 대폭 촉진(turbocharge)할 수 있음
   ㅤ→ 훌륭한 제품에 대해서는 시장 가격 이상을 지불할 능력도 있음
   - Microsoft가 새로운 소프트웨어 시장에서 경쟁하면, TAM을 확장하고, 영업비용을 낮추며, 올라탈 새로운 물결을 만들어내게 됨
   ## Gaming
   - 게임은 이 전략에 잘 맞지는 않으므로, $10T에 이르는 경로로서는 응집력이 없어 보일 수 있음
   - 하지만 그게 진정한 교훈 임 : ""그럴 필요가 없다는 것""
   - Microsoft는 본질적으로 홀딩 컴퍼니임
   - 새로운 인수나 제품들로 인해서 키울 필요 없이 자회사가 되어도 됨
   - 게임 맥락에서 블리자드는 Game Pass의 2500만 구독자를 위한 네트워크 효과를 구축하고, 게임 개발의 위험을 줄이는데 도움이 됨
   - 이제 Microsoft는 미국에서 가장 큰 게임 회사가 되었음. 중국 보다는 미국이 게임의 미래를 소유하는 것이 더 좋음
   - 게임은 엔터프라이즈의 이점에서 별개인 것 같지만, Microsoft는 복합기업(Conglomerate, 여러 기업이 하나로 연합된 거대 기업체)임
   ## $10T: Microsoft’s to lose
   - 핵심제품의 시장 점유율이 빅테크 결쟁자들에 비해 매우 낮다는걸 감안하면, $10T로 가는 길은 다른 플레이어들보다 Microsoft에게 달령 있음
   - Google이 시장점유율을 할 수 있는게 얼마나 될까? 이미 검색에서 이겨버렸는데
   - 아직 Microsoft는 당길 수 있는 성장 레버들이 많아 남아있음
   - 첫번째 $10회사가 되려면 카테고리 전반에 걸친 공격적인 M&A 및 제품 개발이 필요하며, 새로운 소프트웨어 시장에서 직접 경쟁하기 위해 자부심을 삼키는 것(pride-swallowing)도 필요함
   - Microsoft는 이를 실현할 자본과 인재 그리고 배포(distribution)를 보유하고 있음
   - 이 규모의 성장은 전례가 없지만, 제품군 전반에 걸쳐 있는 풍부한 기회는 $10T에 이르는 길을 열어줄 것
   # Part 3 스타트업을 위한 교훈
   - 세계에서 가장 큰 기술 기업으로서는 스타트업에 적용할 만한 교훈이 없어 보이지만,
   - 2010년대에 회사를 재가속 한 것과, $10T로 가는 길은 S커브, 복합 제품, M&A, 세컨드 무버가 가진 이점 등의 힘을 보여줌
   ## 실행보다 시장 Market over execution
   - 실행은 중요하지만, S커브를 타는 것이 기술에서 이기는 길
   - 스티브 발머가 Microsoft의 2010년대 부진에 대해서 비난을 받았음
   - 분명히 그는 Gate처럼 뛰어나지 않았고, 회사 문화는 정체 되어 있었음
   - 하지만 진짜 문제는 카테고리 였음
   ㅤ→ PC판매는 감소하고 있었지만, Microsoft는 그 성장에 베팅하고 있었음
   - 회사의 방향을 클라우드 인프라 및 비즈니스 소프트웨어의 성장으로 바꾸는 게 Microsoft에 새로운 생명을 불어넣었음(이에 대해서는 발머가 어느정도 인정받아야 함)
   - 전통적인 지혜에 따르면 창업자는 스타트업 성공의 유일한 결정요인이라고 함
   - 훌륭한 창업자는 꼭 필요하지만 충분하지는 않음
   - 좋은 제품과 빠르게 성장하는 카테고리가 점점 진정한 보틀넥이 되고 있음
   ## 인수적일 것 Be acquisitive
   - 현금과 자산이 있을때 인수하려는 태도를 취할 것
   - Nadella는 그의 공격적인 M&A 실적을 생각해보면 이걸 인정하는 것 같음
   - $10T를 달성하려면 인수 속도를 높여야함: $68.7B에 달하는 Blizzard 인수도 Microsoft 시총의 3% 밖에 되지 않음
   - 새로운 소프트웨어 시장이 표면적으로 안정되면서, 기술은 통합 시대로 접어들 것
   - 스타트업 M&A가 성장의 핵심 부분이 될 것
   - 밸류에이션이 충분한 후기 스타트업들은 M&A를 좀더 공격적으로 고려해야함
   ## 복합제품이 승리한다 Compound products win
   - 2010년대에는 소프트웨어 채택이 통합 제품을 만드는 능력을 뛰어넘었기 때문에 언번들링이 합리적이었음
   - 그 속도가 거꾸로 된다면, 리번들링을 보게 될까 ?
   - VC들의 클래식한 고려사항은 스타트업들이 기존 기업을 복사하기 전에, 기존 기업들이 스타트업의 기술을 복사 할수 있느냐 였음
   - 지난 20년간 대답은 거의 항상 no 였음
   - 스타트업들은 기존 기업의 유통력(distribution power)에 거의 영향을 받지 않는 것처럼 카테고리 전반에 걸쳐서 탈출하는 속도를 보여줬음
   - 하지만 그거에 속지말 것 : 실제로 소프트웨어에서는 번들링 효과가 있음
   - Parker Conrad의 Compound Startup 이론을 참고할 것
   - Office 365는 약점이 있지만 진정한 복합제품임 - Microsoft Teams는 나온자 3년만에 실리콘밸리가 사랑하는 Slack을 앞질렀음
   - 번들링의 힘은 너무 많은 표면적(Surface Area)가 있었기에 지난 20년간 명확하지 않았을 수 있음
   - 하지만 번들링의 강점은 앞으로 점점 더 분명해 질 것
   - 도구에 대한 피로와 단순성에 대한 편향이 점점 더 강력해 지고 있음
   ## 교차판매의 힘 The Power of Cross-Sell
   - Microsoft 는 이미 Fortune 1000 IT 부서에 배포하고 있음
   - 이걸 통해서 콜드스타트 보다 새로운 제품을 훨씬 더 쉽게 판매할 수 있음
   - 무수히 많은 제품 라인은 초점이 없는것 처럼 보이지만, Microsoft는 모든 FAANG보다 훨씬 더 많은 수익을 창출함
   ㅤ→ 이게 바로 교차판매의 힘
   - Marc Benioff는 이걸 이미 잘 이해하고 있음
   ㅤ→ Salesforce는 핵심 CRM제품보다 고객서비스 부분에서 더 많은 매출을 내고 있으며,
   ㅤ→ 이제는 마케팅과 분석을 손대고 있음
   - 실리콘밸리의 지혜는 단일 제품과 시장에 집중하라고 얘기함
   - 발머는 정반대의 행동을 했고, 여러 카테고리에 걸쳐 제품을 만들었음
   - 이것은 올바른 전략이었지만, 잘못된 시대에 한 것임
   ㅤ→ 독점 금지가 그 어느때보다 위협적인 2020년대에, 교차판매는 Microsoft가 독특한 위치에 자리잡게 만듬
   - 독점으로 죽음에 이를때까지 규제 받는 것보다, 난 차라리 많은 카테고리에서 30% 시장 점유율을 가질 것
   - 정의상, 교차 판매는 스타트업 보다는 기존 기업에 더 많은 이점이 있음
   - 하지만 이것은 스타트업들의 전략에 정보를 줌
   ㅤ→ 만약 당신의 기존 고객들에게 새로운 제품들을 추가로 판매하는데 작은 CAC(Customer Acquisition Cost)가 든다면
   ㅤ제품을 수평적으로 넓게 판매하는 것보다, 더 깊숙한 제품 스위트를 만드는게 유리함
   ## 선점 우위 효과는 과대 평가됨 First mover advantage is overrated
   - Azure는 4년이나 뒤에 나왔지만, AWS에 대한 진정한 경쟁 위협임
   - 우리는 스타트업 맥락에서도 이런 것을 보아왔음
   ㅤ→ Facebook 은 Myspace 와 Firendster 를 넘어섰고,
   ㅤ→ Ramp 는 이제 Brex에 진정한 위협이며
   ㅤ→ Modern Health 는 Lyra에 진정한 위협임
   - 후발주자(Second Mover)는 새로운 시장의 학습곡선을 단축시킴
   - 퍼스트 무버들에게 주는 교훈은 명확함 : 월계관에 안주하지 말 것
   - 하지만 이것은 후발주자에게도 고무적 : 당신이 생각하는 것보다 훨씬 더 많은 공간이 있을수 있음
   - 소매나 금융과 같은 산업의 경쟁도를 생각해 보라
   ㅤ→ 기술 분야는 포화지점에 도달하기 전에 새로운 회사를 위한 많은 여지가 있음
   ## 사용량 기반 가격 책정은 자신에 대한 베팅임 Consumption-based pricing is a bet on yourself
   - 사용량 기반 가격 책정은 고객과 가장 얼라인된 비즈니스 모델
   - 그 반대는 고격 경험이 좋지 않음: 왜 받기도 전에, 혹은 전혀 사용하지 않는 것에 비용을 지불할까?
   - 당연하게도 빠르게 성장하는 회사들에는 사용량 기반 가격플랜이 있음 : AWS, Azure, GCP, Snowflake, Twilio, Scale
   - 고객이 갱신을 보장하지 않기 때문에 순수한 SaaS들보다는 덜 ""안전""하다고 느낄수 있지만, 이는 채택 장벽을 낮춤
   - 사용량 기반 가격 책정은 당신 제품의 품질에 베팅하는 가장 좋은 방법: 제품과 고객의 성공과 세일즈를 완벽하게 얼라인 시킴
   - 만약 고객이 당신의 제품에 인게이징 한다면 서로 윈-윈
   ## 자본 : 진정한 해자 - Capital : a true moat
   - 기술 산업은 자본을 해자라고 얘기하지 않음. 아마도 이미 자본을 확보한 사람들에게만 이익을 주기 때문
   - 하지만 Azure는 그것이 효과가 있다는 것을 증명했음. 규모의 경제를 달성하기 위해 수십억 달러를 썼지만, 그 보상은 비교적 큰 수익센터(Profit center)임
   - 최근 스타트업 역사에서 대규모 자본 규모는 종종 기업의 궤도를 바꾸지 못했음 : Softbank, Uber 같은..
   - 진정한 규모의 자본을 소화시킬수 있는 능력은 갖춘 기업을 얼마 없음. 이게 동작한다면 정말 워킹함(When it works, it can really work)
   - 메가프로젝트의 성공은 큰 회사내에서 언제 발생하는지 어려울 수 있음
   - Azure 와 AWS는 금세기의 가장 성공적인 두개 메가 프로젝트이지만, 훨씬 더 큰 기업 내부에 있어서 수년간 대중에게 숨겨져 있었음
   - 글로벌 위성 인터넷 네트워크인 Starlink는 SpaceX의 핵심 발사 사업 때문에 가능하지만, 우리 시대의 가장 성공적인 메가 프로젝트 중 하나가 될 수 있음
   # 결론
   - 기술 분야에 있는 모든 사람들은 위대한 사람에게서 배우기 위해 시간을 할애해야 하며, Microsoft는 특별히 주목할만 함
   - 그렇다면 Microsoft는 무엇인가?
   ㅤ→ 2000년대에는 Windows 회사 였고,
   ㅤ→ 2010년대에는 Office 회사였고
   ㅤ→ 2020년대에는 Cloud 회사임
   - 이는 핵심 장점인 엔터프라이즈 배포, 사용자 신뢰, 엔지니어링 인재 소용돌이(Vertex)의 합 임
   - 이런 이점들을 봤을 때 나는 Microsoft가 첫번째 $10T 회사가 될거라는 것에 돈을 건다
   - Azure만 해도 수천억달러 매출을 낼 경로가 있으며, 오늘날 가장 큰 독립회사가 될수 있음
   - $1T의 매출을 내려면 모든 소프트웨어 시장에 걸쳐서 제품의 확장과 M&A가 필요함
   - 그리고 스타트업들에게는 Microsoft는 교훈의 보고임 : 유통, 제품 번들링, M&A 및 복합 성장의 힘을 가르쳐 줌

   내용 죽여주네요. 감사합니다.

   좋은 내용 정리 감사합니다.

   우와! 정말 좋은 내용으로 가득차있네요.
   소개해주셔서 감사합니다.
"
"https://news.hada.io/topic?id=5905","Ask GN: 커패시터 측정 방법이 따로 있나요?? ,,,","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ask GN: 커패시터 측정 방법이 따로 있나요?? ,,,

   회사에 멀티미터기가 여러대 있는데
   커패시터는 측정할 때, 멀티미터기마다 값이 다릅니다 ,,,
   또 어떤 커패시터는 계속 OL 이라고만 떠요 ,,
   범위 문제인지 싶어서
   pF 부터 mF 까지 다 고쳐봤는데도 계속 OL 뜹니다,,, ,,, Auto Range도 마찬가지고요 ,,,
   제가 이상하게 재는건가요??
   그냥 저항 측정하듯이 찝어보는데 ,,,
   방향도 계속 바꿔보기도 했습니다 ,,

   현직 엔지니어 입니다.
   우선 'OL' 이라고 뜨는 원인은 'Open Loop' 상태일 경우입니다.
   원인을 살펴보면,
   1. 계측기의 측정 범위를 벗어남
   2. 계측 소자의 불량
   3. 계측 소자와 연결된 소자의 측정 간섭... 등 입니다.
   가장 흔하게 범하는 실수 들 중에는 PCB 기판 등에 실장이 된 채로 측정 하시면 연결된 소자들이 간섭하여 측정 오류가 빈번하게 발생합니다.
   측정을 원하시는 Capacitor가 DIP 타입인지 SMD 타입인지 모르겠지만 PCB 기판에서 제거 하시거나 한쪽 다리만 기판에서 떼어내신 후 측정해 보세요.
   떼어내신 뒤 측정하셨을 때 'OL' 상태라면 Capacitor 불량일 확률이 높습니다.
   그리고 Capacitor의 정확한 계측을 원하시면 Multimeter 보다 LCR Meter 장비를 사용하시는 것을 권해드립니다.

   우와아.. 답변 감사합니다. (답변을 봐도 이해는 못하고 있습니다..)

   저항측정할때 어디 단선이 있으면 OL 뜨던데, 캐패시터도 소자 자체에 이상이 생겨서 그런게 아닐까요?
"
"https://news.hada.io/topic?id=5940","web3/NFT: 이게 최선입니까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          web3/NFT: 이게 최선입니까?

   왜 새로운 기술이 등장할 때는 항상 스캠과 혼돈이 존재해야 할까? 그건 어쩔 수 없는 걸까? 아니면 기술을 만드는 사람이 충분한 고려를 이제는 하면서 유저들에게 소개를 해야 하는 걸까? 인터넷 쇼핑이 처음 나왔을 때, 사람들은 선결제 후 물건이 안 올 것에 대한 불안감이 컸고, 실제로 결제만 받고 물건을 안 보내는 식의 스캠이 존재했다고 한다.
   그렇게 사람들이 의심과 불안함을 느끼게 하던 인터넷이지만 결국은 인간의 삶을 송두리 째 바꿔놓을 정도로 큰 영향을 주었듯이, 나 또한 지금 블락 체인 혹은 나아가 web3가 일러 보이고 와닿지 않을 때가 있지만 또 이게 어떠한 영향을 미칠지 곰곰이 생각은 해봐야 한다고 생각한다.
   web3/NFT/DAO 입문 후 여러 가지 프로젝트에 직간접적으로 참여도 해보고 하면서, 어떻게 보면 이러한 새로운 기술을 기반으로 한 철학 혹은 개념이 자리에 잡긴 아직 이르다는 것을 너무 잘 알지만, 그래도 정말 이게 최선인지 싶은 것들이 많이 보임.
   더 읽기: https://saconyreview.glivery.co.kr/p/2274495848821
"
"https://news.hada.io/topic?id=5899","OpenMoji - 디자이너/개발자를 위한 오픈소스 이모지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    OpenMoji - 디자이너/개발자를 위한 오픈소스 이모지

   - Unicode Emoji 스탠다드 준수(현재 v13.1)
   - 3914개의 이모지
   - 컬러 및 아웃라인 이모지 지원
   - Fitzpatrick 스킨톤 스케일 지원
   - 한개의 스타일 가이드로 일관성 있음
   - CC-BY-SA 4.0 라이센스

   이모지가 많은데, 뭔가 딱 찾아서 쓰려면 잘 나오지 않더라고요. 혹시 팁이 있으신 분...?

   주관적인 답변이지만...
   영미권에서 자주 사용하는 단어랑 한국인이 사용하는 단어랑 다르더라구요 ...
   Google 이나 Pinterest 에서 이미지 검색해서 나오는 정정된 연관단어로 다시 검색하거나
   https://materialdesignicons.com/ 에서 검색한 결과로 다시 검색하거나 합니다.

   의외로 핑크색 하트가 아직까지도 이모지 표준에 없더라구요.
"
"https://news.hada.io/topic?id=5931","Discord, 포럼과 비슷한 새로운 커뮤니티 기능 실험 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Discord, 포럼과 비슷한 새로운 커뮤니티 기능 실험 중

   - 실시간으로 흘러가는 대화창 외에 진행 중인 대화들을 찾고 참여하는 기능을 도입
   ㅤ→ 포럼과 같은 채널을 구성
   ㅤ→ Reddit처럼 지나간 대화들도 쉽게 보고 참여 가능
   - 각 채널의 주요 토픽들을 뽑아서 빠르게 tl;dr 스타일 스냅샷을 보는 기능도 제공
   - 모더레이터/어드민이 커뮤니티를 관리할 수 있는 새로운 도구와 자동화 기능 포함

   실시간 대화 도구들이 가진 단점을 조금씩 보완해 가네요.
   슬랙이 이런 기능을 도입해야 하지 않을까 싶은데.. 확실히 디스코드가 잘하는 것 같아요

   해당 기능 보니 슬랙에 있었으면 정말 좋을 것 같아 보이네요. 프로젝트 포럼을 슬랙대신 디스코드 쓰는 프로젝트가 종종 보이던데 나중에 디스코드가 더 뺏어갈 것 같네요.
"
"https://news.hada.io/topic?id=5893","WebVM, 브라우저에서 실행하는 서버리스 x86 가상머신 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    WebVM, 브라우저에서 실행하는 서버리스 x86 가상머신

   - 수정하지 않은 Debian 바이너리를 브라우저에서 실행하는 Linux 가상 환경
   ㅤ→ 쉘에서 python3, gcc, vim 등 사용
   - WebAssembly 기반 가상화 플랫폼인 CheerpX 를 이용
   ㅤ→ x86 인터프리터
   ㅤ→ x86-to-WASM JIT 컴파일러
   ㅤ→ Linux syscall 에뮬레이터
   ㅤ→ Ext2 기반의 가상 블록 파일시스템
   ㅤ→ IndexedDB 에 수정된 블록을 저장하여 브라우저상에선 변경내용 유지

   가능하리라 생각은 했지만 아 너무 빠른데요ㅎㅎ

   소개글 : https://leaningtech.com/webvm-server-less-x86-virtual-machines-in-the-…
"
"https://news.hada.io/topic?id=5904","Show GN: 개발 실력을 가장 잘 표현해주는 진짜개발자 이력서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Show GN: 개발 실력을 가장 잘 표현해주는 진짜개발자 이력서

   1.
   글 쓰는 것을 힘들어 하는 개발자를 위해, 키워드 몇 개만 넣어도 완성되는 이력서로 업그레이드 했습니다. 형용사, 감탄사 따위를 적을 공간을 아예 없앴습니다. 프로그램, 프레임워크, 라이브러리 등의 명사와 동사만 적으면 내가 이렇게 초고수 개발자였어? 라는 자신감을 가지게 됩니다.
   2.
   입력하는 과정을 피로감이 거의 없도록 이력서 전용 Editor를 설계해서 개발했습니다. 차례차례 완성의 즐거움을 느끼실 수 있어 이력서 작성을 포기하는 것을 최소화합니다. 점점 이력서를 만들어 가는 과정에서 마치 합격한 것 같은 환각을 경험하실 수 있습니다.
   3.
   대부분 노안을 가진 것으로 추정되는 채용 담당자를 위해 폰트 가독성을 극대화했습니다. 채용 담당자가 이력서를 읽기 싫어도 글자가 저절로 눈에 들어오는 기적을 맛보실 수 있습니다. 이제, 채용 마감 시간에 마지막으로 이력서를 제출해도 안심하실 수 있습니다.
   채용 담당자가 찾는, 정확한 ""이력서 규칙""을 따르는 이력서 템플릿을 지금 사용해보세요!

   네카에서 면접관을 계속 해 온 경험으로는 국내에서는 해외의 1페이지 레쥬메 보다는 경력자의 경우 프로젝트 소개(기술 스택, 해결한 문제, 규모 등) 항목을 좀 더 상세히 보긴 합니다. 프로젝트 내용에서 기술 스택을 태그로 넣은게 디자인은 좋아 보이긴 하지만 가독성은 잘 모르겠네요.
   기존에 이미 이력서를 따로 관리하는 분들에게는 이 포맷으로 다시 작성하는게 좀 피곤할 수도 있겠지만, 새로 작성해서 관리하실려는 분들에게는 괜찮은 서비스인 거 같습니다. 재직 중인 회사 지원서도 이런 입력 폼이면 좋을 거 같네요.
   it 특화 이력서이긴 하지만 좀 포맷을 다양화해서 일반 기업에 sass 형태로 제공하는 것도 고려해볼 수 있을 듯.

   안녕하세요.
   ""프로젝트 섹션 속의 기술스택""은 개별 가독성보다는 추세 정도로 생각했었습니다. 왜냐하면, 프로젝트는 대부분 팀 단위이며 특정 분야에 대해 개발을 하므로 가독성을 높이면 이것도 하고 저것도 하는 만능 개발자로 보일 수 있을 것 같아서입니다.
   이 모호한 부분을 보강하기 위해 별도로 ""기술스택"" 섹션을 구분해서, 기술적인 전문성을 가독성 높게 보여주는 것이 좋겠다고 생각했습니다.
   재직 중인 회사에서 따라 하지 않으면 좋겠습니다. 무서워요. 💀 살아남는 이력서 서비스가 싶습니다. ㅜㅜ
   소중한 피드백 감사드립니다.😅

   ""테마포레스트, 해외 이력서 템플릿 중 가장 인기있는 템플릿""에 대한 레퍼런스를 공유해주실 수 있으신가요? 제가 본 대부분의 좋은 이력서는 많아봤자 두 페이지, 짧으면 한 페이지에 담기는 해외 레쥬메 스타일이었거든요.
   제가 수백개의 이력서를 본 건 아닙니다만 아직 사람을 채용해보지 않은 분이 만든 서비스라는 느낌을 굉장히 강하게 받았습니다. <길게 자신의 모든 것을 드러내는> 것을 지향하는 듯해요.

   1. 주제 포레스트 외에 거의 모든 해외 Resume 템플릿, 구글링 이미지 검색 결과 등을 보고 참조했습니다. 자세하게 자료로 만들지는 않아서 공유해 드릴 만한 게 없네요. 2명이서 개발하면 그런 레퍼런스를 잘 만들면서 진행하기가 어려워서요. 죄송합니다.
   2. 해외 Resume은 말씀하신 대로 요약본(1~2페이지)이라고 생각합니다. 하지만 국내는 이력서 전부를 보여주는 Master CV 개념을 더 선호하는 것 같더군요. 그래서 웹 이력서는 Master CV 방식으로 개발한 것입니다. 한 달쯤 뒤에 PDF 요약본 Resume 기능을 추가로 선보일 예정입니다.
   3. 앗! 정말 예리하신 질문입니다. 제가 구직하는 과정에서 이력서가 필요해서 만들고 있는 것이 진짜개발자입니다. 부족하고 모자란 부분이 있더라도 너그러이 이해해 주시면 굉장히 기쁠 것 같습니다. 점점 더 좋은 이력서로 보답하겠습니다.

   확실히 해외와 달리 국내에선 더 긴 이력서를 선호하는 경향이 뚜렷합니다. 하지만 이런 스타일의 장문을 선호하는 건 아닌 것 같은데... 저도 경험이 엄청 많진 않아서 딱 이러이러하다 고 얘기하기는 어렵네요. 다른 시니어 개발자 분들이 좀 도와주세요~~ㅎㅎ
   원래 이 단락에 예제 이력서를 피드백했는데 너무 주제넘는 것 같고 또 사견이 많이 끼어있어서 전부 지원했습니다. ㅎㅎ 구체적인 예시가 있을 땐 이걸 이렇게 했으면 좋겠다 싶은데 제너럴하게 말할 수 있었으면 좋겠네요. 아무튼 화이팅입니다~

   감사합니다!!!!!! 😅

   사이트 정말 깔끔하네요!
   이력서 첫화면이 ""OOO 이력서"" 만 나와서 조금 심심한 것도 같은데, 해당 화면도 커스터 마이징 가능한지 궁금합니다.
   개발자님 이력서에 있는 기술 스택 부분처럼 설명을 쓰려면 약간의 노력이 필요할 것 같은데, 혹시 이 부분도 약간의 자동완성? 처럼 제공하면 어떨까 하네요. ^^;

   피드백 감사합니다.
   1. 이력서 첫 화면을 커스터마이징 한다는 생각을 못해 봤는데요 가능하게 하는 방향으로 고민하겠습니다.
   여쭤보고 싶은 게 있는데요, 개발자가 디자인 커스터마이징에 관심이 있을까요? 오히려 더 힘들게 느끼지는 않을지 모르겠습니다.
   커스터마이징을 제한함으로써 콘텐츠의 가독성에 집중하게 만드는 게 컨셉이였거든요. 하여간 이 부분은 더 깊이 고민해 보겠습니다^^
   2. 기술 스택 부분에 자동 완성을 제공하는 것이 좋은가? 제공하지 않는 것이 좋은가?로 논쟁이 있었습니다. 그런데 생각해 보면 기술별로 표준화된 좋은 문장을 제안해 주면 채용 담당자로서는 변별력이 없어지게 되는 것 같더군요. 구직자와 구인자 양쪽에서 균형감을 잡는 것이 중요하다고 판단해서 콘텐츠에 영향을 주는 기능을 없애게 되었습니다.
   사실 이것은 제 개발 능력의 한계일 수도 있다고 생각합니다. ㅜㅜ
   계속 고민해서 더 좋은 이력서로 업그레이드 해 나가겠습니다. 의견 고맙습니다. ^^

   아 디자인 커스터마이징을 말씀드린 것은 아니고요.
   첫 페이지에 요약 같은 것을 추가하는 것은 어떨까를 얘기하는 것이었습니다.
   보통 원라인 이라고 부르는 자기 소개 문구와 자신 있는 주요 기술 몇개만 나열하게 해주면 어떨까 했어요.
   스타트업 피칭 덱 첫페이지 처럼 ""만화를 위한 Netflix 를 만듭니다"" 같은 문구를 넣을 수 있게요.
   저도 예전엔 이력서 맨 윗줄에 ""호기심이 강한 개발자"" 라는 문구를 추가하기도 했거든요.
   실제 이력서 페이지로 넘어가면 프로필 사진과 지도 때문에 프로필 옆에 있는 소개문구가 눈에 잘 안 띄는것 같아요.

   오! 멋진 조언입니다!
   그러면 이력서 상단의 한 줄 자기소개 글이 ""홍길동 이력서"" 타이틀 하단에 들어가는 것으로 이해하면 될까요?
   되게 Cool 할 것 같은데요? 멋집니다!!!!!! 개발 고고!!!!
"
"https://news.hada.io/topic?id=5886","Ask GN: 만족스러운 사이드 프로젝트들의 개발 경험중, 공통점은 어떤 게 있었나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Ask GN: 만족스러운 사이드 프로젝트들의 개발 경험중, 공통점은 어떤 게 있었나요?

   저는 '적절한 시기에 개밥 먹기' 였던 것 같아요.
   그게 적용된 프로젝트들은...
   - 사내에서 개발하다가 답답해서 만든 사내 개발툴의 기능 실증용 프로그램은 2주만에 나왔고. 그걸 써보면서 개발했고, 만족스러워서 그 개발툴에서 확장하고, 개밥먹고, 공개하고.. 를 반복한 1년째인 지금은 엄청 괜찮게 쓰고 있어요. 지속적으로 사용하면서 괜찮을 것 같은 점을 대충 만들고. 그걸 써본 다음, 괜찮으면 마지막에 다듬었기 때문에 괜찮은 것 같네요.
   - 제 일정의 대부분이 뻔한 것 같아서( 출근 => 개발 => 퇴근 => 개발/게임/글쓰기 => 잠 ) 자동 뽀모도로 타이머를 만들어봤는데요. 이 친구도 2주간 만든 다음 2주동안 써봤어요. 하지만 시장에 있는 것들에 비해서 큰 메리트를 못 느꼈고. 그래서 버렸어요.
   - cron for notion이라는 '스캐쥴마다 자동 노션 문서 생성기' 오픈 소스 프로젝트를 만들고 있는데요. 이 친구의 거대한 목표는 Web 프론트엔드로 스캐쥴을 짜서 Backend로 스캐쥴을 보내고 어마어마하고 무시무시한 로직을 거쳐 문서를 생성할 수 있는 REST API가 있는 많은 플렛폼을 지원하는 계획입니다만... 지금은 CLI 명령줄로 JSON을 보내면 예쁘게 문서를 찍어주는 귀여운 프로그램이에요. 이 친구도 쉬는 시간에 2주동안 만들었고. 이름과 달리 YouTrack도 지원하고, cron이 아니라 CLI 콜을 해줘야 하지만. 엄청 쓸만하다는 걸 깨달았죠.

   그게 적용되지 않은 프로젝트들은...
   - 고등학교 때는 거대한 오픈월드 MMORPG를 만들고 싶었고... 8주간 벌판을 뛰어다니는 캐릭터와 놀다가 접었어요.
   - 물리엔진을 이용해서 대난투 + 슈팅 게임을 만들었었는데요. 개발 완료와 동시에 제출을 해야했고. 훨씬 재미있을 수 있는 게임을 그냥 그런 게임으로 바꿔버렸죠.
   - 고등학교 때의 저는 모바일에서 터치스크린 제스쳐로 RPG를 할수 있으면 굉장히 멋질 줄 알았어요. 적어도 제 기획서 안에서는 멋졌는데, 6개월 후에 그걸 지원한 게임을 해본 다음에 알았죠 : 아. 구리구나! 6개월 동안 저는 제스쳐 인식만 짰었고, 그래서 그 공모전에서 떨어졌어요.
   - 기타 이름을 짓지도 못한체 죽어버린 수많은 프로젝트들

   여러분은 만족스러운 사이드 프로젝트들의 개발 경험중 공통점이 어떤 게 있으셨나요 'ㅁ '?

   말씀하신 개밥먹기랑 비슷한데요,
   제가 CD 모으던 시절에 MP3에 앨범 정보 태깅해주는 도구를 만들어서 배포도 하고 오래썼는데, 스트리밍으로 넘어오면서 CD를 안사니 요즘은 안쓰게 되었습니다. 근데 아직도 이 도구 기억해 주시는 분들이 있더라고요.
   원어데이 류 사이트가 많아졌을때 묶어서 보여주던 지름도우미도 제 필요에 의해서 만든거라 쓸만한 물품들이 줄어들고 사이트가 줄어들면서 안쓰게 되었고요.
   중요한건 ""내 필요에 의해서 만들었지만, 남들도 쓸만한 도구들""이 가장 오래 남는 것 같습니다.
   지름도우미는 어필리에이트 덕분에 약간의 수익이 나기도 했는데, 사이드 프로젝트 들도 그냥 광고 붙이는 것 말고 다양한 수익모델을 시도하는게 더 좋을 것 같아요. 그래야 더 오래 운영할 수 있다고 봅니다.
"
"https://news.hada.io/topic?id=5882","Stockle - 미국 주식 티커로 풀어보는 Wordle","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Stockle - 미국 주식 티커로 풀어보는 Wordle

   - 4글자 짜리 미국 주식 티커 / 브라질 주식 티커 맞추기
   ㅤ→ 회사 티커 및 ETF 티커도 가능
   - 오픈소스

   소스코드 : https://github.com/leonidasv/stockle
   Wordle 클론들은 대부분 https://github.com/hannahcode/word-guessing-game 의 포크네요
"
"https://news.hada.io/topic?id=5918","업종별 이메일 마케팅 벤치마크 보고서 2022","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       업종별 이메일 마케팅 벤치마크 보고서 2022

   - CampaignMonitor가 2021년에 보낸 1000억개의 이메일 데이터를 정리
   - 업종별 평균 오픈율 / CTR(클릭율) / CTOR(오픈된 메일의 클릭율) / 구독해지율
   ㅤ→ 메일 성공율이 가장 높은 업종은 ""교육"" : 오픈율 28.5% 에 CTR 4.4%
   - 애플 iOS15의 MPP(Mail Privacy Protection)가 적용 되면서 오픈율은 올라가지만 CTOR은 내려감
   ㅤ→ 모든 이메일을 pre-fetching 해서 다 오픈된 것처럼 보이게 하여 오픈율 추적을 못하게 만듬
   - 일별 벤치마크
   ㅤ→ 오픈율이 높은 날은 월요일
   ㅤ→ CTR이 높은 날은 화요일
   ㅤ→ CTOR이 높은 날은 수요일과 화요일
   ㅤ→ 이메일 보내기 가장 안 좋은 날은 일요일/토요일

   전 주말의 conversion rate 가 평일보다 약 두배정도 높다는 자료를 보고 주말마다 메일을 발송하고 있었습니다.
   https://marketingcharts.com/industries/media-and-entertainment-70354/ (yesmail 이란 곳의 분석인데, 원본 링크는 없어졌나 보네요.)
   링크의 분석은 5년 전 것이라, 요즘이랑은 환경이 많이 다를수도 있겠네요. 1000억개에 비해 분석 데이터가 훨씬 적기도(70억개) 하구요.

   긱뉴스 위클리는 월요일 오전에 발송됩니다 ^^;
   아직도 구독 안하셨다면 여기서! https://news.hada.io/weekly
"
"https://news.hada.io/topic?id=5874","ar5iv - arXiv의 PDf를 HTML5로 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ar5iv - arXiv의 PDf를 HTML5로 보기

   - 코넬대학교가 운영하는 무료 논문 저장 사이트 arXiv에 공개된 논문을 HTML5로 볼 수 있게 변환하는 사이트
   ㅤ→ arXiv 주소를 ar5iv 로 바꾸면 바로 동작
   - Tex 로 등록된 것을 LaTeXML로 변환
   - 실시간 프리뷰는 아님
   - 여러개의 리비전이 있는 경우 첫번째 v1 만 표시됨
   - Rust 오픈소스

   이렇게 주소만 바꿔서 동작하는 사이트들이 종종 보이네요
   - github.com 을 github.dev 또는 github1s.com 으로
   - twitter.com 을 nitter.net 으로
   ㅤ→ https://nitter.net/GeekNewsBot
"
"https://news.hada.io/topic?id=5946","오버플로우 없이 2개 unsigned int의 평균 구하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    오버플로우 없이 2개 unsigned int의 평균 구하기

   - 더해서 2로 나누는 것은 오버플로우가 발생
   ㅤ→ (a + b) / 2
   - 둘중에 큰 수를 알면 두 값의 차이를 작은 수에 더해서 2로 나누는 것도 가능
   ㅤ→ low + (high - low) / 2
   - 어떤게 큰 수인지 몰라도 가능한 알고리듬은 2016년에 특허가 만료됨
   ㅤ→ (a / 2) + (b / 2) + (a & b & 1)
   - SWAR : SIMD within a register
   ㅤ→ (a & b) + (a ^ b) / 2
   - 컴파일러가 64비트를 지원한다면 캐스팅
   ㅤ→ ((unsigned long long)a + b) / 2
   * 그리고 그 다음은 프로세서별 어셈블리 코드들.. 원문을 참고 하세요

   레이몬드 첸의 블로그 The Old New Thing 은 윈도우 개발 뒷얘기 부터 다양한 주제를 다루고 있습니다.
   국내에는 ""레이몬드 첸의 윈도우 개발 282 스토리"" 라고 번역서가 나왔었지만 현재는 절판입니다.
"
"https://news.hada.io/topic?id=5955","BeeWare - Python 크로스플랫폼 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      BeeWare - Python 크로스플랫폼 오픈소스

   - 파이썬 으로 작성한 앱을 iOS/Android/맥/리눅스/윈도우 등에 배포하게 해주는 툴킷 스위트
   - 크로스 플랫폼 위젯 툴킷인 Toga로 Native UI 지원
   - Briefcase 가 파이썬 프로젝트를 네이티브 앱으로 변환
   ㅤ→ 맥은 .app
   ㅤ→ 윈도우는 MSI 인스톨러
   ㅤ→ Linux는 AppImage
   ㅤ→ iOS는 XCode 프로젝트
   ㅤ→ Android는 Gradle 프로젝트

   이런것도 만들어줘서 좋았는데 이건 업데이트를 안하더라고요
   https://github.com/beeware/ouroboros
"
"https://news.hada.io/topic?id=5930","라인 12년차 PM 왈 — “인성이 실력이다" - 좌충우돌 스따뜨업 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               라인 12년차 PM 왈 — “인성이 실력이다"" - 좌충우돌 스따뜨업 이야기

   라인 12년차 PM 인터뷰
   PM은 어떻게 성장하는가?
   마케팅 팀과 어떤관계를 가져야 하는가?
   유저와 시장은 어떻게 분석을 하는가?
   10년전 자신에게 해주고 싶은 말은?
   5년 후 자신에게 바라는 것은?
"
"https://news.hada.io/topic?id=5892","Reshape - 다운타임 없는 Postgres용 스키마 이관 도구 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Reshape - 다운타임 없는 Postgres용 스키마 이관 도구 오픈소스

   - 사용하기 쉬운 CLI 도구
   - 다운타임이 필요하거나 여러단계의 수작업이 필요한 복잡한 스키마 이관을 자동으로 처리
   - 이관중에 이전 스키마와 새로운 스키마를 동시에 사용 가능하게 하고, 점진적으로 롤 아웃 가능
   - 과도한 Locking 없이 모든 변경을 수행하고, 다른 쿼리를 차단하여 발생되는 다운타임을 회피
   - PostgreSQL 12 이상. 맥 & 리눅스 바이너리 제공
"
"https://news.hada.io/topic?id=5881","Clean Code 라는 건 없습니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Clean Code 라는 건 없습니다

     * 사람들이 '클린'코드를 위해 노력하지만, '클린' 이란건 유용한 척도가 아님
     * 코드는 단순히 '클린'할수 없음. 왜냐하면 '클린' 이란건 코드에 대해서는 아무 것도 설명하지 못함
     * 사람들이 코드가 클린하다고 하는 것은, 보통 코드가 어떤 방식으로든 훌륭하기 때문

클린코드는 좋은 코드가 맞을까?

     * 코드는 여러가지 이유로 훌륭할 수 있음
       ㅤ→ 읽기 쉬운, 이해하기 쉬운, 간단한, 성능 좋은, 안전한, 우아한, 테스트 가능한, 캡슐화된, 확장가능한, 유지보수 가능한, 재사용 가능한..
     * 그러나 이러한 특성들은 어떤 면에서는 서로 상충됨
       ㅤ→ 가장 단순한 코드는 아마도 가장 테스트하기 쉽지는 않을 것
       ㅤ→ 인터페이스와 주입된 종속성은 테스트를 편리하게 하지만, 단순성과는 거리가 있음
       ㅤ→ 싱글톤을 많이 쓰면 이해하기는 쉽지만, 유지보수 가능한 어플리케이션은 아닐 수 있음
     * 이런것중 일부는 근본적으로 반대되는 것들이라 동시에 모두 충족하기는 어려울수 도 있음
       ㅤ→ 엔지니어링은 Trade-off(절충) 이므로, 여기서 얘기하는 절충안을 가지고 팀에서 논의 해보는 것도 가능할 것

코드가 훌륭하다면, 우린 ""왜 그런지""를 이야기 해야함

     * 누군가 솔루션이 '클린' 하다고 얘기할 때, 그들은 그 이유에 대해서 합리화 하지 못하고 그냥 더 나은 선택이라고만 얘기하는 것
     * 기술 솔루션에 대해 건설적인 토론을 하려면 하나의 솔루션이 다른 솔루션보다 나은 이유를 명확히 설명할 수 있어야 함
       ㅤ→ 그냥 '클린하다' 대신 '디커플링 되어있고, 이해하기 쉽고, 테스트하기 좋고..'

정확한 용어를 사용해야 함

     * 코딩은 일반적으로 팀 스포츠임. 혼자 해킹할 때는 맘대로 할 수 있지만, 팀과 일할때는 아이디어를 논의해야함
     * 특정 언어를 사용하여 기술 솔루션에 대해 토론하고, 팀 전체가 공통적인 이해를 가지는 것은 서로를 이해하는데 매우 중요함
     * '클린 코드' 라는 말은 모든 사람들에게 각기 다름
       ㅤ→ 누군가는 아키텍처가 잘 정의되어서, 누군가에겐 코드가 일관된 서식 스타일로 간단하게 짜여있어서..
     * '캡슐화' '테스트 가능한', '재사용 가능한' 같은 단어들은 우리가 모두 동의하는 뜻을 가지고 있음
     * 코드 특성을 설명하는 보다 구체적인 단어를 사용할 때 우리가 Same Page(이해하는 것이 같다)에 있다는 것을 확신하게 됨
     * '클린' 은 '좋다'와 같은 정도의 정밀도를 가지고 있음

그렇다면 '클린 코드'는 뭐냐 ?

     * 나는 코드를 '클린'하다고 설명할 때는, '코드가 좋기는 한데 그 이유를 완전히 확신할 수 없는 경우가 많다'는 결론에 도달했음
       ㅤ→ 또는 코드가 좋은 이유를 알고 있지만 명확하게 설명한 단어를 찾지 못할 때
     * 그런 직관(Intuition)을 키우는 것도 좋지만 거기서 멈춰서는 안됨. 좀 더 깊게 파고들어서 '왜 이 코드가 좋은지'를 이해하려고 해야함
       ㅤ→ 이 코드에는 다른 것에는 없는 다른 특성이 있나? 그리고 그 특성이 우리 프로젝트에 가장 적합할까? 아마도 그게 올바른 솔루션이 아닐 수 있음
     * 클린 코드가 필요한 것이 아니라 ______ 코드가 필요하다는 것을 확신할 수 있기를 바람

   좋은 글 감사합니다 ~~

   레거시코드 함부로 발로 차지 마라
   너는 누구에게 한번이라도 첫번째 requirement를 충족시켜봤느냐

   공감합니다.

   '그 책'에서 저자가 말한 클린코드는 이 중 '이해하기 쉬운', '테스트 가능한'에 초점이 맞춰져 있었던 것 같습니다. 물론 둘 다 아주 중요한 척도라고 생각합니다. 하지만 아직 정형화되지 않은 스펙이나 완성되지 않은 라이브러리 때문에 소위 말하는 'hack'을 쓰는 경우가 더러 있고, 이렇듯 프로그램의 퀄리티를 위해 코드의 퀄리티를 포기하는 부분은 불가피한 것 같습니다.

   공감합니다. “클린”을 “고품질”이라고 볼 때, (와인버그가 말했듯) 품질은 누군가에게 가치있는 무언가니까, 품질에 대한 기준과 정의가 팀 안에서 필요하다고 생각해요.

   애매 모호하게 '클린 코드' 라고 말하지 말고 콕 찝어서 얘기하자고 주장하는 글입니다.
   이에 대해서는 해커뉴스에서도 '클린 코드'의 해석에 대해서 이런 저런 말들이 있습니다. 댓글도 함께 보세요
   There’s No Such Thing as Clean Code https://news.ycombinator.com/item?id=30111516
   주제는 조금 다르지만 예전에 올라왔던 아래 글도 참고 하세요
   - 잘가, 클린 코드 [번역본] https://news.hada.io/topic?id=1321
"
"https://news.hada.io/topic?id=5980","njt - npm jump to","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           njt - npm jump to

   - 검색 필요없이 npm 패키지 관련 사이트로 한번에 보내주는 유틸리티
   njt [dest]
   - 기본은 npmjs 페이지
   - h : 홈페이지
   - g : github
   - c : changelog
   - i : issues
   - r : releases
   - b : package cost estimation on bundlephobia.com
   - 크롬 확장, Alfred, VSCode 확장 등에서 바로 이용 가능
"
"https://news.hada.io/topic?id=5966","Ask GN: 여러분의 닉네임은 어떻게 만들어졌나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask GN: 여러분의 닉네임은 어떻게 만들어졌나요?

   제 2의 이름이라 할 수 있는, 여러분의 닉네임이 만들어진 방법? 계기?와 뜻이 궁금합니다 😀

   순우리말 같지만 실제론 아무 뜻도 없는 단어라서 버들비로 정했습니다.

   톨킨 반지의제왕 세계에서 쓰이는 엘프 언어(신다린)로 제 이름 한자를 표현했어요. galad 빛나다 bran 높다

   데이터 엔지니어라 deng (data engineer) + 호주에서 일하고 잇어서 au (australia) 로 지었습니다.

   영어 이름을 써야했는데 마침 자주 듣던 가수 이름이 눈에 띄었고 자주 불릴 이름이라 좀 친숙한 이름을 골랐습니다

   매우 어렸을 적 영어 학원에서의 이름이 paul 이었는데, 당시에 한게임 회원가입 할 때 중복확인을 하니 중복이 뜨더군요...
   그래서 p를 t로 바꿔서 taul이 되었는데 뭔가 좀 허전하다 싶어서, 같은 영어 학원에 max 라는 형의 이름을 따와서 붙여줬습니다.
   약간 무근본인거 같은 생각이 들기도 합니다 ...

   https://freebsd.org/cgi/man.cgi/…
   입니다

   이름마지막글자+land 규칙인데, 중학교때 프로그래밍의 세계로 입문시켜준 은사님의 아이디를 따라 만들었습니다. :-)

   heycalmdown은 다들 진정했으면 좋겠어서 만들었습니다. (나 말고 다른 사람) 침착맨보다 먼저 만들었고 뜻도 다릅니다. !
   (침착맨은 침착하면 게임에서 이긴다는 뜻)

   ffdd는 왼손으로 가장 치기 편한 글자라서 정한 것 같고, 270은... 기억이 안나네요(.. ) 360에서 90도가 빠진 수인데, XBOX 360에서 90을 뺀게 아닐까 싶은...
   사실 ffdd270은 아이디고, 닉네임들은 거의 캐릭터 이름에서 따오고 있어요. 제가 좋아하는 캐릭터들인데, 그래서 시대가 지나면서 닉네임이 바뀌는 걸로 제 취향이 달라지는 걸 볼 수 있어 좀 묘합니다(... )

   저는 IRC/PC통신 시절에 '구루'라는 대화명을 썼었는데요
   'Guru'는 '빛'을 의미하는 산스크리트어입니다. 이 빛은 '어둠에서 길을 인도하는 존재'란 뜻으로 '큰 지식을 가진 스승님'을 지칭합니다. 이게 서양권으로 넘어가면서 특히나 IT쪽에서는 특정 분야에 통달한 전문가를 뜻할 때 많이 사용합니다. (제가 그 정도 전문가는 아니지만..)
   이걸 웹으로 가져오면서, xguru는 모든걸(x) 잘 하는 사람이 되어보자라는 의미로 지었습니다.
   개인 블로그용으로 사용하는 xguru.net 도메인도 올해로 19년째 사용중입니다.
"
"https://news.hada.io/topic?id=5919","코드 리뷰의 목적은 성장이어야 한다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          코드 리뷰의 목적은 성장이어야 한다

   1. 조직 내 코드 리뷰는 리뷰하고자 하는 관점을 코드가 아닌, 코드를 작성한 엔지니어에게, 제품을 만드는 메이커에게 옮겨보면 어떨까.
   2. 사실 코드 리뷰 문화보다 중요한 것은 테스트 문화이다.
   코드 리뷰의 목적
   - 버스 팩터
   - 버그없는 제품
   부작용
   - 병목이 되는 코드 리뷰
   - 의미없는 코드 리뷰
   - 싸움이 되는 코드 리뷰
   - 책임 소재를 묻는 코드 리뷰
   리뷰를 하기로 했나요?
   - 코드에 대한 인식
   - 리뷰는 성장을 목적으로
   - 질문도 리뷰
   - 테스트
   - Pre-commit Review 와 기대효과
   - No Rules
   - 영어
   마무리
   - 코드 리뷰를 도입하기 전에
   - So What?

   코드 리뷰가 서로 성장에 도움이 되려면 리뷰 문화도 그렇지만 무엇보다 PR전략(?)을 잘 짜서 PR단유ㅣ가 너무 크지 않게 하는게 중요할 것 같아요.
   좋은 글 감사합니다!
"
"https://news.hada.io/topic?id=5896","SQL 팁 : 나의 SQL 작성 패턴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          SQL 팁 : 나의 SQL 작성 패턴

   - 항상 CTE를 사용할 것
   - CTE를 가능한 작게 만들고, 한가지 용도로 유지할 것
   - Don’t repeat yourself (DRY)
   ㅤ→ 한 쿼리에서 같은 조인을 하고 있다면 CTE로 추상화 할 것
   ㅤ→ 여러 쿼리에서 같은 조인을 하고 있다면, View로 추상화 할 것
   - 종속성을 길게 연결하지 말 것
   - 조인 하기 전에 데이터를 줄일 것
   - 필요한 컬럼만 선택할 것
   - Expect the unexpected : NULL, 중복 행, 임의 값까지 실제 데이터는 지저분함
   - Left Join으로 시작할 것 : 실제 데이터는 난장판이기 때문에, Inner Join으로는 제외되는 중요 데이터가 있을 수 있음
"
"https://news.hada.io/topic?id=5953","Gyroflow - Gyro를 이용한 비디오 안정화 툴 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Gyroflow - Gyro를 이용한 비디오 안정화 툴 오픈소스

   - 고성능의 안정화(Stabilization) 기능 지원
   - 크로스플랫폼 UI (윈/맥/리눅스, iOS/Android 지원 예정)
   - 실시간 미리보기 및 조정
   - GPU 기반 처리 및 렌더링
   - 10-bit, 16-bit 4:4:4 비디오까지 지원
   - GoPro, Sony, Insta360 등의 다양한 하드웨어 및 Sensor Logger등 모바일 앱 지원
"
"https://news.hada.io/topic?id=5879","DeepMind, 프로그래밍 하는 AlphaCode AI 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   DeepMind, 프로그래밍 하는 AlphaCode AI 공개

   - 경쟁 프로그래밍 대회에 참가 가능한 수준의 코드 생성이 가능
   ㅤ→ 비판적 사고, 논리, 알고리듬, 코딩 및 자연어 이해의 조합이 필요한 새로운 문제를 해결
   ㅤ→ Codeforces의 최근 10개 대회에 대해서 테스트하여, 대회 참가자들의 평균 수준의 성능(상위 54%)을 달성
   - Transformer 모델을 사용하여 전례없는 대규모로 코드를 생성한 다음, 그중 유망한 작은 프로그램들을 스마트 필터링
   - 논문과 함께 GitHub에 Competitive-Programming 문제 및 솔루션 데이터 세트 공개

   Copilot 설명 및 사용기
   - https://news.hada.io/topic?id=4745
   Github에 제공하는 Copilot로 비슷한 방식으로 사용 가능합니다. Github에 코테 문제 관련 Repo들이 많아서 같이 학습이 되어 버려서.
"
"https://news.hada.io/topic?id=5906","Slackware 15.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Slackware 15.0 릴리즈

   - 1993년부터 배포 시작한 가장 오래된 리눅스 배포판
   ㅤ→ 안정성과 간결함을 목표로 하는 가장 Unix-like 한 배포판
   ㅤ→ 설치 UI도 없고, 의존성 검사/해결도 자동으로 하지 않음
   - 2012년 14.0, 2016년 14.2 릴리즈 후 6년만
   - 리눅스 커널 5.15.19 : Generic / Huge 두개로 제공
   - UEFI 지원
   - PAM 기반 사용자 인증, iproute2 기반 네트워킹 도입
   - 기본 MTA인 sendmail이 postfix로 교체됨

   와 감회가 새롭군요. 2003년 쯤인가 슬랙웨어로 리눅스 깔려다가 너무너무 힘들었던 기억이...

   이 글에는 연식이 좀 되는 사람만 댓글 다는 건가요…

   그동안 업데이트가 안되어서 그 상태로 두기로 한 줄 알았는데 ...

   slackware 2.x 를 처음 설치했던 거 같은데 ㅎㅎ vga 잡고 xwindow 처음 실행했을 때가 생각나네요.

   긱뉴스에 오시는 사용자 분들의 연령대가 보이는 것 같아요...

   햐 아직도 업데이트 되는군요
   고등학교때 책보면서 설치했던거 같은데..

   저도 기억에서 지워졌는데 이번 업데이트 소식 듣고 놀랐습니다. ㅎㅎ
"
"https://news.hada.io/topic?id=5962","GPT-NeoX-20B 에게 사칙연산 질문을 물어봤더니","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GPT-NeoX-20B 에게 사칙연산 질문을 물어봤더니

   - GPT-3 규모의 모델을 오픈소스로 만든 GPT-NeoX 에게 간단한 사칙연산 질문을 수행
   - 100개중에 10개만 정답. 하지만 대부분이 정답에 *근접*
   Q: ""What is 2653 * 30641?""
   A: 82356113 (틀림)
   정답은 81290573
   - ""언어 모델""은 기본적으로 수학은 잘 하지 못하는 것으로 알려져 있음(아마도 부분적으로는 숫자를 토큰화 하는 방식 때문일 것)

   진짜 정답이 81290573이고, GPT-NeoX의 정답이 82356113 아닌가요?
   직접 암산도 해보고 계산기도 돌려봤는데 정답은 81290573인 것 같아서요!
   (링크에 있는 사진에서도 Correct가 No로 되어있는 모습을 볼 수 있습니다.
   아니라면 지적 부탁드립니다!)

   어랏 ㅠㅠ 제가 적다가 앞뒤를 바꿨나 보네요. 수정해두었습니다 ㅠ

   오히려 근사값을 정답으로 내놓는다는게 사람같아서 더 놀랍네요.

   이에 대한 자세한 얘기들은 HN 댓글에 많네요 https://news.ycombinator.com/item?id=30299360
   - GPT-Neo : GPT-3 규모의 모델을 오픈소스/무료로 만드는 프로젝트 https://news.hada.io/topic?id=3599
"
"https://news.hada.io/topic?id=5949","React 18 미리보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             React 18 미리보기

   * React 18 rc가 확정되면서 어떤 기능들이 추가가 되었는지 알아보자
   * Automatic batching for fewer renders
   * React 18 이후부터는 promise, setTimeout 등에서 발생한 연속적인 setState도 배치로 처리
   * SSR support for Suspense
   * SSr에서도 Suspense를 사용할 수 있게 개선
   * Concurrent features 추가
   * useTransition: urgent, not urgent state update를 구분. debouncing하던 코드들을 해당 hook을 사용해서 개선 가능
   * useDeferredValue: startTransition안에 state 업데이트하는 코드를 넣는 것과 동일하게 state의 지연된 값을 사용하는 것이 가능
   * useId: unique한 id를 사용할 수 있게 개선
   * useSyncExternalStore: internal store인 props, state 제외하고 외부의 mutable한 object의 변화를 감지하고 component의 state로 사용할 수 있게 됨.
   * StirctMode + StrictEffect
   * 앞으로 추가된 OffScreen API + 이미 추가되어있는 Fast Refresh 관련해서 문제를 발생시킬만한 코드가 있는지 알아보기 위해서 effect를 포함해서 dev 환경에서는 두번 rendering됨. 컴포넌트 코드를 작성할 때 mount, unmount, mount와 같이 effect가 몇 번 실행되더라도 문제가 없는 코드를 작성해야함.
"
"https://news.hada.io/topic?id=5862","Sony, Destiny 제작사 Bungie를 $3.6B(4.3조원)에 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Sony, Destiny 제작사 Bungie를 $3.6B(4.3조원)에 인수

   - 현재 직원 약 900명인 게임 개발 스튜디오
   - 인수후에도 독립적으로 운영될 예정. 이로써 소니는 17개의 게임스튜디오를 가지게 됨
   - 데스티니는 계속 멀티플랫폼으로 제공할 것
   ㅤ→ 또한 데스티니 프랜차이즈를 확장하며 새로운 IP 작업중
   - Bungie는 XBox를 대표하는 게임인 Halo를 개발 했고, 2000년에 Microsoft에 인수되어서 2007년에 독립하면서 343 Industries 를 별도로 설립하여 Halo 프랜차이즈를 개발 및 운영중
   - 번지는 그 이후에 액티비전 블리자드와 파트너십을 맺고 데스티니를 개발. PC판은 배틀넷에서 서비스 했지만 2019년 계약을 끝내면서 스팀으로 옮겨감

   - 마이크로소프트-액티비전 거래의 시사점 https://news.hada.io/topic?id=5784
   위 글에서 액티비전 블리자드 거래의 실패자가 Sony 라고 했었는데, 바로 또 큰 인수건이 터졌네요.
   재미난건 XBox 최고의 FPS 게임인 Halo를 만든 회사가 PS로 갔다는 거네요.
   또한 SIE 대표인 Jim Ryan은 더 많은 인수를 기대하라고 얘기했다고 하니, 시장이 어떻게 움직일지 흥미진진합니다.
   https://twitter.com/Chris_Dring/status/1488219307188363264
   발표후 소니 주가는 4.5% 상승했네요
"
"https://news.hada.io/topic?id=5925","브라우저 주소창에 URL을 치면 일어나는 일들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       브라우저 주소창에 URL을 치면 일어나는 일들

   “브라우저 주소창에 URL을 치면 일어나는 일을 아는대로 말 하기”라는 웹 개발자 면접 단골 질문에 대해 다시 생각해보게 됨.
   어떻게 클라이언트의 HTTP 요청 메시지가 서버에 전송되고, 이걸 받은 서버의 HTTP 응답 메시지가 클라이언트에 전송되는지, 그리고 브라우저가 컨텐츠를 표시하는데까지의 모든 과정을 번호순으로 정리

   이것만 잘 이해하고 있어도, 인터넷 브라우저에서 일어나는 많은 상황의 문제를 빠르게 찾아 고칠 수 있죠!

   좋은 글 감사합니다!

   안그래도 몇 일 전 구두로 비슷한 내용을 기술했었는데, 이미 정리된 것이 있었네요.
   유용하게 사용하겠습니다.
"
"https://news.hada.io/topic?id=5863","youtube-dl 새로운 관리체제로","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          youtube-dl 새로운 관리체제로

   - 새 프로젝트 메인테이너 조인
   - 포크인 yt-dlp 가 더 많은 기능을 제공하지만 최신 파이썬 버전을 필요로 함
   ㅤ→ youtube-dl 은 파이썬 2.6/2.7 및 3.2+ 호환을 유지 예정(아무도 불평 안할때까지)
   - 아직 처리해야할 백로그가 많지만, 새 PR 환영하며, yt-dlp에 있는 기능의 백포트도 환영

   - youtube-dl - Youtube 및 각종 비디오사이트에서 동영상 저장하기 https://news.hada.io/topic?id=1629
   - Youtube-dl, DMCA때문에 깃헙에서 삭제 https://news.hada.io/topic?id=3081
   - GitHub, youtube-dl 저장소 복원 https://news.hada.io/topic?id=3213
   - yt-dlp - 유튜브 다운로더(youtuble-dl)에 새 기능 추가한 포크 버전 https://news.hada.io/topic?id=4913
"
"https://news.hada.io/topic?id=5880","2022년 1월 100% 할인 이벤트 장애 부검","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       2022년 1월 100% 할인 이벤트 장애 부검

   인프런 서비스에서 발생한 2022년 1월 3일 ~ 17일까지 지속적으로 서비스를 사용할 수 없는 장애 부검 글입니다. 장애의 발견, 초기 대응, 재발, 근본 원인 분석, 근본 원인 해결까지의 과정을 상세히 다루고 있습니다.

   좋은 글 감사합니다. 그런데 회고..라는 좋은 단어가 있는데 왜 부검이라는 단어를 사용하셨을까요? 틀린 말은 아니지만 좀 부정적으로 느껴지네요.

   Postmortem 의 번역으로 사고 발생후에 행한 조치들을 보고 ""부검"" 이라는 단어를 많이 쓰더군요.

   저는 서비스가 사망했으니(... ) 부검한다는 뉘앙스라고 생각해서 재미있게 느껴졌는데. 다르게 느낄 수도 있겠군요. 'ㅁ '

   아마 넷플릭스의 부검메일(postmortem email) 같은 뉘앙스라고 생각합니다.

   > 특히나 강의 테이블의 경우 고용량의 컬럼들 (강의 소개 컬럼의 HTML 코드)로 인해 Dead Tuple 하나 하나의 용량이 굉장히 높은데요.
   > 그러다보니 잦은 업데이트 쿼리는 고용량의 Dead Tuple 대량 생산으로 이어지게 됩니다.
   특히, PostgreSQL의 Dead Tuple이 서비스에 미칠 수 있는 영향을 체감할 수 있는 근본 원인 분석 부분은 좋은 참고가 될 것 같습니다.
"
"https://news.hada.io/topic?id=5947","라디오 방송국이 실수로 송출한 파일로 Mazda 자동차가 고장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   라디오 방송국이 실수로 송출한 파일로 Mazda 자동차가 고장

   - 시애틀의 KUOW(94.9) 방송에서 실수로 확장자가 없는 이미지 파일을 전송
   - 해당 HD라디오를 듣던 2014~2017 Mazda 자동차의 인포테인먼트 시스템이 먹통이 됨
   ㅤ→ 네비게이션/블루투스가 안되고 다른 방송으로 바꾸는 것도 불가
   - Mazda는 해당 차들의 Connectivy Master Unit을 교체해야 한다고 공지

   흥미롭네요

   인포테인먼트 시스템 개발자가 TCP/IP 네트워크가 아니라고 너무 안일하게 개발한것 같군요.
   외부에서 들어오는 데이터가 시스템을 망칠 가능성이 있는데도 검증없이 그대로 사용하다니.

   국내에는 아직 도입이 되지 않은 디지털 라디오 방식인 HD Radio 라서 가능한 얘기.
   HD Radio는 곡의 정보 및 앨범 아트워크를 전송하고 수신할 수 있기 때문에 거기서 일어난 일인듯 하네요.
   https://en.wikipedia.org/wiki/HD_Radio
"
"https://news.hada.io/topic?id=5875","Cruise, 운전자 없는 자율주행 차를 대중에 공개하고 승객 모집 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Cruise, 운전자 없는 자율주행 차를 대중에 공개하고 승객 모집 시작

   - GM의 자율주행 자회사
   - 고객 등록 페이지를 오픈하고 곧 샌프란시스코에서 운전자 없는 자율주행차 운전을 시작한다고 공지
   - 당분간은 무료로 탑승 가능
   - GM의 CEO인 Mary Barra 및 일반 시민들의 탑승 소감 영상도 공개
   - 2018년 $900M을 투자한 소프트뱅크 비전펀드가 운전자 없는 자율주행을 시작하면 $1.35B 추가로 투자 하겠다고 했고, 이 마일스톤에 도달
   - 각 차들은 Tostada, Disco 같은 유니크한 이름이 붙어있음

   Cruise 의 자율운전은 카메라+오디오+Lidar+Radar 를 복합적으로 사용합니다.
   아래 이미지에 보시면 차 지붕에 설치된 장비를 보실 수 있습니다.
   - https://images.ctfassets.net/95kuvdv8zn1v/6h1C7lPC79OLOlddEEexqj/…
   비용 및 여러가지 이유로 카메라만 사용하겠다고 선언한 테슬라와는 다른 방향으로 간다는 것을 알 수 있습니다.
   Cruise 의 CEO Kyle Vogt는 이렇게 장비가 잘 갖춰진 차량을 통해서 로보택시가 운영하는데 필요한 문제를 먼저 해결한 다음, 비용문제를 해결하는 전략을 따르고 있다고 합니다.
   내부 기술에 대한 소개는 Cruise Under the Hood 2021 영상들에 잘 나와있습니다.
   - https://youtube.com/playlist/?list=PLkK2JX1iHuzz7W8z3roCZEqML0G2R9jX8
"
"https://news.hada.io/topic?id=5915","Ask GN: 이달의 구인공고 - 멤버를 찾고 계신가요 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ask GN: 이달의 구인공고 - 멤버를 찾고 계신가요 ?

   현재 근무중인 스타트업에서 같이 일할 멤버를 찾고 계시다면
   회사 소개 / JD / 위치 / 리모트 가능 여부 / 연락방법(이메일,웹사이트) 등을 적어주세요.
   ""멤버가 직접 1개의 댓글로 홍보를 작성""하시면 됩니다. (서치펌 등은 불가)
   이 글은 매월 첫번째 월요일에 등록됩니다.
   해당 회사의 공고에 관심있으시면 기재된 메일등으로 연락하시기 바랍니다.
   작성 예)
   하다 | 프론트엔드 개발자, 디자이너 | 서울 역삼 | Remote 가능 | https://hada.io | jobs@hada.io
   하다는 긱뉴스를 개발 및 운영하는 스타트업 입니다. 저희는 이러 저러 해서 엄청 좋은 회사입니다~~
   [1] 프론트엔드 개발자 JD : 내용 또는 URL
   [2] 디자이너 JD : 내용 또는 URL

   서울대학교병원 Miilab | 서버 개발자, AI 개발자 | 서울 종로 | 리모트 불가 | hhttps://sites.google.com/view/medimaginginfo | recruit.miilab@gmail.com

   채용공고: https://acoustic-waterfall-075.notion.site/AI-Research-Engineer-8217b0…
   서버 개발자 채용공고: https://acoustic-waterfall-075.notion.site/Backend-Engineer-b77c1c7ada…

   서울대학교/서울대학교병원 MiiLab(Medical Imaging & Informatics Lab)에서는 확장현실(AR/VR/MR)과 인공지능(AI)을 결합한 메타버스(XR)를 의료분야에 접목하여 환자 안전, 의료질 향상, 효율성, 환자중심 가치실현을 목표로 세계 최고의 의료서비스를 제공하는 리서치 센터로 거듭나고자 합니다.

   현재 AI 팀은 매주 논문 세미나를 통해 최신 AI 동향을 파악하고 선행기술의 활용 가능성을 검토합니다. “언맷 니즈”를 발굴하여 연구 설계부터 임상활용 구현에 이르는 모든 과정의 융합연구를 공학-임상간의 협업을 통하여 진행합니다.

   국내 최고의 임상의와의 협력연구를 통해 아이디어 제안 후 임상, 그리고 상용화 단계까지의 모든 AI 연구과정을 수행하고 검증 합니다.

   학력, 나이, 성별에 제한을 두지 않는 협력문화로 한 팀이 되어 같은 목표를 향해 꾸준히 나아갈 수 있는 팀원을 모십니다.

   서로 존중하며 책임감있는 멋진 동료들과 함께 성장하고 싶으신 지원자 분들의 많은 관심 부탁드립니다.

   당근페이 | 서버 개발자 | 서울 신논현 | 리모트 불가(코로나로 한시적 자율재택) | gd@daangnpay.com
   채용공고: https://team.daangn.com/jobs/4511184003/
   당근페이는 지역에서 일어나는 다양한 거래를 연결하고, 모두가 동네에서 쉽고 간편하게 이용하는 금융 서비스 환경을 만들고 싶어요. 당근마켓의 자회사인 당근페이 소속으로 채용되며, 자회사의 근무 조건 및 복지는 당근마켓과 동일해요.
   당근페이가 전국 서비스를 시작했어요.
   관련기사: https://www.bloter.net/newsView/blt202202140299
   채용설명회 영상: https://www.youtube.com/watch?v=wYN6OeyV9TI

   💎 AB180(에이비일팔공) | 소프트웨어 엔지니어 | 서울 서초(사당역 1분) | https://abit.ly/ab180-hiring-at-geeknews | hr@ab180.co
   🎉 좋은 소식 먼저! 페이스북의 비즈니스/데이터 파트너가 되었어요! 🎉
   모바일 측정 파트너(MMP) 멀티터치 기여도 분석 파트너(MTA)로 동시 선정된건 세계 최초에요.
   기술력과 능력을 인정받은만큼, 더 많은 분들과 더 많은 성장을 할 수 있을 거라고 생각해요.
   유니콘부터 대기업까지 쓰는 제품을 만들며 함께 성장해요 —
   초당 100만 건의 트래픽 처리, 월 2,000만 MAU, 월 100억 이벤트 수집 및 분석, 실시간 대규모 데이터 분석 및 성과 극대화를 위한 머신러닝을 경험하실 수 있어요.
   AB180은 '에어브릿지'라는, 웹과 앱에서의 사용자 행동을 분석하고 마케팅 성과를 측정해서 더 좋은 퍼포먼스를 낼 수 있도록 돕는 도구를 만들고 있어요. GS SHOP, KB증권, 버거킹, 다노, 펫프렌즈 등 많은 기업들에서 저희의 제품을 사용하고 있어요.
   - ✈️ 에어브릿지 → https://airbridge.io
   - 🧑🏻‍💻 기술 블로그 → https://engineering.ab180.co
   저희에 대해 궁금하시다면 아래의 공고를 확인해주세요 :)
   [1] Junior Backend Engineer : https://abit.ly/ab180-backend-junior-gn
   [2] Senior Backend Engineer : https://abit.ly/ab180-backend-senior-gn
   [3] Data Engineer : https://abit.ly/ab180-data-senior-gn
   [4] Core(Database Engine) Software Engineer - Database Engine : https://abit.ly/ab180-dbe-gn

   자란다 | 프론트엔드 개발자, 디자이너 | 서울 삼성 | Remote 가능 | https://team.jaranda.kr | career@jaranda.kr
   자란다는 아이들의 돌봄과 교육에서 발생하는 문제를 데이터와 추천 알고리즘으로 해결하는 '에듀테크 스타트업'입니다.
   우리는 세상의 아이 수만큼 다양한 성장 방식이 필요하다고 믿습니다. 그래서 아이들의 일률적인 성장 방식에서 벗어나 내 아이에게 맞는 방식으로 성장할 수 있도록 유아동 시장을 혁신하고 있습니다. 또 우리는 아이들의 관심사, 학업 성취도 등을 분석할 수 있는 국내 유일의 '성장 데이터'와 내 아이에 맞춰 선생님과 프로그램을 매칭하는 ""추천 알고리즘"" 을 구축하고 있습니다.
   이를 통해, 전년 대비 이용 가정 수 4배 증가, 매칭 만족도는 97%라는 기록을 세웠고, 업계 최대 규모인 138억의 누적 투자로 시장에서 우리의 가치를 인정받았습니다. 또 최근 네이버, 라인, 바이브컴퍼니 출신의 구성원들이 합류하면서 더 큰 도약을 준비 중 입니다.
   이제 우리는 단순 프로그램 및 선생님 추천을 넘어, 아이들의 성장에 필요한 모든 솔루션을 모아 종합적인 '키즈 플랫폼'으로 나아가고자 합니다. 꾸준히 데이터와 플랫폼을 통해 유아동 시장을 혁신하고 있는 우리는.
   자란다입니다.
   [1] 프론트엔드 개발자 JD : https://team.jaranda.kr/front
   [2] 백엔드 개발자 JD : https://team.jaranda.kr/backend
"
"https://news.hada.io/topic?id=5943","이 달의 CT 스캔 : 즉석 카메라","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          이 달의 CT 스캔 : 즉석 카메라

   - 매달 CT 스캐너로 특정 물품을 상세히 찍어서 공개하는 페이지
   - 스크롤 하면서 물체를 회전시키며 내부를 설명하는 형식
   - Polaroid가 1948년에 처음으로 즉석 카메라 개발
   - 1980년대 들어와서 스스로를 재창조하며 혁신을 계속
   * Polaroid 600 AF (1997)
   * Polaroid Go (2021)
   * FUJIFILM INSTAX Mini 11 (2020)

   이제 아카이브도 제공해서 예전 것들을 한 번에 볼수 있게 되었습니다.
   - LEGO Minifigures 2021/11 : https://scanofthemonth.com/LEGO-Minifig/
   - AirPods 2021/12 : https://scanofthemonth.com/AirPods/
   - GameBoy 2022/01 : https://scanofthemonth.com/Game-Boy/
"
"https://news.hada.io/topic?id=5958","CodeCaptcha - 개발자에게만 보이는 링크 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    CodeCaptcha - 개발자에게만 보이는 링크 만들기

   - 미니 코딩 챌린지를 풀어야만 보이는 단축 링크 생성
   - 특정 링크를 공유할 때 간단한 프로그래밍 언어 지식이 있는 방문자만 풀 수 있게 만드는 도구
   ㅤ→ 현재는 JavaScript 만 지원
"
"https://news.hada.io/topic?id=5883","Mess with DNS - 브라우저상에서 DNS 실험하며 배우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Mess with DNS - 브라우저상에서 DNS 실험하며 배우기

   - 접속하면 자신의 임시 서브 도메인이 생성
   ㅤ→ A/CNAME 레코드 생성 및 테스트
   - 실제 DNS 서버와 통신하는 모든 요청이 브라우저에 표시됨
   - 다양한 실험들
   ㅤ→ 도메인 생성전에 접속했을 때 일어나는 일
   ㅤ→ TTL을 큰 값으로 바꿔보기
   ㅤ→ 두개의 충돌하는 A 레코드 만들어 보기
   ㅤ→ Netlify 웹사이트 만들어서 연결하기
   ㅤ→ Fastmail 로 내 도메인 주소로 이메일 받아 보기
   ㅤ→ 이메일 주소에 SPF/DKIM 레코드 설정하기
"
"https://news.hada.io/topic?id=5982","GitHub, 마크다운에 Mermaid 다이어그램 지원 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GitHub, 마크다운에 Mermaid 다이어그램 지원 시작

   - 코드블록에 mermaid 문법으로 다이어그램 구문을 넣으면 Mermaid.js 가 받아서 브라우저에서 그림으로 표시
   ㅤ→ 플로우차트, UML, Git 그래프, 고객 여정 다이어그램, 간트 차트등을 지원
   - GitHub의 HTML pipeline 에 태워서 JS 지원환경이 인식되면 iframe을 통해서 Viewscreen 서비스로 동작

   깃랩은 mermaid, platuml, kroki 등을 지원하지요.. ㅎ

   Mermaid 다이아그램은 좀 못생겨서...PlantUML이나 Graphviz 를 지원했으면 좋겠네요.
"
"https://news.hada.io/topic?id=5942","애플, 인공지능 음악 스타트업 AI Music 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      애플, 인공지능 음악 스타트업 AI Music 인수

   - AI를 이용하여 개인화된 음악을 동적으로 생성하는 기술을 가진 회사
   - 사용자 인터랙션에 따라서 바뀌는 음악을 생성
   ㅤ→ 예) 운동중에 착용자의 심장 박동수에 따라 바뀌는게 가능
   - 인수전에 약 24명의 직원을 가진 회사 였다고
   - 애플 피트니스+ 나 Photos의 슬라이드쇼 배경 음악등을 만드는데 사용 가능할 것으로 예상
"
"https://news.hada.io/topic?id=5891","systemd by Example","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           systemd by Example

   - 리눅스 시스템을 망가 뜨릴 위험없이 브라우저 상에서 예제로 배워보는 systemd
   - ""Start System"" 하면 백엔드에서 Podman 컨테이너를 생성하고 연결
   Part 1: Minimization
   Example 1: A system without units
   Example 2: Making the system start
   Example 3: Adding a halt target
   Example 4: Making the system stop
   Example 5: Adding journald
   Example 6: Future-proofing
   Part 2: Dependencies
   Example 1: The example services
   Example 2: Two services without ordering dependencies
   Example 3: Two services with an ordering dependency
   Example 4: Multiple units with ordering dependencies
   Example 5: Two services with a requirement dependency
   Example 6: Multiple units with ordering and requirement dependencies
   Example 7: Requiring a failing service
   Example 8: Two conflicting services
   Example 9: All requirement dependencies

   오호 https://messwithdns.net/ 로 부터 영감을 받아서 만들었다고 되어 있군요 - https://systemd-by-example.com/about

   요즘 브라우저 상에서 뭔가 해보면서 배우는게 많네요
   - Mess with DNS - 브라우저상에서 DNS 실험하며 배우기 https://news.hada.io/topic?id=5883
   또 다른 예제 기반으로 배우기
   - GitHub Actions by Example https://news.hada.io/topic?id=5829
"
"https://news.hada.io/topic?id=5926","스타트업에서 AWS IAM 권한 관리 잘 하는법 - ConsoleMe 도입기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               스타트업에서 AWS IAM 권한 관리 잘 하는법 - ConsoleMe 도입기

   - IAM 최소권한 정책
   ""IAM 정책을 생성할 때는 최소 권한 부여의 표준 보안 조언을 따르거나, 작업 수행에 필요한 최소한의 권한만 부여합니다""
   기존에 개발자에게 모든 권한을 주고 있다가 최소권한 정책을 따르기로함
   - Jira를 활용한 권한신청 프로세스 도입기
   기존에 있던 권한을 모두 수거한 다음 필요한 권한을 신청할 수 있는 프로세스를 Jira + Terraform으로 만듬.
   하지만 아래 네가지 이유로 사용하기 힘들었음
   1. Terraform apply 하는데 3~5분 정도 시간이 필요
   2. 개발자의 IAM policy에 대한 낮은 이해도로 인한 시간 오래 걸림
   3. 권한 추가 신청이 잦음
   4. 자주 변경되는 IAM 특성상 Github과 싱크가 안 맞는 경우가 많음
   - IAM 권한 신청계의 한줄기 빛 ConsoleMe
   Netflix에서 2020년에 공개한 AWS 다중 계정에서 쉽게 IAM 권한 관리를 도와주는 오픈소스 프로젝트. 웹 콘솔을 제공해서 IAM 권한 신청과 Role에 대한 임시권한을 사용할 수 있도록 도와줌. 유저가 웹에서 권한 에디터로 자유롭게 수정하고 관리자가 확인후 approve하면 바로 적용되는 방식
   - SSO(Single sign-on)을 사용한 임시 권한 발급
   AWS 상에서 AWS STS(Secure Token Service)를 사용해 IAM Role에 대한 임시권한을 받는 것은 IAM User를 사용하는 것 보다 안전한 방식. ConsoleMe에서는 SSO를 통해 구글 계정 혹은 SSO provider를 이용해 IAM Role에 대한 임시권한 받는걸 쉽게 할 수 있도록 도와줌
   - 그래서 도입하고 나아졌나요?
   네 6개월간 팀에서 도입해보고 사용한뒤 얘기해봤을때 ConsoleMe를 쓰게 된 이후로 보안팀은 권한 신청 관련 증적과 로그 관리가 편해지고 개발팀은 최소 30분 최대 하루까지 걸리던 프로세스를 5분 정도밖에 안걸리는 쉬운 권한 신청 프로세스로 바뀌어 모두가 만족할 수 있었습니다.

   개인적으로 좋은 자료 감사합니다. :)
   저희도 회계감사 때문에 보안을 강화해야하는데 도움이 될것 같아요

   제가 잘 몰라서 그러는데 (스타트업에서 새내기...) 보안 감사 말고 회계감사땨도 IT보안을 감사하나보군요 ㄷㄷ 처음 알았네요.
   감사준비 화이팅입니다 ㅎ

   대부분 회계감사에서 보안 신경을 쓰게되는 계기가 되는군요 ㅎㅎ
   파이팅 하세요~
"
"https://news.hada.io/topic?id=5858","아마존 프라임 비디오, WebAssembly 사용하여 8000개의 디바이스 타입 지원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            아마존 프라임 비디오, WebAssembly 사용하여 8000개의 디바이스 타입 지원

   - 게임콘솔,TV,셋탑박스,스트리밍 스틱 등 8000개의 디바이스를 지원 중
   - 업데이트 할때마다 각각의 네이티브 릴리즈를 해야함
   ㅤ→ 이를 위해 JavaScript 대신 WASM을 이용함으로써 안정성을 높이고 속도를 개선
   - 기존에는 C++로 작성된 JavaScript VM 과 JavaScript로 된 앱을 이용
"https://news.hada.io/topic?id=5895","Pictle - Wordle 룰을 이용하여 그림을 맞추는 단어 게임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Pictle - Wordle 룰을 이용하여 그림을 맞추는 단어 게임
   ㅤ→ 현재는 JavaScript VM 과 WebAssembly VM 을 동시에 구동(아직 WASM이 지원안되는 구형 기기에서는 Javascript만 사용)

   ㅤ→ 로우레벨 시스템을 JavaScript 에서 WASM으로 이관하고 WASM 바이너리도 업데이트
   - 7일전의 Wordle 단어를 가지고 만든 도트 그림을 보고 각 줄의 단어를 맞추는 게임
   ㅤ→ Rust로 작성된 코드를 WASM으로 컴파일하여 구동 (JavaScript 보다 10~25배 빠름)
   - 오답으로 찾은 각 자리에 노란색/녹색/회색이 맞게 나오는 단어를 찾아야 함
   - 60FPS 달성 및 입력 레이턴시 개선을 위해 더 많은 시스템을 WASM으로 이관할 예정
   - Gimme 버튼으로 3회까지 힌트 제공

   - WASM VM은 자체 모듈과 인스턴스 전체가 7.5MB 정도여서 JavaScript Heap 메모리 30MB를 절약
   지금 까지 해본 것중 제일 어려운 변형인거 같네요.
   ㅤ→ 배포하는 많은 디바이스 들의 메모리는 아주 작기 때문에 메모리 사용량은 중요한 요소임
   🖼️ Pictle 222 🔠 11/20🤌 1/3
   - WASM 모듈은 압축시 150kb 정도로 작아서 스타트업 시간도 아주 작음
   1️⃣2️⃣🟩3️⃣1️⃣
   3️⃣🟩1️⃣🟩2️⃣
   - Rust를 이용하는 장점 중 하나는 고품질의 라이브러리를 이용 가능 하다는 것 (egui 같은)
   🟨2️⃣2️⃣1️⃣🟨
   - Rust 와 WebAssembly에 투자한게 결실을 맺음
   ⬛⬛🟨⬛⬛
   1️⃣🟩🟩🟩3️⃣
   ㅤ→ 약 1년의 기간동안 37000라인의 Rust 코드로 성능,안정성,CPU 소비량을 개선했고, 메모리 사용률이 감소되었음
   🟩🟩🟩🟩🟩
"
"
"https://news.hada.io/topic?id=5878","Postman, gRPC 지원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Postman, gRPC 지원

   - Postman은 HTTP에서 시작해서 웹소켓,GraphQL 까지 지원중
   - 이제 gRPC API도 지원하여 직접 테스트 가능
   - Protobuf Definition File(.proto) 을 업로드하면, 사용가능한 메소드와 서비스를 분석하고 샘플 페이로드를 생성
   - unary, client-streaming, server-streaming, bidirectional-streaming 지원
   - 메시지 작성시 자동완성 지원
"
"https://news.hada.io/topic?id=5885","AI가 바꾸는 유통업 5가지 풍경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           AI가 바꾸는 유통업 5가지 풍경

   - 영국 시장조사기관 주니퍼 리서치에 따르면, 2023년 소매업에서 머신러닝 지출이 약 14조원(약 120억달러)에 달할 걸로 전망됨. 이는 2019년보다 230% 늘어난 수치
   - 유통업에 나타나는 새로운 AI 트렌드
   → 이는 보안·물류·판매·상품 관리·결제 분야를 망라함
   → 온라인 쇼핑몰에서는 마우스를 움직이고 키보드를 치는 사용자 행동을 AI로 분석해서 본인 여부를 확인함(관련 기술 개발사 : 이스라엘 기업 바이오캐치)
   → AI로 상품 이미지를 인식해 태그를 자동으로 달 수 있음(관련 기술 개발사 : 이스라엘 기업 사이트)
   → 물류센터에서는 AI와 로봇을 연동해 배송 준비를 자동화하고 1시간 배송을 구현함(관련 기술 개발사 : 이스라엘 기업 패브릭)
   → 오프라인 매장에서는 AI가 유통기한과 재고 등을 수시로 파악해 유통기한 임박상품에 할인가를 자동으로 매김(관련 기술 개발사 : 이스라엘 기업 웨이스트리스)
   → 카트에 AI와 카메라를 연동해 상품 인식과 결제가 자동으로 이뤄지도록 함(관련 기술 개발사 : 뉴질랜드 기업 이매저)
"
"https://news.hada.io/topic?id=5902","Amazon PIP 호러 스토리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Amazon PIP 호러 스토리

   - AWS팀의 개발자가 Alexa AI팀으로 옮기겠다고 매니저에게 말했더니 바로 PIP로 보내버리고 다른 팀에 협박메일을 보냄
   ㅤ→ Performance Improvement Plan : 성과가 안좋은 직원의 성과 개선을 위한 아마존 특유의 프로그램. 특정 기간동안 개선 안되면 해고
   - 1월 한달동안 팀이 작성한 코드 68k 중 51k를 본인이 작성한 것이라고
   ㅤ→ 금요일 오후에 월요일 오전까지 완성하라는 지시도, 토요일 새벽 2시에 연락하는 것도, 4주 내내 온콜 하는 것도 다 쉽지만 이건 좀 아니지 않냐고..

   ""About 10% of Amazonians receive a PIP.""
   https://www.viamaven.com/blog/amazon-pip-what-is-it-what-to-do
   비율이 생각보다 많이 높네요.

   HN에서 탑을 차지했네요. 글에도 있지만 이 글을 내리라고 경고도 받았다고..
   https://news.ycombinator.com/item?id=30203581
   아래 링크에서 볼 수 있듯이 PIP에 들어간 사실 자체를 공개하는것은 또 다른 해고 사유 입니다.
   나는 아마존이 무섭다 https://ppss.kr/archives/179653
   ""아마존은 문제가 있다고 판단되는 직원을 PIP에 넣는데, 개선할 목적으로 넣는 게 아니라 부당해고 이슈 없이 해고하기 위해 넣는다. PIP에 들어간 직원은 자신이 PIP에 들어갔다는 사실을 동료들에게 알릴 수 없다. 만일 알리면 영업비밀을 누설한 죄로 해고된다. PIP에 들어간 직원은 매니저에 의해 집중 마이크로매니징을 당한다. 간혹 PIP에서 요구한 수준을 충족시켜서 통과하는 직원들이 있는데 통과하더라도 멘탈이 붕괴해 자진 퇴사한다.""
"
"https://news.hada.io/topic?id=5923","기계식 키보드 끝판 정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             기계식 키보드 끝판 정리

   1. 게임/짧은 글엔 청축, 오래앉아서 타이핑 할 땐 적축
   2. 지겨울 땐 축 변경 추천, 세컨 키보드로는 무난한 갈축
   3. 3-4개 고려한다면
   - ⓐ무접점 제품
   - ⓑ로지텍 ROMER-G 스위치를 사용한 것
   - 체리 MX의 ⓒ청축
   - 여유가 있다면 ⓓ적축
   굳이 억지로 비유를 하자면 ⓐ젤펜 ⓑ붓펜 ⓒ만년필 ⓓ볼펜
   4. 10분 이상 타이핑 해보고 결정할 것

   전 게이트론 체리 호환 백축 쓰는데 축압이 매우 낮아서 장시간 쓸 때 마음에 들더라고요 단점은 게임같이 명확하게 들어가는 감각이 중요한 곳에서는 피드백이 잘 안와요

   기계식 키보드 쪽으로 좀 투자할 생각이 있으시다면 퀵스왑 지원 기계식 키보드 사신 후에 여러 기계식 키보드 스위치 바꿔서 쓰시면서 자신에게 맞는 스위치 찾아보시는 것도 좋을 것 같습니다.
   체리은/LP/적축/저적/청/갈,카일핑크/광청/실버/슈퍼스피드실버,게이트론청/황/백/광백/프로백축,오테뮤적/청/갈축,용화흑축,노뿌35g/50g,유니콤프버클링스프링/데이터콤프유사백축,멤브레인,펜타그래프써봤는데
   전 게이트론 백축 제일 가볍고 편해서 좋더군요. 손 아프신분께 추천합니다.
   게이트론 백축 관련 트윗 스레드 https://twitter.com/lunamoth/status/1302827399797563392

   타건샵을 방문해서 키감을 확인해보는 것도 좋을 것 같습니다

   생각보다 저 로지텍 Romer-g low profile이 상당히 괜찮습니다.

   뭔가 비교군이 적어서 그렇네요.... 청, 적, 갈 축만으로만 나누기에는.. 백축, 흑축, 클리어축 사용중인 저로서는 그렇구나 까지만 보게 되네요 :)

   추가 후기를 기대하겠습니다...?

   리얼포스로 넘어간 이후 10년째 못 바꾸고 있는 중이네요.

   개발자용 데스크탑 추천도 궁금하네요.
   그냥 백엔드 개발하는데는 그래픽 카드가 필요없는 것이겠지요?

   저도 그래서 그래픽 카드를 빼고 하는 것으로 구성했는데, 결국 추가 했습니다. 하지만, 고사양은 필요 없어서 저렴한 것으로 추가했습니다.

   끄덕끄덕 - 저도 비슷하게 합니다.
   그런데 어떤 이유로 추가하셨나 궁금하네요. 어떤 불편이 있으셨길래 추가하셨나요?

   저같은 경우에는 UHD 듀얼 모니터는 내장그래픽만으로는 VSCODE가 랙이 걸리더라구요. 싸구려 하나 구해다 달았습니다.

   저는 그냥 리얼포스로 만족하고 살고 있는데요. 이런 글 볼 때마다 살짝 뽐뿌가 오긴 합니다.
   하지만 리얼포스 블루투스 버전 나오면 바꾸고 싶어요.

   https://gigglehd.com/gg/hard/11143696
   이거 찾으십니까?

   저거 아직 한국에 안팔지 않나요? 직구 하는거 보다 한국에 들여오는게 더 쌀듯 해서 기다리고 있습니다.
   현재도 딱히 불만은 없어서 ㅎㅎ

   오 재미있는 글이네요. 혹시 자신의 키보드를 자랑할만한 쓰레드를 구성할 수 있을까요? @xguru

   어떤 키보드를 사용하고 계신가요? https://news.hada.io/topic?id=4773
   종종 올라오는 주제의 글이긴 합니다 ^^;
"
"https://news.hada.io/topic?id=5936","애플, 아이폰에서 비접촉 결제 가능한 Tap to Pay 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   애플, 아이폰에서 비접촉 결제 가능한 Tap to Pay 공개

   - 올해안에 미국 판매자는 아이폰으로 애플 Pay 및 기타 비접촉 결제 수단으로 결제 받는게 가능해질 것
   ㅤ→ NFC 기술을 사용하여 별도의 장치 필요 없음
   ㅤ→ 신용/현금 카드 및 기타 디지털 지갑들로 결제 가능
   - Stripe는 Shopify POS앱을 포함하여 아이폰에서 Tap to Pay를 제공하는 최초 결제 플랫폼이 될 것

   한국은 애플 페이라도...

   제가 애플 뉴스룸에 기사가 나오면 한국어판도 같이 나왔는지 꼭 확인하는데요.
   이 기사는 역시나 없더군요. 애플 페이가 들어오지 않는 이상 다 먼 얘기일 것 같아요

   ""Square Killer"" 군요. https://squareup.com
   오늘 스퀘어(Block) 주가는 2% 정도 떨어졌네요.
"
"https://news.hada.io/topic?id=5887","리브레오피스(LibreOffice) 7.3 커뮤니티 버전 출시 - 상호호환성이 향상되었습니다. ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          리브레오피스(LibreOffice) 7.3 커뮤니티 버전 출시 - 상호호환성이 향상되었습니다.

   리브레오피스(LibreOffice) 7.3 커뮤니티 버전 출시 - 상호호환성이 향상되었습니다.
   LibreOffice 7.3 Community is better than ever at interoperability
   리브레오피스 7.3 커뮤니티 버전이 2022년 2월 2일에 출시되었습니다.
   대부분의 소스코드 커밋은 마이크로소프트사의 독점 파일 형식과 상호운용성(interoperability, `상호호환성`으로도 번역 가능)에 초점을 맞추고 있을 뿐만 아니라,
   MS Office에서 간편하게 전환할 수 있도록, 마이그레이션 하는 이용자를 대상으로한 새로운 기능이 탑재되었습니다.
   상호호환성(상호운용성, interoperability) 향상에는 3가지 종류가 있습니다.
   1. 테이블의 변경 사항 및 문자열이 옮겨질 때 변경 추적과 같은 새로운 기능 개발로, MS사의 오피스 문서와 상호호환성에 긍정적인 영향을 미칩니다.
   2. 성능(퍼포먼스, Performance) 향상
   대용량의 docx, xlsx, xlsm파일을 열 때, 여러 복잡한 문서의 렌더링 속도를 향상하였습니다. LibreOffice 7.1에서 소개된 Skia 백엔드를 사용할때 새로운 렌더링 속도가 개선되었습니다.
   3. 가져오기/내보내기 필터 개선
   * DOC(목록/번호 매기기 가져오기가 크게 개선됨)
   * DOCX(목록/번호 매기기 가저오기가 크게 개선됨, 도형에 첨부된 하이퍼링크를 이제 가져오기/내보내기 가능하게됨, 편집 권한 버그 수정, 단락 스타일 변경 추적)
   * XLSX(Office XLSX파일에 대해 행 높이 줄임, 저장할때 마다 셀 들여쓰기가 증가되지 않음, 편집 권한 버그 수정, XLSX차트 지원 개선)
   * PPTX(그림개체에서 상호작용 및 하이퍼링크 수정, 슬라이드 바닥글의 잘못된 가져오기/내보내기 수정, 그림과 도형에서 하이퍼링크 수정, 표의 투명 그림자 지원)
   자세한 내용은 아래의 링크를 참조하시면 됩니다.
   https://blog.documentfoundation.org/blog/2022/…
   리브레오피스는 ODF(OpenDocument Format)을 기본적으로 지원하는 것에 시작하여, 보안 및 견고성(robustness)에서 독점 포맷을 능가하며, DOCX, XLSX, PPTX파일에 대해 탁월한 지원을 하여 오피스 제품군 시장에서 높은 수준의 호환성을 제공합니다.
   또한, 리브레오피스는 많은 레거시 문서 포맷에 대한 필터를 제공하여, 사용자에게 소유권과 제어권을 돌려줍니다.
   마이크로소프트 파일은 여전히 2008년의 ISO승인 표준에서 더이상 사용하지 않은 독점 형식을 기반을 두며, ISO승인된 표준이 아닙니다. 그래서 많은 양의 인위적인 복잡성을 숨깁니다. 이로인해, 진정한 오픈 표준 포맷(OpenDocument Format)이 기본인 리브레오피스에서 파일을 다루는데 이슈가 발생합니다.
   리브레오피스의 다운로드 링크는 아래와 같습니다.
   https://www.libreoffice.org/download
   리브레오피스 7.3 커뮤니티 버전의 새로운 기능에 대한 동영상 링크는 아래와 같습니다.
   https://www.youtube.com/watch?v=Raw0LIxyoRU
   ps. TDF에 활동하는 한국인 활동가 및 번역자의 의견으로 한글 HWP도 MS사의 파일 포맷과 마찬가지로 많은 양의 인위적인 복잡성을 숨긴다고 생각합니다.
"
"https://news.hada.io/topic?id=5935","Nvidia, ARM 인수 중단 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Nvidia, ARM 인수 중단 발표

   - 2020년 9월에 인수 계약을 체결했으나, 여러 규제 당국의 반대로 인해서 계약을 종료
   - Softbank Group(SBG)은 ARM의 자체 IPO를 시작할 것
   - 계약에 따라 SBG는 Nvidia가 지불한 1.4조원의 선금을 그대로 가지게 되며, Nvidia는 20년간 ARM 라이센스 확보

   - Nvidia, ARM을 47조원에 인수 https://news.hada.io/topic?id=2847
   - NVidia, $40B의 ARM 인수 거래를 포기할 준비 중 https://news.hada.io/topic?id=5828
"
"https://news.hada.io/topic?id=5921","아마존, 기본급 상한을 4.2억 원으로 인상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        아마존, 기본급 상한을 4.2억 원으로 인상

   - 예전 $160k 에서 $350k로 두배 넘게 인상한다고 사내에 발표
   ㅤ→ 아마존의 기본급을 구글,페이스북,애플 수준으로 끌어올릴 것
   ㅤ→ 기존엔 기본급을 낮게 유지하면서 RSU와 사이닝 보너스 등으로 보상을 줬음
   ㅤ→ 이런 보상들은 유지하면서 기본급을 올려서, 글로벌하게 전체적인 보상을 인상하는 것
   - 최고의 인재를 유치하고 유지하기 위해 기존 보다 크게 인상한다고

   최소 연봉이 오르는 것으로 생각했는데, 다시 보니 상한선이군요.
   미국에서 상한선이 2억 미만이면 좀 작아보이긴 하네요.
"
"https://news.hada.io/topic?id=5903","구글 드라이브엔 "1" 만 들어있는 파일은 약관 위반","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     구글 드라이브엔 ""1"" 만 들어있는 파일은 약관 위반

   - 텍스트 파일에 ""1"" 한글자만 들어간 파일은 거부한다고

   해커뉴스에 올라와서 다양하게 테스트가 되었군요.
   https://news.ycombinator.com/item?id=30060405
   - ""1\r\n"" 은 안되고 오직 ""1"" 한바이트만
   - -1000 에서 1000 까지 해보니 500, 174, 833, 285, 302 도 안됨
   - ""0\n"" 도 안됨
"
"https://news.hada.io/topic?id=5983","Kubernetes 공식 다큐멘터리 [영상 1&2,총55분]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Kubernetes 공식 다큐멘터리 [영상 1&2,총55분]

   (1편 한글 자막, 2편은 아직 영어자막)
   - Docker의 오픈소스 성공에 영감을 받아, 몇명의 구글 엔지니어가 대규모 클라우드 컴퓨팅 영역에서 혁신의 필요성을 인식
   - 쿠버네티스라고 알려진 컨테이너 오케스트레이터를 작업하기 시작
   - 이 도구는 인터넷 구축 방식을 영원히 바꿀 것
   - 이 엔지니어들은 기술적인 문제, 내부의 오픈소스에 대한 저항, 반대론자 및 다른 대기업들과의 치열한 경쟁을 극복
   - 많은 엔지니어들이 ""컨테이너 오케스트레이터 전쟁""에 대해 알고 있지만, 대부분은 정확히 무슨 일이 일어났는지, 왜 그중에 쿠버네티스가 최고가 되었는 지를 알지 못함
   - 현재의 오픈소스 환경에 이보다 더 어울리는 주제는 없을 것. 이 영상은 구글, 레드햇, 트위터등의 엔지니어 인터뷰를 포함하여 그 시절 사람들의 이야기를 다룸
   - 쿠버네티스는 오픈소스 소프트웨어가 가진 힘의 증거

   어떤 솔루션이나 프레임워크를 왜 만들기 시작했는지/어떤 철학을 갖는지를 이해하는게, 그걸 얼마나 효율적으로 잘 사용할지를 크게 결정짓는다고 생각합니다.
   프레임워크를 사용할 때도 그 프레임워크의 철학에 반하는 코드를 작성하지 않고 꼼수를 쓰지 않으려고 노력한다면, 나중에 프레임워크가 업데이트 될 때나 혹은 요구조건이 변화하고 확장했을 때 더욱 유연하게 대체할 수 있습니다.
   그러나 언제나 꼼수는 당장 눈앞의 많은 시간을 절약해주는 효과가 있어 그 유혹을 버리기 힘들죠.

   이런것도 있네요
   Programming on LSD https://youtu.be/2DAiWxBTJ08

   🚲

   영상 비율이 스크린이네요?!!

   * Vue.js: The Documentary [video,34분] https://news.hada.io/topic?id=1597
   예전 Vue 다큐멘터리 뉴스에 적은 댓글에서 가져옵니다.
   유럽의 개발자 구인구직 사이트 Honeypot은 약 10~30 분 가량의 개발자 대상 다큐멘터리를 계속 만드는 중
   GraphQL: The Documentary - https://youtu.be/783ccP__No8
   Ember.js: The Documentary - https://youtu.be/Cvz-9ccflKQ
   Elixir: The Documentary - https://youtu.be/lxYFOM3UJzo
   각 라이브러리 제작자, 메인테이너 등이랑 직접 인터뷰하고 관련 자료들을 모아서 잘 편집한 다큐멘터리입니다.
   Honeypot 이 개발자 대상 구직사이트로서 훌륭한 일을 하고 있다고 생각.
"
"https://news.hada.io/topic?id=5924","서버들이 IPv6를 지원해야 할 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          서버들이 IPv6를 지원해야 할 이유

   - IPv6 지원 확인은 'dig AAAA 도메인'
   ㅤ→ 트위터/깃헙 등은 IPv6 지원 안하는 것을 알 수 있음
   - IPv6 지원 안하는 서버들엔 어떻게 IPv6 사용자가 접근이 가능할까 ?
   ㅤ→ 두가지 종류의 ISP가 있음
   ㅤㅤ1. 모든 고객에게 IPv4 주소 제공이 가능한 ISP
   ㅤㅤ2. 그렇지 못한 ISP
   ㅤ→ 많은 ISP 들이 2번에 속하니까 이를 다음과 같은 방식으로 해결
   ㅤㅤ⇨ 모든 고객들에게 유니크한 IPv6 주소를 부여
   ㅤㅤ⇨ 고객들이 IPv4 주소들을 공유해서 사용하도록 CGNAT(carrier-grade NAT) 또는 ""464XLAT"" 등 비슷한 기술을 사용
   ㅤ→ 모든 ISP들은 IPv4 전용 사이트인 트위터를 접속하기 위해서는 몇 개의 IPv4 주소가 필요함
   # 그럼 ""왜 IPv6를 지원해야 할까요?"" 를 물어봤더니 사람들이 답변해 준 것들
   - CGNAT이 병목현상으로 성능 문제를 일으킴
   - IPv6 만 사용 가능한 서버들도 당신의 서버에 접근이 가능
   - IPv6 가 성능이 더 뛰어남 (별도의 트랜슬레이션 레이어가 필요없음)
   - BGP(Border Gateway Protocol) 같은 대형 IPv4 사고가 터졌을때도 서비스 가능
   - 홈서버들과의 NAT 이슈를 회피하기 위해
   - IPv6를 배우기 위해
   - IPv4 는 레거시 이므로 IPv6를 더 밀기 위해
   - IPv6 지원을 추가하는게 매우 쉬움
   - 주소 공간이 훨씬 크기 때문에 특정 서브넷을 가지고 네트워킹 실험을 하기에 더 안전함
   - 자신만의 AS(Autonomous System)을 실행하기 위해
   - 은폐에 의한 보안(IPv6만 가지고 있을 경우 스캔으로는 찾을 수 없음)
   - 재미를 위해, IPv6 주소에는 이스터 에그 삽입이 가능. 페이스북의 IPv6 주소에는 face:b00c 가 포함되어 있음
   - 물론 IPv6 지원이 문제를 발생시키기도 함
   ㅤ→ 서버가 IPv4 + IPv6 를 동시 지원하는 경우, 두개 네트웍을 동시 사용하는 사용자들에게는 문제가 발생할 수도 있음

   그런데 우리나라는 스마트폰들 말고 유선은 IPv6 아직 할당 안해주지 않나요? ㅠ

   - Hello IPv6 : IPv4 사용자를 위한 최소한의 자습서 https://news.hada.io/topic?id=5174
   - 애플, IPv6 / HTTP2 / TLS 1.3 / Multipath TCP 사용 권장 https://news.hada.io/topic?id=2597
   - Google 접속자로 집계한 IPv6 국가별 순위 https://news.hada.io/topic?id=4825
   - 구글에 접속하는 사용자의 1/3 이 IPv6 이용 https://news.hada.io/topic?id=2601
"
"https://news.hada.io/topic?id=5897","가장 똑똑한 소프트웨어 엔지니어에게 배운 10가지 교훈 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  가장 똑똑한 소프트웨어 엔지니어에게 배운 10가지 교훈 [번역]

   1. 빠른 것이 좋은 것보다 낫다
   2. 기술 부채(Technical Debt)에 대해 다시 생각하기
   3. 바보 같은 질문은 없다
   4. 스킬에 날개를 다는 커뮤니케이션 능력
   5. 당신이 할 수 있다고 해서 꼭 당신이 해야 하는 것은 아니다
   6. 남김없이 공유하라
   7. 일에 책임을 져라
   8. 최고의 코드는 아무것도 작성하지 않는 것이다
   9. 내가 테스트하지 않으면 결국 문제가 된다
   10. 실패를 받아들여라

   1. 빠른 것이 좋은 것보다 낫다.
   정말 옳은말이네요. 근데 항상 시간이 걸리더라도 좋은걸 만들고싶어지는게 문제인거같아요

   이 글 엄청나네요 이 내용을 실천하는 사람은 최고 인재 입니다 채용과 평가 학습의 기준으로 하겠습니다 감사합니다

   정말 좋네요! 회사 전체에 공유하고 싶은 내용입니다!

   도움이 되었다니 저도 좋습니다! 댓글 감사합니다
"
"https://news.hada.io/topic?id=5855","구글 AppEngine 자바 런타임 오픈소스로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글 AppEngine 자바 런타임 오픈소스로 공개

   - GAE Standard Environment 를 오픈소스로 공개
   ㅤ→ Prod Runtime, Local DevAppServer, GAE API 와 에뮬레이터 등 포함
   - GAE API : Datastore, Blobstore, Taskqueue, Memcache, Urlfetch 등
   - Remote API를 통해서 로컬에서 클라우드 Datastore 접근 지원
   - 공개 이유 : 로컬, 온프레미스, 다른 클라우드 플랫폼등에서 앱엔진을 사용할 수 있도록 지원하는 것을 목표로 함
   - 구글의 내부 인프라인 Borg 클러스터 관리 시스템과 연동하는 부분은 오픈소스에서 제외

   제가 예전 회사에서 앱엔진을 프로덕션에서 엄청 썼었는데..
   여러가지 문제로 끝내 아마존으로 넘어 갔거든요. 이제서야 오픈소스로 공개하는 군요.
   빨리 좀 공개해줬으면 더 편했을 수도 있었을 것 같은데.. ㅎㅎ
"
"https://news.hada.io/topic?id=5938","구글에 합격했습니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               구글에 합격했습니다

   - 40살에 Google Developer Relations 인턴으로 일하게 된 분의 이야기
   ""6개월마다 꼬박꼬박 지원했던 그 회사가, 3개의 회사에서 인턴쉽을 해도, 리트코드를 480 문제를 풀어도, 각종 플젝으로 이력서를 다듬어도 서류 단 한번을 통과시켜주지 않아서 여기 인턴으로는 못들어가겠다 생각했던 그 회사가
   제 나이 40살에 결국 문을 열어줬습니다.""

   정말 대단하시네요..
"
"https://news.hada.io/topic?id=5869","Show GN: Pingpop - 하루에 퍼즐 하나 풀기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Show GN: Pingpop - 하루에 퍼즐 하나 풀기

   Wordle 보고 이 게임도 하루에 하나씩 풀면 괜찮을 것 같아서 만들어봤어요.
   룰은 더 지니어스라는 티비 프로그램에 결! 합! 게임과 같아요.
   wordle처럼 매일 자정에 새로운 퍼즐이 나오고, 모든 사람이 같은 문제를 풀어요.

   #Pingpop 5 🌓
   Who cares of the full moon!
   오 재밌어요~
   멘트도 ㅋㅋㅋ

   내일은 틀리지 않고 한 번에 맞춰보세요!

   흐아 꽤 어렵네요 ㅠ
   #Pingpop 5 🌓
   Who cares of the full moon!

   카드가 어떤 조합으로 나오냐에 따라 난이도가 조금씩 다른 것 같아요 ㅎㅎ 오늘은 좀 어렵네요
"
"https://news.hada.io/topic?id=5877","몇년 경력을 원하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             몇년 경력을 원하시나요?

   ""How long ____ has existed ?""
   - React, Vue, Flutter, AWS, Rust ..
   - 각종 기술들이 언제 만들어졌는지를 쉽게 조회할 수 있는 사이트
   - 리크루터들이 나온지 1년된 기술에 10년 경력자를 찾는 우를 범하지 않도록 도와줌
"
"https://news.hada.io/topic?id=5861","뉴욕타임스, Wordle 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            뉴욕타임스, Wordle 인수

   - 작년 10월에 시작해서 지난 몇주간 수백만명 사용자로 급성장한 5자리 영단어 맞추기 게임
   - 개발자에게서 직접 인수한 가격은 ""수백만달러(in the low seven figures)""
   - 뉴욕타임스는 영어권 구독자를 위한 무료+유료 게임 구독서비스를 운영중
   ㅤ→ 주당 $0.75, 년간 $25
   ㅤ→ 크로스워드, 스펠링비, 수도쿠, Tiles, Vertex 등

   그리고 솔직히 이미 앱스토어에 수많은 카피캣이 나온 이 상황에
   국내에서 이런 간단한 아이디어의 앱이 성공했다면, 이정도 인수가 일어날 수 있었을까? 하는 생각도 듭니다.

   이 인수건에 대해 개발자 Josh Wardle 의 말
   https://twitter.com/powerlanguish/status/1488263944309731329
   - 상상했던것 보다 너무 커졌고, 1인으로 운영하기엔 너무 압도됨
   - Wordle 의 시작부터 뉴욕타임스가 중요했고, 뉴욕타임스가 인수한건 매우 자연 스러움
   - NYT로 옮기더라도 게임은 무료로 제공 될것이며, 기존 Win & Streaks들을 보존하도록 같이 작업중

   - Wordle - 5글자 단어 맞추기 https://news.hada.io/topic?id=5846
   글에도 있지만, 자신이 맞춘 단어를 공유하는 기능이 사용자를 엄청 끌어들였고, 이게 인수에 중요한 요소가 아니였나 싶네요.
   뉴욕타임스의 디지털 전략에서 게임은 아주 중요한 요소입니다.
   아래 뉴욕타임스 소개자료에도 나오니 같이 참고하세요.
   - (실패하지 않는) 뉴욕타임스 https://news.hada.io/topic?id=3172
   위 슬라이드의 내용을 한장씩 설명한 유튜브 영상도 제가 찍어둔게 있습니다 (48분)
   - 실패하지 않는 뉴욕타임즈 - NYT는 어떻게 디지털화에 성공했나 https://www.youtube.com/watch?v=K2qiAFTzDLU

   자신의 결과를 공유할 때, 이모지를 이용해서 모양을 출력해주는데요. 이게 엄청 영향을 줬을 것이라고 생각합니다. 디스코드로 워들 메세지가 계속 올라오니 저도 해보고 싶어져서 하게되었어요.

   - Wordles of the World - 전세계 언어 Wordle 모음 https://news.hada.io/topic?id=5900
   - Show GN: 우리말 Wordle https://news.hada.io/topic?id=5866
   - Show GN: Pingpop - 하루에 퍼즐 하나 풀기 https://news.hada.io/topic?id=5869
   - Pictle - Wordle 룰을 이용하여 그림을 맞추는 단어 게임 https://news.hada.io/topic?id=5895
   - Stockle - 미국 주식 티커로 풀어보는 Wordle https://news.hada.io/topic?id=5882
"
"https://news.hada.io/topic?id=5979",".NET 20주년주년

   - 무료, 크로스플랫폼, 오픈소스
   - 윈도우/리눅스/맥 지원
   2000 차세대 인터넷을 위한 .NET 플랫폼 공개
   2002 Visual Studio .NET 공개 : Windows Forms, ASP.NET, C# & Visual Basic 지원
   2005 F# 발표. 첫번째 함수형 .NET 프로그래밍 언어
   2008 ASP.NET MVC 소스코드 공개 (MS-PL 이였다가 Apache 2.0으로)
   2014 .NET 오픈소스화, .NET 재단 설립, .NET Core 프로젝트를 GitHub에서 시작
   2016 Microsoft가 Xamarin을 인수, Mono 가 .NET 재단에 참여, .NET Core 1.0 공개(RedHat DevNation에서)
   2021 .NET Conf에서 .NET 6 공개. C# 10, F# 5등
   2022 2/14로 20주년 행사

   - .NET 6 발표 - 가장 빠른 .NET https://news.hada.io/topic?id=5343
   - .NET Standard 의 미래 https://news.hada.io/topic?id=2860
"
"https://news.hada.io/topic?id=5910","구글 클라우드, Serverless Spark 서비스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    구글 클라우드, Serverless Spark 서비스 공개

   - 클러스터 관리 및 인프라 튜닝 고민없이 Spark를 사용 가능
   - 실 서비스명은 ""Dataproc Serverless for Spark""
   - 워크로드 실행되는 시간 단위로 과금됨
   ㅤ→ DCU(Data Compute Unit) 시간당 $0.06 (최소 1분단위 과금)
   - BigQuery 사용자가 Spark를 연결하여 사용 가능한 빅쿼리 커넥터 프리뷰도 공개
"
"https://news.hada.io/topic?id=5870","애플 웹캠 버그를 찾아서 10만불 상금 받은 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      애플 웹캠 버그를 찾아서 10만불 상금 받은 이야기

   - iCloud Sharing 과 Safari 15를 이용해서, 카메라 및 사용자가 방문하는 모든 웹사이트 정보에 접근 가능한 취약점
   - 4개의 0데이 버그를 찾아서 제보했고 $100,500 를 상금으로 받음
   - 해당 버그는 2022년초에 모두 패치되어서 관련 내용을 상세히 적어서 공개
   Universal Cross-Site Scripting (UXSS) 버그
   - 브라우저의 취약점을 이용하여 XSS 조건을 달성하고 모든 사이트에 대한 접근이 가능해짐
   - iCloud 파일을 다운 받아서 실행하는 ShareBear 앱이 한번 파일을 받아서 실행하면 다시 묻지 않는 것을 이용
   - 이미지를 한번 받아서 권한을 획득한 뒤, 실행가능한 바이너리를 다운 받게 만들어서 공격코드가 포함된 Webarchive 를 열게 만듦
   - 이 웹아카이브를 그냥 여는건 Gatekeeper가 막으므로, Windows URL 파일을 만들어서 링크 하도록해서 그것도 회피
   - URL파일 내용 안에 적을 실제 하드디스크 내의 주소를 알아야 하는데 그건 알기 어려우므로 먼저 DMG 파일을 마운트

   설명도 복잡한데.. 이걸 알아내기 위해서 얼마나 시간을 들였을지 모르겠네요.
   애플 취약점으로 돈 번 이야기는 예전에도 한번 올린 적이 있습니다.
   - 3달동안 Apple을 해킹해서 3.3억원 벌기 https://news.hada.io/topic?id=2995
"
"https://news.hada.io/topic?id=5932","Ploomber - 빠르게 데이터 파이프라인을 만들어주는 오픈소스 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ploomber - 빠르게 데이터 파이프라인을 만들어주는 오픈소스 프레임워크

   - Jupyter/VSCode/PyCharm등을 이용해서 개발
   - 코드 변경없이 프로덕션 서버에 배포 : 쿠버네티스, AWS Batch, Airflow, Kubeflow, Slurm 등
   - 기존 노트북을 모듈러한 파이프라인으로 리팩토링 가능
   # 주요 기능
   - YAML을 이용하여 빠르게 개발
   - 강력한 Python API로 유연함 제공
   - 자동으로 파이프라인의 이전 결과를 캐쉬하고 이전 실행에서 바뀐 것만 재계산
   - 쉘스크립트 또는 쿠버네티스,Airfllow,AWS Batch 등으로 분산 배포

   kafka를 대적할수는 없겠죠?
"
"https://news.hada.io/topic?id=5981","SSO Wall of Shame","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           SSO Wall of Shame

   SSO(Single Sign-On) 기능을 이용하려면 돈을 (많이) 내야하는 SaaS들 정리
   - SSO는 웹사이트 또는 제품의 인증을 Google, Azure AD, Okta 같은 타사 ID 공급자에게 아웃소싱하는 메커니즘
   - 직원이 많은 조직일수록 사용자 계정을 효과적으로 관리하는데 매우 중요
   - 즉, SSO 는 직원이 5명 이상인 모든 회사의 핵심 보안 요구사항
   - 그러나 SaaS 공급업체 들은 SSO를 활성화하는데 기본 제품가격의 2~4배까지를 청구하고 있어서, SSO사용을 줄이고 보안 문제를 생기게 함
   회사들이 ""보안을 중요하게 생각한다면"" SSO 기능은
   1. 핵심 제품의 일부로 제공하거나
   2. 적정한 수준으로 추가 비용을 받거나
   3. SSO 지원/미지원 티어 간에 이해 가능한 수준의 가격 차이를 둬야 함

   어찌 보면 SaaS들의 유료 플랜 도입을 유도하는 정책 같긴 한데요.
   그렇다고 몇배씩 비싼 플랜에만 저걸 넣어주는 것도 좋아보이진 않습니다.
   국내 SaaS들은 이거를 참고해서 잘 책정해주시면 좋을 것 같아요.
   그러고 보니.. 국내에도 Okta 대체하는 SSO 플랫폼 만드는 스타트업 정도는 하나 나올법한데.. 안보이네요.
   대체할만한 오픈소스들은 몇가지 있습니다.
   - Keycloak - 오픈소스 IAM https://news.hada.io/topic?id=1904
   - Ory - 오픈소스 Identity 플랫폼 https://news.hada.io/topic?id=4038
"
"https://news.hada.io/topic?id=5888","Ask GN: 여러분은 노트/정보/일정을 관리하실 때 어떤 툴을 사용하나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 여러분은 노트/정보/일정을 관리하실 때 어떤 툴을 사용하나요?

   개인적인 노트나 정보, 혹은 일정을 관리하실 때 어떤 툴을 사용하시나요 'ㅁ '?

   개인 스케쥴, 노트: Google Calendar
   회사 스케쥴, 노트: Outlook Calendar, Outlook Tasks
   네트워크 관리: Airtable - personal CRM template

   workflowy 얘기는 하나도 없네요. 역시 대세는 옵시디언인가.
   - 일정은 맥/아이폰 캘린더
   - 짧은 글, 드래프트, 매일 할 일 등은 workflowy
   - 지속되는 연구나 블로그로 갈, 길고 정리된 글은 노션 (블로그도 노션으로 써서)
   - 회사에서 태스크 관리는 지라 -> shortcut(formerly clubhouse)
   이렇게 쓰고 있는데 요즘 사용 도구가 좀더 많아져서 고민중입니다.
   - 스프레드시트의 2차원 공간이, 모임이나 미팅에서는 모두의 의견을 효과적으로 받고 참여 유도하는 데 좋아서 이쪽은 스프레드시트를 씁니다. 통계를 내거나 정렬할 때도 좋으니, 이런 것과 관련된 템플릿이나 평가표를 만들 때는 스프레드시트가 좋더군요.
   - 책이나 연구 정리하는 데에는 3차원 공간인 마인드맵이 장점이 더 많은듯해 miro를 써보고 있습니다.
   댓글에서 본 drafts + things 3 + obsidian의 조합이 끌리는데 새 툴을 3개나 써야 해서 부담이 되네요.
   곰곰이 다시 생각해보면
   - 큰 목표는 연간, 분기 OKR을 세워서 따르고 있음 -> 스프레드시트
   - (큰) 투두들은 직접 만든 ROI 평가 템플릿 써서 그 점수가 top인 걸 위주로 실행하고 있음 -> 스프레드시트
   - draft 생각을 적는 데는 workflowy로 충분히 만족. 속도도 빠르고 싱크도 잘 됨
   - 잊지 않아야 하는 일은 캘린더 일정으로 등록해둠
   - 블로그는 노션
   그러면 남는 것은
   - (매일 반복적인) 작은 todo 관리: workflowy로 하기 불편한데 이것만을 위해 things 3가 필요할까? 그냥 책상에 둔 작은 화이트보드로 충분하지 않을까?
   - knowledge base (second brain): 이게 가장 문제. 노션이 이걸 해주는 도구가 되어줄 줄 알았는데 부족하고 확실히 연결성이 약함.
   이렇게 정리해보니 다른 건 몰라도 옵시디언은 써볼까 싶군요.

   저는 최근에는 Asana, Swit 두개의 툴로 사이드프로젝트 일정들을 관리하고있어요.
   Swit 같은 경우는
   ㅁ 장점
   1. 챗과 테스크를 하나의 프로덕트에서 사용할 수 있어서 효율적
   2. 테스크 --> 챗, 챗 --> 테스크 로 크로스하게 업무 전환을 쉽게 공유 및 추가할 수 있어서 관리가 쉽다.
   ㅁ 단점
   1. wiki 와 같은 기능들이 부재해서 노션을 또 따로쓰고있습니다.
   asana도 대부분 비슷한데 대시보드, wiki등의 기능들을 더 제공해주고있어요. 그래서 요즘은 asana로 진행중입니다. 그런데 사용해보니 또 챗기능이 약해서 장단점이 서로있네요.

   https://clickup.com/ 을 사용을 고려해보심도 괜찮을듯 하네요. :)

   저는 vscode + dendron(확장) + gitdoc(확장) 사용중이에요.
   obsidian 을 고려해봤는데, 아무래도 VSCode 에 비해서는 텍스트 에딧이 좀 불편하더라고요.
   vscode 는 평소에 사용하는 툴이라서, 페이지 바로가기, 전체 문서에서 텍스트 찾기 등 여러 기능을 별도의 학습 없이 사용 가능한 것도 장점이고요.
   기존 obsidian 이 폴더 계층 구조를 가진다면, dendron 은 vault 에 flat 한 파일 구조를 가지며, 파일 이름에 .(dot) 을 넣어 문서 계층을 구분하는 방법을 사용합니다.
   마크다운 기반 + obsidian 과 비슷하게 태그/링크 기반 문서 그래프도 그려주긴 하는데, 그래프 뷰 화면은 obsidian 쪽이 훨씬 깔끔하고 좋습니다.
   아쉬운 점은, Obsidian 은 해당 문장을 에디팅 하는게 아니면 View 모드로 이쁘게 출력해 주는데, Dendron 을 사용하면 preview 모드를 사용해야만 이쁘게 출력하고, 아니면 raw 형태를 보여주는 정도?
   gitdoc 은 이제 간단한 확장인데, git init 을 한 다음, remote repository 을 설정해두면 변경점이 있을 때마다 자동으로 커밋 후 리모트로 푸시해줍니다(n분 이상 입력 없으면 커밋? 하는 방식). 혼자서 작성하는 것이니 인터넷만 잘 연결해둔다면 여러 컴퓨터에서 작업해도 merge conflict 없이 데이터가 잘 동기화 되고요. 빠릅니다.

   zzzz465님 안녕하세요. 좋은 활용 방안 감사합니다!
   혹시 어떤식으로 사용중이신지 여쭤봐도 될까요?
   단순 지식 정리용도 인지 실시간 배포(github page)도 하고 계신지 궁금합니다!
   github oolonek/dendron 과 같이 구현하고 싶은데 잘되지 않아서 여쭤봅니다!

   Obsidian이 업데이트 되어서 live preview(편집하면서 View모드처럼 보이는 것)을 지원합니다. 저는 비슷한 기능을 가진 theme를 설치해서 쓰고 있고 그걸로 만족해서 쓰진 않았습니다. :)

   live preview가 참 예쁘게 돌아가서 좋지만 아직 불안정합니다. 특히 Mac에서는 길게 쓰면 커서가 지속적으로 맛이 갑니다(.. ) 윈도우에서는 긴 글을 안 써서 재현되는지 확인을 못 해봤네요.

   맥북 메모와 캘린더. 노트/정보는 메모, 일정은 캘린더. 이것 저것 쓰다가 맥북 디폴트로 정착했습니다. Simple is best. ^^ 아이폰과 연동되는 점이 좋아요. 검색이 잘돼서 노트와 정보를 두서없이 넣어도 찾기가 편합니다.

   재작년에 우연히 emacs 의 org-roam 을 알게되어서 (물론 그 동기는 roam research 였지만 구독가격이 적잖이 부담이 되서 알아보다가...) 지켜보는데 지난 2021년 한해동안 org-roam v2가 출시되고 이후 org-roam-ui가 등장하면서 정말 파워풀해지는 걸 지켜본 1인입니다. 회사에서는 사무실에서는 주로 윈도우, 회의할 때는 아이패드를 쓰는 터라 이맥스는 사실 회사에서 쓰기 힘들어서 obisidian 으로 갈아탔구요. iCloud 윈도우 버전은 나름 동기화가 잘 되기 때문에 obisidian 을 주로 사용하고 있습니다. Obsidian에 캘린더 플러그인 설치하고 초간단 템플리트 설정하면 괜찮은 회의록 작성하고 메모앱으로 훌륭합니다. 각 문서간의 관계를 그래프로 그려줘서 roam research가 자랑하는 그래프 기능도 나름 대체가 됩니다.
   흥미로운 것은 emacs org-roam-ui 가 지속적으로 업그레이드 되면서 최근 버전은 정말 훌륭하게 업그레이드 되었다는 사실입니다. 집에서는 취미로 리눅스 / 맥을 사용하니 이만한게 없지만 활용도는 떨어지는 업그레이드 되는 것은 살펴보고 있습니다. 문제는 윈도우에서의 emacs 인데 emacsql 이 잘되다가 업그레이드 하면서 뭐가 또 에러가 나는지 문제가 생겨서 org-roam을 사용할 수 없게 되었네요. 픽스하기 귀찮아서 그냥 두었습니다.
   아참 저는 synology nas를 집에 두고 synology drive 를 이용해서 윈/맥/리눅스 동기화 해서 씁니다. 매우 훌륭합니다. 형편이 되시는 분들은 synology drive 를 동기화 스토리지로 쓰라고 말씀드리고 싶네요. 구글드라이브나 원드라이브는 이제 스트리밍 방식으로 바뀌어서 동기화 이슈가 있습니다. synology drive 도 모바일기기 (안드로이드, iOS)에서는 그렇게 큰 도움이 되질 않더군요.
   아이패드를 버리고 맥북에어를 사서 emacs + org-roam 설치하면 가장 확실한 솔루션일 듯 한데 이게 또 구매 비용이 드는터라 고민중입니다. org 는 쓰기에 따라 web publishing 도 할 수 가능한데
   프로그래밍이나 마크다운, org mode 를 모르시는 분은 notion 이나 원노트가 가장 좋은 듯 싶어요.
   두서없이 적어봤습니다.

   Error (org-roam): Failed to process xxx.org with error Creating pipe: Too many open files, skipping...
   전 최근에 윈도우 emacs에서 db sync를 할 때, 파이프 생성하다가 에러가 나서 (setq w32-pipe-buffer-size (* 64 1024)) 파이프 버퍼 사이즈를 늘려서 해결했습니다.

   윈도우에서 emacs 를 써야 하나 생각을 합니다. WSL2 에서 쓰는 것을 권해드리고 싶지만 WSL2 도 세팅할려면 또다른 벽이 있는터라요.

   급히 적느라 오타가 너무 많네요. 수정 버튼을 못찾아서 댓글로 양해를 구합니다.

   앗. 저는 추가로 pocket을 씁니다. 노트 + 웹 클리퍼보다는 그냥 웹 클리퍼 전문으로 나온 애가 더 예쁘게 나오더라고요. 특히 웹 페이지 정보는 노트에 들어가는 정보와 종류가 다르다고 생각해서..

   저는 Obsidian+Draft 조합을 주로 쓰게 된지 1년 정도 된것 같습니다. 그 전에 거쳐온 것들을 보면 evernote, simplenote, OneNote, Notion 등이 있네요. 아직도 mem.ai나 logseq등을 째려보고는 있습니다.
   다만 현재 고민은.. 여러 웹 정보를 클리핑하는거나.. 웹 링크들을 모아서 정리하는 것에는 Obsidian이 좀 아쉬운 부분이 많고 + 첨부파일들을 모아서 관리하기 힘들다는 점? 그런 것들 때문에 DevonThink도 조금은 고려해보고 있습니다. Todo역시 Obsidian에서는 아쉬운 부분이라 플러그인으로 어느 정도 해결은 하고 있지만 Things나 다른 Todo로 가볼까도 생각중이구요.
   여러 툴들을 전전긍긍하게 된 계기 중에 제일 큰 것은 회사의 보안 정책인 것 같습니다;; 앞에서 쓰다만 것들은 대부분 계기가 회사에서 막혔기 때문이구요.. (웹이 막히고 앱이 막히거나 반대이거나.. 여튼 둘 중에 하나라도 되면 그래도 좀 쓰려고 노력했는데.. 둘 다 막히면 의미가 없죠) 요새는 재택을 하다보니 이런 부분이 더 중요해지고 + 멀티 플랫폼(윈도우/맥/폰)이 되는게 아니면 못 쓰겠더라구요.
   Obsidian은 git을 사용해서 Sync중이고, 폰은 단순 View로만 사용햡니다. 이동중에 메모는 Draft를 사용해서 모은 후에 나중에 Obisidian으로 합치고 있습니다.
   하는 일이 매니징/기술에 대한 공부/개인 일정/사이드 프로젝트(아직은 생각만하고 있지만..) 등등 여러 Context와 각각의 정보의 특성이 다르다 보니 하나의 툴 안에서 관리하는 것이 쉽지는 않네요. 저번에도 url관리에 대해서 Obsidian안에서 한다고 댓글을 달았던 적이 있는데 그것도 개수가 많지 않을 때이고.. 가령 특정 주제(예를 들어 머신러닝의 특정 주제라면..)를 리서치한다고 하면 모든걸 다 text로 긁어와서 정리하거나 요약하기 보다는 link/pdf/웹클립들을 모아두는게 좋을 수 있는데 이럴땐 Obsidian이 취약한 것 같습니다.
   일단은 툴에 집착하기 보다는 계속 쓰고 정리하는 것을 우선으로 하고 있어서 꾸준히 쓰면서 조금씩 바꾸고 확장해나가보려고 생각은 하고 있습니다. 한 6개월 지나면 뭔가 또 바뀌어 있을 수도? ㅎ

   https://news.hada.io/topic?id=4711 여기에 썼듯이 개인 일정 관리는 Wrike 쓰고 있습니다.
   그외 노트는 구글 닥스, 에버노트, 구글 킵 정도 쓰는 것 같네요

   종이 노트, 구글 캘린더랑 리마인더가 필요한 메모는 구글 킵, 간단한 투두는 구글 투두 씁니다

   체계적인 정리는 notion, 일정관리나 업무와 관련된 것들은 ticktick, 빠른메모는 sublime을 사용합니다.
   ticktick은 최근에 필요해서 한참 검색하다가 발견했는데, 여러모로 만족하면서 사용중입니다.
   ticktick을 쓴지 아직 얼마 안됐지만 개인적으로 좋았던 점 몇가지는,
   - Note와 Todo 타입을 선택해서 작성가능 (개인적으로 2가지가 모두 필요했습니다.)
   - 외부 캘린더 연동 가능하고, 다가오는 일정을 작성한 Todo와 같이 확인 (업무와 관련된 일정은 캘린더에 모두 있어서)
   - Habit으로 간단한 습관 관리 가능 (개인적인 습관 -독서 같은- 을 등록하고 체크 하는데 나름 동기부여가 됩니다)
   - priority나 due date를 설정하면 정리해서 한 눈에 보여줌
   - 일주일간 완료한 일들의 summary를 보여줌 (한 눈에 할 일들을 파악이 쉽고, 완료한 일들도 정리가 되어 있어서 가끔 보고서 작성하고 할 때 도움이 됩니다)

   에버노트 처음 나왔을 때 부터 지금까지 사용 중입니다.
   매일 노트를 하나 생성하고 거기다가 중구난방으로 메모한 다음, 자기 전에 정리하는 식입니다. 분류가 필요한 것들은 분류 별로 페이지를 하나 생성하고 거기에 추가하고 수정하고 개별 페이지로 링크를 걸어서 관리합니다. 일종의 위키처럼...
   일정이나 투두는 구글 캘린더와 태스크로 정리합니다. 회사 일은 지라나 컨플루언스.
   노션을 쓸까 여러 번 고민했는데, 이래저래 시도하다가 아직 못 옮기고 있네요. 노션의 임포트가 잘 안 되기도 하고, 클리핑이 아직 에버노트 수준은 아니더라고요. 결정적으로, 에버노트에서 검색 필터로 1~14년 전 오늘, 일주일 이렇게 검색해서 당시 쓴 글이나 클리핑한 글을 되돌아 보는게 취미인데 이걸 포기하기도 좀 어렵네요. 혹시 노션이나 여기서 언급된 다른 노트 앱에 이런 기능이 있을까요?

   - 간단한 메모 및 PC, 스마트폰 연동: ticktick
   - 하루 일과 수시로 적고 완료 표시: https://www.pomotodo.com/
   - 일, 주, 월, 년 단위로 계획과 실천을 적기: OneNote
   - 업무, 개인, 공부 등등 모든 주제로 글쓰기, 정리하기: OneNote 입니다

   OneNote를 헤비하게 쓰는데 하나 안좋은 것이 검색기능이 좀 약하다 싶습니다

   전 emacs org-roam 모드를 사용해서 노트를 정리하고 있습니다. roam research를 emacs 방식으로 구현한 겁니다. emacs를 안 썼으면 obsidian을 사용했을 거에요. 익숙한 emacs에 구현된 게 있으니 다른 걸 선택할 이유가 없어서 쓰고 있습니다.
   임시 노트는 ios 노트 앱을 사용하고 있습니다. 임시 노트 용도로만 사용해서 ios 노트 앱에 있는 내용은 모두 org-roam에 옮겨 적습니다.
   일정도 emacs에서 관리할 수 있긴 한데, 아직까진 구글 캘린더가 더 편해서 구글 캘린더를 사용하고 있습니다.

   emacs 애호가이시군요! Roam Research를 팽하게된 가장 큰 원인이 너무 느려서인데 ( 5000자 넘으면 한 문단 쓸떄마다 3초간 기다려야 합니다 ) emacs를 썼으면 달랐을 것 같다는 생각이네요. 멋진 답변 감사합니다! 'ㅁ '//
   앗. 그런데 emacs하니까 생각난건데요. vim은 시중에서 장점(강력한 텍스트 에디팅 기능과 효율적인 단축키, 마우스 안 써도 되고.. 등등... ) 소개가 많은데 emacs는 슬프게도 제가 vim의 대항마로만 들어봐서요(... ) onyecloudy님이 생각하는 emacs의 장점은 무엇인가요?

   확장성이 장점이라 생각합니다. 이런 장점이라서 입지가 흔들리는 것 같아요. vscode 같이 확장성이 좋은 섹시한 에디터가 나오면 굳이 emacs? 라는 생각이 들거든요.
   하지만 진짜 emacs의 장점은 고인물 아니 고인물이라고 하기에는 실례네요. 석유 정도로 표현해야 맞겠네요. 이제 다른 에디터로 가는 걸 포기해버린 분들이 지키고 있는 거라고 생각합니다. vscode는 나중에 또 다른 섹시한 에디터로 대체될테지만 emacs는 그때까지도 살아남아 있을거라고 생각하거든요.
   걍 죽을때까지 쓸 왠만한 건 다 되는 에디터를 익히고 싶다면 emacs를 추천해요. vim의 편집 문법도 emacs에서 사용할 수 있습니다. 전 그렇게 사용하고 있어요.

   답변 감사합니다. 역사와 전통이 깊다보니 다른 툴로 비슷한 숙련도까지 도달하는데 엄청 오래걸리실 분들이 많으시겠네요... 그런 분들 덕분에 유지보수가 되고, 그래서 죽을 때까지(... ) 지원이 되는 선순환이...!

   Obsidian에 대부분의 노트를 적습니다. ffdd270님이 길게 적어주신 내용이 모두 맞습니다. 추가할게 있다면 git 플러그인을 통한 동기화가 당연히 잘 됩니다. 근데 iOS에서는 이게 좀 난감한 부분이 있어서, 저는 공식 서비스인 Obsidian Sync를 사용하고 있습니다.
   이외에 일정은 그냥 캘린더에서 하는데, 할일과 함께 일정을 확인하는 것은 모두 Things 3에서 하고 있습니다. Today 섹션에 아무 것도 남아 있지 않을 때의 쾌감이 너무 좋아요.
   제가 맥과 iOS 중심으로 살다보니, 이 모든 서비스들을 연결하는 앱은 Drafts 5입니다. 뭐든 여기에 적고 나서 Obsidian으로 보낼지, 아니면 Things 3로 보낼지 결정하는거죠. 이게 손에 익으면 아주 편리합니다.

   Draft 진짜 좋네요... Obisdian과 다른 디지털 막공책이라는 느낌으로 쓰는데, 평소라면 문서화가 안됐을 긴 채팅이나 의견들이 여기에 먼저 적히니까 정말 편해요. ( 이것도 Draft에 적고 적었어요! ) 정말 감사합니다. 'ㅁ '/

   오오. 아직 주 작업 환경은 Windows에 있어서 ( 게임 개발이고, 제가 윈도우 용으로 만든 툴킷이 많아서 ㅠㅠ ) 당장 넘어갈 수는 없겠지만 훌륭한 환경인 것 같아요. 지금 저는 Drafts 5에 해당하는 환경을 Obisidian Calender에 오늘 날짜에 해당하는 문서로 적고 있는 것 같은데 썩 편하게 적는다는 느낌이 크게 없어서 아쉬웠고, Notion 캘린더보다는 미시적이고 Session보다는 좀 더 거시적인 무언가가 있으면 좋겠다고 생각했는데. Things 3가 기대되네요. 'ㅁ '/ 좋은 후기 감사합니다!

   예전엔 에버노트 쓰다가 노션 한국어 지원 시작하자마자 노션으로 갈아탔습니다.
   일정 관리는 귀찮아서 todo로 하게되네요. 삼성 리마인더가 마소todo랑 동기화가 돼서 그걸로 폰과 pc 양쪽에서 사용하고 있습니다.

   Keep it Simple! 하시군요. 저도 예전에는 툴킷을 이것보다 더 썼는데, 너무 복잡하고 작업 오버헤드가 너무 심해서... 점점 단순화하려고 하고 있어요. 멋진 후기 감사합니다. \(__ )

   저도 대부분의 간단한 정보는 Obsidian에 정리합니다. 아주 체계적으로는 아니지만, 제가 윈/맥/아이폰 돌아가며 사용하다보니 iCloud 동기화만으로도 대충 가능해서 편하게 쓰고 있어요.
   일정은 그냥 구글 캘린더를 사용하는데요.
   모바일은 그냥 구글 캘린더앱을 사용하고, 윈/맥 데스크탑에선 베타 중인 Cron을 사용해보고 있습니다. https://cron.com/
   긱뉴스 작업은 컨플루언스/지라 를 쓰기는 하는데 활용빈도가 높은 편은 아닙니다. ^^;

   오오. 좋은 정보 감사합니다. Cron을 보니까 생긴게 너무 신기해서 한번 베타 신청을 넣어봤어요.
   제가 이슈 트래커를 쓰게 된 계기가... 저는 Only 캘린더로만 관리했을 때 이 이슈가 얼마나 밀렸고, 이 이슈는 적어도 언제 내보낼 수 있는가... 에 대한 해답을 캘린더 내부에서는 찾을 수 없어서 버전 시스템이 있는 이슈 트래커를 도입하게 된 것 같아요. 자연스럽게 2주동안 얼마나 작업할지 미리 정할수도 있어서 좋은 것 같고요.
   멋진 후기 감사합니다. \(__

   # 개인적인 연구, 개인적인 글쓰기, 소설 작성, 일일 / 주간 회고 - Obsidian
   ## 장점
   - 제 데이터가 제 기기에 있고, 그건 마크다운입니다. 이건 프라이버시 측면 뿐만 아니라 기존 툴과 결합이 기가 막히게 된다는 뜻입니다. 모든 문서에 특정 문자열을 바꿔야 할 때 Obsidian은 그저 가서 grep 한번 때리면 울면서 하나하나 찾아 다니던 Notion은 갔다 버리고 싶어집니다(... )
   - 강력한 플러그인 환경을 가지고 있고, 데이터는 MD 포멧이기에 강력한 기능들을 많이 사용할 수 있습니다.
   - 강력한 테마 환경또한 가지고 있으며, Electron 기반이고 CSS 커스텀이 강력하기에 원하는 환경을 마음대로 꾸밀 수 있습니다.
   - 위그직 에디터가 버그가 꽤 있지만 훌륭하게 돌아갑니다.
   - 에디터에서 부족한 부분은 다른 텍스트 에디터로 매꿀 수 있습니다. (Ex. 정규식, 마음에 안 드는 복붙 포맷. 등등...)
   - 유료 플랜이지만, 동기화가 기대 이상으로 잘 작동합니다.
   - 제 데이터가 제 기기에 있기에 Git이나 다른 동기화 서비스를 대안으로 사용할 수 있는 게 안심입니다. 특히 강력한 플러그인 환경덕분에 Git 자동 동기화 플러그인으로 Sync 문제를 해결할 수 있을지도 모릅니다(.. ) 안 써봐서 함부로 말하기 그렇네요.
   ## 단점
   - 기본적으로 제공되는 틀이 밑바닥부터 시작하면 뭘 해야할지 모르게 됩니다. 저는 이것때문에 처음 썼을 때는 실패했고. Roam에서 충분히 적응한 후 돌아왔을 때는 잘 썼습니다.

   # 단기적인 프로젝트 관리, 일정 관리, 구조적으로 관리하면 편한 문서들 - Notion
   ## 장점
   - 데이터베이스 뷰가 자유로워서 데이터들을 필드 데이터에 따라 원하는 규격으로 볼 수 있으며, 데이터 필드도 자유로워서 많은 방법으로 우선순위를 결정할 수 있습니다.
   - 데이터베이스가 결국 문서들의 리스트이고, 데이터베이스 뷰는 그 리스트를 어떤 기준으로 어떻게 보여줄가를 결정하기 때문에. 캘린더로 일정관리시 가벼운 이슈는 이름만 적은 문서로 빠르게 만든 다음 상태만 관리할 수 있고, 무거운 이슈는 문서 내용을 적어 어떻게 이슈가 진행되었는지 추적할 수 있습니다.
   - 통합 지원으로 외부에서 문서를 관리하기 편해졌습니다.
   - 외부와 실시간 작업이 부드럽고 우아하게 됩니다. 그게 문서 작업이던, 칸반 보드 관리던요.
   ## 단점
   - Obisidan과 다르게 데이터는 모두 Notion 서버에 있으며, 어떠한 Export도 노션에서 본 것만큼 퀄리티가 나오지 않으며. 대부분 데이터는 누락되어있고, 대부분 형편없습니다. 문서 연결로만 예를 들자면, Obsidian은 제가 문서를 연결하더라도 단지 그 구문은 Text일 뿐이며 Obsidian이 파싱해서 의미를 만드는 것이지만. Notion은 Export시 아무것도 남지 않습니다. 문서의 연결이 사라집니다.
   - 위 문제로 원래 Notion에서 개인 문서도 관리했지만 이제는 하고 있지 않습니다.
   - 글을 많이 쓰면 느립니다. 블록 기반이라서 그런가봐요.

   # 뽀모도로 타이머 - Session
   ## 장점
   - 예쁩니다. 뽀모도로 타이머 중 개인적으론 가장 예쁩니다.
   - 오늘 어떻게 집중했는지 시각적으로, 그리고 예쁘게 보여줍니다.
   - 어제 어땠는지 보고서도 보여줍니다. 몇시간 집중 했고, 작업 비중은 어땠고..
   - 한 주 / 한 달 보고서도 만들어줍니다.
   ## 단점
   - 모든 기능을 사용하시려면 Mac OS를 사용하셔야만 합니다. 주간 / 한달 보고서를 제외한 기능은 iOS에도 있습니다. Windows와 Linux는 지원하지 않습니다.
   # 장기적인 프로젝트 관리 - YouTrack
   ## 장점
   - 10인 이하 팀에게는 무료입니다. Jetbrains에서 호스팅도 해주며, 주소도 줍니다. 그게 마음에 들지 않아 self 호스팅을 하시더라도 10인 이하 팀은 무료입니다.
   - 장기적인 프로젝트 관리와 스프린트, 2주마다 목표를 세워 달성하는데에 필요한 목표들을 관리할 때 매우 효과적입니다. 혼자 쓰더라도요.
   - 주기적인 빌드를 만들 수 있도록 도와줍니다.
   - 개인적으로는, Redmine과 Jira에 비해서 UI가 더 마음에 들었습니다.
   ## 단점
   - 너무 많은 기능이 처음부터 제공되며 해당 기능 중 당장 필요한 것들을 추리는데에 오래 걸립니다. ​

   .... 적고 나니 너무.. 기네요.... ;ㅁ ; 간단히만 달아주셔도 감사하겠습니다..
"
"https://news.hada.io/topic?id=5873","MariaDB 상장 계획 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            MariaDB 상장 계획 발표

   - SPAC(Angel Pond)과의 합병을 통해서 NYSE에 $672M(8천억원) 가치로 상장 예정
   ㅤ→ Angel Pond는 골드만삭스의 전 파트너와 알리바바의 공동 설립자가 만든 SPAC
   ㅤ→ 알리바바는 2017년부터 MariaDB의 투자자 이기도 함
   - MariaDB는 MySQL이 Sun에 2008년 인수된 후, MySQL 5.1.38에서 포크하여 릴리즈를 시작

   - MariaDB vs MySQL - 호환성/포크된 이유/주요 차이점 비교 https://news.hada.io/topic?id=232
   위 댓글에도 썼지만
   MySQL 의 이름은 ""내SQL"" 이 아니라 개발자 Michael Widenius (닉네임 Monty) 의 첫째딸 이름이 ""My""
   둘째딸 이름이 ""Maria"" 여서 이름이 저렇게 정해진 것 입니다.
"
"https://news.hada.io/topic?id=5851","Serverless Framework V3 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Serverless Framework V3 릴리즈

   - stage 파라미터 지원 : prod/dev 등 현재 스테이지에 맞는 설정 값 사용 가능
   - Onboarding 기능으로 빈 폴더에서 실행시 간단히 서비스 생성 및 대시보드 설정 가능
   - CLI를 깔끔하게 재디자인
   ㅤ→ deploy 할 때 출력를 최소화
   ㅤ→ --verbose 옵션으로 상세 정보 출력 기능
   ㅤ→ 에러 관련 정보 출력 개선
"
"https://news.hada.io/topic?id=5852","구글의 Topics API는 프라이버시 문제 해결없이 FLoC을 리브랜딩만 한 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             구글의 Topics API는 프라이버시 문제 해결없이 FLoC을 리브랜딩만 한 것

   - Topics API는 근본적으로 FLoC와 동일한 아이디어
   ㅤ→ 브라우저가 당신이 방문하는 사이트를 보고 그 정보로 검색 관심 분야를 분류한 다음 해당 정보를 광고주,트래커 및 사이트와 공유
   - 두가지 중요한 차이점이 있지만, 핵심 프라이버시 문제는 해결하지 않음
   ㅤ→ FLoC 에선 브라우저가 학습한 관심사 정보를 모든 사이트에 브로드캐스트 하지만, Topics에선 사이트 A의 광고주가 사이트B에 있는 경우에만 사이트B에서 관심사를 알 수 있음
   ㅤ→ FLoC 에선 학습한 관심사 정보가 변하지 않아서 핑거프린팅 하기 쉽지만, Topics에선 약간의 무작위 성을 추가해서 핑거프린팅이 어려움
   - 중요한 문제는 ""당신이 민감하다고 생각하는 것들이 무엇인지를, 구글이 결정해서는 안된다는 것""
   ㅤ→ 구글은 ""민감하지 않은"" 관심사 정보만 공유할 것이라고 했지만, 카테고리 상으로 민감하지 않은 데이터라는 것은 없음
   ㅤ→ 즉, 언제나 안전하거나 언제가 공유 가능한 데이터라는 것은 없다는 것. 누군가에게는 안전한 정보도 누군가에게는 비밀로 유지되어야 함
   ㅤ→ ""취업"" 이라는 관심사는 민감한 정보일까 ? 첫 직장을 찾는 대학졸업 에게는 아니겠지만, 내가 다니고 있는 회사의 홈페이지를 열고 있는 상태라면?
   ㅤ→ ""치즈와 포도주"" 는 어떨까? 당신에게는 민감하지 않겠지만, 특정 종교에 있거나 식이요법 커뮤니티에 있는 사람에겐 민감하지 않을까 ?
   - 민감한 카테고리는 제외할 수 있다고 하는데, 대부분의 사람들은 그런 옵션이 있는지 조차 모를 것
   - Topics API는 구글과 같은 독점 기업에 더 유리함
   ㅤ→ 어떤 면에서 Topics API는 FLoC보다 더 나쁨
   ㅤ→ FLoC에서 모든 광고주들은 각 사용자에 대해 동일한 관심사를 학습하지만, Topics에선 각 광고주가 노출되는 페이지에서만 사용자의 관심과 행동을 학습함
   ㅤ→ 즉, 구글과 같은 대규모 광고주는 Topics API가 변경되어도 영향을 받지 않지만, 소규모 광고주는 상당한 불이익을 받게 됨
   - FLoC, Privacy Sandbox 및 Topics API는 개인 정보를 개선하지 않음
   ㅤ→ 기본 설치되는 크롬에 비해서 약간 덜 나쁘게 만드는 것 일뿐
   ㅤ→ 이런 것들은 진정한 프라이버시 보호를 제공해온 다른 브라우저를 따라잡기 위한 구글의 불완전하고 불충분한 노력일 뿐임

   - 구글, FLoC을 대체할 새 ""토픽 API"" 공개 https://news.hada.io/topic?id=5830
"
"https://news.hada.io/topic?id=5916","“NFT, 잘 모르겠지만 일단 한번 팔아 봤습니다.”","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     “NFT, 잘 모르겠지만 일단 한번 팔아 봤습니다.”

   - 얼마 전 ‘pet rock 053’이라는 'NFT' 상품 하나가 13억 원에 판매됨
   - 작품의 이름을 번역하면 ‘애완용 돌멩이 53번’
   - 혹시 53이라는 숫자에 심오한 의미가 있거나, 애완용이라는 개념에 대한 철학적 함의가 있을까? -> X
   - 13억 원은 저렴한 편, 1번 돌멩이는 525억 원으로 오징어 게임 우승자도 못 살 가격
   500원짜리 붕어빵을 슈크림으로 먹을지 팥으로 먹을지 고민하는 게 더 익숙한 필자의 NFT 판매 여정
   0단계: NFT 이해하기
   1단계: 거래소•블록체인 선택하기
   2단계: 클레이튼 지갑 및 NFT 만들기
   3단계: 오픈씨에 내 NFT 판매하기
"
"https://news.hada.io/topic?id=5927","당신이 NFT에 대해 알아야 할 모든 것 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      당신이 NFT에 대해 알아야 할 모든 것 [번역]

   NFT 마켓플레이스 오픈씨가 작성한 사람들이 가진 NFT의 일반적인 오해, 그리고 NFT 시장의 현 상황 등 대체 불가능 토큰을 이해하기 위한 필수 지식
   - 대체 불가능 토큰이란 무엇일까?
   - 블록체인 기반의 대체 불가능 토큰(고유 속성: 표준화, 상호 운용성, 거래 가능성, 유동성, 불변성, 입증 가능한 희소성, 프로그래밍 가능성)
   - 대체 불가능 토큰 표준
   - 이더리움 외 표준
   - 온체인(On-chain) vs 오프체인(Off-Chain)
   - 오프체인 스토리지 솔루션
"
"https://news.hada.io/topic?id=5951","openapi-typescript + react-query로 typesafe하게 rest api와 통신하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      openapi-typescript + react-query로 typesafe하게 rest api와 통신하기

   - 백엔드에서 제공하는 OpenApi Specs을 가지고 openapi-typescript를 활용하여 api의 parameters, response에 대한 type 생성
   - ts-toolbelt에서 제공하는 type utils을 활용해서 필요한 유틸 type들 작성
   - openapi-typescript에서 생성해준 typing과 ts-toolbelt로 만든 유틸 type을 활용하여 react-query의 useQuery를 wrapping하는 useOAIQuery를 만들어서 typesafe하고 조금 더 편한 서버통신을 가능하게 한 시도를 간단히 글로 정리함.
"
"https://news.hada.io/topic?id=5890","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   바다 구경한번 해보려고 합니다.

   20년부터 고민하던 스위치를 사러 일렉트로마트 구경을 가볼까합니다. 추가로 재택근무를 위해 의자도 보려구요. 요즘 허리가 아파요 ㅠㅠ

   지난 주 보드겜 팟을 만들었는데요. 첫 모임에 8시간 넘게 놀았어요... @@
   노는 것도 체력이 필요하네요.
   매주 작게나마 그리던 그림이 잘 안그려졌었는데, 이번 주말에는 영상 강의 보며 따라해보려고 해요.

   - 소설을 적고
   - 아직도 끝나지 않은 1년 회고를 완성하려고 노력하며
   - 재미있을 것 같은 프로젝트를 해볼 예정이며
   - 완전히 뻗어서 3주간 의욕이 날아간 사건 이후에 포스트모템을 해볼 예정입니다.
"
"https://news.hada.io/topic?id=5965","브라우저 이해하기 시리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             브라우저 이해하기 시리즈

   Google Chrome 팀에서 근무하는 Kosamari 가 작성한 브라우저의 동작 방식 아티클들과
   1️⃣ http://bit.ly/browsers-pt1
   2️⃣ http://bit.ly/browsers-pt2
   3️⃣ http://bit.ly/browsers-pt3
   4️⃣ http://bit.ly/browsers-pt4
   브라우저의 동작 방식에 대해서 이야기하는 아티클입니다:
   https://browser.engineering
"
"https://news.hada.io/topic?id=5917","First 100 Users - 첫번째 100명 사용자 구하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   First 100 Users - 첫번째 100명 사용자 구하기

   스타트업의 첫 사용자들을 구하는 팁들을 정리
   - 아웃바운드 마케팅
   - SEO
   - 검색 광고 / SEM
   - Organic / Paid Social
   - 스폰서십
   - 커뮤니티
   - 이메일
   - 레퍼럴
   - PR
   - 콘텐츠 마케팅
   - IRL
   - Engineering as Marketing
   - Word of Mouth
   * 주간 이메일 뉴스레터 제공
"
"https://news.hada.io/topic?id=5876","iOS 15.4 부터 웹 푸시, WebXR, PWA 지원 확장 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 iOS 15.4 부터 웹 푸시, WebXR, PWA 지원 확장 예정

   공개된 iOS 15.4 베타 버전에서 알게된 것
   - Web App Manifest가 icons 를 지원하고 로딩이 빨라짐
   - Web Push Notification 지원
   - CSS 및 UI 추가됨. :has(), accent-color,
   , resolution 미디어쿼리
   - WebXR 지원
   - 웹 퍼포먼스 관련 추가 : Navigation Preload, Lazy Image Loading, Web Locks, TransformStream 등
   - Opus/Vorbis Audio 코덱 지원

   와 web push 는 영원히 지원안할줄알았는데
"
"https://news.hada.io/topic?id=5914","WebAssembly에 주목해야 할 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         WebAssembly에 주목해야 할 이유

   - WebAssembly(WASM)소개부터, 오늘날 어디에 사용되고 있으며, 앞으로 사용될 분야에 대한 예측
   # WASM의 특징
   - 포터블: 표준화된 바이트코드로 브라우저/서버 어디서든 실행
   - 유니버설: C,Rust,Go,Python,Ruby등 다양한 언어들이 Wasm으로 컴파일
   - 네이티브 수준의 성능: 평균적으로 네이티브보다 1.45~1.55배 느리지만 JavaScript보다는 항상 빠름
   - 빠른 시작 시간: 도커 컨테이너보다 10~100x 빠르고, 브라우저에서도 Javascript 파싱/인터프리팅 보다 빠름
   - 안전: 웹을 염두에 두고 개발되어 메모리 샌드박싱 및 기능 제한 등을 통해서 안전
   # WASM이 유용한 분야
   - 자바스크립트 속도 개선
   - 프로그래밍 언어간 상호 호환성 제공
   - 다언어 플러그인 시스템을 위한 런타임
   - 임베디드 샌드박싱 엔진으로 다양한 써드파티 라이브러리를 안전하게 가져다 사용
   - Containerization 의 미래 : Docker보다 빠르고, 작은 풋프린트 및 안전함
   - FaaS/Serverless 플랫폼
   - 블록체인 : 스마트 컨트랙트 실행을 위한 고성능 런타임으로 활용 가능
   # 예측과 기회
   - 새로운 어플리케이션 아키텍처
   ㅤ→ 마이크로서비스를 더 작은 컴포넌트로 세분화 가능
   - Brownfield Deployment
   ㅤ→ 오케스트레이션 레이어에서 Docker 와 Wasm 콘테이너의 통합
   - 표준화된 Serverless/Edge Framework
   ㅤ→ 현재는 Fastly,Lambda,Fission 등이 자체적으로 플랫폼을 구축하지만, 표준화 될 가능성도 있음
   ㅤ→ ""Terraform of Serverless""
   - Package Management
   ㅤ→ 모든 언어들은 패키지 에코시스템을 가지고 있음
   ㅤ→ WASM에는 패키지 매니저가 필요함. WAPM이 있긴 하지만 거의 휴면 상태
   # 결론
   - WebAssembly가 그렇게 좋은데 왜 더 널리 사용되지 않을까 ?
   ㅤ→ 마케팅이 좋지 않음. Web 이나 Assembly에 국한되지 않기 때문에 이름부터 잘못된 것
   ㅤ→ 대부분 웹 개발자를 대상으로 마케팅 했지만, 실제 포텐셜은 브라우저를 넘어섬
   ㅤ→ WebAssembly 표준이 아직 없음
   ㅤ→ 언어간 상호 호환성은 아직 형편없음
   ㅤ→ 개발자 경험이 많이 부족함
   - 하지만 많은 부분이 개선 중이고 1~2년 이내에 수용 가능한 상태에 도달할 것
   - WebAssembly 관련 활동 및 에코시스템, 커뮤니티 폭증기에 접어 들었음

   긱뉴스에서 WebAssembly/WASM 으로 검색해봐도 엄청 많은 수의 글들을 보실 수 있습니다.
   주요 기사들만 나열해 봅니다.
   - WebAssembly가 W3C 권고안으로 공식 발표 https://news.hada.io/topic?id=1091
   - 웹어셈블리, 브라우저 밖으로 확장 가능할까? 바이트코드 동맹 뜬다 https://news.hada.io/topic?id=901
   - MS/Google/Arm등이 Bytecode 연합에 조인 https://news.hada.io/topic?id=4172
   ㅤ→ WebAssembly가 브라우저를 넘어서 사용되는 것을 목표로 만든 비영리 조직
   - 2020년과 이후 JavaScript의 동향 - WebAssembly https://news.hada.io/topic?id=2778
   - WebAssembly는 어떻게 JavaScript를 빠르게 실행할 수 있는가 https://news.hada.io/topic?id=5167
   - 아마존 프라임 비디오, WebAssembly 사용하여 8000개의 디바이스 타입 지원 https://news.hada.io/topic?id=5858
   - WebAssembly가 네트웍 프록시에 새로운 확장성을 가져오다 https://news.hada.io/topic?id=1722
   - Wasmer 1.0 릴리즈 https://news.hada.io/topic?id=3540
   - WebVM, 브라우저에서 실행하는 서버리스 x86 가상머신 https://news.hada.io/topic?id=5893
"
"https://news.hada.io/topic?id=5857","App Store, Unlisted 앱 배포 기능 추가 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     App Store, Unlisted 앱 배포 기능 추가

   - 공개적으로 배포하고 싶지 않은 앱을 앱스토어를 통해 비밀리에 배포할 수 있는 기능
   - 앱스토어 카테고리/추천/검색 등 어디에도 나오지 않고 URL으로만 접속가능
   - 직원용 앱/세일즈 도구등 회사 내부용 앱 부터 특별한 이벤트, 연구 조사용 앱등 대상
   - Apple Business Manager/Apple School Manager 등에서 사용하는 앱도 대상
   - Unlisted App Link 를 요청해서 승인 받으면, 배포 방식이 바뀌고 링크가 생성됨
"
"https://news.hada.io/topic?id=5964","Ask GN: 여러분의 방에는 어떤 독특하며 애용하는 것이 있나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Ask GN: 여러분의 방에는 어떤 독특하며 애용하는 것이 있나요?

   다른 사람들은 잘 모르는데 여러분이 애용하면서도 독특한 기기들이 궁금해요. 요즘 제가 지름신이 안 와서(... ) 아이패드나 맥북에는 그만 더 이상 끌리지 않게 되었는데. 무언가 색다른 걸 사보고 싶거든요. 'ㅁ '!

   Gas lift 세계 1위라는 삼홍사에서 만든 높이조절식 책상. 수동이지만 아주 편하고 튼튼해서 대만족하고 쓰는 제품 https://www.shsdeskplus.com:6064/company/function.php

   타임타이머, https://www.timetimer.com/
   일 할 때나 글 쓸 때 집중이 안 될 경우, 25분만 집중하자! 하고 설정하면 조금씩이라도 진행이 됩니다 ㅎㅎ
   다른 타이머도 써봤는데 숫자보다는 비쥬얼로 보이는게 더 참을성(?)이 생기는 거 같습니다
   wan2land님도 쓰셨지만 부기보드도 길게 남길 필요없는 메모를 할 때 유용하게 쓰고 있습니다.

   부기보드, 옆에 메모장 대용으로 두고 사용하고 있습니다. 종이 낭비 없이 계속 재활용된다는 점이 좋습니다. :-)

   TFG ART Wireless 기계식 키보드 추천합니다. 하판이 고무로 돼 있어서 통울림 없어서 정갈한 키감입니다. 퀵스왑 지원해서 원하는 스위치 쓸 수 있습니다

   저는 방불을 블루투스로 끌수있는 스위처라는 제품을 6년정도 쓰고 있습니다. 아이폰 siri로 끄고 켤수 있어서 침대에 누워서 끌 때 사용중이에요, 아침엔 모닝콜과 함께 켜지고록 예약셋팅도 해두었습니다 :)
   https://m.smartstore.naver.com/ioswitcher/products/…

   Six Keyboard - https://techkeys.us/products/sixkeyboard
   - 6개의 키만 붙은 키보드 입니다. 가장 자주 쓰는 단축키 6개만 프로그래밍해서 등록해 놓고 씁니다.
   - Gmail 삭제 (Shift+3) / 아카이브 ([), 스페이스, 창 닫기(ctrl-w), ctrl-c / ctrl-v
   Elgato Stream Deck - https://www.elgato.com/en/stream-deck
   - 15개의 프로그래밍 가능한 LCD 키 입력도구
   - 유튜브 영상 찍을 때 OBS Studio의 각종 단축키를 넣어두고 사용합니다.
   - 각 키가 LCD방식이라 아이콘과 글자등을 넣을 수 있어서 딱히 외우지 않아도 됩니다.
   - 다양한 세팅이 가능해서 각 키 안에서 폴더를 열고 확장 가능해서 15키 이상으로도 설정할 수 있습니다.
   Gaze Desk Duo - https://kickstarter.com/projects/gazelab/…
   - 앞뒤 판이 따로 조절가능한 스탠딩 데스크
   - 모니터 두개를 같이 높이 올려두고 종종 일어서서 작업합니다.
   키보드용 미니 진공 청소기 (충전식/흡입)
   - 오래전에 사서 링크가 없는데 알리에서 만원 근처로 샀던 것 같습니다.
   - 키보드 먼지를 종종 없애줘야 마음이 편안..

   오오... Gaze Desk Duo는 정말 땡기네요. 이번년도 이사를 꿈꾸고 있는데, 그래서 집이 넓어지면 저런 모션 데스크를 꼭 하나 사보고 싶어요. 일어서서 일할 수 있는 선택지가 있는게 건강면으로도, 집중력면으로도 좋은 것 같더라고요.
   저는 프로그래밍 / 글쓰기만 해서 그런가(.. ) 확장 키보드에 대한 니즈가 적은데. 방금 생각해보니 디버깅 버튼들을 Elgato Stream Deck로 짜놓으면 정말 멋지지 않을까... 생각도 드네요 ㅋㅋ. 1번은 실행, 2번은 라인단위, 3번은 블록단위, 4번은 컨틴뉴,,,

   저는..
   https://www.intension-design.com/tripod-desk-pro - 삼각대 책상입니다. 스탠딩으로 서서 일할 수 있고요. 나름 휴대성이 있어서 외부로는 들고나갈 자신이 없지만 방 사이를 오가는 정도는 쉽게 할 수 있어요!
"
"https://news.hada.io/topic?id=5900","Wordles of the World - 전세계 언어 Wordle 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Wordles of the World - 전세계 언어 Wordle 모음

   - 93개 언어 324개의 Wordle 게임 리스트
   - 분류
   ㅤ→ 언어별
   ㅤ→ 특정 분야
   ㅤ→ 게임 플레이 변형
   ㅤ→ 개발 언어별 Wordle의 재구현
   ㅤ→ 언어가 아닌 것(숫자,수식,소수,나라,지하철,유니코드)
   ㅤ→ 관련 도구들

   제가 만든 변형도 목록에 올라가있네요. 딱히 해외에 홍보도 안했는데 저기에도 올라가있는걸 보니 신기합니다. 마작에 관심있으신 분들은 한번쯤 플레이해보세요. https://mahjong-handle.update.sh/

   Wordle 은 이제 이걸로 마무리하면 될듯 하네요. 너무 많아서 지겨워질정도.. ^^;;
"
"https://news.hada.io/topic?id=5957","2021년 최고의 웹 해킹 기술들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           2021년 최고의 웹 해킹 기술들

   * 21년에 발표된 웹 보안 연구 논문들 중에서 Top10을 선정
   10. Fuzzing for XSS via nested parsers
   9. HTTP Smuggling via Higher HTTP Versions
   8. Practical HTTP Header Smuggling
   7. JSON Interoperability Vulnerabilities
   6. Cache Poisoning at Scale
   5. Hidden OAuth attack vectors
   4. Exploiting Client-Side Prototype Pollution in the wild
   3. A New Attack Surface on MS Exchange
   2. HTTP/2: The Sequel is Always Worse
   1. Dependency Confusion
"
"https://news.hada.io/topic?id=5864","독일 법원, GDPR에 의거해 구글 폰트 사용시 구글에 IP가 넘어가게 된다고 벌금 부과","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           독일 법원, GDPR에 의거해 구글 폰트 사용시 구글에 IP가 넘어가게 된다고 벌금 부과

   - 구글폰트를 사용한 웹사이트 운영자에게 내려진 벌금은 100유로
   - 사용자의 IP는 개인을 식별하는데 사용이 가능한데 Google Fonts 와 같은 서비스 사용시 구글에 IP주소가 공개됨
   - 방문자는 자신의 IP주소를 암호화 할 의무(VPN 사용과 같은)가 없음
   - 구글 폰트 사용은 웹사이트 방문자의 의도 없이 이루어지며, 이로써 개인 권리가 침해되므로 손해 배상 청구는 정당하다고 판결

   구글의 독어 번역 기능으로 읽어 봤는데, 대충 읽어봐도 이거는 좀 문제가 있는 판결이 아닌가 한게..
   이렇게 생각하면 CDN에서 호스팅해주는 JS 라이브러리들도 다 쓰지 말아야 하는거 아닐까 싶네요.
"
"https://news.hada.io/topic?id=5872","Node.js 에 Fetch API 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Node.js 에 Fetch API 추가

   - Promise 기반의 HTTP Request API (XMLHTTPRequest 보다 강력하고 유연함)
   - undici 에 들어있는 fetch 코드가 Node.js 코어에 추가
   - 대부분 브라우저에서는 window.fetch , worker.fetch 로 이미 지원중 (IE제외)

   와우 좋네요

   이제 isomorphic을 위해 axios를 쓸 일은 없겠군요

   드디어 fetch API가 들어오는군요. 제가 node에 입문할때 제일 당황한 부분이었어요.

   - Fetch API 소개 https://developer.mozilla.org/ko/docs/Web/API/Fetch_API
   - Undici - Node용 빠른 HTTP/1.1 클라이언트 https://news.hada.io/topic?id=2821
"
"https://news.hada.io/topic?id=5963","애플의 새로운 'realityOS' 깃헙 커밋에서 발견","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     애플의 새로운 'realityOS' 깃헙 커밋에서 발견

   - 애플이 준비중인 AR/VR용 OS
   - 기존 watchOS 등과 마찬가지로 ""com.apple.platform.realityos"" 명칭을 가진 플랫폼이 명시됨
   - 자체 OS & 바이너리 및 시뮬레이터도 포함
   - 아마도 2개의 기기가 개발중이라 VR 기기가 먼저 나오고, AR 글래스는 그 뒤에 나올지도 모른다는 예상도 있음
"
"https://news.hada.io/topic?id=5934","Adobe가 12개월 구독으로 사용자를 속이는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Adobe가 12개월 구독으로 사용자를 속이는 방법

   - 일주일 ""무료 체험 기간""을 준다고 홍보함
   - 그 이후에는 월 62000원 씩 결제된다고 적혀있음
   - 구석에 작게 ""전액 환불 받으려면 14일 이전에 취소""하라고 써있음
   - 취소 조건을 눌러서 별도 페이지에서 읽어 보면, 14일 지나서 취소할 경우 남은 ""연간 구독 금액""의 절반이 무조건 청구된다고 적혀 있음 (한국의 경우 약 37만원)

   플랜마다 다르겠지만 저도 한번 당한적이 있었는데 아래와 같이 진행했었네요
   : 4개월 구독 및 남은 기간 8개월 (이에 따른 취소 수수료 68달러 = 구독한 금액의 50% 추정)
   : 구독 취소 진행 시 혜택 안내 (구독 유지시 2개월 분 무료 제공)

   팀뷰어도 구독 플랜 자동결제 끄는 방법 자체가 없어요. 상담사를 통해야됩니다.
   적지 않은 기업이 활용하는 방법인듯하네요

   같은 경우를 겪었지만 걱정하지 마세요, 우리에겐 펜데믹이 있습니다. 한국 상담사측은 전혀 이야기를 들어주지 않구요, 글로벌 상담을 통해 코로나로 인해 실직하게 되어 더이상 서비스를 필요로 하지 않는다고 알려주면 됩니다. 하지만 상담사는 끈질긴 회유를 통해 마음을 돌리려고 노력합니다. 3개월 할부니, 12개월 무료 해줄테니 이후 생각해보라니 등 여러 꿀같은 조건을 끝없이 제시하지만 코로나 앞에 기업은 나약합니다. 강하게 마음을 먹으시고 모든 조건을 거절한다면 약 30분가량의 상담채팅을 통해 한달에 많아봐야 열시간 사용하는 서비스 비용 1년치를 절약이 가능합니다!

   약관 자체가 연간 구독만 있고, 매월 할부결제(..)를 하는 형태인데
   자세히 안읽어보면 당하기 딱 좋게 되어있죠.

   이렇게 낚여서 국내 상담사 놔두고 해외 상담사 붙들고 돈없다고 억울하다고 문의했더니 취소는 못해준다며 3개월인가 무료로 해줘서 돈을 좀 아끼면서 해지했었네요 ;)
   해지하는 페이지를 거의 끝까지 넘어갈쯤 되면 한달인가 무료로 해주겠다는 메시지가 나오는데 그것도 챙기면 해지하기까지 돈을 좀 아낄 수있습니다 ㅋㅋ;;;

   그렇게 당해서 사용중입니다.. 하.... 이거 너무 안좋아요..

   비슷한걸로 낚여서 1년 결제중입니다 ㅋㅋㅋㅋ 할인받고 월간 결제 하면 1년약정;;;

   * 심지어 구독 플랜의 자동 결제를 끄는 방법 자체가 없음. 자동 결제를 끄려면 구독 멤버쉽 자체를 취소해야함
   https://twitter.com/alfonsoDev/status/1490002853473226752
   법적으로 문제는 없다지만, 다크 패턴을 쓰고 있네요.
   - Dark Patterns - 사용자를 어렵게 만드는 나쁜 패턴들 모음 https://news.hada.io/topic?id=455
"
"https://news.hada.io/topic?id=5944","GOV.UK PaaS - 영국의 공공 서비스를 위한 클라우드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GOV.UK PaaS - 영국의 공공 서비스를 위한 클라우드

   - 인프라 걱정없이 다양한 공공 서비스를 빠르게 런칭하기 위한 인프라
   - 프로토타입/알파/베타/라이브 등 다양한 환경 구성 가능
   - AWS 위에서 Cloud Foundry를 이용하여 호스팅
   ㅤ→ 빌드팩 지원 : Go, Node.js, Ruby, Python, R, PHP..
   ㅤ→ 마켓플레이스에서 PostgreSQL, S3, ElasticSearch, Redis, MySQL, InfluxDB, Autoscaler 등을 추가로 접근 가능
   - 영국 정부(내각실)에서 인증을 받은 플랫폼이기에 정보 인증을 취득하기 쉬움

   관련 코드들도 다 오픈소스로 공개했네요
   - https://github.com/alphagov/paas-cf
   - https://github.com/alphagov/paas-admin
   - https://github.com/alphagov/paas-billing

   아.. 저 10년쯤 전에 CloudFoundry로 뭔가 만들려고 한참 했었는데 간만에 이름을 들어보네요.
"
"https://news.hada.io/topic?id=5866","Show GN: 우리말 Wordle","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Show GN: 우리말 Wordle

   오픈소스 wordle의 fork 버전으로 우리말 버전을 만들어봤습니다.
   다른 한국어 버전을 몇개 보았는데 주로 자모를 펼쳐서 쓰게 되어있어서 React로 된 클론 코드로 공부도 할겸 조합된 우리말 단어를 쓰면 자음, 모음을 분리해서 답과 비교하도록 구현했습니다.
   처음엔 어려워서 초성 힌트를 줄까도 고려했는데 아내와 둘이 해보니까 할만하길래 3음절로 줄이고 입력칸과 키보드에 숫자야구 방식의 표시를 하는 것으로 정했습니다.
   클론버전이 워낙 잘되어있어서 우리말 버전으로 바꾸는건 금방 했습니다. 즐거운 경험이었네요.

   우리말 Wordle 32 3/6
   https://plan9.kr/wordle/
   🟨⬜🟨
   🟨🟨⬜
   🟩🟩🟩
   단어사전에 없는 단어를 입력하는 걸 막는기능도 있으면 좋을 것 같아요.
   자모 힌트 얻고자 초반에 최대한 많이 구겨넣어 보는 편법이 있지 않을까 합니다 ㅎㅎ
   ex) 닧앥멆, 촚킱훇 ...

   이것도 처음부터 고민했던 부분인데요.
   오리지널 wordle은 1만개 정도의 단어를 웹사이트에 넣어두고 검사하는 방식을 쓰더라고요.
   한국어는 3 음절 단어로만 제한해도 일상에서 쓰이는 단어가 6만 개 이상이라 정적 사이트에 넣기는 부담되고
   겹받침을 이용해 최대한 많은 자모를 알아낸다 해도 어차피 자주쓰이는 자모가 정해져있어서
   문제를 푸는데 그리 큰 도움이 되지 않는다고 판단했습니다.
   오히려 홑받침으로 정답의 범위를 줄이는 것이 나을 수도 있겠고요.
   (이건 통계적으로 따져보지 않았습니다)
   그리고 온라인 리더보드가 있는 것도 아니라서 숫자야구 하는 느낌으로 가볍게 해도 괜찮다고 생각했고요.

   우리말 Wordle 31 4/6
   https://plan9.kr/wordle/
   🟨🟨🟨
   🟨🟨🟨
   🟩🟨🟨
   🟩🟩🟩

   해보니 재밌네요 ㅎㅎ. 한글이 영어와는 확실히 다르다는게 느껴지고 키보드 자판이 영문보다 훨씬 많은 힌트를 주네요. 그 키보드 힌트가 없으면 아예 못풀정도의 난이도가 될거같아요. 그 아이디어가 아주 좋은거같습니다

   우리말 Wordle 31 4/6
   https://plan9.kr/wordle/
   🟨⬜⬜
   🟨⬜🟨
   🟩🟨🟨
   🟩🟩🟩

   와 정말 어렵내요 ㅠ

   우어.. 한국어로 하니까 너무 어렵네요.

   만들다보니 영어 단어와 한국어 단어의 차이점들도 생각해보게 되었습니다. 자음, 모음 빈도를 이용하면 갈수록 쉽게 풀 수 있을지도 모르겠네요.
"
"https://news.hada.io/topic?id=5970","토리맘의 한글라이즈 프로젝트 - 공식 개발 레퍼런스를 한글로 번역","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  토리맘의 한글라이즈 프로젝트 - 공식 개발 레퍼런스를 한글로 번역

   - 다수의 공식 개발 레퍼런스를 한글로 번역
   ㅤ→ Spring Batch/Boot/REST/Cloud 및 Apache Kafka, Reactor Core/Netty/Kafka, Prometheus, Resillience4J 등
   - 용이한 검색을 위해 소제목을 포함한 타이틀은 영문을 유지
   - 엔지니어 토리맘님이 진행중인 개인 프로젝트

   좀 짱 👍

   우어.. 개인작업이라고 하기엔 너무 많은 것들을 혼자 진행중이시네요. 응원합니다!
   https://github.com/godekdls/godekdls.github.io
"
"https://news.hada.io/topic?id=5952","AWS 학습 자료 링크모음학습 자료 링크모음

   - AWS 초보자용 교육 자료
   - AWS 디지털 교육
   - 학습 참고자료
   - AWS 공식 문서
   - 핸즈온 실습
   - 아키텍처 다이어그램 작성 관련
   - 필요한 자료들을 찾는 방법
   - 자격증관련
   - 그 밖의 읽을거리
"
"https://news.hada.io/topic?id=5978","Android 13의 가상화로 Pixel 6에서 윈도우11 및 리눅스 배포판 실행 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Android 13의 가상화로 Pixel 6에서 윈도우11 및 리눅스 배포판 실행 가능

   - 새로 공개된 첫번째 안드로이드 13 개발자 프리뷰에 숨겨진 기능
   - Google Tensor CPU 기반의 스마트폰(Pixel 6)에서 풀 가상화(Full Virtualization)가 가능
   ㅤ→ 윈도우11 이나 Ubuntu/Arch Linux Arm 등을 거의 네이티브 속도로 실행 가능하다는 것
   - 한 개발자가 Pixel 6 상에서 KVM 하이퍼바이저를 이용하여 다양한 리눅스를 실행한 결과를 공개
   ㅤ→ ARM이 얘기하는 EL2(Exception Level)를 달성
   - 이건 아마도 DRM 같은 걸 지원하기 위한 기능일 것

   삼성에서 밀다가 실패한 Linux on Dex에 아주 작은 빛이 보이는것 같네요.
   14.6인치 디스플레이에 키보드 연결해서 Gnome 쓰는 날이 오길...

   DRM은 trusty (lk 마개조 + musl + 기타잡다) 라는 걸 이용해서 처리하고 있습니다.
   https://source.android.com/security/trusty?hl=en

   Android에 포함되는 가상화는 microdroid 라는 것을 수행하려고 만든 것 같네요.
   https://android.googlesource.com/platform/packages/…
   https://android.googlesource.com/platform/packages/…

   - Google Tensor는 올 가을 새로운 Pixel 6에서 데뷔합니다 https://news.hada.io/topic?id=4754
   - 구글, Pixel 6 와 Pixel 6 Pro 공개 https://news.hada.io/topic?id=5230
"
"https://news.hada.io/topic?id=5913","PublicDataReader - 공공 데이터 조회 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   PublicDataReader - 공공 데이터 조회 라이브러리

   - 공공데이터포털, 서울 열린데이터 광장 등 기관에서 제공하고 있는 데이터 관련 OpenAPI 서비스를 Python으로 쉽게 이용
   ㅤ→ 부동산 실거래가
   ㅤ→ 건축물대장
   ㅤ→ 상가업소 정보
   ㅤ→ 지하철 호선별 역별 승하차 인원 정보
   ㅤ→ 버스노선별 정류장별 승하차 인원 정보
   - Pandas DataFrame 형태로 조회 가능
   ㅤ→ 각 OpenAPI에 대한 활용 신청은 기관별로 별도 진행해야함
"
"https://news.hada.io/topic?id=5908","Netlify, Quirrel을 인수하고 Scheduled Functions 베타 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Netlify, Quirrel을 인수하고 Scheduled Functions 베타 공개

   - Quirrel은 서버리스 함수 및 Job을 스케줄링 및 관리하는 오픈소스
   - 이를 통해 Netlify Functions 에 스케쥴 기능을 도입
   ㅤ→ Cron 처럼 정기적으로 서버리스 함수를 실행 가능
   ㅤㅤ⇨ 주말마다 보고서 작성을 위한 API 세트 호출
   ㅤㅤ⇨ 매일 밤 데이터를 다른 데이터 스토어로 백업
   ㅤㅤ⇨ PR 머지될때마다 하는 대신, 매 시간마다 정적인 콘텐츠를 빌드해서 배포
   - Quirrel 개발자인 Simon Knott는 Blitz.js 의 메인테이너 이자 SuperJSON의 개발자이기도 함

   - Blitz - 풀스택 React 프레임워크 https://news.hada.io/topic?id=5244
   요즘 Netlify 와 Vercel이 좋은 오픈소스들을 많이 인수하고 개발자들을 끌어모으는 것 같아요
   - Svelte 개발자 Rich Harris, Vercel에 조인 https://news.hada.io/topic?id=5367
"
"https://news.hada.io/topic?id=5972","WebSockets 대신 Server-Sent Events 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 WebSockets 대신 Server-Sent Events 사용하기

   - 실시간 웹 어플리케이션을 만들때 보통 웹소켓이 생각나겠지만 SSE도 간단한 대안이 될 수 있음
   - 웹 소켓의 문제점 : HTTP 기반이 아니기 때문에 HTTP의 수혜를 받지 못함
   ㅤ→ 압축 불가, HTTP/2 멀티플렉싱 지원 미비, Proxy 들이 지원 안함, 하이재킹 가능
   - Server-Sent Events(SSE)
   ㅤ→ 서버가 클라이언트에게 Low-Latency 푸시 이벤트를 보낼 수 있는 기능
   ㅤ→ HTML 표준이고 모든 브라우저가 지원함(IE 제외)
   ㅤ→ 웹소켓과 다르게 SSE는 서버에서 클라이언트 한 방향으로 흐름 (양방향 통신이 필요한 게임에는 맞지 않음)
   ㅤ→ HTTP 위에서 동작하며 별도 프로토콜이 필요 없음

   Load Balancer나 Proxy 환경에서는 SSE지원이 부족한 경우가 많습니다. (+Enterprise Firewall)
   Cloudflare나 AWS CLB 등등의 환경을 고려하신다면, SSE를 도입하기 전에 한번 더 확인해보셔야합니다.

   GraphQL Subscription 을 위한 Transport 로 WebSocket 대신 활용되는 경우도 있습니다.
   - GraphQL SSE 핸들러 구현: https://github.com/enisdenjo/graphql-sse
   - SSE를 Subscription transport로 활용하는 예시: https://www.graphql-yoga.com/docs/features/subscriptions

   Deno Deploy나 Lambda 같은 특수한 환경에서 웹소켓을 구현하기 어려울 때 대안이 될 수 있습니다. :-)
   저도 최근에 Deno Deploy에서 채팅 예제를 보다가 SSE를 처음 알게되었습니다.
   https://github.com/lucacasonato/deploy_chat

   이런게 있군요. 배워갑니다

   이 글의 댓글과 HN의 댓글도 같이 참고하세요.
   SSE를 사용중인 사람들과 웹소켓에서 전환한 사례, SSE로 갔다가 다시 웹소켓으로 돌아간 사례 등등 다양한 의견이 많네요
   https://news.ycombinator.com/item?id=30312897
   사실 글에서는 SSE의 장점을 많이 얘기하긴 합니다만, 특별한 시나리오에서만 유용하긴 합니다.
   요즘은 웹소켓쪽도 라이브러리가 많이 나와서 구현이 더 간단해 지기도 했고요.
   - 웹 소프트웨어의 미래는 HTML-over-WebSocket 이다 https://news.hada.io/topic?id=3818
   이런 주장도 있습니다.
"
"https://news.hada.io/topic?id=5922","고마워, Valve","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               고마워, Valve

   - 리눅스에서의 게임 경험을 위해 노력해온 밸브에게 보내는 감사 인사
   ㅤ→ Arch Linux 기반의 SteamOS와 곧 출시될 휴대용 게임기 Steam Deck 등

   어느 인디게임 개발자 말로는 리눅스 유저는 게임 판매량의 6%정도였는데, 버그 리포트는 40%는 가 리눅스 유저로부터 왔다고 해요.
   제보 내용도 os 버전 / 로그 / 코어 덤프를 첨부해주고 때로는 디스코드로 함께 버그를 해결한적도 있다고.. 그래서 게임을 리눅스버전으로 출시하는건 노력할 만한 가치가 있다고 하네요.
   스팀같은 플랫폼이 어떤 생각으로 리눅스 지원에 공들이는지는 잘 모르겠지만, 게임 개발자 입장에선 리눅스 지원하는게 괜찮은 전략인듯 해요.

   블로그에 Webmentions 라는 게 달려있어서 뭔가 했는데 GeekNews에 이미 올라와있었군요
   https://news.hada.io/topic?id=2902

   HackerNews에 올라오는 리눅스 관련 뉴스들을 볼 때 놀라운 점은
   예상보다 훨씬 더 많은 사람들이 리눅스를 데스크탑OS로 사용하고 있다는 것입니다.
   (긱뉴스 방문자도 약 3%가 리눅스 사용자 입니다)
   저는 작업용으로는 써도 일반 데일리 용도로는 쓰질 않아서 그런지..
   거기다 게임도 데스크탑에서는 거의 하지 않는터라, 밸브의 리눅스 지원 정책은 이해하기 어려운 수준이었거든요.
   이 글도 굉장히 많은 관심을 받고 있고, 세세한 부분에서는 차이가 있을지라도 밸브의 노력에는 다들 칭찬하고 있습니다.
   https://news.ycombinator.com/item?id=30244195
   게임 분야에서 Valve 와 Microsoft는 칭찬이 훨씬 많은 것 같은데요.
   돌려서 생각해보면.. 국내에선 게임분야에서 이런 회사들은 나올수 없는 걸까 하는 아쉬움이 있네요.
   - 밸브, 휴대용 PC게임 콘솔 Steam Deck 공개 https://news.hada.io/topic?id=4617
   - 윈도용 게임을 리눅스용 스팀에서 실행시켜주는 Proton 4.11 출시 https://news.hada.io/topic?id=218
   - Valve Proton, 지원하는 게임 7000개 돌파 https://news.hada.io/topic?id=3843

   안드로이드가 이미 훌륭한 리닉스 머신 아니겠습니까!?

   한국에서는 힘들꺼에요.
   MacOS용 게임이 안나오는 것과 비슷한 이유라고 생각됩니다.
"
"https://news.hada.io/topic?id=5898","Firebase Summit 2021 핵심내용 정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Firebase Summit 2021 핵심내용 정리

   - 새로운 기본 구성 요소로 빠른 앱 개발 지원
   ㅤ→ 더 빠르게 중요 전자 상거래 기능을 추가하기 위한 새로운 확장 프로그램
   ㅤ→ Apple 플랫폼, 게임 엔진, Flutter 지원 향상
   ㅤ→ App Check를 통해 앱 보안 강화
   ㅤ→ 향후 Google Play 안전 정책에 대한 상세 설명서
   - 수월하게 앱을 실행하기 위한 현실적 제안
   ㅤ→ Performance Monitoring의 새로운 실시간 알림
   ㅤ→ Crashlytics, ANR(Application Not Responding) 보고 및 시그널 추가
   - 강력한 관심 지속 도구를 사용해 손쉽게 확장
   ㅤ→ 클라우드 메시징 및 인앱 메시징을 위한 통합 캠페인 관리
   ㅤ→ 개인화 베타 출시 및 원격 구성 핵심 개선 사항
"
"https://news.hada.io/topic?id=5912","Omni - 크롬용 북마크/히스토리/탭관리자 확장 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Omni - 크롬용 북마크/히스토리/탭관리자 확장 오픈소스

   - 단일 코맨드창 인터페이스
   ㅤ→ 탭 : 이동, 열기, 닫기, 검색
   ㅤ→ 북마크 보기 및 관리
   ㅤ→ 브라우징 히스토리 검색
   ㅤ→ 생산성 증가를 위한 50개 이상의 액션
   - Notion, Figma, Docs, Asana 등과 연동
   - Alyssa X의 새 프로젝트

   Alyssa X 의 기존 오픈소스 프로젝트들
   - Screenity - 스크린/카메라 녹화용 크롬 확장 https://news.hada.io/topic?id=3298
   - Animockup - 앱/웹의 애니메이션 목업 만들기 https://news.hada.io/topic?id=1768
   - Mapus - 실시간 지도 협업 오픈소스 https://news.hada.io/topic?id=4847
"
"https://news.hada.io/topic?id=5894","페이스북, 처음으로 사용자 감소했다는 발표 후 주가 260조원 폭락","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 페이스북, 처음으로 사용자 감소했다는 발표 후 주가 260조원 폭락

   - 분기 실적 발표에서 회사 성장이 정체. 주가 26% 하락
   - 일간 사용자가 창업후 18년만에 처음으로 감소 : 주로 아프리카, 라틴 아메리카, 인도
   - 경쟁자인 틱톡, 미국 및 국제 규제 기관들의 조사, 메타버스로의 전환 등에서 도전에 직면
   - 하드웨어 사업부서인 Facebook Reality Labs(FRL) 구축에만 10조원 이상 지출
   ㅤ→ 분기 $3.3b 적자지만 매출은 $877m 밖에 안됨
   - 느린 성장률, 향후 몇달간의 낮은 수익 예측, Reels의 수익화 실패 등
   - 애플이 광고 추적을 막는 것도 페이스북에 큰 영향
   - 경영진들은 하드웨어에 집중하여 회사를 Reinvent 하기를 희망하고 그렇게 함으로써 지금 쏟아지는 정치적 문제들에서 벗어나기를 바람
   - 인스타그램, 왓츠앱, 메신저 등은 사용자가 증가했음
   - 일일 사용자 수는 감소했지만 월간 로그인 수는 증가했고, 사용자당 매출도 증가했음

   자체 하드웨어가 없는 서러움을 VR을 통해서 극복하려는데 과연!ㅎㅎ
"
"https://news.hada.io/topic?id=5859","2022년 웹 개발을 재정의할 오픈소스 프로젝트들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2022년 웹 개발을 재정의할 오픈소스 프로젝트들

   ""Appsmith, Supabase, Appwrite, Plasmic, Hasura""
   - Appsmith : 업무용 도구를 쉽게 만드는 Low-Code 프레임워크
   - Appwrite : 프론트엔드/모바일 개발자를 위한 백엔드 PaaS
   - Hasura : 빠른 GraphQL API Engine
   - Plasmic : 비 개발자들이 페이지/콘텐츠를 생성하게 만들어주는 헤드리스 페이지 빌더
   - Supabase : 오픈소스 Firebase 대체제

   keystone6: prisma 를 사용하는 headless CMS 그리고 그 이상의 기능들

   너무 유명한 Hasura 말고는 다행히?도 긱뉴스에서 다 소개했던 것들이군요.
   - Appsmith - 업무용 도구를 쉽게 만드는 Low-Code 오픈소스 https://news.hada.io/topic?id=3997
   - Supabase 공개 베타 시작 - 오픈소스 Firebase 대체제 https://news.hada.io/topic?id=3347
   - Appwrite - 프론트엔드/모바일 개발자를 위한 오픈소스 백엔드 PaaS https://news.hada.io/topic?id=496
   - Plasmic - 비주얼 콘텐츠를 쉽게 만드는 헤드리스 페이지 빌더 오픈소스 https://news.hada.io/topic?id=5835
"
"https://news.hada.io/topic?id=5920","SHA256 알고리듬 단계별 시각화알고리듬 단계별 시각화

   - 입력한 문자열에서 어떻게 SHA256 해쉬값이 계산되어 가는 지를 단계별로 설명과 함께 보여줌
   - 1단계씩 또는 자동 실행 가능
   - Hash 함수 및 SHA256 교육용
   - React 오픈소스
"
"https://news.hada.io/topic?id=5941","와이 콤비네이터가 학생들에게 하는 조언","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         와이 콤비네이터가 학생들에게 하는 조언

   폴 그라함의 에세이부터 샘 알트만의 글들까지 와이 콤비네이터 그리고 그 근처에는 아주 유용한 정보와 가이드들이 많다. 그중 이번에 내 눈을 끈 글은 ""Startups for Students Guide""이다. 학생들을 위한 스타트업 가이드라. 과연 어떤 말을 하고 싶을까? 읽다 보니 결국은 ""와이 콤비네이터가 최고다""로 끝나는 느낌이지만 그래도 이곳저곳 인상 깊은 조언들이 있다. 그중 몇 가지만 메모.
"
"https://news.hada.io/topic?id=5945","삼성, 갤럭시 S22 시리즈 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           삼성, 갤럭시 S22 시리즈 공개

   # 세가지 모델
   - 6.8' S22 Ultra : S + Note, S펜 내장, 12GB램, 쿼드 카메라, 12GB램
   - 6.6' S22+ 와 6.1' S22 : 8GB램, 트리플 카메라
   - NPU를 내장한 4나노 옥타코어 프로세서
   - 나이토그래피, WiFi 6E, UWB
   - 120Hz 다이내믹 AMOLED 2X 디스플레이
   - 아머 알루미늄 + 코닝 고릴라 글래스 빅투스 플러스
   - 폐어망 소재를 약 20% 함유한 새로운 재활용 플라스틱 사용

   갤럭시 S22 Ultra 인포그래픽 으로 보는게 조금 더 편하네요.
   - https://news.samsung.com/kr/…
"
"https://news.hada.io/topic?id=5974","타입스크립트에서 Type, Interface를 어떻게 사용해야 하는가? [해외글]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             타입스크립트에서 Type, Interface를 어떻게 사용해야 하는가? [해외글]

   타입스크립트에서 Type, Interface를 어떻게 사용해야 하는가?
   1 - 나는 Interface만을 사용하는 것을 선호한다. 이는 지향 객체 프로그래밍에서 우리가 무엇을 할 것인지를 명확하게 보여주기 때문.
   2 - 다른 언어의 프로그래머의 경우 Type 대신 Interface를 사용하면 더 읽기 쉽다.
   3 - 깨끗한 코드와 더 나은 소프트웨어 아키텍처를 위해 복제하는 대신 하나의 Interface만 사용한다.
"
"https://news.hada.io/topic?id=5959","2022년 iPaaS 시장 동향","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           2022년 iPaaS 시장 동향

   - iPaaS(Integration Platform as a Service) : 클라우드 기반 통합 솔루션
   - 통합 솔루션 선택 기준
   ㅤ→ 보안 / 유연성 및 확장성 / 관리 / 개방형 플랫폼
   - 가트너 iPaaS 참조 모델
   ㅤ→ 3가지 전문분야 : 전자 상거래 및 B2B 통합, 클라우드 통합, ESB 및 SOA 인프라
   - iPaaS 솔루션 제품별 특성
   ㅤ→ Informatica
   ㅤ→ boomi
   ㅤ→ SAP
   ㅤ→ workato
"
"https://news.hada.io/topic?id=5967","Firecracker v1.0.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Firecracker v1.0.0 릴리즈

   - AWS가 Lambda를 위해 만들었던 서버리스용 microVM 가상화 솔루션
   - Linux KVM을 기반으로 하는 가상 머신 모니터(VMM)를 구현하고 RESTful API를 제공
   - 필요없는 것들을 제외하고 메모리 사용량을 줄인 샌드박스 환경으로 최대한 가볍고 안전하게
   ㅤ→ Firecracker VM은 125ms 내에 시작이 가능하며, microVM을 만드는 데에는 7ms면 충분
   ㅤ→ 메모리 풋프린트는 5MiB 이하
   - Apache 오픈소스로 공개 되어 다양한 곳에서 사용 중 (Rust 코드)
   ㅤ→ Appfleet, Fly.io, Kata Containers, OpenNebula, Weave Firekube..
"
"https://news.hada.io/topic?id=5937","Peloton, CEO 교체하고 2800명 해고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Peloton, CEO 교체하고 2800명 해고

   - 팬데믹 덕분에 2020년에만 400% 주가가 급등했지만 최근에 실적 부진
   - 행동주의 투자자인 Blackwells는 경영진을 교체하라는 65p 보고서를 냄
   - 끝내, 공동 창업자 John Foley는 CEO에서 내려가고, Spotify/Netflix CFO였던 Barry McCarthy가 새 CEO로
   - Amazon, Nike, Apple 등이 인수할 것 같다는 소문이 있었지만 아직 결정된 것은 없음

   미국은 역시 주주 보호를 위해 CEO교체하는 것에 가차없군요 ㄷ
   전 코로나 덕에 더 많이 팔릴 줄 알았는데 매출이 오히려 떨어졌네요.

   위에서 얘기된 Blackwells Capital 의 Peloton - A Call for Action 보고서
   무려 65페이지 자료로 펠로톤의 가능성과 문제점을 지적하며, CEO를 해고하라고 요구했습니다.
   https://blackwellscap.com/wp-content/uploads/…
   덕분에 오늘 펠로톤 주식은 25% 상승했네요.
"
"https://news.hada.io/topic?id=5854","Why Startup? - 주니어가 스타트업에 관심을 가지게된 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Why Startup? - 주니어가 스타트업에 관심을 가지게된 이유

   우선 나에게 있어 스타트업이란
   많은 이들이 공감하는 문제를 혁신적이고 빠르며 확장가능한 방법으로 해소하는 ‘수단' 이다.
   우리 모두 살면서 문득문득 그런 질문을 할때가 있지 않은가, “ 그때 이런 도전을 해보았으면 지금 내 삶이 어땠을까?” 그리고 다짐하지 않았던가 ‘그런 질문이 안들게 도전해야겠다'. 하지만 바램과 현실에서 편안함, 편리함, 안정감을 두고 리스크를 가지는 도전을 하는 일은 힘들다. 또한 모두가 그런 선택을 할 수 있는 럭셔리를 가지고 있지도 않다.
   나 또한 경제적으로 가정에 일조를 하고 있으며 여러모로 ‘하면 않되는 이유'는 많다. 하지만 나는 ‘지금 이 시간'이 돌아오지 않는다는 것을 잊고 살다, 아쉬움에 묻힌 다양한 이야기들을 들었고, 그런 회고보다는 ‘실패하고 넘어지고 힘들었지만 귀한 경험과 성장이었어!’라는 이야기를 남기고 싶다.
"
"https://news.hada.io/topic?id=5933","인텔, RISC-V 멤버로 가입하고 1.2조원 파운드리 펀드 조성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  인텔, RISC-V 멤버로 가입하고 1.2조원 파운드리 펀드 조성

   - RISC-V International의 프리미어 멤버로 합류
   - Intel Foundry Service(IFS)를 통해서 펀드를 조성하고 파운드리 스타트업들에 투자할 예정
   ㅤ→ IFS는 x86, ARM, RISC-V 모두에 최적화된 IP를 제공하는 유일한 파운드리

   인텔의 현 상황 이해하기
   - 인텔의 현재 문제들 https://news.hada.io/topic?id=3612
   - 새 Intel CEO가 물결을 일으키다 : 은퇴한 CPU 아키텍트를 재고용 https://news.hada.io/topic?id=3619
   - Intel Unleashed, Gelsinger on Intel, IDM 2.0 https://news.hada.io/topic?id=3957
   RISC-V 관련 뉴스들
   - Nios V - 인텔의 RISC-V 프로세서 https://news.hada.io/topic?id=5151
   - MIPS, 자체 아키텍처를 버리고 RISC-V로 전환 https://news.hada.io/topic?id=3859
   - M1은 RISC-V의 상승을 예고한다 https://news.hada.io/topic?id=3447
   - 애플, RISC-V 프로그래머 구인중 https://news.hada.io/topic?id=4949
   - SiFive 고성능 RISC-V 프로세서 공개 https://news.hada.io/topic?id=4545
"
"https://news.hada.io/topic?id=5969","JavaScript로 프린터 드라이버 작성하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       JavaScript로 프린터 드라이버 작성하기

   - 아마존에서 구입한 저가형 Polono 라벨 프린터를 업계 표준인 고가형 Zebra 처럼 사용하고 싶음
   ㅤ→ Zebra는 ASCII 텍스트를 시리얼로 보내서 라벨을 프린트 하는 언어인 ZPL 사용
   - 라즈베리 파이에 연결해서 택배 송장 프린터로 사용하고 싶었지만 드라이버가 arm용이 없음
   - 배송회사인 EasyPost는 송장을 PDF/PNG/ZPL로 제공해주지만,
   ㅤ→ 이 프린터는 ZPL 대신 유사한 언어인 TSPL(대만의 프린터 회사인 TSC가 만든 언어) 을 지원
   ㅤ→ ZPL to TSPL 변환기가 없어서 그냥 래스터 이미지를 사용
   ㅤ→ Raster to TSPL 코드를 자바스크립트로 작성

   이 사람은 PiBox 를 만들어서 파는 KubeSail 의 창업자 입니다.
   - PiBox Mini - 라즈베리 Pi 스토리지 서버 https://news.hada.io/topic?id=5507
"
"https://news.hada.io/topic?id=5853","PRQL - 데이터 변환을 위한 더 간단하고 강력한 SQL 제안","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  PRQL - 데이터 변환을 위한 더 간단하고 강력한 SQL 제안

   ""Pipelined Relational Query Language""
   - SQL처럼 읽기 쉽고, 명시적이며 선언적
   - SQL과 다르게 변환을 위한 논리적 파이프라인을 만들고 변수 및 함수와 같은 추상화 지원
   - SQL로 트랜스파일 되므로 SQL 지원하는 어떤 DB에서든 사용 가능
   - Rust 오픈소스
   * 아직 완성된 것이 아니라 언어와 개발 방향에 대한 로드맵을 제안하고 개발 중

   c#의 LINQ랑 비슷하다고 생각했는데, 아래 Similar projects로 잘 정리되어 있네요. 경험상 SQL와는 다르게 프로그램 내에서 LINQ를 사용하면 에러처리에 더욱 신경을 써야했던 것으로 기억납니다. 가령 첫 번째 값만 가져오기 위해 First 메소드를 사용하면 단순하고 명료하게 작성되는데, 조금이라도 null 냄새가 나면 FirstOrDefault만 사용했던 것 같네요.

   R에서의 dplyr 과 같은 문법 체계처럼 생겼네요. pandas랑도 비슷한거 같구요.

   Malloy - 더 나은 SQL by Looker https://news.hada.io/topic?id=5840
   위의 Malloy 와 비슷하게 SQL을 좀 더 좋게 만들어 보자는 제안입니다.
"
"https://news.hada.io/topic?id=5971","AWS 가상 대기실 솔루션 오픈소스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         AWS 가상 대기실 솔루션 오픈소스 공개

   - 대량 트래픽 발생시 가상 대기실을 생성하고 사용자 요청을 버퍼링
   ㅤ→ 임시로 트래픽을 오프로드 하는 클라우드 인프라를 생성
   - 온라인 시험/티켓 판매/신규 제품 출시/대형 발표 등에 사용 가능
   - 항상 사용할지, 트래픽 많을 때 만 사용할 지 결정
   - CloudFormation 템플릿으로 제공

   Introducing AWS Virtual Waiting Room https://aws.amazon.com/ko/blogs/…
"
"https://news.hada.io/topic?id=5956","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   - 업데이트 대응을 위해 회사 업무를 할 예정이고요.
   - 최근 멘탈이 가루가 되고 있습니다. 이를 기회로 왜 가루가 됐는지 회고하려고 합니다. 위기에서 극복한 다음은 모든 게 아름답게 보이기 때문에 좋았던 추억으로 미화되는데, 지금 기록해야 어디서 제가 실패했는지 알 수 있을 것 같아서요.
   - 가능하다면 작년의 루틴을 복구하고, 그걸 좀 더 좋게 고치고 싶습니다. 사이드 프로젝트가 본 업무에 큰 도움을 주고, 본 업무는 사이드 프로젝트를 할 동력을 제공해줬던 선순환이 있었거든요. 본 업무의 비중이 높아지자 비중을 적절히 핸들링하는데 실패했습니다. 이걸 적어야겠군요.
   - Things랑 Drafts를 애용하고 있습니다. 빠르게 글 쓰는 게 이렇게 즐거운 일인지 몰랐네요.
   - 이동형 스탠딩 책상을 구매했습니다. 무려 40만원짜리인데요. 돈이 안 아까울 정도로 책상이 안정감이 있으며 일어서서 글쓰는 게 정말 즐겁습니다. 집중도 더 잘 되고요. 이 습관을 이번 주말동안 더 잘들이고 싶네요.

   요즘엔 주말마다 피아노 연습과 미니어처 도색을 합니다.
   느즈막히 시작한 취미라 꾸준히 하는걸 목표로!

   이번주말은 파워 특-근, 저번주도 특-근.. 다음주도 특-근....... 흑흑

   ㅠㅠ 특-진 하시길
"
"https://news.hada.io/topic?id=5911","애플, 네덜란드 데이팅앱의 대체결제수단에 27% 수수료 부과","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   애플, 네덜란드 데이팅앱의 대체결제수단에 27% 수수료 부과

   - 네덜란드에서 데이팅앱에게 다른 인앱결제 수단을 허용해야 한다는 판결을 받음
   ㅤ→ 이를 빨리 해결하지 않으면 일 5백만유로의 벌금을 물어야 함
   - 이에 애플은 허용 방법을 공개하고, 수수료는 27%라는 공지를 함
   - 네덜란드의 데이팅 앱만 이 대체결제수단 사용 권한을 요청가능
   - 매달 개발자는 수익 보고서를 애플에 제출하고, 그 수익을 통해서 애플이 인보이스를 발행하면 45일내에 금액을 지불해야함
   ㅤ→ 애플은 이에 대한 감사권한이 있고, 수수료 지불하지 않을 시 앱을 스토어 및 개발자프로그램에서 제거할 수 있음

   이거 요청한 앱들 이후로 앱 심사 엄청 빡세질 것 같은데요. ㅋㅋ

   말씀하신대로 애플 눈밖에 나면서, 3프로 아끼려고 저거 할 사람들이 없을 것 같아요.

   애플의 개발자 사이트에 상세 공지를 보면..
   https://developer.apple.com/support/storekit-external-entitlement/
   거의 하지 말라는 수준의 공지입니다.
   한국도 아마 같을 것으로 예상됩니다.
   - '앱마켓 사업자 결제방식 강제 금지' 법안 국회 본회의 통과 https://news.hada.io/topic?id=4925
   - 애플, 한국 앱스토어서 외부결제 허용, 수수료도 인하 https://news.hada.io/topic?id=5730
"
"https://news.hada.io/topic?id=5976","Sci-Hub 통계와 데이터베이스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Sci-Hub 통계와 데이터베이스

   - 8834만개의 연구 논문/자료 DB(약 100TB)
   ㅤ→ 의학/화학/생물학/인문학/물리학/공학/공학/경제학..
   ㅤ→ 출처는 저널 80%, 컨퍼런스 6%, 책 5%
   ㅤ→ 77%는 1980~2020년 사이, 36%는 2010~2020년 출판물
   - dois 목록 및 메타데이터만 저장한 SQL 테이블도 다운로드 가능
   - 전체 논문 데이터는 토렌트로 다운로드 가능 (Reddit의 Rescue Mission)

   - The General Index - 백만개 저널의 n-gram 인덱스를 무료로 공개 https://news.hada.io/topic?id=5268
   - Unpaywall - 오픈 액세스 논문 검색엔진 https://news.hada.io/topic?id=4786
"
"https://news.hada.io/topic?id=5961","EdgeDB 1.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             EdgeDB 1.0 릴리즈

   - PostgreSQL 기반의 오픈소스 Graph-Relational DB
   - SQL보다 뛰어난 표현력을 지닌 EdgeQL 언어
   - 리치 타입 시스템
   - 선언형 스키마 : 상속, 계산 속성, 복잡한 제약조건(곧 액세스 제어규칙까지 지원 예정)까지 표현 가능
   - 내장 마이그레이션 시스템 : 스키마를 자동 또는 대화식으로 추론 및 비교

   공식 릴리즈에 맞추어 진행된 실시간 방송이 올라와 있네요. https://www.youtube.com/watch?v=WRZ3o-NsU_4

   - EdgeDB - 개발자를 위한 차세대 오픈소스 ORDB https://news.hada.io/topic?id=4602
   전에 긱뉴스에 기사 올리고 나서 7개월만에 공식 릴리즈 되었네요.
"
"https://news.hada.io/topic?id=5860","Roblox의 작년 73시간 장애 포스트모템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Roblox의 작년 73시간 장애 포스트모템

   # 장애 요약
   * 장애는 72시간 동안 발생했음
   * 근본 원인은 2가지
   * 비정상적으로 높은 읽기/쓰기 부하가 있는 상황에서 Consul의 새로운 스트리밍 기능을 활성화하면서 과도한 경합과 성능 저하 발생
   * 특정 부하 상황에서 Consul이 리더 선출과 데이터 리플리케이션을 위한 write-ahead-log를 관리하는데 사용하는 오픈소스 BoltDB에서 성능 문제를 발생시킴
   * 단일 Consul 클러스터가 이러한 이슈의 영향을 악화시킴
   * Consul 구현에 감춰진 이 두가지 관련없어 보이는 이슈를 찾아내느라고 장애가 연장됨
   * 장애의 원인에 대한 더 나은 가시성을 제공해야 했던 모니터링 시스템이 Consul처럼 영향받는 시스템에 의존했기 때문에 더 찾기 어려웠음
   # 클러스터 환경과 HashiStack
   * Roblox는 18,000 서버와 170,000 컨테이너를 운영 중
   * 보통 HashiStack이라고 부르는 Nomad, Consul, Vault를 사용 중
   당시 Roblox에서 스트리밍 기능을 사용하려고 Consul을 1.9에서 1.10로 업그레이드함.
   # 최초 탐지(10/28 13:37)
   10월 18일 오후 Vault의 성능이 떨어지고 한 Consul 서버의 CPU 부하 높아짐.
   # 초기 분류(10/28 13:37 – 10/29 02:00)
   * Consul 클러스터 메트릭에서 쓰기 대기 시간이 증가함
   * 하드웨어 성능 저하를 원인으로 의심하고 Consul 클러스터 노드 중 하나는 교체하기 시작
   * HashiCorp 직원이 합류하려 같이 작업하기 시작
   * 하드웨어 교체후에도 Consul 성능은 계속 떨어지고 16:35에 플레이어 수가 평소의 50%로 떨어짐
   * Consul이 서비스 디스커버리로 쓰이고 Nomad와 Vault도 Consul에 의지하고 있으므로 Consul이 SPoF였다.
   * 이 때 트래픽이 원인이라는 새로운 가설을 세움. 높은 트래픽으로 Consul이 더이상 부하를 처리할 수 없다고 생각함
   * Consul 클러스터의 모든 노드를 더 강력한 시스템으로 교체.(코어 2배 증가, 더 빠른 NVME SSD)
   * Consul 마이그레이션이 거의 끝났지만 클러스터는 정상으로 돌아오지 않음
   # 서비스 복구 시도 #1(10/29 02:00 – 04:00)
   * 장애전 Consul 클러스터의 스냅샷으로 되돌리기로 함
   * 사용자 데이터는 괜찮고 시스템 데이터는 일부 손실되겠지만 괜찮다고 판단
   * 스냅샷 복구후 Consul과 계속 통신하는 시스템으로 인한 부하로 복구후 문제가 생길까봐 iptables로 접근을 차단함
   * 스냅샷 복구후 지표가 좋아보였으나 iptables 차단을 풀자 다시 원래의 장애 상태로 돌아감
   # 서비스 복구 시도 #2(10/29 04:00 – 10/30 02:00)
   * 외부 트래픽을 차단하고 필수가 아닌 사용은 제거해서 수백개의 인스턴스로 운영되던 서비스가 한자리 수로 줄어듦
   * 다시 서비스 복구를 시도했으나 Consul은 다시 비정상 상태가 됨
   * 처음 생각했던 성능 저하 요인외에도 다른게 있다는 걸 깨닫고 Roblox 관점에서의 Consul이 아니라 Consul 내부를 보기 시작함
   # 경합 분석 (10/30 02:00 – 10/30 12:00)
   * 10시간 동안 더 분석한 결과 Consul 쓰기가 장시간 차단되었음을 알게됨
   * 경합의 원인은 몰랐지만 초기 CPU를 64코어에서 128코어로 변경한게 경합을 더 악화시켰다고 판단
   * 64 코어로 돌아가기로 결정하고 돌아갔지만 도움되지 않음
   # 근본 원인 발견(10/30 12:00 – 10/30 20:00)
   * Consul의 스트리밍 기능은 몇달 전부터 활성화했고 CPU 사용량과 네트워크 대역폭을 낮추었기 때문에 점진적으로 도입하던 중이었다.
   * 장애 하루전 27일 14:00에 트래픽 라우팅 백엔드에서 이 기능을 활성화함.
   * 하루전에 활성화 후 잘 동작했기 때문에 원인으로 생각하지 못함
   * 성능 분석 후 스트리킹 코드가 높은 CPU를 유발한다는 증거를 확인
   * 스트리밍을 비활성하고 배포 완료 후 Consul의 KV 쓰기 지연시간이 줄어듦을 확인(드디어!)
   * HashiCorp에서는 스트리밍이 더 효율적이지만 구현시 긴 폴링 보다는 적은 수의 동시성 제어 요소(Go 채널)를 사용했다고 함 -> 높은 로드에서 단일 Go 채널의 경합을 악화시켜서 효율성을 떨어뜨림
   * 돌파구는 보였지만 아직 간헐적인 리더 선출이 발견되었고 일부 리더는 이전과 비슷한 지연시간 문제가 나타남
   * 특정 리더만 선출되지 않으면 클러스터는 정상이라는 판단하에 서비스를 정상상태로 돌리는데 집중
   * 이후 HashiCorp는 근본 원인을 계속 조사하여 일부 리더가 느린 문제가 BoltDB 때문임을 찾아냄
   # 캐시 서비스 복구(10/30 20:00 – 10/31 05:00)
   * 장애 54시간 만에 서비스 복구할 준비가 됨
   * 장애 중 디비는 괜찮았지만 초당 10억 요청을 처리하는 캐시 시스템은 비정상적이었다.
   * 이 캐시를 복구하고 정상임을 확인하자 장애 후 61시간이 되었다.
   # 사용자 복귀(10/31 05:00 – 10/31 16:00)
   * 31일 5시에 서비스 복귀 준비를 시작해서 10시에 마무리함.
   * DNS로 접근하는 플레이어 수를 관리해서 모니터링하면서 늘려감
   * 73시간만에 모든 플레이어가 접근할 수 있게됨.
   # 추가 분석과 장애로 인한 변경사항
   * HashiCorp와 Roblox는 ""압축"" 프로세스를 개발하여 성능 문제를 해결함
   * 텔레메트리 개선: 텔레메트리 시스템과 Consul 사이에 순환 읜존성이 있어서 Consul에 문제 있을때 데이터가 부족했다. 텔레메트리 시스템이 모니터링하는 시스템에 의존하지 않도록 순환 의존성 제거
   * 가용영역과 데이터센터 확장
   * 다른 스토리지가 있음에도 Consul에 저장하거나 불필요한 KV 데이터를 정리.
   * BoltDB의 후속인 bbolt로 교체한 새 버전의 Consul을 테스트 중
   * 부트스트랩 프로세스로 인해 복구가 늦어졌으므로 이를 자동화하고 새로운 도구와 프로세스를 개발 중

   우어 번역 감사합니다.
   저 규모에서 72 시간 장애는 정말 무서운듯
"
"https://news.hada.io/topic?id=5968","Puppeteer-to-Playwright - 스크립트 변환 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Puppeteer-to-Playwright - 스크립트 변환 도구

   기존 Puppeteer 스크립트를 Playwright 로 변환
   - import 변환
   - 기본 메소드들을 새 API로 변환 ( setViewport → setViewportSize )
   - 브라우저 컨텍스트 명시적으로 생성
   - explicit waiting 제거
   - 쿠키 관련 명령 변환
   현재 미지원 기능
   - 파일 업로드/다운로드
   - Request/Response Interception
   - Multiple contexts / tab

   Puppeteer 쓰시다가 Playwright 넘어간 분들은 만족하고 계시더군요.
   기존에 작성한 스크립트가 많다면 이런 도구가 도움 될 것 같습니다.
   - microsoft/playwright 릴리즈 - 원격 브라우저 컨트롤 https://news.hada.io/topic?id=1374
   - Playwright 1.4.0 공개 https://news.hada.io/topic?id=2828
   - Headless Dev - Puppeteer & Playwright 지식 창고 https://news.hada.io/topic?id=2685
"
"https://news.hada.io/topic?id=5973","Lurnby - 웹을 이용한 학습도구 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Lurnby - 웹을 이용한 학습도구 오픈소스

   - 웹 콘텐츠를 가져와 광고/스크립트 등을 제거하고 노트/하이라이트 하면서 공부할 수 있게 해주는 도구
   ㅤ→ ePub, 블로그, 이메일 내용등
   - 하이라이트 한 내용들은 정렬/검색 및 리뷰 가능
   ㅤ→ 별도 DB로 저장 지원
   - 폰트 스타일/크기 및 다크모드 등 원하는 형태로 바꿔서 읽기
   - 크롬/FF 확장으로 연동

   오. 써봤는데 꽤 괜찮네요.
   다만, 아티클을 삭제하는 기능은 없어서 좀 아쉽네요.

   원래 학습목적으로 마진노트를 아이패드와 맥에서 썼는데 윈도우 데스크탑에서 사용할 수가 없어서 렘노트로 잠깐 이주했다가 노트가든, xguru님이 언급하신 Polar도 써봤습니다.
   PDF 문서를 주로 다루고 렘노트의 매우 빈약한 한글지원과 구독제에 Polar에서 깨작깨작…공부하고 있습니다.

   원래 https://www.lurnby.com/ 로 서비스 하다가, 오픈소스로 공개하기로 결정했다고 하네요
   Archivy - 셀프호스팅 지식 저장소 https://news.hada.io/topic?id=3497
   이것과 비슷한데 좀 더 공부 쪽에 치중한 듯 합니다.
   현재 얼리억세스 받고 있는 Polar https://getpolarized.io/ 는 이걸 좀 더 상품화한 것처럼 보입니다만..
   신청했는데 초대장이 아직 안 와서 아직 써보질 못했네요
"
"https://news.hada.io/topic?id=5884","Cool Cats NFT를 구축하면서 배운 것 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Cool Cats NFT를 구축하면서 배운 것 [번역]

   Cool Cats NFT를 구축하면서 배운 것
   : 전혀 다듬어지지 않은 솔리디티 초보자 필자의 NFT여정
   - 여정의 시작
   - 테스트, 테스트, 또 테스트: 문키즈
   - 메인넷(Mainnet) 론칭하기
   - 솔리디티 컨트랙트의 최적화
   - 쿨캣 구축하기
   - 향후 계획
"
"https://news.hada.io/topic?id=5907","FOSDEM 2022 온라인으로 진행중온라인으로 진행중

   - Matrix를 이용해서 온라인 개최
   ㅤ→ 654명의 발표자, 732개의 이벤트, 103개의 트랙
   - 7개의 메인 트랙 : FOSDEM, Community, RTC, Security, Lightning Talks, Test, 기타
   - 52개의 Devroom : 언어, DB, 기술별 주제의 방들. 세션 영상, Q&A, 채팅방 제공
   - 50개 이상의 Stand : 특정 프로젝트에 대한 내용들을 보고, 사람들과 대화 가능

   모든 Matrix 클라이언트에서 접속 가능하지만, 기본적으로 https://chat.fosdem.org/ 를 추천
   FOSDEM은 2021년과 올해 2년째 온라인으로 진행중입니다.
   - FOSDEM 2021을 Matrix에서 온라인 호스팅한 방법https://news.hada.io/topic?id=3748
   - FOSDEM 2022 온라인에서 개최 예정 https://news.hada.io/topic?id=5247
   그러고 보니 첫 페이지에도 이름에 대한 설명이 없군요. 혹시나 모르는 분들을 위해
   ""Free Open Source Developers’ European Meeting (FOSDEM)""
"
"https://news.hada.io/topic?id=5954","Laravel 9 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Laravel 9 릴리즈

   - 이후 12개월마다 메이저 릴리즈로 변경
   - PHP 8이 최소 버전
   - 새로운 디자인의 routes:list
   - test --coverage
   - 익명 Stub 마이그레인션이 기본 값
   - 새로운 QUery Builder 인터페이스
   - SwiftMailer 를 Symfony Mailer 로 교체
   - Flysystem 3.x 지원
   - Laravel Breeze API & Next.js
   - Laravel Scout Database Engine
"
"https://news.hada.io/topic?id=5929","애플의 경쟁력은 어디에서 오나","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            애플의 경쟁력은 어디에서 오나

   애플의 업무환경을 엿볼수 있는 현직 엔지니어 인터뷰 기사
   애플은 어떤 회사라고 할 수 있을까?
   5대 빅테크 가운데 애플이 가장 앞선 실적을 내는 이유는 좋은 엔지니어들이 많이 있기 때문인가?
   애플에 그런 베테랑 엔지니어들이 많은 이유가 뭔가?
   우리나라 기업들처럼 위아래 위계가 있고 상사 갑질 같은 건 없나?
   팀 내 갈등 조절은 어떻게 하나?
   애플은 대학을 막 졸업한 사람들은 들어가기 어렵나?
   채용은 인터뷰만 하고 뽑는 줄 알고 있는데, 어떤 자격이 필요한가?
   .
   .
   .
"
"https://news.hada.io/topic?id=5871","Trilium Notes - 개인 KB구축을 위한 계층적 메모 앱 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Trilium Notes - 개인 KB구축을 위한 계층적 메모 앱 오픈소스

   - Node.js + Express 코드
   ㅤ→ Electron 으로 묶어 데스크탑(윈/리눅스/맥) 앱 처럼 이용 가능
   ㅤ→ 오프라인 퍼스트로 동작하고, 서버에 동기화 지원
   - 노트가 깊은 트리로 정렬 가능하며, 클로닝을 지원하여 한개의 노트가 여러개의 트리에 위치 가능
   - 마크다운 WySIWYG 에디팅 (테이블,이미지,수식 등)
   - 풀텍스트 검색 및 노트간 빠른 네비게이션
   - 소스코드 하이라이팅 지원
   - 노트의 관계/링크를 시각화해서 보는 지도 기능
   - 자동화를 위한 REST API 지원
   - Javascript 를 이용한 스크립팅 가능
   - 에버노트 & 마크다운 Import/Export 지원
   - 서버 버전에서는 터치에 최적화된 모바일 웹페이지도 제공

   노트앱 천국 시대이군요. 'ㅁ '

   obsidian 의 dataviewjs 역할도 내장(scripting) 된 듯한 느낌이네요!
"
"https://news.hada.io/topic?id=5909","정보 배터리: 남는 신재생 에너지를 적시에 데이터센터에서 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  정보 배터리: 남는 신재생 에너지를 적시에 데이터센터에서 사용하기

   태양광이나 풍력과 같은 신재생 에너지는 자연현상으로부터 에너지를 얻는다는 특성 때문에 시간과 공간에 따라 에너지 획득이 불균형하다는 단점이 있습니다. 따라서 어떤 시간대에는 에너지 공급이 모자랄 수도 있지만, 반대로 어떨 때는 생산되는 에너지가 너무 넘쳐나서 문제가 될 수도 있습니다. 이러한 생산과 소비의 불균형을 해소하기 위해 ESS(Energy Storage System)와 같은 솔루션이 도입되고 있지만, 이러한 솔루션은 비싸고 화재 발생 위험이 있는 등 단점도 있지요.
   정보 배터리(Information batteries) 개념은 기본적으로 아주 단순합니다. 재생 에너지로 인한 발전량이 전력 소비량보다 많을 때, 남는 에너지로 데이터센터에서 계산 집약적인 작업을 하자는 것입니다. 여기서 가능한 계산 집약적 작업의 예시로는 YouTube와 같은 대규모 동영상 인코딩이나 헐리우드 영화의 CG 렌더링 등이 있을 수 있습니다. 그리고 이런 작업이 가능한 인프라를 세계 곳곳에 분산 설치하면, 지금 현재 재생 에너지가 가장 많이 남는 지역에 작업을 분배하여 최대한 빨리 연산을 끝마칠 수도 있을 것입니다.
   물론 이러한 방법은 한정된 종류의 작업에만 적용할 수 있을 것이며, 또한 실제로 이를 구현하기 위해서는 어디서 언제 어떻게 연산을 진행해야 최적의 결과를 얻을 수 있을지 결정하는 시스템이 필요합니다. 그래도 이런 방식이 실제로 도입된다면, 처리 완료 기한을 좀 넉넉하게 잡는 식으로 계산 집약적인 작업을 클라우드에서 비교적 저렴하게 처리할 수도 있게 될 것입니다. 마치 스팟 인스턴스 같은 느낌이겠지요. 이제부터 클라우드를 사용하는 개발자들은 지속가능성(Sustainability)에 대해서도 고려를 해야 한다고 하는데, 정보 배터리 개념은 여기에 잘 맞는 것 같습니다.
   참고 - 아마존 CTO의 2022년부터 그 이후 기술 예측:
   https://news.hada.io/topic?id=5496
"
"https://news.hada.io/topic?id=5960","jless - 커맨드라인 JSON 뷰어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         jless - 커맨드라인 JSON 뷰어

   - 외부 API 및 페이로드 디버깅용
   - JSON 구조를 커서로 이동하며 탐색 가능
   ㅤ→ 라인/노드/뎁스 단위 이동
   - 계층 구조 표현 및 신택스 하이라이팅 지원
   - 정규식 검색 지원
   - Rust 오픈소스 (맥/리눅스 바이너리 제공)
"
"https://news.hada.io/topic?id=5901","Flutter for Windows 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Flutter for Windows 공개

   - 새로 공개되는 Flutter 2.10 버전 부터 윈도우 공식 지원
   - Dart Framework 와 C++ 엔진(Skia,Dart Runtime)이 C++로 된 Windows Embedder (Win32, COM..)와 통신
   - 윈도우 UI용 Fluent 디자인 시스템 적용을 위한 패키지 제공
   - 윈도우 지원을 위해 같이 업데이트된 도구 들
   ㅤ→ FlutterFlow : 로우코드 플러터 앱 디자인 툴
   ㅤ→ Realm : 초고속 로컬 데이터 저장소
   ㅤ→ Codemagic CI/CD
   ㅤ→ Syncfusion : 플러터 위젯
   ㅤ→ Rive : 벡터 애니메이션을 만드는 그래픽 엔진

   다양한 테이블 지원이 눈에 띄고... msix 빌드도 꽤 편해졌다 합니다.
   다음달에는 맥과 리눅스 지원도 발표한다하니 기대가 큽니다.

   윈도우용 알파버전 공개하고 거의 16개월만에 정식 출시 했네요
   - 구글 Flutter 윈도우용 알파버전 공개 https://news.hada.io/topic?id=2905
"
"https://news.hada.io/topic?id=5975","IPA - 개인 정보를 보호하는 광고 어트리뷰션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       IPA - 개인 정보를 보호하는 광고 어트리뷰션

   - 모질라가 Meta(페이스북)과 함께 IPA(Interoperable Private Attribution)를 만들고 W3C의 PATCG에 제안
   - 광고는 웹에 큰 역할을 하지만, 최근의 광고 기법들은 개인정보 보호 측면에서는 좋지 않음
   - 어트리뷰션은 광고주들이 광고 캠페인이 잘 동작 하는 지를 알게 해주는 것
   - IPA는 개인정보를 보호하면서 어트리뷰션을 수행할 수 있도록 지원
   ㅤ→ Multi-Party Computation (MPC) 을 이용해서 웹사이트/브라우저/광고주 누구도 사용자 행동에 대해 알 수 없음
   ㅤ→ Aggregated 시스템이어서 개인 사용자를 추적하지 못하는 데이터를 생성

   ""파이어폭스는 사실상 구글의 자회사입니다""
   Yelp’s Luther Lowe on the ‘Seismic’ Antitrust Case Against Google https://bit.ly/3dNNxen
   이 글 생각나는군요.

   모질라에서 페이스북 컨테이너 Facebook Container https://mzl.la/3sXcFrd 사용자 추적 보호하던 것 생각하면 이상한 행보군요

   개인정보를 추적하지 말고 광고만 추적할수 있게 하자는 제안이므로 일관성 있는 행동이지요

   예 지켜봐야겠네요. 최근 구글의 FLoC 사용자 추적 사례를 본다면 이런 제안들 전적으로 믿지 못하겠더군요

   사용자의 관심/취향을 분석해서 광고를 노출하는 건 웹 특히 페이스북이 급성장한 발판중의 하나였습니다.
   이게 써드파티 쿠키 차단, 애플의 앱 트래킹 투명성(ATT) 등으로 인해서 프라이버시 문제가 대두 되면서 구글/페이스북등이 대안 마련에 나서고 있고요.
   여기에 모질라도 함께 뛰어든 상황.
   ""왜 모질라가 메타와 함께 이런걸 하고 있느냐 ?
   (페이스북은 광고에 목숨걸어야 하는 회사이니 편향되는거 아니냐?)""
   그리고 이런걸 하는게 맞느냐 하는 비판들이 있습니다.
   https://news.ycombinator.com/item?id=30305770
   구글은 FLoC을 만들었다가 반발이 심하자, 이번에 Topic 이란 새로운 것을 제안했습니다.
   - 구글, FLoC을 대체할 새 ""토픽 API"" 공개 https://news.hada.io/topic?id=5830
   Microsoft 도 PARAKEET 이란걸 만들었습니다. https://github.com/microsoft/PARAKEET
   (Private and Anonymized Requests for Ads that Keep Efficacy and Enhance Transparency)
   - 개인정보를 익명화 하지만 관심사를 반영할 수 있을 정도의 노이즈를 추가해주는 프록시를 이용하는 방법을 제안
   ~~~
   그런데 사실 저는.. 이런 논의 자체에 한국의 회사들이 빠져있다는 게 더 아쉽습니다.
   이 IPA가 제출된 PATCG (PRIVATE ADVERTISING TECHNOLOGY COMMUNITY GROUP) 를 보면
   https://www.w3.org/community/patcg/
   참여자가 219명인데, 한국 회사는 없습니다. 당연히 이 사안에 목숨 걸만한 페이스북/구글쪽 엔지니어가 가장 많고요.
   Microsoft, Amazon, Shopify 도 많이 보입니다. 심지어 뉴욕타임즈/워싱턴포스트에서도 참여하고 있어요.
   세계적으로 구글이 검색 1위가 아닌 몇 안되는 나라인데.. 이쪽에 관심을 가져야 하지 않을까 싶네요.
"
"https://news.hada.io/topic?id=5856","Git 2.35의 주요 변경점","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Git 2.35의 주요 변경점

   - git stash --staged 로 스테이징 영역에 있는 파일들도 임시 저장 가능
   ㅤ→ git commit to stash 라고 생각하면 됨
   - git log 에서 사용하는 describe 에 출력 옵션 추가 (tags, abbrev, match, exclude)
   - SSH signing 에서 valid-before/valid-after 지원
   ㅤ→ 예전 키로 사인된 객체의 검증도 가능 해짐(SSH키를 로테이션 했거나 할 경우)
   - merge 시에 새로운 zdiff3 모드 추가
   - diff --histogram 와 --color-moved-ws 속도 개선
   - git jump merge 가 경로를 인식해서 특정 경로에서 난 머지 컨플릭트 부분으로 점프 가능
   - Sparse Index 가 reset/diff/blame/fetch/pull/ls-files 에 연동
"
"https://news.hada.io/topic?id=5889","벨로그에 다크모드 적용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             벨로그에 다크모드 적용하기

   다크모드를 고려하지 않았던 서비스에, 다크모드를 도입하는 이야기를 글로 풀어냈습니다.
   UX디자이너의 관점, 그리고 개발자의 관점을 모두 더해 글을 작성했습니다.
   - 기술 선택
   - 벨로그는 리액트와 Styled Components 사용중
   - Styled Components의 ThemeProvider는 JS로 테마를 설정하기 때문에 시스템 테마를 기본으로 보여주는 것이 제한적임. 시스템 테마를 따라가려면 브라우저단에서 JS를 한번 호출해줘야 하기 때문에, 기본 테마를 고정시킬 것이 아니라면 SSR을 적용한 벨로그에는 적합하지 않음.
   - CSS Variable을 사용하면 시스템 테마를 기본값으로 사용하게 만들 수 있음
   - CSS in JS 환경에서 CSS Variable을 사용하기 위해서, 색상을 JS 객체로 관리하고, 실수 방지 및 TypeScript의 자동완성을 누릴 수 있도록 유틸 함수 작성해서 사용중
   - 다크모드 팔레트 고민
   - 배경색, 텍스트색, 테두리색, Primary, Destructive 색을 기준으로 색들을 정함
   - 배경색의 경우 처음엔 1 2 3 4 명도 레벨 별로 정리를 했었는데 막상 실제 UI에선 1:1 대응이 되지 않을 때가 있어서, 예외 상황을 대응하기 위하여 조금 변경하여 관리
   - 텍스트 색을 정할 때는 대비율이 적당한지 확인하는게 중요. WebAIM 이라는 곳에서 WCAG 에 통과하는지 볼 수 있음
   - Primary, Destructive 색은 기존 색을 그대로 어두운 배경에서도 잘 대비되어 보이지만, Desaturated 색을 쓰면 조금 더 다크 테마에 어울리는 느낌
   - 색상 교체 작업
   - IDE 의 도움을 받아서 자동 교체할 수 있는 것들은 처리
   - 나머지 예외 색상들은 직접 보면서 적당한 색상으로 설정
   - 기존에 만들었던 색상으로 구현하기에 어색한 경우엔 팔레트에 새 색상을 그때 그때 추가해가면서 관리
   - 실제로 이 작업에 공수가 가장 많이 들어갔음
   - 다크테마 토글 기능
   - SVG 두개를 rotate, scale CSS 트랜지션을 통해 트랜지션 효과 구현
   - 사용자가 다크테마를 토글하면 사용자 설정을 로컬스토리지와 쿠키에 저장함
   - 로컬스토리지는 CSR에서, 쿠키는 SSR에서 사용함
   한번 다크 테마 적용을 해보고 나니, 다크 테마를 고려하고 하지 않은 UI에 다크 테마를 적용하는 것은 엄청나게 힘든 일을 느꼈음. 앞으로 기획할 땐 무조건 다크 테마를 고려하고 디자인 할 것이며, 색상을 사용할땐 gray1, gray2 이런식으로 색상 이름을 사용하는 대신에 text1, text2 이런식으로 용도별로 네이밍을 하면 추후 좀 더 편할 것으로 판단함
"
"https://news.hada.io/topic?id=5939","펠로톤 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                펠로톤 이야기

   지난 2년 동안 줌과 더불어 가장 많이 회자된 펠로톤의 이야기. 판데믹의 승자처럼 보였던 펠로톤은 어쩌다가 여기까지 왔을까? 1년 전 대비 펠로톤의 주가는 약 84% 하락하였다. 지금부터는 어떻게 해야 할까?
   블랙웰스 캐피털이 오늘 공개한 신랄한 펠로톤 관련 자료를 보면서 몇 가지 생각을 정리해본다. 블랙웰스는 펠로톤의 주주이고 액티비스트 투자자인 것은 감안하고 자료를 봐야한다. 블랙 웰스가 크게 주목한 부분은 경영진의 경영 능력, 그리고 경영진의 경영 능력, 그리고 또 경영진의 경영 능력이다. 알고 보니 몇 주전에도 현재 CEO 잭 폴리를 해고하라고 공개 편지를 썼던 액티비스트 투자회사
"
"https://news.hada.io/topic?id=5865","CSS 역사로 알아보는 CSS가 어려워진 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       CSS 역사로 알아보는 CSS가 어려워진 이유

   - 문서를 공유하기 위해서 HTML이 만들어졌다. 1990
   - CSS가 만들어지다, 1996
   - CSS Zen Garden의 열풍, 2003
   - Sass의 등장, 2006
   - jQuery, Ajax의 보편화, 2008
   - 방법을 찾아보자. CSS 방법론와 BEM, 2013
   - Flexbox의 등장, 2013
   - Handoff툴의 등장! Zeplin, 2014
   - IE11 (비공식) 업데이트 중단, 2015
   - CSS 수고했어... 이제는 JS가 해결해볼게! CSS Modules, 2015
   - CSS in JS: Styled-Component, 2016
   - 지금까지의 CSS는 틀렸다. TailwindCSS! 2017
   - CSS Variables의 등장, 2017
   - GridLayout의 등장, 2017
   - IE11안녕~ 함께해서 더러웠고 다신 만나지 말자, 2020
   - figma, sketch를 누르고 디자인툴 1위가 되다, 2020
   - CSS in JS의 대유행, 2021
   - on-demand Atomic CSS! ... 2021? 2022? 2023?
   - 요약 : 중요 내용 복습
"
