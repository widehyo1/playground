"https://news.hada.io/topic?id=8120","Obsidian Canvas - 아이디어 그리기용 무한 칠판","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Obsidian Canvas - 아이디어 그리기용 무한 칠판

     * 노트 작성도구 Obsidian의 노트들을 시각적으로 정렬하여 아이디어 스케치 가능
     * 노트외에 이미지/PDF/비디오/오디오/웹페이지를 임베드 가능
     * 오픈소스 JSON 포맷으로 저장되어 다양한 도구 및 확장을 통해서 기능 추가 가능

   저는 좀더 간단한 logseq로 넘어왔는데 다른 분들은 어떠세요? obsidian vs logseq

   plugin 덕분에 logseq 에서 머물고 있었는데, 옵시디언이 다시 눈길이 가네요

   Obsidian은 정말 잘 만든 앱이랍니다. 열정적인 개발진과 열정적인 커뮤니티가 사용자가 맞춰서 만들 수 있는 노트앱을 만들었어요.

LOCAL FIRST

   Obsidian은 Local-First 앱이라서 제 데이터를 제가 관리할 수 있고. 그건 실용적으로 정말 굉장합니다.

  엄청 빠른 반응 속도

   10만자짜리 문서도 문제 없습니다. 수많은 문서를 검색해도 멈출 일이 거의 없습니다. (지금까지 제가 3900개의 문서를 썼는데도요!) 앱은 빠르고, 기민합니다.

  플렛폼 툴에 의존하지 않고도 정리할 수 있는 수많은 방법들.

   Notion에서 모든 문서에 '안녕'을 '안녕하세요'로 바꾸려면 까마득하지만. Obsidian에서 그런 짓은 그냥 늘 쓰던 CLI 툴이나 grepwin을 돌리면 끝나죠.

동기화 솔루션을 원하는데로 선택할 수 있음

   Obsidian sync라는 기본 동기화 솔루션이 있지만. Obsidian은 Local-First 이기 때문에 그냥 Obsidian 폴더를 클라우드에 던져놓고 그걸로 동기화해도 Obsidian은 부드럽게 잘 동작합니다. 백업 플랜이 필요하시면 Obsidian Git 플러그인을 쓰면 되고요. 그러므로 만약 Obsidian Sync가 망하더라도, 여러분은 여전히 Obsidian을 동기화 시킬 수 있는거죠. 제가 서비스를 쓰면서 이렇게 안심이 되고 편안했던 적이 없었습니다. Notion 초창기에는 이 친구들 망하면 내 데이터는 어떻게 될까.. 로 걱정을 많이 했거든요.

엄청난 커뮤니티 플러그인으로 나만의 메모 툴을 맞출 수 있음

   옵시디언을 단순 메모앱으로만 쓰지 않고 뻗어나갈 수 있는 방법이 무궁무진합니다. Obsidian과 통합할 수 있는 Excaildraw, 칸반 보드., 캘린더,그리고 문서를 검색엔진처럼 검색할 수 있게 해주는 OmniSearch, 특정 템플릿으로 문서를 양산할 수 있는 템플리터. 등등등...

   앱의 API가 바뀌어도 대부분 기민하게 반응하여 새 API에 따라 맞춰줍니다. 기본 테마 마음에 안 드는 사람들을 위해서 커뮤니티 테마도 있습니다. 그리고 그 기능이 앱 내부에 예쁘게 들어가있어요. Obsidian에서 모두 해결 가능한거죠. Github가서 Installtion 항목을 안 읽어 보고 그냥 '설치' 버튼 누르면 짠. 하고 들어가요.

사용자가 툴에 맞추는 게 아닌, 툴이 사용자에 맞출 수 있게 함.

   Obsidian에는 엄청나게 많은 기능들이 있지만. Obsidian은 사용자가 그것에 관심을 가지지 않는 한 조용히 있습니다. 그래서 그에 비하여 엄청나게 깔끔하게 보여요. 툴의 모든 기능을 알 필요도 없고, 단지 사용자가 가장 편한 것만 골라서 쓸 수 있도록 설계 되어있답니다.

그러면서도 이쁨

   기본 테마가 예전에는 봐줄만 했다라는 평이면. 지금은 진짜 이쁩니다. Obsidian만의 디자인이 있고. 보면 행복한 디자인이죠. 좀 Geek한 앱 중에 가장 이쁜 것 같습니다. 사랑스러워요.

그러면서도 굉장히 적극적인 개발진

   꽤 괜찮다고 생각했었던 게 21년 초였는데. 그 때 이후로 엄청 많은 것들이 들어갔습니다. 위그직 지원, Canvas, 새로운 UI, 멀티 탭... Obsidian 개발팀은 유저와 적극적으로 소통하며, 굉장히 활발하게 개발중이입니다. 제가 Sync가 작동하지 않는다고 리포팅을 했는데 3분 안에 멘션으로 수정되었다고 날라왔었던 적도 있었어요.

   3년인가 2년째 쓰고 있지만, 정말 멋진 툴이랍니다. 다들 꼭 한번씩 써보셨으면 좋겠어요.

   리눅스에서도 잘되서 좋아요..! 노션은 지원할 생각이 없다고 박아놓은...ㅋㅋ

   정말 좋아요! 'ㅁ 'bbb ㅋㅋㅋㅋ

   옵시디언 사용한지 3달쯤 되어가는데 너무 만족합니다. 다들 꼭 한번씩 써보셨으면 좋겠어요.
"
"https://news.hada.io/topic?id=8204",".NET 7 기능 - Native AOT Deployment","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   .NET 7 기능 - Native AOT Deployment

     * .NET AOT란?
     * Native AOT 배포

   .NET 7은 이제 콘솔 애플리케이션으로 윈도우, 리눅스 및 macOS에서 .NET 런타임 없이 2M 수준의 작은 사이즈의 네이티브 코드를 생성할 수 있고 의존 없이 실행 가능합니다.

   .NET 7에서 지원하지 않았던 macOS를 .NET 8에서 공식 지원하게 됩니다.
   https://learn.microsoft.com/en-us/dotnet/…

   Microsoft 공식 문서를 보면, 이 기능은 미리 네이티브로 컴파일하는 데서 오는 근본적인 제약점 이외에도 개발 초기 단계이기 때문에 생기는 부가적인 제약점이 좀 있습니다. 아직 ASP.NET Core 앱에는 적용이 안 되고, 라이브러리 단계에서의 지원이 필요하며, 디버깅이나 프로파일링에도 아직 한계가 있습니다. 덧붙이자면 CPU 아키텍쳐는 x64와 ARM64만 지원하기 때문에 32비트 윈도우용 앱은 만들지 못합니다. 그리고 눈에 띄는 점이라면, 이 기능을 통해 비 .NET 앱에서 가져다 쓸 수 있는 정적 라이브러리를 만들 수 있다는 점이 있군요.

   MS에서 .NET 7을 발표하면서 “클라우드 네이티브 앱을 위한” 플랫폼이라고 말했습니다. 이를 위해 앱을 Docker 컨테이너로 배포하는 기능도 추가했지요. AOT 지원 또한 이런 컨테이너화된 앱의 이미지 용량과 시작 시간을 최적화하기 위한 도구로 추가된 것이 아닌가 싶습니다. 하지만 정작 ASP.NET Core에 대한 지원이 아직 작업 중이니, 이 기능이 클라우드 네이티브 앱에서 실질적으로 빛을 발하는 것은 좀 더 훗날의 일이 되겠지요.

   참고:
     * Microsoft Learn - Native AOT Deployment
     * Building a Hello World console app with NativeAOT
     * Building Native Libraries with NativeAOT

   친절한 답변 감사합니다.

   콘솔 애플리케이션은 미리 보기 단계를 넘은 정식 릴리스 단계로 실제 애플리케이션을 개발할 수 있습니다.

   말씀하신 것 처럼 초기 단계라 ASP.NET Core라던가 WPF, Windows Form 또는 WinUI의 지원이 아직 없습니다.

   또한 도커 컨테이너로 배포하고자 하는 니즈에는 부합되지 않습니다. ASP.NET Core를 아직 지원하지 않거든요.

   마찬가지로 말씀하신 것 처럼 네이티브 코드로 컴파일 되므로 Reflector의 대부분의 기능을 사용할 수 없습니다. 이 부분은 초기단계에서 비롯되는 제약점이라기 보다는 IL코드와 네이티브 코드의 다른 특성 때문으로 보입니다.

   현재의 NativeAOT의 의미는 윈도우, 리눅스 및 macOS에서 의존성 없는 순수한 네이티브 코드를 콘솔 애플리케이션 수준에서는 훌륭하게 배포할 수 있다는 점 같습니다.

   macOS는 아닙니다. 제가 링크한 Microsoft Learn 문서를 보시면 아시겠지만, 현재 이 기능의 지원 플랫폼은 Windows와 Linux뿐입니다. macOS는 아마 나중에 추가되겠지요.
   시간이 해결해 주겠습니다만, 이 기능은 아직 현업에서 쓰기 힘든 경우가 더 많지 않을까 생각합니다.

   macOS는 아직 지원하지 않는 것이 맞습니다.
"
"https://news.hada.io/topic?id=8209","비즈니스/엔터프라이즈용 앱을 만들 때 고려해야 할 것이 뭘까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  비즈니스/엔터프라이즈용 앱을 만들 때 고려해야 할 것이 뭘까요?

   HN에 올라온 질문과 추천을 많이 받은 답들

답변 1

     * 구매자는 누군가? 일반적으로 제품의 사용자와 다르고, 그들이 원하는 게 무엇인지 파악해야 함
     * SSO, SAML 기반
     * 보안에 있어서 OWASP top-10 은 커버하고, app-sec(앱 보안)도 커버
     * RBAC 구현. 관리자가 사용자 추가/관리 쉽게 할 것
     * 데모 계정을 샌드박스로 구현하고 실제 데이터와 비슷한 걸로 채울 것. 세일 피치때 매우 쉽게 할 것. 당신 대신 제품이 말하게 할 것
     * 처음부터 멀티 테넌시를 고려할 것. 나중에 추가하기 어려움
     * 도메인별 컴플라이언스 요구사항을 처음부터 구축할 것. SOC 2와 같은 것은 힘들지 않음. 그러는 동안 괜찮은 보안 공급업체를 찾아서 테스트받고, 우선순위가 높거나 중간인 문제점들을 수정하고 인증서를 발급받을 것. 고객과의 신뢰를 구축하게 됨
     * 보고서. 보통 관리자들은 다양한 보고서를 필요함. 그들에게 CSV/Excel 다운로드를 제공하고, 그들의 스프레드 시트 소프트웨어에서 잘라서 사용할 수 있게 만드는 것이 좋음
     * 사용자들은 실수할 수 있으므로, 항상 Soft-delete를 이용할 것. 그리고 몇 달 후에 hard-delete 가능

답변 2

     * 회사의 첫 번째 엔지니어로서 2개의 성공적인 엔터프라이즈 앱을 만들었음(하나는 팔았고, 하나는 현재 100M 이상 가치)
     * 걱정해야 할 단 하나는 ""고객이 당신의 앱을 정말로 원하고 필요로 하는지""임. 엔터프라이즈 SaaS 제품의 99%는 누락된 기능 때문이 아니라 이것 땜에 실패함
     * SSO, Integration, 감사 추적(Audit Trail) 같은 엔터프라이즈 기능은 고객이 요청할 때 구축할 수 있음
       이런 기능은 대부분 해결된 문제지만, 당신이 엔지니어이기 때문에 매력적인 문제처럼 보임
     * 이런 것은 무시하고 비즈니스 문제에만 집중할 것 ""내 앱이 내 고객의 절실한 요구를 해결하는가?""
       이 질문에 대답하는 마인드셋을 가지려면 ""The Mom Test""를 읽을 것. 그게 지금 가장 중요함

답변 3

     * 내가 당신이라면 B2B/엔터프라이즈 제품의 기술적 측면은 나중을 위해 남겨둘 것
     * 주요 문제는 판매 프로세스/GTM(Go To Market) 전략을 파악하는 것. 다른 사람들이 얘기했듯이, 문제/산업에 대해서 알고 기업에 판매해 본 경험이 있는 사람과 파트너십을 맺는 것이 도움이 됨. 이게 회사의 핵심 역량이 될 것이라는 것을 명심(돈을 많이 벌고 싶다면). 기술 리더로서의 업무는 단순히 제품을 만들고 배송하는 것보다 컨설팅에 더 가까움
     * 혼자 진행한다면, 비즈니스 프로세스에 관련된 많은 사람들과 이야기해보고, 당신이 지금 고치려고 하는 문제를 왜 그들이 지금 그런 식으로 하고 있는지를 확인할 것. 종종 우리는 개발자로서 문제를 기술 문제로 보지만, 실제로는 조직/정치/사회 문제일 가능성이 높음. 먼저 많이 구축하지 말고, 보여주고 피칭할수 있는 비주얼 프로토타입을 먼저 만들고, 사용자가 직접 테스트할 수 있게 제공

답변 4

     * 당신이 추구하는 비즈니스 유형에 따라 많은 것이 달라짐. 정부기관 또는 금융조직을 대상으로 한다면 요구사항이 일반 소프트웨어 회사보다 훨씬 많음
     * 대기업의 경우는 판매 주기도 상당히 길 수 있지만, 이를 보완하듯 거래 규모가 상당히 클 수 있음
     * 몇 년 간 기업고객에게 판매한 내가 줄 수 있는 최고의 조언은 ""타겟 고객을 이해하라""임. 회사 자체뿐만 아니라 소프트웨어를 판매할 실제 사람들. 구축을 시작하기 전에 대상 고객과 대화하여 그들이 필요로 하는 것이 정확히 무엇인지 확인하고(그게 당신이 생각하는 것과 일치하는지도 확인하고), 그들이 당신의 소프트웨어 구입에 어떤 장애물이 있는지도 확인할 것. 요구사항을 미리 안다면 판매 과정에서 놀라지 않ㅅ을 것
     * 내가 추천하는 책은 The Mom Test. 대상 고객으로부터 피드백을 얻기 위해 올바른 질문을 하는 방법을 배울 수 있을 것

답변 5

     * API를 노출하도록 앱을 만들고, 웹클라이언트가 그 API를 이용해 렌더링하게 만들 것. 엔터프라이즈 공간에서는 SEO를 위해 서버측 렌더링을 수행할 필요는 없음
     * 종종 기업에서 사람들이 당신의 앱을 사용한 뒤 스스로 자동화하거나 앱을 다른 시스템에 통합하기를 원함. 이때 API가 있다면 당신이 추가로 작업할 필요가 없다는 것. 그들이 앱에서 할 수 있는 모든 것은, 자동화할 수 있음
     * 데이터베이스가 관련되어 있다면 당신의 사용자가 읽을 수 있는 읽기 전용 복제본이 있다면 모든 비즈니스 질문에 빠르게 답변이 가능. 많은 사업가, 보고서 작성자, 엔지니어들은 SQL에 매우 정통함.

답변 6

     * 가장 중요한 것은 ""기업이 해결을 위해 기꺼이 비용을 지불할 수 있는 문제를 찾는 것"". 간단한 MVP를 설정하고 거기서부터 성장할 것

답변 7

     * 스키마 단계부터 멀티테넌시를 위한 구축 및 설계
     * ID와 로그인 메커니즘을 디커플링 할 것 - 사용자당 멀티 로그인 메커니즘을 계획(이메일/암호, SAML, OpenID Connect, Google)하고 멀티 인증 팩터도 고려(TOTP, Duo,..). 인증된 사용자를 어떻게 구분할지 및 이메일 주소를 어떻게 검증할지 주의할 것
     * 데이터베이스 연결에도 TLS를 사용. 암호화를 사용할 것. 백업을 자동화하고, 전체 어플리케이션이 아닌 고객별 데이터를 복원/Export할수 있게 할 것
     * 시계열 데이터베이스 또는 이벤트 로깅 시스템을 사용하고, 권한이 있는 사용자가 시스템에서 수행하는 모든 작업, 계정 또는 권한 변경, 파괴적인 작업등에 대한 Audit Trail을 생성할 것

   인사이트가 느껴지네요

   https://tkim.co/2020/02/12/the-mom-test/

   SaaS기업의 비밀 : 왜 멀티테넌시가 중요한가
"
"https://news.hada.io/topic?id=8095","Awesome Open Source - 오픈소스 검색기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Awesome Open Source - 오픈소스 검색기

     * 6백만개의 프로젝트, 17만개의 토픽에서 검색 가능
     * 59개의 상위 카테고리 및 하위 카테고리 별로 브라우징 가능
     * Star 수, 각 프로젝트에 의존하는 패키지 수, 릴리즈 횟수, 최근 커밋 시간, 월 다운로드 횟수 등을 표시

   이 글과 상관없지만, 산타마크 이스터에그 좋네요 ㅎㅎ
"
"https://news.hada.io/topic?id=8142","당신의 2023년 예상은 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            당신의 2023년 예상은 ?

   HN에 매년 올라오는 질문. 투표 상위 답변 몇개 발췌

답변 1

     * 브레튼 우즈 체제(BWS)가 점점 무의미해지고, 무역이 블록/지역 기반으로 이동함에 따라 탈세계화 가속
     * 개인 정보 보호, 감시, 언론의 자유에 대한 관점이 점점 더 달라지면서 웹은 계속해서 Euro, Sino(중국), Russo(러시아), Americano 네트워크로 분열되고 있음. 실리콘 밸리 회사들은 이를 느리게 픽업하는 중
     * 베이 에어리어의 기술회사 정리해고가 심화. 고용이 다시 시작되면 다수의 신규 고용자는 원격근무하거나, 인건비가 저렴한 다른 지역에 있음
     * 스톡 사진 및 초보 수준의 카피라이팅 시장이 완전히 무너짐
     * TikTok을 미국에서 금지하기 위한 심각한 방법들을 시도. 이게 문화적 문제의 핫버튼이 됨
     * 비트코인 가격이 두 배로 증가하는 또 다른 암호화 미니붐이 최소 몇달간 지속. 이건 또 다른 거래소가 개인의 돼지저금통으로 사용되고 있는 것으로 밝혀지면서 끝나게 됨
     * 영국은 정치 계급의 전반적인 무능력으로 인해 경제적 파멸로의 길고 느린 슬라이딩을 계속 하는중 (아마도 당신은 1945년 이후로 계속 이 예측을 했을 것이고, 여전히 맞음)

답변 2 (유머)

     * USB 4, 시리즈 D가 정의될 것. 3개의 오리엔테이션 : 디스플레이, 전력, 데이터 전송
     * 사우디 아라비아가 서구의 기술회사에 대한 윤리 기준 요구사항을 발표할 예정. 정확한 정의는 혼란스러울 정도로 진보적이어서, 모든 사람을 경계하게 할 것
     * 구글이 미래에 대해 아름답게 설명하는 보도자료와 함께 ""검색"" 제품을 취소. 2024년 2분기에 LLM으로 돌아올 것
     * 누군가 Rust 와 C를 포크해서 묶은뒤 Crust라고 불리는 것을 만들 것. 엄청 인기를 끌게될 것
     * 제임스 카메론의 아바타 3가 사고로 유출됨. 영화가 실제로 CGI가 아니며 모든 돈이 쥬라기 공원 스타일의 끔찍한 유전자 실험에 사용되었음을 폭로
     * 트위터는 4명의 각자 CEO를 가지게 되며, 연말에는 공공 비영리 지주회사가 될 것.

답변 3

     * AI의 급격한 진보가 살짝 늦춰질 것. Dall-e와 GTPChat은 장기적으로는 규칙이 아닌 예외가 될 것. 더 많은 매개변수와 훈련으로 해결할 수 있는 어려운 AI문제의 비율은 그리 크지 않음
     * 역설적으로, AI가 모든 것을 바꿀 것. 특히 법률 문서같이 엄격함을 가지고 있는 문서들 처럼(코딩에 필요한 요구사항들을 이미 가지고 있음) 변호사들은 이 기계가 자신의 일을 먹어 치울 것이라는 것을 아직 눈치채지 못했음. 아마 변호사만이 유일하지는 않을 거라 생각.
     * 큰 불황은 오지 않을 것. 시장은 잠시 옆으로 흐를 것. 과거처럼 인덱스 펀드에서 9%씩 받지는 못하겠지만, 무일푼이 되지도 않을 것(won't loose your shirt)
     * 모든 사람의 마음에 가장 큰 문제는 우크라이나 전쟁. 내가 보기엔 러시아가 탱크/APC 아님 뭐든 고갈되면서 올 상반기 안에 우크라이나가 승리할 것
     * 중국은 기본적으로 제로 코로나를 포기했음. 예전엔 중국이 또 다른 봉쇠를 할거라고 생각했지만, 그들은 다시 돌아가지 않을 것
     * 먼저 역병, 이제 전쟁, 다음은? 기근(famine)

답변 4

   시간 여행자 처럼 보이기 위해 랜덤하게 적어보자면..
     * 11월에 브리티시 컬럼비아에서 진도 8의 지진
     * 주요 세계 지도자가 3월 프랑스에서 비랙기 추락사고로 사망. 쿠데타 시도의 일부
     * 제임스웹망원경이 멈춤
     * 코인베이스가 무너짐. 크립토는 대부분 죽었음
     * Salesforce가 Twitter의 잔재를 인수
     * Toyota가 Tesla의 잔재를 인수
     * Lockheed와 Northrop이 Space의 잔재를 인수
     * Meta가 Boring Company의 잔재를 인수
     * Cocoa 부족이 세계적인 시민 불안을 야기
     * Amazon이 크로미엄을 포크하여 자체 브라우저를 출시. 프라임 구독이 필요
     * NATO가 우크라이나에 직접 개입하여 러시아를 밀어냄

답변 5

     * AI는 계속 우리를 놀라게 할 것이지만, 2023년에는 실제 변화는 놀라울 정도로 적을 것. 심각한 응용프로그램을 위한 추가적인 1%가 중요
     * 제3세계의 클릭/콘텐츠 공장은 경제적으로 놀라울 정도로 경쟁력이 있음
     * 웹사이트 렌더링은 WebAssembly + Canvas로 구성된 스택, 기본적으로 Flash의 재도약으로 다가가게 될 것 - 필요/욕구는 항상 있었고, 모바일이 점점 강력해지고 있으며, 스택은 다시 조정될 것
     * 우크라이나 전쟁은 왔다갔다하며 계속 될 것. 장기적으로는 전술적 결과에 상관없이 러시아의 전략적 패배로 이어짐(서방의 물류적 우위가 끝내 승리할 것)
     * 중동은 'JCPOA(포괄적 공동행동계획, 이란의 군사목적 핵문제에 대한 합의)가 여전히 실행가능한 척' 하는게 2023년을 넘길수 없어서 폭발할 것
     * 중국과 연준의 충격을 합치면, 경기침체(Recession)는 당연한 수순. 얼마나 오래갈지 알 수 없음

답변 6

     * AI의 결함(Flaws)은 모델이 강력할수록 더 분명해짐. 기본적으로 AI 알고리듬은 추상화가 아닌 패턴을 학습하며, 근본적인 방식으로 추론을 제한함
     * AI가 실수하는 이유를 이해하는 것은 계속 블랙박스임
     * AI는 두려움에도 불구하고, DALL-e등을 통해서 문화를 활기차게 만들 것
     * 근본적인 발견은 아니지만, 탄소 기반 에너지에서 성공적으로 탈피하는 과학 기술의 황금기에 있음. 다양한 문제에 대한 점진적 개선은 강력한 시너지를 창출
     * 세계화의 문제는 가까운 미래에 우리와 함께하며, 동맹국간의 무역 증가로 이어지고, 동맹국이 아닌 국가와의 거래는 줄어들 것
     * 노동 불안은 모든 곳에스 증가할 것
     * 60%로 우크라이나 승리, 35%는 교착상태 또는 전투의 증가, 5%로 핵 사용
     * 우크라이나 상황이 안정되면 주식 시장은 도약할 것

답변 7

     * 테슬라가 품질을 개선하고 EV기술을 개선한 기존 자동차 업체들과 경쟁하기 위해 고군분투 할 것
     * 캐나다, 영국, 아일랜드, 북유럽의 각종 부동산 시장이 40% 급락
     * 러시아가 새로운 지도자를 얻을 것
     * 중국은 대만에 대해 공격적으로 움직이지만 전면 공격은 하지 않을 것. 일종의 봉쇄. 미국은 물러남
     * AI가 100% 제어하는 로봇/드론이 살상무기로 무장하고 순찰에 이용
     * 수중 및 수상 모두에서 AI를 통한 해상 무인 항법의 혁명. 수상은 화물, 해저는 군용
     * ChatGPT와 비슷한 모델은 여러개 나오지만, OpenAI 보다는 못함. AWS/GCP/Azure도 모두 만들 것

답변 8

     * 새로운 소셜 네트워크가 탄생하는 걸 보게 될 것
     * Vue가 다시 한번 AngularJS라는 것을 깨닫고 React로 수렴하게 될 것. Vue3에는 이미 많은 징후가 있음
     * 암호화폐 규제는 지속적으로 논의 될 것. 그리고 SBF가 감옥에 갈때까지는 아무일도 일어나지 않을 것
     * 암호화례를 펌핑하고 버린 인플루언서는 SEC의 지속적인 표적이 될 것
     * 더 많은 정리해고를 보게 될 것
     * 열정을 추구하기 위해 9-to-5를 그만두는 밀레니엄 세대들을 더 많이 보게 될 것. 대부분 인플루언서가 되려고 노력할 것
     * 사람들이 해고되고 스트리밍 경쟁자들이 증가하면서 더 많은 불법복제를 보게 될 것
     * Meta 는 계속해서 손실을 입을 가능성이 있고, 그들의 AR전략은 Apple에 의해 중단될 것

그외 여러명의 답변들중 발췌

     * 리눅스 데스크탑의 해가 될 것
     * 불황으로 고용주들이 백투 오피스를 강제하게 될 것
     * 중국은 2023년엔 대만을 공격하지 않을 것
     * OpenAI API에 기반한 수많은 스타트업들이 생겨나고 혼잡해 질 것. OpenAI는 GPT모델을 계속 발전시키고 GPT4를 출시하여 품질과 신뢰도를 향상시키고 멀티 모달이 될 것
     * 트위터는 플랫폼에 결제기능을 추가하고, 이커머스 기능을 개발 할 것
     * 구글은 더 정리해고를 할 것
     * 트위터는 언론들이 예상하는 종말을 맞지는 않을 것. Musk는 아마도 계속해서 뭔가를 바꾸고, 돌아오게 만들 것
     * 우리는 더이상 ""Yes""라고 말하지 않음. 대신 우리는 ""Affirmative(긍정적)"" 이라고 말함
     * FAANG의 기술 잡이 더이상 매력적이거나 안정적이지 않음. 구글이 관짝에 못을 박았음
     * 스마트 비서의 시대의 종말
     * 새로운 UI의 부상(스마트폰/데스크탑/음성/VR이 아닌)

   ""제임스 카메론의 아바타 3가 사고로 유출됨. 영화가 실제로 CGI가 아니며 모든 돈이 쥬라기 공원 스타일의 끔찍한 유전자 실험에 사용되었음을 폭로""

   중간에 유머스럽게 쓴 내용들도 있어서 원문으로 안보면 오해하거나 잘못 이해 할 수도 있겠군용 😆

   언제나 그렇지만, 이것들은 모두 개인의 의견이니 심각하게 보진 마세요~
"
"https://news.hada.io/topic?id=8195","Rust와 C++의 컴파일 시간 비교하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Rust와 C++의 컴파일 시간 비교하기

   다른 곳에서 재밌는 글을 읽게 되어 소개합니다.

   Rust와 C++가 여러 면에서 비교 대상이 되곤 합니다. 그러나 컴파일 시간을 직접적으로 비교하기엔 같은 프로젝트가 두 언어로 모두 작성된 경우가 드물어서 힘들었습니다. quick-lint-js는 C++로 작성된 프로젝트에서 일부를 Rust로 재작성하여 컴파일 시간을 비교했다고 합니다. 다만 컴파일 환경에서 Windows는 빠졌습니다.

   포팅하는 기준
     * 3자 라이브러리 제외
     * Linux 및 macOS에서 작업
     * 광범위한 test suite
     * FFI, 포인터, 표준 및 직접 작성한 컨테이너, 유틸리티 클래스 및 함수, I/O, 동시성, 제네릭, 매크로, SIMD, 상속, ...

   결론
     * Rust의 컴파일 시간은 C++과 비슷하거나 느림(적어도 이 프로젝트에서는)
     * Rust가 C++보다 더 많은 코드를 작성해야 함
     * 전체(Full) 빌드에서 C++이 비슷하거나 빠름
     * 증분(Incremental) 빌드에서는 짧을 때도 있고 길 때도 있음(아주 긴 경우도 있음)
     * quick-lint-js의 나머지는 Rust로 포팅하지 않기로 결정(빌드 시간 개선이 있다면 할 수도?)

   국내에도 러스트 쓰시는 분들이 많이 계시네요. 다들 어떤 업종에서 일하시는지 궁금합니다.

   1번 컴파일 이후 c++의 디펜던시가 많이 걸린 h가 아닌 단일 cpp 파일들을 수정하면 컴파일이 금새 되는데, rust는 어떤지 궁금하네요

   러스트 문서의 자주 묻는 질문란에 관련 내용이 자세히 설명되어 있던데 공유해봅니다

   ====================================
   Rust 컴파일이 느린 것 같습니다. 왜 그런 건가요?

   코드를 기계어로 번역하고 최적화를 하기 때문입니다. Rust는 효율적인 기계어로 컴파일되는 고수준 추상화를 제공하고, 이 번역 과정은 특히 최적화를 할 경우 시간이 걸리게 마련입니다.

   그러나 Rust의 컴파일 시간은 생각보다는 나쁜 편은 아니며, 앞으로 더 개선될 거라고 믿을 이유가 있습니다. C++와 Rust로 비슷한 크기의 프로젝트를 비교해 보면 전체 프로젝트를 컴파일하는 시간은 일반적으로 비슷하다고 봅니다. Rust 컴파일이 느리다고 느끼는 주된 원인은 C++와 Rust가 컴파일 모델이 다르다는 점, 즉 C++의 컴파일 단위는 한 파일이지만 Rust는 여러 파일로 이루어진 크레이트라는 것 때문입니다. 따라서 개발 도중에 C++ 파일 하나를 고치면 Rust에 비해 컴파일 시간이 훨씬 줄어들 수 있습니다. 현재 Rust 컴파일러를 리팩토링해서 증분 컴파일을 가능하게 하려는 대형 작업이 진행 중이며, 완료되면 Rust에서도 C++ 모델과 같이 컴파일 시간이 개선될 것입니다.

   컴파일 모델과는 별개로, Rust의 언어 설계에는 컴파일 시간에 영향을 미치는 요소가 여럿 있습니다.

   먼저 Rust는 비교적 복잡한 타입 시스템을 가지고 있고, 실행 시간에 Rust를 안전하게 만들기 위한 제약 사항을 강제하는 데 무시할 수 없는 컴파일 시간을 사용해야 합니다.

   두번째로 Rust 컴파일러에는 오래된 기술 부채가 있으며, 특히 생성되는 LLVM IR의 품질이 좋지 못하기 때문에 LLVM이 시간을 들여 이를 “고쳐야” 합니다. 미래에는 MIR 기반 최적화 및 번역 단계가 Rust 컴파일러가 LLVM에 가하는 부하를 줄여 줄지도 모릅니다.

   세번째로 Rust가 코드 생성에 LLVM을 쓰는 것은 양날의 검이라는 점입니다. LLVM 덕분에 Rust는 세계구급 런타임 성능을 보여 주지만, LLVM은 컴파일 시간에 촛점을 맞추지 않은 거대한 프레임워크이며 특히 품질이 낮은 입력에 취약합니다.

   마지막으로 Rust가 일반화(제너릭) 타입을 C++와 비슷하게 단형화(monomorphise)하는 전략은 빠른 코드를 생성하지만, 다른 번역 전략에 비해 상당히 많은 코드를 생성해야 한다는 문제가 있습니다. 이 코드 팽창은 트레이트 객체를 써서 동적 디스패치와 장단을 교환할 수 있습니다.

   확실한건 러스트 프로젝트들이 빌드하면서 디스크는 엄청 먹더군요. 라이브러리 백여개 가져다 쓴 프로젝트가 어느새 2GB 정도 쓰는 것 보고 깜짝 놀랐었던 기억이...
"
"https://news.hada.io/topic?id=8144","Waze, 운전자에게 "충돌 사고 이력"이 있는 도로 경고 알림 테스팅중 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Waze, 운전자에게 ""충돌 사고 이력""이 있는 도로 경고 알림 테스팅중

     * Waze는 실시간 커뮤니티 기반 교통량/사고 정보를 제공하는 네비게이션 앱(구글이 2013년 $1.3B에 인수)
     * 이 커뮤니티 데이터를 기반으로 통계적으로 사고가 많은 도로에서 사용자에게 알림을 주는 테스트 시작
     * 위험도가 높은 도로는 빨간색으로 표시하고 팝업으로 알려줌(너무 많이 알림이 오면 걱정되므로 한개의 팝업만)
     * 지원하는 나라에서는 ""History of crashes"" 기반의 알림을 받겠냐는 팝업을 먼저 볼 수 있음
     * 이번달 초, 구글은 인수한 Waze를 근 10년만에 Google Maps 그룹에 편입시켰고, 그 이후 첫번째로 나온 신기능중 하나
"
"https://news.hada.io/topic?id=8169","Show GN: A self-hosted MiroTalk's WebRTC rooms scheduler server.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Show GN: A self-hosted MiroTalk's WebRTC rooms scheduler server.
"
"https://news.hada.io/topic?id=8149","WhisperX - 타임스탬프 정확도를 개선한 Whisper 기반의 ASR","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               WhisperX - 타임스탬프 정확도를 개선한 Whisper 기반의 ASR

     * OpenAI Whisper는 매우 정확한 트랜스크립션을 생성하지만, 타임스탬프가 단어 단위가 아닌 발화수준(Utterance) 단위여서 몇초 정도 부정확함
     * Wav2vec2.0 같은 음소기반 ASR(Phoneme-based)과 강제 정렬(Forced Alignment)을 이용하여 Whisper 모델의 타임스탬프를 개선
     * 기본 언어는 {en, fr, de, es, it, ja, zh, nl} 제공. 추가 언어는 Huggingface Model Hub에서 찾아서 테스트 필요
"
"https://news.hada.io/topic?id=8110","2023년의 AI 예상 10가지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           2023년의 AI 예상 10가지

     * GPT-4 릴리즈 : 또 다른 큰게 온다
     * LLM을 훈련할 데이터들이 부족해지기 시작
     * 처음으로 일반 대중이 완전 무인 자동차를 일상 교통 수단으로 사용하기 시작
     * Midjourney가 VC 투자를 받을 것
     * 검색은 구글이 주류가 되었던 2000년대 초반보다 훨씬 더 많이 변하게 될 것
     * 휴머노이드 로봇 개발에 더 많은 관심, 자금 및 인재를 끌어들이게 될 것. 몇가지 새로운 휴머노이드 로봇 이니셔티브 시작
     * ""MLOps""의 트렌디한 새 버전인 ""LLMOps"" 등장
     * AlphaFold를 기반으로 하거나 인용하는 연구 프로젝트 수의 급증
     * DeepMind, Google Brain, OpenAI는 Robotics(로봇 공학)의 기반 모델을 구축하기 위해 노력할 것
     * 미국이 대만에 대한 비상계획을 세우면서, 미국에 칩 제조 시설을 건설하기 위한 수십억달러 투자가 발표될 것
"
"https://news.hada.io/topic?id=8198","제품 디자인에 ChatGPT를 이용하는 법 : 8가지 실제 사례","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  제품 디자인에 ChatGPT를 이용하는 법 : 8가지 실제 사례

    1. 제품 소개 작성
    2. 제품 페이지의 카피 작성
    3. 에러/성공 메시지 작성
    4. 마케팅 카피 작성
    5. 시각 디자인 아이데이션(Ideation)
    6. 제품 페이지 코드 작성
    7. 페이지의 작은 부분에 대한 코드 작성
    8. 언어 번역하기
"
"https://news.hada.io/topic?id=8100","ChatGPT 같은 챗봇은 구글의 검색 비즈니스에 '적색 경보(Code Red)'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ChatGPT 같은 챗봇은 구글의 검색 비즈니스에 '적색 경보(Code Red)'

     * AI챗봇은 전통적인 인터넷 검색을 재발명 하거나 대체할 수도 있음
     * 지난 30년간 넷스케이브 웹브라우저, 구글 검색엔진, 애플 아이폰 같은 소수의 제품이 기술 산업을 진짜로 뒤바꿨고, 이전의 것들을 느린 공룡처럼 보이게 만들었음
     * 3주전 출시된 ChatGPT라는 실험적 채팅봇이 이 업계의 차세대 혁신을 주도
     * 인터넷 링크들의 리스트가 아닌 명확하고 간단한 문장으로 정보를 제공하며, 사람들이 쉽게 이해할 수 있는 방식으로 개념을 설명
     * ChatGPT는 여전히 개선의 여지가 많지만, 구글 경영진은 ""코드 레드""를 선언했음
     * 어떤 이들은 구글의 비즈니스를 뒤엎을 수 있는 엄청난 기술 변화의 도래에 근접했다고 우려하기도
     * ""구글은 비즈니스 모델 문제가 있습니다. 구글이 각 쿼리에 대한 완벽한 답변을 제공한다면 어떤 광고도 클릭하지 않을 것""
     * 많은 전문가들은 구글이 직접 답변하는 방식을 취하는 것 보다는, 점진적으로 개선할 것이라고 생각함 ""구글 검색은 상당히 보수적임""

   최근에 파이썬 pandas를 써서 데이터 가공을 할 일이 있었는데, chatGPT에게 물어보면서 하니까 구글링 하는 것 보다 훨씬 쉽게 원하는 정보를 얻을 수 있었습니다. 정말 chatGPT와 구글의 앞으로의 행보가 기대되네요.
"
"https://news.hada.io/topic?id=8136","프론트엔드 엔지니어 커리어 로드맵: 주니어를 위한 3가지 전문성 트랙","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 프론트엔드 엔지니어 커리어 로드맵: 주니어를 위한 3가지 전문성 트랙

   프론트엔드 개발의 역사가 짧아, 많은 조직에서 좋은 시니어 프론트엔드 엔지니어를 원하지만 찾기는 어려워 여러 중소규모 스타트업 CTO들이 비슷한 고민을 하게 된다.
     * 프론트엔드에 요구하는 기술 수준이 그다지 높지 않아 엔지니어의 역량 발전 동기가 적음
     * 프론트엔드 엔지니어 출신으로 좋은 커리어를 쌓은 롤모델이 주변에 별로 없어서 커리어 설계가 어려움
     * 조직 내 시니어 프론트엔드 엔지니어의 부재로 미들급에게 리더십이 더 많이 요구됨

   이 글은 이런 고민을 하는 프론트엔드 엔지니어와, 그들을 어떻게 이끌지 고민하는 팀 리드 및 CTO를 위해 썼다. 프론트엔드 엔지니어가 어떤 방향으로 전문성을 특화시켜 어떻게 시니어로서 커리어를 쌓아나갈지에 대한 가이드로서 도움이 되길 기대한다.

1. 탁월한 엔지니어 되기

   ‘탁월한 시니어 프론트엔드 엔지니어가 되고 싶다’는 문장은 3가지 측면에서 해석할 수 있다.
     * 탁월한 (시니어 프론트엔드) 엔지니어가 되고 싶다.
     * 탁월한 (시니어) 프론트엔드 엔지니어가 되고 싶다.
     * 탁월한 시니어 (프론트엔드) 엔지니어가 되고 싶다.

   What Makes a Great Software Engineer?라는 논문에 따르면 탁월한 엔지니어는 좋은 코드를 짜고, 작업의 현재 가치를 극대화하고, 데이터에 기반하여 의사결정하고, 동료의 효과적 의사결정을 돕고, 꾸준히 학습하는 사람이다. 이 다섯 가지 역량을 발전시키고자 노력하면 좋은 엔지니어가 될 것이다.

   덧붙여, 점차 강화되는 인공지능 때문에 커뮤니케이션과 글쓰기 능력이 훨씬 더 중요해졌다. 인공지능에게 개발 업무를 대체당하는 대신 인공지능을 비서로 삼아 효과적으로 일하려면 Prompt Engineering 관점에서 영어 글쓰기나 인터뷰 기법을 공부하는 게 좋다.

2. 탁월한 프론트엔드 엔지니어 되기

   위의 기본기에 더해 주니어 프론트엔드 엔지니어가 어떤 방향으로 전문성을 쌓으면 좋을지 세 가지 트랙을 생각해봤다. 각 트랙은 상호보완적이므로 한쪽의 전문성이 충분히 있는 사람은 다른 트랙의 전문성을 쌓기 훨씬 쉬워지며, 당연히 각 트랙에서 시니어로서 가능한 커리어도 일부 겹친다.
   (‘운영 트랙’은 데브옵스적 측면과 프로세스/조직 운영적인 측면 둘 다를 포함했으나, 이 두 가지 역량을 꼭 같이 가져가야만 좋은 커리어를 쌓는 건 아니다. ‘프로세스 특화’ 트랙을 별도로 둬야 할지 고민도 됐지만 4번째 트랙을 유의미하게 만들기에는 아직 나의 역량이 부족하여 일단 하나로 합쳤다.)

  웹 특화 트랙 (Software Engineer)

     * 주요 특징
          + 인터넷, 웹브라우저, HTML/CSS/JS에 대한 깊이 이해하고 활용함
          + 웹 생태계를 구성하는 도구별 장단점을 알고, 여러 환경에서 트러블슈팅해본 경험이 있음
          + 웹에 등장하는 새로운 기술에 민감하고, 직접 활용 시도를 함
     * 장단점
          + 어느 정도 수준까지는 혼자서도 역량을 올리기 쉬움
          + 제품의 복잡도/성숙도가 충분히 높지 않은 조직에서는 전문성을 발휘하여 인정받을 만한 기회가 적음
     * 역량 향상 방법
          + 로드맵의 키워드를 따라 책과 인터넷 컨텐츠로 공부하며 사이드 프로젝트에 써보기
          + 뉴스레터 구독, 오픈소스 참여, 신기술 테스트, 사용하는 도구의 동작 원리와 한계를 이해하고, 때론 직접 도구를 발명하기
          + 다양한 환경에서 트러블슈팅하고 성능을 끌어올려보기
     * 이후 시니어로서 가능한 커리어
          + 웹 역량을 높이는 강의 교육자
          + (웹 생태계를 구성하는 도구를 만드는 조직의) 소프트웨어 엔지니어
          + (복잡도 높은 제품을 다루는 조직의) 소프트웨어 엔지니어
          + 프론트엔드 테크 리드

  제품 특화 트랙 (Product Engineer)

     * 주요 특징
          + 적은 양의 코딩으로도 여러 도구를 조합하여 초기 제품 성과를 만들어낼 수 있음
          + 시장과 고객에 대한 이해가 높고, 이해를 더 높이기 위한 여러 방법을 실무에 적용할 줄 앎
          + 마케팅 및 영업 담당자에게 제품을 이해시키기 위한 커뮤니케이션을 자주 함
     * 장단점
          + 제품을 시장에서 검증받고자 하는 초기 스타트업에게 열렬히 환영받음
          + 안전한 공간에만 머물러있는다면 본인이 키운 제품 조직에서 밀려나버릴 수도 있음
     * 역량 향상 방법
          + 본인 도메인에서 훌륭한 제품을 분석적으로 사용하고, 고객을 관찰하며 프로덕 센스 키우기
          + 익숙한 도구의 조합에 집착하지 말고 공구상자를 지속적으로 개편하기
          + 본인이 주도한 초기 제품이 성과를 거둬 구조와 코드를 갈아엎어야 할 시기를 함께 버티며 바퀴를 교체하기
     * 이후 시니어로서 가능한 커리어
          + (PMF를 찾는 모든 조직의) 소프트웨어 엔지니어
          + 그로스 엔지니어, 그로스 컨설턴트
          + 프론트엔드 테크 리드, 테크니컬 프로그램 매니저
          + PM, PO, CPO

  운영 특화 트랙 (Full-Stack Engineer)

     * 주요 특징
          + 프로젝트 구조, 통합, 테스트, 배포에 대한 관심이 많음
          + 간단한 API는 직접 만들줄 알고 필요한 인프라도 직접 구성할 줄 앎
          + 조직 규모가 커지면서 생기는 빈틈과 비효율을 캐치하여 몸으로 때우고, 프로세스를 개선함
     * 장단점
          + 넓은 범위의 업무를 커버하면서 많은 사람들과 협업하며 인정받을 기회가 있음
          + 의식적으로 노력하지 않으면 기술 역량이 뒤쳐지고 반복 업무만 하다가 번아웃이 올 수 있음
     * 역량 향상 방법
          + 어드민 백엔드 API 구현과 프론트엔드 인프라 구성 등으로 외연을 넓히기
          + 폭발적으로 성장하는 조직에서 대규모 트래픽과 장애를 맞아가며 대응하기
          + 큰 회사의 운영 프로세스와 가이드라인을 파헤치거나 멘토링/강연을 듣고 본인 조직에 맞게 적용하기
     * 이후 시니어로서 가능한 커리어
          + (제품이 다양한 대규모 조직의) 소프트웨어 엔지니어
          + 프론트엔드 테크 리드, 테크니컬 프로그램 매니저
          + 엔지니어링 매니저, 애자일 코치, VP of Engineering
          + CTO

3. 탁월한 시니어 엔지니어 되기

   위와 같이 전문성을 쌓은 사람이 탁월한 시니어 엔지니어가 되려면 어떻게 해야 할까? 나는 어떻게 시니어 역할을 맡게 됐는지, 또 내가 만나왔던 훌륭한 시니어 엔지니어들은 어떤 사람이었는지를 토대로 탁월한 시니어 엔지니어가 되기 위한 세 가지 포인트를 짚어본다.
     * 기본에 충실하고자 노력한다: 탁월한 엔지니어의 5가지 역량은 당연히 시니어 엔지니어에게도 똑같이 적용된다.
     * 명시적 리더가 아니어도 리더처럼 행동한다: 리더십은 명시적 리더가 아닐 때도 충분히 발휘할 수 있고, 때론 동료의 모범적 행동 하나가 명시적 리더의 수많은 말보다 더 큰 영향을 끼칠 수 있다. 주어진 역할과 상관없이 제품과 팀과 조직 전체에 긍정적 영향을 미치기 위해 힘쓰면 어느새 시니어로 인정받을 것이다.
     * 어떤 상황에서든 큰 임팩트를 낸다: 디버그와 같은 작은 행위에서도 시니어는 주니어보다 훨씬 큰 영향력을 발휘한다. 주어진 일을 잘 끝마치는 걸로 만족하지 않고, 전후 맥락을 살피며 여러 사람과 의사소통하여 큰 임팩트를 만들어내는 사람이라면 제품에서든, 팀에서든, 회사에서든 어느 한 파트를 안심하고 맡길 수 있는 시니어로 성장할 것이다.

   이제 만3년되는 주니어 개발자인데 확실히
   회사 업무 난이고나 환경에 따라서 뭔가 사용해보기는 쉽지않은거 같아요.. 그런부분을 사이드 프로젝트로 쌓아나가는데 성실하기가 쉽지않네요...ㅋㅋ

   너무 좋은 글 이네요. 어쩌다 웹프론트엔드에 발을 담그고 그것이 10년이 훌쩍 넘었네요, 저의 커리어 고민도 고민이지만, 주니어에게 커리어 가이드를 하기가 참 어려웠습니다. 커리어 로드맵으로 가이드하기에 잘 활용할 수 있을것 같습니다.

   주니어와 시니어 분들 양쪽을 생각하며 썼는데 도움이 될 것 같다니 기쁘네요. 댓글 감사합니다!
"
"https://news.hada.io/topic?id=8138","공개적으로 발표된 ChatGPT 변종 및 경쟁자 리스트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     공개적으로 발표된 ChatGPT 변종 및 경쟁자 리스트

    1. Poe from Quora - ChatGPT가 C-3PO가 아니라 평범하게 말한다면?
    2. Jasper Chat - ChatGPT보다 더 나은 문장, 더 상상력이 풍부한
    3. Youchat - ChatGPT + 검색
    4. Ghostwriter Chat from Replit - AI와 대화하면서 코드 생성, 디버그
    5. Perplexity.ai - GPT3.5 + Bing. 대화형은 아니지만 검색결과를 합쳐서 훨씬 유용

   구글 검색이랑 chatGPT를 동시에 쓰는 경우가 많았는데 구글은 아니지만 Bing이랑 합쳐진 게 있으니 더 편해질 것 같네요.
"
"https://news.hada.io/topic?id=8116","트위터, 4억명의 사용자 정보 유출되어 판매중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       트위터, 4억명의 사용자 정보 유출되어 판매중

     * 취약점을 통해서 스크래핑한 정보로 셀럽/정치인/회사/일반사용자들의 이메일/전화번호 등을 포함
     * 샘플로 공개한 정보엔 오카시오 코르테즈(AOC,정치인), 순다 피차이(구글 CEO), 비탈릭 부테린 등이 포함
     * 작년이 이미 유출된 540만명 정보로 인해서 GDPR 벌금을 물어야할 수도 있는 상태
     * 판매자는 트위터나 일런 머스크한테 또다른 벌금 물기 싫으면, 이 데이터를 독점적으로 구매하라고 광고중

   판매자가 누군지 궁금하네요 ㅎㅎ
"
"https://news.hada.io/topic?id=8197","Burn - Rust로 작성된 딥러닝 프레임워크 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Burn - Rust로 작성된 딥러닝 프레임워크

     * ""Burn Unstoppable Rusty Neurons""
     * Pytorch와 유사하게 자신의 신경망 모듈을 만들 수 있는 Module
     * 훈현에 metric, loggin, checkpointing 지원
     * 백엔드 선택가능한 Tensor crate
          + CPU/GPU 지원되는 Tch 백엔드
          + 빠른 컴파일 시간의 NdArray 백엔드
          + 모든 백엔드를 차별화 가능하게 만드는 Autodiff 백엔드
     * 다양한 유틸리티를 제공하는 Dataset crate
"
"https://news.hada.io/topic?id=8090","Ask GN: 근처 사람들은 잘 안 쓰는데, 유용하게 쓰고 계신 유틸리티가 있으신가요? (2022)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Ask GN: 근처 사람들은 잘 안 쓰는데, 유용하게 쓰고 계신 유틸리티가 있으신가요? (2022)

   근처 사람들은 잘 안 쓰는데, 유용하게 쓰고 계신 유틸리티가 있으신가요?

   노트북 포맷 후 각종 프로그램을 설치하다 문득 윗 글이 떠올라서 써봅니다. 이미 원글에서 소개된 유틸리티는 목록에서 제외하였습니다.

   윈도우
     * Windows10 Tweaker (https://ntwow.tistory.com/145) - 윈도우에서 뭔가 바꿔보려면 레지스트리를 수정해야 하는 경우가 많아 클릭 몇 번으로 해결하고 싶어 쓰는 녀석입니다. 더 이상 업데이트는 안되고 있지만 여전히 잘 작동합니다.
     * Chocolatey (https://community.chocolatey.org/) - 윈도우 환경에서 프로그램 설치/업데이트를 비교적 편하게 하려면 chocolatey만한 게 없는 듯합니다.

   리눅스
     * thefuck (https://github.com/nvbn/thefuck) - 자주 안 쓰는 명령어들을 자꾸 틀리다 보니 쓰는 유틸리티입니다.

   https://hyper.is/
   https://workona.com/
   https://www.tango.us/

   thefuck 보고 한참 웃었네요,
   저도 커뮤니티에서 한번도 보이지 않았던, 저만 쓰는 것 같은 툴 꺼내봅니다!

   NETworkManger(https://github.com/BornToBeRoot/NETworkManager):
   Windows 노트북을 여러 장소에서 사용하며 Network 환경이 달라지는 경우가 많은데,
   각 환경마다 NIC 별로 고정 IP 설정부터 DNS 설정 등을 저장하고 관리하는 좋은 툴입니다. 심지어 다수 EndPoint Ping 지원, 네트워크 모니터링까지..

   KiTTy(https://github.com/cyd01/KiTTY):
   요즘은 업데이트가 뜸해졌는데.. PuTTy 를 Fork 한 프로젝트로, 뿌띠보다 좀 더 귀엽습니다. 여러 추가 기능이 있는데, 그 중에 ""폴더/그룹 기능"" 이거만 있어도 뿌띠 대신 사용할법 합니다.

   klogg (https://github.com/variar/klogg):
   로그 파일 뷰어, 가볍게 쓸만합니다.

   나와있는 유틸들 하나씩 들어가서 확인해보고 있습니다. 좋네요ㅕ

   제 최애는 Everything이라는 윈도우 유틸리티입니다. 파일 검색 프로그램인데, 정규식으로 검색하는것도 돼서 유용하게 잘 쓰고 있어요.

   올해 알게된 프로그램 중에 아래 프로그램 좋더군요

   윈도우 10, 윈도우 11 ▲보안 ▲개인정보보호 ▲위치서비스 ▲원격분석 ▲사용자데이터, 진단 설정 프로그램

   O&O ShutUp10++ – Free antispy tool for Windows 10 and 11 https://bit.ly/3Pq2Tqu

   제 설정값 https://twitter.com/lunamoth/status/1558703136499322880
     * Fig (https://fig.io) - 터미널 자동완성
       요즘 가장 좋아하는 유틸입니다
     * bat (https://github.com/sharkdp/bat) 문법 하이라이팅 되는 cat

   fig 완전 좋네요..!

   저는 Android Studio 같은 IDE 환경보다, Linux/OSX 의 쉘에서 개발을 자주하는데, Android Platform 팀에서 사용하는 Shell function 을 이용합니다.

   https://github.com/aosp-mirror/platform_build/blob/master/envsetup.sh

   조금만 변조하면, 다른 개발환경에서도 유용하게 사용가능 합니다.

   또한 Android 앱 개발을 쉘에서 자주하다보니, gradle을 실행할 일이 자주 있는데요.
   project root로 이동하기가 귀찮고, 일일이 task 이름을 길게 나열하기 귀찮아서, 아래 스크립트를 이용합니다.

   https://gist.github.com/ganadist/a8ec8976ff36da987da14a1427810a76
$ g dd
('./gradlew', ':app:pDDUA', ':app:bundleDD', '--console', 'plain')

   Excaildraw ( https://excalidraw.com/ ) - 완전 가볍고 쉬운 벡터 그래픽 웹툴

   요즘 진짜 이 친구와 사랑에 빠졌습니다. 호호. 너무 직관적이고 가볍고 쉽게 잘 만들었어요.

   obsidian 플러그인으로 통합도 되어서 아주 좋아요

   https://imgur.com/a/ui9wI0H

   정말 멋져요. 'ㅁ 'b 저도 노트 쓸 때 이미지화 시켜야 할 때마다 곤란했었는데. excaildraw 덕분에 문서 안에 임베드도 되고.. 옆에 띄워놓을 수도 있게 되서 정말 행복해요!

   이거 ㅇㅈ 간단하게 뭐 표현할 때 좋아요

   윈도우 - https://www.autohotkey.com/
   맥 - https://www.hammerspoon.org/

   갑자기 삘을 받아 몇개 더...

   draw.io Desktop ( https://github.com/jgraph/drawio-desktop )
   사실 많이 쓰실 것 같은데 혹시 몰라서...
   Visio 대체로 쓰기 좋은 툴입니다. 어떤 의미에선 기능이 더 많다고 볼 수도..?

   elevenclock ( https://github.com/martinet101/ElevenClock )
   Windows 11 시계에 초를 넣어주는 툴입니다.
   시작메뉴 시계 부분을 덮어씌우는 형태라서 그냥 시계 대비로는 성능을 많이 잡아먹긴 합니다. 그렇지만 초 시계는 못참으니깐..
   Win11 이후 버전에는 초 시계가 들어간다는 이야기가 있긴 하니 그 전까지 쓸 생각입니다.

   caddy ( https://caddyserver.com/ )
   Go 언어로 만든 웹서버입니다. nginx와 거의 기능이 1:1로 대응할..것 같구요. 이것도 많이들 쓰실텐데 혹시 모르니.
   nginx보다 http/3 대응이 더 빨랐고, 설정이 훨씬 쉽고, Let's Encrypt 인증서 설정을 날로 먹을 수 있습니다. 벤치마크를 보면 ( https://blog.tjll.net/reverse-proxy-hot-dog-eating-contest-caddy-vs-ng… ) nginx와 비교해서 나름 쓸만한 정도!

   wiki.js ( https://js.wiki/ )
   Markdown 편집을 지원하는 Wiki입니다. 개인적으로 문서 정리할 때 쓰고 있습니다.

   briss ( https://briss.sourceforge.net/ )
   이것도 pdf 문서 많이 보시는분들은 진작부터 쓰고 계셨겠지만..
   pdf의 여백 잘라주는 도구입니다. 좀 오래된 툴이긴 한데, 그래도 대체제가 없더라구요.

   FanControl ( https://github.com/Rem0o/FanControl.Releases )
   컴퓨터 팬 속도를 직접 제어할 수 있게 해주는 툴입니다.
   온도 센서 - 커브 - 팬 순서로 원하는 팬 설정을 해줍니다.
   idle 상태일땐 아주아주 조용하게 세팅하는데 도움이 됩니다.

   pngquant ( https://pngquant.org/ )
   PNG 파일을 256비트 인덱스 이미지로 바꿔줍니다. png 버전 손실압축이라 할 수 있겠네요. 투명도까지 최대한 보존해주니 용량이 꽤 많이 줄어듭니다.
   물론 webp나 avif가 요새는 더 좋을수도 있긴 한데, 이미지에 색상 수가 적은 경우엔 이것만한게 없죠.

   nginx 각종 설정 불편함 때문에 traefik을 고민하고 있었는데 caddy라는것도 있었군요 ..!

   coreutils ( https://github.com/uutils/coreutils ) - Rust판 busybox. Windows에서 리눅스용 명령어 쓰려고 씁니다. 윈도우즈만 놓고보면 busybox보다 더 잘 동작합니다.

   Stay - https://cordlessdog.com/stay/
   울트라와이드 모니터를 쓰는데, 항상 원하는 위치에 원하는 창들을 두기 위해 사용합니다.
   한번 기억시켜두면 환경이 바뀌거나 할때도 같은 자리에 놔둬주니까 뭔가 작업속도가 올라가는 기분..

   Alt-Tab https://news.hada.io/topic?id=6246
   윈도우에서 보이는 Alt-Tab의 미리보기 기능을 맥에도 제공해주는 유틸리티 입니다.

   생산성과는 상관없지만..
   요즘 가장 많이 쓰는 앱중의 하나는 bgstats 라는 보드게임 통계 관리앱입니다. https://www.bgstatsapp.com/
   내가 가진 보드게임 콜렉션을 BoardGameGeek 과 연동해서 다 볼 수 있고,
   누구랑 언제 어떤 게임을 했으며 몇점으로 누가 이겼는지 등의 전적을 모두 기록해 줍니다.
   물론 상대별로 승률 및 다양한 통계들도 제공해주고요.

   bgstats 유료 결제를 후회하지 않는 앱 중 하나입니다. BGG 서드파티로서의 기능도 훌륭하지만 앱 안정성 면에서도 참 애착이 가네요.

   Winaero tweaker (https://winaero.com/winaero-tweaker)
     * 기능이 굉장히 많은데, '바로가기' postfix 삭제, 바로가기 화살표 삭제, '내 컴퓨터' 폴더 커스터마이징, Navigation Pane 싹 지우기. 이렇게 4가지 기능만 씁니다. 아마 소개하신 'Windows 10 Tweaker'랑 비슷할 것 같네요.
"
"https://news.hada.io/topic?id=8156","크롬의 Top 1백만개 웹사이트 리스트 캐쉬본","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       크롬의 Top 1백만개 웹사이트 리스트 캐쉬본

     * 크롬UX 리포트에 포함된 가장 인기 있는 웹사이트 1백만개의 리스트
          + Alexa/Tranco 보다 훨씬 정확
     * 해당 데이터를 구글 BigQuery에서 가져다가 CSV로 추출한 Repo
     * 데이터 세트의 특징
          + 순위순이 아닌 ""Rank Magnitude"" 순으로 묶음 처리. 1000,10K,100K,1M 으로 구분되며, 같은 Magnitude 에서는 무작위 나열
          + 웹사이트는 origin으로 구분. (도메인 또는 FQDN이 아닌)
          + 매달 두번째 화요일마다 릴리즈 됨
     * 웹사이트는 전체 페이지 로딩(First Contentful Paint로 측정)으로 순위를 매김
     * 이 1백만개의 사이트가 크롬의 전체 95% 사용자 트래픽을 차지함

   보기가 좀 불편하네용 ㅠ
"
"https://news.hada.io/topic?id=8183","Ruby 3.2.0은 다른 차원에서 왔다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ruby 3.2.0은 다른 차원에서 왔다

     * 매년 12/25일에 출시하는 루비의 새 버전. 이번 버전은 특별하다
     * 브라우저에서 Ruby 실행 가능 : WASI 기반의 WebAssembly 지원
     * 41% 빠른 코드 실행 : 프로덕션 레디 YJIT
     * 더 이상 Regex 랙은 없음 : 매칭 알고리듬 개선 및 타임아웃 추가
     * 더 이상 Flow Control 미스매치 없음 : end가 어디서 빠졌는지 정확하게 보여줌
     * Anonymous Rest 및 Keyword Rest Arguments 전달 가능

   아직 개발 초보이지만,,, rails7 hotwire, ruby web assembly 지원을 보면 뭔가 변화가 일어나고 있는 듯한 느낌이 들어요

   아무래도 유저 기반은 엘릭서 보다 루비가 크다 보니까.... 피닉스 보다 핫와이어가 더 빠르게 성장하지 않을까 싶은 생각이 듭니다.
   거기에 wasm 지원까지 한다면, 나름 루비 풀스택도 가능하겠네요?

   네 ruby on rails는 풀스택 최강자가 되기 위해 달려가고 있다는 생각이 드네요(저는 이미 최강이라고 생각합니다) 함수형 기반인 elixir보다 러닝커브도 훨씬 낮고 이제 경기침체 국면으로 접어들면서 스타트업들이 열심히 발 굴릴 시간이라 빠르게 MVP를 만들 수 있는 풀스택 수요가 많아질 것을 예상하고 제 2의 전성기를 노리고 있는 것은 아닌지. 특히나 블록체인 서비스 쪽에서요. ruby on rails 제 1 전성기는 10년 전 경기침체 때였으니깐요 (shopify, twitter, airbnb 등등 에서 사용)

   https://www.youtube.com/watch?v=lAaD-6OQSHE 요 영상 재밌더라고요

   헉... 클릭했더니 제 영상이네요..

   동영상 재밌네요. 저 행사 못 간게 참 아쉽습니다.

   제가 루비 사용자가 아니라서 나왔을 때 뉴스만 담담하게 적었는데, 꽤 좋아졌나 보네요.
   Ruby 3.2.0 릴리즈
"
"https://news.hada.io/topic?id=8122","Comprehensive Rust - 구글 안드로이드 팀이 만든 4일짜리 Rust코스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Comprehensive Rust - 구글 안드로이드 팀이 만든 4일짜리 Rust코스

     * 기본 문법 부터 Generics 및 에러 핸들링까지 Rust의 모든 부분을 커버
     * 4일차에는 안드로이드 관련 부분도 포함

강의

    1. Using Cargo
    2. Course Structure

  Day 1: Morning

    3. Welcome
    4. Hello World!
    5. Why Rust?
    6. Basic Syntax
    7. Exercises

  Day 1: Afternoon

    8. Variables
    9. Memory Management
   10. Ownership
   11. Exercises

  Day 2: Morning

   12. Welcome
   13. Structs
   14. Enums
   15. Methods
   16. Pattern Matching
   17. Exercises

  Day 2: Afternoon

   18. Control Flow
   19. Standard Library
   20. Modules
   21. Exercises

  Day 3: Morning

   22. Welcome
   23. Traits
   24. Generics
   25. Exercises

  Day 3: Afternoon

   26. Error Handling
   27. Testing
   28. Unsafe Rust
   29. Exercises

  Day 4: Morning

   30. Welcome
   31. Concurrency
   32. Exercises

  Day 4: Afternoon

   33. Android
   34. Exercises

  Final Words
"
"https://news.hada.io/topic?id=8105","Apple, 애플 실리콘이 들어간 새 외장 디스플레이를 여러개 준비중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Apple, 애플 실리콘이 들어간 새 외장 디스플레이를 여러개 준비중

     * 블룸버그 Mark Gurman에 의하면 새 버전의 Pro Display XDR을 포함한 여러 외장 모니터를 개발중이라고
     * Studio Display는 이미 A13 Bionic 칩을 내장하고 있음
"
"https://news.hada.io/topic?id=8176","막다른 골목에 다다른 한국의 온라인 보안 실태","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       막다른 골목에 다다른 한국의 온라인 보안 실태

   예로부터 한국의 온라인 뱅킹이나 전자정부 서비스는 각종 설치 프로그램으로 악명높습니다. 과거에는 ActiveX였고 요즘은 보안 플러그인 설치 파일로 바뀌었습니다만, 그 본질은 바뀌지 않았지요. 그래도 근래에는 공인인증서 대체 본인인증 수단도 생기고 exe 플러그인 설치 없이 온라인 서비스를 제공하는 곳도 등장하는 등 예전에 비하면 일부 사정이 개선된 편입니다만, 아직까지도 이런 것을 설치하라고 강요하는 웹사이트가 2023년 현재까지 버젓이 남아있는 현실은 참으로 통탄할 노릇입니다.

   애드블록 플러스로 유명한 블라디미르 팔란트(Wladimir Palant)는 지난 9월부터 한국의 이러한 온라인 보안 실태에 관해 조사해오고 있었다며 자신의 블로그에 글을 올렸습니다. (영어) 1990년대 미국의 암호 알고리즘 수출 규제 때문에 한국에서 자체적으로 개발한 SEED 알고리즘으로 인터넷 뱅킹 서비스를 구현하기 위해 ActiveX를 사용하기 시작했다는 역사적 이유에서부터 시작하여, 한국에서 인터넷 뱅킹 써봤으면 누구나 다 아는 보안 플러그인 설치 실태, 그리고 이러한 “보안 소프트웨어”가 실제로는 보안에 아무런 도움이 되지 않는 가짜이지만 현 상황이 이해 관계 때문에 의도적으로 설계되었다는 점까지 정확하게 꿰뚫어보고 있습니다.

   이 분은 조사 과정에서 보안 플러그인 제품의 보안 취약점을 여럿 찾아 보고한 모양이지만, 그것만으로는 실질적인 문제가 해결될 수 없다는 점도 당연히 이해하고 있습니다. 하여튼 발견한 취약점의 구체적인 내용은 보고 후 90일 뒤에 공개하는 관례에 따라 글쓴이의 블로그에서 오는 2023년 1월 9일, 1월 23일, 3월 6일에 각각 공개할 예정이라고 하네요.

   그리고 보안 취약점을 찾는 과정에서 다음과 같은 소프트웨어 품질 문제도 발견했다고 합니다. 어째 다들 익숙하실 만한 내용입니다.
     * 이걸 개발한 개발자는 C 언어를 사용하면서도 버퍼 오버플로우와 같은 메모리 안전 문제에 미숙한 것으로 보임
     * 문제를 완화하는 다양한 메커니즘을 제공하는 최신 컴파일러 대신 15년 묵은 Visual Studio로 컴파일
     * 명색이 보안 프로그램이면서 ASLR이나 DEP처럼 오래되고 기본적인 보안 기능마저 비활성화되어 있음
     * (경우에 따라 10년 이상) 오래된 버전의 오픈소스 라이브러리 사용
     * 대부분의 경우, 암호화는 그저 리버스 엔지니어링을 방해하기 위한 난독화(obfuscation)를 위해 사용한 것으로 보임
     * 암호 알고리즘 파라미터에 한참 전에 사용 중지(deprecated)된 내용을 아직까지 쓰고 있음

   최근 이니텍 INISAFE CrossWeb EX V3을 사용한 해킹 공격이 있었다는 사실이 발표되었습니다.
     * 이니텍 INISAFE CrossWeb EX V3 보안 업데이트 권고
     * 국정원 ""北, 이니세이프 취약점 악용 해킹…보안패치 권고""(종합)

     국정원에 따르면 국정원과 경찰청, 한국인터넷진흥원(KISA), 국가보안기술연구소는 작년 말 북한이 KT[030200] 그룹 금융·보안 전문기업 이니텍의 금융보안인증 소프트웨어 '이니세이프' 취약점을 악용해 국가·공공기관 및 방산·바이오업체 등 국내외 주요기관 60여 곳의 PC 210여 대를 해킹한 사실을 확인했다.
     해킹에 악용된 소프트웨어는 전자금융 및 공공부문 인증서인 '이니세이프 크로스웹 EX V3 3.3.2.40' 이하 버전으로, 국내외 1천만 대 이상의 기관과 업체, 개인 PC에 설치되어 있는 것으로 추정된다.

     * 북한, 금융보안인증 소프트웨어 취약점 악용 해킹... 보안 업데이트 권고

     국정원은 “올해 1월 긴급 대응에 착수, 해당 악성코드의 작동 원리 등에 대한 상세 분석을 완료했다”며 “해당 분석 자료를 근거로 A사와 협조해 실제 공격-방어 시현을 진행하는 등 보안 패치 개발을 완료했다”고 했다.

     * 北 해커, KT 금융보안기업 이니텍 해킹··· 국정원·KISA가 적발

     이니텍은 지난 1월 독일 보안 전문가 블라디미르 팔란트(Wladimir Palant)가 국내 금융보안 SW 상당수에 문제가 있다고 지적하는 게시글의 이미지에 자사 제품이 있어 취약점 점검에 나섰다가 문제가 된 취약점을 발견했다는 입장이다.
     이니텍 관계자는 “취약점 발견 후 이를 보완하는 와중에 국정원에서 연락이 왔다. 2월20일 문제가 된 취약점을 완화하는 보안패치 개발을 완료해 배포 중이다. 현재 40%가량의 기업들이 패치를 완료한 상태다. 다만 아직 모든 기업이 패치를 마치진 않은 상태라 지속해서 업데이트를 하도록 권고하고 있다”고 말했다.

   당연한 이야기지만, 이 제품만 문제일 리는 없습니다. 제가 알기로 최근에 국내 공인인증서 프로그램에서 보안취약점이 발견되었다는 소식이 적어도 2건은 더 있거든요. 심지어 하나는 북녘 정보전사 동무의 손길이 이미 닿았다고 합니다.
     * 공인 인증 솔루션(VestCert) 취약점 주의 및 업데이트 권고
          + 공인 인증 솔루션 VestCert, 취약점 주의 및 업데이트 필요

     이밖에도 VestCert를 종료하고 제거할 때는 일정한 순서에 따라 진행하는 것이 필요하다. 먼저 프로세스 종료는 작업관리자의 프로세스 탭에서 Goji를 먼저 종료 후 VestCert를 종료해야 한다. 이후 [제어판]-[프로그램]-[프로그램 및 기능]에서 VestCert 버전 확인 후 ‘제거’를 클릭해 완전히 삭제한다.

     * 공인 인증 솔루션(MagicLine4NX) 취약점 주의 및 업데이트 권고
          + 공인 인증 솔루션 ‘MagicLine4NX’ 취약점... 북한 라자루스의 악용 흔적 발견

     라자루스 해커그룹은 MagicLine4NX 취약점을 통해 svchost.exe 프로세스에 인젝션한 후, 악성 프로그램을 다운로드해 실행했다. 따라서 취약한 버전의 MagicLineNX가 설치돼 있는 경우에는 즉시 삭제 조치할 필요가 있다.

   드디어 실제 취약점에 관한 내용이 공개되기 시작했습니다.

   첫 빠따(?)는 라온시큐어의 TouchEn nxKey 키보드 보안 프로그램입니다.
   취약점 자체도 그렇지만, 그 취약점을 처리하는 과정에서조차 허술한 모습을 보인 것이 참 인상깊습니다. (?)
     * https://palant.info/2023/01/…
     * https://news.hada.io/topic?id=8211

   황금알을 낳는 거위

   HackerNews comment들을 정리 해봤습니다
     * 한국의 금융 규제기관은 보수적이지만, 정치인들이나 미디어는 금융 소비자들의 편을 들려고 함. 그래서 사용자의 컴퓨터에 설치된 키로거로 인한 비밀번호 유출이더라도, 사용자의 실수를 은행의 잘못으로 돌림. 이것이 은행들이 보안 프로그램을 구매하는 이유
     * 금융 기관 자체에서 보안을 신경쓰지 않음. Outdated된 OS를 사용하는 것은 부지기수

   내용이 많이 길어져서 블로그에 정리 해봤습니다
   https://soulee.dev/2023/01/05/korean-bogus-security

   국제적으로 망신을 좀 당해서 개선이 되었으면 하네요.
   저런 방법들이 현재 업체들의 책임회피 수단으로 이용된다는 말에 놀랐다는 댓글이 많네요.

   외국 밈 중에 disappointed but not surprised 라는 게 있던데 그게 떠오르네요.

   책임 회피를 위한 가짜 보안 어플리케이션이란 말이 맞는 것 같습니다...

   원작자가 올린 Hacker News 쓰레드:
   https://news.ycombinator.com/item?id=34231364

   다른 분이 올리신 원문 글의 한국어 번역:
   https://www.woojinkim.org/wiki/spaces/me/pages/733085820

   부끄럽네요

   한국에서는 대체로 규제의 목표가 ""사용자를 보호하겠다"" 가 아니라 ""책임지지 않도록 하겠다"" 로 귀결 되는 경우가 많다고 보는데, 대표적인게 유저 컴퓨터 설치형 보안 플러그인 같습니다. 사고 터질때마다 뭔가 하나씩 추가되다보니, 설치를 하기위한 플러그인까지 설치해야 하는 지경까지 왔다는게 당황스럽더라구요. ㅎㅎ

   맞습니다. 소개한 글에서도 바로 그 점을 정확하게 꿰뚫어보고 있더군요.

   그리고 보안 플러그인을 여러 개 설치하기 위한 추가 프로그램을 별도로 설치하도록 사용자에게 추천하는 걸 보고 “앱 동물원 관리”(manage this application zoo)라고도 하더군요 ㅋㅋㅋ

   우리만 아는 건 줄 알았더니 다들 아는군요 ㅜ ㅜ

   저녁먹다가 기사 보고 내일 요약해서 올려야 겠다 생각만 했는데 잘 정리해 주셨네요. 고맙습니다!!

   “가짜(bogus) 보안 어플리케이션 시장”을 만들었다는 말이 참 와닿네요.

   2025년 6월 2일, 한국의 보안 학계에서 이 내용을 보충하는 논문 등을 공개했습니다.
     * 필수 설치 “K-보안” 앱 검토 논문 (syssec.kaist.ac.kr)
"
"https://news.hada.io/topic?id=8099","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   서점에서 무심코 주워들었던 Programming Erlang을 읽고 있습니다. 실무에서 쓰게 될지는 모르겠지만... 확실히 기존에 써왔던 언어들과 다른 점들을 보며 배울게 많네요.

   Neovim 전용 Mastodon 클라이언트를 개발중인데요, 크리스마스에 공식으로 릴리즈를 하려고 준비중입니다! 어지간한 기능은 만들었고, 문서화를 진행중입니다.

   https://github.com/kode-team/mastodon.nvim

   아이와 함께 아바타2를 보려고 해요~~ 그리고, 긴장감 좀 내리고 푹 수면하기 ㅎㅎ

   올해는 눈도 오고해서 진짜 크리스마스 같네요. 로고에 살짝 변화를 줘봤습니다.
   차가 눈을 좀 많이 맞아서.. 주말엔 세차를 하러 가볼까 합니다. 염화칼슘도 제거할겸
   읽다가 중단한 파운데이션 소설도 읽어야 할 것 같아요.

   로고 귀엽네요 ㅎㅎ
   저는 찰스 펫졸드의 code 다시 볼 생각입니다

   이번 주 조금씩 읽던 프로젝트 헤일메리를 마저 보려고요. 흥미진진하게 읽고 있습니다
"
"https://news.hada.io/topic?id=8201","ChatGPT vs 구글 검색, 누가 이길까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ChatGPT vs 구글 검색, 누가 이길까?

ChatGPT가 구글을 이길 수 있는 3가지 이유

    1. ChatGPT는 구글 수익에 부정적 영향을 준다
    2. ChatGPT는 편하다
    3. ChatGPT는 개인화 서비스에 유리하다

ChatGPT가 구글을 이길 수 없는 3가지 이유

    1. 최신 정보 업데이트가 느리다
    2. 조작 가능성이 있다
    3. 구글은 강력한 선순환 수익 구조를 갖고 있다

   저는 Google이 가만히 있지 않는다에 한 표를 걸고 싶어요!

   Google도 작년에 공개한 5400억 파라미터를 가진 초거대 언어모델 PaLM(Pathway Language Model, https://ai.googleblog.com/2022/04/…)을 보유하고 있고, 쏟아지는 검색 연산에 대응할 수 있는 모델이나 하드웨어의 성능 및 경량화가 구글의 검색에도 엄청난 변화를 가져다주지 않을까 기대하고 있어요...!
"
"https://news.hada.io/topic?id=8216","오픈 소스 문화의 7가지 단점","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            오픈 소스 문화의 7가지 단점

   오픈 소스 열정은 개발자의 창의성, 학습 및 커뮤니티에 활력을 불어넣지만 Shangri-La(샹그릴라, 이상향/낙원)는 아닙니다.
    1. 오픈 소스는 클라우드에서 작동하지 않습니다.
    2. 오픈 소스에는 다양성 문제가 있습니다.
    3. 커뮤니티 구축 및 유지에 시간 소요
    4. 오픈 소스 멘토링은 놀라울 정도로 드물다.
    5. 완고한 사람도 월급이 필요하다.
    6. 정말 공짜는 없다. (TANSTAAFL)
    7. 일부 프로젝트는 오픈 소스가 아니어야 한다.

   이 기사의 한국어 번역 링크입니다.
   https://www.itworld.co.kr/news/271539

   2번은 설마했는데 그 ""다양성""을 지칭한거네요?
   사람이 모이기 때문에 충돌은 필연적인데 그걸 마치 ""오픈소스여서""라고 말하는 듯 해서 영 납득이 안가네요.

   한국 업계에서는 이걸 이미 일찍(?) 알아냈기 때문에 오픈소스는 확실한 ""공짜"" 아니면 안쓸려고 하죠.

   이 글은 오픈소스에 득보다 실이 많은 것처럼 말하는 것 같습니다.
   성공한 오픈소스는 잘 동작하고 있는데 말입니다.
   어떤 교훈을 말하려는지 모르겠습니다.

   1번은 제목만 보면 오해하기 좋네요. 기능이 아닌 라이센스 이야기 입니다.

   링크 마지막의 l이 빠진 것 같습니다.
   https://infoworld.com/article/3679870/…

   글 올라온지 2분만에 보고 수정했는데, 그 사이에 클릭해서 보시다니.. ㅎㅎㅎ

   Peter Wayner가 Infoworld에 기고한 글입니다.
"
"https://news.hada.io/topic?id=8181","구글, 2023년에 Fuchsia OS 개발을 가속화 할 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   구글, 2023년에 Fuchsia OS 개발을 가속화 할 것

     * 2023년에 나올 새 스피커에 적용 예정이지만, 이 OS는 스마트홈 기기에만 쓰기에는 너무 많은 잠재력을 가지고 있음
     * 구글은 ""Starnix"" 를 통해서 안드로이드/리눅스 앱을 직접 Fuchsia에서 실행할 예정
     * 크롬팀은 완전한 크롬 브라우저 경험을 Fuchsia 내에서 제공할 수 있도록 준비
     * Fuchsia팀은 ""SDK Bootcamp""를 개최하고 개발자들이 전용 앱을 만들수 있게 독려중
     * Visual Studio Code용 공식 Fuchsia 플러그인도 출시
     * 한 Fuchsia 팀원은 Fuchsia가 꼭 최종사용자나 앱 개발자를 위한것만은 아니고, Android나 Nest Hub 같은 ""제품""을 더 쉽게 만들고 유지 관리할 수 있는 플랫폼이라고 설명

   Google Fuchsia OS 오픈소스 모델 변경
   구글 Fuchsia OS, Nest Hub를 통해 공식 릴리즈
"
"https://news.hada.io/topic?id=8115","내가 2022년에 배운 52가지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           내가 2022년에 배운 52가지

   2014년부터 매년 새로 배운 52가지를 정리하는 Tom Whitwell의 재미난 리스트. 일부만 발췌 번역
     * #1 번개는 약 ¼kWh의 전력을 포함. 최근의 에너지 가격 상승을 고려해도 9펜스(140원). 더 큰 번개는 £90(14만원)정도라는 얘기도 있음
     * #2 ‘zhènlóuqì’는 층간소음을 내는 윗집에게 복수하는데 사용하는 ""빌딩 쉐이커""로 중국 Taobao에서 판매중 (7만원)
     * #3 영국과 호주에서는 사람들이 건물에 들어갈 때 좌회전 하는 경향이 있음. 미국에서는 우회전함. 전시회 부스를 예약할 때 중요.
     * #4 문장에서 말줄임표(...)를 사용하는 것은 글쓴이가 X세대 또는 베이비붐 세대(즉 나이든 사람들) 라는 것을 의미하며, 디지털 네이티브 세대한테는 혼란스럽고, 수동적-공격적이거나 이상하게 들떠있는 것 처럼 보임
     * #5 CountThings는 다양한 물품들의 개수를 세는 훌륭한 앱으로 구독 비용이 $120/월. 템플릿 페이지에서 셀 수 있는 물품들 확인 가능 : 알약, 동전, 쌓여져 있는 나무/기둥/튜브들, 의학용 이미지의 물체들(세포, 애벌레, 알), 과일들, 항공사진으로 찍은 동물들, Scaffolding(건축용 자재들), 볼트와 너트, 태양열 판넬,..
     * #6 Heavenbanning 은 소셜네트워크에서 사용자를 내쫓는 가상의 방법으로 해당 사용자와 대화하는 모든 사람을 AI로 대체하고 지속적으로 동의 및 칭찬만 하게 함. 즉, 실제 사람은 누구도 그와 대화하지 못하게 하는 것(가짜 기사). 하지만 현재 AI/LLM으로 충분히 가능할 것.
     * #7 1739년 런던에는 현재보다 1인당 커피숍 비율이 3배나 높았음
     * #8 유튜버 Mr Beast는 비디오 썸네일 만드는데에만 6명을 고용하고 있음. 썸네일은 비디오 촬영전에 이미 계획됨
     * #9 Peloton 에서 재생되는 음악의 수수료는 대부분 메이저 음반사들의 탑10 수익 계정중 하나에 들어감. (보통은 DSP인 Spotify, Apple, Amazon 같은 회사들이 차지함)
     * #10 지난 8월에 세계 최대의 'hog hotel'이 중국 후베이성에 오픈함. 26층 타워에 60만 마리의 돼지가 살고 있으며, 연간 54000톤의 돼지고기를 생산함. 런던의 The Shard(72층 건물)보다 2배 면적.
     * #11 음악가는 프로그래머의 삶을 힘들게 함. Emperor라는 9개의 밴드가 있으며, Eximperituserqethhzebibši ptugakkathšulweliarzaxułum 라는 밴드도 있고, ⣎⡇ꉺლ༽༽இ•̛)ྀ◞ ༎ຶ ༽ৣৢ؞ৢ؞ؖ ꉺლ라는 사이드 프로젝트도 있음
     * #12 전 세계 인구의 37%인 29억명이 인터넷을 사용해 본 적이 없음
     * #13 나이든 여행자는 비행 안내 방송을 듣기 위해 공항의 화장실을 이용. 음향이 훨씬 선명하기 때문
     * #14 이스라엘에는 원격으로 플레이하는 인형뽑기 기계로 가득찬 창고가 있음. 당신이 성공하면 선물을 보내줌.
     * #15 강아지 버튼은 성장하는 산업임. 개들은 다양한 색상의 버튼을 눌러서 뭔가를 요청함으로서 의사 소통 하는 방법을 배울수 있음.
     * #16 레이싱 드라이버 Ross Chastain은 8살 때 Nintendo 레이싱 게임을 하면서 배운 동작을 이용해 챔피언십에 진출함.
     * #17 데이터 센터들은 2028년까지 아일랜드 전기의 29%를 소비할 것
     * #18 10대들의 흡연 문제는 해결된 것 같음. ""Teen vaping has eliminated teen smoking"" (2012년엔 미국 고등학생 13%가 흡연했지만, 2021년엔 2%. 이는 전자담배가 급증하면서 진짜담배의 흡연비율이 줄어들었고, 다시 전자담배 흡연자가 줄어들면서 발생)
     * #19 아니오, '스탠바이' 기기들을 끄는 것으로 1년에 £30를 절약할 수 없어요.(실제로 전기절약이 크지 않다는 것) 아니오, 넷플릭스 30분을 보는 것은 자동차로 4마일을 드라이브 하는 것과 같지 않아요(탄소 발자국 측면에서 넷플릭스 시청의 기후영향이 매우 과장 되었다는 것).
     * #20 인터넷에서 답변을 얻고 싶은 것이 있다면, 잘못된 답변을 먼저 올리세요. (그러면 잘못된 답변을 수정하는 답변들이 달림)
     * #22 난민들은 해당 도시의 NFL팀이 승리한 다음날 판사로부터 망명 승인을 받을 가능성이 1.5% 더 높습니다.
     * #23 망가진 맥도날드 아이스크림 기계의 이야기는 용감한 스타트업과 느린 현재 기업들의 완벽한 비유임.
     * #24 전 세계 운송의 40%는 화석 및 기타 연료(석유, 가스, 목재 펠릿) 이동에 관련되어 있음. 더 많은 재생 에너지(태양열, 풍력, 원자력, 지력)은 더 적은 수의 선박을 의미함
     * #25 남자의 파트너의 경쟁력은 그들의 미래 수익을 증대시킴. 남자들 자체의 경쟁력은 큰 차이를 만들지 못함.
     * #26 중국은 고비사막에서 450기가와트 짜리 태양열/풍력 발전소를 만들고 있음. 이건 영국의 전체 전력 생산량의 6배임
     * #27 8만5천개의 눈으로 훈련한 딥러닝 모델은 남자/여자 안구를 87% 정확도로 구분하는데, 아무도 이유를 모름.
     * #28 2007년 로리 베이커라는 영양학자는 자신이 세계 최고의 테트리스 선수라는 사실을 우연히 발견했음
     * #29 일본의 원자폭탄 생존자들은 평균적인 일본 시민보다 5년 더 오래 살았고 암에 걸릴 확률도 낮았음
     * #30 1920년대에는 신차 판매가 줄어들고 있었기 때문에, 업계에서는 사고를 난폭한 운전자가 아닌 보행자에게 돌리기 위해 '무단횡단(jaywalking)'이라는 단어를 홍보했음
     * #31 모르스 코드 키는 HAM 라디오 애호가를 위한 고급 사치품으로 금도금 및 탄소 섬유 부품으로 되어있으며 가격은 €500 이 넘음
     * #32 산업 혁명 이전에는 대기중에 유황이 적었기 때문에 은을 연마할 필요가 없었음 (화산 근처에 살지 않는한)
     * #33 8년동안 일부 Xerox 스캐너에는 (문서를 더 잘 압축하기 위해) 문서의 숫자가 자동으로 대체하는 버그가 있었음. (건축 계획서를 스캔했는데 숫자 65가 85로 스캔됨)
     * #34 1985년 Alan Sugar의 Amstrad는 스페인의 세금을 피하기 위해 작동하지 않는 8kb 메모리칩을 마더보드에 부착한 컴퓨터를 출시했음
     * #35 소비재의 브랜딩은 5천년전 메소포타미아의 고대 도시 Uruk에도 존재했음. ""Temple-factories""는 빵,맥주,와인,울 의류등을 대량생산하고 패키징 및 라벨링 했음.
     * #36 타악기 연주자 Emil Richard가 아담스 패밀리의 손가락 클릭, 미션 임파서블의 봉고, 심슨스의 실로폰 테마를 연주했음
     * #37 달걀 노른자 선호도는 지역에 따라 다름. 북유럽인은 옅은 노른자를 좋아하고, 지중해인은 진한 오렌지색을 좋아함. 남아프리카에서 흰 옥수수는 달걀 노른자를 매우 창백하게 만듦. 농부들은 DSM Yolk Fan을 이용해서 완벽한 색상을 찾음(사료를 추가함)
     * #38 중국 정부는 '이상하고' '못생긴' 글꼴에 대한 단속을 시작했음
     * #39 연구자들이 100명에게 '이성적인 사람이 실험자에게 폰의 내용을 볼수 있도록 잠금을 해제하고 줄까'라고 물었을때 대부분 아니오 라고 대답했음. 그리고 연구자들이 다른 103명에게 폰의 잠금을 해제하고 달라고 하자, 100명이 그냥 줬음.
     * #40 LA에서 가장 돈을 많은 받은 인명구조원(Lifeguard)는 2021년에 $500,000을 받았음. 호주 본다이 비치의 인명구조원은 AUD $70000($47000 USD) 이하로 받음
     * #41 자신의 리넨을 Saint-Domingue(아이티) 에 보내서 그 햇볕에서 표백하는 것이 한때 파리에서는 유행이었음. ""1782년에 식민지로부터 100대의 배가 도착한 후, 파리는 Saint-Domingue에서 표백한 리넨을 두른 남자여자로 가득했음. 이 리넨은 모두의 시선을 끌었음""
     * #42 Marc Jacobs와 중서부 대학은 영어에서 가장 흔한 단어인 ""THE""라는 단어의 상표권을 얻으려고 시도한 후 법적인 싸움을 해결했음
     * #43 한 중국 여성이 중국 위키백과에 러시아 역사에 관한 200개 이상의 가상 기사를 작성해서, 완전히 상상된 역사로 수백만 단어를 작성했음. 누군가 알아채기까지 10년이 걸렸음
     * #44 1967년 3월에, CIA는 마이크,배터리,안테나를 외과적으로 이식한 살아있는 고양이인 Acoustic Kitty를 테스트했음. 슬프게도 첫번째 공개 재판에서 이 불행한 동물은 택시에 치었음.
     * #45 우리는 모두 대화문 손잡이(conversational doorknob) 사용법을 배워야 함. (대화를 시작하기 위한 문손잡이를 여러가지로 제공해야 한다는 것)
     * #46 심시티 제작자들은 자동차 주차에 문제가 있었음. ""우리는 실세계에 너무나 많은 주차장이 있다는 것을 깨달았어요. 주차장 숫자가 비례한다면 우리 게임은 매우 지루했을 것""
     * #48 Z세대 시청자의 70%는 자막이 있는 동영상을 보는 경향이 있으며, 이게 Netflix팀이 기묘한 이야기의 자막 작업에 더 많은 노력을 기울인 이유
     * #49 일본 구시하라의 마을 사람들은 말벌은 손으로 키움. 말벌 튀김과 된장/땅콩/말벌애벌레로 만든 소스로 코팅한 구운 찹쌀이 이 지역 특산물임.
     * #50 푸시버튼은 1880년대에 대중화되었을 때 논란이 많았던 새로운 인터페이스 였음
     * #51 퐁듀는 스위스 치즈 카르텔에 의해 대중화 되었음
     * #52 프랑스 해군 훈련중에 프리깃함이 radio silence로 있었음에도 불구하고 (가상적으로) 파괴되었음. (가상의) 적이 배에 탄 선원의 (실제) 활동중인 스냅챗 계정으로 위치를 대략적으로 찾을수 있었음.

   27번에서 눈으로 성별을 87% 확률로 구분한다길래 당연히 구분할 수 있는 거 아닌가? 했는데
   원문을 찾아보니 retinal fundus(찾아보니 망막 안저라는 뜻이라고 합니다) 사진을 보고 구별하네요.
   예시 사진을 보면 ""아니 이걸 어떻게 구분해ㅋㅋㅋ""소리가 절로 나옵니다.

   https://www.nature.com/articles/s41598-021-89743-x

   ⣎⡇ꉺლ༽༽இ•̛)ྀ◞ ༎ຶ ༽ৣৢ؞ৢ؞ؖ ꉺლ은 four tet 이라고 읽는다..고 합니다.
   스포티파이에서 추천해줘서 들어봤는데 좋더라구요.

   20번은 한국에서 ""디씨식 질문법""으로 알려진 내용이네요 ㅋㅋㅋ

   동일한 내용으로 커닝험의 법칙이 많이 알려져있습니다.
   https://www.google.com/search?q=Cunningham%27s+Law

   47번이 누락된 것 같습니다.

   흑흑...

   애벌레로 만든 ""소스로 코딩한"" 구운 찹쌀
   ㅋㅋㅋ 귀여운 오타네요
   직업병

   아 전혀 위화감없이 타이핑을.. ㅋㅋㅋ

   항상 재미납니다. 매년 기대하게 되네요
     * 내가 2021년에 배운 52가지
     * 내가 2020년에 배운 52가지

   몇개는 제가 전에 뉴스로 올렸던 거네요.
     * 8번 구독자 1억명 유튜버 MrBeast는 썸네일 만드는 팀원만 6명
     * 11번 음악을 다룰 때 고려해야 할 엣지케이스들
     * 23번 맥도널드 아이스크림 기계를 더 똑똑하게 만든 회사 Kytch
     * 43번 10년간 가짜 러시아 역사를 중국어 위키피디아에 적은 중국인의 행위가 발각
     * 48번 왜 20대들은 모두 자막(Closed Captions)을 켜고 볼까?
"
"https://news.hada.io/topic?id=8143","ChatBCG - 텍스트-to-파워포인트 AI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ChatBCG - 텍스트-to-파워포인트 AI

     * ""Generative AI for Slides""
     * BCG-3 (Bi-modal Conditional Generation) 모델이 지원하는 피쳐들
          + Outline, Headings, Bullet points, Bold Keyword, Image & Graphics, 멀티 레이
     * PPTX & PDF Export
     * 현재는 트래픽이 몰려서 OpenAI API 리밋에 걸려있다고. 예제 프롬프트는 보기 가능
"
"https://news.hada.io/topic?id=8157","가장 인상적인 1인 회사들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             가장 인상적인 1인 회사들

   1인이 운영하는 회사 Top 10(수익면에서). 그들이 어떻게 회사를 키웠는지 정리한 링크도 포함

1. 스타듀밸리 : Eric Barone

     * 컨트리 라이프 롤플레잉 게임. 6년간 $300M+(3800억원) 매출
     * 2011년에 개발 시작
     * 혼자 가기로 마음먹고 3D그래픽, 애니메이션, 음악 등을 다 직접 배움
     * 웹사이트를 만들고 서브레딧을 통해서 업데이트를 알리고 피드백을 받음
     * 게임을 홍보하고, 플레이 방법을 알려주고, FAQ에 답변하기 위해 오디언스를 활용했음
     * 그가 Steam의 승인을 받는데도 커뮤니티가 도움을 줬음.
       Steam은 개인 개발자를 거절하지만, 팬들이 자기가 하고싶은 게임에 투표를 하고 필요한 숫자가 채워지면 스팀이 승인해줌
     * 모든걸 완벽히 만들려는 것을 포기하고 2016년에 $15로 출시함
     * 2달만에 1백만 카피를 팔아서 $15M 매출. 현재까지 2천만 카피를 팔아서 $300M(3800억원) 매출
     * 성공에 기여한 요인들
          + 글로벌하게 팔리기 위한 저렴한 가격
          + 초기에는 코딩에 집중하기 위해 PR,마케팅,퍼블리싱 해주는 회사에 10% 수익셰어로 아웃소싱을 줬음
          + 게임을 매일 홍보해주는 강력한 커뮤니티
     * 소니/닌텐도 등으로부터 수백만 달러 제안을 받았지만 팔지 않음
     * 계속 새로운 기능을 추가했고, 최근엔 차기작인 Haunted Chocolatier를 개발중

2. BuiltWith : Gary Brewer

     * 웹사이트가 어떤 기술로 만들어졌는지 보여줌. 매년 $14M(170억원) 매출
     * 풀타임 직원은 자기 혼자(블로그 도와주는 1/2명 파트타이머)
     * 매년 $14M(170억원) 매출
     * 월 2백만 방문자. 고객은 구글/메타/아마존/트위터 등 약 3천개의 유료 고객이 있음
     * 웹사이트가 사용하는 기술과 서비스를 보여줌
     * 세일즈, 마케팅, 고객지원팀 없음
     * 2007년에 유사한 프로젝트를 구축하기 위해 기술스택을 알려고 스타트업 사이트들을 돌아다녔음
     * 다들 비슷한 문제를 겪지만, 솔루션이 없다는 것을 알고 BuiltWith를 만듦
     * 초기엔 여러 블로그를 통해 자신의 발표를 홍보
     * Digg(그 시절 #1 공유 사이트)에서 1등을 차지
     * 인터넷 디렉토리인 About US에 모든 사이트에 BuiltWith 링크를 포함하게 설득. 이게 트래픽을 10배로 키워줌
     * 비즈니스가 커지면서, 많은 사람이 그에게 더 많은 기능을 요구했고, 비용을 부과
     * 구독 서비스를 만들어서 (월 $295~995) 사용자들이 기술/키워드 검색을 가능하게 함
     * 사람들이 BuiltWith를 사용하는 법
          + Lead Generation : 당신이 Zoom 경쟁자라면, 그걸 사용하는 사람들을 찾고 이메일 전송 가능. 당신 서비스의 장점과 왜 이걸료 교체하면 좋은지 등을 적어서
          + Customer Analytics : 당신의 제품을 사용하지만 다른 기술에 비용을 많이 쓰는 회사를 찾을수 있음. 비슷한 기능/제품을 만들고 그들에게 유료 플랜으로 업그레이드 하도록 요청
          + Business Intelligence : 헷지펀드는 BuiltWith를 이용해서 유행하는 기술을 찾고, 그걸 쓰는 웹사이트를 알아냄. 그 기술을 많이 사용한다면 그걸 사용하는 기술회사에 투자 가능
          + 웹사이트들간의 관계 : 두개의 웹사이트를 비교해서 보안 허점을 찾을수 있음
          + 키워드 기반 리스트 : BuiltWith는 673M개의 홈페이지에서 찾아낸 키워드를 인덱스 했음. 이 키워드 기반으로 검색한 회사를 기술,위치,쓰는 비용,랭킹 등으로 분류해서 볼수 있음. 이걸 마케팅에 이용 가능
     * 어떻게 0명으로 운영 가능한가 ?
          + 본인이 세일즈와 고객지원을 처리
          + 하루에 1~2시간은 고객 답변에 할애. 대부분의 답변은 BuiltWith의 Knowledge Base에 있어서 10초내에 그리로 연결 가능
          + 새로운 문제가 생기면, Gary가 글을 작성하거나 비디오를 녹화
          + BuiltWith는 완전히 자동화 되어있음

3. Viral Nova : Scott Delong

     * 인터넷의 바이럴 컨텐츠 큐레이션 사이트. 피크때 년 $5~10M(60억~127억원) 매출. 월방문자 1억명

4. Photopea : Ivan Kutskir

     * 무료 사진 편집기. 매년 $1.5M(20억원) 매출. 월 1천만명 방문

5. Digital Inspiration : Amit Agarwal

     * 구글 Docs/Sheets/Slides용 플러그인 제작. 년 $10M(127억원) 매출. 월방문자 5백만. 다운로드수 4천만회 이상
     * 인도의 첫번째 프로 블로거
     * 풀타임 직원은 자기 혼자
     * 슈퍼 니치한 시장이어서 경쟁이 없음
     * 고객은 Linkedin, Disney, US Embassy 등
     * 2004년에 회사를 그만두고 자신의 기술을 홍보하기 위해 블로그 시작
     * 기술 이야기 및 하우투 가이드 등을 작성(지금도 하고 있음)
     * 초기 청중을 늘리기 위해 블로그 홍보 및 여러 기술 이벤트에서 프로모션
     * 현재는 34%의 사용자가 미국에서 옴
     * 플러그인을 만들고 블로그를 통해서 홍보 시작
     * 아이디어는 블로그 댓글, 친구, Reddit 등에서 얻음
     * 현재는 약 20개의 플러그인을 가지고 있음
     * 가장 많이 팔리는 4가지
          + Mail Merge
               o 개인화된 이메일 보내기. 이메일 오픈과 클릭 트래킹
               o 850만 다운로드. 년 $39. 0.5% 컨버전 예상하면 ARR $1.6M
          + Google Form Notification
               o 개인화된 알림 보내기
               o 사용자가 구글 폼을 서브밋 할때마다 자동으로 이메일 발송
               o Lead를 이메일로 발송해서 CRM에 저장
               o 1천만 다운로드. 년 $49. 0.5% 컨버전 예상하면 ARR $3.1M
          + YouTube Uploader
               o 팀 멤버들이 간단한 폼을 통해서 당신의 채널에 비디오를 업로드 가능하게 만들어줌
               o 누가 채널에 비디오 업로드시 이메일 알림 받음
               o 8백만 다운로드. 0.5% 컨버전 예상하면 ARR $3.1M
          + Document Studio
               o 구글 Sheets/Forms의 데이터로 문서를 생성
               o Slack, Trello 및 100개의 앱과 연동
               o 680만 다운로드. 년 $79. 0.5% 컨버전 예상하면 ARR $2.6M
     * 수익은 예측이지만, 분명히 탑10안에 가능
     * 그의 가장 큰 위험은 아마도 이런 것들이 구글의 플랫폼 위에서 동작한다는 것

6. Rego Apps : Allen Wong

     * Tesla Remote / Police Scanner 등 3개의 앱으로 $100M(1270억원) 매출

7. 여러개의 비즈니스 : Justin Welsh

     * 다양한 비즈니스를 만들어서 $3M+(38억원) 이상의 매출. 94% 마진. 이렇게 만드는데 3년 걸림

8. Brumate : Dylan Jacob

     * 24+시간 이상 맥주/와인을 차게 보관하는 캔 판매. $20M(26억원) 매출

9. 여러개의 비즈니스 : Pieter Levels

     * 원격근무 잡마켓, AI사진, 노마드 커뮤니티 등의 사이트를 만들어서 ~$3M+(38억원) 매출

10. Carrd : ajlkn

     * 원페이지 웹사이트 빌더, 년 $1M+(12억) 매출. 4백만개의 사이트가 생성됨

   무료 포토샵 Photopea 개발자의 AMA

   재밌는 아이디어들이 무척 많네요.
   우리나라에도 1인 기업들이 많아졌으면 좋겠어요.

   저도 1인 개발을 하고 있는데 여러 생각들을 유튜브에서 나눠봤습니다.

   https://www.youtube.com/watch?v=L6TNhTNHRIA

   builtWith 이야기가 진짜 놀랍네요. 공유 감사합니다.

   항상 좋은 자료 감사합니다!
   builltWith는 오래전부터 유용하게 사용하고 있었는데 풀타임 직원이 혼자인지는 처음 알았네요.

   제가 좋아하는 ""1인 회사"" 관련 글이네요. 어떻게 키웠는지를 몇개만 정리해서 옮겨봅니다.

   스타듀 밸리 : https://twitter.com/volodarik/status/1596895430758912002
     * 2011년에 개발 시작
     * 혼자 가기로 마음먹고 3D그래픽, 애니메이션, 음악 등을 다 직접 배움
     * 웹사이트를 만들고 서브레딧을 통해서 업데이트를 알리고 피드백을 받음
     * 게임을 홍보하고, 플레이 방법을 알려주고, FAQ에 답변하기 위해 오디언스를 활용했음
     * 그가 Steam의 승인을 받는데도 커뮤니티가 도움을 줬음.
       Steam은 개인 개발자를 거절하지만, 팬들이 자기가 하고싶은 게임에 투표를 하고 필요한 숫자가 채워지면 스팀이 승인해줌
     * 모든걸 완벽히 만들려는 것을 포기하고 2016년에 $15로 출시함
     * 2달만에 1백만 카피를 팔아서 $15M 매출. 현재까지 2천만 카피를 팔아서 $300M(3800억원) 매출
     * 성공에 기여한 요인들
          + 글로벌하게 팔리기 위한 저렴한 가격
          + 초기에는 코딩에 집중하기 위해 PR,마케팅,퍼블리싱 해주는 회사에 10% 수익셰어로 아웃소싱을 줬음
          + 게임을 매일 홍보해주는 강력한 커뮤니티
     * 소니/닌텐도 등으로부터 수백만 달러 제안을 받았지만 팔지 않음
     * 계속 새로운 기능을 추가했고, 최근엔 차기작인 Haunted Chocolatier를 개발중

   BuiltWith : https://twitter.com/volodarik/status/1592146385217806336
     * 풀타임 직원은 자기 혼자(블로그 도와주는 1/2명 파트타이머)
     * 매년 $14M(170억원) 매출
     * 월 2백만 방문자. 고객은 구글/메타/아마존/트위터 등 약 3천개의 유료 고객이 있음
     * 웹사이트가 사용하는 기술과 서비스를 보여줌
     * 세일즈, 마케팅, 고객지원팀 없음
     * 2007년에 유사한 프로젝트를 구축하기 위해 기술스택을 알려고 스타트업 사이트들을 돌아다녔음
     * 다들 비슷한 문제를 겪지만, 솔루션이 없다는 것을 알고 BuiltWith를 만듦
     * 초기엔 여러 블로그를 통해 자신의 발표를 홍보
     * Digg(그 시절 #1 공유 사이트)에서 1등을 차지
     * 인터넷 디렉토리인 About US에 모든 사이트에 BuiltWith 링크를 포함하게 설득. 이게 트래픽을 10배로 키워줌
     * 비즈니스가 커지면서, 많은 사람이 그에게 더 많은 기능을 요구했고, 비용을 부과
     * 구독 서비스를 만들어서 (월 $295~995) 사용자들이 기술/키워드 검색을 가능하게 함
     * 사람들이 BuiltWith를 사용하는 법
          + Lead Generation : 당신이 Zoom 경쟁자라면, 그걸 사용하는 사람들을 찾고 이메일 전송 가능. 당신 서비스의 장점과 왜 이걸료 교체하면 좋은지 등을 적어서
          + Customer Analytics : 당신의 제품을 사용하지만 다른 기술에 비용을 많이 쓰는 회사를 찾을수 있음. 비슷한 기능/제품을 만들고 그들에게 유료 플랜으로 업그레이드 하도록 요청
          + Business Intelligence : 헷지펀드는 BuiltWith를 이용해서 유행하는 기술을 찾고, 그걸 쓰는 웹사이트를 알아냄. 그 기술을 많이 사용한다면 그걸 사용하는 기술회사에 투자 가능
          + 웹사이트들간의 관계 : 두개의 웹사이트를 비교해서 보안 허점을 찾을수 있음
          + 키워드 기반 리스트 : BuiltWith는 673M개의 홈페이지에서 찾아낸 키워드를 인덱스 했음. 이 키워드 기반으로 검색한 회사를 기술,위치,쓰는 비용,랭킹 등으로 분류해서 볼수 있음. 이걸 마케팅에 이용 가능
     * 어떻게 0명으로 운영 가능한가 ?
          + 본인이 세일즈와 고객지원을 처리
          + 하루에 1~2시간은 고객 답변에 할애. 대부분의 답변은 BuiltWith의 Knowledge Base에 있어서 10초내에 그리로 연결 가능
          + 새로운 문제가 생기면, Gary가 글을 작성하거나 비디오를 녹화
          + BuiltWith는 완전히 자동화 되어있음

   Digital Inspiration : https://twitter.com/volodarik/status/1594323722475032576
     * 인도의 첫번째 프로 블로거
     * 풀타임 직원은 자기 혼자
     * 슈퍼 니치한 시장이어서 경쟁이 없음
     * 고객은 Linkedin, Disney, US Embassy 등
     * 2004년에 회사를 그만두고 자신의 기술을 홍보하기 위해 블로그 시작
     * 기술 이야기 및 하우투 가이드 등을 작성(지금도 하고 있음)
     * 초기 청중을 늘리기 위해 블로그 홍보 및 여러 기술 이벤트에서 프로모션
     * 현재는 34%의 사용자가 미국에서 옴
     * 플러그인을 만들고 블로그를 통해서 홍보 시작
     * 아이디어는 블로그 댓글, 친구, Reddit 등에서 얻음
     * 현재는 약 20개의 플러그인을 가지고 있음
     * 가장 많이 팔리는 4가지
          + Mail Merge
               o 개인화된 이메일 보내기. 이메일 오픈과 클릭 트래킹
               o 850만 다운로드. 년 $39. 0.5% 컨버전 예상하면 ARR $1.6M
          + Google Form Notification
               o 개인화된 알림 보내기
               o 사용자가 구글 폼을 서브밋 할때마다 자동으로 이메일 발송
               o Lead를 이메일로 발송해서 CRM에 저장
               o 1천만 다운로드. 년 $49. 0.5% 컨버전 예상하면 ARR $3.1M
          + YouTube Uploader
               o 팀 멤버들이 간단한 폼을 통해서 당신의 채널에 비디오를 업로드 가능하게 만들어줌
               o 누가 채널에 비디오 업로드시 이메일 알림 받음
               o 8백만 다운로드. 0.5% 컨버전 예상하면 ARR $3.1M
          + Document Studio
               o 구글 Sheets/Forms의 데이터로 문서를 생성
               o Slack, Trello 및 100개의 앱과 연동
               o 680만 다운로드. 년 $79. 0.5% 컨버전 예상하면 ARR $2.6M
     * 수익은 예측이지만, 분명히 탑10안에 가능
     * 그의 가장 큰 위험은 아마도 이런 것들이 구글의 플랫폼 위에서 동작한다는 것
"
"https://news.hada.io/topic?id=8094","이름만 openAI? 아니면, 진정한 'open' AI? 딥러닝 공개 연구 황금기 마감의 도래. ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         이름만 openAI? 아니면, 진정한 'open' AI? 딥러닝 공개 연구 황금기 마감의 도래.

   LLM 기반 검색 서비스 출시를 앞둔, 광고없는 검색 서비스 스타트업 Neeva(neeva.com)의 공동 창업자 스리다르 라마스와미와 비벡 라구나탄, 그리고 ML Head 라잔스 삼다니가 예측하는 OpenAI, MS, Google등의 AI 회사들의 무시할수 없는 AI 연구 동향 트위터 타래입니다.

   OpenAI의 ChatGPT출시는 딥러닝 공개 연구 황금기의 마감이 왔다는 신호입니다. 그동안 이러한 연구를 주도하던 오픈AI, 마이크로소프트, 구글 등의 큰 플레이어들이, 이전처럼 상세한 연구를 논문을 통해 공개하는 것이 줄어 들고, 블로그에 개요만 소개하고 있고, 이러한 동향은 계속 될것이라고 예측합니다.

   공개 연구는 계속 되어야 하기에, 학계와 오픈 소스 커뮤니티, 이에 참여하는 새로운 회사들이 나서서 연구를 이끌고 협업할 수 있는 좋은 기회라고 제시합니다.

   이에 Neeva.com 도 함께 적극 참여할 예정이며, search API를 제공할 의향이 있다고 합니다.

   니바는 최근 LLM 기반 모바일앱이 베타 테스팅 중이며 (https://twitter.com/RamaswmySridhar/status/1602334539216396288), 복수 문서에 기반한 요약 AI answer를 개발 중입니다(https://twitter.com/RamaswmySridhar/status/1600209221458399233).
"
"https://news.hada.io/topic?id=8164","2023년 개발자를 위한 DevOps 트렌드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        2023년 개발자를 위한 DevOps 트렌드

    1. 쿠버네티스 채택 및 설치 증가
    2. 보안 자동화가 모멘텀을 얻을 것
    3. 카오스 엔지니어링 실험의 증가
    4. 도커는 개발자 경험을 지속적 향상시킬 것
    5. GitOps가 더 많은 신뢰를 얻음
    6. 내부 개발자 플랫폼이 더 중요해짐
    7. 멀티 클라우드 배포의 증가

   이미 adoption 단계이거나 그 단계에 가까운 것들로 보이네요.
   사실 2023년 트렌드라고 하면 새롭고 반짝거리는 것을 기대하게 마련인데, 현실 버전의 트렌드랄까... :)

   오타발견 :)
   GipOps -> GitOps
"
"https://news.hada.io/topic?id=8217","VALL-E - Microsoft가 만든 음성합성을 위한 언어 모델","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 VALL-E - Microsoft가 만든 음성합성을 위한 언어 모델

     * 트랜스포머 기반의 Text-to-Speech 모델
     * 어떤 음성이든 3초만 있으면 그 음성으로 합성 가능
     * 최신 Zero-shot TTS들보다 훨씬 자연스럽고 화자와 유사하며, 화자의 감정 및 음향 환경도 보존
     * 예전 파이프라인은 phoneme(음소) → mel-spectrogram → waveform 였는데,
       VALL-E는 phoneme → discrete code → waveform
     * 다양한 음성 합성 어플리케이션 및 GPT-3 같은 AI 모델과 결합 가능

   머신러닝의 발전으로 TTS 기술의 진입 장벽도 낮아진 것 같네요. 오픈 소스 저장소들을 찾아보면 스스로 음성을 녹음해서 내 목소리용 자작 TTS를 만들수도 있더라구요.

   이제 음성파형은 더이상 지문처럼 개인을 특정할 수 없게 되었군요. -_-;

   어디서는 도청을 할때 대규모 서버에서 특정 사람의 음문을 활용해서 그 음문의 특정 키워드에 반응하도록 한다는걸 들은것 같기도 한데...

   이정도로 합성해낼 수 있으면 그런 시스템은 이제 물건너 갔네요...
     * 거대 AI 모델의 발전과 zero-shot의 의미
     * Mel spectrogram 설명
"
"https://news.hada.io/topic?id=8104","Unified Push - 탈중앙화, 오픈소스 푸시 알림 프로토콜 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Unified Push - 탈중앙화, 오픈소스 푸시 알림 프로토콜

     * 구글 FCM(Firebase Clound Messaging) 대체제
     * 각 안드로이드 앱들이 직접 서버와 연결을 유지하지 않고, Distributor로 동작하는 UnifiedPush앱이 하나의 연결을 유지하여 다른 앱들에게 전송해주는 방식
     * ntfy 앱이 distributor로 동작하며, Element/Tusky/SmallTalk 같은 앱이 UnifiedPush를 지원

   갤럭시 내장앱들의 푸시 알림도 비슷하게 동작합니다.
   갤럭시 폰 플레이스토어에서 ""삼성 푸시 서비스"" 라고 검색해보세요 ㅎㅎ

   Unified Push 공식 홈페이지 - https://unifiedpush.org/
   Ntfy - 모바일/데스크탑으로 푸시 보내기
"
"https://news.hada.io/topic?id=8160","Web ChatGPT - 최신 웹 검색 결과를 chatgpt에 반영할 수 있는 크롬앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Web ChatGPT - 최신 웹 검색 결과를 chatgpt에 반영할 수 있는 크롬앱

     * 원래 chatgpt는 2021년 4분기까지 데이터만 학습하여 최신 자료 반영이 안됨.
     * 여기에 최신 웹 검색 결과를 컨텍스트로 제공하여 대답에 조합하여 반영함.
     * 예를 들면 비교적 최근에 일어난 일론 머스크의 트위터 인수 (elon musk twitter buy)를 입력하면 chatgpt에 대답이 없다면 검색 결과를 조합 및 요약하여 대답을 할 수 있음.

   네 너무 재밌는거 같습니다~

   발상이 기가맥히네요
"
"https://news.hada.io/topic?id=8101","Ask GN: 이번 연말에는 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Ask GN: 이번 연말에는 뭐 하시나요?

   2022년도 이제 곧 끝나갑니다.

   이 연말을 어떻게 보내야지 의미가 있을까요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋아요.

   전 올해 바빠서 못 갔던 프로그래밍 컨퍼런스 영상들 플레이리스트를 쭉 돌려볼 생각입니다.

   올해는 새로 사무실을 오픈하면서, 계획했던 일들이 많았는데 많이 하지는 못했네요 ㅠ
   그래서 내년을 계획하는 느낌으로, 위키에 적어둔 차기 프로젝트들중 몇개를 추려서 진행 계획을 짜볼까 합니다.
   뭐든지 계획을 짤 때 가장 재미난 것 같아요 ㅎ
"
"https://news.hada.io/topic?id=8134","Ask GN: 유닉스/리눅스(운영체제) 기본서 추천 해주실만한게 있을까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 유닉스/리눅스(운영체제) 기본서 추천 해주실만한게 있을까요?

   유닉스 기반 환경에서 개발하지만 정작 유닉스에 대한 이해는 전무한 것 같습니다.
   선배님들이 꼽으시는 유닉스/리눅스 기본서가 있을까요?

   브라이언 커니핸 <유닉스의 탄생>을 추천합니다. 유닉스가 어떤 과정으로, 어떤 우연과 인물의 아이디어로 발전했는지 알 수 있습니다. 번역도 좋습니다.

   답변 감사드립니다 :)

   유닉스요? 아직도 유닉스를 쓰는 곳이 있군요... 혹시 Darwin이나 BSD계열인가요?

   넵, macOS 였습니다! 제가 표현을 했나봅니다 😢
"
"https://news.hada.io/topic?id=8146","장표에서 제목의 중요성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              장표에서 제목의 중요성

   장표를 만들 때 예쁜 디자인도 중요하지만 가장 중요한 건 대상 청자에게 얼마나 와닿느냐 아니냐 라는 점입니다.

   그런 점에서 슬라이드 제목을 어떻게 짓느냐는 굉장히 중요한 요소입니다.

   이 영상에서는 Succincnt, Specific, Insightful 3가지를 기준으로 작성할 것을 조언합니다. 그리고 연습문제를 통해 실제로 어떤 메시지를 지어야 하는지 생각해볼 수 있습니다.

   장표만들기로 스트레스 받으시는 분이라면 보시면 좋을 영상입니다.

   영상 링크 : https://youtu.be/3pLhyrra16w
"
"https://news.hada.io/topic?id=8207","퀄컴, 애플보다 뛰어난 위성 메시징 시스템 구축","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       퀄컴, 애플보다 뛰어난 위성 메시징 시스템 구축

     * 안드로이드 사용자용 ""Snapdragon Satellite""
     * 애플의 시스템과 다르게 양방향 SMS 형태의 텍스트 메시징 가능
     * 25년된 이리듐 위성을 이용 (GPS와 같은 1-2GHz L밴드 사용. 66개 위성)
     * 일반 크기 핸드폰의 내장 안테나로 이용가능(새 하드웨어가 필요없는 것은 아니지만, 퀄컴이 기존 RF에 추가예정)
     * 기존 이리듐의 음성 전화 기능은 없이 데이터 전용으로 사용(2G와 비슷한 TDMA)
     * 완전한 문자 전송에 10초 이내(평균적으로 3초) 소요
          + 애플은 위급 메시지 전송에만 15초 소요
          + 애플은 Globalstar 를 이용하며, 24개의 위성만 가지고 있음
     * 올 하반기에 북미/유럽에서 출시되는 휴대폰에서 제공 가능할 것
"
"https://news.hada.io/topic?id=8153","당신이 (아마도) 몰랐던 20가지 Git 명령 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     당신이 (아마도) 몰랐던 20가지 Git 명령 [번역]

     * Git Web - 내장된 GUI 열기
     * Git Notes - commit에 추가 정보 첨부
     * Git Bisect - 전문가처럼 디버깅
     * Git Grep - 무엇이든 검색
     * Git Archive - 공유를 위해 프로젝트 압축
     * Git Submodules - 다른 저장소를 내 저장소로 가져오기
     * Git Bugreport - 시스템 정보로 버그 보고서 컴파일
     * Git Fsck - 연결할 수 없는 객체 확인 및 복구
     * Git Stripspace - 후행 공백 제거
     * Git Diff - 두 파일 간의 변경 사항 비교
     * Git Hooks - git 명령이 실행될 때 스크립트 실행
     * Git Blame - 작성자 표시
     * Git Large File Storage - git에 대용량 파일 저장
     * Git Garbage Collection - git 저장소 최적화
     * Git Show - 모든 git 객체를 쉽게 검사
     * Git Describe - 마지막 태그를 기반으로 읽을 수 있는 이름 지정
     * Git Tag - 특정 지점에서 버전 태그 생성
     * Git Reflog - 저장소에서 수행된 모든 git 작업 나열
     * Git Log - commit 로그 및 브랜치 다이어그램 보기
     * Git Cherry Pick - 브랜치로 기능 가져오기
     * Git Switch - 브랜치 사이를 빠르게 점프
     * Git Standup - git commit을 기반으로 마지막 근무일에 수행한 작업을 기억
     * Bonus - 더 많은 명령으로 git 확장!
"
"https://news.hada.io/topic?id=8118","Ruby 3.2.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Ruby 3.2.0 릴리즈

     * WASI 기반의 WebAssembly 지원
     * 프로덕션-레디 YJIT
     * ReDoS 에 대항해서 Regexp 향상
     * SyntaxSuggest 통합
     * TypeError/ArgumentError 시에 어떤 부분인지 Highlight
"
"https://news.hada.io/topic?id=8106","2022 한국 YouTube 트렌드 결산: 3가지 키워드를 통해 돌아보는 올해의 YouTube 트렌드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        2022 한국 YouTube 트렌드 결산: 3가지 키워드를 통해 돌아보는 올해의 YouTube 트렌드

    1. 공감을 자아내는 하이퍼리얼리즘 : 숏박스, 너덜트, 소울리스좌
    2. 셀럽의 재발견 : 성시경, 강민경, 차린건 쥐뿔도 없지만
    3. 하이브리드 크리에이터 : 침착맨, 1분요리 뚝딱이형, 레시피 읽어어주는 여자, 사내뷰공업, 스낵타운, 한살차이, 꾸삐KUPI
"
"https://news.hada.io/topic?id=8186","애플, 저가형 무선 이어폰과 경쟁하기 위해 "AirPods Lite" 개발중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               애플, 저가형 무선 이어폰과 경쟁하기 위해 ""AirPods Lite"" 개발중

   분석가 Jeff Pu에 의하면 ""저가형 AirPods 제품""이 현재 개발중이라고

   AirPods SE...!

   아무리 저가형이라도 QCY T13 ANC 같은 가격대는 불가능할텐데..
   (요놈은 2만원도 안되는 가격에 액티브 노이즈 캔슬링되는 무선 이어폰 입니다.)
"
"https://news.hada.io/topic?id=8158","Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2023년 1월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2023년 1월)

   일할 곳을 찾고 계시다면, 간단히 정보를 남겨 주세요.

     지역 :
     리모트 필요 :
     기술 :
     이력서 :
     이메일 :

   위 정보는 구인을 위해서만 이용해 주세요

   ~~

   혹시나 봇들이 이메일 주소를 크롤링하는 경우가 있을 수 있으니 '[at]' 이나 '[앳]' 등을 써서 이메일 주소를 난독화 해주셔도 좋습니다.
   가능하면 자신의 깃헙/링크드인 URL을 남겨 주세요.
   HN의 Who wants to be hired 를 참고 했습니다.
"
"https://news.hada.io/topic?id=8135","아마존, 캘리포니아와 텍사스에서 드론 배송 시험 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     아마존, 캘리포니아와 텍사스에서 드론 배송 시험 시작

   몇몇 지역에서 드론 배송을 시험 시작, 향후 몇년간 거대한 도약이 될 첫 걸음
"
"https://news.hada.io/topic?id=8172","JavaScript 뉴스레터 Bytes의 2023년 예상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    JavaScript 뉴스레터 Bytes의 2023년 예상

    1. VC가 펀딩한 오픈소스의 끝(RIP)
    2. Remix는 웹 컴포넌트에 올인할 것
    3. Type Nerd들의 백엔드 선택지로 tRPC가 GraphQL을 대체할 것
    4. Resumability 의 득세. Qwik이 React외의 시장을 먹기 시작할 것
    5. React에 대한 증오는 최대를 찍고.. React 사용량 역시 최대가 될 것
    6. UI프레임워크에 대한 경쟁은 툴체인 경쟁으로 바뀔 것
    7. Gatsby가 Astro를 인수
    8. Crypto 개발자는 AI개발자가 될 것

   제가 아는 파악한 개발자 세계로는 ""Crypto 개발자 <-> 전통 개발자 <-> AI개발자"" 라서 8번은 잘 이해가 안되긴 하네요. Crypto 쪽에 있는 분들은 AI 쪽 소식을 전혀 모르고, AI 쪽 분들은 그 반대라서.

   8번 내용 보니깐 Crypto 개발자들을 비꼰 것 같은 내용인것 같습니다!

   링크를 글 permalink 로 바꾸는 것이 좋을 것 같습니다.

   tRPC 괜찮아 보이던데 GraphQL을 넘을 수 있을지는 선점 효과가

   갠적으로 graphql 보다 개발 경험이 더 쾌적했

   유머가 섞인 것들이니 감안하고 보세요~
"
"https://news.hada.io/topic?id=8129","Meta와 Alphabet, 미국 디지털 광고 시장 지배력 잃어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Meta와 Alphabet, 미국 디지털 광고 시장 지배력 잃어

     * 그들의 복점(Duopoly)이 깨지면서, Amazon/TikTok/Microsoft/Apple에게 공격 받음
     * 둘의 매출이 2.5% 감소, 디지털 광고시장의 총 48.4%를 차지하며 2014년 이후 처음으로 과반을 넘지 못하게 됨
     * 2017년 54.7%의 정점에서 5년간 연속 감소중이며, 2024년엔 43.9%까지 떨어질 것으로 예상
     * 아마존은 수년간 시장에 태핑하다가 광고수익이 2015년 $1b에서 올해 $38b 까지 오를것으로 예상
     * 애플은 새로운 위협으로 2018년 $2.2b 였다가 올해는 $7b를 예상. 시장의 1.2%밖에 안되지만, 이미 Snapchat+Pinterest보다 큼.
       혹자는 2026년에 애플이 $30b까지 성장할것이라고 예측함
"
"https://news.hada.io/topic?id=8092","SkyPilot - 아무 클라우드에서나 머신러닝 작업을 실행하는 프레임워크 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               SkyPilot - 아무 클라우드에서나 머신러닝 작업을 실행하는 프레임워크

     * 쉽고, 비용 효율적으로 ML Workload를 실행
          + 스팟 VM을 사용해서 3x 비용 절감. Preemption 에서 자동 리커버리 기능 포함
          + Idle 클러스터 자동 스탑
          + 벤치마크를 통해서 해당 Job에 맞는 최적 VM을 찾음
          + 존/리전/클라우드를 넘어서 최저 가격을 찾아서 자동 선택하도록 최적화
     * AWS, Azure, GCP 어디서든 잡 & 클러스터를 실행
     * 코드 변경없이 GPU, TPU, CPU 워크로드 지원
"
"https://news.hada.io/topic?id=8185","진짜로 웃었을때만 "LOL"을 칠 수 있는 기계를 만들었어요 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   진짜로 웃었을때만 ""LOL""을 칠 수 있는 기계를 만들었어요

   머신러닝으로 웃음소리가 들려야만 진짜 웃었는지 인증해주는 기기

   어떤걸 사용해서 만들었는 지는 후속 트윗에 있네요

   Seeed Studio - xiao sense microcontroller - http://www.seeedstudio.com/
   Teensy 4.1 개발 보드 - https://www.pjrc.com/store/teensy41.html
   LED - https://www.adafruit.com/
   Screwdriver - https://www.lttstore.com/
   3D 설계 Tinkercad - https://www.tinkercad.com/
   Firmware EdgeImpulse - https://edgeimpulse.com/
"
"https://news.hada.io/topic?id=8187","CES 2023 테크 트렌드 미리보기테크 트렌드 미리보기
"
"https://news.hada.io/topic?id=8165","Petals - 100B+ 언어모델을 집에서 빗토렌트 스타일로 운영하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Petals - 100B+ 언어모델을 집에서 빗토렌트 스타일로 운영하기

     * BLOOM-176B 같은 초거대 언어모델을 ""공동으로"" 실행
          + 자신의 GPU를 Petals에 연결
          + 각자가 모델의 일부를 로딩하고, 다른 사람들과 함께 추론 및 미세조정을 실행
     * 추론은 스텝(토큰)당 1초 정도로 오프로딩 보다 10배 빨라서 챗봇 및 기타 대화형 앱에 충분
          + 병렬 추론은 초당 수백개의 토큰 가능
     * GPU시간을 제공하는 사람에게 명시적 인센티브(블룸포인트)를 도입하는 작업중

   good!!

   엥 이 글이 아닌데...

   훨씬 작은 BLOOM-7B 버전도 로컬에서 직접 돌리면 Ryzen(16코어) + 32램에서 90초 정도 걸린다고 하네요.
   주장한대로 잘 실행되면 꽤 좋긴 하겠는데.. 뭔가 그 블록체인 느낌이..
   (개발자 얘기로는 블록체인은 쓰지 않는다고는 하네요)
"
"https://news.hada.io/topic?id=8132","게임에서의 Generative AI 혁명","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         게임에서의 Generative AI 혁명

     ""생성 AI는 게임을 근본적으로 변화 시킬 것""

1부 - 관찰 및 예측

  가정

     * AI 연구의 양이 계속 증가해서 더욱 효과적인 기술을 창출
     * 모든 엔터테인먼트 중에서 게임은 생성AI의 영향을 가장 많이 받을 것
          + 레드 데드 리뎀션2는 30제곱마일 크기의 세계를 구축하는데 8년간 5억달러가 들었음
          + Microsoft Flight Simulator 는 1억 9700만 평방 마일에 달하는 지구 전체를 어떻게 만들었을까? AI에게 맡겼음
     * 게임 제작과 관련된 모든 애셋에 대한 생성 AI모델이 있음 : 2D 이미지, 3D 모델, 캐릭터 애니메이션, 대화 및 음악..
     * 콘텐츠 가격이 급격하게 떨어지며, 경우에 따라 사실상 0이 될 수도 있음
     * 우리는 아직 이 혁명의 초기 단계에 있으며 많은 프랙티스들이 미세 조정되어야 함

  예측

     * 생성 AI를 효과적으로 사용하는 방법을 배우는 것이 시장성 있는 기술이 될 것
     * 장벽을 더 낮추면 더 많은 위험을 감수하고 창의적으로 탐색 가능
     * AI 도구와 서비스에 의해 지원을 받는 (1-2명 규모의) ""마이크로 게임 스튜디오""가 증가하고, 그들이 만드는 게임의 크기와 규모가 커질 것
     * (생성 AI 덕분에) 매년 출시되는 게임이 증가함
     * 생성AI 이전에는 불가능했던 새로운 게임 유형이 만들어짐
          + Spellbrush의 Arrowmancer는 무제한의 새로운 게임 플레이를 위해서 AI가 생성한 캐릭터를 사용하는 RPG게임
          + AI를 이용해서 기존의 믹스 앤 매치방식의 아바타가 아닌 완전히 새로운 아바타를 사용자가 생성 가능
     * 기본 모델 뿐 아니라, 산업별 AI도구에도 가치가 발생할 것 : Dall-E, Stable Diffusion, Dall-E 뿐만 아니라, RunWay 같은 도구
     * 법적 문제가 다가 오고 있음
     * 적어도 아직은 프로그래밍이 예술 콘텐츠 만큼 디스럽트 되지는 않을 것

  추천

     * 지금 바로 생성AI에 대해 알아볼 것
     * 시장 지도를 보고 기회를 찾기

2부 - 시장 지도

  시장의 현재 상태

     * Generative AI for Games Market Map(원본의 이미지 참고)

  2D Image

     * 컨셉 아트 : Midjourney + Stable Diffusion
     * 2D 프로덕션 아트 : Stable Diffusion

  3D Artwork

     * 3D Asset : Kaekim, Mirage, Hypothetic 같은 스타트업. Nvidia의 Get3D 및 Autodesk의 ClipForge
     * 3D 텍스처 : BariumAI , Ponzu, ArmorLab
     * 애니메이션 : Kinetix, DeepMotion, RADiCAL, Move Ai, Plask
     * 레벨 디자인 및 세계 구축 : Promethean , MLXAR, Meta Builder Bot

  오디오

     * 음향 효과 : AI에게 매력적인 오픈 영역. 아직 제품은 없지만 시간문제
     * 음악 : Soundful, Musico, Harmonai, Infinite Album, Aiva 같은 AI생성 음악 회사들
     * 스피치 및 대화 : 게임내 캐릭터의 사실적인 목소리. Sonantic, Coqui, Replica Studios, Resemble.ai, Readspeaker.ai

  NPC 및 플레이어 캐릭터

     * Replika & Anima 는 챗봇을 구축
     * Charisma.ai, Convai.com, Inworld.ai 같은 챗봇 플랫폼

  올인원 플랫폼

     * 가장 성공적인 생성 AI 도구는 Runwayml.com
     * 아직 비디오 게임을 위한 올인원 플랫폼은 없지만, 충분히 나올수 있을 것

결론

     * 지금은 게임 크리에이터가 되기에 가장 좋은 시점임
     * 게임을 만드는 데 필요한 콘텐츠를 생성하는 것이 그 어느때 보다 쉬워짐
     * 언젠가는 플레이어가 원하는 것을 기반으로 플레이어만을 위해 만들어진 전체 개인화 게임을 상상해 보는 것도 가능
     * 이것은 Ender's Game 의 ""AI Mind Game"" 이나, 스타트렉의 ""Holodeck"" 같은 것 처럼 SF에 많이 등장했었음. 이게 머지않아 현실로 다가올 것

   빨리 더 발전했으면!!!

   결론 마지막 예시 상상하니 설레네요...
"
"https://news.hada.io/topic?id=8096","가트너의 2023년 이후 전략적 예측 10가지 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       가트너의 2023년 이후 전략적 예측 10가지

     * Metaverse : ""Virtual Workspace""가 기업들의 메타버스에 대한 투자 30%를 차지하고, 사무실 경험을 ""재구상""할 것
     * Talent : ""노동 변동성""으로 인해 기업들의 40%가 손실을 보고, 인재 전략이 acquisition 에서 resilience로 바뀌게 될 것
     * Pay Gap : 성별 임금 격차를 공식적으로 해결하는 조직은 여성의 이직을 30% 줄여서, 인재 부족에 대한 압박을 줄일 수 있을 것
     * Employee : 웰빙, 번아웃, 브랜드 만족도와 같은 직원 가치 지표가 성공적인 성장 투자 결정에서 ROI 평가대신 30%를 차지하게 될 것
     * Sustainability : 지속가능한 AI 프랙티스가 없다면, AI는 인간 노동력보다 더 많은 에너지를 소비해서, 탄소 제로에서 얻는 이익을 크게 상쇄시킬 것
     * Customer : 소셜 미디어 플랫폼 모델은 ""고객이 상품"" 에서 ""플랫폼이 고객""으로 변해갈 것
     * Protest : 가상 비서를 통해서 운영을 중단하게 만드는 시민 주도 서비스 거부(cDOS)공격은 가장 빠르게 성장하는 시위 형태가 될 것
     * Investment : 문샷(수익 가능성이 높은 고위험 또는 투기적 기술투자)투자가 2배 늘어 성장을 가속화하는 전통적 R&D투자의 대안이 될 것
     * Ecosystems : 클라우드 에코시스템이 벤더들을 30%까지 통합해서, 고객의 선택 폭과 소프트웨어에 대한 통제력이 줄어들것
     * Sovereignty : 규제기관의 승인을 받은 공동 소유 주권 파트너십(jointly owned sovereignty partnerships)이 글로벌 클라우드에 대한 이해관계자의 신뢰를 높이고, 지속적인 IT 세계화를 촉진할 것
"
"https://news.hada.io/topic?id=8189","오픈AI CEO ‘샘 올트먼’ 인터뷰: 내가 DALL-E 2에서 배운 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                오픈AI CEO ‘샘 올트먼’ 인터뷰: 내가 DALL-E 2에서 배운 것

   Q1. 왜 DALL-E 2가 큰 영향을 미쳤다고 생각하나?
   Q2. DALL-E 2의 성공에서 얻은 교훈은 무엇인가?
   Q3. DALL-E가 사회에 의미하는 바는 무엇인가?
"
"https://news.hada.io/topic?id=8194","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   매주 같은 얘기인것 같지만 ㅎㅎ
   보드게임 모임을 합니다. 9시간 연속으로 게임을 진행했네요.
   주말엔 항상 밀린 글들을 좀 보려고 합니다. 주로 시간이 많이 필요해서 미뤄둔 긴 글들이네요.
"
"https://news.hada.io/topic?id=8200","Vanilla OS - Immutable 한 Ubuntu 기반 리눅스 배포본","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Vanilla OS - Immutable 한 Ubuntu 기반 리눅스 배포본

     * Immutable OS : 시스템의 핵심 파트가 잠겨 있어서 잘못된 업데이트로 인한 변경 및 손상을 방지하는 변경 불가능 OS
     * Ubuntu 기반의 Point Release 배포본으로 보안 및 기능 희생없이 적시에 업데이트 가능
     * Work(GNOME) + Gaming 양쪽으로 사용 가능
     * 패키지 포맷 선택 가능 (Flatpak, Snap, AppImage,.. )
     * Immutable 이지만, 핵심 컴포넌트가 업데이트 필요할 때는 제어가능한 아토믹 트랜잭션을 통해서 가능
          + 업데이트 성공시에만 리붓했을 때 적용됨
     * 코어시스템에 컴포넌트를 설치할때는 Transactional Shell을 오픈해서 수정 가능

   비슷하게 페도라에는 실버블루라는 프로젝트가 있습니다.
   https://silverblue.fedoraproject.org/
"
"https://news.hada.io/topic?id=8196","니바 검색엔진, NeevaAI 출시 — 10개 링크대신 1개의 답 보여준다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               니바 검색엔진, NeevaAI 출시 — 10개 링크대신 1개의 답 보여준다.

   (전 구글 임원) 스리다르 라마스와미 & 비벡 라구나탄이 설립한 광고없는 AI검색 엔진 니바 neeva.com, NeevaAI를 공식 출시했습니다.
     * 니바는 자체 검색 엔진 위에 AI가 요약해준 최신 결과를 보여줍니다.
     * ChatGPT의 취약점, 1) 출처 표기, 2) 실시간 정보가 아닌 문제, 즉, 모델이 2021년 까지의 정보임을 인지하고 이 두 문제가 없는 검색 결과가 니바의 다른 점입니다.
     * NeevaAI 요약 결과는 출처를 함께 표기합니다.
     * NeevaAI는 니바의 검색엔진이 매일 업데이트하는 인터넷 문서에 기반한 자체 모델을 사용합니다.

   스리다르 라마스와미의 NeevaAI 소개 글 입니다.
   https://twitter.com/RamaswmySridhar/status/1611378604587487235
"
"https://news.hada.io/topic?id=8102","GitHub, Secret Scanning 기능을 무료 퍼블릭 Repo에 지원 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             GitHub, Secret Scanning 기능을 무료 퍼블릭 Repo에 지원 시작

     * 코드에 Secret들이 커밋되어 업로드된 경우 알려주는 기능
     * 서비스 제공업체들은 깃헙의 시크릿 파트너 프로그램에 가입하면 시크릿 토큰 포맷을 제공하고 이를 통해서 사전 알림 가능
          + RegEx로 검사한 뒤 검출이 확인되면, 실제 제공업체의 서버에 보내어서 키가 맞는지 확인하는 프로세스를 거침
     * 점진적으로 롤아웃되어 1월말까지 모든 사용자가 이용 가능
"
"https://news.hada.io/topic?id=8162","SQLite Internals : 세상에서 가장 많이 사용되는 DB의 동작방식 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              SQLite Internals : 세상에서 가장 많이 사용되는 DB의 동작방식

   계속 수정중인 오픈소스 이북
     * 비하인드 스토리
     * 기술적 컨텍스트 : 엔진, B-Tree구현, 파서, VCS
     * 오버뷰
          + 컴파일 및 실행 프로세스
          + 단계별 설명
          + 주요 컨셉들
     * 파일과 레코드 포맷
          + 페이지 종류들 : Lock-Byte, Freelist, B-Tree,..
          + 레코드 포맷
     * 롤백 & WAL 모드
     * 바이트코드
     * 흥미로운 기능들
          + 가상 테이블
          + CTE
     * 미래

   SQLite 만큼은 아니지만, 요즘 가장 사랑받는 PostgreSQL 14 Internals 도 있습니다.

   아직 글이 계속 작성중이라 제목만 있고 빠진 챕터들도 있습니다.
   앞부분은 제가 번역해서 옮겼던 SQLite의 알려지지 않은 이야기 에도 있는 내용들이네요.

   정말 재미있는 비하인드 얘기들이네요. 다른 라이브러리 의존성 없이 모두 다 만들어서 개발했다는 얘길 들으니 대단하다느 생각밖에 안드네요. 버전관리 도구에서부터 파서까지.

   Thanks for bringing the book to a Korean audience! Yes, the Postgres internals is very enjoyable to read. Else, first time i come across a post which publishes a story in the news itself.

   The book evolves according to my free exploration time. Btw the LeanPub version contains only finished chapters.
"
"https://news.hada.io/topic?id=8170","nanoGPT - 중간규모 GPT를 가장 빠르게 훈련/미세조정하기 위한 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              nanoGPT - 중간규모 GPT를 가장 빠르게 훈련/미세조정하기 위한 오픈소스

     * Tesla의 AI 헤드였던 Andrej Karpathy가 minGPT를 재작성한 코드
     * 읽기 쉽고 평범한 코드를 작성하는 것을 목표
          + 300줄 가량의 train.py
          + 300줄 가량의 model.py
     * OpenWebText 데이터 세트에서 GPT-2를 재현하는 작업중
"
"https://news.hada.io/topic?id=8137","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   가족끼리 식사하고 elixir 좀 만져 볼 생각입니다
     * 고등학교 친구들과 보드게임 모임을 합니다
     * 지난번 눈온뒤로 차가 너무 더러워 졌는데 세차를 못해서, 셀프세차든 손세차든 해야할 것 같아요
     * 긱뉴스 올해 결산? 이나 함 적어봐야 겠어요 ㅎ

   부모님 댁에 다녀올 예정입니다.
"
"https://news.hada.io/topic?id=8151","GPT3Discord - 디스코드 내에서 GPT3사용하게 해주는 봇","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 GPT3Discord - 디스코드 내에서 GPT3사용하게 해주는 봇

     * !g <prompt>: 바로 GPT3 프롬프트 입력
     * !g converse: ChatGPT처럼 대화 하기
          + 채팅이 길어져서 대화한계에 도달하면, 봇이 GPT3를 이용해 대화를 요약해서 토큰을 줄이고 추가로 대화가능하게 만듦
     * !draw <prompt>: DALL-E 로 이미지 생성하기
     * 각 응답마다 Redo 버튼이 있어서 첫 프롬프트에서 다시 시작 가능
     * 봇이 자동으로 DALL-E용 이미지 프롬프트를 최적화해서 더 좋은 이미지를 생성

   방금 친구들하고 있는 서버에 적용하고 오는 길입니다.
   한글도 지원하는거 보고 뿌듯했네요. 하지만 조금 손봐야하는 부분이 있었고, 퀄리티도 이거 엄청나다 정도는 아니었습니다.
   gpt2 기반인 openai chat과 비교시 어떤 부분에선 우위에 있고, 어떤 부분에선 좀 부족하더라구요. 그리고 openai api를 개인적으로 구비해둬야 운용할 수 있는 점에서 아쉬웠습니다.

   혹시 실례가 안된다면 깃허브 에서 받은 파일을 헤로쿠?? -> 디코봇 적용 하는 방법좀 유튜브나 메모장 등 알려주실수 있나요? ㅠㅠ
"
"https://news.hada.io/topic?id=8127","동시성, 병렬, 비동기, 논블럭킹과 컨셉들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        동시성, 병렬, 비동기, 논블럭킹과 컨셉들

   간단한 용어정리부터 시작해 그래픽, 반도체까지 폭넓게 다루어보았습니다.
    1. 용어
          + 동시성 / 병렬
          + 비동기 / 논블로킹
          + 선점형 / 비선점형
    2. 운영체제와 프로세서
          + 운영체제
          + 프로세서
    3. 코루틴과 파이버
          + 파이버
          + 코루틴
    4. 제네레이터, Async/Await, 컨티뉴에이션
          + 제네레이터
          + Async / Await
          + 컨티뉴에이션
    5. Promise와 Future
    6. I/O 멀티플렉싱
          + 멀티플렉싱
          + 소켓
          + I/O 모델들
    7. 링버퍼, 최신 I/O 모델, LMAX Distruptor
          + 링버퍼
          + 최신 I/O 모델
          + LMAX Disruptor
    8. 동기화 프리미티브
          + 필요성
          + 스레드 안전
          + 스핀락
          + 뮤텍스
          + 세마포어
          + STM
          + GIL
    9. 다른 스크립트 언어의 접근법과 Reactor/Proactor 패턴
          + Ractor (루비)
          + Node.js (Reactor 패턴)
          + Proactor 패턴
   10. CSP와 액터
          + CSP
          + 액터
   11. 그린 쓰레드, 고루틴 그리고 최신 비동기 런타임 기술들
          + 그린 쓰레드
          + 최신 CSP 런타임
          + 최신 액터 런타임
   12. 병렬
          + SIMD와 파이프라이닝
          + OpenMP & MPI
          + 최신 병렬 기법
          + 람다 아키텍처
   13. GPU
          + 파이프라인과 쉐이더
          + 모니터
          + 버퍼링
          + 수직동기화
          + 프레임 페이싱과 빔 레이싱
          + 컴포지터
          + 그래픽 API / 라이브러리
   14. 기타 칩
          + 개요
          + DSP
          + FPGA
          + TPU
   15. 참고

     동기와 비동기는 작업완료를 누가 확인하는가
     블로킹과 논블로킹은 제어권한이 있는가

   이 말을 수많은 블로그에서 똑같이 되풀이하고 있던데, 원 출처가 어딘지 궁금합니다.

   대부분의 블로그는 서로가 서로를 참조하기에 바빠서 원문을 짐작할 수가 없었고, 그나마 찾은 건 IBM 의 AIO 문서 뿐인데, 이건 커널 io 에서만 한정지어서 얘기되는게 아닌가 싶어서요. 그리고 저 구분법도 그 자체로 논란이 있다고 들었습니다.

   공신력있는 판단 기준인지요?

   우선 동기/비동기는 회로쪽 기반으로 하면 될 것 같습니다.
   동기회로는 타이밍을 위해 클럭을 이용하고, 비동기는 이벤트나 다른 입력에 의해 트리거되는 방식이죠.
   즉, 비동기 API는 동일하게 콜백등에 의해 트리거되는 방식이라고 정의해도 무리는 없을 듯 합니다.
   https://developer.mozilla.org/en-US/docs/…

   블로킹/논블럭킹 API는 작업을 반드시 기다려야 하는가 여부가 정의로서 적절합니다.
   다만, 기다리지 않기 위해서 호출한 함수가 제어권을 가지는 구현이 있어야 하기 때문에 그렇게 많이 설명하는 경향이 큰 것 같네요.
   https://nodejs.org/en/docs/guides/blocking-vs-non-blocking/

   간략히 넘어가고자 생략했었는데 이 내용을 추가적으로 넣어보도록 하겠습니다.

   적어주신 말씀에 모두 동의합니다. 그러나 이 두 기준축을 사분면으로 한 단면에 그려야 하는가, 그릴 수 있는가, 적절하게 구분되는가에 대해선 여전히 확신을 가지기 어렵네요. 제겐 Blocking과 Sync가 개념적으로 90%의 맥락을 같이 하는 느낌입니다. Non-Blocking&Async도 마찬가지입니다.

   Blocking-Sync와 Non-Blocking-Async가 함께 쓰이는 경우가 많지만 구분이 필요한 경우들이 있습니다.
     * Blocking-Async: Select같은 I/O 멀티플렉싱
     * Non-Blocking-Sync: 데이터 폴링(polling)

   때문에 저는 오히려 구분해 사용하는게 맞다고 생각합니다.

   말씀주신 예시들에 대한 이해가 거의 없어서 더 공감이 잘 안되는 것 같네요.

   https://incredible-larva.tistory.com/entry/… 이 글에선 아래와 같이 설명하고 있습니다:

     결국 select를 요청한 user process가 return 받은 값을 보고 후속 작업 유무를 판단하는 것이다. 예측할 수 없게 인입되는 여러 I/O 요청이 한 번에 관리 되고 있기에 Asynchronous하다고 보는 경우도 있지만 결국 실제 개별 I/O 동작은 Synchronous 한 동작을 보인다는 것.

   이에 대해선 어떤 의견을 가지고 계신지 궁금합니다. 사실 저는 이 시점에서, 더이상 이 2x2 구분법이 무의미하다고 느껴졌습니다. 도메인마다, 관점마다 해석이 분분한 것 같아서요.

     이어서, kernel의 응답을 기다리다보면 kernel에서 결과 값이 준비되었다는 callback 신호가 오고 user process는 자신의 buffer로 데이터를 복사해오는 모습을 보여준다.

   이 부분이 위에서 동의하신 콜백에 의한 트리거 방식이기 때문에 굳이 구분/정의해야 한다면 Blocking-Async라고 부르는게 맞는 것 같구요.
   관점에 따라 애매하기 보이는 경우가 있을수도 있다고 생각합니다.

   다만, 폴링이 확실한 예제인데요,
   https://en.wikipedia.org/wiki/Polling_(computer_science)

   폴링의 경우 데이터가 준비되었는지를 반복적으로 확인하기 때문에 Sync-Blocking의 적절한 예제입니다.

   와우 좋은자료 감사합니다.

   잘 읽었습니다!

   스크롤이 끝이 없네요 ㄷㄷ
   유사한 주제를 다루는 ""7가지 동시성 모델""이란 도서가 한번쯤 읽어볼만 한 것 같습니다.

   목차 비교해보니 비슷하네요
   좋은책 같습니다
"
"https://news.hada.io/topic?id=8114","OpenAI, 3D 모델을 생성하는 AI Point-E 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   OpenAI, 3D 모델을 생성하는 AI Point-E 공개

     * 텍스트 프롬프트에서 3D Point Cloud 모델을 생성하는 오픈소스 코드와 논문
          + Point-E는 Efficiency를 의미. 기존 3D 객체 생성보다 훨씬 빠름
          + 일반적인 3D 모델이 아니라, 점들의 구름으로 구성된 형태. 미세한 모양이나 질감을 표현하지는 못함
          + 이 제한을 넘기 위해 추가AI 시스템을 구성해서 포인트 클라우드를 메쉬로 변환
     * 싱글 NVidia V100 GPU에서 1~2분 만에 3D 모델 생성 가능
"
"https://news.hada.io/topic?id=8210",".NET 7에서 .NET SDK에 대한 내장 컨테이너 지원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    .NET 7에서 .NET SDK에 대한 내장 컨테이너 지원

     [요약] 이제 별도의 Dockerfile 없이 dotnet CLI 및 MSBuild 설정으로 쉽게 컨테이너로 publish 가능

     * 개발중에 단일명령으로 쉽게 디버그 구성 컨테이너 이미지 생성 가능
     * CI 파이프라인과 쉽게 통합
     * MSBuild ContainerBaseImage 속성으로 기반 이미지 지정 가능

    링크

     * 컨테이너 관련 MSBuild 속성 및 항목
"
"https://news.hada.io/topic?id=8211","TouchEn nxKey 취약점 분석","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          TouchEn nxKey 취약점 분석

   공개 일정에 따라 첫번째 분석글이 공개되었습니다.

   원문 전체를 한국어로 번역했습니다: https://github.com/alanleedev/KoreaSecurityApps/…

   제가 예전부터 경고했죠, 보안 프로그램이라고 오해하던 것들... 하지만 제가 쓴 글들은 근거부터 시작해서 태클걸 게 많다보니 욕이란 욕은 다 쳐먹었죠. 오랜만에 다시 언급하겠습니다.
     * 보안 플러그인은 클라이언트를 보호하려는 목적이 아닙니다. 클라이언트로부터 서버를 보호하기 위한 목적입니다. 이거 클라이언트 보안 도구로 오해하시는 분들 정말 많습니다.
     * 보안 플러그인이랍시고 키로거 등 개인정보보호법을 씹어먹는 등의 여러 위법 도구가 있지만, 금감원이 실드쳐준 덕분에 공공연하게 클라이언트 감시가 자행되고 있습니다.
     * 당연하겠지만, 여러 플랫폼 지원은 강제사항 및 가이드조차 없기 때문에 맥, 리눅스 지원 안해도 업체에서는 그 민원은 씹어도 됩니다. 한 술 더 떠서 블랙 처리해도 됩니다. 모질라 한국 컨트리뷰터의 목소리가 그들에게 안들렸던 이유입니다. 모바일 시대가 되고 나서야 움직인 거죠.
     * 액티브엑스를 EXE로 바꾸는 과정은 이미 준비되고 있어서 차후 브라우저 미지원 사태에 대비해왔고, 이를 전환하면서 왜 쓰냐고 욕먹지만, 그들은 금융위에 따지라는 가불기 펀치 날리면서 버텨온 겁니다.
     * 구라제거기 제작자가 소송에 휘말릴 뻔한 적도 있습니다.

   안하니만 못한 보안 프로그램..

   일반적인 해킹 공격에는 효과적이지만 보안 프로그램 자체를 노리고 시스템 보안 취약점을 탈취한다면 더 심각한 문제를 야기할 것.

   댓글창이 ㅎㄷㄷ 재미있네용.

   원글 쭉 읽어봤는데 생각보다 보안키보드모듈이 일반적인 해킹 공격에는 효과적이긴 한데요?

   다크나이트..

   원글 GeekNews 쓰레드 https://news.hada.io/topic?id=8176
"
"https://news.hada.io/topic?id=8117","구글의 Pixel폰 2023~2025 전체 로드맵","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글의 Pixel폰 2023~2025 전체 로드맵

     * 익명의 신뢰할 수 있는 출처로부터 알게된 로드맵을 정리

2023

     * 구글 I/O 에서 코드네임 ""lynx"" 와 ""felix"" 출시
          + lynx - Pixel 7a. 무선 충전 및 90Hz 주사율
          + felix - Pixel Fold. 갤럭시Z 폴더와 같은 폴더블 폰
     * Pixel 8 ""shiba"" 와 Pixel 8 Pro ""husky""
          + 새로운 칩셋인 ""zuma"" (Tensor G3)

2024

     * Google Pixel 8a ""akita""
          + Pixel 7a 판매량에 따라 폐기될 수도
          + 애플의 iPhone SE 처럼 격년(2년마다) 출시하게 될 것
     * Pixel 9 시리즈
          + Pixel 9
          + Pixel 9 Pro ""komodo"" 6.7인치
          + Pixel 9 Pro ""caiman"" 6.3인치
          + 아이폰의 14, 14 Pro, 14 Pro Max 처럼 3가지 라인이 될 것
          + 세가지 모두 새로운 Tensor G4 ""redondo"" 칩셋 기반
     * 첫 폴더블 Pixel Fold ""felix"" 의 반응에 따라 두번째 폴더블도 계획이 있음

2025

     * 2023/2024 계획의 성공/실패에 따라 다양한 선택이 있음
     * 갤럭시 Z 플립과 비슷한 기기를 출시할 수도
     * Pixel Fold의 성공여부에 따라 또 다른 후속작도 기대
"
"https://news.hada.io/topic?id=8154","Pop2Piano : 팝 오디오 기반 피아노 커버 생성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Pop2Piano : 팝 오디오 기반 피아노 커버 생성

     * 팝 음악 에서 자동으로 피아노 커버 버전을 생성하는 논문/코드
          + 트랜스포머 네트워크를 이용, 음악에서 멜로디와 코드를 추출하지 않고 파형(waveform)에서 직접 피아노 커버를 생성
     * 생성된 샘플 바로 들어보기 가능 (스테레오로 들으면 왼쪽은 피아노, 오른쪽은 원곡)

   한국분들이시네요. 샘플곡 중에 친숙한 Love Dive 가 있군요 ㅎㅎ
"
"https://news.hada.io/topic?id=8126","Windows 11의 Notepad(메모장)에 탭 기능 추가 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Windows 11의 Notepad(메모장)에 탭 기능 추가 예정

   PM이 스크린샷을 (실수로) 올렸다 삭제 되었으나, 2023년에 추가 될듯

   Confidential이라고 적힌걸 ""실수""로 올렸을리는 없고 일종의 노이즈 마케팅이라 보면 될것 같습니다.

   윈도우 10까지 되돌리기 한 번밖에 안 됐던 것하고 비교하면 장족의 발전이네요.
"
"https://news.hada.io/topic?id=8133","2023년에 주목해야 할 과학 이벤트들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         2023년에 주목해야 할 과학 이벤트들

     * 차세대 백신 : mRNA 백신들과 비강스프레이
     * 고급 별 관측 : ESA Euclid, 일본의 X-Ray 이미징, 칠레의 LSST, 중국 신장의 QTT
     * 달 미션 : UAE의 Rashid Rover, NASA의 Lunar Flashlight, 일본의 HAKUTO-R Mission 1, 인도의 Chandrayaan-3. 그리고 SpaceX의 민간 달 여행. ESA는 목성의 달을 관측하는 JUICE(Jupiter Icy Moons Explorer) 미션 발사
     * 병원체(Pathogen) 감시목록 갱신 : WHO가 우선 순위 병원체 목록을 발표
     * CRISPR 테라피 : 유전자 가위 CRISPR가 첫 승인을 받을 것
     * 기후협약 컨퍼런스(COP27)에서 피해와 보상에 대한 논의. 아직 세부사항은 해결이 필요
     * 표준 모델을 넘어 :
          + 올해 4월 첫 발표된 Muon g-2 실험의 결과에 대해 더 정확한 결과가 발표될 예정. (물리학 표준모형의 기본 입자 외에 추가 입자 또는 힘의 존재를 밝혀서 표준 모델이 변경될 수 있음)
          + 중국 장먼의 중성미자 관측소(지하 700미터에 높이 80미터, 직경 50미터의 실험동)에서 전기적으로 중성을 띄는 아원자 입자인 중성미자의 진동을 정확하게 측정하여, 표준 모델을 넘어선 물리법칙을 찾기 시작.
          + 스웨덴에 있는 유럽 파쇄원(ESS)의 오픈. 물질의 구조를 연구하기 위해서 초강력 선형 양성자 가속기를 사용하여 중성자 빔을 만들어 낼 것.
     * 알츠하이머 치료제 : Eisai 와 Biogen이 개발한 lecanemab, Avanex Life Sciences에서 개발한 Blarcamesine
     * 세계 최초의 핵 폐기물 저장 시설 가동 : 핀란드 남서쪽 해안의 Olkuluoto섬. 최대 6500톤의 우라늄을 구리 용기에 담아서 점토로 덮은 뒤, 지하 400미터 화강암 터널 내부에 묻고 수십만년동안 봉인될 예정
"
"https://news.hada.io/topic?id=8150","미리보는 CES 2023 [27p 슬라이드]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        미리보는 CES 2023 [27p 슬라이드]

     * 주제 : '기술혁신이 인류의 문제를 해결하는 방향과 지속가능성'
     * 기조연설 : AMD, BMW, Teladoc, Nasdaq, Delta, Samsung, Wing,..
     * 웹 3.0 카테고리 확대 및 현실 생활 적용 가능성 탐구
     * 모빌리티와 마린테크
     * 통신+농업 ‘존 디어(John Deere)’
     * 텔레헬스의 신뢰성 ‘Medwand’
     * 모바일 디지털 플랫폼 MS
     * 마린 테크놀로지 Brunswick
     * 자동차 혁신 Stellantis
"
"https://news.hada.io/topic?id=8205","Comprehensive - 기술회사는 인재에게 연봉을 얼마나 줄까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Comprehensive - 기술회사는 인재에게 연봉을 얼마나 줄까?

     * 캘리포니아/뉴욕의 급여 투명성 법률에 따라, 회사들은 구인 공고에 급여 범위를 포함해야함
     * 이에 따라 구인 공고들을 모두 추적해서 급여 정보를 정리해 보여주는 웹사이트
     * 연봉 상위 회사들
          + 시니어 소프트웨어 엔지니어: Tesla $83k~418k > Snowflake $214k ~ $328k > Datadog $130k ~ $300k > GitHub $104k~$277k
          + 소프트웨어 엔지니어 : Netflix $90k~$900k > Tesla $83k~418k > Google $174k~$276k > Pinterest $155k~$259k > Notion $190k~$250k
     * 직군별 평균 연봉
          + 시니어 소프트웨어 엔지니어 : $148k~$208k
          + 소프트웨어 엔지니어 : $135k~$200k
          + 시니어 프로덕트 매니저 : $152k~$210k

   캘리포니아의 회사들은 새 법률에 따라 구인광고에 연봉 범위를 꼭 명시해야
   애플 엔지니어 매니저 최대 4억8천만원…빅테크 기업 급여 공개

   실제로 사람들이 참여해서 입력한 Levels.fyi의 2022년 소프트웨어 엔지니어 급여 통계 와 비교해서 보는 것도 좋겠네요
"
"https://news.hada.io/topic?id=8108","Okta, GitHub Repo를 해킹 당해서 소스코드 유출","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Okta, GitHub Repo를 해킹 당해서 소스코드 유출

     * 인증서비스 업계 선두인 Okta의 비공개 GitHub Repo가 해킹 당해서 소스코드를 훔쳐감
     * Okta의 ""보안 연락처"" 들에게 보낸 메일을 통해서 드러남
     * 이번달 초에 GitHub이 Okta의 코드 저장소에 의심스러운 접근이 있다고 알렸음
     * 소스코드만 훔쳐가고 서비스나 사용자 데이터에는 접근 권한을 얻지 못했다고

   올해 Okta 는 구설수에 많이 오르내리네요..
   Lapsus$ 해킹그룹, Okta를 해킹했다고 주장
   Okta, Auth0를 7.3조원에 인수 했는데, 올해 9월에 Auth0가 비슷한 사고를 겪기도 했습니다.
"
"https://news.hada.io/topic?id=8192","Rust for Professionals","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Rust for Professionals

     * 다른 언어에 익숙한 전문가를 위한 Rust 가이드
     * TypeScript, JavaScript, Java, C++, Kotlin 등과 비교하는 예제들을 통해서 설명
     * 문법 : 변수, 함수, 익스프레션, Structs, Traits, Enums
     * 컨셉 : 오너십, 스트링, 널 밸류, 에러 핸들링, 어트리뷰트(어노테이션)

   아직 우리나라가 사용자가 적은 것이 단점인 것 같네요. 그게 큰 문제가 아니라면 나쁘지 않은 선택지인 것 같습니다.
"
"https://news.hada.io/topic?id=8119","암호화된 LastPass Vault 해킹하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        암호화된 LastPass Vault 해킹하기

     * 최근 LastPass의 유출은 고객의 암호화된 Vault가 포함됨
     * 해커들이 어떻게 이를 공격할지를 보여주는 글
     * 크롬 확장을 통해서 암호화된 정보가 들어있는 SQLite DB파일을 찾음
     * Hashcat을 이용해서 암호를 크래킹 : 키값, 반복횟수, 이메일로 정보를 구성
     * 맥북에어(M1)에서는 1110 H/s(초당 해쉬)밖에 안나오지만 멀티GPU환경에서는 2,000,000+ H/s도 가능
     * 6자짜리 취약한 암호로 테스트한 경우, 유명한 rockyou.txt로 시도해보면 29초만에 답을 찾게 됨

   LastPass 사용자들의 정보/암호가 해커의 손에 넘어감
"
"https://news.hada.io/topic?id=8208","2023년 소프트웨어 엔지니어를 위한 필수 도서 추천","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     2023년 소프트웨어 엔지니어를 위한 필수 도서 추천

     * Build - Tony Fadell
     * 피닉스 프로젝트 (위기에 빠진 IT프로젝트를 구하라)
     * 하드씽(경영의 난제를 푸는 최선의 한수)
     * 컴퓨터 프로그램의 구조와 해석(SICP)
     * A Philosophy of Software Design - John Ousterhout
     * 실용주의 프로그래머(20주년 기념판)
     * An Elegant Puzzle: Systems of Engineering Management - Will Larson
     * 구글 엔지니어는 이렇게 일한다
     * 인스파이어드(감동을 전하는 IT 제품은 어떻게 만들어지는가)

   엔지니어링 매니저를 위한 추천 도서
   VC들이 추천한 창업자가 꼭 읽어야 할 책들

   이번 글과 기존에 올라왔던 리스트에 모두 들어간 책은 딱 한권이네요.

   ""The Hard Thing About Hard Things: Building a Business When There Are No Easy Answers"" by Ben Horowitz
     * 하드씽 : 경영의 난제를 푸는 최선의 한수

   주니어때 실용주의 프로그래머를 읽은후 부터 생각이 많이 바뀐것 같네요.

   피닉스 프로젝트 후속편 유니콘 프로젝트도 권합니다

   SICP 와 실용주의 프로그래머를 보니 반갑네요.

   하드씽, 구글 엔지니어는 이렇게 일한다 두 권을 읽었습니다.
   둘 다 일독을 추천합니다

   번역판이 나온 것들은 그 제목을 사용했습니다
"
"https://news.hada.io/topic?id=8123","WebAssembly: 컨테이너 없는 Docker!","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      WebAssembly: 컨테이너 없는 Docker!

     * 최근 Docker가 WasmEdge로 WebAssembly지원을 발표
     * WASM이 Docker 생태계와 연관있는 이유를 설명하고 몇가지 실습 예제를 제공
     * WebAssembly 는 무엇이고 왜 좋은가?
     * Docker 공동창업자인 Solomon Hykes 왈 ""만약 WASM+WASI가 2008년에도 있었다면, Docker를 만들 필요가 없었다. 서버에서의 WebAssembly는 컴퓨팅의 미래다.""
     * WASM은 Docker와 어떻게 동작하는가 ?
     * WasmEdge란?
     * 핸드온 예제
          + Wasm 컨테이너를 만들고
          + Wasm 과 Native 바이너리를 비교
          + 전통적인 컨테이너와 Wasm 컨테이너 비교
          + Wasm의 포터빌리티 소개

   Docker+Wasm (Beta)
"
"https://news.hada.io/topic?id=8174","LAION-AI Open-Assitant - ChatGPT와 비슷한 채팅 기반 대규모 언어 모델 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       LAION-AI Open-Assitant - ChatGPT와 비슷한 채팅 기반 대규모 언어 모델 오픈소스

     * Stable Diffusion 의 데이터셋을 제공했던 LAION의 신규 프로젝트
     * 아직 초기 단게로, 현재 계획은 InstructGPT 논문을 따라서 최대한 빠르게 MVP를 생성하는 것
     * 단순히 ChatGPT를 복제하는 것에서 끝나지 않고, 더 나아가서 미래의 가상 비서를 만드는 것을 목표로 함
"
"https://news.hada.io/topic?id=8148","HelloSilicon - 애플 실리콘 맥을 위한 ARM64 어셈블리 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               HelloSilicon - 애플 실리콘 맥을 위한 ARM64 어셈블리 소개

     * 기존 책인 ""Programming with 64-Bit ARM Assembly Language"" 의 모든 샘플 코드를 애플 실리콘에 맞게 수정
     * 책은 일부 iOS 샘플을 제외하고는 모두 Linux 기반으로 되어있음. 애플의 OS들은 실제로 Darwin OS의 변형이므로 핵심 컴포넌트를 공유함.
       Linux 와 Darwin은 Unix System V에서 영향을 받았지만, 여기서 보는 레벨에서는 많이 다름(시스템 콜 및 메모리 접근 측면에서). 이 차이점을 옆에 명시해서 읽기 가능하게 해놨음
"
"https://news.hada.io/topic?id=8145","StackOverflow 개발자 설문조사 2022","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      StackOverflow 개발자 설문조사 2022

     * 7만명의 개발자가 참여
     * 70%의 개발자가 온라인에서 코딩을 배움
          + 45세 이상은 책에서 배우는 것을 좋아하지만, 젋을수록 온라인을 선호
          + 18세 이하는 대부분 온라인 리소스에 의존
     * 인기 있는 / 사랑받는 기술
          + 작년엔 Git이 필수 도구였는데, 올해는 Docker가 전문 개발자들에게 비슷한 필수도구가 됨 55% → 69%
          + 코딩을 새로 배우는 사람들은 전문 개발자보다 3D 툴을 더 많이 사용(Unity3D 23% vs 8%). 3D VR과 AR을 위해
          + VS Code가 74.48%로 1위, Visual Studio가 32.15%로 2위, Intellij 27.97%, Nodepad++ 27.71%, Vim 23.34%
          + 운영체제(작업용) : Windows 48% > Linux 39% > macOS 32% > WSL 14% > BSD 1%
          + DB : PostgreSQL 72% > Redis 71% > MongoDB 60% > SQLite 57% > Cloud Firestore 56%
          + Cloud : AWS 66% > Azure 59% > GCP 58% > Digital Ocean 57%
          + Web FW : Phoenix 83% > Svelte 75% > Deno 72% > ASP.NET Core 71% > Next.js 69%
          + 그외 기술 : HugginFace 72% > Tidyverse 69% > .NET 68% > Torch/Pytorch 68% > Flutter 68%
          + 언어로는 Rust가 7년째 1위를 유지. 87%의 개발자가 계속 사용하고 싶다고
     * 가장 급여가 높은 기술
          + 언어 : Clojure $106k > Erlang $103k > F# $95k > LISP $95k > Ruby $93k
          + DB : DynamoDB $94k > Couchbase $90k > Cassandra $81k > Neo4j $80k > Elasticsearch $78k
          + Web FW : Phoenix $94k > RoR $90k > Play FW $88k > Deno $78k > Gatsby $77
          + 그외 FW : Spark $87k > Kafka $83k > Hadoop $76k > Tidyverse $74k > .NET $70k
          + 그외 도구 : Chef $120k > Pulumi $111k > Terraform $100k > Puppet $95k > Homebrew $87k
     * 근무 환경 : 완전 원격 42.98% > 하이브리드 42.44% > 완전 대면 14.58%
     * 연봉 (전체, 글로벌) : C급/VP $117k > Engineering Manager $111k > SRE $95k > Security $91k > Cloud Infra $89k > Blockchain $79k > Data Engineer $79k > Devops $79k
     * 하루에 답변 및 솔루션을 찾는 시간: 30~60분 37% > 15~30분 27% > 60~120분 17% > 15분 미만 9% > 120분 이상 7%
     * 하루에 질문에 답변하는데 쓰는 시간: 15~30분 32% > 30~60분 29% > 15분 미만 20% > 60~120분 12% > 120분 이상 4%

   원래 5월에 하는 설문조사인데, 제가 건너뛰었더군요. 그냥 넘기기 아쉬워서 올해가 가기전에 늦게라도 정리해봅니다.
   이렇게 정리해둬야 비교해서 보기 좋더라고요 ㅎㅎ

   스택오버플로우의 개발자 설문조사 2021
   스택오버플로우의 개발자 설문조사 2020

   우리나라 조사한 것과도 비교해서 보세요
   2022 프로그래머스 개발자 설문조사 리포트
"
"https://news.hada.io/topic?id=8161","Custom Diffusion - Text-To-Image의 Multi-Concept Customization","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Custom Diffusion - Text-To-Image의 Multi-Concept Customization

     * 여러장의 새로운 컨셉 이미지를 제공해서 Stable Diffusion 모델을 미세 조정
     * 키/밸류 프로젝션 매트릭스만 미세 조정하기 때문에 빠름(A100 GPU 2개에서 ~6분)
     * 새로운 객체 + 새 아티스틱 스타일, 여러 새로운 개체, 새로운 개체 + 새로운 카테고리 등의 조합이 가능
"
"https://news.hada.io/topic?id=8202","VIM Online Editor - 브라우저에서 실행하는 VIM","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  VIM Online Editor - 브라우저에서 실행하는 VIM

     * WebAssembly를 이용해서 브라우저에서 VIM을 그대로 실행
     * 파일은 IndexedDB에 저장
     * .vimrc 로딩 가능
     * 클립보드 Paste 지원
     * 파일은 Drag&Drop 하면 열기 됨
"
"https://news.hada.io/topic?id=8171","더 좋은 타입스크립트 프로그래머로 만드는 11가지 팁 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   더 좋은 타입스크립트 프로그래머로 만드는 11가지 팁 [번역]

   #1 {집합(Set)}이라고 생각하기
   #2 선언된 타입과 좁혀진(narrowed) 타입의 이해
   #3 옵셔널 필드 대신에 구분된 유니온 사용
   #4 타입 단언을 피하기 위한 타입 명제 사용
   #5 유니온 타입 분배 제어
   #6 철저한 검사를 통한 컴파일시 처리되지 않은 케이스 체크
   #7 interface보다 type을 사용
   #8 적절한 상황에는 배열보다는 튜플을 사용
   #9 추론된 타입이 일반적이거나 구체적이도록 제어
   #10 추가 제네릭 타입 매개 변수를 만들기 위해 infer를 사용
   #11 타입 조작으로 창의성을 발휘하여 DRY 상태를 유지
   마무리

   7번은 React 관점에서 쓴 것 같아 보이네요.
   저는 Type보다 Interface를 선호합니다. 다른 언어에도 있는 구문이기도 하구요.
     * https://stackoverflow.com/a/37233777
     * https://github.com/microsoft/TypeScript/…

   저도요. 예전에 타입스크립트 핸드북에서도 인터페이스를 되도록 우선 사용하라는 조언도 있던걸로 기억합니다.

   이 내용이네요.
     * https://typescriptlang.org/docs/handbook/…
     * https://typescriptlang.org/docs/handbook/…

   다 좋은데 7 interface보다 type을 사용 은 굳이? 팁이라고 할수 없네요 표현력이 interface 가 더 좋은게 있어서 예) interface Foo {(b: number): A; (): B}

   Type을 옹호하는건 아닌데, 표현력이 더 좋은 예가 잘 이해가 안됩니다. 해당 예문도 Types로 동일하게 표현할 수 있는거 아닌가요?

   interface Foo {(b: number): A; (): B}
   type Foo = {(b: number): A; (): B}

   이펙티브 타입스크립트 책에서 타입과 인터페이스 중에 어느것을 사용해야 할지 정리해둔 부분이 있어 인용해봅니다.

     타입과 인터페이스 중 어느것을 사용해야 할지 결론을 내려 보겠습니다. 복잡한 타입이라면 고민할 것도 없이 타입 별칭을 사용하면 됩니다. 그러나 타입과 인터페이스, 두 가지 방법으로 모두 표현할 수 있는 간단한 객체 타입이라면 일관성과 보강의 관점에서 고려해 봐야 합니다. 일관되게 인터페이스를 사용하는 코드베이스에서 작업하고 있다면 인터페이스를 사용하고, 일관되게 타입을 사용 중이라면 타입을 사용하면 됩니다.

   아직 스타일이 확립되지 않은 프로젝트라면, 향후에 보강의 가능성이 있을지 생각해 봐야 합니다. 어떤 API에 대한 타입 선언을 작성해야 한다면 인터페이스를 사용하는 게 좋습니다. API가 변경될 때 사용자가 인터페이스를 통해 새로운 필드를 병합할 수 있어 유용하기 때문입니다. 그러나 프로젝트 내부적으로 사용되는 타입에 선언 병합이 발생하는 것은 잘못된 설계입니다. 따라서 이럴 때는 타입을 사용해야 합니다.
"
"https://news.hada.io/topic?id=8178","Show GN: Typia - superfast runtime validator","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Show GN: Typia - superfast runtime validator

   자작 런타임 타입 체커입니다.

   NestJS 로 백엔드 개발하다가 동접 가능 수가 형편없던 이유를 파악하던 중, class-validator가 그 원인임을 깨닫고 직접 개발하였습니다.
     * 단 한 줄로 사용 가능, 별도 스키마 정의 불필요
     * 소스 코드를 컴파일러 수준에서 분석, 최적의 런타임 코드 생성 (AOT)
     * TS에 가장 유명한 class-validator 대비 최대 16,000 배 빠름
     * JSON stringify 도 네이티브보다 10배 빠르며, 무려 type safe

   최고네요 👍
"
"https://news.hada.io/topic?id=8111","트위터, 각 트윗의 View Count 공개 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      트위터, 각 트윗의 View Count 공개 시작

     * 예전엔 트윗한 계정 주인에게만 보였던 각 트윗의 뷰 카운트(임프레션)를 공개적으로 보여주기 시작
     * 비디오 등에선 일반적인 기능이고, 이를 통해서 트위터가 얼마나 더 액티브한지 볼 수 있게 될 것
          + 트위터 사용자중 많은 사람이 트윗을 보지만, 트윗/답장/좋아요 등을 하는 것은 아니므로
"
"https://news.hada.io/topic?id=8175","Show GN: 개발자를 위한 채용 경매 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Show GN: 개발자를 위한 채용 경매 플랫폼

   개발자분들의 편한 이직을 위한 채용 플랫폼을 개발했습니다!

   현재 MVP 단계이며, 경매 프로세스를 통해 채용을 진행하고 있습니다.

   경매 일정, 면접 일정, 비딩 일정 등 모든 일정은 구직자 사이드의 편의를 맞춰 구현했습니다.

   다만 현재 피드백이 많이 부족하여 가감없는 피드백을 부탁드리고 싶습니다!

   저희 현재 핵심 기술중 하나는 이력서 자동 입력이 있으니 편하게 이용해보시고 피드백 부탁드리겠습니다:)

   감사합니다!

   재미나네요.

   이력서 자동입력에 대한 내용은 랜딩하는 첫 페이지에도 있으면 좋을 것 같아요.
   (근데 어떻게 하는지 잘 모르겠어요 ㅠ. 링크드인 주소를 넣으면 자동으로 불러오는 방식인가 했는데, 그건 아니더라고요. 자동 입력에 대한 설명이 좀 더 있으면 좋을 것 같습니다.)

   홈화면은 단계별로 잘 보여줘서, 직관적이고 좋은 것 같아요!
   추가적으로 각 단계별 예시 데이터 같은 걸 보여주면 어떨까요? 예시 이력서 라든가, 기업리스트/일정 선택화면 등요

   요건 다른 얘기지만.. 제가 올드?해서 그런걸 수도 있는데, 경매 라는게 아무래도 상품에 보통 붙는 단어다보니, 자신을 경매에 내놓는다는게 어떻게 느껴질지 모르겠어요. 약간 돌려서 다른 표현은 불가능할까요?

   좋은 피드백 주셔서 너무 감사합니다!
   이력서 자동 입력은 현재 링크드인 주소를 이력서 입력창에서 기입하면 자동으로 되고 있습니다!
   혹시 자동으로 파싱이 안 되셨을까요..?

   앗 네 지금 다시 해보니, 기본인 영문 링크드인 주소는 못불러오고요
   ?locale=ko_KR 붙인 한국어 링크드인 주소는 잘 불러와지네요.
   로케일 별로 뭔가 차이가 있나 봅니다.
"
"https://news.hada.io/topic?id=8130","SantaCoder - 11억개(1.1B) 파라미터로 학습한 코드 생성 모델","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               SantaCoder - 11억개(1.1B) 파라미터로 학습한 코드 생성 모델

     * Python, Java, Javascript 코드로 학습한 멀티언어 랭귀지 모델
     * LTR 생성 및 Infilling에서 페이스북의 InCoder(6.7B) / 세일즈포스의 CodeGen-Multi (2.7B) 보다는 뛰어나다고
     * BigCode가 공개했던 The-Stack v1.1(6TB) 데이터셋의 일부를 사용

   지금은 AI 프로젝트들이 파라미터 성능빨로 엄청 밀어붙이고는 있는데, 가격이 어느 정도 책정되어야 수익성을 담보할 지 궁금하네요. CoPilot처럼 한 달에 $10 으로 과연 비용을 충당할 수 있을지... (대기업 걱정하는 것이 쓸데없는 일이라는 것은 알지만요...)

   GitHub의 CoPilot은 12B 인데, 그것과는 생성 코드 품질면에서 좀 차이가 난다고는 하네요
"
"https://news.hada.io/topic?id=8214","Show GN: 레이스트 - 웹사이트 기술스택, 방문통계, 기업정보를 분석해주는 크롬 확장 프로그램","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Show GN: 레이스트 - 웹사이트 기술스택, 방문통계, 기업정보를 분석해주는 크롬 확장 프로그램

   레이스트는 웹사이트 기술스택, 방문통계, 기업정보를 분석해주는 크롬 확장 프로그램입니다.
     * 웹사이트에 접속했을 때, 화면 우측 영역에 작은 뱃지 아이콘이 떠다닙니다.
     * 뱃지 아이콘을 클릭하면 현재 웹사이트의 기업정보, 방문자통계, 기술스택을 플로팅 패널을 통해 표시해줍니다.
     * 뱃지 아이콘은 x를 눌러서 숨기거나 설정에서 숨길수 있으며, 숨긴 이후에도 단축키(Shift + R)를 통해서 패널을 열고 닫을 수 있습니다.
     * 기술스택의 경우 캐싱된 데이터가 없으면 요청시점에서 분석을 실행해 최대 10초가량 소요됩니다.

   탐지 가능 기술스택

   Wappalyzer와 비슷합니다.
     * Javascript Framework
     * 마케팅 툴
     * 일부 백엔드 프레임워크
     * 분석 툴
     * 기타 등등
     * 방문통계

   방문통계
     * 정보가 처음부터 웹에 공개된 특정 웹사이트들의 경우 데이터가 정확합니다.
       방문통계를 알 수 없는 웹사이트들의 경우 예측된 수치. 오차가 발생할 수 있습니다.

   기업정보
     * 스타트업 등 투자와 관련된 영어 뉴스 기사가 식별 가능한 기업정보는 잘 식별합니다.
     * 국내 기업정보는 일부 잘못된 결과가 있을 수 있습니다.

   안녕하세요. 정말 유용한 도구 만들어주셔서 감사의 말씀을 드립니다.
   몇가지 궁금한게 있어서 여쭙습니다.

   Statistics는 어느곳의 자료를 참조하신건가요? 그리고 갱신 주기가 있나요?

   도메인 서비스는 크롤링을 어디서하는건가요? 엄청빠른느낌이네요, 가격정보를알필요없고 등록가능여부만 알면빠르긴할텐데.. 각 tld별 whois서버에 직접 요청을 날리는지.. 아니면 icann 등 기타 api서비스가 있는지 궁금하네요

   안녕하세요.
     * Google Domain
     * Namecheap
     * DomComp
     * Zcom

   등 provider를 통해 요청하고 있습니다.

   모든 웹사이트의 권한을 요구한다고 해서 설치하다가 멈췄네요. 너무 과도한 권한을 요구하는게 아닌지 싶네요

   안녕하세요 zihado님, 좋은 피드백 감사드립니다.

   도움이 될 지는 모르겠으나, 저희가 Chrome Web Store에 심사받을 때 작성하였던 권한과 관련된 소명을 덧붙여볼게요...!
    1. 'storage_permission' 저장공간 권한을 사용합니다. 이는 뱃지의 위치, 패널 열림 / 닫힘 상태, 언어 설정 등 유저 설정을 저장하기 위해서 사용하였습니다.
    2. 'host_permission' 말씀하신 웹사이트 호스트 권한을 사용합니다. 이는 유저분이 어떤 웹사이트에서든 레이스트를 통해 분석을 요청하실 수 있기 때문입니다.

   크롬 웹스토어에서는 위 소명자료를 통해 스토어 등록을 승인받았으며, 앞으로 기능제공에 필요한 최소한의 권한 또는 정보를 수집할 수 있도록 또는 개인화할 수 있도록 유념하여 개발하도록하겠습니다.

   다시 한 번 피드백 댓글 정말 감사드립니다!

   안녕하세요..!

   웹사이트를 개발하고 발행하다보니 “그거 어떻게 만들었어요?” “어떤 라이브러리 썼어요?” “여긴 무슨 사이트에요?” “이런 걸로 돈이 벌려요?” 이런 질문들을 받기도 하고, 제가 다른 웹사이트에 접속을 하다가도 웹사이트, 프로덕트를 이해하기 위해서는 여러 번의 검색과 질문들이 필요하더라구요!
   레이스트가 긱뉴스 유저분들의 이런 질문에 대답할 수 있는 도구가 되었으면 좋겠습니다 🙂
"
"https://news.hada.io/topic?id=8128","Apple Arcade가 닌텐도,Xbox,PS의 그늘에서 조용히 성장한 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Apple Arcade가 닌텐도,Xbox,PS의 그늘에서 조용히 성장한 방법

     * ""게임시장의 경쟁에 대한 애플의 답안은 '고정 요금'으로 캐주얼 게임을 제공하는 것이었고, 이게 잘 동작함""
     * 2019년 출시 이후 게임 라이브러리를 2배로 늘리고, 매주 새로운 릴리스, 리마스터 및 업데이트를 제공
     * 추가 인앱 결제 없이, 콘솔 게임 한개 수준의 가격인 월 5$에 퍼즐, 미스터리, 향수(Nostalgia), 스포츠, 어린이등을 대상으로 하는 수백개의 게임을 제공
     * 멀티플레이어/소셜 기능도 포함
     * 2023년엔 더 많은 개선이 있을 것. NBA 2K23 같은 콘솔 스타일의 그래픽 집약적인 게임도 추가 예정

애플 아케이드가 경쟁 제품과 차별화한 방법

     * 구독자에게 모든 게임의 완전한 경험을 약속. 즉 모바일 게임에 지배적인 Freemium 모델과 극명한 대조를 보임
     * 또한 부분 유료화 게임에 가려져 있을 수 있는 다양한 인디 개발자를 조명할 수 있는 공간을 제공
     * Xbox의 Halo나 닌텐도의 Mario와 주력 독점 게임이 없다는 점에서는, RAC7의 Sneakly Sasquatch 같은 게임에서 잠재력을 보고 있음
       (애플의 앱스토어 담당 부사장인 Matt Fischer가 인터뷰에서 한말로, 상세 인터뷰 내용이 기사에 담겨있으나 너무 길어서.. 옮기진 않았습니다.)

   얼마 전 아이패드 미니를 구입하며 일정 기간 무료로 제공 되길래 여러 타이틀들을 시도 해봤는데.... Mini Motorways가 제일 취향에 맞더군요.
   본문처럼 다만 킬러 타이틀이 없는 것은 여전하지만, 인디 개발자들에게 좀 더 열려 있는 시장이란 점에서 틈새 공략을 잘 하는 것 같긴 합니다.

   자신의 생태계에서 타사의 진입을 막은 것도...

   애플이 어떻게 타사진입을 막은거에요? 자기네가 게임을 만든것도 아니고, 다 타사 게임인데요?

   엑스클라우드와 스타디아, 지포스 나우가 애플에 들어오려고했는데 앱스토어 조항을 수정하면서 막았죠. 엑스클라우드는 수정된 조항을 준수하면서까지 들어오려고 했지만 또 다른 요구사항을 제시하면서 방해했구요. 결국 앱으로 출시못하고 웹브라우저로 스트리밍하는 방식으로 우회했습니다.

   쉿..
"
"https://news.hada.io/topic?id=8125","Cyberpunk 2077에 나온 실시간 번역 구현해보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Cyberpunk 2077에 나온 실시간 번역 구현해보기

     * 게임에서 캐릭터가 외국어로 얘기하면, 그 캐릭터의 머리위에 원래 언어로 자막을 보여준 후 실시간으로 자신의 언어로 번역됨
     * 이 기능을 DL 음성인식/얼굴인식등을 이용해서 구현해 본 코드와 동작방식 상세 소개
     * OpenAI Whisper + NVDIA NeMo + DeepL + RetinaFace + DeepFace + Sckikit-learn + Gradio + Modal + PIL/OpenCV + ffpmpeg

동작방식

     * yt-dlp 로 유튜브 영상을 다운 받음
     * ffmpeg 으로 영상/음성 분리
     * 음성은
          + Whisper 에 넣어서 Transcripts 생성하고 DeepL로 번역
          + NeMo 에 넣어서 스피커ID(말하는사람) 추출
          + 두가지를 Timestamp 기반으로 매칭 시켜서 스피커 ID가 붙은 텍스트를 생성
     * 영상은
          + MTCNN/RetinaFace로 얼굴 위치를 추출. Modal로 병렬화해서 빠르게.
          + DeepFace/Scikit-Learn 으로 각 얼굴에 임베딩 추출하고 유니크 ID 부여
     * Jaccard Index로 FaceID 와 SpeakerID 매칭
     * 만들어진 프레임 메타데이터로 PIL/OpenCV로 프레임에 어노테이션 달기
     * ffmpeg Writer로 영상 생성

   동작 방식 설계가 기깔나네요.
"
"https://news.hada.io/topic?id=8188","나의 유튜브 수익 : Brick Experiment Channel","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  나의 유튜브 수익 : Brick Experiment Channel

     * 레고로 실험 영상을 만드는 290만 구독자 유튜버의 수익 통계
     * 영상 65개로 7억뷰
     * 총 수익은 $664000(8.4억원)
     * 평균 월 수익은 $12500(1580만원)
     * 플레이백 기준 CPM은 $3.20
     * 2017년 12월에 채널 시작해서 유튜브 파트너 프로그램은 2018년 6월부터 시작
"
"https://news.hada.io/topic?id=8139","Times가 선정한 2022년 최고의 발명품 200가지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Times가 선정한 2022년 최고의 발명품 200가지

     * 카테고리 : AI, 접근성, 앱&소프트웨어, AR&VR, 자동차, 뷰티, 소비자 전자제품, 디자인, 엔터테인먼트&게이밍, 실험적, 피트니스, 푸드&드링크, 그린 에너지, 가정용품, 의료, 메타버스, 아웃도어, 육아, 생산성, 로보틱스, Social Good, 스타일, 지속성, 장난감, 이동수단, 웰빙, 특별 언급 제품들
     * 주요 항목 몇가지
          + OpenAI DALL-E 2 와 DeepMind AlphaFold
          + 광고없는 검색 You.com
          + 다듬어지지 않은 소셜미디어 BeReal
          + 차세대 EV : Lucid Air
          + 전기 트럭의 주류화 : Ford F-150 Lightning
          + 헤어 드라이기의 재발명 : Zuvi Halo (태양이 빗물을 증발시키는 방식을 모방한 적외선 기술을 사용)
          + 혁신적인 디자인의 스마트폰 : Nothing Phone (1)
          + 우주를 보는 창 : NASA James Webb 우주 망원경
          + 새로운 세상 : Epic Unreal Engine 5
          + 음식을 고정하는 먹을 수 있는 테이프 : Tastee Tape
          + COVID-19 치료제 : Pfizer Paxlovid
     * 우리나라 제품들
          + 최고의 스타일러스를 내장한 갤럭시 S22 울트라
          + 영구 셀프 충전되는 삼성 태양열 리모콘
          + 플렉서블 프로젝터 : 삼성 The Freestyle
          + 실내용 온실 LG Tiiun
          + 가상 서울 광장 : Metaverse Seoul
          + 서빙 로봇 LG CLOi ServeBot

   Times가 선정한 2020년 최고의 발명품 100가지
   2021년 최고의 발명품 100가지
   작년엔 제가 뉴스를 안올린것 같은데요. 작년까지는 100가지 였는데 올해는 200가지 군요. 올해 뭔가 많았던 걸까요? ㅎㅎ

   헤어드라이기는 Dyson Supersonic 이 여태까지 최고였는데, Zuvi Halo가 새로운 도전장을 냈네요.
   머리 말리는 시간은 거의 같지만, Zuvi로 말리면 머리결이 더 부드럽고 손상이 덜 되는듯 하다네요. 물론, 뜨거운 바람때문에 볼륨감은 다이슨이 더 좋다고 ㅎㅎ
"
"https://news.hada.io/topic?id=8218","2023년 눈여겨 봐야 할 JavaScript 프로젝트들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    2023년 눈여겨 봐야 할 JavaScript 프로젝트들

     * Turborepo : Vercel이 만든 빌드시스템
     * Tauri : 데스크탑 앱 프레임워크
     * Bun : 새로운 JS 런타임
     * Remix : 풀스택 웹 프레임워크
     * Turbopack : Vercel이 만든 번들러
     * Astro : 정적 사이트 생성기

   TAURI를 자바스크립트 프로젝트로 보는게 맞을까요 ?? Rust프로젝트로 보아야 할듯 한데..

   자바스크립트 기반 프론트엔드를 다루는 도구를 표방하기 때문에, 타우리 자체가 어떤 언어로 작성되었는지는 크게 중요하지 않은 것 같습니다. 자바스크립트를 기반으로 한 프로젝트라기 보다는, 해당 주제의 프로젝트에 가까워 보여요.

   Tauri가 JavaScript로 만들어졌다는 게 아니라, JavaScript로 가볍게 데스크톱용 앱을 만들 수 있는 프레임워크라서 포함된 것입니다.
   비슷한 것으로, 위 목록에 있는 Bun도 JavaScript/TypeScript 런타임이지만 JavaScript로 만들어진 건 아니니까요. (Zig 언어로 개발)

   그러게요.. 저는 XXXX 프로젝트라고 하니 그냥 별 생각없이 XXXX로 개발되는 프로젝트들이라고 단정짓는
   인지편향이 있네요..

   그냥 JavaScript로 데스크탑 앱을 개발한다면 일렉트론 대신 사용하라고 얘기하는거라.. 애매하긴 합니다 ㅎㅎ

   그러게요.. TAURI의 깃허브를 보면 러스트가 압도적으로 많이 쓰이고 있는뎅.. ㅎ, 얼른 모바일 지원이 좀 안정화가 되었으면 좋겠네요..

   다행히? 긱뉴스에서 대부분 다뤘네요.
   Turborepo - 고성능 빌드 시스템
   Tauri - 작고 빠른 실행파일을 생성하는 데스크탑용 웹앱 프레임워크
   Bun - JavaScriptCore 기반의 빠른 JavaScript 런타임/트랜스파일러/NPM 클라이언트
   Turbopack: rust로 작성된 webpack의 후계자
   Astro : JavaScript를 최소한으로 배포하기
"
"https://news.hada.io/topic?id=8212","Rust Atomics and Locks by Mara Bos","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Rust Atomics and Locks by Mara Bos

   Mara Bos1, @rustlang 의 라이브러리팀 리더가 쓴 책의 웹무료 버전입니다. 여력이 되시면 이북이나 책으로 구매해서 보세요

   unsafe 를 스스로도 흑마법이라고 하면서도, 정작 tokio 등 알만한 라이브러리에서는 도배질로 사용 중? 가변, 불변 나눠서 에러 방지에 그리 좋다고 하면서, 불변에서 가변을 가능하게 하는 기능 (RefCell<T>)을 제공? 이 언어의 정체성은 진정 뭐란 말인가 ?

   결국 rust 를 제대로 사용할 수 있는 사람들은 기존 c++ 개발 좀 해본 사람들. 하지만 그들은 굳이 그럴 맘이 없어 보인다. 나도 그렇다. 이건 일종의 버즈워드. 저 괴상 망측 오버엔지니어링 lifetime 문법을 보라. 자기 합리화 끝판왕 The Rustonomicon 문서를 읽어봤는가.

   언어는 도구일 뿐이다. AWS나 디스코드 서버와 같이 보안성과 성능이 중요한 환경에서 그러한 유용한 도구를 잘 활용한 사례들이 많다. 그러한 도구들을 불필요하게 깎아내리기보다는 어떻게 잘 활용할지 생각하는 것이 좋을 것 같다.

   rust-lang

   c++ 이 너무 어려워서 잦은 실수,에러를 남발하는 이들을 위해 만들었다고 주장하지만, 정작 이런 부류 인간들은 언어 자체를 익히기도 어려운, 모순을 가진 언어.

   정작 잘 배운 이들도 잦은 실수를 한다. 그래서 메모리 안전성에 대한 보장은 생각보다 이점이 크다. NSA가 앞으로 메모리 안전 언어를 사용할 것을 적극적으로 권하는 것에는 상당한 이유가 있다.
"
"https://news.hada.io/topic?id=8167","긱뉴스 인기글, 긴글, 활발한 글 List 기능 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     긱뉴스 인기글, 긴글, 활발한 글 List 기능 추가

   긱뉴스가 오픈한지 3년을 넘어가면서 그동안 많은 뉴스가 등록되었습니다. 사이트의 특성상 모든 글이 뉴스 형태로 올라오다 보니 일정 기간이 지나면 묻히게 되는데요. 기존 글 중에서 인기 있었던 글을 다시 볼 수 있는 List 기능을 추가했습니다.

   현재는 투표수가 높은 인기글, 읽을만한 긴 글, 댓글이 활발한 글들을 오픈 후 전체 기간 및 최근 6개월간으로 한정하여 볼 수 있도록 구성했습니다. 점차 다양한 리스트 들을 추가하도록 하겠습니다.

   바로가기 링크는 Lists 라는 제목으로 사이트 하단 메뉴에 두었는데요. 구상중인 몇가지 리스트가 더 추가되면 상단 메뉴쪽으로 옮겨보겠습니다.

   다른 두 개는 알겠는데 ""읽을만한""은 기준이 무엇인가요?

   그냥 내용이 많은 글을 뽑아봤습니다. 주로 내용이 긴 것들은 한번 읽어볼만해서요 ;)

   항상 감사합니다 :)

   감사합니다. 꼭 있었으면 했던 기능입니다.

   감사합니다. :-)

   해당 리스트 RSS 피드를 지원해주실 수 있을까요?

   이게 몇달씩 변화가 거의 없는 리스트라서요. RSS로 받는게 의미가 없을것 같습니다. 리스트 간에 중복도 많이 되고요.

   정말 좋은 것 같습니다.

   good!!!

   좋은 기능 업데이트 감사합니다!
"
"https://news.hada.io/topic?id=8098","오버추어 재단의 출범에 대한 오픈스트리트맵 재단의 입장 표명","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   오버추어 재단의 출범에 대한 오픈스트리트맵 재단의 입장 표명

     * 오버추어(Overture)는 오픈스트리트맵(OpenStreetMap)의 대체재를 의도하지 않으며, 오픈스트리트맵의 포크를 의도하지도 않음
     * 오버추어는 오픈스트리트맵을 보충하기 위한 용도
     * 오버추어 지도를 활용하는 개별 기업들은 오픈스트리트맵에 직접적으로 기여할 것으로 예상
     * 오픈스트리트맵 재단의 요구
         1. 오버추어가 오픈스트리트맵 재단 및 커뮤니티에 참여
         2. 역으로 오버추어의 모든 전략적 논의에 오픈스트리트맵 재단이 참여

   개방형 지도 데이터 구축을 위한 Overture Foundation 출범
"
"https://news.hada.io/topic?id=8182","Lite XL - C와 Lua로 개발된 경량 텍스트 에디터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Lite XL - C와 Lua로 개발된 경량 텍스트 에디터

     * 가볍고, 간단하고, 빠르며, 기능이 풍부하고, 확장 가능
          + 3MB 바이너리에 10MB 이하의 램 사용
     * 최소한으로 구성하고, 많은 기능은 Lua 플러그인으로 구성
          + LSP 플러그인으로 자동완성 지원
     * 윈도우/리눅스/맥(레티나 지원)
     * 멀티 커서 에디팅

   엑스라지 인가봐요 ㅎ

   GUI렌더링에 SDL을 사용하는군요.
   혹시나 해서 봤더니 한글입력은 되는데, 한글글꼴을 사용해야 보입니다.
   그리고 '한글 끝글자 버그'가 있네요. (윈도우버전입니다)
"
"https://news.hada.io/topic?id=8113","LastPass 사용자들의 정보/암호가 해커의 손에 넘어감 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    LastPass 사용자들의 정보/암호가 해커의 손에 넘어감

     * 8월의 소스코드 유출이 생각보다 심각. 그때는 개인정보는 포함 안되었다고 했으나, 그 정보 기반으로 다른 직원을 해킹하여 유출된 것 같다고
     * LastPass의 공지에 의하면 고객의 계정정보/회사명/사용자명/청구주소/이메일주소/전화번호/IP등을 포함
     * 또한, 웹사이트URL/사용자명/암호 같은 정보들이 포함된 고객 저장소(Vault)의 복사본을 가져갔음
     * LastPass측에 의하면 Vault의 정보는 256bit AES 암호화 되어 사용자의 마스터 패스워드 없이는 볼 수 없다고
     * LastPass 사용자는 즉시 마스터 비밀번호와 Vault에 저장된 모든 비밀번호를 바꾸는 것을 추천

   문제 없다는 LastPass의 말과 달리.. 이거 기반으로 자신의 크립토 월렛이 해킹되었다는 사례 제보가 있긴 하네요.
   https://twitter.com/cryptopathic/status/1606416137771782151
   확인은 안된 정보라 100% 믿기는 어렵습니다.

   LastPass 소스코드 유출
   Okta, GitHub Repo를 해킹 당해서 소스코드 유출

   LastPass 에서 2년간 일한 엔지니어입니다.
   https://twitter.com/ejcx_/status/1606428769731878913

   유출된게 지금까지중 가장 심각하다며, 추가 설명을 몇가지 합니다.
"
"https://news.hada.io/topic?id=8173","The Linux Command Line 5판 공개 [555p 이북]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 The Linux Command Line 5판 공개 [555p 이북]

     * LinuxCommand.org 에 있는 내용을 더 상세히 설명한 책
     * 커맨드 라인 기초부터, 쉘 스크립팅 및 고급 기능들까지 모두 정리
     * CC BY-NC-ND로 PDF는 무료 공개. 출판본은 유료(번역본도 있음)

   https://explainshell.com/
   스택오버플로우에서 쓸만해 보이는 명령어를 찾았는데 파라메터들의 역할이 궁금할 때면 찾곤하는 페이지 입니다. 본문의 저 책을 보며 함께 이용하면 더 좋을 것 같네요.

   Linux 배우기에는 정말 좋은 책이죠!
"
"https://news.hada.io/topic?id=8193","CircleCI에 저장된 모든 Secret들을 교체하세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    CircleCI에 저장된 모든 Secret들을 교체하세요

     * 1월4일자로 Circle CI에 보안 사고가 나서 조사중이며, 모든 키를 교체했음
     * 고객들도 현재 저장된 모든 키/토큰들을 교체할 것을 요청
          + Github OAuth Token, 프로젝트 API Token, 프로젝트 환경 변수, Context 변수
          + 사용자 API 토큰, SSH Key, Runner Token
     * 보안 레이어 추가할 것을 권장 : OIDC 토큰 사용, 접속 IP Range 설정, Contexts 사용
"
"https://news.hada.io/topic?id=8112","구글, 비디오 안의 내용도 검색 가능한 "Search in Video" 기능 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             구글, 비디오 안의 내용도 검색 가능한 ""Search in Video"" 기능 공개

     * 비디오 아래의 ""Search in Video"" 에서 단어를 입력하면, 단어가 있는 클립 위치를 찾아서 클릭 가능하게 보여주는 기능
     * 스마트폰 구글앱 내에서 이용 가능
     * 인도에서 먼저 공개했고, 일부 미국 사용자들도 사용 가능 하기 시작한듯
"
"https://news.hada.io/topic?id=8184","구글은 RISC-V가 "Tier 1" 안드로이드 아키텍처가 되길 원한다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                구글은 RISC-V가 ""Tier 1"" 안드로이드 아키텍처가 되길 원한다

     * RISC-V Summit 키노트에서 ""Arm과 동등하게 Tier 1 이 되기를 원한다""며 공식적으로 지원을 약속
     * 안드로이드가 RISC-V에서 최적화되어 실행되려면 ""많은 작업""이 필요하고 ""몇년 정도""가 걸릴 것이지만, 이미 작년 9월부터 작업을 시작
     * RISC-V on Android 는 64비트 전용이 될 것
     * 초기 에뮬레이터 지원은 2023년 초에 나오고, Java용 Android RunTime (ART) 지원은 1분기 예정
     * ARM은 불안정하고 변덕스러운 비즈니스 파트너가 되었음

   알리바바에서 안드로이드를 RISC-V 용으로 포팅 시도한게 있기는 한데, 이제 공식화 되었네요.
"
"https://news.hada.io/topic?id=8152","ESP32 아두이노를 위한 WireGuard 구현","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ESP32 아두이노를 위한 WireGuard 구현

     * lwIP(Lightweight IP) Stack용으로 구현된 WireGuard를 아두이노에 맞게 조정
     * lwIP WireGuard의 특징
          + malloc을 사용하지 않아서 고정된 RAM크기에 적합
          + C로만 작성
          + 스택 크기/플래시 및 램을 아주 적게 사용
     * BSD3 라이센스

"https://news.hada.io/topic?id=8131","APITable - 오픈소스 AirTable 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      APITable - 오픈소스 AirTable 대체제
   maclloc은 malloc의 오타겠죠???

"
     * 스프레드시트 형태의 API-oriented & Embed-friendly Visual DB
     * 실시간 협업 가능 (OT 알고리듬)
     * 시트(컬럼) 정보로 Automatic Form 구성
     * 무제한 크로스테이블 링크 가능
     * 다양한 권한 기능 : Row/Column/Folder/Sub-Folder/File
     * 엔터프라이즈 기능: SAML, SSO, Audit, AutoBacktup, Data Exporter, Watermark
     * 2023/1에 첫번째 릴리즈 예정

   음.. gitpod.io 실행 시켜 봤는데 아직 안정화가 덜 됐네요 오류가 많아서 안정화가 좀 되어야 쓸만할 꺼 같아요
"
"https://news.hada.io/topic?id=8215","Monorepo 빌드 도구들 비교 - Bazel, Pants, NX, Earthly","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Monorepo 빌드 도구들 비교 - Bazel, Pants, NX, Earthly

     * 모노레포 사용추세는 점차 증가중이지만, 변경/캐시/재빌드로 연관되는 문제들 때문에 어떤 툴을 선택하는지가 중요함
     * 고려할 주요 기능 : 언어 지원 여부, 러닝 커브, 캐싱, 빌드 검사, 다재다능한가(Versatility)
     * 여러분 조직이 개발 언어, 작업흐름, 코드 베이스 크기가 구글과 유사하다면 Bazel
     * Bazel로의 마이그레이션 비용 및 Python 지원이나 BUILD 작성에 불만이라면 Pants
     * 주로 JavaScript / TypeScript 라면 NX 도 훌륭한 선택
     * 컨테이너화된 마이크로서비스거나 시스템 수준 종속성이 있다거나, 다소 비표준 작업이 있다면 Earthly

   Monorepo에 대한 모든 것

   이 글도 Earthly가 작성한 것이니, 어느정도 감안하고 보세요~
"
"https://news.hada.io/topic?id=8191","Python SQL 엔진을 밑바닥부터 작성해 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Python SQL 엔진을 밑바닥부터 작성해 보기

   Python SQL 엔진인 SQLGlot 개발자가 자신이 노력해 온 과정을 정리/요약한 글
     * Introduction
     * Why ?
     * How?
     * Tokenizing
     * Parsing
     * Optimizing
     * Planning
     * Executing
"
"https://news.hada.io/topic?id=8121","OpenAI CookBook - 공식 예제 코드와 프롬프트 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  OpenAI CookBook - 공식 예제 코드와 프롬프트 모음

     * OpenAI API로 다양한 작업들을 수행하는 예제 코드와 프롬프트들
     * 코드 예제(대부분 Python)
          + Write : 카피라이팅, 블로그, 제품 설명, 질문 생성
          + Explain : 문서에 대한 Q&A, 엔티티 추출, 요약(Summarization), 분류(Classification)
          + Edit : 편집, 번역
          + Compare : 시맨틱 검색, 추천, 클러스터링, Near-duplicate 감지
"
"https://news.hada.io/topic?id=8093","LearnGPT - ChatGPT 프롬프트들 모음 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      LearnGPT - ChatGPT 프롬프트들 모음

     * ChatGPT 에게 물어본 프롬프트와 실제 답변들을 캡쳐
     * 해커뉴스 스타일로 리스팅 Hot/Newest/Best
     * 태그 기능으로 종류별 필터링 가능
"
"https://news.hada.io/topic?id=8103","OpenJDK, GraaVM Native 머지를 위한 프로젝트 Galahad 제안","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             OpenJDK, GraaVM Native 머지를 위한 프로젝트 Galahad 제안

     * GraalVM 커뮤니티 에디션의 일부 기능을 OpenJDK에 합치기 위한 프로젝트
     * Java 17 에서 제외되었던 AOT/JIT 컴파일러의 복귀
     * Galahad 는 OpenJDK의 서브프로젝트로 실행되며, 별도의 Repo를 유지하고 주기적으로 메인 Repo에 리베이스 될 것 (Loom 과 Lambda가 그랬던 것처럼)
     * JDK 20을 초기 베이스라인으로 타겟
"
"https://news.hada.io/topic?id=8190","웹 해커 vs. 자동차 산업: 페라리,BMW,롤스로이스,포르쉐 등의 치명적인 취약점","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             웹 해커 vs. 자동차 산업: 페라리,BMW,롤스로이스,포르쉐 등의 치명적인 취약점

     * 자신들이 찾아낸 자동차 회사들의 취약점을 모두 정리
          + 실제로 어떻게 해서 정보를 취득했는지 까지 스크린샷과 함께 보여줌 (벤츠, 기아, 페라리, 현대, 혼다,..)
     * 기아, 혼다, 인피니티, 니산, 아큐라
          + VIN넘버 만으로 : 원격 잠금해제, 엔진 시동/끄기, 위치, 헤드라이트 켜기, 클락션 누르기
          + VIN넘버로 원격 계정 탈취 및 개인정보 취득 (이름, 전화번호, 이메일, 주소)
          + 원격으로 사용자 잠그고, 소유권을 변경
               o 기아의 경우는 원격으로 360-뷰 카메라를 접근도 가능
     * 메르세데스 벤츠
          + 잘못된 SSO를 통해서 수백가지 미션 크리티컬 내부 애플리케이션에 접근 가능
               o SSO뒤의 여러 GitHub 인스턴스
               o 회사 전체 내부 채팅 도구. 거의 모든 채널에 조인 가능
               o SonarQube, Jenkins 및 빌드 서브들
               o AWS 인스턴스를 관리하는 내부 클라우드 배포 서비스
               o 내부 차량 관련 API
          + 여러 시스템에 원격코드실행(RCE)
          + 메모리 릭을 통해서 직원/고객 개인정보 접근
     * 현대, 제네시스
          + 이메일 주소 만으로: 원격 잠금 해제, 엔진 시동/끄기, 위치, 헤드라이트 켜지, 클락션 누르기
          + 이메일 주소만으로 원격 계정 탈취 및 개인정보 취득 (이름, 전화번호, 이메일, 주소)
          + 원격으로 사용자 잠그고, 소유권을 변경
     * BMW, Rolls Royce
          + 회사 전반의 SSO 취약점으로 직원 어플리케이션에 접근
               o 내부 딜러 포털에 접근해서 VIN 넘버 조회하여 판매 문서에 접근
               o SSO뒤의 모든 어플리케이션에 접근. 원격 근무자 및 딜러들이 사용하는 것 포함
     * 페라리
          + 모든 페라리 사용자 계정의 완전한 제로 인터랙션 탈취 가능
          + IDOR로 모든 페라리 사용자 계정에 접근
          + 접근 권한관리가 없어서 공격자가 직원의 ""백 오피스"" 관리자 계정 및 사용자 계정을 생성,수정,삭제 가능
          + api.ferrari.com에 HTTP Routes 추가 가능. 기존 모든 REST 커넥터를 볼수 있음
     * 그외 Spireon, Ford, Reviver, Porsche, Toyota, Jagurar, Land Rover 등

   와.... 자동차 보안 문제 심각하네요.. 진짜
"
"https://news.hada.io/topic?id=8219","MemoryPack - C# 및 Unity를 위한 초고성능 제로 인코딩 바이너리 시리얼라이저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          MemoryPack - C# 및 Unity를 위한 초고성능 제로 인코딩 바이너리 시리얼라이저

     * MessagePack for C#의 최대 기여자인 Yoshifumi Kawai님이 CTO/CEO로 활동하고 있는 Cysharp의 오픈소스 프로젝트
     * 초고성능을 지향하는 제로 인코딩 디자인 사용
     * C# 11과 증분 소스 생성기를 이용 동적 코드 생성 없음
     * 최신 I/O API 지원
     * 리플렉션 없는 비제네릭 API
     * 기존 인스턴스로 역직렬화 가능
     * 순환 참조 직렬화
     * TypeScript 코드 생성 및 ASP.NET Core Formatter 지원
     * .NET 소스 생성기를 통한 Unity (2021.3) IL2CPP 지원
     * NativeAOT 대응 완료(.NET NativeAOT의 버그로 인해 .NET 8에서 지원 예정)

   제목의 제품 이름이 잘못된 것 같습니다. MemoryPack입니다.
   아마도 해당 저자의 이전 제품인 MessagePack for C#과 살짝 헷갈리신 것 같습니다. 겉보기에도 비슷하니까요.

   네 그렇네요. 좀 더 신중하게 확인해야겠습니다. 제목과 본문의 수정은 어떻게 하나요?

   운영자 분께서 이미 제목을 수정하신 것으로 보입니다.
"
"https://news.hada.io/topic?id=8159","Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2023년 1월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2023년 1월)

   현재 근무중인 스타트업에서 같이 일할 멤버를 찾고 계시다면
   회사 소개 / JD / 위치 / 리모트 가능 여부 / 연락방법(이메일,웹사이트) 등을 적어주세요.
   ""멤버가 직접 1개의 댓글로 홍보를 작성""하시면 됩니다. (서치펌 등은 불가)

   이 글은 매월 첫번째 월요일에 등록됩니다.
   해당 회사의 공고에 관심있으시면 기재된 메일등으로 연락하시기 바랍니다.

   작성 예)

   하다 | 프론트엔드 개발자, 디자이너 | 서울 역삼 | Remote 가능 | https://hada.io | jobs@hada.io
   하다는 긱뉴스를 개발 및 운영하는 스타트업 입니다. 저희는 이러 저러 해서 엄청 좋은 회사입니다~~
   [1] 프론트엔드 개발자 JD : 내용 또는 URL
   [2] 디자이너 JD : 내용 또는 URL

   🎮 오피지지 | 프론트엔드 개발자, 모바일 개발자, 디자이너, PM, 제작PD 등 | 서울 삼성 | Remote 가능 | ⭐(채용사이트) https://www.opgg.team | ⭐(채용블로그) https://log.op.gg | recruit@op.gg

   🚀 2022 천만불 수출의 탑 달성! 오피지지(OP.GG)는 전세계 유저들에게 전에 없던 최고의 게임 플레이 경험을 제공하는 글로벌 No.1 게임 서비스 플랫폼 스타트업입니다.

   우리는 온라인을 통한 진정성 있는 인간적 가치를 경험한 사람들이 모여, 세상에 그 가치를 증명해 나갑니다. 게이머들의 일상을 점령하는 것을 비전으로 하여, 게이머들이 언제 어디서나 가장 먼저 떠올리는 서비스를 만들어나가고 있습니다.

   ✔️Electron Engineer(Desktop App) : https://apply.opgg.team/o/32600

   ✔️Front-end Engineer(Desktop App) : https://apply.opgg.team/o/32663
   ✔️Front-end Engineer(OGT) : https://apply.opgg.team/o/32599
   ✔️Front-end Engineer (ER) : https://apply.opgg.team/o/64443

   ✔️Android Engineer (LoL Mobile) : https://apply.opgg.team/o/10964
   ✔️iOS Engineer (LoL Mobile) : https://apply.opgg.team/o/10972

   ✔️ Senior Product Manager (LoL Web) : https://apply.opgg.team/o/27702
   ✔️ Product Manager (Game Stats Operations Cell) : https://apply.opgg.team/o/61372

   ✔️ Business Strategy (Business Strategy Cell) : https://apply.opgg.team/o/33350
   ✔️ Business Development Operations (Business Strategy Cell) : https://apply.opgg.team/o/33351

   ✔️ Product Designer (Game Stats Operations Cell) : https://apply.opgg.team/o/61077
   ✔️ Product Designer (Esports & Duo) : https://apply.opgg.team/o/61082
   ✔️ UX/UI Designer (Branding Cell) : https://apply.opgg.team/o/61090

   ✔️ 제작PD (Studio Contents Lab Cell) : https://apply.opgg.team/o/60631
   ✔️ Business Strategy (Studio Business Cell) : https://apply.opgg.team/o/60259
   ✔️ 매체 영업 (Studio Sales Cell) : https://apply.opgg.team/o/60244

   [인류기억저장소 - 닷슬래시대시 | 9호선 신논현역]

   ▼ 회사 소개
   인류 기억 저장 프로젝트를 미션으로 하는 닷슬래시대시(Dot Slash Dash)는 나만의 의미 있는 기억을 저장하는 동영상 기반의 새로운 소셜 플랫폼입니다.

   닷슬래시대시 이용자들(플레이어)은 최대 10개의 클립, 최대 4분 길이의 기억 조각 영상을 있는 그대로 기록합니다.
   영상에는 간단한 메모와 방문한 장소의 지도 링크, SNS 페이지 링크 등 버튼을 추가해 정보를 제공할 수 있습니다.

   브랜드는 플레이어들의 일상을 담은 라이프로그 영상을 활용해 자연스럽게 제품을 노출하고 홍보를 시작할 수 있습니다.
   닷슬래시대시의 영상 콘텐츠는 그 자체로 훌륭한 브랜디드 콘텐츠(Branded Contents)가 됩니다.

   ▼ 앞으로 닷슬래시대시가 만들어 갈 가치
   우리는 기존 SNS 서비스들과 다르게 자극적인 것보다 개인의 일상과 라이프 스타일에 집중하고 있습니다.

   '인류기억저장소'라는 미션에서 느껴지는 것처럼 자신의 경험을 업로드하고 보존하는 방법을 제공하며, 동시에 유사한 주제에 관심이 있는 다른 사람들과 연결하고 소통할 수 있는 플랫폼이 되는 것이 목표입니다.

   ▼ 닷슬래시대시 개발자가 되면 경험할 수 있는 것들
    1. 동영상 스트리밍 서비스 구축과 운영
    2. 취향을 기반으로 하는 추천 알고리즘과 AI를 활용한 개인화 서비스
    3. 비슷한 관심사를 가진 사용자들이 모일 수 있는 실시간 커뮤니티와 리워드($) 시스템

   ▼ 채용 정보
     * 개발 직군: iOS 개발자, 안드로이드 개발자, 백엔드 개발자
     * 채용 페이지: https://recruit.dotslashdash.com
     * 지원서 접수 및 커피챗 요청: 조은우 (ewcho@dotslashdash.com)

   [🗿🗿 모아이스(moais) - 스포츠 에듀테크 스타트업]

   [회사 소개]모아이스는 인공지능 기술과 데이터를 통해 스포츠 교육 및 연습의 방식을 혁신하는 서비스를 개발하는 회사입니다.

   기존에는 스포츠를 배우기 위해서는 2가지 방법이 있었습니다. 오프라인 레슨 혹은 유튜브 콘텐츠 등을 통한 독학이 그것들입니다.

   하지만 오프라인 레슨에서 자신과 맞는 코치를 만나기란 굉장히 어렵고, 위치/장소를 고려하면 거의 불가능한 경우도 많습니다. 독학은 나에게 맞는 문제점 진단과 솔루션을 찾는 것이 매우 어렵습니다.모아이스는 이를 개선하기 위해 인공지능 기술과 빅데이터 기술을 이용하여 기존 방식들의 장점들을 극대화하고 단점들을 최소화하는 새롭고 혁신적인 방법으로 스포츠를 배우거나, 즐거운 연습을 할 수 있게 하는 서비스를 개발하고 있습니다.현재는 첫 번째 타켓 스포츠인 골프에 집중하고 있고, 차후 다른 스포츠 분야로 확장할 것입니다.

   [JD]💻👨‍💻 BackendDeveloper: https://www.notion.so/moais/60b0442cf5d344f69310fb7877cd73d7

   [위치]서울 양재동(AI 양재 허브)

   [근무 형태]Remote 불가능

   [연락 방법]service-tech@moais.co.kr

   🎧 소리하는 회사! 가우디오랩에서 소중한 가우딘을 모십니다!
   🎧 강남구 삼성역 인근 / 자율근무 / careers@gaudiolab.com
   🎧 채용페이지는 여기 [ https://gaudiolab.com/ko/careers/ ]
   🎧 어서오세요!
     * C++ Software Engineer
     * Mobile SDK Software Engineer
     * AI Engineer

   🎧 가우디오랩을 소개해요
   가우디오랩은 세계적으로 손꼽히는 오디오 기술을 통해, 여러분께서 전혀 경험해 보지 못했던 새로운 차원의 소리 경험을 제공하는 회사입니다. 메타버스의 완성을 담당하는 스페이셜 오디오(공간음향)와 AI 오디오 기술의 가장 첨단, 그 이상의 경지에서 비교 불가한 오디오 기술의 초격차를 구현해내고 있습니다.

   가우디오랩에서 매일 창조되는 새로운 소리들은 네이버, 플로, 벅스뮤직 등 국내외 유수의 서비스에 적용되어, 여러분의 귀에 가닿고 있습니다. 이미 매일 약 2천만명의 사용자가 가우디오랩의 소리기술을 경험하고 있다는 사실! 가우디오랩과 함께 폭발적으로 성장하며 스케일업을 만들어나갈 미래 가우딘을 정중히 모시고자 합니다.

   -공고 마감되었습니다-

   [🍋 레몬베이스는 회사와 구성원의 건강한 성장을 기술로 실현하는 SaaS 스타트업입니다.]

   사람은 깨어 있는 시간의 70%를 일터에서 보냅니다. 그 시간이 돈을 벌기 위한 수동적인 시간이 아니라, '나와 조직의 성장과 성공을 위해 주도적으로 활용하는 시간'이 될 수 있도록 레몬베이스는 성장하고 성과를 내는 방식을 기술을 통해 혁신하고 있습니다.

   레몬베이스 팀은 이 문제를 지속적인 성과관리(Continuous Performance Management)로 해결할 수 있다고 믿습니다. 레몬베이스를 통해 일 년에 한두 번이 아니라 일 년 내내 목표를 스스로 설정하고, 그 과정을 실시간으로 공유하고, 또 1:1 미팅을 통해 코칭을 주고받으며, 더 자주 동료들로부터 칭찬과 피드백을 받을 수 있습니다.

   2021년, 국내 SEED 라운드로는 매우 드물게 62억 원의 대규모 투자를 유치한 레몬베이스는 롯데제과, 카카오모빌리티, 쏘카, 위메프, 버킷플레이스, 지그재그 등, 시대를 선도하는 수많은 기업과 함께 성과관리를 혁신하고 있습니다.

   ""회사와 구성원의 건강한 성장""이라는 미션을 가진 레몬베이스와 함께 성장할 미래의 크루를 찾고 있습니다. 레몬베이스 팀의 여정에 동참해 주실 분들을 기다립니다 :)
     * 팀 소개 / 채용페이지 : lemonbase.team
     * 엔지니어링 그룹 페이지 : lemonbase.team/group_engineering

   ✔️ Frontend Engineer : https://www.lemonbase.team/recruit/fe
   ✔️ Backend Engineer : https://www.lemonbase.team/recruit/be
   ✔️ QA Engineer : https://www.lemonbase.team/recruit/qa
"
"https://news.hada.io/topic?id=8203","Slack의 비공개 GitHub Repo 도난","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Slack의 비공개 GitHub Repo 도난

     * 일부 슬랙 직원의 토큰이 유출되어, 외부에 호스팅하고 있는 GitHub Repo에 접근한 것을 발견했다고 공식 발표
     * 사용자 데이터나 슬랙의 메인 코드베이스에는 접근하지 못한 것으로 파악
     * 유출 사실을 알자마자 도난 토큰을 무효화
     * 사용자 측에서 취할 액션은 없음
"
"https://news.hada.io/topic?id=8097","Netflix, Nike Training Club을 12/30에 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Netflix, Nike Training Club을 12/30에 출시

     * Nike의 피트니스 콘텐츠를 넷플릭스 회원들이 스트리밍 가능
     * 약 30시간으로 구성된 종류별 다수의 에피소드
     * 2개의 배치로 출시되며 첫번째 배치에 포함되는 프로그램은
          + 기본기와 함께 하는 킥스타트 피트니스 (13개 에피소드)
          + 강한 코어로 가는 2주 (7개)
          + 빈야사 요가와 사랑에 빠지다 (6개)
          + 타라와 HIT&스트렝스 (14개)
          + 필 굿 피트니스 (6개)
     * 두번째 배치는 내년에 공개 예정

   발표하자 마자 Peloton 주식이 7% 하락했네요..
   재미나게도.. Peloton의 CEO인 Barry McCarthy는 1999년 부터 2010년까지 11년간 Netflix의 CFO였습니다.
   https://www.linkedin.com/in/barry-mccarthy-a22bb68/details/experience/
"
"https://news.hada.io/topic?id=8147","Gauss - macOS용 Stable Diffusion 네이티브 앱 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Gauss - macOS용 Stable Diffusion 네이티브 앱 오픈소스

     * Swift UI 와 ml-stable-diffuion 으로 만든 네이티브 앱
          + ml-stable-diffuion : Apple이 직접 만든 Core ML 로 실행되는 Stable Diffusion
     * Speed/Quality 조절 및 Creative/Predictable 슬라이더 제공
     * 생성된 이미지는 Finder로 드래그앤드랍 가능
"
"https://news.hada.io/topic?id=8163","2022년 세계에서 가장 혁신적인 국가들 인포그래픽","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2022년 세계에서 가장 혁신적인 국가들 인포그래픽

     * 한국이 6위. 동아시아 및 오세아니아에서 가장 높음
     * 스위스 64.6 > 미국 61.8 > 스웨덴 61.6 > 영국 59.7 > 네덜란드 58 > 한국 57.8 > 싱가폴 57.3 > 독일 57.2 > 핀란드 56.9 > 덴마크 55.9
     * WIPO 글로벌 혁신 지수 기준. 7개 카테고리 81개의 지표를 사용
          + 카테고리 : 비즈니스, 시장, 인프라, 인적자본, 기관, 창의적 결과물, 지식 & 기술 결과물

   흠... 미국이 2위에다가 중국을 별로 좋아하진 않지만 그래도 중국이 10위권 안에도 못 들어간다는게 신뢰성이 좀 떨어져보이는 것 같기도 하네요
"
"https://news.hada.io/topic?id=8091","tiktoken - OpenAI의 Tokenizer","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      tiktoken - OpenAI의 Tokenizer

     * OpenAI의 모델들과 사용하기 위한 빠른 BPE (Byte pair encoding) Tokenizer
     * 기존 Tokenizer(Huggingface)에 비해 3~6배 빠름
     * PyPI 로 설치 가능
     * Python + Rust 오픈소스
"
"https://news.hada.io/topic?id=8168","Revolt - 오픈소스 디스코드 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Revolt - 오픈소스 디스코드 대체제

     * Rust를 백엔드로 사용
     * Discord와 유사한 UI
     * 다양한 테마와 커스터마이징 가능
"
"https://news.hada.io/topic?id=8107","Cadl - Cloud Service API를 설명하고 스키마를 생성해주는 언어 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Cadl - Cloud Service API를 설명하고 스키마를 생성해주는 언어

     * Microsoft가 만든 IDL(Interface Description Langauge)
     * API Description Language, 클라이언트/서버 코드, 문서 등을 생성 가능
     * REST, GraphQL, gRPC 및 다른 프로토콜들 간에 공통적인 API 형태를 설명할 수 있는 확장성이 뛰어난 핵심 언어 Primitive를 제공

   AWS Smithy - 서비스 및 SDK 정의용 언어
"
"https://news.hada.io/topic?id=8124","Learn Prompting - 프롬프트 작성법 배우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Learn Prompting - 프롬프트 작성법 배우기

     * Basics: 프롬프트 엔지니어링(PE) 소개와 간단한 PE 테크닉
     * Advanced Applications: 좀 더 강력하고 발전된 PE 응용
     * Applied Prompting: 커뮤니티 멤버들이 작성한 PE 프로세스들
     * Reliability: LLM들을 더 안정적으로 만드는 방법
     * Images: DALL-E / Stable Diffusion 같은 Text-To-Image 모델을 위한 PE
     * Prompt Injection: PE 해킹
     * Prompting IDEs: 다른 PE 도구들
     * Prompt Tuning: 프롬프트 미세 조정하기
"
"https://news.hada.io/topic?id=8206","2022 JavaScript Rising Stars","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2022 JavaScript Rising Stars

   1년간 받은 깃헙 Star 기준으로 뽑은 JS 프로젝트 순위
     * 인기프로젝트: Bun > Tauri > React > Next.js > Vite > tRPC > Astro > VS Code > Tabby > Playwright
     * 프론트엔드: React > Qwik > Solid > Svelte > Vue.js 2
     * React: Next.js > tRPC > Mantine > Excalidraw > Zustand
     * Vue: Slidev > Nuxt 3 > Vue Element Admin > AutoAnimate > Headless UI
     * 백엔드/풀스택: Next.js > tRPC > Astro > Remix > Nest
     * 빌드도구: Vite > Turborepo > swc > Nx > Rome
     * CSS in JS: UnoCSS > vanilla-extract > Styled Components > Stitches > Emotion
     * Testing: Playwright > Storybook > Cypress > Puppeteer > Vitest
     * Mobile: React Native > Expo > React Native Skia > Ionic > Quasar
     * Desktop: Tauri > Electron > Nativefier > Neutralino > electron-builder
     * Static Sites: Next.js > Astro > Docusaurus > Nuxt 3 > Nextra
     * State Management: Zustand > Pinia > Jotai > XState > Recoil
     * GraphQL: TanStack Query > Directus > REdwood > Hasura GraphQL Engine > Gatsby

   오타난 것 같습니다
   Quik -> Qwik

   2021 JavaScript Rising Stars
   2020 JavaScript Rising Stars
"
"https://news.hada.io/topic?id=8155","TypeScript 배우기에 좋은 오픈소스 프로젝트는?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     TypeScript 배우기에 좋은 오픈소스 프로젝트는?

   HN에 올라온 질문의 답들
     * Excalidraw https://github.com/excalidraw/excalidraw
     * Cal.com https://github.com/calcom/cal.com
     * Supabase https://github.com/supabase/supabase
     * AppWrite https://github.com/appwrite/appwrite
     * n8n https://github.com/n8n-io/n8n
     * AppSmith https://github.com/appsmithorg/appsmith
     * Directus https://github.com/directus/directus
     * BudiBase https://github.com/Budibase/budibase
     * Hasura https://github.com/hasura/graphql-engine
     * Hoppscotch https://github.com/hoppscotch/hoppscotch
     * Nest https://github.com/nestjs/nest
     * Linen https://github.com/Linen-dev/linen.dev
     * Medusa https://github.com/medusajs/medusa

   대부분이 긱뉴스에서 소개되었던 프로젝트 인게 흥미롭네요 ;)
     * Excalidraw - 오픈소스 가상 칠판 협업도구
     * Supabase 공개 베타 시작 - 오픈소스 Firebase 대체제
     * Appwrite - 프론트엔드/모바일 개발자를 위한 오픈소스 백엔드 PaaS
     * n8n.io - 오픈소스 워크플로우 자동화 엔진 ( Zapier 대체제 )
     * Appsmith - 업무용 도구를 쉽게 만드는 Low-Code 오픈소스
     * Budibase - 사내용 도구 개발을 위한 오픈소스 Low-Code 플랫폼
     * Hoppscotch - API 리퀘스트 빌더
     * Linen - 오픈소스 슬랙/디스코드 대체제
     * Medusa - 헤드리스 이커머스 엔진, 오픈소스 Shopify 대체제
"
"https://news.hada.io/topic?id=8141","2022년 소프트웨어 엔지니어 급여 통계","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         2022년 소프트웨어 엔지니어 급여 통계

     * 전세계 15만명 이상의 급여 데이터 기반
       → 급여,주식,상여금을 포함한 연간 총 보상(Compensation) 금액
     * 기술 레벨별 회사 연봉 순위
          + 초급 엔지니어 (I, 0~2년) : TWO SIGMA $274k > stripe $266k > cruise $238k > Roblox $234k > Linkedin $226k > databricks $221k > Waymo $220k
          + 엔지니어 (II, 2~5+년) : databricks $443k > cruise $361k > Roblox $354k > snowflake, TWO SIGMA $330k > ByteDance $323k > stripe $320k > airbnb $318k
          + 시니어 엔지니어(III, 5+년) : databricks $552k > cruise $551k > Netflix $550k > stripe $488 > snowflake $466k > instacart $465k > Linkedin $458k
          + 스탭 엔지니어(IV, 10+년) : stripe $688k > coinbase $673k > Pinterest $650k > airbnb $601k > Waymo $590k > facebook $567k > ByteDance $564k
          + 수석 엔지니어(V, 15+년) : facebook $1.04m > stripe $900k > airbnb $796k > apple $752k > Netflix $725k > Twitter $700k > Snap $690k
     * 기타 성장하는 직군들
          + 소프트웨어 엔지니어링 매니저 : Rippling $910k > airbnb $737k > Netflix $735k > stripe $697k > coinbase $680k
          + 프로덕트 매니저 : airbnb $489k > stripe $481k > Roblox $436k > qualtrics $435k > lyft $435k
          + 프로덕트 디자이너 : Netflix $400k > Opendoor $350k > Lyft $335k > coinbase $330k > Doordash $329k
          + 하드웨어 엔지니어 : Waymo $376k > Broadcom $370k > facebook $350k > Google $310k > Intuitive $295k
     * 급여가 높은 도시(중간값)
          + 미국: 샌프란시스코 베이 $234k > 시애틀 $213k > 뉴욕 $187k > 포틀랜드 $174k > 로스엔젤레스/산디에고 $170k
          + 유럽: 취리히 $178k > 런던 $116k > 더블린 $112k > 코펜하겐 $112k > 암스테르담 $104k
          + 아시아: 텔아비브 $159k > 두바이 $96k > 싱가폴 $90k > 상하이 $86k > 홍콩 $85k > 서울 $83k
          + 그외: 밴쿠버 $123k > 시드니 $112k > 토론토 $110k > 멜버른 $97k > 브리스번 $84k

   https://www.levels.fyi/2023/?from=home_page_prompt
   2023년 리포트입니다

  프로덕트 매니저 : Roblox $234k > Roblox $234k > Roblox $234k > Roblox $234k > Roblox $234k

   이 라인이 잘못 입력된거 같네요.

   넷플릭스에서 근무하는, eBPF로 유명한 브랜든 그렉의 링크드인 프로필을 보면 이렇게 적혀 있더군요. ""리크루터분들께: 7 자릿수 이하는 연락 주지 않으셔도 됩니다.""

   다시 가서보니 그 문구는 없어지고 인텔로 옮겼네요;;

   220k...?

   이민을 가야 하나..

   2021년 소프트웨어 엔지니어 급여 통계
   작년이랑 비교해보니 전반적으로 급여가 오르긴 했네요.

   한국의 급여 중간값이 $83k 라는데서 놀랐는데요.
   이건 아무래도 Levels.fyi에 급여 정보를 등록하신 한국 분들은 대부분 초급이 아닌 시니어 이상의 엔지니어들이어서 그런 것 같아요.
"
"https://news.hada.io/topic?id=8140","Eraser - 개발팀을 위한 협업용 화이트보드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Eraser - 개발팀을 위한 협업용 화이트보드

     * 실시간 원격 협업을 위한 다기능 전자 칠판
     * Diagram-as-code : 코드로 다이어그램 그리기
     * 캔바스에 코드 블록 표시 가능
     * 마크다운 호환 : 문서를 작성하고 다이어그램과 직링크 가능
     * 키보드 만으로 빠르게 플로우차트 작성 가능. / 커맨드 지원
     * 댓글 및 태깅, 원클릭 공유 기능 지원

   안녕하세요 Eraser 의 창업자입니다. 피드백이나 궁금한 점 있으면 알려주세요.

   때로 화이트보드가 절실할 때가 있는데 오프라인의 물리적인 화이트보드를 대체할 완벽한 수단을 꿈꾸어 봅니다. 메타버스가 되려나요?

   사용하는 회사 리스트에 Kakao가 포함 되어있는게 눈길을 끄네요
"
"https://news.hada.io/topic?id=8179","Microsoft와 OpenAI가 ChatGPT와 통합한 Bing을 작업중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Microsoft와 OpenAI가 ChatGPT와 통합한 Bing을 작업중

     * 검색결과에 링크를 보여주는 것 만이 아닌, ChatGPT를 이용한 문장형 답변을 같이 보여줄 것
     * 3월 전에 배포할 것이며, 경쟁자인 구글을 제압하는데 도움이 되길 바라고 있다고
     * 이 계획에 대해 잘 아는 2명이 확인해주었지만, Microsoft 와 OpenAI의 대변인은 이 내용에 대해 논평을 거부함

   유료 기사라서.. 이 기사를 인용한 다른 기사들을 보셔도 됩니다.
     * https://theverge.com/2023/1/…
     * https://reuters.com/technology/…
     * https://bloomberg.com/news/articles/…
"
"https://news.hada.io/topic?id=8109","Show GN: Mastodon.nvim (Mastodon client for Neovim)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Show GN: Mastodon.nvim (Mastodon client for Neovim)

   Neovim 전용 mastodon 클라이언트를 방금 완성해서 출시했습니다!

   Neovim 과몰입 2개월차를 찍던 중, ""Neovim에서 벗어나지 않으면서 마스토돈에 접속하는 방법이 어디 없을까?""라는 고민을 하던 중, Neovim 전용 마스토돈 클라이언트가 안보인다면 직접 만들자라는 마음가짐으로 시작하여 크리스마스에 드디어 릴리즈할 수 있게 되었습니다.

   실시간으로 개밥먹기하면서 개발했는지라 한편으로는 고통스럽고, 한편으로는 즐거웠습니다. 한 가지 확실한 것은 개밥먹기 주도 개발이 동기부여의 측면에서도 학습의 측면에서도 도움된다는 것입니다.

   개발과정은 트위터 타래에 조금씩 정리해가고 있지만, 이걸 언젠가 블로그에도 글로 쓸 수 있으면 좋겠네요.

   즐거운 크리스마스 보내시길 바랍니다!
     __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

   개발과정을 적어놓은 트위터 타래
   https://twitter.com/kodingwarrior/status/1592121323882688513

   마스토돈과 관련된 글들
   https://news.hada.io/topic?id=1528
   https://news.hada.io/topic?id=1756
   https://news.hada.io/topic?id=7729

   와우, emacs에서 email 업무 가능하다는 거랑 비슷하게 vim 계열도 이런 툴도 만들어지네요.
"
"https://news.hada.io/topic?id=8089","베스트셀러 서적들이 점점 짧아지고 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         베스트셀러 서적들이 점점 짧아지고 있다

     * 2011~2021년동안 NYT의 주간 Top3 픽션/넌픽션 3444권을 조사
     * 437페이지에서 386페이지로 총 11%(51.5페이지) 짧아졌음
     * 400페이지를 넘는 책들이 사라지고 있음. 2011년에는 54% 였지만 2021년엔 38%로 30% 감소
     * 2016년까지는 긴 책이 짧은 책에 비해서 4.4주 정도 더 오래 머물렀음. 2016년 부터는 짧은 책이 긴 책보다 1.9주간 더 오래 머무름
     * 사람들은 겨울에 더 긴 책을 읽음. 10~3월 사이의 책 평균은 427페이지로 4~9월의 평균은 392페이지 보다 35페이지(8.2%) 더 많음
"
"https://news.hada.io/topic?id=8180","FatFS - 소형 임베디드 시스템을 위한 FAT/exFAT 파일 시스템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                FatFS - 소형 임베디드 시스템을 위한 FAT/exFAT 파일 시스템

     * 도스/윈도우 호환
     * ANSI C(C89)로 작성되고, 디스크 I/O 레이어와 완전히 분리
     * 포팅이 쉽고, 매우 작은 풋프린트
     * 8051, PIC, AVR, ARM, Z80, RX 등에서 사용 가능
     * 다양한 설정 옵션 지원
          + 긴 파일명 지원(ANDI/OEM 또는 Unicode)
          + 대용량 스토리지를 위한 exFAT, 64bit LBA 및 GPT
          + RTOS를 위한 쓰레드 세이프
          + 멀티플 볼륨 지원(피지컬 드라이브 & 파티션)
          + 가변 섹터 사이즈
          + DBCS를 포함한 멀티 코드 페이지
          + 읽기 전용, I/O 버퍼등
     * 더 작은 8비트 마이크로 컨트롤러를 위한 서브셋인 Petit FatFS 도 있음

   임베디드 한창 할 때 아주 잘 썼죠 ㅎㅎ

   SDIO 할때 아주 감사해하며 잘 썼던 기억이
"
"https://news.hada.io/topic?id=8199","uiverse - HTML/CSS로 만들어진 무료 UI 엘리멘트들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  uiverse - HTML/CSS로 만들어진 무료 UI 엘리멘트들

     * 버튼/로더/체크박스/스위치/인풋/카드 등 636개의 컴포넌트
     * 5232명의 컨트리뷰터
     * 완전히 무료. 개인용/상업용 상관없이 이용 가능

   역시 근본

   좋네요!!
"
