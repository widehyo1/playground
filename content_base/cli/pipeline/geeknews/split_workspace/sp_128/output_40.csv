"https://news.hada.io/topic?id=5279","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   GN의 비밀번호 찾기/변경하기 기능이 동작하는건가요, 메일이 안오는듯? 아이디를 하나 더 팠네요;;

   가입후에 이메일을 별도로 등록해두셨으면 잘 동작합니다.
   가입시 이메일이 필수 값이 아니라서.. 다들 잘 등록 안 하시더군요. ^^;;

   아... weekly mail을 받아서 메일이 등록되었다고 생각했어요. 메일 주소가 등록이 안되었으니, 그러면 복구가 불가능하겠군요. 알겠습니다.
   ""등록된 메일 계정이 아닌 경우 메일은 전송되지 않습니다."" 라고 나오는군요. 몰랐네요.
   다름이 아니라 수술하신다길래 쾌차하시라고 쓰려고 로그인을 하려고 했었습니다. 수술 잘 끝나신것 같아서 다행입니다!

   고맙습니다~!

   어텀 실내악 페스티벌에 가요~ 클래식 문외한이지만, 콘서트에 직접 가면 라이브와 공간이 주는 분위기와 음향이 좋더라고요. 프로그램 보고 미리 듣고 가면 조금은 더 잘 들리는 것 같아요. ㅎㅎ

   저번 주의 포스텀 모템은...
   - 아직 V8 포팅을 못했습니다! 저번 주차 계획에서 완전히 까먹어서(... ) 누락되었네요. 다행히도 이번주 게획엔 잡았습니다.
   - Godot 게임잼을 열심히 하고 있었어요. 아직 배운지 초반이라서 작업 속도가 평상시보다 훨씬 안 나오긴 하지만. 그래도 사용성이 꽤 괜찮습니다. 가벼운 유니티를 만지는 듯 해요.
   - 매번 소설 마감에 치이고 살지만, 8개월동안 매번 어떻게든 한 것처럼 이번에도 어떻게 했습니다.
   - SRPG 이슈를 모두 해결했는데요. 전체 플로우상으로는 누락된 게 꽤 있어서 그걸 보안할 작업을 해야될 것 같습니다.
   이번 주의 계획은..
   - Godot 게임잼을 진짜 끝내야 합니다. 28일에 끝내는 걸 계획으로 잡았는데, 생각해보니 제가 27/28을 백신을 맞았어요(.. ) 그래서 2일이 날아갔고. 오늘 매울 계획입니다.
   - 소설 마감은 또 왔습니다. 또 마감하기 위해 최선을 다해야겠네요.
   - V8 포팅을 한 후 처음으로 그걸로 작동가능한 프로그램을 만든 예정입니다.

   듄을 보러 가려고 합니다!

   오오 듄... 저도 슬슬 백신 맞아서 영화관으로 가볼 예정인데. 어떤 느낌의 영화일지 궁금하네요.

   한 군데 면접이 잘되서. 이직 서터레스에서 해방됐네여.. 맘놓고 맹글던거나 맹그러도 될 것 같아유.. ㅋㅋ

   오 축하드립니다~~

   축하드려요! 'ㅁ '/

   축하드립니다!!

   지난주 일요일에 맹장때문에 응급실갔다가 당일 바로 수술하고 2박3일만에 퇴원했는데요.
   이번주는 정말 암거도 안하고 요양하려고 합니다.
   복강경 수술이라 금방 퇴원해서 뉴스는 어케 올리고는 있는데, 몸은 아직 피로한 듯 해요.

   고생 많으셨군여(... ) ;ㅁ ; 저도 백신 맞고 2일을 침대와 저를 일체화시켰는데. 푹 쉬고 나니 작업할 의욕이 일시적으로 부스팅 된 것 같습니다. xguru님도 푹 쉬시고 더 힘차게 나아가시길 👃
"
"https://news.hada.io/topic?id=5260","Kerla - Rust로 만든 Monolithic 커널","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Kerla - Rust로 만든 Monolithic 커널

   - Linux ABI 호환성을 목표(바이너리를 수정없이 실행)
   - 밑바닥부터 Rust로 작성
   - *NIX 프로세스 컨셉 구현 : 컨텍스트 스위칭, signal, fork(2), execve(2), wait4(2)..
   - 공통 시스템 콜 지원 : write(2), stat(2), mmap(2), pipe(2), poll(2), ..
   - 현재는 디스크 지원 없음. initramfs 를 루트파일시스템으로 마운트
   - 슈도 파일 시스템 : tmpfs 와 devfs
   - smoltcp 기반 TCP/IP 지원
   ㅤ→ Rust로 작성된 스탠드얼론 / 이벤트드리븐 TCP/IP 스택
   - tty 및 pty 구현
   - QEMU 와 Firecracker 지원
   - x86_64 지원
   - Docker 기반의 initramfs 빌드 시스템

   Linux 커널 대체를 위해서 만드는 것은 아니고 그냥 재미 목적이라고 합니다.
   https://seiya.me/writing-linux-clone-in-rust
"
"https://news.hada.io/topic?id=5274","페이스북, Meta로 회사명 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           페이스북, Meta로 회사명 변경

   ""메타버스가 소셜 연결의 미래입니다. 우리의 비젼은 메타버스를 삶에 가져오는 것이기에 이 미래를 반영하고자 합니다.""
   - VR, AR, 스마트 글래스등을 이미 개발중
   - 메타버스는 하나의 회사를 넘어선 공동의 프로젝트가 될 것
   - 2021/4분기 부터는 Family of Apps 와 Reality Labs, 2개의 세그먼트로 회계보고 예정
   - 스탁 티커도 MVRS 로 12/1부터 변경
   - Connect 컨퍼런스에서 발표
   ㅤ→ Horizon Home, Presence Platform, Project Aria
   ㅤ→ 차세대 VR기기인 Project Cambria

   사명 바꾼 게 썩 좋게 보이지는 않네요. 청문회에서 탈탈 털린지도 얼마 안 됐는데..

   Meta 는 그리스어로는 ""저 너머로"" 라는군요.
   제일 웃겼던 거는 FAANG이 이제 MANGA 가 되었다는 것

   MANGA도 되지만 MAANG 도 되지 않겠습니까
   망...

   이름 바꾸고 과거 지우려는 애한테 왜 그러세요..

   https://twitter.com/@meta 도 가져갔네요. 2007년 가입 계정이던데..

   과거 Facebook 관련 트윗이 살아있는거 보니, 계정명만 바뀐거 같은데요.
   그렇다 하더라도 meta라는 이름을 가져온 건 대단하네요.. 애초에 없었을리도 없고
"
"https://news.hada.io/topic?id=5234","페이스북, 회사 리브랜딩의 일부로 이름 변경 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      페이스북, 회사 리브랜딩의 일부로 이름 변경 예정

   - 과거와 단절하고 리브랜딩 하기 위해 다음주 10/28에 있을 이벤트에서 이름 변경을 발표할 것을 계획중
   - 메타버스 건설에 집중한다는 의미를 반영할 것으로 알려져
   - ""구글 → 알파벳"" 처럼 지주회사의 이름을 변경하는 방식이고 페이스북/인스타그램/왓츠앱/오큘러스를 거느리게 될 것

   HN에서는 Meta가 유력하다고 보는 모양입니다. 하루 전에 meta.com이 meta.org로 redirect되기 시작했는데, meta.org는 Chen Zuckerberg Institute가 인수로 인해 보유하고 있던 도메인이라 정황상 meta.com을 구매한 뒤 임시로 옮겨 놓은 모양이라는 설입니다.

   개인적으로 horizon 보단 meta 가 더 맘에 드네요. 앞에껀 verizon 이 먼저 생각나서..

   .com은 원래부터 .org으로 리다이렉트 됐습니다. 후이즈 정보가 잠겨 있어서 구매여부를 알 수 없지만 도메인의 최근 업데이트 일자가 하루전이라서 가능성은 있을 것 같습니다.

   글에도 있지만 요즘 Horizon 많이 쓰던데 그거로 바뀌는 거 아닌가 모르겠네요.

   https://trademarks.justia.com/889/63/horizon-88963160.html
   HORIZON 이미 트레이드마크 만들어서 페이스북이 소유하고 있군요
"
"https://news.hada.io/topic?id=5217","Show GN: 미니앱을 만들 수 있는 잼킷을 소개합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Show GN: 미니앱을 만들 수 있는 잼킷을 소개합니다.

   잼킷은 미니앱을 빠르고 쉽게 만들 수 있게 도와주는 도구입니다.
   저는 잼킷의 테크니컬 라이터로 잼킷 튜토리얼을 만들고 있습니다.
   미니앱은 카카오톡에서 구동되는 카카오페이, QR 코등 등등을 생각하시면 됩니다.
   잼킷으로 만들어진 미니앱들은 따로 설치가 필요없이 링크 만으로 실행이 가능합니다. 리프 미니앱 브라우저를 통해서 실행됩니다. 아래 링크에서 미니앱에 대한 자세한 내용을 확인할 수 있습니다.
   https://medium.com/astaria-io-korean/a687c72543ab
   잼킷 깃허브에서 미리 만들어진 잼킷 템플릿을 다운로드 받을 수 있습니다.
   https://github.com/bookjam/jamkit-templates
   가볍고 빠르게 미니앱을 만들고 싶을 때,
   아주 유용합니다!
   궁금하신 점이 있으시면 댓글 남겨주세요!
"
"https://news.hada.io/topic?id=5229","Function Pipelines : PostgreSQL에 함수형 프로그래밍 추가하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Function Pipelines : PostgreSQL에 함수형 프로그래밍 추가하기

   - SQL을 이용한 데이터 분석을 훨씬 더 편하게
   - Postgres의 ""커스텀 데이터타입/연산자/함수""를 이용해서 SQL에 함수형 프로그래밍 컨셉을 도입
   ㅤ→ Pandas, PromQL 과 비슷
   - Postgres의 SQL문법을 수정하지 않고 그대로 사용하여, 기존 Postgres와 연동하는 도구들과 완벽 호환
   SELECT device_id,
   ㅤㅤtimevector(ts, val) -> sort() -> delta() -> abs() -> sum()
   ㅤㅤㅤㅤas volatility
   FROM measurements
   WHERE ts >= now()-'1 day'::interval
   GROUP BY device_id;
"
"https://news.hada.io/topic?id=5204","Call Of Duty, Anti-Cheat 용 커널 레벨 드라이버 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Call Of Duty, Anti-Cheat 용 커널 레벨 드라이버 추가

   RICOCHET Anti-Cheat™
   - 치팅을 막기위해 머신러닝을 이용한 서버측 모니터링 과 클라이언트 단에서 커널 레벨 드라이버를 추가
   - 올해말 출시되는 Warzone 및 차후 Vanguard 에 적용 예정
   - 게임중에만 동작하며, 게임 관련 소프트웨어들만 모니터링하고, 게임 종료시 작동 중단

   이거 관련해서 일부 해커들은 '경쟁자는 사라지고 정교한 핵만 살아남을 것' 이라고 했다는 군요.
   https://www.thisisgame.com/webzine/news/nboard/4/?n=134854
   전 어느때부터인지 PC게임은 아예 안하고 콘솔로 넘어가버려서..
   이정도 인줄은 몰랐는데, 치팅 프로그램이 심각하긴 한가 보네요.

   MMO나 RTS, 전략게임을 제외하고는 전부 콘솔로 넘어갔는데. 저 3개 빼고는 콘솔이 더 게임하는 느낌이 나서 좋아서 그런 것 같아요. 뭔가 져도 실력때문에 진것 같고(... )

   콘솔은 fps같은 경우 키마 때문에 쩝..

   앗. 까먹고 있었는데.... 그랬었죠..
"
"https://news.hada.io/topic?id=5205","Go+ - 엔지니어링, STEM 교육, 데이터 사이언스를 위한 언어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Go+ - 엔지니어링, STEM 교육, 데이터 사이언스를 위한 언어

   - 모든 Go 언어의 피쳐를 포함 (호환)
   ㅤ→ 자연어에 더 가까운 쉽고 우아한 문법
   ㅤ→ 배우기 쉬움
   ㅤ→ 타이핑량을 많이 줄여줌
   - 추가된 주요 기능들
   ㅤ→ 유리수(rational) 지원
   ㅤ→ Map & Slice Literal
   ㅤ→ 데이터 사이언스 용도에 적합한 List comprehension
   ㅤㅤㅤx := {x: i for i, x <- [1, 3, 5, 7, 11]}
   ㅤㅤㅤy := {x: i for i, x <- [1, 3, 5, 7, 11], i%2 == 1}
   ㅤㅤㅤz := {v: k for k, v <- {1: ""Hello"", 3: ""Hi"", 5: ""xsw"", 7: ""Go+""}, k > 3}
   ㅤ→ 컬렉션에서 데이터 가져오기
   ㅤㅤㅤstudents := [student{""Ken"", 90}, student{""Jason"", 80}, student{""Lily"", 85}]
   ㅤㅤㅤunknownScore, ok := {x.score for x <- students, x.name == ""Unknown""}
   ㅤㅤㅤjasonScore := {x.score for x <- students, x.name == ""Jason""}
   ㅤ→ 그외 Lambda, 연산자 Overload, UDT의 for range 등
   * STEM : 과학(S), 기술(T), 공학(E), 수학(M)
"
"https://news.hada.io/topic?id=5223","Show GN: 포브 - 매일 아침 7시에 동기부여를 줄 수 있는 글귀를 이메일로 전송해주는 서비스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Show GN: 포브 - 매일 아침 7시에 동기부여를 줄 수 있는 글귀를 이메일로 전송해주는 서비스

   안녕하세요, 포브를 운영중인 개발자입니다.
   -
   포브는 매일 아침 7시에 구독 신청하신 이메일로 동기부여할 글귀를 보내주는 서비스입니다.
   제가 동기부여를 받고 싶을 때 유명한 사람들 얘기한 명언들을 보거나 유튜브를 찾아보는데
   어느 날 문뜩 누군가 나에게 아침마다 동기부여를 해준다면 어떨까라는 생각을 하게 되었습니다.
   그 후 아이디어를 조금 더 구체화해서 이메일로 글귀를 전송해 주는 서비스를 구상했고 이렇게 서비스까지 하고 있네요.
   추후에는 문구를 보면서 느낀 감정과 생각을 기록할 수 있는 기능을 추가해 보려고 합니다 ㅎ.ㅎ
   -
   구독 신청은 아래 주소에서 하실 수 있어요!
   https://web.povv.net/landing
   감사합니다.

   몇일 전부터 사이트가 안 들어갑니다!! 무슨 일이 있으신가 하여 보고 싶은데 남길 공간이 여기뿐이군요.(눈물)

   구독취소하고싶은데 서비스 메일이 동작을 안하네요

   구독해지메일이 반송됩니다.

   구독취소 신청받는 이메일 주소로 메일 보내기가 안되네요

   잘 받아보고 있습니다. 감사합니다.
   service메일 주신걸로도 메일이 안 보내지고,
   웹페이지에는 구독외 다른 메뉴가 없어서, 여기에 남깁니다.
   글귀를 주실 때, 가능하면 원어도 같이 주시면 참 좋겠습니다.

   전송 안되는 이슈는 최대한 빠르게 해결하도록 하겠습니다.

   헉 많은분들이 글귀 구독을 신청하신것 같아 서버가 전송하지 못하는것 같네요 ㅠㅠ 기대하시면서 구독 신청하셨는데 실망 시켜드려서 죄송합니다. 원어 기능도 만들어보면 좋겠네요. 소중한 피드백 감사합니다.

   포브 구독하고 있는데, 짧은 명언이라 부담없이 읽을 수 있어 너무 좋아요!
   잘 읽고 있습니다. 감사합니다!!!

   응원해주셔서 감사합니다.
   덕분에 서비스 운영할 힘이 나네요 ㅎㅎ

   멋진 프로젝트네요! 구독 신청했습니다.
   다만 아래 xguru님께서도 언급하셨듯이, (제가 느끼기에는)굳이 이름과 비밀번호가 필요한가 싶었어요.
   물론 향후 '생각 기록'과 같은 새로운 기능들이 추가되었을 때 바로 이용할 수 있다는 장점이 있겠지만.. 타 메일링 서비스에는 구독 자체에 대해서는 이런 회원가입 절차가 대부분 없어 약간 의아함이 들더라구요.
   아무튼, 매일 아침 7시 메일 기대하겠습니다. 감사합니다 ㅎㅎ

   답변이 너무 늦었네요. 소중한 피드백 감사합니다. 조금만 기다려주시면 새로운 기능이 제공될 예정이여서 그때까지 기다려주시면 감사하겠습니다 ㅎㅎ 응원해주셔서 고맙습니다.

   구독해서 매일 받아보고 있습니다. 응원해요!!

   감사합니다!!!

   런칭 축하드립니다!
   랜딩페이지에 예제 글귀가 몇 개 보이면 더 좋을 것 같아요.
   버튼이 ""가입하고 글귀 받기""로 되어있는데, 이게 약간 혼동스러운거 같아요. ""이메일 등록하고 글귀 받기""가 자연스럽지 않을까요 ?
   이메일 등록 하고 로그인 페이지에서 보이는 회원 가입의 차이를 잘 모르겟어요. (왜 회원가입이 필요한지도요)
   포브 pov 인데 도메인은 povv 네요. 그럼 서비스도 povv 가 되는게 맞지 않을까용 ? ㅎㅎ

   소중한 피드백 감사합니다. CTA 문구는 수정해보겠습니다 ㅎㅎ 조금만 기다려주시면 새로운 기능이 제공될 예정입니다. 포브같은 경우는 pov 로 생각해 도메인 만들려고했는데 이미 있어서 뒤에 v를 하나 붙였습니다..ㅎ.ㅎ
"
"https://news.hada.io/topic?id=5276","kbar - 웹에 Cmd+K 기능 추가하는 React 컴포넌트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   kbar - 웹에 Cmd+K 기능 추가하는 React 컴포넌트

   - 커맨드 팔레트 기능을 통해서 사용자에게 사이트의 모든 기능에 쉬운 접근 제공
   - 애니메이션 내장 및 모든 컴포넌트 커스터마이즈 가능
   - 키보드 네비게이션 및 단축키 지원
   - 중첩 액션 지원
   - 쉽게 커스텀 컴포넌트를 만들수 있는 간단한 자료 구조

   이번에 깃헙도 커맨드 팔레트 기능 추가했는데 요즘 추세군요.
   https://docs.github.com/en/get-started/…
"
"https://news.hada.io/topic?id=5242","MS, 윈도우11 베타에 Android 앱 지원 기능 프리뷰 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  MS, 윈도우11 베타에 Android 앱 지원 기능 프리뷰 공개

   ""Windows Subsystem for Android™""
   - 윈도우 11 위에서 아마존 앱스토어를 통해 안드로이드 앱을 설치하고 실행
   - 마우스/터치/펜 입력과 함께 알트+탭, 스냅 레이아웃, 스타트메뉴/태스크바 등에 그대로 일반 앱처럼 적용
   - 안드로이드 앱 알림은 윈도우 액션센터에 표시
   - 클립보드 연동
   - AOSP 버전 11 기반
   - 모든 윈도우 프로세서 버전에서 지원(AMD,Intel,Qualcomm)
   * 미국 윈도우 베타 채널의 Windows Insider 대상 으로 선배포

   미국 이외에서도 다음 링크에 나온 우회법을 통하면 바로 써 볼 수 있는 것 같습니다.
   https://redd.it/qc6z0w
"
"https://news.hada.io/topic?id=5302","BetterDummy - 인텔/M1 맥용 가짜 소프트웨어 HDMI 어댑터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                BetterDummy - 인텔/M1 맥용 가짜 소프트웨어 HDMI 어댑터

   - M1맥들은 커스텀 해상도에 문제가 있음
   ㅤ→ 4K 이하 해상도 모니터들에선 HiDPI ""Retina"" 해상도를 지원 안함
   - HiDPI 지원하는 4K HDMI 더미 플러그가 꼽힌 것처럼 가상으로 모니터를 생성해주는 오픈소스
   ㅤ→ 더미 모니터의 화면은 원하는 대로 해상도 설정 및 스케일링 가능
   ㅤ→ 헤드리스(맥미니/클램쉘) 사용시에도 HiDPI로 이용 가능
   ㅤ→ Sidecar 해상도도 스케일 지원
   - 하드웨어 동글 대비 장점
   ㅤ→ HDMI 포트를 점유하지 않음
   ㅤ→ 다양한 HiDPI 해상도 지원
   ㅤ→ 여러 Ratio 지원 (16:9, 16:10, 16:12, 21.5:9, 32:10, 10:16..)

   저런건 애플이 그냥 고급 옵션으로 풀어주면 좋을 것 같은데... 너무 꽁꽁 숨겨놓는 것 같아요 ㅜㅜ

   HDMI 더미 동글이 알리에서 개당 천원 정도인데 그마저도 필요없게 해주는 오픈소스네요
   이 BetterDummy 설치하고 아래 Deskreen 설치하면, 어떤 기기든 맥의 외장 모니터로 사용 가능합니다.
   테스트 해보니 잘 동작하네요. 알리에서 산 내 동글 안녕.. ㅠ
   - Deskreen - 어떤 기기든 두번째 화면으로 만들어주는 앱 https://news.hada.io/topic?id=3601
"
"https://news.hada.io/topic?id=5251","JavaScript 알고리즘 및 자료 구조","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        JavaScript 알고리즘 및 자료 구조

   - 많이 알려진 알고리즘과 자료 구조 설명, Javascript 기반 예제 및 관련 유튜브 영상 포함 [한국어 번역]
   ㅤ→ B : 입문자용 63개
   ㅤ→ A : 숙련자용 69개
   자료구조
   B: 연결 리스트, 이중 연결 리스트, 큐, 스택, 해시 테이블, 힙, 우선순위 큐
   A: 트라이, 트리, 이진 탐색 트리, AVL 트리, Red-Black 트리, 세그먼트 트리, Fenwick 트리, 그래프, 서로소 집합, 블룸 필터
   알고리즘
   - Math
   ㅤ→ B : 팩토리얼, 피보나치 수, 소수 판별, 유클리드 호제법, 최소 공배수, 에라토스테네스의 체, 2의 거듭제곱 판별법, 파스칼 삼각형
   ㅤ→ A : 자연수 분할, 리우 후이 π 알고리즘 - N-각형을 기반으로 π 근사치 구하기
   - Sets
   ㅤ→ B : 카티지언 프로덕트, Fisher–Yates 셔플
   ㅤ→ A : 멱집합, 순열, 조합, 최장 공통 부분수열, 최장 증가 수열, Shortest Common Supersequence (SCS), 배낭 문제
   - Strings
   ㅤ→ B : 해밍 거리 - 심볼이 다른 위치의 갯수
   ㅤ→ A : 편집 거리, 커누스-모리스-프랫 알고리즘, Z 알고리즘, 라빈 카프 알고리즘, 최장 공통 부분 문자열, 정규 표현식 매칭
   - Searches
   ㅤ→ B : 선형 탐색, 점프 탐색, 이진 탐색, 보간 탐색
   - Sorting
   ㅤ→ B : 거품 정렬, 선택 정렬, 삽입 정렬, 힙 정렬, 병합 정렬, 퀵 정렬, 셸 정렬, 계수 정렬, 기수 정렬
   - Trees
   ㅤ→ B : 깊이 우선 탐색 (DFS), 너비 우선 탐색 (BFS)
   - Graphs
   ㅤ→ B : 깊이 우선 탐색 (DFS), 너비 우선 탐색 (BFS), 크루스칼 알고리즘
   ㅤ→ A : 다익스트라 알고리즘, 벨만-포드 알고리즘, 플로이드-워셜 알고리즘, 사이클 탐지, 프림 알고리즘, 위상 정렬, 단절점, 단절선, 오일러 경로 와 오일러 회로, 해밀턴 경로, 강결합 컴포넌트, 외판원 문제
   - Uncategorized
   ㅤ→ B : 하노이 탑, 정방 행렬 회전, 점프 게임, 탐욕 알고리즘 예제, Unique 경로, 빗물 담기 문제
   ㅤ→ A : N-Queens 문제, 기사의 여행 문제
   패러다임별 알고리즘
   - 브루트 포스(Brute Force)
   - 탐욕 알고리즘(Greedy)
   - 분할 정복법(Divide and Conquer)
   - 동적 계획법(Dynamic Programming)
   - 백트래킹(Backtracking)
"
"https://news.hada.io/topic?id=5286","CleanUp.pictures - 사진에서 사물 지우기 오픈소스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  CleanUp.pictures - 사진에서 사물 지우기 오픈소스

   - 프론트엔드 : React / TypeScript / TailwindCSS
   - Node.js Firebase function
   - Samsung Research의 LaMa를 이용한 인페인팅 서비스를 Google Cloud Run for Anthos 에서 실행

   LaMa - 큰해상도 이미지에서 사물 지우기 https://news.hada.io/topic?id=5281
"
"https://news.hada.io/topic?id=5238","알리바바, XuanTie RISC-V 코어 오픈소스로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    알리바바, XuanTie RISC-V 코어 오픈소스로 공개

   - 2018년에 자체 ASIC설계를 위해 설립한 팹리스 반도체 자회사인 T-Head를 통해
   ㅤ→ GitHub에 OpenC910, OpenC906, OpenE902, OpenE906 4개의 칩을 공개
   - 알리바바의 Aspara 클라우드는 x86/ARM/RISC-V 등 다양한 ISA를 동시 지원함
   ㅤ→ RISC-V를 적극 수용하고 있으며, 현재 11개의 칩을 보유하고 있음
   - 클라우드 서버 전용 칩인 Yitian 710도 공개(아마존의 Graviton 과 비슷)
   ㅤ→ 이미 2021년 7월부터 자신들의 클라우드에 도입 시작
   ㅤ→ 5나노, 628mm² 의 거대한 다이 위에 600억개의 트랜지스터 포함

   - M1은 RISC-V의 상승을 예고한다 https://news.hada.io/topic?id=3447
   - SiFive 고성능 RISC-V 프로세서 공개 https://news.hada.io/topic?id=4545
   - MIPS, 자체 아키텍처를 버리고 RISC-V로 전환 https://news.hada.io/topic?id=3859
   - XiangShan, 오픈소스 64비트 RISC-V 프로세서 공개 https://news.hada.io/topic?id=4562
   - 애플, RISC-V 프로그래머 구인중 https://news.hada.io/topic?id=4949
   - Nios V - 인텔의 RISC-V 프로세서 https://news.hada.io/topic?id=5151
"
"https://news.hada.io/topic?id=5203","Parcel v2 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Parcel v2 릴리즈

   - 새로운 플러그인 시스템
   - Tree shaking 기본 활성화 : ES 모듈, CommonJS, Dynamic imports, CSS 모듈 지원
   - 대폭 성능 향상 : Rust로 작성된 새 JavaScript 컴파일러 포함, 더 많은 부분을 병렬 아키텍처로 구성
   - Native ES 모듈을 이용한 자동 디퍼런셜 번들링
   - 자동 코드 분리 : 공용 모듈화
   - 이미지 리사이즈/변환/최적화 지원 : AVIF/WEBP 및 JPEG/PNG 최적화
   - 캐쉬 안정성 개선
   - 핫로딩 개선 : React Fast Refresh 지원
   - 번들 인라이닝 지원
   - 웹 워커 지원
   - C++로 작성된 더 안정적인 파일 watcher
   - Rust로 작성된 빠르고 정확한 Source Maps
"
"https://news.hada.io/topic?id=5269","대형 화면 기기용 Android 12L 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        대형 화면 기기용 Android 12L 공개

   태블릿 및 폴더블 기기를 위한 Android 12L (Large screen) 공개
   * Emulator 로 Developer Preview 1 공개됨
   * 12월부터 Beta 로 공개되며 Pixel 4 이상 기기용으로 배포될 예정
   * 갤럭시 폴드 3용으로 배포될 예정 (키노트에서 언급되었고, 시기는 미정)
   * 개발 가이드 문서 및 개발 도구(Android Studio 및 Emulator), 그리고 샘플코드 제공

   진저브레드와 허니콤 2개가 나뉘었던 10년 전으로 다시 돌아가는 건 아니겠죠ㅠㅠ

   호 이제 다시 안드로이드 태블릿들이 쓸만해 지는걸까요

   헉 안드로이드 태블릿이 쓸만했던 적이 있었나요...?

   ㅋㅋㅋㅋ 초기엔 그래도 쓸만했어요!
"
"https://news.hada.io/topic?id=5293","가트너의 전략 기술 트렌드 2022","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          가트너의 전략 기술 트렌드 2022

   #1 Data Fabric : 데이터가 저장된 위치에 관계 없이 언제나 데이터에 접근 가능
   #2 Cybersecurity Mesh : 이질적이고 분산화된 환경에서도 자산에 안전하게 접근 가능
   #3 Privacy-Enhancing Computation : 신뢰할 수 없는 환경에서 개인 데이터 처리 보호
   #4 Cloud-Native Platforms : 탄력적/민첩한 애플리케이션 아키텍처
   #5 Composable Applications : 비즈니스 중심적인 모듈라 컴포넌트로 구축되는 애플리케이션
   #6 Decision Intelligence : 조직의 의사결정을 개선하기 위한 실용적인 접근방식
   #7 Hyperautomation : 가능한 많은 비즈니스/IT 프로세스를 빠르게 식별/검증 및 자동화 하기 위한 비즈니스 중심 접근법
   #8 AI Engineering : 데이터, 모델 및 애플리케이션 업데이트를 자동화해서 효율적인 AI 딜리버리를 제공
   #9 Distributed Enterprises : 디지털 우선 / 원격 우선 비즈니스 모델을 반영하여 원격근무자들의 경험을 개선하고 소비자 및 협력사와의 접점을 디지털화
   #10 Total Experience : 직원 경험 EX, 고객 경험 CX, 사용자 경험 UX, 다중 경험 MX 등을 통합하여 성장을 가속화
   #11 Autonomic Systems : 환경에서 학습하고 실시간으로 자신의 알고리듬을 동적으로 수정해서 동작을 최적화 하는 자체 관리되는 물리적 또는 소프트웨어 시스템
   #12 Generative AI : 데이터로부터 얻어낸 결과로 원본과 유사하지만 독창적인 새로운 창작물을 생성. (SW 코드 작성, 신약 개발등)
"
"https://news.hada.io/topic?id=5246","PyTorch 1.10 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            PyTorch 1.10 릴리즈

   - 학습 및 성능 개선과 개발자 사용 편의성에 중점을 둔 업데이트
   - 라이브러리
   ㅤ→ TorchX 0.1 : ML 어플리케이션을 빠르게 만들고 배포 가능하게 하는 새로운 SDK
   ㅤ→ TorchAudio 0.10 : Text-To-Speech 파이프라인 추가, Self-Supervised 모델 지원..
   ㅤ→ TorchVision 0.11 : RegNet / EfficientNet 모델 추가, FX 기반 Feature Extraction
   - CUDA Graphs API 연동 (베타)
   - FX, torch.special, nn.Module 등이 Beta 에서 Stable로
   - JIT 컴파일러의 Automatic Fusion이 GPU에서 CPU로 확장
   - 안드로이드 NNAPI 지원

   1.10 아닌가요 ㅋㅋㅋ

   으어 0 어디갔나요 ㅠㅠ 수정했습니다
"
"https://news.hada.io/topic?id=5325","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   취미로 하고 있는 연극 공연 올렸습니다

   독서: 청소부 매뉴얼 재독
   운동: 달리기 12km 했습니다

   멘토링도 하고 그림 모임도 가려고요 ^^

   이제 맹장수술한건 다 아물었고, 다시 테슬라 악세사리 구매 가이드 작성을 해보려고 하는데.. 이게 리듬을 놓치니까 또 쓰기 힘드네요 ㅠ
   11월 들어서 모임이 풀리니까 사람들 만나서 이런 저런 얘기를 하다보니
   또 뭔가 만들어 보고 싶은게 하나 생겨서 구상중입니다.
"
"https://news.hada.io/topic?id=5232","중요한 SaaS 지표들과 설명","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            중요한 SaaS 지표들과 설명

   1. Growth
   - MRR / ARR (Monthly / Annual Recurring Revenue)
   - CMGR (Compound Monthly Growth Rate)
   - MRR Components
   ㅤ→ Retained / Expansion / New Sales / Resurrected / Contraction / Churned
   - Customer Concentration
   2. Retention
   - Dollar Retention : NRR(Net Revenue Retention)
   - Logo Retention
   3. Sales Efficiency / Unit Economics
   - New Sales ARR vs Sales & Marketing Expense
   - Customer Acquisition Cost (CAC)
   - New Annual Contract Value (ACV) vs CAC
   - CAC Payback
   - Magic Number
   4. Margins
   - Gross Margin
   - Lifetime Value (LTV)
   5. Capital Efficiency
   - Burn Multiple
   - Hype Ratio
   6. Engagement
   - DAU/MAU
   - DAU/WAU

   - SaaS Metrics https://news.hada.io/topic?id=4142
   - Marketplace 회사를 위한 지표들 https://news.hada.io/topic?id=1574
"
"https://news.hada.io/topic?id=5222","애플, ATT도입 후 6개월간 광고시장 점유율 3배 증가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    애플, ATT도입 후 6개월간 광고시장 점유율 3배 증가

   - 앱 트래킹 투명성(ATT, App Tracking Transparency)
   ㅤ→ 페이스북, 구글 등이 아이폰 사용자의 앱 사용을 추적해서 타겟 광고를 하는 것을 막는 기능
   - 앱 스토어의 Search Ad(검색 광고)는 이제 비교할 수 없는 정확도로 타겟 고객에게 앱을 마케팅 가능
   - 분석에 의하면 애플 Search Ad에 의해 설치되는 앱이, 광고로 설치되는 앱 다운로드의 58%를 차지(작년 이맘때엔 17% 였음)
   - 애플 검색광고의 매출은 올해 5.5조원 가량이고, 전문가 예상으로는 다음 3년간 20조원까지 올라갈 것이라고

   개인화와 사용자 추적은 구별해야하지 않을까 싶네요

   참고할만한 thread 입니다.
   https://twitter.com/tiny_wings_/status/…

   실제로 애플 Search Ad의 광고 성능/효과가 저만큼 올라갔다기 보다는 IDFA 취득 불가로 타 광고 플랫폼들의 광고 상품의 집행이 줄었거나 집행 했다 하더라도 attribution이 이전처럼 잡히지 않아 애플의 Search Ad를 통한 설치가 상대적으로 늘어난 것으로 보일 수 있겠네요. 애플이 privacy 강화라는 명목을 내세워서 이런 효과까지 계산하고 노린거라면 소름..

   광고업계에서 일하고 있는데 실무자들은 자사광고시스템으로 끌어들이려는거 아니냐고 수근대긴했습니다. 그게 맞는지 틀린지는 모르겠지만 광고업하는입장에선 구글이 저걸 따라갈것이냐로 고민중입니다...

   - iOS14 : IDFA 시대가 저물어 갑니다 https://news.hada.io/topic?id=2337
   - IDFA가 없어진 이후의 모바일 마케팅 가이드 https://news.hada.io/topic?id=2363
   - iOS 14.5의 앱 추적 투명성(ATT)기능, 96%가 추적 비활성화 https://news.hada.io/topic?id=4214
   - Kara Swisher의 Tim Cook 인터뷰 https://news.hada.io/topic?id=4027
   - iOS 14.5 배포 - 애플워치로 잠금해제 지원, 앱 추적 투명성 기능 활성화 https://news.hada.io/topic?id=4150
   - 페이스북 : iOS14의 정책은 작은 비즈니스를 해치고 있다 https://news.hada.io/topic?id=3413
   - 페이스북, 애플 개인정보 보호 변경에 대비한 알림 메시지 테스트중 https://news.hada.io/topic?id=3673
"
"https://news.hada.io/topic?id=5202","GBM API를 지원하는 NVIDIA 베타 드라이버 v495.29.05 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               GBM API를 지원하는 NVIDIA 베타 드라이버 v495.29.05 출시

   NVIDIA 드라이버는 지금까지 EGL만을 지원하여 wayland 지원이 부실하였습니다.
   이번 GBM 지원으로 KDE와 GNOME 이외에 EGL을 지원하지 않는 swaywm 등의 wayland 컴포지터에서 NVIDIA 독점 드라이버와 함께 사용이 가능해졌습니다.

   - swaywm
   https://swaywm.org/
   - NVIDIA, Sway Wayland 컴포지터가 새로운 GBM 드라이버 지원으로 작동 함을 확인
   https://phoronix.com/scan.php/…
   - NVIDIA, Linux에서 Mir/Wayland 및 KMS 지원을 위한 드라이버 계획 발표(2014)
   https://www.phoronix.com/scan.php?page=news_item&px=MTgxMDE
"
"https://news.hada.io/topic?id=5259","Financial Times의 404페이지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Financial Times의 404페이지

   - FT스러운 내용으로 가득 채워놨네요.
   ""왜 이 페이지를 찾을수 없는 지를 저명한 경제학자들에게 물어봤습니다.""
   ㅤ→ Stagflation : 페이지의 비용이 증가했지만, 생산속도가 느려졌습니다.
   ㅤ→ 일반경제학 : 시장이 없습니다.
   ㅤ→ Liquidity Traps(유동성 함정) : 기술팀에 약간의 추가 자금을 투입했지만, 관심이 없어서 그냥 유지했기 때문에 페이지 경제를 활성화 하는데 실패했습니다.
   ㅤ→ Supply and demand(수요와 공급) : 수요가 늘어나서 공급이 부족해 졌습니다.
   ㅤ→ 전통경제학 : 해당 페이지가 없습니다. 우리는 간섭하지 않을 겁니다.
   ㅤ→ 케인즈 경제학 : 이 페이지에 대한 총 수요가 웹사이트의 생산능력과 반드시 일치하는 것은 아닙니다.
   그외에도.. 아래와 같은 다양한 경제용어에 입각한 설명을 볼 수 있습니다.
   Malthusianism(맬서스주의)
   Neo-Malthusianism(신맬서스주의)
   Marxism(마르크스주의)
   Laissez Faire Capitalism(자유방임 자본주의)
   Monetarism(통화주의)
   Efficient Markets Hypothesis(효율적 시장 가설)
   Moral Hazard(도덕적 해이)
   Tragedy of the Commons(공유지의 비극)
   Game theory(게임 이론)
   Mercantilism(중상주의)
   Trickle-down(낙수경제)
   Speculative bubble(거품경제)
   Socialism(사회주의)
   Behavioural economics(행동경제학)
   Theory of the second best(차선 이론)

   이런식의 유머 참 좋네요. 우리나라 경제지들과 비교하면 한숨이...
"
"https://news.hada.io/topic?id=5296","Ask GN: 주변의 누군가 개발자가 되는 것에 대해 진지하게 물어본다면 뭐라고 대답해주실 건가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Ask GN: 주변의 누군가 개발자가 되는 것에 대해 진지하게 물어본다면 뭐라고 대답해주실 건가요?

   한 학생이 개발자가 되는 것에 관심을 가지고 있고 그 주변에 있는 개발자는 저 밖에 없는 것 같아요. 그만큼 반가운 마음도 들어 좋은 이야기를 늘어놓기도 하지만, 한편으로는 삶의 커리어를 그려가는 과정에 영향을 끼치는 것이 마음에 부담이 되기도 합니다.
   여러분이라면 어떤 이야기를 해주시겠어요?

   제 아들을 보니 수학적인 자질이 좀 있고 문제풀이를 굉장히 좋아하더군요.
   ""넌 개발자해도 되겠다.""
   라고 말해줬습니다.
   자질이 보이면 하라고 하는거죠.
   자질이 안보이는데 한다고 하면 (가까운 사람일 경우에만) 말리는거구요.

   내가 세상을 바꾸고 바뀐 세상을 확인할 수 있는 몇 안되는 직업이자,
   평생 수입 관점에서 유망한 직업이 소프트웨어 개발자죠.
   끝없는 재미와 호기심의 충족은 덤 이고요.
   당연히 쉽고, 좋은 건 않죠.
   다른 직업만큼
   어렵죠.

   저는 비전공 출신으로 주변에 선배 개발자는 거의 없는 반면, 후배들 중에서는 개발을 하고싶어하는 친구들이 많은데요, 항상 저는 성향에 대해서 많이 이야기하는 것 같습니다.
   예를 들어 외과의사에게는 지능이나 손기술과 무관하게 생살을 찢고 뼈와 장기를 들어올릴 수 있는지가 가장 근본적인 역량인 것처럼
   개발자에게는 문제를 정의하고 해결하는 것에 흥미를 느끼는지가 가장 근본적인 역량이 되지 않을까 싶습니다. 그래서 저는 항상 지금까지 문제를 정의하고 해결해본 경험이 있는지 먼저 물어보는데요, 그게 너무 즐겁다는 사람은 개발자 해보라고 이야기해요 ㅎㅎ

   혹시나 제가 제 딸 아이의 학부모 참여 수업을 하게 된다는 가정으로 생각한게 있습니다.
   프로그래밍 언어.
   여기서 중요한 건 프로그래밍이 아니라 언어입니다. 영어는 사람과의 소통을 위한 언어입니다. 프로그래밍 언어는 컴퓨터와 소통하기 위한 언어입니다.
   잘못된 문법으로 소통할 경우 컴퓨터도 오해해서 잘못 동작하거나 오류를 일으키죠.
   다른 사람과 소통할 때는 영어, 한국어가 중요한게 아닙니다. 상대방에 대한 관심과 마음이죠. 컴퓨터도 마찬가지입니다. 컴퓨터가 어떻게 동작하는지 관심을 가지고 소통가능한 방법으로 다가가야 합니다. 다행히 컴퓨터는 조금만 설정을 해주면 내가 하고 싶은 언어로 다가가도 반응합니다.
   개발자는 이 언어를 만들거나 이 언어를 더욱 풍성하게 만드는 작가입니다.

   저는 무엇이 되고 싶은가, 보다는 무엇이 하고 싶은가가 더 중요하다고 생각합니다. 개발자가 된다는 것도 하나의 도구인 것 같아요. 그래서 저는 삶의 목표가 무엇인지, 뭘 하고 싶어서 개발자가 되고 싶은지 물어볼 것 같습니다.
   그리고 무엇을 하든, 기술이 미래를 바꾸고 있는 시대이기 때문에 그 트렌드를 이해하고 올라타는 데 있어서 개발자라는 직업이 유리하다는 것 정도를 얘기하고 싶네요.
   물론, 내 생각대로 움직이는 무언가를 만들 때의 희열이 크다는 걸 빼먹을 순 없지요. ㅎㅎ

   직업적으로는 가장 유망한 직업이라고 생각합니다. 수요도 계속 많을 것 같고, 대박(?)날 가능성도 많은 편이고.
   그런데 어떤 직업도 마찬가지겠지만, 적성에 안 맞으면 괴로울 수 있습니다. 오래다니면 짬밥(?)으로 버틸 수 있을지도 모르는 일반적인 직업에 비해, 당분간은 계속 새로운게 나오고, 계속 공부해야 하는 직업이 될 것 같습니다. (반대로 그러니 수요가 있는 거겠죠)

   물어보기 전에는 알려주지 않기. 물어본다면 최선을 다해서 설명해주기.
   제 육아법과 별반 다르지 않은 것 같은데요, 확실하게 지지대/등대 역할을 해주는 선에서 스스로를 제어합니다. 혹시나 제 과한 의욕 때문에 지레 겁을 먹거나, 학생만의 눈을 가려버릴까봐요.
   환경을 조성해주는 것에 포커스를 맞춰야 하지 않나, 하고 생각합니다. 그렇게 멍석을 깔아준 뒤에 이 아이가 하느냐 안하느냐는, 제가 통제할 수 있는 부분도 아니고 감히 통제해서도 안되는 부분이라고 봅니다.

   왜 하고 싶은지 먼저 물어볼 것 같습니다

   좋은 말씀들은 윗분들이 다 해주신 것 같아서, 제 개인적으로 느낀 점들을 적어 봤습니다.
   - 즐거움은 고통의 반대가 아니었던 것 같아요. 그리고 대부분, 고통이 먼저 오고 즐거움이 조금 뒤에 따라왔던 것 같네요. 제가 2년 전에 사이드 프로젝트들을 모두 포기하게 된 이유가 '고통스러워서' 였는데, 그 때 저는 그게 즐겁지 않다라고 생각했던 것 같아요. 지금은 개발은 즐겁고 굉장한 걸 만들 수 있는 일이지만, 즐거움과 비례해서 고통도 늘어난다고 생각해요.
   - 모든 건 하루 아침에 만들어지지 않았던 것 같아요. 괜찮다고 생각되는 걸 만들기 위해서는 시간이 많이 걸려요. 제가 어릴때는 다른 사람들이 어떻게 금방금방 괜찮은 게 만들 수 있는지, 혹시 치트키가 있는지 정말 궁금했던 적이 있었는데요. 제가 보던 건 다른 사람들의 성공한 순간 뿐이라는 점이라는 걸 깨닫고 나고. 그 사람들도 수면 아래에서 수많은 날들을 홀로 싸웠을 것을 생각하니 더 이상 쉽게 포기하지 않았던 것 같아요.
   - 무언갈 배울 때는 : 바닥을 쓸고, 체력을 기르고, 기술을 연마하고, 그 다음에 뛰어들어야 한다고 생각해요. 물론 진짜 바닥을 쓰는 게 아니라(.. ) 처음 무언가를 배울 때는 단순하고 쉬운 것부터 차근차근 연마하고. 좀 하는 것 같으면 다음 단계, 그 다음에 다음 단계... 이렇게 배워야 했던 것 같아요. 저는 그걸 몇년 간 몰라서 앞장은 그냥 막 넘기다가 뒷장에서 뭔말인지 못 알아먹어(기초 체력이 부족해서) 접었던 책들이 한 둘이 아니었던 것 같네요.
   - 위 3가지를 생각하고 난 다음, 제가 보는 다른 사람들의 시간은 아주아주 일부분이고. 그렇기에 한순간에 일어났다고 생각될 만한 것들도 사실 그 사람은 제가 안 보고 있는 동안 열심히 이뤄낸 것이라고 생각하게 되었어요. 그래서 다른 사람들의 성공이나 빠른 학습에 질투보단 동경이 먼저 들게 된 것 같아요.

   저는 개발을 할 수 있다는 건 인생을 좀 더 효율적/생산적으로 살 수 있게 해주는 것이라고 생각합니다.
   간단한 DB정리부터, 매크로를 만들어보거나, 엑셀 시트에 수식을 넣거나, 나한테 필요한 도구를 만들 수 있거나..
   꼭 개발자가 되지 않더라도, 개발과 IT에 대해 배워두면 어떤 분야에 가든지 남들보다 더 효율적으로 일할 수 있게 되니까, 한 번쯤은 배워볼 만한 필수 스킬셋이 아닐까 해요.
   이제 IT가 세상 모든 것의 기본 인프라가 되어서, 어떤 분야에 가든 그 밑바닥에는 기술이 산재하게 되었고, 그걸 얼마나 이해하는지에 따라 성취도가 다를 거고요.
   처음엔 코딩으로 시작하겠지만, 컴퓨터와 웹 등의 IT 기초를 단순히 공부가 아닌 세상이 돌아가는 법칙에 대해서 배운다는 마음가짐으로 접하면 좋을 것 같아요.
   그러고 나서 세상의 모든 것들을 볼 때, 저 밑바닥에서는 어떤 기술이 활용되고 어떻게 움직이고 있을까, 만든 사람은 어떻게 했을까를 생각하는 습관을 들이라고 말해주고 싶네요.
   결론적으로는 ""꼭 개발자가 되는 게 목표는 아니어도 된다. 개발은 배워두면 어디가서든 쓸모 있다. 더 공부해보고 난 뒤에 진로를 정해도 늦지 않다.""

   저는 우선 이렇게 얘기해주고 싶은데, 댓글 주시면 함께 전하고 싶습니다~
   - 제가 개발자로서 좋은 점은 혼자가 아니라는 점 같아요. 기본은 물론 계속 되지만, 새로운 기술들이 나오고 사례들이 쌓이고 또 더 발전한 것이 계속해서 나오는 현재에 살고 있어서 그런지, 서로 돕고 공유하는 문화가 자리잡은 게 개발 문화라고 생각해요. 이것이 계속 배우게 하고 늙지 않게 하고 서로를 성장시키는 것 같아요. 내가 꼬꼬마이던 연차가 너무 늘어버린 개발자이던 간에 배우고만 싶다면 얼마든지 할 수 있는 문화에 환경도 갖춰져있어요.
   - 계속 배우고 싶어해야 하고 배워야 하는 것이 누군가에겐 부담일 수 있습니다. 저는 가끔 버겁거든요. ㅎㅎ 배울 게 널린 만큼 더 즐거워하고 더 열심히 하는 누군가는 더 빨리 가겠죠. 하지만 때론 버겁더라도 내가 계속 궁금해하며 내 속도대로 꾸준히 해 갈 재미도 느낀다면 맞는 길일 것 같아요.
   - 0을 1로 만드는 성취감이 있어요. 1이 되지 않는 0을 보며 스트레스를 받아요. 대부분 여기에 일정 압박이 붙어요.
   - 생각한 것을 만들 수 있어요. 내가 만든 것을 세상 사람들이 쓸 수 있어요. 물론 아무도 안 쓸 수도 있어요...
   - 개발자로 산다는 것은 개발만 하는 Sandbox 에서 사는 것이 아니에요. 회사, 팀 등 소속된 곳의 문화, 같이 일하는 사람들, 하는 프로젝트의 성격, 일정, 보상 등등에 많은 영향을 받을거예요. 그런데 이건 어떤 일이던지 마찬가지 같아요. 개발도 잘하면서 소프트 스킬도 키우면 많은 사람들이 함께 일하고 싶어할거예요.
"
"https://news.hada.io/topic?id=5311","Zoom, 무료 버전에 광고 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Zoom, 무료 버전에 광고 추가

   - Advertising Pilot Program 시작
   ㅤ→ 계속 무료로 서비스를 제공하기 위해 무료인 Basic 티어 사용자에게 광고 노출 예정
   - 초기 프로그램에선, 사용자가 회의를 마친 후 보게되는 브라우저 페이지에서만 광고 노출
   - 다른 Basic 사용자가 개설한 미팅에 참가한 Basic 사용자들만 보게 될 것(특정 국가에만 적용)
   - 미팅/웨비나/메시징콘텐츠(오디오/비디오/파일/메시지)는 절대 마케팅/프로모션/써드파티 광고 용도로 사용하지 않을 것
"
"https://news.hada.io/topic?id=5240","Rust 1.56.0 및 Rust 2021 발표 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Rust 1.56.0 및 Rust 2021 발표

   - Rust는 언어가 빠르게 발전하면서도 안정성을 유지할수 있도록 Edition 방식을 채택
   ㅤ→ 하위호환이 안되는 기능들을 Opt-in 방식으로 에디션에 추가
   - Rust 2021
   ㅤ→ Disjoint capture : Closure 가 실제 사용하는 필드만 캡쳐
   ㅤ→ IntoIterator for arrays : array.into_iter() 가 레퍼런스 대신 밸류로 iterate
   ㅤ→ 매크로에서 OR (|) 사용
   ㅤ→ 새 Cargo Feature Resolver (버전 2)가 기본 값
   ㅤ→ Prelude(무조건 임포트되는 표준 라이브러리)에 추가 : TryInfo, TryFrom, FromIterator
   ㅤ→ Panic macro가 무조건 포맷 스트링을 요구. 마치 println!() 처럼
   ㅤ→ ident#, ident""..."", ident'...' 가 예약어에 추가
   ㅤ→ bare-trait-objects, ellipsis-inclusive-range-patterns 경고를 에러로
   - cargo fix 를 통해서 대부분 자동으로 마이그레이션 지원

   - Rust 2021 Edition 계획 https://news.hada.io/topic?id=4241
"
"https://news.hada.io/topic?id=5294","macOS가 더 안정적이 되었습니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          macOS가 더 안정적이 되었습니다

   - 맥의 고질적인 문제였던 ""시스템 신뢰성""이 개선되어온 최근 변경들을 정리
   - 하이 시에라에서 HFS+ 에서 APFS로의 파일 시스템 변경
   ㅤ→ Copy-On-Write를 이용하여 더 안정적으로
   - 카탈리나 부터는 부트 볼륨을 System(리드온리) + Data 2개의 볼륨으로 분리
   - 빅서 에선 시스템 볼륨을 Sealed Snapshot 으로 바꿔서 시스템 파일을 더 안전하게 보호
   - 몬테레이의 /Application 폴더는 하나로 보이지만, 시스템 볼륨에 있는 기본 맥 앱이 들어있는 폴더와 사용자가 설치한 앱들이 들어있는 폴더 두개임
   - SecureBoot 가능한 몬테레이(T2칩 있는 모델)는 이렇게 동작
   ㅤ→ 맥은 시스템 볼륨의 스냅샷에서만 부팅 되며 이 볼륨은 어떤 방식으로든 변경 불가
   ㅤ→ 맥은 Sealed된 시스템에서만 부팅되며, 이것은 애플이 만든 것과 비트단위로 일치함
   ㅤ→ macOS의 설치 프로그램/업데이터 외에는 시스템 볼륨을 변경할 수 없음
   ㅤ→ macOS 업데이트/인스톨 프로세스 중에 데이터 볼륨은 언마운트되어서 문제 발생을 차단
   ㅤ→ 이 모든것은 높은 안정성을 가진 SSD에서 수행됨
   ㅤ→ 사용된 파일시스템은 견고한 APFS
   - Secure Boot가 활성화 된 빅서/몬테레이 맥이 잘 부팅된다면 System 볼륨은 ""완벽한 상태""임
   - 가능하면 써드파티 커널 확장을 설치하는 대신, 시스템 확장을 이용하는 다른 소프트웨어를 찾을 것

   Apple T2 보안 칩이 탑재된 Mac 모델 - Apple 지원 (ko-KR)
   https://support.apple.com/ko-kr/HT208862
"
"https://news.hada.io/topic?id=5201","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   봉준호 감독이 직접 그린 스토리보드 책을 도서관에서 빌렸어요.
   기생충 영화 틀어놓고 비교해보면서 감상할 예정입니다ㅎㅎ

   저번 주 포스트 모템은..
   - 저번 주에는 4분기의 목표를 적었습니다.
   - 그리고 1주일 회고를 했고요.
   - YouTrack에 1주일 회고를 자동으로 생성하게 하는 Workflow를 작성하였습니다.
   - 저번주의 Godot 게임잼은 결국 못 했습니다. OTL.
   이번 주의 계획은...
   - 제가 만든 개발 툴킷을 사내 다른 프로젝트에서도 사용할 수 있게 마이그레이션 중입니다. Lua에서 JS로 개발 스크립트가 바뀌어서 (... ) 포팅 하려고 해요. 스크립트 엔진도 다 바뀌어서 거의 새로 만들고 있습니다.
   - 오늘 Godot 게임잼에 기획 문서를 적을 거고, 내일부터 만들어서... 23일에 끝내려고합니다.
   - 쓰던 소설 마감해야 해요! 'ㅁ '/ 앞으로 꽤 남았는데 주말안에 끝낼 수 있을까 걱정이네요.
   - 간간히 만드는 SRPG의 이슈를 좀 쳐야해요.

   DIABLO2

   아이패드 드로잉 온라인 강좌를 신청해서 이번 주말 한 챕터 이상 배우려고 합니다.
   지난 주에 남산 야외 식물원으로 산책 다녀왔는데 꿩들이 산책로에 많이 나와있더라고요. 신기했어요. ㅎㅎ 산책은 좋았는데 조금 추웠습니다. 더 추워진다고 하니 좀 더 단단히 입고 또 갈까 해요.

   저는 이번주말에 퇴근 후 할일에 대한 계획을 재정립해야 할거 같네요. 이직 후 내상치료와 회사 적응을 핑계로 평일 공부를 않했는데 이번에 다시 계획 세워서 다음주부터 다시 시작하려 합니다.

   지난주에 이어서 테슬라 주변기기 구입글을 완성하려구요. 하다보니 뭔가 아이템이 많아서 링크만 모아두고 끝났네요.
   허리를 살짝 삐끗해서 이번 주말은 사실 거의 누워지낼거 같아요 흑. 다들 몸 조심하세요
"
"https://news.hada.io/topic?id=5250","FaaS 선택하기aaS 선택하기 2021

   - 여러 클라우드 벤더의 Function as a Service 비교
   - 비교 항목
   ㅤ→ 플러그인/연동/라이브러리 지원 여부
   ㅤ→ Edge 가능
   ㅤ→ 비용
   ㅤ→ 로컬 시뮬레이션 여부
   ㅤ→ 개발 언어
   ㅤ→ Infrastructure as code (IaC)
   ㅤ→ CLI 지원 여부
   ㅤ→ 지속 배포(CD) 가능
   - 비교 플랫폼
   ㅤ→ AWS Lambda
   ㅤ→ Google Cloud Functions
   ㅤ→ Azure Functions
   ㅤ→ Vercel
   ㅤ→ Gatsby Cloud Functions
   ㅤ→ Netlify Functions
   ㅤ→ Cloudflare Workers
   ㅤ→ Fly.io
   ㅤ→ Oracle Functions
   ㅤ→ IBM Functions
   ㅤ→ Tencent Cloud
   ㅤ→ Alibaba Cloud
   ㅤ→ Redhat Open Shift
   ㅤ→ TinyFunction / Pipedream/ Autocode
"
"https://news.hada.io/topic?id=5313","Netflix, Metaflow UI 오픈소스로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Netflix, Metaflow UI 오픈소스로 공개

   - Metaflow : 넷플릭스가 만든 데이터 사이언스용 풀스택 파이썬 프레임워크 오픈소스
   ㅤ→ 이 Metaflow의 워크플로우를 실시간으로 모니터링 하기 위한 GUI 도구
   - 전문 데이터사이언티스트 들이 실제 작업에 사용하는데 초점을 둠
   - 플러그인을 통해 확장 가능

   Metaflow - 넷플릭스가 만든 데이터 사이언스용 파이썬 프레임워크 오픈소스 https://news.hada.io/topic?id=1022
   소개글 Open-Sourcing a Monitoring GUI for Metaflow, Netflix’s ML Platform
   - https://netflixtechblog.com/open-sourcing-a-monitoring-gui-for-metaflo…
"
"https://news.hada.io/topic?id=5284","Oculus Quest, 페이스북 계정 필수가 아니게 바꿀 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Oculus Quest, 페이스북 계정 필수가 아니게 바꿀 예정

   - 1년 전에 Oculus 사용을 위해서는 페이스북 계정을 필수 요구하게 바꿔서 비난을 받았음
   - Meta로의 전환과 함께 회사 및 Oculus의 포커스를 좀 더 ""업무(Work)""쪽으로 옮기면서 이 계정 요건을 없앨 것이라고 밝혀
   - 세부적으로는 Oculus 브랜드를 아예 없애고, Oculus Quest가 아닌 Meta Quest로 변경할 것이라고

   브랜드 Re-Align 에 관한 내용은 새 CTO인 Boz가 다른 글에서 밝혔습니다.
   - https://www.facebook.com/boz/posts/10114026973983491
"
"https://news.hada.io/topic?id=5228","한국어 음성인식, 글로벌 수준에 접근하다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        한국어 음성인식, 글로벌 수준에 접근하다.

   - 음성인식 데이터셋의 현황과 기대
   - 음성 인식 평가를 위한 데이터셋 현황과 한국어 음성 표준 데이터셋 구축의 필요
   - 글로벌 음성 데이터셋의 비교와 한국인 대화 음성 데이터의 기능
   - 일반, 노년, 아동, 차량 분야 명령어 음성 AI 데이터
   - 제한된 데이터셋에서도 진화하는 인공지능 음성-텍스트 동기화(AI Speech-Text Synchronization)
"
"https://news.hada.io/topic?id=5253","질문에 대한 유용한 답변을 얻는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          질문에 대한 유용한 답변을 얻는 방법

   - 모호하거나 불명확한 질문을 하면 상대방은
   ㅤ→ 내가 이미 아는걸 설명하거나
   ㅤ→ 내가 모르는 거지만 내 문제와 상관없는걸 설명하거나
   ㅤ→ 관련 주제는 맞는데 내가 이해 못하는 용어를 사용해서 계속 헷갈리게 됨
   - 이럴때 적절하게 중단시키고 원하는 답변으로 넘어가게 하는게 필요함
   [ 답변 중간에 끼어드는 방법을 얘기하기 전에 먼저 중요한 2가지 질문 전략 ]
   1. 예/아니오 질문하기
   ㅤ→ 복잡한 주제에도 충분히 Y/N 질문 가능
   ㅤ→ 이 질문의 일부는 ""내 이해도를 확인시키는 질문""
   ㅤ→ 다른 주제로 넘어가지 않고 빠르게 답변을 받을수 있음
   ㅤ→ 예제 : Database 에 대한 질문
   ㅤㅤ⇨ 얼마나 자주 DB Failover가 발생할것 같나요? 매주 ?
   ㅤㅤ⇨ 수작업으로 Scale Up 하나요 ?
   ㅤㅤ⇨ 페이스북은 자체 MySQL 관리 소프트웨어가 있나요?
   ㅤㅤ⇨ Orchestrator는 Proxy 인가요?
   ㅤㅤ⇨ 당신이 얘기하는 Replica의 목표는 성능을 위한건가요 ?
   ㅤㅤ⇨ 검색하는 ID 기반으로 쿼리를 샤드로 라우팅 하나요 ?
   2. 이해하고 있는 걸 말하기
   ㅤ→ 내 목표를 설명하고
   ㅤ→ 내가 현재 이해하고 있는 것을 얘기하고
   ㅤ→ 목표에 대해서 추측을 해서 답변자가 맞다/틀리다 얘기할수 있게 함
   ㅤ→ 이해한 것을 기록하는 과정 자체가 생각을 명확히 하는데 도움이 됨
   ㅤ→ 이해한 것을 얘기하는 것은 예/아니오 질문의 일부임
   ㅤㅤ⇨ 이것은 X가 어떻게 작동하고 있는지 제가 이해하고 있는건데요. 이게 맞나요 ?
   [ 인터럽트 하기 ]
   - 기꺼이 방해할 것
   ㅤ→ 상관없는 주제를 길게 설명한다면 인터럽트 해야함
   ㅤ→ 무례하다고 느낄수도 있지만, 궁극적으로는 모두에게 효율적. 계속하면 양쪽의 시간을 버리게 됨
   ㅤ→ 일반적으로는 더 구체적인 질문을 해서 인터럽트 함. 관련없는 대답은 아마도 질문이 막연했기 때문
   - 내 질문의 답이 아닌 답변을 억셉트 하지 말 것
   ㅤ→ 내 질문에 대한 답이 아닌 것으로 대답을 마치면, 더 물어보는 것이 중요함
   ㅤ→ 더 자세한 질문(Yes/No 같은 것)을 통해 내가 알고 싶은 방향으로 유도
   ㅤ→ 내가 이해하지 못한 용어에 대해 설명을 요청할 것 (X는 뭔가요?)
   - 잠시 시간을 가지고 생각할 것
   ㅤ→ 사람들에게 질문을 하면 가끔 전혀 몰랐던 놀라운 것들을 듣기도 함
   ㅤ→ 이럴때 이 정보를 통해 내가 알고 있는 것들과 조합해야 하는 시간이 필요함
   ㅤ→ 그러면 ""잠깐만요, 이거 놀랍네요. 잠시 생각좀 할께요"" 이런 말을 하고 내 지식과 통합하고 새로운 질문을 생각해보기
   - 약간의 자신감이 필요
   ㅤ→ 위의 인터럽트 하는 것/답변이 아닌 것을 수락하지 않는 것/잠시 생각할 시간을 가지는 것 을 위해서는 ""약간의 자신감""이 필요
   ㅤ→ 자신감이 없었을때는 ""아 이 설명은 좋은거 같은데, 아마도 내가 똑똑하지 못해서 이해 못하는 구나"" 라고 생각하고 그 답변을 받아 들였음
   ㅤ→ 이런걸 기억해두면 도움이 됨
   ㅤㅤ⇨ 사람들은 종종 도와주려고 함(그들의 첫 설명이 이해하지 못할 용어로 가득차 있을지라도)
   ㅤㅤ⇨ 대화가 끝날때까지 1개라도 유용한 정보를 얻었다면 성공임(Yes/No 질문에 대한 답변 하나라도 내가 이전에 몰랐던 거라면)
   - 유용한 답변을 주는 법
   ㅤ→ 말하는 중간에 계속 확인하기 ""이거 이해 되나요?(does that make sense?)""
   ㅤ→ 또 다른 중요 체크
   ㅤㅤ⇨ 내가 이 컨셉을 설명해본적이 없다고 얘기하기(아마도 첫 설명은 좋지 않을 것이므로)
   ㅤㅤ⇨ 당신은 상대방에 대해서 잘 모른 다는 것(그들이 아는 것/모르는 것에 대한 잘못된 가정을 할 것이기 때문에)
   [ 정보 추출을 잘하는 것은 초능력(Superpower) 임 ]
   - 일부 개발자는 많이 알고 있지만, 자신이 알고 있는 것을 설명하는게 능숙하지 않음
   - 설명을 잘 못한다고 화내는 대신, 필요한 답을 얻을수 있는 질문을 하는게 더 효과적
   - 이러면 배울수 있는 사람들을 더 폭 넓게 가질수 있음
   ㅤ→ 쉽게 설명하는 사람을 찾는 대신, 내가 원하는 정보를 가진 사람을 찾고 원하는 것을 배울때 까지 구체적으로 질문하면 됨
   - 대부분의 사람들은 정말로 도움이 되기를 원하기 때문에 이런 질문에 기꺼이 답변함
   - 질문을 잘하게 되면 ""원하는 답변을 빠르게 얻어내는 질문 세트""를 가지게 되고, 이러면 모든 이들의 시간을 유용하게 사용하는 것

   무례하지 않게 인터럽트를 하는 것이 정말 중요하다고 생각해요.

   약간의 자신감이 필요하단 부분 공감되네요. '당신이 제대로 설명해주면 나는 이해할 수 있다' 라는 자신감이 있어야 질문도 잘 하게 되는것 같아요.

   이분 글이 항상 재미난 것 같아요. 예전에 길게 번역한 글이 하나 더 있습니다.
   - 동료가 일을 잘했다면, 그 동료의 매니저에게 말해주세요 https://news.hada.io/topic?id=2487
   조금 다른 방식의 질문하는 법
   - 빠르고 정확하게 답변을 받을 수 있는 질문하는 법 https://news.hada.io/topic?id=1816
"
"https://news.hada.io/topic?id=5271","애플 M1 Max 에서의 렌더링 후기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          애플 M1 Max 에서의 렌더링 후기

   ""M1 Max는 노트북 칩과 하이엔드 데스크탑 칩을 넘어서, 서버급 워크스테이션 하드웨어와 비교해야 함""
   - 디즈니 애니메이션 스튜디오에서 일하는 CG엔지니어 Yining Karl Li의 글
   - 그가 C++로 직접 만드는 취미 렌더러인 Takua로 렌더링을 돌려본 소감과 결과물
   ㅤ→ GPU를 사용하지 않는 CPU전용 렌더러
   ㅤ→ 지금까지 개인 장비로는 시도해보지 못했던 4K장면 렌더링도 잘 수행 되었음
   - Apple M1 Max 10코어 CPU + 64GB 14인치 모델을 사용
   ㅤ→ Intel Core i7-9750H, Intel Xeon W-3245, Intel Xeon E5-2680 x2, AMD Threadripper 3990X 과의 속도 비교

   Takua 렌더러로 4K 렌더링된 이미지는 실제하고 구분이 잘 안될 정도로 멋지네요.
   렌더링 속도 비교한거 보니 코어당 속도로는 비교가 안되고..
   전체 코어 속도로 보면 CPU 한개당 200만원씩 하는 Xeon과 싸울만 하네요.
"
"https://news.hada.io/topic?id=5328","구글 플레이에서 대한민국 이용자를 위해 개발자 제공 결제 시스템 적용이 가능해집니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             구글 플레이에서 대한민국 이용자를 위해 개발자 제공 결제 시스템 적용이 가능해집니다

   - ""한국 이용자에게 앱 내에서 디지털 상품 및 서비스를 판매하는 개발자는 Google Play의 결제 시스템과 함께 개발자가 제공하는 인앱 결제 시스템 (이하 ""개발자 제공 인앱 결제 시스템"")을 추가할 수 있습니다.""
   ㅤ→ 이용자에게 결제 시스템에 대한 선택권 제공
   - 이용자가 개발자 제공 인앱 결제 시스템을 이용해 결제하는 경우 개발자가 Google에 지급하는 서비스 수수료는 4% 인하
   ㅤ→ Google Play 결제 시스템을 통해 거래된 디지털 재화에 15%를 지불하는 대다수의 개발자들은 개발자 제공 인앱 결제 시스템을 통한 거래에는 11%의 서비스 수수료만 내면 됨
   ㅤ→ 전자책 제공업체처럼 미디어 체험 프로그램에 참여하는 카테고리의 앱이 Google Play 결제 시스템을 통해 이루어진 거래에 대해서 10%의 서비스 수수료를 지불하는 경우, 개발자 제공 인앱 결제 시스템에서 이루어진 거래에 대해서는 6%만 지불

   4% 포인트가 더 깍이는건가 하고 좋다 말았습니다. ㅎㅎ
   '개발자 제공 인앱 결제 시스템' 을 사용해도 써드파티 업체에 약간의 수수료를 내야할텐데 4% 포인트와 거의 상쇄될 듯 하네요.
   이걸 붙일 사람이 과연 있으려나 싶습니다. (저는 안 붙일 예정)
   그렇다고 웹 결제를 만들기에는 좀 불안합니다. 앱을 내려버릴까봐서.
   확실한 정책이 나올 때까지 좀 더 기다릴 수 밖에요.
   한국에서 이대로 오케이 해준다면 바로 구글이 원한 결과 아닐까 싶습니다. 똑똑한 친구들...

   이게 좀 애매하네요. 다른 인앱 결제를 써도 수수료를 다 면제하는게 아니고, 11%는 받겠다는 거군요.
   웹에 가서 결제 하는 대신, 인앱 결제 처럼 조금 편하게 하려면 수수료를 내라 이거군요.
   나름 머리를 굴린 듯 한데.. 다들 그냥 웹에 가서 결제하도록 하는 방식을 취하지 않을까 생각이 듭니다.
"
"https://news.hada.io/topic?id=5233","Edge 다음 버전 부터 브라우저 내 개발 도구로 VSCode 사용 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Edge 다음 버전 부터 브라우저 내 개발 도구로 VSCode 사용 가능

   ""Open Source files in VS Code""
   - 브라우저에서 프론트 엔드 코드 디버깅중 변경한 코드가 실제 저장 가능
   ㅤ→ 로컬에서 작업 중일 경우 브라우저에서 자동 인식해서 루트 폴더를 선택하도록 하고, 하드 접근 권한을 요청
   ㅤ→ 승인하면 DevTools 의 모든 링크가 브라우저의 Source 창 대신 VSCode에서 열리고 해당 파일 위치로 이동
   ㅤ→ DevTools에서 수정한 내용이 VSCode에 바로 적용되고, VSCode에서 수정 후 저장하면 브라우저에도 싱크
   - Settings-Experiments 에서 켜야 만 동작

   근데 요즘에는 순수 HTML, CSS, JS 사용해서 개발하기 보다는 Typescript 쓰거나 SPA 개발을 많이해서 webpack 같은 툴을 통해서 빌드해야되는데 이 기능이 실제로 유용할까 싶은 의문이 있네요

   https://vscode.dev/
   공개한거 같네요

   아 요거는 약간 다른거 같아서 별도 기사로 올렸습니다!
   - vscode.dev 공개 https://news.hada.io/topic?id=5235
"
"https://news.hada.io/topic?id=5252","vdx - FFMpeg을 쉽게 이용하는 직관적인 CLI 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   vdx - FFMpeg을 쉽게 이용하는 직관적인 CLI 도구

   - 크롭, 트림, 리사이즈, 리버스, 회전
   - 오디오 제거, 속도 변경, 프레임레이트 변경, 볼륨 조정
   - 다른 파일로 변경
   - 여러개의 파일에 대해 동시에 작업 수행 지원
   $ vdx '*.mov' --crop 360,640 # Crop to width 360, height 640
   $ vdx '*.mov' --format gif # Convert to GIF
   $ vdx '*.mov' --fps 12 # Change the frame rate to 12
   $ vdx '*.mov' --no-audio # Remove audio
   $ vdx '*.mov' --resize 360,-1 # Resize to width 360, maintaining the aspect ratio
   $ vdx '*.mov' --reverse # Reverse
   $ vdx '*.mov' --rotate 90 # Rotate 90 degrees clockwise
   $ vdx '*.mov' --speed 2 # Double the speed
   $ vdx '*.mov' --trim 0:05,0:10 # Trim from 0:05 to 0:10
   $ vdx '*.mov' --volume 0.5 # Halve the volume
   - 기본은 3개를 동시에 진행, 옵션으로 동시 수행 갯수 조정 가능
   $ vdx '*.mov' --format gif --output './gifs' --parallel 5
"
"https://news.hada.io/topic?id=5209","PinePhone Pro 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            PinePhone Pro 공개

   - 리눅스 기반의 오픈소스 스마트폰
   - Rockchip Hexa-core SOC 1.5Ghz + ARM Mali GPU
   - 4GB LPDDR4 + 128GB eMMC
   - 13MP 메인 카메라 + 5MP 프론트 카메라
   - IPS 디스플레이 + 고릴라 글래스 4
   - 오리지널과 같은 pogo-pin 적용 : 키보드, LoRa, 지문 인식기, 무선 충전 케이스등 그대로 적용
   - USB-C 파워, 데이터, DP 비디오 아웃
   - Manjaro Linux + KDE Plasma Mobile

   - PinePhone Beta 프리오더 시작 https://news.hada.io/topic?id=3924
"
"https://news.hada.io/topic?id=5197","SixtyFPS - 유연한 GUI 개발 툴킷","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        SixtyFPS - 유연한 GUI 개발 툴킷

   - 임베디드/데스크탑/모바일/웹 등의 크로스플랫폼 Native UI 지원
   - Rust, C++, Node.JS 지원
   - 몇백KB의 램만 있으면 동작 가능
   - 직관적인 API
   - 부드러운 터치 인터페이스 지원
   - 마크업 언어로 기기 비종속적인 UI 구현
   - WASM으로 컴파일해서 웹에서도 실행 가능
"
"https://news.hada.io/topic?id=5317","ToxiProxy - 네트워크 테스팅용 오픈소스 TCP 프록시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ToxiProxy - 네트워크 테스팅용 오픈소스 TCP 프록시

   - 네트워크 상황을 시뮬레이팅하는 테스팅 프레임워크
   - CI/개발환경 등에서 네트워크 연결이 이상할 때를 시뮬레이트해서 SPOF가 있는지 테스트
   - Shopify에서 개발해서 2014년부터 사용 중
   - Go로 작성된 TCP 프록시와 HTTP로 프록시와 통신하는 각종 언어용 클라이언트로 구성
   ㅤ→ ruby, Go, Python, .NET, PHP, Node, Java, Haskell, Rust, Elixir
   예1) 모든 MySQL 응답을 1초간 지연
   Toxiproxy[:mysql_master].downstream(:latency, latency: 1000).apply do
   ㅤShop.first # this takes at least 1s
   end
   예2) 모든 Redis Instance를 다운
   Toxiproxy[/redis/].down do
   ㅤShop.first # this will throw an exception
   end
"
"https://news.hada.io/topic?id=5315","Thank you, GitHub","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Thank you, GitHub

   - 깃헙의 CEO인 Nat Friedman이 자리에서 사임
   ㅤ→ 자신의 일생의 목표중 하나인 ""Latin어로 된 직책 갖기""를 만족시키는 Chairman Emeritus (명예 회장) 이 되기로
   - 차기 CEO는 현재 CPO인 Thomas Dohmke
   - 자신은 다시 원점으로 돌아가 미래를 만들 개발자/설립자를 지원하고, 어드바이스 하고 투자하는 일을 할 것
   - 현재 깃헙은
   ㅤ→ 7300만명의 개발자가 사용중이고,
   ㅤ→ Fortune 100대 기업의 84%가 고객이고
   ㅤ→ GitHub Actions 가 1등 CI가 되었음

   창업자는 아니었던걸로 기억합니다. Xamarin의 창업자로 알고 있어요... (MS가 Xamarin을 사서 영입)

   앗 Nat가 일을 넘 잘해서 제가 착각을.. 수정해 두었습니다.
"
"https://news.hada.io/topic?id=5244","Blitz - 풀스택 React 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Blitz - 풀스택 React 프레임워크

   - Ruby on Rails 에서 영향받고, Next.js 기반으로 만들어짐
   - REST/GraphQL 필요없는 ""Zero-API"" 데이터 레이어 제공
   ㅤ→ 서버 코드를 컴포넌트에 직접 임포트하면 빌드시에 자동으로 HTTP API를 생성해서 교체됨
   ㅤ→ 생성된 API는 앱이나 써드파티에서도 이용 가능
   - ESLint, Prettier, Jest, 사용자 가입/로그인/암호 재설정 기능등은 기본 포함
   - 다양한 기본값과 컨벤션 : Routing, 파일 구조, 인증 등
   - DB부터 프론트엔드까지 모두 포함. 하나만 만들어서 서버/서버리스에 배포 가능
   - Next.js 앱을 마이그레이션 지원

   오 풀스택 리액트라니 흥미롭군요.
"
"https://news.hada.io/topic?id=5281","LaMa - 큰해상도 이미지에서 사물 지우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        LaMa - 큰해상도 이미지에서 사물 지우기

   - ""Resolution-robust Large Mask Inpainting with Fourier Convolutions"" 논문의 구현 코드
   ㅤ→ ~2k 고해상도 이미지에서 사물을 깔끔하게 지워줌
   - Google Colab 또는 Python/Conda/Docker 등 원하는 환경 사용 가능
   - Samsung AI Center Moscow 의 Advanced Image Manipulation Lab 에서 나온 논문
"
"https://news.hada.io/topic?id=5287","C Programing 가이드rograming 가이드 : GOTO

   C 프로그래밍에서 Goto의 원리와 활용에 대하여 예시와 함께 보여준 가이드 글입니다.
   68년에 나온 'GOTO의 해악성에 대한' 논문으로 이 구문 자체에 논쟁이 많은데요. 이 글은 GOTO의 해악성에 대한 점보단 활용 방안에 초점이 맞춰져 있습니다. 내용과 코드는 그리 어렵지 않습니다. ( C언어를 모르셔도 프로그래밍을 하셨다면 쉽게 이해할 수 있습니다 )

   이 문서는 [Beej's Guide to C Programming]이라는 전자책의 일부로군요.
   해당 챕터만 설명하기보다는 전자책 자체를 소개하는 게 더 낫지 않았을까 싶습니다.
   https://beej.us/guide/bgc/

   앗. Goto만 따로 떈 이유는 제가 본 C언어 책들이 가장 많이 두루뭉실하게 넘어간 파트라서, 그래서 저 파트가 신기하게 느껴져서 따로 땠는데. 생각해보니 C언어를 모르는 분들도 많을테니 kunggom님 말씀대로 전체를 소개해주는 편이 좋았겠네요. 좋은 말씀 감사합니다.
"
"https://news.hada.io/topic?id=5304","봇 감지 우회하기 : 차단당하지 않고 웹 스크레핑 하는 법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    봇 감지 우회하기 : 차단당하지 않고 웹 스크레핑 하는 법

   - 최근의 안티 봇 관련 정보를 정리한 Repo
   - 봇 감지 시나리오 와 해결책
   - 추천 서비스들 : Proxy, Scraping as a Service, De-Captcha
   - 안티 봇 소프트웨어들
   - 자동화 기능을 가진 스텔스 브라우저들
   - puppeteer-extra-plugin-stealth
   - 핑거프린트 테스트 페이지

   헤드리스 브라우저를 정말 사용할 필요가 있는 게 아니라면 가급적이면 프록시로 해결하는 게 편한 것 같습니다.
"
"https://news.hada.io/topic?id=5245","Oculus Go, Unlocked OS 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Oculus Go, Unlocked OS 공개

   - Oculus Go는 2018년에 출시, 2020년에 단종 및 지원 종료된 저가형 VR 헤드셋 기기
   - John Carmack이 예고 했던대로 Full Root 접근이 가능한 Oculus OS 공개
   - 부트로더가 boot.img를 검증하지 않으므로 마음대로 자신의 버전으로 교체 가능
   - adb 를 통해 언락 가능하며, 언제든 ""fastboot oem lock"" 으로 다시 락 가능
   * 이미 2백만대 이상 팔린 Oculus Go 기기들을 가지고 다양한 것이 가능할 것으로 기대
   * 오큘러스의 컨설팅 CTO인 존 카맥이 몇 년간 이렇게 하자고 주장해서 관철 시켰다고
   ""20년 후에도 최신 소프트웨어 버전으로 돌아가는 Go 헤드셋이 발견 되길 바란다""
"
"https://news.hada.io/topic?id=5288","Ask GN: 지난 10년 간 최고의 결정은 무엇이었나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ask GN: 지난 10년 간 최고의 결정은 무엇이었나요?

   한 번의 결정으로 인생이 바뀌지는 않는다고 믿습니다만, 한 번의 결정이 인생이 바뀌는 터닝포인트가 된다고 믿습니다. 그 전까지 결정한 수많은 것들이 쌓이고 쌓여서 바뀌었다고 선언할 한 번의 결정을 만들어 낸다고 생각하기 때문입니다.
   그래서 GeekNews 회원분들에게, 지금의 자신을 만든 지난 10년 간 가장 최고의 결정이 뭐였는지가 궁금합니다! 'ㅁ ' 어떻게 지금 이 자리에 서게 되셨나요? 지금의 기술 스택이나 삶을 만든 가장 괜찮은 선택이 어떤 것이었나요?
   저는 7년 전 중3시절, '어머니가 공장이나 가라는 말에 빡쳐서(... ) 고등학교를 기숙사로 들어간 것' 이었습니다. 그게 너무 화가 나서( 거기 근무하시는 분들을 무시하는 말투에, 다른 사람의 인생을 함부로 말하는 게 정말 마음에 안 들었어요. ) 이 집에서 벗어나야 겠다는 의지로 결정했는데요. 그 덕분에 좋은 친구들도 만나고, 선생님들도 만나게 되어서 꿈 속에만 하고 있었던 프로그래머라는 직업을 진짜 하게 되었네요. 멋진 회사도 다니고 있고요! 'ㅁ '/

   저는 대학원생 시절 월급 털어서 김창준님의 AC2 교육 http://www.ac2.kr/ 을 들었던 것이 최고의 결정이었네요.
   교육 자체도 충격적이고 성장 많이 했지만, AC2 커뮤니티를 통해 첫 직장도 잘 잡았고, 취미생활(즉흥연기)도 하고, 이후에도 꾸준히 연을 이어나가고 있습니다.

   누구신지 알듯합니다 :)

   ""서버도 그냥 제가 할게요.""
   서버 프로그래머가 퇴사할 때, 약간은 즉흥적으로 내린 결정이었습니다만...
   돌아보니 이게 인생 최고의 결정 아니었나 싶습니다.
   https://jeho.page/essay/2021/…

   와 benjamin 님 개인 페이지와 전업투자자 브런치 재미나네요(제목이 특히 마음에 듭니다!)
   잘 보겠습니다~ㅎㅎ

   영광입니다 (_ _)

   정말 멋진 결정이네요 'ㅁ 'b. 저걸 보고나니 아직 젊어서 애너지가 넘칠 때 ( 물론 늙어서도 그러면 더욱 좋겠지만 ) 좀 더 과감하게 확장해보고 싶어 졌습니다.

   젊음이란 정말 좋은 것 같습니다. 응원합니다!

   딱 10년은 아니고 12년정도 되었네요. 저는 트위터 초기에 사용했던게 굉장히 제 삶에 많은 변화를 주었습니다.
   블로그는 더 오래전에 시작했지만, 긴 글은 올려봤자 일주일에 한두개 정도였던 거에 비해
   짧게 이것저것 글과 제가 보는 기사 링크에 대해 요약해서 남기는게 제 성향에 맞았던 것 같아요.
   그러면서 많은 사람을 알게 되었고, 그걸 통해 이직하면서 그냥 대기업 엔지니어에서 개발자 에반젤리스트로 전향하게 되었거든요.
   그 다음 창업도 트위터DM 받으면서 시작되었고, 나름 키워낸 뒤에 여기까지 왔으니..
   지금 생각해보면 트위터를 시작했던게 근 10년간 최고의 결정이었던 것 같습니다.
   P.S. 제 처음 트윗은 지금봐도 참 뜬금없어요
   https://twitter.com/xguru/status/1248104741

   ㅋㅋ 첫 트윗 재밌네요

   ㅋㅋㅋㅋㅋ 정말 SNS를 유용하게 쓰셨군요. 'ㅁ 'b.
"
"https://news.hada.io/topic?id=5257","어떤 브라우저가 개인정보보호에 가장 뛰어날까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       어떤 브라우저가 개인정보보호에 가장 뛰어날까?

   Brave/크롬/Edge/FF/Opera/Safari/Tor
   - 각 브라우저의 개인정보 특성들을 측정하는 오픈소스 테스트
   - 누구나 쉽게 이해할 수 있도록 결과를 렌더링
   테스트 항목
   - 상태 정보 파티셔닝 (쿠키, 캐쉬, 서비스워커..)
   - 네비게이션 (레퍼러,세션..)
   - 핑거프린팅 방지
   - 추적 쿼리 파라미터
"
"https://news.hada.io/topic?id=5211","LibreOffice 7.2.2 버전 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        LibreOffice 7.2.2 버전 출시

   2021년 10월 14일, 도큐먼트 재단(The Document Foundation)은 기술 마니아와 파워 사용자를 대상으로 한 리브레오피스(LibreOffice) 7.2 제품군의 두번째 마이너 출시 버전인 리브레오피스 7.2.2 커뮤니티(LibreOffice 7.2.2 Community)를 발표하였습니다.
   출시된 버전은 다음의 링크 https://www.libreoffice.org/download/ 로에서 다운로드가 가능합니다.
   이 버전에서는 68개의 버그 수정과 문서 호환성 향상 내용이 적용되어 있습니다.
   리브레오피스 7.2.2 커뮤니티(LibreOffice 7.2.2 Community)는 또한 Arm기반의 애플 실리콘(Apple Silicon)에서도 사용 가능합니다.
   다음의 링크에서 다운로드가 가능합니다.
   https://download.documentfoundation.org/libreoffice/stable/…
   LibreOffice 7.2.2 변경 로그 내용은 도큐먼트재단(The Document Foundation) 위키에서 찾아 볼 수 있습니다.
   https://wiki.documentfoundation.org/Releases/7.2.2/RC1 (RC1에서의 변경점)
   https://wiki.documentfoundation.org/Releases/7.2.2/RC2 (RC2에서의 변경점)
   참고로, 안드로이드와 iOS용 리브레오피스 기술 기반의 제품은 링크에 적혀있습니다.
   https://www.libreoffice.org/download/android-and-ios/
   그리고, 앱스토어와 ChromeOS용 제품은 다음의 링크에 적혀있습니다.
   https://libreoffice.org/download/…
"
"https://news.hada.io/topic?id=5262","Jetson One - 1인승 전기 비행기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Jetson One - 1인승 전기 비행기

   - 알루미늄 + 탄소 섬유 로 구성되어 기체무게 86Kg. 모터 8개
   - 탑승가능 파일롯 최대 몸무게 95Kg
   - 85Kg 기준 20분 비행
   - 최대속도는 안전을 위해 소프트웨어상 102Km/h 로 제한
   - $92000
   - 2845 x 2400 x 1030 mm 이고, 접었을 때 넓이가 900mm
   - 50% 조립된채로 배달되어 직접 조립 필요
   - 1년에 12대 정도 만들수 있고 2022년은 전체 판매 완료. 2023년차 주문 받는중
   - 안전이 최우선
   ㅤ→ 경주용 자동차에서 영감을 받은 Spaceframe 안전 셀 디자인
   ㅤ→ 핸즈 프리 호버링 및 비상 기능
   ㅤ→ 빨리 펴지는 탄도 낙하산(Ballistic parachute)
   ㅤ→ 모터 하나 잃어도 안전히 비행 가능
   ㅤ→ 3대의 Redundant 비행 컴퓨터
   ㅤ→ 라이다 센서로 지형추적 및 장애물 회피

   하지만 한국에선 운행 자체가 불법이겠죠...?

   일단 법적으로 안전성 인증을 받을 수 있는지가 중요하겠죠. 그리고 아마 지정된 영역이 아니면 비행을 할 때마다 항공청의 비행승인을 받고 공항 내지는 지정된 이착륙장에서 뜨고 내리는 식으로만 비행이 가능할 겁니다. 실제로 국내에도 드물지만 개인용 경비행기 내지는 초경량 비행장치를 가지신 분들이 있다고 알고 있습니다.
"
"https://news.hada.io/topic?id=5265","macOS Monterey 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           macOS Monterey 릴리즈

   - FaceTime Shareplay, 공간오디오, 인물사진 모드
   - 유니버설 컨트롤 : 하나의 마우스/키보드로 Mac과 iPad 오가며 작업 가능
   - AirPlay to Mac : 맥을 화면 또는 스피커로 사용
   - 단축어 : 아이폰의 Shortcuts 기능을 맥에 도입. Automator 작업 임포트 가능
   - 라이브 텍스트
   - 집중 모드
   - 메모 앱 개선 : 빠른 메모 기능 추가. 공유 메모의 다른 사람 활동보기. 태그 정리하기
   - Safari UI 재설계 : 압축 탭 막대로 주소바와 탭바가 한줄에. 탭그룹 지원
"
"https://news.hada.io/topic?id=5273","CodingFont - 자신에게 맞는 코딩 폰트를 찾는 게임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   CodingFont - 자신에게 맞는 코딩 폰트를 찾는 게임

   - 토너먼트 방식으로 두개의 폰트를 비교해서 하나를 선택하여 줄여나감
   - 승리한 폰트의 사이트 및 다운로드 버튼 제공
   - 폰트 이름 가리는 Blind 모드 제공
   - Roboto, JetBrains, Ubuntu, Noto Sans, 나눔 고딕 포함 27개의 코딩용 폰트 비교
     * 토너먼트 방식으로 두개의 폰트를 비교해서 하나를 선택하여 줄여나감
     * 승리한 폰트의 사이트 및 다운로드 버튼 제공
     * 폰트 이름 가리는 Blind 모드 제공
     * Roboto, JetBrains, Ubuntu, Noto Sans, 나눔 고딕 포함 27개의 코딩용 폰트 비교

   이름 가리고 했는데, 나의 최애 Ubuntu Mono 가 우승했네요~

   저는 언제나 Fira Code!

   저는 JetBrains 를 일반 코딩용으로는 사용하는데요,
   마크다운용으로 사용하려면 한글과 영문이 같이 있을 때에도 한글 두칸, 영문 한칸이 딱 맞아야 하는데, 최근에 windows 10 vscode 코드 기준으로
   ""Sarasa Fixed K"", D2Coding, Consolas, 'Courier New', monospace
   이런 식의 설정을 했을 때 그 기준이 맞는다는 사실을 발견하고 잘 사용하고 있습니다. D2Coding 을 너무 오래 써와서 질리는데 조건에 맞는 마크다운용 바꿀만한 폰트가 없어서요.
   Sarasa Gothic 은 Iosevka와 Source Han sans를 기반으로 하여 CJK를 지원하는 프로그래밍용 글꼴입니다.

   코딩어 게임

   전 역시 Source Code Pro 네요

   중간에 적수가 맞붙어서 탈락하는 아쉬운 폰트가 있어서 더블 엘리미네이션 방식을 도입하면 좋겠군요. ㅎㅎ
   저는 결승전에 Fira Mono와 JetBrains Mono가 올라왔네요. ;)
   실제로는 Operator Mono라는 유료 폰트를 사서 쓰고 있습니다.

   이걸 IDE에 좁쌀같이 놓고 보면 또 느낌이 많이 다를것 같아요 ㅋㅋ

   저는 Cousine이 눈에 익숙한가봐요

   코딩 폰트 월드컵이군요. 저는 4강 ▲Cousine ▲Fira Mono ▲JetBrains Mono ▲Overpass Mono 올라왔고 우승은 ▲Fira Mono 가 했군요 😄😄

   저는 실제로 쓰는건 JetBrains 이고 보통 터미널에선 IBM Plex Mono를 쓰는데
   월드컵에서는 JetBrains가 조기 탈락하고 결승에서 Source code pro와 IBM Plex Mono가 붙어서 IBM Plex Mono가 되었네요.
   그런데 예제코드에서 ligarture가 없는게 아쉽군요. 해상도도 조금 흐릿해 보이구요.

   저는 이거로 해보니 Noto Sans Mono 하고 JetBrains Mono 가 결승에서 붙었는데 최종적으로 JetBrains가 이겼습니다.
"
"https://news.hada.io/topic?id=5318","오프라인용 클라이언트 DB 비교","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           오프라인용 클라이언트 DB 비교

   - Angular로 작성한 웹 채팅앱을 여러 DB로 구현해서 비교 (WhatsApp과 비슷한 기능)
   ㅤ→ AWS Amplify Datastore
   ㅤ→ Firebase Firestore
   ㅤ→ PouchDB & CouchDB
   ㅤ→ RxDB & GraphQL
   ㅤ→ WatermelonDB
   - 페이지 로드시간, 렌더링, 메시지 추가/삭제, 검색, 용량, 번들크기 등
"
"https://news.hada.io/topic?id=5199","OpenBSD 7.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            OpenBSD 7.0 릴리즈

   - RISC-V 64 지원 추가
   - ARM64 향상 (애플 실리콘 지원 부분이 많이 개선 되긴 했지만 아직 일반사용 수준은 아님)
   - SMP 및 커널 향상
   - DRM커널 코드를 Linux 5.10.65로 업데이트. 인텔 Tiger Lake 지원
   - AMDGPU DRM 지원 : Navi 12, Navi 21, Arcturus, Cezanne
   - 여러 하드웨어 추가 및 디바이스 드라이버들 개선
   - 주요 어플리케이션들 버전 업 : LLVM Clang 11.1, Go 1.17, GCC 8.4.0 / 11.2, KDE Applications 21.08.1, Xfce 4.16
"
"https://news.hada.io/topic?id=5310","Firefox 94 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Firefox 94 릴리즈

   - 계절용 6가지 색상 팔레트(기간 한정)
   - macOS 버전이 풀스크린 비디오 재생용 저전력 모드를 사용
   - about:unloads 창에서 시스템 리소스 수동 해제 가능(탭 닫지 않고 언로딩)
   - 윈도우 버전이 업데이트를 백그라운드에서 수행
   - 리눅스 버전 WebGL 퍼포먼스 개선 및 전원 소모량 감소
   - Spectre 같은 사이드채널 공격을 막기 위한 Site Isolation 기능
   - Firefox Multi-Account Containers 확장에 Mozilla VPN 연동. 각 컨테이너당 다른 서버 위치 이용 가능
   - 메뉴/버튼/3키조합으로 브라우저 종료시 경고하지 않음 (경고하게 설정도 가능)
   - 윈도우 11에서 Snap Layout 지원
   - performance.mark() 및 performance.measure() API의 오버헤드 감소
   - Javascript 메모리 사용량 감소
   - 더 빠른 저장소 초기화
   - 더 나은 GC 스케줄링으로 페이지 로드 벤치마크 개선
   - 메인 쓰레드 I/O를 줄여서 시작시간 단축
   - 개발자 도구 닫으면 더 많음 메모리 회수
   - 이미지 로딩/표시에 우선순위를 높게 줘서 페이지 로딩 속도 개선
"
"https://news.hada.io/topic?id=5226","L0phtCrack Password Auditor 오픈소스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  L0phtCrack Password Auditor 오픈소스 공개

   - 1997년에 출시된 유료 암호 해독 도구로 윈도우즈 암호를 복구/해킹하는데 사용되었음
   ㅤ→ brute-force, dictionary, hybrid, rainbow table 등의 기법을 이용
   - 2020년 Terahash에 매각되었다가, 2021/7/1 자로 원 저작자에게 돌아간뒤 판매 중단
   - 내부에 사용된 상용 라이브러리 들을 제거/교체 한 후 오픈소스로 공개
   ㅤ→ HashCat, John The Ripper 를 Shared Library 형태로 동작하도록 변경해서 별도 Repo로 공개

   - L0phtCrack 7, 오픈소스로 공개예정 https://news.hada.io/topic?id=4751
"
"https://news.hada.io/topic?id=5323","Twitter API v2용 트윗 관리 endpoint 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Twitter API v2용 트윗 관리 endpoint 공개

   - 트윗을 생성/삭제 하는 기본 엔드포인트
   ㅤ→ Poll(투표) 게시
   ㅤ→ Reply 세팅 지정 가능
   ㅤ→ 이미지에 사람들 태깅하기
   ㅤ→ 슈퍼 팔로워용 트윗 공유 기능 지원 (구독 기반 수익화 모델)
   - v2 API는 완전히 새로운 JSON포맷을 이용하며, 트위터 개발자 포털의 Project 내에 연계된 Developer App 필수
   ㅤ→ /1.1/statuses/ 에서 /2/tweets 로 주소 변경
   ㅤ→ POST/DELETE
"
"https://news.hada.io/topic?id=5249","SaaS 이메일 템플릿 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            SaaS 이메일 템플릿 모음

   - 400개 이상의 SaaS 들이 실제 사용하는 이메일 템플릿을 보고 HTML로 다운로드 가능
   ㅤ→ Zapier, Buffer, Heroku, Asana, HootSuite, CircleCI..
   - 카테고리
   ㅤ→ 온보딩 : 웰컴, 데모, 웨비나, 기능소개, 셋업, 인트로
   ㅤ→ Transactional : 무료 트라이얼, 업그레이드, 기한 만료, 트라이얼 종료, 독촉, 확인, 취소, 갱신
   ㅤ→ 마케팅 : 설문조사, 신기능 소개, Re-Engagement, Nurture, 사인업
   - 새로운 템플릿 등록시 이메일 알림 가능

   이게 서비스들이 실제 사용하는 거라 ""무료 템플릿 모음"" 이라고 하긴 뭐한데요. (개발자는 그렇게 적어두었습니다만..)
   SaaS들이 이메일 템플릿을 가지고 뭐라하진 않을테니 ㅎㅎ 좋은 이메일 디자인 참고하기엔 좋겠네요.
   제가 좋아하는 뉴스레터인 TLDR https://tldr.tech/ 의 운영자가 개인 프로젝트로 만든 웹사이트 입니다.
"
"https://news.hada.io/topic?id=5330","Knative 1.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Knative 1.0 릴리즈

   - 구글이 주도하는 쿠버네티스 기반의 오픈소스 서버리스 솔루션(2018년 공개)
   ㅤ→ Scalabe, Secure, Stateless 서비스를 쉽게 시작
   ㅤ→ 서버리스 컨테이너를 자동으로 관리
   ㅤ→ VMWare, IBM, Red Hat, SAP 등과 협업
   - 클라우드 종속성 없음
   - 플러그인을 쉽게 추가 가능
   - GitOps, DockerOps 등을 지원
   - 멀티 HTTP Routing Layer 지원(Istio, Contour, Kourier, Ambassador)
   - 이벤트를 위한 멀티 스토리지 레이어 지원(Kafka, GCP PubSub, RabbitMQ)
   - HTTP/2, gRPC, WebSockets
   - TLS 인증서 자동 프로비져닝
   - Django, RoR, Spring 등 기본 지원
"
"https://news.hada.io/topic?id=5305","Show GN: edge-yacht - Cloudflare Workers에서 동작하는 멀티플레이어 게임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Show GN: edge-yacht - Cloudflare Workers에서 동작하는 멀티플레이어 게임

   안녕하세요, 평소에 GeekNews를 구독만 하고 있었지만, 최근 Cloudflare Developer Challenge (https://challenge.developers.cloudflare.com/)에 참여한 프로젝트를 공유하고 싶어서 글 남깁니다 :)
   게임 방법은 메인 화면의 Create Room 버튼을 누르시고, 다음 화면에서 보이는 링크를 공유하시면 됩니다. 해당 링크로 접속한 두 브라우저끼리 세션을 구성하여 멀티플레이어 게임을 진행하고, 이 모든 과정은 Cloudflare Workers에서 일어납니다. 저장소는 이쪽입니다.
   https://github.com/SeokminHong/edge-yacht
   ---
   Cloudflare Developer Challenge는 Cloudflare의 프로덕트인 Cloudflare Workers, Cloudflare Pages, Workers KV, Durable Objects들을 2개 이상 활용하여 재미난 작품들을 만들어 투고하는 프로그램인데요, 이러한 프로덕트를 알고 참가하게 된 계기가 GeekNews라서 더더욱 공유하고 싶었네요!
   Cloudflare Workers는 서버리스 코드를 글로벌 엣지에 배포할 수 있도록 하고, 웹소켓과 Durable Objects를 통한 coordination을 지원합니다. 실제로, 이를 활용해 이미 온라인 상에서 멀티플레이어 Doom을 돌리는 데모를 시연한 바 있죠. (https://blog.cloudflare.com/doom-multiplayer-workers/) 이에 영감을 받아, 한 달 남짓한 개발 기간 동안 2인용 멀티플레이어 게임을 밑바닥부터 제작해보고자 했습니다.
   게임의 디자인과 룰은 닌텐도 스위치의 51 Worldwide Games라는 미니게임 모음의 Yacht을 참고했습니다. 클라이언트에서 게임 상태를 변조할 수 없도록 게임 상태의 뮤테이션은 모두 Workers에서 수행되고, 클라이언트는 자바스크립트 3D 라이브러리 three.js를 활용하여 상태를 시뮬레이션합니다. 개발 기간이 짧아 오디오나 이펙트, 디자인 등에서 타협한 부분이 많지만, 하나의 돌아가는 게임을 완성했기에 여기에 올립니다 ㅎㅎ

   우와!

   와!! 야찌 네요. 주사위만 있으면 할 수 있어서 저도 좋아하는 게임입니다. 완성 축하드립니다.
   시험삼아 브라우저 두개로 연결해보니 너무 깔끔하게 잘 실행되네요.
   엣지에서 돌아가는 멀티플레이어 게임은 충분히 의미가 있는 것 같아요.

   감사합니다! 긱뉴스 덕분에 이런 프로덕트들에 대한 소식을 접할 수 있었네요 ㅎㅎ
"
"https://news.hada.io/topic?id=5219","배민쇼핑라이브를 만드는 기술: 채팅 편","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         배민쇼핑라이브를 만드는 기술: 채팅 편

   - 왜 자체 구현했는가? (Sendbird/FCM 대신)
   - 아키텍처 : Redis Pub/Sub + Webflux + WebSocket
   - 구현의 방향성
   ㅤ→ WebSocket을 최소한으로 사용
   ㅤ→ RDB 직접 접근을 배제
   - 몇 가지 시행착오들
   ㅤ→ WebSession 사용으로 인한 장애
   ㅤ→ 멈춰 버린 어드민 : 리스트 가상화와 렌더링 횟수 줄이기
"
"https://news.hada.io/topic?id=5215","auto-cpufreq - Linux CPU 속도 & 전원 최적화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  auto-cpufreq - Linux CPU 속도 & 전원 최적화

   - 리눅스용 랩탑은 전원 연결 및 기타 상태와 상관없이 항상 CPU가 최고 속도로 실행되어 배터리에 악 영향을 줌
   - 배터리 상태, CPU 사용량, CPU 온도, 시스템 부하 등의 모니터링을 통해서 CPU 속도를 조절하여 전원 효율을 최적화하는 도구
   - 기능
   ㅤ→ 모니터링 : 기본 시스템 정보, CPU freq/사용량/온도 (전체 및 코어당), 전원 상태, 시스템 부하
   ㅤ→ CPU 프리퀀시 제어 : 배터리 상태, CPU 사용량, CPU 온도, 시스템 부하에 따른 관리
   ㅤ→ 자동으로 CPU 와 전원 최적화
   - Snap(우분투), AUR(Arch/Manjaro) 지원 및 소스코드로 설치

   기존의 대부분 메이저 배포판에는 laptop-mode-tools 가 설치되고, 이넘을 기반으로 기본적인 전원관리가 되고 있었을껍니다.
   최근 Intel core 시리즈 CPU에서는 하드웨어 적으로 clock scaling(Intel P-State) 가 되는 걸로 알고 있습니다.

   AUR 중에서도 이미 상당히 쓰이고 있군요.
   ```
   ❯ yay -Ss auto-cpufreq
   aur/auto-cpufreq 1.7.1-1 (+16 5.24)
   Automatic CPU speed & power optimizer
   ```
"
"https://news.hada.io/topic?id=5285","GitHub Copilot, JetBrains 와 Neovim 지원 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                GitHub Copilot, JetBrains 와 Neovim 지원 공개

   - 기존 VSCode 지원에 추가
   - JetBrains IntelliJ 와 PyCharm 에서 테스트 완료 (버전 2021.2 이상)
   ㅤ→ 마켓에서 ""Github Copilot"" 바로 설치 가능
   - Neovim 0.6 이상용 Copilot.vim 플러그인
   ㅤ→ Node.js v12 이상 필요

   + Tabnine이라는 제품도 있는데, 그 친구는 앞으로 어떻게 나갈지 좀 걱정되네요. GPT-2 기반인데, 별다른 대안이( 로컬 호스팅이나, 어떤 점에 특화되어있거나... ) 없으면 Copliot의 성능이 아주 인상적이라서 쓸 이유가 없을 것 같습니다.
   https://www.tabnine.com/

   말씀하신대로 tabnine은 local inference가 강점인 제품인데요, 아무리 예전 GPT-2 기반이라고 해도 inference 하는데 메모리를 많이 먹는 고질적인 이슈가 아직 수정이 되지 않아서 요즘은 쓰고 있지 않습니다. ㅠ

   앗. Tabnine은 이미 로컬 기기에 모델을 돌리는 군요. 선택적으로 클라우드 서버( 이 경우에는 좀 더 상세한 정보를 제공한다고 하고요 )를 제공하는 방향으로 잡았고요.
   개인적으로는 왠지 저 플러그인을 깔고 회사 코드를 만지기는 좀 불안해서(... ) 로컬에서 모든 일이 일어나길 바라시는 유저들은 Tabnine을 아직 선택할 여지가 있어보이네요.

   저는 Pycharm 에서 써보았는데요, 간혹 팝업 창에서 3분 이상 화면이 멈추는 문제가 있던 점 외에는 추천 정확도가 타 서비스들에 비해 매우 높아서 놀랍더라구요.
   마이크로소프트 주식을 더 사야겠습니다...

   Copliot이 열려서 써보고 있는데, 한국어 주석도 알아 먹는 게 가장 놀랐습니다(.. )

   Android Studio 2021.2 (Canary)에서도 잘 동작합니다.
   Neovim 은 0.5.1이 제일 최근에 release 되었고, 0.6을 사용하려면 직접 소스를 컴파일해야 합니다.
"
"https://news.hada.io/topic?id=5231","ImgSrc.Space - 쓰기 편한 이미지/비디오 플레이스홀더","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ImgSrc.Space - 쓰기 편한 이미지/비디오 플레이스홀더

   - 3백만장 이상의 이미지/비디오를 무료로 빠르게
   ㅤ→ https://imgsrc.space/cat 고양이 이미지
   ㅤ→ https://imgsrc.space/dog-v 강아지 동영상 ""검색어-v""
   - 리사이징 지원
   ㅤ→ https://imgsrc.space/sunset?w=500&h=500
   - JS 라이브러리 이용시 짧은 표현 가능
   ㅤ→ [. cow]
   ㅤ→
   - 최대 해상도 1920x1080

   와, 좋네요!
"
"https://news.hada.io/topic?id=5314","Tesla, 슈퍼차저 네트워크를 다른 전기차에게도 개방","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Tesla, 슈퍼차저 네트워크를 다른 전기차에게도 개방

   - CCS 포트를 사용하는 다른 전기차들도 충전 가능
   - 네덜란드의 10개 스테이션부터 파일럿 프로그램 시작
   - 현재 전세계에 25,000개의 슈퍼차저가 있음
   - 테슬라는 계속 자신들의 슈퍼차저 네트워크를 개방할 거 라고 말해왔음
   - 다른 전기차 사용자도 Tesla 앱을 다운받아서 계정 생성 필요
   ㅤ→ Charge Your Non-Tesla 선택하고, 결제 방식을 추가한 뒤 충전
   ㅤ→ 앱 내에서 정확히 어떤 포트를 사용할지 선택해야 함
   - 기존 테슬라 차주들도 Tesla 앱 내에 자신들의 다른 전기차를 추가해서 사용 가능
   - 충전 금액은 사이트별로 다를 수 있음. 앱내에서 가격을 확인 해야함
   ㅤ→ 테슬라 사용자들은 기존과 금액이 같음
"
"https://news.hada.io/topic?id=5300","XIA, 2040년까지의 미래 (208p PDF)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      XIA, 2040년까지의 미래 (208p PDF)

   - 스마트폰 너머, 메타버스 너머 2040년까지의 새로운 혁신인 XIA와 이로 인한 사회 변화
   ㅤ→ XIA : XR(eXtended Reality) + IoT + AI
   - 책 ""변화 너머"" 강연 자료를 기반으로 다양한 정보를 추가
   1. 일반론
   - 새로운 혁신의 특징을 품은 5G와 6G
   - 스마트폰리스 세상 : XIA
   - XIA 세상에 준비된 세대
   - XIA가 변화시킬 일상·사회·경제
   2. DEEP DIVE
   - 스마트폰의 회광반조, Pre-XIA 시대
   - 5G 기술에 대한 이해
   - 6G 기술에 대한 이해
   - XR에 대한 이해
   - HOLOGRAM에 대한 이해
   - AIoT에 대한 이해
"
"https://news.hada.io/topic?id=5220","Canon, 복합기에 잉크가 없으면 스캐너 동작을 못하게 막아서 소송 당함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Canon, 복합기에 잉크가 없으면 스캐너 동작을 못하게 막아서 소송 당함

   - 캐논의 특정 복합기에서 잉크가 떨어지면 스캐너/팩스가 동작이 되지 않아서 집단 소송을 제기
   - Pixma MG6320 모델을 사용중인 사용자가 이에 대해 문의 했으나 잉크를 꼭 설치해야 한다고 캐논 고객센터가 답변함
   - Pixma 3-in-1, 4-in-1 같은 모델의 광고 및 매뉴얼에는 모든 기능을 사용하기 위해 잉크가 필요하다는 경고는 없음
   - 일반적으로 프린터 잉크가 2-3년 안에는 사용이 불가능하게 되므로, 사용자는 모든 기능을 사용하기 위해서는 무조건 잉크를 사야함
   - 이자,수수료,소송비용 제외하고 5백만달러의 보상금을 요구하는 집단 소송이 뉴욕 동부 법원에 접수
"
"https://news.hada.io/topic?id=5237","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   프로젝트 막바지라 주말 모두 출근입니다! ㅠㅠ

   저는 꽤 오랫동안 매주 꾸준히 해오는 일을 이번주에도 하려고 합니다. 육아 👶

   저번 주의 사이드 프로젝트 포스트 모템은...
   - 저번주에 하던 개발 툴킷 마이그레이션은 많은 문제를 고치는데 성공했습니다. 특히 Lua에서 C++을 바인딩하는 것과, JS v8 엔진에서 C++을 바인딩하는 건 개념도 다르고 엔진 크기도 다르고, 함수 콜백을 관리하는 것도 다 달라서 어려운 부분이었고. 마지막엔 결정적으로 외부 DLL에서 V8 엔진에 접근할 때 함수 파라미터와 내부 변수가 모두 동일하더라도 죽는 버그가 있어서 괴로웠어요. 이건 그냥 V8 엔진을 들고 있는 DLL에 정적 링크하는 걸로 우회했습니다. 그러니 잘 되더라고요.
   - Godot 게임잼의 1차 빌드 목표를 확정하고, 만들어나가고 있었습니다만 전체 일감에 한 5퍼센트 정도만 시간을 할애해서(... ) 많이 만들지는 못했습니다. 다행히도 오늘까지 다른 이슈들을 모두 수정했으니 오늘 하루는 Godot을 위한 시간을 만들어보려고 합니다.
   - 쓰던 소설을 잘 마감했습니다. 걱정인 점은 원래 1화로 끝낼 생각이었던 이야기가 3화까지 늘어나고 있습니다.
   - SRPG 이슈를 어제까지 모두 마감했습니다! 오늘 플레이 해보고 리뷰를 한 다음 다음 빌드 준비를 할 예정입니다.
   이번 주의 계획은...
   - 오늘 Weekly 리포트를 쓸 예정입니다. 주간마다 회고하는 건데요. 나중에 1년간 회고 할 때 유용하게 쓸 수 있을 것 같아 적고 있습니다. 365개 볼걸 48개만 볼 수 있을 것 같아요.
   - 소설 퇴고 작업을 하고 있습니다. 분량이 꽤 많아서 6개월동안 잡았고. 그걸 시작하는게 바로 오늘부터입니다.
   - 사이드 프로젝트 계획은 2주마다 잡고 있는데요, 내일이 바로 계획을 다시 잡아야 하는 날입니다. 이번 스프린트동안 어떤 걸 이뤘고, 다음 스프린트에 뭘 할지 고민할 예정입니다.

   계속 하고 있는 멘토링으로 파이썬 유튜브 강의를 같이 보려고요.
   멘토링 처음에는 자료형이나 조건문, 반복문 등 문법적인 부분을 다시 보는 게 저한테는 조금 지루하겠다 싶었어요. 그런데 프로그래밍 언어가 생소하지만 배워보고 싶은 사람을 도와주며 같이 하니, 아.. 이걸 이렇게 이해하는구나 싶거나, 이해시키기 위해 설명해보는 게 오히려 재미있기도 해요. 각 챕터 사이의 퀴즈 부분이 아무래도 상호적이고 스스로 머리를 쓸 수 있어서 가장 재미있는 시간이에요.
   그림 모임을 간만에 오프라인에서 하기로 하였고, 미뤄온 개발 업무 하나도 마무리 지을 것 같아요.

   지난주 허리 부상의 여파로 이번주까지는 뭐 딴거를 잘 못했네요.
   다시 테슬라 주변기기 구입글을 마무리 해야할 것 같아요. 테슬라 주가가 쭉쭉 올라서 기쁜마음으로..

   주말에 맹장염으로 응급실에 왔네요. 수술을 오늘 오후에 하게 되어서 당분간 뉴스는 좀 힘들듯 합니다..

   저런 무척 아프셨겠네요. 수술 잘 되고 회복하시길 바랍니다.

   헉... 쾌유하시길 바랍니다

   수술 무사히 마치시고 쾌차하시길 바래요.
"
"https://news.hada.io/topic?id=5297","Facebook Infra scaling 관점에서 살펴보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Facebook Infra scaling 관점에서 살펴보기

   facebook의 Network infra를 소개한 발표자료들을 통해 어떻게 하면 글로벌서비스를 할 때 스케일링을 더 잘 할수 있을지 알아봅니다.
   - OSI 7 Layer를 기준으로 상위 레이어의 컴포넌트를 더 띄우고 싶으면 하위 레이어의 요소들이 필요함
   - Edge POP 를 통해 RTT가 긴 상황에서 SSL 4-way handshake와 tcp 3-way handshake를 최적화 하는법
   - Facebook이 운영하는 법을 AWS를 사용해 대체할 수 있는 컴포넌트들 예시

   오오...밑에 레퍼런스들 너무 좋아요 ㅎ

   ㅎㅎ 한번씩 읽어보면 좋을법한 것들로 모아뒀습니다
"
"https://news.hada.io/topic?id=5326","사회 초년생이 보면 좋은 Excel 공략집","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        사회 초년생이 보면 좋은 Excel 공략집

   ""엑셀 10강으로 끝내기"" - Excel 파일 자체로 설명하고 유튜브 영상도 제공
   - 빠른실행도구모음 설정하기
   - 유용한 단축키
   - SUM, SUMIF(s)
   - AVERAGE, AVERAGEIF(s)
   - IF 함수, 다중 IF 함수
   - Lookup 함수, Count 함수
   - 원하는 대로 '필터링'하고, '피벗'으로 편하게 보기
   - 매크로 버튼 하나로 여러가지 Case 분석하기
   - Tip 과 유용한 기능 음
"
"https://news.hada.io/topic?id=5206","IT 외국계 대기업들은 국내에서 Engineer들을 어떻게 뽑을까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 IT 외국계 대기업들은 국내에서 Engineer들을 어떻게 뽑을까?

   Microsoft Customer Engineer
   Datadog Solution Engineer
   한국에서 외국계 기업들이 Engineer를 채용하는 과정
"
"https://news.hada.io/topic?id=5295","PWABuilder, PWA를 iOS 앱스토어에 등록 가능한 기능 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                PWABuilder, PWA를 iOS 앱스토어에 등록 가능한 기능 공개

   - 등록 절차
   ㅤ→ PWA URL 입력
   ㅤ→ 앱스토어용 메타정보 입력 : 번들ID, 앱 이름, 아이콘.. (기본값은 PWA Manifest에서 추출)
   ㅤ→ Generate 누르면 iOS App 패키지 다운로드
   ㅤ→ 받은 코드를 XCode에서 테스트하고 등록 진행 (개발자 계정은 필요)
   - WebKit 웹뷰를 이용해서 PWA를 로딩하고 앱의 기본 기능을 지원
   ㅤ→ 스플래시 스크린, 서비스워커, 테마색/배경색, 앱 아이콘, in-scope URL등
   - 푸시, 숏컷, iOS용 연동 기능들은 추가 예정
"
"https://news.hada.io/topic?id=5329","페이스북, 유료 구독자 결제용 커스텀 웹 링크 생성기능 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   페이스북, 유료 구독자 결제용 커스텀 웹 링크 생성기능 공개

   - Subscriptions 기능으로 팬들에게 정기 구독료 받는 모델을 2020/6에 공개한바 있음
   ㅤ→ 현재 27개국 사용 가능(한국 미지원)
   ㅤ→ 페이스북은 2023년까지 수수료를 전혀 받지 않지만, 애플에는 15%~30% 수수료를 계속 내야했음
   - 이제 웹사이트 링크를 생성해서 구독자들이 Facebook Pay로 직접 결제하는 기능을 추가 예정
   ㅤ→ 세금을 제외하고 100%를 창작자가 가져감
   ㅤ→ 수익 추정 금액(Estimated Eranings)에서 수수료에 대해 상세히 보여줄 예정
"
"https://news.hada.io/topic?id=5291","Crane - 도커 이미지 생성 및 관리용 데스크탑 앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Crane - 도커 이미지 생성 및 관리용 데스크탑 앱

   - 윈도우 / 맥 바이너리 제공
   - 이미지 생성
   ㅤ→ Base 이미지 검색 및 선택
   ㅤ→ apt/conda/pip 패키지 추가
   ㅤ→ 콘솔 빌드 로그 보기 가능
   - 로컬 및 리모트 Repo (Docker Hub / PrimeHub) 지원

   아직 windows의 wsl 환경에서는 동작하지 않는듯 합니다. electron 으로 빌드된것 같네요.
"
"https://news.hada.io/topic?id=5309","브라우저 개발자 도구의 비밀","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            브라우저 개발자 도구의 비밀

   1. Console엔 'log()' 이상으로 많은 기능이 있음
   - 필터링 옵션
   - {} : 변수 값/이름 같이 찍기
   - warn/info/error() : 로그 레벨
   - assert(): 특정 조건시에만 출력
   - trace(): 누가 호출했나
   - group(): 메시지 그룹핑해서 펼치기/접기 가능
   - table(): 정보를 테이블로 출력하기
   - $() = document.querySelector(), $$() = document.querySelectorAll()
   ㅤㅤ$$('a').map(a => {
   ㅤㅤㅤreturn {url: a.href, text: a.innerText}
   ㅤㅤ})
   2. 소스코드 접근없이 로그 남기기
   - Live Expressions : 실시간으로 변경되는 변수 값 확인
   - logpoints : 특별한 형태의 브레이크포인트로 해당 라인 실행시에 로그를 출력. 기술적으로는 console.log를 웹페이지 어디든 추가 가능한 것
   3. 브라우저 외부에 로그 남기기
   - VS Code Debugger
   4. 어떤 사이트에든 코드 인젝션 하기 (크로미엄 브라우저들 : 엣지, 크롬, 브레이브..)
   - Snippets : 현재 웹사이트에 대해 스크립트 실행
   - Overrides : 리모트 스크립트의 카피본을 저장해두고 수정한다음 페이지 로딩될 때 오버라이드
   5. 더 많은 곳에서 Inspect & Debug 가능 (크로미엄 브라우저들)
   - Electron 계열은 모두 지원 : GitHub Desktop, VS Code, 브라우저의 Developer Tools자체도 Developer Tools로 디버깅 가능
   - MS Edge Tools for VS Code
   6. 지저분한 비밀들
   - 사람들의 개발자 도구의 일부만 사용. 아마도 설명 문서가 부족하기 때문인듯 해서, 많은 시간을 들여 문서를 만들었지만 그게 해결책은 아닌듯
   - 개발자 도구는 점점 복잡해지고 수많은 기능에 압도되게 됨. 개선하기 위한 방법이 없을까 ?
   ㅤ→ Edge는 Focus Mode 도입하려고 함. 모든 기능을 보여주는 대신 유스케이스 별로 필요 도구만 보여주는 것
   ㅤ→ Informational Overlays도 작업중. 개발자 도구에 바로 볼 수 있는 도움말을 제공하는 것
   - 코드 작성과 완성물 디버깅 사이에는 아직 단절이 있음
   ㅤ→ 브라우저 개발자 도구에서 변경한 것이 코드에 어떻게 반영되게 할까 ?
   ㅤ→ 하나는 개발자 도구를 VSCode로 대체하고, 도구 사용시 하드 드라이브의 파일을 직접 변경하게 하는 것
   ㅤ→ 다른 하나는 VSCode 확장의 일부로, 개발자 도구를 사용해서 변경해도 디스크의 파일 변경이 가능하게 선택할수 있게 하는 것
   7. 당신이 개발자 도구의 Audience 이자 Client임
   ㅤ→ Report a Bug / Request a Feature 등으로 피드백 주기

   좀 다른 관점으로는, 사용자와 개발자가 같은 도구를 가진다는 점인데요. 그래서 웹앱은 편법적 악의적인 사용자 대처에 신경을 많이 써야할 듯 합니다.

   console.log() 관련 글
   - https://javascript.plainenglish.io/stop-using-console-log-in-javascrip…

   좋은 기능들이 있어도, 문서에 좋은 예제가 있느냐 없느냐가 큰 결정을 하는것 같습니다.
"
"https://news.hada.io/topic?id=5299","2021년 데이터/ML/AI 업계 지도와 최신 트렌드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     2021년 데이터/ML/AI 업계 지도와 최신 트렌드

   이미지 1장으로 정리한 2021 Data & AI Landscape 와 상세한 설명
   1. 거시적 관점 : 생태계의 복잡성 이해하기
   2. 자금조달 , IPO 및 M&A
   3. The 2021 Landscape
   4. 데이터 인프라스트럭쳐의 주요 트렌드
   ㅤ→ Data Mesh
   ㅤ→ DataOps에게 바쁜 한해
   ㅤ→ 이제는 실시간
   ㅤ→ Metrics Store
   ㅤ→ Reverse ETL
   ㅤ→ Data Sharing
   5. 분석 & 엔터프라이즈 AI의 주요 트렌드
   ㅤ→ Feature Store
   ㅤ→ ModelOps의 부상
   ㅤ→ AI 콘텐츠 생성
   ㅤ→ 중국 AI 스택의 발전
   ## ""거시적 관점 : 생태계의 복잡성 이해하기""
   - 왜 데이터&AI 회사들이 계속 생겨나고, 언제까지 이렇게 갈까 ?
   - 근본적인 추세는 ""모든 회사는 단순한 소프트웨어 회사가 아니라 데이터 회사가 되고 있다는 것""
   - 많은 조직에서 ""데이터""는 RDBMS에 저장된 트랜잭션 데이터와 지난 몇달간 생긴 일에 대한 분석을 위한 몇개의 대시보드를 의미했음
   - 하지만 이제 기업들은 ""데이터와 인공지능""이 ""분석 및 운영""을 위해서 ""내부 프로세스와 외부 어플리케이션""에 내장되는 세상을 향해 가고 있음
   - 이런 근본적인 진화는 기반 기술의 놀라운 발전 - 특히 ""데이터 인프라와 머신러닝/AI""의 공생관계(Symbiotic Relationship)에 의해 만들어 짐
   ㅤ→ 두 분야가 점점 더 긴밀하게 협력
   ㅤ→ 첫번째는 2010년대 초의 ""빅 데이터 시대"" 였음
   ㅤ→ 이 빅데이터를 10년 이상된 오래된 AI 알고리듬(딥러닝)에 적용하면 놀라운 결과를 얻을 수 있다는 걸 알게되면서 AI에 대한 흥분을 이끌어 냄
   ㅤ→ 결과적으로 AI가 데이터 인프라 개발의 중요 드라이버가 되었음
   ㅤ→ AI 기반으로 모든 어플리케이션을 구축하게 된다면, 더 나은 데이터 인프라가 필요할 것
   - 2021년까지 오는 동안 Big Data, AI 용어들이 모두 기복을 겪었고, 요즘엔 ""Automation""에 대한 얘기를 많이 듣지만 기본적으로 이건 다 동일한 메가 트렌드 임
   - 요즘 Data/AI 분야에서의 가속화는 지난 몇년간 클라우드 데이터 웨어하우스의 성장에서 추적할 수 있음
   - 데이터 웨어하우스는 아주 기본적이지만 데이터 인프라스트럭처의 필수요소인 ""어디에 저장할 것인가""를 해결
   ㅤ→ Big Data 혁명이 시작된지 15년이 넘게 지나서 그 문제는 해결되었다고 생각하겠지만 그렇지 않음
   ㅤ→ 돌이켜 보면 Hadoop 의 초기 성공은 어느정도 공간에 대해서는 가짜 였음
   ㅤ→ 방대한 양의 데이터에서 실제 가치를 추출이 가능하다는 아이디어 전달면에서는 중요했지만, 기술적 복잡도 때문에 몇몇 회사에서만 사용하는데 그치면서 시장에 침투하지 못함
   - 요즘의 클라우드 데이터 웨어하우스(Snowflake, Redshift, BigQuery)와 레이크하우스(Databricks) 는
   ㅤ→ 비용도 적게 들고
   ㅤ→ 엄청 많은 기술적인 인력을 필요로 하지도 않고도
   ㅤ→ 유용한 방식으로 방대한 데이터를 저장할 수 있는 기능을 제공
   - 다시 말해, 이제서야 정말로 Big Data를 저장하고 처리할수 있게 되었음. 이게 정말 중요한 일이고, 다른 Data/AI 분야에 대한 Major Unlock(주요 잠금 해제)이 된 것으로 입증됨
   ㅤ→ 첫째, 데이터 웨어하우스는 전체 데이터 및 AI 생태계에 대한 시장 규모를 증가시킴. 사용 편이성과 사용량 기반 가격책정으로 데이터 웨어하우스는 모든 회사가 데이터회사가 되는 Gateway가 됨
   ㅤ→ 둘째, 데이터 웨어하우스가 그 주변 도구를 비롯한 에코시스템을 사용할 수 있게 해줌.
   ㅤㅤ⇨ ETL, ELT, 리버스 ETL, 웨어하우스 중심 데이터 퀄리티 도구, 지표 저장소, augmented analytics 등
   ㅤㅤ⇨ ""Modern Data Stack"" ( https://news.hada.io/topic?id=3055 참고 )
   ㅤㅤ⇨ 최신 데이터 스택의 출현으로 많은 신생기업들이 생겨났고 투자가 집중됨 (DBT, Fivetran..)
   ㅤ→ 셋째, 데이터 웨어하우스가 가장 기초적인 스토리지 계층을 해결해 주기 때문에, 기업이 데이터 요구 계층에서 더 높은 가치를 지닌 프로젝트에 집중할수 있게 됨
   ㅤㅤ⇨ 이제 데이터를 저장했으므로, 실시간 처리, 증강 분석, 머신 러닝 같은 작업에 쉽게 집중가능
   ㅤㅤ⇨ 이것은 차례로 모든 종류의 데이터/AI도구 및 플랫폼에 대한 시장수요를 증가 시킴
   ㅤㅤ⇨ 더 많은 고객의 요구가, 데이터/ML 회사들에서 더 많은 혁신을 만들어 내는 Flywheel을 만들어 냄
   ""데이터 웨어하우스는 전체 데이터 산업의 중요 신호이고, DW가 성장함에 따라 나머지도 같이 성장하게 됨""
   - 데이터/AI 산업에 좋은 뉴스는 데이터 웨어하우스와 레이크하우스가 엄청 빠르고 크게 성장하고 있다는 것
   ㅤ→ Snowflake는 Q2 발표 기준 YoY로 103% 성장했고, Net Revenue Retention이 169%라는 놀라운 숫자를 보여줌 (기존 고객이 점점 더 많이 사용한다는 것)
   ㅤ→ 2028년 매출 12조원($10B)를 예상
   - 혹자들은 미래에는 모든 회사가 적어도 하나의 클라우드 데이터 웨어하우스를 가지게 될 것이라고 얘기 하기도 함
   ## ""The Titanic Shock: Snowflake vs Databricks""
   - Snowflake 는 최근 데이터 분야의 대표 주자. 그들의 2020/9월 IPO는 소프트웨어 IPO사상 가장 컸음. 글쓰는 현재 $95B 회사
   - 새로운 산업 내 경쟁자로 Databricks가 떠오름. 8/31에 $38B 가치로 $1.6B 펀딩 완료
   - 최근까지 두 회사는 시장에서 상당히 다른 부문에 속해 있었음(실제로 한동안 긴밀한 파트너였음)
   - Snowflake는 클라우드 데이터 웨어하우스로서, 대량의 구조화된 데이터(행과 열에 잘 저장가능한)를 저장하고 처리하는 DB
   ㅤ→ 기업이 BI도구를 연결해서 과거 및 현재 성과(""지난 분기에 가장 빠르게 성장한 지역은?"")에 대한 질문에 답하는데 사용
   ㅤ→ 다른 DB와 마찬가지로 SQL을 활용해서 수백만의 잠재 사용자를 보유
   - Databricks는 데이터 세계의 다른 구석에서 왔음
   ㅤ→ 2013년에 오픈소스인 Spark를 상용화 하는 것으로 시작
   ㅤ→ 일반적으로 비구조화된 데이터(텍스트,오디오,비디오)를 처리하도록 만들어진 것
   ㅤ→ Spark 사용자들은 데이터 구조나 조직을 걱정하지 않고 어떤 데이터든 담을수 있는 ""Data Lake""를 구축하는데 사용했음
   ㅤ→ 데이터 레이크의 주요 용도는 ML/AI 애플리케이션을 훈련시켜서 기업이 미래에 대한 질문에 답할수 있도록 하는 것(""다음 분기에 구매할 가능성이 가장 높은 고객은?"" 즉, 예측 분석)
   ㅤ→ Databricks는 데이터 레이크 지원을 위해 Delta를 만들고, ML/AI를 지원하기 위해 ML Flow를 만듦
   - 그러나 최근에는 두 회사가 서로를 향해 수렴
   ㅤ→ Databricks는 데이터 레이크에 DW기능을 넣어서 분석가들이 표준 SQL 쿼리를 실행하고, Tableau나 MS PowerBI 같은 도구를 연동. ""Lakehouse"" 라고 부르는 것을 만들어 냄
   ㅤ→ Databricks는 데이터 레이크를 더 데이터 웨어하우스 스럽게 만들고, Snowflake는 데이터 웨어하우스를 데이터 레이크로 보이도록 비구조화 데이터(오디오,비디오,PDF,이미지등) 저장 기능을 프리뷰로 공개
   ㅤ→ Databricks는 AI기능에 BI를 추가하고 있고, Snowflake는 BI 호환성 기능에 AI를 추가하고 있음
   - 최종적으로는 Snowflake 와 Databricks 둘다 ""The center of all things data"" 가 되고 싶어함
   ㅤ→ 모든 데이터를 저장하는 하나의 저장소. 구조적/비구조적 데이터를 다 저장하고, 과거부터 미래 예측까지 모든 분석을 수행
   - 물론 많은 경쟁자 들이 있음(AWS,GCP 같은 클라우드 하이퍼스케일러들)
   - Snowflake 와 Databricks 모두 클라우드 벤더와는 친구이자 적(Friend and Foe)
   ㅤ→ AWS기반으로 성장한 Snowflake 는 다름 클라우드로 확장중
   ㅤ→ Databricks는 MS와 강력한 파트너십이 있지만, 멀티 클라우드 기능을 통해 벤더 락인되지 않도록 돕고 있음
   ㅤ→ 지난 몇년간, 비판자들은 Snowflake 와 Databricks 의 비즈니스 모델이 클라우드업체의 가격 결정에 따라 마진이 좌우된다고 비판해온 바 있음
   - 다음 5년간 클라우드 제공업체와 데이터 거물(Behemoth) 사이의 춤을 지켜보는 것이 결정적인 이야기가 될 것
   ## ""Bundling, Unbundling, Consolidation?""
   - Snowflake 와 Databricks 둘의 상승을 감안할 때, 이게 업계에서 기다려온 통합 물결의 시작일까 ?
   - 데이터 / AI 분야에서 ""기능 통합(functional consolidation)은 일어나고 있음""
   - 하지만 다들 마찬가지임. 누구도 단일제품 회사가 되기 보다는 더 많은 것을 번들링하고 더 많은 기능을 가지고 싶어 함
   ㅤ→ 2021/6에 상장한 Confluent 역시 실시간 데이터 분야를 넘어서 ""움직이는 데이터와 정적인 데이터의 처리를 통합"" 하는 것을 목표로 하고 있음
   ㅤ→ Dataiku는 데이터 준비과정부터 DataOps,MLOps, 시각화 AI explainability 등을 하나의 플랫폼에 번들링하는데 중점을 둠
   - 최신 데이터 스택의 출현은 기능 통합의 또 다른 예
   ㅤ→ 그 핵심은 데이터 추출에서 데이터 웨어하우스, BI까지 연결되는 기업(대부분 스타트업들)들의 사실상 ""동맹""임
   - 이런 기술 사용자 들에게 번들링 및 컨버전스는 많이 환영받을 것
   ㅤ→ 점점 더 성숙해 지면서 데이터 산업은 ""트랜잭션 vs. 분석"", ""배치처리 vs. 실시간"", ""BI vs AI"" 같은 Technology Divide를 넘어서 진화해 가야함
   - 기업들은 계속 여러 벤더/플랫폼/도구들과 협력해서 필요에 가장 적합한 조합을 만들어 갈 것
   - 핵심 이유는 ""혁신의 속도가 너무 폭발적""
   ㅤ→ 계속 새로운 스타트업이 나오고, 빅테크 기업들이 내부에서 데이터/AI도구를 만들어서 오픈소스화하고, 모든 기존 기술/제품에 대해서 매주 새로운 것이 등장
   - 빅 데이터 웨어하우스 및 데이터 레이크 벤더들이 모든 데이터를 중앙 집중화 하도록 밀어 붙이고 있는데, ""Data Mesh""와 같은 새로운 프레임워크들도 출현
   ㅤ→ 다양한 팀이 각자 책임을 지는 분산 접근 방식
   - 기능 통합 외에 M&A가 일어날지는 알기 어려움
   ㅤ→ 사람들이 좋아하는 소문중에 ""MS가 Databricks를 인수하고 싶어한다""는 것도 있음
   ## ""Financings, IPOs, M&A: A Crazy Market""
   - 스타트업 시장 좀 본사람이라면 알겠지만, 시장이 미쳤음
   - 작년에 이어 올해도 데이터와 ML/AI가 가장 핫한 투자 카테고리
   - 상장 예정 회사들
   ㅤ→ UiPath : RPA 및 AI 자동화 회사
   ㅤ→ Confluent : Kafka
   ㅤ→ C3.ai : AI 플랫폼
   ㅤ→ Couchbase : no-SQL DB
   ㅤ→ SentinelOne : 자동화 AI Endpoint 보안 플랫폼
   ㅤ→ TuSimple : 셀프드라이빙 트럭
   ㅤ→ Zymergen : 바이오 매뉴팩처링
   ㅤ→ Recursion : AI드리븐 신약 제조 회사
   ㅤ→ Darktrace : AI기반 사이버 시큐리티
   - SPAC 증가로 AI 시장 최전선에 있는 기술회사들이 수혜를 받을 것(자율운전, 바이오테크등)
   ## ""The 2021 MAD Landscape & What’s New this Year""
   - 올해 지도에선 ""Analytics and Machine Intelligence""를 “Analytics” 와 “Machine Learning & Artificial Intelligence” 로 분리
   - 새로운 카테고리 추가
   ㅤ→ Infrastructure
   ㅤㅤ⇨ Reverse ETL : 데이터 웨어하우스에서 SaaS 어플리케이션으로 다시 데이터를 전송하는 제품들
   ㅤㅤ⇨ Data Observability : 데이터 계보(Lineage)를 기반으로 데이터 품질 문제를 해결하는데 중점을 둔 DataOps의 구성요소
   ㅤㅤ⇨ Privacy & Security : 데이터 프라이버시가 점점 중요해지고, 많은 스타트업들이 이 카테고리에 등장
   ㅤ→ Analytics
   ㅤㅤ⇨ Data Catalogs & Discovery : 지난 12개월간 가장 바빴던 카테고리. 사용자들이 원하는 데이터셋을 찾고 관리할수 있게 함
   ㅤㅤ⇨ Augmented Analytics : BI 도구들이 NLG/NLP의 발전을 활용하여 자동으로 인사이트를 생성하고, 비기술 청취자들에게 데이터를 접근 가능하게 함
   ㅤㅤ⇨ Metrics Stores : 주요 비즈니스 메트릭을 위한 중앙 저장소. 데이터 스택에 새로 진입
   ㅤㅤ⇨ Query Engines
   ㅤ→ Machine Learning and AI
   ㅤㅤ⇨ MLOps 카테고리를 세분화 : Model Building, Feature Stores, Deployment and Production
   ㅤ→ Open Source
   ㅤㅤ⇨ Format, Orchestration, Data Quality & Observability 추가
   - 예전에는 시리즈 C이상의 스타트업 또는 상장기업등이 많았는데, 올해는 시리즈A/시드 단계의 회사들이 많이 추가 됨
   ## ""데이터 인프라스트럭처의 주요 트렌드""
   - 2020
   ㅤ→ Modern Data Stack(최신 데이터 스택)이 메인스트림으로
   ㅤ→ ETL vs ELT
   ㅤ→ 데이터 엔지니어링의 자동화?
   ㅤ→ 데이터 분석가의 부상
   ㅤ→ 데이터 레이크와 데이터 웨어하우스가 합쳐질까?
   ㅤ→ 아직 해결하지 못한 복잡성
   - 2021
   ㅤ→ Data Mesh
   ㅤ→ DataOps에게 바쁜 한해
   ㅤ→ 이제는 실시간
   ㅤ→ Metrics Stores
   ㅤ→ Reverse ETL
   ㅤ→ Data Sharing
   [Data Mesh]
   - Zhamak Dehghani 가 2019년에 주장한 ""How to Move Beyond a Monolithic Data Lake to a Distributed Data Mesh"" 에서 유래
   - 2020~21 사이에 많은 모멘텀
   - 데이터 메쉬 컨셉은 대부분 조직적인 아이디어
   - 지금까지 데이터 인프라와 팀을 구축하기 위한 표준 방법은 중앙 집중화. 한 데이터 팀이 괸리하는 한개의 큰 플랫폼이 비즈니스 요구를 충족시킴
   - 장점이 많지만 병목현상등 문제도 발생
   - 탈 중앙화를 통해서 각자 도메인을 담당하는 독립적인 데이터 팀을 만들고 조직내의 다른 사람들에게 ""제품으로"" 데이터를 제공 하는 것
   ㅤ→ 소프트웨어 공학에서 얘기하는 마이크로서비스 개념과 비슷
   - 여러가지 의미를 가지는데
   ㅤ→ 이게 가능하게 되면, 분산 데이터 스택에서 미션 크리티컬한 도구를 만드는 신생기업들에게 큰 기회가 될 것
   - 여러 저장소를 통합 쿼리 및 분석하는 SQL Query Engine인 Starburst는 자신들을 ""데이터 메쉬를 위한 분석 엔진""으로 리브랜딩 했음
   - 복잡한 파이프라인을 관리하는 오케스트레이션 엔진(Airflow, Prefect, Dagster)같은 것들이 더욱 미션 크리티컬해 질 것
   - 저장소와 파이프라인 전산에서 데이터를 추적하는것은 컴플라이언스 & 거버넌스 측면에서 더 필수적이 되어 데이터 계보(Data Lineage)의 필요성이 강화 (OpenLineage, DataKin)
   [DataOps에게 바쁜 한해]
   - DataOps 개념이 몇년간 떠돌아 다니다가 최근에 실제로 활성화
   - 여러 정의가 존재
   ㅤ→ 데이터세계의 DevOps
   ㅤ→ 데이터 파이프라인을 구축 및 유지 관리하고, 데이터 카탈로그를 통해 올바른 데이터셋을 찾고, 데이터 생산자와 소비자가 필요한 작업을 수행하는데 필요한 모든 것
   - 어쨋거나 DevOps와 마찬가지로 ""방법론, 프로세스, 사람, 플랫폼 및 도구의 조합""
   - 넓은 맥락에서 ""데이터 엔지니어링 도구와 프랙티스""들이 소프트웨어 엔지니어링의 자동화 수준보다 많이 뒤떨어져 있다는 것
   - 데이터/AI가 중요해 질수록 더 나은 도구와 프랙티스가 필요함
   - 모두 ""데이터 세계의 DataDog""이 되고 싶어함 (실제로 DataDog가 DataOps에 쓰이기도 하지만, 기본적으로 소프트웨어 엔지니어링 기반임)
   - Data observability, Data Lineage, Data Quality, Data Reliability Engineering, Data Access & Governance 등 다양한 서브 파트가 있음
   [이제는 실시간]
   - ""실시간"" 또는 ""스트리밍"" 데이터는 생성된 직후에 바로 처리 및 소비되는 데이터
   - 현재까지 데이터 인프라의 지배적 패러다임인 ""배치""에 반대 되는 것
   - 실시간 데이터 처리는 10-15년전 빅 데이터 시대 초기부터 뜨거운 주제였음
   ㅤ→ 특히 처리속도가 하둡MR에 비해 Spark의 성공을 촉진한 핵심
   - 하지만 몇년간 ""곧 폭발할""시장이었지만 폭발하지는 않았음
   - Confluent IPO의 대성공이 반대론자들이 틀렸다는 것을 증명
   - 그리고 컨플루언트를 넘어 전체 실시간 데이터 생태계가 가속화 되었음
   - 특히 ""실시간 분석""이 많은 활동을 보임
   ㅤ→ 러시아 Yandex에서 만든 ClickHouse가 미국에서 회사를 설립하고 $50M 투자를 받음
   ㅤ→ Druid 오픈소스 기반의 실시간 분석 플랫폼 Imply가 $70M 투자 받음
   [Metrics Stores]
   - 지난 몇 년간 기업의 데이터 및 데이터 사용빈도와 복잡성이 증가
   - 복잡성이 증가하면서 데이터 불일치로 인한 골칫거리도 함께 증가
   - 지표(Metric)들은 디멘젼/정의 및 다른 원인으로 약간만 변경되어도 잘 못 정렬될 수 있음
   - 데이터는 팀이 사용할때 정확하고 신뢰할수 있는 경우에만 유용
   - 지표를 중앙화 하려는 시도가 AirBnB의 Minerva 같은 자체 솔루션 개발로 이어짐 ""Define Once, Use Anywhere""
   - 주요 비즈니스 지표 및 모든 디멘젼의 정의를 표준화하고, 이해 관계자들에게 해당 정의 기반으로 정확하고 분석 가능한 데이터 세트를 제공
   - 중앙 집중화한 지표 정의를 기반으로 데이터에 대한 신뢰를 구축하고, 누구에게나 지표에 대한 교차 기능 액세스를 제공
   - 지표 저장소는
   ㅤ→ 데이터 웨어하우스 상단에 위치해서 BI 플랫폼, 분석 및 데이터사이언스 도구, 운영 어플리케이션을 포함한 모든 다운스트림 어플리케이션에 데이터를 알림
   ㅤ→ 데이터가 일관성을 유지하도록 해서, 비즈니스 로직이 변경되면 자동으로 채워짐
   - Transform, Trace, Supergrain 같은 스타트업이 있음
   [Reverse ETL]
   - 최신 데이터 스택에서 Reverse ETL이 하나의 카테고리가 됨
   - 데이터 웨어하우스에서 CRM, 마케팅자동화 시스템, 고객지원 플랫폼과 같은 비즈니스 어플리케이션으로 데이터를 다시 이동
   - 실제 운영 도구들이 다른 비즈니스 어플리케이션에서 강화된 최신 데이터를 활용할 수 있도록 하는 것
   - 많은 Reverse ETL 도구들이 펀딩 받음 : Census, Rudderstack, Grouparoo, Hightouch, Headsup, Polytomic
   [Data Sharing]
   - 기업내 뿐만 아니라 조직 전반에서 데이터 공유 및 데이터 협업의 부상
   - 공급망 가시성 및 머신러닝 모델 학습, 시장 출시 계획 공유등을 위해서 공급 업체, 파트너 및 고객등의 에코시스템과 데이터를 공유하고 싶어함
   - 조직 간 데이터 공유는 ""데이터 클라우드"" 벤더의 핵심 테마
   - 2021/5월에 구글은 Analytics Hub를 런칭. 조직 내/외부에서 데이터/인사이트/대쉬보드/머신러닝 모델을 공유. 또한 금융서비스를 위한 DataShare도 공개
   - 구글과 같은 날에 Databricks는 Delta Sharing을 공개. 조직간 데이터 공유를 위한 오픈소스 프로토콜
   - 2021/6월에 Snowflake는 데이터 마켓플레이스를 통해서 Secure Data Sharing 기능을 공개
   - Habr, Crossbeam 같은 스타트업들이 있음

   ## ""ML/AI의 주요 트렌드""
   2020
   - Boom time for data science and machine learning platforms (DSML)
   - ML getting deployed and embedded
   - The Year of NLP
   2021
   - Feature Stores
   - The rise of ModelOps
   - AI content generation
   - The continued emergence of a separate Chinese AI stack
   - 인공지능에 대한 연구는 빠른 속도로 계속 발전 중
   ㅤ→ DeepMind Alphafold, OpenAI GTP-3/DALL-E/CLIP
   [Feature Stores]
   - Uber가 2017년에 아이디어를 소개한 뒤로 머신러닝 스택에서 점점 더 일반화
   ㅤ→ Tecton, Rasgo, Logical Clocks, Kaskada 같은 회사들이 펀딩 라운드
   - 머신러닝에서 피쳐(변수 또는 속성)는 개별로 측정가능한 속성 또는 특성으로 데이터 스니펫에서 컬럼으로 표현
   ㅤ→ 머신 러닝 모델은 단일 피쳐에서 수백만개까지의 피쳐를 이용 가능
   - 점점 더 복잡한 모델과 파이프라인을 사용하면서 점점 더 Ad-Hoc하게 수행되었음
   - 엔지니어와 데이터 과학자들은 종종 Raw 데이터에서 피쳐를 다시 추출하는데 많은 시간을 소비
   - 프로덕션 환경과 실험 환경의 격차는 모델 성능이나 동작에 불일치를 유발할 수 있음
   - 조직은 머신 러닝 모델의 거버넌스 및 재현성등에만 관심이 있어서, 피쳐의 사일로화는 실제로 더 어렵게 만듬
   - 피쳐 스토어는 협업을 촉진하고 이 사일로를 없앰
   - 학습 및 프로덕션 모두에서 단일 정보 소스를 제공해서 복잡성을 줄이고 피쳐를 표준화 및 재사용
   - 조직내의 선별된 피쳐를 저장하고, 원시 데이터를 피쳐 밸류로 변환하는 데이터 파이프라인을 실행하고, API를 통해서 빠른 억세스를 제공
   [The Rise of ModelOps]
   - 많은 회사들이 실험단게에서 프로덕션으로 모델을 가져오는 것이 어렵다는 것을 알게 되고, 사용중인 모델에는 지속적인 모니터링과 재학습이 필요하다는 것도 알게 됨
   - MLOps는 DevOps의 모범 사례를 적용. 대규모 모델의 빠르고 지속적인 개발 및 배포를 간소화
   - ModelOps 는 MLOps의 상위 집합. ML을 포함한 모든 AI모델을 학습에서 프로덕션에 이르는 모든 단계에서 더 빠른 운영을 목표로 함
   - ModelOps 는 도구와 프로세스를 모두 다루고, 프로세스를 통합하고, 모델 오케스트레이션을 표준화하고, 포괄적인 거버넌스 기능과 함께 모든 모델에 대한 중장 집중형 저장소를 제공
   - 잘 구현된 ModelOps는 모든 모델을 배포/모니터링 및 관리하는 통합 시스템을 제공하여 위험을 줄이고 컴플라이언스를 높임
   [AI Content Generation]
   - AI가 지난 몇년간 크게 성숙해져서 텍스트,이미지,코드 및 비디오를 포함한 모든 종류의 매체에 걸쳐 콘텐츠를 만드는 데 활용
   - OpenAI GPT-3 공개. GitHub이 OpenAI Doex를 활용한 GitHub Copilot 공개
   - OpenAI가 영어 중심 모델에 집중하지만, 다른 언어로 작업중인 회사들도 많음
   ㅤ→ 독일의 Aleph Alpha, AI21 Labs, Huawei의 PanGu, Naver의 HyperCLOVA
   [The continued emergence of a separate Chinese AI stack]
   - 중국이 세계 최대의 데이터 생산자인 자체 시장과 함께 글로벌 AI강국으로 계속 발전
   - 최고의 추천 알고리즘중 하나인 TikTok이 서구에서 성공하면서 중국 AI 소비자 기술이 처음으로 실제로 확산
   - 중국이 2030년까지 AI 패권을 선언하고 재정지원되면서, 아직 서구 도구를 활용하던 중국에 별도의 자체 스택이 등장하기 시작

   여러 문장들에서 좋은 인사이트를 얻고 생각을 많이 해보고 있습니다
   감사합니다~
   프로세스와 데이터가 뼈와 혈액 같다는 생각이 잠시 들었고
   어디론가 혈액이 모이고 혈관이 생기면서 조직이 생기겠지만
   기업이 돈을 버는 것은 움직임에서 오는 것 아닌가 하는
   이상한 비유가 갑자기 떠오르긴 했습니다.

   항상 고~~오급 정보를 깔끔하게 정리해 주셔서 감사드립니다.

   The 2020 Data & AI Landscape https://news.hada.io/topic?id=2979
"
"https://news.hada.io/topic?id=5256","Tensei - GraphQL/REST API 작성용 헤드리스 CMS 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Tensei - GraphQL/REST API 작성용 헤드리스 CMS 오픈소스

   - CMS를 위한 완전히 커스터마이징 가능한 GraphQL / REST API 셋업 가능
   ㅤ→ 기본 지원 : email/password 및 소셜 인증, JWT, access & refresh 토큰, RBAC
   ㅤ→ 콘텐츠 관리용 CMS 대시보드 제공
   ㅤ→ 파일 업로드용 미디어 매니저 플러그인
   - Mikro ORM을 통해서 Mysql/MongoDB/Sqlite/PostgreSQL 지원
"
"https://news.hada.io/topic?id=5236","Favicon 42만개를 분석해봤어요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Favicon 42만개를 분석해봤어요

   - 10만개의 웹사이트에서 favicon/apple-touch-icon/PWA 아이콘들을 받아 분석
   - 평균 크기는 1.9k(중간값)
   - 56%의 ICO파일은 한개의 이미지만 있음
   ㅤ→ 99.7%가 16x16 포함, 24x24(58%), 32x32(58%)
   -
   의 71%가 PNG 파일이고, favicon.ico의 21%가 실제로는 PNG
   ㅤ→ 가끔 PSD나 BMP가 있기도
   - SVG가 1.1% 이고, Top 1000 개 사이트는 2.5%
   - 74%의 웹사이트만 태그가 있음
   - 43%의 웹사이트만 apple-touch-icon을 가지고 있음
   ㅤ→ 13%는 아직도 예전 precomposed 버전을 가지고 있음
   - 가장 많이 쓰인 컬러 : purple 27% > white 21% > orange 14% > blue 10% > black 9% > red 7%

   2021년을 위한 Favicon 정리 https://news.hada.io/topic?id=3469
"
"https://news.hada.io/topic?id=5278","CodeAmigo - Codecademy 입사 지원자가 만든 클론","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  CodeAmigo - Codecademy 입사 지원자가 만든 클론

   - Codecademy에 3번 입사 지원했다 떨어진 개발자가 자신을 증명하기 위해 직접 개발
   - 누구나 쉽게 Codecademy 스타일의 레슨을 만들수 있는 플랫폼
   - 추가로 Codecademy에는 강사 및 다른 수강자와의 연결 기능이 항상 부족했어서 그 기능을 추가하고 싶었다고
"
"https://news.hada.io/topic?id=5312","Motor Admin - No-Code 어드민 패널 오픈소스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Motor Admin - No-Code 어드민 패널 오픈소스

   - 쉬운 UI로 데이터 검색/생성/수정/삭제 지원 (MySQL/Postgres)
   - 복잡한 액션 생성 가능
   ㅤ→ API 연동을 통해서 자동화 메일 발송 같은 기능 구현
   - SQL과 차트 기능으로 커스텀 보고서 작성 지원
   - 여러 보고서를 묶어서 싱글 대시보드로 만들고 공유 가능
   - Form 빌더 내장
   - 모바일 지원
   - 유료 모델인 Pro 버전 별도
   ㅤ→ 권한관리
   ㅤ→ 멀티 DB
   ㅤ→ 실시간 협업
   ㅤ→ MFA 인증
   ㅤ→ Slack을 통한 개인화된 보고서 알림
   ㅤ→ Full-Text Search
   ㅤ→ Stripe 연동

   액션 생성 기능이 눈에 띄어요. 아직 자료만으로는 소개 내용 말고 더 상세한 걸 보기는 어렵네요. 기존에 개발된 제품 DB 관리용으로 사용할 수 있는지 같은...
"
"https://news.hada.io/topic?id=5248","OpenSilver - MS Silverlight의 오픈소스 구현체 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 OpenSilver - MS Silverlight의 오픈소스 구현체

   - C#/XAML/.NET 코드를 WebAssembly/HTML/CSS로 컴파일하는 오픈소스 (MIT)
   - 플러그인을 사용하지 않음
   ㅤ→ Mono for WebAssembly + MS Blazor
   ㅤ→ C#/XAML/.NET을 클라이언트측 웹 개발에 적용 가능
   - MS와 상관없이 Userware사가 개발하여 공개
   ㅤ→ 기존 Silverlight 코드를 이관하는 것을 비용을 받고 진행
   - 이와 별도로 C#/XAML/.NET 코드를 JavaScript/HTML/CSS로 변환하는 CSHTML5는 유료

   Silverlight 정말 오랜만에 듣네요
"
"https://news.hada.io/topic?id=5275","Adobe, 포토샵 웹 버전 베타 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Adobe, 포토샵 웹 버전 베타 공개

   - 웹에서 복잡한 편집을 직접 하는 것 보다는, 작업물을 공유하고 피드백을 받는 용도에 적합
   ㅤ→ 댓글, 핀, 주석등 관리
   ㅤ→ 제한된 편집기능 : 간단한 레이어, 선택 도구, 마스킹 등
   - 포토샵 PC/아이패드 버전에서 위 코멘트를 보고 답변 가능
   - 일러스트레이터 웹버전도 프라이빗 베타로 공개
"
"https://news.hada.io/topic?id=5216","Notion이 Postgres 샤딩하면서 배운 것들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Notion이 Postgres 샤딩하면서 배운 것들

   - 올해초 5분간 노션을 다운시키고 몇달간 진행해온 PostgreSQL 샤딩을 진행
   ㅤ→ 엄청 빨라 졌다고 즉각적으로 반응이 나오기 시작
   - 샤딩하기로 언제 결정 했나
   ㅤ→ 5년간 몇만배 성장하면서, 잘 사용하던 Postgres Monolith가 용량을 초과하기 시작
   ㅤ→ VACUUM이 지속적으로 중단되기 시작했고, 곧 TXID wraparound 가 발생할 것으로 예상되어 샤딩 작업 시작
   - 샤딩 스킴 설계하기
   ㅤ→ 어플리케이션 레벨 샤딩
   ㅤㅤ⇨ 어떤 데이터를 샤딩할 것인가
   ㅤㅤ⇨ 어떤 키로 파티셔닝 해서 데이터를 분할할것인가
   ㅤㅤ⇨ 얼마나 많은 샤드를 만들고, 어떻게 구성해야 하나
   ㅤ→ 결정 #1
   ㅤㅤ⇨ 노션은 block 단위로 데이터 모델이 구성됨
   ㅤㅤ⇨ block 테이블에서 연결되는 모든 테이블을 샤딩하기로 함 (Space, Discussion, Comment 등)
   ㅤ→ 결정 #2
   ㅤㅤ⇨ block 은 workspace ID로 파티셔닝
   ㅤㅤ⇨ 각 workspace는 UUID가 부여되므로 이걸 이용
   ㅤ→ 결정 #3
   ㅤㅤ⇨ 480개의 논리적 샤드 와 32개의 물리적 DB로 구성
   ㅤㅤㅤㅤ2의 제곱수인 512가 아닌 480을 선택한 이유는, 더 유연하게 나누어 지는 숫자이기 때문
   - 샤드로 이관하기
   ㅤ→ 1. Old & New DB에 이중으로 쓰기 (Audit Log와 함께)
   ㅤ→ 2. 이중 쓰기 시작후 올드DB의 데이터를 새 DB로 Backfill 시작
   ㅤ→ 3. 새 DB의 데이터 검증
   ㅤ→ 4. 새 DB로 변경 (Incremental로 진행)
   - 어렵게 배운 교훈들
   ㅤ→ 더 일찍 샤딩 하세요 : 기존 DB부담이 커질때까지 기다렸기 때문에, 마이그레이션 자체도 부담을 주는게 되어서 천천히 할 수 밖에 없었음
   ㅤ→ Zero 다운타임 이관을 목표로 하세요 : 이중 쓰기의 처리량이 최종 전환시에 핵심 병목이었음.
   ㅤ→ 별도 파티션 키 대신, 복합 PK를 이용하세요 : 기존 DB의 PK인 id와 파티션 키인 space_id 를 묶어 버리면 앱 내에서 space_id 들을 패스할 필요를 없앨수 있었을 것

   Postgres 의 TXID 얘기는 항상 나오는 주제중에 하나 입니다
   - PostgreSQL의 결함들 https://news.hada.io/topic?id=1829
   - 5년간 PostgreSQL 스케일링 하면서 배운 것 https://news.hada.io/topic?id=4101
"
"https://news.hada.io/topic?id=5324","YouGlish - 유튜브를 이용하여 영어 발음 훈련하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    YouGlish - 유튜브를 이용하여 영어 발음 훈련하기

   - 특정 단어를 검색하면 해당 발음이 들어있는 유튜브 영상들을 찾아 줌
   - 자막과 함께 딱 그 단어 발음 위치만 들려줘서 다양한 사람들의 실제 해당 발음을 들어볼 수 있음
   - 미국/영국/호주/캐나다/아일랜드/스코틀랜드/뉴질랜드 발음 들도 따로 선택 가능
   - 본인의 목소리도 녹음해서 들어보기 지원

   와 너무 좋습니다 이거
"
"https://news.hada.io/topic?id=5208","Ddosify - 고성능 로드테스팅 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ddosify - 고성능 로드테스팅 도구

   - HTTP, HTTPS, HTTP/2 및 다른 프로토콜도 지원 예정
   - 시나리오 기반 테스트 : JSON으로 플로우 생성
   - 다양한 부하 타입
   - Go로 작성되어 Docker/Homebrew Tap 및 맥/윈/리눅스용 바이너리 제공
   - 멀티 리젼에서 실행되는 Ddosify Cloud는 별도 공개 예정
"
"https://news.hada.io/topic?id=5235","vscode.dev 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             vscode.dev 공개

   - VS Code의 웹 버전을 바로 사용 가능한 URL
   - File System Access API를 이용하여 로컬 파일 편집 지원 (크롬/엣지)
   - 파일/업로드 다운로드 가능해서 iPad에서도 개발 가능
   - Settings Sync로 세팅/키바인딩/확장도 그대로 공유 가능
   - GitHub Repo, Codespaces, PR 확장 기본 내장
   - github.dev 와 비슷하지만 약간 다름
   ㅤ→ github.dev 는 GitHub에 깊게 통합되어, 자동으로 로그인 되고 URL도 GitHub /organization/repo 형식을 그대로 따름
   ㅤ→ vscode.dev 는 Azure Repo도 지원. vscode.dev/github 와 vscode.dev/azurerepos 로 나눠서 사용
   - 확장/테마 적용을 쉽게 링크로 공유가능
   ㅤ→ Night Owl 테마 https://vscode.dev/theme/sdras.night-owl

   한국어 언어팩 설치만 되면 더 자주 사용할텐데...
"
"https://news.hada.io/topic?id=5247","FOSDEM 2022 온라인에서 개최 예정온라인에서 개최 예정

   - 오랜 토론 끝에 온라인으로 진행하기로 결정했다고
   - 2022년 2월 5일~6일
   - 1-2주 내로 발표 신청 받을 예정

   항상 FOSDEM은 겨울인 2월초에 열려서 춥기도 하고,
   일반 행사장들 보다는 좁은 캠퍼스(벨기에 브뤼셀 대학교)에서 열리기 때문에
   코로나 상황에 오프라인은 열리긴 쉽지 않은듯 하네요.
   ( 어차피 못갈바에야 온라인이 더 좋은.. )
"
"https://news.hada.io/topic?id=5292","Show GN: kiwigo - 한글 형태소 분석기인 kiwi의 go binding","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Show GN: kiwigo - 한글 형태소 분석기인 kiwi의 go binding

   kiwigo는 cpp로 제작된 한글 형태소 분석기인 kiwi(https://github.com/bab2min/Kiwi)의 golang binding 입니다.
   kiwi는 쉬운 사용자 사전 등록과 고속 처리가 장점이라고 할 수 있습니다.
   Golang 에서는 cgo를 통해 c 소스를 활용할 수 있는데요. 감사하게도 kiwi에서 c api를 오픈해두셔서 잘 활용할 수 있었습니다.
   kiwigo는 최대한 kiwi의 c 인터페이스를 그대로 노출하려고 노력하였습니다.
   많은 분들의 관심 부탁드리며, pr, 참견, 스타, 좋아요, 업보트, 댓글 무엇이든 환영합니다.
   마지막으로 실행 가능한 예시 코드를 공유합니다.
   ```
   package kiwi_test
   import (
   ""fmt""
   kiwi ""github.com/codingpot/kiwigo""
   )
   func Example() {
   kb := kiwi.NewBuilder(""./ModelGenerator"", 1 /*=numThread*/, kiwi.KIWI_BUILD_INTEGRATE_ALLOMORPH /*=options*/)
   kb.AddWord(""코딩냄비"", ""NNP"", 0)
   k := kb.Build()
   defer k.Close() // don't forget to Close()!
   results, _ := k.Analyze(""안녕하세요 코딩냄비입니다. 부글부글."", 1 /*=topN*/, kiwi.KIWI_MATCH_ALL)
   fmt.Println(results)
   // Output:
   // [{[{0 NNG 안녕} {2 XSA 하} {4 EP 시} {3 EC 어요} {6 NNP 코딩냄비} {10 VCP 이} {11 EF ᆸ니다} {13 SF .} {15 NNP 부글부} {18 NNG 글} {19 SF .}] -69.74997}]
   }
   ```

   공개 감사합니다! 다양한 곳에서 쓰일 수 있을 것 같아요.

   관심 가져주셔서 감사합니다. :)

   고에도 드디어 형태소 분석기가 !!

   맞습니다! 여러 형태소 분석기가 다양한 곳에서 사용할 수 있으면 좋을 것 같습니다. :)
"
"https://news.hada.io/topic?id=5280","Ask GN: 필요해지기 전에 먼저 사두면 좋은게 뭐가 있을까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Ask GN: 필요해지기 전에 먼저 사두면 좋은게 뭐가 있을까요?

   특정 물품이 딱 필요해졌을 때 즉시 없으면 엄청 불편한 것들이 있을텐데요.
   상처났을 때 붙이는 밴드(요즘은 습윤밴드가 대세인듯 한데) 처럼요.
   어떤게 또 있을까요?
   Ask에 질문이 넘 없길래 제가 궁금했던 것 하나 올려봅니다 ^^

   이것저것 사두기는 하는데 지나고보면 의미가 없더군요.
   필요할 때에 필요한 만큼 사는게 제일이다 싶습니다.

   쿠팡 로켓배송이라는 선택지가 있어서 이제는 미리 사두는건 잘 안하는거 같아요-

   AA 빠테리요! 덕분에 액박을 하려던 마음에 찬물이...

   그거 저도 몇번 당해서.. 충전 배터리 팩 + 자동 충전스탠드로 바꾸시면 마음이 편해집니다..

   크흑... 엘리트 패드처럼 내장으로 바꿔주면 참 좋을텐데요. OTL.

   1. 도장용 인주(휴대용)
   → 정말 필요한경우가 적지만 없으면 불편합니다 ㅠㅠ
   2. 자이스 렌즈 와이프
   → 안경낀분들에게 없으면 불편하다고 생각됩니다.

   인주는 하나 사두면 정말 좋은 것 같아요.
   요즘 분위기에 안 어울리지만.. 오래전에 사둔 '사치하타' 인주가 아직 안 말라서 잘 쓰고 있습니다.
   찌꺼기도 안 남고 선명해서 써본 인주 중에서는 정말 최고인데, 국산에서 사치하타 대체제가 있을까 모르겠네요.

   1. 가루형 마데카솔
   2. 여드름 패치
   3. 손수건(여름한정)
   이 정도는 항상 있으면 편한거같아요 ㅋㅋ

   헛 가루형 마데카솔은 첨 알았어요.

   아 그리고, 접이식 우산 하나 정도는 항상 가방안에..
"
"https://news.hada.io/topic?id=5322","Microsoft Loop 공개 - Notion과 유사한 새로운 협업 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Microsoft Loop 공개 - Notion과 유사한 새로운 협업 도구

   - 프로젝트의 파일/링크/데이터를 하나로 모으는 Workspace
   - 모든 컴포넌트 배치가 자유로운 Flexible Canvas를 가진 Page
   - 리스트, 투표 가능한 테이블, 상태 트래커, 노트, 파일, 링크, Dynamics 365등의 Component : 실시간으로 업데이트
   - 진척도 트래킹, 알림, 변경 하이라이트, 상태 라벨 등을 지원하여 멤버간에 Sync

   노션은 페이지 편집자 10명 넘으면 싱크가 다 어긋나던데, 얘는 괜찮을거 같은 느낌이?!
"
"https://news.hada.io/topic?id=5301","Meta: 메타버스 진화 방향과 기업 페이스북/기업 메타의 미래","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Meta: 메타버스 진화 방향과 기업 페이스북/기업 메타의 미래

   메타버스 관련 논쟁을 총정리하는 글
   - 메타버스: 내러티브의 힘
   - 내러티브: 사회에 확산되는 이야기
   - 메타버스라는 기술 진화의 방향
   - 그래픽 기술 진화 속도와 열린 생태계
   - 현재의 인터넷과 내일의 인터넷
   - NFT, 메타버스의 기초
   - 기업 페이스북 또는 Meta의 미래
"
"https://news.hada.io/topic?id=5241","크롬 95 새 기능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               크롬 95 새 기능

   - URLPattern API로 라우팅을 더 편하게
   - Eye Dropper API로 색상선택 지원
   - User Agent 줄이기 Origin Trial 시작
   - DevTools 변경 사항
   ㅤ→ 새로운 CSS 길이 편집 도구 (유닛 선택 드롭다운, 좌우로 움직여 값 변경)
   ㅤ→ Issues 탭에서 특정 이슈들 Hide 가능
   ㅤ→ 콘솔, 소스, 속성 패널에서 커스텀 속성이 앞쪽에 볼드체로 보이도록 정렬 변경
   ㅤ→ Lighthouse 8.4
   ㅤ→ Snippets 알파벳 정렬
   ㅤ→ 번역본 릴리즈 노트 보기 및 번역 오류 제보 링크 (한국어,러시안,중국어,스페인어,일본어,포르투갈어)
"
"https://news.hada.io/topic?id=5230","구글, Pixel 6 와 Pixel 6 Pro 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글, Pixel 6 와 Pixel 6 Pro 공개

   - 구글의 자체 프로세서 Tensor 와 Titan M2 보안 칩
   - 픽셀 6 Pro : 6.7"", 1440x3120 (512ppi), 120Hz, 210g, 12G LPDDR5 램
   - 픽셀 6 : 6.4"", 1080x2400 (411ppi), 90Hz, 207g, 8G 램
   - 엄청 밝아진 3개 또는 2개의 후면 카메라
   ㅤ→ 메인 : 50MP f/1.85
   ㅤ→ 초광각 : 12MP f/2.2
   ㅤ→ 망원(Pro만) : 48MP f/3.5, 4배 광학 줌
   - 8MP/12MP 전면 카메라
   - Magic Eraser로 사진에서 필요 없는 객체 지우기 가능
   - $599 / Pro $899

   옆모습을 보면 뒷면 카툭튀가 너무 심하긴 하네요. 아예 한줄로 밴드처럼 튀어나와서..
"
"https://news.hada.io/topic?id=5243","Gramma - 커맨드라인 문법(grammar) 검사기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Gramma - 커맨드라인 문법(grammar) 검사기

   - LanguageTool 을 이용한 고급 문법 체크 지원(Remote API 또는 로컬 서버)
   - 글로벌/로컬(프로젝트당) 설정 지원
   - 일반 텍스트 및 마크다운 지원
   - Git 연동
   - 완전 대화형
"
"https://news.hada.io/topic?id=5290","Wildbeast - 다목적 Discord bot 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Wildbeast - 다목적 Discord bot 프레임워크

   - 현재 약 5만개의 디스코드에서 사용중인, 다양한 기능을 수행하는 공개봇 WildBot의 오픈소스
   ㅤ→ 서버 관리 및 모더레이선: 환영메시지, 사용자 정보, 롤 관리, 킥, 밴, 태깅 등
   ㅤ→ 게임 요소 : 주사위, Meme 생성, 음악 재생(유튜브) 등
   ㅤ→ 다양한 커스터마이징 제공
   ㅤ→ 커스텀 커맨드 구현용 프레임워크 포함
"
"https://news.hada.io/topic?id=5303","오라클 JDK 17 - 상용에도 무료 사용 가능하게 라이센스 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  오라클 JDK 17 - 상용에도 무료 사용 가능하게 라이센스 변경

   - 새로운 ""Oracle No-Fee Terms and Conditions""(NFTC) 라이센스
   ㅤ→ 커머셜/프로덕션 상관없이 무료로 사용 및 재배포 가능
   ㅤ→ JDK17 부터 적용되며 다음 LTS 릴리즈후 1년동안 지속(이 기간이 지나면 상용 라이센스 필요)
   ㅤ→ 분기별 보안 업데이트 포함
   - 2018년에 결정했던 내용을 번복 하는 것
   - GPL로 배포되는 OpenJDK는 이 결정과 상관없이 계속 별도로 제공될 것

   아낰

   과연 다시 JDK로 돌아갈 필요가 있을까요?
   (너무 황당해서 유익하지 않은 댓글을...써서 죄송합니다.)

   사실 오라클JDK는 이미 돌아오지 못할 강을 건너서.. (그러신 걸로 이해했습니다.. ㅋㅋㅋ)

   어떤 버전의 JDK를 써야 할까? https://news.hada.io/topic?id=5183
"
"https://news.hada.io/topic?id=5218","애플, M1 Pro 와 M1 Max 도입한 MacBook Pro 14/16인치 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             애플, M1 Pro 와 M1 Max 도입한 MacBook Pro 14/16인치 공개

   - 터치바 삭제한 펑션 키보드(터치ID만 탑재)
   - 3개의 썬더볼트4, SD카드, HDMI, 헤드폰잭, MagSafe 3
   - 120Hz 프로모션, Liquid Retina XDR, 미니 LED
   ㅤ→ 노치형 디스플레이
   - 14/16인치 상관없이 CPU 선택가능
   ㅤ→ M1 Pro : 8~10코어 CPU, 14~16코어 GPU, 200GB/s 메모리 대역폭, 외장디스플레이 2대, 최대 32GB 메모리
   ㅤ→ M1 Max : 10코어 CPU, 32코어 GPU, 400GB/s, 외장디스플레이 4대(모니터 3 + 4K TV 1), 최대 64GB 메모리, 2개의 동영상/ProRes 디코딩 엔진
   ㅤ→ 16코어 뉴럴 엔진
   ㅤ→ 성능코어 8개 + 효율코어 2개
   - 3 지향성 빔포밍 스튜디오급 마이크
   - 6 스피커 사운드 시스템 (4개의 포스 캔슬링 우퍼)
   - 공간음향 도입
   - 1080p 페이스타임 카메라 (F/2.0)
   - 7.4GB/s 읽기속도 SSD
   - 최대 8TB 스토리지
   - 무게 : 14인치 1.6kg, 16인치 2.1kg
   - 14인치 ₩2,690,000~, 16인치 ₩3,630,000~

   이전 16인치 모델 사이즈랑 무게가 1.62cm, 35.79cm, 24.59cm, 2.0kg 이었는데요.
   1.68cm, 35.57cm, 24.81cm, 2.1kg(M1 Pro), 2.2kg(M1 Max)이 되었군요ㅠ
   아이폰 마냥 더 무거워 졌네요ㅠㅠ

   터치바 없애서 너무 좋네요

   전 터치바에 BTT로 이것저것 세팅해서 쓰다보니 나름 또 쓸만하더라구요.. ㅎㅎ

   저는 메모리 대역폭이 인상적이네요.
   400GB/s라니...ㄷㄷㄷ
   이제, 기존 인텔계열들은 명함도 못 내밀겠네요

   와

   애플 드디어 정신차렸군요... +1

   드디어 정신차리고 HDMI 랑 이것저것 포트를 다시 복귀 시켰네요.
   M1 대비해서도 엄청 빨라졌다고 얘기하니 성능은 뭐 얘기할 필요도 없을 듯
   맥북에도 노치가 들어간게 에러같기도 하면서, 크게 부담 안줄 것 같다는 생각도 드네요.
   14인치에도 최고사양 CPU 넣을 수 있는 것은 좋네요. 다만 무게가 1.6은 좀..

   아 중요한 사실하나 빼먹었네요. 꼭 MagSafe 아니더라도 USB-C 충전도 지원합니다.
"
"https://news.hada.io/topic?id=5270","Next.js 12 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Next.js 12 릴리즈

   - Rust 컴파일러 : 3배 빠른 로컬 Refresh, 5배 빠른 프로덕션 빌드
   - Middleware (beta) : 리퀘스트 완료전에 다양한 코드 실행 가능
   ㅤ→ 인증, 피쳐 플래그, A/B테스팅, 봇 차단, 리디렉션, 서버측 분석기능, 로깅등
   - React 18 지원 : 네이티브 Next.js API 지원 (Suspense & SSR Streaming 포함)
   - [] 에 AVIF 지원 : 20% 더 작은 이미지를 위해 Opt-in 가능
   - Bot-aware ISR Fallback : 웹크롤러들을 위한 SEO 최적화
   ㅤ→ Incremental Static Regeneration
   - URL Imports (alpha)
   - React Server Components (alpha)

   간단한 요약. https://jimmymoondev.notion.site/Next-js-12-c6f543b8856a45e8ba08769b1c…

   swc 만드신 분이 어느새 Vercel로 가셨군요. 이거 보고 나서야 알았습니다.
   https://kdy1.github.io/post/jobs/vercel/deno-vercel/
"
"https://news.hada.io/topic?id=5258","VSCode 인터페이스로 원격근무 회사들 정보 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      VSCode 인터페이스로 원격근무 회사들 정보 보기

   - 원격근무 가능한 회사들을 보여주는 웹사이트인 RemoteOk
   ㅤ→ '회사에 눈치 보이지 않게' VSCode UI로 원격근무 회사의 구인 공고를 볼 수 있게 구현
   - 실제로는 VSCode 쪽은 모두 이미지이고, 내용 부분만 텍스트로 되어 있어서 참고한다면 다양한 용도로 사용 가능할 듯

   이 소스를 그대로 가져다가 '실시간 크리켓 경기 결과' 를 보도록 만든 글이 HN에서 화제가 되었는데요.
   https://cric-code.pankajtanwar.in/
   이슈가 된 이유는 사실 원작자에 대한 크레딧을 제대로 안적었다는 것이기 때문입니다.
   https://news.ycombinator.com/item?id=28985936
   크리켓 결과 맨 아래로 가면 보이긴 하는데..
   자신이 작성했다고 적은 소개글에는 전혀 내용이 없거든요.
   https://pankajtanwar.substack.com/p/i-built-a-fake-vs-code-to-browse
   재미난 아이디어이니 혹시 가져다가 뭘 만드신다면 꼭 크레딧 표시 잘 해주세요 ㅎㅎ
"
"https://news.hada.io/topic?id=5264","Matrix, WhatsApp, Signal, Telegram을 하나로 사용하는 Element One 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Matrix, WhatsApp, Signal, Telegram을 하나로 사용하는 Element One 공개

   - Matrix 클라이언트인 Element가 다른 메시징앱에 대한 무제한 브릿지를 포함
   ㅤ→ Element 안에서 Whatsapp,Signal,Telegram 사용자들과도 똑같이 메시징 가능
   - 기존에 오픈소스 브릿지로 개인이 설정해서 사용 가능하던 것을 서비스화 한 것
   - 월 $5

   https://www.beeper.com/
   비슷한 서비스로 beeper가 있습니다
   다음 과 같은 서비스를 지원한다고 합니다
   Whatsapp, Facebook Messenger, iMessage, Android Messages (SMS), Telegram, Twitter, Slack, Google Hangouts, Google Chat, Instagram
   , Skype, IRC, Matrix, Discord, Signal, LinkedIn, Beeper network
   눈에 뜨이는 점은 카카오톡도 이후 지원 예정 목록에 존재하며 모든 브릿지를 오픈소스화해서 셀프 호스팅이 가능하게 만들겠다고 한점입니다.

   보안에 더 집중한 Signal 같은 경우는 여기다 연결하긴 별로일 것 같은데...
   WhatsApp,Telegram,Matrix 같이 묶는거는 나름 편할 것 같아 보이긴 하네요.

   Matrix - 탈중앙화 방식의 오픈소스 실시간 커뮤니케이션 네트워크 https://news.hada.io/topic?id=1109
   모질라 재단, 내부 메시징 도구를 IRC에서 Riot/Matrix로 변경하겠다고 발표 https://news.hada.io/topic?id=1110
   Matrix와 Jitsi로 Slack+Zoom 오픈소스 버전 구축하기 https://news.hada.io/topic?id=1848
   Matrix, 모든 개인 대화에 E2E 암호화를 기본값으로 https://news.hada.io/topic?id=2047
   Automattic이 Matrix 에 투자 https://news.hada.io/topic?id=2130
   Matrix, P2P 버전 공개 https://news.hada.io/topic?id=2207
   Matrix 클라이언트 Riot, Element로 이름 변경 https://news.hada.io/topic?id=2461
"
"https://news.hada.io/topic?id=5255","Show GN: 뉴스레터를 즐겨보고 있다면 주목해야 할 서비스, 헤이버니를 소개합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Show GN: 뉴스레터를 즐겨보고 있다면 주목해야 할 서비스, 헤이버니를 소개합니다.

   안녕하세요! 저는 헤이버니 서비스를 담당하고 있어요.
   약 두달전에 GeeksNews 운영자 xguru님이 저희 서비스 ‘헤이버니’를 소개해주셨는데요! (감사합니다!🙏) 이번 기회에 ‘헤이버니’를 Show GeeksNews에 직접 소개해보고자 합니다.
   사실 소개 글을 발견하고 바로 대응을 하고 싶었으나 업데이트를 앞두고 있어서 좀 더 좋은 모습으로 인사드리고 싶은 욕심이 생겨서 늦어졌어요.
   -
   평소 뉴스레터 구독하고 계신가요?
   출퇴근길, 자유시간 등 자투리 시간을 이용해 뉴스레터를 즐겨 읽는 분이 많아졌어요.
   뉴스레터가 새로운 미디어의 기능으로 주목받고 있다고 볼 수 있는데요, 뉴스레터를 구독하고 읽는 과정에서 발생하는 불편함을 편리하고 즐거운 경험으로 바꿀 수 있는 서비스로 헤이버니가 자리 잡길 바랍니다!
   헤이버니의 몇 가지 기능을 말씀드릴게요!
   -국내외 뉴스레터 리스트를 한 곳에서 보고 구독할 수 있어요.
   -업무/개인 이메일과 섞이지 않고 뉴스레터 아티클만 카테고리별로 모아볼 수 있어요.
   (회원가입 할 때 구독 이메일 주소를 생성해드려요. -> news. 개인아이디 @ heybunny.io)
   - 북마크 기능으로 좋았던 아티클을 저장할 수 있어요.
   - 영어, 일본어 아티클도 한국어로 바로 읽을 수 있어요
   - 뉴스레터 카테고리별, 아티클별 검색을 통해 볼 수 있어요.
   - 큐레이션으로 취향과 관심에 맞는 뉴스레터를 발견하고 구독할 수 있어요.
   헤이버니는 현재 웹 브라우저, iOS, 안드로이드 어플리케이션 환경에서 무료로 이용하실 수 있어요.
   *오늘 iOS를 업데이트 했어요. 안드로이드도 곧 업데이트할 예정이니 많은 관심과 피드백 부탁드립니다!
   -
   지난번에 xguru 님이 주신 피드백이었던 가입 시 생년월일 입력방식을 보완했습니다! 피드백 주셔서 감사합니다!
   헤이버니를 사용해보시고 피드백 댓글 달아주시면 하나하나 읽고 보완 할 수 있는 부분은 참고하겠습니다. 앞으로도 뉴스레터를 읽는 즐거움 경험을 드리기 위해 지속적으로 사용자 경험을 개선할 예정이니 많은 피드백과 관심 부탁드립니다. 시간 내어 읽어주셔서 감사합니다!

   홈페이지 https://www.heybunny.io/
   다운로드 링크
   iOS: https://apps.apple.com/kr/app/…
   안드로이드:
   https://play.google.com/store/apps/details?id=com.twigfarm.heybunny

   좋은 서비스 감사합니다. 바로 가입했어요!!

   email 인증번호 입력 시 웹에서 바탕이 하얀색이라 어디에 입력을 해야할지 안보이네요!

   소개글 보고 설치하고 가입까지했는데. 관심사 선택하면 추천 아티클이 바로 뜰 줄 알았는데 또 다른 구독을 해야받는걸로 되어있어서 사용을 멈추고 있네요.
   선택장애 발생으로 서비스 사용 중단이되었습니다.

   좋은 서비스 감사합니다. 다크 모드도 지원되었으면 좋겠네요!

   안녕하세요! 감사합니다. 다크모드 메모해두겠습니다 ㅎㅎ 좋은 의견 감사합니다!

   홈페이지에서 가입 시 생년월일 입력에 하이픈'-' 입력해야합니다!.

   안녕하세요! 댓글 감사합니다 :)
   현재는 앱 환경에서 회원가입 시 생년월일 넣는 방법을 개선하였고, 웹 브라우저는 준비하고 있습니다!

   좋은 서비스 만들어주셔서 고맙습니다!
   소개 드리기 전부터 많은 분들이 헤이버니 주소로 가입해주셔서 이미 많이 알려져있구나 라고 생각이 들었어요.
   피드백 받아주셔서 감사합니다 ;)

   더욱더 좋은 경험을 드리기 위해 열심히 하고 있습니다.
   피드백은 언제든지 환영이에요! 감사합니다! 😊
"
"https://news.hada.io/topic?id=5316","Microsoft, Teams에 Mesh로 3D 아바타와 몰입형 회의 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Microsoft, Teams에 Mesh로 3D 아바타와 몰입형 회의 도입

   - Mesh는 다양한 가상 경험을 제공하는 협업 플랫폼
   ㅤ→ MS가 2017년에 인수한 AltspaceVR의 아바타 기술을 사용
   - 자신의 카메라 영상 대신 3D 아바타를 통해 Teams에서 메타버스 경험 제공
   - AI를 통해 내 음성을 듣고 아바타를 움직임
   - VR/AR 헤드셋과 잘 어울리 것
   - 번역 및 받아쓰기 기능도 만들고 있음
   - 2022년 상반기 부터 사용 가능한 것을 목표
"
"https://news.hada.io/topic?id=5213","Cornerstone.js - 의료용 이미지 라이브러리 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Cornerstone.js - 의료용 이미지 라이브러리

   - 의료용 웹 어플리케이션 제작을 위한 통합 이미징 플랫폼
   - DICOM 파싱
   ㅤ→ 모든 Transfer Syntax 지원
   ㅤ→ WADO-URI / WADO-RS 지원
   - Web Worker를 이용한 고성능 멀티스레드 이미지 디코딩
   - 모듈러하게 설계되어 쉽게 확장 가능
"
"https://news.hada.io/topic?id=5319","Ask GN: 긱뉴스를 만드시면서 선택하신 기술스택과 주요 의사결정의 배경이 궁금합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Ask GN: 긱뉴스를 만드시면서 선택하신 기술스택과 주요 의사결정의 배경이 궁금합니다.

   xguru님께 드리는 질문이라서 이게 Ask GN에 어울리는지는 모르겠지만.. ㅎㅎ
   긱뉴스에 글 올릴 때 왜 (마크다운 아닌) 순수 텍스트로 하셨을까? 띄어쓰기 했던 게 글 올리고 나니 없어져서 수정하고 싶은데 수정을 못하네.. 등등 든 생각을 어디에 물어볼까, 부터 시작된 것인데요.
   좀 더 넓은 층위에서 카르마 시스템이라든가, 지금처럼 개발/운영하고 계신 의사결정의 이유가 있을것 같아서 궁금해졌습니다.
   (혹시 이미 공유해두신 게 있을까 해서 1주년 회고 https://xguru.net/2215 도 봤지만 의사결정 배경은 못 찾았네요)

   ㅎㅎ 긱뉴스 자체에 대해 질문 하는 곳은 아니지만, 기록된데가 없으니 간단히 적어봅니다.
   사실은 처음에 PoC겸 MVP로 빠르게 만들려고 손에 익은 스택인 php+mysql 로 시작해서 그대로 유지하고 있어요. 복잡한 구조 보다는 빨리 만들고 뉴스를 공유하는 시험을 해보고 싶었어요.
   애초에 모델이 해커뉴스 여서 텍스트 + 카르마 기반으로 시작했어요. 꾸밈이 많아지면 글 집중도가 떨어질듯해서 최대한 심플하게 유지하지만, 마크다운의 서브셋 과 편집기 정도는 도입하려고 고민중입니다.
   긱뉴스는 제가 하고 싶은 일들의 기초이자 발판 같은 거여서요. 앞으로 이것 저것 더 해보려고 합니다.

   (역시 조금 부적절했네요 ^^;)
   그래도 답변 감사드립니다! 궁금했던 게 좀 풀렸습니다.
"
"https://news.hada.io/topic?id=5282","Manim - 수학 시각화 파이썬 오픈소스 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Manim - 수학 시각화 파이썬 오픈소스 라이브러리

   - 수학을 시각화해서 표현하는 유튜버 3Blue1Brown 가 만든 오픈소스의 커뮤니티 포크버전
   - 도형이나 좌표, 수식등을 그리고 애니메이션을 만들 수 있음
   - 기하학적 도형 작도, 좌표평면, LaTeX 수식 등 다양한 예제를 포함

   제목에 Manin이라고 써있는데 마님Manim이군요.

   3Blue1Brwon 은 스탠퍼드 수학과 출신의 유튜버인데, 푸리에 변환이나 선형대수학 등 수학적 개념들을 이해하기 쉽게 시각적으로 표현하는 영상으로 유명합니다.
   https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw
   자신이 영상을 만들때 Manim 을 어떻게 사용했는지도 깃허브를 통해 공개해 놓았습니다.
   https://github.com/3b1b/videos

   앗... 라이브러리 이름이 Manim 인데 제목에서 Manin 이라고 오타를 냈네요..

   수정해두었습니다!
"
"https://news.hada.io/topic?id=5221","TypeScript를 배울 때 알았으면 좋을 트릭들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      TypeScript를 배울 때 알았으면 좋을 트릭들

   - Readonly
   ㅤ→ JS의 Array와 Object는 Reference라서 수정이 가능. 사이드 이펙트 줄이기
   - Any vs Unknown
   ㅤ→ 컴파일할 때 모르는 타입에 대한 강제 체크가 가능하게 any 대신 Unknown 사용하기
   - Record로 객체 Typing 하기
   ㅤ→ interface 대신 Record를 이용

   HN 댓글에 추가로 나온 것들 https://news.ycombinator.com/item?id=28837181
   - Utility Type 에 대해 알기
   ㅤ→ https://www.typescriptlang.org/docs/handbook/utility-types.html
   ㅤ→ 한국어 https://typescript-kr.github.io/pages/utility-types.html
   - 함수에서 Sometype|undefined 대신 Sometype|null 리턴하기
   - Indexed Access Types https://typescriptlang.org/docs/handbook/…
"
"https://news.hada.io/topic?id=5277","글을 읽기 편하게 해주는 CSS 코드 100바이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      글을 읽기 편하게 해주는 CSS 코드 100바이트

   - 사용자 스타일시트 확장에 넣어서 웹사이트를 보기 편하게
   html {
   ㅤmax-width: 70ch; /* 70글자로 좌우 넓이 설정 */
   ㅤpadding: 3em 1em; /* 상하 여백 */
   ㅤmargin: auto; /* 가운데로 */
   ㅤline-height: 1.75; /* 읽기 편한 라인 높이. 글꼴 크기에 따라 조정되도록 일부러 단위는 생략 */
   ㅤfont-size: 1.25em; /* 이 값은 자신이 원하는 크기로 조정 가능. em으로 스케일 가능하게 */
   }
   - 추가 100 바이트
   h1,h2,h3,h4,h5,h6 {
   ㅤmargin: 3em 0 1em;
   }
   p,ul,ol {
   ㅤmargin-bottom: 2em;
   ㅤcolor: #1d1d1d;
   ㅤfont-family: sans-serif;
   }

   자주 보는 웹페이지의 경우
   font-family: Lato,나눔바른고딕;
   font-size: 17px;
   line-height: 200%;
   word-break: keep-all;
   넣어서 보고 있는데
   이것도 한번 넣어봐야겠네요. 감사합니다

   브라우저 확장 Stylebot https://github.com/ankit/stylebot
   북마클릿으로 비슷한 걸 하는
   - Water.css https://watercss.kognise.dev/
   - Sakura Bookmarklet https://oxal.org/projects/sakura/bookmark/
"
"https://news.hada.io/topic?id=5239","구글 플레이, 2022/1/1 부터 구독 수수료를 30%에서 15%로 인하","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               구글 플레이, 2022/1/1 부터 구독 수수료를 30%에서 15%로 인하

   - 매해 첫 11억에 대한 앱 수수료를 15%로 인하하여 99%의 개발자가 대상자
   - 현재 구독서비스는 1년 구독후에만 30%에서 15%로 수수료를 인하
   - 2022/1/1부터 첫 구독부터 모든 수수료를 15%로 인하하여 모든 개발자가 첫해부터 15% 이득을 보게 됨
   - Play Media Experience 프로그램은 15%에서 10%까지 인하 (전자책 및 음악 스트리밍)

   - 구글 플레이, 매해 첫 11억 매출에 대한 수수료를 15%로 인하 https://news.hada.io/topic?id=3902
   - 애플, 중소개발사 앱스토어 수수료 15%로 인하 https://news.hada.io/topic?id=3224
   - 아마존 앱스토어, 수수료 20%로 인하 및 10%는 AWS크레딧으로 제공 https://news.hada.io/topic?id=4464
"
"https://news.hada.io/topic?id=5321","위임 101: 무엇을 위임할지 파악하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         위임 101: 무엇을 위임할지 파악하기

   왜 할일 목록은 끝없이 늘어나기만 할까? 다음 연습을 10분간만 해보고 무엇을 위임할지 골라내보자.
   ## 1단계: 할일 목록 만들기 (a few minutes)
   - 당신이 이제 그만했으면 하는 반복 업무가 무엇인가?
   - 누군가가 팀에 새로 합류하거나 떠날 때마다 매번 수동으로 하는 일이 무엇인가?
   - 다음주에 긴 휴가를 간다면, 돌아왔을 때 해결되어있는 걸 보면 행복해할만한 문제 딱 한가지가 무엇인가?

   ## 2단계: 할일 목록을 '당신만 할 수 있는 일'과 '위임 후보'로 쪼개기 (a couple of minutes)
   ""당신만 할 수 있는"" 일을 구분하는 방법
   - 매니저로서의 일: 비용 승인, 휴가 승인, 성과 리뷰, 오퍼레터 쓰기, 그 외 컨피덴셜한 정보를 다룰 수 있는 사람이 당신뿐일 때. (→ 당신의 매니저나 동료에게 부탁해볼 수도 있음)
   - 권한과 관련된 일: 권한 부여 요청을 리뷰하고, 승인하고, 실제 부여할 수 있는 사람이 당신뿐일 때. (→ 승인자를 더 늘려 당신이 유일하지 않게 할 수도 있음)
   - 컨텍스트와 관련된 일: 어떤 미팅에 혼자만 참여했는데 팀에게 공유할 정보가 있거나, 팀원의 성과에 아주 중요한 피드백을 혼자만 들었을 때. (→ 이 정보나 맥락을 문서화해둘 수도 있음)
   - 데드라인과 관련된 일: 시급하게 처리해야 하는데 위임할 시간이 없을 때. (→ 데드라인은 대개 당신 생각보다 더 유연함. 일정을 늦출 수 있는지 한번 물어본다고 다치지 않는다)
   당신만 할 수 있는 것처럼 보이지만 사실은 위임 가능한 일들
   - 여러 사람이 참여한 미팅에서 나온 액션 아이템: 당신이 하겠다고 했던 일일지라도, 제시간에 못 끝낼 것 같으면 당신의 가용성을 재산정해보고 위임하라.
   - 피드백: 누군가가 당신에게 피드백을 요청했다고 해서, 당신만이 피드백할 수 있는 건 아니다. 피드백해줄 새로운 사람을 피드백 요청자에게 적절하게 소개만 해준다면, 위임해도 괜찮다.
   - 공지: 건강한 팀에서는 중요한 뉴스가 여러 사람으로부터 나올 수 있다. 의식적으로 노력해봐라.
   - 당신이 직접 부탁받은 일: 직접 부탁받은 일이라도 위임은 가능하다. 다른 좋은 사람들도 그 일을 할 수 있다는 걸 알릴 기회가 될 수 있다.

   ## 3단계: 더 많은 아이템을 위임 후보 칼럼으로 옮기기
   - 당신만 할 수 있는 일들을 우선순위대로 정렬해보고 5개만 남겨라.
   - 그 5개만 당장 당신이 할 일이다. 나머지는 다 위임 후보로 옮겨버려라.

   ## 4단계: 위임 후보를 '노력'과 '효과'로 순위 매기기 (a couple of minutes 이하)
   - (당신이 안 하더라도) 적은 노력을 들여서 할 수 있는 일인지, 그리고 수행했을 때 효과가 큰 일인지 구분해볼 것. 정답이 있는 문제가 아니니 정확하게 나누려고 하지 말고 첫번째 본능을 따라라.
   - More impact, More effort: 위임함으로써 시간을 가장 많이 아낄 수 있는 일이다. 이것들 먼저 위임하라.
   - More impact, Less effort: 당신도 쉽게 할 수 있겠지만, 팀원이 챌린지를 원한다면 위임할 수 있다.
   - Less impact, More effort: 자동화를 고려하라.
   - Less impact, Less effort: 목록에서 빼는 걸 고려하라.

   ## 5단계: 위임할 아이템 5개 고르기
   - 위임 후보들을 우선순위로 정렬해서 5개만 골라서 위임하라.
   - '큰 임팩트가 있는데 적당히 노력해야 하는 일'과, '적당한 임팩트가 있는데 적게 노력해도 되는 일' 중에서는 후자를 더 우선시하라.

   ## 다음 단계
   - 이 연습이 힘들었다면, 당신만 힘든게 아님. 저자도 힘들고 다들 힘들었음.
   - 개발자가 리더가 되면서 가장 어려운 일 중 하나가 위임이다. 대개 내가 스스로 하겠다고 한 일을 위임할 때 생기는 죄책감과 실망감 때문.
   - 그러나 이 감정을 이겨낸다면 당신은 리더로서 더 중요한 일에 집중할 수 있음. 팀을 더 성공시키는 것.
   - 이 연습을 한 달에 한번씩 해보고 패턴을 찾아보길 바란다. 처음에는 작게 시작하고, 편해질수록 더 많이 위임할 수 있음.
   - 다음 글은 누구에게, 어떻게 성공적으로 위임하느냐이다. ← 아직 안 나옴

   이것과 직접적인 연관까지는 아니지만 최근 고민하는것이
   - 연차가 쌓일 수록 도메인 지식과 여러 프로젝트들에 대한 지식, 히스토리가 쌓인다
   - 관련된 일들에 대한 인터럽트가 쌓인다
   이네요. 이를 어떻게 극복해야할 지 고민입니다

   (뻔한 얘기일 수도 있지만) 저는 인터럽트가 들어오면 그걸 처리해주는 것을 넘어서 가이드라인 문서 같은 산출물을 만들어 다음 유사한 인터럽트가 적어지게 노력하니까 조금 나아지더군요. 반복업무를 자동화하는 등의 일로 인터럽트의 원인을 제거하는 것도 가능한 것 같고요.

   좋은 말씀입니다.
"
"https://news.hada.io/topic?id=5227","데이터 리터러시를 높이는 최고 데이터 책임자(CDO)의 역할","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   데이터 리터러시를 높이는 최고 데이터 책임자(CDO)의 역할

   - 모든 업무의 조합 ""데이터 리터러시""
   ㅤ→ 해당 조직의 구성원이 데이터를 이해하고 적절한 수준으로 작업할 수 있는 능력
   - 최고 데이터 책임자(CDO)의 역할 8가지
   ㅤ1. 전략적 접근
   ㅤ2. CIO와 파트너십 구축
   ㅤ3. 데이터 기반 부서가 아닌 전체 기업을 구축
   ㅤ4. 데이터 기반으로의 변화 및 우선순위 지정
   ㅤ5. 정보를 비즈니스 자산으로 취급하는 데 역량 집중
   ㅤ6. 멀티 소스 데이터 활용을 위해 클라우드 기술을 활용
   ㅤ7. 정보 수익화 옵션 준비
   ㅤ8. 정보 가치 측정

   스타트업에서 데이터 팀 만들기
   https://news.hada.io/topic?id=4597
   이 글과 비슷하게 느껴져서 댓글 달아봅니다

   비슷이 아니라 맥락을 같이하는 글이라고 하는게 맞겠네요
"
"https://news.hada.io/topic?id=5210","Valve, Steam내에서 모든 블록체인 게임과 NFT를 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Valve, Steam내에서 모든 블록체인 게임과 NFT를 차단

   - 퍼블리시 규칙에 명시적으로 금지항목을 추가
   ㅤ→ '블록체인 기술 기반으로 만들어져서, 암호화폐 또는 NFT를 교환하는 어플리케이션 금지""
   - 아마도 밸브는 스팀 플랫폼내에서 ""현실 가치를 가지는 게임 아이템""이 거래되는 것을 허용치 않고자 하기 때문이라는 분석이 있음

   이에 에픽은 NFT게임도 환영한다고
   https://rockpapershotgun.com/epic-games-store-will-welcome-games-that-…
"
"https://news.hada.io/topic?id=5207","Ubuntu 21.10 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Ubuntu 21.10 릴리즈

   - Kernel 5.1.3
   - PHP 8과 GCC 11
   - GNOME 40 + Firefox Snap
   - WSL에서 그래픽 어플들 지원
   - Docker Hub 및 Amazon ECR에 OCI 이미지 제공
   ㅤ→ Grafana, Prometheus, NGIN, Cassandra v4, Squid, Bind9 등 포함
   - MicroK8s
   - LTS 버전은 2022/4 릴리즈 예정
"
"https://news.hada.io/topic?id=5225","DeepMind, 로봇 공학용 물리 시뮬레이터 MuJoCo 무료로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                DeepMind, 로봇 공학용 물리 시뮬레이터 MuJoCo 무료로 공개

   ""MUlti-JOint dynamics with COntact""
   - DeepMind가 다용도 물리 엔진인 MuJoCo를 인수하고, 모든 연구자들에게 무료로 공개
   ㅤ→ C/C++ 라이브러리
   - 현재는 API 바이너리만 배포하고, 내년에는 오픈소스로 공개할 예정
   - 많은 시뮬레이터들이 게임/영화의 목적을 위해 만들어져서 정확성 보다 안정성을 우선시하지만, MuJoCo는 더 현실적
   ㅤ→ 전체 동작 방정식(Equations of Motion)을 구현하는 2차(Second-Order) 연속 시간 시뮬레이터

   MuJoCo가 정말 좋지만 가격대가 년 $2000 수준으로 싸지 않았는데요. DeepMind가 이건 정말 잘한 결정인 듯
"
"https://news.hada.io/topic?id=5214","Command Interface - C++ 프로그램에 REPL 추가하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Command Interface - C++ 프로그램에 REPL 추가하기

   - 헤더만 있는 라이브러리
   - 함수를 코맨드로 등록해서 간단한 REPL 구현 가능
   register_command(add, ""add"", ""Add two numbers"");
   register_command(&Arithmetic::inc, ""inc"", ""Increment a number"");
   ㅤ→ add,inc 함수를 코맨드로 추가
   [동작 화면]
   >>> help
   add Add two numbers
   inc Increment a number
   help Show this help
   >>> add 3 4
   7
   >>> inc 21
   22
   >>> add 3 4 5
   Error: expected 2 arguments; got 3
"
"https://news.hada.io/topic?id=5327","기업 보안이 플랫폼으로 진화한다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           기업 보안이 플랫폼으로 진화한다

   - SOAR의 대두 : Security Orchestration, Automation and Response
   ㅤ→ 다양한 소스에서 데이터를 검색하고 수집하는 보안 소프트웨어 솔루션 도구의 모음
   ㅤ→ 사고 대응 조치를 이해하고 우선 순위를 정하기 위해 인간과 기계 학습의 조합을 사용하여 다양한 데이터를 분석
   - SIRP, SOA, TIP 플랫폼을 통합하고 그 기능을 일련화 한 개념
   ㅤ→ SIRP : 보안 사고 대응 플랫폼
   ㅤ→ SOA : 보안 오케스트레이션 및 자동화
   ㅤ→ TIP : 위협 인텔리전스 플랫폼
   - SOAR 시스템의 장점
   ㅤ→ 프로세스 관리, 기술 및 전문 지식 통합
   ㅤ→ 자산 모니터링의 중앙 집중화
   ㅤ→ 상황별 인텔리전스를 통해 경고 알림 강화
   ㅤ→ 응답 자동화
   - 시장 흐름
   ㅤ→ 다른 보안 기술 및 서비스와 통합 연계
   ㅤ→ 보안 서비스 제공업체가 자체 서비스 품질, 대응 능력을 개선하기 위해 SOAR를 사용
   - SOAR 플랫폼/솔루션 서비스 제공자
   ㅤ→ Splunk의 Phantom
   ㅤ→ ServiceNow의 Security Operations
   ㅤ→ RespondX
   ㅤ→ InsightConnect
   ㅤ→ IBM의 Resilient
   - SOAR 솔루션 선택 기준
"
"https://news.hada.io/topic?id=5306","데드라인을 효율적으로 써서 행복하고 생산적인 팀 구축하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    데드라인을 효율적으로 써서 행복하고 생산적인 팀 구축하기

   사업부에서 설정한 데드라인은 요즘은 거의 의미가 없음. 소프트웨어를 릴리즈하는 게 너무 쉽고, 그래서 릴리즈 한번 한번의 비용이 너무 작아졌기 때문.
   도메인별로 중요한 이벤트(교육이면 입학 시즌, 스포츠면 리그 시즌, 이커머스면 블랙프라이데이 등)를 제외하면 거의 모든 데드라인은 환상이다. 두려움과 불안에서 비롯된, 가짜 긴급함(false urgency)에서 비롯된 것.
   거꾸로 말하면, 팀에게 실제로 긴급한 무언가가 있다면, 그리고 데드라인을 지킴으로서 얻는 이득이 크다면 설정하면 된다. 근데 설정한다고 끝이 아니다. 팀원들이 모두 같은 모드로 일하려면 이 데드라인을 지키는 것이 왜 중요한지 잘 싱크되어야 함. 예를 들어 펀딩받은 돈이 떨어져간다는 식의 불편한 대화이더라도 해야 함.
   그래서 데드라인을 동기부여하는 채찍으로 쓰는 건 안 좋음. 데드라인을 잘 사용하는 방법이 크게 두 가지가 있음.
   1. 창의성을 발휘하는 데 도움을 주는 제약으로 사용
   - 제약을 가할 때 그 상황에 맞는, 또는 그를 극복하기 위한 창의성이 잘 발휘되기도 함. 특히 프로덕-마켓 핏을 찾아가는 초기 단계에서 데드라인은 과한 계획과 설계를 방지하는 데 큰 도움이 됨.
   - 다른 예시로, 인프라 개발팀을 리딩했던 경험에서도 데드라인이 유용했음.
   - 인프라 개발 업무는 일반적인 프로덕 개발 업무보다 훨씬 걸리는 시간도 길고, 가치를 증명하기 위해 보여줘야 하는 것도 많으며, 처음 의도했던 것 이상의 가능성을 열어주는 것도 많음. 그래서 인프라 업무는 가성비 분석이 어려움.
   - 그러다보니 많은 인프라 팀이 본인들의 리드에게 전체 플랫폼을 2년간 재작성하는 따위의 작업의 당위성을 설득하는 데 어려움을 느낌. 당연히 이런 작업은 거의 항상 실용적이지 않음.
   - 그래서 나는, 6주에 한번씩 팀이 데모를 보여주도록 데드라인을 설정했음. 완전히 동작하는 무언가를 보여줄 필요는 없지만, 우리가 옳은 길로 가고 있다는 신뢰를 받을 수 있을 수준으로는 만들도록 함.
   2. ""giving""을 관리하는 도구로 사용
   - 세상에 3종류의 사람이 있음.
   - giver는 이득을 고려하지 않고 남을 도움
   - taker는 남을 생각하지 않고 이득을 취하고자 함
   - matcher는 그 중간. take하고 나면 give하고, give하면 take하고자 하고.
   - 회사에서 퍼포먼스 기준으로 줄을 세워보면, 고성과자 giver도 많은데 저성과자 giver도 많음.
   - 무엇이 이 차이를 만드는지 살펴보니, 탑 giver는 언제 give할지, 언제 내 일을 할지 giving을 관리하는 법을 안다. 이 때 데드라인이 유용한 툴이 됨.
   - 우리는 대부분 giver와 일하고 싶어하며, giver가 많은 조직은 이직도 적음. 이런 조직에서는 giver들이 저성과자가 되지 않게 관리해주는 게 중요하고 데드라인을 그 도구로 사용하면 됨

   1번에 대해서는 저는 좀 부정적인 생각이긴 합니다. 데드라인을 설정했기 때문에 창의성이 발휘되는 것이 아니라 Lean하게 개발할 수 있는 역량이 있기 때문에 데드라인이 있을 때 창의성이 발휘되는 것이라고 생각합니다. 어떤 조직이 자..우리 창의성을 발휘하기 위해 데드라인을 잡아볼까 한다고 창의성의 발휘될까요? 다만 이터레이션이나 스프린트의 개념으로 생각한다면 비슷할 수는 있겠네요. 근데 이것조차도 제대로 활용하는 조직을 제대로 못봐서...

   giver /taker / matcher 에 대해서는 이해가 되었는데, 이걸 데드라인과 엮어서 보았을 때, 왜 데드라인 사용에 도움이된다는 것인지는 명확하게 잘 이해가 되지 않네요ㅠ
   저성과자 giver 들의 퍼포먼스 증진 및 번아웃을 겪지 않도록 하기위해서, 데드라인을 도구 사용하면 좋다라는 뜻일까요?? 다른 분들은 어떻게 이해하셨는지 궁금합니다.

   좀 더 자세히 읽어보니 내용이 좀 이해는 되네요. 데드라인을 방법으로 사용하는 구체적 사례까지 있었으면 이해가 더 좋았을 것 같다는 아쉬움이 있네요
   요약 + 의견
   1. giver는 2가지 타입이 존재함
   - 저 성과자
   - 고 성과자
   2. 고 성과자 giver들을 보면, 언제, 어떻게 giving(타인을 도와주는 것)을 할지 관리하는 법을 알고 있음
   3. 반면에, 저성과자 giver들은 고성과자 giver보다 giving(타인을 도와주는 것)을 관리하는 측면이 떨어짐(예를 들면, 남을 도와주다가 본인 일은 잘 못챙긴다던지..)
   4. 우리는 대부분 giver와 일하고 싶어하며, giver가 많은 조직은 이직도 적음
   - 좋은 조직엔 giver들이 많고, 조직에서는 giver들이 많도록 유지해야한다
   5. 그렇기 때문에 관리자들은 더 많은 giver 수를 유지하면서, 저성과자 giver들이 고성과자 giver가 될 수 있도록 해야한다
   - 이왕 giver 들이 많다면, 고 성과자 giver들이 많은게 좋으니까..
   6. 그 방법으로 써, 데드라인을 도구로 이용하면 됨
   7. 위 글에선 구체적으로 어떻게 활용하면 되는지는 나와있지 않은데, 글의 내용으로 추측해보았을 때
   - 데드라인 없이, 일을 맡겼을 때 저 성과자 giver들은 본인의 giving을 관리하는 능력이 상대적 고 성과자 보다 떨어지기 때문에(전제) giving 자체에 집중하면서, 본인의 일을 잘 못할 가능성이 높음
   - 이를 방지하기 위해서, 매니저 차원에서 데드라인을 명확하게 지정해주고 가이드를 주면 저 성과자 giver 입장에서는 giving 도 하면서, 데드라인에 맞춰서 본인의 일도 끝내야 하기 때문에 스스로 우선순위를 두거나, 체크리스트를 만들거나 등등으로 일정을 관리해야만 함
   - 이런 과정이 반복되었을 때, 저 성과자 giver가 고 성과자 giver 처럼 본인의 giving을 잘 관리하게 만들 수 있다
   로 생각해볼 수 있을 것 같습니다
   7번에 대해서 다른 분들은 어떻게 생각하고 계신지도 궁금하네요ㅎ :)

   아무래도 저는 제가 경험한 사례에 비춰보게 되는군요. 제가 속한 팀에 굉장히 열정적인 한 팀원이 있었습니다. 이 사람은 타인을 돕는 것을 매우 좋아하고 에너지가 넘쳐서 여러가지 일을 벌리는 경우가 많았습니다. 문제는 그러다보니 혼자 앞서 나가게 되거나 지나치게 일이 커지거나 하는 경우가 생기더군요. 결국 마무리가 잘 안되거나 만든 것이 무용지물이 되는 경우가 많아 개인이 들인 에너지와 시간에 비해서 성과가 잘 안나오는 상황이 반복되었습니다. 데드라인만으로 해결되는 문제는 아니라고는 생각하지만 개인적으로는 이런 에너지를 어떻게 하면 올바른 방향으로 이끌 수 있을까 하는 고민이 있었는데 하나의 참고할만한 내용이었던 것 같습니다.

   저도 7번에 대해서 비슷하게 생각했습니다. 꼭 데드라인이 핵심이라기보다는, 기버들이 제시간에 본인 업무에 성과낼 수 있게 업무 관리를 해준다에 가까운 것 같아요.
   아직은 못 봤는데 기버/테이커/매처 관련해서 더 긴 영상이 있길래 여기에 더 힌트가 있을지 보려고 합니다. (책을 보는 게 더 빠를지도 모르겠습니다만) https://www.youtube.com/watch?v=-egUK2zaZlo

   1번은 전형적인 애자일 방법론과 어떤 차이가 있는지 잘 와닿지 않네요. 요약만 읽어서 그런가..? 누군가가 조금만 더 부연설명을 해주시면 감사하겠습니다 ㅎㅎ
   저는 2번이 조금 더 마음을 울리는 부분 같습니다. giving을 점수화하는 좋은 출발점이 되는 것 같아요. 2번에서 언급하는 giver, taker, matcher의 얘기는 https://www.youtube.com/watch?v=YyXRYgjQXX0 여기에서 조금 더 자세하게 보실 수 있습니다. 조직 내에서 가장 낮은 성과를 내는 사람도 giver, 가장 높은 성과를 내는 사람도 giver라는 굉장히 재미있는 연구결과를 풀어낸 ted 영상입니다.

   덕분에 좋은 영상 잘 봤습니다. 소개 감사합니다. 실제 영상을 보시는 게 좋겠지만 다른 분들을 위해 요약해봤습니다. https://www.youtube.com/watch?v=YyXRYgjQXX0
   ===
   3만 명 조사했다. 엔지니어, 간호사, 영업사원 등
   - 분포가 기버 25, 테이커 19, 매처 56 정도 됨
   테이커는 빨리 올라가고 빨리 망함
   - 매처가 많기 때문에 눈에는 눈 전략으로 테이커를 망하게 함
   기버는 고성과자와 저성과자 양쪽에 분포되어 있음. 저성과 기버는 남 도와주느라 자기 일 못해서 그러는 것
   기버가 있는 조직은 여러모로 생산성과 만족도가 높음. 기버가 고성과를 내고 인정받는 조직이 되려면 어떻게 해야 할까?
   1. 기버가 번아웃되지 않게 해라
   - 기버는 남 도와주느라 쉽게 지침. 이들을 지켜줘야 함
   - 남을 과하게 도와주려 하는 사람이 있다면 그들에게 원칙을 제시해줄 수 있음. ""테레사 수녀가 되는 게 아니라 5분만 선의를 베풀어본다"" 같은 식.
   2. 도움 요청을 장려하라. 기버에게 도움 받는 게 가치있게 되는 문화.
   - 요청받은 걸 처리해주면 기버는 성과를 낼 수 있고, 감사받고, 행복해짐
   - 그리고 75~90%의 기버는 도와주고자 할 때 ""질문""부터 시작함. 즉 많은 도움이 묻는 것에서 시작하기 때문에, 물어보는 거 장려하면 다른 사람들도 기버가 되기 쉬워짐
   - 근데 보통 물어보질 않음. 무능해보일까봐, 좋은 질문 못할까봐, 바빠보여서 부담주기 싫으니까 등
   3. 테이커를 팀에 들여오지 말고 솎아내라. 테이커 한명 들어오면 기버 여러명 떠나거나 도움을 중지함.
   - 매처는 분위기를 따르기 때문에 테이커만 솎아내면 기버 문화로 만들 수 있음
   - 문제는 테이커 솎아내기가 쉽지 않다는 것. ""우호적이다agreeableness"" 라는 게 기버의 좋은 신호이긴 하지만, 테이커도 우호적일 수도 있고 기버도 무뚝뚝할 수 있음
   - 무뚝뚝한 기버를 성급하게 테이커라고 판단하지는 마라. 이들은 누구도 듣고 싶어하지 않지만 모두가 들어야 하는 중요한 피드백을 하는 사람들임
   - 우호적인 테이커를 거르기 위해 면접 때 내가 자주 써먹는 질문은 ""당신의 경력을 근본적으로 향상시킨 사람 네 명을 말해보세요""다.
   - 대개 테이커는 아첨받는 것에 익숙하기 때문에 영향력과 권위가 높은 사람의 이름을 댐
   - 대개 기버는 권력 구조의 아랫단에 있는 사람 이름을 많이 댐

   요약감사드립니다.
   테이커가 아첨받는 것에 익숙하기보단 아첨 하는것에 능숙하다(takers are great at kissing up)는게 좀 더 적확한 표현 아닐까요?

   아 그렇네요. kissing up / kicking down 이었으니.. 감사합니다

   좋은 정리 감사합니다.

   사실 저도 2번이 더 와닿긴 했습니다. ㅎㅎ;
   저는 1번은, 매니저로서 데드라인을 설정할 때 어떤 관점으로 바라봐야 하는가, 하는 멘탈모델로 받아들였습니다. ""일정 맞추라고 채찍질하는 용도보다는 한정된 자원 안에서 더 나은 선택을 할 수 있게 돕는 도구로서 데드라인을 바라보면 좋다"" 정도?
   원문도 그렇게 길지 않아서... 더 깊은 함의가 있는지는 잘 모르겠네요. 어찌보면 ""잘게 끊어서 배포하기""의 장점을 다르게 표현한 것 같기도 하고요.

   간만에 생각이 나서 해당 영상을 다시 봤는데, 8:20 부터 하는 말이 진국이네요. ""giver를 뽑을 생각을 하지 말고, taker를 내버릴 생각을 하라"". 정말 좋은 말인 것 같습니다.

   와 좋은 글이네요. 데드라인 활용법 부분 설명이 맘에 듭니다. 요약 고맙습니다!
"
"https://news.hada.io/topic?id=5224","State of AI 2021 보고서 [구글 Slide, 188P]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 State of AI 2021 보고서 [구글 Slide, 188P]

   4년째 매년 발표되는 인공지능의 현재와 미래를 폭넓게 조망한 보고서
   - Research : 현재까지의 기술혁신과 능력
   - Talent : AI 인력의 공급,수요 및 집중 분야
   - Industry : AI를 위한 상업적 응용 분야 및 비즈니스 임팩트
   - Politics : AI관련 규제, 경제적 의미 및 AI의 지정학(Geopolitics)
   - Predictions : 앞으로 일어날 일과 이전 보고서의 퍼포먼스 검토
   2021년 주요 테마
   - AI가 보다 구체적으로 발전중 : 국가 전력망 같은 미션 크리티컬 인프라부터, 자동화된 슈퍼마켓 창고 최적화에 적용되는 것 까지
   - AI-first 접근 방식이 Biology를 휩쓸다 : 인간의 세포 체계(단백질 및 RNA)에 대한 빠른 시뮬레이션. 새 의약품 발견 및 헬스케어를 변화시킬 잠재력을 가지고 있음
   - Transformer가 NLP, 컴퓨터 비전, 심지어 단백질 구조 예측을 포함한 많은 영역에서 최신 기술을 능가하는 ""머신러닝을 위한 범용 아키텍처""가 됨
   - AI스타트업에 대한 투자가 기록적이었음. 2개의 AI-first 신약 개발 회사 IPO를 비롯, 기업들을 AI-first 시대에 대비하게 하는 데이터 인프라 및 사이버 보안 회사들의 IPO도 관심
   - AI가 실제로 군대에 적용되고 군비 경쟁에 포함되기 시작
   - 미-중 경쟁에서 중국의 연구품질이나 인재 교육의 상승은 주목할 필요있음. 중국 기관들이 서양의 기관들을 제치고 있음. AI칩을 만드는 대만에 대한 의존도는 지정학적(Geopolitical) 긴장의 핵심

   State of AI 2020 보고서 [구글 Slide, 183P] https://news.hada.io/topic?id=2978
"
"https://news.hada.io/topic?id=5308","FerretDB- MongoDB의 오픈소스 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      FerretDB- MongoDB의 오픈소스 대체제

   - SSPL 라이센스로 변해버린 몽고DB를 대체하기 위한 프로젝트
   - 프록시로 동작해서 MongoDB Wire Protocol 쿼리를 SQL로 변환하고 PostgreSQL을 DB엔진으로 사용
   ㅤ→ 드라이버 수준에서 호환성을 제공해서, MongoDB를 바로 교체 가능토록 하는 것을 목표로 함
   - 현재는 PoC 데모 수준
   - Go로 된 오픈소스

   이제는 ferretdb로 이름이 바뀌었네요 ㅎ

   엇 글쿤요. 이름과 URL 변경해두었습니다. ㅎㅎ

   아직 데모 수준이지만.. 시도는 이해가 가네요.
   10년쯤 전에 MongoDB 유머로 나왔던 https://github.com/dcramer/mangodb 이거랑은 다른겁니다.
   오픈소스 라이선스 변화의 흐름 https://news.hada.io/topic?id=4991
   → 2. MongoDB 라이선스 변경(AGPL -> SSPL)
   ElasticSearch를 둘러싼 AWS와 Elastic의 대립 https://news.hada.io/topic?id=3628
   → 댓글에 SSPL 관련 얘기들을 참고 하세요
   어쨋거나 PostgreSQL은 팔방미인 이네요. 아래 프로젝트들 모두 Postgres를 확장하거나 또는 내부에서 사용합니다.
   - Babelfish for PostgreSQL 공개 (MSSQL) https://news.hada.io/topic?id=5298
   - TimescaleDB 2.0 공개 (시계열 데이터) https://news.hada.io/topic?id=3112
   - Postgres 를 Pub/Sub Server 로 이용하기 https://news.hada.io/topic?id=877
   - Message-DB, PostgreSQL기반의 Pub/Sub 메시지&이벤트 스토어 https://news.hada.io/topic?id=1096
   - Apache Age, Postgres에 Graph DB 기능을 추가하는 확장 https://news.hada.io/topic?id=3844
   - PolarDB for PostgreSQL https://news.hada.io/topic?id=4362
   - Supabase 공개 베타 시작 - 오픈소스 Firebase 대체제 https://news.hada.io/topic?id=3347
   - EdgeDB - 개발자를 위한 차세대 오픈소스 ORDB https://news.hada.io/topic?id=4602
   - Baserow - 오픈소스 Airtable 대체제 https://news.hada.io/topic?id=3889
   - RudderStack - Segment의 오픈소스 대체제 https://news.hada.io/topic?id=1759
"
"https://news.hada.io/topic?id=5268","The General Index - 백만개 저널의 n-gram 인덱스를 무료로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             The General Index - 백만개 저널의 n-gram 인덱스를 무료로 공개

   - 연구자 Carl Malamud가 유료 논문을 포함한 107,233,728개의 저널에서 SpaCy로 추출한 n-gram 인덱스를 공개
   - 전체 텍스트가 아닌 1단어부터 최대 5단어 길이의 문장 스니펫만 포함한 인덱스라서 저작권 제한을 회피
   - 다양한 연구 분야에 사용할 수 있게 웹 아카이브에 무료로 공개
   ㅤ→ 예) 특정 화학 물질이 논문에 몇 번이나 사용되었는가
   - 3개의 테이블로 구성
   ㅤ→ 3500억 개의 n-gram 과 저널 id
   ㅤ→ 197억 개의 키워드 와 저널 id
   ㅤ→ 저널 id 와 메타 데이터 : 논문제목, 저자, DOI(논문 고유 식별 번호)
   - 카탈로그는 5TB의 압축파일로 해제시 38TB

   네이처의 소개 기사
   - Giant, free index to world’s research papers released online https://www.nature.com/articles/d41586-021-02895-8
   실제 전문이 아닌 인덱스만 공개함으로써 저작권 문제를 독특하게 회피한거네요
   네이처 기사에도 있지만, 인덱스 생성한 Carl이 어떻게 원래 유료 페이퍼를 입수했는지만 문제가 되고 이 인덱스 자체를 연구에 활용하는 것은 문제가 안될 듯 합니다.
   이거 보고 Aaron Swartz가 생각났는데.. 자료 하단에 명시도 되어있네요
   실제로 Carl Malamud가 Aaron Swartz Memorial 에서 연설한 영상도 같이 보세요
   - https://www.youtube.com/watch?v=VllJDnMcTzM
"
"https://news.hada.io/topic?id=5263","Build The Earth - 마인크래프트로 지구전체를 1:1로 재현하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Build The Earth - 마인크래프트로 지구전체를 1:1로 재현하기

   - 마인크래프트의 한 블록은 현실에서의 1m에 해당
   - 지구 전체를 실제 크기로 완전히 재현하는 것을 목표
   - 누구나 참여해서 개인/팀 단위로 만들고 기여 가능
   - 현재 4393개의 프로젝트가 진행중이고, 총 프로젝트 면적은 6452 제곱 킬로미터
   - 한국도 몇개 프로젝트 진행중 (BTE Korea 팀)
   ㅤ→ 국회의사당, 63빌딩, 홍대, 인천공항..

   뭔가 우리동네 건물 하나씩 만들면 재밌겠네요.
"
"https://news.hada.io/topic?id=5289","Raspberry Pi Zero 2 W 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Raspberry Pi Zero 2 W 공개

   - $15
   - Broadcom BCM2710A1 (Arm Cortex-A53 1GHz)
   ㅤ→ Pi 3와 같은 프로세서
   - 512MB LPDDR2 SDRAM
   - 2.4Ghz 802.11b/g/n, 블루투스 4.2, BLE
   - 1x USB 2.0 OTG
   - HAT-compatible 40pin I/O
   - MicroSD, Mini HDMI
   - CSI-2 카메라 커넥터
   - H.264, MPEG-4 decode (1080p30); H.264 encode (1080p30)
   - OpenGL ES 1.1, 2.0 graphics
   * 기존 $5 짜리 Zero, $10 짜리 Zero W 도 계속 판매 유지

   첫 사용 리뷰
   - https://blog.alexellis.io/raspberry-pi-zero-2/
"
"https://news.hada.io/topic?id=5272","Adobe, 포토샵에 NFT 만드는 기능 내장할 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Adobe, 포토샵에 NFT 만드는 기능 내장할 것

   - 포토샵 내에 ""prepare as NFT"" 옵션을 곧 프리뷰로 공개 예정
   - MAX 2021에서 공개했던 Contents Credentials 기능의 일부
   ㅤ→ Adobe ID, 암호화 지갑, 호환 NFT 장터들을 링크 가능
   - 작성된 데이터는 분산파일시스템인 IPFS(InterPlanetary File System)에 저장
   - OpenSea, Rarible, KnownOrigin, SuperRare 등의 NFT 장터등과 연동 예정
"
"https://news.hada.io/topic?id=5198","APT가 터미널에서 멋진 프로그레스바를 표시한 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      APT가 터미널에서 멋진 프로그레스바를 표시한 방법

   - apt가 설치 진행할 때, 스크롤되는 터미널 화면에서도 최하단에 멋진 프로그레스 바를 표시
   ㅤ→ 커서 위치를 저장했다가 최하단으로 가서 출력하고 커서 포지션을 복원
   - 사용한 Escape 코드 (ESC = ""\033"" ):
   print(f""\0337\033[0;{lines}r\033[{lines};0f\033[0K\0338"")
   ESC 7 is DECSC (Save Cursor)
   ESC 8 is DECRC (Restore Cursor)
   ESC [ Pn ; Pn r is DECSTBM (Set Top and Bottom Margins)
   ESC [ Pn A is CUU (Cursor Up)
   ESC [ Pn ; Pn f is HVP (Horizontal and Vertical Position)
   ESC [ Ps K is EL (Erase In Line)
"
"https://news.hada.io/topic?id=5298","Babelfish for PostgreSQL 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Babelfish for PostgreSQL 공개

   - PostgreSQL에서 MS SQL Server용으로 작성된 어플리케이션을 실행 가능하게 만드는 오픈소스 확장
   ㅤ→ T-SQL 및 Tabular Data Stream 리스너를 포함
   ㅤ→ MSSQL용 SQL/DDL을 분석처리(표준 SQL에 MS가 확장한 것들)
   ㅤ→ Savepoint, Stored Procedure, Nested Transaction등을 지원
   - TDS 프로토콜 직접 지원으로 드라이버 변경도 필요 없고, 코드/SQL의 많은 수정 없이 서비스 이관 가능
"
"https://news.hada.io/topic?id=5261","Facebook Marketing Summit Korea 2021 다시 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Facebook Marketing Summit Korea 2021 다시 보기

   - 약 10~20분 내외의 비디오로 구성된 세션들
   Data Driven Marketing
   - 데이터 드리븐 마케팅에 날개를 달아주는 머신러닝
   - 데이터와 함께하는 크리에이티브 여정
   - Facebook 픽셀과 전환 API : 데이터 드리븐 마케팅의 시작
   - 퍼포먼스 마케팅에서 가장 중요한 시그널, 그 미래를 밝혀줄 전환 API에 대한 소개와 도입 방법을 공유합니다.
   - DR 캠페인 성과를 높이는 새로운 방법: BranDR
   House of Instagram Korea 2021
   - FIRESIDE CHAT: INSTAGRAM, 우리의 삶과 비즈니스가 존재하는 플랫폼
   - 브랜드에 성장이 필요해? INSTAGRAM과 함께해그램!
   - INSTAGRAM 스토리 퍼스트 콘텐츠를 통한 새로운 스토리텔링
   - INSTAGRAM 릴스 마케팅을 위해 브랜드가 알아야 할 5가지 팁
   - 디스커버리 커머스와 함께 모든 순간을 기회로
   Product & Insights
   - 대한민국 Z세대 소비자의 쇼핑 행동
   - 새로운 습관이 사람들의 구매행동에 가져오는 변화
   - 크로스보더 비즈니스: 해외 시장 공략은 현지 밀착 전략으로
   Leadership Roundtable
   - 역설적 가속의 시대: 데이터 기반 의사결정 활용 가능성
   - 영감을 주는 만남 : 아모레퍼시픽의 디지털 트랜스포메이션 여정과 리더십의 역할
   - 브랜드의 새로운 존재감, 메타버스를 여행하는 비즈니스를 위한 안내서
   - 비즈니스에게 '의미있는 성장'이란 무엇인가

   * 스페셜 리포트 : 위드(With) 코로나 시대, 현지 소비자로부터 답을 찾다
   - 아시아 11개국 소비자 조사 리포트 2020
"
"https://news.hada.io/topic?id=5212","Forbes 선정 차세대 1조 가치 스타트업들 2021","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Forbes 선정 차세대 1조 가치 스타트업들 2021

   - Abra : 크립토 뱅크
   - Alchemy : 정보를 블록체인에 저장(이더리움 & Flow)
   - Array : 핀테크 회사들을 위한 고객 신용 정보 및 결제 이력 제공
   - Embark Veterinary : 반려견 DNA 테스트를 통해서 유전 및 잠재적인 건강 문제 예측
   - Forethought : Zendesk/ServiceNow 같은 고객 서비스용 AI
   - Headway : 멘탈 헬스케어. 나에게 맞는 Therapist 찾기
   - Hyperscience : 기업용 데이터 자동화 플랫폼
   - Incredible Health : 병원들을 위한 간호사 고용 전문 플랫폼. 간호사들 등록은 무료. 병원은 유료 연간 구독하고 간호사에게 Apply 하는 형태
   - Legion Technologies : 시간제 근로자 인력 관리 소프트웨어 (커피숍, 헬스장, 상점등)
   - Mati : 온라인 신분 확인 서비스(여권 및 각 국가별 증명/서류 사용)
   - Netlify : 정적 웹 사이트 호스팅
   - Notarize : 모바일 앱으로 화상 통화를 이용한 원격 온라인 공증 서비스
   - Postscript : Shopify 를 위한 SMS 마케팅 소프트웨어
   - Productboard : 고객 중심의 프로덕트 매니지먼트 플랫폼. 고객이 진짜로 원하는 제품을 만들 수 있게 피드백수집-인사이트-우선순위결정-로드맵-딜리버리 를 관리
   - Route : 실시간 배송 트래킹 서비스
   - Salt Security : 빅데이터와 자동화를 이용하여 API의 취약점을 분석해주는 보안 서비스 플랫폼
   - Shef : 홈쉐프들이 집에서 요리한 것을 온라인으로 팔 수 있게 주문과 배송을 처리해주는 서비스. 법률문제로 현재 8개도시에서만 운영중이지만, 계속 로비중
   - Squire Technologies : 이발소들을 위한 올인원 플랫폼. 예약 관리/금융 서비스(이발사 팁 & 급여 관리,Pos,매출분석 포함)/커스텀 브랜드 앱 과 웹 제공/소모품
   - Sundae : 부동산 직거래 플랫폼. 로컬 투자자들이 집을 사서 되파는 형태로, 집 상태가 좋지 않아도 청소나 수리 없이 제 값을 받고 빠르게 현금을 받고 팔 수 있게 도와줌.
   - Titan : ""Fidelity for millennials and Gen Z."" 젊은 세대를 위한 금융 투자 플랫폼
   - Vanta : 클라우드 기반의 컴플라이언스 관리 솔루션. SOC2, HIPAA, ISO 27001 등의 규정을 준수할 수 있게 단순화하고 자동화
   - Vendr : 기업을 위한 SaaS 구매 및 관리 솔루션. 어떤 SaaS가 필요한지 회사에 맞게 추천하고 가격 협상 및 구매를 관리
   - Very Good Security : 데이터 보안 및 컴플라이언스. 회사의 민감한 데이터를 수집해서 안전한 방식으로 저장해서 개인정보 보호 규정 및 신용카드사의 보안 준수 요건등을 자체 처리(PCI/SOC 2)
   - Viz.ai : AI를 이용해서 환자 뇌의 CT이미지와 스캔 DB를 비교, 뇌혈관 폐색(뇌졸중)에 대한 초기 징후를 찾음. ER에 도착하자 마자 60초안에 스캔을 읽고 처리해서 보여줌. 900개의 병원이 사용중이고, Medicare(미국의 국가건강보험)가 승인한 AI기술. 폐색전증 및 대동맥 박리로 확장중.
   - Wheel : 원격 헬스케어(Telehealth) 서비스. 자체 의료진을 가진 Teladoc과 달리, 특정 병원/회사의 의사/간호사가 자체 브랜드의 원격 케어 서비스를 제공할 수 있도록 가상 의료 도구등을 지원하는 플랫폼
"
"https://news.hada.io/topic?id=5200","비디오 마케팅 가이드 2021","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            비디오 마케팅 가이드 2021

   1. 왜 중요한가
   2. 콘텐츠 템플릿
   ㅤ→ How-To : 소개 3분/단계 6분/결론 3분 구성
   ㅤ→ Demo : 문제 3/티징 3/제품 보이기 3/기능과 이점 3/사례와 평가 3/CTA 3
   ㅤ→ Explainer : 큰 소개 3/질문 3/설명 3/제품 Tie-In 3
   ㅤ→ Case Study : 배경 3/Before 3/After 3/추천 3
   3. 장비 체크 리스트
   ㅤ→ 장소/카메라/삼각대/마이크/조명
   4. 훌륭한 비디오를 만드는 법
   ㅤ→ 스크립트/아웃라인 작성 필수
   ㅤ→ 3점 조명 사용 : Fill/Key/Hair
   ㅤ→ 사운드 에코 방지 하기
   5. 프로처럼 비디오 편집하기
   ㅤ→ 색상 보정
   ㅤ→ 많은 컷 사용하기
   ㅤ→ 편집을 염두에 두고 찍기
   6. 고급 전략과 테크닉
   ㅤ→ 처음 5~10초가 정말 중요. 애니메이션 로고/장황한 배경 설명 다 걷어내고, 이 비디오에서 보게될 것을 강조
   ㅤ→ 유튜브는 검색엔진. 속편을 잘 활용할 것
   ㅤ→ 20초 단위로 뭔가 변화를 줄 것 : 카메라 앵글, B-Roll, 애니메이션 등
   ㅤ→ 5분 이상의 긴 비디오들을 테스트 해 볼 것
   ㅤ→ 일관적인 룩 & 필 유지
   ㅤ→ 유머스럽게
   7. 케이스 스터디
"
