"https://news.hada.io/topic?id=13124","WhisperFusion - AI 챗봇과 짧은 대기시간으로 대화하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 WhisperFusion - AI 챗봇과 짧은 대기시간으로 대화하기

     * WhisperLive 및 WhisperSpeech의 기능을 기반으로 Mistral LLM과 연동하여 AI와의 원활한 대화를 제공
          + WhisperLive : OpenAI의 Whisper를 거의 실시간으로 동작하도록 구현하여 음성을 텍스트로 변환
          + WhisperSpeech : Whisper를 반전시켜서 구축한 TTS 시스템
     * LLM과 Whisper는 모두 TensorRT 엔진으로 효율적으로 실행되도록 최적화되어 성능과 실시간 처리 기능을 극대화하고, WhiperSpeech는 torch.compile로 최적화

   실시간 번역이 되면 빠르고 좋겠네요.

   WhisperSpeech – Whisper를 역으로 구축한 오픈 소스 음성합성 시스템

    Hacker News 의견

     * 대화형 시나리오가 잘 작동하기 위해 필요한 두 가지 기능:
          + 중단 기능: 사용자가 ""잠깐만""이라고 말할 때 LLM이 일시 중지할 수 있어야 함.
          + 특정 신호에 반응: 사용자가 ""너는 어떻게 생각해?""와 같은 특정 신호를 기다렸다가 반응해야 함.
          + 이 두 가지 기능에 더해 낮은 지연 시간이 중요하며, 마치 다른 사람과 대화하는 것처럼 느껴져야 함.
     * WhisperFusion, WhisperLive, WhisperSpeech와 같은 프로젝트에 대해 관심을 표현하며, 각 시스템의 지연 시간과 WhisperLive의 WER(Word Error Rate) 수치에 대해 궁금해함. 이러한 모델에 대한 중요한 정보가 부족한 것 같다고 언급함.
     * 프로젝트가 훌륭하지만 주로 패키징 문제라고 지적:
          + 많은 Python 애플리케이션들이 setuptools의 절반을 느리고 버그가 많은 방식으로 구현하고 있음을 비판함.
          + TensorRT가 핵심 기능을 ""예제"" 디렉토리에 배포하는 것에 대해 의문을 제기함.
          + huggingface_cli에 대해, 이미 이름으로 무언가를 다운로드할 수 있는 방법이 있으며(PyPi 인덱스 등), 이를 모델에 적용하는 것이 더 나을 수 있음을 언급함.
     * Vocode 프로젝트에 대한 논의를 회상하며, 10개월 전에 이에 대한 토론이 있었고, 데모를 사용해보고 인상 깊었다고 언급함. 현재 개발이나 생산 환경에서 사용하는 사람이 있는지 궁금해함.
     * 한 사용자는 전용 앱으로 이 기술을 이식하여 화면에 있는 내용과 텍스트를 인식하고 거의 실시간으로 도움을 줄 수 있는 어시스턴트를 상상함.
     * Whisper를 스트리밍 전사(transcription)에 잘 사용하는 방법에 대해 궁금해하며, 비슷한 목표를 가진 프로젝트를 소개함.
     * LLM 부분이 TGWUI+llama.cpp 설정과 어떻게 다른지, 또는 유사한지에 대한 요약을 요청함. 특히, 사용자의 하드웨어에서 ""초저지연""이 실현되지 않는 것에 대해 의문을 제기함.
     * 사용자는 프로젝트가 완전히 로컬에서 실행되는지, 아니면 OpenAI의 원격 시스템에 API 액세스가 필요한지 물음. 사용자는 OpenAI를 사용하여 TTS와 STT를 구축 중이지만, 단일 명령을 기다리기 위해 끊임없이 오디오 스트림을 OpenAI에 보내고 싶지 않음을 표현함.
     * Siri와 Alexa가 되어야 했던 것이라고 생각하며, 향후 몇 년 동안 이러한 기술이 더 많이 나타날 것으로 예상함. 로컬에서 실행되고 영구적인 기록을 남기지 않는다면, 배경에서의 청취 문제도 해결될 것이라고 언급함.
     * TensorRT를 사용한다고 언급하며, 어떤 GPU가 지원되는지, Jetson에서 실행할 수 있는지에 대해 궁금해함.
"
"https://news.hada.io/topic?id=13072","휴대폰을 위한 리눅스 타일링 윈도우 관리자 Sxmo","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      휴대폰을 위한 리눅스 타일링 윈도우 관리자 Sxmo

Sxmo: 단순한 리눅스 모바일 환경

     * Sxmo는 리눅스 모바일 기기를 위한 최소주의 환경임.
     * 간단한 메뉴 기반 인터페이스를 제공하며, suckless 도구(dwm, dmenu, st 등) 또는 Wayland 도구(sway, bemenu, foot 등)를 사용함.
     * 터치와 제스처 지원이 강화되어 있으며, 하드웨어 버튼으로도 제어 가능한 메뉴 기반 인터페이스를 가짐.

SSH를 통한 텍스트 전송 및 알림 읽기

     * SSH를 통해 좋아하는 텍스트 편집기(vis, emacs, vim 등)를 사용하여 문자를 보낼 수 있음.
     * 알림, 문자 등을 읽을 수 있으며, 블루투스, 와이파이 메뉴에 접근 가능함.

모든 것이 스크립트로 작동

     * 전화, 문자 등에 사용자 정의 스크립트를 실행할 수 있음.
     * 제스처를 사용하여 특정 스크립트에 바인딩하고, 기기의 물리적 버튼을 스크립트 트리거로 설정할 수 있음.
     * 모뎀 로그, 연락처 목록, 문자 메시지가 모두 일반 텍스트로 기록됨.

데스크톱에서 사용하는 FOSS 앱 사용

     * 폐쇄된 앱 생태계가 아닌, 전통적인 리눅스 배포판(Alpine Linux, postmarketOS 등)에서 실행되며 모바일 기기에 최적화됨.
     * 스마트폰에서 터미널 기반 애플리케이션을 사용할 수 있음.

GN⁺의 의견

     * Sxmo는 사용자가 리눅스 기반의 모바일 환경을 최소주의적이고 효율적인 방식으로 경험할 수 있게 해주는 혁신적인 프로젝트임.
     * SSH를 통한 텍스트 전송과 같은 기능은 모바일 기기를 더욱 유연하고 통합된 컴퓨팅 환경의 일부로 만들어줌.
     * 사용자 정의 스크립트와 FOSS 애플리케이션의 사용은 개발자와 고급 사용자에게 매력적인 선택지를 제공하며, 모바일 리눅스 생태계의 발전에 기여할 수 있는 잠재력을 가짐.

        Hacker News 의견

     * Pinephone에서 사용해본 여러 인터페이스 중 sxmo가 가장 좋았음. 보통 suckless 소프트웨어를 많이 사용하지 않지만 존중함. emacs와 KDE 같은 복잡한 소프트웨어를 선호하지만, sxmo는 KDE나 Phosh보다 훨씬 빠르며, 사용법을 익히고 나면 매우 기능적이고 직관적임(주관적으로).
          + Pinephone 인터페이스 중 sxmo가 가장 우수함
          + suckless 소프트웨어에 대한 존중과 함께 emacs, KDE 선호
          + sxmo의 빠른 반응성과 직관적인 사용성 강조
     * 홈페이지에 45분짜리 프레젠테이션 대신 1-2분짜리 비디오 데모가 있으면 아이디어를 더 명확하게 전달하는 데 도움이 될 것 같음.
          + 홈페이지에 짧은 비디오 데모 제안
     * ""리눅스를 폰에서 사용하기""에 관심 있는 사람들은 FOSDEM에 참석하여 관련 개발자 방 일정과 부스를 확인하라고 권장함.
          + FOSDEM에서 리눅스 폰 관련 일정과 부스 확인 권장
     * 모든 것이 쉘 스크립트로 연결되어 있어 모두에게 맞는 것은 아니지만, 전화 UI를 위해 빠르게 해킹할 수 있는 것을 좋아함. 통근 중에 pine phone 자체에서 알람 시계 스크립트를 작성했고, 이를 곧 공개할 예정임(알람이 울리기 직전에 깊은 수면에서 깨어나 알람 소리를 낼 수 있음). 몇 가지 기능이 빠져 있지만 전반적으로 멋진 시스템이며, 가까운 미래에 다시 사용하고 해킹할 계획임.
          + 쉘 스크립트로 연결된 시스템에 대한 긍정적인 평가
          + pine phone에서 직접 작성한 알람 시계 스크립트 언급
          + 시스템의 잠재력과 향후 계획 공유
     * 이것이 일반 인텔/AMD 서버에서 실행되어 xrdp/nx 세션에서 사용될 수 있는지 궁금함. 사회적 호환성과 좋은 카메라가 필요함. 이미 i3를 시도했지만 물리적 키보드 없이는 사용하기 어려움.
          + 서버에서의 실행 가능성과 사용성에 대한 질문
     * 구글 앱을 실행할 필요는 없지만, 몇몇 중요한 은행 앱이나 홈 오토메이션 앱에 접근할 수 있다면 매우 도움이 될 것임.
          + 특정 구글 앱 사용에 대한 관심 표현
     * SXMO를 Sway에서 스타일링하고 싶다면(예: 손가락으로 누르기 쉽게 메뉴 항목을 크게 만들기, 더 많은 텍스트를 한 줄에 넣기 위해 글꼴을 좁게 변경하기, 미학 등), 이 가이드가 유용함.
          + Sway에서 SXMO 스타일링에 대한 유용한 가이드 링크 제공
     * PmOS에서 SXMO가 두 가지 맛으로 제공됨: sxmo-de-dwm과 sxmo-de-sway.
          + PmOS에서 제공되는 SXMO의 두 가지 버전 소개
     * SXMO에 대한 최신 정보가 궁금함. 2021년 이후로 따라가지 못했음. 이제 이것을 실행할 수 있는 안정적인 폰이 있음?
          + SXMO의 최신 업데이트와 안정적인 폰 실행 가능성에 대한 질문
     * 이름이 재치 있음: suckless -> suckless mobile -> sxmo -> sucksmore.
          + SXMO 이름의 창의성에 대한 언급
"
"https://news.hada.io/topic?id=13027","Ax Visio - 자연 관찰을 위한 스마트 쌍안경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Ax Visio - 자연 관찰을 위한 스마트 쌍안경

     * 내장된 NPU로 AI를 이용하여 약 9천종의 새와 동물들을 인식하여 알려줌
          + SWAROVISION 기술: Merlin Bird ID , Mammal ID 로 동물 인식
     * Share Discovery 기능으로 쌍안경으로 찍은 사진과 영상을 공유 가능
     * Live View 기능으로 남들에게 실시간 공유
     * 아이폰 6과 애플 워치를 만든 마크 뉴슨이 디자인함
     * 10x 줌. 32mm 렌즈. 13MP(4208x3120px) 카메라. 배터리로 일반 사용시 15시간, 최대 기능 사용시 2시간
     * $4799
     * Swarovski Optik 사의 제품(크리스털 제조사인 스와로브스키의 광학기기 전문 자회사)

   이런 사업모델,.. 정말 신기하네요

   오 너무 흥미로운데.... 너무너무 비싸네요......
   비전 Pro보다 비싸다니 ㅠ
"
"https://news.hada.io/topic?id=13087","Anki - 강력하고 지능적인 플래시 카드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Anki - 강력하고 지능적인 플래시 카드

     * Anki는 이미지부터 과학적 마크업까지, 다양한 형식의 자료를 기억하는 데 도움을 줌.
     * Windows, Mac, Linux, iOS, Android 및 웹 브라우저가 있는 모든 기기에서 복습 가능.
     * 잊어버릴 위험이 있는 자료만을 효율적으로 연습함으로써 기억력 향상.

Anki 소개

     * Anki는 기억하기 쉽게 만드는 프로그램으로, 전통적인 학습 방법보다 훨씬 효율적임.
     * 일상 생활에서 기억이 필요한 모든 사람에게 유용하며, 이미지, 오디오, 비디오, 과학적 마크업(LaTeX을 통해) 등 다양한 콘텐츠 지원.
     * 언어 학습, 의학 및 법률 시험 공부, 사람 이름과 얼굴 기억, 지리 공부, 긴 시 외우기, 기타 코드 연습 등 다양한 활용 가능.

기능

     * AnkiWeb 동기화 서비스를 사용하여 여러 기기에서 카드를 동기화.
     * 카드 레이아웃부터 복습 타이밍까지, Anki는 사용자 맞춤화를 위한 다양한 옵션 제공.
     * 카드에 오디오 클립, 이미지, 비디오, 과학적 마크업 삽입 가능하며, 표시 방법에 대한 정밀한 제어 가능.
     * 100,000장 이상의 카드 덱도 문제 없이 처리.
     * 다양한 추가 기능(add-ons)이 제공됨.
     * 코드와 저장 형식이 오픈 소스이기 때문에 중요한 데이터가 안전함.

사용자 리뷰

     * Anki는 기억을 우연에 맡기지 않고, 최소한의 노력으로 기억을 보장하는 변화를 가져옴.
     * 다른 어떤 애플리케이션도 Anki만큼 기능의 수와 강력함, 학습의 유연성, 간격 반복의 구현에 가까이 오지 못함.
     * Anki 사용으로 지적으로 더 많은 기회가 열렸으며, 오픈 소스이자 무료로 제공되는 소프트웨어에 감사함.

다운로드

     * Windows, Mac, Linux, iPhone/Android용 Anki 다운로드 가능.
     * Qt5와 Qt6의 두 가지 버전이 제공됨.
     * 설치 및 문제 해결 가이드, 변경 사항 및 이전 릴리스, 대체 다운로드 사이트 제공.

   GN⁺의 의견:
     * Anki는 전통적인 학습 방법보다 효율적인 기억력 향상 도구로, 다양한 콘텐츠 형식을 지원하여 학습자의 필요에 맞춰 사용할 수 있는 강점이 있음.
     * 사용자 맞춤화와 다양한 기기 간 동기화 기능은 학습의 유연성을 높여주며, 오픈 소스로 제공되어 사용자 커뮤니티에 의한 확장성이 높음.
     * 언어 학습, 전문 시험 준비, 기타 다양한 지식의 습득과 기억에 있어서 Anki는 사용자들에게 실질적인 도움을 주는 도구로 평가받고 있으며, 이는 사용자 리뷰를 통해 확인할 수 있음.

        Hacker News 의견

     * 아이와 함께 Anki 사용 경험 공유
          + 5살 때부터 매일 아들과 Anki를 사용하여 다양한 지식을 즐겁게 학습함.
          + 지도에서 나라 인식, 철자, 신체 부위와 기관, 화학 원소 기호, 유닉스 파일 시스템 명령어 등을 기억함.
          + 아들이 새로운 지식을 YouTube에서 배우고 Anki에 추가하고 싶어함을 표현함.
     * Anki 사용에 대한 팁
          + 스스로 카드를 만들어 학습하는 것이 더 효과적임.
          + 강의나 교재에서 중요 개념을 노트하고 Anki 플래시카드로 만들어 매일 복습하는 방법이 매우 효과적임.
          + 특정 질문 풀이를 위한 기존 덱 사용도 가능하지만, 일반적인 학습 방식과는 다름.
     * Anki를 통한 언어 학습 경험
          + 몇 년에 한 번씩 언어 학습을 위해 Anki를 집중적으로 사용하지만, 학습량 조절이나 습관 변화로 인해 지속하기 어려움.
          + 학습한 내용이 장기적으로 도움이 되며, 개인화된 시스템을 구축하는 것이 즐거움.
          + 온라인에 공유된 덱이 많지만, 다운로드가 적은 덱은 삭제되어 아쉬움.
     * 언어 학습 앱 개발 경험
          + 독일에서 Erasmus 프로그램 중 여러 언어 학습 앱을 시도했지만 만족스럽지 않음.
          + 맥락 학습, 오디오 포함, 집중적인 학습, 레벨에 맞는 학습, 개인 콘텐츠에서 단어 추가 등을 원함.
          + Anki가 가장 효과적이었지만 카드 생성이 번거로움.
          + GPT4를 이용해 문장 예시와 오디오를 생성하는 언어 학습 앱을 개발 중임.
     * Anki 이름 도용 경고
          + Anki 이름이 도용되어 진짜 Anki 프로젝트와 이름이 같은 SaaS 서비스가 존재함을 주의해야 함.
     * 플래시카드 학습에 대한 비판적 의견
          + 플래시카드는 단기간에 많은 정보를 기억하는 데 유용하지만 지루함.
          + 언어, STEM, 역사 등을 학습할 때 더 재미있고 효과적인 방법이 존재함.
     * 피아노 연습에 Anki 활용 경험
          + 피아노 연습 시 어려운 부분을 기억하고 연습하는 데 Anki를 유용하게 사용함.
          + 5년 이상 사용하며 Anki의 기본 알고리즘이 연습 세션을 효과적으로 정렬하는 데 인상적임.
     * 의대에서의 Anki 사용 경험
          + 의대에서 Anki가 인기가 많으며, 처음에는 회의적이었지만 나중에는 빠른 회상이 심층 이해를 향상시키는 것으로 느낌.
     * 간격 반복 학습에 대한 관심과 커뮤니티
          + 해커뉴스에서 간격 반복 학습에 대한 관심을 좋아함.
          + 연구자나 엔지니어가 간격 반복 학습과 관련 문제를 논의할 수 있는 커뮤니티를 찾고 있음.
"
"https://news.hada.io/topic?id=13084","Starship - 크로스-쉘 프롬프트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Starship - 크로스-쉘 프롬프트

     * 모든 쉘을 위한 작고, 빠르며, 무한대의 커스터마이징이 가능한 프롬프트
     * 대부분의 OS와 주요 쉘에서도 동작 : Bash, Fish, Zsh, Powershell, Ion, Elvish, Tcsh, Nushell, Xonsh, Cmd
     * Rust를 이용하여 빠르고 안전함
     * 다양한 모듈을 제공
          + AWS: AWS 리젼/프로필 표시. 임시 자격 증명 사용시 만료 타이머 표시
          + Azure: 현재 Azure Subscription 표시
          + Battery: 기기의 배터리 상태 및 충전 현황
          + Bun: 현재 설치된 Bun 자바스크립트 런타임 표시
          + C: C 컴파일러 관련 정보들 표시
          + Character: 에러시 특정 캐릭터 표시
          + Command Druation: 마지막 명령이 얼마나 오래 수행되었는지 표시
          + Container: 현재 컨테이너 환경 안이라면 심볼과 컨테이너명 표시
          + Deno/Node.js: 설치된 Deno/Node.js 버전 표시
          + Docker Context: 현재 활성화된 Docker Context 표시
          + Environment Variable: 특정 환경변수 표시
          + Google Cloud: gcloud 관련 설정 표시
          + Git Branch/Commit/State/Metrics/Statis
          + Kubernetes: 현재 K8s 컨텍스트 및 네임스페이스/유저/클러스터등
          + Line Break: 프롬프트를 두줄로
          + Memory Usage: 현재 시스템 메모리와 스왑 사용량
          + OS : 현재 OS 표시. OS를 표시하기 위한 다양한 기본 심볼 제공
          + Package : 현재 디렉토리가 패키지 Repo 일경우 버전 표시
               o 지원하는 패키지 : npm, nimble, cargo, poetry, python, composer, gradle, julia, mix, helm, shards, daml, dart
          + Perl/PHP/Python/R/Ruby/Scala/V/Zig 등 언어 버전 표시
          + Shell : 현재 사용중인 Shell 정보
          + Terraform : 현재 선택된 Terraform 워크스페이스와 버전
          + Time: 로컬 시간
          + Username : 활성 사용자 명
          + Custom : 커스텀 명령어 가능. 특정 파일/특정 폴더/특정 확장자 인식시에 수행
          + 그외 : Buf, Conda, Crystal, Dotnet, Fossil, Go, Gradle, Hostname, Java, Julia, Kotlin, Local IP, Lua, Solidity, Vagrant 등 매우 다양

   뭔가 했는데 이 녀석은 프롬프트 표시만 담당하는 녀석이었군요. 어마어마하네요...

   한국어 번역이 더디네요.

   4년 전에 한번 올라왔었는데, 그때에 비해서 엄청나게 많은 모듈이 추가되었네요.
   https://news.hada.io/topic?id=557
"
"https://news.hada.io/topic?id=13067","디즈니, 'HoloTile Floor' 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        디즈니, 'HoloTile Floor' 공개

     * 디즈니가 Lanny Smoot를 국립 발명가 명예의 전당에 헌액하는 첫 번째 디즈니 직원으로 발표함과 동시에 그의 최신 프로젝트인 '홀로타일 바닥(HoloTile Floor)'을 공개함.
     * 홀로타일 바닥은 ""세계 최초의 다인용, 전방향, 모듈식, 확장 가능한 트레드밀 바닥""으로, 사람들이 중앙에 머물도록 돕는 타일들로 구성됨.
     * 이 바닥은 사람들이 공유 가상 현실(VR) 경험을 하고, 어떤 방향으로든 무한히 걸을 수 있으며, 서로 충돌하거나 바닥에서 벗어나지 않도록 함.

홀로덱의 약속

     * VR 경험은 멋지지만, 가상 현실의 몰입감에는 항상 제한이 있음. 예를 들어, '스타워즈: 갤럭시즈 엣지' VR에서는 가구에 부딪히거나 몇 발자국만 이동할 수 있는 제약이 있음.
     * 홀로타일 바닥은 이러한 제한을 없애고, 넓은 환경을 탐험하며 실제로 걷거나 달리는 듯한 느낌을 제공하는 미래를 그리고 있음.
     * 스타트렉 팬들에게는 홀로덱의 약속과 유사하게 들릴 수 있으며, 이는 가상으로 어디든지 갈 수 있는 작은 방과 같은 기술임.
          + Holodeck 은 스타트렉에서 우주선 승무원들에게 제공하는 가상현실 체험 공간

홀로타일 바닥의 활용 가능성

     * 홀로타일 바닥은 사람들이 걷게 할 뿐만 아니라 물체를 움직일 수도 있음. 비디오에서는 물체가 바닥을 따라 움직이는 모습과 마치 포스를 사용하는 것처럼 화면 구석에서 팔이 뻗어나오는 모습을 볼 수 있음.
     * 홀로타일 바닥의 응용 범위는 가상 현실을 넘어서 연극 무대의 일부로 사용되어, 배우들이 새로운 방식으로 움직이고 춤추거나 무대 소품과 구조물이 움직이거나 스스로 설치되는 것처럼 보이게 할 수 있음.
     * 아직 홀로타일 바닥이 어디에 사용될지는 확실하지 않지만, 이 기술이 디즈니 파크, 우리의 집, 그 이상에서 우리가 좋아하는 우주를 경험하는 방식을 어떻게 바꿀 수 있을지에 대한 흥미로운 전망을 제공함.

GN⁺의 의견

     * 홀로타일 바닥은 가상 현실 기술의 한계를 극복하고, 사용자들에게 더욱 실감나는 몰입 경험을 제공할 잠재력을 가지고 있음.
     * 이 기술은 엔터테인먼트뿐만 아니라 교육, 훈련, 연극 등 다양한 분야에서 혁신적인 변화를 가져올 수 있음.
     * 디즈니가 이러한 혁신적인 기술을 개발하고 있다는 사실은, 기술과 창의성이 결합하여 우리의 일상과 상호작용하는 방식을 변화시킬 수 있는 무한한 가능성을 보여줌.

   무한히 걷는 건 종종 봐왔지만, 무한히 걷고 물체를 움직이고...
   여러 사람이 같이 사용할 수 있는 건 너무 신기하네요.

   저 패널 밑에 어느정도의 공간이 필요한지는 잘 모르겠지만,
   비교적 얇다는 가정 하에 가정용으로도 나올 가능성이 있을 것 같습니다. +_+

        Hacker News 의견

     * 초음파 변환기 배열을 갖춘 타일은 접촉하는 물체에 대해 즉각적인 마찰 제어를 제공함.
          + 이 작은 타일들은 초음파를 이용한 것으로, 작은 바퀴가 아님을 설명.
          + 초음파 진동으로 물체가 미끄러워지게 하고, X-Y 피스톤이 밑에 있어 위치를 재설정할 때 미끄러워지게 하고, 다시 움직일 때는 끈적하게 만듦. 이 과정을 매우 빠르게 반복함.
     * 존 카맥의 의견:
          + 소비자 VR에 큰 영향을 미칠 것으로 보기에 회의적이지만, OpenXR 수준에서 센서 입력을 통합하는 것이 가능함.
          + 이 기술이 멀미를 완전히 해결하지는 못할 것이며, 걷는 동작의 튕기는 움직임이 어느 정도 도움이 될 수 있음.
     * 새로운 간접 수준을 활용한 아이디어:
          + ""HoloTile meets Segway""라고 할 수 있는데, 한 사람이 어떤 방향으로든 ""걸을"" 수 있는 1제곱미터 크기의 플랫폼을 제안.
          + HoloTile로 덮여 있으며, 사람이 걷는 방향으로 플랫폼이 빠르게 움직임. 자기 균형을 유지하기 위한 기술이 필요할 수 있음.
     * 플로리다에 새로운 스타트업 스타일의 VR 프로젝트가 있는지 궁금해함:
          + 디즈니의 두 연구소는 로스앤젤레스와 취리히에 위치해 있음.
     * 제품에 대한 직접 링크 제공.
     * 비디오를 보고 나서의 의견:
          + 바퀴들이 원하는 방향으로 약간의 운동량을 주기 위해 각도를 조절할 수 있으며, 다른 바퀴가 인계받을 때까지 바깥쪽으로 기울어짐.
          + 전체 접촉 면적이 아닌 신발의 일부분이 끌려가는 것이 이상하게 느껴질 수 있음. 예상치 못한 관성도 이상한 느낌을 줄 수 있음.
     * 이 기술의 대형 버전에서는 안전 문제가 발생할 수 있음:
          + 중앙에 갇혀 나올 수 없는 상황을 상상해봄.
     * 이 기술은 택배 분류 장치의 인간 규모 버전임.
     * VR에 대한 전망 변화:
          + 완전한 VR을 향해 나아가고 있다고 생각했지만, 이제는 그렇지 않다고 느낌.
          + 시각적 요소와 오디오는 해결됐지만, 공간에서의 움직임은 해결하기 어려움.
          + AR이 큰 성공을 거둘 것이며, Apple Vision Pro가 세대가 거듭됨에 따라 큰 인기를 끌 것으로 예상.
          + VR은 ""인간-뇌 인터페이스""가 완전해야 할 것으로 보임.
          + 인간-뇌 인터페이스의 성공이 AGI(인공 일반 지능)에 도달한 시점 또는 그 이후에 이루어질 것으로 예상되며, 이에 대한 전망은 불확실함.
     * 기술에 대한 감상:
          + 매우 멋진 기술이지만, 발표자의 말투가 너무 기업적으로 들림.
          + 특허, 독점 플랫폼, 제한된 사용 사례에 대한 언급이 있으며, 많은 수익을 창출하고 경쟁자를 고소할 것으로 예상됨.
"
"https://news.hada.io/topic?id=13064","여섯 개의 차트로 본 배터리의 부상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          여섯 개의 차트로 본 배터리의 부상

배터리의 부상: 숫자가 너무 많지 않은 여섯 개의 차트로 보는

     * 배터리 수요의 급격한 증가는 국가와 산업 부문 간 도미노 효과를 일으키며, 전 세계 화석 연료 수요의 절반을 단계적으로 없애는 데 기여할 것으로 예상됨.
     * RMI의 최근 보고서 'X-Change: Batteries'에서는 이러한 배터리 도미노 효과가 교통 및 전력 배출량 감소에 중요한 역할을 할 것이라는 결론을 내림.

1. 배터리 판매는 지수함수적으로 S곡선을 따라 성장 중

     * 배터리 판매는 새로운 기술의 성장을 특징짓는 전형적인 S곡선을 따라 지수함수적으로 증가하고 있으며, 지난 30년간 33%의 평균 성장률을 보임.
     * 최근 10년간 전기차의 인기가 높아지면서 성장률은 40%에 가까워짐.

2. 배터리 비용은 지속적으로 감소하고 품질은 향상됨

     * 배터리의 생산량 증가에 따라 비용은 급격히 감소하고 에너지 밀도는 지속적으로 향상됨.
     * 지난 30년간 배터리 비용은 99% 감소했으며, 최고급 배터리 셀의 밀도는 5배 증가함.
     * 배터리는 배치가 늘어날수록 더 저렴해지는 모듈러 기술의 특성을 가지고 있으며, 배치가 두 배로 늘어날 때마다 비용은 19%, 에너지 밀도는 7%씩 감소함.

3. 배터리 도미노 효과 창출

     * 배터리 비용이 감소하고 에너지 밀도가 향상됨에 따라 새로운 응용 분야가 속속 등장함.
     * 배터리 도미노 효과는 한 시장이 배터리 전기화를 이루면 그 규모와 기술적 개선이 다음 시장을 전환시키는 현상을 의미함.
     * 배터리 기술은 처음에 소비자 전자제품에서 시작해 이륜차와 자동차로 확산되었으며, 이제는 트럭과 배터리 저장 장치가 뒤를 이을 것임.

4. 기존 모델러들은 여전히 예측에서 뒤처짐

     * 배터리의 성장과 개선 속도는 현재의 일반적인 견해보다 훨씬 빠를 것임.
     * 작고 모듈화된 기술의 성장에는 두 가지 경험 법칙이 있으며, 대부분의 분석가들은 이를 간과함.
     * 배터리는 이러한 규칙의 예외가 아니며, 모델러들에 의해 일관되게 과소평가되어 왔음.

5. 변화를 이끄는 요인들은 강화될 것임

     * 앞으로 7년을 전망해보면, 변화를 이끄는 요인들이 강화될 것으로 보임.
     * 비용 감소, 정책 지원 증가, 경제 블록 간 경쟁이 계속해서 성장을 촉진할 것임.
     * 배터리 채택에 장애물이 있을 수 있지만, 인류의 지혜, 의지, 자본이 그보다 빠르게 확장되고 있음.

6. 화석 연료 단계적 폐지 가능성

     * 화석 연료를 신속하게 단계적으로 폐지하는 가장 좋은 전략은 화석 연료 수요를 줄이는 기술의 배치를 가속화하는 것임.
     * 배터리는 도로 운송에서 86 엑사줄(EJ)의 화석 연료를 대체하고, 해운 및 항공에서 추가로 23 EJ를 위험에 빠뜨릴 경로에 있음.

GN⁺의 의견

     * 배터리 기술의 급속한 발전은 화석 연료 의존도를 줄이고 지속 가능한 에너지 전환을 가속화하는 데 중요한 역할을 하고 있음.
     * 이 기사는 배터리의 비용 감소와 에너지 밀도 향상이 다양한 산업 분야에서 혁신을 촉진하고 있다는 점을 강조하고 있음.
     * 배터리 기술의 성장이 지속되기 위해서는 기업, 정부, 연구자, 기후 옹호자들의 지속적인 노력이 필요하며, 이는 기술 발전뿐만 아니라 기후 변화 대응에도 중요한 기여를 하고 있음.

        Hacker News 의견

     * 태양광 에너지와 배터리의 역할에 대해 매우 긍정적인 의견이 있음. 특히, 캘리포니아의 ""오리 곡선""이 거의 중립적이 되었으며, 이는 수요와 태양광 발전 사이의 시간 불일치를 해결하는 가장 직관적인 해결책으로 배터리 활용을 의미함. 또한, 캘리포니아에서 태양광 에너지 보상 감소 이후 주택용 태양광 설치 신청이 크게 감소했는데, 이는 잠재적인 수요가 존재함을 보여주며, 재생 가능 에너지로의 전환을 위해 주 정부 정책이 중요한 역할을 함을 시사함.
     * 전기차 경제성에서 승리하는 것으로 알려진 가격 아래에서 선도적인 제조업체들이 이미 판매하고 있으며, 최근 중국에서의 가격 전쟁이 이를 증명함.
     * 에너지 밀도에 관한 차트와 분석이 흥미롭지만, 두 가지 문제가 있음. 첫째, 에너지 밀도 차트에서는 비교를 위해 휘발유의 에너지 밀도도 보고 싶음. 둘째, S-곡선 채택에 대해 언급되었지만, 이는 결국 수평 접근선에 도달하며 영원히 상승하지 않음. S-곡선의 현재 위치와 그 이유에 대한 더 많은 분석이 필요함. 화석 연료를 대체하고 오염을 줄이며 온실 효과를 늦추고 싶지만, 전환 과정에 투명성과 현실적인 기대가 필요함.
     * 전기 혁명이 다가오고 있으며 많은 사람들과 국가들이 이로 인해 충격을 받을 것임. 태양광 및 풍력 전기 비용도 비슷한 속도로 감소하고 있음.
     * 지역적인 일화적 증거로, 몇몇 고카트 장소가 모두 전기로 전환되었으며, 이는 훨씬 조용하고, 연기가 없으며, 실내에서도 잘 작동함.
     * 차트 #2는 최고급 에너지 배터리 밀도와 배터리 비용을 비교하는데, 이는 평균적인 다른 것과 최고급을 비교하는 것이 일반적인지 의문임.
     * 정지형 저장소의 엄청난 성장이 매우 흥미로움. 이는 가장 빠르게 성장하는 부문으로 믿어짐.
     * 전기차 배터리에 사용되는 돈의 25%를 대신 가정용 태양광 패널에 투자해야 함. 가정용 배터리와 태양광이 탄소 절감에 훨씬 더 효과적임.
     * 500 Wh/kg 배터리가 파워뱅크(500g 미만) 크기로 사용 가능한지 궁금함. 현재까지 찾은 최고는 약 250 Wh/kg임.
     * 로그 축이 없으면 모든 것이 매우 불투명함. 또한, 배터리로 구동되는 737 크기 이상의 여객기(기차와 화물선도 확실하지 않음)는 배터리 기술의 혁명이 필요함. 현재의 배터리는 에너지 출력에 비해 너무 무거움.
"
"https://news.hada.io/topic?id=13108","Helios: Oxide Rack을 구동하는 Illumos 배포판","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Helios: Oxide Rack을 구동하는 Illumos 배포판

Oxide Helios

     * Oxide Helios는 illumos를 기반으로 한 배포판으로 Oxide Rack을 구동함.
     * 전체 배포판은 여러 소프트웨어 통합으로 구성되며, 이 최상위 저장소의 도구와 문서를 통해 관리됨.
     * 일부 통합은 아직 공개되지 않았으며, 공개되지 않은 소프트웨어를 건너뛰려면 환경 변수 OXIDE_STAFF=no를 설정하면 됨.

시작하기

     * Helios를 사용하려면 물리적 또는 가상의 빌드 머신에서 최신 Helios 설치가 필요함.
     * 가상 머신 설치에 대한 자세한 내용은 helios-engvm 저장소에서 확인할 수 있음.
     * 필요한 패키지가 누락된 경우 pkg install을 통해 설치할 수 있음.
     * Rust와 Cargo는 Rustup을 사용하여 공식 Rust 프로젝트에서 제공하는 바이너리를 설치할 수 있음.

저장소 복제 및 도구 빌드

     * Helios 머신에서 저장소를 복제하고 설정 단계를 실행하여 helios-build 도구를 빌드하고 여러 저장소를 복제함.

illumos 빌드

     * Helios의 핵심 운영 체제 구성 요소는 illumos-gate의 stlouis 브랜치에서 옴.
     * illumos를 빌드하기 위해 helios-build는 빌드 구성을 관리하고 illumos 빌드 도구를 호출하는 여러 래퍼를 제공함.

개발 중 빌드

     * illumos에 변경 사항을 적용하려면 ""quick"" 빌드를 수행할 수 있으며, 이는 일부 검사를 비활성화하고 더 빠른 통합을 위한 것임.

로컬 머신에 설치

     * 빌드 머신에 새로 빌드한 패키지를 설치하려면 ./helios-build onu -t my-be-name을 사용하여 새로운 _Boot Environment_를 생성하고 설치할 수 있음.

다른 머신에 설치

     * 별도의 테스트 머신이 있는 경우, 빌드 머신의 패키지 저장소 서버(pkg.depotd)를 사용하여 네트워크를 통해 패키지를 설치할 수 있음.

패키지 생성

     * 빌드한 패키지의 내용을 검사하거나 다른 시스템으로 전송하기 위해 -P 플래그를 사용하여 패키지를 변환할 수 있음.

변경 사항 적용

     * 시스템에 변경 사항을 적용할 때는 일반적으로 bldenv를 사용하여 빌드 환경에 들어가서 특정 구성 요소를 빌드할 수 있음.

OS 이미지 아카이브

     * Gimlets용 OS 이미지를 빌드하는 과정에서 부트 ROM과 루트 파일 시스템 램디스크 이미지를 포함하는 이미지 아카이브가 생성됨.
     * 이 파일의 내용은 Helios와 Oxide 랙의 물리적 시스템에 OS 이미지를 다운로드하고 설치해야 하는 Omicron 부분 간의 약속된 인터페이스를 나타냄.

라이선스

     * 2024년 Oxide Computer Company 저작권.
     * 특별히 명시되지 않은 모든 구성 요소는 Mozilla Public License Version 2.0에 따라 라이선스됨.

  GN⁺의 의견

     * Oxide Helios는 illumos 기반의 혁신적인 운영 체제 배포판으로, 특히 Oxide Rack 하드웨어에 최적화되어 있음이 중요함.
     * 이 글은 소프트웨어 개발자들에게 Helios의 빌드 및 설치 과정에 대한 심층적인 이해를 제공함으로써, 운영 체제의 커스터마이징과 최적화에 대한 통찰력을 줄 수 있음.
     * 또한, 이 글은 오픈 소스 운영 체제의 개발 과정과 커뮤니티 기반의 협업 방식을 이해하는 데 도움이 될 수 있으며, 이는 기술적 지식의 공유와 혁신을 촉진하는 데 기여할 수 있음.

        Hacker News 의견

     * Oxide 회사에 대한 기술 스택과 팀에 대한 열정을 가진 한 사용자가 Oxide 팀에 감사를 표하며, 해당 기술을 로컬 환경에 배포하고 최대한 많이 배우고자 함.

     ""Oxide 팀에 감사함을 표현하며, 해당 기술을 로컬에서 배포하고 배우고자 하는 열정적인 사용자의 의견.""
     * Oxide가 제공하는 것에 대해 간단하게 설명해달라는 요청. Oxide의 웹사이트를 봤지만, 그들이 제공하는 것이 하드웨어와 소프트웨어인지, 아니면 PaaS/클라우드 제공업체인지에 대해 혼란스러워함.

     ""Oxide의 제품과 서비스에 대한 혼란을 표현하며, 간단한 설명을 요청하는 사용자의 의견.""
     * illumos가 실제 Unix 시스템인지, 아니면 Unix와 유사한 OS인지에 대한 질문.

     ""illumos가 진짜 Unix인지 아니면 Unix와 유사한 OS인지 궁금해하는 사용자의 질문.""
     * MPL 2.0 라이선스를 운영 체제에 사용하는 것이 흥미롭다는 의견과 다운보트에 대한 의문.

     ""운영 체제에 MPL 2.0 라이선스를 사용하는 것에 대한 관심과 다운보트에 대한 의문을 표하는 사용자의 의견.""
     * 소프트웨어가 오픈소스라는 점은 좋지만, 다른 하드웨어에 배포하는 것이 유용할지, Oxide 랙을 더 이상 구매할 수 없게 되면 인프라를 새로 시작해야 하는지에 대한 질문.

     ""소프트웨어의 오픈소스 여부와 다른 하드웨어에의 배포 가능성, Oxide 하드웨어에 대한 의존성 문제에 대한 사용자의 질문.""
     * Linux/Mac/BSD가 아닌 맞춤형 Unix에서 실행하고자 하는 워크로드의 종류와 이에 대한 시장의 필요성에 대한 궁금증.

     ""맞춤형 Unix에서 실행하고자 하는 워크로드의 종류와 시장의 필요성에 대해 궁금해하는 사용자의 의견.""
     * Oxide의 제품이 아직 초기 단계이고 틈새 시장을 겨냥하고 있어 실제 비즈니스에서 이를 구매할 것으로 기대하기 어렵다는 의견.

     ""Oxide의 제품이 초기 단계이고 틈새 시장을 겨냥하고 있어 비즈니스 구매가 어려울 것이라는 사용자의 의견.""
     * 개인적으로 Oxide 랙을 침실에 갖고 싶지만, 비용 문제로 구매할 수 없을 것 같다는 의견.

     ""Oxide 랙을 개인적으로 소유하고 싶지만 비용 때문에 구매할 수 없다는 사용자의 의견.""
     * Oxide가 사업을 접게 되면 서버 랙이 종이 무게추가 되지 않기를 바라며, 이에 대한 기대감을 표현.

     ""Oxide의 사업 지속성에 대한 우려와 서버 랙에 대한 기대감을 표현하는 사용자의 의견.""
     * Oxide를 처음 어떻게 알게 되었는지에 대한 호기심과, 그들의 팟캐스트가 제품 판매 외에 모든 것을 하는 훌륭한 마케팅이라고 생각하는 의견.

     ""Oxide를 처음 알게 된 경로와 팟캐스트를 통한 마케팅 전략에 대한 긍정적인 평가를 나타내는 사용자의 의견.""
"
"https://news.hada.io/topic?id=13034","8kB로 제작한 애니메이션 영화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           8kB로 제작한 애니메이션 영화

8kB로 애니메이션 영화를 만드는 방법

     * 2022년 11월, 8킬로바이트 이내로 실시간 애니메이션을 만드는 도전을 시작함.
     * 목표는 품질 좋은 그래픽, 애니메이션, 연출, 카메라 작업 및 음악을 포함하는 것이었음.
     * 2023년 4월, 몇 달간의 작업 끝에 ""The Sheep and the Flower""를 완성하여 공개함.

개요

     * 결과물은 Windows 실행 파일로, 모든 시각적 요소는 GPU에서 실시간으로 계산되는 GLSL 셰이더를 사용함.
     * 렌더링은 레이마칭 기법을 사용하고, 셰이더는 Shader Minifier 도구를 사용하여 축소됨.
     * 음악은 OpenMPT와 4klang 합성기를 사용하여 작곡되었으며, 악기는 절차적으로 설명되고 음표 목록은 압축됨.
     * 코드는 C++로 작성되었고, Leviathan 프레임워크를 사용하여 컴파일러 플래그와 초기화를 시작함.
     * 최종 출력은 Crinkler를 사용하여 압축됨.

창조의 시작

     * 전 동료가 오래 전에 만든 ""Capoda""라는 비디오를 공유한 것에서 영감을 받아 프로젝트 시작함.
     * 이 프로젝트는 8kB에 적합한 스토리를 가진 사이즈 코딩에 좋은 예가 될 수 있음.
     * 64kB를 목표로 하던 것과는 다른 새로운 도전에 흥미를 느낌.

두 개의 삼각형으로 세계 렌더링하기

     * 전체 화면을 덮는 직사각형(두 개의 삼각형)을 그리고, GLSL 언어로 작성된 GPU 프로그램(셰이더)을 실행하여 각 픽셀과 프레임마다 색상을 계산함.
     * 장면을 부호화된 거리 필드로 표현하고, 레이마칭을 사용하여 거리 필드를 픽셀로 변환함.

연출

     * 한정된 캐릭터와 애니메이션으로 스토리를 전달하고 감정을 표현하는 방법에 대한 고민.
     * 스토리에 불필요한 요소는 제외하고, 디테일과 연출, 편집, 음악과의 동기화에 집중함.
     * 카메라 작업과 스토리텔링 기법을 사용하여 감정을 전달함.

개발 과정

     * 소스 코드에는 많은 하드코딩된 상수들이 포함되어 있으며, 각 상수는 여러 번의 반복을 거쳐 결정됨.
     * 빠른 피드백 루프를 위해 셰이더를 사용하여 런타임에 재컴파일함.
     * 애니메이션과 카메라 제어 작업에 유용한 플레이어가 필요함.

음악

     * 스토리에 맞는 음악은 다양한 부분과 특정 시점에서의 전환을 필요로 함.
     * 4klang 합성기를 사용하여 음악을 작곡하고, 데이터를 압축하여 공간을 절약함.

애니메이션 & 동기화

     * 데모의 모든 것은 프레임마다 재평가되며, 약 25개의 수동 카메라 샷으로 구성됨.
     * 각 샷을 만들 때 카메라의 각 매개변수가 시간에 따라 어떻게 변하는지를 설명함.

텍스처 & 재료

     * 전통적인 렌더러와 달리, 실시간으로 3D 텍스처를 계산하여 사용함.
     * 교통 표지판 같은 텍스처는 여러 함수를 결합하여 생성됨.

눈

     * 개발 초기에는 눈이 생기 없고 무생물 같았으나, 스토리텔링 도구로서 중요함.
     * 눈에 반사되는 빛을 추가하여 생동감을 부여함.

후처리

     * 최종적인 시각적 터치와 스토리의 분위기를 설정하기 위해 색상 보정, 감마 보정, 비네팅, FXAA 필터 등을 사용함.

압축

     * 데이터를 저장하는 대신 코드를 사용하여 데이터를 생성하는 방식을 채택함.
     * Crinkler 압축 도구를 사용하여 실행 파일을 자체 추출 가능하게 만듦.

최소화

     * 셰이더 소스 코드를 최대한 작게 만들기 위해 Shader Minifier 도구를 사용함.
     * 셰이더 코드를 최소화하고 압축하기 위해 새로운 기능을 Shader Minifier에 추가함.

양과 꽃 사이의 전쟁

     * 양과 꽃 사이의 전쟁이 중요하지 않다고 생각하는가? ""어린 왕자""에서 언급된 이 주제는 스토리의 중요한 부분임.

결론

     * 이러한 데모를 만들기 위해 필요한 고급 기술과 기존의 연구를 기반으로 함.
     * 새로운 기능들이 다른 사람들이 더 나은 데모를 만드는 데 도움이 되길 바람.
     * 8kB 카테고리는 4kB보다 더 많은 가능성을 제공하며, 인기를 끌기를 희망함.


    GN⁺의 의견

     * 이 프로젝트는 기술적 한계를 극복하고 창의성을 발휘하여 놀라운 결과물을 만들어낸 예시임.
     * 8kB라는 극도로 제한된 공간 안에서 완성된 애니메이션은 프로그래밍, 알고리즘 최적화, 그리고 예술적 표현의 결합을 보여줌.
     * Shader Minifier와 같은 도구의 개발과 Crinkler 압축 도구의 사용은 소프트웨어 엔지니어링과 데이터 압축 분야에서의 혁신적인 접근을 강조함.

        Hacker News 의견

     * 원작자의 의견:
          + 원작 영화의 창작자로서, 원본이 MB 단위의 Blender, SVG, 오디오 파일로 구성된 것에 비해 리메이크가 8kB 안에 맞춰진 것이 인상적임.
          + 창작물 공유 라이선스(Creative Common license)가 유용하게 쓰인 사례로, 원작의 고슴도치 캐릭터와 멜로디를 사용했으면 하는 바람을 표함.
     * Sloot Digital Coding System에 대한 언급:
          + ""Sloot lives!!!""라는 말로 Sloot Digital Coding System에 대한 참조를 함.
     * 데모신(Demoscene) 비디오에 대한 의견:
          + 데모신 비디오가 재미있고, 더 많은 사람들이 봐야 할 만큼 주목받지 못하고 있음을 지적함.
          + 레트로 게임 메커닉스와 같은 채널이 데모신을 잘 설명해주길 바람.
     * 데모신 기술에 대한 분석:
          + 데모신 작품들을 많이 보고 연구하면, 양의 다리를 원뿔 형태로 표현하는 등의 기하학적 단순화가 가능한 방식을 이해하게 됨.
          + 대부분의 데모신이 GPU의 3D 가속 기능에 의존하지만, 2D 애니메이션 스타일의 데모는 드물고 작은 크기에서는 거의 없음을 언급함.
          + 3D 애니메이션이 2D보다 더 쉬운 것인지에 대한 의문을 제기함.
          + ""mouton""이 프랑스어로 ""양""을 의미하며, 이로부터 ""mutton""이 유래했다는 사실을 부연함.
     * .kkrieger 게임에 대한 회상:
          + 기술적인 면이 다르긴 하지만, 96k 크기로 압축된 3D FPS 게임 .kkrieger를 떠올림.
          + .kkrieger가 흥미로운 작품이었다고 평함.
     * Cosmos Laundromat에 대한 추천:
          + 8kB보다는 크지만, 양에 관한 예상치 못한 어두운 애니메이션 영화인 Blender Foundation의 Cosmos Laundromat을 추천함.
          + 기술 데모로서는 이례적으로 어두운 테마를 가진 영화들을 만드는 경향이 있다고 언급함.
     * 영화에 대한 긍정적인 반응:
          + 예측할 수 없는 결말을 가진 영화로서 흥미롭고 놀라운 작품이라고 평가함.
     * 창의성에 대한 칭찬:
          + 제약 조건 내에서 창의적이고 재미있는 스토리를 만든 것에 대해 감탄함.
          + 기술적인 세부 사항과 바이트를 줄이기 위한 방법에 대해 더 알고 싶어함.
     * Razor 1911에 대한 추억:
          + ""Razor 1911""이라는 말로 순수한 향수를 느낌.
     * 데모신 카테고리에 대한 정보:
          + 8KB는 데모신 카테고리 중 하나이며, Pouet에 좋은 인덱스가 있다고 소개함.
"
"https://news.hada.io/topic?id=13101","구글 Chrome, 윈도우 Arm용 네이티브 버전 개발","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     구글 Chrome, 윈도우 Arm용 네이티브 버전 개발

     * 구글이 Arm 기반의 윈도우 기기에서 성능을 대폭 향상시킬 ARM64 버전의 크롬을 테스트하기 시작
     * 최신 크롬 Canary 버전에서 Windows 11 Arm 기반 기기용 네이티브 버전 크롬이 발견됨
     * Microsoft는 Arm 버전 Edge를 계속 지원해 왔지만, 구글이 직접 지원하기 시작한 것은 이번이 처음
     * 기존엔 x86 버전용 크롬을 에뮬레이트 해서 실행해와서 느렸지만, ARM64 버전은 인텔 수준의 성능을 보여줌
     * 구글은 오랫동안 크롬북에서 ARM 프로세서를 지원해 왔으며, 퀄컴의 칩에 최적화된 크롬OS 버전을 제공중
     * 마이크로소프트는 구글의 Widevine DRM 시스템 없이 자체 ARM64 버전의 Edge를 출시할 수 있었음
     * 2024년은 윈도우와 랩탑에 있어 중요한 해가 될 것으로 예상되며, 마이크로소프트와 퀄컴은 윈도우 on Arm의 다음 주요 도약을 준비 중
     * 퀄컴은 자사의 새로운 Snapdragon X Elite 프로세서로 애플, 인텔, AMD를 능가할 것이라 주장하며, 엔비디아와 AMD도 2025년까지 Arm PC 칩을 출시할 계획이라는 보고가 있음
     * 구글이 이 노력에 참여하는 것은 윈도우 on Arm의 미래에 있어 중요한 의미를 가질 수 있음

   오! 좋은 ARM 윈도 노트북 기대됩니다.

   인텔한테는 나쁜 소식이 될 것 같네요.
"
"https://news.hada.io/topic?id=13054","2024년 DevOps 트렌드 전망 5가지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        2024년 DevOps 트렌드 전망 5가지

    1. AI와 머신러닝 도입 증가
          + 두 기술은 코드 작성, 분석, 테스트, 배포, 모니터링 자동화, 보안과 컴플라이언스도 강화
          + DevOps에서 AI와 머신러닝이 함께 작동하면 소프트웨어 개발 프로세스의 일부 작업을 자동화해 생산성과 효율성 향상
          + Market Research에 따르면, DevOps 시장에서 글로벌 생성형 AI 시장 규모는 2023년 13억250만달러→2032년 221억달러로 연평균 38.2%씩 성장할 걸로 관측
          + 성장 요인:
               o 점점 더 많은 기업이 클라우드로 이전하면서 소프트웨어 개발은 더 자동화되고, 더 효율화되길 요구받음
               o 생성형 AI는 자동화 기술이기에 이러한 목적을 달성하는 데 핵심 도구로 쓰일 것
          + 억제 요인:
               o 생성형 AI 솔루션을 만들고 구현할 수 있는 인력은 아직 부족
               o 생성형 AI 모델의 편향 가능성과 도덕, 법률문제 촉발 가능성
               o 현재 소프트웨어 개발 방법에 생성형 AI를 통합하는 일의 어려움
               o 생성형 AI는 소프트웨어 개발 프로세스에서 일부 프로세스를 자동화하는 데 쓰이면서 새로운 취약점과 공격 벡터를 제공할 수 있음
    2. 컨테이너화 확대
          + 컨테이너화(Containerization)는 소프트웨어 코드를 라이브러리, 프레임워크, 기타 의존성과 같은 필수 요소와 함께 패키지에 포함해 각자의 컨테이너로 분리하는 것
          + 디지털 트랜스포메이션 이니셔티브 일부로, 많은 기업이 기존의 수동 IT 작업을 테스트, 구성, 런타임 프로세스를 자동화하는 소프트웨어로 대체하고 있음. 컨테이너는 이를 지원하는 중요한 기술로 떠오름
          + Reportlinker.com에 따르면, 애플리케이션 컨테이너 시장 규모는 2023년 42억3000만달러→2028년 150억600만달러로 연평균 28.9%씩 커질 걸로 관측
          + 성장 요인:
               o 컨테이너는 더 빠르고, 더 일관된 릴리즈 사이클을 제공하기에 애플리케이션의 출시 속도를 높이도록 지원
               o 기업은 클라우드로 전환하면서 컨테이너의 유연성과 비용 절감 효과에 주목해 컨테이너 우선 전략을 취하는데 이는 컨테이너화가 확산하도록 이끌 수 있음
          + 억제 요인:
               o 애플리케이션 컨테이너 배포 속도는 비즈니스에 쓰이는 버그 또는 잘못된 구성과 같은 보안 위험에 취약하게 만듦
                    # 컨테이너 배포로 IT 인프라가 더 다양해지면서 기업은 미션크리티컬한 데이터 위치에 가시성이 부족해지고 데이터 손실 문제에 더 취약해질 수 있음
               o 컨테이너는 커널 익스플로잇, 공유된 리소스 취약점 같은 특정 보안 위험에 더 취약할 수 있음
                    # 잘못된 구성 또는 감독 되지 않은 보안 관행은 심각한 보안 결함을 일으킬 수 있음
    3. IaC 도입 확산
          + Infrastructure as Code(IaC)는 수동 프로세스가 아닌 코드로 인프라를 관리하고, 프로비저닝하는 DevOps 관행
          + 조직은 IaC를 사용해 인프라를 프로비저닝하고, 유지관리하는 데 필요한 시간을 줄이고 인프라 구성의 정확성과 일관성을 개선할 수 있음
          + Fortune Business Insights에 따르면, 글로벌 IaC 시장 규모는 2023년 9억870만달러→ 2030년 33억490만달러로 연평균 20.3%씩 성장할 걸로 관측
          + 성장 요인:
               o 최신 아키텍처는 느슨하게 연결된, 상호의존적 서비스와 API로 이뤄짐
                    # 이에 사람이 관리하는 클라우드 리소스 사용량은 늘어남, IaC는 이러한 복잡성을 다룰 수 있음
               o IaC 플랫폼은 개발자에게 프로그래밍 언어의 모든 기능을 제공함
                    # 이로써 최신 클라우드 애플리케이션의 의존성을 더 간단하게 관리할 수 있음
          + 억제 요인:
               o IaC는 높은 수준의 기술 숙련도를 요구함
                    # 일부 기업은 문화와 비즈니스 절차의 변화, 기존 애플리케이션을 마이그레이션 하는 위험 또는 팀에 필수 기술이 부족할 가능성 때문에 IaC를 도입하길 꺼릴 수 있음
               o 조직은 수동 인프라 관리 프로세스를 코드 기반의 자동화된 프로세스로 전환하면서 도전과제에 직면함
                    # 이는 기존 워크플로에 큰 영향을 미치고, 비즈니스 운영의 생산성을 떨어뜨릴 수 있음
               o 대기업의 다층적이고 복잡한 아키텍처를 처리하는 지식이 부족하면 새 기술을 통합할 때 저항이 생길 수 있음
                    # 이 문제는 조직의 코드 기반 인프라 구성을 관리하면서 위험을 일으키고, 취약점 문제를 만듦
                    # 코드 기반 아키텍처를 관리하는 복잡성은 결국 IaC 시장 성장을 제한할 수 있음
    4. 옵저버벌리티 중요성 확대
          + 옵저버빌리티(Observability)는 ‘시스템 외부 출력의 결괏값(지식)에서 시스템 내부 상태를 얼마나 잘 추론하는지’ 나타내는 척도. 이는 지표, 이벤트, 로그, 추적을 수집하고, 시각화하며, 분석하는 행위
          + 옵저버빌리티 도구는 복잡하고 분산된 환경에서 애플리케이션 성능과 관련해 실시간 가시성과 세분화된 인사이트를 제공함
          + Future Market Insights에 따르면, 이 시장 규모는 2022년 21억7370만달러→2032년 55억5320만달러로 연평균 8.2%씩 성장 전망
          + 성장 요인:
               o ‘시장 수요는 빠르게 변화하고, 여기에 유연하고 민첩하게 대응하려면 기업에 옵저버빌리티 기술이 있어야 함
                    # 이는 이해관계자와 고객 간에 소통과 협업을 촉진하고, IT 운영과 설계, 비즈니스 간에 장벽을 낮추며 비즈니스에서 중요한 역할을 수행할 수 있음
               o 요즘 업계에서는 애플리케이션 성능을 이해하고 분석하며, 애플리케이션 안정성과 확장성, 가용성을 향상하는 데 주력함
                    # 이로써 옵저버빌리티를 향한 공감대는 커지고, 관련 플랫폼 활용도 늘어날 것
          + 억제 요인:
               o 옵저버빌리티 플랫폼 기술을 구현하는 비용이 많이 들어감
               o 숙련된 인력이 부족해 다양한 조직에서 새로운 도구와 기술을 구현하는 데 저항도 있을 것
    5. NoOps의 부상
          + ‘소프트웨어 환경을 완전히 자동화해 운영팀이 이를 관리할 필요가 없다’는 개념
          + 이는 운영 효율성을 정점으로 끌어올려 전담 운영팀의 필요성이 없어지는 걸 지향
          + AI, IaC, 서버리스 컴퓨팅은 NoOps 기반 기술로 거론됨
          + NoOps는 개발자가 운영 문제에서 벗어나 코딩에 집중하는 걸 지향
          + 빅데이터와 머신러닝을 결합해 IT 운영 프로세스를 자동화하는 AIOps 플랫폼 때문에 점점 더 많은 조직이 NoOps를 도입
          + 조직은 NoOps로 전환하는 걸 신중하게 탐색해야 함
          + 운영의 효율성을 더 높이더라도 사람의 필수 통찰과 의사결정 능력을 잃지 않도록 유의할 것
"
"https://news.hada.io/topic?id=13103","Eagle 7B - Transformer를 뛰어넘은 모델","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Eagle 7B - Transformer를 뛰어넘은 모델

     * RWKV-v5 아키텍처를 기반으로 한 7.52B 파라미터 모델
     * 세계에서 가장 친환경적인 7B 모델로, 토큰당 비용이 낮음
     * 100개 이상의 언어로 1.1조 토큰에 대해 훈련됨
     * 다국어 벤치마크에서 모든 7B 클래스 모델을 능가함
     * 영어 평가에서 Falcon (1.5T), LLaMA2 (2T), Mistral (>2T?) 수준의 성능에 근접함
     * 매우 작은 명령어 튜닝만 한 파운데이션 모델로, 다양한 유스케이스를 위한 파인 튜닝 필요
     * Attention이 필요 없는 트랜스포머로
     * 아파치 2.0 라이선스로, 개인적이거나 상업적으로 제한 없이 사용 가능함

다국어 성능 세부사항

     * 다국어 성능은 xLAMBDA, xStoryCloze, xWinograd, xCopa 등 총 23개 언어를 대상으로 평가됨.
     * 이러한 벤치마크는 각 언어의 상식적 추론을 다룸.
     * RWKV v4에서 v5 아키텍처로 전환하면서 다국어 성능이 크게 향상됨.
     * 다국어 벤치마크가 부족하여, 훈련된 100개 이상의 언어 중 나머지 75개 이상의 언어에 대한 모델의 언어 성능을 직접 평가하기 어려움.

영어 성능 세부사항

     * 영어 성능은 상식적 추론과 세계 지식을 다루는 12개의 별도 벤치마크를 통해 측정됨.
     * RWKV v4에서 v5 아키텍처로 전환하면서 영어 성능이 크게 향상됨.
     * v5 모델은 주어진 토큰 훈련량에 대해 예상되는 트랜스포머 성능 수준에 부합함.
     * 추가적인 1조 토큰 훈련을 통해 LLaMA2 수준에 도달하고 Mistral 수준에 근접할 것으로 기대됨.

좋은 데이터셋 + 확장 가능한 아키텍처: 모두가 필요한 것일까?

     * 3000억 토큰 지점에서의 체크포인트는 pythia-6.9b와 유사한 성능을 보임.
     * RWKV-v4 아키텍처에서의 이전 실험과 일관되게, RWKV와 같은 선형 트랜스포머는 훈련된 토큰 수가 같을 때 트랜스포머와 유사한 성능 수준으로 확장됨.
     * 모델 평가 성능에 있어서 정확한 아키텍처보다 데이터가 더 중요한지에 대한 질문이 반복됨.
     * RWKV 기반 아키텍처와 트랜스포머 모델 간의 CUDA 계산 비용을 비교할 때, 선형 대비 2차원의 확장성이 중요함.

모두를 위한 포괄적인 AI 구축 - 영어만이 아닌

     * RWKV 다국어 접근 방식에 대한 일반적인 피드백은 영어 평가 점수에 영향을 미치고 선형 트랜스포머의 성장을 늦춘다는 것임.
     * 그러나 RWKV 팀은 이 접근 방식을 변경할 계획이 없으며, 영어만 사용하는 세계가 아닌 전 세계를 위한 AI를 구축하고자 함.
     * 2023년 기준으로 세계 인구의 17%만이 영어를 구사함.
     * 상위 25개 언어와 그 이상을 지원함으로써 약 40억 명, 즉 세계 인구의 50%를 커버할 수 있음.
     * RWKV 팀은 다국어 데이터셋을 확장하고, 지원 언어를 늘려 전 세계 100%를 커버하고자 함.

미래 계획

     * 이번 릴리스는 현재까지 가장 강력한 선형 트랜스포머를 표시함.
     * LLaMA2와 Mistral을 넘어서진 못했지만, RWKV-v5 모델 아키텍처가 유사한 토큰 수로 트랜스포머 성능과 유사하게 확장됨을 보여줌.
     * 2024년 2월에는 RWKV v5에 대한 업데이트된 논문을 발표하고, 3월에는 v5 Eagle 2T 모델을 기반으로 한 MoE 모델과 RWKV-v6 ""Finch"" 1.5B, 3B 월드 모델을 출시할 계획임.

감사의 말

     * 이 기초 모델을 훈련하기 위해 대부분의 컴퓨팅을 제공한 StabilityAI에 감사함.
     * 논문 작성 과정에서 지원을 아끼지 않은 EleutherAI에 감사함.
     * RWKV 프로젝트를 지원하고 호스팅하는 Linux Foundation AI & Data 그룹에 감사함.

GN⁺의 의견:

     * Eagle 7B는 다양한 언어를 지원하며, 효율적인 비용으로 높은 성능을 제공하는 선형 트랜스포머 모델임.
     * 이 모델은 AI의 접근성을 높이고 환경에 미치는 영향을 줄이는 데 기여할 수 있음.
     * RWKV 팀은 AI가 전 세계 모든 사람들을 지원하고, 모든 언어를 포괄하는 방향으로 기술을 발전시키고자 하는 명확한 비전을 가지고 있음.

   어제 밤에 잠깐 데모를 써봤는데 꽤 빠르고 결과도 잘 내더라구요. 한국어랑 일본어도 자연스럽게 인식하고 대답했습니다.

        Hacker News 의견

     * 대체 LLM(대규모 언어 모델) 아키텍처에 대한 진전이 이루어지고 있어 흥미롭지만, 해당 기사는 모델의 품질만을 다루고 있어 아쉬움
          + 기사가 갑자기 끝나버려서, 새로운 아키텍처를 채택하려는 동기 부여가 부족함
          + 성능과 컨텍스트 크기에 대한 논의가 필요함
          + 기사에서는 컨텍스트에 대한 언급이 없어 실망스러움
          + RWKV-4의 차트를 재사용했지만, 차트가 무엇을 보여주는지 명확하지 않음
     * 모델 아키텍처는 트랜스포머, Mamba, SSM, RWKV 등이 중요하지 않으며, 훈련 데이터 세트의 영향이 더 중요함
          + 언어 데이터는 인간 경험의 저장소이며, 이를 통해 AI가 다양한 능력을 획득하는 것은 지능이 뇌에만 국한되지 않음을 시사함
     * RWKV-v5 Eagle 7B가 Apache 2.0 라이선스로 릴리스되어 개인적이거나 상업적으로 제한 없이 사용할 수 있음
          + 팀이 테스트와 채택을 위한 올바른 동기를 설정한 것은 긍정적임
     * 현재 주로 디코더 전용 다음 토큰 예측 모델에 초점이 맞춰져 있음
          + BERT와 T5의 인코더는 여전히 검색이나 분류 작업을 위한 임베딩 생성에 유용함
          + 임베딩 사용 사례를 위한 더 나은 사전 훈련 아키텍처에 대한 연구가 더 필요함
     * RWKV 모델이 일반적인 트랜스포머 모델과 어떻게 비교되는지, 벤치마크를 어떻게 해석해야 하는지에 대한 설명 요청
          + Mistral 7B/mistral-tiny와 비슷한 성능을 보이는 것 같음
     * 필요한 RAM의 양과 CPU만 사용할 때의 토큰 처리 속도에 대한 정보가 불확실함
     * 프로젝트 멤버가 Reddit에서 질문에 답변하고 있으니 참고할 것을 제안함
          + 해당 Reddit 사용자 링크 제공
     * RWKV 모델을 시도하고 싶지만 기다리고 싶지 않다면 rwkv-demo-api.recursal.ai 사용 권장
     * 2024년 3월에 기반한 MoE 모델 v5 Eagle 2T에 대한 기대감 표현
          + 성능과 환경/토큰 비용의 균형을 기대함
          + 스칸디나비아 언어의 개선도 기대하지만, 결과를 지켜봐야 함
          + 훈련 데이터의 가치와 최적의 훈련을 위한 내용 구조 및 균형에 대한 인식이 진정한 혁명을 가져올 것임
     * RWKV-4 실험에서 추론 속도는 빠르지만 토큰화 속도가 매우 느린 것을 경험함
          + RWKV-5에 대한 구체적인 지침이 필요함
"
"https://news.hada.io/topic?id=13043","Show HN: RAG를 위한 오픈소스 규칙 기반 PDF 파서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Show HN: RAG를 위한 오픈소스 규칙 기반 PDF 파서
"
"https://news.hada.io/topic?id=13132","인텔의 겸손인텔의 겸손

인텔의 겸손함

     * 2013년 인텔 CEO로 취임한 브라이언 크르자니치는 전임 CEO 앤디 그로브와 유사한 위기에 직면함.
     * 그로브는 메모리 사업의 실패에서 벗어나 로직 칩에 집중하여 인텔을 성공으로 이끔.
     * 크르자니치는 내부 설계 및 제조(IDM)에 집중하는 대신 외부 고객에게 서비스를 제공하는 파운드리로 전환할 것을 권고받았으나 이를 따르지 않음.

인텔의 고군분투

     * 크르자니치는 인텔 직원과의 관계로 해고되고 밥 스완이 CEO로 임명됨.
     * 현재 CEO인 팻 겔싱어는 크르자니치의 전략적 통찰력 부족과 실행 실패로 인한 대가를 치르고 있음.
     * 인텔의 주가는 겔싱어의 리더십 하에서 계속 하락함.
     * 인텔의 클라이언트 PC 사업은 회복 중이지만, 데이터 센터 프로세서 시장에서는 수요가 약화됨.
     * AMD는 TSMC의 더 나은 공정으로 더 나은 CPU를 만들어 인텔의 점유율을 잠식함.

인텔의 진전

     * 겔싱어는 인텔을 외부 고객에게 서비스를 제공하는 파운드리로 변모시키고, 선두 경쟁력을 회복하기 위해 노력 중임.
     * 인텔은 18A 공정을 통해 고객에게 서비스를 제공하고자 함.
     * 인텔의 18A 공정은 업계 최초로 게이트-올-어라운드와 백사이드 전력 전달을 하나의 공정 노드에 통합함.
     * 인텔은 2024년 하반기에 18A 공정의 제조 준비를 완료하고, 이를 통해 공정 리더십을 되찾을 것으로 기대함.

인텔의 새로운 파트너

     * 인텔은 대만의 UMC와 파트너십을 맺고 2027년까지 미국 애리조나에서 12나노미터 기술 생산을 시작할 예정임.
     * 이 파트너십은 인텔의 제조 능력과 UMC의 고객 서비스 경험을 결합함.
     * 이 거래는 인텔과 UMC 모두에게 추가적인 수익과 이익을 가져다줄 것으로 예상됨.

인텔의 필요

     * 인텔은 과거에는 최첨단 팹만 필요했으나, 파운드리로서는 감가상각된 팹에서 칩을 계속 생산하는 것이 중요함.
     * 인텔은 고객 서비스 조직으로서의 역량 부족으로 인해 외부 고객을 위한 서비스 제공 능력을 놓쳤음.

인텔의 겸손함

     * 인텔은 UMC와의 거래를 통해 고객 서비스 조직으로서의 역할을 강화하고자 함.
     * 이 거래는 인텔이 겸손해질 필요가 있었으며, 회사가 올바른 방향으로 전환하고 있다는 희망을 제공함.

   GN⁺의 의견:
    1. 인텔의 전략적 전환과 파운드리 서비스 확장은 반도체 산업에서의 경쟁력을 유지하기 위한 중요한 단계임.
    2. 겔싱어의 리더십 하에서 인텔은 과거의 실패에서 배우고, 외부 고객에게 서비스를 제공하는 새로운 비즈니스 모델을 채택하고 있음.
    3. UMC와의 파트너십은 인텔이 고객 중심의 문화를 발전시키고, 장기적으로 성공적인 파운드리 사업을 구축하는 데 도움이 될 것임.

        Hacker News 의견

     * 인텔에 대한 긍정적인 전망
          + 인텔이 공정 노드를 빠르게 발전시키고 실제 제조 공장으로서 진전을 보이고 있음.
          + 지난 4년간 공정 노드 개발에 실패했지만, Gelsinger가 CEO가 된 후 R&D에 집중하며 회복 중임.
          + 인텔의 18A 공정이 일정보다 6개월 앞서 있으며, 2024년 하반기 제조 시작 예정.
          + 제조 투자는 가치 창출까지 3년의 시간이 걸림. 올해부터 그 효과가 나타나기 시작함.
          + 인텔은 기술 부채와 주식 시장의 부정적 압력에도 불구하고 이익을 내고 있음.
          + 시장과 분석가들이 인텔을 과소평가하고 있으나, 인텔은 시장 가치와 점유율을 회복할 많은 잠재력을 가짐.
          + Pat Gelsinger가 그의 전략을 완전히 실행할 수 있도록 지속적으로 CEO로 있기를 희망함.
     * 인텔에 대한 비판적인 시각
          + 인텔이 경쟁 부족으로 인한 게으름에서 벗어나야 함.
          + 인텔의 첫 GPU 시도는 나쁘지 않았으며, 최신 CPU도 경쟁력이 있음.
          + 인텔의 파운드리 사업은 무능함이 아니라 새로운 시도로 인해 어려움을 겪음.
          + 인텔의 20A와 18A 공정이 진행 중임.
          + 인텔의 비윤리적인 비즈니스 관행에 대한 비판이 있음.
     * TSMC의 전략 변화에 대한 분석
          + TSMC가 기존의 5nm 공정을 3nm로 전환하여 수익성을 높이고자 함.
          + 5nm 공정은 수율 문제가 있었으나, 3nm으로의 전환은 덜 문제가 될 것으로 보임.
          + TSMC의 이러한 움직임은 기계 학습 등의 수요 증가에 대응하기 위함임.
     * 인텔의 전략적 실수에 대한 지적
          + 인텔이 McAfee를 구매한 것은 잘못된 결정이었음.
          + 인텔이 모바일과 GPU 시장에 진출하지 않은 것은 실수였음.
     * 인텔 CEO의 행동에 대한 의문
          + 인텔 CEO가 종교적인 발언을 자주 하는 것에 대한 의아함.
     * 인텔의 제조 공정에 대한 내부자의 경험담
          + 인텔에서의 제조 공정은 매우 복잡하고, 안정적인 생산 라인 유지가 최우선임.
          + 공정 변경을 위해서는 수개월에 걸친 데이터 수집과 방대한 문서 작업이 필요함.
     * 인텔 제품에 대한 소비자의 경험
          + 인텔 제품의 다양한 반복으로 인해 구형 제품을 선택하는 경우가 많음.
          + 인텔이 제품 라인을 간소화하고 시장의 다른 플레이어들에게 더 개방적이어야 함.
     * 인텔의 전략적 결정에 대한 평가
          + Pat Gelsinger의 전략이 Andy Grove의 전략만큼 중요하고 용감함.
          + 인텔의 주가 상승은 시장의 전반적인 상승세에 기인한 것임.
          + 큰 시장 변화가 있을 때 기술 분야에서 공격적인 전략을 펼치기 어려움.
     * 인텔의 문제점에 대한 비판
          + 인텔은 경영 컨설팅으로 인한 기업 암을 앓고 있음.
          + 인텔은 지난 20년간 전략적으로 많은 실수를 저질렀음.
          + 모바일, GPU, AI 시장을 놓쳤고, 데스크탑에 지나치게 집중함으로써 데이터 센터 시장에서 경쟁자들에게 밀리고 있음.
"
"https://news.hada.io/topic?id=13021","수로 지도수로 지도

오픈스트리트맵에서 수로 연결 방법

     * 오픈스트리트맵에서 수로는 자연 수로(운하 등 제외)와 인공 수로(운하 등 포함)로 구분됨.
     * 수로는 보트(boat=yes, motor)나 카누(canoe=yes)로 항해 가능한지 여부에 따라 분류됨.
     * 수로에는 이름이 지정된 수로, 강 등이 포함되며, 비인공 수로도 존재함.
     * 데이터는 2024년 1월 23일 기준으로 제공됨.
     * 지도상의 색상은 무작위로 할당되며, 2색에서 최대 11색까지 다양함.
     * 길이에 따라 수로를 제외하는 옵션 제공(최소 길이 km, 최대 길이 km).
     * 특정 지역에 대한 링크 제공: osm.org, josm, iD, geo: url(모바일에서 열기).
     * 지도 데이터는 오픈스트리트맵 기여자들에 의해 제공되며, 오픈 데이터 라이선스에 따름.
     * 수로에서의 루프(오류)를 지적하는 내용 포함.
     * 소스 코드는 GitHub의 amandasaurus/waterwaymap.org에서 확인 가능.
     * 문제 보고를 위한 이메일 주소와 소셜 미디어 업데이트 정보(@amapanda, @en.osm.town) 제공.

GN⁺의 의견

     * 이 기사는 오픈스트리트맵을 통해 전 세계 수로의 연결성과 항해 가능 여부를 파악하는 방법을 설명함.
     * 지도상에서 수로의 다양한 색상은 사용자가 쉽게 구분할 수 있도록 도와주며, 데이터는 최신 상태로 유지됨.
     * 오픈스트리트맵 커뮤니티의 공동 작업을 통해 수집된 데이터는 무료로 제공되며, 누구나 접근 가능하여 지도 정보의 개방성과 공유를 강조함.

        Hacker News 의견

     * 영국과 웨일즈의 운하 시스템에 대한 열정을 표현한 댓글로, 영국에는 약 2500마일의 (대부분) 항해 가능한 운하가 있으며, 이는 산업 혁명 시기에 기차 발명 이전에 석탄과 기타 상품을 빠르고 손상 없이 운송하기 위해 만들어졌음을 설명함. 현재는 대부분 여가를 즐기는 보트 커뮤니티가 있으며, 일부는 쾌적한 생활을 위해 좁은 보트에서 살고 있음을 언급함.
     * 워터쉐드 계산기와 강 흐름 시뮬레이터에 대한 링크를 제공하며, 이는 강과 수로의 흐름을 시각화하는 도구임을 나타냄.
     * 한 사용자는 자신의 할아버지가 플로리다 중부에서 해안까지 보트를 타고 갈 수 있는 가능성에 대해 이야기했던 기억을 공유하며, 이제 그것이 실제로 가능하다는 사실에 기쁨을 표현함.
     * 뉴멕시코의 건조한 아로요(시냇물이 흐르는 작은 계곡)가 많이 매핑되어 있음에 놀라움을 표현하는 댓글로, 일부 지역은 공식적으로 매핑되지 않았지만, 매핑된 곳도 있다고 언급함.
     * WaterwayMap.org의 창작자가 자신의 프로젝트를 소개하며, 버그 보고나 기능 요청을 위한 코드 저장소 링크를 제공함.
     * 강의 길이를 표시하는 숫자에 대한 혼란을 표현하는 댓글로, 작은 강의 경우 총 길이로 보이지만, 더 큰 강의 경우 이해할 수 없는 숫자가 표시되어 있음을 지적함.
     * 수로 토폴로지 디버깅에 유용할 것 같다는 의견과 함께, 몇 가지 문제점을 지적하는 댓글로, 작은 강들이 완전히 연결되지 않았거나, 호수를 통과하는 방법에 대한 일관성 부족 등을 언급함.
     * 멕시코 유카탄 반도가 매우 흥미롭다고 언급하는 댓글로, 지도상에서는 물길이 없어 보이지만, 실제로는 열대 정글이며, 모든 물이 지하를 통해 흐르고 있음을 설명함.
     * ""카누 항해 가능"" 필터가 모든 것을 필터링해버려 실망스럽다는 의견과, 시에라 산맥에서 얼마나 멀리 카누를 띄우고 베이 지역으로 돌아올 수 있는지 궁금하다는 호기심을 표현함.
     * 네덜란드와 독일을 확인한 결과, 항해에 필요한 세부 정보가 부족하여 실제 항해에는 사용하기 어렵지만 잠재력이 있다는 의견을 제시함. 또한 철도, 자전거, 해상 지도 등 다른 전문화된 오픈 스트리트 맵 기반 지도들에 대한 링크를 공유함.
"
"https://news.hada.io/topic?id=13033","HN 소개: 스타트업 펀딩 시뮬레이터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          HN 소개: 스타트업 펀딩 시뮬레이터

        Hacker News 의견

     * 도움말 버블 추가 요청

     사용자는 다양한 토글과 박스에 익숙하지 않기 때문에 더 많은 도움말 버블을 원함. 또한, 사용자 본인뿐만 아니라 직원들이 얼마나 받게 될지 보고 싶어함. 다른 시나리오를 통해 다양한 상황을 시뮬레이션할 수 있어 유용함을 인정함.
     * 산업별 자본 요구 사항의 중요성

     다양한 산업이 초기 자본 요구 사항에서 크게 다르다는 점을 보여주는 것이 중요함. 하드웨어 스타트업 같은 자본 집약적인 사업을 시작할 때 SaaS 수준의 자본 요구 사항을 사용하는 실수를 많이 저지르는데, 이는 비즈니스에 부정적인 영향을 줄 수 있음. 창업 단계별로 실제 수치를 반영하는 템플릿을 사용하는 것이 유용할 수 있음.
     * 창업자의 노력 가치와 자금 공급

     창업자의 노력 가치와 창업자가 제공한 자금을 고려하는 것, 친구 및 가족 라운드를 관리하는 방법, 창업자가 회사를 떠나는 시나리오를 시뮬레이션할 수 있는 기능을 고려해볼 것을 제안함.
     * 스타트업 매각 옵션의 추가 제안

     SAFE 라운드 후에 ""스타트업 매각/판매"" 옵션을 추가하는 것이 좋을 것이라는 의견 제시. 이는 Jason Lemkin의 '한 라운드만 모으기' 시나리오를 시뮬레이션할 수 있게 함.
     * UI 내 정보 제공의 중요성

     도구가 유용하지만, 사용자 인터페이스(UI) 내에 더 많은 정보를 제공하여 사용자가 이해를 돕는 것이 좋을 것이라는 의견 제시.
     * 도구 사용 후기

     사용자는 자신의 비즈니스를 매각한 후에 도구를 사용하여 창업자와 펀딩 라운드를 삭제하고, 결과적으로 큰 수익을 얻었다고 함.
     * 복잡한 단계에서의 유용성

     도구가 복잡한 단계, 특히 벤처 부채, 더 높은 유동성 선호(LiqPref)와 이상적이지 않은 가격으로 출구를 마주할 때 유용하다고 함. 사용자는 각 회사별로 맞춤형 엑셀 파일을 만들어 모든 당사자의 수익 분배와 인센티브를 시뮬레이션하지만, 이 도구도 도움이 될 수 있다고 생각함.
     * 시뮬레이터와 계산기의 구분

     도구가 시뮬레이터인지 계산기인지 혼란스럽다는 의견 제시.
     * UI와 교육적 힌트의 중요성

     UI가 마음에 들고, 초보자를 위한 교육적 힌트가 필요하다는 것이 명백하며, 아마도 이미 개발 로드맵에 있을 것이라는 의견 제시.
     * 게임에 대한 기대

     사용자는 이 도구가 냉소적인 게임일 것으로 예상했으나 그렇지 않았다고 함.
     * 도구의 유용성 및 감사 인사

     도구가 전략에 대한 대략적인 아이디어를 얻거나 초기 단계에서 빠르게 시작하는 데 매우 유용하다고 평가. Carta의 시뮬레이션 도구보다 훨씬 깔끔하고 좋으며, 창업자들이 활용할 것이라고 함. 도구를 만들어 공유해준 것에 대해 감사함을 표시함.
"
"https://news.hada.io/topic?id=13136","ServerFree 아키텍처","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ServerFree 아키텍처

     * 서버리스(Serverless)는 실제로 서버가 없다는 것을 의미하지 않으며, 단지 다른 사람의 서버를 사용한다는 것을 의미함
     * ServerFree 아키텍처는 백엔드 서버, 컨테이너, 가상 머신 없이도 코드를 실행할 수 있는 개념을 제안
     * 이 아키텍처에서는 브라우저 내에서 코드를 실행하며, 정적 파일을 제공하는 서버만 필요함
     * 웹 어플리케이션을 브라우저에서 실행할 수 있도록 패키징하는 방법을 시연
     * 프론트엔드 코드는 평소와 같이 빌드되며, 백엔드는 패키징되어 웹 워커에서 실행되고, 데이터베이스는 WebAssembly로 컴파일된 SQLite를 사용함

아이디어

     * 콘텐츠 마케팅을 통해 데모 프로젝트를 만들기로 결정하고, 해커 뉴스에서 영감을 받아 개인 정보 보호 측면에서 주목받는 잡 신청 추적기를 만들기로 함
     * 이 프로젝트는 웹 워커, 문서 불일치, 누락된 문서 등의 문제를 해결하면서 새로운 아키텍처를 개발하는 과정으로 발전함.

클래식 아키텍처로 첫 시도 (쉬운 부분)

     * SubZero CLI를 사용하여 데이터베이스 스키마를 변경하고 권한을 설정하여 앱을 구축함.
     * CRUD 및 필터링 기능을 제공하지만, 데모보다는 제품에 가까운 UI 사용자 정의를 진행함.
     * 왼쪽에 낭비되는 공간을 줄이기 위해 사이드바를 상단으로 이동함.
     * ""Opportunities"" 페이지에 Show, Create, Edit, List 컴포넌트를 추가함.
     * 백엔드 코드를 건드리지 않고도 복잡한 필터링 흐름을 구현함.
     * 대시보드를 개선하여 ""열린 기회"", ""평균 진행률 / 신청"", ""신청 후 평균 일수"" 등의 관련 데이터를 표시함.
     * 프로덕션 배포를 위해 도커 이미지를 빌드하고 데이터베이스를 시드하며 컨테이너를 실행함.
     * SQLite 데이터베이스 파일을 컨테이너 외부에 유지하여 데이터를 지속적으로 보존함.
     * Turso DB를 사용하여 SQLite 데이터베이스의 지속성과 백업 문제를 해결함.

ServerFree 아키텍처로 전환 (재미있는 부분)

     * SQLite를 WebAssembly로 컴파일하여 데이터베이스로 사용함.
     * OPFS(Origin-Private FileSystem)를 사용하여 데이터를 저장함.
     * 백엔드 코드를 웹 워커에서 실행하여 UI 스레드의 차단을 방지함.
     * Express를 itty-router로 대체하여 브라우저 호환성을 확보함.
     * 서비스 워커를 사용하여 UI와 백엔드 간의 요청을 가로채고 처리함.
     * 메인 스레드를 통해 서비스 워커와 웹 워커 간의 안정적인 통신을 구현함.
     * 메인 스레드(UI)에서 인증 관련 코드를 제거함.
     * 사용자의 컴퓨터에서 데이터를 저장하고, 서버로 전송되지 않음.

결론

     * 이 아키텍처는 특히 고객 데이터가 독립적이고 사용자 간에 공유할 필요가 없는 경우에 유용함.
     * 백엔드 서버가 없어 호스팅 비용이 절감되고, 데이터 프라이버시가 강화되며, 보안이 향상됨.
     * Electric 과 같은 도구를 사용하여 클라이언트에 데이터베이스의 일부를 동기화하고 일부 요청/쿼리를 브라우저에서 처리할 수 있음

   Blazor: 응?
"
"https://news.hada.io/topic?id=13090","기차 화장실 해킹 사건","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              기차 화장실 해킹 사건

영국 열차 화장실 해킹

     * 영국의 ""IntercityExpress""로 불리는 Class 800 열차를 탑승함.
     * 이 열차는 오래된 HST(InterCity 125)를 대체하기 위해 설계됨.
     * 영국의 현대 열차에는 전동식 문이 있는 장애인 화장실이 있음.

화장실 문 제어 상태 기계(오래된 열차)

     * 이전 모델의 화장실 문은 내부에 '열기', '닫기', '잠금' 버튼이 있음.
     * '닫기' 버튼을 누르고 문이 닫힌 후 '잠금'을 눌러야 함.
     * '열기' 버튼을 누르면 자동으로 문이 잠금 해제되고 열림.
     * 이러한 설계는 서비스 거부 공격을 방지하기 위함이지만, 많은 사람들이 상태 기계를 이해하지 못해 혼란을 겪음.

열차 장애인 화장실 내부 제어 장치(Class 800)

     * 새로운 열차의 장애인 화장실은 문을 잠그기 위해 움직여야 하는 레버가 있음.
     * 이 레버는 직접적인 잠금 메커니즘과 연결된 '진짜' 레버가 아니라 마이크로컨트롤러에 대한 입력임.
     * 레버의 상태와 문의 상태가 일치하지 않을 때 마이크로컨트롤러가 어떻게 처리하는지에 대한 의문이 제기됨.

해킹 시도 및 결과

     * 일부 영국 열차 모델은 문이 열린 상태에서 '잠금' 위치로 레버를 움직이려고 하면 레버가 '잠금 해제' 위치로 돌아가도록 설계됨.
     * 하지만 히타치는 다른 전략을 사용함: '잠금'으로 레버를 움직일 수 없어야 할 때 작은 금속 핀이 돌출됨.
     * 레버를 '잠금' 위치로 움직이기 직전에 잡고 문을 열면, 잠금 핀이 공중에 돌출되어 레버를 '잠금' 위치로 움직일 수 있게 됨.
     * 문을 닫으면 문이 즉시 잠기는 것을 확인함.
     * 이를 통해 열차 화장실에 서비스 거부(DoS) 취약점이 있음을 발견함.
     * 문제를 시연하는 비디오를 게시함.
     * 레버를 정확한 위치에 두면 잠금 핀이 공중에 돌출되어 보임.
     * Class 800에서 이 문제를 테스트한 것은 이번이 두 번째임.
     * 취약점 테스트 중에 화장실 문 컨트롤러가 혼란스러워져 '고장' 모드로 전환됨.
     * 열차에서 내릴 때 화장실이 다시 작동함; 자동으로 리셋되었는지, 아니면 누군가가 리셋했는지는 알 수 없음.
     * 이전에도 열차에서 DoS 취약점을 발견한 적이 있음.

GN⁺의 의견

     * 열차 내 장애인 화장실의 문 잠금 시스템에 존재하는 취약점을 발견한 경험은 보안 연구와 시스템 설계의 중요성을 강조함.
     * 사용자 인터페이스가 직관적이지 않아 발생하는 문제는 기술 설계에서 사용자 경험을 고려해야 하는 이유를 보여줌.
     * 이 글은 기술적 호기심을 가진 사람들에게 흥미로울 수 있으며, 공공 시설의 보안 취약점에 대한 인식을 높이는 데 도움이 될 수 있음.

        Hacker News 의견

     *

     분리된 문 닫기 및 잠금 기능의 이유는 서비스 거부 공격을 방지하기 위함이지만, 문 여는 기능과 잠금 해제 기능은 분리되지 않음:
          + 문 닫기 버튼이 자동으로 문을 잠그면, 누군가가 문을 닫고 빠르게 나가면 화장실 접근이 영구적으로 불가능해질 수 있음.
          + 초등학교 시절 아날로그 문 잠금장치가 있었는데, 외부에서 나사 같은 인터페이스를 이용해 모든 화장실 문을 잠글 수 있었음.
     * 스웨덴 기차에서 문이 열리는 상황을 경험함:
          + 문 손잡이를 잡고 닫으려 했지만, 결국 바지를 입는 것을 우선시해야 했음.
          + 화장실이 넓어서 바깥에 좌석이 있어 상황이 민망했지만, 모두 태어날 때부터 벌거벗은 존재이므로 재미있는 이야기가 됨.
     * 호주에서 디지털 공중전화의 첫 시도:
          + 언어 버튼을 누른 상태에서 수화기를 들면 '고장' 메시지가 나타나고, 이 메시지는 수화기를 다시 들 때까지 유지됨.
          + 고등학교 시절 과학적 접근으로 많은 사람들의 생활을 방해함.
          + 3개의 공중전화 중 2개를 이 방법으로 사용 불가능하게 만들면 아무도 고장난 수화기를 오래 조사하지 않아 긴 줄이 생김.
          + 모든 공중전화를 고장 상태로 만들면 화난 사용자들이 수화기를 테스트하고 정상 상태로 복구함.
     * 영국 기차 내부 문 닫기 버튼의 잘못된 설계:
          + 문을 닫는 습관 때문에 동료 승객들에게 문제를 일으킨 적이 있음.
     * 덴마크 기차에는 '닫기' 버튼만 있는데, 처음에는 당황스러움.
     * 기차 화장실의 기계식 잠금장치에 문제가 있음:
          + 많은 노인들이 전자 잠금장치 사용에 어려움을 겪고, 문이 제대로 잠기지 않아 당황하는 경우가 많음.
          + 급하게 화장실을 사용해야 하는 사람들에게 문제가 됨.
     * 기계적 해킹이 재미있긴 하지만, 실제로 아무도 없는데 잠겨 있는 화장실을 기다리는 사람이 당신일 수도 있음.
          + 이러한 문제는 소프트웨어나 상태 기계보다 테스트하기 어려움.
          + 잘못된 복사량을 제공하는 방사선 기계와 같은 위험한 기계적 '해킹'도 있음.
     * 모든 기차가 문을 잠그라고 말하지 않아서, 많은 사람들이 문을 열었다가 안 좋은 상황에 처함.
     * 모든 것에 마이크로컨트롤러를 넣을 필요가 없음:
          + 기차 화장실의 경우 비행기 화장실과 유사하고, 비행기는 잘 작동하는 기계식 슬라이딩 잠금장치를 사용함.
          + 기차 화장실에 타이머가 있어서 사람들이 여행 내내 화장실을 점유하는 것을 방지하기 위한 것일 수 있음.
     * 영국 기차 화장실의 나쁜 디자인:
          + 문을 잠그지 않아서 다른 승객에게 노출되는 사람들, 문을 닫거나 열지 못하는 사람들이 있음.
          + 화장실을 사용하려고 갔다가 이전 사용자에 의해 망가진 화장실을 발견하는 경우도 있음.
"
"https://news.hada.io/topic?id=13091","해킹당한 마이크로소프트 테스트 계정에 관리자 권한 부여","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     해킹당한 마이크로소프트 테스트 계정에 관리자 권한 부여

        Hacker News 의견

     * 고대 Roblox 해킹 사례를 회상하며, 비생산 스테이징 사이트에서 사용자가 가입할 수 있었고, ""여기의 모든 것은 영구적이지 않다""는 배너가 있었음. 생산 계정에 새 관리자 계정이 추가되었을 때, 누군가가 스테이징 사이트에서 같은 사용자 이름으로 등록하여 쿠키와 토큰을 사용해 생산 계정을 탈취하고 사이트를 위험에 빠트렸음. 이러한 문제가 드물지 않다고 상상하기 어려움: 사용자 이름이나 사용자 ID를 기반으로 암호화 토큰을 생성할 때, 생산/스테이징에 대한 다른 비밀이 없다면, 스테이징 사이트가 생산 권한을 혼동하는 외부 서비스와 통신하는 경우 등.
     * 대기업의 개발/생산 경계는 사람들이 생각하는 것보다 훨씬 더 투과성이 있음. 일반적인 하루를 고려해보면, PC에 로그인하고, 이메일을 확인한 다음, 같은 자격 증명을 사용하여 Azure 포털에 로그인함(모두 같은 테넌트에 의해 지원됨). 계정은 GitHub과 클라우드 계정에 연결됨.
     * 팀즈나 원드라이브에서 작업할 수 있도록, 이해하기 어려운 권한을 가진 그룹과 팀이 곳곳에 생성되며, 이들은 회사 디렉토리에 거의 구별할 수 없는 보안 그룹으로 남아있음.
     * 때때로 필요한 것을 여전히 사용하고 있는지 묻는 자동 이메일을 받지만, 메시지는 불투명하고, 정말 큰 회사에서는 물어볼 사람이 없음(도움말 데스크는 답변하는 데 이틀이 걸리고, Twitter에서 John Savill에게 연락할 수도 없으므로, 그냥 확인을 누르고 계속 진행함).
     * 결국, 구조가 찢어지고 공격자가 약한 지점에서 운이 좋아져 테넌트를 가로질러 원하는 것을 얻을 수 있음.
     * 현명한 CISO가 한 번 말했듯이, 해커들은 침입하지 않고 로그인함.
     * 사이버보안 업계에서 이를 ""whoopsie""라고 흔히 알려짐.
     * 연구원이자 보안 전문가인 Kevin Beaumont은 Mastodon에서 OAuth 앱에 'full_access_as_app' 역할을 할당할 수 있는 계정은 관리자 권한을 가져야 한다고 지적함. ""누군가"" 생산 환경에서 상당히 큰 설정 오류를 범했다고 말함.
     * 시스템의 세부 사항을 알지 못하지만, 그것이 문제가 아닐 것 같고, 전문가가 그것이 문제라고 말하는 것에 놀람. 그러한 오류를 범할 수 있는 방법이 없어야 함. 설계자와 관리자가 그것을 불가능하게 만들어야 하며, 그들이 책임져야 함.
     * 멋진 보안 인증이 있음에도 불구하고, Amazon에서 $36짜리 책의 잘 생각된 최선의 관행이 완전히 무시되는 것처럼 보임.
     * 이 게시물에서 빠진 것: 저자들이 ""생산""을 어떻게 정의하는지, ""비생산"" 계정이 생산 도메인에 대한 관리 권한을 가질 수 있는 경우.
     * 이 패턴은 MS 생태계 전반에 걸쳐 예외가 아닌 규칙이지만, Microsoft 자체가 이를 수행하는 것은 특히 난처함.
     * 한 회사에서 모든 생산 서버와 데이터베이스의 비밀번호를 코드 저장소의 텍스트 파일에 저장했는데, 이는 최고 아키텍트가 비밀번호를 기억하고 싶지 않았기 때문임. CTO에게 이것이 얼마나 어리석은지 지적했을 때, ""우리는 우리 직원들을 신뢰한다""는 답변과 ""우리는 보안 감사를 통과했다""는 답변을 받음.
     * 새로운 직장에 갈 때 누군가가 ""더 쉽기 때문에"" 많은 권한을 할당하는 것을 싫어함. 그렇게 하지 말아야 함. 회사에 노출되는 것뿐만 아니라 원하지 않는 책임을 지게 됨. 실수로 중요한 것을 망칠 수도 있고, 해킹당하면 권한이 있기 때문에 내가 한 것으로 의심받을 수도 있음.
     * 이것이 ""실수""로 간주되는 이유는 무엇인가? Microsoft에서 관리자로 일하는 스파이의 행동일 수도 있음.
"
"https://news.hada.io/topic?id=13137","무한 제작 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                무한 제작 기술

물, 불, 바람, 대지의 요소를 조합하여 창조하기

     * 이 내용은 사용자가 물, 불, 바람, 대지와 같은 기본 요소들을 조합하여 새로운 것을 만들어내는 과정을 다루고 있음.
     * 사용자는 주어진 요소들을 서로 다른 방식으로 결합하여 시간에 따라 정렬할 수 있음.
     * 이는 아마도 게임이나 어떤 창의적 활동을 위한 인터페이스를 설명하고 있는 것으로 보임.

GN⁺의 의견

     * 이 글은 사용자가 기본적인 요소들을 조합하여 새로운 것을 창조하는 인터랙티브한 활동을 소개하고 있음.
     * 창조적 사고를 자극하고, 다양한 조합을 통해 새로운 결과물을 탐색하는 과정이 흥미롭고 교육적일 수 있음.
     * 이러한 활동은 게임, 교육 프로그램, 혹은 창의력을 키우는 툴로서 사람들에게 도움이 될 수 있으며, 특히 어린이나 학생들에게 유익할 것으로 보임.

        Hacker News 의견

     * 유니콘과 더블 레인보우는 서로 쌓을 수 없음을 발견함.
     * 카이주(Kaiju)에 대한 탐구를 통해 다양한 몬스터를 창조함. 드래곤과 레이저를 결합해 드래곤조드를 만들고, 이를 다른 요소들과 결합해 새로운 몬스터들을 창조함. 이 과정이 더욱 황당해질수록 재미를 느낌.
     * 아이템을 결합할 때마다 백엔드로 요청이 가고 때로는 500ms 이상 걸림. 이는 LLM(Large Language Model)을 사용하여 조합을 도출하는 것 같음. 이모지 아이콘 사용도 ChatGPT에게 불과 몇 초 만에 결과를 요청할 수 있기 때문에 가능함.
     * 실제 게임이었으면 좋겠음. 원하는 아이템을 만들기 위해 여러 아이템을 조합해야 하고, 플레이할 때마다 무작위로 변함. 키보드만으로 플레이할 수 있게 해주면 좋겠음.
     * 브라우저에서 작동하지 않는 것 같음. 아이템을 서로 위에 끌어다 놓아야 변화가 일어남을 알게 됨.
     * '라이언'이라는 결과물을 만듦. 누구인지, 어떤 조합으로 만들어졌는지는 기억나지 않지만 재미있음. 트랙터 몬스터, 비행하는 젖은 토스트, 비행하는 건조한 토스트, 눈사람 면인간, 비행 스파게티 몬스터, 유니콘 토스트, 아이슬란드 등을 창조함.
     * 팀과 함께 많은 회사, 개발자, 책 저자들을 위한 고스트 개발자로 활동함. 매크로미디어/어도비 플래시의 전성기에 인체 해부학을 가르치기 위한 학습 도구를 만듦. 교사들이 다양한 조합을 만들 수 있는 도구를 만들어 거의 무한한 수업 변형을 제공함. 최종 고객은 피어슨 출판사였고, 수상도 했음. 클라이언트는 좋은 사람이었고, 마음에 드는 제품을 만들어준 보상으로 추가 비용을 지불함.
     * 이는 littlealchemy.com 또는 littlealchemy2.com과 매우 유사함.
     * 해커 뉴스에서 '인피니트 크래프트'라는 제목의 기사를 666점으로 본 것은 무섭지만, 물론 우연일 것임.
     * AI는 상식이 전혀 없음을 잘 보여줌. 대부분의 조합 결과는 말도 안 되는 것들임. 조합이 매우 모호하고, 전혀 관련 없는 것들로부터 무작위로 나타나는 그림과 단어들을 보는 것은 전혀 흥미롭지 않음. 하지만 모든 조합이 사전에 정의되어 있고 실제로 맞는 느낌을 주는 인간이 만든 연금술 게임은 매우 좋아함.
"
"https://news.hada.io/topic?id=13120","연구자들, 정수 선형 프로그래밍을 더 빠르게 처리하는 방법 발견","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  연구자들, 정수 선형 프로그래밍을 더 빠르게 처리하는 방법 발견

정수 선형 프로그래밍의 새로운 속도 한계에 접근하는 연구자들

     * 정수 선형 프로그래밍(ILP)은 다양한 실제 문제의 해답을 찾는 데 도움을 줌.
     * 연구자들은 ILP를 훨씬 빠르게 수행할 수 있는 새로운 방법을 발견함.

여행하는 세일즈맨 문제 소개

     * 여행하는 세일즈맨 문제는 가장 오래 알려진 계산 문제 중 하나로, 최소 마일리지를 사용하여 특정 도시 목록을 통과하는 이상적인 경로를 찾는 것을 요구함.
     * 이 문제는 단순해 보이지만 악명 높게 어려움을 가지고 있으며, 무차별 대입 방식으로 모든 가능한 경로를 확인하는 전략은 도시 수가 소수를 넘어서면 실행 불가능해짐.
     * 대신, 선형 프로그래밍이라는 엄격한 수학적 모델을 적용하여 문제를 방정식 집합으로 대략 근사하고 가능한 조합을 체계적으로 확인하여 최상의 해결책을 찾음.

정수 선형 프로그래밍의 중요성

     * 때로는 전체 숫자로 문제를 최적화해야 할 필요가 있음.
     * 정수 선형 프로그래밍(ILP)은 생산 계획, 항공 승무원 스케줄링, 차량 라우팅을 포함한 이산 결정이 관련된 응용 프로그램에서 인기가 있음.
     * ILP는 이론과 실제 모두에서 운영 연구의 핵심이라고 조지아 공과대학교의 컴퓨터 과학자 Santosh Vempala가 말함.

ILP 알고리즘의 발전

     * ILP를 처음 공식화한 이후 60년이 넘는 시간 동안 연구자들은 ILP 문제를 해결하는 다양한 알고리즘을 발견했지만, 모두 상대적으로 느린 단계 수가 필요했음.
     * 최근 Victor Reis와 Thomas Rothvoss의 연구로 수십 년 만에 가장 큰 실행 시간 도약을 이룸.
     * 이들은 기하학적 도구를 결합하여 가능한 해결책을 제한하고, 이진 케이스와 거의 동일한 시간에 ILP를 해결하는 새로운, 더 빠른 알고리즘을 만듦.

ILP 문제 해결 방법

     * ILP는 주어진 문제를 일련의 선형 방정식으로 변환하고, 이 방정식들이 일부 부등식을 만족해야 함.
     * 이 방정식들은 원래 문제의 세부 사항에 기반을 두고 있지만, ILP 문제의 기본 구성은 동일하여 연구자들이 다양한 문제를 공격할 단일 방법을 제공함.

ILP 알고리즘의 이론적 이해

     * 새로운 알고리즘은 아직 실제 로지스틱 문제를 해결하는 데 사용되지 않았지만, 이는 이론적 문제에 대한 이해가 중요하다는 것을 의미함.
     * ILP의 계산 효율성을 더욱 향상시킬 수 있는지에 대해 연구자들은 여전히 희망적이지만, 이는 근본적으로 새로운 아이디어가 필요함.

GN⁺의 의견

     * 이 연구는 컴퓨터 과학과 수학의 교차점에서 중요한 발전을 나타냄. 특히, 복잡한 로지스틱 문제를 해결하는 데 사용되는 ILP의 효율성을 크게 향상시킬 잠재력을 가지고 있음.
     * 새로운 알고리즘은 실제 응용 프로그램에 적용되기 전에 여전히 많은 작업이 필요하지만, 이론적 이해의 진전은 미래의 알고리즘 개선과 관련 기술의 발전에 중요한 기여를 할 수 있음.
     * 이 기사는 컴퓨터 과학 분야의 연구자들과 수학적 문제 해결에 관심 있는 사람들에게 흥미로운 소식을 제공하며, 복잡한 문제를 해결하기 위한 새로운 접근 방식의 중요성을 강조함.

        Hacker News 의견

     * NP-완전 문제의 알고리즘 상한을 낮추는 것은 매우 흥미로운 일이지만, 실제 문제를 해결하는 데 있어 실행 시간을 개선하는 것과 직접적인 관련이 없을 수 있음.
          + 혼합 정수 프로그래밍(MIP) 솔버는 다양한 알고리즘과 휴리스틱을 사용함.
          + 휴리스틱과 전략의 라이브러리 구축은 MIP 솔버의 개선이 무어의 법칙을 뛰어넘는 이유임.
          + 1990년부터 2014년까지 하드웨어의 개선은 6500배였지만, 소프트웨어의 개선은 870000배의 성능 향상을 담당함.
          + 참조된 논문은 MIP 솔버의 지속적인 성능 향상에 있어 또 다른 퍼즐 조각이 될 수 있지만, 확실한 것은 아님.
     * 새로운 알고리즘은 아직 실제 물류 문제를 해결하는 데 사용되지 않았음.
          + 오늘날의 프로그램을 업데이트하는 데 너무 많은 작업이 필요하기 때문임.
          + 그러나 Rothvoss에 따르면, 이는 기본적인 응용을 가진 문제에 대한 이론적 이해에 관한 것임.
     * ""Integer Linear Programming""이라는 제목은 정수 부분이 훨씬 더 중요하기 때문에 명시되어야 함.
          + 선형 프로그래밍에 대한 다항 시간 알고리즘은 수십 년 동안 알려져 왔지만, 정수 선형 프로그래밍은 NP-난해함.
     * 소프트웨어 엔지니어들은 선형 프로그래밍에 대해 배워야 함.
          + 많은 문제들이 선형 최적화로 표현될 수 있음.
          + 예를 들어, 당구공을 삼각대에 올바른 시작 위치에 놓기 위한 평균 최소 교환 횟수에 대한 문제를 선형 프로그래밍을 사용하여 해결할 수 있음.
     * 이 논문은 Space Groups를 직접적으로 살펴보지는 않지만, 문제 ""공간""의 단순화를 일반화하는 데 사용될 수 있는지 여부를 살펴보는 것이 흥미로울 것임.
          + 저자는 건축가로서 수학자는 아니지만, 생성된 벌집을 통한 경로를 살펴보는 사람으로서 이 결과가 더 많은 조사가 필요함을 시사함.
     * 여행하는 세일즈맨 문제에 대한 Sapolsky의 책 ""Determined: A Science of Life without Free Will""에서 인용한 내용이 소프트웨어 개발자들에게는 관련이 없을 수도 있지만 여전히 매혹적임.
          + 개미는 음식을 찾아 여덟 곳을 확인하며, 이는 유명한 ""여행하는 세일즈맨 문제""의 한 버전임.
          + 컴퓨터 과학자들은 ""가상 개미""를 사용하여 이러한 문제를 해결할 수 있으며, 이는 이제 군집 지능으로 알려져 있음.
     * 저자는 1985/86년에 스탠포드 대학에서 운영 연구를 공부하고 George Dantzig의 수업을 들었지만, 운영 연구가 아닌 소프트웨어 엔지니어가 되었음.
          + 선형 프로그래밍 알고리즘에 대해 많은 것이 배워졌다는 것을 보고 흥미로움을 느낌.
     * 많은 이산 최적화 문제들이 선형 프로그램으로 변환될 수 있음.
          + SAT 솔버와 같은 매우 강력한 도구 세트임.
     * 이론적 복잡성은 심플렉스보다 내부 점 방법이 LP에 대해 더 좋을 수 있지만, 현실에서는 잘 조정된 심플렉스가 거의 항상 승리함.
"
"https://news.hada.io/topic?id=13075","HN 소개: 교육용 YouTube 동영상을 활용한 Anki/Duolingo 형식 앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             HN 소개: 교육용 YouTube 동영상을 활용한 Anki/Duolingo 형식 앱

커뮤니티에서 인기 있는 플래시카드

     * 텍사스는 다음 캘리포니아가 되지 않을 것임
     * 이 나라들은 당신이 가는 것을 허락하지 않음
     * 그리스가 갑자기 잘하고 있음
     * 아프가니스탄이 여전히 충돌 지역인 이유
     * 전쟁의 기원 (기원전 500,000년–기원전 3,000년)
     * 건축 공사에서의 기초/바닥 유형
     * 프랑스어 철자는 그렇게 나쁘지 않음
     * 초콜릿의 놀라운 역사

추천 미니 코스/플레이리스트

     * 생물학
     * 물리학
     * 철학
     * 화학
     * 생태학
     * 언어학
     * 수학
     * 심리학
     * 공학
     * 지리학
     * 도시 계획
     * 인류학
     * 언어 학습
     * 역사
     * 인문학
     * 예술

GN⁺의 의견

     * 이 웹사이트는 유튜브를 활용하여 다양한 학문적 주제를 재미있게 배울 수 있는 게임화된 학습 플랫폼을 제공함.
     * 사용자들은 인기 있는 플래시카드와 미니 코스를 통해 지식을 효과적으로 습득할 수 있으며, 이는 학습에 대한 동기를 부여할 수 있음.
     * 다양한 학문 분야를 커버하고 있어, 사용자가 관심 있는 분야를 선택하여 깊이 있게 탐구할 수 있는 기회를 제공함.

        Hacker News 의견

     * 이 프로젝트에 대한 첫 번째 댓글은 AI가 만든 질문들이 실제로 관련성이 있고 명확하게 답변할 수 있는 것에 대해 놀라움을 표현함. 그러나 교육적 가치가 높은 실제 교육 영상과 '교육적 오락' 영상을 구분할 수 있는 기능을 추가할 것을 제안함.
          +

     이 프로젝트는 놀랍고, AI가 만든 질문들이 관련성 있고 명확함. 그러나 교육적 가치가 높은 영상과 오락적 영상을 구분할 수 있는 기능 추가가 필요함.
     * 두 번째 댓글은 프로젝트가 언어 학습에 관한 것으로 생각했지만, 실제로는 영상을 보면서 정보를 유지하는 데 도움이 되는 좋은 아이디어라고 평가함.
          +

     프로젝트가 언어 학습과 관련된 것으로 오해했지만, 영상을 통한 정보 유지에 도움이 되는 좋은 아이디어임.
     * 세 번째 댓글은 프로젝트에 대한 긍정적인 평가와 함께, 첫 질문이 영상의 스폰서가 누구인지에 관한 것이어서 웃음이 나왔다고 언급함.
          +

     프로젝트에 대한 긍정적인 평가와 함께 첫 질문이 영상의 스폰서에 관한 것이라는 재미있는 경험 공유.
     * 네 번째 댓글은 프로젝트가 음악 영상에도 잘 작동하며, 특히 Pantera의 가사에 대한 새로운 인식을 갖게 되었다고 언급함. 그러나 모바일 URL을 처리하지 못하는 작은 버그가 있음을 지적함.
          +

     프로젝트가 음악 영상에도 효과적이지만, 모바일 URL을 처리하지 못하는 작은 버그가 있음.
     * 다섯 번째 댓글은 위키피디아에 이와 같은 기능을 추가하는 것에 대한 관심을 표현하며, 최근에는 정보를 빠르게 컴파일하는 능력을 키우는 데 집중하고 있다고 언급함.
          +

     위키피디아에 비슷한 기능을 추가하는 데 관심이 있으나, 정보를 빠르게 컴파일하는 능력 향상에 더 집중하고 있음.
     * 여섯 번째 댓글은 아이디어를 좋아하지만, 가짜 댓글을 추가하는 새로운 계정들을 보고 의심스러움을 느낌.
          +

     아이디어는 좋으나 가짜 댓글을 달고 있는 새로운 계정들로 인해 의심스러움을 표현함.
     * 일곱 번째 댓글은 이러한 프로젝트를 오랫동안 만들거나 보고 싶어 했던 것이며, 디자인이 직관적이고 좋다고 평가함. 또한 30분짜리 영상 제한을 우회하기 위해 자체 호스팅이 가능한지 물음.
          +

     프로젝트에 대한 기대감을 표현하고, 디자인이 직관적이라고 평가함. 30분 영상 제한을 우회할 수 있는 방법에 대한 문의.
     * 여덟 번째 댓글은 AI를 구조화된 앱의 일부로 사용하는 것이 단순한 챗봇보다 훌륭한 응용이라고 평가함.
          +

     AI를 구조화된 앱의 일부로 사용하는 것이 챗봇보다 더 훌륭한 응용이라고 평가함.
     * 아홉 번째 댓글은 유튜브 API의 제한 때문에 비공식 API를 사용해야 했던 개인적인 경험을 공유하며, 프로젝트에 더 나은 운이 있기를 바람.
          +

     유튜브 API의 제한으로 인해 비공식 API를 사용했던 경험을 공유하며, 프로젝트에 더 나은 운이 있기를 바람.
     * 열 번째 댓글은 프로젝트에 대한 사랑을 표현하며, 영상을 제출하고 질문에 답한 후에 나타나는 '새로운 영상' 섹션이 실제로는 아직 PlatoEdu에 업로드되지 않은 영상들임을 알고 놀랐다고 언급함. 이에 대한 기대와 달리, 클릭했을 때 영상이 업로드되기 시작했다는 점에서 혼란을 느낌.
          +

     프로젝트에 대한 애정을 표현하고, '새로운 영상' 섹션에 대한 혼란을 공유함.
"
"https://news.hada.io/topic?id=13144","Adobe, Figma 인수 무산이후 웹-디자인 제품 개발 포기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Adobe, Figma 인수 무산이후 웹-디자인 제품 개발 포기

     * 어도비는 200억 달러 규모의 인수 제안이 무산된 후 피그마에 대항할 웹 디자인 제품을 만들기 위한 노력을 중단할 예정
     * 피그마를 인수하기로 합의했을 때, 어도비는 경쟁 프로그램인 XD를 '유지 관리 모드'로 전환하여 새로운 기능을 출시하거나 개별적으로 판매하는 것을 중단했음
     * 12월에 피그마 인수 계약은 규제 당국의 압력으로 무산되었고, 어도비는 XD를 부활시킬지 아니면 다른 경쟁제품을 만들지 발표하지 않았으나, 지난 화요일 Adobe XD의 대변인이 ""우리는 더 이상 투자할 계획이 없습니다."" 라고 말함
     * 피그마는 최근 몇 년 동안 어도비의 XD를 괴롭혔음
          + 어도비 법률 고문인 다나 라오는 2022년에 XD의 스탠드얼론 연간 반복 매출이 1,700만 달러에 불과하고 개발자가 19명뿐이라고 말한바 있음
          + 일부 월스트리트 애널리스트들은 피그마에 투입될 수십억 달러의 자금이 확보된 상황에서 Adobe가 또 다른 경쟁 제품 디자인 앱을 만들려고 시도할지 궁금해했음
     * 대변인은 회사가 이 분야의 다른 회사와 파트너십을 모색하는 데 열려 있다며

     ""우리는 이미징, 사진, 디자인, 웹, 애니메이션, 3D는 물론 Express와 Firefly에 걸쳐 우리가 가진 기회에 집중하고 있습니다."" 라고 말함

  Hacker News 의견

     * Figma는 Adobe의 경쟁사를 인수하려는 시도 없이도 소프트웨어 분야에서 사실상의 선택이 될 수 있음을 보여주었고, 이는 Adobe가 경쟁에서 밀려 인수를 시도한 것으로 보임.
     * Adobe가 Figma를 소유하는 것이 Figma를 개선하거나 건강한 발전을 이끌 것이라는 약속은 아니었음.
     * Figma가 20억 달러의 제안을 받아들인 것을 비난할 수는 없지만, 실제로 팔릴 필요가 있었는지는 불분명함.
     * Figma는 이제 10억 달러의 위약금을 사용하여 자사의 위치를 강화하는 데 놀라운 작업을 할 수 있음.
     * Adobe가 Figma를 인수하지 못한 후 Adobe XD를 종료하는 것은 Adobe가 Figma의 좋은 소유주가 되지 못했을 것임을 의미함.
     * Figma가 XD의 경쟁자로서 혁신을 이끌고 가격을 조절했는데, 이제 Figma가 독점자가 되었다는 점과 Adobe CC와 별도로 Figma를 구매해야 한다는 점에 실망함.
     * Adobe InDesign에 대한 경쟁이 더 있었으면 하는 바람과 Affinity Designer/Publisher, Scribus, LaTeX 등 대안에 대한 의견을 공유함.
     * Figma가 오픈소스가 아니지만 리눅스에서 웹 클라이언트를 사용할 수 있으며, Figma가 인쇄 디자인 분야로 확장할 가능성에 대한 호기심을 표현함.
     * Figma, Adobe 등이 폐쇄적인 파일 형식과 다른 회사의 제품과 호환되지 않는 제품군으로 팀을 비싼 구독에 묶어두려는 잘못된 동기를 가지고 있다고 비판함.
     * Adobe가 그래픽 프로그래밍 분야에서 전문성을 가지고 있음에도 벡터 디자인 프로그램을 만들지 못하는 것이 믿기 어렵다고 언급함.
     * Adobe XD가 거의 완성 단계에 있었고, 플러그인 생태계를 위해 Chrome 렌더링 엔지니어를 데려오는 등 좋은 결정을 내렸다고 평가함.
     * Adobe 내부의 기업 정치에 대한 내부자의 이야기를 읽고 싶다는 의견을 표현함.
     * 그래픽 작업을 하는 사람들이 많음에도 불구하고 사용할 수 있는 앱이 적은 반면, 오디오 작업을 하는 사람들은 적지만 훨씬 많은 경쟁 제품이 있다는 점에 대한 의문을 제기함.
     * Microsoft가 Adobe XD를 UWP 애플리케이션의 한 예로 소개했던 것을 회상함.
     * Adobe가 Figma 거래를 할 때 XD 팀을 해고했다는 추측을 공유함.
     * XD를 좋아하는 소수 의견을 표현하며, XD가 다른 Adobe 제품과 달리 필요한 기능을 제공하고 사용하기 쉬워서 XD가 중단되는 것에 대해 안도하는 경영진이 있을 것이라고 상상함.
"
"https://news.hada.io/topic?id=13115","로블록스가 인프라를 더 효율적이고 복원력 있게 만드는 방식","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    로블록스가 인프라를 더 효율적이고 복원력 있게 만드는 방식

     * 게임 회사 로블록스는 2021년 10월 시스템 전체가 중단되는 일이 있었음
     * 이 문제는 한 데이터 센터의 어느 한 컴포넌트의 이슈로 작게 시작함
     * 문제가 빠르게 확산해 시스템이 73시간 동안 중단됨
     * 그 이후로 로블록스는 극심한 트래픽 급증, 날씨, 하드웨어 고장, 소프트웨어 버그, 사람 실수와 같은 요인 때문에 모든 대규모 시스템에 일어나는 장애 유형에 인프라 복원력을 높이려 노력함
     * 로블록스는 ‘이러한 장애가 일어날 때, 우리는 단일 컴포넌트 또는 컴포넌트 그룹의 이슈가 전체 시스템에 확산하지 않도록 어떻게 할 수 있을까?’ 고민함
     * 이에 문제를 해결하려 노력을 기울였고 2023년 상반기에는 전년 같은 기간과 비교해 한 달에 1억2500만 참여 시간을 절약함
"
"https://news.hada.io/topic?id=13125",""Emacs를 예쁘게 보이게 하고 싶었을 뿐 – 터미널에서 24비트 색상 사용"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ""Emacs를 예쁘게 보이게 하고 싶었을 뿐 – 터미널에서 24비트 색상 사용""

Emacs를 예쁘게 만들고 싶었다 — 터미널에서 24비트 색상 사용하기

     * Emacs 커뮤니티가 활성화되어 있으며, LSP를 통해 현대적인 자동완성 및 인라인 타입 검사 기능을 제공함.
     * 그래픽 환경에서 Emacs는 자동으로 24비트 색상을 지원하지만, 터미널에서는 그렇지 않음.

  ANSI 이스케이프 코드

     * 초기 하드웨어 터미널은 서로 호환되지 않는 제어 코드를 제공했으며, ANSI는 이를 표준화함.
     * SGR(Select Graphics Rendition)을 통해 다양한 문자 디스플레이 속성을 설정할 수 있음.

  3-, 4-, 8비트 색상

     * 색상이 도입되었을 때 8가지 기본 색상이 있었으며, 나중에 밝은 색상을 추가하여 총 16가지 색상이 됨.
     * 1999년 Todd Larason이 xterm에 256색상을 지원하는 패치를 추가함.

  24비트 색상 지원은 어디에서 왔는가?

     * 8비트 및 24비트 색상을 호환 터미널로 보내는 방법은 잘 문서화되어 있음.
     * 70년대 ANSI 표준화 과정과 90년대 ISO 8613-6 (ITU T.416)을 통해 38과 48이 확장된 전경 및 배경 색상 모드로 정의됨.

  Terminfo

     * Terminfo는 터미널 기능의 데이터베이스를 제공하며, TERM 환경 변수를 통해 프로그램이 어떤 terminfo 레코드를 사용할지 알려줌.
     * xterm-256color와 xterm-direct는 각각 256색상과 RGB 색상을 지원함.

  TERM 설정: 세미콜론 문제

     * 여러 터미널에서 세미콜론 구문만 지원하므로, TERM이 올바르게 설정되어 있는지 확인해야 함.

  Emacs 설정

     * Emacs는 truecolor 지원을 감지하는 방법을 문서화하고 있음.
     * RGB는 Emacs의 기본 색상 기능으로, setf24와 setb24 문자열을 먼저 찾음.

  중첩된 터미널

     * 일반적인 워크플로우는 여러 터미널을 중첩하여 사용함.
     * 모든 레이어가 24비트 색상을 이해하고 정확하게 변환해야 함.

    그래픽 터미널 에뮬레이터

     * 대부분의 터미널은 TERM을 합리적인 기본값으로 설정하거나 오버라이드할 수 있음.

    ssh

     * ssh는 원격 호스트로 TERM 값을 전달함.

    tmux

     * tmux 내에서는 tmux-direct와 같은 TERM을 설정해야 함.

GN⁺의 의견

     * 이 글에서 가장 중요한 것은 터미널 환경에서도 고품질의 색상을 사용하고자 하는 사용자의 요구와 이를 가능하게 하는 기술적인 발전임.
     * 24비트 색상 지원은 개발자들이 더 나은 사용자 경험을 제공할 수 있게 해주는 중요한 기능으로, 특히 코드 편집기와 같은 도구에서 시각적인 편의성을 크게 향상시킴.
     * 이 글은 터미널과 Emacs 사용자들에게 흥미롭고 도움이 될 것이며, 터미널 기반 작업 환경에서도 뛰어난 시각적 경험을 추구하는 사용자들에게 유용한 정보를 제공함.

        Hacker News 의견

     * 터미널 애플리케이션의 복잡성에 대해 놀라움을 표현하며, iTerm과 Kitty와 같은 터미널 애플리케이션 개발자들에게 감사함을 전함.
          + iTerm과 zsh를 위한 탭 색상 설정 함수를 모아둔 링크를 공유함.
          + terminfo와 구식 telnet을 통한 HTTP 또는 SMTP 연결 방식을 비교하며, 텍스트 기반 인터페이스의 복잡성을 지적함.
     * 개인적으로 터미널 앱마다 16색 팔레트를 조정하는 것이 애플리케이션 측 터미널 코드를 정확하게 맞추는 것보다 쉽다고 생각함.
          + .Xdefaults 파일과 사용자 정의 테마 .el 파일에서 색상을 설정하는 코드 예시를 제공함.
          + 이를 통해 ls 출력 등의 색상도 더 나아짐을 언급함.
     * 저자가 ""export COLORTERM=truecolor""를 알았다면 더 나은 경험을 했을 것이라고 추측함.
          + 이는 Emacs 문서의 각주에서 truecolor 지원 감지에 대해 언급되며, Konsole 스크린샷에서도 나타나지만, 터미널 멀티플렉서의 여러 계층 속에서 놓칠 수 있음을 지적함.
          + 이 설정을 통해 복잡한 설정을 건너뛰고 애플리케이션이 true color를 원한다는 것을 이해하게 만드는 단계로 바로 넘어갈 수 있음을 설명함.
     * Emacs를 사용할 때 반드시 터미널을 사용할 필요는 없으며, MacOS, Windows, X.org 또는 Wayland용 ""그래픽"" 프론트엔드를 사용할 수 있음을 강조함.
          + 그래픽 Emacs는 터미널에서 실행되는 것처럼 보이지만, 실제로는 이미지 뷰어를 포함한 다양한 기능을 가짐을 언급함.
          + Emacs 사용자 설문조사에서 80%가 그래픽 프론트엔드를 사용한다고 답함.
     * 컴퓨팅이 1970년대 터미널 에뮬레이터와 편집기, 운영 체제 버전을 사용하는 생산 시스템을 통해 방향을 잃었을 수 있음을 지적함.
          + 컴퓨터가 수백만 배 더 강력해졌음에도 불구하고, 여전히 반세기 전과 같은 방식으로 작업을 수행하고 있음을 비판함.
     * Cool Retro Term을 사용하여 Emacs를 더 멋지게 보이게 하고 싶어함을 농담으로 표현함.
          + 실제로는 프레젠테이션을 위해서만 Cool Retro Term을 사용함을 밝힘.
          + 자신의 Emacs가 상자에서 24비트 색상을 지원한다는 것을 발견하고, 문법 강조가 약간 성가시다고 언급함.
     * Windows 10 명령 프롬프트에서 표준 ANSI 이스케이프 시퀀스가 작동하며, 24비트 색상도 잘 작동한다는 것을 발견함.
          + 빨간색 배경으로 ""Hello""를 출력하는 예시 코드를 제공함.
     * Emacs가 vim/neovim과 비교하여 GUI 지원이 일급 시민으로 취급된다는 것이 가장 좋은 점임을 언급함.
          + gVim과 수많은 미완성 neovim 프론트엔드가 있지만, Emacs는 기본적으로 진정한 GUI를 통해 실행됨을 선호함.
          + 터미널에는 현대에는 불필요한 역사적 잔재와 제한이 많다고 지적함.
          + 원격 서버에서 Emacs를 실행하는 문제가 있다면 TRAMP와 emacsclient(TCP를 통해 작동하는지 여부)를 사용할 수 있음을 언급함.
     * 색상을 최소한으로 사용하는 Emacs 설정을 사용하기 때문에 이 기능을 사용하지 않을 것이라고 하면서도, 읽는 것을 매우 즐겁게 생각함을 표현함.
          + tmux의 선명한 녹색과 Emacs 색상의 녹슨 빨간색 갈색에 익숙해짐을 언급함.
     * 표준이 높은 가격에 묶여 있어 사람들이 구매하지 않고도 이러한 길이를 갈 수밖에 없는 것은 정말 부끄러운 일임을 비판함.
          + 표준은 공개적으로 이용 가능해야 하며, 과거에는 인쇄 비용을 청구하는 것이 타당했을 수 있지만, PDF가 $200인 것은 믿을 수 없음을 지적함.
"
"https://news.hada.io/topic?id=13112","Show HN: 웹 기반 보드 게임 제작을 위한 프레임워크, Boardzilla","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Show HN: 웹 기반 보드 게임 제작을 위한 프레임워크, Boardzilla

Boardzilla 디지털 보드 게임

     * Boardzilla는 브라우저 내에서 보드 게임을 쉽게 플레이하고 개발할 수 있는 공간임.
     * 사용자에게 간단한 인터페이스를 제공하여 게임 규칙을 쉽게 표현하고, 플레이어가 선택할 수 있는 옵션들을 제공함.
     * 게임 개발에 관심이 있다면, 문서를 읽어볼 것을 권장함.

사용 가능한 게임들

     * 7 Wonders Duel: 2명의 플레이어를 위한 게임
     * Cursed: 1명의 플레이어를 위한 게임
     * Hex: 2명의 플레이어를 위한 게임
     * Power Grid: 2명에서 4명의 플레이어를 위한 게임

GN⁺의 의견

     * Boardzilla는 디지털 보드 게임을 즐기고 싶은 사람들과 게임 개발자들에게 매우 유용한 플랫폼임.
     * 다양한 플레이어 수에 맞춘 게임 제공으로 개인 또는 그룹 모두에게 적합함.
     * 게임 개발 문서를 제공함으로써, 초보 개발자들도 자신만의 게임을 만들어볼 수 있는 기회를 제공함.

        Hacker News 의견

     * 타입스크립트와 CSS를 사용하고 있으나, 서버에서 파이썬을 지원해주길 바라는 의견이 있음. 현재 BGA를 사용하는 개발자와 출판사들이 Asmodee의 비즈니스 모델로 인해 불안해하고 있어 타이밍이 좋다고 언급함. 다른 게임 플랫폼들의 기술 스택에 대한 정보와 파이썬 통합 요청이 있음.
          + BGA Studio: JS/CSS + PHP (클라이언트와 서버) + MySQL
          + Yucata.de: JS + HTML + .NET 4.5 (서버)
          + TTS: Lua 사용 (객체지향이 아니라는 비판 포함)
          + 2021년 보드게임 소프트웨어 리뷰 링크 제공
     * 다양한 기능을 가진 게임 엔진에 대해 긍정적인 평가를 하면서도, 해당 시스템을 사용하여 온라인으로 플레이 가능한 프로그래매틱 버전을 만드는 데 어려움을 겪고 있음. 문서를 통해 카드 지원이 확인되었으나, 구체적인 변경 사항을 알기 어렵다고 언급하며 단계별 튜토리얼의 필요성을 제기함.
     * 프로젝트 이름에 'Zilla' 접미사 사용을 피하라는 조언이 있음. 과거에 'Zilla' 접미사를 사용한 사례에서 법적 문제가 발생했기 때문임.
     * 웹 게임으로 만들고 싶은 보드 게임 프로토타입이 많다며, 일반 보드 게임 라이브러리를 위한 함수를 작성해본 경험이 있으나, 다른 프로젝트를 병행하면서 제대로 진행하지 못했다고 함. BGA 플랫폼의 학습 곡선이 높고 PHP를 선호하지 않으며, 문서가 여러 곳에 흩어져 있다고 비판함.
     * 동시에 여러 플레이어의 행동을 허용하는 'everyPlayer' 흐름 명령어에 대해 긍정적인 평가를 하며, 다른 보드게임 프레임워크에서는 이 기능이 빠져 있다고 언급함.
     * BGA 대안을 개발하는 데 있어서 출판사의 허가가 필요하며, BGA가 Asmodee 소유이기 때문에 허가를 받기 어려울 것이라는 의견이 있음. 그럼에도 불구하고 좋은 시도라고 평가함.
     * screentop.gg가 이미 해당 분야에서 견고하고 확립된 옵션이라고 언급하며, 해당 시스템에서 게임을 만드는 것이 쉽다고 함.
     * Funkenschlag에 대한 허가를 받았는지, 왜 타입스크립트를 사용하는지, 그리고 플레이어의 게임 방해 행위나 부정 행위를 어떻게 관리할 계획인지에 대한 질문이 있음. BGA와 TTS 중 어느 쪽과 더 유사한지에 대한 질문도 있음.
     * AI 봇을 위한 프론트엔드로서 로컬 테스팅에 유용할 수 있다며 관심을 보이는 의견이 있음.
     * 자신이 선호하는 컴파일-투-JS 언어를 사용하여 게임을 개발할 수 있는지에 대한 질문이 있음. 게임 인프라가 타입스크립트 사용을 강제하는지에 대한 궁금증을 표함.
"
"https://news.hada.io/topic?id=13031","Microsoft TypeSpec - TypeScript에서 영감을 받은 API 정의용 언어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Microsoft TypeSpec - TypeScript에서 영감을 받은 API 정의용 언어

     * 데이터 설명을 통해서 스키마, API Spec, 클라이언트/서버 코드, 문서등을 생성 가능
     * API 정의를 위한 경량 언어 셋
          + REST, OpenAPI, GraphQL, gRPC 및 기타 프로토콜 간에 공통된 API 형식을 설명할 수 있는 확장성이 뛰어난 핵심 언어 프리미티브를 제공
          + API의 모든 측면에 대해 재사용 가능한 패턴을 생성할 수 있으며, 알려진 안티 패턴을 확인하고 플래그 지정 가능
     * 기존 툴체인과 쉽게 연동됨
     * OpenAPI 3.0, JSON Schema 2020-12, Protobuf, JSON RPC 등 여러 프로토콜 지원
     * VS Code / Visual Studio 확장 제공
"
"https://news.hada.io/topic?id=13044","Apple, 유럽연합 내 iOS, Safari, App Store 변경 사항 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Apple, 유럽연합 내 iOS, Safari, App Store 변경 사항 발표

     * 애플은 유럽연합(EU) 내 개발자들의 앱에 영향을 미치는 iOS, Safari, 앱 스토어의 변경 사항을 발표함
     * 600개 이상의 신규 API, 확장된 앱 분석 정보, 외부 브라우저 엔진을 위한 기능, 앱 결제 및 iOS 앱 배포 절차와 관련된 새로운 선택권 등이 포함
     * 모든 변경 사항에 걸쳐 애플은 EU 사용자에게 새로운 위험을 줄이는 새로운 안전 조치를 도입함

iOS 변경 사항

     * 유럽연합에서 디지털 시장법을 준수하기 위해 iOS에 많은 변경 사항을 도입
          + 외부 앱 마켓플레이스에 iOS 앱을 배포할 수 있는 새로운 선택지 : 개발자가 iOS 앱을 외부 앱 마켓플레이스에서 제공할 수 있도록 만들어주는 새로운 API 및 도구를 포함
          + 외부 앱 마켓플레이스 형성을 위한 새로운 프레임워크 및 API : 마켓플레이스 개발자가 다른 개발자 대신 전용 마켓플레이스 앱에서 앱을 설치하고 업데이트할 수 있음
          + 외부 브라우저 엔진을 위한 신규 프레임워크 및 API : 개발자가 브라우저 앱 및 인앱 브라우징 경험을 제공하는 앱에 WebKit 이외의 브라우저 엔진을 사용할 수 있음
          + 상호운용성 요청 양식 : 개발자가 iPhone 및 iOS의 하드웨어, 소프트웨어 기능간 상호운용성을 추가 요청하는 양식을 제출할 수 있음
     * 비접촉 결제 방식에 영향을 미칠 디지털 시장법 준수를 위한 변경 사항을 공유
          + 유럽경제지역 전역의 개발자가 은행 및 지갑 앱에서 NFC 기술을 이용할 수 있도록 만들어주는 새로운 API가 포함
          + 유럽연합 내 사용자가 서드파티 비접촉 결제 앱 또는 기타 앱 마켓플레이스를 기본값으로 설정할 수 있도록 해주는 새로운 제어 옵션을 도입
          + 위험 요소를 줄이기 위해 보호장치 도입
               o iOS 앱 공증 : 배포 채널과 관계없이 모든 앱에 적용되는 기본 검토 방침으로, 플랫폼 무결성 및 사용자 보호에 집중한다. 공증 절차에는 자동 검사 및 수동 심사 과정이 함께 포함되어 있다.
               o 앱 설치 시트 : 공증 과정에서 생성된 정보를 활용해 앱 다운로드 전 앱에 대한 간략한 설명 및 기능 등을 살펴볼 수 있는 시트로, 개발자 정보, 스크린샷 및 기타 중요한 정보를 포함한다.
               o 마켓플레이스 개발자 인증 : 마켓플레이스 개발자가 사용자 및 개발자 보호를 돕기 위해 마련된 요구사항을 준수하도록 검증한다.
               o 추가 악성코드 방지 조치 : iOS 앱 설치 후 해당 앱에서 악성코드가 발견될 경우, 앱이 기기에서 실행되지 못하게 막는다.

Safari 내 변경 사항

     * 현재 iOS 사용자들은 Safari 외에 다른 제3자 웹 브라우저를 기본 브라우저로 설정할 수 있음
     * DMA 요구 사항을 반영하여, 애플은 사용자가 처음 Safari를 열 때 나타나는 새로운 선택 화면을 도입함
     * 이 화면은 EU 사용자에게 기본 브라우저 목록에서 선택하도록 유도함

App Store 내 변경 사항

     * 앱 스토어에서는 EU 내 개발자들의 앱에 대한 여러 변경 사항이 공유되며, 이는 애플의 모든 운영 체제에 걸친 앱에 영향을 미침
          + 결제 서비스 제공자(payment service providers, PSPs) 사용 관련 신규 옵션 : 이 옵션들은 디지털 상품 및 서비스 결제를 위해 개발자의 앱 내에 마련된다.
          + 링크아웃을 통해 결제를 진행할 수 있는 신규 옵션 : 사용자가 개발자의 외부 웹사이트에서 디지털 상품 및 서비스 거래를 완료할 수 있다. 개발자는 또한 앱 외부에서도 프로모션, 할인 및 기타 거래 관련 소식을 유럽연합 사용자에게 전달할 수 있다.
          + 비즈니스 계획 도구 개발자가 수수료를 추정하고, 유럽연합 내 앱을 위한 Apple의 새로운 비즈니스 약관 관련 지표를 이해하는 데 도움을 준다.
     * EU 사용자를 위한 새로운 보호 조치와 정보 제공 단계가 도입됨

EU 내 앱을 위한 새로운 비즈니스 조건

     * 애플은 EU 내 개발자들의 앱을 위한 새로운 비즈니스 조건을 공유함
          + 수수료 인하 : App Store의 iOS 앱들은 디지털 상품 및 서비스 거래 시 10%(상당수의 개발자 및 첫 1년 후 구독 시에 해당) 또는 17% 인하된 수수료를 지불하게 된다.
          + 결제 처리 수수료 : App Store의 iOS 앱은 3%의 추가 수수료를 지불하고 App Store의 결제 방식을 사용할 수 있다. 개발자들은 인앱결제 서비스 제공자를 활용하거나, 사용자를 웹사이트로 안내해 결제를 진행하도록 하여 Apple에 추가 수수료를 지불하지 않을 수 있다.
          + 핵심 기술 수수료 : App Store 또는 외부 앱 마켓플레이스, 혹은 두 앱 마켓플레이스에서 배포된 iOS 앱들은 설치 횟수가 100만 회를 초과할 시 연간 첫 설치 때마다 €0.50를 지불한다.

GN⁺의 의견

     * 이 발표는 유럽연합 내에서 디지털 시장의 경쟁을 촉진하고자 하는 디지털 시장 법(DMA)에 따른 것으로, 애플이 EU 사용자의 개인 정보 보호와 보안을 유지하면서도 법적 요구 사항을 준수하기 위한 조치임.
     * 새로운 API와 대체 결제 및 앱 배포 옵션은 개발자들에게 더 많은 유연성을 제공하며, 이는 앱 생태계에 더 많은 혁신을 가져올 수 있음.
     * 그러나 이러한 변화는 앱 스토어 외부에서 앱을 다운로드하고 결제를 처리할 때 발생할 수 있는 새로운 위험을 수반하므로, 사용자와 개발자 모두에게 새로운 보안 조치에 대해 잘 알고 있어야 함.

        Hacker News 의견

     * 유럽연합(EU)의 디지털 시장 법(DMA)에는 회피 방지 조항이 포함되어 있으며, 애플의 새로운 규칙에 대해 법적 절차를 개시할 근거가 있을 것으로 보임.

     ""게이트키퍼는 계약적, 상업적, 기술적 또는 기타 성격의 행위 또는 인터페이스 디자인을 사용하여 기사 5, 6, 7의 의무 이행을 저해해서는 안 됨.""
     * 애플의 새로운 정책에 따르면, EU에서 앱을 배포할 때 200만 설치 달성 시 최소 4만 5천 달러의 수수료가 발생하며, 이는 이전의 0달러에서 상승한 것임.

     ""핵심 기술 수수료 — 앱 스토어 및/또는 대안적 앱 마켓플레이스에서 배포되는 iOS 앱은 연간 첫 설치 1백만 건을 초과할 경우 설치당 0.50유로를 지불해야 함.""
     * 애플의 전략은 100만 설치를 초과하는 앱(예: YouTube, Zoom, Slack, Outlook, Amazon 등)에 중대한 문제를 야기할 수 있으며, 이러한 앱들은 자체 결제 방식을 가지고 있어 애플은 이들이 iOS용 대체 스토어를 만드는 것을 원치 않을 것임.

     ""대체적으로, 1백만 설치를 넘지 않는 작은 앱들을 위한 작은 스토어들은 문제가 없을 것으로 보임.""
     * iOS 앱에 대한 공증은 모든 앱에 적용되는 기본 검토로, 플랫폼의 무결성과 사용자 보호에 중점을 둠. 자동 검사와 인간의 검토를 결합한 공증은 EU에서 좋게 보지 않을 가능성이 있음.

     ""공증은 사용자를 보호하기 위한 플랫폼 무결성에 초점을 맞춘 모든 앱에 적용되는 기본 검토임.""
     * 마켓플레이스를 시작하기 위해서는 100만 유로의 신용장이 필요하므로, 핵심 기술 수수료를 피하기 위해 여러 마켓플레이스를 시작하는 것은 불가능함.

     ""마켓플레이스 시작을 위한 신용장 요구 사항.""
     * 여러 앱 스토어를 가지는 것보다는 단 하나의 앱 스토어를 유지하는 것이 좋으며, 애플은 이미 앱스토어를 잃었지만 아직 깨닫지 못한 상태임. 애플은 앱 시장이 분열되기 전에 좋은 스토어를 구해야 함.

     ""애플은 앱스토어를 이미 잃었으나, 아직 인지하지 못함.""
     * 애플은 간단한 해결책을 피하기 위해 많은 생각을 했으며, 안드로이드처럼 앱 사이드로딩을 허용하고 몇 가지 경고 메시지를 표시하는 것이 더 나았을 것임. 애플은 이 과정에서 많은 통제를 유지하려 하고 있음.

     ""애플은 사이드로딩을 허용하는 대신 복잡한 방법을 선택함.""
     * iOS 사용자는 이미 Safari 외에 다른 웹 브라우저를 기본값으로 설정할 수 있으며, iOS 17.4 이상에서 Safari를 처음 열 때 사용자에게 기본 브라우저를 선택하도록 하는 새로운 선택 화면이 제공될 예정임.

     ""iOS 사용자는 기본 웹 브라우저를 선택할 수 있는 새로운 선택 화면을 제공받게 됨.""
"
"https://news.hada.io/topic?id=13131","Redash 오류 탐험기: 오픈소스 컨트리뷰터가 될 뻔한 날","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Redash 오류 탐험기: 오픈소스 컨트리뷰터가 될 뻔한 날

Redash 오류 해결 과정에서 오픈소스 컨트리뷰터가 될 뻔한 경험과 배움들을 공유한 글

    1. 먼저 Redash에 대해서 알아보자
    2. 레몬베이스에서는 Redash를 어떻게 사용하고 있을까?
    3. Redash 갑작스럽게 오류 나다
          + ""접속이 되지 않는다""는 매우 포괄적인 문제 상황에서 원인 파악을 위해 어떤 생각으로 문제를 파악했는지 과정 설명
    4. Redash 오류 원인을 찾아서 잘 해결했다.
    5. Redash 접속은 잘 되는데, 알림 기능이 동작하지 않는다.
    6. 알림 기능을 재현하기 위해 Redash 로컬 설정
          + Redash를 로컬에 설정하는 방법을 설명
    7. 로컬에서 증상 재현에 성공
          + 문제를 해결하려면 오픈소스 컨트리뷰터로 기여해야했음
          + 기여하기 직전에 다른 누군가가 먼저 기여하였음
    8. 회고
          + 오픈소스에 컨트리뷰터로 활동하는 것은 어려울 것 같았는데 생각보다 쉽게 할 수 있었다.
          + 컨트리뷰터로 기여하는 것을 어렵게 생각해서 해결책을 찾았음에도 재차 확인하느라 기회를 놓쳤음
          + 빠르고 적극적으로 행동하는게 중요하다
          + 오픈소스 커뮤니티 내에서 소통하는것도 매우 중요하다.
          + 오픈소스 커뮤니티는 지식과 경험을 공유하며 함께 성장할 수 있는 공간이다
"
"https://news.hada.io/topic?id=13041","애플, 자율주행 기능 축소 및 2028년으로 출시 연기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     애플, 자율주행 기능 축소 및 2028년으로 출시 연기

        Hacker News 의견

     * 애플의 대담한 프로젝트 중 하나는 기술 의존성을 추적하는 것이며, 이들은 종종 초기 버전을 주요 제품에서 수년간 출시함(예: M1 칩). 애플 카의 경우, 계산 이미지 캡처, 센서 융합, 라이다, 그리고 애플 비전에서 사용되는 R1 SPU(센서 처리 유닛) 등이 포함될 것임.
     * 애플이 자동차 제조에 뛰어드는 것이 의문스러움. 소형 디지털 기기와는 완전히 다른 사업이며, 기존 자동차 업체들이 애플과 협력하기를 꺼림. 애플은 테슬라처럼 모든 것을 처음부터 시작해야 함. 2028년 목표는 애플에게도 매우 공격적이며, 2035년으로 연기될 수도 있음을 놀라지 않을 것임. 테슬라는 전기차 시장의 선두주자였고, 웨이모는 가장 진보된 자율 주행 기술을 보유함. 애플이 이들에 대해 경쟁 우위를 가지고 있다고 보기 어려움.
     * 애플이 자동차에 무엇을 가져올 수 있을지 확신할 수 없음. 웨이모는 자율 주행 기술에서 독보적으로 앞서 있으며, 테슬라는 이미 자동차에 미니멀리즘을 도입했고, 2028년까지 대중적인 저렴한 차를 출시할 가능성이 있음. 애플은 럭셔리한 제품을 만드는 것이 더 나을 수 있음.
     * 애플이 실제 자동차를 개발하고 있다는 것에 대해 의심함. 애플은 자동차 기술에 더 집중하고 있을 가능성이 높으며, 자동차 제조사들이 직접 개발하지 않아도 되는 기술을 만들고자 할 것임. 상상해보면, 판매되는 모든 자동차에서 애플이 30%의 수익을 얻을 수 있을 것임.
     * 애플은 시장을 선도할 준비가 되었을 때만 새로운 제품을 출시함. 그들은 거의 항상 첫 번째가 아니며 종종 늦지만, 품질과 마감에서 독특함. 애플이 자동차를 출시하면, BMW와 경쟁하기 위한 화려한 터치 UI와 미완성 자율 주행 기능을 갖춘 단순한 제품이 아닐 것임. 경쟁에서 수년 앞서 있는 혁신적인 제품이 될 것임. 2028년까지 출시를 연기한다면, 제품이 준비되지 않았거나 시장도 준비되지 않았다는 것을 의미할 수 있음. 만약 자율 주행이 주요 기능이라면, 경쟁에서 앞서 있을 것임.
     * 애플 인피니티 루프 근처에 자주 있음. 몇 년 전에는 애플의 렉서스 차량을 레이더와 다른 장비를 장착하고 매일 동네를 돌아다니는 것을 자주 봄. 최근 몇 달 동안은 거의 보지 못함. 확실히 많이 줄어든 것 같음.
     * 애플은 중국 제조업체들이 미국 시장에 진입하는 방법이 될 수 있음. 애플은 자신들의 차가 미국 제품이라고 크게 홍보할 것이지만, 실제로는 광동의 BYD와 폭스콘에서 제조될 것임.
     * 자율 주행 자동차는 역사상 가장 큰 낭비 중 하나임. 이를 위해 얼마나 많은 돈, 시간, 노력, 자원이 소모되었는지. 그럼에도 불구하고, 거의 아무것도 보여주지 못하고 최종 목표조차 명확하지 않음.
"
"https://news.hada.io/topic?id=13110","당신이 결코 비행기 추락 사고를 겪지 않은 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       당신이 결코 비행기 추락 사고를 겪지 않은 이유

비행기 사고의 원인과 책임

     * 미국은 세계에서 가장 안전한 항공 안전 기록을 보유.
     * 사고 발생 시 책임 소재를 어떻게 할당하는지가 중요.
     * 1991년 USAir 1493편 사고는 조종사의 실수로 인해 발생.

사고 당시 상황

     * USAir 1493편은 오하이오주 콜럼버스에서 이륙하여 로스앤젤레스 국제공항에 착륙.
     * 날씨는 맑고, 보잉 737은 기계적 결함이 없었음.
     * 착륙 절차는 평범했으나, 소형 통근 비행기와 충돌하여 대혼란 발생.

사고의 결과

     * 충돌로 인해 소형 비행기 탑승자 12명과 USAir 기장이 즉사.
     * 생존자들은 연기와 불길 속에서 탈출을 시도.
     * 사고로 인해 총 35명의 사망자 발생.

사고 조사 과정

     * 로빈 리 와셔, 당시 LAX 관제탑의 지역 관제사는 사고 후 근무에서 배제.
     * 와셔는 자신이 USAir 1493편을 점유된 활주로에 착륙하도록 허가했음을 깨달음.
     * 와셔는 자신의 실수를 인정하고 관제탑에 복귀하여 상황을 설명.

사고 원인 분석

     * 국가교통안전위원회(National Transportation Safety Board, NTSB)는 사고의 시간대를 재구성.
     * 와셔는 여러 가지 방해 요소로 인해 SkyWest 5569편이 활주로에 대기 중임을 잊어버림.
     * 와셔의 실수는 명백했으나, 그녀에 대한 처벌은 없었음.

비난의 역사

     * 재난 발생 후 책임자를 찾으려는 경향이 있음.
     * 때로는 과실이 처벌되어야 하지만, 종종 실수를 한 평범한 사람들이 희생됨.
     * 항공 산업은 ""비난 없는 사후 분석""을 국제적으로 공식화한 전통을 가짐.

로스앤젤레스에서의 교훈

     * 단일 관제사의 실수로 인해 사람들이 사망하는 시스템은 신뢰할 수 없음.
     * NTSB는 사고 가능성을 높인 전체적인 상황을 밝힘.
     * 사고 후 안전 개선 조치가 이루어짐.

정의로운 문화의 효과

     * 정의로운 조직 문화는 인간의 실수 원인을 조사하여 운영 안전성을 높임.
     * 실수를 자발적으로 보고함으로써 실수에 대한 데이터를 수집.
     * 직원들이 실수를 숨기는 조직은 자체 취약점을 알지 못함.

결론

     * 미국은 투명성, 정의, 진실에 대한 약속을 통해 세계에서 가장 안전한 항공 산업을 달성.
     * 항공 사고는 거의 없어졌으며, 미국은 15년 동안 치명적인 항공 사고가 없었음.

GN⁺의 의견

     * 이 기사는 항공 사고의 원인과 책임에 대한 깊은 이해를 제공함.
     * 사고 후 책임 소재를 개인이 아닌 시스템 차원에서 파악하는 것의 중요성을 강조.
     * ""정의로운 문화""와 ""비난 없는 사후 분석""이 항공 안전을 향상시키는 데 어떻게 기여하는지 설명함.

        Hacker News 의견

     * 항공 안전 문화에 대한 긍정적인 평가
          + 상업 항공의 안전 문화와 근본 원인을 조사하고 해결하는 데 대한 헌신에 동의함.
          + 자동차 사고에도 같은 기준을 적용해야 한다고 주장하며, 인간의 오류와 불량한 인프라 문제가 반복되고 있음을 지적함.
          + 자동차 문화의 문제점을 알리는 커뮤니티와 도시주의자들의 채널을 소개함.
     * 영국의 건강 및 안전 법률
          + 1974년 건강 및 안전 법률이 직장 내 안전 향상에 기여한 중요한 법률 중 하나임.
          + 조직이 직원의 복지를 책임지도록 하며, '근접 미스'를 심각하게 다루는 것이 중요함.
          + 사고가 발생하면 건강 및 안전 집행 기관이 큰 벌금을 부과할 수 있음.
     * 항공 사고 조사에 대한 글
          + Kyra Dempsey가 Medium에 작성한 항공기 충돌 사고에 대한 글을 소개함.
          + 글에서는 항공 교통 관제사의 실수와 그 배경에 대한 추가 정보를 제공함.
     * 작가의 스토리텔링 방식에 대한 칭찬
          + 글의 끝까지 읽지 않아도 스토리의 결말을 알 수 있게 해준 작가에게 감사함을 표함.
     * GitLab의 사례
          + GitLab에서 발생한 실수로 인한 저장소 삭제 사건을 언급하며, 회사가 개인을 탓하기보다 적절한 예방책이 없었음을 인정한 점을 칭찬함.
     * CAST 분석
          + 사고에 기여한 모든 요소에 대한 최대 학습을 목표로 하는 CAST 분석을 소개함.
          + 단일 원인이 아닌 상호작용하는 다양한 요소들의 네트워크를 이해하는 데 도움이 됨.
     * 비난 없는 사후 분석의 중요성
          + 실제로 '비난 없는 사후 분석'을 실천하는 회사에서의 경험을 공유함.
          + 문제의 근본 원인을 파악하고 해결책을 찾으며, 지속적인 개선을 추구하는 문화의 중요성을 강조함.
     * 스위스 군용기 사고 사례
          + 스위스에서 군용기 사고로 인해 공군 교통 관제사가 잘못된 지시를 내린 혐의로 기소되고 유죄 판결을 받은 사건을 언급함.
          + 민간 법정이 아닌 군사 법정에서의 재판이었으며, 이 사건이 언론의 많은 관심을 받았음을 설명함.
     * 잘 실행된 RCA(근본 원인 분석)의 만족감
          + 비난 없는 문화가 올바른 답을 찾는 데 결정적임을 강조하며, 회사 내 팀들이 중대한 문제를 분석하는 과정에서 신뢰와 협력의 중요성을 언급함.
     * 장기적 사고의 힘
          + 장기적 사고와 책임 있는 리더십이 더 나은 결과를 가져온다는 점을 강조함.
          + 비난 없는 문화가 책임 있는 문화를 만들어낸다고 주장하며, 보잉의 안전 문제가 리더십의 책임 회피에서 비롯된 것으로 해석함.
     * Admiral Rickover의 리더십 철학
          + 미 해군의 안전한 기록을 만든 Admiral Rickover의 책임 문화를 소개함.
          + 리더십의 역설에 대해 설명하며, 개인의 실수가 아닌 리더십이 해결해야 할 문제임을 강조함.
          + 관련 도서와 자료를 추천하며, 이러한 철학이 실리콘 밸리의 모든 직업에 적용될 수 있음을 언급함.
"
"https://news.hada.io/topic?id=13019","인시던트가 일어났을 때 경영진과 효과적으로 일하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      인시던트가 일어났을 때 경영진과 효과적으로 일하기

     * 인시던트가 일어났을 때 경영진과 효과적으로 소통하는 방법
     * 첫째, 트립와이어(Tripwire)를 미리 설정하기
          + 트립와이어는 조건이 충족되면 동작을 트리거하는 조건
          + 이를 설정하면 경영진이 인시던트 정보를 받길 원할 때 분명하게 알려줄 수 있음
     * 둘째, ‘경영진 요약(The Executive Summary) 문서’ 작성법 통달하기
          + 경영진 요약 문서는 경영진이 인시던트와 관련된 가장 적절한 정보를 손쉽게 이용하도록 정리한 문서
          + 여기에는 ‘인시던트가 비즈니스와 고객에게 미치는 영향’, ‘문제를 해결하기 위해 어떤 진전을 보였는지’, 연락 초안과 보고서 등 관련 문서 링크 등을 제공해야 함
     * 셋째, 간결하고 단순하게 소통해야 함
          + 경영진 요약 문서는 1 페이지를 넘지 말아야 함
          + 질문에 답변을 준비하되, 감당하지 못할 정도로 너무 많은 정보를 주지 말아야 함
     * 넷째, 한계를 다시 생각해 볼 것
          + 경영진과 함께 일할 때, 프로세스를 맹목적으로 따르지 말 것
          + 앞으로 나아갈 최선의 길을 비판적으로 생각해야 함
"
"https://news.hada.io/topic?id=13046","90년대 웹 개발자만이 기억하는 것 (2014)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       90년대 웹 개발자만이 기억하는 것 (2014)

90년대 웹 개발자만 기억하는 것들

     * 90년대 웹 개발자는 <blink> 태그와 <marquee> 태그를 결합하여 혁신적인 컴퓨터 애니메이션을 만들었음.
     * 당시에는 이러한 기술이 대단한 혁신으로 여겨졌으며, 웹 개발자는 기술 혁신의 선구자로 인식됨.

1x1.gif

     * 1x1.gif는 단 하나의 픽셀로 이루어진 투명한 GIF 이미지로, 컴퓨터 과학에서 링크드 리스트 이후 가장 중요한 성과로 여겨짐.
     * 이 작은 이미지는 반응형 웹에 최적화되어 있으며, 웹 페이지 상의 요소를 자유롭게 배치하는 데 사용됨.
     * <IMG SRC=""/1x1.gif"" WIDTH=150 HEIGHT=250>와 같은 태그를 사용하여 웹 페이지 내 요소들을 원하는 위치에 배치할 수 있었음.

&nbsp;&nbsp;&nbsp;&nbsp;

     * &nbsp; 태그는 공백을 만드는 HTML 엔티티로, 이미지 사용이 어려운 경우에 유용하게 사용됨.
     * &nbsp;를 여러 번 반복하여 원하는 만큼의 공간을 만들 수 있었으며, 이는 90년대 웹 개발에서 자주 사용된 기술임.

점선 밑줄, 테두리 효과

     * CSS가 등장하면서 웹 개발자들은 링크의 밑줄을 없애는 데 CSS를 사용하기 시작함.
     * 이러한 변화는 인터넷을 혼란스럽게 만들었지만, 동시에 커서 효과와 같은 새로운 기술을 개발하는 계기가 됨.

DHTML

     * CSS와 자바스크립트가 결합하여 DHTML이라는 기술을 만들어냄.
     * DHTML은 웹 개발을 취미에서 전문 직업으로 전환시키는 데 도움을 주었으며, 복사와 붙여넣기만으로도 문제를 해결할 수 있는 코드 블록을 제공함.

픽셀 폰트

     * 컴퓨터 화면의 해상도가 낮았기 때문에 작은 픽셀 폰트를 사용하여 화면 공간을 최대한 활용함.
     * 웹 개발자들은 픽셀 아트에 관심을 가지기 시작했으며, 이는 웹 페이지의 스플래시 스크린에서 볼 수 있었음.

버튼

     * 인터넷 익스플로러 4.0은 웹 브라우저의 완벽한 형태로 여겨졌으며, 사용자에게 어떤 브라우저를 사용해야 하는지 결정하는 데 영향을 미침.
     * 웹 사이트에는 다양한 88x31 픽셀 버튼이 표시되었으며, 이는 웹 개발자의 경험과 선호를 나타내는 상징이었음.

GN⁺의 의견

     * 이 글은 90년대 웹 개발의 향수를 불러일으키며, 당시의 기술적 혁신과 창의성을 회상함.
     * 1x1.gif와 &nbsp;와 같은 간단한 기술들이 어떻게 웹 페이지 디자인에 혁명을 일으켰는지를 보여줌.
     * 현재의 웹 개발자들에게 과거의 웹 기술이 얼마나 창의적이고 실험적이었는지를 이해하는 데 도움이 됨.

        Hacker News 의견

     * 서버 측 이미지 맵에 대한 경험담
          + 시스템 관리자이자 웹 프로그래밍 초보자가 이미지 상의 점을 다루기 위해 자바스크립트 대신 서버 측 이미지 맵을 사용함.
          + 자바스크립트를 피하고자 하는 선호도 때문에 파이썬 코드를 더 많이 작성해야 했음.
     * 수직 중앙 정렬에 대한 과거와 현재
          + 과거에는 vertical-align: middle;을 사용할 수 없어 생산성 손실이 컸으나, 이제는 그렇지 않음.
          + 인터넷 익스플로러 시대의 링크 호버 스타일과 테이블을 이용한 둥근 모서리 디자인에 대한 회상.
     * DHTML(Dynamic HTML)에 대한 설명
          + DHTML이 '분산 HTML'이 아닌 '동적 HTML'을 의미함을 지적.
          + Dynamic Drive와 같은 사이트에서 코드를 복사하여 문제를 해결할 수 있었음.
     * 프레임의 사용과 문제점
          + 프레임은 내비게이션 바를 여러 페이지에 걸쳐 수정할 필요를 없애준 원래의 '해결책'.
          + 프레임 페이지에 직접 접근하는 경우와 검색 엔진이 페이지의 일부를 별도로 색인화할 수 있는 문제가 있었음.
     * 마이크로소프트 홈페이지 메뉴 바의 확장 기능 탐구
          + 1996년, 마이크로소프트 홈페이지의 메뉴 바 확장 기능을 이해하려는 시도.
          + 소스 코드가 한 줄로 나타나는 문제와 &nbsp; 엔티티에 대한 오해.
     * 테이블을 이용한 둥근 모서리 디자인
          + 3x3 테이블과 이미지를 사용하여 둥근 모서리를 만드는 기법.
          + HTML 이메일에서도 이 기법이 오랫동안 사용됨.
     * Geocities Gallery 추천
          + 90년대 웹을 경험할 수 있는 Geocities Gallery를 추천.
          + 개인 웹 페이지의 독특한 디자인과 개성이 담긴 내용이 오늘날의 소셜 미디어와 대조됨.
     * <blink>와 <marquee> 태그의 브라우저 호환성
          + 넷스케이프는 <blink>를 지원하고, 인터넷 익스플로러는 <marquee>를 지원했으나 둘 다 지원하는 경우는 드물었음.
     * 90년대/2000년대 웹사이트의 특징
          + ""800x600 해상도에서 최적화됨"" 표시와 ""Valid HTML 4.01"" 인증 마크 사용.
          + 광고가 단순한 이미지 배너에서 복잡한 자바스크립트 번들과 비디오 광고로 변화함.
     * '웹마스터'라는 용어의 사용 부재
          + 기사에서 '웹마스터'라는 단어가 한 번도 언급되지 않은 점에 대한 의문 제기.
"
"https://news.hada.io/topic?id=13063","초보자용 익스플로잇으로 Chess.com을 해킹한 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     초보자용 익스플로잇으로 Chess.com을 해킹한 방법

체스닷컴에서의 XSS 발견

     * 체스를 취미로 즐기며 기술을 가지고 놀던 중, 체스닷컴에서 XSS 취약점을 발견함.
     * 체스닷컴은 1억 명 이상의 회원을 보유한 인터넷 상의 최대 체스 사이트임.

개요

     * 2023년 초 체스닷컴에서 많이 놀기 시작함.
     * 친구를 사이트에 가입시키고 친구 기능을 사용하여 즉시 친구가 됨.
     * MySpace 웜과 유사한 방식으로 자동 친구 추가가 가능한지 궁금해짐.
     * 새 계정을 만들고 개발자 도구의 네트워크 탭을 확인하여 자동 친구 추가 URL을 발견함.

중반 게임

     * TinyMCE 리치 텍스트 에디터를 사용하여 XSS를 시도함.
     * Burp 프록시를 사용하여 'About' 설명에 직접 HTML 코드를 삽입함.
     * TinyMCE 설정을 확인하고 background-image 스타일 속성을 이용하여 XSS 페이로드를 생성함.
     * 여러 기호를 테스트하여 XSS를 실행하는 방법을 찾아냄.
     * 최종적으로 쿠키와 자바스크립트 객체를 추출할 수 있는 방법을 개발함.

엔드게임

     * XSS를 완전히 실행하기 위해 노력함.
     * srcset 속성을 이용하여 더 넓은 JS 구문을 사용할 수 있는 새로운 방법을 찾아냄.
     * Base64 인코딩을 사용하여 XSS 페이로드를 직접 실행함.
     * TinyMCE 에디터가 사이트 전반에 사용되고 있어 영향이 큼.

분석

     * 취약점의 근본 원인은 이미지 재업로드 기능임.
     * 체스닷컴의 도메인 이름을 포함하여 이미지 호스팅 검사를 우회할 수 있음.
     * 리치 텍스트 에디터는 다양한 HTML 요소를 허용하기 때문에 XSS를 달성하기에 좋음.
     * TinyMCE는 최신 상태였으나, 최종 HTML에 대한 살균 처리가 누락됨.
     * 체스닷컴은 사용자에게 보여지는 최종 HTML에 대해 살균 처리를 해야 함.

   GN⁺의 의견:
    1. 이 블로그 포스트는 체스닷컴과 같은 대규모 온라인 플랫폼에서 발생할 수 있는 보안 취약점을 발견하고 이를 보고하는 과정을 흥미롭게 설명함.
    2. XSS 취약점은 웹사이트의 보안에 심각한 위협이 될 수 있으며, 이러한 취약점을 찾아내고 해결하는 것은 웹사이트 사용자의 개인정보 보호에 매우 중요함.
    3. 이 글은 소프트웨어 개발자와 보안 전문가들에게 리치 텍스트 에디터와 같은 웹 애플리케이션 구성 요소의 취약점을 인식하고 이를 방지하기 위한 중요성을 강조함.

        Hacker News 의견

     * 원글 작성자(OP) 소개 및 배경 정보
          + 17세 영국 학생으로 A-Levels을 수행 중이며 대학과 학위 견습 옵션을 고민 중임.
          + GitHub 프로필에서 HashPals의 핵심 멤버이자 Search-That-Hash의 창작자, ReMarkable 태블릿용 무료 소프트웨어 오픈소스 저장소의 유지 관리자임을 확인할 수 있음.
          + lichess.org에 대한 긍정적인 평가와 기술적 관심사 공유에 대한 언급이 있음.
     * MySpace 웜과 관련된 기능에 대한 댓글
          + 2005년경의 MySpace 웜을 언급하며, 작성자는 당시 태어나지 않았음을 밝힘.
          + 다른 사용자가 자신의 체스 게임에서 움직임을 통제하는 현상을 목격하고 기록했으며, chess.com에서 이 문제를 보고했으나 해결되지 않았음을 지적함.
     * XSS 취약점과 관련된 기술적 질문
          + PHPSESSID 쿠키가 HttpOnly가 아닌 이유와 알려진 XSS 취약점이 왜 수정되지 않았는지에 대한 의문 제기.
          + XSS 버그 바운티 보고서에 대한 관심과 그 과정의 어려움에 대한 인식 표현.
     * chess.com의 리치 텍스트 에디터에 대한 의견
          + 리치 텍스트 에디터를 ""성배""라고 부르는 것에 대한 재미있는 반응과, 큰 웹사이트임에도 불구하고 이러한 기능이 취약점을 가질 수 있다는 우려 표현.
     * 기술적 약어에 대한 질문
          + ""OSRF""의 의미에 대한 질문과 이것이 CSRF와 유사한 ""Own-Site Request Forgery""를 의미하는지에 대한 추측.
     * 서브도메인 리다이렉션과 관련된 기술적 질문
          + 서브도메인(chess.com.foo.bar)에서의 리다이렉션이 어떻게 동일 출처 정책(same-origin policy)을 우회했는지에 대한 설명 요청.
"
"https://news.hada.io/topic?id=13134","인공광에 모이는 날아다니는 곤충들의 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         인공광에 모이는 날아다니는 곤충들의 이유

인공광에 모이는 날아다니는 곤충들

     * 인공광에 모이는 날아다니는 곤충들에 대한 연구는 ""달빛 항법""과 ""빛으로의 탈출"" 이론을 포함해왔음.
     * 3차원 비행 데이터가 없어 이상한 행동의 원인은 해결되지 않았음.
     * 연구팀은 고해상도 모션 캡처와 스테레오 비디오그래피를 사용하여 인공광 주변에서 곤충의 3D 운동학을 재구성함.

서론

     * 인공광과 날아다니는 곤충 간의 상호작용은 ""나방이 불빛에 이끌린다""는 말에서 영감을 받음.
     * 인공광은 곤충을 잡는 고대 방법으로, 로마 제국 시대부터 기록됨.
     * 곤충이 빛에 모이는 방법에 대한 여러 가설이 제시되었으나, 3D 추적이 기술적으로 어려워 결정적인 답은 찾지 못함.

결과

    인공 점광원은 곤충의 비정상적인 비행 행동을 유발함

     * 477개의 스테레오 비디오그래피 기록에서 곤충이 인공광 주변에서 비행할 때 세 가지 행동 패턴을 식별함.
     * 곤충은 빛 주변을 안정적으로 돌거나, 빛에서 멀어지면서 상승하거나, 빛 위를 날다가 급강하하는 행동을 보임.

    모션 캡처는 빛을 향한 곤충의 등쪽 기울기를 정량화함

     * 모션 캡처를 사용하여 인공광 주변에서 날아다니는 곤충의 행동을 정량적으로 이해함.
     * 곤충은 빛 주변을 돌면서 빛을 향해 등을 기울이는 것으로 나타남.

    하늘과 같은 인공광은 정상적인 비행을 복원함

     * 밝은 빛을 하얀 천에 비추는 것은 곤충을 잡는 일반적인 방법임.
     * UV 빛을 하얀 천에 비추면 곤충이 빛에 혼란을 느끼고 추락함.
     * UV 빛을 하얀 천에 위에서 아래로 비추면 곤충은 정상적으로 비행함.

    시뮬레이션된 등쪽 기울기는 빛에 갇히는 현상을 만들어냄

     * 시뮬레이션을 통해 인공광 주변에서 관찰된 비행 패턴이 등쪽 기울기 메커니즘만으로 발생할 수 있음을 테스트함.
     * 시뮬레이션은 곤충이 빛 주변을 돌거나, 빛에서 멀어지면서 상승하거나, 빛 위를 날다가 급강하하는 행동을 재현함.

    빛 전환을 통한 비행 경로 조작

     * 두 개의 다른 UV 광원을 전환하면서 야생 곤충의 비행을 관찰함.
     * 곤충은 새로운 광원 주변을 돌기 시작하거나, 광원 전환 없이도 비행 방향을 바꿈.

    빛에 갇히는 행동에서 예외

     * 일부 곤충 종은 빛에 갇히지 않는 것으로 보임.
     * 실험실 조건에서 불나방은 빛 주변에서 비행할 때 빛을 향한 경향이 없음.

   GN⁺의 의견: 이 연구는 곤충이 인공광에 어떻게 반응하는지에 대한 오랜 의문을 해결하는 데 중요한 역할을 함. 곤충이 빛에 모이는 현상은 빛 오염과 생태계 변화에 대한 이해를 높이는 데 기여할 수 있음. 이 연구는 곤충의 비행 행동과 인공광의 상호작용을 이해함으로써, 야생동물 보호 및 생태계 관리에 실질적인 영향을 미칠 수 있는 정보를 제공함.
"
"https://news.hada.io/topic?id=13025","협업용 코드 편집기 'Zed', 이제 오픈 소스로 전환 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     협업용 코드 편집기 'Zed', 이제 오픈 소스로 전환

     * Zed가 오픈소스 프로젝트가 됨을 발표
     * 저작권 보호 라이선스 하에 공개됨 (에디터는 GPL, 서버 측 컴포넌트는 AGPL).
     * Zed를 구동하는 UI 프레임워크인 GPUI는 Apache 2 라이선스로 배포되어, 높은 성능의 데스크톱 애플리케이션을 자유롭게 라이선스로 배포할 수 있음

동기

     * Zed를 오픈 소스로 만드는 것이 최고의 제품을 만들 수 있다고 믿기 때문
     * 세계에서 가장 진보된 코드 에디터를 만들고 수백만 개발자의 손에 넣는 것이 목표
     * Zed 사용자가 모두 프로그래머이므로, 가능한 많은 인재 풀에게 Zed를 개방하는 것이 가장 합리적임
     * 소프트웨어를 통해 사람들과 연결되는 것을 즐기며, Zed의 내부 아름다움을 공유하고자 함

Fireside Hacks 소개

     * 사람들과 인간적인 수준에서 연결하고자 하는 욕구로, Zed 채널이라는 새로운 기능을 시작함
     * Zed 채널을 통해 전 세계 개발자들이 링크만 공유하면 실시간으로 함께 코드를 작성할 수 있음
     * Fireside Hacks 프로그램을 통해 Zed를 공개 채널에서 실시간으로 개발하며, 참여하는 사람들과 함께 작업함

잠깐만요... 현금이 주변의 모든 것을 지배하지 않나요?

     * 세계 최고의 에디터를 구축하고 유지하기 위해서는 지속 가능한 비즈니스 모델과 연결되어야 한다고 믿음
     * Zed를 오픈 소스로 만드는 것이 상업적 목표를 해치지 않는다고 생각함
     * 독점적인 에디터를 판매하기보다는 에디터와 원활하게 통합되는 서비스를 판매하는 것을 선호함
     * Zed 채널은 그러한 서비스의 예로, 현재는 무료이지만 베타 기간 후에는 사적 사용에 대해 요금을 부과할 계획임
     * 서버 측 컴퓨트를 제공하여 AI 기능을 지원하는 것도 수익화 방안 중 하나임
     * 현재까지 작성한 코드 100%를 오픈 소스로 공개하고 있으며, 향후 상업적 및 기업용 사례를 대상으로 하는 독점적 제품을 제공할 수도 있음

1.0 버전으로 가는 길

     * 다음 단계는 부분적으로 사용자에게 달려 있으나, 여전히 팀은 작음
     * 2024년에 Zed의 채택을 대폭 확대하여 더 많은 개발자가 혜택을 받을 수 있도록 공개 로드맵을 준비함
     * 기여가 로드맵 완성에 도움이 된다면, 그 기여에 더 많은 시간을 할애할 가능성이 높음
     * 기여하고 싶은 사람은 기여 가이드를 확인하고, 가능하다면 다가오는 Fireside Hack에 참여하여 인사를 나누기를 권장함

Zed를 시도해보고 싶으신가요?

     * macOS에서 오늘 Zed를 시도할 수 있음. 지금 다운로드 가능.


  GN⁺의 의견

     * Zed의 오픈 소스 전환은 개발자 커뮤니티에게 큰 기회를 제공하며, 협업과 혁신을 촉진할 수 있는 잠재력을 가짐.
     * 실시간 협업 기능인 Zed 채널과 같은 서비스를 통해 오픈 소스 프로젝트임에도 지속 가능한 비즈니스 모델을 구축하려는 접근 방식은 흥미로움.
     * 오픈 소스 커뮤니티와의 상호 작용을 통해 개발자들이 직접 제품 개선에 참여할 수 있는 기회를 제공하는 것은 소프트웨어 개발의 민주화에 기여할 수 있음.

   이게 오픈소스가 될줄은 상상도 못했네요

   Zed - Atom 개발자들이 만든 새로운 에디터. 오픈 베타 시작

        Hacker News 의견

     * Zed 편집기 사용 경험
          + Zed 편집기의 반응성이 뛰어나며, 다른 편집기들이 비교적 반응이 느린 것을 느낄 수 있음.
          + 사용자 피드백에 빠르게 반응하며, 검색/치환 기능이 초기보다 훨씬 사용하기 좋아짐.
          + 디버그 구문 트리 모드는 Zed의 고급 기능을 보여주는 예시로, 정규 표현식을 사용하는 구식 편집기들보다 진보된 기술을 사용함.
          + 협업 워크플로우와 보안이 명확하지 않음. GitHub을 통한 로그인만 가능하며, 자체 호스팅이나 다른 인증 제공자 사용 여부가 불분명함.
          + Ollama 통합을 원함. 이 기능이 없어서 VSCode를 사용해야 하는 경우가 있음.
     * Zed 편집기에 대한 피드백 및 요청
          + 창 크기와 위치가 Zed를 닫았다 다시 열 때 유지되지 않음.
          + 언어 서버 오류가 자주 발생함.
          + Alabaster 테마가 더 이상 작동하지 않으며, VSCode 테마를 Zed로 가져올 수 있으면 좋겠음.
          + Zed의 UI 디자인이 우아하며, 다른 편집기들처럼 아이콘, 메뉴, 색상 등으로 인한 방해 요소가 없어 집중하기 좋음.
     * Zed 편집기의 플랫폼 확장 희망
          + Zed가 다른 플랫폼(특히 리눅스)으로 포팅되기를 바람.
     * Zed 편집기의 오픈 소스 및 라이선스
          + Rust로 만들어진 오픈 소스 편집기인 Zed에 대한 긍정적인 평가.
          + Zed의 UI 프레임워크인 GPUI가 Apache 2 라이선스로 배포되어, 어떤 라이선스로든 데스크톱 애플리케이션을 만들 수 있음.
          + 라이선스 선택이 흥미로움.
     * Zed 편집기의 성능 및 기능성
          + Zed는 매우 빠르며, rust-analyzer가 포함되어 있음.
          + Python 프로젝트를 Zed에서 열었을 때 자동으로 LSP를 로드함. 하지만 자동완성 순서가 유용하지 않음.
          + Sublime에 비해 Zed에서 특정 하이라이트를 모두 선택하는 기능이 느림.
     * Zed 편집기의 개선 요청
          + 오류에 대한 ""수정"" 버튼을 클릭하면 새 채팅을 시작하고 코드 컨텍스트와 오류 메시지를 제공하며 가능한 수정 사항을 제안하는 기능을 추가해달라는 요청.
     * Zed 편집기의 오픈 소스 전환에 대한 반응
          + Zed가 오픈 소스로 전환된 것에 대한 긍정적인 반응.
          + 외부 요청을 전송하지 않는 편집기를 선호하며, Vim을 주 편집기로 사용함.
          + 필요한 경우 플러그인으로 추가 기능을 설치할 수 있는 간소화된 Zed 버전을 원함.
     * Zed 편집기의 이름에 대한 역사적 언급
          + 과거 Zortech C++ IDE의 이름이 Zed였으며, Symantec에 인수된 후 사라짐.
          + Zed의 원 개발자 Phil Murray에 대한 언급.
     * Zed 편집기 GitHub 저장소 링크
          + Zed 편집기의 GitHub 저장소에 대한 직접 링크 제공.
"
"https://news.hada.io/topic?id=13040","루미에르: 현실적인 비디오 생성을 위한 시공간 확산 모델","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    루미에르: 현실적인 비디오 생성을 위한 시공간 확산 모델

텍스트-비디오

     * 구글 연구팀이 Lumiere라는 텍스트-비디오 확산 모델을 소개함.
     * 이 모델은 현실적이고 다양하며 일관된 움직임을 표현하는 비디오를 합성하는 데 중점을 둠.
     * 공간-시간 U-Net 아키텍처를 사용하여 비디오의 전체 시간을 한 번에 생성함.

이미지-비디오

     * Lumiere를 사용하면 단일 참조 이미지를 사용하여 목표 스타일의 비디오를 생성할 수 있음.
     * 미세 조정된 텍스트-이미지 모델 가중치를 활용함.

비디오 스타일화

     * Lumiere를 통해 기존 텍스트 기반 이미지 편집 방법을 일관된 비디오 편집에 사용할 수 있음.

시네마그래프

     * Lumiere 모델은 사용자가 제공한 특정 영역 내 이미지의 내용을 애니메이션화할 수 있음.

비디오 인페인팅

     * Lumiere 모델은 마스크된 비디오의 내용을 복원하여 완성된 비디오를 생성할 수 있음.

저자 및 감사의 글

     * 연구팀은 구글 연구소와 여러 대학의 공동 저자들로 구성됨.
     * 인턴십을 수행하며 연구에 기여한 저자들과 협력 및 지원을 제공한 다양한 인물들에게 감사를 표함.

   GN⁺의 의견:
     * Lumiere 모델은 비디오 합성 분야에서 중요한 진보를 나타냄. 현실적이고 다양한 움직임을 가진 비디오 생성이 가능한 것은 콘텐츠 제작자와 비디오 편집자에게 큰 도움이 될 것임.
     * 이 기술은 특히 영화나 광고 산업에서 시각적 스토리텔링을 강화하고, 창의적인 표현을 확장하는 데 기여할 수 있음.
     * Lumiere의 개발은 인공지능 기반의 창작 도구가 어떻게 창의적인 작업을 변화시키고 있는지를 보여주는 사례임.

        Hacker News 의견

     *
          + 과학적 연구의 이름으로 제시된 이 작업에 대해 매우 불쾌함을 느낌. 이것은 자랑, 광고, 마케팅으로만 설명될 수 있음. 재현 가능한 과정이 설명되지 않았고, 아키텍처 다이어그램은 영감을 줄 수 있으나 과학적 시도의 가장 중요한 측면인 반증을 허용하지 않음. 구글이 거짓말을 하고 있는지 확인할 방법이 없으므로 모든 예시가 선별되고 후처리되었다고 가정해야 함. 모델을 훈련하는 데 사용된 데이터가 불법적으로 획득되었다고 가정해야 함. 구글은 이제 입증할 수 없는 주장을 일상적으로 하기 때문에 극단적인 회의주의에서 출발해야 함. 예를 들어, 바드에서의 제미니의 성능이 GPT-4와 비교했을 때 훨씬 못 미침. 모델과의 상호작용을 주장하는 비디오를 공개했을 때 실제로는 그런 것이 아니었음.
     *
          + 예시들이 이전에 본 기술들보다 훨씬 일관되고 길게 보임. 다른 모델들과 비교할 때 다리가 바닥에서 미끄러지는 것이 훨씬 적음. 반면, 인간의 얼굴은 좋아 보이지 않음. 예를 들어, 미소 짓는 모나리자가 그렇다고 함. 이것은 첫 번째로 좋은 비디오 생성 모델처럼 보임. 수정: 구글이 만들었다는 것을 방금 알았으니, 공개될 일은 없을 것임.
     *
          + 그들의 GitHub에는 현재 연결된 페이지 외에 아무 것도 없음. 그들이 공개할 것이라고 주장한 적도 없음. 그래도 확인해봐야 했고, GitHub 프로필로 연결되는 링크는 보이지 않았음. 호스팅된 웹사이트 URL을 수동으로 입력하고 싶지 않은 사람을 위해 링크를 여기에 공유함.
     *
          + 비디오 인페인팅이 흥미로움. 최근 아이들이 오래된 스폰지밥 에피소드를 보고 있었는데, 4:3 화면비가 놀라웠음. 16:9 화면비로 되돌리기 위해 옆쪽 테두리를 인페인트하는 것이 흥미로운 사용 사례가 될 것 같음. 하지만 옆에서 들어오는 물체에 대한 어떤 종류의 선견지명이 필요할 것으로 보임.
     *
          + 이 작은 AI 비디오 생성 샘플들의 기괴하고 꿈같은 특성으로 인해, 이러한 논문들이 '전기 양을 꿈꾸는' 프롬프트를 부활절 달걀로 포함하지 않는 것에 대해 늘 실망함.
     *
          + 이 발표를 단지 2-3년 전으로 돌려놓았다면 정말 놀라웠을 것임. 우리 모두가 이런 신제품들이 매우 빠르고 자주 나오는 것에 익숙해졌지만, 여전히 놀랍다고 생각함. 이런 능력을 가진 소프트웨어를 갖게 될 날을 기다릴 수 없음. 수정: 구글이 만들었으니, 오픈 소스가 공개될 때까지 기다릴 것임.
     *
          + 종종 오래된 이미지들을 현대적인 데이터셋과 섞는 것 같음. 조지 워싱턴의 초상화를 가지고 ""웃고 있는 남자""를 요청한다면, 그의 이는 의치가 보일까, 아니면 하얀 치아가 보일까?
     *
          + 몇 가지 코멘트: 구글이기 때문에 우리가 직접 사용할 수는 없을 것임. 그럼에도 불구하고 아이디어는 매우 흥미로움 -- 모델을 훈련시켜 비디오의 작은 전체 시간 표현을 생성하게 한 다음, 시간과 픽셀 모두에 대해 업스케일함. 깊이 맵을 추가하는 모델들을 보았지만, 이 모델은 '시간 맵'을 또 다른 차원으로 추가함. 일관성은 꽤 좋아 보임. 모델이 시간에 걸쳐 무엇을 '해야 할지' 결정하는 것에 대한 어색함이 더 많이 보임. 구글러들의 큰 통찰은 일관성을 자체적인 것으로 조건을 부여하고 훈련하고 생성할 수 있다는 것임. 이것은 Stability와 같은 다른 모델 제공업체들에 의해 복제될 수 있을 것으로 보임; 구현할 수 없는 것으로 보이는 것은 없음.
     *
          + 픽셀 테마의 게시물로 픽셀 테마의 논문임. 상당히 인상적이고, 아마도 곧 ""한 문단으로 영화 만들기"" 프로그램의 거대한 무리를 초래할 것임. 구글이기 때문에 아마도 상자 안에 넣어져서 우리가 결코 보지 못할 릭 앤 모티의 장치가 될 것임. 저자 목록 형식이 멋짐. 주요 저자, 기관 인증, 핵심 기여자를 위한 1,2,3,4,*,+ 표기법이 좋음. 10명 이상의 저자가 있는 천문학 및 물리학 논문을 많이 읽었지만, 누가 무엇을 했는지 전혀 모름. 예를 들어, arXiv 링크는 유사한 형식을 보여주지 않음. 아마도 즉시 남용적인 포르노에 사용될 것임. 걷는 여성 예시: (5번째 변형) ""옷을 입지 않은 채로""
     *
          + 올해 첫 번째 기능 길이의 AI 생성 영화를 볼 것임. 내가 미쳤다고 생각한다면, 심지어 영화의 새벽에 평균 샷 길이가 12초였고 오늘날에는 단 2.5초라는 것을 고려해보라. 세대 간에 일관된 주제를 유지하는 것과 같은 몇 가지 중요한 기술이 정제되어야 하지만, 깊이에 따라 레이어를 분리하여 더 정적인 이미지를 사용하거나 더 많은 깊이가 필요한 곳에 텍스처가 있는 간단한 3D 모델을 생성하는 기존 방법을 적용하여 많은 불일치를 보완할 수 있음. 충분한 노력과 기술을 가진 사람이라면 기존 기술로도 할 수 있을 것임.
"
"https://news.hada.io/topic?id=13100","Meta AI, Code Llama 70B 모델 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Meta AI, Code Llama 70B 모델 공개

     * LLama 2를 코드에 특화된 데이터 셋으로 더 많은 데이터를 샘플링하고 오래 훈련시킨 코드 생성을 위한 고성능 LLM
     * HumanEval 에서 67.8으로 오픈 모델중 최고의 성능을 보임
     * 이전 라이센스와 마찬가지로 연구/상업적 목적 모두 사용 가능
     * 3가지 모델
          + CodeLlama-70B
          + CodeLlama-70B-Python
          + CodeLlama-70B-Instruct
     * 이제 4가지 사이즈로 제공됨 7B/13B/34B/70B

   M2 Max 이상에서 로컬 실행이 가능하다면 최고의 토이가 될 것 같아요

   양자화되면 아마도 잘 돌아갈듯 하네요. 조금만 기다리면 나오지 않을까요

   위 링크는 Meta에 접근 요청하는 링크지만, Hugging Face에는 이미 다 공개 되어 있음
   https://huggingface.co/codellama

        Hacker News 의견

     * Jetbrains 플러그인인 CodeGPT를 개발하여 로컬에서 실행할 수 있음. 해당 플러그인은 여기에서 확인 가능.
     * Hugging Face에서 모델을 확인할 수 있음: CodeLlama-70b-hf.
     * ChatGPT와 GitHub Copilot을 사용하는 한 사용자는 VS Code에서 이러한 모델을 어떻게 활용할 수 있는지 궁금해 함. VS Code용 GPT 확장 프로그램이 많지만 대부분 업데이트가 없거나 유료 플랜으로 이어지기 때문에 GitHub Copilot을 계속 사용하는 것이 낫다고 생각함.
     * Meta가 오픈 소스 머신러닝에 대한 훌륭한 헌신을 보여준 것에 대해 인정해야 함.
     * 작은 코드 모델들이 얼마나 좋은지를 보면, 이 70B 모델이 어떤 능력을 보여줄지 궁금함.
     * 많은 사람들이 4090과 작은 모델 사용을 언급하지만, 에너지 소비에 대한 분석은 드물게 볼 수 있음. Microsoft가 Copilot을 크게 보조하고 있다고 생각하며, 하루 중 30%의 시간 동안 Copilot을 사용한다면, 한 달에 4090에서 7B 또는 13B 모델이 소비하는 kWh가 얼마인지, 그리고 에너지 비용이 얼마나 드는지 궁금함.
     * 현재 최고의 로컬 Copilot 모델이 무엇인지, vscode에서 비슷한 경험을 제공하는 확장 프로그램이 있는지 궁금함. 4090을 가지고 있으니, 상당한 수의 모델을 실행할 수 있을 것으로 기대함.
     * Baptiste Roziere가 최근에 Code Llama에 대한 훌륭한 강연을 했으며, 강연은 여기에서 시청 가능함.
     * M2 Max와 같은 기기에서 로컬로 실행할 수 있고 IDE 플러그인을 통해 Copilot과 같은 기능을 할 수 있다면 흥미로움. 프로젝트에서 지루한 문제를 해결하거나 ""보일러플레이트"" 코드를 작성하는 데 시간을 절약할 수 있어 더 어려운 소프트웨어 엔지니어링 작업에 집중할 수 있음.
     * 평균 프로그래머가 필요한 속도로 이를 실행할 장비를 가지고 있지 않을 가능성이 있어, 이 플러그인이 누구를 대상으로 하는지 확실하지 않음. 그럼에도 불구하고 멋진 기능임.
"
"https://news.hada.io/topic?id=13070","챗지피티와 유사한 LLM을 처음부터 단계별로 구현하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     챗지피티와 유사한 LLM을 처음부터 단계별로 구현하기

대규모 언어 모델 만들기 (처음부터)

     * 대규모 언어 모델(Large Language Models, LLMs)의 내부 작동 원리를 발견할 수 있는 책
     * 자체 LLM을 단계별로 만드는 방법을 명확한 텍스트, 다이어그램, 예시와 함께 설명
     * 교육 목적의 작지만 기능적인 모델을 훈련하고 개발하는 방법은 ChatGPT와 같은 대규모 기초 모델을 만드는 접근법을 반영

목차

     * Readme.md 파일은 Markdown 파일이며, Markdown 편집기나 미리보기를 사용하여 적절히 볼 것을 권장
     * 각 장의 제목과 주요 코드, 보조 코드가 목차에 요약되어 있음
     * PyTorch 소개 부록과 Python 및 Python 패키지 설치에 대한 추가 지침이 포함

   GN⁺의 의견:
     * 이 책은 대규모 언어 모델을 처음부터 만드는 과정을 자세히 설명하며, 인공지능 분야에 관심 있는 초급 소프트웨어 엔지니어에게 매우 유익함.
     * ChatGPT와 같은 혁신적인 기술의 기초를 이해하고 싶은 독자에게 흥미로운 내용을 제공함.
     * 실제 코드 예시와 함께하는 단계별 안내는 학습자가 이론을 실제 적용해보는 데 도움이 될 것임.

        Hacker News 의견

     * 추가 자료로 가이드북을 작성 중이며, 이는 다양한 완성 단계에 있음. 지금까지는 튜닝 가이드가 최고의 자료임.
          + 가이드북 링크
     * 이 가이드북이 놀라워 보임. 궁금한 점은, 주요 목표가 이해를 돕고 신비를 벗기는 것인지, 아니면 사람들이 자신의 필요에 맞는 작은 모델을 직접 만들도록 장려하는 것인지임.
     * 공개적으로 기술 서적을 쓰는 것은 상상할 수 없는 수준의 불안감을 동반하므로, 저자에게 경의를 표함.
     * 이 책의 정보를 이용해 강화 학습에 대해 배울 수 있는지 궁금함. 목표는 달 착륙선처럼 착륙을 배우는 것임. 간단하게 100피트에서 시작해 한 방향으로 추진하고, 크레이터를 만들지 않을 때까지 시도함. 그 다음 변수를 추가하는 것, 예를 들어 수평으로 이동하면서 수평 추진기를 추가하는 것 등임. 이 책이 그런 '주류' ML에 도움이 될지 궁금함.
     * 첫 번째 코드 샘플에서 볼 수 있듯이, 완전히 처음부터 시작하는 것은 아님.
import torch

     * 이 자료가 무료일 것이라고 생각하고 Github로 넘어갔음. 저자의 작업에 모든 존경을 표하면서, '처음부터' 베인에서 사용할 수 있는 무료 자료가 무엇이 있고 추천되는지 궁금함.
     * 모델 아키텍처 자체는 특히 torch를 사용할 때 그리 복잡하지 않음. 전체 과정이 꽤 간단하고 실행 가능한 프로젝트임.
     * 이것은 아마도 ""Show HN""으로 분류될 것임.
     * 이 작업에 감사함. 책 완성 예정일이 있음?
     * 한 부를 구입함! 읽는 것을 기대하고 있음. :) 책을 쓰는 동안 독자들이 피드백을 줄 수 있는 방법이 있음?
"
"https://news.hada.io/topic?id=13085","변화가 없다면 결국 모든 남은 Nitter 인스턴스가 종료될 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  변화가 없다면 결국 모든 남은 Nitter 인스턴스가 종료될 예정

   LLM이 클플 방화벽 페이지를 요약한것같네요

        Hacker News 의견

     * 한 해커뉴스 사용자는 제목이 오해의 소지가 있음을 지적하며, 모든 Nitter 인스턴스가 종료된 것이 아니라 단지 하나의 인스턴스가 종료된 것임을 밝힘.

     ""이것은 모든 Nitter 인스턴스가 종료된 것이 아니라 단지 하나의 인스턴스가 종료된 것임. 제목이 다소 오해를 불러일으킬 수 있음.""
     * 다른 사용자는 해커뉴스의 제목이 세 번이나 변경되었다며 이를 재미있게 여김.

     ""해커뉴스의 제목이 세 번이나 바뀌었다니 웃기다.""
     * 또 다른 사용자는 모든 Nitter 인스턴스가 종료될 경우, 사람들이 Twitter/X 같은 폐쇄적인 플랫폼에 정보를 덜 올리게 될 것이라고 주장함.

     ""Nitter 인스턴스가 모두 종료되면, 사람들이 Twitter/X 같은 폐쇄적인 플랫폼에 정보를 올리는 것을 중단할 또 다른 이유가 될 것임.""
     * 한 사용자는 Twitter 링크를 클릭할 때 로그인 없이 전체 스레드를 볼 수 없는 점이 실망스럽다고 언급함.

     ""Twitter 링크를 클릭했을 때 로그인 없이 전체 스레드를 볼 수 없는 것이 실망스러움.""
     * 다른 사용자는 소셜 미디어 계정에서 원하는 정보를 추출하여 중독성이 덜한 형식으로 제공하는 헤드리스 브라우저를 실행하고 싶어함.

     ""소셜 미디어 계정에서 원하는 정보를 추출하여 중독성이 덜한 형식으로 제공하는 헤드리스 브라우저를 실행하고 싶은 사용자의 바람.""
     * 한 사용자는 YouTube가 Invidious와 같은 서비스에 대해 계정 로그인을 요구할지 궁금해하며, 인터넷의 방향에 대해 우려를 표함.

     ""YouTube가 Invidious와 같은 서비스에 대해 계정 로그인을 요구할지 궁금해하며, 인터넷이 나아가는 방향에 대한 우려를 표현함.""
     * 다른 사용자는 Twitter의 레이아웃/UI가 마음에 들지 않아 사용을 거부하고 있으며, Nitter를 통해 잠시 동안 읽을 수 있었던 것에 대해 아쉬워함.

     ""Twitter의 레이아웃/UI가 마음에 들지 않아 사용을 거부하고 있으며, Nitter를 통해 잠시 동안 읽을 수 있었던 것에 대해 아쉬워함.""
     * 한 사용자는 Nitter가 수천 개의 계정을 생성하는 전략이 어떻게든 작동했다는 사실에 놀라움을 표함.

     ""Nitter가 수천 개의 계정을 생성하는 전략이 어떻게든 작동했다는 사실에 놀라움을 표함.""
     * 마지막으로, 중요한 내용이 Twitter 스레드 형태로만 게시되는 경우가 있어, 계정 없이 이를 읽을 수 있는 방법에 대해 묻는 사용자가 있음.

     ""중요한 내용이 Twitter 스레드 형태로만 게시되는 경우가 있어, 계정 없이 이를 읽을 수 있는 방법에 대해 묻는 사용자의 의견.""
"
"https://news.hada.io/topic?id=13057","국제사법재판소, 가자 지구에서의 집단학살 방지를 이스라엘에 명령하나 휴전 명령은 내리지 않아","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          국제사법재판소, 가자 지구에서의 집단학살 방지를 이스라엘에 명령하나 휴전 명령은 내리지 않아

유엔 최고 법원, 이스라엘에 가자 지구에서의 집단학살 방지 명령

     * 유엔 최고 법원은 이스라엘에 가자 지구에서의 사망과 파괴, 그리고 집단학살 행위를 방지하기 위한 모든 조치를 취할 것을 명령함.
     * 이스라엘에 대한 집단학살 혐의 사건에서 이스라엘의 전쟁 행위를 강력히 비판하며 국제적 압력을 더함.
     * 법원의 명령은 이스라엘에 법적으로 구속력이 있으나, 이스라엘의 준수 여부는 불확실함.

이스라엘-하마스 전쟁에 대한 배경

     * 하마스의 공격으로 인해 이스라엘의 대응이 시작되었으며, 이로 인해 가자 지구에서 큰 인명 피해가 발생함.
     * 이스라엘은 가자 지구 남부 국경까지 하마스와의 전투를 계속할 것이라고 밝힘.
     * 가자 지구 보건부는 이스라엘 군에 의한 사망자 대부분이 여성과 어린이라고 주장함.

법원의 결정과 국제 반응

     * 법원은 이스라엘에 기본적인 원조를 긴급히 제공하고, 집단학살 선동을 처벌할 것을 포함한 여러 조치를 명령함.
     * 팔레스타인과 그 지지자들은 이스라엘에 대한 책임을 묻는 중요한 단계라고 평가함.
     * 미국은 이스라엘에 민간인 피해 최소화, 인도적 원조 증대, 비인간화하는 수사 억제를 요구함.

GN⁺의 의견

     * 이 기사는 이스라엘과 가자 지구의 갈등에 대한 유엔 최고 법원의 중요한 결정을 다루고 있으며, 국제법에 따른 국가 행동의 책임성에 대한 사례를 보여줌.
     * 이스라엘의 반응과 국제 사회의 다양한 반응은 이 지역의 긴장 상태와 향후 국제 관계에 중대한 영향을 미칠 수 있음.
     * 이 결정은 집단학살이라는 심각한 범죄에 대한 국제적 관심을 불러일으키며, 전쟁과 인권에 대한 국제법의 역할과 한계를 논의하는 계기가 될 것임.

        Hacker News 의견

     * 모든 참여자에게:
          + 해커뉴스 사이트 지침을 숙지하고 댓글을 달 것.
          + 특히 친절함과 싸움을 피함이 중요함.
          + 다른 사람의 인간성을 마음에 품는 것이 친절함의 한 예임.
     * ICJ 판결에 대한 정보:
          + 판결 전문과 요약문은 ICJ 웹사이트에서 확인 가능.
          + 이스라엘 ad-hoc 판사인 아하론 바락은 선동 금지 및 인도적 원조 보장에 관한 두 조치에 대해 이스라엘에 반대했음.
          + 프랑스어로도 정보 제공됨.
     * 도미니크 드 빌팽 전 프랑스 총리의 견해:
          + 서구는 세계로부터 고립되지 않도록 눈을 뜨고 역사적 드라마의 심각성을 인식해야 함.
          + 팔레스타인 문제는 사라지지 않으므로, 정치적이고 외교적으로 계속 나아가야 함.
          + 보복의 법칙은 끝이 없는 순환임.
     * ICJ의 집행 능력:
          + ICJ의 ""명령""이 실제로 어떤 영향을 미칠 수 있는지에 대한 질문.
     * 국제법 전문가의 기사:
          + ICJ의 잠정 조치에 대해 설명하는 기사가 EJILTalk 블로그에 게재됨.
          + 다양한 변호사들의 양측 견해를 다룬 기사들이 있음.
     * 이스라엘에 대한 책임:
          + 이스라엘은 민간인에 대한 잔혹 행위에 대해 일부 책임을 져야 함.
          + 법원은 이스라엘에게 팔레스타인인을 살해하거나 해를 끼치지 않도록 모든 조치를 취할 것을 명령함.
     * ICJ의 실제 법원 명령:
          + 구체적인 조치 사항은 문서의 23페이지, 78-82항에 명시됨.
     * 하마스에 대한 명령:
          + 하마스는 모든 인질을 석방해야 하며, 하마스는 법원의 판결을 준수하겠다고 주장했으나 실제로 준수할지는 불투명함.
     * 이스라엘 군인의 입장:
          + 이스라엘 군은 대량학살을 저지르지 않음.
          + 하마스가 민간인을 인간 방패로 사용하기 때문에 민간인 피해가 발생하지만, 이스라엘은 민간인을 특정해서 공격하지 않음.
          + 이스라엘은 가능한 한 적은 수의 비전투원이 사망하도록 노력하고 있으며, 이로 인해 자국 군인들도 희생됨.
          + 이스라엘은 군사 목표를 달성할 때까지 하마스와 싸울 것이며, 테러리즘을 없애고 평화를 이루기를 희망함.
     * 남아프리카공화국과 이스라엘 사이의 ICJ 사례:
          + 남아프리카공화국이 ICJ 사례에서 승소할 것이며, 이로 인해 이스라엘에 중대한 결과가 초래될 것이라는 베테랑 변호사의 의견.
"
"https://news.hada.io/topic?id=13123","Quickemu: 최적화된 Windows, macOS, Linux 가상 머신을 빠르게 실행","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Quickemu: 최적화된 Windows, macOS, Linux 가상 머신을 빠르게 실행

Quickemu 소개

     * 리눅스, macOS, 윈도우용 데스크탑 가상 머신을 빠르게 생성하고 실행할 수 있음.
     * 사용자가 원하는 운영 체제를 결정하면 Quickemu가 최적의 실행 방법을 찾아줌.

특징

     * macOS Monterey, Big Sur, Catalina, Mojave, High Sierra 지원.
     * 윈도우 10과 11 지원, TPM 2.0 포함.
     * 우분투 및 공식 우분투 플레이버 지원.
     * 360개 이상의 운영 체제 에디션 지원.
     * SPICE 지원을 포함한 다양한 기능 제공.

요구 사항

     * QEMU(6.0.0 이상) 및 여러 필수 도구 필요.
     * 우분투, 아치, 닉스OS 시스템은 필요한 의존성을 자동으로 관리함.
     * 다른 호스트 배포판이나 운영 체제의 경우, 필요한 요구 사항을 수동으로 설치해야 함.

그래픽 사용자 인터페이스

     * 터미널용 quickemu와 quickget 외에도 그래픽 사용자 인터페이스인 Quickgui 제공.

Quickemu 설치

     * 아치 리눅스 사용자는 AUR을 통해 설치 가능.
     * 우분투 사용자는 PPA를 통해 설치 가능.
     * 다른 리눅스 사용자는 git을 통해 설치하고 필요한 요구 사항을 수동으로 설치해야 함.

우분투 게스트

     * quickget을 사용하여 우분투 릴리스를 자동으로 다운로드하고 가상 머신 구성을 생성함.
     * 설치 후 SPICE 에이전트와 SPICE WebDAV 에이전트를 설치하여 파일 공유 및 클립보드 공유를 활성화할 수 있음.

우분투 플레이버

     * 공식 우분투 플레이버 모두 지원.
     * quickget을 사용하여 다양한 우분투 플레이버를 다운로드하고 설치할 수 있음.

다른 운영 체제

     * quickget은 다양한 리눅스 배포판 및 기타 운영 체제를 지원함.
     * 사용자는 직접 리눅스 이미지를 다운로드하고 VM 구성 파일을 생성하여 가상 머신을 시작할 수 있음.

macOS 게스트

     * quickget을 사용하여 macOS 복구 이미지를 자동으로 다운로드하고 가상 머신 구성을 생성함.
     * macOS 설치 과정에서 디스크 유틸리티를 사용하여 디스크를 초기화하고 macOS를 설치함.
     * 설치 후 TRIM 기능을 활성화하여 SSD 디스크 이미지를 관리할 수 있음.

윈도우 8, 10, 11 게스트

     * quickget을 사용하여 윈도우 10과 11을 자동으로 다운로드하고 최적화된 가상 머신 구성을 생성함.
     * 윈도우 8.1도 지원하지만 자동 설치나 드라이버 최적화 기능은 없음.

SPICE

     * SPICE 프로토콜을 사용하여 게스트와 호스트 간의 클립보드 공유, 파일 공유, USB 장치 리디렉션 등의 기능을 사용할 수 있음.

접근성

     * Qemu는 BrlAPI를 사용하여 실제 또는 가짜 장치에 브레일 출력을 표시하는 기능을 지원함.

BIOS와 EFI

     * Quickemu 2.1.0부터 기본적으로 EFI 부팅 옵션을 사용함.
     * 필요한 경우 VM 구성에 추가 라인을 추가하여 레거시 BIOS 부팅을 활성화할 수 있음.

CPU 코어, RAM 및 디스크 조정

     * 기본적으로 Quickemu는 호스트 컴퓨터의 사양을 기반으로 VM에 할당할 CPU 코어 수와 RAM을 계산함.
     * 사용자는 VM 구성을 조정하여 이러한 기본 설정을 재정의할 수 있음.

파일 공유

     * 모든 파일 공유 옵션은 현재 사용자의 ~/Public 디렉토리만 게스트 VM에 노출함.

네트워크 포트 포워딩

     * 가상 머신 구성에 추가 라인을 추가하여 호스트와 게스트 간의 포트 포워딩을 설정할 수 있음.

USB 리디렉션

     * Quickemu는 SPICE를 통한 USB 리디렉션과 호스트 리디렉션을 지원함.

TPM

     * Quickemu 2.2.0부터 소프트웨어 에뮬레이트된 TPM 장치를 게스트 가상 머신에 추가할 수 있음.

모든 옵션

     * Quickemu 사용법과 다양한 선택적 매개변수에 대한 설명 제공.

데스크탑 단축키

     * VM에 대한 데스크탑 단축키를 생성할 수 있으며, ~/.local/share/applications에 저장됨.

참조

     * Quickemu 개발에 도움이 된 유용한 참조 자료들.

   GN⁺의 의견:
     * Quickemu는 가상 머신을 빠르고 쉽게 생성하고 관리할 수 있는 효율적인 도구임.
     * 다양한 운영 체제와 플레이버를 지원하여 사용자의 선택 폭을 넓힘.
     * 그래픽 사용자 인터페이스와 터미널 모두를 지원하여 다양한 사용자 경험을 제공함.

        Hacker News 의견

     * virt-manager.org 찬사
          + virt-manager.org을 통해 원격 시스템에서 SSH를 통해 qemu를 실행하는 것이 훨씬 더 나음.
          + 다양한 가상 머신 호스트와 로컬 VM을 관리하는 데 자주 사용함.
     * 보안에 대한 경고
          + 이 도구는 인터넷에서 무작위 파일을 다운로드하고, 그 체크섬을 인터넷의 다른 무작위 파일과 비교함.
          + 이는 최선의 보안 관행이 아님. 올바른 방법은 배포판 개발자의 GPG 키를 저장소에 커밋하고 모든 파일을 이 키와 대조하는 것임.
          + 이는 QEMU에 올바른 플래그를 전달하여 부팅하는 데 들인 노력을 과소평가하는 것이 아님.
     * UTM 사용 경험
          + macOS에서 UTM이 잘 작동함. 사전 구축된 이미지 갤러리도 제공함.
     * libvirt와 virt-install
          + libvirt는 virt-install을 포함하며, 이를 통해 Windows와 여러 Linux 배포판을 빠르게 생성하고 자동 설치할 수 있음.
          + Alma Linux와 함께 사용한 최근 예시를 제공함.
     * 도구의 편리함에 대한 의견
          + 이러한 도구의 편리함은 크지만, 주요 스크립트 두 개에 걸쳐 약 5000줄의 bash 코드가 있음.
          + 실행하기 전에 검증하고 싶지만, 5000줄의 bash 코드를 읽고 싶지는 않음.
     * VirtualBox 사용자의 관점
          + 가끔 Ubuntu 하에서 VirtualBox로 Windows 11을 실행하는 사용자에게 이 도구가 어떤 이점이 있는지 궁금함.
     * VM 성능 변화에 대한 질문
          + VM을 단순히 실행할 때와 비교한 성능 변화에 대한 데이터가 있는지, 특히 Linux 게스트를 Linux 호스트 안에서 실행할 때 성능에 실망하는 경우가 많아 궁금함.
          + VM 경험을 조정하는 연구를 해본 적이 없어 얼마나 놓치고 있는지 궁금함. 5% 빠른지, 100% 빠른지?
     * Linux용 Incus/LXD 추천
          + Incus/LXD를 사용하여 VM을 간단히 시작할 수 있음.
          + 시작 후, 쉘에 접근하는 방법을 제공함.
          + Incus/LXD는 시스템 컨테이너와도 작동함.
     * Arm(애플 실리콘)에서의 실행 여부
          + Arm(애플 실리콘)에서 네이티브로 실행되는지, 최신 macOS 버전에서는 어떤지, 그래픽 가속이 있는지, 네트워크는 어떻게 처리되는지에 대한 질문.
     * Proxmox와의 차이점
          + Proxmox와의 차이점과 Proxmox 환경에서 수동으로 재현할 수 있는 최적화가 있는지 궁금함.
"
"https://news.hada.io/topic?id=13141","최신 1줄짜리 CSS 업그레이드들 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           최신 1줄짜리 CSS 업그레이드들

안정적인 업그레이드

     * aspect-ratio : 비디오와 같은 요소에 강제로 종횡비를 적용
     * object-fit : img 또는 다른 대체 요소가 내용물의 컨테이너로 작동하고, background-size와 유사한 크기 조정 동작이 가능
     * margin-inline : 수평 쓰기 모드에서 왼쪽과 오른쪽 마진을 설정하는 단축 속성으로 작동

안정적인 향상

     * text-underline-offset : 텍스트 기준선과 밑줄 사이의 거리를 제어
     * outline-offset : 요소와 윤곽선 사이의 거리를 조정
     * scroll-margin-top 및 scroll-margin-bottom : 스크롤 위치에 대한 요소의 오프셋을 추가
     * color-scheme : 브라우저 UI 요소를 light 또는 dark 스킴으로 렌더링하도록 브라우저에 요청
     * accent-color : 체크박스나 라디오 버튼의 색상을 변경
     * width: fit-content : 요소를 내용물의 크기에 맞게 ""축소 포장(shrink wrap)""

점진적인 향상

     * overscroll-behavior : 스크롤이 요소에서 끝나면 스크롤 상호작용이 배경 페이지로 전달되는 기본 동작을 변경
     * text-wrap : ""고아""가 되는 단어를 방지하고 텍스트 줄의 균형을 맞추는 데 사용
     * scrollbar-gutter : 레이아웃에서 스크롤바를 위한 공간을 예약하여 원치 않는 레이아웃 변화를 방지

   21세기 자린고비

   -webkit-font-smoothing: antialiased;

   쓰고싶은 마음은 굴뚝같지만 쓸 수 없는 것들...ㅠㅠ

   아직도 IE 지원하세요?

   이미 쓰고 있는 것도 있지만, 처음 보는 것도 있네요. +_+
   브라우저 지원이 아쉬울 때가 가끔 있지만, 최신 CSS를 보면 엄청 발전했다고 느껴져요.
"
"https://news.hada.io/topic?id=13066","구글 Bard, LLM 성능 리더보드에서 GPT-4 Turbo 바로 아래인 2위까지 상승","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           구글 Bard, LLM 성능 리더보드에서 GPT-4 Turbo 바로 아래인 2위까지 상승

     * 구글 Bard (Gemini Pro) 가 GPT-4-0314/0613 등을 제치고 GPT-4 Turbo (Arena ELO 1249) 바로 아래인 아래 2위 (1215) 까지 점프
     * 또한, HHEM 리더보드의 Hallucination Rate도 12% 에서 4.9%로 감소. (GPT-4/4 Turbo는 3.0%, GPT 3.5 Turbo 는 3.5%)
     * 바드 + 제미니 울트라가 어떻게 출시될지 정말 기대됨

  Hacker News 의견

     * 구글 바드의 성능 제한: 한 사용자는 구글 바드의 성능이 비용 때문에 제한되었다고 의심해왔음. 구글은 바드를 무료로 제공하고 있으며, 영원히 모든 사용자에게 거대한 모델을 무료로 운영하고 싶지 않았을 것임. 추론 비용에 대한 혁신이 있었거나, 경쟁에 뒤처진다는 평가에 지쳐 일시적으로 비용을 감수하기로 결정했을 수도 있음. 사용자는 구글이 공개적으로 최고의 모델을 운영하는 것을 볼 수 있도록 구독 서비스를 시작해야 한다고 생각함.

     Jeff Dean의 트윗에 따르면, ""Gemini Pro-scale model""이라는 새로운 모델이 출시되었으며, 독립적인 lmsys 리더보드에서 2위를 차지했다고 함. ""Pro-scale""이 무엇을 의미하는지, 모든 사용자가 이미 이 모델을 사용하고 있는지는 확실하지 않음.
     * 바드의 초기 실망과 개선: 바드는 출시 당시 실망스러웠으나 개선되고 있음을 보는 것이 좋음. 사용자 개인적인 경험으로는 GPT 4/Turbo보다 Claude 2를 더 많이 사용하며, 그 응답 스타일과 질문에 대한 답변을 선호함. Kagi에서는 Claude 1을 GPT 4(비터보)와 동등하게 평가하며, Claude 2의 품질을 4 Turbo와 같은 수준으로 평가하고 있음을 주목할 만함.
     * 바드 모델의 투표 수: 바드 모델은 상대적으로 투표 수가 적음. 다른 모델들과 투표 수가 비슷한 수준이 될 때까지 기다릴 것임.
     * 바드의 적은 제한성: 바드는 GPT-4에 비해 훨씬 적게 제한되어 있으며, 이것만으로도 GPT-4보다 훨씬 낫다고 느낌.
     * 무료 LLM 중에서 바드의 유용성: 모든 무료 LLM 중에서 바드가 가장 유용하다고 생각함. ChatGPT 3.5는 비교도 되지 않으며 게으름.
     * 벤치마크 방법에 대한 궁금증: 벤치마크가 어떻게 수행되는지 궁금함. 사용자의 기대나 사용성을 더 잘 대표할 수 있도록 개선될 수 있을 것으로 의심함.

     Jeff Dean의 트윗을 본 후 바드를 사용해봄. GPT-4에 비해 여전히 실망스러움. 질문에서 벗어나 있으면서도 그 사실을 깨닫지 못함.
     차트 생성을 요청했을 때, ""여기 차트가 있다""고 세 번이나 답했지만 실제 차트는 없었으며, 결국 그 기능이 없다고 말함.
     * 개인적인 경험과의 불일치: 개인적인 경험으로는 답이 필요할 때마다 GPT로 돌아가게 됨. 대부분의 경우 Google Bard보다 ChatGPT 3.5를 선호하며, GPT 4가 확실히 Bard보다 낫다고 느낌.
     * 바드와 ChatGPT 비교: 개인적으로는 바드가 ChatGPT보다 훨씬 낫다고 생각함. 검열되지 않은 Mistral을 사용하고 싶음.
     * 바드의 반응성과 검열 추가: 이전에는 요청에 반응적이었고, 거부하지 않았음. 검열 계층이 추가된 것 같음. 예전의 바드가 그립다고 느낌.
"
"https://news.hada.io/topic?id=13032","월 $500 이상 버는 사이드 프로젝트가 있나요? 2024","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    월 $500 이상 버는 사이드 프로젝트가 있나요? 2024

   HN에 매년 올라오는 질문
     * 맥북용 접지된 아답터를 공장과 직접 제작해서 판매함. 아마존에서 꾸준히 팔리는 중
     * Aptakube : K8s로 마이그레이션 하는 GUI 앱이 마음에 드는게 없어서 직접 개발. 여러 클러스터에 동시 연결가능한게 특징. 월 평균 €5000 정도의 수익이 남
     * Collab을 이용해서 LoRAs로 디퓨전 모델을 훈련시키는 작업을 자동화하여 커미션 기반으로 수익을 창출. 최고의 달에는 약 2,000달러의 수익. 커미션당 약 30달러
     * 새로운 프로그래밍 언어를 배우기 위한 실제 프로젝트를 공유하는 'Coding Challenges' 뉴스레터. 40개 이상의 실제 프로젝트 및 유료 코스도 개설
     * Built At Lightspeed : 2023년 초에 시작한 Jamstack, 정적 사이트 생성기, 템플릿 마켓플레이스. 매출은 주로 Affilate (제휴 판매)에서 나옴. 월 약 $400 정도 되며, 스폰서도 시작
     * 2021년에 구글 드라이브를 검색가능한 위키로 호스팅 해주는 KBee를 시작. 월 $2000 정도의 수익
     * GifMemes 로 지난 12월에 $240 수익. 방문자 수는 약 9천 명, 페이지 뷰는 2만 7천 건. 워터마크 제거당 10달러 받아서 수익을 내고 있음
     * Beat That Flight 로 6년간 부업중. 항공 & 호텔 검색엔진으로 FB/이메일 구독을 통해서 특가 상품을 공유. 큰 수입은 아니지만, 이 덕분에 아내가 출산하고 직장으로 복귀 안해도 됨
     * FileStash 웹 파일 관리자 오픈소스. 추가 기능을 위한 플러그인 제작을 해주면서 수익을 내고 있음. 맥도날드 정규직 직원 월급 정도는 되는 듯
     * Excel/Google 스프레드 시트 강좌를 만들어서 DAASS에서 판매. 월 $1000 정도의 커미션을 받음
     * 소규모 회사/개인 개발자를 위한 DevOps 교육과정. 월 $500 정도의 수익이 남
     * PDF로 된 은행 거래 명세서를 CSV로 변환하는 변환기. 월 $550 정도의 수익이 남
     * ConvertCase : 잘못 입력해서 대문자로 입력한걸 변환해주는 사이트. 광고로만 월 $20000 정도 수익이 남. 모두 Organic 트래픽
     * 호주의 401K 관련 문서를 작성해주는 SuperChoiceForm. 월 3만명의 방문자로 $1200의 수익
     * BearBlog 블로깅 플랫폼. 월 $500 이상 수익이 나고 있음
     * ZestUI : UI kit for Rails. 월 $500 이상 판매중.

   대부분 광고 수익이 아니라 결제 수익인 것 같네요.
   한국에서는 사업자 없이는 결제 모듈 붙이기가 어려운데 해외는 좀 더 수월한가요?
   예를 들어 ""워터마크 제거당 10달러 받아서 수익을 내고 있음"" 하려면 결제 모듈을 붙여야 할텐데, 궁금하네요. Paypal 같은데서 쉽게 결제 모듈 붙이는게 되나..

   영미권은 개인도 별도 사업자 등록없이 결제 서비스를 붙이는게 가능할 거에요. 예를들어 Stripe 같은 경우 개인 계좌 정보만 있으면 약관에 위배되지 않는 이상 별 어려움이 없는 것 같습니다.

   오 현지화만 가능하면 해외에서 서비스하는게 훨씬 접근도 쉽군용!

   얼마전 본 기사 공유합니다. GPT여친 카린 AI

   https://www.unicornfactory.co.kr/article/2023051522405497936

   월 $500 이상 버는 사이드 프로젝트가 있나요? 2022
   월 $500 이상 버는 사이드 프로젝트가 있나요? 2023

   2025년도 버전은 없나요? ㅎㅎ

   2024년 사이드 프로젝트로 월 $500를 버는 사람들 – Show and Tell
   작년 연말에 올라와서 실제로는 2024년 글이 2개가 되었네요 ㅎㅎ
"
"https://news.hada.io/topic?id=13145","애플이 Concurrency를 Swift에 만든 이유 (AsyncSequence)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             애플이 Concurrency를 Swift에 만든 이유 (AsyncSequence)

   애플은 Concurrency 라는 새로운 패러다임을 Swift에 넣었다. 비동기 처리를 for-await-in 문을 통해서 처리한다.

   기존에는 Swift 는 Closure(Block function) 을 이용해서 비동기를 처리했다. 그러다가 Combine 이라는 프레임워크도 나오게 되었다. 이 컴바인 프레임워크도 Erik meijer의 RX를 애플 자체로 만든 것이다.

   하지만 두 위의 방식의 문제는 Swift의 GC 방식인 ARC의 한계가 있다. capture list 라는 것 때문에, 메모리 릭이 나올 수 있었고, 즉 Closure를 사용하는 방식을 피하고 싶었던 것이다. 그래서 Erik Meijer가 iterable(Sequence)과 Iterator를 뒤집어서 Reactive를 만든 것 처럼, 애플은 이를 뒤집지 않고 Async하게 만든 AsyncSequence(AsynscIterable) 과 AsyncIteraotr를 만들어서 메모리 릭 문제를 해결하고자 함과 동시에 새로운 비동기 패러다임을 제시했다.
"
"https://news.hada.io/topic?id=13028","OpenAI, 주요 문서를 대중에게 공개하겠다는 약속을 조용히 폐기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 OpenAI, 주요 문서를 대중에게 공개하겠다는 약속을 조용히 폐기

     * OpenAI는 창립 당시부터 거버넌스 문서를 공개하겠다고 약속했으나, 최근 WIRED가 이를 요청하자 제공을 거절함
     * OpenAI는 사회와 대중이 강력한 AI 개발에 참여하도록 설립되었으나, 현재는 내부 문서를 공개하지 않는 새로운 정책을 채택함
     * OpenAI의 투명성 약속 철회는 회사의 취약점과 AI의 미래에 대한 중요한 영향력을 가진 회사의 최근 위기에 대한 이해를 어렵게 함

OpenAI의 위기와 거버넌스

     * OpenAI 이사회는 CEO Sam Altman을 해임했으나, 직원과 투자자의 반발로 Altman이 복귀하고 대부분의 이사회 멤버가 교체됨
     * Altman의 개인 투자와 그의 직무 간의 혼합이 이사회의 불신의 일부 원인이었을 수 있음
     * OpenAI의 거버넌스 문서 공개는 이사회가 Altman과 그의 외부 활동에 대해 어떤 권한을 가지고 있는지 밝힐 수 있음

OpenAI의 기업 구조와 Microsoft

     * OpenAI의 창립 정관은 이사회의 일부가 통제를 잡고 Altman을 축출할 수 있는 방법을 제시함
     * Microsoft의 CEO Satya Nadella는 Altman 해임에 대해 공개적으로 놀랐다고 말함
     * OpenAI는 이사회 구조를 안정화하고 Microsoft와 같은 후원자를 달래기 위해 거버넌스 문서를 수정했을 가능성이 있음

OpenAI의 투명성 감소

     * OpenAI는 과거 AI 발명에 대한 상세한 정보를 공개했으나, 최근에는 ChatGPT와 같은 도구의 기술적 세부사항과 데이터를 보호함
     * 2019년 비영리 부문에서 대부분의 AI 개발을 수행하는 영리 자회사를 설립한 이후 투명성이 감소함
     * OpenAI의 비영리 조직은 최종적으로 OpenAI의 활동과 기술을 통제함

OpenAI의 비영리 조직과 IRS 보고

     * 미국 비영리 조직은 연간 IRS 보고서를 공개하고, 추가 문서가 공개 가능한지 여부를 보고해야 함
     * OpenAI는 2022년까지 연간 IRS 보고서에서 추가 파일을 ""요청 시"" 제공한다고 밝혔으나, 실제로 제공하지 않음
     * 비영리 조직이 내부 문서를 공개하는 것은 드문 일이며, 접근하기 어려움

OpenAI의 재무 상황

     * OpenAI가 공개한 재무 제표는 영리 부문의 결과를 제외하고, 2022년에는 수익 44,000달러와 비용 1.3백만 달러를 보고함
     * OpenAI 전체는 수백만 달러의 매출을 올렸으나, 이는 공개되지 않음
     * OpenAI의 비영리 부문은 대중의 지원을 거의 받지 않아, 투명성을 높이기 위한 동기가 부족함

GN⁺의 의견

     * OpenAI의 투명성 약속 철회는 AI 기술의 미래에 대한 중요한 영향력을 가진 기업의 운영에 대한 이해를 어렵게 만듦
     * 이러한 변화는 AI 연구와 개발에 대한 대중의 참여와 신뢰를 저하시킬 수 있음
     * OpenAI의 정책 변화는 AI 산업 내에서 투명성과 윤리적 운영에 대한 논의를 촉발할 수 있는 중요한 사례임

        Hacker News 의견

     * 실망스럽지만 놀랍지 않은 소식. 이 사건에서 배울 점을 찾아보자.
          + AI 분야에서는 알트루이즘(이타주의)과 개방성을 주장하는 것이 인기가 있으며, OpenAI, Anthropic, 그리고 머스크의 새로운 xAI 등은 공공의 이익을 위해 특이한 거버넌스 구조를 가지고 있다. 문제는 이들 중 어느 회사가 충분한 주목을 받아 수십억 달러의 이익을 얻을 가능성이 보이기 시작하면 상황이 변한다는 것이다.
          + 이 문제는 AI 회사에만 국한되지 않으며 새로운 것도 아니다. 이것은 인간 본성의 일부이며 항상 존재할 것이다.
          + 우리는 AI의 혜택이 소수의 회사가 아닌 대중에게 돌아가도록 진정으로 개방된 AI 모델(개방된 훈련 데이터, 훈련 소스 코드 및 하이퍼파라미터, 모델 소스 코드, 가중치)에 더 많은 강조와 주의를 기울여야 한다.
     * OpenAI가 ChatGPT 출시 이후로 아무것도 공유하지 않고 수십억 달러의 투자를 받았다는 것을 알고 있으므로 OpenAI가 폐쇄적이라는 데에 놀랄 필요가 없다.
     * OpenAI는 그들이 한 모든 약속을 어겼다.
     * 이사회는 어떻게 이런 일이 발생하게 놔뒀을까!
          + 더 심각하게 생각해보면, 이것은 명백한 결과이면서도 약간 음습한 느낌이 든다.
          + OpenAI가 많은 자금과 자본이 필요하다는 것은 사실이며, 이로 인해 자금 조달과 파트너십이 필요하다는 것도 사실이다.
          + 하지만 그들이 처음에 존재할 수 있었던 유일한 이유는 '개방적인', 거의 공공재와 같은 회사로 자신들을 포지셔닝하고 이를 기반으로 기부금을 받았기 때문이다.
     * 이 기술이 사회에 미칠 수 있는 해로운 사용에 대해 듣고 있는 모든 것을 바탕으로, 이 상황이 무슨 일이 벌어지고 있는지 파악하기 위한 일종의 조사가 필요할 정도로 심각한지 궁금하다.
          + 이 상황은 충분히 심각해서 이런 종류의 작업을 사유화하는 것을 방치할 수 없다.
          + '이것이 정상'이라는 주장에 관심을 가질 필요가 없다. 그것은 사람들이 이런 행동을 정상화하도록 만드는 시도일 뿐이다.
          + 공공의 이익을 위해 행동하는 인공지능 안전 센터가 있는지, 그리고 이 문제가 그들의 레이더에 있는지 아는 사람이 있나?
     * 머스크를 옹호하고 싶지는 않지만, 만약 내가 그였다면 기사가 '부유한 기술 기업가들이 투명성을 약속했지만 이제는 그렇지 않다'고 시작하고, 유일하게 언급된 창립자가 몇 년 전에 퇴출되었고, 이제는 경쟁자가 되어 '최대 이익을 위한 초폐쇄 소스 AI'라고 부르는 상황에서 8단락이나 걸려서 이를 지적하는 것에 대해 조금 화가 날 것 같다.
          + 언론은 비난에 중독되어 있으며, 비난과 헤드라인 사이에 들어가는 모든 뉘앙스는 기사의 바닥에 배치되어, 유료 벽 뒤에 숨겨진다. 아마도 몇 년 후에는 알트만에게도 이런 전술이 적용될 것이다.
          + 상황이 너무 나빠져서, 내가 위선을 암시하는 헤드라인을 읽을 때 실제로는 반대를 더 믿게 되는 경향이 있는데, 이것은 정확하다고 가정하는 것만큼이나 끔찍한 정신적 장애다!
     * 이 조직의 시작부터 이런 일이 일어나지 않도록 방지하는 규칙이 있어야 했다. 사건의 전개는 그들의 거버넌스 형태가 효과적이지 않음을 보여준다.
     * 그들이 회사 이름을 'Microsoft AI'로 바꾸기까지 얼마 남지 않았다.
     * OpenAI를 공익 비영리 회사로 보이려 하지만, 실제로는 다른 사적인 기술 회사와 마찬가지로 보는 것이 최선이다.
"
"https://news.hada.io/topic?id=13097","Show GN: LLM을 이용한 git commit 메시지 자동 작성 툴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Show GN: LLM을 이용한 git commit 메시지 자동 작성 툴

   안녕하세요. 거의 1년전에 loz라는 툴을 여기에 공유한적 있습니다.
   https://news.hada.io/topic?id=8594

   당시에는 OpenAI API기반으로 유닉스 pipe와 연동해서 여러가지 기능을 수행하는 툴이였는데, git commit 메시지 작성도 지원했습니다. 이번 업데이트에서는 ollama를 지원해서 원하는 LLM 모델을 로컬에 쉽게 설치해서 사용해볼 수 있습니다.

   제가 테스트해본 것은 Llama2와 Code Llama인데 로컬에서 잘 동작합니다. ollama는 llama-cpp를 기반으로 동작하므로 GPU가 없어도 사용할 수 있습니다.

   참고로 loz project 대부분의 git commit message는 gpt-3.5-turbo와 code llama를 통해 작성되었습니다.

   현재 우분투 22.04에서 테스트했습니다. 맥에서도 잘될겁니다. 사용해보시고 버그나 아이디어 있으면 알려주시가 바랍니다.
"
"https://news.hada.io/topic?id=13056","오아시스(Oasis) – 작고 정적 링크된 리눅스 시스템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    오아시스(Oasis) – 작고 정적 링크된 리눅스 시스템

오아시스(Oasis)는 작은 리눅스 시스템

     * 오아시스는 다른 리눅스 기반 운영체제와 상당히 다르며, BSD에 더 가까움.
     * 모든 소프트웨어가 정적 링크되어 있어, 라이브러리 업그레이드 문제를 해결하고, 다른 시스템으로 쉽게 복사할 수 있는 완전히 독립적인 바이너리를 제공함.
     * 빠른 빌드와 100% 재현 가능한 빌드를 제공하며, 최적의 빌드 시간, 예측 가능하고 재현 가능한 빌드, 감소된 빌드 시간 의존성, 패키지 경계를 넘어서도 증분 빌드 가능함.
     * 최소한의 부트스트랩 의존성을 가지고 있어, macOS나 OpenBSD와 같은 비리눅스 시스템에서도 쉽게 크로스 컴파일할 수 있음.

원칙

     * 소프트웨어 복잡성은 모든 전이 의존성을 포함하여 측정되어야 함.
     * 실행 파일은 정적으로 링크되어야 함.
     * 소프트웨어 구성 요소는 쉬운 사용자 정의 및 수정을 허용해야 함.
     * 패키지 소스는 URL이나 git 서브모듈을 통해 참조되어야 하며, 직접 포함되어서는 안 됨.
     * /etc는 완전히 이해될 수 있을 정도로 단순해야 함.
     * 패치는 잘 조직되어 있어야 하며, 좋은 설명을 가지고 있으며, 항상 깔끔하게 적용되어야 함.

설치

     * 오아시스는 야심 찬 프로젝트이며, 아직 많은 작업이 남아 있음.
     * 사용자는 자신의 커널을 빌드하고 시스템 문제를 해결하는 데 익숙해야 함.
     * 문제가 발생하면 도움을 제공하는 데 항상 기쁨.

QEMU

     * 오아시스를 직접 설치하지 않고 시도하고 싶다면 QEMU 이미지를 사용할 수 있음.
     * 아카이브에는 루트 파일시스템, 리눅스 커널, QEMU를 실행하는 스크립트가 포함되어 있음.
     * ./run을 사용하여 그래픽 모드로, ./run -s를 사용하여 시리얼 모드로 실행할 수 있음.

소프트웨어

     * 가능한 한 간단하고 작은 라이브러리 및 도구의 구현을 사용함.
     * musl, sbase, ubase, pigz, mandoc, bearssl, oksh, sdhcp, vis, byacc, perp 및 sinit, netsurf, samurai, velox, netbsd-curses 등이 glibc, coreutils, util-linux, gzip, man-db, openssl, bash, dhclient/dhcpcd, vim/emacs, bison, sysvinit/systemd, chromium/firefox, ninja, Xorg, ncurses의 대체품으로 사용됨.
     * 패키지는 논리적 세트로 그룹화되어 있으며, 전체 목록은 pkg 디렉토리에서 확인할 수 있음.
     * 선호하는 소프트웨어가 누락된 경우, pkgsrc나 nix를 통해 여전히 설치할 수 있음.

연락처

     * 질문, 패치, 일반 토론을 위해 메일링 리스트(~mcf/oasis@lists.sr.ht)와 IRC 채널(#oasis on libera.chat)을 사용할 수 있음.


    GN⁺의 의견

     * 오아시스는 기존 리눅스 시스템과 다른 접근 방식을 제공하며, 정적 링크, 빠른 빌드, 최소 부트스트랩 의존성과 같은 특징으로 개발자들에게 새로운 선택지를 제공함.
     * 이 시스템은 소프트웨어 개발의 복잡성을 줄이고, 사용자 정의 및 수정의 용이성을 중시하는 철학을 가지고 있어, 소프트웨어 엔지니어링의 원칙에 대한 신선한 시각을 제공함.
     * 오아시스는 아직 개발 중인 프로젝트이지만, 기술적 도전을 즐기고 시스템에 대한 깊은 이해를 원하는 사용자들에게 매력적인 대안이 될 수 있음.

        Hacker News 의견

     * 시스템에 대해서는 많이 말할 수 없지만, IRC를 통해 커뮤니티와 상호작용할 때 매우 친절했다고 함. 불변성 OS 이미지를 구축하여 쿠버네티스 노드로 실행할 계획이 있었으며, 약간의 도움을 받아 성공했다고 함.
     * 정적 링킹은 라이브러리의 여러 복사본으로 인해 기본 이미지와 런타임 메모리가 더 커질 수 있음을 시사함. 정적 링킹의 단순성은 좋지만 ""부피를 줄이기""라는 아이디어에 반하는 것처럼 보임.
     * 2022년 8월의 이전 토론 링크 제공.
     * 기본 설치 크기가 얼마인지 아는 사람이 있는지 궁금함. 어디에서도 답을 찾을 수 없었고, QEMU 이미지로의 링크가 현재는 깨져 있음. 예를 들어, 비슷한 패키지 세트를 가진 Alpine과 비교해서 어떤지 궁금함.
     * 사용 사례가 무엇인지, croc C 컴파일러를 사용하는 것의 장점이 무엇인지 궁금함. TCC 대신 croc을 사용하는 이점은 무엇인지, Netsurf 브라우저에 대해 알게 되어 흥미로움. 하지만 Duktape JS 엔진을 사용하므로 성능 문제가 있을 수 있음.
     * 자바스크립트를 끈 상태에서 Github에 접근할 수 없다는 불만을 표하는 (삭제된) 댓글이 있었음. Oasis 저장소는 sourcehut에서도 미러링되고 있으므로, 그것이 더 수용 가능할 수 있음.
     * michaelforney는 st의 wayland 포트도 수행했음. Oasis의 전신은 sta.li임.
     * 정적 라이브러리의 크기가 얼마나 되는지 궁금함. 동적 라이브러리는 주소 공간을 공유할 수 있지만, 정적 라이브러리의 경우 링커가 사용되지 않는 루틴을 제거할 수 있으므로 예상치 못한 효율성이 있을 수 있음. 또한, 더 빠를 수도 있음.
     * musl과 전통적인 glibc 사이의 비교는 무엇인지, 두 라이브러리 사이에 성능 차이가 있는지 궁금함. 최근 Rust와 Zig 생태계에서 musl 사용이 점점 더 많아지고 있음.
     * 흥미로운 선택들, 단순히 또 다른 리눅스 배포판이 아닌 것에 대해 긍정적인 평가.
"
"https://news.hada.io/topic?id=13133","클린 코드의 힘","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                클린 코드의 힘

     * 클린 코드는 개발과 프로덕션에 맞는 코드
          + 클린 코드는 명확하고, 일관되며, 구조화됐고, 테스트할 수 있으며, 검증되고, 믿을 수 있으며, 확장할 수 있는 데다 버그와 결함이 최소한으로 있음
     * 클린 코드 모범 사례로, 개발 팀은 코드 취약점과 관련된 위험을 줄이고, 결과적으로 비즈니스 애플리케이션의 수명을 늘리는 걸 포함해 코드 상태를 더 잘 관리할 수 있음
     * 클린 코드 원칙을 수용하면 조직은 과거의 나쁜 코드와 잘못된 관행을 없애고, DevOps 워크플로 효율도 높일 수 있음
     * 클린 코드가 코딩 프로세스에서 해결하는 일:
          + 첫째, 클린 코드는 코드를 읽고, 이해하며, 수정하기 쉽도록 보장함
          + 둘째, 클린 코드는 진화하는 요구사항과 전달 요구를 수용하기 위해 규모를 쉽게 확장하거나 축소할 수 있는 코드를 생산하려 애씀
          + 셋째, 클린 코드는 오류를 확인하고 해결하는 프로세스를 간소화함
"
"https://news.hada.io/topic?id=13051","마이크로소프트, 액티비전 블리자드 및 Xbox 직원 1,900명 해고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 마이크로소프트, 액티비전 블리자드 및 Xbox 직원 1,900명 해고

     * 마이크로소프트가 액티비전 블리자드와 엑스박스 부서의 직원 1,900명을 해고함
     * 주로 액티비전 블리자드 직원들이 해고 대상이지만, 엑스박스와 제니맥스 직원들도 영향을 받음
     * 해고는 마이크로소프트 게이밍 부문 전체 직원의 약 8%에 해당하는 수치임

블리자드 사장 마이크 이바라의 퇴사 및 서바이벌 게임 프로젝트 취소

     * 블리자드 사장 마이크 이바라가 회사를 떠나기로 결정함.
     * 블리자드의 공동 창립자이자 최고 디자인 책임자인 앨런 애드햄도 회사를 떠남.
     * 블리자드가 개발 중이었던 서바이벌 게임 프로젝트가 취소되고, 관련 인력은 다른 초기 단계의 프로젝트로 이동함.

기타 정보 및 변화

     * 마이크로소프트는 지난해 10월 액티비전 블리자드 인수를 완료함
     * 전 액티비전 블리자드 CEO 바비 코틱은 지난해 말에 퇴임함
     * 최근 엑스박스 리더십에 변화가 있었으며, 새로운 블리자드 사장은 다음 주에 발표될 예정임
     * 마이크로소프트는 작년에 10,000명의 직원을 해고한 바 있으며, 다음 주에 2024 회계연도 2분기 실적을 발표할 예정임

GN⁺의 의견

     * 이번 해고는 게임 산업 내에서 일어나는 구조조정의 일환으로, 마이크로소프트가 액티비전 블리자드 인수 후 조직을 재편하고 있는 상황을 반영함.
     * 블리자드의 사장과 주요 인물들의 퇴사는 회사 내부에 큰 변화가 있음을 시사하며, 이는 향후 블리자드의 게임 개발 방향과 기업 문화에 영향을 미칠 수 있음.
     * 이러한 변화는 업계 전반에 걸쳐 게임 개발과 플랫폼 전략에 대한 재고와 새로운 기회를 모색하는 추세를 보여주며, 게임 플레이어와 개발자 모두에게 중요한 영향을 미칠 것으로 예상됨.

        Hacker News 의견

     * 2024년의 새로운 일상은 해고 소식을 듣고 친구들에게 안부를 묻는 것임. 세계에서 가장 부유한 회사들이 재무 상태를 개선하기 위해 해고를 수단으로 사용하는 것은 매우 문제가 있음. 내 회사는 이러한 방법을 사용하지 않음. 또한, 대기업의 채용 과정에 문제를 지적하면 그들은 그것이 절대적으로 필요하다고 주장함. 많은 낭비와 과정에서 많은 사람들이 피해를 보는 것을 볼 수 있음. 분명히 더 나은 방법이 있어야 함.
          + 2024년에는 해고가 일상화되어 친구들의 안부를 확인하는 것이 보통의 일이 됨.
          + 부유한 회사들이 재무 상태를 개선하기 위해 해고를 이용하는 것에 대한 비판.
          + 대기업의 채용 과정에 대한 문제 제기와 이에 대한 회사들의 방어적 태도 언급.
          + 현재의 해고 방식에 대한 비효율성 지적과 더 나은 대안의 필요성 강조.
     *

     It’s been a little over three months since the Activision, Blizzard, and King teams joined Microsoft
          + 액티비전, 블리자드, 킹 팀이 마이크로소프트에 합류한 지 3개월이 조금 넘었음.
     * Always on the table after an acquisition. Especially close to earnings
          + 인수 후에는 항상 해고가 논의됨, 특히 실적 발표에 가까울 때.
     * I hope severance is nice for all impacted
          + 해고된 모든 사람들에게 좋은 퇴직금이 제공되기를 바람.
     * Last time the stock market was surging, everyone was hiring. This time it’s different
          + 이전에 주식 시장이 상승할 때 모두가 채용했지만, 이번에는 상황이 다름.
     * ""primarily laying off roles at Activision Blizzard, some Xbox and ZeniMax employees will also be impacted / work out to roughly 8 percent of the overall Microsoft Gaming division that stands at around 22,000 employees in total.""
          + 주로 액티비전 블리자드에서 해고가 이루어지며, 일부 Xbox 및 ZeniMax 직원도 영향을 받음.
          + 전체 마이크로소프트 게이밍 부서의 약 8%에 해당하는 약 22,000명의 직원이 해고됨.
     * 2k employees look like a lot, 8% looks kinda better. I need Starcraft 3 badly :)
          + 2천 명의 직원 해고는 많아 보이지만, 전체의 8%라고 생각하면 상황이 나아 보임.
          + 스타크래프트 3가 절실히 필요함.
     * Abandonment of Odyssey linked to problems with the in-house Synapse engine.
          + 오디세이 프로젝트의 포기는 내부 Synapse 엔진의 문제와 연관됨.
     * A good old fashioned software debacle.
          + 전형적인 소프트웨어 실패 사례.
     * This felt inevitable, probably tons of duplicate roles eliminated as systems are integrated.
          + 시스템 통합으로 인해 중복된 역할이 많이 제거되는 것은 불가피해 보임.
     * Something tells me a lot of game design and eng we’re not affected.
          + 게임 디자인과 엔지니어링 부문은 크게 영향을 받지 않았을 것 같음.
     * An acquisition is a killing of a competitor. We need new businesses for job growth.
          + 인수는 경쟁자를 제거하는 것이며, 일자리 증가를 위해서는 새로운 사업이 필요함.
     * This reminds me of when Microsoft bought Rare. One of greatest game creators of all time, who seemed to be the perfect fit as 2nd party Nintendo developers. Suddenly they couldn’t produce anything noteworthy. I’ve no idea why. I just wish they’d been GameCube developers instead. That console needed them and to me was a better fit for their types of games. Oh well.
          + 마이크로소프트가 레어를 인수했을 때를 떠올림.
          + 레어는 닌텐도의 2차 개발자로 완벽한 조화를 이루는 것처럼 보였으나, 갑자기 주목할 만한 것을 생산하지 못함.
          + 이유는 알 수 없으나, 게임큐브 개발자였다면 더 좋았을 것이라는 개인적인 바람 표현.
     * It blows my mind that many people worked there, only 8% of Microsoft Gaming?
          + 마이크로소프트 게이밍에서 일하는 많은 사람들 중 단지 8%만이 해고되었다는 사실에 놀람.
     * On the bright side, I wonder how many new studios will spawn out of this?
          + 긍정적인 측면에서, 이번 해고로 인해 얼마나 많은 새로운 스튜디오가 생겨날지 궁금함.
"
"https://news.hada.io/topic?id=13111","2024년 가장 기대되는 책들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            2024년 가장 기대되는 책들

“Filterworld: How Algorithms Flattened Culture” by Kyle Chayka

     * 추천 알고리듬이 정치와 시민 사회에 미치는 위험에 대해서는 많은 이야기가 있지만, 문화에 미치는 위험에 대해서는 거의 언급되지 않았음
     * 알고리듬에 중독된 우리는 더 지루하고 덜 흥미로운 콘텐츠를 소비하게 되었고, 베이컨이나 바스키아, 심지어 뱅크시도 아닌 Beeple의 시대로 접어들었다고 차이카는 주장
          + Beeple(Mike Winkelmann) : NFT로 유명한 디지털 아티스트. 그의 작품 ""Everydays: The First 5000 Days"" 가 크리스티 경매에서 $69m에 팔림
     * 이 쇠퇴의 기원을 생각보다 훨씬 더 거슬러 올라가 추적하는 책
     * 그러나 차이카는 이렇게 말함

     ""저는 비관적이지 않습니다. 저는 인터넷에서 자랐습니다. 저는 희망적입니다. 저는 현재보다 더 나은 미래를 열망합니다.""
     * 카일 차이카 : 미국의 작가이자 평론가, Newyorker의 스탭 작가. 디지털 기술, 인터넷에 관한 글을 쓰며 저서로 ""단순한 열망: 미니멀리즘 탐구""가 있음

“Read Write Own” by Chris Dixon (1월30일)

     * 안드레센 호로위츠의 제너럴 파트너인 크리스 딕슨의 작업은 그 자체로 의미가 있음
          + 샘 알트만, 밥 아이거, 마크 큐반이 흠집을 내는 것은 신경 쓰지 말 것
     * 그의 새로운 오픈 인터넷 선언문은 암호화폐, 웹3.0, 크리에이터 경제의 거품을 걷어내고 인터넷 통합에 맞서 인간의 잠재력을 발휘할 수 있는 방법에 대한 냉철한 논리를 제시
     * 책의 제목은 그가 구상하는 인터넷의 다음 시대, 즉 개인 사용자가 마침내 온라인에서 우리가 만든 지적 재산을 실제로 읽고 쓰고 소유할 수 있는 기회를 갖게 되는 시대에서 따온 것
     * 크리스 딕슨 : 제품 추천 서비스였던 Hunch를 창업해서 eBay가 2011년에 인수. 2012년 A16z에 조인해서 다양한 회사에 투자를 주도 했음. 2022년 Forbes의 Midas 리스트(가장 영향력있고 투자 잘하는 VC 리스트)에서 1위였음. 2023년엔 25위. 현재는 A16z의 GP이며, Web3 와 Cryptocurrency 에반젤리스트임.

“Ghost Town Living” by Brent Underwood (3월19일)

     * 2010년 컬럼비아 대학교를 졸업한 브렌트 언더우드는 ""다음 번에는 강아지 필터를 만들어 인스타그램에 적용하겠다""는 친구들의 야망이 무모하다는 것을 깨달았음
     * 한동안 텍사스 주 오스틴에서 디지털 마케터로 일했지만, 팬데믹이 닥치자 더 큰 도전을 하기로 결심
     * 버려진 옛 은광 마을인 캘리포니아 주 Cerro Gordo를 사서 개조하는 것
     * 모험과 어리석음이 거의 같은 비율로 뒤따랐음
     * 그가 도착한 날 눈보라가 몰아쳤고, 나중에 전기 화재로 마을의 일부가 황폐화됨
     * 세로 고르도에서의 그의 삶은 사업가적 집착이 한 사람을 얼마나 멀리 데려갈 수 있는지, 그리고 30대 중반에 닥칠 수 있는 불안한 무기력감에 대해 많은 것을 말해줌
     *

     ""누군가 저에게 '세로 고르도의 엑싯 플랜은 무엇인가요'라고 물었습니다.""
     ""사실 저는 그런 계획이 없습니다. 죽는 것이 출구 계획입니다. 인생의 전성기를 보내야 할 회사를 세운 후 매각하거나 다른 사람에게 넘기려고 하는 것은 좀 후진적이라고 생각합니다.""

“Co-Intelligence: Living and Working With AI” by Ethan Mollick (4월2일)

     * ""AI가 (최소한 오늘날의 GPT-4 수준에서) 그냥 '사라지는' 상황은 없다는 것을 깨달을 필요가 있습니다.""
     * 그의 조언은? 인공지능을 이길 수 없다면 인공지능과 함께 하라는 것
     * 와튼 교수인 그의 연구는 개인이 더 혁신적이 될 수 있도록 돕는 도구에 초점을 맞추고 있으며, 그는 AI가 그 어떤 것보다 더 유용해질 것이라고 믿음
     * 오늘날 대화를 지배하는 많은 목소리와 달리, 몰릭은 AI에 대한 초낙관주의자도 아니고 종말론자도 아님
     * 오히려 그의 새 책은 독자들이 AI를 업무, 학습, 창작 방식을 강화할 수 있는 협력자로 생각하도록 장려
     * 그는 AI의 부상에 대해 ""암울하게 체념해서는 안 되고, 오히려 우리를 흥분시켜야 한다""고 주장함
     * 에단 몰릭 : 와튼스쿨 교수로 혁신과 기업가 정신을 연구하고 가르치며, 인공지능이 업무와 교육에 미치는 영향을 연구. 게임, AI, 시뮬레이션으로 새로운 교육을 만드는 와튼 인터랙티브를 이끄는 사람이기도 함

""Billionaire, Nerd, Savior, King: Bill Gates and His Quest to Shape Our World"" by Anupreeta Das (8월13일)

     * 빌 게이츠에 대한 많은 정보가 쏟아져 나왔지만, 그에 대한 확실한 전기는 아직 밝혀지지 않았음
     * 아누프리타 다스는 이 책에서 게이츠의 정체성에 대한 여러 가지 실타래를 엮어 초부유층이 어떻게 가장 이타적인 노력에도 불구하고 권력을 행사하는지에 대한 광범위한 논문을 작성
     * 이 책은 게이츠와 워런 버핏, 제프리 엡스타인과의 우정 등 새로운 사실에 대한 폭로성 보도를 약속하며, 전기의 성격에 걸맞게 해부학도 아니고 역사학도 아닌 것처럼 보임
     * 아누프리타 다스 : 뉴욕타임스의 금융 에디터로서 시장, 은행, 사모펀드, 헤지펀드, 자산운용사, 화이트칼라 범죄, 소비자 금융 등 월스트리트 관련 보도를 총괄. 그전엔 월스트리트저널의 비즈니스 및 기술 관련 보도를 담당했었음.

   존버합니다

   Cerro Gordo 위치를 보니 거의 사막이네요.
   살기 쉽지 않을 듯...

   날짜는 출간 예정일입니다. 미국에서 나오는 날짜이니 번역본은 한참 뒤에 나올수도 있겠네요.
   The Information 링크라서 요약해서 옮겼습니다. 저자에 대한 정보는 제가 추가한 내용입니다.
"
"https://news.hada.io/topic?id=13024","테슬라, FSD v12 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            테슬라, FSD v12 출시

     * 테슬라가 FSD 베타 v12 업데이트를 고객들에게 제공하기 시작함
     * 이번 테슬라 v12 소프트웨어 업데이트는 CEO 일론 머스크가 ""end-to-end 신경망""이라고 부르는 것을 도입할 것으로 예상
     * 이전 FSD 업데이트와 가장 큰 차이점은 차량 제어가 프로그래머가 코딩하는 것이 아니라 신경망에 의해 처리되는 것

FSD Beta v12의 기술적 변화

     * ""FSD 베타 v12는 도심 거리 주행 스택을 단일 end-to-end 신경망으로 업그레이드하여 수백만 개의 비디오 클립으로 훈련되고, 300k줄 이상의 명시적 C++ 코드를 대체한다""고 테슬라는 업데이트 릴리스 노트에서 밝힘
     * 간단히 말해, 차량의 행동도 엔지니어가 코딩한 것이 아니라 AI에 의해 구동될 것이라는 의미임
     * 테슬라가 처음으로 완전 자율 주행을 소개했을 때, 이러한 접근법을 사용할 것처럼 보였지만, 신경망 기반 제어로 전환하기까지 회사에 수년이 걸림

시장의 반응과 진행 상황

     * 많은 테슬라 지지자들이 v12가 테슬라가 자율주행에 대한 약속을 마침내 이행할 수 있게 할 것이라고 믿음
     * 머스크가 ""베타"" 소프트웨어로 제공되지 않을 것이라고 말한 것에도 격려받음
     * CEO는 작년 말까지 소프트웨어 업데이트를 고객에게 제공하겠다고 약속했지만, 2024년으로 미뤄짐
     * 테슬라의 내부 테스트 플릿에서만 사용되었지만, 이제는 드디어 고객에게 제공됨
     * 여러 초기 테슬라 FSD 베타 테스터들이 테슬라 FSD 베타 v12 업데이트를 받고 있다고 보고함
     * 현재 테슬라는 초기 FSD 베타 테스터들과 시작하며, 이들은 시스템에 가장 익숙하고 테슬라에 대해 비판적이지 않음으로 알려져 있음
     * 업데이트는 여전히 릴리스 노트에서 ""베타""로 나열됨

Electrek의 의견

     * 업데이트가 조금 더 확산되고 시스템에 대한 솔직한 리뷰를 얻을 수 있기를 기다리고 있음
     * 지난 몇 주 동안 내부 테스트 플릿에서 들은 바에 따르면, v12는 어떤 경우에는 더 부드럽고 자연스러워졌지만, 다른 경우에는 더 어리석어지는 경향이 있으며, 이는 많은 테슬라 FSD 업데이트에서도 그랬음

   제발 한국도 주세요..
"
"https://news.hada.io/topic?id=13045","Ollama, Python & JavaScript 라이브러리 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Ollama, Python & JavaScript 라이브러리 공개

     * Ollama 는 Llama 2, Mistral 등의 LLM을 로컬에서 실행하기 쉽게 만들어주는 오픈소스
          + 맥/리눅스를 지원하며, 윈도우즈는 곧 WSL2에서 실행가능
     * Ollama의 Python 및 JavaScript 초기 버전 라이브러리가 출시되어, 몇 줄의 코드로 새로운 앱과 기존 앱을 Ollama와 통합 가능
          + Ollama REST API의 기능과 느낌을 그대로 이용 가능

시작하기

     * Python에서는 pip install ollama를 통해 설치하고, import ollama 후 ollama.chat 함수를 사용하여 대화를 시작할 수 있음.
     * JavaScript에서는 npm install ollama를 통해 설치하고, import ollama from 'ollama' 후 ollama.chat 함수를 사용하여 대화를 시작할 수 있음.

사용 사례

     * 두 라이브러리 모두 Ollama의 전체 기능 세트를 지원함.
     * Python 예제로는 스트리밍, 멀티모달, 텍스트 완성, 사용자 정의 모델 생성, 사용자 정의 클라이언트 설정 등이 있음.

새로운 GitHub 핸들

     * 이 라이브러리와 Ollama의 주요 저장소는 이제 새로운 GitHub 조직인 ollama에서 관리됨.
     * Dart, Swift, C#, Java, PHP, Rust 등 다양한 프로그래밍 언어로 Ollama와 상호 작용하는 라이브러리를 유지 관리하는 커뮤니티 멤버들에게 감사의 말을 전함.

   node API도 잘 동작하더군요. 이번에 잘 사용했습니다.
"
"https://news.hada.io/topic?id=13029","HN 소개: 수학 문제가 지속적으로 추가되는 사이트를 원했고, 제가 만들었습니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              HN 소개: 수학 문제가 지속적으로 추가되는 사이트를 원했고, 제가 만들었습니다

행렬의 역행렬 찾기

     * 행렬 G=[2 1; 4 3]의 역행렬을 찾는 문제.

복소평면에서 방정식의 해 찾기

     * 복소평면에서 z^2 = -4의 모든 해를 찾는 문제.

합동식의 해와 정수 찾기

     * 8x ≡ 7 (mod 29) 합동식이 해를 가지는 양의 정수 b를 찾는 문제.

연립방정식의 해 찾기

     * 2x + 3y = 10, 3x - y = 4 연립방정식의 해를 찾는 문제.

함수의 두 번째 도함수 찾기

     * f(x) = 4x^3 - 2x^2 + 5 함수의 두 번째 도함수를 찾는 문제.

나머지 찾기

     * 62000을 11로 나누었을 때의 나머지를 찾는 문제.

방정식의 해의 유한성 증명

     * σ(n) = k 방정식이 k가 양의 정수일 때 유한한 수의 해를 가짐을 증명하는 문제.

합성수의 성질 증명

     * 양의 정수 n이 합성수일 필요충분조건이 σ(n) > n + √n임을 증명하는 문제.

ISBN-10 오류 수정

     * ISBN-10을 0-07-289095-0으로 잘못 기록한 경우, 올바른 ISBN-10을 찾는 문제.

닭 가격 계산

     * 88마리의 닭을 총 $x4.2y에 구입했을 때, 각 닭의 가격을 찾는 문제.

유사소수 증명

     * 45가 기저 17과 19에 대해 유사소수임을 증명하는 문제.

최대공약수 찾기

     * 양의 정수 a에 대해 a와 a+2의 최대공약수를 찾는 문제.

정수의 합과 차의 최대공약수

     * 서로소인 정수 a와 b에 대해 (a+b, a-b)가 1 또는 2임을 증명하는 문제.

특정 조건을 만족하는 정수 찾기

     * 2나 5로 나누었을 때 1의 나머지를 가지고, 3으로 나누어 떨어지는 정수를 찾는 문제.

양판저울 문제

     * 2개의 접시 A와 B를 가진 저울에 관한 문제.

정확히 네 개의 양의 약수를 가지는 정수

     * 정확히 네 개의 양의 약수를 가지는 양의 정수를 찾는 문제.

ISBN-10 코드의 누락된 숫자 찾기

     * ISBN-10 코드 중 하나의 숫자가 불명확할 때, 누락된 숫자를 찾는 문제.

특정 형태의 소수 무한성 증명

     * 6k+5 형태의 소수가 무한히 많음을 증명하는 문제.

모듈로 역원 찾기

     * 1≤a≤14 범위 내에서 정수 a의 모듈로 14에 대한 역원을 찾는 문제.

특정 방정식의 해 부재 증명

     * ϕ(n) = 14를 만족하는 양의 정수 n이 존재하지 않음을 증명하는 문제.

   GN⁺의 의견:
     * 이 글은 다양한 수학 문제들을 제시하며 독자들에게 문제 해결 능력을 향상시킬 기회를 제공함.
     * 특히, 대수학, 복소수, 수론 등 다양한 수학 분야에 걸쳐 있는 문제들은 초급 소프트웨어 엔지니어들에게도 프로그래밍 논리 개발과 알고리즘 이해에 도움이 될 수 있음.
     * ISBN-10 오류 수정이나 닭 가격 계산과 같은 실생활과 연관된 문제들은 수학의 실용성을 보여주며, 이러한 문제 해결 과정은 실제 코딩 문제를 해결할 때의 접근 방식과 유사함.

        Hacker News 의견

     * 첫 번째 댓글:
          + 아이디어가 매우 좋고 친숙하며 간단한 인터페이스를 볼 수 있어서 기쁨.
          + 두 가지 제안:
              1. 문제의 출처를 PDF로 인정하는 것이 좋을 듯. PDF가 오픈 소스라면, 추가 정보가 학습에 유용할 것.
              2. 문제에 대한 배경 지식을 학습할 수 있는 정보 제공이 필요함. 현재는 수학을 가르치기보다는 수학을 테스트하는 느낌이지만, 배경 지식이 없으면 어디로 가야 할지 모르는 상황임.
          + 플랫폼의 훌륭한 기반으로 좋은 작업임.
     * 두 번째 댓글:
          + 필요한 것이 없어서 직접 만들었다는 점에서 칭찬함.
          + 목표가 수학 문제와 그 해결책을 모으는 것인지는 모르겠지만, MathJax가 문제를 표시하기 위해 로드되었다는 점을 언급하고, 답변자들이 원한다면 MathJax로 답변을 작성하는 방법을 볼 수 있는 페이지를 만드는 것이 좋을 것 같음.
     * 세 번째 댓글:
          + 핵심은 수학 PDF 추출 엔진이며, 머신 러닝을 사용하여 이미지나 문서에서 LaTeX로 수학 문제를 추출함.
          + 다양한 출처에서 대량으로 가져온 문제보다는 선별된 수학 문제와 해결책, 상세한 설명, 문제를 이해하고 해결하기 위해 필요한 이론에 대한 링크를 보고 싶음.
     * 네 번째 댓글:
          + 최근 중학생 자녀와 함께 UW(워털루 대학) 수학 경시 문제를 풀기 시작했음. 이 문제들은 핵심 교육 자료는 아니지만, 사고력을 키우는 데 훌륭함.
     * 다섯 번째 댓글:
          + 해결되지 않은 모든 수학 문제를 볼 수 있으면 재미있을 것 같음. 웹사이트에 그러한 문제들을 위한 디렉토리를 추가할 수 있을지 문의함.
     * 여섯 번째 댓글:
          + 이 자원을 공유해줘서 감사함. 오픈 소스라는 점이 마음에 들고, 수학을 좋아하며 좋은 연습 문제를 찾는 장소를 가지고 싶어서 개발에 도움을 줄 수도 있음.
          + 문제가 PDF 소스에서 스크랩되고 있기 때문에, 각 연습 문제의 출처를 고려할 것인지에 대한 입장이 궁금함. 저작권이 있는 자료를 노출할 수 있는 문제가 있음.
     * 일곱 번째 댓글:
          + 브레인티저/퍼즐 방향으로는 wu:riddles 사이트를 추천함. 2009년 이후로 업데이트되지 않았지만 기능적으로 잘 작동하고 미적으로도 잘 유지되고 있음.
     * 여덟 번째 댓글:
          + 비슷한 것을 만들고 싶었던 생각이 100번은 들었음. 누군가 실제로 만들어서 기쁨. 매일 수학 문제를 풀어서 공부한 내용을 어느 정도 기억하고 싶고, 쉽게 접근할 수 있는 좋은 문제 세트를 찾는 것이 의외로 어려웠음.
          + 오픈 소스로 공개하여 협업자들이 미래 기능에 기여할 수 있도록 하고 싶다면 알려달라고 요청함. 기여하고 싶어하는 사람들이 많을 것임.
     * 아홉 번째 댓글:
          + 이 자원이 매우 유용함. 30년 전 공부했던 공학 수학을 천천히 다시 배우고 있음. 문제를 풀 수 있는 자료가 있어서 좋음.
          + 몇 가지 제안:
              1. 댓글 중에서 최고의 답변을 지정할 수 있으면 좋을 것 같음. 많은 댓글을 통해 해결책을 찾는 것은 번거로움.
              2. ""Teach Yourself Math""라는 이름이 조금 오해의 소지가 있음. 사이트 이름이 자기 학습을 위한 책 시리즈와 연관되어 있어서, 교과서처럼 구조화된 수학 소개를 제공할 것으로 기대하지만, 실제로는 일정 수준의 지식이 필요한 수학 문제들을 제공함.
     * 열 번째 댓글:
          + 문제를 실제로 작성하는 데 노력을 기울이지 않는 것에 대한 비판.
          + 스크랩된 좋은 내용을 부주의하게 다루는 것에 대해 칭찬하지 않을 것이며, 아이디어는 좋지만 실행은 좋지 않다고 지적함.
"
"https://news.hada.io/topic?id=13138","구글 검색 결과에서 '캐시 링크' 삭제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         구글 검색 결과에서 '캐시 링크' 삭제

Google 검색 결과에서 캐시 링크 제거

     * 몇 달간의 테스트 후, Google이 검색 결과 페이지에서 캐시 링크를 제거한 것으로 보임.
     * 검색 결과 스니펫에서 Google 캐시로의 링크는 더 이상 보이지 않지만, 캐시에 접근할 수는 있음.
     * 검색 결과 스니펫의 추가 정보를 위해 세 개의 점을 클릭할 때, 캐시 버튼이 누락됨.
     * 캐시에 접근하는 방법은 Google에서 [cache:domain.com]을 검색하는 것임. 예를 들어, 이 사이트의 경우 [https://www.google.com/search?q=cache:seroundtable.com]을 검색하면 됨.
     * 아직도 캐시 링크를 볼 수 있는지, 아니면 테스트 그룹에 속해 있는지 궁금함.

GN⁺의 의견

     * Google이 검색 결과에서 캐시 링크를 제거한 것은 사용자 경험을 개선하거나 인터페이스를 단순화하기 위한 조치로 추정됨.
     * 캐시에 여전히 접근할 수 있는 방법을 제공함으로써, Google은 기능을 유지하면서도 사용자 인터페이스를 정리하는 균형을 맞추고자 함.
     * 이 변경은 검색 엔진 최적화(SEO) 전문가나 웹 개발자와 같이 캐시된 페이지를 자주 확인하는 사용자들에게 중요할 수 있으며, 새로운 접근 방식에 대한 인지가 필요함.

        Hacker News 의견

     * ""cache: qualifier"" 구문이 아직 나에게는 작동하지만, 이것도 곧 사용되지 않을 것 같아 걱정됨. 구글의 또 다른 실수라고 생각함.
     * 최근에 캐시 링크가 사라진 것을 발견했는데, 매우 특정한 내용을 검색할 때 종종 수십 페이지나 수백 페이지에 걸친 포럼 댓글에서 정보를 찾곤 했음. 캐시 링크를 사용하면 항상 도움이 되었음.
     * 페이지가 캐시되어 있다면 여전히 'cache:' 명령어를 사용하여 캐시된 버전을 검색할 수 있음. 예를 들어, cache:https://apod.nasa.gov/apod/astropix.html
     * 캐시 기능이 사라진 것이 확인된다면 정말 아쉬울 것임. 캐시는 훌륭한 자원이었지만, 모바일에서는 작동하지 않아 불편했음. 데스크톱 브라우저를 사용할 때만 가능했음.
     * 지난 1년 동안 구글 캐시를 두 번 사용했는데, 첫 번째는 예전보다 한두 번 더 클릭해야 하는 것에 놀랐고, 오늘 다시 사용하려고 했을 때는 버튼을 전혀 찾을 수 없었음. 이제 정말로 사라진 것 같음.
     * 구글이 이제는 정말로 나빠졌고, 그들이 하는 모든 것이 더 나빠지고 있음. 왜 누군가 거기서 일하고 싶어하는지, 또는 무능한 사람들에게 많은 돈을 지불하는 것이 멋있다고 생각하는지 이해할 수 없음.
     * 구글이 좋은 기능을 없애는 것을 보는 것은 실망스러움. 10년 전의 구글로 돌아가고 싶음. 그때는 실제로 작동하는 제품들이 있었지, AI 실험만 하던 것이 아니었음.
     * 구글과 사람들에게 다른 결과를 보여주는 몇몇 사이트에서 이 기능을 사용했었음. 링크드인 캐시는 몇 년 전에 비활성화되었고, 나머지도 시간 문제였을 뿐임. 비슷한 주제로, 링크드인을 계정 없이 보는 방법을 아는 사람이 있나?
     * 이제 웹사이트가 다운되거나 고장 났거나 무작위로 작동하지 않을 때 어떻게 해야 할지 모르겠음. 구글은 왜 모든 좋은 기능을 없애는 걸까? 정말 끔찍한 회사임...
     * 추측컨대, 어떤 제품 관리자가 캐시된 페이지 결과로 가지 않을 때 광고 제품이 더 많은 디스플레이 수익을 낼 수 있다는 것을 발견하고 승진했을 것임.
"
"https://news.hada.io/topic?id=13096","이 뿌리에서 벗어나 성장해야 할 필요성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         이 뿌리에서 벗어나 성장해야 할 필요성

A 절차

     * 가능한 모든 주요, 단조, 주요 7th, 단조 7th 코드와 그 변형들을 A2부터 D5까지 나열함.
     * 세트에서 무작위 코드를 선택함.
     * 선택된 코드를 8초 동안 연주함.
     * 세트에서 연주 중인 코드와 하나의 음을 제외하고 모든 음이 일치하는 코드를 모두 찾음.
     * 이들 중 하나를 무작위로 선택함.
     * 3번으로 돌아가서 반복함.

B 절차

     * (A)에서 현재 연주 중인 코드의 음을 무작위 파형으로 무작위 시간 동안 연주함 - 지속 시간이 짧으면 무작위 횟수만큼 반복함.
     * 무작위 시간 동안 기다림.
     * 1번으로 돌아가서 반복함.

C 절차

     * (A)에 의해 새로운 코드가 트리거될 때마다, 코드의 각 음에 해당하는 색상으로 뿌리부터 끝까지 각 줄기를 밝힘. 5도 순환에서 인접한 음은 유사한 색조를 가짐.

D 절차

     * (B)에 의해 음이 연주될 때마다, 줄기의 끝에 해당 음에 맞는 밝은 색으로 끝을 밝힘.

실현 및 구축

     * 점수의 A와 B 부분은 라즈베리 파이 3 B+에서 실행되는 맞춤형 C++ 프로그램으로 실현되며, 음 선택과 오디오 버퍼 자체의 합성을 모두 담당함.
     * C와 D 부분은 맞춤형 프로그램을 실행하는 아두이노 우노 보드로 실현되며, FastLED를 사용하여 WS2812B 프로토콜 LED 스트립과 인터페이스함.
     * 라즈베리 파이에서 아두이노로 음이 전달되는 것은 시리얼 포트를 통해 보내진 신호로 통신함.
     * LED 스트립은 가정용 수족관에 사용되는 투명 튜빙을 통해 설치됨. 튜브는 두꺼운 니켈 와이어를 사용하여 조형 가능한 형태로 강화됨. 식물 화분 아래의 나무 주택에는 마이크로컴퓨터, 배선, 사운드시스템에 연결하기 위한 3.5mm 오디오 소켓이 포함됨. 전원은 두 개의 주 전원 연결을 통해 들어옴.
     * 컴퓨터는 머리 없이(headlessly) 실행되며 전원을 켜면 자동으로 시작됨.

GN⁺의 의견

     * 이 프로젝트는 음악과 조명을 결합하여 독창적인 예술 작품을 만들어내는 혁신적인 방법을 보여줌.
     * 라즈베리 파이와 아두이노 같은 마이크로컴퓨터를 사용하여 예술과 기술의 경계를 허무는 것은 기술 애호가와 예술가 모두에게 영감을 줄 수 있음.
     * 이 글은 기술과 예술의 융합이 어떻게 창의적인 표현의 새로운 영역을 열 수 있는지를 보여주며, 이는 예술과 공학의 교차점에 관심이 있는 사람들에게 매우 흥미로운 주제임.

        Hacker News 의견

     * 이 사람은 브라우저에서 몇 시간 동안 즐길 수 있는 ""endless acid banger""를 만든 창작자이며, 이로 인해 물리적인 303 클론을 구입하여 음악을 만들기 시작함.
          + 모든 데모는 ""클릭하여 시작"" 화면으로 열리며, 자동 재생되는 비디오는 기본적으로 음소거 상태임.
     * 이와 같은 음악/오디오를 찾으려면 어떤 키워드로 검색해야 하는지 궁금함. 아름다운 소리라고 느낌.
     * 이 알고리즘 또는 ""endless acid banger""에 대한 음악 이론 책이나 강좌를 추천해달라는 요청. 음악이 괜찮게 들리는 간단한 규칙이 있고, 더 복잡한 규칙도 있으며, 바로크 음악은 알고리즘적으로 유명함. 하지만 여전히 음악이 어떻게 작동하는지에 대한 일반적인 이해가 없음.
     * 생성된 음악의 '악보'를 일종의 사양으로 작성된 것을 보는 것이 매혹적임.
          + 충분한 세부 사항이 있어서 이 지침을 따라 자신만의 버전을 재구현할 수 있으며, 본질적으로 같은 '음악 작품'을 얻을 수 있지만, 해석은 다를 수 있음.
          + 악보가 몇몇 세부 사항을 정확히 제시하지만, 다른 선택은 덜 명확하게 남겨둠.
          + Sonic Pi를 사용하여 코딩하는 것은 재미있는 연습이었고, 작곡가가 의도한 것과 같은 느낌의 작품을 만들 수 있었음.
          + 사양과 구현 사이의 관계에 대해 생각하게 됨. 다른 프로그래머들의 알고리즘 구현을 전체 설계의 악보에서 개별 '공연'으로 간주함.
     * 저자에게 팁: Arduino를 제거하고 Raspberry Pi에서 직접 WS281x 스트립을 제어할 수 있는 라이브러리를 사용하여 프로젝트의 하드웨어 및 소프트웨어 복잡성을 크게 줄일 수 있음.
     * Raspberry Pi의 GPIO 핀을 모두 사용하여 이 모든 작업을 수행할 수 있는지, 프로젝트를 단일 보드로 단순화해야 하는지에 대한 기술적인 세부 사항에 대해 궁금함.
     * 이와 같은 것을 만드는 방법에 대한 자세한 지침을 얻고 싶다는 의견.
     * 이것은 아름답다고 느낌. 식물이 이와 같은 외계 행성을 상상해보라는 의견. 숲 전체가 메트로놈이나 반딧불처럼 동기화될 수 있음.
     * 이것은 Four Tet 세트의 인트로가 될 수 있음.
     * 자연을 사랑하고 숲에서 많은 시간을 보내는 한 사람은 모든 것이 아름답다고 느낌. 그러나 때때로 나무를 피부병이 피부에서 자라는 곰팡이처럼 느끼게 되는 혐오감을 경험함. 다행히도 음악의 힘이 이러한 부정적인 시각을 이겨냄.
"
"https://news.hada.io/topic?id=13083","사각 체크박스를 추모하며","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             사각 체크박스를 추모하며

     * 체크박스의 사랑스러운 추억
          + 체크박스는 사각형이며, 내부에 체크 표시가 있고, 동시에 여러 개를 선택할 수 있는 특징이 있음.
          + 다양한 운영 체제에서 시간이 지남에 따라 체크박스를 다르게 렌더링함.
          + 체크 표시가 항상 있는 것은 아니었지만, 체크박스가 사각형이라는 점은 변하지 않음.
     * 왜 사각형인가?
          + 체크박스를 라디오 버튼과 구별하기 위함.
          + 라디오 버튼은 단일 선택만 가능하며, 하나를 선택하면 다른 모든 선택이 해제됨.
          + 90년대에 이미 사각형과 원형의 구분이 존재함.
     * 웹의 도래
          + 웹, 특히 CSS, Flash, JavaScript의 등장으로 기존의 관행이 재발명되고 재디자인됨.
          + 웹에서는 체크 표시가 있는 라디오 버튼이나 사각형 라디오 버튼을 흔히 볼 수 있음.
          + 네이티브 앱에서도 웹의 영향을 받아 원형 체크박스를 도입함.
     * 운영 체제 벤더들의 전통
          + 운영 체제 벤더들은 체크박스는 사각형, 라디오 버튼은 원형이라는 관행을 지켜옴.
     * 전통의 종말
          + Apple이 visionOS에서 사각형 체크박스 전통을 버리고 원형 체크박스를 도입함.
          + 이로 인해 사각형 체크박스 전통이 계속될 희망이 사라짐을 선언함.
          + 2024년을 사각형 체크박스가 마침내 사라진 해로 공식 발표함.

GN⁺의 의견:

     * 체크박스와 라디오 버튼의 디자인은 사용자 인터페이스에서 중요한 역할을 함. 이들의 형태가 사용자의 선택 방식을 직관적으로 안내하기 때문.
     * Apple이 전통을 깨고 원형 체크박스를 도입한 것은 사용자 경험에 있어 새로운 변화를 시도한다는 점에서 주목할 만함.
     * 이 글은 디자인과 사용자 인터페이스의 역사에 대한 흥미로운 통찰을 제공하며, 기술의 진화가 어떻게 사용자 상호작용에 영향을 미치는지 보여줌.

   디자인이냐 접근성이냐 그것이 문제로다.

   RIP...

   나의.. 사용자 경험을.. 헤치지 말아줘...

        Hacker News 의견

     * iOS가 오랫동안 둥근 체크박스를 사용해왔다는 사실에 놀랐음. macOS 설정 앱에서도 체크박스 대신 켜고 끄는 토글 스위치 사용이 늘어남. 그러나 불분명한 토글 버튼은 여전히 문제가 됨. 예를 들어, 마이크 아이콘이 하얀색일 때 켜져 있는 건지 꺼져 있는 건지, 선이 그어져 있으면 음소거 상태인지 아니면 탭할 때 음소거가 되는 건지 혼란스러움.
     * Apple이 디자인 규칙을 무시한 것이 아니라, VisionOS에서 체크박스를 다룰 때 눈 추적의 신뢰성을 향상시키기 위한 노력일 수 있음. 사람들의 시선이 모서리로 끌리기 때문에 둥근 모양의 버튼이 더 주목을 받고, 단독으로 버튼을 표시할 때는 캡슐 모양을 선호함.
     * 웹 사용자들은 기존의 컨트롤이 지루하다고 생각하고, 정규 컨트롤을 재발명하고 재디자인해야 한다고 믿음. 그래서 대화 상자의 '확인' 버튼 위치가 디자이너의 선호에 따라 왼쪽, 오른쪽, 또는 창 제목 표시줄에 배치됨.
     * 평면 디자인은 우리 시각 시스템의 내재된 기능을 제거함. 색상, 테두리, 반투명성, 질감, 음영, 부드러운 움직임 등은 우리의 시각 정보를 빠르게 해석하는 데 도움이 됨. 이러한 요소들은 시각적 정보를 전달하는 데 중요하지만, 과도하게 사용되어서는 안 됨.
     * 많은 웹 디자이너들이 포함과 상호 배타적 옵션의 차이를 이해하지 못함. 체크박스와 라디오 버튼의 사용에 혼란이 있음.
     * 노화된 기술을 가진 노인에게 물질 디자인에서 화면의 어떤 영역이 누를 수 있는 버튼인지 설명하는 것은 어려움. 이전 사용 경험만이 활성화된 요소를 알려줌.
     * 애플 디자이너들은 2013년부터 수십 년간 자체적으로 확립한 많은 관례를 버림. 스티브 잡스는 '작동 방식'을 중요시했고, 애플은 디자인 리더에서 최소 공통 분모 추종자로 변함. 나쁜 디자인은 도덕적 문제이며, 최악의 경우 사람들을 해치거나 죽일 수 있음. 디자인/엔지니어링에서 작은 것들로 시작되는 문제임. 줌 세대가 이를 깨닫기를 바라며, 앨런 쿠퍼의 'About Face'가 좋은 시작점임.
     * Motif(X11에서 사용)는 체크박스에 작은 경사진 정사각형과 라디오 버튼에 경사진 다이아몬드 모양을 사용함. 활성화는 안으로 경사져 있고 비활성화는 밖으로 경사져 있음.
     * 실제 자동차의 라디오 버튼은 대부분 직사각형이었음. 그 작동 방식에 대한 좋은 설명이 있음.
     * 애플은 Apple Notes에서 오래전에 사각형 체크박스를 버림. iOS 7이 2014년에 도입된 이후로 이런 방식이었음을 믿음.
"
"https://news.hada.io/topic?id=13037","샤오미 공기청정기의 DRM RFID칩 해킹하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       샤오미 공기청정기의 DRM RFID칩 해킹하기

DRM 해제: 공기청정기 해킹 이야기

     * 샤오미 4 Pro 공기청정기를 구매한 후, 필터 교체 경고에 직면함.
     * 필터를 여러 번 청소했음에도 불구하고 앱에서 경고를 무시할 방법이 없었음.
     * 필터 바닥에 부착된 DRM RFID 칩을 조사하기로 결정함.

사기꾼과 관문지기

     * proxmark을 사용하여 RFID 칩을 조사하던 중, Flamingo Tech가 이미 이 분야에서 연구를 진행하고 있음을 발견함.
     * Flamingo Tech의 저장소에서 중요한 RFID 태그 블록 정보를 공개함.
     * NfcA 태그는 잠겨 있어 비밀번호 없이는 수정할 수 없었으나, proxmark 커뮤니티가 비밀번호 키 생성 방법을 이미 해결함.

비밀번호 키 생성

     * 스크립트에는 UID를 기반으로 한 두 가지 예시가 포함되어 있음.
     * UID를 바이트 배열로 변환하고 SHA-1 해시 함수를 적용하여 비밀번호를 생성함.
     * 이제 이 방법을 이해했으므로, NFC가 가능한 모바일 폰을 사용하여 자신의 필터를 수정/리셋할 수 있음.

태그 해킹

     * NFC 도구를 설치하고, 앱의 읽기 기능으로 필터 바닥의 NFC 태그를 스캔함.
     * '시리얼 번호/UID'를 복사하고, 해당 UID로 리셋 명령을 생성함.
     * 앱의 '기타' -> '고급 NFC 명령'을 클릭하여 명령을 입력하고, '명령 보내기'를 클릭하여 필터를 리셋함.

호환 가능한 기기 목록

     * 다양한 샤오미 공기청정기 모델에 대한 호환성 및 테스트 여부를 목록화함.
          + 호환 모델 : 4 Pro, 4 Lite, 4, MI Pro, MI Pro H, Pro H, Pro, 3H
     * 이 모드를 오래된 모델에 대해 테스트할 시간이 있다면 아래에 댓글을 달아 업데이트할 수 있음.

GN⁺의 의견

     * 이 글은 공기청정기 필터의 DRM을 해킹하여 필터 교체 경고를 무시하고 필터 수명을 연장하는 방법을 설명함.
     * 이 과정은 환경적 측면에서 필터 폐기물을 줄이는 데 도움이 될 수 있음.
     * 기술적 지식과 NFC 도구를 활용하여 소비자가 제품을 더 효율적으로 사용할 수 있도록 하는 DIY 해킹 방법을 제공함으로써, 기술에 대한 이해와 자기주도적 해결 능력을 향상시킬 수 있는 좋은 예시임.

        Hacker News 의견

     * 복잡한 사용자 적대적 기능에 대한 비판

     ""팬과 필터를 위한 이런 복잡한 사용자 적대적 기능은 정말 불필요함. 잉크 카트리지처럼 실제 센서가 없이 단지 횟수를 세는 것과 같이, 공기청정기도 실제 필터의 막힘 정도를 알려주는 차압 센서를 탑재할 수 있음. 그러나 이렇게 하면 제조사가 사용자에게서 더 많은 돈을 벌 수 없게 될 것임.""
     * RFID 태그 제거에 대한 간단한 해결책

     ""RFID 태그를 물리적으로 제거하는 것이 간단한 해결책임. 3H 모델에서는 태그를 제거해도 기기가 잘 작동하며, 더 이상 불만을 제기하지 않음. RFID 태그의 주된 목적은 가짜 필터 판매나 중고 필터를 새 것으로 판매하는 것을 방지하기 위함임. RFID 태그 없이 공기청정기를 사용하면 처음에 경고를 보내지만 그 후에는 정상 작동함.""
     * DRM이 있는 공기청정기를 원하는 소비자에 대한 의문

     ""DRM이 탑재된 공기청정기를 원하는 소비자를 찾기 어려움. 과거에는 제조사들이 제품을 더 매력적으로 만들기 위해 경쟁했고, 가전제품에는 회로도가 포함되어 있었음.""
     * 제조사 필터만 사용해야 하는 것에 대한 비판

     ""제조사의 필터만 사용해야 하는 것은 불법이어야 함. 이는 '수리할 권리' 범주에 속해야 함. 공기청정기는 제조사의 필터 없이는 작동할 수 없음.""
     * 필터의 실제 수명에 대한 고찰

     ""DRM에도 불구하고 필터는 실제로 수명이 다할 수 있음. 기계적 필터는 청소가 가능하지만, HEPA 필터는 시간이 지남에 따라 소실되는 정전기를 이용하고, 활성탄도 시간이 지나면 비활성화됨. 이러한 과정이 얼마나 빨리 일어나는지, 공기의 양이나 경과 시간에 영향을 받는지에 대한 통계가 있다면 흥미로울 것임.""
     * 필터 수명 경고 무시와 DRM 해킹에 대한 의문

     ""필터 수명에 대한 경고를 무시하고 DRM을 해킹하는 것에 대한 의문 제기. 필터를 청소했다고 해서 실제로 12개월 더 사용할 수 있다고 확신하는 것은 무리가 있음.""
     * 기술의 긍정적인 활용에 대한 희망

     ""IC가 개인에게 더 많은 힘을 부여하고 선한 일에 활용될 것이라는 기대가 있었으나, 기술을 이용해 기능을 제한하고 지식 격차를 이용하는 것은 유감임.""
     * 공기청정기 필터 리셋에 대한 긍정적인 반응

     ""공기청정기 필터를 연간 한 번씩 교체하는 사용자로부터 긍정적인 반응. 샤오미는 필터의 수명을 6개월로 보지만, 낮은 속도로 24시간 가동하면 실제 수명이 더 길 수 있음. 필터 리셋이 가능하다는 것은 좋은 소식임.""
     * 사용자 인터페이스 버그와 DRM 메커니즘에 대한 의견

     ""이 문제는 사용자 인터페이스 버그로 보이며, 실제로 DRM 메커니즘은 아닐 수 있음. 경고등이 켜져 있어도 팬은 작동함. 구형 모델은 전원을 켤 때만 경고를 보여주었는데, 이것이 더 성가시게 변경된 것은 의심스러움.""
     * 필터 청소와 교체에 대한 실제 사용자 경험

     ""샤오미 공기청정기를 사용하는 사람으로부터의 실제 경험 공유. 필터를 청소하고 순환시키며 몇 번의 순환 후에 교체함. 필터가 이미 사용된 것을 기억하지 못하는 경우도 있고, '빈' 필터로도 작동하지만 처음 시작할 때만 경고가 나타남.""
"
"https://news.hada.io/topic?id=13121","와이든 상원의원 서한, NSA가 데이터 브로커로부터 미국인의 데이터를 구매하고 있음을 확인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           와이든 상원의원 서한, NSA가 데이터 브로커로부터 미국인의 데이터를 구매하고 있음을 확인

"https://news.hada.io/topic?id=13023","ML 엔지니어링 온라인 서적","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ML 엔지니어링 온라인 서적

     * 인공지능 전투 엔지니어링 - 알아야 할 것들
          + 인공지능(ML) 모델, 특히 대규모 언어 모델(LLM)과 다중 모달 모델(VLM)의 성공적인 훈련을 위한 방법론을 모은 개방형 컬렉션.
          + LLM/VLM 훈련 엔지니어 및 운영자를 위한 기술 자료로, 스크립트와 복사-붙여넣기 명령어가 많이 포함되어 있어 빠르게 필요한 작업을 수행할 수 있음.
          + 2022년에 오픈소스 BLOOM-176B 모델과 2023년에 IDEFICS-80B 다중 모달 모델을 훈련하면서 얻은 경험과 노하우를 지속적으로 기록하고 있으며, 현재는 Contextual.AI에서 오픈소스 검색 증강 모델 개발/훈련 중임.
     * 목차
          + 불안정한 레이아웃에 대해 사과하며, 새로운 장을 작성하고 내용을 더 직관적으로 재구성하는 과정 중임.
     * 하드웨어 구성 요소
          + 가속기 - ML의 작업마, GPU, TPU, IPU, FPGA, HPU, QPU, RDU 등이 포함됨.
          + 네트워크 - 노드 내부 및 노드 간 연결성, 대역폭 요구 사항 계산.
          + 저장소 - 로컬 및 분산 디스크와 파일 시스템.
          + CPU - CPU와 친밀도에 대한 내용.
          + CPU 메모리 - 얼마나 많은 CPU 메모리가 충분한지에 대한 가장 짧은 장.
     * 성능
          + 고장 허용성
          + 성능
          + 다중 노드 네트워킹
          + 모델 병렬성
     * 운영
          + SLURM
          + 훈련 하이퍼파라미터 및 모델 초기화
          + 불안정성
     * 개발
          + 소프트웨어 및 하드웨어 실패 디버깅
          + 더 많은 디버깅
          + 재현성
          + 텐서 정밀도 / 데이터 타입
          + HF Transformers 노트 - 작은 모델, 토크나이저, 데이터셋 등에 대한 팁.
     * 기타
          + 자료 - LLM/VLM 연대기.
     * 바로가기
          + 자주 빠르게 찾을 필요가 있는 도구와 가이드.
          + 도구: all_reduce_bench.py, torch-distributed-gpu-test.py
          + 가이드: debugging pytorch applications, slurm for users, make tiny models/datasets/tokenizers, LLM/VLM chronicles collection
     * 책 만들기
          + PDF를 만들고 싶거나 링크를 확인하고 싶다면 '책 만들기' 섹션 참조.
     * 감사의 말
          + 이러한 노하우를 배울 수 있었던 것은 대규모 ML 컴퓨트 클러스터를 임대하는 데 드는 비용이 매우 비싸기 때문에 소수만이 누릴 수 있는 특권임.
          + Thom Wolf와 HuggingFace에 특별한 감사를 표함.
     * 기여하기
          + 버그, 오타 발견 또는 개선 제안이 있다면 이슈를 열거나 PR을 기여할 것을 권장함.
     * 라이선스
          + 이 사이트의 내용은 Attribution-ShareAlike 4.0 International 라이선스 하에 배포됨.
     * 내 저장소 맵
          + 기계 학습: ML Engineering Open Book | ML ways | Porting
          + 가이드: The Art of Debugging
          + 응용 프로그램: ipyexperiments
          + 도구 및 치트시트: bash | conda | git | jupyter-notebook | make | python | tensorboard | unix

    GN⁺의 의견

     * 이 자료는 대규모 언어 모델과 다중 모달 모델을 훈련하는 데 필요한 실질적인 지식과 도구를 제공함으로써 ML 커뮤니티에 큰 기여를 함.
     * 실제 프로젝트 경험에서 얻은    이 요청은 처리할 수 없습니다. 제공된 링크는 실제 기사의 내용을 포함하고 있지 않으며, Cloudflare 보안 검사 페이지로의 리다이렉트를 나타내고 있습니다. 따라서 번역하거나 요약할 실제 기사 내용이 없습니다.
노하우를 공유함으로써 초급 소프트웨어 엔지니어들이 대규모 ML 모델 훈련에 필요한 실무 지식을 습득하는 데 도움이 됨.
     * 오픈소스 접근 방식은 ML 분야의 지식 공유와 협력을 촉진하며, 이는 연구와 혁신을 가속화하는 데 중요한 역할을 함.
"

        Hacker News 의견

     * 이 글은 정말 가치 있다. 연구를 지원하기 위해 LLM 트레이닝 설정을 디버깅하는 일을 하고 있는데, 시작할 때 이런 노트가 있었다면 좋았을 것이다.
          + LLM 트레이닝 설정 디버깅에 종사하는 사람이 초기에 이런 정보를 가졌더라면 유용했을 것임을 표현함.
     * 저는 Applied Scientist와 함께 일하면서 모델 트레이닝과 배포와 관련된 작업을 돕고 있습니다; 저 같은 사람은 최적화, 성능 등과 같은 더 낮은 수준의 엔지니어링 작업에 어떻게 노출될 수 있을까요? 우리에게는 ML 인프라 팀이 있지만, 그들의 목표는 플랫폼 주변의 도구를 구축하는 것이지, 반드시 워크로드를 최적으로 실행하는 것은 아닙니다.
          + 모델 트레이닝 및 배포를 지원하는 사람이 최적화와 성능 같은 저수준 엔지니어링 작업에 대한 경험을 얻고 싶어함을 나타냄.
     * 이것을 실험해보고 싶은데, 제대로 된 GPU가 없어요. 여러분은 이것들을 어떻게 실행하나요?
          + 적절한 GPU 없이는 실험을 시작하는 데 어려움을 겪고 있음을 표현함.
     * AI Battlefield 섹션의 ""Unsolicited Advice""에 있는 모든 것에 대해 정말 감사합니다 [1]. AI 개발의 빠른 진전에 항상 허우적대는 것과 그로 인한 감정적 부담에 대한 매우 현실적인 관점입니다.
          + AI 개발의 빠른 속도와 그로 인한 감정적 부담을 현실적으로 바라보는 ""Unsolicited Advice""에 대한 감사함을 표현함.
     * Slurm이 얼마나 널리 사용되고 있나요?
          + Slurm의 사용 범위에 대한 궁금증을 나타냄.
     * 무작위로 클릭해서 repeatability에 대해 알아보았는데, 분산 트레이닝에서 이것이 어떻게 달성되는지 여전히 궁금합니다. 결정적 동기화가 일을 느리게 만들지 않나요? 하지만 적어도 몇몇 큰 회사에서는 그들의 트레이닝이 반복 가능하다고 들었습니다.
          + 분산 트레이닝에서의 반복 가능성과 결정적 동기화가 성능에 미치는 영향에 대한 의문을 제기함.
     * 직업이 없을 때 이런 것들에 대한 경험을 어떻게 쌓나요?
          + 실제 직업 없이 관련 경험을 어떻게 쌓을 수 있는지에 대한 질문을 함.
     * 어딘가에 pdf가 있나요? 빌드하는 방법은 있지만 실제 파일은 없는 것 같습니다.
          + 관련 문서의 pdf 버전을 찾고 있음을 나타냄.
"
"https://news.hada.io/topic?id=13081","Show GN: vibra, C++ 노래 인식 서비스 Shazam 클라이언트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Show GN: vibra, C++ 노래 인식 서비스 Shazam 클라이언트

    vibra

     * 노래 인식 서비스인 Shazam 의 서버와 통신하는 클라이언트를 C++ 로 구현한 프로젝트입니다.
     * 기존 rust 오픈소스 Shazam 클라이언트 songrec 보다 2배 가량 빠르게 작동합니다.
     * wav 파일을 읽어와 해당 파일이 어떤 곡인지 데이터를 불러올 수 있습니다.
     * stdin 으로 raw PCM data 를 넣는 방법으로 마이크로 녹음중인 노래도 인식이 가능합니다.
     * fingerprinting 에 필요한 libfftw3, Shazam 서버와 통신에 필요한 libcurl 이 필요합니다.
     * wav file downsampling, channel convert 등의 PCM 데이터를 효율적으로 수행하기 때문에 빠릅니다.
     * 의존성 라이브러리가 적고 빌드가 쉬워 임베디드 기기에 활용할 수 있습니다.

   rust대신c++을 선택하신 이유가 있나여?

   공유 감사합니다! 성능 개선을 어떻게 하셨는지 개인적으로 궁금하네요.
   라즈베리파이4에서 1초 안팎의 시간이 걸리면 정말 실용적인 성능이네요.

   사실 Rust Songrec 이 너무 비효율적이었던것이, 입력 받은 PCM data 에 대해 downsampling, mono 로 변환, 16bit 로 변환 이걸 전부 따로 하더라구요.

   그래서 각 과정마다 PCM 데이터를 다 순회하는 부분을 개선했습니다. 물론 C++ 과 Rust 라는 언어의 차이도 크지 싶습니다.

   아 Rust 코드에선 저 세 과정을 따로 처리했었군요. 그걸 개선하는 것도 보통 일이 아니었을텐데 대단하십니다 ' v')b

   감사합니다~!!!
"
"https://news.hada.io/topic?id=13020","유전자 치료로 청력을 되찾은 11세 소년","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         유전자 치료로 청력을 되찾은 11세 소년

유전자 치료로 11세 소년이 처음으로 듣게 됨

     * 11세 소년 아이삼 담은 선천적 난청을 가지고 태어나, 평생을 완전한 침묵 속에서 살아옴.
     * 모로코의 가난한 지역에서 자신만의 수화를 만들어 사용하며 학교 교육을 받지 못함.
     * 스페인으로 이주한 후, 청력 전문가를 만나 유전자 치료를 받을 수 있는 임상 시험에 참여할 수 있음을 알게 됨.
     * 아이삼은 2023년 10월 4일 필라델피아 어린이 병원에서 미국 내 선천적 난청을 위한 유전자 치료를 받은 첫 번째 사람이 됨.
     * 치료의 목표는 청력을 제공하는 것이었지만, 연구자들은 치료가 효과가 있을지, 있다면 얼마나 듣게 될지 알 수 없었음.

GN⁺의 의견

     * 이 기사는 유전자 치료 기술의 진보를 보여주며, 선천적 난청을 가진 사람들에게 새로운 희망을 제공함.
     * 아이삼 담의 사례는 의학 연구가 개인의 삶에 얼마나 긍정적인 영향을 미칠 수 있는지 보여주는 감동적인 예시임.
     * 이 기사는 유전자 치료가 어린이들에게도 안전하고 효과적일 수 있음을 시사하며, 향후 이 분야의 연구와 임상 시험에 대한 관심을 불러일으킬 것으로 기대됨.

        Hacker News 의견

     * 첫 번째 댓글:
          + 청각 장애를 가진 아이가 언어를 이해하거나 말하는 능력을 얻지 못할 수도 있다는 연구자들의 인식에 대해 슬프다고 느낌.
          + 그러나 이러한 유전자 치료가 결국 수천 명의 청각 장애 신생아에게 도움이 될 것이라는 점에서 희망을 가짐.
          + 의학적 진보가 놀라우며, 이는 자신의 이명에 대한 치료 가능성에 대한 희망을 줌.
     * 두 번째 댓글:
          + Ancestry DNA 키트를 통해 어느 정도 정확한 (의료 등급은 아닌) DNA 시퀀스를 얻을 수 있음.
          + Ancestry가 다른 유사 서비스보다 가성비가 좋다고 생각함.
          + DNA 코드를 Promethease에 제출하여 SNPedia에 인용된 과학적 발견을 기반으로 개인 DNA 보고서를 작성할 수 있음.
          + 자신과 자녀에 대해 몇 가지를 배울 수 있으며, 미래에 발생할 수 있는 심각한 상태도 포함될 수 있음.
          + DNA를 공유하는 것은 항상 위험하다는 경고를 함.
     * 세 번째 댓글:
          + 어떤 청각 장애 부모는 자신들의 커뮤니티의 일부가 될 수 있기 때문에 신생아의 청력 검사 결과가 청각 장애를 나타낼 때 기뻐함.
          + 부모의 바람을 존중하고 싶지만, 동시에 아이가 성인이 되어 스스로 결정할 수 있을 때 청력을 가질 수 있는 선택권을 주고 싶음.
          + 이러한 유형의 청각 장애는 진행성이며, 유전자 치료를 젊었을 때 해야만 아이에게 청력의 희망을 줄 수 있기 때문에 두 가지를 모두 가질 수 없을 수 있음.
          + 아이가 청력을 가지고 싶어하지만, 성인이 될 때까지 기다렸다가는 내이의 모발 세포가 모두 죽어서 너무 늦을 수도 있음을 우려함.
     * 네 번째 댓글:
          + 청각학 커뮤니티에서 이것이 사실이라면 혁신적인 소식임.
          + 인간의 감각 청력 손실에 대해 보청기나 인공와우 이외에는 치료법이 없었기 때문임.
     * 다섯 번째 댓글:
          + Otoferlin(문제의 유전자)에 대해 알아보니 이해하기 쉽고 접근 가능한 논문을 찾음.
     * 여섯 번째 댓글:
          + 유전자 치료가 현재 매우 좁은 범위의 때때로 드문 질병을 대상으로 하고 있는데, 현재 어떤 회사의 파이프라인에도 '광범위한 스펙트럼' 유전자 치료가 있는지 질문함.
          + 좁은 범위가 초기 단계에서 제어하기 쉽기 때문인지, 아니면 복잡한 유전자 치료를 이해하지 못하고 부작용이나 예기치 않은 결과 없이 만들 수 없기 때문인지 궁금해함.
     * 일곱 번째 댓글:
          + Otoferlin은 OTOF 유전자에 의해 인코딩되는 단백질임.
          + 과학 저널리스트들이 더 과학적으로 정확하기를 바람.
     * 여덟 번째 댓글:
          + 어떤 아이가 스페인으로 이주한 후 청력 전문가를 만나고, 그 전문가가 유전자 치료를 사용하는 임상 시험에 참여할 수 있을 것이라는 놀라운 제안을 함.
          + 이 의사가 이로 인해 얼마나 많은 돈을 받는지 궁금해하며, 이를 착취로 여김.
"
"https://news.hada.io/topic?id=13018","진화하는 우주에서 생명의 출현이 예상되는 상전이인가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     진화하는 우주에서 생명의 출현이 예상되는 상전이인가?

생명의 출현은 진화하는 우주에서 예상되는 상전이인가?

     * 스튜어트 카우프만과 안드레아 롤리는 생명의 출현이 우주에서 예상되는 현상이며, 법칙에 의해 결정되지 않는 창조적이고 무한한 진화를 포함한다고 제안함.
     * 생명체는 칸트적 전체(Kantian Wholes)로서, 촉매적 폐쇄(Catalytic Closure), 제약적 폐쇄(Constraint Closure), 공간적 폐쇄(Spatial Closure)를 달성함.
     * 이 연구는 처음으로 집단적 자가촉매 세트(Collectively Autocatalytic Sets)와 인접 가능성의 이론(Theory of the Adjacent Possible) 두 수학 이론을 통합함.
     * 집단적 자가촉매 세트 이론은 분자의 다양성과 복잡성이 증가함에 따라 우주의 화학 진화에서 분자 재생산으로의 일차 상전이가 예상된다고 설명함.
     * 인접 가능성의 이론은 시스템이 소수의 초기 분자로 시작하여 새로운 분자를 만들기 위해 자신이나 다른 분자와 결합할 수 있다면, 시간이 지남에 따라 분자의 종류가 천천히 증가하다가 기하급수적으로 폭발적으로 증가한다고 가정함.
     * 이 두 이론을 결합하면, 생명은 진화하는 우주에서 예상되는 상전이로 간주될 수 있음.
     * 생명세포에서는 소프트웨어와 하드웨어의 구분이 의미를 잃음.
     * 연구자들은 대사 경로의 계통 발생을 연구하는 새로운 방법, 외계 행성에서 생명을 찾기 위한 새로운 천문학적 방법, 가장 기초적인 생명의 출현을 탐색하는 새로운 실험, 그리고 원핵생물로의 일관된 검증 가능한 경로에 대한 힌트를 제안함.

GN⁺의 의견

     * 이 연구는 생명의 기원과 진화에 대한 새로운 이론적 접근을 제시하여, 생명이 우주에서 자연스러운 현상으로 발생할 수 있다는 흥미로운 관점을 제공함.
     * 제안된 이론은 생명체의 복잡성이 어떻게 자연스럽게 증가할 수 있는지에 대한 수학적 근거를 마련함으로써, 생명과학과 천문학 분야에 새로운 연구 방향을 제시함.
     * 이 글은 생명체의 본질에 대한 근본적인 질문을 다루고 있으며, 생명의 출현과 진화를 이해하려는 노력에 중요한 기여를 할 수 있음.

        Hacker News 의견

     * 생명에 대한 이해를 다룬 책들에 대한 논의
          + ""What is Life?""부터 시작하는 생명에 대한 책들의 장르가 있음.
          + 저자는 Monod의 ""Chance and Necessity"", Nick Lane의 ""The Vital Question"", Nurse의 ""What is Life?"", Zimmer의 ""Life's Edge"" 등을 읽음.
          + 각 저자마다 세부사항과 강조점은 다르지만, 모두 추측적이고 애매함.
          + ""Life on the Edge""에서 인용한 좋아하는 구절: 생명의 정의에 대해 합의하지 못했지만, 세포, 이중나선, 광합성, 효소 등 생명현상을 풀어내는 데는 방해가 되지 않음.
     * Stuart Kaufmann의 연구에 대한 논의
          + Stuart Kaufmann이 수십 년 동안 개발해온 아이디어에 대한 논문.
          + 논문은 새로운 아이디어를 제시하기보다는 50년간의 연구를 요약한 것.
          + 용어와 생각이 복잡해 보이지만, 실제로 구체적이고 특정한 의미를 가짐.
          + Kaufmann은 이론을 반증할 수 있는 실험들을 제안함.
          + 1993년 출판된 그의 책 ""On The Origins of Order""를 통해 아이디어에 대한 심도 있는 탐구를 권장함.
     * 생명의 복잡성 증가에 대한 관찰
          + 생명의 복잡성은 시간이 지남에 따라 항상 증가하는 경향이 있음.
          + 복잡한 생명체는 더 구체적인 요구사항을 가지고 있지만, 새로운 서식지를 찾아 확장하는 데 더 능숙함.
          + 기술의 시간 척도에서, 인간은 다른 지능체와의 접촉을 시도함.
          + 생명과 지능의 정의 속성으로서의 침투(percolation)에 대한 논의.
          + 고등 지능의 최종 목표는 다른 지능체를 찾거나 만드는 것이며, 이로 인해 흥미로운 일들이 발생함.
     * Kaufmann의 ""At Home in the Universe""에 대한 요약
          + Kaufmann의 책 ""At Home in the Universe""와 유사한 내용의 논문 소개.
          + 생명의 출현은 지원 조건(환경 내 다양한 화학물질, 에너지원 등)이 충족되면 거의 필연적임.
          + 화학 반응 체인이 서로 영향을 주고받으며, 일부 반응 제품이 반응 체인의 촉매 역할을 함.
          + 이러한 반응 유형은 원시적인 대사로 간주될 수 있음.
          + 원시 세포와 진화의 시작으로 이어지는 과정에 대한 설명.
     * 인공지능(AI)이 생명 진화의 예상되는 단계인지에 대한 질문
          + 인공지능이 생명의 진화에서 예상되는 단계 전환인지, 생명이 더 높은 질서의 지능의 유충 단계인지에 대한 의문 제기.
     * 인간 활동의 자연스러움에 대한 성찰
          + 인간이 자연의 일부라면, 인간의 활동으로 만들어진 것들도 자연적으로 발생하는 것이 아닌지에 대한 질문.
     * 생명의 출현이 우주에서 예상되는 단계 전환인지에 대한 논의
          + 의식의 기원과 정의에 대한 불확실성.
          + 모든 물질에 어느 정도의 의식이 있다고 가정하는 것이 가장 단순한 가정.
          + 생명이 특별한 물질 상태나 에너지 상태가 아니며, 생명의 출현이 물리 법칙에 도전하거나 설명이 필요한 단계 전환을 나타내지 않음.
     * 외계 생명체의 존재에 대한 논의
          + 외계 생명체는 가설적이며, 지구 밖에서 실제 존재하는 증거가 없음.
          + 인공 신호를 감지하거나, 화석화된 생명체가 있는 소행성을 발견하거나, 외계 세계를 방문하거나, 예상치 못한 방문을 받기 전까지는 수학적 논쟁에 불과함.
     * Michael Levin의 연구에 대한 관심 표현
          + 세포와 세포 시스템의 목표 지향적 행동을 연구하는 Michael Levin의 작업에 매료됨.
     * 생명의 출현 확률에 대한 연구 논문에 대한 언급
          + 아미노산 기반 생명체가 출현할 확률을 계산한 논문에 대한 언급.
          + 관찰 가능한 우주에서는 극히 낮지만, 전체 우주에서는 0에 가까움.
          + 해당 논문을 찾고자 하는데, 기억나는 사람이 있거나 읽을 수 있는 곳을 아는지 질문.
"
"https://news.hada.io/topic?id=13105","GTK용 새로운 렌더러용 새로운 렌더러

GTK의 새로운 렌더러

     * GTK에 GL과 Vulkan을 위한 두 가지 새로운 렌더러가 추가됨.
     * 이들은 ""ngl""과 ""vulkan""이라는 기존 이름을 재사용하여 명명됨.
     * 같은 소스에서 구축되어 ""통합"" 렌더러라고도 불림.

  단일 소스

     * 두 렌더러는 동일한 소스에서 구축되며 Vulkan API를 따르는 모델로 설계됨.
     * Vulkan과 GL 사이의 차이점을 커버하기 위한 추상화를 포함함.
     * 장면 그래프 탐색, 변환 유지, 텍스처 및 글리프 캐싱 등의 인프라 공유가 가능함.
     * macOS의 Metal 기반 렌더러나 Windows의 DirectX 기반 렌더러로 확장 가능성이 있음.

  구현 세부사항

     * 기존 GL 렌더러는 간단한 셰이더를 사용하고 복잡한 내용에 대해서는 오프스크린 렌더링에 의존함.
     * 통합 렌더러는 각 노드별 셰이더를 가지고 있으며, 오프스크린 대신 버퍼에서 데이터를 해석하는 복잡한 셰이더를 사용함.
     * 통합 렌더러는 최적화가 덜 되어 있지만, 정확성과 유지보수에 중점을 두어 더 다양한 렌더 노드 트리를 정확하게 처리할 수 있음.

  새로운 기능

     * 안티앨리어싱: 기존 GL 렌더러는 세부 사항을 잃어버리는 문제가 있었으나, 통합 렌더러는 안티앨리어싱을 통해 이를 개선함.
     * 분수 스케일링: 통합 렌더러는 분수 스케일을 제대로 처리할 수 있음.
     * 임의의 그라데이션: 통합 렌더러는 무제한 색상 정지점을 가진 그라데이션을 처리할 수 있음.
     * Dmabufs: Vulkan 렌더러는 render_texture API를 통해 텍스처를 생성할 때 dmabufs를 생성할 수 있음.

  주의할 점

     * glshader 노드는 더 이상 지원되지 않음.
     * 분수 위치: 새 렌더러는 정확한 위치에 객체를 배치함.
     * 드라이버 문제: 새 렌더러는 그래픽 드라이버를 새롭고 다른 방식으로 사용하므로 문제가 발생할 수 있음.

  속도는 더 빠른가?

     * 아직은 새 렌더러가 더 빠르지 않음.
     * 기존 GL 렌더러는 속도에 최적화되어 있으나, 새 렌더러는 새로운 기능과 정확성을 제공함.
     * Vulkan 렌더러는 비공식 벤치마크에서 기존 GL 렌더러와 비슷한 성능을 보임.

  새로운 기본값

     * 최근 발표된 4.13.6 스냅샷에서 ngl 렌더러를 새로운 기본값으로 설정함.
     * 이는 시험적인 조치이며, 문제가 발생하면 기존 GL 렌더러로 되돌릴 수 있음.

  미래 계획 및 가능성

     * 새 렌더러는 HDR을 포함한 적절한 색상 처리, GPU에서의 경로 렌더링, 메인 스레드 외부 렌더링, 성능 향상 등을 구현하기 위한 좋은 기반이 됨.

  요약

     * 새 렌더러는 흥미로운 기능을 가지고 있으며, 더 많은 기능이 추가될 예정임.
     * 새 렌더러를 시도해보고, 작동 여부에 대한 피드백을 요청함.

   GN⁺의 의견
     * 새로운 렌더러는 개발자들에게 더 정확하고 다양한 렌더링 옵션을 제공하는 중요한 발전임.
     * Vulkan과 GL의 통합 접근 방식은 향후 다양한 플랫폼에서의 렌더링 호환성을 향상시킬 잠재력을 가짐.
     * 이러한 기술적 진보는 사용자 경험을 개선하고, 애플리케이션의 시각적 품질을 높이는 데 기여할 것임.

        Hacker News 의견

     * 2010년경에 HTML과 CSS만을 사용하여 브라우저에서 GTK 애플리케이션의 UI를 구현할 수 있는 실험적인 HTML 렌더러가 있었음. 당시에는 Atom, VS Code, Electron, 아마도 NodeJS가 등장하기 전이라 매우 인상적이었음. 현재 그 HTML 렌더러의 존재 여부는 불명.
     * GTK가 타이틀바에 위젯을 허용하는 추세를 따르는 것에 대한 아쉬움. 일부는 드래그가 가능하고 일부는 불가능하여 애플리케이션과 파일 이름에 할당된 공간이 줄어듦. 이는 GTK에만 국한된 문제가 아님.
     * 리눅스의 데스크톱 환경 작동 원리에 대한 이해 부족. 점점 더 복잡하고 추가된 것처럼 느껴짐.
     * 픽셀 단위의 정밀한 분수 스케일링에 대한 흥분.
     * wgpu.rs를 사용하면 DirectX와 Metal을 무료로 얻을 수 있음을 언급.
     * ANSI 텍스트 렌더러에 대한 관심, 이를 통해 xterm 내에서 GTK 프로그램을 실행할 수 있음. 선택적으로 sixel 기능도 추가될 수 있음.
     * 성능 저하가 받아들여지는 이유에 대한 의문. 구형 하드웨어에서 대부분의 컴퓨팅을 수행하며, 이러한 기능은 비활성화하거나 GPU에서 지원하지 않을 수도 있음.
     * GTK 작업이 재미있고 멋진 것으로 보임. 안티앨리어싱에 대한 언급과 게임 엔진에서 폰트 렌더링에 사용되는 서명 거리 필드 기술의 적용 가능성에 대한 기대감. 게임 렌더러에서 사용되는 다양한 기술이 GUI 코드에도 유용할 수 있음.
     * 오픈소스 GUI 툴킷 렌더러보다 몇 세대 앞서 있는 렌더러를 개발한 많은 그래픽 엔진 개발자들이 있지만, 대부분 게임 개발 회사에서 일하고 있어 오픈소스 스택에 기여할 시간이 없음. 커뮤니티가 정기적인 예산을 조직하여 이러한 개발자들에게 지불할 수 있다면, 오픈소스 데스크톱에 상당한 렌더링 및 툴킷 업데이트를 볼 수 있을 것임.
     * 특정 댓글이 신고되어 내용이 숨겨짐.
"
"https://news.hada.io/topic?id=13107","블랙스톤 창업주의 삶과 철학 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            블랙스톤 창업주의 삶과 철학

     * 스티븐 슈월츠먼은 세계 1위 사모펀드인 블랙스톤의 창업주
     * 그가 쓴 유일한 책 <What It Takes>에서 그의 인생사와 삶에 대한 철학을 공유했다.
          + 젊은 시절 말 그대로의 모험을 떠나 스스로를 단련하라: 대학교 방학에 세계를 누비는 상선 기관실에 취직하여 바다를 항해함. 배에서 프로이트 책들을 읽고, 콜롬비아 항구의 술집에서 취해 정신을 잃고 강도를 당하기도 함.
          + 스펀지같이 정보를 흡수하고 점들을 잇는 기술을 연마하라: 2006년 스페인과 인도의 부동산 값이 천정부지로 오르는 것을 보고, 전세계적 부동산 버블 붕괴가 다가오고 있을 것임을 직감함. 이는 2008년 서브프라임 모기지로 현실이 되었고, 블랙스톤은 슈월츠먼의 통찰 덕분에 금융위기를 비교적 잘 넘길 수 있었음.
          + 먼 미래를 계획할 수는 없어도, 당장 현실에서의 자신의 최대 가능성을 추구하라: 슈월츠먼은 애초에 금융계로 갈 생각이 있는 학생이 아니었음. 경제/경영 전공도 아니었고 오히려 고등학교 시절부터 육상선수로 활동. 그러나 자신이 놓여있는 삶의 현 단계에서 자신이 될 수 있는 최대한의 존재가 항상 되고자 했고, 그 결과 오늘날의 위치에 이르게 됨
"
"https://news.hada.io/topic?id=13050","무료 Bandcamp 대안인 Faircamp","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        무료 Bandcamp 대안인 Faircamp

Faircamp, 무료 Bandcamp 대안

     * Epic이 Bandcamp를 Songtradr에 판매한 후, Bandcamp는 불안정한 상황에 처함.
     * 인수 후 회사 직원의 절반을 해고함으로써 많은 이들이 이 플랫폼의 미래에 대해 추측함.
     * 서비스에 의존하던 많은 아티스트들이 대안을 찾고 있음에도 불구하고, 아직 Fediverse 솔루션은 없음.

Faircamp이란 정확히 무엇인가?

     * Faircamp는 ""오디오 프로듀서를 위한 정적 사이트 생성기""로 자처하지만, 간단히 말해 자신의 서버에 소프트웨어를 설치하고 판매하고자 하는 음악 폴더를 지정하면 사이트 페이지가 자동으로 구축되는 사이트임.
     * 아티스트는 앨범과 트랙에 대한 결제 설정, 무료 제공, 잠금 코드 제공, 다른 사이트에 플레이어 내장 등을 할 수 있으며 모바일에서도 훌륭하게 보임.

커뮤니티 반응

     * 음악 커뮤니티는 Faircamp에 매우 긍정적으로 반응함.
     * Fediverse 내의 많은 뮤지션들이 서로를 지원하기 위해 구식 웹링을 형성하려고 적극적으로 노력함.
     * Radio Free Fedi는 Fedi 뮤지션들이 RadioFreeFedi의 인프라에서 자신들의 Faircamp 사이트를 호스팅할 수 있도록 무료 서비스를 제공하는 데 매우 적극적임.
     * 모바일에서의 임베드는 아직 다소 어색하지만, 프로젝트의 Codeberg 저장소에 간단한 풀 리퀘스트를 제출함으로써 개선될 수 있음.
     * 전반적으로 Faircamp는 Fediverse 뮤지션을 지원하기 위한 훌륭한 대안적 방법으로 자리잡아가고 있음을 보여줌.

   GN⁺의 의견:
     * Faircamp는 독립 아티스트들에게 자신의 음악을 직접 판매하고 관리할 수 있는 새로운 기회를 제공함으로써 음악 산업 내에서 중요한 대안적 플랫폼으로 떠오르고 있음.
     * 이 플랫폼은 사용자가 직접 호스팅하고 커스터마이징할 수 있는 기능을 제공하여 아티스트의 독립성과 창의성을 존중함.
     * 커뮤니티의 긍정적인 반응은 이러한 자율적인 플랫폼이 창작자들에게 얼마나 중요한지를 보여주며, 향후 창작자를 위한 연합된 도구 개발에 대한 관심을 새롭게 불러일으킬 수 있음을 시사함.

        Hacker News 의견

     * Bandcamp의 강점은 기술이 아닌 문화와 정신에 있음. Bandcamp Fridays, 큐레이션, 인터뷰, 셀렉터, 실제 레코드 박람회나 레코드 스토어 데이에서의 존재감 등이 커뮤니티 경험을 강화했음. 아티스트와 청중 사이의 공간을 분산시키는 것은 오히려 업그레이드가 아닌 다운그레이드처럼 느껴짐.
     * 제안된 시스템은 실제 웹샵으로 작동하지 않음. 단지 정적 사이트 생성기이며, 결제 메커니즘에 대한 지원이 거의 없음. Bandcamp와 경쟁하기보다는 음악 트랙을 호스팅하는 데 유용할 수 있음.
     * 사용자는 대부분의 음악을 FLAC 형식으로 Bandcamp에서 구입함. 디지털 음악 컬렉션을 2000년대 초부터 만들어왔으며, 당시 하드 드라이브 대비 비용이 많이 들었음. 딸이 인터넷 연결이나 전용 앱 없이도 음악을 재생하는 이유를 묻고, 세상의 모든 노래를 소유하지 않는 이유를 물어봄. 미래 세대가 무언가를 소유하지 않을 것이라는 우려가 있음. 예술, 음악, 소프트웨어 등 무형의 재화가 대기업의 손에 집중될까 봐 걱정됨. Bandcamp나 Faircamp와 같이 DRM 없이 CD 품질의 음악을 구할 수 있는 곳을 지지하고 싶음.
     * Bandcamp 대안은 이미 존재함. 서버 소프트웨어뿐만 아니라 완전한 스토어도 있음. 문제는 사람들(구매자와 판매자)을 설득하여 이를 사용하게 만드는 것임.
     * 이러한 시스템으로 음악의 연합을 가능하게 하여 신뢰할 수 있는 포털을 구축하고, 음악 구매자에게 좋은 사용자 경험을 제공할 필요가 있음. 결제를 연합하는 방법을 찾는다면, 이러한 사이트의 인프라 호스팅이 가능해질 것임. 이러한 작은 단계들이 더 큰 단계로 나아가는 문을 열 수 있음.
     * 사용자는 UI를 통해 업로드할 수 있는 비슷한 프로젝트를 시작함. 아티스트와 음악가 친구들과 대화한 결과, 대부분의 사람들에게 SSG는 시작하기 어려울 것임. 현재는 간단한 트랙 업로드와 재생만 지원하지만, 아티스트, 앨범, RSS 피드를 추가할 계획임.
     * Bandcamp의 서비스는 아직 변하지 않았음. 그러나 최근 Bandcamp가 VC에 매각되었고, 이 과정에서 최근에 조합을 결성한 직원들을 해고했다는 점을 고려하면, 다음 단계는 아티스트와 소비자를 압박하는 것일 수 있음.
     * Bandcamp는 일관된 비전이 부족함. 앱이 있지만 기능이 부족하고 논리적인 기능이 없음. 각 밴드는 투어 날짜를 나열할 수 있지만, 사용자가 자신의 지역에서 공연하는 모든 밴드를 볼 수 있는 피드가 없음. 모든 기본 요소가 갖추어져 있지만, 제품 비전이 없어 매우 답답함.
     * 음악을 발견하고 공유하는 방법은 많지만, 아티스트에게 쉽게 지불할 수 있는 방법이 필요함. Patreon, Locals, Librapay, Buy Me a Coffee, KOFI 등 여러 계정을 가지고 있음. 대부분의 사람들은 이렇게 많은 계정을 가지고 지불하지 않음. 모든 아티스트를 쉽게 찾고 지불할 수 있는 단일 장소가 있다면 알려달라고 요청함.
     * 이것은 Bandcamp의 대안이 아님. 음악 지향적인 정적 사이트 생성기에 더 가까움.
"
"https://news.hada.io/topic?id=13030","검색 엔진으로서의 TikTok 활용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          검색 엔진으로서의 TikTok 활용

     * 미국인 5명 중 2명 이상이 검색 엔진으로 TikTok을 사용함
     * Z세대 10명 중 거의 1명은 검색 엔진으로 Google보다 TikTok을 더 많이 사용
     * 비즈니스 소유자의 절반 이상(54%)이 비즈니스 홍보를 위해 TikTok을 사용하며, 한 달에 평균 9번 게시물을 올림
     * 중소기업 소유주 4명 중 1명은 제품 판매 또는 홍보를 위해 TikTok 인플루언서를 활용

TikTok 검색 기능의 진화

     * TikTok은 엔터테인먼트 허브뿐만 아니라 검색 엔진으로도 빠르게 진화
     * 소비자들이 TikTok을 검색 수단으로 어떻게 사용하는지, 비즈니스가 이 트렌드를 활용하기 위해 전략을 어떻게 전환하는지에 대한 연구를 진행
     * 808명의 소비자와 251명의 비즈니스 소유주를 대상으로 한 설문 조사를 통해 TikTok 검색 행동에 대한 인사이트를 도출

TikTok 검색 트렌드 탐색

     * 미국인들이 검색 엔진에 대한 관계를 재정의하고 있으며, TikTok이 예상치 못한 경쟁자로 부상함
     * 미국인의 검색 습관 변화를 조사한 결과, 2명 중 1명 이상이 TikTok을 검색 엔진으로 사용함
     * 특히 젊은 세대 사이에서 이러한 변화가 두드러지며, Gen Z 세대의 64%, 밀레니얼 세대의 49%가 TikTok을 검색 엔진으로 사용함을 밝힘
     * Gen Z 세대 중 거의 10%가 구글 같은 전통적인 검색 엔진보다 TikTok을 선호함
     * 새로운 챗봇인 ChatGPT도 주목받고 있으며, 10명 중 1명 이상이 정보 검색을 위해 ChatGPT를 사용함

TikTok 검색 매력 해석

     * TikTok은 이제 단순한 엔터테인먼트가 아니며, 소비자들이 검색 엔진으로 사용하는 이유와 가장 주목받는 콘텐츠 유형은 무엇인가?
     * 설문 응답자에 따르면, TikTok은 짧고 정보적인 비디오, 독특한 스토리텔링 형식, 시청자에게 맞춤화된 콘텐츠로 사용자를 끌어들임
     * Gen Z 세대 중 2명 중 1명은 자신의 취향에 더 맞춤화된 콘텐츠에 매료됨
     * 콘텐츠 선호도에 대해 물었을 때, 대부분의 사람들(62%)은 TikTok의 비디오 튜토리얼을 가장 좋아하며, 제품 또는 서비스 리뷰(39%)와 개인적인 이야기(38%)도 높이 평가함

비즈니스 전략과 TikTok 검색

     * 소비자 조사에 이어 비즈니스 소유주들을 대상으로 조사를 진행하여 TikTok을 활용하고, 전통적인 SERP(검색 엔진 결과 페이지)와 비교하며, 이와 관련된 도전과제를 어떻게 관리하는지 알아봄
     * 비즈니스 소유주들은 TikTok이 검색 의도를 충족시키는 도구로서의 잠재력을 인식하기 시작함
     * 비즈니스 소유주의 절반 이상(54%)이 비즈니스 홍보를 위해 TikTok을 사용하며, 월 평균 9회 게시함
     * 평균적으로 비즈니스 소유주들은 마케팅 예산의 15%를 TikTok 콘텐츠 제작에 할당함
     * 플랫폼은 약속을 보여주고 있지만, 비즈니스 소유주의 53%가 내년에 TikTok 제휴 마케팅에 대한 투자를 늘릴 계획임에도 불구하고 도전과제가 지속됨
     * 온라인 도구를 사용하여 비즈니스 소유주들은 이러한 문제를 해결하고, 돈을 절약하며, 몇 분 만에 TikTok 비디오를 만들 수 있음

TikTok 검색 파워 활용

     * 많은 미국 소비자들이 TikTok을 단순한 엔터테인먼트가 아닌, 자신들이 좋아하는 것과 연결된 검색 엔진으로 활용하고 있음
     * 이 움직임은 특히 젊은 청중 사이에서 두드러지며, TikTok을 기존 검색 엔진의 진정한 경쟁자로 보고 있음
     * 이러한 변화가 가속화됨에 따라, 특히 작은 비즈니스들에게 TikTok의 방대한 잠재력을 활용하고 진정으로 공감되는 콘텐츠를 제공할 수 있는 황금 기회가 있음

   어우 틱톡은 좀...

   쇼츠에도 광고가 점점 많이 노출되는데, 재밌게 만든다고 하더라도 피곤해지는 것은 어쩔 수 없네요 :-|

   요즘 애들은 유튜브로 검색한다고 하더니, 이젠 틱톡이군요....
"
"https://news.hada.io/topic?id=13060","아르비드(ArVid): 90년대 러시아인들이 VHS 테이프 하나에 하드 드라이브 4개를 압축한 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        아르비드(ArVid): 90년대 러시아인들이 VHS 테이프 하나에 하드 드라이브 4개를 압축한 기술

러시아인들이 90년대에 VHS 테이프 하나에 하드 드라이브 4개를 어떻게 담았는가

     * 1995년, 소비자 상품 가격이 전년 대비 세 배로 치솟고, 급여를 달걀로 받는 등 혼란스러운 시기였음.
     * 서구의 컴퓨터, TV, VCR 등 기술이 러시아에 넘쳐나며, 기술적으로 제한되었던 1989년과는 대조적인 상황임.
     * 컴퓨터를 가진 행운아들은 500MB 하드 드라이브가 소프트웨어, 게임, 문서로 가득 차 저렴한 저장 솔루션을 찾아야 했음.

  이 장치로 시작하기

     * ArVid ISA 카드는 ""386"" PC 마더보드에 장착되며, VCR과 연결하는 케이블과 적외선 신호를 받는 광택 있는 다이오드를 포함함.
     * 패키지에는 소프트웨어, 드라이버, 문서가 포함된 3½인치 플로피 디스크와 인쇄된 문서가 포함됨.
     * VCR과 컴퓨터를 연결하는 맞춤형 케이블도 포함되어 있으며, 데이터를 저장할 수 있는 가정용 VHS 테이프도 사용 가능함.

  VCR 리모컨을 모방하기

     * ArVid 카드를 PC에 설치하고 비디오 케이블을 연결한 후, 카드가 가정용 VCR을 제어하도록 설정해야 함.
     * ArVid는 VCR의 리모컨을 모방하여 VCR을 제어함. 사용자는 카드에 ""play"", ""stop"", ""rewind""와 같은 명령에 해당하는 적외선 리모컨 신호를 ""가르쳐""야 함.

  테이프에 데이터 쓰기

     * ArVid는 VCR의 ""tracking alignment""를 찾기 위해 데이터 세그먼트를 테이프에 쓰고 다시 읽으며, 최적의 트랙 위치를 추천함.
     * 컴퓨터에서 파일을 선택하고 VHS 테이프에 쓰면, ArVid 카드는 파일 데이터를 비디오 신호로 변환하고 적외선 방출기를 통해 VCR에 ""녹화 시작"" 명령을 보냄.
     * 파일 녹화가 끝나면, ArVid는 테이프를 되감고 데이터를 다시 읽어 중요한 데이터 손실이 없는지 확인함.

  테이프에서 데이터 읽기

     * VHS 테이프에서 데이터를 컴퓨터로 가져오려면, 테이프와 특별한 ""목차"" 파일이 필요함.
     * ArVid 소프트웨어를 읽기 모드로 실행하고 테이프에서 다운로드할 파일을 선택하면, 장치는 VCR에 ""빨리 감기"", ""되감기"", ""재생"" 명령을 보내고 비디오 신호를 디지털 데이터로 변환함.

    백업 품질 향상

     * ArVid 장치와 소프트웨어는 매우 신뢰할 수 있으나, VHS 테이프에 데이터를 오랫동안 안전하게 저장하려면 VCR 장치의 종류와 VHS 테이프의 품질이 중요함.
     * 더 무거운 금속 케이스의 VCR이 권장되며, 180분 용량의 VHS 테이프가 가장 좋음.

  기술적 세부 사항

     * 데이터를 신뢰성 있게 테이프에 저장하기 위해, 장치는 비디오 신호의 밝기 부분만을 사용하고, 색상과 소리의 변화는 데이터 녹화에 사용되지 않음.
     * ArVid는 ""Reed-Solomon with Interleaving"" 오류 수정 알고리즘을 사용하여 테이프의 오류를 감지하고 수정함.

  ArVid 실제 사용

    용량과 비용 – 다른 옵션과 비교

     * 단일 VHS 테이프에 엄청난 양의 데이터를 기록할 수 있으며, ArVid 시스템의 비용은 약 80달러였음.
     * 당시의 다른 저장 옵션과 비교하여 ArVid는 놀라운 가치를 제공함.

    테이프에서 데이터의 지속 시간

     * VHS 테이프는 평균적으로 10-30년의 수명을 가짐.
     * 사용자들은 1994/1995년에 저장한 파일을 16년 후에도 오류 없이 복구할 수 있었음.

    실제 사용 사례

     * ArVid 장치는 데이터 백업 솔루션으로 판매되었으며, 주로 데이터 백업에 사용됨.
     * VHS 테이프는 반복적인 읽기와 쓰기에 적합하지 않으며, ""한 번 쓰고 드물게 읽기""가 이상적인 사용 사례임.

  시간에 따른 제품 개선

     * ArVid 카드의 생산은 1993년부터 1998년 여름까지 이루어졌으며, 이 기간 동안 제품은 상당한 개선을 이룸.
     * ArVid의 제작사는 Zelenograd에 기반을 둔 ""PO KSI""로, 마이크로일렉트로닉스 생산의 중심지였음.

  소프트웨어

     * ArVid의 소프트웨어는 DOS, Windows(3.1, 3.11, 95, NT), OS/2에서 작동할 수 있으며, Linux와 FreeBSD에 대한 비공식 포트도 있음.
     * 주 사용자 인터페이스는 ""Norton Commander""와 유사하며, VHS 테이프에서 파일을 읽고 쓰는 것을 간단하게 만듦.

    ArVid 소프트웨어 저장소

     * 이 장치와 함께 제공되는 다양한 실행 파일과 문서가 포함되어 있으며, 이를 통해 프로그래머들은 자신의 애플리케이션을 장치 위에 만들 수 있음.

   GN⁺의 의견:
     * ArVid는 당시의 기술적, 경제적 제약을 극복하고 대용량 데이터 저장을 가능하게 한 혁신적인 솔루션이었음.
     * 이 기술은 현재의 클라우드 스토리지와 비교할 때 매우 원시적이지만, 당시의 상황에서는 매우 효율적이고 경제적인 방법이었음.
     * ArVid의 사례는 기술의 진화와 함께 사용자의 창의성과 적응력을 보여주는 흥미로운 역사적 사례임.
"
"https://news.hada.io/topic?id=13093","브레이브 레오, 기본 설정으로 'Mixtral 8x7B' 사용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   브레이브 레오, 기본 설정으로 'Mixtral 8x7B' 사용
"
"https://news.hada.io/topic?id=13095","@Transactional의 해로움 (feat. nested, PostgreSQL)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             @Transactional의 해로움 (feat. nested, PostgreSQL)

     * 어느 순간 일어난 급격한 성능 저하로 인한 서비스 장애가 발생
     * 원인을 조사한 결과 트랜잭션이 중첩되었을 때 성능 저하를 확인
     * 중첩된 트랜잭션 자체는 죄가 없는데 무엇이 문제인지 조사
          + 최근 @Transactional 을 사용한 곳이 급격히 증가
          + 어노테이션 만으로 쉽게 트랜잭션을 적용할 수 있다보니 불필요한 부분에도 사용되었으며 이는 성능 저하로 이어짐
     * 중첩된 트랜잭션은 큰 성능 저하의 원인이 될 수 있으니 트랜잭션을 적용할 때에는 신중해야 할 것

   유익한 좋은 분석 글 잘 읽었습니다.
"
"https://news.hada.io/topic?id=13109","일본의 달 착륙선 '슬림', 재가동하여 임무 재개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      일본의 달 착륙선 '슬림', 재가동하여 임무 재개

일본의 달 착륙선 Slim, 생명을 되찾아 임무 재개

     * 일본의 달 착륙선이 전력 공급 문제로 일주일간 중단되었던 작업을 재개함.
     * 일본 항공우주개발기구(JAXA)는 일요일에 착륙선과의 연락을 재개했으며, 이는 문제가 해결되었음을 나타냄.
     * 조명 조건의 변화로 태양광을 받아 다시 작동하는 태양 전지.

Slim 착륙선의 성공적인 달 착륙

     * Slim 착륙선은 미국, 구소련, 중국, 인도에 이어 달에 부드럽게 착륙한 다섯 번째 국가가 됨.
     * 착륙선은 1월 20일에 태양을 향하지 않는 방향으로 착륙하여 전력을 생성하지 못했음.
     * 배터리 전력으로 몇 시간 동안 작동한 후, 태양광의 각도가 바뀌면 전기가 회복될 수 있도록 착륙선을 꺼둠.

Slim 착륙선의 과학 임무

     * JAXA는 Slim이 ""토이 푸들""이라고 별명 붙인 인근 바위의 사진을 공유함.
     * 착륙선은 달의 기원에 대한 단서를 찾기 위해 바위의 구성을 분석할 예정임.

Slim 착륙선의 정밀 착륙

     * Slim은 지구 적도 근처의 Shioli 분화구 가장자리에 목표 착륙 지점에서 55m 이내에 착륙함.
     * JAXA는 이를 ""전례 없는 정밀 착륙""이라고 설명함.
     * 착륙 기술은 연료, 물, 산소의 잠재적인 원천으로 여겨지는 험준한 달 극지 탐사를 가능하게 할 수 있음.

일본의 이전 달 탐사 시도

     * 일본의 스타트업 iSpace가 달 착륙선을 출시했으나, 달 위 고도에 혼란을 겪은 온보드 컴퓨터로 인해 충돌함.
     * JAXA는 Slim이 달에서 얼마나 오래 작동할지 즉시 말할 수 없으며, 착륙선이 달 밤을 견딜 수 있도록 설계되지 않았음을 밝힘.

달 착륙의 어려움과 인도의 최근 성공

     * 달에 착륙하는 것은 통계적으로 매우 어려운 일로, 모든 시도 중 절반 정도만 성공함.
     * 인도는 2023년 8월에 Chandrayaan-3의 로버를 달 남극 근처에 착륙시켜 최근에 이 클럽에 가입한 국가임.

GN⁺의 의견

     * 일본의 Slim 착륙선이 재개한 임무는 달 탐사 역사에서 중요한 이정표를 나타냄. 정밀 착륙 기술은 미래의 달 탐사에 큰 영향을 미칠 수 있음.
     * Slim 착륙선의 과학 임무는 달의 기원에 대한 이해를 높이고, 장기적으로는 인류의 달 정착에 필요한 자원 발견에 기여할 수 있음.
     * 이 기사는 우주 탐사에 관심 있는 사람들에게 흥미로운 소식을 제공하며, 우주 탐사의 어려움과 성취를 보여주는 사례로서 교육적 가치가 있음.

        Hacker News 의견

     * 스캇 맨리가 훌륭한 설명을 했음. 착륙선은 착륙 지점을 호버링하며 사진을 찍는 마지막 단계에서 로켓 노즐을 잃었음. 노즐은 로켓 추력을 효과적으로 만들기 때문에 사실상 한쪽 추력을 잃은 것임. 소프트웨어가 이를 조정하여 부드럽게 착륙시켰지만 기울어짐을 멈출 수는 없었음. 우주선은 목표 지점에서 50m 이내에 착륙하여 매우 정확한 것으로, 이 부분은 완전한 성공이었음. 로켓 노즐 문제는 고착된 밸브 또는 다른 문제 때문일 수 있으며, 비슷한 설계에서 비슷한 일이 일어난 적이 있어 개선이 필요함.
     * 우주선은 배터리로 몇 시간 동안 작동한 후, 태양광 각도가 바뀌면 전기를 회복할 수 있도록 권한을 끄기로 결정함. 착륙선은 달의 기원에 대한 단서를 찾기 위해 바위의 구성을 분석할 것임.
     * 이것이 우주선의 방향을 바로잡는 것을 포함하는지, 아니면 ""뒤집혀 있지만 일부 카메라 작업이 가능하다""고 해석해야 하는지 불분명함. 임무의 나머지 부분에서 사용 가능한 태양 에너지는 큰 제약이 될 것으로 보임.
     * BattleBots/Robot Wars 팀과 협력하여 뒤집힌 로봇을 다시 바로 세울 수 있는 플리퍼를 포함했어야 함.
     * 이 스레드에서의 안락의자 전문가들의 의견이 대단함. 임무가 실패하지 않았다는 것과 JAXA에 대한 칭찬.
     * 몬티 파이썬과 성배의 기사처럼 들림. ""나는 아직 죽지 않았어!"" ""그저 작은 상처일 뿐!""
     * ""글리치""라고 불리는 것이 착륙선이 뒤집힌 상태인가? 이를 고칠 수 있는 방법이 있었나, 아니면 태양 전지판만 뒤집혔나? 결국 무슨 일이 일어났나?
     * 달에 착륙하는 것이 통계적으로 매우 어려움. 모든 시도 중 절반만 성공함. NASA가 55년 전에 인간을 달에 착륙시키고 돌아올 수 있었던 것을 감안할 때 왜 여전히 이런 상황인지?
     * ""퍼스트 맨"" (2018) 영화에서 아스트롱이 이글 착륙선의 연료가 ""비어 있음""으로 표시될 때까지 30초 남은 상황에서 냉정함을 유지하는 장면이 긴장감 있게 묘사됨.
     * 케르발 게임을 해본 사람이라면 이 상황에 공감할 것임.
     * Jaxa가 X(이전 트위터)에 ""장난감 푸들""이라는 별명을 붙인 인근 바위의 사진을 공유했다는데, 여기서 '별명 붙이기'가 무슨 의미인지 궁금함. 착륙선이 패턴 인식을 하는 것인지, 기계가 어떻게 별명을 생성하는지에 대한 설명.
"
"https://news.hada.io/topic?id=13079","Show GN: Notion 페이지를 OpenAI Knowledge로 만들어주는 무료 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Show GN: Notion 페이지를 OpenAI Knowledge로 만들어주는 무료 도구

   많은 고객 분들이 사내 Slack 봇을 만들 때 Notion 등 지식 기반을 OpenAI Knowledge 형태로 만드는 것을 어려워 한다는 것을 확인했습니다. 이를 돕기 위해 만든 간단한 무료 유틸리티 공유합니다.

   문제:
     * OpenAI GPTs (Knowledge)와 OpenAI Assistants (Retrieval)의 파일 개수는 20개, 토큰 수는 파일당 2M으로 제한되어 있다.
     * Notion에서 하위 페이지를 포함하는 데이터베이스를 내보내기(Export)하면 너무 많은 파일이 생성된다.
     * 비개발자는 Notion 내보내기 파일을 OpenAI 제약에 맞게 변경하는 것이 어렵다.

   도구 소개:
     * PlugBear Merge Tool: 여러 Markdown, CSV, HTML 파일을 OpenAI 제약 사항에 맞춰 합쳐준다. (무료)
     * 도구 소개 영상

   추가 자료:
     * Notion 활용해서 Slack Q&A 봇 만들기: OpenAI GPTs 혹은 Assistants를 활용해서 Slack Q&A 봇을 만들 수 있다.
"
"https://news.hada.io/topic?id=13122","빅 테크로부터 받은 중단 명령서에 대처하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       빅 테크로부터 받은 중단 명령서에 대처하는 방법

Big Tech로부터 경고장을 받았을 때 대처 방법

     * Big Tech로부터 경고장(cease-and-desist letter)을 받는 것은 놀라운 일이지만, 대부분의 경우 법적인 문제 없이 괜찮게 해결될 수 있음.
     * 경고장은 법적 조치의 시작을 의미하는 것이 아니며, 대부분의 경우 회사가 원하는 행동을 하도록 겁을 주는 전략임.
     * 경고장에는 법적으로 집행 불가능한 과장된 주장이나 요구가 포함될 수 있으며, 이는 주로 협박 전술로 사용됨.

경고장을 받기 전에 위험을 예상하기

     * Big Tech와 대립적인 소프트웨어나 연구를 하고 있다면, 언제든지 경고장을 받을 수 있다는 것을 인지해야 함.
     * 공식 API나 서비스 외에 Big Tech 플랫폼과 상호작용하는 거의 모든 활동은 경고장을 받을 위험이 있음.
     * 위험을 낮출 수 있는 방법은 큰 조직 내에서 일하거나, 공익을 위한 명확한 목적을 가진 프로젝트를 진행하는 것임.

경고장을 받았을 때 초기 대응

     * 경고장을 받고 나서 즉시 소프트웨어나 서비스를 중단하는 것이 좋으며, 법적 조언을 받기 전까지는 회신을 서두르지 말 것.
     * 경고장에는 대응 기한이 정해져 있을 수 있지만, 무리하게 기한 내에 응답하기보다는 법적 조언을 구하는 것이 중요함.

제한된 선택지 인식하기

     * 대부분의 법적 시스템에서는 옳고 그름이 중요한 것이 아니라, 법정에 갈 수 있는 자금, 시간, 의지가 중요함.
     * 법적으로 옳다고 확신하더라도, Big Tech 회사와의 소송은 재정적, 정신적 부담이 크기 때문에 현실적으로 대응하기 어려움.

반응 결정하기

     * 경고장에 대한 반응으로는 무시하기, 준수하기, 방어하기 세 가지 옵션이 있음.
     * 완전히 무시하고 서비스를 계속 제공하는 것은 위험하며, 준수하는 것이 문제를 해결하고 정상적인 생활로 돌아가는 가장 좋은 방법임.

여론의 법정으로 가기

     * 여론의 법정에서 싸우는 것은 Big Tech에 대한 불만을 표출하고 영향을 미칠 수 있는 가장 실현 가능한 방법임.
     * 경고장에 대해 공개적으로 이야기하고, 기자들과 연락하여 상황을 보도하도록 하며, 앱 사용자나 지지자들에게 널리 공유하도록 요청함.

후속 조치에 대비하기

     * 경고장을 받은 후에는 회사로부터 지속적인 후속 조치를 받을 수 있으며, 이는 상당한 스트레스를 유발할 수 있음.
     * 회사는 계정 복구의 가능성을 제시할 수 있지만, 이는 매우 불확실하며, 법적 언어가 모호할 경우 무시하는 것이 현명함.

받아들이고 나아가기

     * 대부분의 경우 계정을 되찾거나, 경고장을 받은 원인이 된 소프트웨어나 연구를 계속할 수 없으며, 법정에 갈 여력이 없음.
     * 여론의 법정에서 문제를 제기하여 Big Tech의 법적 공포 이야기 목록에 추가함으로써 정치인들이 규제를 만드는 데 영향을 미칠 수 있음.

받아들이지 않기

     * 상황을 받아들이고 싶지 않다면, 계속해서 문제를 제기하고, 정치인들에게 압력을 가하며, 기술 커뮤니티의 조직과 연결을 구축하고, 부당하게 타겟이 된 다른 사람들과 연대하여 변화를 위해 함께 노력함.

   GN⁺의 의견:
     * 이 글은 Big Tech로부터 경고장을 받았을 때의 대처 방법을 제공함으로써, 개발자들이나 연구자들에게 매우 유용한 정보를 제공한다.
     * 특히 소프트웨어 개발자들이 자신의 프로젝트가 Big Tech의 이익과 대립할 수 있는지를 사전에 인지하고, 위험을 최소화할 수 있는 방법을 고려하도록 돕는다.
     * 여론의 법정을 활용하는 전략은 Big Tech의 독점적인 행동에 대한 사회적 인식을 높이고, 장기적으로는 정책 변화를 이끌어낼 수 있는 효과적인 방법임을 강조한다.

        Hacker News 의견

     * 이 글은 훌륭한 작성물임.
          + 법률 전문가는 아니지만, 수십 년 동안 여러 차례 C&D(중단 및 철회 요청)를 받았음.
          + 첫 번째 C&D는 매우 두려웠으나, 이후에는 그저 회사가 ""내가 하는 일을 좋아하지 않는다""는 의미라는 것을 이해함.
          + C&D를 받으면 변호사와 상의하여 내용을 검토하고, 법적 위험이 있다고 판단되면 행동을 변경함.
          + 그렇지 않으면 변호사가 C&D를 받았다고 회신하고 무시함. 진짜 문제가 있다면 소송을 제기해야 함.
     * 이 기사의 전제는 C&D에 반드시 대응해야 한다는 것인데, 이는 말도 안 됨.
          + 서비스 약관 위반 등 어처구니없는 내용이라면 무시하고 법적 비용을 낭비하지 않는 것이 낫음.
          + 변호사를 고용해야 한다고 조언하는 사람들은 대부분 과거에 변호사를 고용한 경험이 없음.
          + 변호사는 대부분 ""상황에 따라 다르다""고 말하며, 구글에서 검색할 수 있는 몇 가지 법적 용어를 제공함.
          + C&D는 발송자에게 거의 비용이 들지 않으며, 실제 소송과는 다름.
          + 실제로 소송이 제기될 경우에 변호사를 고용해야 하지만, 그 전에는 돈 낭비임.
     * 과거에 페이스북 변호사들로부터 해를 끼치지 않는 소프트웨어에 대한 C&D 이메일을 주기적으로 받았음.
          + 전혀 응답하지 않고 무시함. 결국 그들이 포기하고 반응을 보이는 대상에 집중하는 것으로 보임.
     * 메타의 ""안티-스크래핑 팀""에 대응하는 경험이 있는 변호사로서, 상황에 따라 예상보다 원만한 해결책이 있을 수 있음.
          + 메타는 사회적 및 규제적 감시를 인지하고 있으며, 특정 고려 사항을 수용할 의사가 있다면 협조적일 수 있음.
          + 어쨌든 업계 특화 지식을 가진 변호사를 찾는 것이 권장됨. C&D는 단순한 협박부터 소송의 전조에 이르기까지 다양함.
     * 대형 기술 회사들이 C&D를 통해 괴롭히거나 거짓 주장을 하고, 집행 불가능한 경우가 있음에도 불구하고, 'Arkell v. Pressdram'을 언급하지 않은 것에 실망함.
     * 이 글을 읽고 나니 옵션이 다음과 같이 보임:
          + C&D를 무시: 권장되지 않으며, 소송으로 이어질 가능성이 높고 패소할 가능성이 큼.
          + 준수: 요구 사항 중 일부(예: 재정 상태를 공개하라는 요구 등)는 아니더라도, 문제가 된 행동을 중단함.
          + 변호사를 고용하고 싸움: 독립적으로 부유하거나 디지털 권리 전문 법률 지원 서비스, 언론인, 기타 강력한 엔티티의 도움을 받을 수 있다면 승산이 있음.
          + 모든 경우에 메타와 같은 엔티티라면 이미 계정을 비활성화하고 금지했을 것이며, 다시 되찾을 수 없음.
     * 미국 정부로부터 직접 제공받은 대규모 CSV 파일(FOIA에 따른 PPP 대출 데이터)을 통해 공개 정보를 게시하고, COVID 구호 자금의 수령인 검색과 분배 분석을 쉽게 할 수 있는 웹 인터페이스를 제공함으로써 여러 C&D를 받음.
          + C&D를 보낸 많은 사람들이 정부를 사기 친 혐의로 기소되었으며, 그 중 일부는 우스꽝스러운 방법으로 사기를 침.
     * 큰 회사들이 어떻게 쉽게 작은 회사들을 짓밟을 수 있는지에 대해 매우 좋은 글이지만, 동시에 우울함.
          + 옳다고 해서 중요한 것이 아니라, 법정에 갈 수 있는 돈, 시간, 의지가 있는지가 중요함.
          + 예외는 있지만, 대부분의 경우 이것이 사실임.
          + 개인적으로 부유한 개인과 법적 문제에 휘말렸을 때, 결과가 좋지 않았고 자존심을 굽힐 수밖에 없었음.
          + 세상이 공평하지 않다는 것을 이론적으로 알고 있지만, 직접 당하면 받아들이기가 전혀 쉽지 않음.
     * 흥미로운 주제와 기사임. 이 정보를 읽고 머릿속에 저장해두면, 이러한 스트레스 상황에 처하기 전에 필요할 때 유용함.
          + 그러나 C&D 이야기가 나올 때마다 이해가 안 가는 것은, 회색 지대에서 무언가를 할 때 왜 C&D를 보낼 서류를 남기는지임.
          + 만약 어떤 소프트웨어를 만들어서 대기업이나 페이스북에 도전하고/대중에게 이익을 주려고 한다면, 익명으로 소스를 무작위 포럼에 공개하면 중단될 수 없음.
          + 공식적인 깃허브 저장소를 만들고 실제 이메일을 사용하여 소송에 노출되는 것보다는 익명으로 공개하는 것이 낫지 않을까?
     * 오래전 구글로부터 상표권 침해를 이유로 불쾌한 통지를 받음.
          + 도메인이 필요하지 않았기 때문에, 두통이나 비용을 원하지 않았음.
          + 도메인 이름은 ""Orkut""에 대한 말장난이었고, 영향력 있는 인플루언서 행동을 비판하는 사이트를 위한 것이었지만, 결국 사이트를 만들지 않았음.
          + 이 경험은 구글다움과 맞지 않는 것 같아 구글 창업자 중 한 명의 스탠포드 이메일 주소로 도메인 이름 이전을 시작하고, ""악하지 않기""에 대해 이야기할 수 있도록 통지문 작성자에게 알림.
"
"https://news.hada.io/topic?id=13094","최신 AI 스택 : 엔터프라이즈 AI 아키텍처의 미래를 위한 설계 원칙","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                최신 AI 스택 : 엔터프라이즈 AI 아키텍처의 미래를 위한 설계 원칙

최신 AI 스택의 정의

     * 계층 1 : 컴퓨트 및 기초 모델 - 기초 모델 자체와 모델을 훈련, 미세 조정, 최적화 및 배포하기 위한 인프라를 포함
     * 계층 2 : 데이터 - LLM을 기업 데이터 시스템 내의 적절한 컨텍스트에 연결하는 인프라를 포함하며, 데이터 전처리, ETL 및 데이터 파이프라인, 벡터 데이터베이스, 메타데이터 저장소, 컨텍스트 캐시 등의 핵심 구성 요소를 포함
     * 계층 3 : 배포 - 개발자가 AI 애플리케이션을 관리하고 조정하는 데 도움이 되는 도구를 포함. 에이전트 프레임워크, 프롬프트 관리, 모델 라우팅 및 조정
     * 계층 4 : 관찰 가능성 - LLM의 실행 시간 동작을 모니터링하고 위협으로부터 보호하는 솔루션을 포함

새로운 AI 성숙도 곡선

     * 현대 AI 스택을 정의하는 시장 구조와 기술은 빠르게 진화하고 있으며, 주요 구성 요소와 리더들이 이미 등장함
     * LLM 이전에는 ML 개발이 선형적이고 '모델 중심'이었으나, LLM은 '제품 중심'으로 전환하여 ML 전문 지식이 없는 팀도 AI를 제품에 통합할 수 있게 함
     * AI 스택이 성숙함에 따라 개발 팀은 기업 또는 고객 특정 데이터를 통해 AI 경험을 맞춤화하려고 함
     * AI 성숙도 곡선
          + 1단계: Closed-source models only 비공개 모델만
               o 2023년 초에는 비용과 엔지니어링 노력이 주로 기초 모델 자체에 집중하고 그 위에 간단한 커스터마이제이션(프롬프트 엔지니어링 / 퓨삿러닝 등의 학습)만 있었음
               o OpenAI 및 Anthropic 과 같은 주요 비공개 소스 모델 제공업체가 이 단계에서 초기 견인력을 얻어 현대 AI 스택의 최초 승자로 확고히 자리 잡음
          + 2단계: Retrieval-augmented generation 검색증강 생성
               o AI 애플리케이션 노력의 중심으로(모델 계층이 아닌) 데이터 계층에 초점을 둠
               o 특히 RAG의 대중화에는 벡터 데이터베이스 Pinecone 및 데이터 전처리 엔진 Unstructured 와 같은 더욱 강력한 데이터 계층 인프라가 필요
               o 대부분의 기업과 스타트업은 현재 이 단계에 있음
          + 3단계: Hybrid model deployment 하이브리드 모델 배포
               o Typeface 및 Descript 와 같은 선두 기업이 대용량 도메인별 작업을 위해 오픈 소스로 폐쇄 소스 모델 사용을 보완하기 시작
               o Modal, Baseten 및 Fireworks 와 같은 모델 배포 공급업체가 상당한 견인력을 얻기 시작
          + 4단계 이상: Custom models 맞춤형 모델
               o 아직까지 자체 모델을 구축할 정도로 고도화되었거나 자체 모델을 구축할 필요가 있는 기업은 거의 없지만, 향후에는 스택을 더 깊이 활용하고자 하는 대기업의 사용 사례가 늘어날 것
               o 메모리 효율적 미세 조정(4비트 양자화, QLoRA, 메모리 페이징/오프로드 포함)을 위한 툴을 제공하는 Predibase, Lamini와 같은 기업이 이를 지원하게 될 것

새로운 AI 인프라 스택을 위한 네 가지 주요 설계 원칙

     * AI 혁명은 새로운 인프라 스택에 대한 수요를 촉발할 뿐만 아니라 기업이 애플리케이션 개발, R&D 지출 및 팀 구성을 접근하는 방식을 재구성함
     * 주요 설계 원칙:
          + 1. 지출의 대부분은 추론과 트레이닝에 사용됨
               o LLM 혁명 초기에는 모든 회사가 언젠가 자신만의 대규모 언어 모델을 훈련할 수 있을 것으로 보였음
               o 2023년 3월에 발표된 BloombergGPT(재무 데이터에 대해 특별히 훈련된 50b LLM) 와 같은 모델은 앞으로 기업 및 도메인별 LLM이 범람하는 사례로 예고되었음
               o 하지만 그런 대홍수는 나지 않았음
               o Menlo Ventures의 최근 엔터프라이즈 AI 설문조사에 따르면 전체 AI 지출의 거의 95%가 런타임과 사전 학습에 사용되고 있는 것으로 나타남
               o 이 비율은 Anthropic과 같은 대형 기반 모델 제공업체에서만 뒤집혔음. 애플리케이션 레이어에서는 Writer와 같은 정교한 AI 빌더조차도 컴퓨팅의 80% 이상을 트레이닝이 아닌 추론에 사용
          + 2. 우리는 다중 모델(Multi-Model) 세계에서 살고 있음
               o 단일 모델이 ""모든 모델을 지배""할 수는 없음
               o 기업의 60%가 여러 모델을 사용하고 프롬프트를 가장 성능이 좋은 모델로 라우팅함
               o 다중 모델 접근 방식은 단일 모델 종속성을 제거하고 더 높은 제어 가능성을 제공하며 비용을 절감
          + 3. RAG가 지배적인 아키텍처 접근 방식임
               o LLM은 뛰어난 추론 엔진이지만 도메인 및 기업별 지식이 제한되어 있음
               o 유용한 AI 경험을 만들기 위해 팀은 검색 증강 생성(RAG)부터 시작하여 지식 증강 기술을 신속하게 배포중
               o RAG는 ​​Pinecone과 같은 벡터 데이터베이스를 통해 기본 모델에 기업별 ""메모리""를 부여
               o 이 기술은 현재 생산 중인 미세 조정, 하위 순위 적응 또는 어댑터와 같은 다른 사용자 정의 기술보다 훨씬 앞서며 주로 데이터 계층이 아닌 모델 계층에서 작동
               o 앞으로도 이러한 추세는 계속될 것이며 데이터 전처리 엔진(예: Cleanlab ) 및 ETL 파이프(예: Unstructured )를 포함한 데이터 평면의 새로운 부분이 런타임 아키텍처에서 통합될 것으로 예상
          + 4. 모든 개발자는 이제 AI 개발자임
               o 전 세계적으로 개발자는 3천만 명, ML 엔지니어는 30만 명, ML 연구원은 3만 명에 불과
               o ML의 최전선에서 혁신을 이루고 있는 사람들의 경우, GPT-4 또는 Claude 2 수준 시스템을 구축하는 방법을 아는 연구원은 전 세계에 50명에 불과할 것으로 추정
               o 이러한 현실에 직면하여 좋은 소식은 수년간의 기초 연구와 정교한 ML 전문 지식이 필요했던 작업을 이제 강력한 사전 훈련된 LLM을 기반으로 데이터 시스템을 엔지니어링하는 주류 개발자가 며칠 또는 몇 주 안에 완료할 수 있다는 것
               o Salesforce의 Einstein GPT(Sales용 AI CoPilot) 및 Intuit Assist(Generative AI 기반 금융 비서)와 같은 제품은 주로 AI 엔지니어로 구성된 린 팀(최신 AI 스택의 데이터 플레인에서 작업하는 전통적인 풀 스택 엔지니어)에 의해 구축됨

다음 단계

     * 현대 AI 스택은 빠르게 진화하고 있으며, 올해 계속해서 진행될 것으로 예상되는 몇 가지 발전이 있음
     * 차세대 AI 어플리케이션들은 더욱 발전된 RAG을 시범 운영중
          + RAG는 오늘날 왕이지만, 이 접근 방식이 문제가 없는 것은 아님
          + 많은 구현에서는 여전히 토큰 수 기반 문서 청크, 비효율적인 인덱싱 및 순위 알고리듬을 포함하여 나이브한 임베딩 및 검색 기술을 활용
          + 컨텍스트 조각화, 환각, 엔티티 희귀성, 비효율적 검색 같은 문제를 가지고 있음
          + 이런 문제를 해결하기 위해 차세대 아키텍처는 더 발전된 RAG을 테스트중 : Chain-Of-Thought 추론, Tree-Of-Thought 추론, Reflexion, 룰기반 검색 등
     * 소형 모델이 최신 AI 스택에서 더 큰 비중을 차지
          + AI 애플리케이션 빌더가 최신 AI 스택에 더 깊이 집중함에 따라, 더 세밀하고 작업 특정 모델의 증가가 예상됨
          + 더 큰 폐쇄 소스 모델이 다루기 힘들거나 비용이 많이 드는 특정 영역에 대해 미세 조정된 작업별 모델이 확산될 것
          + ML 파이프라인 구축 및 미세 조정을 위한 인프라는 기업이 자체 작업별 모델을 생성함에 따라 이 단계에서 매우 중요해질 것
          + Ollama 및 ggml에서 제공하는 양자화 기술은 팀이 소형 모델이 제공하는 최대 속도 향상을 누릴 수 있도록 도와줌
     * 관찰 가능성(Observability)과 모델 평가(Model Evaluation)를 위한 새로운 도구가 등장하고 있음
          + 2023년 대부분의 기간 동안 로깅과 평가는 전혀 이루어지지 않았거나, 수작업으로 이루어졌거나, 대부분의 엔터프라이즈 애플리케이션의 출발점이 되는 학술적 벤치마크를 통해 이루어졌음
          + Criteo의 조사에 따르면 AI를 도입한 기업 중 약 70%가 주요 평가 기법으로 사람을 통해 결과물을 검토하고 있는 것으로 나타남. 그 이유는 리스크가 높기 때문
          + 고객은 고품질의 결과물을 기대하며 그럴 자격이 있고, 기업들은 환각으로 인해 고객의 신뢰를 잃을 수 있다는 점을 잘 알고 있음
          + 따라서 관찰 가능성과 평가는 새로운 툴을 위한 중요한 기회를 제공
          + 이미 Braintrust, Patronus, Log10, AgentOps와 같은 유망한 새로운 접근 방식이 등장하고 있음
     * 아키텍처는 서버리스 방향으로 이동할 것
          + 다른 엔터프라이즈 데이터 시스템과 마찬가지로, 최신 AI 스택은 시간이 지남에 따라 서버리스로 이동하고 있음
          + 여기서는 ""임시 머신"" 유형의 서버리스(예: 람다 함수)와 진정한 스케일 투 제로 서버리스(예: 포스트그레스용 Neon 아키텍처)를 구분함
          + 스케일 투 제로 서버리스의 경우 인프라를 추상화하면 개발자는 애플리케이션 실행의 운영 복잡성을 덜고, 더 빠른 반복이 가능하며, 기업은 컴퓨팅 대비 가용성에 대해서만 비용을 지불하여 상당한 리소스 최적화를 누릴 수 있음
          + 서버리스 패러다임은 최신 AI 스택의 모든 부분에 적용될 것
          + Pinecone은 벡터 컴퓨팅을 위한 최신 아키텍처로 이러한 접근 방식을 채택
          + Neon은 Postgres, Momento는 Caching, Baseten과 Modal은 추론을 위해 동일한 작업을 수행

   좋고 재밌는 글.

   https://news.hada.io/topic?id=6658 Neon - 서버리스 Postgres 오픈소스

   변화화는 환경속에서 새로운 기회가 많이 만들어졌으면 좋겠네요~
   좋은 방향으로

   전세계에 개발자가 3천만명 밖에 안되려나요??

   많이 인용하는 Evans Data Corporation 의 보고서 기준으로는 2022년 기준 2630만명 정도라고 합니다.
   https://www.evansdata.com/press/viewRelease.php?pressID=339

   GitHub을 사용하는 개발자는 1억명이 넘긴 했지만, 전부가 개발자라고 보기는 힘들 것 같아요
   https://github.blog/2023-01-25-100-million-developers-and-counting/

   그렇군요 생각보다 많이 적네요. 와중에 세계 인구 검색해보니 78억명이군요.. 언제 이만큼 늘어났는지 ㅎㅎ
"
"https://news.hada.io/topic?id=13069","난파된 비행기 안에서 보잉 풋 옵션을 매입한 것이 내부자 거래일까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 난파된 비행기 안에서 보잉 풋 옵션을 매입한 것이 내부자 거래일까?

내부 정보를 이용한 거래인가?

     * 비행기 사고 현장에 있으면서 보잉 주식에 대한 풋 옵션을 구매하는 것이 내부 정보를 이용한 거래에 해당하는지에 대한 질문.
     * 내부 정보란 회사의 임원이나 이사, 또는 비밀유지 계약을 맺은 사람 등 '내부자'로부터 얻은 정보.
     * 내부자의 비공개 정보를 이용해 주식 거래를 하고 이익을 얻는 것은 대부분의 경우 불법.
     * 비행기 탑승객이 개인적인 지식을 바탕으로 거래를 한다면, 이는 내부 정보를 이용한 것이 아니므로 내부자 거래에 해당하지 않음.
     * 보잉은 항공기 제조사이며, 항공사 직원은 보잉에 대한 내부자가 아님.

Matt Levine의 답변

     * Matt Levine는 자신의 칼럼에서 이와 같은 질문에 대해 답변함.
     * 내부 정보를 이용한 거래는 공정성이 아닌 도난과 관련이 있음.
     * 직무상 얻은 비공개 정보를 이용해 거래하는 것은 불법이지만, 일반인이 자신의 관찰을 바탕으로 투자 결정을 내리는 것은 문제가 없음.
     * 비행기 문제를 목격하고 그에 따라 거래를 하는 것은 비공개 정보를 유지할 의무가 없으므로 문제가 되지 않음.

SEC의 정의

     * 미국 증권거래위원회(SEC)에 따르면, 불법 내부 정보를 이용한 거래는 신뢰 관계나 의무를 위반하고 비공개 중요 정보를 바탕으로 증권을 거래하는 것을 의미.
     * 일반 승객은 보잉에 대한 신뢰 관계나 의무가 없으므로, 이 경우 불법 내부 정보를 이용한 거래에 해당하지 않음.

GN⁺의 의견

     * 이 글은 일반인이 비상 상황에서 관찰한 정보를 바탕으로 주식 거래를 할 때 내부 정보를 이용한 거래에 해당하는지 여부를 다룸.
     * 내부 정보를 이용한 거래는 회사 내부자의 비공개 정보를 이용할 때에만 해당하며, 일반인의 개인적 관찰은 해당되지 않음.
     * 이 주제는 주식 거래와 법적 규제에 관심이 있는 사람들에게 흥미롭고 유익한 정보를 제공함.

        Hacker News 의견

     * 내부 정보를 이용한 거래에 대한 논의
          + 보잉과 신탁 관계가 없고 정보에 대한 비밀 유지 의무가 없다면, 내부 정보를 이용한 거래가 아님. 비행기 문이 폭발할 때 그 안에 있다면, 단지 중요한 공개 정보를 먼저 알게 된 것일 뿐.

     예시로, 내부 정보 이용의 불법성에 대한 이론을 설명하는 링크 제공.
     * 영국의 내부자 거래에 대한 3단계 테스트
          + 정보는 구체적이어야 함. 예를 들어, 보잉 주식을 팔아야 한다는 것.
          + 합리적인 투자자가 거래 결정을 내릴 때 이 정보를 고려할 것인지 여부. 이 경우 명확함.
          + 정보는 비공개여야 함. 비행기에 문제가 있음을 알고 있는 200명 정도의 사람들에게 공개되었다면, 정보는 공개된 것으로 간주되어 거래가 자유로움. 일반적으로 공개 범위는 약 30명으로 간주됨.
     * 영화 ""카지노 로얄""의 예시
          + 테러 자금 관리자가 회사 실패에 베팅하여 주식을 공매도함. 제임스 본드가 개입하여 계획을 막음.
     * 외부인으로서 정보를 스스로 얻은 경우
          + 예를 들어, 헤지펀드가 위성 이미지를 사용하여 월마트 주차장의 차량을 세어 매출을 추정하는 것과 같이, 내부자로부터 정보를 얻지 않았기 때문에 문제가 되지 않음.
     * 법학교에서 배운 내용
          + ""tipper""가 없다면 ""tippee""도 없다는 원칙. CEO가 자신의 마당에서 남들이 잘 모르는 언어로 통화하고 있을 때, 그 언어를 알고 있는 사람이 우연히 듣게 되더라도, 그 정보는 공개된 것으로 간주될 수 있음.
     * 매트 레빈의 해석
          + 소비자로서 비밀 유지 의무가 없으므로 문제가 되지 않음.
     * 더 복잡한 상황: 조종사의 경우
          + 이스라엘 군 최고 지휘관이 전쟁 발발 후 자신의 투자 포트폴리오를 매각한 사례. 기술적으로는 합법이지만, 논란이 되어 일부는 사임을 요구함.
     * 일반인의 경우
          + 평범한 사람이 일상생활 중 목격한 사건에 기반하여 거래하는 것은 문제가 되지 않음. 그러나 거래 금액이 크다면 조사를 받을 수 있음.
     * 가상의 상황: 메타 직원의 경우
          + 메타 직원이 메신저나 왓츠앱에 기압계를 설치하여 감압을 감지하고 자동으로 항공사와 항공기 제조사의 주식을 공매도할 수 있는 상황.
     * 원본 게시물 링크
          + 16일 전의 원본 게시물에 대한 링크 제공.
"
"https://news.hada.io/topic?id=13086","접근 로그에서 발견한 공격 사례들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           접근 로그에서 발견한 공격 사례들

공격자의 접근 로그 분석

     * 공개 인터넷에 IP를 노출시키면 악의적인 트래픽이 즉시 유입됨.
     * 자주 발생하는 공격 유형 중 하나는 .env 파일을 찾는 디렉토리 순회 공격임.
     * 공격자들은 AWS 자격증명 및 구성 파일, Git 저장소 등 다른 일반적인 파일도 탐색함.
     * 관리자가 실수로 노출시킬 수 있는 일반적인 디렉토리를 찾는 공격도 있음.
     * 공격자들은 또한 일반적인 원격 접속 및 구성 도구를 찾으려 시도함.

Shellshock

     * Shellshock 취약점을 이용하는 공격이 발견됨.
     * 이 취약점은 취약한 버전의 bash를 사용하여 CGI 스크립트를 실행하는 웹서버를 대상으로 함.
     * 공격자는 HTTP_USER_AGENT 환경 변수에 함수를 삽입하여 임의의 명령을 실행할 수 있음.

LuCI Injection

     * OpenWRT 라우터의 LuCI 웹 인터페이스를 대상으로 하는 공격이 발견됨.
     * 공격은 원격 서버에서 호스팅하는 쉘 스크립트를 다운로드하고 실행하려는 명령을 주입함.

Zyxel Injection

     * Zyxel 장치에서 사용 가능한 취약점을 이용하는 것으로 보이는 공격이 발견됨.
     * 공격은 zhttpd를 이용하여 쉘 명령을 URL에 삽입함.

   GN⁺의 의견:
    1. 이 기사는 공개된 IP에 대한 사이버 공격의 다양성과 그 위험성을 보여줌으로써, 보안에 대한 중요성을 강조함.
    2. Shellshock와 같은 오래된 취약점이 여전히 활용되고 있음을 보여주며, 시스템의 지속적인 업데이트와 취약점 패치의 중요성을 일깨움.
    3. 공격자들이 일반적인 도구와 디렉토리를 대상으로 한다는 점은, 최소한의 서비스만 공개하고, 필요한 경우 인증과 IP 제한을 추가하는 것의 중요성을 강조함.

        Hacker News 의견

     * 공격자들이 새로 발급된 인증서를 감시하여 목표를 찾는다는 점이 흥미롭다. Let's Encrypt에서 인증서를 받은 후 몇 시간 안에 서버에 수백 건의 접속 시도가 발생했다. 새로운 서버는 인터넷에 노출되기 전에 가능한 빨리 보안을 강화해야 한다는 교훈이 있다.
     * 과거에는 자체 호스팅 사이트를 관리하면서 접근 로그를 검토했고, IDS를 사용하여 공격 시도를 플래그했다. 하지만 로그 검토와 IDS 비용 지불을 중단했다. 대신 일반적인 취약점과 공격을 요약한 유용한 콘텐츠를 찾아 서버 관리에 활용하고, 빠른 패치 주기를 우선시하는 것이 좋다. 로그는 문제 발생 후 진단에 매우 유용하다.
     * 저자는 보안 전문가가 아니라고 밝히면서, 기사의 첫 예시가 디렉토리 순회가 아니라 자격 증명 및 구성 발견이라고 지적한다. 디렉토리 순회는 공격자가 웹 루트를 벗어나거나 서버가 정상적인 디렉토리 외부의 것을 제공하도록 하는 기술을 의미한다.
     * 서버에서 fail2ban을 실행하고, 사이트에 제공하는 기능에 특화된 공격을 잡기 위해 맞춤형 감옥을 추가하는 것이 중요하다. fail2ban의 기본 설정이 여전히 효과적인지 확인해야 할 시간이다.
     * 많은 공격이 적대적인 국가로부터 온다는 것이 문제다. 논란의 여지가 있지만, 거래할 수 없는 국가들의 IP 범위를 차단하는 것이 유용할 수 있다. 이 방법으로 새로운 서비스에 대한 모든 탐색을 차단할 수 있었다.
     * 약 1년 동안 자체 설계한 HTTP/S 서버를 운영하면서, 열려 있는 포트(22, 80, 443)에서 많은 공격자 트래픽을 받았지만, 공격자들이 실제로 무엇을 시도하는지 분석할 시간은 없었다. 이 글은 많은 정보를 제공한다.
     * AWS에서 이러한 로그를 받고 있다면, AWS WAF를 VPC 앞에 배치하여 자신을 도울 것을 권한다. 비용이 많이 들지 않으면서 많은 문제를 예방할 수 있다.
     * 여러 해 동안 다양한 기업의 WAF를 관리해온 경험을 바탕으로, Cloudflare로 DNS를 옮기고 몇 가지 WAF 규칙을 사이트에 적용하는 것이 문제를 해결하는 데 도움이 될 것이라고 조언한다. WAF는 만병통치약이 아니므로 애플리케이션이 공격에 대비해 강화되어야 한다.
     * 관리하는 웹호스트에서 가장 흔한 공격 시도는 WordPress와 관련된 것이지만, 저자는 이를 언급하지 않았다. 아마도 저자는 WordPress 콘텐츠를 호스팅하고 있어서 정상 트래픽과 공격을 구분하지 못했을 수 있다.
     * '디렉토리 순회'라는 용어 대신 '디렉토리 열거'가 올바른 표현이다. 순회는 일반적으로 '.. / .. /'와 같은 경로를 사용하여 웹 루트를 벗어나는 것을 의미한다.
"
"https://news.hada.io/topic?id=13082","Lumos - 로컬 LLM Co-Pilot 크롬 확장 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Lumos - 로컬 LLM Co-Pilot 크롬 확장

     * 로컬에서 Ollama 서버를 구동하여 이용하게 해주는 크롬 확장
     * 현재 페이지의 내용에 대해서 AI를 이용한 요약/질문등의 기능 가능
          + 긴 글이나 뉴스 요약
          + 제품/상품 페이지의 리뷰에 대한 질문
          + 긴 기술 문서에 대해서 질문하기
"
"https://news.hada.io/topic?id=13076","Show GN: 데이터 기반 주식종목 리포트 웹사이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Show GN: 데이터 기반 주식종목 리포트 웹사이트

    1. 프로젝트 소개

     * 불신이 가득한 주식 리포트에 대해, 데이터 기반으로 진짜 믿을 수 없는게 맞나 라는 궁금증에 시작했습니다.
     * 너무 터무니 없는 리포트들만 내놓는 애널리스트가 있는 것도 사실이지만, 성과 좋은 애널리스트들도 많은 것을 확인할 수 있었습니다.
     * 무작정 리포트를 따라사는 것보다는 종목을 선정할 때에 참고하고, 관심 종목을 모아두기에 사용하면 좋을 것 같습니다.

    2. 기능 소개

     * 매일 신규 리포트 업데이트
     * 애널리스트, 증권사, 종목 별 통계 확인 가능 (목표 달성, 수익률, 수익기간)
     * 다운로드 없이 바로 리포트 확인 가능

   크리포트 사용법
   https://kreportanalytics.tistory.com/20

   정말 좋은서비스 감사합니다!
   보이던 리포트가 갑자기 안보이는 경우가 있던데 혹시 일부러 리포트를 빼신건가요?!

   안녕하세요.
   뺸 리포트는 없어서요. 순서가 바뀌면서 뒤페이지로 넘어갔을 수 있을거 같아요.
   그 부분 수정하겠습니다 감사합니다 ㅎㅎ

   엇 그러시군요 그런데 예를 들어
   넷마블로 검색을 했을떼 "" 신작 및 비용 통제로 흑자 전환 전망"" 리포트가 원래 보였었는데 오늘 보니까 볼수 없는 상태 인것 같더라구요!

   서버 오류가 있었습니다.
   다시 보이도록 조치하였습니다.
   알려주셔서 감사하고 불편드려 죄송합니다

   https://kreportanalytics.com/analyst_detail/…

   아닙니다! ㅎㅎ
   빠른 대응 감사합니다!

   완전 좋은 서비스입니다 꾸준히 애용하겠습니다 감사합니다!

   감사합니다 nova님!

   리포트를 누르면 ""죄송합니다. 리포트를 불러오는데 에러가 발생했습니다. 다음에 다시 시도해주세요."" 라고 에러 모달이 뜹니다.

   엇ㅠ
   혹시 어느 리포트 보시려다 해당 문구 확인하셨을까요?

   다 그러네요? 혹시 해외접속이 막혀있을까요? 제가 미국이라서요.

   따로 막고 있지는 않습니다.
   VPN을 통해서 해외 접속 시도해보았는데, 리포트가 제대로 나오네요..

   번거로우시겠지만 다른 브라우저나 기기로도 확인해보실 수 있을까요?
   리포트 보는 다른 방안도 다음 업데이트 추가하겠습니다.
   알려주셔서 감사합니다.

   크롬, 파폭 둘다 그렇습니다. /api/pdf 호출시 500에러가 나고 있습니다.

   호출했던 url 공유드려요
   https://kreportanalytics.com/api/pdf/…

   ㅠㅠ불편드려 정말 죄송하고 감사합니다
   1월 30일 리포트인데 29일로 뜨는걸로 보아 timezone 이슈인걸로 파악됩니다
   덕분에 해당 문제를 알게 되었네요
   급히 패치를 하였는데, 혹시 문제 해결되었는지 알려주시면 감사하겠습니다.

   그리고 kreportanalytics@gmail.com으로 메일 한번 주실 수 있을까요?

   아이고 무슨 불편은요. 이제 잘 뜨는것을 확인했습니다. 빠른 대응 감사드려요.

   이런거 항상 모아서 보고싶었는데 만들어주셔서 감사합니다 ㅠ

   감사합니다 kuber님 ㅎㅎ
"
"https://news.hada.io/topic?id=13099","애니메이션에서 나타난 MIT","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            애니메이션에서 나타난 MIT

MIT의 애니메이션 등장

     * 과학 소설이 애니메이션의 주요 장르 중 하나로 자리 잡은 이래, MIT는 애니메이션에서 가끔 언급됨.
     * MIT는 일반적으로 ""일본 외의 선진 기술 출처"" 역할을 하며, 다른 미국 대학들에 비해 자주 등장함.
     * MIT의 브랜드가 과학 및 첨단 기술 분야에서 세계적으로 인정받기 때문에 자주 등장하는 것으로 보임.

애니메이션과 만화에서의 MIT 언급 사례

     * MIT 부총장 겸 학장인 Vannevar Bush가 애니메이션 'Serial Experiments Lain'의 주요 인물로 등장함.
     * 'Serial Experiments Lain'에서 언급된 'Knights of the Eastern Calculus'는 MIT의 'Knights of the Lambda Calculus'에서 영감을 받았을 수 있음.
     * 애니메이션 'Nadesico'의 에피소드 12에서 Uri-P가 MIT 입학에 7번 실패했다고 언급함.
     * 'The end of Evangelion'에서 Magi 슈퍼컴퓨터 중 하나가 매사추세츠에 위치해 있음.
     * 첫 번째 'Patlabor' 영화에서 Labor 바이러스의 저자 E. Hoba가 MIT 출신임.
     * 'Ayashi no Ceres'의 캐릭터 Alexander Howell은 MIT 졸업생임.
     * 'Bubblegum Crisis' 에피소드 7에서 Vision이 추적하는 인물이 MIT 졸업생임.
     * 'Magical Girl Pretty Sammy Tenchi Muyo' 만화에서 Washu가 11세에 MIT를 졸업함.
     * 'Paniponi Dash'에서 11세의 로봇 공학 천재 Rebecca Miyamoto가 MIT 출신임.
     * 'Hanaukyo Maid Tai' 에피소드 13에서 Shinshei가 MIT와 유사한 대학에 다님.
     * 'Amazing Nurse Nanako' 에피소드 4에서 Dr. Kyoji가 MIT 역사상 가장 젊은 외국인 학생임.
     * 'Beck'의 마지막 에피소드에서 Heroes 밴드의 멤버가 MIT 출신임.
     * 'A! My Goddess'의 Keichi와 그의 선배들이 Nekomi 기술 연구소에 다니지만 다른 기관의 치어리더로 코스프레함.
     * 'Boku no Sexual Harassment' 에피소드 2에서 등장인물 중 하나가 MIT 출신임.
     * 'Genshiken'의 Kanako Ohno가 보스턴 지역 애니메이션 클럽 회원이었을 것으로 추정됨.
     * 'Kamen no Maid Guy' 에피소드 2에서 Kogarashi가 MIT 출신임을 언급함.
     * 'Real Drive' 에피소드 10에서 AI Eliza가 사이버 공간에서 문제를 일으킴.
     * 'Toradora!'에서 학생회장 Kanou Sumire가 우주비행사가 되기 위해 미국 대학에 진학함.
     * 'Gundam Seed'의 George Glenn이 17세에 MIT에서 박사학위를 취득함.
     * 만화 'Q.E.D'에서 Sou Touma가 15세에 MIT를 졸업하고 일본으로 돌아와 고등학교에 다니며 미스터리를 해결함.
     * 'Shinryaku! Ika Musume'에서 네 명의 MIT 졸업생이 외계 생명체 연구에 몰두함.
     * 'Liar Game'에서 주인공 Akiyama가 MIT 교수가 발명한 특별한 회로를 언급하지만 나중에 이를 지어낸 것임을 밝힘.

GN⁺의 의견

     * MIT가 애니메이션에서 자주 언급되는 것은 그들의 세계적인 명성과 과학 기술 분야에서의 선구적인 역할 때문일 것임.
     * 이러한 언급들은 MIT가 단순히 교육 기관을 넘어 대중 문화에서도 영향력을 가지고 있음을 보여줌.
     * 애니메이션 팬들에게는 MIT의 등장이 흥미로운 이스터 에그가 될 수 있으며, MIT 커뮤니티에게는 자신들의 학교가 전 세계적으로 어떻게 인식되고 있는지를 보여주는 재미있는 사례가 될 수 있음.

        Hacker News 의견

     *

     첫 번째 Patlabor 영화에서 E. Hoba는 MIT를 졸업한 Labor 바이러스의 창시자로, MIT 사람들이 바이러스를 제거하기 위한 노력이 언급되었다.
          + 한 사용자는 RMS에게 이 영화를 자유 소프트웨어의 중요성을 알리는 비유로 추천한 적이 있음을 회상함. RMS는 영화가 좋아 보인다고 했지만 VHS로 찾아봐야 한다고 답했다고 함.
     *
          + 이것이 내가 가장 좋아하는 애니메이션/MIT 연관성이다: ""SICP 애니메이션 오프닝""
          + 사용자는 SICP(Structure and Interpretation of Computer Programs) 책을 주제로 한 애니메이션 오프닝 비디오를 매우 인상적이라고 평가함.
     *
          + 인상적이다, 매우 멋지다. 하버드의 언급도 한번 보자.
          + 다른 사용자는 MIT의 팀 정신을 칭찬하며, 자신이 다녔던 작은 대학과 박사과정을 밟은 R1 대학과 비교하며, MIT 사람들이 가진 자부심을 부러워함.
     *
          + 그와 관련하여, ""Structure and Interpretation of Computer Programs"" 책은 종종 만화에서 가장 선호하는 프로그래밍 책으로 등장하며, SICP를 들고 있는 애니메이션 소녀의 밈을 만들어냈다.
          + SICP 책이 만화에서 자주 등장하는 프로그래밍 책으로 묘사되며, 이로 인해 해당 책을 들고 있는 애니메이션 캐릭터가 인터넷 밈으로 자리잡았다는 사실을 설명함.
     *
          + 그리고 비디오 게임 시리즈에서 더욱 중요하게 다뤄진다 (스포일러 주의): The Institute
          + ""The Institute""라는 비디오 게임 시리즈에서 MIT가 중요한 역할을 한다는 점을 언급함.
     *
          + NERV First Division은 매사추세츠에 있지만, 그게 MIT에 있다는 뜻은 아니다!
          + NERV First Division이 매사추세츠에 위치해 있지만, 반드시 MIT와 관련이 있는 것은 아니라는 의견을 제시함.
     *
          + 동방의 기사단에 대해, 그들이 언급하는 문구는 무엇인가?
          + 한 사용자는 동방의 기사단이라는 표현이 해커 문화에서 유래된 멋진 문구에서 영감을 받았을 것이라고 추측하며, MIT에서 오랫동안 인기를 끌었던 LISP와 관련이 있을 수 있다고 언급함.
     *
          + 내가 본 애니메이션에서 미국이 배경으로 등장하는 경우는 그리 흔하지 않으며, 실제로 미국에서 설정된 K-드라마를 더 많이 본 것 같다.
          + 미국보다는 영국이나 독일 같은 다른 나라들이 애니메이션 배경으로 더 자주 등장하는 경향이 있다고 느낀다고 사용자가 의견을 나눔.
     *
          + 실제 인간보다 MIT 출신의 가상 인물이 더 많은 것 같다. 매체마다 'MIT 출신 과학자' 캐릭터가 등장한다.
          + 가상의 매체에서 MIT 출신의 캐릭터가 자주 등장하는 현상에 대해 한 사용자가 농담조로 언급함.
"
"https://news.hada.io/topic?id=13116","Alire - Ada를 위한 패키지 관리도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Alire - Ada를 위한 패키지 관리도구

   Alire는 Ada와 SPARK를 위한 패키지 관리도구입니다. Rust의 cargo와 OCaml의 opam과 유사하게 작동합니다.

   2022년, GNAT Comunity Release를 제공하던 AdaCore사는 제공 중단을 선언했습니다. Ada IDE, 컴파일러와 디버거, 각종 라이브러리를 통합 제공하던 GNAT Community release가 중단되면서 오픈소스 커뮤니티는 Alire로 전환하게 되었습니다.
     * Transition from GNAT Community

   Alire는 패키지 관리 뿐만 아니라, 컴파일된 GNAT과 GDB 바이너리도 제공합니다. IDE는 Visual Studio Code + Ada Extension을 사용하거나, AdaCore의 GNAT Studio를 사용할 수 있습니다.

   빌드는 여전히 GPRBuild가 사용됩니다.
"
"https://news.hada.io/topic?id=13071","ICANN, 사설 사용을 위한 최상위 도메인 ".internal" 제안 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ICANN, 사설 사용을 위한 최상위 도메인 "".internal"" 제안

     * IANA(인터넷 주소관리기관)는 개인용 및 내부 네트워크 애플리케이션을 위해 "".INTERNAL""을 예약한다는 결정을 내림
     * ICANN 이사회에서 이 예약을 검토하고 승인하기 전에 이 선택이 SAC113의 지정된 절차를 준수하는지 여부 및 피드백을 구하는 중

배경

     * 회사 내부 및 홈 내부 처럼 사설 네트워크 운영자가 광범위 DNS에서 사용하거나 액세스할 수 없는 자체 도메인 네임 체계를 사용하고자 하는 특정 상황이 있을 수 있음
     * IANA는 현재 이러한 애플리케이션을 위한 개인용 IP 주소의 구분된 특수 블록을 보유하고 있지만, 이와 비교할 만한 DNS에는 이와 유사한 개인용 네임스페이스가 없음
     * 이로 인해 비공식적으로 최상위 도메인 네임스페이스를 루트 영역 또는 기타 지정된 목적과 충돌할 가능성이 있는 최상위 도메인의 비공식적인 사용을 포함한 관행이 발생
     * 35개의 후보 단어중에 ""INTERNAL""과 ""PRIVATE""가 거론되었으니ㅏ, 최종적으로 ""INTERNAL""을 선정

        Hacker News 의견

     * AD(Active Directory) 관련 최선의 관행 중 하나는 .internal이나 .local과 같은 가공된 로컬 TLD(최상위 도메인)를 사용하지 않는 것임. 언젠가 실제로 존재하게 될 수 있으므로, 외부와 내부 모두에서 통제할 수 있는 정규 gTLD(일반 최상위 도메인)나 ccTLD(국가 코드 최상위 도메인)를 사용해야 함.
     * ICANN은 .corp, .home, .mail을 무기한 연기하기로 결정하여, 이러한 TLD들이 사설 사용에 적합하다고 함.
     * DNS가 이상하게 작동하는 경우, Active Directory에 대한 단일 레이블 도메인(예: host1.internal)이 있는지 확인해야 함. Windows에서는 단일 레이블 도메인의 이름 해석이 NetBIOS 해석을 사용하여 다른 서브넷에서 도메인에 새 호스트를 추가하는 것을 방해할 수 있음.
     * .zz는 기술적으로 ccTLD가 될 수 있지만, 사용자 할당 ISO 3166-1 알파-2 코드이며, 유효한 코드로 재사용될 가능성이 매우 낮음. ICANN은 이러한 선택을 고려했지만 의미가 없다는 이유로 거절함.
     * ""home.arpa""는 이미 예약되어 있으며 주거용으로 특별히 설계되었으므로 어떤 것과도 충돌하지 않음.
     * 내부 CA가 .internal 도메인에 대한 인증서만 발급하도록 제한하는 Name Constraints TLS 확장에 대한 지원이 더 널리 퍼지면 좋을 것임. 이는 로컬 네트워크에서 HTTPS를 간소화하는 매우 흥미로운 응용 프로그램을 가능하게 할 수 있음.
     * 스레드를 통해 읽은 후에도, '.lan'이 '.internal'보다 이 목적에 더 적합한 비예약 접미사라고 생각함.
     * .intra가 이미 사용되고 있지 않다면, .internal보다 타이핑하기에 덜 성가시면서도 목적을 잘 전달하는 5글자로 더 선호될 수 있음.
     * 이미 "".home.arpa"" TLD가 있지만, "".internal""은 명확성 측면에서 한 단계 업그레이드된 것으로 보임. 그러나 개인적으로는 소유한 도메인의 하위 도메인을 사용하여 HTTPS를 적절한 SSL 인증서와 함께 사용함.
     * .local이 이런 방식으로 시작했지만 Apple에 의해 네트워크용으로 사용되었음. 새로운 사설 도메인은 곧 다른 무언가에 의해 동화될 것임. DNS가 필요하다면 실제 도메인 이름을 등록하고 사용해야 함. .internal과 같은 아이디어를 지지하지만, 그 목적으로 사용되기에는 금방 무용지물이 될 것임.
"
"https://news.hada.io/topic?id=13092","Android, 이제 휴대폰 간에 eSIM 전송 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Android, 이제 휴대폰 간에 eSIM 전송 가능

     * Google은 작년 MWC에서 Android용 새로운 eSIM 전송 도구를 발표. 사용자가 모바일 플랜을 새 기기로 빠르고 안전하게 이동할 수 있게 해줌.
     * 구글이 기능 세부사항과 출시일자를 함구하고 있었지만, 지난 8월 Pixel 8 사용자가 이를 이용 가능한 것을 알아냈음
     * 구글 기기에서만 사용할 것이라고 생각했지만, 그렇지 않음
     * 새 갤럭시 S24 Ultra를 설정하는 중에 삼성의 SIM 전송도구를 사용하자, 근처에 있던 LG V60 ThinQ의 SIM을 이동하는 팝업이 나타남
     * 현재 T-Mobile eSIM 프로필에서만 작동하는 것으로 보이며, MWC 2023에서 구글이 T-Mobile의 모회사인 도이치텔레콤이 이 기능을 지원하는 최초의 이동통신사 중 하나가 될 것이라고 언급한 것과 일치
     * Samsung의 One UI 5.1에 추가된 SIM 전송 도구는 원래 Galaxy 기기 간 eSIM 프로필 전송만 지원함
     * 최신 One UI 6.1 업데이트에서 이 도구의 언어가 변경되어 비갤럭시 기기와의 호환성을 암시함
     * 이 변경은 단순한 외관상 변화가 아니라, Google의 eSIM 전송 메커니즘을 활용하는 방향으로의 전환을 의미함
     * S24 설정시에 Google Play 서비스 앱에서 제공하는 팝업이 Android 기기 간 eSIM 전송을 가능하게 함
     * 이 팝업은 EsimTransferHalfSheetActivity의 일부로, 처음으로 발견된 것은 지난 8월임
     * 이 기능의 출시는 Android에서 eSIM 지원을 크게 발전시키는 단계로, 이동 통신사의 지원 여부에 따라 다르지만 모든 Android 휴대폰 간에 eSIM 전송을 허용
     * 본질적으로 Google이 MWC 2023에서 발표 한 eSIM 전송 도구가 조용하지만 효과적으로 출시됨
     * 이 팝업은 테스트 결과, 갤럭시 S24 울트라에서 픽셀 8 프로로 eSIM을 전송하려고 할 때 두 가지 방식으로 모두 표시되는 것으로 확인
     * 이동 통신사의 지원은 여전히 제한적이지만, 이 발전은 안드로이드의 eSIM 관리 능력에 있어 중요한 이정표이며, 사용자들이 여러 기기에서 모바일 요금제를 관리할 때 향상된 유연성과 편의성을 제공

   하지만 한국은 eSIM 지원이 너무 안 좋아서, 그림의 떡이 될 것 같네요.
   구글 Fi eSim 은 정말 쉽게 옮길 수 있었는데, 국내 통신사는 eSIM 비용도 받고, 이전도 맘대로 안되더군요.

        Hacker News 의견

     * eSIM 배포는 여전히 큰 실수라는 의견이 있음. 물리적 SIM이 우수한 보안 기능을 제공한다고 주장함.
          + eSIM을 사용할 때는 실제 전화번호를 사용하지 말고, eSIM 전용으로 새로운 번호를 받아야 한다고 경고함.
          + OTP가 소비자에게 완전한 제어권을 주는 데 eSIM보다 훨씬 낫다고 언급함.
          + 작성자는 eUICC 취약점 분석을 전문으로 하며, eIM과 관련된 일을 함.
     * eSIM이 좋다고 알려져 있지만, 소규모 셀 배치에서 사용하려고 하면 아무도 eSIM 배포에 대해 협력하려 하지 않는다는 경험을 공유함.
          + 대규모 기업의 관문 역할과 GSMA의 보안 요구 사항 및 인증 체인이 자신의 네트워크용 eSIM을 직접 프로비저닝하는 것을 방해한다고 비판함.
     * 최근 아이폰을 구입했을 때, 이동통신사가 eSIM 전환을 허용하지 않아 새로운 eSIM을 웹사이트에서 받아야 했다는 개인적인 경험을 나눔.
          + 안드로이드가 이러한 상황을 어떻게 방지하는지에 대한 질문을 함.
     * eSIM에 반대하는 이유를 설명함.
          + 다른 전화기를 사용하기 위해 이동통신사, 구글, 애플의 허가가 필요하지 않아야 한다고 주장함.
     * 많은 서비스, 특히 은행들이 2차 인증을 전화번호에 연결해놓고 있음.
          + eSIM과 eSIM 전환 이니셔티브가 전화번호를 2차 인증 수단으로 사용하는 것을 종식시키길 바람.
          + 2FA 옵션이 일반적으로 제한적이라는 것을 인지하고 있지만, 전화번호가 최선의 방법은 아니라고 언급함.
     * 오픈소스 eSIM 소프트웨어 에뮬레이터가 있으면 좋겠지만, 이는 칩 제조업체만이 가지고 있는 비밀 암호화 키가 필요할 것이라는 의문을 제기함.
     * 인도에서는 물리적 SIM에서 eSIM으로, 그리고 새 전화기로의 eSIM 전환을 매우 원활하게 경험했다고 공유함.
          + 고객 지원과 대화할 필요 없이 따라야 할 단계가 명확하게 제시됨.
          + 이동통신사에 등록된 이메일로 확인 및 단계가 전송되며, 보안 기능이 활성화되어 24시간 동안 데이터/SMS가 차단됨.
     * eSIM과 관련된 첫 번째 제로데이(0-day) 취약점이 발견될 시간을 기다리는 댓글이 있음.
     * SIM의 주요 목적은 네트워크에 가입자를 인증하는 암호화 키를 안전하게 저장하는 것이라는 점을 설명함.
          + 기사에서 설명된 것처럼, 원본 eSIM이 새 기기에 대한 새로운 키 세트를 프로비저닝하기 위해 이동통신사 백엔드에서 사용하는 토큰을 생성한다고 함.
          + 이러한 변경 사항에 대한 기록이 있고, eSIM 전환을 방지할 수 있는 방법이 있기를 바람.
     * eSIM의 장점을 강조하는 댓글이 있음.
          + Pixel 7에 4개의 eSIM을 가지고 있으며, 2개가 활성화되어 있고, 새 eSIM을 받는 것이 매우 쉽다고 경험을 공유함.

   뭔가 불안하긴 하네요. SIM을 바꿔 끼는게 그렇게 어려운 일이 아니기도 하고. (매일 해야 하는 상황이라면 많이 번거롭겠지만)
"
"https://news.hada.io/topic?id=13098","[2024/01/22 ~ 01/28] 이번 주의 주요 ML 논문 (Top ML Papers of the Week)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    [2024/01/22 ~ 01/28] 이번 주의 주요 ML 논문 (Top ML Papers of the Week)

  개요

     * DAIR.AI에서 매주 공개하는 ML 논문들에 대한 글을 자동 번역해보았습니다.
     * 이번 주에 선정된 논문들을 살펴보면 대규모 언어 모델(Large Language Models, LLMs)과 멀티모달 모델(Multimodal Models), 그리고 비주얼 언어 모델(Visual Language Models)과 같은 영역들에 대한 관심이 두드러진다는 것을 알 수 있습니다. ""Knowledge Fusion of LLMs"", ""Resource-efficient LLMs & Multimodal Models"" 그리고 ""Red Teaming Visual Language Models""와 같은 논문들은 이 주요 추세들을 반영하며, 고용량의 모델들과 그 효율성, 멀티모달 학습 및 시각적데이터 처리능력 향상에 대한 연구 개발을 제시하고 있습니다.
     * 이러한 경향은 최근 몇 년 동안 인공지능 기술, 특히 자연어 처리(Natural Language Processing, NLP)와 컴퓨터 비전(Computer Vision) 영역에서 복합적인 데이터를 이해하고 처리하는 능력의 중요성이 증가함에 따라 나타나고 있습니다. 대규모 언어 모델은 다양한 언어 이해 작업에서 높은 성능을 기록하고 있으며, 멀티모달 모델은 다양한 유형의 데이터 (텍스트, 이미지, 오디오 등)를 조합하여 인간 같은 이해를 목표로 하는 연구에 있어 필수적인 요소로 자리 잡고 있습니다. 또한, 시각적 랭귀지 모델은 이미지와 시각적 콘텐츠에 대한 언어적 접근을 가능하게 하여 더욱 풍부하고 상호작용적인 AI시스템을 구축하는데 중요한 역할을 하고 있습니다.
     * 이렇게 타이틀과 소개를 통해 파악된 추세는 고도화된 AI 모델들의 성능 향상뿐만 아니라, 생산성과 효율성의 새로운 기준을 설정하는 것을 목표로 한 연구가 많아지고 있음을 시사합니다. 대규모 모델의 자원 효율성 개선을 다루는 논문들은 에너지 소비와 연산 비용 측면에서의 지속 가능한 AI 발전을 추구하는 현재의 연구 흐름을 반영합니다. 이는 또한 인공지능이 실제 산업 및 사회적 응용에서 더욱 광범위하게 채택되기 위해 반드시 해결해야 할 문제들을 다루는 학계와 산업계의 노력을 강조하는 부분이기도 합니다.


  무엇이든 심층 분석: 레이블이 지정되지 않은 대규모 데이터의 힘 활용하기 / Depth Anything: Unleashing the Power of Large-Scale Unlabeled Data

    논문 소개

     * 어떤 상황에서도 어떤 이미지도 처리할 수 있는 강력한 단안 심도 추정 솔루션, 라벨이 없는 대규모 데이터(최대 6,200만개)에 자동으로 주석을 달아 일반화 오류를 줄이고, 대규모 라벨이 없는 데이터의 힘을 활용할 수 있는 효과적인 전략을 제안하며, 일반화 능력 외에도 미세 조정을 통해 새로운 최첨단 기술을 확립하고 향상된 깊이 조절 제어망까지 구현했습니다.

     A robust monocular depth estimation solution that can deal with any images under any circumstance; automatically annotates large-scale unlabeled data (~62m) which helps to reduce generalization error; proposes effective strategies to leverage the power of the large-scale unlabeled data; besides generalization ability, it established new state-of-the-art through fine-tuning and even results in an enhanced depth-conditioned controlnet.

    논문 초록(Abstract)

     * 이 연구에서는 강력한 단안 깊이 추정을 위한 매우 실용적인 솔루션인 Depth Anything을 소개합니다. 새로운 기술 모듈을 추구하지 않고, 어떤 상황에서도 모든 이미지를 처리할 수 있는 간단하면서도 강력한 파운데이션 모델을 구축하는 것을 목표로 합니다. 이를 위해 라벨이 없는 대규모 데이터(약 6,200만 개)를 수집하고 자동으로 주석을 달 수 있는 데이터 엔진을 설계하여 데이터셋을 확장함으로써 데이터 범위를 크게 확대하고 일반화 오류를 줄일 수 있습니다. 데이터 스케일업의 가능성을 높이는 간단하면서도 효과적인 두 가지 전략을 살펴봅니다. 첫째, 데이터 증강 도구를 활용하여 보다 도전적인 최적화 목표를 설정합니다. 이를 통해 모델이 추가적인 시각적 지식을 적극적으로 찾고 강력한 표현을 획득하도록 유도합니다. 둘째, 모델이 사전 학습된
       인코더로부터 풍부한 시맨틱 전구체를 상속받도록 하는 보조 감독을 개발합니다. 6개의 공개 데이터 세트와 무작위로 캡처한 사진을 포함하여 제로 샷 기능을 광범위하게 평가합니다. 그 결과 인상적인 일반화 능력을 보여주었습니다. 또한 NYUv2 및 KITTI의 메트릭 깊이 정보로 미세 조정을 통해 새로운 SOTA를 설정합니다. 더 나은 깊이 모델은 또한 더 나은 깊이 조절 컨트롤넷으로 이어집니다. 자세한 내용은 https://github.com/LiheYoung/Depth-Anything 에서 확인할 수 있습니다.

     This work presents Depth Anything, a highly practical solution for robust monocular depth estimation. Without pursuing novel technical modules, we aim to build a simple yet powerful foundation model dealing with any images under any circumstances. To this end, we scale up the dataset by designing a data engine to collect and automatically annotate large-scale unlabeled data (~62M), which significantly enlarges the data coverage and thus is able to reduce the generalization error. We investigate two simple yet effective strategies that make data scaling-up promising. First, a more challenging optimization target is created by leveraging data augmentation tools. It compels the model to actively seek extra visual knowledge and acquire robust representations. Second, an auxiliary supervision is developed to enforce the model to inherit rich semantic priors from pre-trained encoders. We evaluate its zero-shot capabilities extensively, including six public datasets and randomly
     captured photos. It demonstrates impressive generalization ability. Further, through fine-tuning it with metric depth information from NYUv2 and KITTI, new SOTAs are set. Our better depth model also results in a better depth-conditioned ControlNet. Our models are released at https://github.com/LiheYoung/Depth-Anything.

    논문 링크

   https://arxiv.org/abs/2401.10891v1

    더 읽어보기

   https://x.com/_akhaliq/status/1749284669936275463


  대규모 언어 모델의 지식 융합 / Knowledge Fusion of Large Language Models

    논문 소개

     * 여러 학습조직의 지식을 외부화하고 그 역량을 목표 학습조직으로 이전하는 것을 핵심 아이디어로 하는 퓨즈엘름을 제안하고, 소스 학습조직의 생성 분포를 활용하여 집단적 지식과 개인의 강점을 모두 외부화하고 지속적인 학습을 통해 목표 학습조직으로 이전하며, 퓨즈엘름이 추론, 상식, 코드 생성 등 다양한 기능에 걸쳐 목표 모델의 성능을 향상시킬 수 있음을 발견합니다.

     Proposes fusellm with the core idea of externalizing knowledge from multiple llms and transferring their capabilities to a target llm; leverages the generative distributions of source llms to externalize both their collective knowledge and individual strengths and transfer them to the target llm through continual training; finds that the fusellm can improve the performance of the target model across a range of capabilities such as reasoning, common sense, and code generation.

    논문 초록(Abstract)

     * 대규모 언어 모델(LLM)을 처음부터 학습시키면 고유한 기능과 강점을 가진 모델을 생성할 수 있지만, 상당한 비용이 발생하고 기능이 중복될 수 있습니다. 또는 이미 학습된 기존 LLM을 보다 강력한 모델로 병합하는 것도 비용 효율적이고 매력적인 접근 방식입니다. 그러나 이러한 LLM의 아키텍처가 다양하기 때문에 가중치를 직접 혼합하는 것은 비현실적입니다. 이 논문에서는 기존 LLM의 기능을 결합하여 하나의 LLM으로 통합하는 것을 목표로 하는 LLM을 위한 지식 융합 개념을 소개합니다. 소스 LLM의 생성 분포를 활용하여 그들의 집단적 지식과 고유한 강점을 외부화함으로써 잠재적으로 개별 소스 LLM의 기능을 뛰어넘는 목표 모델의 기능을 향상시킵니다. 유니티는 다양한 벤치마크와 작업에서 서로 다른 아키텍처를 가진 세 가지 인기 LLM인 라마-2, MPT,
       OpenLLaMA를 사용하여 접근 방식을 검증합니다. 그 결과, LLM을 융합하면 추론, 상식, 코드 생성 등 다양한 기능에서 목표 모델의 성능을 향상시킬 수 있음을 확인했습니다. 코드, 모델 가중치 및 데이터는 \url{https://github.com/fanqiwan/FuseLLM}에 공개되어 있습니다.

     While training large language models (LLMs) from scratch can generate models with distinct functionalities and strengths, it comes at significant costs and may result in redundant capabilities. Alternatively, a cost-effective and compelling approach is to merge existing pre-trained LLMs into a more potent model. However, due to the varying architectures of these LLMs, directly blending their weights is impractical. In this paper, we introduce the notion of knowledge fusion for LLMs, aimed at combining the capabilities of existing LLMs and transferring them into a single LLM. By leveraging the generative distributions of source LLMs, we externalize their collective knowledge and unique strengths, thereby potentially elevating the capabilities of the target model beyond those of any individual source LLM. We validate our approach using three popular LLMs with different architectures--Llama-2, MPT, and OpenLLaMA--across various benchmarks and tasks. Our findings confirm that
     the fusion of LLMs can improve the performance of the target model across a range of capabilities such as reasoning, commonsense, and code generation. Our code, model weights, and data are public at \url{https://github.com/fanqiwan/FuseLLM}.

    논문 링크

   https://arxiv.org/abs/2401.10491

    더 읽어보기

   https://github.com/fanqiwan/FuseLLM

   https://x.com/omarsar0/status/1749267663900057620


  맘바바이트: 토큰이 필요 없는 선택적 상태 공간 모델 / MambaByte: Token-free Selective State Space Model

    논문 소개

     * 원시 바이트에서 직접 학습하도록 맘바 SSM을 조정합니다. 바이트는 자동 회귀 변환기가 제대로 확장하지 못하는 긴 시퀀스로 이어집니다. 이 작업은 더 빠른 추론과 관련된 큰 이점을 보고하며 심지어 하위 단어 변환기보다 성능이 더 뛰어납니다.

     Adapts mamba ssm to learn directly from raw bytes; bytes lead to longer sequences which autoregressive transformers will scale poorly on; this work reports huge benefits related to faster inference and even outperforms subword transformers.

    논문 초록(Abstract)

     * 토큰 없는 언어 모델은 원시 바이트에서 직접 학습하고 하위 단어 토큰화의 편향을 제거합니다. 그러나 바이트 단위로 작업하면 시퀀스가 상당히 길어지고 표준 자동 회귀 트랜스포머는 이러한 설정에서 제대로 확장되지 않습니다. 저희는 바이트 시퀀스에 대해 자동 회귀적으로 학습된 Mamba 상태 공간 모델을 토큰 없이 변형한 MambaByte를 실험해 보았습니다. 실험 결과, 다른 바이트 수준 모델에 비해 MambaByte의 계산 효율성이 월등히 높은 것으로 나타났습니다. 또한, 맘바바이트는 최첨단 서브워드 트랜스포머와 경쟁할 수 있으며 심지어는 그 성능을 뛰어넘는다는 사실도 확인했습니다. 또한, 길이가 선형적으로 확장되기 때문에 맘바바이트는 트랜스포머에 비해 빠른 추론의 이점을 제공합니다. 이번 연구 결과는 토큰이 필요 없는 언어 모델링을 구현하는
       데 있어 맘바바이트의 가능성을 입증합니다.

     Token-free language models learn directly from raw bytes and remove the bias of subword tokenization. Operating on bytes, however, results in significantly longer sequences, and standard autoregressive Transformers scale poorly in such settings. We experiment with MambaByte, a token-free adaptation of the Mamba state space model, trained autoregressively on byte sequences. Our experiments indicate the computational efficiency of MambaByte compared to other byte-level models. We also find MambaByte to be competitive with and even outperform state-of-the-art subword Transformers. Furthermore, owing to linear scaling in length, MambaByte benefits from fast inference compared to Transformers. Our findings establish the viability of MambaByte in enabling token-free language modeling.

    논문 링크

   https://arxiv.org/abs/2401.13660

    더 읽어보기

   https://x.com/omarsar0/status/1750366964759859633


  디퓨즈 선택: 가상 체험을 위한 잠재 디퓨젼 모델에서 이미지 컨디셔닝 인페인팅 강화하기 / Diffuse to Choose: Enriching Image Conditioned Inpainting in Latent Diffusion Models for Virtual Try-All

    논문 소개

     * 확산 기반 이미지 컨디셔닝 인페인팅 모델로, 주어진 씬 콘텐츠에서 정확한 의미적 조작을 가능하게 하면서 빠른 추론과 높은 충실도의 균형을 맞추는 동시에 기존의 제로 샷 확산 인페인팅 방법과 심지어 드림페인트와 같은 소수 샷 확산 개인화 알고리즘보다 뛰어난 성능을 발휘합니다.

     A diffusion-based image-conditioned inpainting model to balance fast inference with high-fidelity while enabling accurate semantic manipulations in a given scene content; outperforms existing zero-shot diffusion inpainting methods and even few-shot diffusion personalization algorithms such as dreampaint.

    논문 초록(Abstract)

     * 온라인 쇼핑이 성장함에 따라 구매자가 자신의 환경에서 제품을 가상으로 시각화할 수 있는 기능, 즉 '가상 체험'이 중요해졌습니다. 최근의 디퓨젼 모델은 본질적으로 월드 모델을 포함하고 있어 인페인팅 컨텍스트 내에서 이 작업에 적합합니다. 그러나 기존의 이미지 컨디셔닝 디퓨젼 모델은 제품의 세밀한 디테일을 포착하지 못하는 경우가 많습니다. 반면, 드림페인트와 같은 개인화 기반 모델은 상품의 디테일을 잘 보존하지만 실시간 애플리케이션에 최적화되어 있지 않습니다. 유니티는 주어진 장면 콘텐츠에서 정확한 의미적 조작을 보장하면서 빠른 추론과 주어진 참조 항목의 고충실도 디테일 유지의 균형을 효율적으로 맞추는 새로운 확산 기반 이미지 조건부 인페인팅 모델인 'Diffuse to Choose'를 소개합니다. 유니티의 접근 방식은 참조 이미지의
       세분화된 특징을 메인 디퓨젼 모델의 잠재적 특징 맵에 직접 통합하는 동시에 참조 항목의 디테일을 더욱 보존하기 위해 지각 손실을 적용하는 것을 기반으로 합니다. 유니티는 사내 및 공개적으로 사용 가능한 데이터셋에 대해 광범위한 테스트를 수행했으며, 그 결과 Diffuse to Choose가 기존의 제로 샷 확산 인페인팅 방식은 물론 드림페인트 같은 소수 샷 확산 개인화 알고리즘보다 우수하다는 것을 입증했습니다.

     As online shopping is growing, the ability for buyers to virtually visualize products in their settings-a phenomenon we define as ""Virtual Try-All""-has become crucial. Recent diffusion models inherently contain a world model, rendering them suitable for this task within an inpainting context. However, traditional image-conditioned diffusion models often fail to capture the fine-grained details of products. In contrast, personalization-driven models such as DreamPaint are good at preserving the item's details but they are not optimized for real-time applications. We present ""Diffuse to Choose,"" a novel diffusion-based image-conditioned inpainting model that efficiently balances fast inference with the retention of high-fidelity details in a given reference item while ensuring accurate semantic manipulations in the given scene content. Our approach is based on incorporating fine-grained features from the reference image directly into the latent feature maps of the main
     diffusion model, alongside with a perceptual loss to further preserve the reference item's details. We conduct extensive testing on both in-house and publicly available datasets, and show that Diffuse to Choose is superior to existing zero-shot diffusion inpainting methods as well as few-shot diffusion personalization algorithms like DreamPaint.

    논문 링크

   https://arxiv.org/abs/2401.13795

    더 읽어보기

   https://x.com/_akhaliq/status/1750737690553692570


  WARM: 체중 평균 보상 모델의 장점에 대하여 / WARM: On the Benefits of Weight Averaged Reward Models

    논문 소개

     * 여러 보상 모델을 미세 조정한 다음 가중치 공간에서 평균을 내는 가중 평균 보상 모델(warm)을 도입하여 기존 예측 앙상블에 비해 효율성을 개선하고, LLM 예측의 품질과 정렬을 개선합니다.

     Introduces weighted averaged rewards models (warm) that involve fine-tuning multiple rewards models and then averaging them in the weight space; average weighting improves efficiency compared to traditional prediction ensembling; it improves the quality and alignment of llm predictions.

    논문 초록(Abstract)

     * 강화 학습(RLHF)을 통해 대규모 언어 모델(LLM)을 인간의 선호도에 맞추는 것은 보상 해킹으로 이어질 수 있는데, LLM이 보상 모델(RM)의 오류를 악용하여 기본 목표를 달성하지 않고 겉보기에 높은 보상을 달성하는 것입니다. 유니티는 보상 해킹을 완화하기 위해 RM을 설계할 때 두 가지 주요 과제, 즉 RL 프로세스 중 분포의 변화와 사람 선호도의 불일치를 파악합니다. 이에 대한 해결책으로 먼저 여러 개의 RM을 미세 조정한 다음 가중치 공간에서 평균을 내는 가중평균보상모델(WARM)을 제안합니다. 이 전략은 동일한 사전 학습을 공유할 때 미세 조정된 가중치가 선형적으로 연결된 상태를 유지한다는 관찰에 따른 것입니다. 가중치를 평균화함으로써 WARM은 기존의 예측 앙상블에 비해 효율성을 개선하는 동시에 분포 변화에 따른 신뢰성과 선호도 불일치에 대한
       견고성을 향상시킵니다. 베스트 오브 N 및 RL 방법을 사용한 요약 작업에 대한 실험 결과, WARM은 LLM 예측의 전반적인 품질과 정렬을 개선하는 것으로 나타났습니다. 예를 들어, WARM으로 미세 조정된 정책 RL은 단일 RM으로 미세 조정된 정책 RL에 비해 79.4%의 승률을 보였습니다.

     Aligning large language models (LLMs) with human preferences through reinforcement learning (RLHF) can lead to reward hacking, where LLMs exploit failures in the reward model (RM) to achieve seemingly high rewards without meeting the underlying objectives. We identify two primary challenges when designing RMs to mitigate reward hacking: distribution shifts during the RL process and inconsistencies in human preferences. As a solution, we propose Weight Averaged Reward Models (WARM), first fine-tuning multiple RMs, then averaging them in the weight space. This strategy follows the observation that fine-tuned weights remain linearly mode connected when sharing the same pre-training. By averaging weights, WARM improves efficiency compared to the traditional ensembling of predictions, while improving reliability under distribution shifts and robustness to preference inconsistencies. Our experiments on summarization tasks, using best-of-N and RL methods, shows that WARM improves
     the overall quality and alignment of LLM predictions; for example, a policy RL fine-tuned with WARM has a 79.4% win rate against a policy RL fine-tuned with a single RM.

    논문 링크

   https://arxiv.org/abs/2401.12187

    더 읽어보기

   https://x.com/ramealexandre/status/1749719471806157304


  리소스 효율적인 LLM 및 멀티모달 기반 모델에 대한 설문 조사 / A Survey of Resource-efficient LLM and Multimodal Foundation Models

    논문 소개

     * 리소스 효율적인 ML 및 멀티모달 기반 모델에 대한 조사, 아키텍처, 알고리즘, 실제 시스템 설계 및 구현을 포함한 ML 효율성 연구에 대한 포괄적인 분석과 인사이트를 제공합니다.

     A survey of resource-efficient llms and multimodal foundations models; provides a comprehensive analysis and insights into ml efficiency research, including architectures, algorithms, and practical system designs and implementations.

    논문 초록(Abstract)

     * 대규모 언어 모델(LLM), 비전 트랜스포머(ViT), 디퓨전 및 LLM 기반 멀티모달 모델을 포함한 대규모 기반 모델은 학습에서 배포에 이르는 전체 머신러닝 수명 주기에 혁신을 일으키고 있습니다. 하지만 이러한 모델이 제공하는 다양성과 성능의 상당한 발전은 하드웨어 리소스 측면에서 상당한 대가를 치르게 됩니다. 확장 가능하고 환경적으로 지속 가능한 방식으로 이러한 대규모 모델의 성장을 지원하기 위해 리소스 효율적인 전략을 개발하는 데 상당한 관심이 집중되고 있습니다. 이 설문조사는 알고리즘과 시스템 측면을 모두 조사하여 이러한 연구의 중요성을 심층적으로 다룹니다. 최첨단 모델 아키텍처와 교육/서비스 알고리즘부터 실제 시스템 설계 및 구현에 이르기까지 광범위한 주제를 포괄하는 기존 문헌에서 수집한 종합적인 분석과 귀중한
       인사이트를 제공합니다. 이 조사의 목표는 현재의 접근 방식이 대규모 재단 모델이 제기하는 리소스 문제를 어떻게 해결하고 있는지에 대한 전반적인 이해를 제공하고, 이 분야에서 미래의 혁신에 잠재적으로 영감을 주는 것입니다.

     Large foundation models, including large language models (LLMs), vision transformers (ViTs), diffusion, and LLM-based multimodal models, are revolutionizing the entire machine learning lifecycle, from training to deployment. However, the substantial advancements in versatility and performance these models offer come at a significant cost in terms of hardware resources. To support the growth of these large models in a scalable and environmentally sustainable way, there has been a considerable focus on developing resource-efficient strategies. This survey delves into the critical importance of such research, examining both algorithmic and systemic aspects. It offers a comprehensive analysis and valuable insights gleaned from existing literature, encompassing a broad array of topics from cutting-edge model architectures and training/serving algorithms to practical system designs and implementations. The goal of this survey is to provide an overarching understanding of how
     current approaches are tackling the resource challenges posed by large foundation models and to potentially inspire future breakthroughs in this field.

    논문 링크

   https://arxiv.org/abs/2401.08092v1

    더 읽어보기

   https://x.com/omarsar0/status/1749208653926654010


  레드팀 시각 언어 모델 / Red Teaming Visual Language Models

    논문 소개

     * 먼저 10개의 하위 작업(예: 이미지 오도, 멀티모달 탈옥, 얼굴 공정성 등)으로 구성된 레드 팀핑 데이터셋을 제시하고, 10개의 유명 오픈소스 VLM(Vision-Language Models)가 레드 팀핑에 다양한 수준으로 어려움을 겪고 있으며 gpt-4v와 최대 31%의 성능 격차가 있음을 발견하고, 제안된 레드 팀핑 데이터셋을 사용하여 SFT(Supervised Fine-tuning)와 함께 llava-v1.5에 레드 팀핑 정렬을 적용하여 테스트 세트에서 모델 성능을 10% 향상시켰습니다.

     First presents a red teaming dataset of 10 subtasks (e.g., image misleading, multi-modal jailbreaking, face fairness, etc); finds that 10 prominent open-sourced vlms struggle with the red teaming in different degrees and have up to 31% performance gap with gpt-4v; also applies red teaming alignment to llava-v1.5 with sft using the proposed red teaming dataset, which improves model performance by 10% in the test set.

    논문 초록(Abstract)

     * VLM(비전-언어 모델)은 LLM(대규모 언어 모델)의 기능을 확장하여 멀티모달 입력을 수용합니다. 특정 테스트 사례(레드 티밍이라고 함)를 통해 LLM이 유해하거나 부정확한 콘텐츠를 생성하도록 유도할 수 있음이 확인되었기 때문에 유사한 시나리오, 특히 텍스트와 시각적 입력이 결합된 경우 VLM이 어떻게 작동하는지는 여전히 의문으로 남아 있습니다. 이 문제를 탐구하기 위해 4개의 주요 측면(충실성, 프라이버시, 안전성, 공정성) 아래 10개의 하위 작업(예: 이미지 오도, 멀티모달 탈옥, 얼굴 공정성 등)을 포함하는 새로운 레드팀 데이터 세트 RTVLM을 제시합니다. 크리테오의 RTVLM은 이러한 4가지 측면에서 현재의 VLM을 벤치마킹한 최초의 레드팀 데이터 세트입니다. 세부 분석 결과, 10개의 유명 오픈소스 VLM이 레드팀링에서 다양한 수준으로 어려움을 겪고
       있으며 GPT-4V와 최대 31%의 성능 격차가 있는 것으로 나타났습니다. 또한 RTVLM을 사용한 감독 미세 조정(SFT)을 통해 LLaVA-v1.5에 레드팀 정렬을 간단히 적용한 결과, RTVLM 테스트 세트에서 10%, MM-Hal에서 13%, MM-Bench에서 눈에 띄는 성능 저하 없이 모델의 성능이 강화되어 일반 정렬 데이터를 사용한 다른 LLaVA 기반 모델을 능가했습니다. 이를 통해 현재 오픈소스 VLM에는 여전히 레드팀 정렬이 부족하다는 것을 알 수 있습니다. 유니티의 코드와 데이터셋은 오픈소스로 공개될 예정입니다.

     VLMs (Vision-Language Models) extend the capabilities of LLMs (Large Language Models) to accept multimodal inputs. Since it has been verified that LLMs can be induced to generate harmful or inaccurate content through specific test cases (termed as Red Teaming), how VLMs perform in similar scenarios, especially with their combination of textual and visual inputs, remains a question. To explore this problem, we present a novel red teaming dataset RTVLM, which encompasses 10 subtasks (e.g., image misleading, multi-modal jail-breaking, face fairness, etc) under 4 primary aspects (faithfulness, privacy, safety, fairness). Our RTVLM is the first red-teaming dataset to benchmark current VLMs in terms of these 4 different aspects. Detailed analysis shows that 10 prominent open-sourced VLMs struggle with the red teaming in different degrees and have up to 31% performance gap with GPT-4V. Additionally, we simply apply red teaming alignment to LLaVA-v1.5 with Supervised Fine-tuning
     (SFT) using RTVLM, and this bolsters the models' performance with 10% in RTVLM test set, 13% in MM-Hal, and without noticeable decline in MM-Bench, overpassing other LLaVA-based models with regular alignment data. This reveals that current open-sourced VLMs still lack red teaming alignment. Our code and datasets will be open-source.

    논문 링크

   https://arxiv.org/abs/2401.12915

    더 읽어보기

   https://x.com/omarsar0/status/1750170361843384790


  뤼미에르: 비디오 생성을 위한 시공간 디퓨젼 모델 / Lumiere: A Space-Time Diffusion Model for Video Generation

    논문 소개

     * 사실적이고 일관된 움직임이 있는 비디오를 합성하기 위한 텍스트-비디오 시공간 디퓨젼 모델, 단일 패스를 통해 비디오의 전체 시간 길이를 한 번에 생성하는 시공간 u-넷 아키텍처 도입, 최첨단 텍스트-비디오 생성 결과를 달성하고 이미지-비디오, 비디오 인페인팅, 스타일화 생성 등 다양한 콘텐츠 제작 작업 및 비디오 편집 애플리케이션을 지원합니다.

     A text-to-video space-time diffusion model for synthesizing videos with realistic and coherent motion; introduces a space-time u-net architecture to generate the entire temporal duration of a video at once via a single pass; achieves state-of-the-art text-to-video generation results and supports a wide range of content creation tasks and video editing applications, including image-to-video, video inpainting, and stylized generation.

    논문 초록(Abstract)

     * 비디오 합성의 핵심 과제인 사실적이고 다양하며 일관된 움직임을 표현하는 비디오 합성을 위해 고안된 텍스트-비디오 디퓨젼 모델인 뤼미에르(Lumiere)를 소개합니다. 이를 위해 유니티는 모델의 단일 패스를 통해 비디오의 전체 시간 길이를 한 번에 생성하는 시공간 U-Net 아키텍처를 도입했습니다. 이는 원거리 키프레임을 합성한 후 시간적 초해상도를 합성하는 기존 비디오 모델과 달리, 본질적으로 전체적인 시간적 일관성을 확보하기 어려운 접근 방식입니다. 공간적 및 (중요한) 시간적 다운샘플링과 업샘플링을 모두 배포하고 사전 학습된 텍스트-이미지 디퓨젼 모델을 활용함으로써, 이 모델은 여러 시공간 스케일로 처리하여 풀프레임 속도의 저해상도 비디오를 직접 생성하는 방법을 학습합니다. 최첨단 텍스트-투-비디오 생성 결과를 시연하고,
       이미지-투-비디오, 비디오 인페인팅, 스타일화된 생성 등 다양한 콘텐츠 제작 작업과 비디오 편집 애플리케이션을 쉽게 지원하는 설계를 보여줍니다.

     We introduce Lumiere -- a text-to-video diffusion model designed for synthesizing videos that portray realistic, diverse and coherent motion -- a pivotal challenge in video synthesis. To this end, we introduce a Space-Time U-Net architecture that generates the entire temporal duration of the video at once, through a single pass in the model. This is in contrast to existing video models which synthesize distant keyframes followed by temporal super-resolution -- an approach that inherently makes global temporal consistency difficult to achieve. By deploying both spatial and (importantly) temporal down- and up-sampling and leveraging a pre-trained text-to-image diffusion model, our model learns to directly generate a full-frame-rate, low-resolution video by processing it in multiple space-time scales. We demonstrate state-of-the-art text-to-video generation results, and show that our design easily facilitates a wide range of content creation tasks and video editing
     applications, including image-to-video, video inpainting, and stylized generation.

    논문 링크

   https://arxiv.org/abs/2401.12945

    더 읽어보기

   https://discuss.pytorch.kr/t/lumiere-google/3357

   https://x.com/GoogleAI/status/1751003814931689487


  메두사: 다중 디코딩 헤드를 갖춘 간단한 LLM 추론 가속 프레임워크 / Medusa: Simple LLM Inference Acceleration Framework with Multiple Decoding Heads

    논문 소개

     * 여러 개의 후속 토큰을 병렬로 예측하는 여러 개의 디코딩 헤드를 사용하는 LLM 추론 가속화를 위한 간단한 프레임워크로, 병렬화를 통해 디코딩 단계 수를 크게 줄여 생성 품질 저하 없이 2.2배 이상의 속도 향상을 달성할 수 있으며, 메두사-2는 속도를 2.3~3.6배로 더욱 향상시켰습니다.

     A simple framework for llm inference acceleration using multiple decoding heads that predict multiple subsequent tokens in parallel; parallelization substantially reduces the number of decoding steps; it can achieve over 2.2x speedup without compromising generation quality, while medusa-2 further improves the speedup to 2.3-3.6x.

    논문 초록(Abstract)

     * 대규모 언어 모델(LLM)의 추론 프로세스는 자동 회귀 디코딩 프로세스에 병렬 처리 기능이 없기 때문에 대부분의 연산이 가속기의 메모리 대역폭에 의해 제한되는 경우가 많습니다. 이 문제를 해결하기 위해 추측적 디코딩과 같은 방법이 제안되었지만, 별도의 초안 모델을 확보하고 유지해야 하는 문제로 인해 구현에 어려움을 겪고 있습니다. 이 논문에서는 여러 후속 토큰을 병렬로 예측하기 위해 디코딩 헤드를 추가로 추가하여 LLM 추론을 강화하는 효율적인 방법인 메두사를 소개합니다. 메두사는 트리 기반 어텐션 메커니즘을 사용하여 여러 후보 연속을 구성하고 각 디코딩 단계에서 이를 동시에 검증합니다. 병렬 처리를 활용함으로써 메두사는 단일 단계 지연 시간 측면에서 최소한의 오버헤드만 발생시키면서 필요한 디코딩 단계의 수를 크게
       줄입니다. 다양한 사용 사례의 요구 사항을 충족하기 위해 메두사에는 두 가지 수준의 미세 조정 절차가 있습니다: 메두사-1: 메두사는 프로즌 백본 LLM 위에서 직접 미세 조정되어 무손실 추론 가속을 가능하게 합니다. 메두사-2: 메두사는 백본 LLM과 함께 미세 조정되어 메두사 헤드의 예측 정확도를 높이고 속도를 높일 수 있지만, 백본 모델의 기능을 보존하는 특별한 학습 레시피가 필요합니다. 또한, 학습 데이터가 없는 상황을 처리하기 위한 자가 증류와 생성 품질을 유지하면서 수용률을 높이기 위한 일반적인 수용 체계를 포함하여 메두사의 유용성을 개선하거나 확장하는 몇 가지 확장을 제안합니다. 다양한 크기와 학습 절차의 모델에 대해 메두사를 평가합니다. 실험 결과, 메두사-1은 생성 품질 저하 없이 2.2배 이상의 속도 향상을 달성할 수 있으며,
       메두사-2는 속도를 2.3~3.6배로 더욱 향상시킬 수 있음을 입증했습니다.

     The inference process in Large Language Models (LLMs) is often limited due to the absence of parallelism in the auto-regressive decoding process, resulting in most operations being restricted by the memory bandwidth of accelerators. While methods such as speculative decoding have been suggested to address this issue, their implementation is impeded by the challenges associated with acquiring and maintaining a separate draft model. In this paper, we present Medusa, an efficient method that augments LLM inference by adding extra decoding heads to predict multiple subsequent tokens in parallel. Using a tree-based attention mechanism, Medusa constructs multiple candidate continuations and verifies them simultaneously in each decoding step. By leveraging parallel processing, Medusa introduces only minimal overhead in terms of single-step latency while substantially reducing the number of decoding steps required. We present two levels of fine-tuning procedures for Medusa to meet
     the needs of different use cases: Medusa-1: Medusa is directly fine-tuned on top of a frozen backbone LLM, enabling lossless inference acceleration. Medusa-2: Medusa is fine-tuned together with the backbone LLM, enabling better prediction accuracy of Medusa heads and higher speedup but needing a special training recipe that preserves the backbone model's capabilities. Moreover, we propose several extensions that improve or expand the utility of Medusa, including a self-distillation to handle situations where no training data is available and a typical acceptance scheme to boost the acceptance rate while maintaining generation quality. We evaluate Medusa on models of various sizes and training procedures. Our experiments demonstrate that Medusa-1 can achieve over 2.2x speedup without compromising generation quality, while Medusa-2 further improves the speedup to 2.3-3.6x.

    논문 링크

   https://arxiv.org/abs/2401.10774v1

    더 읽어보기

   https://discuss.pytorch.kr/t/…

   https://x.com/jiayq/status/1749461664393810350


  에이전트보드: 멀티턴 LLM 에이전트에 대한 분석 평가 위원회 / AgentBoard: An Analytical Evaluation Board of Multi-turn LLM Agents

    논문 소개

     * 오픈소스 평가 프레임워크가 포함된 종합적인 벤치마크를 통해 분석적 평가를 수행하여 LM 에이전트의 기능과 한계를 평가하고 에이전트 행동을 파악하여 더 강력하고 견고한 LM 에이전트를 구축할 수 있습니다.

     A comprehensive benchmark with an open-source evaluation framework to perform analytical evaluation of llm agents; helps to assess the capabilities and limitations of llm agents and demystifies agent behaviors which leads to building stronger and robust llm agents.

    논문 초록(Abstract)

     * 범용 에이전트로서 대규모 언어 모델(LLM)을 평가하는 것은 그 기능을 이해하고 실제 애플리케이션에 쉽게 통합하기 위해 필수적입니다. 하지만 평가 과정에는 상당한 어려움이 따릅니다. 특히 부분적으로 관찰 가능한 환경을 유지하고 다각적인 상호작용을 보장하는 데 있어 통합 프레임워크 내에서 다양한 시나리오에 걸쳐 에이전트 성능을 벤치마킹하는 것이 가장 큰 장애물입니다. 게다가 현재의 평가 프레임워크는 대부분 최종 성공률에 초점을 맞추기 때문에 프로세스 중 인사이트가 거의 드러나지 않고 모델 능력에 대한 심층적인 이해를 제공하지 못합니다. 이러한 문제를 해결하기 위해 유니티는 LLM 에이전트의 분석적 평가에 맞춤화된 선구적인 종합 벤치마크이자 오픈소스 평가 프레임워크인 에이전트보드를 도입했습니다. 에이전트보드는
       점진적인 발전을 포착하는 세분화된 진행률 메트릭과 대화형 시각화를 통해 다각적인 분석을 위해 에이전트를 쉽게 평가할 수 있는 종합적인 평가 툴킷을 제공합니다. 이를 통해 LLM 에이전트의 역량과 한계를 명확히 파악할 수 있을 뿐만 아니라 에이전트의 성과에 대한 해석 가능성도 높일 수 있습니다. 궁극적으로 에이전트보드는 에이전트 행동을 이해하고 더 강력한 LLM 에이전트 개발을 가속화하는 데 중요한 역할을 합니다.

     Evaluating large language models (LLMs) as general-purpose agents is essential for understanding their capabilities and facilitating their integration into practical applications. However, the evaluation process presents substantial challenges. A primary obstacle is the benchmarking of agent performance across diverse scenarios within a unified framework, especially in maintaining partially-observable environments and ensuring multi-round interactions. Moreover, current evaluation frameworks mostly focus on the final success rate, revealing few insights during the process and failing to provide a deep understanding of the model abilities. To address these challenges, we introduce AgentBoard, a pioneering comprehensive benchmark and accompanied open-source evaluation framework tailored to analytical evaluation of LLM agents. AgentBoard offers a fine-grained progress rate metric that captures incremental advancements as well as a comprehensive evaluation toolkit that features
     easy assessment of agents for multi-faceted analysis through interactive visualization. This not only sheds light on the capabilities and limitations of LLM agents but also propels the interpretability of their performance to the forefront. Ultimately, AgentBoard serves as a significant step towards demystifying agent behaviors and accelerating the development of stronger LLM agents.

    논문 링크

   https://arxiv.org/abs/2401.13178v1

    더 읽어보기

   https://x.com/ma_chang_nlp/status/1750369056539218082


  원문

   https://nlp.elvissaravia.com/p/top-ml-papers-of-the-week-5c8
     __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

   ⚠️광고⚠️: 파이토치 한국 사용자 모임이 정리한 이 글이 유용하셨나요? 회원으로 가입하시면 주요 글들을 이메일로 보내드립니다! (기본은 Weekly지만 Daily로 변경도 가능합니다.)
"
"https://news.hada.io/topic?id=13038","모질라의 새로운 우분투 및 데비안 파생 배포판용 Firefox Linux 패키지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              모질라의 새로운 우분투 및 데비안 파생 배포판용 Firefox Linux 패키지

모질라의 새로운 파이어폭스 리눅스 패키지 사용해야 할 4가지 이유

     * 리눅스 사용자를 위한 좋은 소식: 모질라가 우분투, 데비안 및 데비안 기반 배포판을 위한 새로운 파이어폭스 패키지를 출시함.
     * 개방형 소프트웨어로 알려진 리눅스: 전통적인 운영 체제에 대한 대안으로 소개됨.

1. 사용자의 필요에 맞게 조정 가능

     * 브라우저는 복잡한 애플리케이션: 사람들의 일상에서 다양한 시나리오를 지원함.
     * 샌드박스 구현 개선에 집중: 스냅(Snap)과 플랫팩(Flatpak)과 완벽하게 호환되는 동시에 네이티브 패키지도 제공하고자 함.
     * 리눅스에서의 공식 포맷: 모질라 .tar.bz2 빌드 및 스냅, 플랫팩과 같은 샌드박스 패키지로 제공됨.

2. 100% 모질라 제작

     * 파이어폭스를 선택하는 리눅스 사용자에게 감사: 많은 사용자들의 기본 브라우저로 인기 있음.
     * 이전에는 외부 도움 필요: .deb 패키지는 모질라 외부의 사람들과 조직의 도움이 필요했음.
     * 새로운 패키지 제공: 소스 코드에서 조립된 파이어폭스를 수정 없이 모질라가 직접 빌드하고 지원함.

3. 더 나은 성능

     * 25년 이상의 명성: 모질라는 무료 및 오픈 소스 웹 브라우저를 만드는 데 명성을 쌓음.
     * 오픈 소스 파이어폭스: 최적의 성능을 내기 위해 고급 컴파일러 기반 최적화로 빌드됨.
     * 주의: 다른 .deb 패키지를 사용할 경우, 의도한 모든 최적화를 받을 수도 있고 받지 못할 수도 있음.

4. 더 빠른 업데이트

     * 최신 버전의 중요성: 기능과 보안 수정이 포함된 최신 버전을 받는 것은 좋은 사용 경험을 위해 중요함.
     * 새로운 APT 저장소: 파이어폭스 릴리스 과정에 직접 연결되어 최신 업데이트를 신속하게 제공받을 수 있음.
     * 팁: 최신 버전을 위해 파이어폭스를 재시작해야 함.

GN⁺의 의견

     * 리눅스 사용자에게 중요한 발표: 모질라가 직접 빌드하고 지원하는 새로운 파이어폭스 리눅스 패키지는 사용자에게 더 나은 성능과 신속한 업데이트를 제공함.
     * 개방성과 호환성의 강조: 사용자의 필요에 맞춰 조정 가능하고, 스냅 및 플랫팩과의 호환성을 유지하면서도 네이티브 패키지를 제공하는 점은 리눅스 커뮤니티 내에서의 다양성과 선택권을 존중하는 모질라의 접근 방식을 보여줌.
     * 기술적 신뢰성: 모질라의 오랜 경험과 전문성은 사용자가 더 나은 브라우징 경험을 할 수 있도록 보장하며, 이는 기술 애호가뿐만 아니라 일반 사용자에게도 매력적인 요소임.

        Hacker News 의견

     * 최신 버전의 Firefox를 사용하는 것은 좋은 경험을 위해 중요하며, 새로운 APT 저장소가 Firefox 릴리스 과정에 직접 연결되어 최신 업데이트를 제공함.
          + 과거에는 Firefox가 백그라운드에서 업데이트될 때마다 브라우저 재시작을 요구하는 불편함이 있었음.
          + 이번 발표에서 이 문제가 해결되었는지 명확하지 않으며, 해결되지 않았다면 사용자는 .tar.gz 파일을 이용해 직접 설치할 것임.
     * Ubuntu 사용자 중 일부는 공식 Firefox 저장소가 생긴 것을 환영하며, Snap 패키지 시스템을 거부하고 있음.
          + Snap을 강제로 사용하려 한다면 Debian으로 전환할 의사가 있음.
     * Chromebook 사용자에게는 Crostini에서 최신 Firefox를 Flatpak 없이 설치할 수 있는 좋은 소식임.
          + 그러나 ARM64 Chromebook 사용자는 Mozilla의 공식 채널에서 aarch64-linux 빌드를 제공하지 않아 다른 방법을 사용해야 함.
     * Debian testing이나 unstable 사용자는 Mozilla에서 직접 Firefox를 다운로드하여 최신 버전으로 유지할 수 있음.
          + 설치 과정은 간단하며, 데스크탑 통합은 사용하는 데스크탑 환경에 따라 다를 수 있음.
     * Debian/Ubuntu는 Spotify와 Signal과 같은 클라이언트 소프트웨어의 첫 번째 선택임.
          + Fedora 사용자는 여전히 Firefox 패키지를 사용할 수 있으며, Signal은 Flatpak으로 제공됨.
     * PPA 패키지 사용자는 새로운 공식 저장소와 PPA가 같은 패키지인지 혼란스러워함.
          + 기사에서 이에 대한 언급이 있었으면 좋았을 것임.
     * Mozilla 팀의 업데이트는 긍정적이지만, 개인 정보 보호와 자유에 대한 지속적인 약속이 필요함.
          + Mozilla CEO의 ""We Need More Deplatforming (2021)"" 기사 이후 변화된 점에 대한 명확한 입장이 필요함.
     * 과거에 있었던 .deb 저장소가 사라졌다가 이제 다시 생겼음을 지적함.
     * 새로운 저장소의 이점 중 하나로 Snap 패키지 시스템을 제거할 수 있음을 언급함.
     * Snap 패키지 시스템을 사용하지 않는 것에 대한 긍정적인 반응을 보임.
"
"https://news.hada.io/topic?id=13119","코딩 AI, 어디까지 발전했나?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           코딩 AI, 어디까지 발전했나?

   코드 생성 AI의 발전과정과 현황을 간단히 요약.
     * GPT-3는 LLM이 코딩 문제를 해결할 수 있다는 가능성을 보여줌
     * Codex가 Github Copilot에 도입되며 코딩 AI를 대중화함
     * AlphaCode는 AI가 복잡한 문제를 해결할 수 있음을 보여줌
     * ChatGPT/GPT-4는 개발자들의 구글/스택오버플로우 역할을 대체하는 중
     * Code Llama 등의 오픈소스 모델이 빠르게 발전하는 중
     * AI 모델 뿐 아니라 IDE, 터미널 등 개발 도구도 함께 발전하고 있음

   작년 상반기부터 코딩 AI에 많은 도움을 받아오고 있습니다.
   개인적으론 질답형 서비스는 Phind가 좋았고 개발 확장프로그램으로는 Github Copilot이나 Codeium이 좋았어요.
"
"https://news.hada.io/topic?id=13058","CVE-2023-40547 – HTTP 헤더를 잘못 신뢰하는 것을 피해야 할 보안 취약점","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           CVE-2023-40547 – HTTP 헤더를 잘못 신뢰하는 것을 피해야 할 보안 취약점

CVE-2023-40547 - HTTP 헤더 신뢰 오류 방지

     * shim은 HTTP 또는 관련 프로토콜을 통해 파일을 검색할 때 수신된 데이터를 저장하기 위한 버퍼를 할당하려고 함.
     * HTTP 헤더를 통해 버퍼 크기를 결정하는데, 이 헤더는 조작될 수 있어 실제 데이터보다 작은 크기를 지정할 수 있음.
     * 이로 인해 할당은 헤더를 기반으로 하지만, 프로토콜 메타데이터를 사용하여 rx 버퍼에서 복사하게 되어 버퍼 오버플로우가 발생함.
     * 이 패치는 rx 버퍼가 할당된 크기보다 크지 않은지 추가적으로 확인하는 검사를 추가함.

변경된 파일 검토

     * 변경된 파일은 httpboot.c로, 7개의 추가 사항과 1개의 삭제 사항이 있음.
     * 주요 변경 사항은 receive_http_response 함수 내에서 buf_size가 rx_message.BodyLength보다 작은 경우 오류를 반환하도록 수정함.

GN⁺의 의견

     * 이 패치는 보안 취약점 CVE-2023-40547을 해결하는 것으로, shim 부트로더의 안전성을 강화하는 중요한 업데이트임.
     * HTTP 헤더를 통한 버퍼 오버플로우는 심각한 보안 위협을 초래할 수 있으며, 이러한 취약점을 방지하는 것은 소프트웨어 보안의 핵심 요소임.
     * 이 기사는 소프트웨어 개발자들에게 보안 패치의 중요성과 적절한 버퍼 관리의 필요성을 상기시켜주는 유익한 정보를 제공함.
"
"https://news.hada.io/topic?id=13022","항소법원: FBI의 안전예금함 압수가 제4조항을 위반","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     항소법원: FBI의 안전예금함 압수가 제4조항을 위반

항소 법원: FBI의 안전 금고 상자 압수는 제4조 개정안 위반

     * 연방 항소 법원 판사들은 FBI가 2021년 3월 급습 후 700개 이상의 안전 금고 상자 내용물을 검사한 것이 제4조 개정안을 위반했다고 만장일치로 판결함.
     * FBI는 법원의 영장을 넘어서 행동했으며, 안전 금고 상자를 열고 내용물을 마약 탐지견에게 보여주고, 상자 안의 돈과 다른 귀중품을 압수하려고 시도함.
     * 항소 법원의 판결은 ""추가 지침""의 존재에 초점을 맞추고 있으며, 이 지침은 FBI 요원들에게 안전 금고 상자 안의 현금을 찾고, 현금이 범죄 수익일 수 있다는 것을 암시하는 모든 것을 기록하라고 지시함.

""특별 지침""의 문제

     * 영장은 FBI 요원들이 안전 금고 상자의 내용물에 대한 ""범죄 수색 또는 압수""를 금지했지만, 작전을 담당한 특별 요원이 작성한 ""추가 지침""은 현금을 찾고 범죄 수익일 가능성이 있는 것을 기록하도록 함.
     * 판사 Milan D. Smith Jr.는 정부가 ""재고 검사""를 얼마나 멀리 진행할 수 있는지에 대한 제한 원칙을 제공하지 못한 것이 ""특히 문제가 있다""고 적음.
     * Smith 판사는 정부가 맞춤형 재고 정책을 만들 수 있는 재량을 가진다면, 그 검색은 단순한 재산 보호를 위한 ""재고""가 아니라 특정 차량이나 개인에 대한 범죄 조사처럼 보일 것이라고 이론화함.

FBI의 행동과 법적 결과

     * FBI는 금고 상자 내부의 정보를 사용하여 추가 영장을 얻고 새로운 조사를 시작함으로써 ""범죄 수색 또는 압수""를 수행했다는 의심을 해소함.
     * 법원은 FBI가 수백 명의 안전 금고 상자 소유자들의 제4조 개정안 권리를 침해했다고 판단하고, 이 사건이 연방 몰수법 개혁에 대한 새로운 주목을 가져와야 한다고 주장함.
     * FBI 대변인은 판결에 대해 언급을 거부하고 사안을 미국 검찰청에 넘김, 검찰청은 논평 요청에 응답하지 않음.

법원 문서 공개와 그 영향

     * 2021년 8월 지방 법원은 FBI가 숨기려고 했던 급습 계획 단계의 세부 사항을 공개함으로써 FBI의 계획이 드러남.
     * 문서에는 FBI가 안전 금고 상자 내용물에 대한 민사 몰수 절차를 사용할 계획이었지만, 이 정보를 영장을 발부한 판사에게 제공하지 않았음이 드러남.
     * 지방 법원 판사 R. Gary Klausner는 정부가 재고 중 범죄 증거를 찾기를 기대하거나 희망했다고 판단했지만, FBI의 행동이 제4조 개정안의 범위 내에 있다고 판결함.
     * 항소 법원은 Klausner의 결론이 잘못되었다고 판단하고 사건을 지방 법원으로 돌려보냄.

GN⁺의 의견

     * 이 사건은 미국인들에게 제4조 개정안이 오늘날에도 여전히 중요한 이유를 상기시켜줌.
     * FBI의 행동은 개인의 사생활과 재산권을 보호하기 위한 법적 제한을 넘어선 것으로, 법의 테두리 내에서 권력이 행사되어야 한다는 점을 강조함.
     * 이 판결은 미국의 법 집행 기관이 어떻게 법적 절차를 준수해야 하는지, 그리고 시민의 권리가 어떻게 보호되어야 하는지에 대한 중요한 사례로 남을 것임.
"
"https://news.hada.io/topic?id=13078","기후 변화에 대한 걱정이 없었던 과거, 이제는 달라진 생각 [동영상]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 기후 변화에 대한 걱정이 없었던 과거, 이제는 달라진 생각 [동영상]

        Hacker News 의견

     * 한 개인이 기후 옹호 활동에 참여하여 지역 정부에 에너지 자원 연구를 시작하게 했으며, 이는 지역사회가 재생 가능 에너지로 빠르게 전환하는 방법을 모색하는 것임.
          + 아리조나 주는 태양광 구매에 대한 12.5% 세금 부과를 포함한 화석 연료 친화적인 법안을 제안하고 있으며, 이에 반대하는 사람들은 11월 선거에서 이러한 정책을 추진하는 정치인들을 퇴출할 계획임.
          + 저렴한 대규모 에너지 저장 기술의 필요성을 강조하며, 태양광과 저장 기술이 메탄보다 저렴해지면 화석 연료에서 벗어나기가 훨씬 쉬워질 것임.
          + 시민 참여의 중요성을 강조하며, 기후 정책이 관료제에서 어떻게 올바르게 실행될 수 있는지에 대한 세부 사항에 참여할 것을 권장함.
     * 탄소세가 지구 온난화에 대한 가장 효율적인 해결책이라는 경제학자들 사이의 거의 합의가 있지만, 세금으로 프레임될 때 정치적 합의는 이루어지지 않을 것이라는 인식이 있음.
          + 탄소세가 무엇인지, 왜 '고기 먹는 것을 줄이는 것'보다 훨씬 더 효율적인 해결책인지에 대해 알아보도록 권장함.
     * 기후 변화가 사람들의 삶의 질에 미칠 영향에 대해 아무도 확실히 알지 못하기 때문에 다양한 의견과 불일치가 존재함.
          + 예측은 있지만, 사망자 수, 재정적 비용 등 직접적인 영향에 대한 신뢰할 수 있는 끔찍한 예측은 없음.
          + 사람들이 자신의 상상에 따라 행동을 제어하려 하고, 이것이 정치적으로 변하면서 서로를 적대시함.
     * 한나 리치의 새 책 ""Not the end of the world""는 현실을 부정하지 않으면서도 낙관주의를 주장함.
          + 이 책은 매우 훌륭하며 추천할 만함.
     * 프랑스 남부에 거주하는 한 사람은 여름이 너무 길고 밤이 더워 잠을 잘 수 없어 더 시원한 프랑스 지역으로 이사할 필요가 있음.
          + 에어컨 설치 비용이 부족하고 휴대용 에어컨은 너무 시끄러움.
          + ""The Ministry Of The Future""라는 책을 읽고 있으며, 인도가 기후 변화로 인해 가장 먼저 고통받을 것이라고 언급함.
     * 정치인들이 실제로 일을 하지 않고 세계가 악화되는 것을 지켜보는 것은 매우 답답함.
          + 미국의 경우, 모든 배출물을 포집하거나 환경 복원 비용의 두 배에 해당하는 벌금을 부과하는 규제를 제안함.
     * 기후 변화에 대해 특별히 걱정하지 않았지만, 자녀들을 위해 북유럽으로 이사함.
          + 핀란드는 핵에너지, 태양광, 수력 발전의 좋은 조합 덕분에 지난해 에너지 자급자족을 달성함.
          + 핀란드로 이사하면 더 강한 민주주의를 구축하는 데 도움이 될 것임.
     * 기후 변화에 대한 우리의 사고 방식에 대한 전환점이 필요함.
          + 모든 인간 활동이 다양한 정도로 기후 변화에 기여함.
          + 인류가 번성한다는 것은 인류의 발자취가 전 지구에 걸쳐 확대된다는 것을 의미함.
          + 우리는 지구의 광대한 사막에서 돔 안에서 살거나, 달이나 태양계 어디에서나 우주 서식지에서 살 수 있는 지식, 기술, 수단을 가지고 있음.
     * 자신이 통제할 수 없는 것들에 대해 왜 걱정해야 하는가에 대한 의문 제기.
          + 자신의 의견 가치를 과대평가하는 사람들일지도 모름.
     * 어느 나라가 고도의 황산 분사를 시작할 것인지에 대한 의문.
          + 최근 과거의 강제력을 되돌릴 수 있다면 이는 큰 도움이 될 것임.
"
"https://news.hada.io/topic?id=13117","Show GN: 메일포켓 - 뉴스레터를 3줄 요약으로 Slack에서 즐기세요.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Show GN: 메일포켓 - 뉴스레터를 3줄 요약으로 Slack에서 즐기세요.

     * 원하는 채널로 실시간 뉴스레터 소식을 받아올 뿐만 아니라, 메일함에 더 이상 일회성 메일이 쌓이는 문제도 해결해 드릴게요.
     * 뉴스레터 내용을 3줄로 간략하게 정리해 드릴게요. 핵심 내용만 빠르게 파악하고 소중한 시간을 아껴보세요!
     * 메일포켓을 통해 다양한 뉴스레터를 간편하게 구독하세요.
"
"https://news.hada.io/topic?id=13126","HN 소개: 오픈소스 x64 및 Arm GitHub 러너","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    HN 소개: 오픈소스 x64 및 Arm GitHub 러너

GitHub Actions를 위한 Ubicloud 러너

     * GitHub Actions 빌드 비용을 10배 절감할 수 있는 Ubicloud 관리형 러너 제공.
     * 단 한 줄의 코드 변경으로 빌드 속도 향상 및 비용 절감 가능.
     * 월 1,250분의 무료 사용 시간 제공.

높은 성능과 보안

     * 저렴한 가격에도 불구하고 빠른 실행 속도 제공.
     * 보안과 개인 정보 보호를 위해 완전히 격리된 VM을 사용하여 Linux KVM을 통해 구축.
     * 각 작업에 대해 깨끗하고 일시적인 VM 제공.
     * GitHub의 즉시 사용 가능한 러너 구성으로 일시적인 비밀 정보 보호.
     * 암호화된 통신 및 키 회전, 자동 방화벽 구성, 자동 취약성 경고 제공.

개방성과 호환성

     * Ubicloud는 개방적이고 자유롭고 이동 가능한 클라우드로, 클라우드 제공업체에 대한 오픈 소스 대안.
     * GitHub에서 소스 코드 확인 가능하며, GitHub Actions를 위한 관리형 러너 사용 가능.
     * 비용 효율적인 베어 메탈 인스턴스에서 실행되어 절감된 비용을 사용자에게 전달.
     * GitHub Actions와 완벽하게 호환되며, 단 한 줄의 변경으로 Ubicloud 러너 사용 설정 가능.
     * 5분 만에 통합하여 영구적으로 비용을 10배 절약.

GN⁺의 의견

     * Ubicloud는 GitHub Actions의 빌드 비용을 대폭 절감할 수 있는 효율적인 솔루션을 제공함.
     * 보안과 개인 정보 보호에 중점을 두면서도 높은 성능을 유지하는 것이 중요한 특징임.
     * 오픈 소스 클라우드 솔루션으로서, 기존 클라우드 서비스에 대한 대안적인 선택지를 제공하는 것이 이 서비스의 중요한 매력 포인트임.

        Hacker News 의견

     * 첫 번째 댓글 요약:
          + 출시를 축하하며, 제품이 흥미롭다고 언급.
          + 가격 책정이 매력적이지만 현재 오픈소스 프로젝트에 집중하고 있어 타겟 오디언스가 아님.
          + 제품이 왜 더 저렴하고 빠른지 궁금증을 표현.
          + 랜딩 페이지의 시각적 요소에 대한 작은 지적(수평 패딩 부족).
          + Ubicloud가 오픈소스 클라우드로, 리눅스와 같은 대안적인 클라우드 제공자라는 설명이 처음에는 이해하기 어려웠으나 문서를 통해 명확해짐.
          + 엔지니어에게는 제품의 이점보다는 구체적인 기능을 설명하는 것이 더 효과적인 마케팅이라는 의견과 오타 지적.
     * 두 번째 댓글 요약:
          + Ubicloud 빌더를 몇 달간 사용해 CI 시간이 대폭 감소하고 비용도 크게 절감됨.
          + 캐시 저장 및 복원이 느리지만 CPU 성능이 좋아 캐시를 비활성화하고 빌드마다 모든 작업을 재실행하는 것이 더 빠름.
     * 세 번째 댓글 요약:
          + Ubicloud의 공동 창립자로, 많은 고객이 Ubicloud 러너를 생산 환경에서 사용 중임.
          + 캐싱 레이어(도커 인스턴스 레지스트리, 도커 레이어 캐시, 패키지 캐시) 설계 중이며, 의견을 구함.
          + 오픈하고 이식 가능한 클라우드에 대한 더 넓은 주제에 대한 의견도 요청.
     * 네 번째 댓글 요약:
          + BuildJet을 1년 이상 사용하며 CI 비용을 크게 절감하고 빌드 시간도 대폭 감소함.
          + 시장에 더 많은 회사가 등장하는 것을 긍정적으로 평가.
     * 다섯 번째 댓글 요약:
          + MacOS를 관리형 서비스로 제공하거나 계획 중인지, GitHub에 비해 얼마나 저렴한지에 대한 질문.
     * 여섯 번째 댓글 요약:
          + Resmo에서 Ubicloud를 사용 중이며, 실제로 비용이 10배 저렴함.
          + Hetzner 전용 인스턴스에서 호스팅되는 플랫폼이 주된 이유임.
     * 일곱 번째 댓글 요약:
          + Elastic 라이선스를 오픈소스라고 부르지 말 것을 요청.
          + 프로젝트가 AGPL을 사용한다는 응답을 받고 정보가 구식임을 인정.
     * 여덟 번째 댓글 요약:
          + PeerDB에서 Ubicloud 러너를 사용 중이며, 특히 ARM 러너가 CI 비용 절감에 도움이 됨.
          + 요청 후 몇 주 안에 ARM 러너 지원을 추가해주는 등 팀의 반응이 빠름.
     * 아홉 번째 댓글 요약:
          + GitHub Actions 러너 가격이 분 단위로 계산되는 것에 대한 불만.
          + 초 단위로 청구할 수 있는지, 최소 1분 후에는 초 단위로 청구하는 방안 제안.
     * 열 번째 댓글 요약:
          + GitLab과 집에서 사용하는 노트북 러너를 무료로 사용 중이며, 이에 만족함.
          + GitHub의 필요성을 보지 못함.
"
"https://news.hada.io/topic?id=13114","부동산 대기업 중국 에버그란데, 청산될 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        부동산 대기업 중국 에버그란데, 청산될 예정

에버그란데 해체, 수년간의 실수에 '빅뱅' 종말

     * 홍콩 법원은 중국 최대 부동산 회사였던 에버그란데의 운영 종료 명령을 내림.
     * 에버그란데는 2021년 현금 부족으로 디폴트가 발생한 후, 투자자들이 중국 정부의 구제를 기대하며 할인된 채무증서를 매입함.
     * 법원의 결정은 에버그란데가 소유한 모든 팔 수 있는 자산을 찾아내려는 변호사들의 경쟁을 촉발할 것임.
     * 에버그란데의 변호사들은 마지막 순간의 거래를 시도하며, 해체가 회사의 사업에 해를 끼치고 채권자들이 돈을 회수하는 데 도움이 되지 않을 것이라고 주장함.
     * 하지만 40분간의 토론 끝에, 파산 판사인 린다 찬은 에버그란데가 1년 반 동안 구체적인 제안을 법원에 가져오지 못한 점을 들어 해체 명령을 내림.
     * 이 명령은 에버그란데가 빚을 갚지 못하고 정상적으로 기능하지 못하면서도 여전히 운영되고 있던 상태에서, 이제 수백 개 도시에 걸쳐 있는 대규모 사업과 전기차 회사와 같은 관련 없는 사업을 해체하는 장기간의 과정을 겪게 될 것임을 의미함.

   GN⁺의 의견:
     * 에버그란데의 붕괴는 중국 부동산 시장의 과열과 과도한 부채 문제를 상징하며, 이는 전 세계적으로 부동산 및 금융 시장에 영향을 미칠 수 있음.
     * 이 사건은 투자자들에게 정부의 구제 조치에 대한 기대가 언제나 현실화되지 않을 수 있음을 상기시키는 경고의 사례가 됨.
     * 에버그란데의 해체 과정은 다른 부동산 개발 회사들에게도 경각심을 주며, 재무 관리와 부채 관리의 중요성을 강조하는 계기가 될 것임.

        Hacker News 의견

     * 중국 부동산 버블의 붕괴는 장기적으로는 모두에게 좋은 소식이지만, 단기적으로는 다른 부동산 개발업체들의 연쇄 채무 불이행과 많은 사람들의 고통을 초래할 가능성이 있음. 중국 정부가 파산을 허용할지, 외국 주주와 중국 시민들의 손실이 어떻게 될지, 그리고 이 사태가 암호화폐 시장에 미칠 영향에 대한 불확실성이 존재함.
     * 이 사건은 홍콩 사업에만 해당되며, 예상보다 큰 영향을 미치지 않았음.
     * 로스앤젤레스 다운타운에 위치한 미완성 고층 건물은 EB-5 자금 조달 문제와 Oceanwide 때문에 완공되지 못하고 있으며, 코로나 이후의 상업용 부동산 시장 상황으로 인해 당분간 그대로 방치될 것으로 보임.
     * 미완성 건물의 매각은 어려울 것으로 예상되며, 시장 수요가 없어 공사가 중단된 건물은 부정적인 가치를 가질 수 있음.
     * 에버그란데의 청산이 3년이 걸린 이유는 중국 공산당 엘리트들의 지원으로 인한 것이며, 이로 인해 청산 지연이 발생했음. 에버그란데의 자산은 대부분 중국 내 토지로 구성되어 있으며, 이는 중국 전역의 부동산 가격 하락을 가속화할 것임. 중국 경제의 3대 기둥(부동산, 소비 지출, 수출)에 대한 영향과 중국의 단기 매도 금지 조치에 대한 정보도 제공됨.
     * 중국 에버그란데가 현금 부족으로 채무 불이행 상태에 빠진 후, 투자자들은 중국 정부의 구제 조치를 기대하며 할인된 채무증권을 매입했음. 하지만 중국 정부는 외국인 투자자들을 불리하게 대우할 가능성이 있으며, 홍콩에서의 외국인 투자에 대한 중국 정부의 정책 변화가 투자자들에게 교훈이 되어야 함.
     * 에버그란데 사태가 국제적으로 제한된 영향을 미치기를 희망하지만, 실제로는 복잡한 문제가 될 수 있음. 에버그란데가 부채를 상환하기에 충분한 자산을 가지고 있는지 여부가 중요한 질문임.
"
"https://news.hada.io/topic?id=13052","체스 말이 기하학적 공격 방향으로 재디자인될 수 있다는 사실을 깨달았습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               체스 말이 기하학적 공격 방향으로 재디자인될 수 있다는 사실을 깨달았습니다.

        Hacker News 의견

     * ""Visual Chess"" 세트를 여전히 소유하고 있으며, 이는 eBay에서 찾을 수 있음. 말들은 전통적인 디자인을 현대화한 것으로, 상단에서 볼 때 각 말의 가능한 움직임을 알 수 있음. 폰의 디자인도 전진과 대각선 공격이 가능함을 명확히 표시함. [IMG] Visual Chess 예시
     * 한 트윗에서 나이트의 움직임이 퀸이 2칸 맨해튼 거리 안에서 갈 수 없는 칸임을 보여주는 것이 놀라움. 즉, 나이트는 '안티-퀸'임. [IMG] 나이트의 움직임
     * 체스 말의 디자인을 재구성하는 것은 재미있지만, 나이트의 위협이 연결되지 않은 '꽃' 형태는 이상적이지 않을 수 있음. 물리적 말로 만들 경우, 실수로 말의 위치를 잘못 놓으면 룩과 비숍을 혼동할 수 있음. 비숍은 대각선으로 '저격'하는 것처럼, 룩은 '휩쓸기'하는 것처럼 보이게 해야 함. 왕은 '작은 퀸'이 아니라 '작은 정사각형'으로 만들어 인접한 칸만 위협할 수 있음을 강조해야 함. 폰의 디자인은 재미있음.
     * 폰이 마주보는 방향이 싫음. 의미는 있지만, 다른 색의 텍스트가 있는 '색상' 문제와 비슷하게 느껴짐. 폰이 반대 방향을 향해야 한다고 느낌.
     * 이러한 말들로 플레이하는 사람들과 일반 말로 플레이하는 사람들 간의 온라인 실험이 흥미로울 것임. 이 접근법으로 보드의 상태를 더 쉽게 시각화할 수 있지만, 이것이 더 나은 플레이로 이어질지, 아니면 숙련된 플레이어가 이미 말의 모양과 움직임을 내면화했을지는 불분명함. 그러나 프로그래밍에서 글꼴 스타일의 차이가 시간이 지남에 따라 큰 영향을 미친다는 점에서 유사함.
     * 이 글이 말의 움직임을 재설계하여 새로운 종류의 게임을 만드는 것에 대한 것이라고 생각했지만, 실제로는 말의 모양만 변경됨. 그럼에도 불구하고, 룩을 정사각형으로, 나이트를 'L' 모양으로 만들면 초보자가 각 말의 움직임을 배우기 쉬울 것임.
     * 많은 체스를 해본 사람으로서 이것이 유용하다고 느끼지 않음. 많은 사람들이 긍정적인 반응을 보이는 것에 놀람.
     * 조셉 하트비그(Josef Hartwig)가 이에 대해 언급하고 싶어할 것임. 그의 디자인은 바우하우스 체스 세트로 유명함. [IMG] Josef Hartwig의 체스 세트
     * 이 말들은 보드게임 'Ploy'에서 온 것처럼 보임. [IMG] Ploy 게임
     * 이 아이디어는 오랫동안 존재해왔음. 체스에서 말을 인식하는 것은 가장 쉬운 부분이며, 이러한 대표적인 형태보다 상징적인 형태가 더 쉬움. 마찬가지로, 상징적인 음성 표기법이 라틴 알파벳을 대체하는 것은 좋지 않음. [IMG] 상징적인 음성 표기법
"
"https://news.hada.io/topic?id=13053","날개 손상으로 인해 '마스 헬리콥터 인젠루이티'는 다시 날지 못할 것임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                날개 손상으로 인해 '마스 헬리콥터 인젠루이티'는 다시 날지 못할 것임

화성에서의 세 해, NASA의 Ingenuity 헬리콥터 임무 종료

     * NASA의 역사적인 Ingenuity Mars 헬리콥터가 예상을 뛰어넘고 계획된 것보다 훨씬 많은 비행을 수행한 후 화성에서의 임무를 마쳤음.
     * 헬리콥터는 여전히 세워져 있고 지상 관제사와 통신 중이지만, 1월 18일 비행 중 착륙 과정에서 로터 블레이드가 손상되어 더 이상 비행 능력이 없음.
     * 기술 시연을 목적으로 설계되어 30일 동안 최대 5회의 시험 비행을 계획했으나, 실제로는 거의 3년 동안 화성 표면에서 작동하며 총 72회의 비행을 수행하고 계획된 거리의 14배 이상을 비행하며 총 2시간 이상의 비행 시간을 기록함.

NASA, 오늘 미디어 콜에서 Ingenuity 임무에 대해 논의

     * NASA 관리자 Bill Nelson의 미션 종료에 대한 비디오 코멘트와 함께, NASA는 1월 25일 오후 5시 EST에 Ingenuity Mars 헬리콥터에 대한 업데이트를 제공하기 위해 미디어 전화 회의를 개최함.
     * 전화 회의에는 NASA 본부의 행성 과학 부문 디렉터 Lori Glaze, NASA 제트 추진 연구소(JPL) 디렉터 Laurie Leshin, Ingenuity 프로젝트 매니저 Teddy Tzanetos가 참여할 예정임.

성공과 도전

     * 원래 계획보다 33배 이상 긴 거의 1,000 화성 일 동안의 확장된 임무 기간 동안, Ingenuity는 위험한 지형에서 착륙지를 자율적으로 선택하는 능력을 갖추고, 고장난 센서를 처리하며, 먼지 폭풍 후 자체 청소를 하고, 48개의 다른 비행장에서 작동하며, 세 번의 비상 착륙을 수행하고, 혹독한 화성의 겨울을 견딤.
     * 봄에 작동하도록 설계된 Ingenuity는 겨울의 가장 추운 시기에 밤새 히터를 가동할 수 없어 비행 컴퓨터가 주기적으로 얼어붙고 재설정됨. 이러한 전력 ""갈색 아웃""으로 인해 팀은 Ingenuity의 겨울 작업을 재설계하여 계속 비행할 수 있도록 함.
     * 비행 작업이 종료됨에 따라, Ingenuity 팀은 헬리콥터 시스템에 대한 최종 테스트를 수행하고 Ingenuity의 온보드 메모리에 남아 있는 이미지와 데이터를 다운로드할 예정임. 현재 Perseverance 로버는 헬리콥터가 마지막으로 착륙한 비행장을 이미지로 촬영하기에는 너무 멀리 떨어져 있음.

Ingenuity에 대한 추가 정보

     * Ingenuity Mars 헬리콥터는 NASA JPL에 의해 제작되었으며, NASA 본부를 위해 프로젝트를 관리함. NASA의 Ames 연구 센터와 Langley 연구 센터가 Ingenuity 개발 중 중요한 비행 성능 분석과 기술 지원을 제공함. AeroVironment Inc., Qualcomm, SolAero도 디자인 지원과 주요 차량 부품을 제공함. Lockheed Space는 Mars Helicopter Delivery System을 설계하고 제조함. NASA 본부에서는 Dave Lavery가 Ingenuity Mars 헬리콥터 프로그램 책임자임.

GN⁺의 의견

     * Ingenuity 헬리콥터는 단순한 기술 시연을 넘어서 화성에서의 비행 가능성을 입증하고, 미래의 우주 탐사 및 인간의 화성 탐사에 중요한 데이터를 제공함.
     * 이 임무는 향후 화성이나 다른 세계에서의 항공기 운용에 영감을 주며, 우주 탐사의 새로운 장을 열었다는 점에서 중요함.
     * Ingenuity의 성공은 NASA의 혁신적인 정신을 보여주며, 향후 우주 탐사 기술 개발에 중요한 기준점이 될 것임.

        Hacker News 의견

     * 한 해커뉴스 사용자는 NASA Ames 연구소에서 인턴으로 근무했으며, 그곳에서 화성 헬리콥터 'Ingenuity'의 주요 부분을 설계하고 비행 계획 및 분석 작업에 참여했다고 함. 이 프로젝트에는 뛰어난 인재들이 참여했으며, 'Ingenuity'의 성공은 새로운 화성 로터크래프트 임무들에 영감을 주었고, 이는 화성 샘플 반환 임무의 중요한 부분이 될 것이라고 언급함. 또한, 향후 태양계 탐사 노력에 비행이 큰 역할을 할 것이며, 'Ingenuity'가 그 길을 열었다고 평가함.
     * 또 다른 사용자는 'Ingenuity'를 운영하는 소프트웨어의 구조와 하드웨어 디자인 측면(상용 부품 사용 포함)에 대해 설명하는 티모시 캔햄의 동영상을 공유하며, 이 동영상이 매우 훌륭하고 덜 알려져 있다고 언급함.
     * 한 사용자는 'Ingenuity'를 경매에 부쳐야 한다고 제안하며, 물론 현장 수령 조건으로 말이다. 이 사용자는 화성에서의 첫 헬리콥터를 소유하고 싶어함.
     * 다른 사용자는 'Ingenuity' 프로젝트가 마케팅 가치만으로도 그 가치가 있었다고 평가하며, 이 프로젝트가 오늘날의 청소년들에게 우주 탐사에 대한 관심을 불러일으키기를 바람.
     * 한 사용자는 'Ingenuity'의 로터 블레이드 손상 이미지가 공개되었는지 궁금해함.
     * 'Ingenuity'가 3년 동안 70회 이상의 비행을 수행한 것에 대해 한 사용자는 이를 순수한 경이로움으로 평가하며, 'Ingenuity'에게 RIP(편히 쉬길)를 바람.
     * 한 사용자는 실험용 기체로서, 화성에서 리눅스를 실행하며 72회의 비행을 한 것이 많은 수라고 언급함.
     * 또 다른 사용자는 'Ingenuity'의 실패 지점이 저렴한 전자 부품이 아닌 프로펠러 블레이드라는 점을 긍정적으로 평가하며, 비행이 더 이상 가능하지 않음에도 카메라를 사용해 날씨 정보를 수집하고 다양한 부품과 배터리의 작동 시간을 측정할 수 있을 것이라고 기대함. 또한, CPU와 MCU를 이미지 분석과 같은 다른 작업에 재활용할 수 있는지 궁금해함. 'Ingenuity'의 임무 역사는 완전한 사전 계획보다는 실험의 중요성을 강조하는 강력한 근거라고 평가함.
     * 한 사용자는 지구상의 드론들이 몇 십 번의 비행을 견디지 못하는 것과 비교하여, 태양계를 건너 72회의 비행을 한 것이 인상적인 엔지니어링이라고 언급함.
     * 마지막으로 한 사용자는 드론을 날리는 개인 경험을 바탕으로, 72회의 비행은 블레이드를 손상시키지 않고 수행하기 어려운 일이라며 'Ingenuity'의 성취를 높이 평가함.
"
"https://news.hada.io/topic?id=13049","카기(Kagi) 검색 서비스, 유료 회원 2만 명 돌파","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     카기(Kagi) 검색 서비스, 유료 회원 2만 명 돌파

KagiHome 블로그 이야기: 첫 2만 명의 회원 축하

     * Kagi 커뮤니티는 오늘 2만 명의 유료 회원을 달성했으며, 전 세계 1,500여 가정이 포함됨.
     * 처음 몇 줄의 코드와 대기업을 대체할 수 있는 검색 회사의 아이디어로 시작하여 사용자 중심의 지속 가능한 방식으로 성장함.
     * 커뮤니티는 항상 Kagi의 미션 중심에 있었으며, 어려운 시기에도 지지와 사랑을 보내준 회원들에게 감사함.

초기 Kagi 팀, 2년 전

     * Kagi 팀은 커뮤니티를 중심으로 미션을 수행해왔으며, 회원들의 지지로 인터넷을 새롭게 만드는 데 기여함.
     * 회원들의 지지가 없었다면 오늘날의 Kagi가 존재할 수 없었을 것임.

상품점 출시 예정

     * 올해 상품점을 출시할 예정이었으나, 예상보다 빨리 2만 명을 달성하고 서류 작업에 시간이 걸려 일정이 조정됨.
     * 상품점이 8주 후에 오픈하면 처음 2만 명의 Kagi 회원에게 무료 티셔츠와 스티커 팩을 제공할 예정(배송비 제외).
     * 티셔츠는 4가지 디자인 중 선택 가능하며, 사이즈는 선착순임.

품질에 대한 Kagi의 노력

     * Kagi는 '하드 모드' 정신으로 고품질과 세심한 주의를 기울여 티셔츠 제작에 임함.
     * 여러 대형 업체가 사용하는 인기 있는 상품 제공업체들과 협력을 시도했지만, 품질 기준을 충족시키지 못함.
     * 세르비아의 작은 마을에 있는 인쇄소와 다시 협력하여 2만 개의 티셔츠를 제시간에 성공적으로 제작함.

상품 운영의 도전

     * 독일에 사업체를 설립하여 티셔츠를 수입하고, 창고에 보관하며, 재고 물류를 연결하고 전 세계로 배송하는 과정이 필요함.
     * 웹사이트와 백엔드 데이터베이스를 구축해야 하며, 결국 상품 제작 운영을 전체적으로 소유하게 됨.
     * 이 모든 과정은 초기 지지자들에 대한 감사의 표시이며, 회원 커뮤니티 지원이 보람 있고 의미 있는 일임.

감사의 마음과 다음 목표

     * Doggo 티셔츠를 입는 것은 놀라운 경험이며, 회원들의 지지에 감사함.
     * 다음 목표는 5만 명의 회원 달성으로 설정함.

   GN⁺의 의견:
     * Kagi는 사용자 중심의 지속 가능한 검색 서비스를 제공하며 빠르게 성장한 스타트업으로, 초기 지지자들에 대한 감사의 마음을 티셔츠와 스티커 팩을 통해 표현하는 것이 인상적임.
     * 이러한 행사는 회원들과의 강한 커뮤니티 유대를 강조하고, 회사의 성장과 함께 회원들을 기념하는 방식으로 회원들에게 긍정적인 경험을 제공함.
     * Kagi의 상품점 프로젝트는 단순한 마케팅 이상의 의미를 지니며, 회사의 성장과 회원들의 지지가 어떻게 상호 작용하는지를 보여주는 좋은 예시임.

        Hacker News 의견

     * 한 사용자는 몇 달 전에 Kagi로 전환했으며, 이전에는 DuckDuckGo와 Google을 사용했다고 함. Google 검색 결과의 질이 최근 몇 년간, 특히 2023년에 현저히 떨어졌다고 지적함. 기술적인 주제에 대한 의미 있는 결과를 찾기 어려워졌으며, 대부분 AI 생성이나 SEO 스팸 웹사이트만 나온다고 함. Kagi는 '옛날' Google 검색을 연상시키며, 결과가 의미 있고 관련성이 높으며, 사이트를 차단하거나 강조하는 등의 맞춤 설정 옵션을 제공한다고 함. AI 기능에 대해서는 확실히 말할 수 없지만 잘 진행되고 있다고 들었다고 함. Kagi의 파워 유저는 아니지만 다른 검색 엔진보다 훨씬 나은 결과를 얻고 있으며, 월 구독료가 가치가 있다고 생각한다고 함.
     * Kagi 고객인 또 다른 사용자는 Kagi가 투자자로부터 모금한 자금의 거의 1/3을 20,000개의 티셔츠 제작 및 무료 배포에 사용하는 것이 회사의 몰락으로 이어지지 않기를 바란다고 함.
     * 한 행복한 고객은 Kagi의 URL 재작성 규칙을 발견했으며, 이를 통해 Reddit을 '옛날' Reddit으로 자동으로 열고 Boost 문서를 최신 버전으로 열 수 있다고 함. 이 검색 엔진이 자신과 같은 사람들을 위해 만들어진 것 같다고 느낀다고 함.
     * Kagi로 전환한 지 한 달 된 사용자는 처음에는 Kagi에 대한 열광이 과장된 것처럼 느껴졌지만, 실제로 사용해보니 Kagi가 매우 좋고 가치가 있다고 함. Google을 사용할 때 잃었던 '검색하면 원하는 것을 찾을 수 있다'는 기대감을 되찾았다고 함. AI 기능이 시장 점유율을 얻기 위해 비용 이하로 제공되고 있으며 티셔츠에 많은 돈을 쓰는 것이 걱정되지만, 나중에 다른 서비스로 갈아탈 수 있으므로 크게 걱정하지 않는다고 함.
     * 첫 20,000명의 고객에게 20,000개의 티셔츠를 무료로 배포하는 것은 좋은 보상이지만, Kagi는 이를 통해 브랜드 인지도를 크게 높일 기회를 놓치고 있다고 지적함. 이미 Kagi에 만족하는 사람들이 브랜드 홍보대사가 될 수 있을 텐데, 티셔츠 디자인에 Kagi 이름이 어디에도 없어서 사람들이 티셔츠 출처를 알기 위해 노력해야 한다고 함.
     * 검색 쿼리 앞에 !code나 !expert를 붙여서 AI에게 연구를 맡길 수 있는 기능이 게임 체인저라고 생각하는 사용자가 있음. AI를 통한 통찰력을 얻는 것이 더 이상 작업 흐름을 방해하지 않으며, 검색 결과는 Google과 동등하거나 더 좋다고 함.
     * 한 달 전에 가입한 사용자는 'Google이 아닌' 서비스가 처음으로 자신에게 맞는 것 같다고 함. 결과가 탄탄하고 인터페이스가 깔끔하며, 광고 없는 제품을 지원하는 것이 좋다고 느낀다고 함.
     * 한 사용자는 Kagi가 투자자 자금의 33.33% 또는 $220k를 티셔츠 인쇄에 사용했다는 것을 읽고 놀라움을 표함.
     * Kagi의 로고가 'k'가 아닌 'g'인 이유와 Google과의 상표권 침해 소송 위험을 고려해야 하는지에 대해 의문을 제기하는 사용자가 있음. 20,000명의 유료 회원 중 한 명으로서, 이 기사를 읽고 Kagi 티셔츠를 입고 싶은 마음이 생겼고, 로고가 어떻게 생겼는지 신경 쓰게 되었다고 함.
     * Kagi의 연말 비디오 요약과 토론이 많은 질문에 답하고 제품과 그 미래에 대한 깊은 통찰력을 제공한다고 말하는 사용자가 있음. 비디오를 시청할 것을 추천함.
"
"https://news.hada.io/topic?id=13148","독일보다 큰 PDF 제작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             독일보다 큰 PDF 제작
"
"https://news.hada.io/topic?id=13077","HN 소개: Pong Wars","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            HN 소개: Pong Wars

GN⁺의 의견

   이 글은 특정한 기사의 내용을 요약하는 것이 아니라, 단순히 ""day 487 | night 537""이라는 정보와 ""Koen van Gilst""라는 제작자 이름, 그리고 깃허브 소스 링크를 포함하고 있음. 이 정보만으로는 글의 중요성이나 흥미로운 점을 파악하기 어려움. 그러나 이 정보가 의미하는 바를 추측해보면, ""day 487 | night 537""은 어떤 프로젝트의 진행 일수를 나타낼 수 있으며, Koen van Gilst는 이 프로젝트의 개발자일 가능성이 있음. 깃허브 소스 링크는 이 프로젝트의 코드나 관련 자료를 공유하는 곳일 것임. 이 정보가 중요하고 흥미로운 이유는 다음과 같음:
     * 프로젝트의 진행 상황: ""day 487 | night 537""이라는 표현은 프로젝트가 상당히 장기간에 걸쳐 진행되고 있음을 나타냄. 이는 프로젝트의 규모가 크거나 복잡함을 시사할 수 있음.
     * 개발자의 기여: Koen van Gilst가 프로젝트에 기여한 것으로 보이며, 이는 개발자 개인의 업적이나 기술적 기여도를 나타낼 수 있음.
     * 오픈 소스 참여: 깃허브 소스 링크가 제공되었다는 것은 이 프로젝트가 오픈 소스일 가능성이 있으며, 다른 개발자들이 참여하거나 학습할 기회를 제공함을 의미함.

   이 정보가 구체적인 맥락 없이 제공되었기 때문에, 독자들에게는 프로젝트의 성격이나 목적에 대한 추가적인 정보가 필요할 것임.

        Hacker News 의견

     * 사용자는 이러한 종류의 것들에 크게 매료되었으나, 이것들을 분류하고 분석할 장르 용어를 모르기 때문에 ""이러한 종류의 것""이라고 부름. 게임 알고리즘에서 영감을 받았지만 게임은 아니며, 콘웨이의 ""라이프 게임""도 잘못된 명칭임. 애니메이션처럼 보이지만 스크립트로 작성된 것은 아님. 실제 세계에서는 데이비드 C. 로이와 같은 사람이 자신의 예술을 ""운동 조각""이라고 부름. 알고리즘 모션 픽처? 게임 시뮬레이터? 자율적인 자동 기계?
          + 트윗 링크: nicolasdnl의 트윗 (nitter 링크)
          + 인용: ""끝없는 싸움 #genuary23 #genuary #genuary2024. 이 아이디어는 원래의 것은 아니며, 이전에 본 적이 있지만, 정확히 기억나지 않음.""
          + 싸움이 끝없이 계속됨을 언급하며, 이를 수학적으로 증명할 방법이 있는지 궁금해함.
     * 이것은 정말 멋짐. 공이 소유한 영역의 크기 또는 그 제곱근에 비례하여 속도를 조정하는 것이 흥미로울 것임. 현재로서는 공이 소유한 영역이 작아질수록 같은 속도로 충돌 횟수가 증가함.
     * OP의 Mastodon 게시물도 참조: hachyderm.io의 게시물
     * 3가지 색상이 있으면 흥미로울 것임. 다른 두 색상이 하나를 구석으로 몰아넣으면, 작은 공간 때문에 빠르게 블록이 제거되어 패배의 위기에서 빠르게 회복됨.
     * contranoid.com 링크 제공.
     * C++와 Qt Scene Graph를 사용하여 이것의 구현을 학습 경험으로 진행한 사례 공유: KDE의 warpong
     * 이것이 어떤 오래된 8비트 컴퓨터에서도 완벽하게 실행될 수 있다는 사실에 아름다움이 있음. 간단하지만 매혹적임.
     * 실제 패들이 있다면 어떨까? 왼손 모드(A,Z 사용) 대 오른손 모드(K,M 사용)?
     * 마치 영혼을 위한 거울을 들여다보는 것 같음. 단지 점과 정사각형일 뿐인데, 왜 이렇게 드라마틱하게 느껴지는지.
"
"https://news.hada.io/topic?id=13146","지적인 호기심을 가진 사람들을 위한 뉴스레터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        지적인 호기심을 가진 사람들을 위한 뉴스레터

     * 과학, 기술, 수학, 역사, 문화, 언어 등 다방면에 걸친 지식을 전달하는 뉴스레터
     * 이미 올라온 110개의 글을 읽을 수 있으며, 매주 1개의 글이 업데이트
     * Tom Whitwell의 '내가 X년에 배운 52가지' 리스트를 재밌게 읽은 사람이라면 재밌게 읽을 만한 주제들
          + 소에게 자석을 먹이는 이유
          + 일주일의 시작은 일요일인가 월요일인가
          + 2013년까지 파리에서는 여성이 바지를 입으면 불법이었다 등
     * 무료로 제공되며 현재 유료 티어가 존재하지 않음

   재밌네요 ㅋㅋ

   예전에 엔하위키 보던 재미를 메일로...!

   재밌네요ㅋㅋㅋㅋ 소에 자석을 먹이다니

   완전 재미있네요. 'ㅁ 'b
"
"https://news.hada.io/topic?id=13061","웹 기반 지리공간 데이터 편집기 Placemark, 오픈소스로 전환","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 웹 기반 지리공간 데이터 편집기 Placemark, 오픈소스로 전환

     * Geospatial Data를 위한 유연한 웹기반 편집기, 변환기, 시각화 도구
     * 유료 서비스로 운영하다가 접고 오픈소스로 전환
     * 10+ 이상의 다양한 데이터 포맷 지원하며 변환도 가능
     * 실시간 협업 편집 기능 제공
"
"https://news.hada.io/topic?id=13080","Brave 브라우저용 AI 비서 Leo, 이제 Mixtral 8x7B LLM을 기본으로 사용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Brave 브라우저용 AI 비서 Leo, 이제 Mixtral 8x7B LLM을 기본으로 사용

     * Leo 는 개인 정보 보호 AI 브라우저 어시스턴트
     * 브라우저 업데이트(v1.62)를 통해 Leo 의 기본 대규모 언어 모델(LLM)로 Mixtral 8x7B를 통합
     * Mixtral 8x7B는 지난해 12월 Mistral AI에서 출시한 오픈 소스 LLM으로, 뛰어난 속도와 성능으로 이미 폭넓게 사용중
     * 또한, 보다 명확한 온보딩, 컨텍스트 컨트롤, 입력 및 응답 형식, 전반적인 UI 개선에 중점을 두고 Leo 사용자 환경을 몇 가지 개선
     * Mixtral은 이제 모든 Leo 사용자의 무료 버전과 프리미엄 버전(월 $15)의 기본 LLM임
"
"https://news.hada.io/topic?id=13048","사고나 문제 해결에 뇌가 필요 없다 – 단순 세포도 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    사고나 문제 해결에 뇌가 필요 없다 – 단순 세포도 가능

인지 능력은 뇌가 없어도 가능함

     * 플라나리아라는 단순한 생물이 뇌를 잃어도 기억을 유지할 수 있음을 보여줌.
     * 세포들이 전기장의 미묘한 변화를 기억의 형태로 사용할 수 있다는 것이 밝혀짐.
     * 이러한 발견은 생명체의 인지 능력이 뇌에만 국한되지 않음을 시사함.

관련 이야기

     * 다양한 분야의 연구자들이 뇌가 아닌 세포 덩어리에서도 인지 능력의 특징을 발견함.
     * 로봇공학자들은 인지 능력이 뇌의 발달보다 몸의 중요성을 먼저 인식하는 것에서 시작됐다고 봄.
     * 식물과 단세포 생물도 복잡한 문제 해결 능력을 보여줌으로써 인지 능력에 대한 새로운 이해를 제공함.

식물의 인지 능력

     * 식물은 주변 환경을 놀라울 정도로 잘 감지하고 반응함.
     * 식물은 빛, 소리, 촉각 등 다양한 자극에 대해 적절히 대응함.
     * 식물의 이러한 행동은 전기 신호를 통해 조절됨.

단세포 생물의 인지 능력

     * 슬라임 몰드와 같은 단세포 생물은 뇌가 없음에도 불구하고 복잡한 문제 해결 능력을 보임.
     * 이러한 생물들은 환경에 대한 정보를 저장하고 이를 바탕으로 행동을 결정함.

세포의 기억 저장 능력

     * 기억은 뉴런 간의 연결망으로만 저장되는 것이 아니라 RNA와 같은 분자를 통해 다른 세포에도 저장될 수 있음.
     * 세포들은 자신의 구조와 유전자 조절 네트워크를 조정하여 경험을 저장하고 나중에 이를 활용할 수 있음.

바이오전기를 통한 세포 간 소통

     * 세포들은 바이오전기를 통해 정보를 저장하고 공유함.
     * 바이오전기는 세포들이 복잡한 생체 구조를 만들어내는 과정에서 중요한 역할을 함.

의학적 응용 가능성

     * 바이오전기를 이해하고 조절하는 것은 암 치료, 장기 재생 등에 응용될 수 있음.
     * 바이오전기 패턴을 조절함으로써 종양을 제거하거나 장기를 재생시키는 연구가 진행 중임.

인공 지능과 로봇공학의 적용

     * 인지 능력의 기본적인 이해는 인공 지능과 로봇공학에 새로운 접근 방식을 제공함.
     * 로봇이 실제 세계와 상호작용하며 학습하는 '구현된 인지' 개념이 주목받고 있음.

인지 능력의 새로운 이해

     * 인지 능력은 생명체가 직면한 문제를 해결하는 능력에서 발전함.
     * 생명체는 진화 과정에서 특정 문제를 해결하기 위한 기계가 아니라 문제 해결 기계를 만들어냄.

   GN⁺의 의견:
    1. 이 기사는 생명체의 인지 능력이 뇌에만 국한되지 않고, 신체의 다른 부분, 심지어 단세포 생물에서도 발견될 수 있음을 보여줌으로써, 인지 과학에 대한 우리의 이해를 확장시키는 중요한 내용을 담고 있음.
    2. 바이오전기를 통한 세포 간 소통과 기억 저장 능력은 의학 분야에서 암 치료, 장기 재생 등의 새로운 치료법 개발에 혁신적인 가능성을 제시함.
    3. 인공 지능과 로봇공학에서의 적용 가능성은 기술 발전에 있어서 인간의 인지 방식을 모방하는 것에서 벗어나, 생명체의 기본적인 인지 능력에서 영감을 받아 새로운 형태의 지능을 개발하는 데 도움이 될 것임.

        Hacker News 의견

     * 생체 전기에 대한 경고
          + '생체 전기'라는 용어는 세포 내의 전하 그라디언트와 화학 그라디언트의 미묘한 차이를 포착하지 못함.
          + 외부 전기 전압을 적용하여 생물학적 시스템에 영향을 줄 수 있지만, 이는 무차별적인 방법임.
          + 세포벽은 화학적으로 선택적이며, 칼슘과 나트륨 채널을 통한 탈분극이 일반적인 신경 세포의 활동보다 훨씬 정밀함.
          + 치환에 대한 경고
          + 시스템에 영향을 줄 수 있다는 것과 그 방법이 원인이라는 것은 다름.
          + RNA를 이용해 Aplysia의 기억을 전달하는 예시에서, 기억은 즉시 전달되지 않고 RNA가 감각 세포에 영향을 줘 민감도를 높이는 데 시간이 필요함.
          + 신경 연결이 충분하다면, 관련 RNA를 제거해도 동물은 훈련된 기억을 유지함.
          + 다양한 시스템이 여러 시간대에 걸쳐 협력하여 우리가 관찰하는 행동을 만들어냄.
     * Levin의 사상 확산
          + 생물학/의학 분야에서 세포 및 조직 수준의 지능에 대한 관점이 새롭게 다가옴.
          + 이러한 관점은 유전적이거나 생화학적/호르몬적인 것으로만 설명되던 기존 의학 사고에 틈을 만듦.
          + 더 세밀한 의료 치료법에 대한 새로운 기회가 될 수 있음을 기대함.
     * Sean Caroll의 Mindscape 팟캐스트
          + 복잡한 시스템이 내부 상태를 유지하며 주변 세계를 나타내고 미래 사건을 예측하는 모델을 가짐.
          + 세포는 세계의 매우 원시적인 모델을 가지고 있으며, 예상되는 사건에 대비하여 내부 균형을 유지함.
     * 문제 해결과 사고의 차이
          + 뇌는 문제를 해결하는 데 필요하지 않을 수 있으나, 사고를 위해서는 필요함.
          + 뇌와 같은 구조 없이는 사고라기보다는 사전 프로그래밍된 행동 반응에 가까움.
     * Michael Levin의 연구
          + Michael Levin의 연구는 지능, 마음, 의학에 대한 이해를 혁신할 잠재력을 가짐.
          + 유전자를 수정하지 않고도 세포에 새로운 심장을 성장시킬 수 있음.
          + 고대 신비주의자들이 지적한 것처럼 지능은 존재의 근본적인 것으로, 우주와 시간처럼 중요하거나 그보다 더 근본적일 수 있음.
     * 생명의 본질과 인식
          + 모든 세포는 주변 환경을 지속적으로 평가하고, 무엇을 받아들일지 결정하며, 다음 단계를 계획해야 함.
          + 인식은 생명을 가능하게 하는 것이며, 진화에서 나중에 나타난 것이 아님.
     * 집단 지능
          + 모든 지능은 집단 지능이며, 모든 인지 시스템은 부분으로 구성됨.
          + 인간뿐만 아니라 식물, 다른 동물, 심지어 전 세계 인간 사회도 일종의 의식을 가질 수 있음.
     * 점액 곰팡이
          + 점액 곰팡이는 단일 세포로 매우 크게 자랄 수 있으며, 맨눈으로 볼 수 있을 정도의 크기와 무게를 가짐.
     * 의식의 필요성
          + Peter Watt의 'Blindsight'에서처럼 고급 문제 해결을 위해 의식이 필요하지 않으며, 실제로 방해가 될 수 있음.
     * 환경과 문제 해결
          + 뇌는 환경과 그 문제들을 더 단순한 구조가 '해결'할 수 있는 것으로 변환하는 역할을 함.
          + 세포는 제한된 맥락에서 문제를 해결할 수 있으며, 세포 그룹은 더 복잡한 문제를 해결할 수 있음.
"
"https://news.hada.io/topic?id=13150","Show GN: 보기 힘든 유튜브 영상과 논문을 요약해주는, Lilys AI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Show GN: 보기 힘든 유튜브 영상과 논문을 요약해주는, Lilys AI

   안녕하세요!
   유용하지만 영어로 되어있거나 너무 길어서, 보기 힘들었던 유튜브나 논문, 다들 하나쯤 있지 않으신가요?
   Lilys AI는 유튜브, PDF, 영상파일을 요약해, 가장 빠르게 정보를 소화할 수 있도록 돕는 도구입니다.

   한 번 사용해보시고 후기를 알려 주시면 열심히 발전시켜보겠습니다!
   저희 팀에 관심이 있으신 엔지니어분들은 커피챗도 좋습니다!

   https://lilys.ai/

  1. 차별점

     * 신뢰도 : 요약의 근거가 되는 원문을 링크시켜, 거짓말하는 GPT의 신뢰도 문제 해결
     * 안정성 : 자막이 없는 영상 등 다양한 케이스에 대해 처리해 안정적 품질 유지
     * 템플릿 : 요약노트, 스크립트, 블로그 글 변환 등 상황에 맞는 다양한 템플릿
     * 다양한 디바이스 지원 : 데스크탑웹, 모바일웹, 카카오톡 채널 지원

  2. 사용자 반응

     * 팀원 2명으로 제품 출시한지 3달만에 11만 사용자 트래픽
     * 시밀러웹 기준 한국 1위 유튜브 요약 서비스
     * D+1 Retention 53% 돌파

  3. 사용한 기술

     * 프롬프트를 여러 단계로 나누고 체인으로 연결하는 기술로, GPT-3.5로도 GPT-4보다 좋은 품질 달성
     * GPT3.5, Whisper Large, DeepL 등 AI모델 사용

  4. 활용 사례

     * 해외 테크 컨퍼런스 유튜브 영상 요약
     * 논문 PDF 요약
     * 회의록 요약
     * 가지고 있는 영상 파일 업로드 후 요약

   크롬 확장으로 있으면 매우 편할 것 같네요.

   생각보다 잘 요약해줘서 유용하게 쓰고 있습니다. 다만, 웹버전은 구글이나 네이버 로그인만 지원하고, 카톡에서는 카톡으로만 로그인되어서.. 양쪽 계정이 통합이 안되는게 불편하네요..

   요약노트를 보니까 유튜브 영상에 전혀 없는 내용이 작성되는 버그가 있습니다.

   버그가 아니라 hallutination이려나요

   유튜버가 업로드한 자막이 없으면 위스퍼를 사용하고 자막이 있는 경우 그 자막을 활용하나요?

   다 좋은데 firefox에서 웹페이지가 안열리는 게 불편하더군요..

   비슷한 앱 만들어보려다가 이앱 퀄리티 보고 포기했던 기억이 있네요 ㅋㅋ 넘 유용하게 잘 쓰고 있습니다

   모바일에서 검은 화면 무한로딩 문제, 화면 사이즈 안맞는 문제 등등 보완할 기 많아서 유료화하기까지 한참 시간이 될 것 같아 다행

   해외 거주자입니다. 핸드폰 번호 인증에서 막혔네요. :(

   어제 몇번 써봤습니다만 그럭저럭 괜찮긴 하더라구요.

   다만 음성인식이 잘못 된 부분은 고칠 수 있는 여지를 주면 좋을 것 같습니다.
   https://lilys.ai/digest/225001?videoId=V4Ymuwp7gsM
   물론 발음의 문제긴 하겠지만, Dot Product를 ""Not Product""나 ""다프로덕트""로 인식한 채로 요약이 이뤄져서, 이걸 완성본으로 간주하기에는 좀 아쉽긴 하거든요.

   그 외에는 영어로 된 세미 영상도 잘 인식해서 해석&요약해주는게 좋았습니다.
   https://lilys.ai/digest/225024?sId=q67z7PTGRi8

   잘사용하고 있습니다.. ^_^ 감사합니다.

   Lilys 생성 AI프로덕트중에 젤 잘쓰고있는 유저입니다. 맨날 씁니다. !!!

   감사합니다! 사용하시다 불편하거나 더 필요한 점 있으시면 말씀해주세요!

   Safari 사용하여 접속 시 404가 나옵니다. 이하는 상세입니다.
   Code: NoSuchBucket
   Message: The specified bucket does not exist

   이용에 불편함을 드려 죄송합니다! 오늘 오후에 신기능을 업데이트 하던 중 약 10분간 장애가 발생했습니다. 앞으로 배포할 때 더 조심하겠습니다! 감사합니다!

   파이어폭스로 접속 시 페이지가 아예 안뜨네요

   현재 크롬, 사파리 브라우저에 최적화되어있습니다!

   그것과 별개로 생긴지 얼마 안된 계정들만 이 서비스를 칭찬하고 유사 서비스를 깎아내리는 모습이 보이기는 하네요 ㅋ.ㅋ

   그러게요... 서비스가 아무리 좋아도 이런 모습은 보기 좋지 않네요. @_@

   https://news.hada.io/comments?userid=eifjklwkj ㅋㅋㅋ

   어차피 다들 카피캣일 것 같은데...아무튼 카피캣인지 아닌지는 관심없고 파이어폭스에서도 되게 해주세요. 코얼리는 파이어폭스에서도 되네요.

   지금은 파이어폭스 잘 됩니다... mac os M1 8GB Sonoma이고요.

   수정되었나 보네요, 감사합니다.

   릴리스가 논문요약도 하는군요?

   네 :) 메인화면에서 url 입력창 좌측 버튼을 눌러 인풋 타입 수정이 가능합니다!
"
"https://news.hada.io/topic?id=13036","플랫폼 구축에 프로덕트 접근방식 취하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         플랫폼 구축에 프로덕트 접근방식 취하기

     * 프로덕트 마인드셋을 플랫폼에 적용하는 방식과 플랫폼을 프로덕트로 다루는 방식
     * 프로덕트 마인드셋은 소프트웨어를 일회성 프로젝트가 아닌 계속 진화하는, 고객 중심 프로덕트로 봄
     * 프로덕트 마인드셋의 핵심 원칙:
          + 첫째, ‘고객 중심 경험’을 만드는 데 집중
          + 둘째, 사용자 피드백에 기반해 MVP를 릴리즈하고, 제품을 혁신하는 ‘반복 개발’을 진행함
          + 셋째, 사용자 피드백에 적극적으로 귀를 기울이고, 데이터를 사용해 그들의 니즈를 이해하며 결정하는 ‘데이터 기반 의사 결정 방식’을 취함
          + 넷째, 다양한 전문 지식이 있는 팀이 협업해 프로덕트를 향상하는 ‘부서 간 협업’을 수행함
     * 플랫폼을 프로덕트로 다룰 때 고려할 사항:
          + 사용자 중심 디자인
          + 피드백 루프
          + 변화하는 플랫폼
          + 문서와 훈련 자료
          + 커뮤니티 참여
          + 정기 업데이트와 릴리즈
"
"https://news.hada.io/topic?id=13068","Rclone이 파일을 클라우드 스토리지에 동기화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Rclone이 파일을 클라우드 스토리지에 동기화

Rclone 파일 동기화 소개

     * Rclone은 클라우드 스토리지에 파일을 관리하는 커맨드라인 프로그램임.
     * 70개 이상의 클라우드 스토리지 제품을 지원하며, S3 오브젝트 스토어, 비즈니스 및 소비자 파일 스토리지 서비스, 표준 전송 프로토콜을 포함함.
     * 유닉스 명령어인 rsync, cp, mv, mount, ls, ncdu, tree, rm, cat 등의 강력한 클라우드 버전을 제공하며, 쉘 파이프라인 지원과 --dry-run 보호 기능을 포함한 친숙한 문법을 사용함.

Rclone의 기능

     * 파일의 타임스탬프를 보존하고, 모든 시간에 체크섬을 검증하여 데이터를 안전하게 관리함.
     * 제한된 대역폭, 간헐적인 연결 또는 할당량에 의해 제한된 전송을 마지막으로 성공적으로 전송된 파일부터 재개할 수 있음.
     * 서버 측 전송을 사용하여 가능한 로컬 대역폭 사용을 최소화하고, 로컬 디스크를 사용하지 않고 다른 제공자 간에 전송함.
     * 암호화, 압축, 청크, 해싱, 결합을 적용하기 위해 로컬 및 클라우드 파일 시스템을 래핑하는 가상 백엔드를 제공함.
     * Windows, macOS, Linux, FreeBSD에서 디스크로 로컬, 클라우드 또는 가상 파일 시스템을 마운트하고, SFTP, HTTP, WebDAV, FTP, DLNA를 통해 이들을 제공함.

Rclone 지원 제공자

     * 1Fichier, Amazon S3, Google Drive, Microsoft OneDrive 등 다양한 클라우드 스토리지 제공자를 지원함.
     * 표준 프로토콜인 WebDAV나 S3를 기반으로 하는 많은 다른 제공자들도 바로 사용 가능함.

Rclone 사용 사례

     * 클라우드 스토리지에 파일을 백업(및 암호화)하고 복원(및 해독)하는 데 도움을 줌.
     * 클라우드 데이터를 다른 클라우드 서비스나 로컬로 미러링하거나, 클라우드로 데이터를 마이그레이션하거나, 클라우드 스토리지 벤더 간에 이동함.
     * 다양한 클라우드 스토리지를 디스크로 마운트하고, 클라우드 스토리지에 보관된 데이터를 분석하고 계정화함.

GN⁺의 의견

     * Rclone은 다양한 클라우드 스토리지 서비스와의 호환성과 강력한 파일 관리 기능으로 인해 ""클라우드 스토리지의 스위스 군용 칼""로 불릴 만큼 유용함.
     * 사용자들이 클라우드 데이터를 백업, 동기화, 마이그레이션하는 복잡한 작업을 간단한 커맨드라인 명령어로 수행할 수 있게 해주는 점이 특히 중요함.
     * 오픈소스 소프트웨어로서 개발자 커뮤니티의 지원을 받으며, 다양한 사용 사례에 대한 경험이 풍부한 지원 커뮤니티를 갖추고 있어 사용자와 개발자 모두에게 도움이 됨.

        Hacker News 의견

     * rclone에 대한 애정을 표현하며, 기부 페이지에 아내에게 꽃을 사주기 위한 기부를 요청하는 내용이 인상적이었다고 언급함. 이제 rclone을 전업으로 할 수 있게 되어 기쁘다고 덧붙임.

     rclone은 사랑으로 만들어진 순수 오픈소스 프로젝트임. 기부 페이지에 대한 요청이 있었고, rclone 개발은 사랑하는 아내와 함께하는 시간을 빼앗기 때문에, 기부금은 아내를 행복하게 할 꽃과 예쁜 것들을 사는 데 사용될 것임.
     * rclone이 클라우드 스토리지를 로컬 디스크로 마운트할 수 있으며, 특히 쿠버네티스에서 유용함을 언급. 폴더 내 파일이 많을 때는 속도가 느릴 수 있지만, 클라우드 스토리지를 프로젝트에 쉽고 빠르게 활용할 수 있는 방법임. 또한, rclone은 끝단간 암호화(end-to-end encryption)를 지원하여, 마운트된 드라이브에 넣은 모든 것이 암호화되어 Dropbox 폴더 등에 저장됨. Dropbox와 같은 서비스들이 아직 네이티브 e2e 지원을 하지 않기 때문에 이 기능이 유용함.

     rclone은 클라우드 스토리지를 로컬로 마운트하고, e2e 암호화를 제공하여 보안성을 강화함.
     * rclone의 ncdu 명령어가 가장 좋아하는 기능이라고 언급. 대부분의 클라우드 공간 제공업체들이 폴더와 하위 폴더가 실제로 차지하는 공간을 보여주지 않는 문제를 rclone ncdu가 해결해줌.

     rclone의 ncdu 기능은 클라우드 스토리지의 폴더별 사용 공간을 확인할 수 있게 해줌.
     * rclone을 매일 사용하며, sshfs를 대체하는 경우도 있고, 홈 서버의 아카이브 공유를 rsync.net으로 푸시하거나, 가족 구글 계정에서 사진을 아카이브로 가져오는 등 다양한 용도로 활용함을 설명.

     rclone은 다양한 상황에서 유용한 도구로 활용됨.
     * 백업을 위해 Restic을 살펴보라고 권장하며, Rclone과 Restic이 함께 잘 작동한다고 언급.

     Rclone과 Restic은 백업을 위해 함께 사용하기 좋음.
     * rclone의 홈페이지가 체크섬을 항상 검증한다는 점을 자랑스럽게 언급하는 것을 높이 평가함. 클라우드 스토리지 옵션 간 동기화 시 체크섬 검증의 중요성을 강조.

     rclone은 데이터 무결성을 위해 체크섬 검증을 항상 수행함.
     * rclone이 다양한 스토리지 백엔드를 지원하며, crypt 백엔드를 통해 어떤 스토리지 백엔드도 암호화할 수 있다고 설명.

     rclone은 다양한 스토리지 백엔드와 암호화 기능을 제공함.
     * Proton Drive API를 역공학하여 Rclone용 플러그인을 만든 사례를 재미있는 사실로 소개. 현재 이 방법이 리눅스에서 Proton Drive를 사용할 수 있는 유일한 방법임.

     Proton Drive API를 역공학하여 리눅스에서 사용 가능한 Rclone 플러그인 개발.
     * rclone이 많은 다양한 사용 사례에 유용하다고 언급하면서도, AWS SDK를 사용하지 않아 일부 .aws/config 설정을 사용할 수 없는 한계가 있음을 지적. 또한, 문서에 유지되지 않는 기능(캐싱 등)과 실험적인 기능에 대한 경고가 있지만, 구체적인 한계를 명시하지 않는 점을 언급함.

     rclone은 다재다능하지만, 모든 백엔드 기능을 지원하지 않으며, 문서에는 유지되지 않는 기능에 대한 경고가 있음.
     * 내장된 웹 GUI(실험적)와 RcloneBrowser 프로젝트를 발견했으며, GUI가 필요할 때 유용하다고 언급.

     rclone에는 실험적인 웹 GUI와 RcloneBrowser 프로젝트가 있어 GUI가 필요할 때 도움이 됨.
"
"https://news.hada.io/topic?id=13047","구글 크롬, 3가지 생성형 AI 기능 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        구글 크롬, 3가지 생성형 AI 기능 추가

     * M121 부터 실험적인 생성형 AI 기능이 추가됨
     * “Organize Similar Tabs” 기능으로 열린 탭들을 자동으로 그룹화하여 추천하고 적용 가능
     * 테마 변경시에 ""Create with AI"" 기능으로 입력한 프롬프트에 따른 배경 화면 생성. 애니메이션 및 무드 등의 추가 디테일 지정
     * ""Help me write"" 기능으로 몇 단어만 입력하면 그 기반으로 글 초안을 작성해줌
"
"https://news.hada.io/topic?id=13073","절단 및 조각을 위한 CNC 레이저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          절단 및 조각을 위한 CNC 레이저

CNC 레이저 (절단기, 조각기)

     * CNC 레이저 절단기와 조각기에 대한 정보를 수집한 글로, 예산에 맞는 레이저 절단기에 대한 정보 제공.
     * 제품 추천이나 제휴 링크는 없으며, 일부 제품의 만족스러운 사용자 경험 공유.
     * 자료 추가나 수정을 위한 연락처 제공, 지속적인 업데이트와 확장을 목표로 함.

소개

     * 1980년대부터 저렴해진 CNC 기기와 달리, 레이저 절단기는 오랫동안 비싸고 부피가 크며 많은 전력을 소모.
     * 현재는 $1000 미만으로 기능적인 CNC 레이저 절단기와 조각기를 구입할 수 있음.
     * 두꺼운 강철을 절단하는 산업용 레이저와 달리, 목재 등 다양한 재료를 절단하고 적절한 배경에 텍스트나 이미지를 조각하는 데 뛰어난 성능.
     * 안전 교육 필요성과 안전 조치에 대한 중요성 강조, 사용 전 충분한 정보 습득의 중요성 강조.

역사

     * 레이저 절단기는 1965년부터 존재했으나, 1980년대 중반까지는 매우 비쌌음.
     * 초기 레이저는 인상적인 광학 기술을 사용했으나, 반도체 산업의 발전으로 비용이 크게 감소함.
     * 취미나 소규모 비즈니스를 위한 CNC 레이저 작업에 가장 적합한 것은 다이오드 레이저와 산업용 기계의 소형 버전.

구매 가능한 제품

     * 아시아에서 제조된 다양한 회사의 레이저 기기가 있으며, 품질과 파워가 다양함.
     * 실용적인 관점에서는 유용한 도구이지만, 안전 관점에서는 사용하기에 적합하지 않음.
     * 제품을 키트나 출발점으로 생각하는 것이 더 생산적일 수 있음.

    광학 출력 파워 & 헤드 구조

     * 레이저 절단기의 광학 출력은 와트로 측정되며, 실제 절단 능력을 결정하는 중요한 요소.
     * 헤드 내부의 다이오드 배열은 절단 깊이와 스팟 크기에 영향을 미침.
     * 더 많은 광학 파워와 헤드의 기하학적 구성이 기계 선택에 결정적임.

    파장

     * 레이저의 파장은 색을 정의하며, 다이오드 레이저는 주로 400~470nm 범위의 보라색에서 파란색에 해당.
     * 금속 절단에는 더 긴 파장이 더 적합하지만, 다이오드 레이저로는 금속을 신뢰성 있게 절단하기 어려움.

    절단 베드 면적

     * 더 큰 절단 베드는 더 큰 작업물 제작 가능하나, 더 많은 공간 필요.
     * 사용자의 작업 크기에 따라 적합한 베드 크기 선택이 중요.

    에어 어시스트

     * 절단기에는 반드시 에어 어시스트가 필요하며, 절단 깊이를 높이는 데 효과적임.

    정확도

     * 일반적인 레이저 절단기의 정확도는 약 0.1mm로, 가격 대비 매우 정확함.

    절단 속도 및 이동 속도

     * 절단 속도는 레이저 헤드 파워에 의해, 이동 속도는 기계의 무게와 모터의 안정성에 의해 제한됨.

    인클로저

     * 레이저 절단기는 반드시 인클로저가 필요하며, 적절한 환기와 안전 조치가 필요함.

    레이저 유형

     * 다이오드, 파이버, CO2 레이저 중 필요, 예산, 공간에 따라 선택 가능.

    조각 vs 절단

     * 절단은 일반적으로 같은 재료를 사용할 때 조각보다 더 많은 파워가 필요함.

레이저 절단기 설치 방법

     * 레이저 절단기는 반드시 인클로저가 필요하며, 환기가 잘되는 공간에서 사용해야 함.
     * 안전한 사용을 위해 레벨 조정과 정사각형 지지대가 필요함.

레이저 운전

     * 대부분의 레이저는 USB를 통한 직렬 프로토콜로 호스트 컴퓨터와 통신하며, G-Code라는 언어를 사용함.
     * G-Code를 직접 프로그래밍하는 것은 번거로우므로, 디자인 소프트웨어와 레이저 드라이버 소프트웨어를 사용함.

디자인 제작

     * 레이저 절단이나 조각을 위해서는 먼저 디자인이 필요함.
     * 디자인 소프트웨어는 다양하며, 사용자의 기술 수준과 목표에 따라 적합한 패키지를 선택함.

재료

     * 다양한 재료를 절단하거나 조각할 수 있으며, 기계의 파워, 레이저의 이동 속도, 광학의 상태, 재료의 상태에 따라 결과가 달라짐.
     * 모든 재료가 레이저 절단에 안전한 것은 아니므로, 안전한 재료만 사용해야 함.

   GN⁺의 의견:
    1. CNC 레이저 절단기와 조각기는 취미 생활과 소규모 제작 활동에 혁신을 가져왔으며, 이 글은 관련 장비를 구매하고 사용하는 데 필요한 광범위한 정보를 제공함.
    2. 안전에 대한 강조는 사용자들이 이러한 도구를 취급할 때 반드시 고려해야 할 중요한 요소임을 상기시켜줌.
    3. 다양한 재료와 절단 능력에 대한 상세한 정보는 사용자들이 자신의 프로젝트에 적합한 장비를 선택하는 데 도움이 될 것임.

        Hacker News 의견

     * 자체 제작한 대형 레이저 커터에 대한 설명
          + 한 사용자가 직접 설계한 60x78인치 크기의 대형 레이저 커터에 대해 설명함. 이 커터는 몇 백 달러로 제작 가능하며, 주로 재봉용 패브릭을 자르는 데 사용됨.
          + 초저가 설계이며, 아파트에서 추가 공간을 차지하지 않도록 이동식 가이드레일과 얇은 합판 침대를 사용해 설계됨. 사용하지 않을 때는 침대 위에 카펫을 덮어둘 수 있음.
          + 이 컨셉은 작동하지만, 가이드레일이 약간 끈적거리고 스텝을 잃어버리는 문제가 있어 개선이 필요함. 프로젝트는 기본적으로 포기된 상태이지만, 다른 사람들이 영감을 받아 미래 버전을 개발하기를 바람.
          + 라즈베리파이 기반의 패턴 스캐너가 내장되어 있어, 옷을 스캔하여 복사본을 만들거나 종이 재봉 패턴을 스캔하는 데 사용할 수 있음.
     * 레이저 안전성에 대한 의견
          + 다이오드 레이저가 훈련받지 않은 사람들에게 비교적 안전하다는 주장에 대해 반대 의견 제시.
          + 다이오드 레이저와 튜브 레이저 모두 즉각적인 실명을 초래할 수 있으며, 다이오드 레이저는 가시광선 스펙트럼에 있어 특수 차단 재료가 필요함.
          + CO2 레이저는 가시광선에 투명하지만 적외선 파장을 차단하는 플라스틱이 흔하고 쉽게 구할 수 있어 차단 재료 선택이 간단함.
          + 레이저 커터를 사용할 때는 반드시 보호용 안경을 착용하고, CO2 레이저의 안전성이 더 높다고 언급함.
     * 정확도와 반복성에 대한 설명
          + 위치 정확도에 대한 이야기이지만, 반복성 없이는 정확도가 대부분 의미가 없음을 지적.
          + 단방향 정확도와 양방향 정확도, 그리고 반복성의 차이를 설명하며, 반복성이 없으면 스텝 모터나 벨트가 백래시로 인해 오류를 누적할 수 있음을 언급.
          + 반복성을 보장하기 위해서는 헬리컬 랙 + 피니언, 볼스크류 등의 메커니즘이 필요하다고 강조함.
     * 레이저 안전에 대한 추가 조언
          + 레이저의 파장에 맞는 안전 고글을 신뢰할 수 있는 곳에서 구입하고, 기계가 작동 중일 때 항상 착용할 것을 권장.
          + 물체가 불에 탈 때 레이저를 빠르고 쉽게 차단할 수 있는 방법을 마련할 것을 조언함.
          + PVC를 절대로 자르지 말 것을 당부하며, 이는 염소 가스를 발생시켜 사용자나 기계에 해를 끼칠 수 있음을 경고함.
     * CNC 가이드 추천
          + 레이저 커팅에 대한 훌륭한 분석에 덧붙여, CNC 기계와 3D 프린터를 사용한 소량 제작에 대한 최고의 참고 자료로 ""Guerrilla Guide to CNC""를 추천함.
     * CO2 레이저 커터 관련 비즈니스 인사이트
          + CO2 레이저 커터를 사용하는 비즈니스에서는 무거운 사용으로 인해 가스가 저하되어 CO2 레이저 튜브를 자주 교체해야 함을 언급.
          + 안정적이고 신뢰할 수 있는 레이저 튜브를 위한 정확한 가스 조합이 독점되어 있어, 가스를 단순히 재충전하는 것이 불가능함을 지적.
          + 이러한 독점으로 인해 많은 튜브가 쓰레기로 버려지고, 필요 이상으로 많이 생산되는 불필요한 낭비가 발생한다고 비판함.
     * 레이저 CNC 기계 시장의 소프트웨어 부족 문제
          + 최근 몇 년간 펨토초 레이저를 사용한 레이저 텍스처링 분야에서 붐이 일어나고 있으나, 고급 레이저 CNC 기계 시장에서는 소프트웨어 부족과 CAM 프로그래밍과 실행의 분리가 없다는 문제를 지적.
          + 밀링 머신과 같은 다른 기계에서 사용되는 G-code와 같은 표준화된 코드가 없어, 다양한 소프트웨어에서 생성된 코드를 다른 기계에서 실행할 수 없음을 언급함.
     * 텀블러 조각에 대한 팁
          + 텀블러 조각에 어려움을 겪는 경우, 레이저가 텀블러의 양쪽 가장자리에서 일관된 초점을 유지하도록 도와주는 도구를 사용하는 팁을 공유함.
          + 이 도구를 'The Tumbler Trick™'이라고 부르며, 자신의 웹사이트에 DIY 지침을 게시함.
     * 레이저 커팅 시 발생하는 냄새 문제
          + 레이저로 자른 목재에서 발생하는 타는 냄새가 오래 지속되는 문제에 대해 논의함.
          + 이 냄새를 피하는 방법에 대한 좋은 팁이 있는지 질문함.
     * 적절한 환기의 중요성
          + 레이저 커터 사용 시 발생할 수 있는 유해 가스로 인한 위험을 예방하기 위해 적절한 환기의 중요성을 강조함.
          + 환기가 제대로 이루어지지 않아 사고가 발생한 사례를 링크를 통해 언급함.
"
"https://news.hada.io/topic?id=13059","웹 기반 지리 공간 데이터 편집기인 Placemark, 이제 오픈 소스로 전환","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              웹 기반 지리 공간 데이터 편집기인 Placemark, 이제 오픈 소스로 전환

Placemark 애플리케이션 소개

     * Placemark는 지리공간 데이터를 가져오기, 생성하기, 내보내기, 시각화하기, 게시하기를 할 수 있는 웹 애플리케이션임.
     * 다양한 지리공간 데이터 형식과 알고리즘 기반의 편집 작업(예: 버퍼링) 및 그리기 기반의 작업을 지원함.
     * 이 도구를 사용하는 YouTube 동영상이 많으며, 아카이브된 웹사이트에는 이전의 마케팅 자료가 있음.

초기 오픈 소스 릴리스 주의사항

     * 이 코드베이스의 초기 오픈 소스 릴리스로, 설정에 대한 도움은 가능하지만, 종단 간 통합 지원은 제공할 수 없음.
     * 복잡한 웹 애플리케이션이며 작성된 환경에서는 작동하지만 모든 환경에서 작동하는 것은 아님(예: Windows에서는 거의 확실히 작동하지 않음).
     * 다른 환경에서 설정을 용이하게 하거나, 기능을 선택적으로 만들거나, 기타 개선사항이나 수정사항에 대한 PR을 환영함.

기술 스택

     * 애플리케이션의 기술 스택에 대한 노트는 docs/architecture.md에서 확인할 수 있음.

Docker를 이용한 실행

     * Docker 파일 예시가 있으며, docs/docker에서 세부사항을 볼 수 있음.

Render에서 실행

     * render.yaml 파일에 의해 구성되며, Render에서 호스팅하는 것이 가장 빠른 실행 방법일 수 있음.
     * Railway, Heroku, Flightcontrol과 같은 유사한 호스팅 설정에서도 작동할 수 있음.

설치

     * 프로젝트는 yarn을 사용하여 구축되었으며, 마지막으로 테스트된 yarn 버전은 1.22.19임.
     * npm이나 다른 패키지 관리자로 설치할 경우 다른 종속성이 발생할 수 있음.

환경 변수

     * 개발 시 .env 파일을 읽고, 생산 환경에서는 환경 변수가 필요함.
     * 시작할 때 환경 변수를 확인하므로, 누락된 변수가 있으면 애플리케이션이 충돌할 수 있음.
     * 필요한 환경 변수 목록은 app/lib/env_server.ts와 app/lib/env_client.ts에서 확인할 수 있음.

필수 및 선택적 환경 변수

     * 필수: GitHub, Replicache
     * 선택적: Posthog, Cloudflare, Postmark, WorkOS, Stripe, CampaignMonitor, Logtail
     * 자체 호스팅 설치에서는 Stripe와 같은 일부 서비스가 필요하지 않을 수 있으며, 이를 선택적으로 만드는 것이 가능함.

인프라

     * Placemark는 애플리케이션(이 저장소)과 Postgres 14(또는 그 이상) 데이터베이스 두 개의 서버에 의존함.

도메인

     * 웹에서 Placemark는 세 개의 도메인 아래에서 제공됨: app.placemark.io, api.placemark.io, API
     * API는 앱과 동일한 웹 서버에서 제공되며, Cloudflare Worker를 사용하여 api.placemark.io에서 app.placemark.io로 요청을 프록시함.

로컬 SSL 테스트

     * SSL 하에서만 작동하는 기능을 테스트해야 하는 경우에 필요함(예: iPhone에서 지리 위치 테스트).
     * Tailscale의 tailscale cert를 사용하고 인증서를 이 디렉토리로 이동시킨 후 caddy start를 실행함.

Stripe 사용

     * Stripe는 이 프로젝트의 선택적 종속성이 되고 있음.
     * 웹훅 프록시는 ./_scripts/webhook-proxy.js에 있으며, 선택적으로 실행할 수 있음.

GN⁺의 의견

     * Placemark는 지리공간 데이터를 다루는 데 필요한 다양한 기능을 제공하는 강력한 웹 애플리케이션으로, GIS 전문가나 개발자에게 유용함.
     * 오픈 소스로 제공되어 커뮤니티의 기여를 받을 수 있으며, 다양한 환경에서의 사용을 위한 개선이 가능함.
     * Docker와 같은 컨테이너화 도구를 사용하여 쉽게 배포하고 실행할 수 있으며, 클라우드 호스팅 서비스를 통해 빠르게 배포할 수 있는 장점이 있음.

        Hacker News 의견

     * 한 사용자가 geojson.io를 만들었는데, 이는 가끔 사용하는 훌륭한 도구임. geojson 테스트에 아주 좋음. Placemark가 회사로서 성공하지 못한 것은 안타까움. 하지만 이제 오픈소스로 제공되어서 대단함.
     * geomob의 사람들이 약 2년 전에 톰 맥라이트와 팟캐스트 인터뷰를 진행함. 그때 Placemark를 막 출시했었음.
     * Placemark가 오픈소스로 전환되고 서비스를 종료함. (72일 전)
     * 오픈소스로 제공해줘서 감사함. chattymaps 도메인을 소유하고 있고, 거기서 지도 기반 채팅 앱을 계획 중임. Placemark를 살펴보면 그 프로젝트에 박차를 가할 수도 있음.
     * 이 도구를 사용할 일이 있었으면 좋겠음. GIS 도구들은 보통 이렇게 세련되고 직관적이지 않음. Placemark를 기반으로 유능한 데이터 뷰어를 만들 수 있을 것 같지만, 그렇게 하면 기능의 절반은 무시하게 될 것임.
     * 실제로 사용해본 사람들의 이야기를 듣고 싶음. 어떤 용도로 사용했는지, 기존 도구를 대체했는지, 아니면 새로운 종류의 작업에 사용했는지 궁금함.
     * 작동하는 데모를 볼 수 있는 곳이 있는지 궁금함.
     * 매우 세련된 프로젝트임. 창립자는 현재 Val town을 구축하는 데 도움을 주고 있음. 이것도 꽤 멋져 보임.
     * ArcGIS가 너무 지배적이고 업무 흐름에 깊숙이 들어와 있어서, 다른 일과 종사자들은 충분하지 않음. 이런 제품은 생태계와 '킬러 앱'이 필요함.
     * umap-project.org와 어떤 형태의 상호 이용이나 적어도 친구 프로젝트가 되는 것이 흥미로울 것임.
     * G Suite 앱처럼 보일 수 있는 훌륭한 소식임.
"
"https://news.hada.io/topic?id=13140","Y 콤비네이터 CEO 개리 탄의 온라인 분노 발언으로 인한 감독관들과 경찰에 대한 위협 증가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Y 콤비네이터 CEO 개리 탄의 온라인 분노 발언으로 인한 감독관들과 경찰에 대한 위협 증가

샌프란시스코 감독관들, 위협적인 편지 받아

     * 샌프란시스코의 세 명의 감독관이 화요일에 자택에서 위협적인 편지를 받음.
     * YCombinator의 CEO이자 진보적 정치인들을 축출하기 위한 캠페인에 큰 기부를 한 Garry Tan이 온라인에 죽음을 느리게 맞이하길 바란다는 내용을 게시한 후, 두 명의 감독관이 경찰에 신고함.
     * Tan은 Aaron Peskin, Connie Chan, Myrna Melgar, Shamann Walton, Hillary Ronen, Dean Preston, Ahsha Safaí 등 7명의 감독관을 언급하며 ""느리게 죽어라""라고 적었음.

위협적인 편지와 반응

     * Peskin, Preston, Melgar는 Tan의 발언을 인용하며 그들과 그들의 가족에게 죽음을 바라는 편지를 받음.
     * Chan은 자신과 자녀에 대한 위협을 느낌.
     * 이 사건은 _San Francisco Chronicle_에 의해 처음 보도됨.
     * 편지에는 Tan의 웃는 얼굴이 찍힌 봉투가 포함되어 있었음.
     * Preston은 Tan의 특별한 적개심의 대상이었으며, Tan은 Preston의 상대 후보에게 5,000달러를 기부하고 그를 축출하기 위한 노력에 추가로 50,000달러를 기부할 것을 약속함.

정치적 연관성과 후속 조치

     * Tan은 샌프란시스코의 온건한 정치 인물들을 자신의 집에서 주최함.
     * Philhour와 Chandler는 Tan의 발언을 비판함.
     * Peskin은 공적 기부금 수령자에 대한 공개 요구를 검토할 것을 시의회에 요청함.
     * Tan의 발언은 법적으로 죽음의 위협으로 간주되지 않음.

GN⁺의 의견

     * 이 사건은 정치적 견해의 표현이 어떻게 위험한 수준으로 치달을 수 있는지 보여줌.
     * Tan의 발언은 법적으로 죽음의 위협으로 간주되지 않았지만, 정치적 기부자의 영향력과 책임에 대한 논의를 촉발함.
     * 이 기사는 정치적 의견 표현의 한계와 공적 인물에 대한 위협이 민주주의에 미치는 영향에 대해 사람들에게 중요한 통찰을 제공함.

        Hacker News 의견

     * 경영진이 자신들을 공인으로 여기지 않는 것에 대한 흥미로움

     경영진이 자신들의 단점에 대해서는 공인으로 여기지 않으면서 이점에 대해서는 공인으로 여기는 것에 대한 흥미로움. 고위직에 있는 CEO라면 최소한 공개적인 소셜 미디어 게시물을 신중한 사람에게 확인하거나 전문가를 통해 검토해야 한다는 것이 명백함. 그럼에도 불구하고 계속 같은 실수를 반복함.
     * Y Combinator의 정치적인 경영진에 대한 비판

     Y Combinator에 정치적으로 바쁜 경영진이 아닌 사람들이 필요한 시점임. 이것이 전체 인큐베이터와 스타트업 장면에 나쁜 영향을 미침. Paul Graham 시절의 Y Combinator는 지나갔으며, Sam Altman이 이끌었던 시절도 이미 지남. 현재의 Y Combinator는 A16z와 같은 사모펀드/VC들과 크게 다르지 않으며, 자신들이 잘 모르는 분야에 손을 대고 있음. Paul Graham이 창업 정신에 집중하고 혁신적인 회사를 만드는 것에 초점을 맞춘 옛날로 돌아갈 수 있기를 희망함.
     * 해커뉴스의 검열되지 않는 보도에 대한 감사

     YC News에 대한 여러 가지 좋은 점들이 있지만, 이 포럼에서 보도가 검열되지 않을 것이라는 확신을 가질 수 있다는 것에 대해 진심으로 감사함.
     * 리더십에 대한 높은 기준의 중요성

     술에 취한 것이 학대에 대한 변명이 될 수 없으므로, Tan이 술에 취했다는 이유로 이 문제에서 벗어날 수 있게 해서는 안 됨. Tan은 자기성찰과 아마도 치료가 필요하며, 우리는 리더들에게 정신 건강에 대한 더 높은 기준을 적용해야 함.
     * 저널리즘의 문제점을 상징하는 기사

     Garry가 트위터에 쓴 내용을 방어하는 것은 아니지만, 사건의 핵심인 편지를 보낸 것은 아님. 어떤 사람이 트위터 글을 인쇄하여 정치인의 집 주소로 우편으로 보내고, ""저널리스트""는 트윗에 초점을 맞추고, 트윗을 쓴 사람이 부자라는 점에 대해 수천 단어를 씀. 또한, 첫 번째 기사에서 강조된 그의 술병 가격을 언급하는 것은 관련된 사소함의 수준을 나타냄. 실제 이야기가 있을 수 있지만, 이것은 그 이야기가 아니며, ""누군가가 트위터에서 후회할 만한 말을 했다""는 것 이상의 이야기가 명확하지 않음.
     * 소셜 미디어 사용에 대한 조언

     손에 음료를 두 개 들고 있어야 트윗을 할 수 없다는 중요한 이유.
     * 일반인의 직업 상실 위험에 대한 언급

     만약 일반인이 이런 일을 했다면 직업을 잃었을 것임.
     * 정치적 의견 표현의 이상한 방식

     ""이 메일은 정치적 의견을 전달하기 위해 보내졌습니다. 위협할 의도는 없었습니다.""라고 결론지은 편지는 ""저작권 침해 의도가 없습니다""라는 면책 조항이 있는 YouTube 동영상을 떠올리게 함.
     * ""감독관""이라는 용어에 대한 설명

     ""San Francisco supervisors""에 대해 궁금해하는 사람들을 위해 ""감독관""이 무엇인지 설명함.
     * 공인의 부적절한 행동에 대한 방어에 대한 놀라움

     여기 사람들이 그의 행동을 방어하기 위해 얼마나 많은 노력을 기울이는지 믿을 수 없음. 영향력 있는 사람들이 공개적으로 다른 사람들이 고통 속에서 죽기를 바라는 것을 부르짖어서는 안 되는 이유가 있음. 우연한 랩 가사이든 아니든, 누군가가 실제로 그 말을 듣고 행동에 옮길 수 있음. 이것은 매우 무책임하고 위험함.
"
"https://news.hada.io/topic?id=13130","Verge의 애플 비전 프로 리뷰: 마법 같은 경험, 그렇지 않을때 까지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Verge의 애플 비전 프로 리뷰: 마법 같은 경험, 그렇지 않을때 까지

     * Apple Vision Pro는 지금까지 만들어진 최고의 소비자용 헤드셋이지만, 그것이 문제임
     * 가격은 $3,499부터 시작하며, ""공간 컴퓨팅""의 시작이라고 애플이 주장함
     * 애플은 이 헤드셋을 통해 현실 세계에 앱과 정보를 겹쳐서 현실을 증강하려는 큰 야망을 가지고 있음
     * 팀 쿡(Tim Cook)을 비롯한 애플은 증강 현실이 가상 현실보다 훨씬 더 가치 있을 것이라고 주장해 왔음
          + 오랫동안 AR을 향해 준비함. iOS의 AR 도구및 LiDAR 심도 스캐너등
          + 주변 공간에서 작동하는 컴퓨터를 구축하려는 Apple의 첫 번째 시도
          + 목표는 Vision Pro가 Apple의 장치 생태계에서 Mac 및 iPad와 나란히 배치되어 실제 작업을 완료할 수 있는 완전한 장치가 되는 것

The Good

     * 디스플레이는 기술적 경이로움을 자랑하며, 지금까지의 최고의 비디오 패스스루를 제공함
     * 손과 눈 추적 기능은 큰 도약을 이룸
     * 애플 생태계와의 원활한 작동
     * 공간 곳곳에 창을 배치하는 것이 재미있음

The Bad

     * 매우 비싼 가격
     * 비디오 패스스루는 여전히 비디오 패스스루이며 흐릿할 수 있음
     * 손과 눈 추적은 때때로 일관성이 없고 답답할 수 있음
     * 페르소나는 기괴하고 다소 무서울 수 있음
     * 그 안에서는 꽤 외로움을 느낄 수 있음

하드웨어

     * 애플은 Vision Pro를 VR 헤드셋으로 생각하지 않기를 원하지만, 사실상 VR 헤드셋임
     * 헤드셋을 착용하면 완전히 시야를 차단하고, 카메라를 통해 주변 세계의 3D 비디오 피드를 보여줌
     * Vision Pro는 애플의 디자인 언어를 자연스럽게 확장한 마그네슘과 탄소 섬유, 알루미늄 케이스로 제작되어, 예상보다 작아보임
     * Vision Pro의 전면 디스플레이는 다른 사람들과의 격리를 방지하기 위한 시도임
     * 무게가 12.9인치 아이패드 프로 무게여서, ""당신의 얼굴을 위한 아이패드""임
     * 배터리를 포함하고도 513g인 Quest3 보다 무거움
     * 외부 배터리는 353g임. 추가로 산다고 핫스왑은 불가. 분리하는 순간 전원이 완전히 차단됨

디스플레이

     * 애플은 Vision Pro 내부의 디스플레이를 매우 자랑스럽게 생각
     * 총 2,300만 픽셀의 작은 MicroOLED로, 크기는 7.5마이크로미터에 불과하며, 이는 적혈구 크기 정도로 디스플레이 기술의 큰 도약
     * 텍스트를 읽을 수 있을 만큼 선명하고, 영화에도 어울리게 밝음
     * 공장에서 색상을 캘리브레이션 해서 그런지 생생하고 색상이 정확함
     * 비디오 패스스루는 정말 좋음
     * 카메라가 보는 것과 디스플레이에 나타나는 것 사이의 대기 시간이 12ms에 불과
     * 문제는 카메라는 여전히 카메라이고 디스플레이는 여전히 디스플레이라는 것
          + 머리를 움직이면 모션 블러를 쉽게 볼 수 있음
     * 정확한 숫자를 알려주지 않지만 Vision Pro의 시야는 확실히 Quest 3의 110도 수평 각도보다 작음.

제어

     * 애플은 눈과 손 추적 제어 시스템에 대해 매우 자랑스러워하며, 이는 다른 소비자용 추적 시스템보다 훨씬 앞섬
     * 처음 몇 번 사용할 때는 마법 같은 느낌이지만, 몇 번 더 사용하면 그 마법 같은 느낌이 사라짐
     * 무언가를 제어하려면 그것을 바라봐야 하며, 실제로 매우 주의를 산만하게 하며 이는 다른 컴퓨터와는 다른 경험을 제공함
     * 실제보다 약간 더 정밀한 시선 추적 시스템을 위해 설계된 것 같음
          + 많은 컨트롤이 시스템 주위를 빠르게 이동할 수 없을 정도로 너무 작고 서로 너무 가까움
          + 보고, 원하는 것을 보고 있는지 확인한 다음 탭해야 함, 그렇지 않으면 잘못된 것을 클릭하게 될 수도 있음
     *

     It works until it doesn’t. It’s magic until it’s not.
     ""작동하지 않을 때까지는 작동합니다. 그렇지 않을 때까지는 마법과도 같습니다.""
     * 키보드와 마우스는 맥을 직접 제어하고, 아이폰의 멀티터치는 휴대폰을 직접 제어하는 것처럼 느껴지게 만들게 노력해왔음
     * 하지만, 당신의 눈과 손은 비전프로를 직접 제어하지 않음
          + 카메라는 눈과 손을 관찰 하고 이를 입력으로 전환하며 때로는 해석이 완벽하지 않음

페르소나

     * 애플의 3D 페르소나 시스템은 매우 이상하고 기괴함
     * 페르소나는 베타 레이블을 붙인 것이 이해가 가며, 사용하기에 방해가 되지 않을 정도로 개선될 때까지는 시간이 필요함

공간 카메라

     * Vision Pro로 사진을 찍는 것은 추천하지 않음
     * 셔터 버튼을 한 번 누르면 6.5메가픽셀의 정사각형 사진을 찍을 수 있음(2560x2560)
     * 사진은 비디오에 최적화된 작은 카메라 센서에서 나온 것처럼 보임
     * 비디오는 30fps 2200x2200 정사각형 비디오를 촬영
     * iPhone 15 Pro Max로 공간 영상을 촬영하고 Vision Pro 에서 3D로 시청하는 것은 매우 설득력 있음
     * 내 딸의 비디오를 몇 개 찍었고, 다른 아빠들처럼 나도 그 비디오를 영원히 계속해서 볼 수 있을 것
          + 일종의 유령 같은 흰색 안개 속에서 재생되며 전체적인 효과는 믿을 수 없을 만큼 씁쓸함
          + 짧은 기억을 되살릴 수 있지만 헤드셋을 쓴 사람은 혼자이므로 다른 사람과 공유할 수 없음

visionOS

     * Vision Pro는 visionOS를 실행하며, 이는 iPadOS를 기반으로 하고 있음
     * iPad를 기반으로 시작하는 것은 애플에게 엄청난 이점을 제공함
          + 성숙한 iPadOS 기능 전체와 대부분의 거대한 iPad 앱 라이브러리 부터 시작
     * Vision Pro가 얼굴을 위한 iPad라고 계속 말하는 것은 웃기지만, 현재 앱 세트에 관해서도 완전히 틀린 것은 아님
          + 대부분은 iPad 앱처럼 작동하며 홈 화면에는 실제 iPad 앱으로 가득 찬 ""호환 앱""이라는 폴더가 미리 로드되어 있음
     * Vision Pro 앱 세계에는 이미 논란이 있음
          + Netflix, Spotify 및 YouTube와 같은 일부 대규모 개발자는 앱이 Vision Pro에서 실행되도록 허용하기 전에 기다리기로 결정했으며, iPad 앱 실행도 허용하지 않음
          + 항상 그렇듯이 개방형 웹은 Apple 개발자 정치의 압력 완화 밸브 역할을 하며 Vision Pro의 Safari는 iPad Safari의 유능한 파생버전임
     * 이상한 점은 Vision Pro의 Safari가 웹 기반 3D 경험과 상당히 단절되어 있다는 것
     * YouTube의 거대한 VR 비디오 라이브러리가 Vision Pro에서 전혀 작동하지 않는 이유를 Apple에 물었더니 ""기본적으로 지원하기에 충분하지 않다""고 말함
     * VisionOS와 iPadOS의 가장 큰 차이점은 iPadOS는 앱을 정렬하는 방법과 한 번에 실행할 수 있는 앱 수에 대해 많은 제약이 있지만, VisionOS는 완전히 자유롭게 떠다니는 창이라는 점
          + 원하는 만큼 많은 앱을 열고 공간 내 원하는 곳에 배치할 수 있음
     * 하지만, 이런 윈도우와 경험을 남과 공유하는 기능은 없음
          + 같은 방에 앉아 Vision Pro 헤드셋을 착용한 두 사람이 동시에 공간에 떠 있는 동일한 사물을 볼 수는 없음
     * Mac 디스플레이 공유가 정말 잘 작동하고 Handoff 및 Continuity와 같은 Apple 생태계 트릭이 이러한 맥락에서 마법 같이 잘 동작
     * Vision Pro에서 영화를 보는 것은 정말 재미있음
          + 각 눈에 별도의 이미지를 전송하기 때문에 진정한 3D 영화 감상이 가능
     * 실제 VR 게임이나 피트니스 앱은 없음

결론

     * Vision Pro는 놀라운 제품임
     * 놀라운 디스플레이와 패스스루 엔지니어링부터 전체 생태계를 사용하여 원활하게 유용하게 만들고 모든 사람이 전체 외부 배터리 상황을 거의 무시하게 만드는 것에 이르기까지 Apple만이 실제로 만들 수 있는 일종의 1세대 장치
     * 많은 아이디어가 있고, 최고의 기술들이 적용되어 있음
          + 지금까지 만들어진 최고의 비디오 패스스루 헤드셋
          + 역대 최고의 손 및 시선 추적 기능이며 마우스, 키보드 및 터치스크린이 앞으로도 수년간 무패 상태를 유지할 것
          + 그러나 작동하면 마술처럼 느껴지고 작동하지 않으면 완전히 좌절감을 주는 기술이 너무 많음
     * Vision Pro를 보는 또 다른 관점은 Apple이 이 모든 것을 알고 있지만 오랫동안 암시해 온 진정한 AR 안경을 만드는 기술은 아직 없다는 것
          + Vision Pro는 시뮬레이터나 개발자 키트와 같은 것처럼 느껴짐
          + 즉 다른 사람들과 디지털 경험을 공유할 수 있는 진정한 광학 AR 안경은 아직 나오지 않았음
          + 이러한 프레임워크에서 이 Vision Pro는 Apple이 만들고자 하는 하드웨어에 모든 리소스를 쏟아 붓는 동시에 모든 사람이 이러한 아이디어에 대해 생각하도록 하기 위해 Apple이 지금 당장 출시 할 수 있는 하드웨어임
     * Vision Pro를 한동안 사용한 후 Tim Cook이 오랫동안 말해왔던 말에 동의하게 되었음
          + 헤드셋은 본질적으로 고립되어 있음
          + 지난 10년 동안 기본적으로 일회용 게임 콘솔로 변모한 기존 VR 헤드셋의 경우에는 괜찮지만 기본 컴퓨팅 장치의 경우에는 훨씬 더 이상함

     ""Vision Pro에서 작업을 완료하고 싶지 않습니다. 나는 다른 사람들과 함께 일을 하고, 차라리 그들과 함께 있고 싶습니다.""

   상세한 요약 감사합니다. 웹에서 잘되는 XR 데모나 게임들이 안되는게 신기하긴 하네요. 퀄리티 영향도 있으려나.

   엠바고가 풀리면서 상세한 리뷰들이 나오고 있네요.
   단점들도 있지만 매력도 있는 제품 같아요.
   특히 사용성 부분에서는 앞으로 더 나아질 부분이 많을 것 같아서 기대됩니다

  Hacker News 의견

     * 첫 번째 댓글 요약:
          + Quest 2와 3에서 많은 생산적인 작업을 한 사용자로서, Apple이 추진하려는 아이디어의 큰 지지자임.
          + 그러나 이번 출시가 지난 10년간 다양한 헤드셋에서 경험한 동일한 단점들에 의해 저해되었다는 점에 실망함.
          + 렌즈 주변의 왜곡과 색수차, 밝은 환경에서 더욱 두드러지는 문제점들이 있음.
          + 이전에는 Apple의 특정 결정들, 예를 들어 OLED 디스플레이를 외부에 배치하거나, 무게 분배 문제, 외부 배터리 등을 이해하려고 했음.
          + iPhone과 같이 전체적인 조화를 기대했지만, 리뷰를 통해 그러한 기대가 충족되지 않았음을 알게 됨.
          + 초기 iPhone이 당시에 이해하기 어려운 선택을 했지만 사용성과 일체감에서 경쟁 제품을 뛰어넘었던 것처럼, 이 리뷰에서는 그러한 혁신을 보지 못함.
     * 두 번째 댓글 요약:
          + 이 리뷰는 이 제품이 자신에게 필요한 것임을 확인시켜줌.
          + 머리카락이 엉망이 되거나, 디스플레이가 현실처럼 보이지 않는다는 점, 무거워서 오랫동안 착용하기 어렵다는 점 등이 중요하지 않음.
          + 작업 중에 키보드와 마우스를 사용할 계획이며, 가상 세계는 추가 기능일 뿐 구매 이유가 아님.
          + 침대나 소파에 누워 큰 화면을 가지고 싶고, 방을 돌아다니며 Safari 창과 앱을 물리적 공간에 배치하며 새로운 주제를 공부하고 싶은 것이 전부임.
     * 세 번째 댓글 요약:
          + 이 제품과 유사한 헤드셋은 일상적으로 몇 시간씩 사용하기 위한 대중 시장에 결코 호소력이 없음.
          + 불편하고, 고립되며, 제약이 많고, 비싸고, 반사회적이며, 사용 사례는 일시적으로 인상적이지만 금방 질리게 됨.
          + 제품 범주 자체가 불만족스러움.
          + 조작이 느리고, 다른 사람과 쉽게 공유할 수 없으며, 주변에 큰 화면이 있어도 실용성이 없음.
          + iPhone과 iPad를 모두 소유한 사람들은 대부분 더 빠르고 유연하며, 준비가 더 쉬운 iPhone을 사용함.
          + 이러한 헤드셋에서 진정으로 빛날 수 있는 콘텐츠/경험을 만드는 것은 매우 어렵고 비용이 많이 들어 대부분의 앱 개발자에게는 불가능함.
     * 네 번째 댓글 요약:
          + 다른 초기 리뷰들도 있음:
               o CNET, WSJ, Tom's Hardware, CNBC 등에서 Apple Vision Pro에 대한 리뷰를 게시함.
     * 다섯 번째 댓글 요약:
          + 컨트롤러 없이는 제품이 어리석다고 언급했을 때 비판을 받았음.
          + Vive, Q2, Q3를 가지고 있으며, Q3에서 손 제스처를 사용하지만 대부분의 작업에서는 필요하지 않음.
          + 여러 화면을 사용할 수 없고, 실제 모니터보다 해상도가 낮음.
          + 데모에서 보여준 것처럼 모니터를 어디에나 추가할 수 있다고 생각했을 때 멋진 기능이라고 생각했음.
     * 여섯 번째 댓글 요약:
          + 이 제품들은 근본적으로 불쾌하고 우울함.
          + Apple과 Meta가 AR/MR의 장기적이고 일반적인 사용을 정상화하려는 시도는 최선의 경우 새로운 iPod/iPhone 열풍을 만들기 위한 시도이며, 최악의 경우 기업 감시를 진화시키고 우리의 현실 인식에 더 깊은 벽을 쌓으려는 시도임.
          + 사람들이 얼굴에 이러한 기기를 착용하고 주변을 헤매는 모습을 생각하면 블랙 미러의 어떤 에피소드보다 더 많은 공포와 슬픔을 느낌.
          + 현실과의 직접적인 접촉을 방해하는 기기에 많은 돈을 지불하는 사람들의 마음을 이해할 수 없음.
     * 일곱 번째 댓글 요약:
          + 이 제품이 대대적인 실패가 될 것 같음.
          + 발표와 주문 사이에 완전히 잊혀졌으며, Apple Watch나 iPad가 출시될 때와 달리 아무도 이야기하지 않음.
          + 사람들이 집 안에서 스키 고글을 착용하는 것을 정상화하려면 iPhone처럼 삶을 변화시킬 경험이 필요함.
     * 여덟 번째 댓글 요약:
          + Apple은 매우 유능하고 재능이 많으며 자원이 풍부하여 가장 어려운 문제를 해결하기 위해 엔지니어링에 많은 노력을 기울임.
          + 실용적인 제품을 만들 수 없다는 것을 알았지만, 혁신적으로 보이고 관련성을 유지하기 위해 제품을 만들어냄.
          + 데모에서 보여준 디스토피아적인 기능들이 왜 만들어졌는지는 확실하지 않음.
     * 아홉 번째 댓글 요약:
          + 많은 HN 사용자들이 제품의 불완전함에 안도감을 느낌.
          + 몇 가지 작은 개선으로 소비자 버전이 크게 성공할 수 있을 것 같음:
               o 무게를 절반으로 줄임.
               o 눈 TV와 같은 기믹을 제거함.
               o 헤드폰 크기의 케이스로 접을 수 있을 만큼 얇고 모듈식으로 만듦.
               o 무게가 가벼우면 자석 스트랩이 충분히 강해져서 착용과 탈착이 더 쉬워짐.
               o 가격을 $1,000 낮춤.
               o 단순히 제품을 간소화하는 것만으로도 이 제품을 어색한 너드 고글 범주에서 여행자를 위한 편안한 인터랙티브 슬립마스크로 바꿀 수 있을 것임.
"
"https://news.hada.io/topic?id=13142","마이크로소프트 엣지, 사용자 의사 무시하고 허락 없이 크롬에서 탭을 가져옴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               마이크로소프트 엣지, 사용자 의사 무시하고 허락 없이 크롬에서 탭을 가져옴

     * 마이크로소프트의 엣지 브라우저가 사용자의 동의 없이 구글 크롬 브라우저에서 열려 있는 탭과 다른 데이터를 가져오는 것으로 알려짐.
     * 이 기능은 윈도우 사용자가 엣지로 쉽게 전환할 수 있도록 하기 위한 것이지만, 사용자의 완전한 허락 없이 실행되고 있음.
     * 사용자가 마이크로소프트 계정에 로그인한 경우, 데이터가 클라우드에 동기화되어 프라이버시 문제를 야기할 수 있음.

사용자들의 불만과 문제 제기

     * 윈도우 사용자들은 지난해부터 엣지의 데이터 가져오기 기능에 대한 문제를 보고하고 있으며, 설정을 끄더라도 가져오기가 계속되는 것으로 나타남.
     * 마이크로소프트 지원 포럼과 레딧에는 예상치 못한 데이터 가져오기에 대한 여러 게시물이 있으며, 마이크로소프트 직원과 독립 고문들은 설정 확인을 권장하지만, 문제를 해결하지 못함.

윈도우 11 업데이트와 관련된 문제

     * 윈도우 11 업데이트 KB5034204 이후 엣지가 크롬 데이터를 가져오는 문제가 더욱 두드러지게 나타남.
     * 이 업데이트는 사용자에게 엣지가 다른 브라우저에서 데이터를 정기적으로 가져올 것이라고 언급함에도 불구하고, 여러 윈도우 11 사용자들이 설치 실패, 부팅 문제 등을 경험함.

마이크로소프트의 반응 부재

     * 마이크로소프트에 문제에 대한 설명을 요청했으나, 아직 구체적인 답변을 받지 못함.
     * 마이크로소프트는 다음 엣지 안정 버전 릴리스에서 이 문제를 해결할 것이라고 알려짐.

GN⁺의 의견

     * 이 기사는 마이크로소프트 엣지 브라우저가 사용자의 명시적인 동의 없이 크롬 브라우저의 데이터를 가져오는 문제를 다루고 있음. 이는 사용자의 프라이버시와 데이터 보호에 대한 중요한 이슈를 제기함.
     * 윈도우 11 업데이트와 관련된 추가 문제들은 사용자들이 운영 체제 업데이트를 할 때 주의해야 할 필요성을 강조함.
     * 마이크로소프트의 이러한 행동은 기술 회사들이 사용자 데이터를 다루는 방식에 대한 더 넓은 논의를 촉발할 수 있으며, 이는 소프트웨어 엔지니어링 및 IT 정책 결정자들에게 중요한 교훈을 제공함.

        Hacker News 의견

     * 도움 요청 및 토론 링크 공유
          + 어제의 토론 링크를 공유하며 사람들이 도움을 받을 수 있도록 함.
          + 토론 링크
     * 웹사이트 사용 경험과 관련된 문제 제기
          + 사용자가 어머니에게 웹 버전 WhatsApp을 사용하는 방법을 보여줌.
          + 로그인 후 몇 초 지나지 않아 앱 스토어에서 WhatsApp이 설치되었다는 알림이 뜸.
          + 사용자는 어떻게 이런 일이 발생했는지 확신할 수 없으나, DoH(도메인 오버 HTTPS)가 기본적으로 비활성화되어 있어서 그럴 수도 있다고 추측함.
          + 다른 댓글들을 참고하여 자신의 기억이 틀렸을 수 있음을 인정하고, 실험을 통해 재현을 시도했으나 실패함.
          + Firefox가 PWA(Progressive Web Apps)를 지원하지 않는다는 점을 언급하며 사과함.
     * 데비안 리눅스 사용자의 윈도우 경험 공유
          + 사용자는 직장에서만 윈도우를 사용하며, 그 외에는 데비안 리눅스를 선호함.
          + 윈도우를 새로 설치하고 설정해야 할 때, 계정 생성부터 작업 표시줄의 불필요한 기능들에 대해 불편함을 느낌.
          + 데비안 리눅스가 완벽하지 않고 최신 게임을 할 수 없음에도 필요한 최소한의 기능을 제공한다고 만족함.
          + 사용자는 더 많은 사람들이 윈도우에서 벗어나길 바라며, 컴퓨터가 발전하고 편리해질수록 자유를 잃는다고 생각함.
     * 사용자 동의와 관련된 법적 문제 제기
          + 사용자가 자신의 비밀번호를 마이크로소프트에 업로드하는 것에 동의했다고 주장할 수 있지만, 피싱 사이트가 비슷한 방식으로 동의를 얻는다고 해서 법적 문제가 없어지지 않음을 지적함.
     * 마이크로소프트의 프라이버시 정책에 대한 우려 표현
          + 마이크로소프트가 초기 웹 개발에서 뒤처진 것에 대한 반응으로 프라이버시 기준을 무시하고 있으며, 다른 SaaS(Software as a Service) 업체들과 비교해도 가장 제한이 없는 것으로 보임.
     * 마이크로소프트 엣지에 대한 비판적 의견
          + 마이크로소프트 엣지가 사용자에게 적대적인 소프트웨어로, 개발을 담당하는 사람들에게 책임이 있음을 지적함.
     * 기능 구현에 대한 엔지니어의 관점 궁금증
          + 이러한 통합 기능을 구현한 엔지니어들이 어떤 이유로 그것을 정당화하는지에 대한 의문을 제기함.
     * 엣지 브라우저와 윈도우 텔레메트리 데이터 공유에 대한 질문
          + 엣지를 사용하지 않아도 배경에서 자동으로 작동하는지, 수집된 데이터가 윈도우 텔레메트리에 포함되는지에 대한 질문을 함.
          + 엣지를 삭제하거나 텔레메트리를 완전히 비활성화할 수 없다는 점을 언급함.
     * 엣지 브라우저의 하드웨어 격리 기능 평가
          + 사용자가 하드웨어 격리 기능을 갖춘 윈도우에서 유일한 브라우저인 엣지를 시험해봄.
          + 설정 중 불필요한 기능들을 끄는 것에 지쳐서 포기함에도 불구하고, 기술적으로는 좋은 점이 있음을 인정함.
"
"https://news.hada.io/topic?id=13035","Show GN: 무료 AI 유튜브 동영상 요약 서비스, Corely (코얼리)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Show GN: 무료 AI 유튜브 동영상 요약 서비스, Corely (코얼리)

    1. 서비스 소개

     * AI기반 유튜브 동영상 요약 서비스
     * "" Effortlessly Grasp the Essence of Any YouTube Video ""
       유튜브 영상의 핵심만 순식간에 정리해드려요~!
       Corely의 유튜브 요약을 통해 시간은 아끼고, 이해도는 높여보세요!

    2. Corely 서비스 강점

     * 무료: 구글 로그인만 하면 영상 요약 무료로 사용 가능!
     * 빠른 요약 속도: 30분 분량 영어 영상 기준 30초 내외로 요약 끝!
     * 높은 요약 정확도: 자체 파인튜닝 모델로 어색한 비문이나 내용 상의 오류를 끊임없이 개선 중입니다!
     * 이번주의 인기 요약: 다른 사용자가 관심있을 만한 인기 콘텐츠를 제공합니다!
     * 나만의 컬렉션: 유튜브 재생목록 처럼, 관심있는 영상을 묶어서 아카이빙할 수 있어요!

    이런 분이 쓰면 좋아요!

     * AI나 테크 소식 정보를 빠르게 알고 싶은 GeekNews 사용자
     * 자기계발에 관심이 많은 직장인
     * 투자, 경제 관련 소식을 꾸준히 유튜브를 통해 소비하는 사람
     * 유튜브를 통해 새로운 지식을 학습하는 직장인, 학생

   재미있네요. 종종 들러봐야겠어요 ㅎ.ㅎ
   하나 건의하고 싶은게 있다면, 영상이나 요약글 두 UI를 분리해주시면 좋겠습니다.
   요약글 자체는 아래로 스크롤하면서 보게 되어있지만, 오른쪽에 있는 타임스탬프 버튼을 클릭하고 영상을 보고 싶으면 다시 스크롤을 올려야하는게 불편해요.
   PC에서도 모바일 너비의 UI로 보이는 것 같은데, 일정 픽셀 이상의 디스플레이에선 화면을 절반으로나눠서 왼쪽과 오른쪽에 각각 영상과 요약글이 보이고, 요약글 영역만 스크롤이 가능하게 하면 많이 편해질 것 같습니다.

   국내 서비스 중에는 tammy ai도 말씀하신 조건이랑 비슷한 것 같아요

   릴리스 ai 가 딱 그렇게 생겼어요

   아하 이쪽 서비스는 한번도 접해본적이 없어서 몰랐네요. 알려주셔서 감사합니다.

   써머리나 릴리스랑 차이가뭔가요

   국내에서는 traw나 tammy도 다 비슷하긴 하죠 써머리나 릴리스도 다 traw나 tammy 따라 만든 것 같고 코얼리도 비슷한 서비스 같아요

   그러게요 카피캣인 것 같은데 써보니까 릴리스랑 써머리가 훨씬 좋네요. 코얼리는 자막 없는 영상은 요약이 아예 안되네요

   좋네요

   긍정적인 피드백 감사합니다!

   AI를 활용한 재미있는 서비스들이 보이기 시작하네요

   ㅎㅎ Corely로 쉽고 빠르게 유튜브 속 정보를 얻어보세요

   좋은데요!
   내용 전체를 한 번에 요약하는 것은 아니고, 영상의 시간 순서로 구간을 나눠서 요약해주는 거 같네요.
   모바일에서 타임스탬프 누르면 컨텍스트 메뉴가 떠서, 재생되는 영상으로 스크롤을 옮기면 좋겠다 싶었습니다~ 요약별로 이모지 붙여주는게 깨알같네요 ㅎ

   와 날카로우시네요ㅎㅎ 피드백 열심히 반영해보겠습니다. 요약 별 이모지도 깨알 포인트 맞습니다ㅎㅎ

   많은 관심 부탁드립니다!

   코얼리에 대한 피드백/궁금한 사항이 있다면, 오픈 채팅방으로 들어와주세요~!
   오픈 채팅방 : https://open.kakao.com/o/gsojtU5f
   더 유용한 코얼리가 될 수 있도록 인사이트의 선구자가 되어주세요!

   traw.ai 가 2월 중지라고 알고 있는데 이용해보아야겠네요.

   유튜브 동영상 속 정보를 빠르게 얻고 싶으시다면 corely 한번 이용해보세요
"
"https://news.hada.io/topic?id=13106","플로리다 주 하원, 16세 미만 어린이에 대한 소셜 미디어 사용 금지 법안 승인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              플로리다 주 하원, 16세 미만 어린이에 대한 소셜 미디어 사용 금지 법안 승인

플로리다 하원, 16세 미만 소셜 미디어 금지 법안 승인

     * 플로리다 주 하원이 미국 내에서 가장 엄격한 소셜 미디어 규제 중 하나로 여겨지는 법안을 승인함.
     * 하원 법안 1은 16세 미만 어린이가 부모의 동의 여부와 관계없이 대부분의 소셜 미디어 플랫폼 사용을 금지함.
     * 해당 법안은 사용자 활동을 추적하고, 어린이가 콘텐츠를 업로드할 수 있으며, 중독성 기능을 사용하여 강박적인 사용을 유도하는 모든 사이트를 대상으로 함.

법안 지지와 반대

     * 법안은 106대 13으로 통과되었으며, 많은 민주당 의원들도 공화당 다수파와 함께 법안을 지지함.
     * 공화당의 피오나 맥팔랜드 주 의원은 소셜 미디어를 어린이들에게 ""디지털 펜타닐""이라고 비유하며 법안을 홍보함.
     * 법안은 16세 미만 어린이의 소셜 미디어 계정을 종료하고 기존 계정의 정보를 삭제할 수 있도록 함.
     * 소셜 미디어 사이트는 사용자의 나이를 확인하기 위해 ""합리적인 연령 검증 방법""을 사용해야 함.

소셜 미디어 회사와 법안에 대한 반응

     * 법안에 반대하는 이들은 이것이 제1조 및 부모의 권리를 침해한다고 주장함.
     * 메타(Meta), 페이스북과 인스타그램의 모회사는 소셜 미디어 규제는 연방 차원에서 관리되어야 하며, 미성년자의 소셜 미디어 사용에 대한 부모의 승인이 충분하다고 주장함.

소셜 미디어와 청소년 건강에 대한 관심 증가

     * 소셜 미디어 회사, 부모, 입법자, 의료 제공자들은 어린이와 소셜 미디어에 대한 접근 방식을 모색 중임.
     * 메타는 청소년을 위한 새로운 안전 조치를 발표했으며, 이는 낯선 사람으로부터의 개인 메시지 제한 및 새로운 부모 통제 기능을 포함함.
     * 뉴욕시 시장 에릭 아담스는 소셜 미디어를 ""공중 보건 위험"" 및 ""환경 독소""로 분류하고, 온라인에서 ""해로움""으로부터 청소년을 보호해야 한다고 주장함.

소셜 미디어 사용과 관련된 보건 권고

     * 미국 심리학회는 청소년이 안전하게 소셜 미디어를 사용할 수 있도록 돕기 위한 첫 번째 권고안을 발표함.
     * 미국 외과의사 총장은 소셜 미디어 사용과 청소년 정신 건강에 대한 긴급한 공중 보건 문제에 대해 경고하는 권고안을 발표함.
     * 권고안에서는 소셜 미디어 회사에게 안전과 사생활을 제품 설계에서 우선시하고 최소 연령 요건을 시행할 것을 촉구함.

GN⁺의 의견

     * 이 법안은 소셜 미디어의 영향력과 청소년의 정신 건강에 대한 사회적 관심이 증가하는 가운데 나온 것으로, 기술과 개인의 권리 사이의 균형을 찾는 데 중요한 역할을 할 수 있음.
     * 법안이 통과되면 소셜 미디어 사용에 대한 부모의 권리와 청소년의 온라인 접근에 대한 논쟁이 더욱 활발해질 것으로 예상됨.
     * 소셜 미디어의 중독성과 청소년에 미치는 영향에 대한 연구와 규제는 기술 발전에 따라 지속적으로 진화할 필요가 있으며, 이 법안은 그러한 논의를 촉진하는 계기가 될 수 있음.

        Hacker News 의견

     * 한 사용자는 연방 차원에서 소셜 미디어 규제를 지지하며, 부모들이 아이들을 소셜 미디어로부터 보호하기 위한 전략에 동의하기를 기대하는 것은 비현실적이라고 주장함. 소셜 미디어 회사들이 부모의 편에 서도록 법이 개입해야 한다고 봄.
     * 또 다른 사용자는 소셜 미디어의 정의에 따라 의견이 달라질 수 있다고 언급함. 90년대 후반의 게시판이나 채팅방, 지역 사회 웹사이트 등이 소셜 미디어에 포함되는지, 그리고 Netflix, Youtube, Podcasts와 같은 서비스의 해로움에 대해 우려를 표함.
     * 한 사용자는 정부를 신뢰하지 않으며, 플로리다 주에서 부모에게 벌금을 부과하는 것이 그 지역의 문제로 남아야 한다고 주장함.
     * 어린 시절 웹사이트들이 13세 이상인지 물었을 때, 항상 '예'라고 클릭했다는 한 사용자의 경험담을 공유함. 이는 정부가 소셜 미디어 회사를 선택적으로 기소할 계획이라는 의심을 나타냄.
     * 한 사용자는 문제의 근본은 알고리즘이 선택하는 콘텐츠를 플랫폼이 아닌 출판사로 취급해야 한다고 주장함.
     * 다른 사용자는 이 법안이 아이들을 보호하기 위한 것이 아니라 아이들을 세뇌하고 반대 의견에 대한 접근을 제한하기 위한 것이라고 의심함. 그러나 16세는 너무 늦은 나이라고 생각하며, 10세에서 13세 사이가 적당하다고 봄.
     * 한 사용자는 25년 전 컴퓨터 캠프에서 처음 이메일 계정을 만들 때 나이를 속여야 했던 경험을 회상함.
     * 소규모 정부와 부모의 결정권을 주장하는 정당이 어떻게 이 법안을 정당화할 수 있는지 이해할 수 없다고 한 사용자가 의문을 제기함.
     * 한 부모는 자녀들에게 휴대폰을 주지 않고, 집안의 인터넷을 통제하며, 주의 깊게 관찰함으로써 자녀들을 소셜 미디어로부터 멀리할 수 있었다고 보고함.
     * IT 분야에 종사하는 플로리다 주민은 이 법안이 어떻게 시행될지 궁금해하며, 소셜 네트워크 가입 시 나이를 묻는지, 애플/구글에 강화된 부모 승인을 요청하는지, 운전 면허증을 검증하는지 등의 구현 방법에 대해 의문을 제기함.
"
"https://news.hada.io/topic?id=13102","라이브러리 'libcurl'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            라이브러리 'libcurl'

--libcurl 사용하기

     * libcurl 사용 권장: 사용자들은 먼저 curl 명령줄 도구를 사용하여 원하는 전송을 시도하고, 원하는 대로 대략 작동하면 명령줄에 --libcurl [파일명] 옵션을 추가하여 다시 실행하도록 권장됨.
     * 코드 생성: --libcurl 명령줄 옵션은 제공된 파일 이름으로 C 프로그램을 생성함. 이 C 프로그램은 libcurl을 사용하여 curl 명령줄 도구가 수행한 전송을 실행함.
     * 예외와 차이점: 항상 100% 일치하지는 않지만, 사용하고자 하는 libcurl 옵션과 추가 인자에 대한 훌륭한 영감을 제공할 수 있음.

예시 코드

     * 실행 예시: curl http://example.com --libcurl example.c 명령을 실행하면 현재 디렉토리에 example.c 파일이 생성됨.
     * 생성된 코드: 생성된 코드에는 curl_easy_setopt()을 사용한 다양한 옵션 설정이 포함되어 있으며, 일부 옵션은 소스로 쉽게 생성되지 않아 사용자가 직접 구현하거나 사용하지 않을 수 있음.

GN⁺의 의견

     * libcurl의 유용성: 이 기능은 개발자들이 명령줄에서 작동하는 curl 명령을 C 프로그램으로 쉽게 변환할 수 있게 해주어, libcurl을 사용하는 응용 프로그램 개발을 가속화함.
     * 코드 생성의 장점: 자동으로 생성된 코드는 개발자가 libcurl API를 더 빠르게 이해하고 적용하는 데 도움이 될 수 있음.
     * 학습 도구로서의 가치: 초급 소프트웨어 엔지니어에게 libcurl 옵션과 네트워크 프로그래밍의 실제 적용 사례를 보여주는 좋은 학습 자료가 될 수 있음.

        Hacker News 의견

     * 브라우저의 네트워크 탭에서 관심 있는 요청을 찾아 ""curl로 복사""하는 패턴이 유용함. 이를 통해 curl 명령어를 생성하고, 해당 명령어를 사용하는 언어의 요청 코드로 변환할 수 있는 사이트(curlconverter.com)를 활용할 수 있음. curl은 다른 언어로 번역할 수 있는 ""중간 표현""과 같은 역할을 함.
     * 커맨드 라인 인터페이스에 프로그램의 소스 코드를 출력하는 플래그가 있는 것은 매우 멋진 기능임. 이는 마치 차의 후드를 열어 내부를 보여주는 것과 같아서, 작동 방식을 더 잘 이해하고 필요에 맞게 변경할 수 있게 해줌. 사용자가 원하는 대로 조정하거나 추가할 수 있어 사용자 친화적임.
     * 마이크로소프트 오피스의 비주얼 베이직 매크로가 성공한 이유 중 하나는 이와 같은 기능 때문임. 워드, 엑셀 등에서 작업을 수행한 후 생성된 매크로를 코드로 사용자의 필요에 맞게 커스터마이징할 수 있음. 이는 간단하면서도 강력한 개념이며, curl에서도 이를 볼 수 있음.
     * curl을 컴파일하기 위해서는 libcurl에 링크하도록 지시해야 함. 예를 들어 gcc에서는 -lcurl 옵션을 사용함. 이를 통해 IP 주소를 출력하고 ip_fetcher.c 파일을 생성할 수 있으며, gcc로 컴파일 후 실행 파일을 통해 IP 주소를 얻을 수 있음.
     * Hurl은 libcurl을 사용하는 오픈 소스 CLI로, HTTP 요청을 테스트하기 위해 플레인 텍스트를 사용함. libcurl의 안정성과 최상의 기능(HTTP/3 포함)을 활용하며, 요청 연결, 응답에서 데이터 캡처 및 전달, 응답 테스트(JSONPath, XPath 등)와 같은 기능을 추가함. REST/SOAP/GraphQL API에 대한 요청을 위한 문법적 편의성을 제공하지만, 핵심은 libcurl임. Verbose 옵션을 사용하면 curl 명령어를 grep할 수 있음.
     * ffmpeg에서도 이와 같은 기능이 가능하기를 바람.
     * Daniel Stenberg는 세부 사항과 개발자/사용자 경험에 매우 신경을 쓰며, 이러한 세심한 정성이 놀랍다고 평가됨.
     * Daniel Stenberg가 직접 curl 커맨드 라인 옵션 대부분을 설명하는 3시간짜리 비디오에서 이 옵션에 대해 언급됨.
     * 제출 제목에는 두 개의 하이픈(--)이 사용되어야 하며, em-dash와 하이픈(—-)의 조합은 올바르지 않음.
     * ChatGPT의 등장으로 이제 curl 실행 파일에 반쯤 만들어진 quines를 포함할 필요가 없어져 이 기능이 구식이 되었다는 AI 열성 지지자의 열정적인 의견 제시됨.
"
"https://news.hada.io/topic?id=13135","애플, 2024년에 출시될 차세대 CarPlay의 새로운 기능들을 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                애플, 2024년에 출시될 차세대 CarPlay의 새로운 기능들을 공개

     * 애플이 이번 주 웹사이트 업데이트를 통해 차세대 CarPlay를 지원하는 첫 미국 차량 모델이 2024년에 출시될 것임을 명시
     * 구체적인 시간표나 다른 국가들의 출시 일정은 제공되지 않음
     * 웹사이트의 차세대 CarPlay 섹션에서 ""2023년 말 차량 발표 예정""이 ""2024년 첫 모델 도착""으로 변경됨

iOS 17.4 베타 버전에서 발견된 새로운 CarPlay 앱 8가지

     * Auto Settings: 페어링된 아이폰 관리 및 차량 설정 조정 기능 제공
     * Car Camera: 차량의 후방 카메라 피드를 표시
     * Charge: 전기차를 위한 배터리 레벨, 충전 상태, 완충까지 남은 시간 등을 표시
     * Climate: CarPlay 내에서 차량의 기후 조절 기능에 접근하여 에어컨이나 히터의 온도, 팬 속도, 열선 시트, 열선 스티어링 휠 등을 조정
     * Closures: 차량의 문이 열렸는지 표시하며, 차량 경고 심볼도 표시할 수 있음
     * Media: CarPlay 내에서 FM 및 AM 라디오 스테이션 조절 기능과 SiriusXM 등의 미디어 옵션에 접근
     * Tire Pressure: 각 타이어의 공기압을 표시하고, 저압, 고압, 펑크 경고 제공
     * Trips: 차량의 평균 속도, 연료 효율 또는 에너지 효율, 여행의 총 시간 및 거리 등 다양한 운전 관련 데이터 제공

차세대 CarPlay의 추가 기능 및 인터페이스

     * iOS 17.4 베타 버전에서 발견된 이미지에 따르면, 차세대 CarPlay는 운전자가 차량을 끈 후 ""Goodbye"" 화면을 표시할 것으로 보임
     * 애플이 예고한 바에 따르면, 사용자는 차세대 CarPlay의 테마와 색상 스키마를 조정할 수 있으며, 계기판의 외관도 변경 가능
     * 애플은 2022년 6월에 차세대 CarPlay를 처음으로 미리 보여주었으며, 인터페이스는 특정 차량 모델과 자동차 제조사의 브랜드 정체성에 맞춰 조정될 수 있음

차세대 CarPlay를 지원할 자동차 제조사들

     * 애스턴 마틴은 2024년에 차세대 CarPlay를 탑재한 첫 차량을 출시할 것이라고 밝히며, 고급 DB12 스포츠카의 새 모델을 포함
     * 포르쉐는 구체적인 시간표나 세부 사항을 제공하지 않음
     * 차세대 CarPlay 발표 당시 애플이 언급한 자동차 제조사에는 아큐라, 아우디, 포드, 혼다, 인피니티, 재규어, 랜드로버, 링컨, 메르세데스-벤츠, 닛산, 폴스타, 포르쉐, 르노, 볼보가 포함됨
     * 애스턴 마틴이 추가된 이후 이 목록이 변경되었는지는 불분명함

기존 CarPlay 지원 차량과 차세대 기능

     * 애플은 기존의 클래식 CarPlay를 지원하는 차량에 차세대 CarPlay 기능이 제공될지 여부에 대해 언급하지 않음
     * iOS 17.4는 3월에 출시될 예정이므로, 그때 추가적인 세부 사항이 공유될 수도 있음

   애플의 CarPlay 공식 페이지 (한국어)
"
"https://news.hada.io/topic?id=13055","휴대용 EPUBs","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               휴대용 EPUBs

        Hacker News 의견

     * 전자책, 보안, LowJS 웹의 교차점에 대한 관심
          + 단일 파일, 휴대 가능한 전자책 형식이 필요하며, PDF는 텍스트 재배열이 불가능하므로 적합하지 않음.
          + 2024년의 HTML + CSS는 거의 모든 종류의 인쇄 매체를 재현할 수 있으며 텍스트 재배열도 가능함.
          + JS가 필수는 아니지만, 전자책이 기본 기능을 수행하는 데 JS가 필요하지 않아야 함. JS는 상호작용이나 책의 기능 향상이 필요할 때 사용될 수 있음.
          + 모든 스타일을 내장하는 것은 CSP를 위반할 수 있으므로, 별도의 스타일을 HTML에 상대적인 리소스로 지정하는 것이 안전함. 전자책은 다른 도메인에서 리소스를 로드하지 못하게 해야 하며, 이는 오프라인에서도 작동하고 가장 엄격한 CSP를 자동으로 준수함.
          + 전자책을 zip 파일로 배포하는 것이 적절함.
     * Nota 개발자의 EPUB 형식에 대한 기사 요약
          + EPUB 형식을 PDF 수준으로 끌어올리려는 Nota 개발자의 심도 있는 기사.
          + 이미 뷰어를 개발했으며, 기사 자체가 브라우저 기반 wasm 뷰어 포트에서 표시됨.
          + EPUB이 XHTML인 점을 고려할 때, 레이아웃을 정확히 재현할 수 있는지에 대한 문제가 있음.
          + 주요 과제는 HTML이 PDF와 같은 레이아웃 기능을 갖추기 위해 새로운 레이아웃 기능이 필요함을 시사함.
     * Bene EPUB 읽기 시스템에 대한 의견
          + 데스크탑 브라우저에서 EPUB 문서를 읽으면서 이것이 EPUB임을 인지하지 못했음.
          + 모바일에서는 헤더가 뷰포트의 더 큰 부분을 차지하기 때문에 더 분명함.
          + 문서 로딩 시 스피너가 나타나지 않았다는 점을 언급함.
     * 웹 페이지를 자체 포함된 HTML 파일로 저장하는 방법
          + Firefox용 SinglePage 애드온을 사용하여 현재 페이지 DOM을 자체 포함된 HTML 파일로 저장함.
          + 이 방법은 완벽하지 않고 브라우저의 뒤로 호환성을 완전히 신뢰할 수는 없지만, PDF나 여러 파일로 저장하는 것보다 선호함.
     * EPUB 리더와 브라우저의 차이점
          + EPUB 리더가 브라우저와 구별되는 유일한 기능은 .epub 파일(즉, zip 파일)을 디렉토리처럼 처리할 수 있다는 것임.
          + 브라우저가 zip 파일을 디렉토리처럼 처리하도록 하고, 특별한 EPUB 리더는 필요 없다는 주장이 있음.
     * Javascript 의존성에 대한 비판
          + Github 페이지가 Javascript를 요구하는 것 같으나, EPUB은 Javascript를 요구하지 않아야 한다는 상위 댓글의 의견이 있음.
          + ""ebook""을 읽을 때 HTML 마크업, CSS 등을 사용하지 않고 텍스트로 변환하여 읽는 방법을 선호함.
     * PDF 형식에 대한 비판
          + PDF는 불필요한 복잡성을 가진 끔찍한 유산 형식이며, 대부분의 사용 사례에서 인쇄보다는 전화기, 태블릿, 컴퓨터에서의 가독성이 더 중요함.
          + iBooks가 스크롤 뷰를 지원하지 않는다는 점에 놀랐으며, macOS에서는 지원하지 않지만 iOS와 iPadOS에서는 지원함.
     * 브라우저와 EPUB의 상호운용성에 대한 의견
          + 브라우저가 EPUB을 열지 않는 것은 불편함.
          + HTML과 CSS가 너무 방대하고 복잡해져서 적은 사람들만이 EPUB/HTML ""리더""를 구현할 수 있음.
          + 임시 해결책으로 모든 것을 HTML 파일에 내장하는 방법을 사용하고 있으며, 사용자가 웹 페이지를 오프라인으로 저장할 수 있다는 것을 알 수 있는 방법이 필요함.
     * PDF의 글꼴 포함과 렌더링 일관성에 대한 의견
          + PDF는 글꼴을 포함할 수 있지만 종종 시스템 글꼴에 의존하며, 글꼴을 포함하면 파일 크기가 크게 증가할 수 있음.
          + PDF 렌더링이 일관되지 않을 수 있으며, PDF 뷰어에 따라 렌더링 결과가 다를 수 있음.
     * HTML5 기반 PDF 대안에 대한 링크
          + 8일 전, 134점: ""Portable Web Documents – An Alternative to PDF Based on HTML5 (2019)""
          + 해당 링크
"
"https://news.hada.io/topic?id=13062","OpenAI, 새로운 임베딩 모델 공개 및 API 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    OpenAI, 새로운 임베딩 모델 공개 및 API 업데이트

     * 더 저렴한 새로운 임베딩 모델 공개
          + 작고 효율적인 text-embedding-3-small 모델 : 2022/12월에 공개된 text-embedding-ada-002를 대폭 향상시켰지만, 가격은 1/5 인 1K당 $0.00002
          + 크고 강력한 text-embedding-3-large 모델 : 3072 디멘젼까지 임베딩을 생성. 1K 토큰당 $0.00013
     * 새로운 GPT-3.5 Turbo 모델 gpt-3.5-turbo-0125 공개
          + 입력토큰 1K 당 $0.0005 로 비용 50% 감소
          + 출력 토큰 1K 당 $0.0015 로 비용 25% 감소
     * GPT-4 Turbo 프리뷰 모델을 gpt-4-0125-preview로 업데이트
          + 코드 생성 작업을 더 철저하게 완료하며, 모델이 작업을 완료하지 못하는 ""laziness"" 케이스를 줄임
          + 자동으로 업그레이드 되는 모델 별명인 gpt-4-turbo-preview를 추가해서 항상 최신 모델을 지정 가능
     * API 사용량을 이해하고, API 키를 관리하기 위한 방법들 추가
          + API키에 권한 부여 가능
          + API 키당 사용량 Export 가능

   한국어 임베딩 성능이 얼마나 되려나요? 실제로 활용할만할지 궁금하네요

   https://news.hada.io/topic?id=11593
   요거 따라 개인 글을 임베딩 했었는데, 비교해 봐야겠어요!

   더 저렴해졌네요. 이렇게 빠르게 비용 절감을 하는게 신기하군요 +_+

   OpenAI API를 돈내고 쓰는 입장에서는 비용절감이 정말 혁신적이라고 느껴집니다. 업데이트 될 때마다 가격이 쭉쭉 떨어지네요.

   가격이 어메이징 하네요... 사내 유사도 검색에 있어서 활용 가능성을 체크하고 있는데, OpenAI 쪽 API 가격이 상당히 훌륭한 편입니다.

   한국어 임베딩은 좀 별로지 않나요?
"
"https://news.hada.io/topic?id=13039","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   이직하려고 이력서, 포폴 말고 있습니다...

   조금 더 넓은 곳으로 사무실 이전을 준비중이라 뭔가 들뜬 기분인데요.
   조명 부터 각종 인테리어까지 새 공간을 꾸밀 것들을 알아보느라 주말은 즐거울듯 합니다.
     * 등산
     * 사이드프로젝트
     * 친구만나기

   많네요.. 다 할지 모르겠네요.ㅠㅠ

   부산다녀왔다가... 지난 주에 사놓고 하지 못한, Palworld 할 예정입니다.

   백두대간협곡열차 탈 예정입니다.

   클린 코드 읽어볼 예정입니다.

   용과같이8 달립니다 ㅋㅋ
"
"https://news.hada.io/topic?id=13129","Quickemu - 최적화된 윈도우/맥/리눅스 VM을 빠르게 생성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Quickemu - 최적화된 윈도우/맥/리눅스 VM을 빠르게 생성

     * 2개의 명령만으로 고도로 최적화된 VM을 빠르게 생성해주는 QEMU Wrapper
          + quickget ubuntu-mate 22.04
          + quickemu --vm ubuntu-mate-22.04.conf
     * 360개 이상의 OS 버전들 지원
          + macOS Monterey, Big Sur, Catalina, Mojave & High Sierra
          + Windows 10 & 11 (TPM 2.0 포함)
          + Ubunutu 와 모든 공식 Ubuntu flavours 들 (Edubuntu, Kubuntu, Ubuntu Studio, Ubuntu Unity,..)
     * 호스트/게스트 간 클립보드 공유를 포함한 SPICE 프로토콜 지원
          + Simple Protocol for Independent Computing Environments
     * 리눅스/윈도우 게스트를 위한 VirtIO-webdavd 파일 공유
     * 리눅스/맥 게스트를 위한 VirtIO-9p 파일 공유
     * QEMU 게스트 에이전트 지원: 표준 QMP 명령을 통해 시스템 수준 에이전트에 대한 액세스를 제공
     * Samba 파일 공유 지원(리눅스,맥,윈도우)
     * VirGL 가속
     * USB Device/Smartcard Pass-through
     * 자동 SSH 포트 포워딩 및 네트워크 포트 포워딩
     * Full Duplex Audio
     * EFI & Legacy BIOS 부팅

   윈도우 설치버전이 없어 아쉽네요 ㅠ
"
"https://news.hada.io/topic?id=13118","WSJ의 애플 비전 프로 리뷰: 아직은 미래의 일부에 불과하지만 지금까지 최고의 헤드셋","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            WSJ의 애플 비전 프로 리뷰: 아직은 미래의 일부에 불과하지만 지금까지 최고의 헤드셋

애플의 혼합 현실 헤드셋에서 24시간

     * 거의 24시간 동안 연속으로 착용한 후 놀랐던 점들: 구토 안함, 많은 일 처리, 맛있는 식사 준비를 함
     * 헤드셋의 애니메이션 비디오 통화 아바타인 Persona는 꿈에 나타날 정도로 인상적
     * 애플의 최신 제품은 스마트폰 이후의 미래에 대한 대담한 베팅으로, 거실에 떠 있는 앱들을 볼 수 있음
     * 내가 $3,500짜리 Vision Pro를 구매할 가능성은 낮지만, 이 기기의 잠재력과 현재 기술적 한계를 이해하는 데 중점을 뒀음

Vision Pro를 착용하면...

     * Vision Pro를 착용하면 실제 세계에 떠 있는 원형 앱 아이콘 그리드가 나타남
     * 눈과 손만으로 앱을 선택하고 스크롤할 수 있으며, 직관적인 조작 방식 제공
     * 헤드셋의 12개 카메라는 사용자의 손, 눈, 공간을 추적함
     * 오른쪽 보고 이메일 앱 열고, 정면 보고 브라우저 창 열고, 머리만 기울이면 다양한 공간에 윈도우를 배치 가능
          + 애플은 이를 '공간 컴퓨팅'이라고 부름
     * 무거운가요? 네. 메탈과 유리로 되어있어 고급스러운 외관과 무게감이 느껴짐.
     * 왜 선이 달려있나요? 배터리팩은 별로 신경쓰이지는 않음. 근데 2-3시간마다 충전했어야 해서 그냥 콘센트에 연결하고 썼음.
     * 안경 사용자는? Zeiss 광학 인서트를 주문해야 하며, 모노클 처럼 보이는 조각이 딱 맞음
     * 에어팟이 필요한가? 아니요. 훌륭한 내장스키퍼가 있음. 그런데 남이 안듣게 하려면 에어팟을 쉽게 페어링 가능

Vision Pro의 장점

     * Vision Pro는 일상 생활에 다양한 방식으로 적용될 수 있음.
     * 일할때 마치 마이너리티의 톰 크루즈처럼 느껴짐. 여러개의 윈도우를 주변에 두고 씀
     * 가상키보드가 있지만 길게 치긴 어려움
     * 블루투스 키보드와 마우스를 연결하여 실제 작업을 수행할 수 있음
     * 맥북프로를 연결하고 거대한 가상모니터에서 이 리뷰를 작성
     * 비디오 통화 시, 실제 사용자를 대신하여 3D 가상 현실속 아바타를 생성함
          + 하지만 친구/가족들은 ""너 끔찍해 보여"" ""지옥에서 온 보톡스 같아"" ""무서워"" 라고 함
     * 거대한 가상 홈 시어터를 만들어 대형 스크린과 몰입형 공간 오디오로 영화 감상 가능
          + 꼭 집이 아니어도 되어서, 비행기의 흔들림을 상쇄하도록 디자인된 여행모드도 있음
          + 영화 블랙위도우, 요세미티 정상, 3D 180도 영상 등을 봤는데 볼때마다 살짝 메스꺼움을 느꼈음
          + Amazon Prime Video, Paramount+ 및 Peacock은 앱이 있고, Netflix/Youtube 는 브라우저에서 봐야함
     * 아이폰 15 Pro의 '공간 비디오' 기능을 사용하여 3D 홈 무비를 촬영하고 감상할 수 있음
     * 요리 시, 레시피 앱을 사용하여 주방 벽에 레시피를 고정하고 냄비 위에 타이머를 띄울 수 있음
          + 최고의 요리용 컴퓨터임. 레시피를 한쪽에 올려두고 요리 가능
          + 지연시간이 별로 없어서 칼질도 무리없었음. 양파 썰때 눈이 안따가운 것도 좋음
          + 끓는 파스타 위에 타이머 하나 놓고, 갈변중인 버섯 위에 타이머를 하나 또 놓으니 ""와우""
     * 운동이 누락되었는데, 언젠가는 될 것이라고 생각. Meta Quest 사용자들에겐 인기였음

미래 전망

     * Vision Pro는 첫 세대 제품의 특징을 가지고 있으며, 무겁고 배터리 수명이 짧으며 훌륭한 앱이 없고 버그가 있을 수 있음
     * 그러나 Vision Pro가 할 수 있는 많은 것들은 공상 과학 소설 같은 느낌을 줌
          + 홈 오피스 곳곳에 앱을 실행하고, 내 스토브위에 여러개의 가상 타이머가 떠있고, 아이의 영상을 홀로그램으로 보고 있음
          + 내가 사용해 본 최고의 혼합현실 헤드셋임
          + 유일한 실제 경쟁 제품인 훨씬 저렴한 Meta Quest Pro 및 Quest 3보다 훨씬 더 발전했음
     * 현재로서는 이 페이스 컴퓨터는 애플의 미래 비전을 보는데 적합함.
          + 물론, FaceTime에서 모든 사람을 놀라게 하는 데도 유용함. 미안해요 아빠

  Hacker News 의견

     * Apple Vision Pro 리뷰: 마법 같지만, 그렇지 않을 때도 있다
          + 리뷰들에서 예상치 못한 단점들이 많이 보고됨.
          + 품질이 제한된 패스스루 기능, 모션 블러, 픽셀화, 왜곡, 제한된 색상 및 다이내믹 레인지 등의 문제점이 있음.
          + 처음에는 혁신적으로 보였던 눈동자 추적 입력 방식이 실제로는 사용자가 클릭하고자 하는 것을 항상 바라보지 않기 때문에 시간이 지날수록 성가신 것으로 나타남.
          + 개인화 기능(Personas)은 아직 준비가 덜 됨.
          + AR 기능의 부재가 가장 큰 놀라움.
          + VR 기기로 보이지 않으려는 시도가 있었지만, 실제로 높은 품질의 경험, 특히 사람들이 인상 깊어하는 VR 경험들이 있음.
          + 생산성을 위해 사용하고 싶다면 MacOS 애플리케이션을 실행할 수 없고, 실제 Mac을 사용하려면 여러 모니터를 사용할 수 없음.
          + 엔터테인먼트를 위해 사용하고 싶다면, 사람들은 다른 사람들과 함께 사진, 비디오, 영화를 즐기고 싶어하지만, 이 기기는 그것을 포함할 수 없음.
          + 전반적으로 기대했던 것보다 더 미성숙하고 개발 키트 단계에 가까운 느낌.
     * 장치의 미구현된 측면
          + 데스크탑/노트북 디스플레이를 AVP에 미러링할 때, 애플리케이션을 다른 영역으로 분리할 수 없음.
          + Apple이 이 기능을 지원한다고 주장한 적은 없지만, 많은 사람들이 이 기능이 당연히 가능할 것으로 기대하고 실망함.
          + 미러링된 디스플레이가 노트북보다 더 높은 ""해상도""를 보여주는 것으로 보임.
     * 장기적인 성공 가능성
          + 첫 번째 세대 Vision Pro가 대성공을 거둘 것인가에 대해서는 아직 이르다.
          + 첫 번째 아이폰이나 아이팟이 처음에 어떻게 받아들여졌는지를 회상하며, Apple의 이번 도전이 장기적으로 성공할지에 대한 기대감을 표현함.
          + Apple이 기술적으로 야심 찬 제품을 출시한 것에 대해 새로운 기술에 대한 어린아이 같은 경이로움을 느낌.
     * Joanna Stern의 리뷰와 다른 리뷰들
          + Joanna Stern의 리뷰 방식을 좋아하며, 다른 리뷰들과 비교하여 Brian Tong의 리뷰 비디오가 실제 사용 경험을 가장 잘 전달함.
          + Mac을 사용하여 visionOS 앱을 원활하게 제어할 수 있다는 사실을 알게 됨.
     * 생산적인 컴퓨터 작업에 대한 흥분
          + 개인용 iPad와 회사용 Mac을 별도의 Apple ID로 사용하는 데 대한 불편함을 언급.
          + Vision Pro가 이러한 문제를 해결할 수 있는지에 대한 궁금증을 제기함.
     * Memoji와 Personas의 비교
          + Memoji가 처음 출시되었을 때의 문제점과 현재의 개선된 상태를 비교하며, Personas와 눈동자 추적 기능도 시간이 지나면 개선될 것으로 기대함.
     * 대규모 제스처와 음성 제어에 대한 반대 의견
          + 대규모 손동작이나 음성을 사용하여 기기를 제어하는 것에 대한 부정적인 의견.
          + 키보드와 마우스를 연결하여 사용할 수 있다면, 기본적으로 매우 큰 모니터로 사용할 수 있을 것으로 기대함.
     * VR 하드웨어와 소프트웨어의 불일치
          + 현재 VR 하드웨어가 소프트웨어를 초과한 단계에 있으며, Apple 생태계가 테이블에 가져올 것에 대한 기대감을 표현함.
          + 현재 제품들과 비교하여 혁명적이라기보다는 여러 면에서 진화한 것으로 보이며, '킬러 앱' 문제를 해결하지는 못함.
"
"https://news.hada.io/topic?id=13104","Taipy - 데이터 & AI 알고리듬을 웹앱으로 만들어주는 오픈소스 파이썬 라이브러리 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Taipy - 데이터 & AI 알고리듬을 웹앱으로 만들어주는 오픈소스 파이썬 라이브러리

     * 데이터 사이언티스트와 머신러닝 엔지니어가 프로덕션에서 바로 사용가능한 풀스택 앱을 만들수 있도록 설계된 라이브러리
     * What-If 분석, 스마트 파이프라인 실행, 내장 스케쥴링, 배포 도구 포함
     * Python 기반의 UI 프레임워크
     * 데이터 파이프라인을 위한 각종 컴포넌트 내장 (시각화 및 관리도구 포함)
     * 시나리오 & 데이터 관리 기능 제공
     * 버전 관리 및 파이프라인 오케스트레이션
"
"https://news.hada.io/topic?id=13074","Untranslatable (번역 불가능) - 다국어 도시 사전","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Untranslatable (번역 불가능) - 다국어 도시 사전

     * The first multilingual Urban Dictionary
          + Untranslatable은 전 세계의 단어와 표현을 추가할 수 있는 온라인 사전임.
          + 이 프로젝트는 전통적인 번역을 넘어 사용법, 맥락, 문화적 중요성에 대한 통찰을 제공함.
     * 프로젝트의 독특함
          + Untranslatable은 언어의 숨겨진 측면을 탐구하는 인디 프로젝트임.
          + 모국어 사용자들이 기여한 단어, 관용구, 표현을 설명함.
     * 우리가 중점을 두는 것
          + 맥락
               o 무엇이 의미하는 바는 어떻게, 어디서, 얼마나 자주, 누가 사용하는지에 의해 전달될 수 있음.
          + 정확성
               o 모든 항목은 우리의 검토자에 의해 승인되며, 사람들은 그들이 무언가를 들어본 적이 있는지 투표할 수 있음.
          + 포괄성
               o Untranslatable은 어떤 언어든, 어떤 방언이든, 심지어 멸종 위기 언어와 수화를 포함하여 항목을 허용함.
     * 프로젝트 뒷이야기
          + Amarens라는 이름의 창립자가 2019년 포르투갈어 및 스페인어 언어학 학사 졸업 후 이 프로젝트를 시작함.
          + 이후 이론 및 응용 언어학 석사와 컴퓨터 언어학 석사 학위를 받음.
          + 원래 Kickstarter 캠페인을 통해 자금을 모금하고, 웹사이트를 만들기 위해 프로그래밍을 처음부터 배움.
     * GN⁺의 의견
          + Untranslatable은 언어의 다양성과 풍부함을 기념하는 독특한 온라인 사전임.
          + 사용자들이 직접 자신의 모국어와 문화를 세계와 공유할 수 있는 플랫폼을 제공함.
          + 이 사이트는 언어학자, 번역가, 다문화에 관심 있는 사람들에게 매우 유익하고 흥미로운 자원이 될 수 있음.

        Hacker News 의견

     * 디지털 크라우드소싱 사전이 유용하고 생존 가능하려면, 첫 번째 단계는 오픈 라이선스를 갖는 것임. 이는 기여자들이 자신들의 노력이 결국 상업적인 것으로 변할 수 있다는 생각에 기여하는 것을 꺼리지 않도록 하기 위함임. 그러나 이 프로젝트는 라이선스에 대해 전혀 언급하지 않고 있음. 이것은 사후적인 생각이 되어서는 안 됨.
     * 사이트의 랜딩 페이지에 있는 ""사람들이 추가한 것 보기"" 버튼이 탐색 페이지가 아닌 새 항목 추가 페이지로 연결되는 것을 보고 아이디어는 좋아하지만, 버튼의 기능이 혼동을 줄 수 있음을 지적함.
     * 사이트 하단에 숨겨진 통계 페이지에서 ""언어"", ""국가"" 또는 ""최신 항목"" 섹션을 열 수 없어 특정 국가의 속어를 보는 방법을 모르겠음을 표현함.
     * Kickstarter에서 부분적으로 자금을 지원받은 것이 흥미로움. 292명의 후원자로부터 10,000유로를 모금함. Kickstarter가 성공하기 위해서는 상당한 팔로잉이 필요하다고 생각했는데, Facebook에서 49,000명, Instagram에서 16,000명의 팔로워를 보유하고 있음. 이들이 공유하기 좋은 콘텐츠를 만들어내며 커뮤니티와 활발히 소통하고 있음을 알 수 있음.
     * 이 사이트가 국제적이긴 하지만 실제로 국제적인 청중을 대상으로 하는지 의문을 제기함. 예를 들어, UrbanDictionary가 영어로 되어 있어 불만을 가진 브라질 사람이 이 사이트를 사용할 수 있는지, 그리고 사이트의 모든 정의가 영어로 되어 있어서 실제로 영어 사용자들이 국제적인 속어를 알아내는 데 사용되는 것이 의도인지 궁금해함. 청중에 대해 명확히 하는 것이 좋을 것이라고 조언함.
     * ""사람들이 추가한 것 보기""와 ""항목 추가"" 두 버튼 모두 같은 항목 추가 페이지로 연결되는 것에 대해 혼란을 표현하며, 항목을 추가하지 않고도 컬렉션을 볼 수 있는 방법이 있는지 물음.
     * 사이트가 자신을 ""첫 번째 다국어 도시 사전""이라고 부르는 것이 법적으로 허용되는지 의문을 제기함. ""Urban Dictionary""는 일반적으로 urbandictionary.com을 가리키는 것으로 알려져 있음.
     * ""여기서 거미랑 섹스하러 온 건 아니야""라는 표현을 발견하고 호주 친구에게 진짜 사용하는지 물어본 후, 그 친구가 자주 사용한다고 확인해줌.
     * 사용자 경험이 좋지 않지만, 다른 언어로 욕을 배우는 것이 언어 학습에 큰 영향을 준다는 아이디어는 훌륭함.
     * 도시 언어가 저속하다는 점과 ""포용성""이 가치로 여겨지는 것이 이 사업의 유용성에 대해 의문을 가짐. 나이가 들면서 저속한 용어를 찾고 친구들과 공유하는 것에 대한 관심이 줄어들었지만, 소셜 미디어에서 이해할 수 없는 언어를 만났을 때 안내서가 필요함. 그렇지 않으면 다시는 돌아오지 않을 것임. Urban Dictionary에서 매일 가장 흔하게 누락된 정의 10개를 뽑아 깨끗한 정의를 제공하는 것이 이 사이트가 기대할 수 있는 검열 종류에 대한 좋은 기준이 될 것임.
"
"https://news.hada.io/topic?id=13089","Gitlab 비밀번호 재설정 버그로 5.3천 대 이상의 서버가 위험에 처해","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Gitlab 비밀번호 재설정 버그로 5.3천 대 이상의 서버가 위험에 처해

GitLab CVE-2023-7028 취약점 미패치 서버

     * GitLab의 심각한 취약점 CVE-2023-7028이 화요일 기준으로 5,300개 이상의 서버에서 패치되지 않아, 소프트웨어 개발자의 계정 원격 탈취 가능성이 있음.
     * 이 버그는 최대 CVSS 점수 10점을 받았으며, GitLab이 1월 11일에 처음 공개하고 패치함.
     * GitLab 로그인 시스템의 취약점으로 인해 공격자가 피해자의 상호작용 없이 비인증 이메일 주소로 비밀번호 재설정 링크를 보낼 수 있음.

패치 정보 및 취약점 테스트 결과

     * GitLab 버전 16.5.6, 16.6.4, 16.7.2에 대한 보안 업데이트가 출시되었으며, 16.1.6, 16.2.9, 16.3.7, 16.4.5 버전에도 백포트됨.
     * 한 연구원이 GitLab Community Edition 버전 16.6.1에서 버그를 테스트하고 ""매우 효과적이고 쉽게 이용할 수 있다""고 AttackerKB에 결과를 공유함.

취약한 인스턴스 감지 및 감소 추세

     * 패치가 가능해진 후 거의 2주가 지난 시점에서 Shadowserver Foundation에 의해 전 세계적으로 5,379개의 취약한 GitLab 인스턴스가 감지됨.
     * 미국과 독일이 각각 964개, 730개로 가장 많은 취약 인스턴스를 보유함.
     * Shadowserver의 대시보드 도구는 1월 24일에 취약 인스턴스가 4,652개로 줄어든 것을 보여줌.
     * Shadowserver 대변인은 SC Media와의 확인에서 취약 인스턴스의 감소가 긍정적인 발전이지만, 이 감소가 추세인지 단순 변동인지 판단하기 위해서는 더 많은 시간이 필요하다고 언급함.

GitLab CVE-2023-7028 타협 지표

     * GitLab Community Edition 및 GitLab Enterprise Edition의 자체 관리 인스턴스를 가진 GitLab 고객은 로그를 검토하여 CVE-2023-7028의 악용 여부를 확인해야 함.
     * gitlab-rails/production_json.log에서 /users/password 경로로의 HTTP 요청을 확인하고, params.value.email이 여러 이메일 주소를 포함한 JSON 배열로 구성되어 있는지 확인해야 함.
     * gitlabs-rails/audit_json.log에서 meta.caller.id가 PasswordsController#create이고 target_Details가 여러 이메일 주소를 포함한 JSON 배열로 구성된 항목을 확인해야 함.
     * GitLab.com 또는 GitLab 전용 인스턴스에서는 이 버그의 악용이 감지되지 않았음.
     * GitLab은 또한 2단계 인증(2FA)을 활성화할 것을 권장하며, 이는 CVE-2023-7028을 통한 계정 탈취를 방지하지만, 패치되지 않은 인스턴스 사용자는 여전히 공격자가 취약점을 이용하여 비밀번호를 재설정함으로써 계정에서 잠길 위험이 있음.

  GN⁺의 의견

     * 이 기사는 GitLab의 심각한 보안 취약점과 관련된 중요한 정보를 제공함. CVE-2023-7028은 소프트웨어 개발자의 계정 보안에 직접적인 위협이 될 수 있으며, 적절한 조치가 필요함.
     * 패치가 제공되었음에도 불구하고 전 세계적으로 많은 수의 서버가 여전히 취약한 상태에 놓여 있어, 보안 인식과 적시에 업데이트를 하는 것의 중요성을 강조함.
     * 2단계 인증(2FA)의 중요성을 부각시키며, 사용자들에게 추가적인 보안 수단을 활용할 것을 권장함으로써, 보안에 대한 인식을 높이는 계기를 마련함.

        Hacker News 의견

     * ""계정 기반 웹 앱에서 '이메일 주소와 계정 연결' 기능의 위험성에 대해 말하고 싶다. 이 기능은 펜테스터들이 즉시 조작하려고 하는 것 중 하나이며, 초기 2000년대부터 취약점이 발견되었다. GitLab에서도 이런 문제가 재현되었다. GitLab은 훌륭한 보안 팀을 갖고 있지만, 이러한 버그를 피하기 어려운 것으로 보인다. 이 이야기에 관심이 있는 일반 해커뉴스 독자라면, 자신의 비밀번호 재설정 기능, 특히 이메일 연결 로직을 확인해보길 바란다.""
     * ""Rails 코드베이스에서 이 취약점을 발견한 커밋 링크를 공유한다: GitLab 커밋 링크""
     * ""이 버그로 인해 피해를 입었다. 사용자의 이메일을 알아야 공격이 가능하지만, GitLab 사용자 ID(1부터 증가하는 숫자)에 연결된 숨겨진 이메일 주소가 있다. ID 1이나 2는 관리자일 가능성이 높으므로 좋은 목표가 된다. 이메일 형식은 '1-user@mail.noreply.<gitlabhost>'와 같다. 자동화된 공격처럼 보였으며, 2FA가 우리를 구했다.""
     * ""이메일을 통한 비밀번호 재설정은 올바르게 구현되었을 때조차 보안 악몽이다. 대부분의 서비스에서는 이 기능을 비활성화할 수 없으며, 대안은 종종 엔터프라이즈 SSO뿐이다. 일부 서비스에서는 SMS 토큰을 위한 전화번호를 설정할 수 있지만, 이메일과 SMS 토큰을 모두 요구하는 옵션은 본 적이 없다.""
     * ""로그인 폼에 비밀번호 배열을 입력하여 계정을 무차별 대입 공격할 수 있는 버그를 발견한 적이 있다. 스팸 어플라이언스에 대한 조악한 웹 인터페이스였으며, 의도된 것인지, PHP 초보자가 코드를 작성한 것인지 확실하지 않다. 당시 특수 문자가 들어간 비밀번호를 사용하던 사용자가 이를 발견했다.""
     * ""GitLab과 같은 내부 서비스는 신뢰할 수 있는 사용자만 접근할 수 있는 VPN 뒤에서 운영하는 것이 좋다는 점을 상기시킨다.""
     * ""GitLab 업데이트 자동화는 매우 쉽다. Docker+Compose에서 GitLab을 사용하고 Watchtower 등을 통해 매일 업데이트하면 된다. 7년 이상 이 방법으로 GitLab 서버를 운영하고 있으며 문제가 없었다. 주변을 둘러보면 많은 GitLab이 구버전인데, 관리자들은 무엇을 하고 있는가?""
     * ""어떤 종류의 내부 서버든 공개 인터넷에 노출시키지 않겠다는 원칙을 갖고 있다. VPN을 통해서만 접근 가능하게 하여 두 번째 방어선을 구축한다.""
     * ""항상 SSO를 사용하고 2FA를 사용하는 것을 잊지 말아야 한다는 또 다른 상기.""
     * ""Ruby/Rails가 안전해야 하는 소프트웨어에 적합한 선택이라는 생각을 그만두자. GitLab이 이를 다루어야 하는 상황을 이해하지만, 앞으로는 지능적이고 숨겨진 제어 흐름을 우선시하는 언어와 프레임워크보다 더 단순한 것이 낫다는 것을 인정해야 한다. 나는 생산 Ruby 코드베이스에서 일하고 있으며, 여러 층의 추상화가 코드를 매우 확장 가능하게 만들었다고 생각하는 누군가로 인해 비슷한 문제가 발생할 가능성이 분명히 보인다.""
"
"https://news.hada.io/topic?id=13088","새로운 GitHub Copilot 연구, '코드 품질에 대한 하향 압력' 발견","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              새로운 GitHub Copilot 연구, '코드 품질에 대한 하향 압력' 발견

GitHub Copilot 연구 결과, 코드 품질에 '하향 압력' 발견

     * AI 기반 GitHub Copilot의 소프트웨어 개발 영향에 대한 새로운 연구에서 부정적인 결과가 나타남.
     * GitClear의 ""Coding on Copilot"" 백서는 AI 보조 코드의 품질과 유지 관리 가능성을 인간이 작성한 코드와 비교하여 조사함.
     * 연구 결과, 코드 유지 관리에 우려되는 경향이 발견되었으며, 2024년에는 코드 변경량이 AI 도입 전인 2021년 대비 두 배로 증가할 것으로 예상됨.

GitHub 연구와의 대조

     * 다른 연구들, 특히 GitHub의 2022년 연구에서는 GitHub Copilot을 사용한 개발자들이 작업을 훨씬 빠르게 완료했다고 발견함.
     * GitHub 연구는 생산성 향상, 개발자 만족도 증가, 정신적 에너지 절약 등 긍정적인 효과를 측정함.
     * GitClear의 연구는 AI 사용 시 코드 구성의 변화를 조사하고, 기술 리더들이 2024년에 주의해야 할 점을 밝힘.

GN⁺의 의견

     * 이 연구는 AI가 소프트웨어 개발에 미치는 영향을 이해하는 데 중요함. 특히, 코드 품질과 유지 관리 측면에서 AI의 사용이 가져올 수 있는 잠재적인 문제점을 강조함.
     * GitHub Copilot과 같은 도구가 개발자의 생산성을 향상시킬 수 있지만, 장기적인 코드 품질에 대한 영향을 고려해야 한다는 점을 시사함.
     * 기술 리더들은 이러한 연구 결과를 참고하여 AI 보조 도구를 사용할 때 발생할 수 있는 문제를 예방하고, 코드 품질을 유지하기 위한 전략을 수립하는 데 도움을 받을 수 있음.

        Hacker News 의견

     * 한 사용자는 구독을 취소했음을 언급하며, 너무 많은 정신적 노력을 코드 오류 수정에 사용해야 했기 때문임. 특히 SQL과 관련된 복잡한 문제를 해결할 때는 무용지물이었다고 함. 자신이 원하는 것을 직접 작성하는 것이 더 쉬웠으며, 신입 개발자들이 이러한 비효율적인 도구에 압도당할까 걱정된다고 함.
     * 다른 사용자는 GPT-4를 사용하여 PHP CRUD 애플리케이션 개발에 효율성을 크게 향상시켰다고 말함. 간단한 지시에 따라 생성된 코드가 이해하기 쉽고 대부분 즉시 기능했다고 함. 사용자의 요구를 듣고 문제를 해결하는 데 도움이 되었다고 함. GPT-4는 저렴한 비용으로 가치 있는 도움을 제공했으며, 기본을 모르면 효과적이지 않을 것이라는 점을 강조함.
     * 한 토론자는 2023년의 커밋 활동을 이전 연도와 비교하는 방법론에 대해 의문을 제기함. Copilot의 영향을 고려하지 않고, 단 4개의 데이터 포인트를 기반으로 한 회귀 분석이 설득력이 부족하다고 비판함.
     * 또 다른 사용자는 기술이 시장과 정부의 성장을 위해 사용되고 있지만, 이것이 종종 불완전한 추상화 위에 덧씌워지는 방식으로 문제를 해결한다고 지적함. 질적인 변화가 필요하며, LLMs(Large Language Models)가 진정한 노력 없이 목표를 달성하려는 인간의 오류를 부추긴다고 우려함.
     * 한 개발자는 자신의 워크플로우를 설명하며, Copilot이 프로토타입 단계에서 작동 코드를 제공할 경우, 문제를 충분히 이해하고 올바르게 구조화하는 데 필요한 과정의 대부분을 건너뛰게 될 수 있다고 함. Copilot이 최종 개발 단계에서 매우 유용할 수 있지만, 입력한 내용 이상의 결과를 기대해서는 안 된다고 함.
     * 한 신입 개발자는 Codeium과 같은 도우미가 종종 산만하다고 느끼며, 자신이 코드를 작성하는 방식을 배우지 못하게 될까 우려함. Phind와 같은 도구는 문제를 이해하는 데 도움이 되지만, Codeium은 자주 작동하지 않아 불편함을 겪는다고 함.
     * 연구의 저자는 코드 품질에 대한 장기적인 관심에 대해 흥분을 표함. 2023년에 증가한 코드의 중복과 이동 감소는 예상치 못한 결과였다고 함. 개발 팀과 AI 도우미 제작자들이 재사용 가능한 코드를 새로 추가하는 코드보다 더 중시하도록 측정 및 인센티브를 채택하기를 희망함.
     * 한 사용자는 ChatGPT를 사용하여 Django/Python 기반의 Yourls 클론을 만들었지만, 트래픽 추적 기능을 제대로 고려하지 못했다고 함. AI 도구는 초보 개발자처럼 동작하지만 훨씬 빠르게 실수를 만들어낸다고 비유함.
     * DRY(Don't Repeat Yourself) 원칙에 대한 반발이 이미 일어나고 있었으며, 일부 젊은 개발자들은 코드에 대해 매우 다른 태도를 가지고 있음을 지적함. 디자인 패턴과 DRY, SOLID 원칙에 대한 경멸적인 태도를 가지고 있다고 함.
     * 마지막으로 한 사용자는 Copilot이 너무 영리하려고 하다가 종종 잘못된 결과를 내놓는다고 느낌. Copilot이 스마트한 인텔리센스가 되기를 원하지만, 실제로는 더 멍청한 페어 프로그래머처럼 행동한다고 비판함. 많은 사람들이 비즈니스 로직에 사용하고 있으며, 제품이 그 방향으로 나아가고 있다고 생각함.
"
"https://news.hada.io/topic?id=13113","사용되지 않는 의료 절차와 연관된 알츠하이머 질환 사례","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     사용되지 않는 의료 절차와 연관된 알츠하이머 질환 사례

과학자들이 처음으로 알츠하이머 질병 전파 사례를 기록함

     * 베타-아밀로이드라는 독성 단백질이 알츠하이머 환자의 뇌 뉴런을 파괴하는 것으로 알려짐.
     * 환자들은 전형적인 알츠하이머 증상이 없었으며, 발병 연령이 평소보다 매우 젊음.
     * 이 환자들은 어린 시절 인간 시체에서 추출한 성장 호르몬을 치료 목적으로 받았음.

성장 호르몬 치료로 인한 알츠하이머 질병 전파 가능성

     * 성장 호르몬 치료가 뇌에 단백질 조각을 전달할 수 있으며, 이는 치명적인 크로이츠펠트-야콥병(CJD)을 유발할 수 있음.
     * 연구진은 성장 호르몬 이식이 일부 수령자의 뇌에 베타-아밀로이드 단백질을 씨앗처럼 심어 알츠하이머를 유발할 수 있다고 보고함.
     * 이는 알츠하이머 질병이 전파될 수 있다는 최초의 사례로, 알츠하이머의 원인에 대한 논쟁에 새로운 시각을 제공함.

알츠하이머가 전염성이 있는 것은 아님

     * 알츠하이머는 전염성 질병이 아니며, 치료로 인한 전파 사례는 더 이상 발생하지 않음.
     * 연구진은 영국에서 1959년부터 1985년까지 시체에서 추출한 성장 호르몬을 받은 1,800명 이상의 사람들 중 단 5명의 알츠하이머 환자를 기술함.
     * 연구 결과는 신경외과 수술 도구의 멸균과 같은 안전한 의료 관행의 중요성을 상기시킴.

알츠하이머의 근본 원인에 대한 논쟁

     * 베타-아밀로이드가 알츠하이머 발병에 역할을 한다고 믿어지며, 이 단백질을 제거하는 치료법이 환자들에게 이득을 보이기 시작함.
     * 그러나 대부분의 전문가들은 아밀로이드만이 알츠하이머의 유일한 원인은 아니라고 생각함.
     * 연구자들은 아밀로이드 전달 외에 다른 요인이 작용했을 가능성에 대해 의문을 제기함.

GN⁺의 의견

     * 이 연구는 의료 절차로 인한 질병 전파 가능성을 보여주며, 특히 알츠하이머 질병의 원인과 발병 메커니즘에 대한 이해를 증진시킬 수 있음.
     * 알츠하이머 질병이 전파될 수 있다는 발견은 의료계에 경각심을 일으키고, 안전한 의료 관행의 중요성을 강조함.
     * 이 연구는 알츠하이머 질병에 대한 새로운 치료법 개발에 대한 희망을 제공하며, 베타-아밀로이드와 관련된 치료법의 효과에 대한 추가적인 연구를 촉진할 수 있음.

        Hacker News 의견

     * Afaict, 이 발견은 완전히 새로운 것은 아님. 예를 들어, 2018년 기사에서는 시체에서 추출한 성장 호르몬을 통해 알츠하이머가 '전파'될 수 있다는 주제를 다룸. 새로운 기사는 추가적인 증거를 제공하거나 이전 기사가 단순한 연관성을 의심한 것에 비해 이번에는 실제 연관성을 증명할 수도 있음. '시딩' 부분이 흥미롭고 무섭다고 생각함. 아이들에게 주입된 소량의 성장 호르몬 자체가 알츠하이머를 유발한 것은 아니지만, 뇌가 더 많은 플라크를 축적하도록 재배열하여 수십 년에 걸쳐 뇌 성능이 점차 감소하게 만들었을 수 있음. 이 효과가 합성 가능하다면, 많은 국가들이 끔찍한 생물학적 무기를 개발하는 데 사용할 수 있음을 쉽게 상상할 수 있음.
     * 많은 신경퇴행성 질환의 '전염성' 현상에 대한 연구가 있음. 역학적으로, 한 사람에서 다른 사람으로 전염되는 것은 아닐 것으로 보이지만, 흥미로운 현상이 있음. 예를 들어, 파킨슨병 줄기세포 이식 시험이 실패했음에도 불구하고, 참가자들이 몇 년 후 사망하고 부검을 받았을 때 이식된 줄기세포에서 파킨슨병 단백질 덩어리(레위 소체)가 발견되어 화제가 됨. 마찬가지로, 파킨슨병 유전자가 없는 쥐에게 다른 쥐로부터 비정상적으로 접힌 신뉴클레인을 주입하면 파킨슨병 특징과 레위 소체가 나타나는 연구도 있음. 이 정보를 어떻게 활용해야 할지는 아직 확실하지 않음.
     * 표준 혈액 수혈 중에 다른 무엇이 의도치 않게 전달되고 있는지 궁금함. 젊은 기증자와 노인 기증자의 혈액에서 '신호 전달' 능력에 대한 흥미로운 연구를 본 적이 있음. '젊은 혈액'은 세포의 노화를 늦추고, '노인 혈액'은 노화를 가속화시킴. 다른 사람의 생물학적 물질을 취해 다른 몸에 넣을 때는, 비교적 '단순한' 소분자 약물을 주입할 때보다 훨씬 더 많은 불확실성과 위험을 도입하는 것 같음.
     * 베타 아밀로이드 이론이 출판사의 데이터 조작으로 대부분 논박되었다고 생각했는데, 이제 다시 부각되고 있음. 혼란스러움.
     * 베타-아밀로이드 가설 자체가 일부 검토를 받고 있으며, 알츠하이머를 진정으로 설명하지 못할 수도 있음. 이 발견이 아밀로이드 가설에 대한 추가 증거를 제공하는지 궁금함.
     * ""할례인가요?""라고 사람들이 내 어깨 너머로 읽을 때 말하는 것을 좋아함.
     * 알츠하이머가 전염성 프리온 질환이라는 것은 악몽 같은 일임 (프리온 질환 == 불치병)
     * 4시간 전: <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39179368"">https://news.ycombinator.com/item?id=39179368</a>에서 다음과 같이 강조함:
          + 연구는 소수의 사람들에 기반하고 있으며, 더 이상 사용되지 않는 의료 관행과 관련이 있음.
          + 알츠하이머병과 같은 치매 형태가 사람 간에 전염될 수 있다는 것을 제안하지 않음.
          + ""Iatrogenic""라는 재미있는 어휘: 의료 검사나 치료로 인해 발생하는 질병.
     * 수십 년 전의 관행들이 현재 살아있는 사람들에게 재앙으로 드러날 수 있는 것들이 무엇인지 궁금함. 예전에 읽었던 소 사육 관행이 일부 프리온 관련 질병에 책임이 있을 수 있다는 기사를 기억함. 정확한 출처는 기억나지 않음. 이러한 것들은 전혀 관련 없는 출처에서 올 수 있음.
     * 이 출판물이 크로이츠펠트-야콥병을 언급할 때 보여준 자제력에 다소 놀람. 보통 뉴스 기관들은 크로이츠펠트-야콥병이 인간형 광우병이라는 사실을 언급하는 것을 좋아함.
"
"https://news.hada.io/topic?id=13042","연구 결과, 차량 후드의 높이가 높을수록 보행자 사망률이 크게 증가한다고 밝혀져","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              연구 결과, 차량 후드의 높이가 높을수록 보행자 사망률이 크게 증가한다고 밝혀져

높은 차량 후드가 보행자 사망률을 크게 증가시킨다는 연구 결과

     * 미국에서 트럭과 SUV의 후드 높이가 증가하고 있음.
     * 이러한 차량들이 보행자에게 더 위험할 수 있다는 직관적인 생각이 데이터로 입증됨.
     * 2020년부터 보행자 사망 사고가 증가하기 시작했으며, 일부 주에서는 이를 줄이는 데 성공했지만 다른 주에서는 반대의 결과를 보임.

도시 계획자들의 차량 중심 계획과 차량의 역할

     * 수십 년 동안 도시 계획자들은 차량 통행을 우선시했으며, 이는 보행자나 자전거 이용자에게 불리함.
     * 세단에서 크로스오버, SUV, 픽업 트럭으로의 전환도 보행자에게 위험을 증가시킴.
     * 1990년대 데이터에 따르면, 경트럭에 치이는 보행자는 사망할 확률이 두세 배 더 높음.

픽업 트럭과 SUV가 보행자에게 더 위험함

     * 데이터 분석 결과, 픽업 트럭과 풀사이즈 SUV의 후드 높이가 평균 차량보다 각각 28%, 27% 더 높음.
     * 미니밴도 평균 세단보다 후드가 24% 더 높음.
     * 픽업 트럭과 풀사이즈 SUV는 평균 차량보다 무게도 55%, 51% 더 무거움.
     * 6년간의 데이터에서 차량 전면 높이는 5%, 무게는 3% 증가했으며, 차량이 경트럭일 확률은 11% 증가함.
     * 3,375건의 사고 중 308건에서 차량이 보행자를 사망에 이르게 함.
     * 차량 유형별로 살펴볼 때, 밴이 보행자에게 가장 덜 위험했으며, 세단이나 해치백에 치인 보행자의 사망률은 8.5%, 컴팩트 SUV는 8.8%였음.

GN⁺의 의견

     * 이 연구는 차량 디자인이 보행자 안전에 미치는 영향에 대한 중요한 데이터를 제공함.
     * 차량의 후드 높이와 무게가 보행자 사망률에 직접적인 영향을 미친다는 사실은 자동차 제조업체와 도시 계획가들에게 중요한 시사점을 줌.
     * 이 기사는 보행자 안전을 개선하기 위한 차량 설계 및 도시 인프라 개선의 필요성을 강조함으로써, 사회적으로 긍정적인 변화를 촉진할 수 있는 흥미로운 정보를 제공함.

        Hacker News 의견

     * 큰 트럭에 부딪히는 즉각적인 영향 외에도 다른 관점이 존재함.

     1980년대 초보 운전자 시절을 회상하며, SUV와 대형 픽업 트럭이 흔하지 않았고, 창문이 거의 불투명해지기 전에는 앞차를 통해 세 대 앞의 도로 상황을 볼 수 있었음. 배달 트럭 뒤를 운전하는 것이 불안했기 때문에 앞의 상황을 더 잘 볼 수 있도록 차선을 변경했음. 현재는 창문이 너무 어두워져서 보기 어렵고, 앞차가 시야를 가리는 경우가 많음.
     * 대형 트럭과 SUV에 대한 위험 차량 면허 도입을 제안함.

     모든 운전자에게 일반 운전 면허와 함께 자동으로 부여되지만, 고속도로에서 무리하게 차선 변경을 하거나 공격적으로 꼬리를 물거나 주거지역이나 도심에서 과속을 하다 적발되면 해당 면허를 잃고 일반 크기의 차를 운전해야 함. 벌금을 내고 안전 운전 과정을 이수함으로써 면허를 다시 얻을 수 있는 방법이 있을 수 있음. 차량을 위험하다고 분류하는 기준은 보행자와 차량 충돌 사망률을 높이는 요인을 기반으로 하여 안전한 디자인을 장려해야 함.
     * 정부 규제가 없으면 SUV와 트럭에 대한 추세가 역전되지 않을 것임.

     운전자들이 '거친 남자'로 분장하는 것을 즐기지만, 정부 규제가 없다면 이러한 추세가 더 악화될 것이며, ""이제 트럭까지 빼앗긴다!""는 불만이 나올 것임.
     * 밴이 사람과 물건을 운반하는 데 SUV보다 더 나음.

     밴은 SUV에 비해 더 넓고, 픽업 트럭에 비해 물건을 적재하기 쉽고 날씨로부터 보호받으며, 훨씬 더 나은 시야를 제공함. 미국에서 트럭과 SUV가 상징적인 가치를 가지는 반면, 홍콩에서는 MPV가 상징적인 가치를 가짐이 흥미로움. 트럭에 유리한 특정 세금 및 배출 규제도 인기에 기여함.
     * 농업용 트랙터는 보행자 사망 사고를 줄이기 위해 시야를 개선하기 위해 진화함.

     농업용 트랙터는 시야가 개선되었는데, 이는 트랙터 운전자의 가족 구성원이 희생될 가능성이 있기 때문일 수 있음.
     * SUV 구매자들은 불안정하고 허영심이 강하며, 운전 기술에 자신이 없고, 이기적이며, 지역사회에 관심이 적은 경향이 있음.

     자동차 회사들은 사람들이 이기적인 우월감을 표현하고 싶어 한다는 것을 알고, 그 이미지를 마진을 붙여 판매함. SUV를 가족용 차량으로 만든 이후 구매자들은 대체로 불안정하고 허영심이 강하며, 결혼 생활이나 부모 역할에 대해 불안해하고, 운전 기술에 자신이 없으며, 이기적이고 자기 중심적인 경향이 있음.
     * 보행자로서 차량에 치여 생존한 경험을 통해, 높고 수직적인 전면 디자인의 차량이 보행자에게 더 큰 위험을 초래한다는 것에 동의함.

     보행자로서 차량의 후드에 맞고 마지막 순간에 뛰어올라 차량 위에 올라타 생존한 경험이 있으며, 높고 수직적인 전면 디자인의 차량이 보행자에게 더 큰 위험을 초래한다는 사실에 동의함.
     * 사이버트럭 이후 미국 규제 기관이 보행자 안전에 대해 포기했다고 가정함.

     사이버트럭 출시 이후 미국 규제 기관이 보행자 안전에 대해 관심을 두지 않는 것으로 보임.
     * 대형 SUV가 주차하는 모습을 볼 때마다 이것이 얼마나 위험한지 생각함.

     2016년부터 모든 차량에 후방 카메라가 장착되어 있어 사람을 실수로 치지 않도록 하지만, 이제 앞으로 나가야 할 때는 그러한 카메라가 없고 매우 큰 사각지대가 있음.
"
"https://news.hada.io/topic?id=13128","Svelte Native - Svelte로 모바일 네이티브 앱 개발하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Svelte Native - Svelte로 모바일 네이티브 앱 개발하기

     * Svelte 프레임워크를 이용한 모바일 앱 개발
          + Transitions, Stores, Reactivity를 포함한 Svelte의 전체 기능을 그대로 이용
     * NativeScript를 이용하여 크로스플랫폼 네이티브 iOS/Android 앱을 WebView 없이 개발
          + 모바일 기기에서 대부분의 작업을 수행하는 React Native 나 NativeScript-Vue 와 달리 컴파일 단계에서 대부분의 작업을 처리
          + 웹 기술과 코드를 공유하면서 진정한 네이티브 UI와 성능을 제공
     * 가상 DOM Diffing 같은 기술 대신, 앱의 상태가 변경될 때 네이티브 뷰 위젯을 정교하게 업데이트 하는 코드를 작성

   네이티브 스크립트가 그닥 살아있는 상태가 아니라는 얘기를 작년 레딧 어디에서 본 것 같네요. 꼭 스벨트를 모바일앱으로 만들어야 한다면 커패시터를 쓰거나 타우리 모바일을 기대하는게 낫다는 댓글도 기억 나네요.

   저도 스벨트 좋아하긴 하지만 이 프로젝트는 솔직히 의문이 들긴 히더라고요. 살아있는 코드가 너무 적은 느낌?

  Hacker News 의견

     * 프로젝트의 장점에도 불구하고, 이것이 공식 Svelte 프레임워크의 일부가 아니라는 사실을 좀 더 명확히 해야 함. 프로젝트가 Svelte 문서의 외관을 모방하고 있으나, 그들이 누구인지에 대한 설명이 부족하다고 느낌.
     * React Native로 앱을 몇 개 만들어본 경험이 있는데, 시간이 지나면서 다양한 버전의 자바스크립트 라이브러리, 프레임워크, 안드로이드/iOS 버전, 빌드 시스템 간의 호환성 문제로 복잡성이 폭발적으로 증가하여 악몽이 됨. Kotlin/Swift를 배우고 단일 생태계를 유지하는 것을 선호함.
     * Svelte의 열렬한 팬임에도 불구하고, 이 프로젝트는 지난 몇 년간 많은 관심과 주의를 받지 못함. 그러나 React와 React Native가 웹 기술로 네이티브 앱을 만들고자 하는 사람들에게 더 적합하다고 생각함. Safari의 PWA 지원 진전, Apple의 네이티브 개발자에 대한 증가하는 적대감, WebGPU와 같은 브라우저 개선 사항 등을 고려할 때, 앞으로는 95%의 사용 사례에 대해 네이티브 앱을 만들 필요가 없기를 희망함. 이를 방해하는 주된 장애물은 Apple이 iOS에서 웹 앱을 계속해서 두등급 시민으로 취급하고 Safari에 좋은 네이티브 경험을 제공하기 위한 API를 마지못해 추가하는 것임.
     * 몇 년 전 회사에서 크로스 플랫폼 앱을 만들기 위해 이 기술을 시도했으며, Svelte 웹 인터페이스와 많은 코드를 공유할 수 있기를 희망함. 3-4개월 동안 많은 진전을 이루었지만, 디버깅하기 어려운 많은 이상한 버그와 엣지 케이스에 부딪힘. 결국 모바일 코드베이스에 Flutter로 전환함. 이후에 개선되었을 수 있지만, 초기 인상을 바탕으로 NativeScript를 간단한 인터페이스 요구 사항 이외의 것에는 추천하지 않음.
     * 이것은 React Native의 Svelte 버전이라기보다는 NativeScript의 래퍼 중 하나임.
     * NativeScript를 기반으로 함. 크로스 플랫폼을 원한다면 RN을 고수하는 것이 낫다고 생각함. Kotlin이나 Swift로 앱을 작성하는 것이 이 복잡한 시스템보다 쉬움.
     * '네이티브'라는 단어가 남용되고 있음.
     * 예제 앱이 5년 전 것임. 누군가 이것을 사용하고 있는지 의문.
     * 지난 몇 년간 많은 모바일 앱을 만들었는데, 항상 웹뷰 안에서 웹 기술을 사용하여 렌더링함. 사용자 경험을 매우 중요하게 생각하기 때문에, 현대 스마트폰에서는 React Native, Flutter, NativeScript와 같은 도구를 사용하는 것보다 웹뷰 안에서 렌더링하는 것의 이점을 볼 수 없음. Ionic과 같은 UI 라이브러리는 네이티브 UI 컴포넌트와 구별할 수 없으며, 이와 반대되는 실제 사용자 연구가 없음. 그렇다면 왜 이러한 크로스 플랫폼 도구를 사용하고 Svelte를 직접 웹뷰와 함께 사용하지 않아야 하는가?
     * Svelte를 좋아하며, 그것의 독특한 컴포넌트 모델이 네이티브 모바일 앱 개발에 잘 맞기를 희망함. 도구 체인이 React Native와 많이 다른지 궁금함.
"
"https://news.hada.io/topic?id=13143","Mistral CEO, GPT4 성능에 근접한 새로운 오픈 소스 AI 모델이 유출된 것을 시인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Mistral CEO, GPT4 성능에 근접한 새로운 오픈 소스 AI 모델이 유출된 것을 시인

     * 1월 28일경 사용자 ""Miqu Dev""가 오픈소스 AI 모델 및 코드 공유 플랫폼인 HuggingFace에 ""miqu-1-70b""라는 새로운 오픈소스 대형 언어 모델(LLM) 파일 세트를 게시
     * 이 모델은 현재 가장 성능이 좋은 것으로 평가받는 오픈소스 AI 회사 Mistral이 만든 Mixtral 8x7b와 동일한 ""Prompt format""을 사용함
     * 같은 날, 익명 사용자가 4chan에 miqu-1-70b 파일에 대한 링크를 게시
     * 일부 사용자들은 이 모델이 일반적인 LLM 작업에서 뛰어난 성능을 보이며, OpenAI의 GPT-4에 근접하는 것으로 나타남

Mistral 양자화?

     * 기계 학습(ML) 연구자들이 LinkedIn에서 ""miqu""가 ""MIstral QUantized""를 의미하는지에 대해 관심을 보임
     * 양자화는 AI 모델을 덜 강력한 컴퓨터와 칩에서 실행할 수 있도록 모델 아키텍처의 긴 숫자 시퀀스를 더 짧은 것으로 대체하는 기술
     * Mistral의 공동 창립자 겸 CEO인 Arthur Mensch가 ""Miqu"" 모델이 Mistral의 얼리 억세스 고객 중 한 곳의 지나치게 열정적인 직원에 의해 유출되었다고 밝힘
          + Mistral은 이 모델을 Llama 2에서 재훈련하여 Mistral 7B 출시 당일에 Pretraining을 마쳤으며, 이후로도 좋은 진전을 보이는 중
     * 재밌게도 멘쉬는 불법적인 허깅페이스 게시물에 삭제를 요구하기는 커녕 ""저작자 표시를 고려할 수 있다""는 댓글을 남겼음

오픈소스 AI와 그 너머의 중대한 순간?

     * GPT-4 수준의 성능을 가진 오픈소스 모델의 출시는 오픈소스 생성 AI뿐만 아니라 전체 AI 및 컴퓨터 과학 분야에 중대한 순간이 될 수 있음
     * OpenAI는 GPT-4 Turbo와 GPT-4V(비전)으로 경쟁 우위를 유지할 수 있지만, 오픈소스 AI 커뮤니티가 빠르게 따라잡고 있음

  GN⁺의 의견

     * ""Miqu"" 모델의 등장은 오픈소스 AI 분야에서 상업적 AI 제품과 경쟁할 수 있는 새로운 가능성을 보여줌
     * 이 사건은 오픈소스 커뮤니티의 혁신적인 역량과 기술의 빠른 발전을 강조함
     * 오픈소스 모델의 발전은 기업들이 AI를 활용하는 방식에 변화를 가져올 수 있으며, 이는 기술 산업 전반에 걸쳐 중요한 영향을 미칠 것임

        Hacker News 의견

     * 사용자는 TheBloke의 페이지를 주시하며 자신의 MacBook에서 Miqu Q5 양자화 모델을 실행할 수 있기를 기다리고 있음. Mixtral을 매일 사용하고 있으며, 만약 이 모델(또는 새로운 공식 버전)이 GPT-4에 근접한다면 OpenAI 구독을 중단할 것임. Mistral의 소규모 팀이 경쟁사들을 능가하고 있으며, ""Open""AI가 되어야 할 모습이라고 생각함.

     Mistral CEO의 트윗: 초기 접근 고객 중 한 명의 지나치게 열정적인 직원이 오래된 모델의 양자화(그리고 워터마크가 찍힌) 버전을 유출했음. Mistral 7B 출시 당일에 전체 클러스터에 접근하자마자 이 모델을 Llama 2에서 재학습했으며, 그 이후로 좋은 진전을 이루고 있음을 알림.
     * 한 사용자는 GPT-4가 출시된 지 1년이 지났음에도 불구하고, 여전히 GPT-4를 따라잡기 위한 집단적인 노력이 특별한 비결 없이 매우 피곤할 것이라고 언급함. OpenAI가 언제든지 훨씬 더 나은 것을 내놓을 수 있다는 것을 알면서도 말이다.
     * 다른 사용자는 GPT-4에 근접했다는 주장에 대해, 리더보드가 GPT4-0314와 GPT4-Turbo 사이에 큰 격차가 있음을 보여주고 있으며, 만약 GPT4-0314에 겨우 근접했다면 여전히 최신 기술에서 1년 뒤처져 있다고 지적함.
     * 또 다른 사용자는 유출된 모델이 몇 달 안에 중요하지 않게 될 것이라고 언급함. 공식 모델이 나온 후 더 나은 모델이 출시될 것이며, 모델 자체보다는 빠른 발전 속도에 흥분한다고 말함.
     * 한 사용자는 이 모델이 왜 오픈소스 모델로 불리는지 의문을 제기함. 이는 인터넷에 유출된 독점 모델이며, Mistral이 공식적으로 출시할 때까지 그럴 것이라고 함. 개인적인 사용에 대해서는 Llama 1처럼 신경 쓰지 않겠지만, 어떤 기업도 이 모델을 사용하지 않을 것이라고 언급함.
     * 다른 사용자는 Mistral이 2015년 이전의 좋았던 옛날 기술 회사들을 떠올리게 한다고 말함.
     * 한 사용자는 GPT가 최신 버전의 아파치나 MySQL과 같아진 세상에서 우리가 수백만 개의 웹 호스트(죄송합니다, AI 호스트)로 돌아가는 모습을 어떻게 상상할 수 있을지 궁금해함.
     * 마지막으로 한 사용자는 GPT-4가 거의 1년 전에 출시되었고, OpenAI가 매달 새로운 혁신적인 기술을 출시하는 빠른 속도가 멈춘 것 같다고 언급함. OpenAI에 무슨 일이 일어나고 있는지, 최근의 혼란이 회사에 지연을 초래했는지, 아니면 어떤 '슈퍼웨폰'을 개발하고 있는지 궁금해함.
"
"https://news.hada.io/topic?id=13026","알래스카 CEO: 우리의 Max 비행기에서 많은 느슨한 볼트를 발견했습니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               알래스카 CEO: 우리의 Max 비행기에서 많은 느슨한 볼트를 발견했습니다

알래스카 항공 CEO, ""맥스 9 항공기에서 '많은' 느슨한 볼트 발견""

     * 알래스카 항공의 CEO 벤 미니쿠치는 이달 초 발생한 사고 이후 자체 검사를 실시한 결과, 보잉 737 맥스 9 항공기에서 '많은' 느슨한 볼트가 발견되었다고 밝힘.
     * 미니쿠치 CEO는 NBC 뉴스와의 인터뷰에서 이 사건에 대해 매우 실망하고 화가 나 있다고 전하며, 보잉에 대한 품질 프로그램 개선을 요구함.
     * 연방항공청(FAA)은 모든 맥스 9 항공기의 운항을 중단시키고 안전 조사를 시작했으며, 보잉의 맥스 9 생산 라인과 공급업체에 대한 감사를 발표함.

FAA, 또 다른 보잉 항공기 모델의 검사 촉구

     * FAA는 보잉의 품질 관리 시스템이 충분한지에 대해 의문을 제기하는 입법자들의 질문에 직면함.
     * 보잉 737 맥스 항공기의 이전 추락 사고를 고려할 때, 느슨한 볼트가 보잉의 안전한 항공기 제조 능력과 관련된 체계적 문제를 나타낼 수 있다는 우려가 제기됨.
     * 알래스카 항공은 맥스 9 항공기가 차지하는 비율이 가장 높은 주요 항공사로서, 수주간에 걸쳐 스케줄을 취소하고 재조정하면서 수천 명의 승객들이 혼란에 빠짐.
     * 미니쿠치 CEO는 보잉이 품질 관리를 개선하고 미래에 이러한 사건이 발생하지 않도록 보여줄 책임이 있다고 말하며, 알래스카 항공은 보잉 생산 라인에 대한 자체 추가 감독을 포함하고 있음.
     * 유나이티드 항공 CEO 스콧 커비는 CNBC와의 별도 인터뷰에서 보잉 737 맥스 10, 새로운 버전의 인기 제트기에 대한 자사의 향후 계획을 고려 중임을 밝힘.
     * 알래스카 항공은 보잉에서 항공기를 인도받기 전에 자체 감사 인력을 보내 품질 관리 시스템과 과정을 감사할 계획임.
     * 미니쿠치 CEO는 알래스카 항공이 맥스 10 구매를 계획하고 있었지만, 항공기 인증이 완료되면 알래스카 항공의 장기 전략적 계획에 대해 평가할 것이라고 언급함.
     * 알래스카 항공이 인수 과정에 있는 하와이안 항공은 보잉의 경쟁사인 에어버스의 항공기를 사용하고 있으며, 이는 알래스카 항공에 다양한 옵션을 제공함.
     * 보잉은 NBC 뉴스에 보낸 성명에서 항공사 고객들과 그들의 직원 및 승객들에게 심각한 불편을 초래한 것에 대해 사과하며, 이 항공기들을 안전하게 서비스로 복귀시키고 품질 및 납품 성능을 개선하기 위한 종합적인 계획을 실행하고 있다고 밝힘.
     * 미니쿠치 CEO는 2016년 알래스카 항공의 사장이 되었으며 엔지니어로서 경력을 시작했으며, 이번 사건이 발생한 것에 대해 믿을 수 없다는 반응을 보임.
     * 그는 보잉 공장에서 문제가 있었다는 것을 알고 있었으며, 국가교통안전위원회(NTSB)의 조사가 결함이 있는 문제의 원인을 밝혀낼 것이라고 언급함.

   GN⁺의 의견:
     * 이 기사는 항공 안전과 관련된 중요한 문제를 다루고 있으며, 항공기 제조사의 품질 관리와 관련된 심각한 우려를 제기함.
     * 알래스카 항공 CEO의 강력한 반응과 보잉에 대한 요구는 항공사와 제조사 간의 긴밀한 협력과 투명성의 중요성을 강조함.
     * 이 사건은 항공 산업 전반에 걸쳐 품질 관리와 안전 기준에 대한 재검토를 촉구하는 계기가 될 수 있으며, 승객과 항공사에게 장기적인 영향을 미칠 수 있음.

        Hacker News 의견

     * 알래스카 항공사는 보잉의 품질 관리 시스템과 과정을 감사하기 위해 자체 감사팀을 보내고 있음. 이는 알래스카 항공사가 보잉을 충분히 신뢰하지 못한다는 것을 의미함.
     * FAA(미국 연방항공청)도 보잉의 품질 절차를 검사 중이지만, 문제는 문과 볼트에만 초점을 맞추고 있다는 점임. 다른 부품과 시스템에서도 품질 문제가 있을 수 있으며, FAA는 비행기의 모든 것을 감사할 때까지 비행기 운항을 중단해야 한다는 의견이 있음.
     * 4년 전 보잉은 ""품질 변혁""의 일환으로 품질 검사 인력을 줄임. 품질 검사자들은 비행기 조립에 필요한 수많은 작업에 대해 정확히 완료되었는지를 공식적으로 승인하는 역할을 함. 계획에 따르면 검사 인력을 현재 3,000명에서 2,000명 이상으로 줄일 예정임.
     * 보잉의 이사회를 해임하고 회사가 정상화될 때까지 실제 엔지니어를 CEO 자리에 앉혀야 한다는 주장이 있음. 잘못된 문화가 지배하고 있으며, 이를 근본적으로 해결하지 않으면 변화가 없을 것이라는 의견이 있음.
     * 미국 육군의 병참장교로 일했던 사람은 자신의 팀이 포장한 낙하산으로 주기적으로 점프해야 했음. 이는 품질을 유지하기 위한 자연스러운 동기 부여가 됨. 보잉의 임원과 고위 관리자들도 개인용 제트기 대신 상업 항공편을 이용해야 한다는 의견이 있음.
     * 알래스카 항공사는 압력 경고가 있었던 보잉 비행기의 사용에 제한을 두었음. 보잉은 맥스 사건에 대한 비판을 받아 마땅하지만, 이번 사건에서 알래스카 항공사도 알려진 문제가 있는 항공기를 운항한 책임이 있을 수 있음.
     * 문을 고정하는 볼트만 검사되었고, 많은 경우에 볼트가 제대로 조여지지 않았다는 것이 발견됨. 항공기에 수십만 개의 볼트가 있을 수 있는데, 업계가 나머지 볼트에 대해 어떻게 신뢰를 가지고 있는지, 조사가 왜 플러그 도어 볼트에만 국한되는지에 대한 의문이 제기됨.
     * 유나이티드 항공의 CEO가 MAX10을 미래 계획에서 제외한다고 발언한 것과 함께 보잉은 심각한 문제에 직면해 있으며, 에어버스는 좋은 샴페인을 준비해야 할 상황임.
     * 알래스카 항공사의 CEO가 자체 감사팀을 보내는 것은 보잉에 대한 신뢰와 자신감이 완전히 무너졌음을 의미함.
     * 항공에 대해 잘 모르는 사람으로서, 이 상황이 실제로 들리는 것만큼 나쁜지, 아니면 과장된 것인지 궁금함.
"
