"https://news.hada.io/topic?id=10807","Youtube-to-Webpage - 유튜브를 웹페이지로 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Youtube-to-Webpage - 유튜브를 웹페이지로 만들기

     * 유튜브 비디오의 자막과 해당 시간의 스크린샷을 이용하여 웹페이지로 만들어주는 Perl 스크립트
     * yt-dlp + ffmpeg
     * 유튜브 주소를 넘기면 자막(vtt), 영상(webm), 스크린샷(jpg)와 함께 html/css 파일을 함께 생성해서 저장해줌

   yt-dlp 로 영상 다운받고, vtt 자막 timecode 기준으로 ffmpeg 을 이용해서 해당 지점 still image 를 추출한 후 페이지 구성을 하는 방식인것 같네요. ㅎㅎ

   ㅋㅋ example 로 쓰인 영상은,, 유튜브 최초의 영상이군요
"
"https://news.hada.io/topic?id=10886","Unity에서 Unreal 엔진으로 전환하기로 결정하셨나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Unity에서 Unreal 엔진으로 전환하기로 결정하셨나요?

     * (최근의 사태로) Unreal 엔진으로 전환하고자 하는 사람들을 위한 가이드

시작하기

     * Gameplay Framework 가이드 읽기
     * Epic의 ""Unreal Engine for Unity Developers"" 문서와 Epic Online Learning Library 추천
     * Class Viewer 및 UE5의 기능 비디오

[질문들]

  지금 이 모든 상황이 걱정되는데?

     * 에픽이 결국 어떤 식으로든 나를 망치게 되지 않을까?
          + 대기업을 믿어서는 안되지만, 그렇다고 무조건 안 믿을 필요는 없음
          + Epic의 EULA를 보면, EULA가 바뀔 경우 꼭 동의할 필요가 없다고 규정하고 있음
          + Unreal 버전을 유지하는 한 계속 사용 가능
          + 소스코드에 대한 접근 권한을 결합하면 꽤 안전함
     * 비용쪽은 어떻게 되나요? 총 5%는 별로 좋지 않은 것 같은데!
          + 백만 달러를 벌기 전까지는 무료이며, 그 이후 에는 총 5%이고, $10,000 USD 이상을 벌었던 분기에만 적용
          + 그래서 대부분의 사람들은 결국 아무것도 지불하지 않음. 가입비/구독료 같은게 전혀 없음
          + 명확히 말하면, 백만달러 벌고 추가로 1달러를 벌면, 그들에게 줘야할 것은 5센트임
     * 플랫폼/콘솔/에픽런처는?
          + 모든 플랫폼이나 콘솔에 게임을 넣을 수 있으며 모두 잘 지원되며 필수 사항은 없음
          + 필수가 아닌 ESG(Epic Game Store)에서 파는 것은, 위에서 얘기한 매출에 포함되지 않음
          + 다른 콘솔로 포팅하는 것은 다른 엔진보다 쉬움
     * 내 게임에 언리얼 로고 넣어야 하나?
          + 아님. 실제로 하려면 양식을 작성해야 하는데 거부될수 있음
          + 크레딧에는 언리얼 엔진을 사용하고 있다고 넣어야함
     * 텐센트가 에픽을 소유하고 있는거 아냐?
          + 그들은 비지배 지분을 소유하고 있음
          + 팀 스위니가 대다수를 소유하고 있고, 누구도 실질적인 발언권을 갖지 못함
          + 하지만 그래도 텐센테는 투자를 했고 일부를 소유하고 있음

  Unreal은 개념적으로 뭐가 다른데 ?

     * 언리얼 엔진과 유니티 엔진은 같은 의미의 게임 엔진이 아님
          + Unreal, idTech, Cryengine, Source, Snowdrop 등은 게임 개발 과정 에서 등장한 게임 엔진이지만, Unity와 Godot는 그렇지 않음
          + 이건 괜찮지만 동일한 것은 아니며 이를 사용하는 것은 근본적으로 다름
     * 모든 것을 직접 롤링하지 말것
          + 만들고 싶은 시스템이 이미 존재하지 않는지 확인할 것
          + 존재하지만 좋지 않은 것 같다면 아직 충분히 살펴보지 않은 것
     * 콘솔로의 포팅은 아웃소싱 작업이 아님
          + 물론 그럴 수도 있지만, Unreal은 하나의 프로젝트에서 모든 플랫폼을 대상으로 제작
          + Fortnite는 Switch, Android, iOS, Xbox, Playstation, PC 등에서 실행되며 모두 하나의 프로젝트로 구축
          + 당신도 이렇게 할수 잇음. 대부분의 경우 ""그냥 작동함""
          + ""애셋에 따라 스위치용은 텍스처를 더 낮은 해상도로 만들기"" 같은 기능은 이미 다 포함되어 있고 쉬움
          + 엔진을 컴파일하는 데 필요한 비밀 소스 코드를 얻으려면 콘솔의 서명 프로세스를 거쳐야 한다는 점을 명심할 것. 그리 어렵지는 않음
          + 어쨋거나 전체 엔진은 GitHub에 있음
     * 에셋 스토어는 많이 사용하지 않을 것
          + 언리얼 엔진 마켓플레이스(Unreal Engine Marketplace)라고 불리는 이곳에는 좋은 것도 많고 나쁜 것도 많이 있음
          + 일반적으로 Unity에서보다 덜 필요함
     * 최신 버전으로 업그레이드하는 것은 큰 문제가 아님
          + 대부분의 경우 Unreal의 다음 버전으로 업그레이드하면 어떤 문제도 발생하지 않음
     * Unreal은 중요한 기능을 갑자기 제거하지 않음
          + Epic이 대규모 기능을 더 이상 사용하지 않으면 실제로 제거되기 전에 오랫동안 남아 있는 경향이 있으며 업그레이드 경로가 제공됨
          + 예를 들어 현재 파티클 에디터는 나이아가라임. 나이아가라 이전에는 수년 동안 캐스케이드(Cascade)가 있었음. Cascade는 여전히 엔진에 있지만 나이아가라를 사용해야 하며 Cascade 파티클 시스템을 나이아가라로 자동 변환하는 기능을 제공함
          + 마찬가지로, 애니메이션 도구 Matinee(Gears of War, Mirror's Edge, Batman, Xcom 등의 컷씬을 담당)는 더 이상 사용되지 않고 몇 년 후 엔진에서 제거되고 Sequencer로 대체되었으며, 현재는 Martinee가 포함된 레벨을 열면 시퀀서로 완벽하게 변환됨
     * Unreal은 새로운 시스템을 신중하게 도입함
          + Unreal에 새로운 것이 들어오면 일반적으로 처음에는 Experimental 로 표시됨
          + 이는 Epic이 프로덕션에 의존하는 것을 권장하지 않는다는 것을 의미
          + 모든 새로운 기능은 선택 사항이며 이전 기능을 대체하지 않음
          + Lumen과 Nanite는 새롭고 멋지지만 여전히 선택 사항

  소문을 들었는데!

     * 배우기 어렵다며?
          + 그럴수 있음. 거대하고 강력한 기능을 제공하지만, 자신을 가르치는 교육은 잘 하지 못함
          + 포럼도 그리 좋지 않고, 인터넷엔 매우 자신있게 작성된 잘못된 정보들로 가득함
          + 구글링은 올해전까지는 괜찮았는데 지금은 그닥 좋지 않음
          + 혼자 배우려고 하지 말고, 언리얼 학습 커뮤니티에 참여할 것
     * C++이 형편없다고 들었는데!
          + 그럴 수도 있지만, Unreal의 C++는 다른 곳의 C++와 꽤 다름. 두렵더라도 시도해 볼 것
          + 하지만 대부분의 게임에는 C++가 많이 필요하지 않음
          + Blueprint(언리얼 엔진의 비주얼 스크립팅 시스템)로도 견고하고 유지 관리 가능하며 성능이 뛰어나고 복잡한 전체 게임을 빌드하고 출시 가능
     * Blueprint가 형편없다고 들었는데!
          + 실제로는 블루프린트가 지배중임. 비주얼 스크립팅이 좋을까? 다 형편없잖아! 나도 동의함
          + 하지만 블루프린트는 유일하게 좋은 것임. 놀라움. 엔진을 배우는데 도움이 됨. 여기서 수행하는 모든 작업은 C++로 적용됨
          + 당신이 누구든지, 블루프린트로 시작해야함. 블루프린트로 전체 게임을 구축할 수 있다는 것은 100% 사실임
          + 멀티플레이어/성능/유지보수 모두 가능. 빠른 프로토타이핑을 위한 것이 아님
     * 언리얼 엔진은 1인칭 슈팅 게임에 맞춰져 있어서, 내 장르에서 뭔가를 만드는 게 힘들다고 들었는데!
          + 사실이 아님. UE3 초반부에는 어느정도 그랬는데, UE4 부터는 전혀 아님. 누군가 거짓말 하는 것
          + 모든 장르의 무엇이든 똑같이 쉽게 만들 수 있음. 의심이 가면 언리얼 엔진으로 만든 게임 위키 목록을 볼 것
     * 화려한 그래픽을 원하지 않으면 어떻게 해야 해? 현실적인 스타일로 무언가를 만들지 않으면?
          + 괜찮음. 언리얼의 팬시한 그래픽은 쉽게 비활성화 가능하고, 여전히 멋진 도구의 이점을 누릴 수 있음
          + 언리얼은 선택할 수 있는 스타일 유형을 제한하지 않음
     * 2D 게임을 만들수 있어?
          + 물론. 완전! 평소처럼 orthographic 카메라를 이용해서 게임을 작성해
          + 애니메이션 메시 대신 스프라이트를 원할 경우 스프라이트를 처리하기 위한 Paper2D라는 시스템이 있음
     * 브라우저에서 플레이할 수 있는 게임을 만들 수 있어?
          + 안됨. 예전에는 HTML5 지원이 있었지만 더이상 사용되지 않음
          + Pixel Streaming외에는 직접 구현하지 않는한 방법이 없음. 요건 짜증남
     * 레벨 디자인 툴이 형편없다고 들었는데!
          + 내가 한 말을 들었을건데, 5.3부터 상황이 많이 좋아졌음
     * Linux와 Mac용으로 개발하는 것이 번거롭다고 들었는데!
          + 아님. 최근까지 지원 안되는 일부 Mac CPU가 있었지만 지금은 지원됨
          + PC와 마찬가지로 Epic Launcher를 통해 맥용 에디터를 다운로드 가능하고, 리눅스는 따로 링크 제공

   전환하는것도 비용이라 롤백해주길 바라고만 있습니다.
   그와 별개로 유니티로 신규 플젝은 안할거 같습니다.
"
"https://news.hada.io/topic?id=10879","Unity는 죽었다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Unity는 죽었다

     * ""신규 게임 프로젝트를 시작한다면, Unity를 사용하지 말 것""
     * Unity는 한때 비디오 게임 산업의 구세주였음. 상대적으로 사용하기 쉽고 하나가 아닌 여러 게임을 위한 엔진/프레임워크를 제공
     * 하지만 이제는 아님. 4개월 전에 프로젝트를 시작했다면 다른 것으로 전환을 고려할 것. Unity는 전혀 신뢰할 수 있는 회사가 아님
     * 무슨 일이 일어났을까? John Riccitiello가 회사를 인수하고 지난 몇년간 Unity 엔진은 유지 관리되지 않는 기능과 불규칙한 안정성을 둘러싸고 있는 기괴한 비즈니스 모델로 꾸준히 쇠퇴
     * Unity는 특정 기능에 대해서 내부 챔피언들을 가지고 있음
          + 그 챔피언들이 회사를 떠나버리면 그 기능은 시들해지고 사라짐
          + 유니티는 경쟁 제품을 인수하는데, 그 제품의 오너가 회사를 떠나버리면 더 이상 지원되지 않음
     * ""Stable"" 버전인 최근 LTS 버전을 사용하는데, 뭔가를 하기 전에 꼭 빈 페이지를 열어야만 하고 안 그러면 엔진이 충돌함
          + 유니티가 최근에 도입했지만 아직 수정하지 않은 오류때문. 프로젝트를 열때마다 몇분씩 더 걸리고 안정적이지도 않음
     * 최근의 결정은 바로 가격 플랜 변경. 중요한 부분을 분석해보면 이렇게 변경됨
          + 무료인 Unity Personal은 이제 오프라인에서 사용할 수 없음
          + 이제 모든 티어에서 개발자가 설치된 모든 게임에 대해 몇 센트의 정액 요금을 지불해야 함
          + Unity Plus(지원 중단 예정), Pro, Enterprise 레벨은 모두 구독료가 부과되며 대부분의 전문 개발자는 이를 사용해야 함
          + 다운로드 수에 따른 티어와 수입에 따라 지불 금액이 결정
          + Unity는 구독으로 돈을 벌어본 적이 없으며 항상 광고 플랫폼(f2p 모바일 게임 등에서 볼 수 있음)으로 돈을 벌었음
          + Unity 서비스를 사용하면 할인이 제공됨
          + 이 돈은 기본 안정 버전을 충돌 없이 실행할 수 없는 런타임 문제를 해결하는 데 도움이 될 것
     * 따라서 문제는 ""이미 구독료를 받고 있음에도 불구하고, 이제 설치당 비용도 부과하는 것""
          + 추가 비용도 내는 거면 구독이 무슨 의미가 있을까 ?
     * 또한 이 두가지 유형의 비용을 구분하는 것은 개발자의 몫임
          + Unity는 우리에게 많은 관리 작업을 부가한 것
          + Vampire Survior 의 장점은 가격이었는데, 이제 그런 것은 불가능 해짐
          + 99센트에 게임을 출시하면, Steam이 플랫폼 수수료 30%를 가져가고, Unity가 설치당 20센트를 가져가기에 1달러당 최대 46센트를 벌게됨
     * 잘 될지 안 될지 몰라서 개인적으로 게임을 개발 시작하더라도, 큰 성공을 거두면 처벌을 받게됨(punished)
          + Unity가 백분율이 아닌 정액요금을 요구하기 때문
          + 내가 가격을 내리더라도, Unity가 요구하는 금액은 변하지 않음
     * 이 모든 돈은 개발자의 주머니에서 나오지만, 퍼블리셔는 이에 연관되는 것을 원하지 않을 것
     * 앞으로 Unity를 사용한 게임의 발표가 줄어들 것으로 예상함

   다른 대안들이 궁금하신 경우 Unity 이후의 게임 개발

   또한 아래 글에는 기존에 Unity로 개발된 게임도 문제가 될 수 있다는 내용도 있습니다.
   Unity가 조용히 ToS 변경을 추적하는 GitHub 저장소를 삭제한 것으로 보임

   자살골

   살해 협박 때문에 Unity 오스틴/샌프란시스코 사무실을 주말까지 폐쇄하기로 했다네요.
   https://gamesindustry.biz/unity-closes-offices-in-wake-of-death-threat…

   Unity에서 Unreal 엔진으로 전환하기로 결정하셨나요?

   역시 물들어올 때 노 저어야죠. Epic 직원이 아니긴 하지만 ㅎㅎ

   아무리 생각해봐도 정신나간 정책인거 같습니다.

   Godot 엔진이 개발자 경험이 괜찮아서 꽤 넘어갈것으로 생각합니다. 저가형 게임 개발은 이제 Unity 로는 거의 불가능해보이네요. 광고 많이 태우는 X억원 이상 업계에 적용하면 큰 반발이 없었을텐데 아쉽네요.

   저도 Godot 엔진 경험이 정말 괜찮다고 생각해요. 빠르고 가볍고 직관적이고... 게다가 마음만 먹으면 뜯어 고칠 수 있는 범위가 무궁무진해서, 이미 괜찮고. 또 앞으로도 더 기대되는 엔진 인 것 같습니다. 특히 요즘 개발 방향이 정말 마음에 들어서...

   언리얼엔진은 최근에 '일정 수익 이전까지는 무료 사용 OR 별도 계약' 이렇게 바꿨던데 유니티는 오히려 이걸 역행하네요...

   보통 논테크 CEO 들이 이런 결정 내렸다가 망하는 경우를 좀 봤는데, 이번 경우도 이렇게 될까 우려되네요. 저는 개인적으로 7~8년 만에 유니티를 썼더니 개발 경험이 너무 안좋아져서, Godot 쪽을 배우고 있었습니다.

   21세기 게임업계 최악의 결정인 거 같아요... 이 단일한 결정으로 유니티는 이제 말마따나 쓸 이유가 없는 엔진이 된 것 같습니다

   제 무덤을 판다는 말이 딱이네요.

   Unity 플랜 가격 및 패키지 업데이트
"
"https://news.hada.io/topic?id=10887","Tails - 감시 및 검열을 막아주는 휴대용 OS ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Tails - 감시 및 검열을 막아주는 휴대용 OS

     * USB/DVD에서 부팅가능
     * 보안을 최대로 유지하기 위해 종료시 컴퓨터에 아무것도 흔적을 남기지 않도록 설계(방문한 웹사이트, 사용한 파일, 접속한 네트워크 등)
     * 모든 연결에 Tor 네트워크를 사용하여 온라인 개인 정보 보호와 검열을 우회하며, 제한 없는 인터넷 경험을 제공
     * 민감한 문서 작업과 안전한 커뮤니케이션을 위한 다양한 애플리케이션이 포함(Tor 브라우저, 썬더버드, KeePassXC, LibreOffice, OnionShare, Metadata Cleaner 등 )
     * 암호화된 저장소에 파일 및 설정을 저장하는 것도 가능
     * Tails는 Debian GNU/Linux를 기반으로 하는 무료 소프트웨어
     * 액티비스트, 기자, 가정 폭력 생존자, 디지털 세계에서 추가적인 개인 정보 보호가 필요한 사람들 등 다양한 개인들을 대상
     * Edward Snowden, Tor 프로젝트 공동 창립자인 Roger Dingledine 등이 지지
     * EFF도 Tails를 Tor 네트워크를 사용하는 가장 견고한 방법 중 하나로 추천

   Tails로 부팅한뒤에 VirtualBox로 다른 OS를 실행해주는 방식도 가능합니다.
   HiddenVM - 흔적을 남기지 않고 데스크탑 OS 사용하기

   3년전에 올린 글이긴 한데, HiddenVM 자체는 그 이후로도 Tail가 업데이트될때 마다 같이 업데이트 되고 있습니다.
   Windows 10, macOS Mojave, Linux Mint, Ubuntu, Xubuntu, Fedora, Whonix 등의 운영체제를 지원합니다.

        Hacker News 의견

     * 기사는 감시와 검열에 대한 보호를 목표로 설계된 휴대용 운영 체제인 Tails에 대해 논의합니다.
     * 일부 사용자들은 컴퓨터를 끄면 모든 것을 잊어버리는 Tails의 능력을 평화로운 컴퓨팅 경험을 제공한다고 칭찬합니다.
     * 그러나 다른 일부는 Tails가 매우 특정한 사용 사례를 가지고 있으며, 그것의 반 포렌식 기능 때문에 많은 사람들에게 필요하지 않다고 주장합니다.
     * Whonix는 보다 안전하고 프라이버시에 중점을 둔 운영 체제를 찾는 사람들에게 Tails의 대안으로 제안됩니다. 이는 Tor 익명성 네트워크와 Debian GNU/Linux를 기반으로 하며, DNS 유출을 방지하고 루트 권한을 가진 악성 소프트웨어로부터 실제 IP를 숨기도록 설계되었습니다.
     * 일부 사용자들은 Tails에서 잠재적인 취약점에 대해 우려하며, 더 불명확한 프로젝트가 더 안전할 수 있음을 제안합니다. 이들은 덜 알려진 프로젝트가 즉시 사용 가능한 취약점을 가질 가능성이 더 적다고 주장합니다.
     * 오픈 소스 소프트웨어의 신뢰성에 대한 우려도 있습니다. 일부 사용자들은 소스 코드를 검토하고 이를 바탕으로 바이너리를 빌드하지 않는 한, 어떤 오픈 소스 소프트웨어도 완전히 신뢰할 수 없다고 제안합니다.
     * 이러한 우려에도 불구하고, 일부 사용자들은 몇 년 동안 Tails를 사용해 왔으며, 이를 훌륭하다고 평가하며, Whonix 및 Qubes OS와 같은 관련 프로젝트를 언급합니다.
     * 한 사용자는 Whonix Workstation 사용 경험과 그것의 계층화된 방어 시스템에 대해 공유했으며, 신중한 설정과 보안 절차의 중요성을 강조했습니다.
     * 눈에 띄지 않는 것과 익명성 사이의 타협에 대한 논의가 있으며, 일부는 Tails와 같은 도구가 사용자들을 블렌드인보다 두드러지게 만들 수 있다고 주장합니다.
     * 일부 사용자들은 Tails의 기원에 대해 의문을 제기하며, 이것이 미국 군대 또는 보안 서비스의 한 분기에서 시작되었을 수 있다고 추측하며, 잠재적인 '꿀통' 시나리오에 대한 우려를 제기합니다.
     * Fireship에 의한 Tails에 대한 짧고 정보적인 비디오도 공유되었습니다.
"
"https://news.hada.io/topic?id=10762","Google Chrome, 브라우저 기록 기반 광고 타겟팅 추진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Google Chrome, 브라우저 기록 기반 광고 타겟팅 추진

     * Google Chrome이 점차 ""Enhanced Ad Privacy"" 기능을 출시하고 있으며, 이를 통해 웹사이트는 사용자의 브라우저 기록에 기반한 광고를 타게팅 가능
     * 7월에 릴리즈된 Chrome 115 버전에서 소개되었으며, 이는 Google의 Privacy Sandbox 프로젝트의 일부인 Topics API를 지원
     * Google은 내년에 광고 회사가 추적 및 분석을 위해 브라우저 데이터를 저장하는 서드파티 쿠키 지원을 중단할 계획이기 때문에, Topics API와 같은 대체 기술을 개발했음
     * Topics API는 웹사이트가 Chrome에 직접 사용자의 관심사를 묻고, 그들의 브라우저 기록에 기반하여 광고를 표시하도록 함
     * 일부 사용자들은 이 새로운 기능을 ""dark pattern""으로 비판. 왜냐하면 Chrome 사용자들은 광고로부터 개선된 개인정보 보호를 받고 있다고 생각할 수 있지만, 사실 Topics API는 이미 활성화되어 있고 브라우저 설정에서 비활성화해야 함
     * Google은 Topics API가 관심사를 가진 사람들을 식별할 수 없다고 주장. 그러나 일부 개발자들은 Topics가 브라우저 지문 인식에 유용할 수 있으며, Apple과 Mozilla는 개인정보 보호 문제로 인해 Topics를 채택하지 않을 것이라고 밝힘
     * 이 기능에 대한 팝업 알림은 지역에 따라 다르며, 다른 법적 체제를 반영. 미국에서는 opt-out이 허용되므로 사용자는 자동으로 opt-in되며, EU에서는 opt-in이 필요하므로 사용자에게 opt-in 또는 opt-out를 선택하도록 요청함
     * 사용자는 chrome://settings/adPrivacy 및/또는 chrome://settings/privacySandbox를 방문하여 Topics API 지원을 끌 수 있음
"
"https://news.hada.io/topic?id=10848","Quiet - 서버 없이 Tor만을 이용한 암호화된 P2P 팀 채팅","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Quiet - 서버 없이 Tor만을 이용한 암호화된 P2P 팀 채팅

     * 중앙 서버 없이 Tor + IPFS를 이용해서 팀 채팅이 가능한 Slack, Discord 대체제
     * 멤버들의 그룹인 ""커뮤니티"" 내부 사람의 기기들 간에만 Tor를 이용하여 직접 메시지/데이터 동기화
          + 다른 커뮤니티는 해당 데이터에 대해서 전혀 모름
     * TypeScript + Electron / ReactNative
     * 메시지 동기화는 OrbitDB 프로젝트에 의해 관리(Git + Gossip 프로토콜 + BitTorrent 의 매쉬업처럼 동작)
     * 접근 권한과 사용자 이름은 커뮤니티 소유자에 의해 부여되고, 새로운 회원들이 연결하고, 사용자 이름을 등록하고, 표준 암호화 인증서를 받기 위한 ""초대 코드""를 제공
     * 종단간 암호화, Slack과 유사한 채널, 이미지 및 파일 공유, 데스크톱 알림, 초대 링크 등의 기능을 제공
     * 커뮤니티를 생성하거나 가입하기 위해 이메일 또는 전화번호를 필요로 하지 않음
     * 계획된 기능에는 iOS 앱, 직접 메시지, 사용자 언급, 사용자 제거, 사용자 프로필, 메시지 삭제, 상태 업데이트, 이모티콘 반응, 다중 커뮤니티, 계정 복구, 개인 채널 등이 포함
     * 접근 권한을 부여하기 위해 표준 PKI(PKI.js)를 사용하고, 모든 데이터를 암호화하기 위해 Tor를 사용
     * Quiet의 개발자들은 ""서버를 누가 운영하나요?""라는 고민에 대한 최선의 대답이 ""아무도 아닙니다""라고 믿으며, 소프트웨어의 공격 표면에서 서버를 제거하여 소프트웨어를 더 개인적이고, 안전하고, 책임있게 만드는 것을 목표로 함

        Hacker News 의견

     * 'Quiet', 서버 없이 Tor를 사용하는 암호화된 P2P 팀 채팅 애플리케이션에 대한 기사
     * OrbitDB/IPFS를 기계, 특히 모바일 장치에서 실행하는 데 관련된 성능 문제와 Electron의 추가 부하에 대한 사용자들의 우려
     * IPFS 라이브러리의 지속적인 변화로 개발이 어려워질 수 있다는 우려
     * Tor와의 통합이 개발자들에게 시간을 소모하고 더 많은 성능 문제를 초래할 수 있다는 시각
     * 이러한 우려에도 불구하고, 일부 사용자들은 Discord나 Slack 같은 다른 플랫폼보다 더 빠르고 쉽고 개인적인 애플리케이션 설정 과정의 간단함을 칭찬
     * 일부 사용자들은 Tor의 사용에 의문을 제기하며, HTTPS가 Tor의 자원 집약적인 요구 사항 없이도 훌륭한 개인 정보 보호 수준을 제공할 수 있다고 제안
     * 메시지 기록이 중요한 기업 환경과 같은 설정에서 애플리케이션의 P2P 특성이 잠재적인 약점으로 보임
     * Tor를 통한 IPFS 운영의 실행 가능성에 대한 의문과 서버를 운영하는 엔티티를 신뢰해야 하는 필요성에 대한 우려
     * 일부 사용자들은 'Quiet'를 Tox와 같은 다른 플랫폼과 비교하며, 더 복잡하고 버그가 많을 수 있다는 의문을 제기
     * 텍스트 채팅과 파일 공유를 넘어서는 기능의 부재가 제한으로 보이며, 일부 사용자들은 Discord나 Slack 같은 플랫폼에 대한 실질적인 대안이 아니라고 제안
     * 비판에도 불구하고, 일부 사용자들은 'Quiet'의 개념을 흥미롭게 생각하고 네이티브 클라이언트를 원하는 바를 표현
"
"https://news.hada.io/topic?id=10883","Chromebooks, 10년 동안의 자동 업데이트를 받게 될 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Chromebooks, 10년 동안의 자동 업데이트를 받게 될 예정

     * 크롬북은 이제 10년 동안 자동 업데이트를 받게 되며, 이는 현재 시장에 나와 있는 어떤 운영 체제보다도 더 긴 기간
     * 업데이트는 4주마다 출시되어 크롬북의 보안, 안정성, 기능을 향상
     * 2024년부터는 2021년 이후 출시된 모든 크롬북이 10년 업데이트를 자동으로 받게 됨. 더 오래된 모델의 경우, 사용자와 IT 관리자는 플랫폼 출시로부터 10년 동안 업데이트를 연장할 수 있음
     * 크롬북이 더 이상 업데이트를 받지 못하더라도, Verified Boot와 같은 강력한 내장 보안 기능을 유지하며, 시스템을 시작할 때 자체 검사를 하고 탐지된 조작이나 손상을 수리
     * Google은 또한 인증된 수리 센터와 학교 기술자가 물리적 USB 키 없이 Chromebooks를 수리할 수 있도록 업데이트를 통해 수리 과정을 개선하고 있으며, 이로 인해 소프트웨어 수리 시간이 50% 이상 단축
     * 지속 가능성 측면에서 Google은 새로운 에너지 효율적인 기능을 도입하고 제조업체와 협력하여 더 많은 소비 후 재활용 재료 (PCR), 재활용 가능한 포장, 저탄소 배출 제조 공정으로 크롬북을 제작중
     * 수명이 다한 크롬북은 리셀러를 통해 판매하거나 재활용할 수 있으며, 리셀러는 학교에 금전적 또는 서비스 크레딧을 제공하고 크롬북을 재판매하거나 부품으로 사용하거나 완전히 재활용 가능
     * 크롬북은 학군에게 비용 효과적인 선택이며, 다른 기기보다 초기 비용과 운영 비용이 낮음. 3년 동안, 크롬북은 다른 기기에 비해 기기 당 운영 비용을 $800 이상 절약
     * Google은 크롬북을 모든 사용자에게 접근 가능하고, 도움이 되며, 안전하게 유지하는 데 계속해서 노력중

        Hacker News 의견

     * 2024년부터 2021년 이후 출시된 Chromebooks는 10년 동안 자동 업데이트를 받게 될 것입니다.
     * 이러한 변화는 교육 분야, 특히 Google에게 이러한 변화를 요청했던 부모, 교사, 학생들에게 중요한 승리로 여겨집니다.
     * 이번 조치는 e-폐기물 감소와 기술 장치의 빠른 소비 및 교체를 늦추는 방향으로 인정받고 있습니다.
     * 현대 웹 애플리케이션의 증가하는 요구에 따라 Chromebooks의 하드웨어가 10년 동안의 업데이트를 지속할 수 있을지에 대한 우려가 있습니다.
     * 일부 사용자들은 상대적으로 저렴한 비용에도 불구하고 Chromebooks의 성능 및 기능, 코딩을 포함하여 만족을 표현하고 있습니다.
     * 펌웨어 업데이트와 비Google 제조사의 약속에 대한 지원 범위에 대한 의문이 제기되고 있습니다.
     * 장기적인 펌웨어 업그레이드를 제공하지 않았던 하드웨어 제조업체들이 이러한 이니셔티브를 지원할지에 대한 의구심이 있습니다.
     * Google이 Pixelbook을 중단하고 개발자 노트북으로서의 잠재력에 대한 실망이 표현되고 있습니다.
     * 일부 사용자들은 모든 Chromebook 모델이 만료 날짜를 명확하게 표시해야 한다고 제안하고 있습니다.
     * Windows와 Linux 노트북과 비교되며, 이들은 기본적으로 무한정 업데이트를 받습니다.
     * Google이 더 나은 지원을 위해 Debian과 같은 표준 distro를 지원하도록 요청하고 있지만, 개인정보 보호 문제가 있습니다.
     * 일부 사용자들은 Google이 이 이니셔티브에 대한 약속에 대한 의구심을 표현하고 있습니다.
     * 사용자들은 PostmarketOS와 같은 대체 운영 체제를 설치하여 수명을 연장하려는 노력을 포함하여 이전 Chromebooks와의 경험을 공유하고 있습니다.
"
"https://news.hada.io/topic?id=10767","야생에서 포착된 NSO 그룹의 아이폰 제로-클릭, 제로-데이 익스플로잇","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                야생에서 포착된 NSO 그룹의 아이폰 제로-클릭, 제로-데이 익스플로잇

     * Apple, iPhone, iPad, Mac 컴퓨터 및 Apple Watch를 포함한 제품들에 대한 업데이트를 발표, NSO 그룹의 Pegasus 스파이웨어가 이용한 제로 클릭 취약점 해결
     * 워싱턴 DC 기반 시민사회 조직의 개인이 소유한 장치에서 Citizen Lab이 발견한 BLASTPASS라는 악용
     * BLASTPASS는 피해자의 상호작용 없이 최신 iOS 버전(16.6)이 실행되는 iPhone을 손상시킬 수 있음, iMessage를 통해 전송된 악의적인 이미지 사용
     * Citizen Lab은 자신들의 발견을 Apple에 공개하고 조사에 협력, 이로 인해 이 악용 체인과 관련된 두 개의 CVEs (CVE-2023-41064 및 CVE-2023-41061) 발행
     * 사용자들은 즉시 장치를 업데이트하고 이 특정 공격을 차단하는 것으로 알려진 Lockdown Mode를 활성화하는 것을 고려하라는 권고
     * BLASTPASS의 발견은 복잡한 사이버 위협에 대한 조기 경보 시스템으로 종종 작용하는 시민사회 조직을 지원하는 것의 중요성을 강조
     * Apple의 업데이트는 일반 사용자, 회사, 그리고 전 세계 정부의 장치를 안전하게 보호할 것

        Hacker News 의견

     * NSO 그룹의 아이폰 제로-클릭, 제로-데이 익스플로잇에 대한 기사 논의
     * 일부 사용자들은 Lockdown 모드의 배터리 절약 등의 잠재적 이점에도 불구하고 직접적인 위험에 처한 사용자들에게만 권장되는 것이 흥미롭다고 생각함
     * 이번 익스플로잇은 이미지 디코딩에서의 버퍼 오버플로우를 포함하며, 이는 2021년의 이전 익스플로잇과 유사함
     * iMessage가 가진 익스플로잇의 수에 대한 우려와 새로운 연락처로부터의 첫 메시지를 일반 텍스트로 제한하고 다른 메시지를 매우 제한된 하위 집합으로 제한하는 제안이 있음
     * 익스플로잇에 대한 수정이 발표와 동일한 날에 릴리스되었으며, 사용자들에게 업데이트를 적용하도록 촉구하는 기사 언급
     * 일부 사용자들은 NSO 그룹이 상업부의 블랙리스트에 포함되는 것이 충분하지 않고 더욱 엄격한 처벌을 받아야 한다고 믿음
     * Lockdown 모드가 이번 공격을 방지할 수 있었는지, 제로-데이 취약점을 이용한 해킹 공격을 받은 적이 있는지에 대한 추측이 있음
     * NSO가 사이버 테러 그룹으로 지정되어야 한다는 제안과 함께, 피해자(애플의 iMessage와 그 사용자들)보다는 가해자(NSO와 그 사용자들)에게 종종 비난이 가는 것에 대해 일부 사용자들이 놀라움을 표함
     * 기사는 iOS 16.6.1이 야생에서 활발하게 악용되고 있는 두 가지 취약점을 수정하는 것에 대한 진행 중인 스레드를 언급함
     * 일부 사용자들은 업데이트의 빈도와 익스플로잇의 가능성을 고려할 때 안드로이드 폰의 보안에 대해 우려를 표현함
     * 애플이 이러한 종류의 익스플로잇의 피해자들을 감지하고 보안 수정이 발행될 때 사용자들에게 알릴 수 있는 방법이 있는지에 대한 의문이 있음
"
"https://news.hada.io/topic?id=10857","'Prolog'의 힘","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              'Prolog'의 힘

     * Prolog은 단순하고 선언적인 로직 프로그래밍 언어로, Homoiconic하며 매우 동적입니다.
     * Prolog의 문법은 이해하고 사용하기 쉬우며, 모든 데이터는 Prolog 용어와 '절(clause)'이라는 단일 언어 요소로 표현됩니다.
     * Prolog에서의 절은 'Head :- Body' 형태로, Body가 유효하면 Head도 유효하다는 것을 의미합니다.
     * Prolog은 튜링 완전성을 가진 프로그래밍 언어로, 모든 알려진 계산을 그 절로 설명할 수 있습니다.
     * 선언적 언어로서 Prolog은 우리가 관심 있는 것을 명시하고, 찾고자 하는 해결책에 대해 무엇이 유효한지를 표현하는 데 초점을 맞춥니다.
     * Prolog의 선언적 특성은 매우 간결하고 명확하며 일반적인 명세를 가능하게 합니다.
     * Prolog은 로직 프로그래밍 언어로, 순수 Prolog 프로그램은 Horn 절의 집합으로 구성되며, 그 실행은 resolution의 특별한 경우로 간주될 수 있습니다.
     * Prolog은 Homoiconic 언어로, Prolog 프로그램이 유효한 Prolog 용어이기도 합니다. 이는 다른 Prolog 프로그램을 분석, 변환, 해석하는 Prolog 프로그램을 쉽게 작성할 수 있게 합니다.
     * Prolog은 매우 동적인 언어로, 프로그램을 쉽게 생성, 호출, 수정할 수 있습니다.
     * Prolog의 동적 특성은 다른 프로그래머와 일반 사용자가 제공하는 사용자 정의 규칙으로 확장 가능한 프로그램을 작성하는 데 이상적입니다.
     * Prolog은 매우 다재다능한 언어로, 그 관계적 특성으로 인해 Prolog 프로그램이 매우 유연하고 일반적입니다.
     * Prolog의 다재다능성과 힘은 검색, 통합, 인수 색인화, 제약 전파를 포함하는 암시적 메커니즘에 근거하고 있습니다.

        Hacker News 의견

     * 프로그래밍 언어 Prolog의 힘과 잠재력에 대한 기사
     * Prolog은 특히 인공지능 분야에서 문제 해결에 대한 독특한 접근법으로 찬사를 받음
     * 사용자들은 Prolog를 다른 프로그래밍 언어와 비교하여 다른 사고 방식을 요구하는 경험으로 묘사
     * 그러나, Prolog은 다른 언어와 시스템과의 상호 운용성에서 어려움을 겪음
     * 일부 사용자들은 특히 사용자 인터페이스를 만들거나 파일 시스템에 접근하는 것과 같은 다른 애플리케이션에 Prolog를 통합하는 것이 어려움을 겪음
     * 이러한 도전에도 불구하고, 사용자들은 독특한 프로그래밍 패러다임과 제공하는 다른 관점 때문에 Prolog 학습을 권장
     * 기사에서는 ""The Power of Prolog""을 언어 학습을 위한 우수한 튜토리얼 시리즈로 언급
     * Prolog은 수학적, 규칙 기반 추론에서 강점을 보이지만, 다른 언어의 라이브러리와 상호 작용이 필요한 애플리케이션 또는 GUI 생성에서 어려움을 겪음
     * 일부 사용자들은 Prolog를 데이터 분석에 성공적으로 사용하였으며, 기호 문제 해결에서의 우아함을 칭찬
     * 그러나, Prolog의 과학 계산 및 문자열 조작 지원은 불량으로 간주됨
     * 프로그래밍 언어 Shen은 Prolog의 완전한 구현을 포함하고 있다는 점이 언급됨
     * 사용자는 Prolog에서 A* 그래프 검색을 구현하는 경험을 공유하였으며, 이를 도전적인 작업으로 묘사
     * 기사에는 SWI-Prolog 온라인 노트북 및 논리 프로그래밍에 대한 책을 포함한 Prolog 학습을 위한 온라인 자료 링크가 포함됨
"
"https://news.hada.io/topic?id=10835","구글 Domains, 신규 도메인 등록 중단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        구글 Domains, 신규 도메인 등록 중단

     * 2023/9/7 자로 Squarespace가 모든 도메인 및 관련 고객 계정을 인수
     * 신규 도메인 등록 기능은 중단되며, 기존 도메인 관리만 가능
     * 고객과 도메인 정보는 몇달간 Squarespace 쪽으로 이전 진행 예정

   구글, Domains 사업을 종료하고 Squarespace에 매각
   Google Domains 종료 예정

   위 구글 도메인스 페이지에 있는 Squarespace 링크는 Affiliate 링크라서, 사용자가 클릭해서 이동후 Squarespace에서 뭔가를 구입하면 구글이 커미션을 얻습니다.
   꼼꼼하네요 구글. 근데 왜 이리 얄밉죠
"
"https://news.hada.io/topic?id=10775","보안 연구자를 대상으로 하는 북한의 활발한 캠페인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      보안 연구자를 대상으로 하는 북한의 활발한 캠페인

     * Google의 위협 분석 그룹(TAG)는 최근 보안 연구원을 대상으로 한 공격이 있었고, 이에 악용된 제로 데이 취약점이 있다는 것을 확인했습니다.
          + 제로 데이 취약점은 해당 공급업체에 보고되었으며, 패치가 진행 중입니다.
     * 북한의 공격자는 트위터와 같은 소셜 미디어를 통해 공격 대상과 활발하게 대화를 나누며 관계를 구축했습니다.
          + 실제로 한 보안 연구원과 서로 관심 있는 주제에 대해 몇 달간 대화를 나누었으며 신뢰를 쌓았습니다.
          + 이후 이들은 암호화된 메시징 앱으로 이동하여 인기 있는 소프트웨어 패키지에 대한 최소 1개의 제로 데이 취약점이 포함된 악성 파일을 전송했습니다.
     * 악용에 성공하면 셸코드는 가상 머신 검사를 하고, 각종 정보를 공격자의 서버로 전송했으며, 이는 이전에 발견된 북한의 취약점 공격과 유사한 방법으로 구현되었습니다.
     * 또한 제로 데이 취약점을 통한 표적 공격 외에도, 리버스 엔지니어링을 위한 오픈 소스 도구를 개발하여 Github에 출시했습니다.
          + 이 프로그램은 2022년 9월 30일에 처음 게시되었으며, 이후 활발하게 개발되어 여러 차례 업데이트가 있었습니다.
          + 하지만 이 도구에는 공격자의 서버에서 임의의 코드를 다운로드하고 실행할 수 있는 백도어가 포함되어 있었습니다.
          + TAG는 이 도구를 사용한 경우 시스템을 검사하고 필요한 경우 OS를 다시 설치할 것을 권장합니다.
     * 식별된 모든 악성 웹 사이트와 도메인이 Google의 세이프 브라우징에 추가되었으며, 영향을 받았을 수 있는 Google 계정에 정부 지원 공격 경고를 전송했습니다.
          + 또한 dbgsymbol, blgbeach, @Paul091_ 등 모든 악성 도메인과 파일, 계정을 공개했습니다.

     * HN 스레드

   표적 공격도 무섭지만, 오픈 소스 프로젝트에 악성 코드를 넣은 부분은 더 조심해야 할 것 같네요.

   해당 도구의 소스 코드는 정상적인데, Github Release에 포함된 파일에는 악성 코드가 있었다고 합니다.
   깃허브 별도 200개가 넘게 있었다고...

   갑자기 연달아 보안 뉴스가 생기는군요. 다들 보안에 신경 쓰시어야 할 것 같습니다.

   소스코드는 그래도 검증이 될 것 같은데, Release와 다를 것이라는 생각은 못해봤네요. 보안은 끝이없네요..

   이런 것도 일종의 공급망 공격인 것 같습니다.
   마침 1개월 전에 릴리즈된 Go 1.21.0의 경우 최초로 자신들의 툴체인 빌드 결과물이 완전히 재현 가능하다는 내용의 게시물을 블로그에 올렸더군요. 그 글의 처음 두 문단은 다음과 같습니다.

   Perfectly Reproducible, Verified Go Toolchains

     오픈 소스 소프트웨어의 주요 이점 중 하나는 누구나 소스 코드를 읽고 그 기능을 검사할 수 있다는 것입니다. 하지만 대부분의 소프트웨어, 심지어 오픈 소스 소프트웨어도 컴파일된 바이너리 형태로 다운로드되기 때문에 검사하기가 훨씬 더 어렵습니다. 공격자가 오픈 소스 프로젝트에 대한 공급망 공격을 실행하려면 소스 코드를 수정하지 않은 채로 제공되는 바이너리를 교체하는 것이 가장 눈에 띄지 않는 방법입니다.

     이러한 종류의 공격에 대응하는 가장 좋은 방법은 오픈 소스 소프트웨어 빌드를 재현 가능하게 만드는 것입니다. 즉, 동일한 소스로 시작하는 빌드가 실행될 때마다 동일한 출력을 생성하도록 하는 것입니다. 이렇게 하면 누구나 실제 소스에서 빌드하고 재빌드된 바이너리가 게시된 바이너리와 비트 단위로 동일한지 확인하여 게시된 바이너리에 숨겨진 변경 사항이 없는지 확인할 수 있습니다. 이 접근 방식은 바이너리를 분해하거나 내부를 들여다보지 않고도 바이너리에 백도어나 소스 코드에 없는 기타 변경 사항이 없음을 증명합니다. 누구나 바이너리를 확인할 수 있으므로 독립적인 그룹이 공급망 공격을 쉽게 탐지하고 보고할 수 있습니다. (DeepL 번역)

   왜 이런 걸 걱정하는가 했더니, 이미 약 1년 전부터 이런 종류의 공격이 비밀스럽게 이루어지고 있었던 모양입니다. 아 세상 참 흉흉하여라…

   저도 깃허브에 코드랑 같이 올라온 건 약간 더 신뢰하는 편인데... 조심해야겠어요.
   항상 코드 검토 하고 직접 빌드하는 방법 밖에 없나...

   HN 스레드의 AI 요약
     * 0xDEAFBEAD: 이 도구와 같은 멀웨어가 포함된 리포지토리에 대한 경고 배너를 추가할 것을 Github에 제안합니다.
     * zb3: 작성자가 신뢰할 수 있어 보인다고 해서 GitHub의 코드를 맹목적으로 신뢰하지 말 것을 상기시킵니다.
     * nneonneo: 소스는 깨끗해 보이지만 바이너리는 백도어될 수 있으므로 멀웨어가 소스 코드 자체가 아닌 바이너리 릴리스에 있을 가능성이 있다고 생각합니다.
     * bowmessage: 공격자가 제어하는 도메인에서 멀웨어를 다운로드할 수 있는 의심스러운 자동 업데이트 기능을 지적합니다.
     * gregsadetsky: 도구의 미러 저장소가 여전히 작동하는 것을 발견하고 업데이트 프로세스가 어떻게 작동하여 감염을 허용하는지 설명합니다.
     * codetrotter: 삭제되기 전 원본 리포지토리의 아카이브를 제공했습니다.
     * dantillberg: URL에서 파일을 다운로드하고 실행하는 자동 업데이트 코드에 대해 설명합니다.
     * bdowling: 처음에는 문제를 오해했지만 공격자가 제어하는 업데이트 URL이 문제였다고 명확히 밝혔습니다.
     * saagarjha: 제로데이는 업데이트 기능을 통해 공격자의 코드를 실행하는 소프트웨어의 기능에 있었다고 생각합니다.
     * rightbyte: 북한 소행이라고 단정할 수 있는 증거가 정말 있는지 의문을 제기합니다.
"
"https://news.hada.io/topic?id=10838","Ask HN: 왜 Visual Basic은 사라졌는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask HN: 왜 Visual Basic은 사라졌는가?

     * 30년 가까이 소프트웨어 개발자로 활동한 경험
     * 90년대 VB 사용에 대한 회상
     * 기술의 발전에도 불구하고 오늘날 개발 경험과 비교 불가
     * 기술의 후퇴에 대한 주장
     * Microsoft 제품에 대한 비판적인 시각
     * Visual Basic과 같은 생산성을 제공하는 도구 찾지 못함
     * Visual Basic을 포기한 이유에 대한 의문
     * 탄탄한 대체품이 등장하지 않은 이유

        Hacker News 의견

     * Visual Basic(VB)의 감소는 Microsoft의 .NET과 공통 언어 런타임으로의 전환, Java/Sun의 위협에 대한 반응 등 여러 요인 때문이었다.
     * Microsoft가 VB를 객체 지향 언어로 재작성하고 IDE를 VB6 시각적 구축 패러다임에서 이동시킨 결정은 많은 사용자를 뒤로 남겼다.
     * 웹의 부상과 젊은 개발자들에 의한 PHP의 채택도 VB의 감소에 기여했다.
     * Microsoft의 ""Visual .NET"" 출시는 같은 기능을 위해 코드를 재작성하는데 상당한 금액을 들여야 했던 개발자들과 기업들을 분노하게 했다.
     * Android, iOS, MacOS, Linux 및 웹을 포함한 Windows 이외의 플랫폼의 부상은 VB의 관련성을 줄였다.
     * Microsoft가 ""열정적인"" 개발자와 ""단일/소규모"" 팀 개발자를 죽이기로 한 결정, 그리고 Access의 천천히 죽어가는 것도 VB의 감소에 기여했다.
     * 그럼에도 불구하고 VB는 금융 등 일부 산업에서 여전히 사용되며, Excel을 위한 VBA가 널리 사용되고 있다.
     * VB의 생산성이 기억만큼 좋지 않았다고 주장하는 사람들도 있으며, VB 앱들은 종종 현대 웹사이트보다 단순하고 devops 자동화, 배포 자동화, 로깅, 접근 제어 등의 영역에서 부족했다.
     * 인터넷은 VB가 사용되던 기능을 대부분 인수했으며, HTML + JS + firebase/다른 데이터 저장소가 어느 플랫폼에서나 작동하고 세계 어디서나 접근 가능한 애플리케이션을 만드는 데 사용되었다.
     * Microsoft가 CLR을 C# Language Runtime으로, 공통 언어 런타임이 아닌 것으로 집중하면서 VB를 죽게 된 것이라고 믿는 사람들도 있다.
     * VB6에서 VB.NET으로의 전환은 GUI-데이터베이스 프로젝트에서 PHP/MySQL/HTML/CSS로의 전환과 동시에 일어났지만, 이전 버전과의 호환성이 없는 것이 전환을 더 쉽게 만들었다.
     * VB의 감소에도 불구하고, Google의 AppSheet와 같은 드래그 앤 드롭 GUI/데이터베이스 도구에 대한 수요는 여전히 있다.
     * VB의 감소는 기술의 자연스러운 주기 때문이라고 주장하는 사람들도 있으며, VB는 제한적이고 지루하며 별난 언어였다.
     * VB에 대한 탄탄한 대체품의 부재는 웹 개발 커뮤니티가 복잡성을 사랑하고 지루한 비즈니스 코드를 경멸하는 데 기인한다.
     * Lotus Notes, Dbase 3 and 4, Paradox, Microsoft Access, Foxpro와 같은 오래된 기술의 생산성이 현대 기술에 의해 따라잡히지 않았다고 믿는 사람들도 있다.
"
"https://news.hada.io/topic?id=10862","LÖVE - Lua로 2D 게임을 개발하는 무료/오픈소스 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 LÖVE - Lua로 2D 게임을 개발하는 무료/오픈소스 프레임워크

     * LÖVE는 Lua 프로그래밍 언어를 사용하여 2D 게임을 만들기 위한 무료 오픈소스 프레임워크
     * Windows, Mac OS X, Linux, Android, iOS 등 다양한 플랫폼과 호환
          + 개발한 .love 파일을 실행파일과 번들링 하는 방식
     * 상업용 프로젝트에도 제한없이 이용 가능
     * LÖVE 커뮤니티는 활발하며, 포럼, Discord 서버, IRC 채널을 통해 지원을 제공
     * LÖVE를 시작하는 것은 간단하며, 텍스트와 이미지를 그리고, 소리를 재생하는 등의 기본 작업에 대한 코드 스니펫이 제공
     * 상업 프로젝트(스팀의 일부게임이 이용)부터 게임 잼, 프로토타이핑에 이르기까지 다양한 목적으로 사용
     * 오디오, 데이터, 이벤트, 파일시스템, 그래픽, 이미지, 조이스틱, 키보드, 수학, 마우스, 물리, 사운드, 시스템, 스레드, 타이머, 터치, 비디오, 윈도우 등 프레임워크의 다양한 측면을 다루는 포괄적인 문서가 제공

   저도 2009년 소개받은 라이브러리군요. 잊고 있었는데 유니티 사태로 다시 수면 위로 떠올랐군요. 근데 한국에서 루아라는 언어 때문인지 반응이 영 별로였는데... 대체 왜 미적지근한 반응인지 이해를 못하겠지만 이번에 좀 다시금 되새기는 계기가 됐으면 합니다.

        Hacker News 의견

     * LÖVE는 Zerobrane IDE와 결합하여 화면에 픽셀을 표시하는 소프트웨어 개발에 있어 개발자들 사이에서 인기가 있습니다.
     * 이 프레임워크와 IDE는 가벼워서 RPI에서도 편안하게 실행할 수 있습니다.
     * LÖVE는 훌륭한 문서화, 도움이 되는 포럼, 그리고 강력한 라이브러리 생태계를 갖추고 있습니다.
     * 일부 사용자들은 개발자들이 API 변경을 빠르게 진행하고, 특히 안드로이드에서 렌더링이 느리게 느껴질 수 있다는 점을 지적했습니다.
     * 이 프레임워크는 ""Move or Die""라는 첫 번째 큰 상업적 성공을 거둔 게임을 만드는 데 사용되었습니다.
     * LÖVE는 ""Community""라는 TV 쇼에서 게임을 재현하는 데도 사용되었으며, 이는 이 프레임워크로 만들 수 있는 게임의 복잡성을 보여줍니다.
     * LÖVE는 간단함과 훌륭한 문서화 때문에 게임 프로그래밍에 처음 도전하는 사람들에게 추천됩니다.
     * 게임 프로그래밍에 언급된 다른 플랫폼들로는 RAYLIB와 PICO8이 있습니다.
     * LÖVE는 안드로이드 앱을 만드는 데 사용될 수 있으며, 사용자들은 깔끔한 API와 코드만의 경험을 칭찬했습니다.
     * LÖVE에는 LÖVR이라는 VR/3D 버전도 있으며, 이는 시작하기 쉽지만 완성된 제품을 만드는 데는 도전적일 수 있습니다.
     * LÖVE는 Fennel이라는 Lisp와 비슷한 프로그래밍 언어와 함께 사용될 수 있습니다.
     * 일부 사용자들은 Lua의 Just-In-Time 컴파일러인 LuaJIT가 RISC-V에 친화적이지 않다는 우려를 표현했습니다.
     * LÖVE는 2009년부터 Hacker News에서 논의된 이력이 있습니다.
     * Solar2D는 이전에는 Corona SDK라고 알려져 있었으며, Love2D를 기반으로 하고 있으며 ""Bubble Ball""이라는 게임을 만드는 데 사용되었습니다.
"
"https://news.hada.io/topic?id=10888","나와 협력하거나 지원하기 대신, Google이 나의 아이디어를 훔쳤다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 나와 협력하거나 지원하기 대신, Google이 나의 아이디어를 훔쳤다

     * 개발자 Oz Ramos가 Google이 그의 핸즈프리 프로젝트 아이디어를 도용했다고 주장하는 기사.
     * 노숙 상태에서 2018년부터 시작한 Handsfree.js라는 프로젝트를 개발한 Ramos, 뇌졸중으로 회복 중인 쉼터 주민을 돕기 위함.
     * Google의 Lawrence Maloney가 그의 프로젝트와 접근성 가능성에 대해 연락했지만, 세부 사항을 공유하고 지원을 요청한 후 Ramos는 소외되었다는 주장.
     * 노트북이 도난당한 후에도 Ramos는 Handsfree.js 개발을 계속하였으며, Google PAIR를 포함한 여러 기관으로부터 지원을 받았음.
     * Ramos는 Google에 대한 실망감과 분노를 표현하면서도, 그의 아이디어가 사용되는 것을 확인하며 인정받았다는 것을 밝힘.
     * Ramos의 작업을 지원한 카네기 멜론 대학의 교수는 그의 이야기를 확인하고 Google이 그의 Handsfree.js를 Project Gameface에 표절했다고 비난.
     * 교수는 Google이 그의 작업을 도용하는 대신 Ramos와 협력하여 뛰어난 개발자로서 그를 격려할 수 있었다고 제안.
     * 교수는 Google로부터의 사과와 Ramos의 Gameface 프로젝트에 대한 공식적인 기여 인정을 요구.
     * 기사는 Google이 이러한 주장에 대해 답변할 것을 촉구하며 마무리.

        Hacker News 의견

     * 프로그래머 Oz의 주장에 대한 기사, Google이 그의 아이디어를 훔쳤다고 주장
     * PTSD에 시달리는 베테랑 Oz, 노숙 생활 중 프로그래밍을 배우고 불우한 상황에 처한 사람들을 돕는 프로젝트 개발
     * 그의 프로젝트는 세계 최대의 소프트웨어 회사 중 하나인 Google의 주목을 받을 만큼 성공적
     * 그러나 Google은 Oz와 협력하거나 그의 프로젝트를 지원하는 대신, 그의 아이디어를 도용했다는 주장
     * 일부 댓글러들은 Oz의 제품 출시 능력과 창의적인 기술에 대한 존경을 표현
     * 개발자들이 이러한 상황을 방지하기 위해 프로젝트에 설정하는 라이선스를 신중히 고려해야 한다는 제안
     * 이 문제는 Google 내 특정 개인들 때문이라고 믿는 이들, Google의 법무부가 문제를 해결할 수 있다고 생각
     * Google에 대한 이러한 주장에 대한 응답 요구
     * 일부 댓글러들은 Oz를 어떻게 지원할 수 있을지 묻고, 그의 능력과 미래 프로젝트에 대한 잠재력을 인정
     * 소수의 댓글러들은 Google의 행동의 합법성에 의문을 제기, ""아이디어를 훔친다""는 이유로 누군가를 고소할 수 있는지 궁금해함
     * 일부는 이러한 주장에 대해 회의적이지만, 제공된 지지 자료 때문에 이 사례가 심각하다고 믿음
     * 한 댓글러는 이슈에서 언급된 Google 직원의 이야기를 듣는 데 관심을 표현
"
"https://news.hada.io/topic?id=10776","Design Principles - 디자인 원칙과 방법에 대한 오픈소스 컬렉션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Design Principles - 디자인 원칙과 방법에 대한 오픈소스 컬렉션

     * 회사 또는 개인이 정리한 다양한 디자인 원칙 및 디자인 방법을 보기 쉽게 정리
     * 195개의 예제, 1448개의 디자인 원칙, 167명의 창작자
     * Tag: Universal, Specific, People, Organisations, Software, Hardware, Infrastructure, Language
"
"https://news.hada.io/topic?id=10814","NGINX Unit - 경량/다목적 유니버설 웹 앱 서버 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  NGINX Unit - 경량/다목적 유니버설 웹 앱 서버 오픈소스

     * 리버스 프록시, 정적 애셋 서빙, 웹앱 실행등으로 사용
     * 다양한 언어의 어플리케이션 코드 실행 가능: Go, Java, Node.js, Perl, PHP, Python, Ruby, WebAssembly
     * 최신 어플리케이션 스택의 여러 계층을 성능/레이턴시/확장성에 초점을 두고 하나의 솔루션으로 압축
     * 복잡도에 관계없이 모든 웹 아키텍처를 지원하도록 설계되어, 대규모 기업부터 개인 홈페이지까지 지원
     * 프로덕션 수준의 부하에도 안정적인 스케일링 지원
     * RESTful JSON API를 통해 중단없이 설정의 동적 업데이트 가능 (OpenAPI 스펙 제공)
     * NGINX Unit의 아키텍처는 비동기/멀티스레드로, 보안과 견고성을 보장하면서 현대 컴퓨팅 플랫폼의 사용을 최대화하기 위해 여러 프로세스로 구성
     * macOS, Docker, Amazon Linux, Fedora, RedHat, Debian, Ubuntu에 대한 빠른 설치 옵션을 제공

        Hacker News 의견

     * PHP와 함께 사용될 때 Nginx Unit이 Nginx과 php-fpm의 조합을 능가한다는 보고.
     * Docker 환경에서 Nginx Unit을 통해 PHP를 실행하면 http와 fpm을 위한 별도의 컨테이너가 더 이상 필요하지 않아, Apache의 mod_php와 유사해짐.
     * Nginx Unit은 이진 컴파일 언어, Go, JavaScript (Node.js), Java, Perl, PHP, Python, Ruby, WebAssembly를 포함한 다양한 언어를 지원.
     * 일부 사용자들은 API를 통한 설정에 대한 강조를 의문시하며, 예측 가능한 시작 상태를 위해 파일을 통해 앱 서버를 설정하는 것을 선호.
     * Nginx Unit은 스택에서 php-fpm을 제거할 수 있게 해주며, 이는 PHP 앱을 컨테이너에 넣을 때 유익.
     * 사용자들은 복잡한 PHP Laravel 앱을 Nginx Unit으로 테스트할 때 상당한 속도 향상을 보고함.
     * Nginx Unit은 별도의 Docker 컨테이너가 필요 없이 각각 다른 언어 런타임/버전을 사용하는 여러 앱을 실행할 수 있게 해줌.
     * 일부 사용자들은 Nginx가 Nginx Unit이 Nginx과 어떻게 다른지, 그리고 왜 별도의 것이어야 하는지 설명하는 페이지를 제공해야 한다고 제안.
     * Nginx Unit의 구성 인터페이스는 JSON에 많이 의존하며, 일부 사용자들은 이를 번거롭게 느낌.
     * ""Universal"" 라벨에도 불구하고 Nginx Unit은 C++, Rust, ASP.NET을 지원하지 않지만 Perl은 지원.
     * 일부 사용자들은 여전히 Nginx Unit이 표준 Nginx보다 어떤 이점이 있는지, 그리고 Curl을 통한 JSON 제어와 내장 언어 지원에 대해 의문을 제기.
     * Nginx Unit은 자동 TLS 인증서를 포함하지 않으며, 이는 여전히 Certbot으로 수동으로 수행됨.

     * PHP와 함께 사용될 때 Nginx Unit이 Nginx과 php-fpm의 조합을 능가
     * Docker 환경에서 Nginx Unit을 통해 PHP를 실행하면 http와 fpm을 위한 별도의 컨테이너가 더 이상 필요하지 않아, Apache의 mod_php와 유사해짐

   이 두 부분이 흥미롭네요.

   이 방식이 조커 컨테이너에서 권장하는 컨테이너당 한 개의 서비스와도 더 맞아서 시도해봤었는데, 한 앱 내에서 라라벨 같은 라우팅 방식 앱과 단순 php 파일 서빙을 같이 할 수는 없는 제약이 있어서 포기한 적이 있습니다.
   기본적으로 러닝 커브가 가파르다고 느껴지기도 했습니다.
"
"https://news.hada.io/topic?id=10863","리눅스 커널 인터랙티브 맵","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             리눅스 커널 인터랙티브 맵

     * Linux kernel의 구조를 포함한 다양한 하위 시스템, 기능, 인터페이스에 대한 상세 시각화를 제공하는 지도
     * 레이어/기능별 구성도. 상세 항목을 클릭해서 해당 소스로 이동 가능
          + 레이어 : User Space Interfaces, Virtual, Bridges, Logical, Device Control, Hardware Interfaces
          + 기능 : Human Interfaces, System, Processing, Memory, Storage, Networking
          + Electronics: User Peripherals, I/O, CPU, Memory, Storage Controlers, Network Controlers

        Hacker News 의견

     * 사용자들로부터 긍정적인 반응을 받은 Linux Kernel의 대화형 지도에 대한 기사
     * 사용자 공간 프로그램과 이 지도를 통합하고 eBPF나 감사 로그로 애니메이션화하는 가능성에 대한 기대감
     * 3D 버전 지도에 대한 관심, 실행 중인 시스템을 VR에서 탐색하는 것을 제안
     * 전시장에서 실시간으로 Linux를 시각화하기 위해 이 지도를 사용하는 것을 상상하는 사용자들
     * 지도의 화살표에 대한 라벨링과 설명의 부재로 신규 사용자들에게 혼란을 줄 수 있다는 비판
     * 코드 라인 수에 따른 각 하위 섹션의 상대적 크기를 보여주는 뷰를 만들자는 제안
     * 지도가 어떤 코드베이스를 받아들일 수 있는지, 아니면 특히 Linux 커널을 위해 설계되었는지에 대한 의문 제기
     * 링크가 패닝 시 열리기 때문에 지도를 탐색하는 것이 어렵다는 UX 피드백 제공, 사용자들은 대신 클릭 시 링크가 열리기를 제안
     * JavaScript 없이도 잘 작동하며 핀치 줌을 쉽게 사용할 수 있다는 지도에 대한 칭찬
     * 코드의 다이어그램을 통해 Linux를 더 잘 이해하고 싶어하는 사용자들, 일부는 Linux 0.0.1을 컴파일하려는 시도
     * 주제에 대한 이전 토론이 연결되어 있음, 주제에 대한 지속적인 관심을 나타냄
"
"https://news.hada.io/topic?id=10788","Avatartion - Notion 스타일의 아바타 생성기 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Avatartion - Notion 스타일의 아바타 생성기 오픈소스

     * 얼굴, 머리, 눈, 입, 외투, 악세사리 등을 선택해서 아바타 생성
     * 배경색 지정하여 PNG로 다운로드 가능

   바라보고 있는 사람

   Notion-Avatar - 노션 스타일의 아바타 만들기

   요거랑은 살짝 다른듯 하네요.
"
"https://news.hada.io/topic?id=10790","'Aardvark'd': 18년 후의 Fog Creek 다큐멘터리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  'Aardvark'd': 18년 후의 Fog Creek 다큐멘터리

     * 2005년 다큐멘터리 ""Aardvark’d: 12 Weeks with Geeks""에 대한 기사, Joel Spolsky의 소프트웨어 회사 Fog Creek에서 촬영됨
     * 다큐멘터리는 Fog Creek에서 여름 인턴으로 근무하는 네 명의 대학생 인턴이 새로운 소프트웨어 제품을 설계, 구현, 출시하는 과정을 따라감
     * 영화에는 Paul Graham과 Jessica Livingston (Y Combinator 공동 창립자), Steve Huffman과 Alexis Ohanian (Reddit 창립자), Aaron Swartz (Demand Progress 창립자) 등 후에 큰 성공을 거둔 여러 기술 산업 인물들의 인터뷰가 포함되어 있음
     * 다큐멘터리에는 Joel Spolsky와 Michael Pryor가 성공적인 플랫폼인 StackOverflow와 Trello를 출시하기 전의 인터뷰도 포함되어 있음
     * 이 영화는 최근에 YouTube에서 무료로 공개되었지만, 기사 작성 시점에는 41회만 조회되었음
     * 기사는 2005년의 기술 산업, 특히 Fog Creek, Y Combinator, Reddit의 초기에 대한 자세한 배경을 제공함
     * 다큐멘터리는 영화 제작 측면에서는 그다지 좋지 않지만, 초기 기술 스타트업 창립자들의 취약성과 불확실성을 그린 점에서 매력적으로 묘사됨
     * 기사는 또한 다큐멘터리에 출연한 인턴들의 경력 경로와 당시 Fog Creek의 사무실 관리자인 Liz Gordon에 대해 논의함
     * 기사는 Joel Spolsky, Paul Graham, Aaron Swartz의 팬들에게 이 다큐멘터리를 추천하며, Fog Creek과 Aardvark’d 제작자인 Boondoggle Media가 제작한 비디오 코스 ""Make Better Software: The Training Series""를 시청할 것을 제안함

        Hacker News 의견

     * 'Aardvark'd: 12 Weeks With Geeks'라는 Fog Creek 다큐멘터리에 대한 기사, 출시 18년 후의 토론
     * 다큐멘터리에 출연한 Benjamin Pollack, 기사의 두 가지 오해를 바로잡다: 동료의 생일에 소음을 내는 것을 막는 것이 아니라 카메라 앞에서 욕설을 내지 않으려고 했던 것이며, 그는 큰 기업뿐만 아니라 여러 스타트업에서 일했다.
     * 한 댓글러는 Joel Spolsky와 그의 회사의 궤적을 되짚어 보며, 몇몇 이상해 보이는 결정에도 불구하고 회사가 결국 Stack Overflow로 성공을 거두었다는 점을 언급한다.
     * 또 다른 댓글러는 다큐멘터리가 촬영된 보스턴의 Y Combinator 초기 시절을 회상한다.
     * 한 독자는 대학 졸업 후 Fog Creek에서 일자리를 제안받았던 개인적인 경험을 공유하며, 회사의 정신이 자신의 스타트업의 엔지니어링 문화에 어떻게 영향을 미쳤는지를 말한다.
     * 일부 댓글러들은 기술 스타트업의 생애주기를 따르는 더 많은 다큐멘터리를 원하며, Joel on Software와 Fog Creek의 영향력에 대해 추억한다.
     * 다큐멘터리에 출연한 또 다른 사람인 Liz Hall은 영화와 그 시절을 대표하는 따뜻한 추억을 공유하며, Joel Spolsky와 Michael Pryor가 만든 회사 문화를 칭찬한다.
     * 기사와 댓글에서는 다큐멘터리에서 언급된 Aaron Swartz에게 경의를 표한다.
"
"https://news.hada.io/topic?id=10813","속도와 파이썬, 두 마리 토끼 잡기: 딥러닝 시 빠른 파이썬 코드 실행을 위한 CUDA 그래프 사용법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        속도와 파이썬, 두 마리 토끼 잡기: 딥러닝 시 빠른 파이썬 코드 실행을 위한 CUDA 그래프 사용법

   지난 몇 년간 GPU 속도가 폭발적으로 증가하며 딥러닝 워크로드의 최적화 방법 또한 변화하고 있습니다. PyTorch에서도 torch.compile()과 같이 최적화 기능들을 추가하고 있지만, LLM을 비롯한 일부 워크로드에서는 개선이 진행 중입니다.

   (torch.compile()의 개선을 기다리는 동안) 바로 적용할 수 있는 최적화 방법인 CUDA Graph를 소개하고 적용한 글을 발견하여 번역해보았습니다. (⚠️주의: 글 말미에 원문을 작성한 LLM 추론 플랫폼 개발/서비스 기업 Fireworks.ai의 홍보가 일부 포함되어 있습니다.)

   이 글에서는 아래와 같은 순서로 CUDA Graph을 소개하고 있습니다:
     * 기존의 최적화 방법인 CPU/GPU 중첩(overlap)에 대한 소개
     * CPU 오버헤드가 발생하는 구간들
     * CPU 오버헤드 최적화를 위한 기법들 및 CUDA Graph
     * LLaMA2-7B 모델에 CUDA Graph 적용 사례 소개
     * CUDA Graph로 인한 성능 이득 소개
     * 부록: 현 시점(PyTorch 2.0.1)에서의 torch.compile() 사용 시의 이슈와 해결 방법
"
"https://news.hada.io/topic?id=10806","레고가 사용하는 모든 종류의 플라스틱 (2022)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      레고가 사용하는 모든 종류의 플라스틱 (2022)

     * 레고 애호가이자 색상 및 재료 전문가인 Ryan Howerter가 쓴 레고에서 사용하는 다양한 종류의 플라스틱에 대한 종합 가이드 기사
     * 레고 블록은 주로 ABS (Acrylonitrile Butadiene Styrene)라는 강하고 안정적이며 스크래치에 강한 열가소성 플라스틱으로 만들어집니다. 그러나 레고는 사용 사례에 따라 다양한 다른 재료를 사용합니다.
     * 1949년에 만들어진 첫 레고 블록은 CA (Cellulose Acetate)라는 중간 정도의 경도를 가진 열가소성 플라스틱으로 만들어졌습니다. 그러나 CA는 시간이 지나면서 변형되는 경향이 있어, 레고는 1963년경 ABS로 전환하였습니다.
     * 레고에서 사용하는 다른 재료에는 HIPS (High Impact Polystyrene), Bakelite, SAN (Styrene-Acrylonitrile Resin), PP (Polypropylene), PC (Polycarbonate), MABS (Methyl Methacrylate-Acrylonitrile-Butadiene-Styrene), PA (Polyamide), POM (Polyoxymethylene), TP (Thermoplastic Polyester), PE (Polyethylene), MTPO (Metallocene Thermoplastic Polyolefin), TPU (Thermoplastic Polyurethane), SEBS (Styrene-Ethylene-Butylene-Styrene), 그리고 PET (Polyethylene Terephthalate)가 포함됩니다.
     * 레고는 또한 다양한 금속, 직물, 폼, 고무 밴드, 심지어 나무까지 사용하여 세트를 완성하였습니다.
     * 2015년, 레고는 앞으로 15년 동안 그들의 제품에 대한 새로운 지속 가능한 재료를 개발하기 위해 10억 DKK (~1억 5천만 USD)를 투자할 계획을 발표하였습니다. 2018년, 첫 번째 식물 기반 폴리에틸렌 부품이 세트에 등장하기 시작했습니다.
     * 2020년에는 레고 매장에서 플라스틱 쇼핑백이 단계적으로 없어지기 시작했습니다. 2020년 말, 레고는 모든 포장재를 지속 가능한 재료로 교체하기 위해 4억 USD를 투자한다고 발표하였습니다.
     * 이런 노력에도 불구하고, 대부분의 레고 부품은 여전히 화석 연료 기반입니다. 회사는 옥수수, 조류, 밀 등 다양한 재료를 테스트하고 있으며, 이들을 ABS의 대체재로 사용할 가능성을 탐구하고 있습니다.
     * 기사는 레고가 블록 제작에 사용하지 않은 재료에 대한 재미있는 섹션으로 마무리되며, 이에는 나무, 금속, 경무, 요소포름알데히드, 옥수수 기반 PLA, PHA, Galalith, 압축 덱스트로스가 포함됩니다.

        Hacker News 의견

     * 기사는 LEGO가 사용하는 다양한 종류의 플라스틱에 대해 논의하며, 그들의 제품에 사용되는 재료에 대한 종합적인 개요를 제공한다.
     * LEGO의 공식 웹사이트에도 그들의 제품에 사용되는 재료에 대한 비슷한 페이지가 있다.
     * 기사는 ""플라스틱의 분류""에 비유되며, LEGO 제품에 사용되는 다양한 종류의 플라스틱에 대한 상세한 분석을 제공한다.
     * 기사는 LEGO가 한때 Bakelite을 사용했던 사실을 밝혀, 일부 독자들을 놀라게 했다.
     * ABS가 LEGO가 주로 사용하는 재료로 확인되었으며, 유연한 Bionicle 부품 등 특정 부품에는 다른 재료가 사용되었다.
     * 각각 다른 제조 공정이 필요한 대량의 부품 카탈로그를 관리하는 복잡성이 강조된다.
     * 기사는 플라스틱에 대한 엔지니어링 관점을 인정받으며, LEGO가 질량이 아닌 수량으로 세계에서 가장 큰 타이어 생산자라는 사실이 언급된다.
     * LEGO의 품질을 유지하기 위한 최적의 보관 방법과 보관 용기의 재료가 중요한지에 대한 의문이 제기된다.
     * 일부 독자들은 LEGO와의 개인적인 경험, 예를 들어 LEGO 창작물을 극한까지 밀어붙여 ABS가 과열되는 냄새 등을 공유한다.
     * 기사는 LEGO가 2030년까지 화석 연료 기반 플라스틱에 대한 지속 가능한 대체품을 아직 찾지 못했다고 언급한다.
     * ABS가 나이를 먹으면서 취약해지는 문제가 제기되며, 더 나은 대안이 있는지에 대한 질문이 제기된다.
     * 스테인리스 스틸 LEGO 블록을 밟는 것에 대한 비꼬는 댓글이 나오지만, 실제로 LEGO는 그들의 제품에 스테인리스 스틸을 사용하지 않는다.
"
"https://news.hada.io/topic?id=10854","소니, 전자파 노이즈로부터 전기를 얻는 에너지 하베스팅 모듈 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  소니, 전자파 노이즈로부터 전기를 얻는 에너지 하베스팅 모듈 공개

     * 소니 세미컨덕터가 업계 최초로 전자 기기에서 방출되는 전자파 노이즈로부터 전력을 생산할 수 있는 에너지 하베스팅 모듈을 공개함.
     * 이 모듈은 안테나와 2개의 정류 회로를 탑재하여 수 Hz ~ 100Hz 범위의 전자파 노이즈를 수신하고 수십 μW ~ 수십 mW 수준의 전기를 생산함.
          + 전자파가 많이 발생하는 환경이나 기기 옆에서 IoT의 센서에 전기를 공급하기에 충분한 수준.
          + 7mm x 7mm 크기의 작은 크기로 어디에나 탑재 가능.
          + 태양광 등과 달리 지속적으로 에너지 생산 가능.

   전자파를 이용한 에너지 하베스팅은 기존에도 있었는데 ... 기존과 차이점이 전자기기에서 나오는 노이즈인가 봅니다.

   수십 mW 수준이면 생각보다 나쁘지 않네요.
     * HN 스레드

   신기하네요...
   아주 작은 전기라도 요즘엔 워낙 저전력이 많아져서 유용하게 쓸 수 있다는 모양입니다.

   HN 스레드의 AI 요약
     * simonbarker87: 15년 전 EM 방사선을 이용한 에너지 하베스팅에 관한 박사 학위 연구와 낮은 진동/열 수준에서 시스템 전원을 유지하는 문제에 대해 이야기합니다.
     * helpfulContrib: 에너지 하베스팅 트래커 태그를 사용하여 도시의 주변 WiFi/셀룰러 신호에서 충분한 전력을 찾아낸 과거 연구 프로젝트에 대해 설명합니다. 에너지 부족을 관리 문제로 봅니다.
     * rpaddock: 하베스팅 시스템이 궁극적으로 송신기에 부하를 주지 않는지 의문이며, 개별적으로는 무시할 수 있지만 대규모로 시스템에 영향을 미칠 수 있습니다.
     * themoonisachees: 많은 장치가 시간이 지남에 따라 신호를 감쇠시킬 수 있지만 열역학을 위반하지는 않지만 탭 하베스팅은 소멸되는 에너지를 낭비한다고 지적합니다.
     * samus: 송신기에 의미 있는 영향을 미치려면 많은 하베스팅 장치가 필요하며, 이는 이미 고려된 상태 LED 부하와 비슷하다고 설명합니다.
     * user_7832: 기계식 시계 무브먼트가 태그 추적에 배터리보다 더 많은 일일 줄을 제공할 수 있다고 제안합니다.
     * aramachandran7: 웨어러블용 운동/열 모듈의 제한된 에너지 밀도에 대해 논의하며 크기 제약을 언급하고 악기 디자인도 혼잡하다고 언급했습니다.
     * usrusr: Garmin은 여전히 웨어러블 분야의 선두주자로서 모든 대기업의 특성화에 도전하고 있다고 언급합니다.
     * nocsi: 장기 매설 센서를 위해 토양에서 전기를 수확하는 연구를 링크합니다.
     * buescher: Apple이 명시한 AirTag 배터리 수명을 제공하고 시계 무브먼트가 배터리보다 비용과 교체 필요성이 더 높다는 점에 주목합니다.
"
"https://news.hada.io/topic?id=10867","좋은 코드 주석 쓰기 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            좋은 코드 주석 쓰기 가이드

     * 코드 주석의 역할:
          + 코드 주석은 ‘자신이 작성한 코드가 하는 일’을 설명하는 걸 넘어서 설계 결정 사항과 트레이드 오프 등 고민 사항을 문서화
          + 이로써 ‘코드 작성자가 무슨 일을 했고, 왜 그렇게 했는지’ 설명
          + 코드 주석은 과거 코드 작성 과정에서 내린 결정의 맥락을 공유하는 데 도움이 됨
          + 이는 코드만으로 표현하기 어려운 코드 정보를 전달함
     * 코드 주석의 중요성:
          + 복잡한 코드 앞에 달린 인라인 코드 주석은 나중에 코드를 볼 다른 개발자 시간을 절약함
          + 프로젝트가 발전할수록 과거에 내린 코드 결정의 맥락을 남겨야 다른 개발자에게 도움됨.
          + 코드가 복잡하면 앞에 한 줄짜리 인라인 코드 주석이라도 있어야 함
          + 코드만으로 코드 결정의 맥락을 비롯해 다양한 정보를 전달하려면 한계가 있음
     * 좋은 코드 주석 작성법:
         1. 간결하게 작성하기
               o 꼭 필요할 때만 필수 정보를 포함하여 주석 쓰기
                    # 불가피하게 코드가 복잡할 때
                    # 정밀도를 높이기 위해 세부 사항을 추가할 때
                    # 맥락이 누락됐을 때(예: 다른 리포지터리 또는 패키지의 코드를 사용할 때)
               o 주석에 혼란과 모호함을 줄이고 유용한 맥락과 정보 제공
         2. TODOs/FIXMEs 주석 사용하기
               o TODOs/FIXMEs 주석은 ‘코드의 특정 부분에 작업이 완료되지 않았거나 수정이 필요함’을 나타내는 방법
               o 함수 앞에 “TODO: XX기능을 추가해야 합니다”라는 식으로 작성
               o 코드를 작성하다 '이 부분은 나중에 다시 살펴보아야겠다' 또는 '이 기능은 추후에 개발해야 한다'라는 생각이 들 때 이 방식을 사용하면 관련 사항을 기록하고 추적할 수 있음
               o 활용하면 좋을 Extension: TODO Highlight
         3. 주석으로 코드 변명하지 않기
               o 잘못되고 불분명한 코드에 주석을 달며 변명하기보다 코드를 새로 작성하기
               o 어떤 코드는 주석으로 설명해야 하지만, 어떤 코드는 주석에 기대지 않고 ‘코드 그 자체’로 말해야 함
         4. AI 활용하기
               o AI 주석 생성기를 사용하면 특정 표준에 따라 일관된 형식으로 주석을 만들 수 있음
               o 전체 프로젝트에서 주석의 일관성을 유지할 수 있어 코드의 가독성 향상
               o 활용하면 좋을 AI 주석 생성기: Readable

   주석이 필요해 보이면
   코드가 잘못 된건 아닌가 고민해 보는건 어떨까 합니다

   코드와 생명,기능을 함께하지 않는 주석은 미래에 그 주석을 보게될 개발자나 나 자신에게 혼선을 줄수도 있어요

   과거의 맥락이 현재와 무관하거나 오류를 발생시켰음에도
   그 과거의 맥락 문장으로 현재의 수정을 주저하게 되거나 다른 구조로 하결하려 우회하게되고
   실수를 더 유발 시킬수도 있고..

   경험상 그땐 맞았으나 지금 틀린 이유를 알수 있는 주석은 그리 많지 않아서....

   귀한 의견 공유해주셔서 감사합니다. 나눠주신 의견을 생각해보니 코드 발전을 위해서도 주석 필요성을 꼼꼼히 되묻는 노력도 필요하다 싶어요. :)

   https://youtu.be/Bf7vDBBOBUA?si=0-v44x48-rlVsYCq

   이걸 보면서 또 주석을 지나치게 쓰지 않으려 노력도 합니다

   좋은 영상 공유해주셔서 감사합니다! :)

   아무리 도로가 잘 닦여져 있다고 해도 이정표는 꼭 필요하다고 생각합니다. 그래서 요즘은 주석 쓰기를 습관화 해보려고 노력하고 있습니다.

   댓글로 인사이트 나눠주셔서 감사합니다. 말씀주신 내용을 생각해보니 주석도 중요한 테크니컬 라이팅이라 라이팅 기본 원칙을 다시 돌아보게 됩니다. :)

   코멘트가 없어도 이해되게 코드를 작성하는 게 최선인거 같아요

   넵, 기본에 충실한 게 우선이라는 생각이 들어요. 댓글 감사합니다. :)
"
"https://news.hada.io/topic?id=10871","DIY 근적외선 분광계","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              DIY 근적외선 분광계

     * DIY 근적외선 분광계의 제작에 대한 기사
     * 저자 유안 카오, $500으로 분광계 제작, 일반적으로는 $10,000 정도의 가격
     * DIY 분광계 제작은 새로운 개념이 아님, 핸드폰 카메라와 고장난 CD-ROM 조각을 이용해 만들 수 있음
     * 그러나, 이러한 DIY 분광계에 사용되는 실리콘 기반 카메라(CMOS 센서)는 물리적 제한이 있음, 실리콘의 밴드 갭 때문에 파장이 ~1100 nm까지만 반응 가능
     * 이 파장 이상의 빛을 측정하려면 다른 반도체가 필요, 인듐 갈륨 비율을 조정하여 밴드갭을 ~0.4 eV까지 낮출 수 있는 InGaAs가 인기 있는 선택
     * InGaAs 카메라의 비용은 실리콘 기반 카메라보다 훨씬 높음, 일차원 InGaAs 픽셀 배열은 수천 달러가 됨
     * 열전기 냉각과 정밀 회절 격자가 있는 완전한 IR 분광계 시스템은 $10,000 이상의 비용이 들며, 일반적으로 과학 연구자들이 사용, 소비자용이 아님
     * 레이저 광학에 관심이 있고 근적외선 파장(1100 nm 이상)을 다루어야 하는 유안 카오는 더 저렴한 해결책을 찾음
     * 실리콘 광다이오드보다 100배 비싼 단일 InGaAs 광다이오드를 사용하여 DIY 예산 내에서 분광계를 만들 수 있다는 것을 발견
     * 결과적으로 상업용 모델의 일부 비용으로 제작된 800~1600 nm을 측정하는 섬유 결합 IR 분광계가 나왔음

        Hacker News 의견

     * 이 프로젝트와 글은 양층 트위스트 그래핀에서 초전도성을 발견한 동일 인물로부터 나왔습니다.
     * 프로젝트는 DIY 근적외선 분광계를 구축하는 것을 포함하며, 이는 라만 분광계보다 더 많은 가능성을 열어줍니다.
     * 근적외선 분광법과 라만 분광법은 각각 자체의 강점과 한계를 가진 보완적인 기술입니다.
     * 목표는 플라스틱에 있는 프탈레이트와 금속 제품에 있는 카드뮴과 같은 중금속을 감지하는 것입니다.
     * 이 프로젝트는 위조 약품이 문제인 제3세계 국가의 약국에 도움이 될 수 있습니다.
     * 완전한 IR 분광계 시스템의 비용은 $10k 이상이며, 이 DIY 프로젝트는 더 저렴한 대안을 제공합니다.
     * 이 프로젝트는 아마추어가 기여할 수 있는 더 많은 기본 과학 집단에 대한 관심을 불러일으켰습니다.
     * Hacker News에서 더 많은 아마추어 과학자 기사를 제안하는 것이 있습니다.
     * 이 프로젝트는 또한 아마추어 천문학에서의 잠재적인 사용에 대한 관심을 불러일으켰습니다.
     * 프로젝트를 소개하는 웹사이트는 깔끔한 디자인과 세련된 전환 및 타이포그래피를 칭찬받았습니다.
     * 이 프로젝트는 DIY 프로젝트가 미래의 실제 트라이코더 개발에 기여할 수 있는 잠재력에 대한 흥분을 불러일으켰습니다.
"
"https://news.hada.io/topic?id=10832","프로젝트 구텐베르크 오픈 오디오북 컬렉션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         프로젝트 구텐베르크 오픈 오디오북 컬렉션

     * 프로젝트 구텐베르크와 마이크로소프트, 수천 개의 무료 오디오북을 제공하는 공개 컬렉션 생성 협력
     * 새로운 신경망 텍스트-투-스피치 기술과 프로젝트 구텐베르크의 광범위한 공개 접근 전자책 컬렉션을 이용한 오디오북 생성
     * 프로젝트, 고품질 오디오북 접근성 확대와 모든 (오디오)책 애호가들에게 문학 접근성 제공 목표
     * 이 오디오북을 생성하는 데 사용된 기술은 ""Large Scale Intelligent Microservices""라는 제목의 IEEE 빅 데이터 논문에 상세히 기술되어 있음
     * 프로젝트 구텐베르크 컬렉션의 전자책을 자동 파싱하여 오디오북 생성
     * 일부 오디오북에는 오류, 이상한 발음, 공격적인 언어, 모든 청중에게 적합하지 않은 내용이 포함될 수 있음
     * 이 오디오북에 제시된 언어와 견해는 마이크로소프트나 프로젝트 구텐베르크의 견해를 대표하지 않음
     * 녹음에 문제가 있는 경우 https://aka.ms/audiobook-issues 에서 신고 가능

        Hacker News 의견

     * 프로젝트 구텐베르크 오픈 오디오북 컬렉션은 텍스트를 오디오북으로 변환하는 AI를 사용하는 새로운 프로젝트입니다.
     * 일부 사용자들은 AI의 낭독에 불만을 표현하였으며, 이는 소리가 무뎌지고 인간 독자의 감정적 깊이를 갖추지 못하다는 것을 지적하였습니다.
     * AI의 구두점 해석에 문제가 있어, 낭독 중에 자연스럽지 않은 중단이 발생하는 문제가 있습니다.
     * 일부 사용자들은 구텐베르크 콘텐츠로부터 오디오북을 만들기 위해 고품질의 성우를 위한 자금을 모으는 프로젝트를 제안하였습니다.
     * 한 사용자는 Librivox를 추천하였는데, 이는 인간이 읽은 공공 도메인 오디오북을 위한 플랫폼입니다.
     * 또 다른 사용자는 오디오북을 정리하고 관리하는 데스크톱 앱인 Audiobook Locker를 추천하였습니다.
     * 사용자들은 또한 Escape Artists, Drabblecast, Lightspeed Magazine, 그리고 Asimov's와 같은 오디오 픽션 팟캐스트를 확인해보는 것을 제안하였습니다.
     * 일부 사용자들은 AI의 낭독에서 이름의 발음이 잘못되거나 숫자를 잘못 해석하는 등의 오류를 지적하였습니다.
     * 비판에도 불구하고, 일부 사용자들은 AI의 낭독이 Librivox의 일부 인간이 읽은 녹음보다 나은 것으로 발견하였습니다.
     * 한 사용자는 가장 인기 있는 구텐베르크 컬렉션의 책들의 텍스트를 현대화하고 단순화하기 위해 chatGPT를 사용하는 것을 제안하였습니다.
     * 일부 사용자들은 AI의 낭독에서 책 제목의 발음이 잘못되는 등의 받아쓰기 오류를 지적하였습니다.
     * 한 사용자는 도서관에서 오디오북을 대출하기 위한 앱인 ""Libby""를 추천하였습니다.
"
"https://news.hada.io/topic?id=10842","Apple, Apple Watch Series 9 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Apple, Apple Watch Series 9 공개

     * S9 SiP(애플 실리콘) : 4코어 뉴럴엔진. 전력 효율로 18시간 지속 배터리
     * 더블 탭 제스처로 한손 동작 지원
     * 2000니트로 8 대비 2배 밝아진 디스플레이. 1니트까지 낮출 수 있음
     * Siri 요청을 온디바이스로 처리. 받아쓰기 정확도 25% 향상
     * 애플 최초의 탄소 중립 제품(알루미늄 케이스 와 스포츠 루프 밴드 조합시)
     * 알루미늄: 스타라이트, 미드나이트, 실버, (PRODUCT)RED, 신규 핑크 색상
     * 스테인리스 스틸: 골드, 실버, 그래파이트
     * 새로운 파인우븐 밴드 추가(스웨이드 같은 느낌)
          + 애플은 이제 신제품에 가죽을 사용하지 않을 예정
     * Nike 및 Hermès와 협업하여 친환경 밴드 컬렉션 제작
          + Nike 스포츠 밴드는 32% 이상의 재활용 불화탄성중합체 소재로 제작
          + 재고 밴드로 만든 컬러풀한 조각들이 임의의 패턴을 이뤄 밴드 하나하나가 완전히 특별하게 제작됨
          + 스페이스 다이 패턴의 Nike 스포츠 루프는 이전 시즌에 사용된 원사를 다시 새로운 용도로 활용
          + Hermès 는 4개의 새로운 밴드 추가
               o 2개의 새로운 우븐 밴드
               o 최초의 니트소재 밴드인 브리동
               o 스포티한 매력을 더해주는 킬림(튜브 모양의 방수 고무 소재와 디플로이먼트 버클)
"
"https://news.hada.io/topic?id=10779","Turbo 8, TypeScript 지원을 중단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Turbo 8, TypeScript 지원을 중단

   Ruby on Rails, Basecamp로 유명한 37signals의 공동창립자 겸 CTO Daniel Heinemeier Hansson이 현재 개발중인 Turbo 웹 프레임워크에서 TypeScript 지원을 제거하겠다고 밝혔습니다.

   주된 이유로는 타입 선언이 코드를 오염시키고, 타입을 선언하고 TS 컴파일러가 끼어드는 일련의 과정이 즐겁지 않았다는 점을 꼽았습니다.

   TypeScript에서 JavaScript로 전환한 일은 전례가 없는 일로, 프로그래머 커뮤니티에서 큰 파장을 일으키고 있습니다.

   37signals의 제품이기도 하지만 외부 기여를 받는 오픈 소스 프로젝트임에도 불구하고 외부 기여자들과의 소통 없이 TypeScript를 제거하는 PR이 제출되고 2시간만에 기습 머지되었다는 점도 논란이 되고 있습니다.

   javascript는 prototype 기반 언어이기 때문에 이 철학을 무시하고, 나아가는 Typescript를 배제하려는 것이 아닌지....
   https://medium.com/@limsungmook/…

   어제에 이어 살짝 어그로성 포스팅이 올라왔네요.
   https://world.hey.com/dhh/…

   누군지 모르고 있었는데 RoR 만든 사람이라고 하니 TypeScript를 싫어할 법도 하다라는 생각이 들긴 했습니다.
   RoR를 깊게 보진 않았지만, Open Class 개념을 생각하면 타입과 어울리지 않다고 생각되거든요

   TypeScript가 메인인 개인 경험으로 Java(Kotlin)에서 일일이 타입클래스 만들어주는게 무지 답답했는데, 저 사람에게는 TypeScript도 그랬나보다 정도의 생각이..

   그럼에도 이 일련의 과정은 도저히 납득되진 않네요

   음... PR 2개를 보니까 오픈 소스 프로젝트라고 보기 힘들 정도의 결정이네요.
   저장소의 소유자가 논의 없이 결정하고 기존의 저장소에서 하던 PR 절차를 무시하고 바로 병합해 버렸으니...

   보기 좋지는 않네요.

   충분한 설득 절차가 있었으면 모를까, 오픈 소스 프로젝트로서 신뢰성을 버리는 행위라 생각합니다.
   Turbo의 타입에 의존하는 다른 프로젝트들 입장에선 업데이트했더니 하루아침에 모든 타입이 깨져버리는 문제가 생기는 거니까요.

   https://devclass.com/2023/05/…
   최근에 Svelte가 TypeScript에서 JavaScript(+JSDoc)로 넘어간 적이 있죠.

   svelte는 jsdoc 타입 체킹 기능을 쓰는데 그게 ts에 의존하는 거라서 타입 안정성 자체를 포기한 건 아닙니다. 그리고 타입 정의도 제공하고 있고요. turbo처럼 jsdoc도 d.ts도 없이 전부 쓰레기통애 보낸 것과는 상황이 다른 것 같습니다.

   아 네네 그렇죠. 안그래도 저기 PR 링크 보니까 관련 언급이 많더라고요.
"
"https://news.hada.io/topic?id=10800","TSMC, AI 칩 부족이 18개월 더 지속될 것이라 경고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    TSMC, AI 칩 부족이 18개월 더 지속될 것이라 경고

     * 이 부족 현상은 실리콘 부족이 아닌 실리콘을 이어 붙이는데 사용하는 고급 패키징 용량 부족 때문인데, 이는 칩 조립에 있어 중요함
     * TSMC의 회장인 Mark Liu는 회사의 ""칩-온-웨이퍼-온-서브스트레이트(CoWoS)"" 패키징 기술에 대한 수요의 약 80%만 충족할 수 있다고 얘기함
     * CoWoS 패키징 기술은 현재 시장에서 가장 고급 칩, 특히 AI 작업에 이상적인 고대역폭 메모리(HBM)에 의존하는 칩에서 사용
     * 이 부족 현상은 Nvidia의 최고급 GPU인 A100이나 H100, 그리고 CoWoS 패키징 기술을 사용하는 AMD의 다가오는 Instinct MI300 시리즈 가속기에 영향을 줌
     * TSMC는 최근 대만에서 30억 달러 규모의 시설을 통해 고급 패키징 용량을 확대할 계획을 발표
     * 추가한 CoWoS 용량이 가동되면 칩 부족 현상이 완화될 것으로 예상되며, 이는 약 1년 반 내에 이뤄질 것으로 예상
     * Samsung은 2.5D 패키징에는 I-Cube 와 H-Cube, 3D 패키징에서는 X-Cube 같은 다른 패키징 기술을 사용
     * Intel도 Ponte Vecchio GPU Max 카드에서 여러 칩렛을 한데 패키징 하지만, CoWoS 기술에 의존하지는 않음
     * Chipzilla 는 2.5D용으로 embedded multi-die interconnect bridge (EMIB) 라는 고급 패키징 기술을 자체 개발했음

        Hacker News 의견

     * 현재 칩 부족은 기본 칩의 부족이 아니라 TSMC의 CoWoS 패키징의 용량 부족 때문입니다.
     * 이 패키징은 HBM을 사용하는 고급 가속기 제품과 Apple의 M-Ultras와 같은 전체 실리콘 인터포저를 사용하는 몇 가지 다른 것들에 사용됩니다.
     * 수요가 급증하고 새로운 공장 건설에는 시간이 걸리므로, 이 부족 현상은 앞으로 18개월 더 지속될 것으로 예상됩니다.
     * 칩 디자이너들이 TSMC의 패키징이 병목이 될 것이라는 것을 알았다면, 다른 패키징 공급업체들로부터 대체품을 사용할 수 있었습니다.
     * 이 부족 현상은 Camtek의 Eaglet-AP 고급 패키징 검사 기계에 대한 주문이 급증하게 만들었습니다.
     * 이 부족이 소비자용 GPU에 어떤 영향을 미칠지에 대한 추측이 있으며, Nvidia와 같은 회사들이 서버 측 제품에 초점을 맞출 수 있다는 우려가 있습니다.
     * 일부는 이것이 칩 부족의 10년이 될 수 있다고 믿는 반면, 다른 일부는 부족이 끝날 때 버블이 터질 것이라고 예측합니다.
     * 부족 현상이 회사 주식에 미치는 영향은 불확실하며, 주식 가격이 상승하거나 하락하거나, 또는 안정적으로 유지될 가능성이 있습니다.
     * 미래의 이러한 병목 현상을 방지하기 위해 칩 제조 산업이 오픈 소스화되어야 한다는 요구가 있습니다.
"
"https://news.hada.io/topic?id=10856","신용카드 채무 회수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               신용카드 채무 회수

     * 금융 산업의 폐기물 흐름, 특히 소비자 채무 청산과 채권 추심 산업에 대한 기사
     * 저자 Patrick McKenzie은 채무자를 대신해 그들의 대출 기관과 비관련 채권 추심업자에게 편지를 쓰는 과거 취미로 인해 채권 추심업자와 많은 경험을 가지고 있음
     * 미국에서 채무 불이행의 대부분은 회전 신용카드 채무
     * 신용카드 발행자들은 사용자들의 다양한 행동 때문에 다양한 원형, 인물, 예상 수명주기로 사용자를 분류
     * 2.5%에서 5% 사이의 소수의 대출자들이 경제 상태에 따라 신용카드 채무를 연체
     * 금융 기관은 연체된 채무를 ""청산""해야 함. 이는 연방준비제도의 일관된 소매 신용 분류 및 계정 관리 정책 때문
     * 채권 추심 산업은 두 부분으로 나뉨: 하나는 대행 모델로 작동하고, 다른 하나는 채무를 사서 계약된 금액을 회수하려고 함
     * 평균적으로 신용카드 채무 불이행은 약 $2,000이며, 이들은 패스트푸드 버거처럼, 그랜트 제안서처럼 처리되지 않음
     * 채무는 포트폴리오의 일부로 판매되며, 비슷한 상황에 처한 수천 건의 채무가 한 패킷으로 판매됨
     * 채권 추심 산업은 미국에서 가장 악명 높은 범죄와 악당의 둥지로 묘사되며, 추잡하고 개혁에 거의 면역
     * 채무자의 권리는 종종 침해되며, 많은 채무가 구매자가 원하더라도 반응적인 확인을 제공할 수 없는 방식으로 판매됨
     * 채권 추심업자들은 일반적으로 콜 센터 환경에서 일하며, 기술을 사용하여 각 추심업자가 시간당 걸 수 있는 전화 수를 늘림
     * 전화의 목표는 구두로 약속을 받고 결제 자격을 얻는 것
     * 대부분의 채무는 소송되지 않지만, 다양한 채권 추심 회사들은 약 $1,000 이상의 채무에 대한 고빈도 변호사 전략을 가지고 있음
     * 기사는 현실의 상태가 매우 나쁘다고 결론을 내리며, 이는 어느 누구도 오늘 아침 악을 극대화하려고 노력했기 때문이 아니라, 사회의 여러 부분에서 복잡한 구조적 요인의 상호 작용이 우리를 현재 상태로 이끌었기 때문

        Hacker News 의견

     * 미국의 신용카드 채무 수집의 복잡성과 도전에 대한 기사, 한 번의 미납이 개인의 신용 점수에 어떻게 큰 영향을 미치는지 강조.
     * 미국의 신용이 소득, 시기 적절한 지불, 그리고 높은 신용 점수 유지에 크게 의존하는 게임이라는 기사 제안.
     * 소비자 금융의 부정적인 측면에 대한 통찰을 제공하는 포스트, 이것을 무제한 데이터 수집 및 추적과 결합하면 독성이 기하급수적으로 증가할 수 있음을 제안.
     * 일부 독자들은 기사를 강화시키는 것으로 발견, 사기 주장을 이의 제기하고 채무 수집 과정을 이해하는 지식을 제공.
     * 기사는 또한 ""소송 채무자 스크럽""이라는 개념을 언급, 독자들이 이 용어를 더 이해하기 위해 연구하도록 권장.
     * 저자의 글쓰기 스타일은 독자들을 지적이지만 주제에 대해 무지한 것으로 취급하는 것을 인정받아, 효과적인 교육 도구로 만듦.
     * 기사는 또한 채무 포트폴리오의 가치에 대해 논의, 그들이 종종 달러당 5센트 정도로 그 얼굴 가치에 비해 거대한 할인으로 팔린다고 주장.
     * 채무를 채무 구매자에게 전달하는 과정이 강조, 대형 CSV 파일과 최소한의 지원 문서가 표준임.
     * 기사는 채무 수집 과정에서 개선이 가능하다고 제안하며, 연방 무역위원회와 소비자 금융보호국이 제안한 것을 암시.
     * 독자들은 다른 국가들이 채무 수집을 어떻게 처리하는지 살펴보고, 무엇이 효과적이고 무엇이 그렇지 않은지를 이해하도록 권장, 문화적, 법적, 체계적 차이가 역할을 할 것임을 인정.
"
"https://news.hada.io/topic?id=10774","Microsoft, Copilot의 법적 저작권 위험에 대한 책임을 지게 됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Microsoft, Copilot의 법적 저작권 위험에 대한 책임을 지게 됨

     * Microsoft, 새로운 Copilot 저작권 약속 발표: 생성 AI가 만들어낸 결과물 사용 시 발생할 수 있는 잠재적인 IP 침해 주장에 대한 고객 우려 해결
     * 회사의 AI 기반 Copilots, 작업 과정 변혁: 효율성 향상 및 창의력 촉진, 그러나 저작권 문제에 대한 의문 제기
     * 새로운 약속 하에, Microsoft는 Copilot 서비스 및 그들이 생성하는 결과물 사용과 관련된 저작권 주장에 따른 잠재적 법적 위험에 대한 책임을 지게 됨
     * 이 약속은 기존 지식재산 보증 지원을 상업적 Copilot 서비스에 확장, 이전 AI 고객 약속에 기반
     * 제3자가 Microsoft의 Copilots 또는 그들이 생성하는 결과물 사용에 대한 저작권 침해로 상업 고객을 고소하면, Microsoft는 고객을 방어하고 소송으로 인한 불리한 판결이나 합의를 지불할 것
     * 이 약속은 고객이 Microsoft 제품에 내장된 가드레일 및 콘텐츠 필터를 사용한 경우에만 적용
     * Microsoft, 저자의 저작권 존중을 위한 노력의 일환으로 Copilots에 필터 및 기타 기술 통합: 침해 콘텐츠 반환 가능성 감소
     * Copilot 저작권 약속, 기존 IP 보증 범위를 AI 기반 Copilots 사용과 관련된 저작권 주장에 확장: 특히 Microsoft 상업 Copilot 서비스 및 Bing Chat Enterprise의 유료 버전에 대해
     * 고객은 제품에 내장된 콘텐츠 필터 및 기타 안전 시스템을 사용해야 하며, 침해 물질을 생성하려고 시도해서는 안 되며, 고객이 적절한 권리를 가지지 않은 Copilot 서비스에 입력을 제공해서는 안 됨
     * Microsoft, Copilot 서비스의 결과물에 대한 어떠한 지식재산권도 주장하지 않음
     * 회사는 기술 분야, 저자 및 예술가와 그들의 대표, 정부 관계자, 학계, 시민 사회와 함께 AI와 관련된 위험을 관리하고 창작물을 보호하기 위해 노력하는데 헌신

        Hacker News 의견

     * Microsoft, AI 도구 Copilot 사용과 관련된 법적 저작권 위험을 감수할 의향이 있음.
     * 일부 사용자들은 Microsoft가 기술이 침해하지 않음을 증명하기 위해 먼저 내부 코드베이스에서 훈련된 Copilot 모델을 게시해야 한다고 제안함.
     * Microsoft의 책임 부담에 대한 구체적인 사항에 대한 질문이 제기됨, 예를 들어 전 세계적으로 적용되는지, 법적으로 집행 가능한 계약인지 등.
     * Microsoft가 이 프로그램을 중단하지 않을 것이라는 사용자들의 보장에 대한 우려가 있음.
     * 일부 사용자들은 Copilot과 같은 생성 AI가 그 변형적인 성격 때문에 공정 사용으로 간주될 가능성이 높다고 믿음.
     * Microsoft의 이번 조치는 작은 조직들이 생성된 코드를 채택하는 것을 방해하는 주요 장애물을 제거하므로 전략적으로 볼 수 있음.
     * 그러나 Microsoft의 책임 부담이 사용자들이 별도로 소송을 당하는 것을 방지하지 않을 수도 있다는 점이 지적됨.
     * Copilot 사용 방법에는 조건이 있으며, 사용자들은 이러한 조건을 준수하고 있다는 것을 문서화해야 함.
     * 일부 사용자들은 Microsoft가 ""침해 물질을 생성하려는 시도""를 어떻게 정의할지에 대해 우려를 표현함.
     * 사용자들이 그들의 콘텐츠가 Microsoft 서비스에서 나왔음을 어떻게 증명할 수 있는지에 대한 질문이 제기됨.
     * GitHub 저장소에 존재하는 어떤 코드든 출력을 방지하기 위해 설계된 안전장치가 활성화되면 Copilot의 기능이 크게 감소한다는 것이 지적됨.
     * 일부 사용자들은 코드 작성 시 Copilot의 답변이 더 자주 회색으로 표시되는 것을 발견함, 이는 책임 필터 때문일 수 있음.
     * 코드베이스가 GPL을 침해했다면, 해결책은 범죄 소스 코드를 게시하거나 배포를 중단하는 것이지만, 이 둘 모두 Microsoft에게는 우려사항이 아님.
"
"https://news.hada.io/topic?id=10843","Apple, Apple Watch Ultra 2 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Apple, Apple Watch Ultra 2 공개

     * S9 SiP(애플 실리콘) : 4코어 뉴럴엔진
     * 더블 탭 제스처로 한손 동작 지원
     * 최대 3000니트 밝기로 기존 대비 50% 향상. 1니트까지 낮출 수 있음
     * 모듈 Ultra 워치 페이스 추가. 가장자리에 초, 고도, 수심등 실시간 데이터 표시
     * 해발 -500 ~ 9000 미터 까지 극한 상황 테스트 완료
     * 레크리에이션 스쿠버 다이빙 및 프리다이빙 지원. 최대 수심 40미터
     * Siri 요청을 온디바이스로 처리. 받아쓰기 정확도 25% 향상
     * 2세대 초광대역칩(UWB) 포함으로 아이폰 찾기 지원

   시계가 120만 원....?

   3000니트 밝기랑 해발 9000미터랑 수심 40미터는 신기하긴 한데, 가격은 더 신기하네요...
"
"https://news.hada.io/topic?id=10840","두 개의 regexes의 차이와 교집합 계산","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        두 개의 regexes의 차이와 교집합 계산

     * 이 기사는 두 정규 표현식(regexes)의 차이와 교집합을 계산하는 방법에 대해 논의합니다.
     * 저자는 α < β = false, α = β = true, α > β = false, α & β = α ^ β = ∅, α - β = ∅ 등의 방정식과 결과를 제공하여 과정을 보여줍니다.
     * 또한 이 기사에는 다음과 같은 정규 표현식 문법에 대한 간략한 소개가 포함되어 있습니다:
          + '.'는 어떤 단일 문자와도 일치
          + 'xy'는 연결: x와 그 다음에 y와 일치
          + 'x|y'는 대체: x 또는 y와 일치
          + 'x*'는 클린 스타: x를 0번 이상 일치
          + '(xyz)'는 그룹화: xyz를 단일 항목으로 취급
          + '()'는 빈 정규 표현식으로 빈 문자열과 일치
          + 'x+'는 클린 플러스: x를 1번 이상 일치
          + 'x?'는 선택적: 선택적으로 x와 일치
          + 'x{n}'는 거듭제곱: x를 n번 자신에게 연결
          + 'x{m,n}'는 반복: x를 m번에서 n번까지 자신에게 연결
          + '[a-z0-9]'는 그룹화: 그룹 내의 어떤 단일 문자와도 일치
          + '[^a-z0-9]'는 부정 그룹화: 그룹 내의 문자가 아닌 어떤 단일 문자와도 일치
          + '\c'는 이스케이프: 특수 문자 c와 일치
          + '\u001a'는 유니코드 이스케이프: 해당 UTF-16 문자와 일치
          + 'a, b, c'는 모든 기타 문자가 자신과 일치합니다.
     * 이 기사에서는 앵커, 제로 너비 주장, 후방 참조, 하위 그룹 추출, 검색 또는 부분 일치, 행동을 변경하는 기타 플래그와 같은 지원되지 않는 기능에 대해서도 언급합니다.
     * 자세한 정보를 위해 저자는 'antimirov'의 GitHub 페이지를 참조하라고 언급합니다.
     * 이 기사의 저자는 트위터와 마스토돈에서 @d6로 알려진 Eiríkr Åsheim입니다.

        Hacker News 의견

     * 본 기사는 두 정규 표현식(regexes)의 차이와 교집합을 계산하는 도구에 대해 논의한다.
     * 사용자들은 숫자가 3으로 나누어지는 것을 필터링하는 등의 복잡한 regexes를 처리하려고 할 때 도구가 멈출 수 있다고 보고했다.
     * 이 도구는 이메일 주소나 URL과 같은 특정 유형의 문자열을 검증하는 데 유용한 문자열 클래스 계층을 생성하는 데 사용될 수 있다.
     * 한 사용자는 regex를 다양한 형태로 파싱하고 최종적으로 다양한 언어의 코드를 출력하는 과정을 보여주는 유사한 웹 데모를 만들었다.
     * 정규 표현식은 복잡한 수학 이론을 선형 대수학과 유사한 실용적인 인터페이스로 묶어주는 능력을 인정받았다.
     * 일부 사용자들은 도구가 생성하는 합집합과 교집합 regexes의 복잡성에 놀랐으며, 최소한의 정규 표현식을 생성하는 것이 더 큰 도전일 수 있다고 제안했다.
     * 이 도구는 주어진 regexes에 대한 Deterministic Finite Automaton(DFA)의 그래픽 표현을 제공하며, 사용자들은 이를 인상적이라고 평가했다.
     * 일부 사용자들은 도구가 구문적으로 유효한 URL과 이메일 주소를 위한 regexes를 처리하는 데 어려움을 겪었다고 발견했다.
     * 모바일 장치에서 사용성을 향상시키기 위해 regex 입력 필드에서 자동 제안 기능을 끄는 것이 제안되었다.
     * 한 사용자는 ""IP RegEx 필터"" 설정에 대한 검증 로직을 작성하기 위해 regex 교집합 개념을 사용한 경험을 공유했으며, 이는 필터가 작동하지 않는다는 사용자의 불만을 방지하는 데 도움이 되었다.
"
"https://news.hada.io/topic?id=10855","[2023/09/04 ~ 09/10] 이번 주의 주요 ML 논문 (Top ML Papers of the Week)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    [2023/09/04 ~ 09/10] 이번 주의 주요 ML 논문 (Top ML Papers of the Week)

  개요

   DAIR.AI에서 매주 공개하는 ML 논문들에 대한 글을 자동 번역해보았습니다.
   이번 논문들은 주로 트랜스포머(Transformer)와 강화학습(Reinforcement Learning)을 중심으로 한 인공지능 기술에 대한 논문들이 많이 보입니다.

  서포트 벡터 머신으로서의 트랜스포머 / Transformers as Support Vector Machines

    논문 소개

     * 트랜스포머에서 자기 주의의 최적화 기하학이 하드 마진 SVM 문제와 연관성이 있음을 발견하고, 조기 정지 없이 적용된 경사 하강이 자기 주의의 암묵적 규칙화와 수렴으로 이어짐을 발견하며, 이 연구는 언어 모델에 대한 이해를 심화시킬 수 있는 잠재력을 가지고 있습니다.

     Finds that the optimization geometry of self-attention in transformers exhibits a connection to hard-margin svm problems; also finds that gradient descent applied without early-stopping leads to implicit regularization and convergence of self-attention; this work has the potential to deepen the understanding of language models.

    논문 초록

     * ""Attention Is All You Need""에서 시작된 이래, 트랜스포머 아키텍처는 NLP의 혁신적인 발전을 이끌어 왔습니다. 트랜스포머 내의 주의 계층은 일련의 입력 토큰 $X$ 를 허용하고, $(K,Q)$ 가 학습 가능한 키-쿼리 매개변수인 소프트맥스 $(XQK^\top X^\top)$ 로 계산된 쌍별 유사성을 통해 상호 작용하도록 합니다. 이 연구에서는 자기 주의의 최적화 기하학과 토큰 쌍의 외부 곱에 대한 선형 제약 조건을 사용하여 최적의 입력 토큰과 비최적 토큰을 분리하는 하드 마진 SVM 문제 사이의 형식적 동등성을 확립합니다. 이 형식주의를 사용하면 경사 하강으로 최적화된 1계층 트랜스포머의 암시적 편향을 특성화할 수 있습니다. (1) $(K,Q)$ 로 매개변수화된 소실 정규화로 주의 계층을 최적화하면 결합된 매개변수 $W=KQ^\ top$ 의 핵 표준을 최소화하는 SVM 솔루션으로 수렴하는 방향으로
       귀결됩니다. 대신 $W$ 로 직접 매개변수화하면 프로베니우스 노름 목표를 최소화할 수 있습니다. 우리는 이러한 수렴을 특성화하여 전역적 방향이 아닌 국지적으로 최적의 방향으로 발생할 수 있음을 강조합니다. (2) 이를 보완하여 적절한 기하학적 조건 하에서 경사 하강의 국부적/전체적 방향 수렴을 증명합니다. 중요한 것은 과도한 매개변수화가 SVM 문제의 실행 가능성을 보장하고 고정점이 없는 양성 최적화 환경을 보장함으로써 전역 수렴을 촉진한다는 것을 보여줍니다. (3) 우리의 이론은 주로 선형 예측 헤드에 적용되지만, 비선형 헤드를 사용하여 암시적 편향을 예측하는 보다 일반적인 SVM 동등성을 제안합니다. 우리의 연구 결과는 임의의 데이터셋에 적용 가능하며 실험을 통해 그 유효성을 검증합니다. 또한 몇 가지 미해결 문제와 연구 방향을
       소개합니다. 이러한 연구 결과는 트랜스포머를 최적의 토큰을 분리하고 선택하는 SVM의 계층 구조로 해석하는 데 영감을 주었다고 생각합니다.

     Since its inception in ""Attention Is All You Need"", transformer architecture has led to revolutionary advancements in NLP. The attention layer within the transformer admits a sequence of input tokens $X$ and makes them interact through pairwise similarities computed as softmax $(XQK^\top X^\top)$ , where $(K,Q)$ are the trainable key-query parameters. In this work, we establish a formal equivalence between the optimization geometry of self-attention and a hard-margin SVM problem that separates optimal input tokens from non-optimal tokens using linear constraints on the outer-products of token pairs. This formalism allows us to characterize the implicit bias of 1-layer transformers optimized with gradient descent: (1) Optimizing the attention layer with vanishing regularization, parameterized by $(K,Q)$, converges in direction to an SVM solution minimizing the nuclear norm of the combined parameter $W=KQ^\top$. Instead, directly parameterizing by $W$ minimizes a Frobenius
     norm objective. We characterize this convergence, highlighting that it can occur toward locally-optimal directions rather than global ones. (2) Complementing this, we prove the local/global directional convergence of gradient descent under suitable geometric conditions. Importantly, we show that over-parameterization catalyzes global convergence by ensuring the feasibility of the SVM problem and by guaranteeing a benign optimization landscape devoid of stationary points. (3) While our theory applies primarily to linear prediction heads, we propose a more general SVM equivalence that predicts the implicit bias with nonlinear heads. Our findings are applicable to arbitrary datasets and their validity is verified via experiments. We also introduce several open problems and research directions. We believe these findings inspire the interpretation of transformers as a hierarchy of SVMs that separates and selects optimal tokens.

    논문 링크

   https://arxiv.org/abs/2308.16898

  RLAIF: 인간 피드백을 통한 강화 학습을 AI 피드백으로 확장하기 / RLAIF: Scaling Reinforcement Learning from Human Feedback with AI Feedback

    논문 소개

     * 인간과 AI 피드백의 효율성을 비교하여 RLAIF가 RLHF의 적합한 대안인지 테스트하고, 다양한 기술을 사용하여 AI 라벨을 생성하고 확장 연구를 수행하여 정렬된 선호도 생성을 위한 최적의 설정을 보고합니다. 주요 결과는 요약 작업에서 인간 평가자가 약 70%의 경우에서 기준선 SFT 모델보다 RLAIF와 RLHF 모두의 생성을 선호한다는 점입니다. #rlhf

     Tests whether rlaif is a suitable alternative to rlhf by comparing the efficacy of human vs. ai feedback; uses different techniques to generate ai labels and conduct scaling studies to report optimal settings for generating aligned preferences; the main finding is that on the task of summarization, human evaluators prefer generations from both rlaif and rlhf over a baseline sft model in ∼70% of cases.

    논문 초록

     * 인간 피드백으로부터의 강화 학습(RLHF)은 대규모 언어 모델(LLM)을 인간의 선호도에 맞추는 데 효과적이지만, 고품질의 인간 선호도 레이블을 수집하는 것이 주요 병목 현상입니다. 인간 대신 기성 LLM에 선호도 라벨을 붙이는 기술인 RLHF와 RLAIF(RL from AI Feedback)를 직접 비교한 결과, 두 기술이 비슷한 개선 효과를 가져온다는 것을 확인했습니다. 요약 작업에서 인간 평가자들은 약 70%의 사례에서 기본 감독 미세 조정 모델보다 RLAIF와 RLHF의 세대를 선호했습니다. 또한 RLAIF와 RLHF 요약에 대한 평가를 요청했을 때, 사람들은 두 가지를 동일한 비율로 선호했습니다. 이러한 결과는 RLAIF가 인간 수준의 성능을 낼 수 있으며, RLHF의 확장성 한계에 대한 잠재적인 해결책을 제공할 수 있음을 시사합니다.

     Reinforcement learning from human feedback (RLHF) is effective at aligning large language models (LLMs) to human preferences, but gathering high quality human preference labels is a key bottleneck. We conduct a head-to-head comparison of RLHF vs. RL from AI Feedback (RLAIF) - a technique where preferences are labeled by an off-the-shelf LLM in lieu of humans, and we find that they result in similar improvements. On the task of summarization, human evaluators prefer generations from both RLAIF and RLHF over a baseline supervised fine-tuned model in ~70% of cases. Furthermore, when asked to rate RLAIF vs. RLHF summaries, humans prefer both at equal rates. These results suggest that RLAIF can yield human-level performance, offering a potential solution to the scalability limitations of RLHF.

    논문 링크

   https://arxiv.org/abs/2309.00267

    더 읽어보기

   https://twitter.com/omarsar0/status/1699102486928265530

  계산기 없이도 수학 문제를 풀 수 있는 GPT / GPT Can Solve Mathematical Problems Without a Calculator

    논문 소개

     * 충분한 학습 데이터만 있으면 2b 언어 모델이 데이터 유출 없이 100% 정확도로 다단계 산술 연산을 수행할 수 있으며, 추가적인 다단계 산술 연산과 상세한 수학 문제가 포함된 데이터셋에서 GLM-10b로 미세 조정할 경우 5천 샘플 중국어 수학 문제 테스트 세트의 GPT-4와도 경쟁할 수 있음을 보여 줍니다. #mathematical-reasoning #wizardmath

     Shows that with sufficient training data, a 2b language model can perform multi-digit arithmetic operations with 100% accuracy and without data leakage; it’s also competitive with gpt-4 on 5k samples chinese math problem test set when fine-tuned from glm-10b on a dataset containing additional multi-step arithmetic operations and detailed math problems.

    논문 초록

     * 이전 연구에서는 일반적으로 대규모 언어 모델은 계산기 도구를 사용하지 않고는 산술 연산, 특히 8자리 이상의 곱셈과 소수점 및 분수를 포함하는 연산을 정확하게 수행할 수 없다고 가정했습니다. 이 논문은 이러한 오해에 도전하는 것을 목표로 합니다. 충분한 학습 데이터만 있으면 20억 개의 파라미터로 구성된 언어 모델이 데이터 유출 없이 거의 100%의 정확도로 여러 자리 수 연산 작업을 정확하게 수행할 수 있으며, 이는 여러 자리 수 곱셈 정확도가 4.3%에 불과한 GPT-4를 훨씬 능가하는 수준입니다. 또한 다단계 산술 연산과 텍스트에 설명된 수학 문제가 추가된 데이터셋에서 GLM-10B를 미세 조정한 MathGLM이 5,000개 샘플의 중국어 수학 문제 테스트 세트에서 GPT-4와 유사한 성능을 달성했음을 입증합니다.

     Previous studies have typically assumed that large language models are unable to accurately perform arithmetic operations, particularly multiplication of >8 digits, and operations involving decimals and fractions, without the use of calculator tools. This paper aims to challenge this misconception. With sufficient training data, a 2 billion-parameter language model can accurately perform multi-digit arithmetic operations with almost 100% accuracy without data leakage, significantly surpassing GPT-4 (whose multi-digit multiplication accuracy is only 4.3%). We also demonstrate that our MathGLM, fine-tuned from GLM-10B on a dataset with additional multi-step arithmetic operations and math problems described in text, achieves similar performance to GPT-4 on a 5,000-samples Chinese math problem test set.

    논문 링크

   https://arxiv.org/abs/2309.03241

    더 읽어보기

   https://twitter.com/_akhaliq/status/1699951105927512399

  옵티마이저로서의 대규모 언어 모델 / Large Language Models as Optimizers

    논문 소개

     * 최적화 문제를 자연어로 기술하고, 정의된 문제와 이전에 찾은 솔루션을 기반으로 새로운 솔루션을 반복적으로 생성하도록 LLM에 지시하고, 각 최적화 단계에서 이전에 생성된 프롬프트의 궤적을 기반으로 테스트 정확도를 높이는 새로운 프롬프트를 생성하고, 최적화된 프롬프트는 GSM8K 및 빅벤치 하드에서 사람이 설계한 프롬프트보다 때로는 50% 이상 성능이 뛰어난 접근 방식입니다 #optimizing

     An approach where the optimization problem is described in natural language; an llm is then instructed to iteratively generate new solutions based on the defined problem and previously found solutions; at each optimization step, the goal is to generate new prompts that increase test accuracy based on the trajectory of previously generated prompts; the optimized prompts outperform human-designed prompts on gsm8k and big-bench hard, sometimes by over 50%

    논문 초록

     * 최적화는 어디에나 존재합니다. 미분 기반 알고리즘은 다양한 문제에 강력한 도구로 사용되어 왔지만, 그라데이션이 없기 때문에 많은 실제 애플리케이션에서 어려움을 겪고 있습니다. 이 연구에서는 최적화 작업을 자연어로 설명하는 대규모 언어 모델(LLM)을 최적화 도구로 활용하는 간단하고 효과적인 접근 방식인 OPRO(Optimization by PROmpting)를 제안합니다. 각 최적화 단계에서 LLM은 이전에 생성된 솔루션과 해당 값이 포함된 프롬프트에서 새로운 솔루션을 생성한 다음, 새로운 솔루션을 평가하여 다음 최적화 단계를 위한 프롬프트에 추가합니다. 먼저 선형 회귀와 여행하는 세일즈맨 문제에 대해 OPRO를 선보인 다음, 작업 정확도를 극대화하는 지침을 찾는 것이 목표인 프롬프트 최적화로 이동합니다. 다양한 LLM을 통해 OPRO로 최적화된 최상의 프롬프트가
       사람이 직접 설계한 프롬프트보다 GSM8K에서는 최대 8%, 빅벤치 하드 작업에서는 최대 50%까지 성능이 뛰어나다는 것을 입증합니다.

     Optimization is ubiquitous. While derivative-based algorithms have been powerful tools for various problems, the absence of gradient imposes challenges on many real-world applications. In this work, we propose Optimization by PROmpting (OPRO), a simple and effective approach to leverage large language models (LLMs) as optimizers, where the optimization task is described in natural language. In each optimization step, the LLM generates new solutions from the prompt that contains previously generated solutions with their values, then the new solutions are evaluated and added to the prompt for the next optimization step. We first showcase OPRO on linear regression and traveling salesman problems, then move on to prompt optimization where the goal is to find instructions that maximize the task accuracy. With a variety of LLMs, we demonstrate that the best prompts optimized by OPRO outperform human-designed prompts by up to 8% on GSM8K, and by up to 50% on Big-Bench Hard tasks.

    논문 링크

   https://arxiv.org/abs/2309.03409

    더 읽어보기

   https://twitter.com/omarsar0/status/1700249035456598391

  ImageBind-LLM: 멀티 모달리티 인스트럭션 튜닝 / ImageBind-LLM: Multi-modality Instruction Tuning

    논문 소개

     * 이미지바인드를 통한 llm의 멀티모달 인스트럭션 튜닝 방법인 imagebind-llm을 제시합니다. 이 모델은 높은 언어 생성 품질을 포함하여 오디오, 3D 포인트 클라우드, 비디오 등 다양한 모달리티의 인스트럭션에 응답할 수 있으며, 이는 학습 가능한 바인드 네트워크를 통해 이미지바인드의 비주얼 인코더를 llm에 정렬함으로써 달성됩니다. #imagebind

     Presents imagebind-llm, a multimodality instruction tuning method of llms via imagebind; this model can respond to instructions of diverse modalities such as audio, 3d point clouds, and video, including high language generation quality; this is achieved by aligning imagebind’s visual encoder with an llm via learnable bind network.

    논문 초록

     * 이미지바인드를 통한 대규모 언어 모델(LLM)의 멀티 모달리티 인스트럭션 튜닝 방법인 ImageBind-LLM을 소개합니다. 기존 연구들은 주로 언어와 이미지 인스트럭션 튜닝에 초점을 맞춘 반면, 이미지바인드-LLM은 이미지-텍스트 정렬 학습만으로 오디오, 3D 포인트 클라우드, 비디오, 임베딩 공간 연산 등 멀티 모달리티 조건에 대응할 수 있습니다. 학습 과정에서 학습 가능한 바인드 네트워크를 채택하여 LLaMA와 ImageBind의 이미지 인코더 사이의 임베딩 공간을 정렬합니다. 그런 다음 바인드 네트워크에 의해 변환된 이미지 특징을 LLaMA의 모든 레이어에 있는 단어 토큰에 추가하고, 주의가 필요 없는 제로 초기화 게이팅 메커니즘을 통해 시각적 지침을 점진적으로 주입합니다. 이미지 바인드의 공동 임베딩을 통해 간단한 이미지-텍스트 학습을 통해 모델이 뛰어난
       멀티 모달리티 명령어 추종 기능을 발휘할 수 있습니다. 추론이 진행되는 동안 멀티 모달리티 입력은 해당 ImageBind 인코더에 공급되고, 추가적인 크로스 모달 임베딩 향상을 위해 제안된 시각 캐시 모델에 의해 처리됩니다. 학습이 필요 없는 캐시 모델은 ImageBind에서 추출한 300만 개의 이미지 피처에서 검색하여 학습-추론 모달리티 불일치를 효과적으로 완화합니다. 특히 이러한 접근 방식을 통해 ImageBind-LLM은 다양한 양식의 명령에 응답하고 상당한 언어 생성 품질을 보여줄 수 있습니다. 코드는 https://github.com/OpenGVLab/LLaMA-Adapter 에서 공개됩니다.

     We present ImageBind-LLM, a multi-modality instruction tuning method of large language models (LLMs) via ImageBind. Existing works mainly focus on language and image instruction tuning, different from which, our ImageBind-LLM can respond to multi-modality conditions, including audio, 3D point clouds, video, and their embedding-space arithmetic by only image-text alignment training. During training, we adopt a learnable bind network to align the embedding space between LLaMA and ImageBind's image encoder. Then, the image features transformed by the bind network are added to word tokens of all layers in LLaMA, which progressively injects visual instructions via an attention-free and zero-initialized gating mechanism. Aided by the joint embedding of ImageBind, the simple image-text training enables our model to exhibit superior multi-modality instruction-following capabilities. During inference, the multi-modality inputs are fed into the corresponding ImageBind encoders, and
     processed by a proposed visual cache model for further cross-modal embedding enhancement. The training-free cache model retrieves from three million image features extracted by ImageBind, which effectively mitigates the training-inference modality discrepancy. Notably, with our approach, ImageBind-LLM can respond to instructions of diverse modalities and demonstrate significant language generation quality. Code is released at https://github.com/OpenGVLab/LLaMA-Adapter.

    논문 링크

   https://arxiv.org/abs/2309.03905

    더 읽어보기

   https://twitter.com/arankomatsuzaki/status/1699947731333345750

  회로 효율을 통한 그로킹 설명 / Explaining grokking through circuit efficiency

    논문 소개

     * 신경망의 그로킹 행동을 설명하는 것을 목표로 하며, 특히 두 가지 새로운 행동을 예측하고 보여줍니다. 첫 번째는 모델이 임계값보다 작은 데이터셋에서 더 많이 학습될 때 완벽한 일반화에서 암기로 전환되는 언그로킹이고, 두 번째는 임계 데이터 세트 크기에서 무작위로 초기화된 네트워크를 학습할 때 네트워크가 그로킹과 유사한 전환을 보이는 세미그로킹입니다. #grokking

     Aims to explain grokking behavior in neural networks; specifically, it predicts and shows two novel behaviors: the first is ungrokking where a model goes from perfect generalization to memorization when trained further on a smaller dataset than the critical threshold; the second is semi-grokking where a network demonstrates grokking-like transition when training a randomly initialized network on the critical dataset size.

    논문 초록

     * 신경망 일반화에서 가장 놀라운 수수께끼 중 하나는 학습 정확도는 완벽하지만 일반화 능력이 떨어지는 네트워크가 추가 학습을 통해 완벽한 일반화로 전환되는 '그로킹(grokking)'입니다. 우리는 일반화 솔루션과 암기 솔루션이 있을 때 그루킹이 발생하며, 일반화 솔루션이 학습 속도는 느리지만 더 효율적이며 동일한 매개변수 규범을 가진 더 큰 로그를 생성한다고 제안합니다. 우리는 암기 회로는 학습 데이터 세트가 클수록 비효율적이지만 일반화 회로는 그렇지 않다는 가설을 세우고, 암기와 일반화가 똑같이 효율적인 임계 데이터 세트 크기가 있음을 시사합니다. 우리는 그로킹에 대한 네 가지 새로운 예측을 하고 이를 확인함으로써 우리의 설명을 뒷받침하는 중요한 증거를 제시했습니다. 가장 놀랍게도, 네트워크가 완벽한 테스트 정확도에서 낮은
       테스트 정확도로 퇴보하는 언그루킹과 네트워크가 완벽한 테스트 정확도가 아닌 부분적인 일반화로 지연되는 세미그루킹이라는 두 가지 새롭고 놀라운 행동을 입증했습니다.

     One of the most surprising puzzles in neural network generalisation is grokking: a network with perfect training accuracy but poor generalisation will, upon further training, transition to perfect generalisation. We propose that grokking occurs when the task admits a generalising solution and a memorising solution, where the generalising solution is slower to learn but more efficient, producing larger logits with the same parameter norm. We hypothesise that memorising circuits become more inefficient with larger training datasets while generalising circuits do not, suggesting there is a critical dataset size at which memorisation and generalisation are equally efficient. We make and confirm four novel predictions about grokking, providing significant evidence in favour of our explanation. Most strikingly, we demonstrate two novel and surprising behaviours: ungrokking, in which a network regresses from perfect to low test accuracy, and semi-grokking, in which a network shows
     delayed generalisation to partial rather than perfect test accuracy.

    논문 링크

   https://arxiv.org/abs/2309.02390

    더 읽어보기

   https://twitter.com/VikrantVarma_/status/1699823229307699305

  AI 속임수: 사례, 위험 및 잠재적 해결책에 대한 조사 / AI Deception: A Survey of Examples, Risks, and Potential Solutions

    논문 소개

     * 인공지능 속임수의 경험적 사례에 대한 설문조사를 제공합니다. #survey논문

     Provides a survey of empirical examples of ai deception.

    논문 초록

     * 이 논문은 현재의 다양한 인공지능 시스템이 인간을 속이는 방법을 학습했다고 주장합니다. 우리는 속임수를 진실이 아닌 다른 결과를 추구하기 위해 잘못된 믿음을 체계적으로 유도하는 것으로 정의합니다. 먼저 AI 속임수의 경험적 사례를 조사하여 특정 경쟁 상황을 위해 구축된 특수 용도 AI 시스템(메타의 CICERO 포함)과 범용 AI 시스템(대규모 언어 모델 등)에 대해 논의합니다. 다음으로 사기, 선거 조작, AI 시스템에 대한 통제력 상실 등 AI 속임수로 인한 몇 가지 위험에 대해 자세히 설명합니다. 마지막으로, AI 속임수로 인한 문제에 대한 몇 가지 잠재적 해결책을 간략히 설명합니다. 첫째, 규제 프레임워크는 속임수를 사용할 수 있는 AI 시스템에 강력한 위험 평가 요건을 적용해야 하며, 둘째, 정책 입안자는 봇-오어-낫 법을 시행해야 하며, 마지막으로
       정책 입안자는 AI 속임수를 탐지하고 AI 시스템을 덜 속일 수 있는 도구를 포함한 관련 연구에 우선적으로 자금을 지원해야 합니다. 정책 입안자, 연구자, 일반 대중은 AI 속임수로 인해 우리 사회의 공동 기반이 불안정해지는 것을 방지하기 위해 적극적으로 노력해야 합니다.

     This paper argues that a range of current AI systems have learned how to deceive humans. We define deception as the systematic inducement of false beliefs in the pursuit of some outcome other than the truth. We first survey empirical examples of AI deception, discussing both special-use AI systems (including Meta's CICERO) built for specific competitive situations, and general-purpose AI systems (such as large language models). Next, we detail several risks from AI deception, such as fraud, election tampering, and losing control of AI systems. Finally, we outline several potential solutions to the problems posed by AI deception: first, regulatory frameworks should subject AI systems that are capable of deception to robust risk-assessment requirements; second, policymakers should implement bot-or-not laws; and finally, policymakers should prioritize the funding of relevant research, including tools to detect AI deception and to make AI systems less deceptive. Policymakers,
     researchers, and the broader public should work proactively to prevent AI deception from destabilizing the shared foundations of our society.

    논문 링크

   https://arxiv.org/abs/2308.14752

    더 읽어보기

   https://twitter.com/DanHendrycks/status/1699437800301752332

  FLM-101B: 개방형 LLM과 10만 달러 예산으로 교육하는 방법 / FLM-101B: An Open LLM and How to Train It with $100K Budget

    논문 소개

     * 101개의 파라미터와 0.31TB의 토큰으로 10만 달러의 예산으로 학습할 수 있는 새로운 개방형 LLM인 FLM-101B의 경우, 저자들은 다양한 성장 전략을 분석하여 파라미터의 수를 작은 크기에서 큰 크기로 늘려가며 궁극적으로 비용을 50% 이상 절감하는 공격적인 전략을 사용합니다. 즉, 3개의 모델을 순차적으로 학습하고 각 모델은 더 작은 이전 모델(16b -> 51b -> 101b)의 지식을 상속하면서 경쟁력 있는 성능을 달성합니다.

     A new open llm called flm-101b with 101b parameters and 0.31tb tokens which can be trained on a $100k budget; the authors analyze different growth strategies, growing the number of parameters from smaller sizes to large ones. they ultimately employ an aggressive strategy that reduces costs by >50%. in other words, three models are trained sequentially with each model inheriting knowledge from its smaller predecessor (16b -> 51b -> 101b) while achieving competitive performance.

    논문 초록

     * 대규모 언어 모델(LLM)은 자연어 처리 및 다중 모드 작업에서 괄목할 만한 성공을 거두었습니다. 이러한 성공에도 불구하고 대형 언어 모델 개발은 (i) 높은 계산 비용, (ii) 공정하고 객관적인 평가 수행의 어려움이라는 두 가지 주요 과제에 직면해 있습니다. LLM은 비용이 엄청나게 비싸기 때문에 소수의 주요 기업만이 교육을 받을 수 있으며, 이로 인해 연구와 응용 기회에 제약이 있습니다. 이는 비용 효율적인 LLM 교육의 중요성을 강조합니다. 이 논문에서는 LLM 교육 비용을 크게 절감할 수 있는 성장 전략을 활용합니다. 101억 개의 매개변수와 0.31TB의 토큰을 가진 LLM을 10만 달러의 예산으로 학습할 수 있음을 보여줍니다. 또한 지식 중심의 능력에 더 중점을 두는 기존 평가를 보완하기 위해 LLM의 IQ 평가를 위한 체계적인 평가 패러다임을 채택합니다. 심볼릭
       매핑, 규칙 이해, 패턴 마이닝, 간섭 방지 등 지능의 중요한 측면에 대한 평가가 포함된 벤치마크를 도입합니다. 이러한 평가는 암기의 잠재적 영향을 최소화합니다. 실험 결과에 따르면 10만 달러의 예산으로 학습된 모델 FLM-101B는 특히 학습 데이터에서 볼 수 없는 컨텍스트가 있는 IQ 벤치마크 평가에서 강력하고 잘 알려진 모델(예: GPT-3 및 GLM-130B)과 비슷한 성능을 달성하는 것으로 나타났습니다. FLM-101B의 체크포인트는 https://huggingface.co/CofeAI/FLM-101B 에서 오픈소스로 공개됩니다.

     Large language models (LLMs) have achieved remarkable success in NLP and multimodal tasks. Despite these successes, their development faces two main challenges: (i) high computational cost; and (ii) difficulty in conducting fair and objective evaluations. LLMs are prohibitively expensive, making it feasible for only a few major players to undertake their training, thereby constraining both research and application opportunities. This underscores the importance of cost-effective LLM training. In this paper, we utilize a growth strategy to significantly reduce LLM training cost. We demonstrate that an LLM with 101B parameters and 0.31TB tokens can be trained on a $100K budget. We also adopt a systematic evaluation paradigm for the IQ evaluation of LLMs, in complement to existing evaluations that focus more on knowledge-oriented abilities. We introduce our benchmark including evaluations on important aspects of intelligence including symbolic mapping, itrule understanding,
     pattern mining, and anti-interference. Such evaluations minimize the potential impact of memorization. Experimental results show that our model FLM-101B, trained with a budget of $100K, achieves comparable performance to powerful and well-known models, eg GPT-3 and GLM-130B, especially in the IQ benchmark evaluations with contexts unseen in training data. The checkpoint of FLM-101B will be open-sourced at https://huggingface.co/CofeAI/FLM-101B.

    논문 링크

   https://arxiv.org/abs/2309.03852

    더 읽어보기

   https://twitter.com/omarsar0/status/1700156132700963053

  언어 에이전트를 위한 인지 아키텍처 / Cognitive Architectures for Language Agents

    논문 소개

     * 프로덕션 시스템과 인지 아키텍처에서 유사점을 도출하여 완전한 언어 에이전트를 이해하고 구축하기 위한 체계적인 프레임워크를 제안하고, 프레임워크에서 언어 에이전트의 인스턴스로서 언어 기반 추론, 근거, 학습 및 의사 결정을 위한 다양한 방법을 체계화합니다.

     Proposes a systematic framework for understanding and building fully-fledged language agents drawing parallels from production systems and cognitive architectures; it systematizes diverse methods for llm-based reasoning, grounding, learning, and decision making as instantiations of language agents in the framework.

    논문 초록

     * 최근의 노력은 근거나 추론이 필요한 작업을 위해 외부 리소스(예: 인터넷) 또는 내부 제어 흐름(예: 프롬프트 체인)과 함께 대규모 언어 모델(LLM)을 통합하는 것입니다. 그러나 이러한 노력은 대부분 단편적인 것이었으며, 완전한 언어 에이전트를 구축하기 위한 체계적인 프레임워크가 부족했습니다. 이러한 문제를 해결하기 위해 우리는 심볼릭 인공지능에서 에이전트 설계의 풍부한 역사를 바탕으로 새로운 인지 언어 에이전트의 청사진을 개발합니다. 먼저 LLM이 프로덕션 시스템과 동일한 속성을 많이 가지고 있으며, 그 기반이나 추론을 개선하려는 최근의 노력은 프로덕션 시스템을 중심으로 구축된 인지 아키텍처의 발전을 반영하고 있음을 보여줍니다. 그런 다음 프레임워크에서 언어 에이전트의 인스턴스화로서 LLM 기반 추론, 근거, 학습 및 의사
       결정을 위한 다양한 방법을 체계화하는 개념적 프레임워크인 언어 에이전트를 위한 인지 아키텍처(Cognitive Architectures for Language Agents, CoALA)를 제안합니다. 마지막으로, CoALA 프레임워크를 사용하여 부족한 부분을 강조하고 향후 더 뛰어난 언어 에이전트를 위한 실행 가능한 방향을 제안합니다.

     Recent efforts have incorporated large language models (LLMs) with external resources (e.g., the Internet) or internal control flows (e.g., prompt chaining) for tasks requiring grounding or reasoning. However, these efforts have largely been piecemeal, lacking a systematic framework for constructing a fully-fledged language agent. To address this challenge, we draw on the rich history of agent design in symbolic artificial intelligence to develop a blueprint for a new wave of cognitive language agents. We first show that LLMs have many of the same properties as production systems, and recent efforts to improve their grounding or reasoning mirror the development of cognitive architectures built around production systems. We then propose Cognitive Architectures for Language Agents (CoALA), a conceptual framework to systematize diverse methods for LLM-based reasoning, grounding, learning, and decision making as instantiations of language agents in the framework. Finally, we
     use the CoALA framework to highlight gaps and propose actionable directions toward more capable language agents in the future.

    논문 링크

   https://arxiv.org/abs/2309.02427

    더 읽어보기

   https://twitter.com/ShunyuYao12/status/1699396834983362690

  Q-Transformer

    논문 소개

     * 인간의 데모와 자율적으로 수집한 데이터를 활용하여 대규모 오프라인 데이터셋에서 멀티태스크 정책을 학습하는 확장 가능한 RL 방법으로, 다양한 실제 로봇 조작 작업 세트에서 우수한 성능을 보여줍니다.

     A scalable rl method for training multi-task policies from large offline datasets leveraging human demonstrations and autonomously collected data; shows good performance on a large diverse real-world robotic manipulation task suite.

    논문 링크

   https://q-transformer.github.io/

    더 읽어보기

   https://twitter.com/YevgenChebotar/status/1699909244743815677

  원문

   https://nlp.elvissaravia.com/p/top-ml-papers-of-the-week-b88
     __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

     * *이 글은 GPT 모델로 자동 요약한 설명으로, 잘못된 내용이 있을 수 있으니 원문을 참고해주세요! *
     * 읽으시면서 어색하거나 잘못된 내용을 발견하시면 덧글로 알려주시기를 부탁드립니다! ‍♂️
"
"https://news.hada.io/topic?id=10811","미국 화산지대에서 발견된 리튬, 지금까지 발견된 가장 큰 매장지일 가능성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                미국 화산지대에서 발견된 리튬, 지금까지 발견된 가장 큰 매장지일 가능성

     * 미국 네바다-오리건 경계에 역대 최대 규모의 리튬 매장지가 발견
     * 이 매장지는 약 1,600만 년 전에 형성된 화산 분화구 내에 위치해 있으며, 추정 리튬 금속은 2천만 톤에서 4천만 톤으로 추정
     * 이전에 세계 최대로 간주되었던 볼리비아의 소금 평원 아래의 리튬 매장지보다 훨씬 큼
     * 리튬은 illite라는 미네랄로 구성된 특이한 점토석 내에 포함되어 있으며, 이 점토석은 1.3%에서 2.4%의 리튬을 함유
          + 기존에 더 흔한 리튬 함유 점토인 마그네슘 스멕타이트에 들어있는 리튬의 거의 2배
     * 이 발견은 리튬의 전세계적인 역학을 바꿀 수 있으며, 가격, 공급 안정성, 지정학적 영향을 미칠 수 있음
     * 리튬이 풍부한 점토석은 뜨거운 염수에 의해 호수 퇴적물에서 형성되었으며, 이로 인해 리튬이 풍부한 점토석이 생성
     * 회사는 2026년에 채굴을 시작할 예정이며, 이 과정은 물로 점토를 제거하고 원심 분리를 통해 리튬 함유 미립자를 큰 미네랄로부터 분리하는 과정을 포함
     * 점토는 황산의 용기에서 침출되어 리튬을 추출할 것
     * 리튬이 에너지 소비가 적은 방식으로 추출되거나, 많은 산을 소비하지 않는 과정에서 추출될 수 있다면, 이 발견은 경제적으로 매우 중요할 수 있음
     * 미국은 리튬 공급을 자체적으로 확보할 수 있게 되어, 공급 부족에 대한 우려를 줄일 수 있게 됨

   이쯤되면 안나오는걸 찾기가 더 빠르겠는데요

   https://www.theguru.co.kr/mobile/article.html?no=28948
   http://www.mtnews.net/m/view.php?idx=15467

   2021년에 호주의 Jindalee Resources 에서 시추에 들어갔고 (지분 100% 소유)
   2023년에는 포스코홀딩스가 사업성검토를 수주했군요.
   결과가 긍정적으로 나온 것 같습니다.

   방장 사기맵이 또... 굉장하군요

   그러게요 =_=;; 부럽습니다

   2차전지 산업에서 가장 중요한 물질인데, 땅이 넓으니 이런게 발견되기도 하는군요.

   볼리비아 소금평원이 리튬 2100만톤 정도 되고, 포스코가 2018년에 인수한 아르헨티나 염호엔 1350만톤 정도가 있다고 합니다.

        Hacker News 의견

     * 미국의 화산에서 발견된 리튬은 지금까지 발견된 가장 큰 적출량일 수 있다.
     * 리튬의 풍부함에도 불구하고, 다양한 광산에서 배터리 등급 리튬을 생산하는 데 필요한 전문 지식이 도전적인 문제로 남아 있다.
     * 리튬 적출지인 맥더밋은 외딴 곳에 위치해 있어 환경주의자와 현지 원주민들 사이에 우려를 촉발하고 있다.
     * 광산 회사는 2026년에 운영을 시작할 예정이며, 이 과정은 물로 점토를 제거하고 원심분리와 황산에서의 침출을 통해 리튬을 추출하는 것을 포함한다.
     * 리튬이 발견된 화산은 현재 휴화 상태이다.
     * 이 발견은 수요 증가가 탐사 증가를 이끌고 가격의 안정화를 초래하는 일반적인 경제 패턴을 따르고 있다.
     * 이 발견은 전 세계 리튬 시장과 지정학에 영향을 미칠 수 있다.
     * 맥더밋 칼데라라고 알려진 이 화산은 오레곤/네바다 경계에 위치해 있다.
"
"https://news.hada.io/topic?id=10830","구글 크롬, 15주년을 맞아 새로운 UI와 기능들 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     구글 크롬, 15주년을 맞아 새로운 UI와 기능들 공개

Material You 디자인 언어 기반으로 개인화 가능

     * 가독성에 중점을 두어 아이콘을 변경하고, 탭과 툴바를 더 돋보이게 하는 새로운 컬러 팔레트 적용
          + 개인/업무용등 여러개의 프로필 간 구분이 쉽게 함
     * OS 의 다크/라이트 모드에 더 잘 연동
     * 크롬 웹스토어에도 같은 스타일을 적용

새로운 검색 기능 출시

     * 우상단 3개의 점을 눌러서 ""구글로 이 페이지 검색하기"" 가능
          + 관련 검색 및 페이지의 소스 등을 확인 가능

구글 Safe Browsing 업그레이드

     * 이전엔 30-60분마다 불량 사이트목록을 로컬에 업데이트 했음
     * 하지만 요즘 피싱 도메인은 60% 가량이 10분 이하로만 존재하므로 블록이 어려워짐
     * 기본 보호 모드를 업그레이드 해서 실시간 차단이 동작하게 변경
     * 향상된 보호모드에서는 AI를 이용하여 새로운 공격을 차단
"
"https://news.hada.io/topic?id=10789","Procreate Dreams 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Procreate Dreams 공개

     * iPad용으로 인기 있는 Procreate가 11월 22일에 출시 예정인 새로운 애니메이션 앱
     * 사용자 친화적으로 설계되어 누구나 손그림 애니메이션과 모션 그래픽 제작 가능
     * 손쉽게 사진, 비디오, 사운드로 작품을 향상시킬수 있음
     * 풍부한 2D 애니메이션 경험을 제공하며, 사용자가 표현력 있는 비디오와 숨막히는 이야기를 제작하게 도와줌
     * 더 높은 해상도의 새로운 그리기 경험 및 Procreate 브러시 사용 가능
     * 애니메이션을 위해 특별히 만들어진 혁신적인 멀티터치 타임라인
     * 애니메이션을 만들고, 모션이나 효과를 터치로 녹화하고, 영화를 재생하고 바로 반응 가능
     * 오디오 및 비디오 편집 기능을 포함하여, 사용자가 보이스 오버, 음악, 사운드 효과로 애니메이션을 생동감 있게 만들 수 있음
     * 캐릭터가 살아 움직일 우 있는 대규모 세트를 한 프로젝트내에서 생성, 스테이지를 넘어선 부분까지 그리고, 뒤에서 가지고 있다가 적절한 시점에 이용 가능
     * iCloud 동기화 및 백업을 지원하며, 자동 저장 및 모든 동작을 기록하여 실행 취소 가능
     * iPad와 Apple Pencil을 위해 설계되어 자연스럽고 반응성 있는 그림 경험을 제공
     * 가격 19.99달러. 구독 필요 없음

        Hacker News 의견

     * 새로운 앱인 'Procreate Dreams'의 출시에 대한 기사, 원래 Procreate 앱 사용자들 사이에서 흥분을 일으키고 있다.
     * Procreate Dreams는 Procreate의 사용성과 사용자 친화성을 애니메이션 영역으로 가져올 것으로 예상된다.
     * 앱의 가격은 19.99달러로, 구독 모델이 없는 것이 일회성 구매를 선호하는 사용자들에게 매력적이다.
     * 이 앱은 11월 22일에 출시될 예정이다.
     * 일부 사용자들은 Procreate Dreams를 기존의 iPad 앱인 Callipeg와 비교하고 있지만, Procreate의 우수한 그림 기능이 더 선호될 수 있다고 예상하고 있다.
     * Procreate Dreams의 출시는 다양한 맥락에 대한 디자인 도구 재고를 위한 긍정적인 단계로 보여지며, 모바일을 염두에 두고 만들어진 더 나은 오디오, 비디오, 그림, 애니메이션 앱에 대한 희망이 있다.
     * 사용자들은 Procreate Dreams가 특정 도메인 지식이 없는 사람들이 창의적으로 활동하는 새로운 방법을 열어줄 가능성에 흥분하고 있다.
     * 앱은 부드럽고 직관적인 인터페이스를 위해 칭찬받고 있으며, 수기 애니메이션 팬들 사이에서 인기가 있을 것으로 예상된다.
     * Procreate Dreams의 창조자인 Savage Interactive 팀은 iPad와 Pencil에 대한 세심한 UX 접근 방식으로 인정받아 모바일 아티스트 시장을 장악하고 있다.
     * 앱의 가격 포인트인 20달러는 경쟁 상업 앱들이 훨씬 더 비싸다는 점을 감안하면 훌륭한 가치 제안으로 간주된다.
     * 앱은 잘 받아들여질 것으로 예상되지만, 애니메이션에 필요한 더욱 특화된 기술 세트 때문에 일반 Procreate만큼 인기가 있지 않을 수도 있다.
     * 일부 사용자들은 애니메이션에 관심을 보인 자녀들을 위해 앱을 구매할 계획이다.
     * 앱의 랜딩 페이지는 중세 유럽의 ""procreate dreams""에 대한 신념과는 관련이 없다.
     * 앱은 Bret Victor의 강연 ""원칙에 기반한 발명""을 연상시키며, 사용자들은 이를 시도하는 것을 기대하고 있다.
"
"https://news.hada.io/topic?id=10850","Unity 플랜 가격 및 패키지 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Unity 플랜 가격 및 패키지 업데이트

     * 2024년 1월 1일부터 적용
     * 게임 설치 기반의 새로운 Unity Runtime Fee 도입 예정. 최종 사용자에게 다운로드 될 때마다 적용됨
          + 최근 12개월간 최소 수익 임계값과 최소 누적 설치 횟수를 넘어선 후에만 적용됨
          + Unity Personal 및 Unity Plus의 경우, 임계값은 200,000달러의 수익과 200,000회의 누적 게임 설치
          + Unity Pro 및 Unity Enterprise의 경우, 임계값은 1,000,000달러의 수익과 1,000,000회의 누적 게임 설치
     * Unity Personal은 수익에 관계없이 누구에게나 제공될 예정으로, 라이선스 관리의 유연성을 높임. 게임이 수익과 설치 임계값을 넘어서면 설치당 작은 고정 요금이 부과됨
     * Unity Pro 및 Unity Enterprise 구독자는 Unity Runtime Fee에 대한 볼륨 할인을 제공하여, 게임이 성장함에 따라 설치당 비용을 줄일 수 있음
     * 요금 구조는 확립된 게임 지역과 신흥 게임 지역 간의 게임 수익화의 변동성을 고려함
     * Unity DevOps, Unity Asset Manager, Team Administration, Unity Sentis 등의 새로운 서비스와 도구가 11월에 Unity 구독 플랜에 추가될 예정으로, 시트당 가격은 변동 없음
     * Unity Personal은 Unity Asset Manager 무료 티어, 최대 3개의 Unity DevOps 좌석, 그리고 Team Administration 기본 역할을 포함할 예정
     * Unity Pro는 Unity Asset Manager, 동일한 수의 Unity DevOps 좌석, 그리고 Team Administration 도구를 포함할 예정
     * Unity Enterprise는 Unity Asset Manager, 동일한 수의 Unity DevOps 좌석, 그리고 고급 Team Administration 도구를 포함할 예정
     * Unity Plus는 2023년 9월 12일부터 새로운 구독자에게는 제공되지 않음. 기존 구독자는 현재 Unity Plus 가격으로 Unity Pro로 업그레이드할 수 있는 제안을 받게 될 것임
     * Unity Technologies는 FAQ, Unity 지원, Unity 포럼 또는 계정 관리자를 통해 추가 정보 또는 지원을 원하는 사용자들에게 연락할 것을 권장함

   관련해서 조금 상세한 내용이 정리된 기사
   https://gamesindustry.biz/unity-clarifies-new-fee-plans-amid-developer…
     * 첫번째 설치만 Fee가 부과됨. 하지만 다른 기기에 설치되는 것은 모두 부과(PC와 스팀덱을 설치한다면 둘다 내야함 )
     * 데모 또는 무료로 제공하는 경우 Unity쪽에 알리는게 가능하게 될 것
     * 설치 Fee 는 디스트리뷰터에 부과되므로, 구독 서비스에 있는 게임 개발자는 부과되지 않을 것

   업계가 난리네요.

   기술 혁신과 비전을 통해 위기를 극복하려는 노력은 1도 없고, 매출과 구조조정을 밀어 붙이는 것이, 전문경영인의 부정적 효과를 보여주는 아주 적확한 예인 것 같습니다.

        Hacker News 의견

     * Unity가 편집기에 대한 새로운 DRM 요구사항을 도입하고 있으며, 이를 사용하려면 Unity ID로 Hub에 로그인하고 인터넷에 연결되어 있어야 합니다. 인터넷 연결이 끊어진 경우, 사용자는 오프라인 상태에서 최대 3일 동안 Unity를 계속 사용할 수 있습니다.
     * 일부 사용자들은 Unity의 최근 행동, 특히 새로운 DRM 요구사항이 개발자들에게 플랫폼이 덜 매력적으로 보이게 만든다고 느낍니다. 특히 Unreal과 같은 경쟁사와 비교했을 때입니다.
     * Unity의 변화로 인해 증가된 비용과 제한 때문에 인디 개발자들이 플랫폼을 사용하는 것을 꺼리게 될 수 있다는 우려가 있습니다.
     * Unity의 변화로 인해 일부 개발자들이 Godot와 Unreal과 같은 다른 플랫폼으로 전환을 고려하게 되었습니다.
     * Unity는 클라우드 빌드의 가격 구조를 변경하여 사용한 분당 요금을 부과하게 되었습니다. 이로 인해 일부 개발자들의 비용이 증가하였으며, 이에 따라 자체 내부 빌드 서버를 설정하는 것과 같은 대안을 고려하게 되었습니다.
     * 일부 사용자들은 Unity의 기술적 문제와 비즈니스 모델의 변화가 그들의 산업 내에서의 평판과 가치에 부정적인 영향을 미쳤다고 느낍니다.
     * Unity의 발표와 같은 날, Godot는 새로운 자금 조달 프로그램을 발표하였으며, 이로 인해 Godot의 사용자 기반 증가에 대한 추측이 나오고 있습니다.
     * Unity의 게임 설치당 개발자에게 요금을 부과하는 새로운 계획은 개발자들 사이에서 우려를 불러일으켰습니다. 예를 들어, 플레이어가 게임을 삭제하고 다시 설치하면, 이것은 2번의 설치와 2번의 요금으로 간주됩니다. 게임을 2대의 기기에 설치하는 경우에도 마찬가지입니다.
"
"https://news.hada.io/topic?id=10771","Tailscale에서의 Mullvad: 개인적으로 웹 브라우징","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Tailscale에서의 Mullvad: 개인적으로 웹 브라우징

     * Tailscale이 사용자의 개인정보 보호, 익명성, 보안에 대한 헌신으로 알려진 가상 사설 네트워크(VPN) 서비스인 Mullvad와 파트너십을 맺음.
     * 이 파트너십은 Tailscale 고객이 Mullvad의 전세계 VPN 서버 네트워크를 출구 노드로 사용하면서 웹 브라우징 시 사용자의 개인정보를 유지할 수 있게 함.
     * Mullvad는 사용자 활동을 기록하거나 모니터링하지 않으며, 구독을 위한 고유한 계정 번호 시스템을 사용하여 개인 데이터가 계정에 연결되지 않게 함.
     * Tailscale과 Mullvad는 모두 VPN 서비스지만, 서로 다른 목적을 수행. Tailscale은 개인용 사설 인터넷, 즉 tailnet을 구축하여 사용자가 어디서든 안전하게 서비스와 사람들에게 연결할 수 있도록 돕고, 반면에 Mullvad는 사용자가 안전하고 개인적이며 익명의 방식으로 인터넷에 연결할 수 있게 함.
     * 이 파트너십을 통해 Tailscale 사용자는 이제 자신의 인프라를 설정할 필요 없이 개인정보 보호 VPN의 혜택을 누릴 수 있음.
     * Mullvad를 사용하면 Tailscale 사용자는 40개 이상의 국가에 있는 수백 개의 서버에 접속할 수 있음. 장치는 이러한 서버에 연결하기 위해 WireGuard 키 쌍을 생성하며, 공개 키는 Mullvad의 인프라에서 피어를 식별하고 개인 키는 트래픽을 암호화함.
     * Tailscale은 사용자의 장치와 Mullvad의 네트워크 가장자리 사이의 조정 계층으로 작용하며, 계속해서 사용 가능한 Mullvad 네트워크 맵을 업데이트하고 장치를 적절한 서버로 안내함.
     * 오늘부터 Tailscale 사용자는 Mullvad 출구 노드를 사용하여 개인적이고 안전하게 웹을 탐색하고, 공공 Wi-Fi에서 자신을 보호하며, 전 세계 특정 위치에서 인터넷에 연결하고, 표준이 아닌 포트 트래픽을 전달할 수 있음.
     * Mullvad 출구 노드를 활성화하려면 사용자는 관리 콘솔의 일반 설정 페이지로 이동하여 Mullvad 라이선스를 구매하는 단계를 따라야 하며, 이는 매달 5대의 장치당 5달러임.
     * Tailscale은 개인정보 보호를 우선시하는 회사로서 Mullvad와 어떠한 개인 정보도 공유하지 않음. Tailscale은 연결된 신원 제공자를 통해 사용자를 알고 있지만, 이 정보는 Mullvad의 서버에 연결하는 데 필요하지 않음.
     * Mullvad 출구 노드는 이제 공개 베타로 사용 가능. 이는 매달 5대의 장치에 대해 5달러의 요금으로 가족이나 팀 전체에 확장될 수 있으며, 반복적인 자동 청구가 가능함.

        Hacker News 의견

     * Mullvad와 같은 VPN과 Tailscale과 같은 암호화 오버레이 네트워크의 융합에 대한 기사, 긍정적인 발전으로 간주됨
     * 90년대 VPN 기술이 인터넷 트래픽을 끝까지 보호하려는 목표를 참조로 한 역사적 맥락 제공
     * 일부 사용자들은 Tailscale이 루트로 실행되는 것과 네트워크 보안에 영향을 미칠 수 있는 잠재적 취약점에 대해 우려 표현
     * Mullvad의 최근 활동과 파트너십이 칭찬받으며, 일부 사용자들은 오픈소스, 오픈 프로토콜 제품과의 더 많은 협업을 희망
     * 잠재적인 개인정보 유출에 대한 우려가 있으며, 정부 기관이 Mullvad ID/연결을 Tailscale 계정으로 추적할 수 있는지에 대한 질문 제기
     * 가격 모델에 대한 혼란이 있으며, 기존 VPN 서비스 구독자들이 얻을 수 있는 혜택에 대해 사용자들이 궁금해함
     * Tailscale이 쿠바 국민들에게 접근을 차단한 것에 대한 언급, 일부 사용자들은 이를 실망스럽게 생각함
     * 사용자가 최근 VPN 사용량의 급증에 대해 묻고, 지난 몇 년 동안 성장의 원인을 이해하려 함
     * 일부 사용자들은 이 서비스를 기존의 Mullvad 계정에 통합하는 방법을 찾고 있으며, 한 사용자는 현재 Mullvad를 tailnet을 통해 사용하는 설정을 공유함
"
"https://news.hada.io/topic?id=10861","macOS 14 Sonoma의 버그로 인해 우리 앱 작동이 중단됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  macOS 14 Sonoma의 버그로 인해 우리 앱 작동이 중단됨

     * macOS 14 Sonoma의 버그로 인한 Mullvad VPN 앱의 제대로 된 작동 방해에 대한 기사
     * macOS 14 Sonoma 베타 기간 동안 발생한 버그로 macOS 방화벽, 패킷 필터(PF)에 영향
     * 버그로 인해 방화벽이 트래픽을 제대로 필터링하지 못하며, 특정 설정이 활성화될 때 유출이 발생할 수 있음
     * macOS 14 Sonoma의 6번째 베타 릴리즈에서 발견된 이슈가 Apple에 보고되었지만, 이후 베타와 릴리즈 후보에서도 해결되지 않음
     * 버그는 Mullvad VPN 앱뿐만 아니라 PF 필터링에 의존하는 다른 애플리케이션과 서비스에도 영향을 미침
     * 회사는 VPN 앱에 대한 잠재적인 패치를 평가했지만, 버그는 Apple에서 수정해야 하는 문제로 적합한 해결책을 찾지 못함
     * 버그가 수정될 때까지 사용자들이 PF 필터링에 의존하는 경우 특히 macOS 13 Ventura를 계속 사용하도록 권장하는 기사
     * 기사는 macOS 14 Sonoma에서 이슈를 재현하는 방법에 대한 기술적인 세부 사항을 제공하며, 이 과정이 기존의 방화벽 규칙을 모두 제거할 것이라는 경고를 포함
     * 제공된 단계의 예상 결과는 핑이 차단되고 트래픽이 pflog1에 기록되는 것이지만, 실제 결과는 핑이 인터넷에 허용되고 pflog1에 트래픽이 기록되지 않는 것
     * 기사는 이 문제에 대한 미래의 업데이트를 위해 독자들이 Mullvad 블로그를 계속 확인하도록 조언으로 마무리

        Hacker News 의견

     * macOS 14 Sonoma의 버그로 인한 앱 작동 문제에 대한 기사
     * 간결하고 정보적인 글쓰기를 칭찬하는 독자들
     * 최근 MacOS 릴리즈에서 방화벽 버그의 증가에 대한 일반적인 우려
     * pflog1이 생성되지 않는 문제 제기, 문제가 상류에 있을 수 있다는 추측
     * 일부 사용자들은 Mullvad 앱 없이 직접 wireguard 서버를 사용하면 문제를 우회할 수 있다고 제안
     * 마지막 두 MacOS 업그레이드 후 네트워킹 문제를 보고한 몇몇 사용자들, Mullvad VPN 앱을 열어 해결
     * Linux를 사용하여 nftables로 로깅 인터페이스를 생성하는 가능성 논의
     * 네트워킹의 사용자 제어를 점점 제한하는 macOS에 대한 우려, 나가는 트래픽을 중재할 수 있는 ""분리된 박스"" 솔루션 제안
     * 일부 사용자들은 Sonoma 베타와 최종 14.0 릴리즈에서 Mullvad가 잘 작동했다고 보고
"
"https://news.hada.io/topic?id=10772","Hugging Face, Training Cluster As a Service 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Hugging Face, Training Cluster As a Service 공개

     * 복잡한 프로세스 없이 대규모 모델을 허깅페이스의 클러스터에서 손쉽게 훈련하기 위한 서비스
     * 콤보박스에서 주요 값을 수정해서 가격 확인 가능
       I want to train a ""7B/13B/30B/70B"" parameters ""text/multimodal"" model on a ""1.4T/3.5T/7T"" tokens dataset, on ""200/500/1000"" ""A100/H100 GPUs/Trainium Nodes""
     * 70B 파라미터 text 모델을 1.4T 토큰 데이터셋으로 500개의 H100 GPU를 가지고 훈련하겠다 선택하면
       총 57일 소요되며 가격은 $2,879,856
"
"https://news.hada.io/topic?id=10778","MaxiBestOf Typefaces: 폰트별로 웹사이트 브라우징 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                MaxiBestOf Typefaces: 폰트별로 웹사이트 브라우징 하기

     * 특정 폰트를 사용하는 웹사이트들을 한눈에 보여주는 페이지
     * 해당 폰트를 어떻게 사용하고 있는지, 다른 폰트와 어떻게 조합하고 있는지 등을 확인 가능
     * 데스크탑 / 모바일 페이지를 캡쳐해서 이미지로 제공
"
"https://news.hada.io/topic?id=10816","캔 속의 커피","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                캔 속의 커피

     * 기사는 특히 일본에서 통조림 커피의 역사와 진화에 대해 논의한다.
     * 통조림 커피는 일본에서 인기 있는 제품으로, 거의 모든 거리에 전용 자판기가 있다.
     * 통조림 커피의 개념은 불편함과 UCC 커피의 CEO인 Tadao Ueshima의 편의성에 대한 욕구에서 1969년에 탄생했다.
     * UCC 커피는 생산 과정에서 여러 어려움을 겪었는데, 이에는 철제 캔과 커피가 반응하는 문제와 커피와 우유가 분리되는 문제가 포함되었다.
     * 초기 구매자들의 회의적인 태도와 저항에도 불구하고, UCC 커피는 1970년 오사카 월드 페어에서 통조림 커피로 성공을 거뒀다.
     * UCC 커피의 성공은 Pokka Lemon과 Coca Cola 등 다른 회사들이 통조림 커피 시장에 진입하게 했다.
     * Pokka Lemon은 1973년에 첫 통조림 핫 커피를 소개했고, Coca Cola는 1975년에 ""Georgia"" 통조림 커피를 출시했다.
     * 일본의 통조림 커피 시장은 계속 성장하고 있으며, Coca Cola의 ""Georgia"" 통조림 커피는 일본에서 가장 잘 팔리는 제품이다.
     * 기사는 통조림 커피의 품질을 확증하고 독자들이 직접 시도해 보도록 권장하며 마무리된다.

        Hacker News 의견

     * 일본에서 편의성과 인기를 누리는 자판기 캔 커피에 대한 기사
     * 많은 댓글러들이 일본의 자판기를 이용해 특히 추운 날씨에 따뜻한 캔 커피를 구입한 개인적 경험을 공유
     * 한 댓글러가 일본의 캔 커피 가격이 100-250엔 ($1-2)으로 저렴하다고 언급
     * 일부 댓글러들이 자신들이 일본에서 즐겼던 캔 커피가 미국에서도 더 쉽게 구할 수 있기를 바라는 의견 표현
     * 일부 댓글러들이 UCC와 Boss와 같은 특정 캔 커피 브랜드를 언급, 후자는 Tommy Lee Jones가 출연하는 광고로 유명
     * 한 댓글러가 배송비용이 적게 들어 Coca-Cola 같은 회사에게 캔 커피가 이윤을 가져다 준다고 논의
     * 다른 댓글러가 캔 커피 산업 뒤의 창업 정신을 언급, 끈기와 혁신의 중요성을 강조
     * 몇몇 댓글러들이 자판기에서 뜨거운 것과 차가운 것을 선택할 수 있다는 편의성을 언급, 한 사람은 라면을 데우기 위한 작은 전자레인지 추가를 제안
"
"https://news.hada.io/topic?id=10770","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   저는 최근 시드투자 유치와 팁스 지원이 코앞이라 사무실에 나와 열심히 서류작업 중입니다.
   쉴때마다 긱뉴스보는게 루틴이 되고 있네요 ㅎㅎㅎ
   빨리 Ask GN에 멤버를 찾고 계신가요에 저도 댓글을 달고싶은데 저와 다른 전문성의 엔지니어분을 찾으려니 막막합니다 하하

   지난주에 남산 산책을 갔는데 마침 국립극장 앞에서 행사를 하더라고요. 매주 다른 주제로 한다는데, 지난주는 식물장터가 열려 작은 식물을 둘 데려왔네요. 그래서 분갈이를 해주려고 합니다. ㅎㅎ
   그리고 음악회에 가요~

   오오 좋을 때 가셨군요! 저는 이번 주에 분갈이 하고 식물 사러 양재 꽃시장 가려고 하는데ㅎㅎ

   고등학교 친구들과 캠핑은 아니고 글램핑을 갑니다.
   다들 텐트까지 치는 건 원하지 않고, 불멍과 고기는 하고 싶다고 하네요 ㅎㅎ

   자전거 투어링 80키로 달립니다. 얼른 100키로의 벽을 깨고 싶군요.
"
"https://news.hada.io/topic?id=10877","MFA가 MFA가 아닐 때 - Retool이 피싱 공격을 당한 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 MFA가 MFA가 아닐 때 - Retool이 피싱 공격을 당한 방법

     * 2023년 8월 29일, Retool은 스피어 피싱 공격으로 인해 27개의 클라우드 고객 계정이 무단 접근당했다고 보고
     * 이 공격은 SMS 기반의 피싱 공격을 통해 시작되었으며, 직원들은 IT부서에서 계정 문제에 대해 보내온 것처럼 가장한 문자 메시지를 받았음
     * 한 명의 직원이 문자 메시지에 제공된 링크로 로그인하였고, 이는 다중 요소 인증(MFA) 양식이 포함된 가짜 포털로 보내짐
     * 공격자는 IT 팀원으로 가장하며 직원에게 전화를 걸어 추가적인 MFA 코드를 획득하였고, 이를 통해 직원의 Okta 계정에 개인 기기를 추가할 수 있었음
     * 공격자는 이후 자신의 Okta MFA를 생성할 수 있었으며, 이로 인해 공격자의 기기에서 GSuite 세션을 활성화
     * 공격자는 손상된 Google 계정 내의 모든 MFA 토큰에 접근하였고, 이로 인해 Retool의 내부 시스템에 접근하고 특정 고객 계정에 대한 인수 공격이 이루어짐
     * Retool은 모든 내부 인증 세션을 취소하고, 영향을 받은 계정에 대한 접근을 제한하며, 영향을 받은 고객에게 알리고, 그들의 계정을 원래 상태로 복구하는 방식으로 대응
     * Retool의 온프레미스 고객들은 ""제로 트러스트"" 환경에서 운영되며 완전히 독립적이므로 영향을 받지 않았음
     * 이 사건은 소프트웨어 기반 OTPs에 대한 MFA의 취약성과 Google Authenticator의 클라우드 동기화 기능과 관련된 위험성을 강조
     * Retool은 Google이 Google Authenticator의 어두운 패턴(클라우드 싱크를 키도록 하는 것)을 제거하거나, 조직이 이를 비활성화할 수 있는 기능을 제공하도록 해야한다고 제안
     * 회사는 소셜 엔지니어링에 대한 인식의 중요성과 전체 시스템에 영향을 미치는 인간의 오류를 방지하는 시스템의 필요성을 강조
     * Retool은 이미 내부적으로 인간-루프 워크플로우를 구현하였고, 이를 고객을 위한 제품에도 구현할 계획
     * 회사는 고객들이 자신의 위협 모델을 이해하고, 행동을 실행하거나 여러 직원의 승인이 필요한 에스컬레이션 플로우와 같은 추가적인 보호 조치를 통합하도록 권장

   설명된 대로라면 꽤나 회사 내부 사정에 밝은 누군가가 스피어피싱을 시도했나 보군요.
   회사 내부 프로세스는 물론 심지어 실제 직원의 목소리를 딥페이크 합성해서 전화를 할 정도였다니 말입니다.
   거기서 Google Authenticator의 클라우드 동기화 기능으로 OTP를 무력화하다니 흠좀무…

        Hacker News 의견

     * 본 기사는 멀티 팩터 인증(MFA)을 악용하고 딥페이크 기술을 사용한 정교한 피싱 공격에 대해 논의합니다.
     * 댓글러들은 클라우드 기반 MFA 코드가 취약하다고 제안하며, SMS 기반 MFA를 더 안전한 대안으로 추천합니다.
     * 보안 교육의 중요성이 강조되며, 예상치 못한 정보 요청에 대해 확인하기 위해 요청자에게 알려진 신뢰할 수 있는 채널을 통해 연락하는 것이 좋다는 조언이 제시됩니다.
     * 공격에서 딥페이크 기술의 사용에 대한 의구심이 제기되며, 이는 내부 정보가 필요한 양 때문입니다.
     * 회사가 하드웨어 2FA를 사용하지 않은 것에 대한 비판이 제기되며, 이는 더 안전하고 저렴하다고 간주됩니다.
     * 구글이 클라우드에 코드를 동기화하도록 권장하는 것에 대한 의문이 제기되며, 보안을 향상시키기 위해 암호화된 백업과 FIDO2를 사용하는 것을 제안합니다.
     * OTPs(일회용 비밀번호)는 구식이라고 간주되며, U2F, WebAuthn, Passkeys와 같은 피싱 방지 인증기가 대체제로 추천됩니다.
     * 직원의 목소리를 딥페이크하고 내부 회사 프로세스를 알고 있는 공격의 정교함이 언급됩니다.
     * 회사의 보안 태도에 대한 비판이 제기되며, 기본 보안 조치가 수정되어야 한다는 제안이 있습니다.
     * 공격의 상세한 공개가 접근성이 좋고 커뮤니티가 보안 조치를 개선하는 데 도움이 될 수 있다고 칭찬받습니다.
     * 공격자들이 어떻게 직원의 목소리에 대한 충분한 녹음 내용을 얻어 딥페이크를 만들 수 있었는지에 대한 의문이 제기되며, 이는 내부자의 개입을 가능성을 시사합니다.
     * 이 사건은 대화의 녹음과 내부 프로세스의 유출 가능성에 대한 우려를 불러일으킵니다.
"
"https://news.hada.io/topic?id=10837","Nvidia의 AI 성공 비밀","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Nvidia의 AI 성공 비밀

     * Nvidia가 10년간 GPU 성능을 1000배 올리게 만든 4가지 요소
     * Chief Scientist인 Bill Dally가 IEEE Hot Chips 2023 키노트에서 한장의 슬라이드로 설명

Number Representation: 16배

     * ""대체로 우리가 얻은 가장 큰 이점은 숫자 표현이 향상된 것""
     * 이 숫자들은 신경망의 주요 매개변수를 의미함
     * 이 매개변수중 하나는 가중치(Weights)이고, 또 다른 매개변수는 활성화(Activations)
          + 가중치: 모델의 뉴런간 연결 강도
          + 활성화: 뉴런에서 가중치가 적용된 입력의 합을 곱하여 활성화 여부를 결정하고 다음 레이어로 정보를 전파하는 것
     * P100 이전의 Nvidia GPU는 이런 가중치를 단정밀도 부동 소수점(single precision floating-point) 숫자를 사용하여 표현했음
     * IEEE 754 표준에 의해서 정의된 이 숫자는 길이가 32bit로, 23비트는 분수를 나타내고, 8비트는 분수에 적용되는 지수역할을 하며, 1비트는 숫자의 부호로 사용됨
     * 하지만 머신러닝 연구자들은 많은 계산에서 덜 정확한 숫자를 사용하는게 가능하며, 그래도 신경망이 여전히 정확한 답을 제시할수 있다는 것을 알게됨
     * 이렇게 더 적은 수의 비트를 처리하게 되면 머신 러닝의 주요 계산(곱셈 및 누적)을 수행하는 로직을 더 작고 효율적으로 만들 수 있음
          + 곱셈에 필요한 에너지는 비트수의 제곱에 비례
     * 그래서 Nvidia는 P100에서 FP16을 사용하여 그 수를 절반으로 줄임. 구글은 bfloat16 이라는 자체 버전도 내놓았음
          + 둘간의 차이는 정밀도를 제공하는 분수 비트와 범위를 제공하는 지수 비트의 상대적인 숫자 차이
          + bfloat16 은 FP32와 동일한 수의 지수 비트를 가지므로 두 형식 간에 전환이 쉬움
     * 오늘날의 최신 GPU인 H100은 8비트 숫자를 사용하여 ChatGPT 및 기타 LLM 같은 대규모 트랜스포머 신경망의 특정부분을 수행 가능
          + 하지만 Nvidia는 이게 모든 경우에 적용되는 one-size-fits-all 솔루션은 아니라는 것을 발견
          + 예를 들어, Nvidia의 Hopper GPU 아키텍처는 실제로 두가지 다른 FP8 포맷을 사용하여 계산을 함
          + 하나는 정확도가 약간 더 높고, 다른 하나는 범위가 약간 더 넒음
          + Nvidia의 특별한 소스는 언제 어떤 형식을 사용해야 하는지 아는 것
     * Dally와 그의 팀은 더 적은 비트에서 더 많은 AI를 짜내기 위한 온갖 흥미로운 아이디어를 가지고 있음
     * 그리고 부동 소수점 시스템이 이상적이지 않다는 것은 분명함
     * 주요 문제중 하나는 숫자가 크든 작든 상관없이 부동 소수점 정확도가 꽤 일관적이라는 것
     * 하지만 신경망의 매개변수는 큰 숫자를 사용하지 않고 0 주위에 모여 있음
     * 따라서 Nvidia의 R&D 초점은 숫자를 숫자를 0에 가깝게 더 정확하게 표현할 수 있는 효율적인 방법을 찾는 것

Complex Instructions: 12.5배

     * ""명령어를 가져오고 디코딩하는 데 드는 오버헤드는 간단한 산술 연산을 수행하는 것보다 몇 배나 높음""
     * 예를 들어 곱셈중 한가지는 연산 자체에 드는 1.5 피코줄(picojoules)의 20배에 달하는 오버헤드를 소비함
     * 일련의 명령이 아닌 단일 명령으로 큰 계산을 수행하도록 GPU를 설계함으로써 Nvidia는 큰 이득을 얻었음
     * 여전히 오버헤드가 있지만 복잡한 명령을 사용하면 더 많은 수학을 통해 비용을 상각할 수 있음
     * 예를 들어, 복잡한 명령인 IMMA(integer matrix multiply and accumulate, 정수 행렬 곱셈 및 누산)의 오버헤드는 수학 에너지 비용의 16%에 불과

Moore’s Law: 2.5배

     * 무어의 법칙의 진전을 유지하는 것은 수십억 달러의 투자와 매우 복잡한 엔지니어링, 그리고 수많은 국제적 불안이 수반됨
     * 그러나 이는 Nvidia의 GPU 성능 증가의 일부임
     * Nvidia는 가장 진보된 제조 기술을 지속적으로 활용해 왔음
     * H100은 TSMC의 N5(5나노미터) 공정으로 제작되었으며 칩 파운드리는 2022년 말에야 차세대 N3의 초기 생산을 시작했음

Sparsity: 2배

     * 훈련 후에는 신경망에 애초에 존재하지 않았어야 할 뉴런이 많이 남게 됨
     * 일부 신경망의 경우 ""뉴런의 절반 이상을 제거해도 정확도를 잃지 않을 수 있음""
     * 이러한 뉴런의 가중치 값은 0이거나 거의 0에 가깝기 때문에 출력에 기여하지 않으며, 계산에 포함시키는 것은 시간과 에너지 낭비일 뿐
     * 계산 부하를 줄이기 위해 이러한 네트워크를 ""희소(Sparse)""하게 만드는 것은 까다로운 작업
     * 그러나 H100의 전신인 A100을 통해 Nvidia는 구조화된 희소성(Structured Sparsity)이라고 부르는 기능을 도입
     * 이 하드웨어는 가능한 정리 이벤트 4개 중 2개를 강제로 발생시켜 새로운 더 작은 행렬 계산으로 이어질 수 있게 함
     * ""희소성 문제는 아직 끝나지 않았음"" ""우리는 활성화를 통해 무언가를 해야 하며 가중치에서도 더 큰 희소성을 가질 수 있음""

   오우, 좋은 글 감사합니다!

   재미있게 읽었습니다.

   와 주식 계속 사야..

   2018년에 정찰병으로 사둔 Nvidia 주식이 조금 있는데 현재 1100%네요. 그 때 왕창 샀어야. ㅠ

   와우..!

   16 x 12.5 x 2.5 x 2 하면 딱 1000 이네요.
"
"https://news.hada.io/topic?id=10821","모로코 지진으로 1,000명 이상 사망","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         모로코 지진으로 1,000명 이상 사망

     * 금요일 밤 모로코를 강타한 6.8 규모의 지진, 2,000명 이상 사망 및 대규모 피해 발생.
     * 지진의 진원지는 마라케시 남동쪽 약 46마일 떨어진 모로코 하이 아틀라스 산맥.
     * 모로코의 모하메드 6세 왕, 군의 수색 및 구조팀을 동원하여 헬리콥터와 드론을 이용해 생존자를 찾고 구조.
     * 라바트에 위치한 미국 대사관, 희생자와 그들의 가족에게 조의를 표함.
     * 모로코 사람들과 그 지역 출신들이 서로 돕며 지진으로부터 회복 중.
     * 마라케시 시는 지진 후 전체 이웃이 야외로 이동.
     * 알제리, 지진 후 2년 전에 관계를 끊었음에도 불구하고 모로코에 대한 항공 우주를 개방.
     * 모로코, 지진 후 3일간의 애도 선포.
     * 모로코 적십자사, 금요일 지진 생존자에게 도움을 제공하는 최초의 인도적 자선단체 중 하나.
     * 유엔과 유럽 위원회, 지진 후 모로코에 도움을 제공할 것을 제안.

        Hacker News 의견

     * 모로코 지진, 광범위한 지역에서 느껴진 심각하고 끔찍한 경험, 사람들이 밤을 야외에서 보내게 함
     * 모로코, 따뜻하고 친절한 사람들로 유명, 이로 인해 비극이 더욱 절실하게 느껴짐
     * 지진으로 인해 미국에서 비자로 일하는 모로코 출신의 젊은 전문가들이 고용 회사와 계약 기관에 의한 착취에 직면한 도전 과제가 부각됨
     * 아틀라스 산맥의 시골 지역에는 많은 건물들이 절벽 위에 지어져 있으며, 지진에 견딜 수 있는 준비가 되어 있지 않음
     * 이번 지진은 200년 이상 북아프리카에서 규모 6 이상의 첫 번째 지진으로, 준비 부족에 기여했을 수 있음
     * 모로코에서는 많은 건물들이 단순한 신더블록으로 건설되며, 이는 토지 소유 문제로 인해 정부에서 다소 장려하는 관행. 이러한 구조물들은 지진에 견딜 수 없어 재난을 악화시킴
     * 지진은 아프리카에서는 이례적인 현상으로, 지진 활동은 지하 광산보다는 테크토닉 활동과 더 자주 연관되어 있음. 이 지진은 유라시아 판과 아프리카 판이 만나는 곳에서 발생함
"
"https://news.hada.io/topic?id=10765","jq 1.7 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               jq 1.7 기술

     * 오픈 소스 프로젝트 jq가 5년 만에 새로운 버전 jq 1.7을 출시하였습니다.
     * 프로젝트는 새로운 GitHub 조직, 새로운 관리자, 그리고 이번 릴리즈에 크게 기여한 새로운 유지보수자들을 확보하였습니다.
     * jq 프로젝트는 새로운 위치로 이동하였습니다: https://github.com/jqlang
     * NEWS 파일이 Markdown 형식의 NEWS.md로 대체되었습니다.
     * 지속적인 통합 (CI), 빌드 스캔, 릴리즈, 웹사이트 빌드는 이제 GitHub 액션을 사용합니다.
     * 프로젝트의 문서화가 크게 개선되었으며, 섹션 검색 박스, 링크를 위한 더 나은 섹션 ID, 다크 모드와 같은 새로운 기능으로 웹사이트가 업데이트되었습니다.
     * Linux, macOS, Windows, Docker를 위한 릴리즈 빌드가 이제 사용 가능합니다.
     * jq의 Docker 이미지는 이제 Docker Hub 대신 ghcr.io/jqlang/jq에서 사용할 수 있습니다.
     * 새로운 릴리즈는 명령 줄 인터페이스 (CLI)에 대한 여러 변경사항을 포함하고 있습니다. 예를 들어, JQ_COLORS 환경 변수를 사용하여 객체 키 색상을 설정할 수 있게 하고, NO_COLOR 환경 변수를 존중하여 색상 출력을 비활성화하며, --help 출력을 개선하였습니다.
     * 새로운 릴리즈는 또한 여러 언어 변경사항을 포함하고 있습니다. 예를 들어, 정밀도를 유지하기 위해 십진수 숫자 리터럴을 사용하고, pick(stream) 및 debug(msgs)와 같은 새로운 내장 함수를 추가하며, 객체 리터럴에서 $binding을 키로 사용할 수 있게 하였습니다.
     * 이번 릴리즈에서는 try/catch, 문자열을 숫자로 변환, 큰 숫자의 표현, 배열에 대한 빈 할당을 사용한 삭제 등의 문제를 포함한 여러 버그가 수정되었습니다.
     * 전체 변경 로그는 jq-1.6...jq-1.7에서 확인할 수 있습니다.
     * 이번 릴리즈는 커뮤니티에서 호평받았으며, 많은 사용자들이 발표에 긍정적으로 반응하였습니다.

        Hacker News 의견

     * 개발자들 사이에서 인기 있는 JSON 데이터 처리 도구인 'jq 1.7' 출시에 대한 기사
     * 사용자들이 'jq'에 대한 애정과 그것이 프로젝트에서의 유용성을 표현
     * 한 사용자가 Clojure에서 'jq'의 일부를 제품에 구현하였다며 'jq'의 유연성과 적응성을 강조
     * 수년 전에 작성된 스크립트가 오늘날에도 정확하게 작동하는 'jq'의 안정성을 칭찬
     * JMESPath, yq, dasel, hclq와 같은 'jq'의 대안을 언급하는 사용자들, JSON 데이터 처리 도구의 다양성을 나타냄
     * 사용자가 emacs를 위한 'jq-mode'를 발견, 'jq' 필터 파일 편집을 지원하고 JSON 또는 YAML 버퍼에 'jq'를 대화식으로 적용 가능
     * 일부 사용자들이 처음에는 'jq'의 문법을 혼란스럽게 느꼈지만, 이해하게 되면서 그것의 힘을 인정
     * 'jq'를 자주 사용하지 않고 그 문법에 어려움을 겪는 사람들을 위한 대안으로 greppable JSON 도구인 'gron'을 제안
     * 커뮤니티의 'jq' 프로젝트를 부활시키고 새로운 관리자를 모집하는 노력을 칭찬
     * AI, 특히 ChatGPT의 사용이 'jq' 스크립팅을 돕는 도구로 언급, AI와 전통적인 코딩의 교차점을 나타냄
"
"https://news.hada.io/topic?id=10822",""Make"를 이용한 정적 사이트 생성기 (2022)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ""Make""를 이용한 정적 사이트 생성기 (2022)

     * ""Make""를 정적 사이트 생성기로 사용하는 방법에 대한 기사, 이 도구는 간단함, 속도, 저 유지 보수로 인해 인기를 얻고 있다.
     * 저자 Karl Bartel은 간단한 스크립트를 사용하여 블로그를 설정하는 경험을 공유하며, 이를 다른 사이트 빌더를 사용하는 것보다 더 만족스럽게 느꼈다.
     * 기본 설정은 모든 입력 파일을 소스 디렉토리에 두고, 처리 중에 모든 HTML 파일에 헤더를 추가하며, 다른 모든 파일을 그대로 빌드 디렉토리로 복사하는 것을 포함한다.
     * 저자는 make build로 실행할 때 각 단계에 대한 Makefile 규칙을 제공하며, 이를 통해 로컬에서 브라우징하거나 웹 서버에 업로드할 수 있는 빌드 디렉토리를 생성한다.
     * 기사는 또한 현재 페이지를 표시하거나, 마크다운에서 페이지를 생성하거나, 편의 기능을 추가하는 등 다양한 요구에 맞게 기본 설정을 확장하는 방법에 대해 논의한다.
     * 편의 기능의 예로는 Python의 내장 웹 서버를 사용하여 사이트를 로컬에서 제공하거나, 소스 디렉토리의 파일이 변경될 때 사이트를 자동으로 다시 빌드하거나, 사이트를 GitHub Pages에 업로드하는 것이 있다.
     * 저자는 Makefile에 자신만의 정적 사이트 생성기를 가지는 것의 이점을 강조하며, 이에는 이상한 종속성이 없음, 쉬운 유지 보수, 자신의 요구에 빠르게 적응할 수 있음이 포함된다.
     * 이 접근 방식을 사용하여 구축된 페이지의 실제 예는 https://github.com/karlb/astridbartel.de에서 제공된다.

        Hacker News 의견

     * ""Make""를 정적 사이트 생성기로 사용하는 논의에 대한 기사
     * 한 사용자가 Makefile을 사용하여 웹사이트를 생성하는 개인적인 경험을 공유, 뉴스, RSS 피드, 연구 발표와 강의 자료의 자동 목록 등의 기능을 추가한 것이 효과적으로 작동해 왔음
     * 사용자는 웹사이트가 호스팅되는 원격 서버에서 필요할 때 'make'를 자동으로 호출하는 git hooks의 사용을 언급
     * 다른 사용자는 이 접근법의 문제점을 지적: 소스에서 파일을 삭제해도 빌드에서 삭제되지 않음. 전체 빌드 폴더를 재빌드 전에 제거하는 우회 방법을 제안하지만, 이는 빌드 시스템의 목적을 상쇄시킴
     * 한 사용자는 m4를 추가하여 유연성을 높이는 것을 제안하지만, 기여자들 사이에서 HTML 숙련도가 필요하기 때문에 이 접근법이 오늘날의 큰 웹사이트에서는 작동하지 않을 수 있음을 지적
     * 한 사용자는 Karl의 ""blog.sh"" 쉘 스크립트 작업에 영감을 받아 자신의 미니멀리스트 정적 사이트 생성기(SSG)인 ""barf""를 만드는 방법을 공유
     * 다른 사용자는 이미 Github에 푸시하고 있다면, 소스를 푸시하고 Github이 마크다운을 호스팅된 페이지로 게시하게 할 수 있다고 지적
     * 한 사용자는 Hacker News에서 접하는 대부분의 개발자 블로그에 RSS 피드가 있음을 칭찬하며, 자신이 읽는 모든 흥미로운 기사에 대한 피드를 팔로우하는 습관을 공유
     * 한 사용자는 'make'를 사용하여 과학 논문을 생성하는 경험에 대한 일화를 공유, 단일 테스트 파일을 변경하면 테스트를 실행하고 그래프를 생성하는 등 논문 전체를 재생성할 수 있음
     * 한 사용자는 'make'가 느린 컴파일러에 의해 빌드된 큰 프로그램에 유익하다고 주장, 빠른 증분 재빌드를 가능하게 하지만, 빠르게 생성할 수 있는 정적 사이트의 경우 스크립트가 더 효율적일 수 있음
     * 한 사용자는 쉘 스크립트를 사용한 후 Makefile로 전환한 경험을 공유, 이것이 더 적합하다고 발견. 페이지를 생성하고 색인과 Atom 피드를 생성하기 위해 XSLT 템플릿의 사용도 언급
     * 20년 이상 리눅스와 쉘 스크립트를 사용해 왔지만 코딩을 많이 하지 않은 사용자는 'make'가 쉘 스크립트보다 선호되는 이유를 묻고, Zim-wiki에서 웹사이트를 만든 후 스크립트를 사용하여 메인 강의 페이지를 정리하고 업데이트하는 습관을 공유
"
"https://news.hada.io/topic?id=10799","Flexport, 서명된 제안서들을 철회","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Flexport, 서명된 제안서들을 철회

        Hacker News 의견

     * 물류 회사인 Flexport가 55개의 채용 제안을 철회하고, 미국 전역의 사무실 임대를 추진하며 ""집안 정리""를 하고 있다.
     * 회사의 HackerNews에 대한 빈번한 채용 게시물이 비판을 받았으며, 일부 사용자들은 최근의 행동으로 인해 그들이 블랙리스트에 올라야 한다고 제안하고 있다.
     * 일부 사용자들은 채용 제안을 받았을 때 현재 고용주에게 2주간의 통보를 하지 않는 것을 제안하고 있다. 이는 제안이 철회될 경우를 대비하기 위함이다.
     * Flexport 웹사이트에 올라온 많은 수의 채용 공고가 실제 채용 필요성의 반영이 아닌 인재를 끌어들이기 위한 전략이라는 추측이 있다.
     * Flexport와 Smarking은 빈번한 채용 게시물로 인해 HackerNews에서 가장 스팸성이 강한 회사로 일부 사용자들에게 간주되고 있다.
     * Flexport는 또한 이미 체결된 사무실 임대 계약을 철회하려는 시도를 하고 있다고 보도되었으며, 이로 인해 직원들 사이에 사기가 저하되고 있다.
     * 회사의 CEO가 최근에 퇴진되었으며, 이로 인해 회사의 도전이 더욱 어려워졌다.
     * Flexport의 창립자인 Ryan Petersen이 이전에 회사가 10억 달러의 현금을 보유하고 있다고 자랑했음에도 불구하고, 지금은 재정이 어렵고 퇴직금을 지급할 여력이 없다는 것을 암시하고 있다.
     * 일부 사용자들은 백 칼라 근로자와 고용주 사이의 암묵적인 계약이 점점 약화되고 있으므로, 고용주와 거래할 때 개인적인 이익을 우선시하는 것을 권장하고 있다.
     * Flexport의 행동은 특히, Flexport에 합류하기 위해 다른 제안을 거절했을 수 있는 국제 학생이나 H1B 보유자들에게 해를 끼쳤다는 비판을 받았다.
"
"https://news.hada.io/topic?id=10875","Discord를 질의응답 포럼으로 사용하지 마세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Discord를 질의응답 포럼으로 사용하지 마세요

     * 프로젝트에 대한 Q&A 포럼으로 Discord 사용을 반대하는 기사, 몇 가지 이유를 제시
     * 혼돈: Discord의 빠른 페이스로 인해 중요한 게시물이 메시지의 끊임없는 흐름 속에서 사라질 수 있음. 스레드 도입에도 불구하고 이 문제는 계속됨.
     * 불량한 검색 및 발견: 기사에서는 Discord의 검색 기능을 비판하며, 과거의 토론이나 해결책을 찾는 것을 눈가리고 취한 상태에서 건초 더미에서 바늘을 찾는 것에 비교함.
     * Discord 오디세이: Discord에서 도움을 찾는 과정은 Discord 링크를 찾아서 서버에 가입하고 문제를 검색하는 것으로부터 시작되는 긴 여정이라고 설명됨.
     * 일시성: 기사에서는 Discord의 장기성에 대한 우려를 제기함. Stack Overflow와 같이 정기적으로 보관되는 플랫폼과 달리, Discord가 내일도 존재할 것이라는 보장이 없음.
     * 기사에서는 Q&A 포럼에 더 나은 대안을 제안함:
          + 전용 커뮤니티 포럼: Discourse와 같은 플랫폼은 구조화된 토론을 위해 설계되었으며 SEO가 좋아 사용자가 필요한 것을 찾기 쉬움.
          + 전문 플랫폼: Stack Overflow나 Reddit, Lemmy, Kbin 등의 커뮤니티가 도움을 찾는 데 추천됨.
          + Git 기반 이슈 추적 시스템: 코드 관련 문제에 대해서는 기사에서 GitHub, Gitlab, Gitea 또는 다른 Git 기반 이슈 추적 시스템을 사용하는 것을 제안함, 특히 오픈 소스 프로젝트에 대해서.
     * 기사는 Discord가 특정 목적에는 훌륭하지만 Q&A 포럼으로는 적합하지 않다는 것을 인정하며 마무리함. 이 목적을 위한 플랫폼 선택에 대해 독자들이 신중하게 생각하도록 권장함.

        Hacker News 의견

     * 기사는 Discord를 기술 프로젝트의 Q&A 포럼으로 사용하는 데 있어 단점을 논의한다.
     * 한 사용자는 Xbox 무선 컨트롤러 커널 드라이버에 대한 GitHub 저장소를 사용하면서 Discord를 Q&A로 사용한 경험을 공유했다. 오류 메시지에 대해 묻기 위해 로그인하고 그룹에 가입해야 하는 것이 불편했다.
     * 사용자는 GitHub에서 논의되는 일반적인 문제는 모든 사람에게 도움이 될 수 있지만, Discord에서는 찾기 어렵고 보통 새로운 사람마다 직접적인 인간 지원이 필요하다고 지적했다.
     * 다른 사용자는 웹사이트에서 반환 정책과 양식을 채팅 지원으로 대체하는 추세를 비판했다. 이는 종종 시간 낭비로 이어진다.
     * 일부 사용자들은 프로젝트 대상자들이 포럼이나 Matrix보다 Discord를 선호한다고 언급했다. 이는 대상자를 알아야 한다는 중요성을 나타낸다.
     * 한 사용자는 Dlang이 메일링 리스트를 사용하여 다양한 즉시 메시징 봇(IRC, Discord, Matrix)과 같은 포럼처럼 작동하는 방식을 칭찬했다.
     * 여러 사용자들은 Discord에서 문제를 Google 검색하고 비슷한 게시물과 해결책을 찾을 수 없는 문제를 강조했다. 이로 인해 문제가 해결되었는지 아닌지 알기 어렵다.
     * 일부 사용자들은 Stack Overflow 스타일의 Q&A를 문서화를 위해 선호한다고 표현했다. 그들은 Discord가 지속적인 정보 저장소로 적합하지 않다고 주장했다.
     * 한 사용자는 사람들이 통신 플랫폼에 대한 선호도가 인터넷을 사용하기 시작한 시기와 그 시기에 인기가 있던 것과 관련이 있을 수 있다고 제안했다.
     * 다른 사용자는 사용하거나 사용하지 말아야 할 것에 대한 규정적인 발언이 사실로 가장되는 의견이라고 주장했다. 그리고 그들은 자신과 그들의 고객/클라이언트에게 가장 잘 맞는 것을 사용해야 한다고 주장했다.
     * 한 사용자는 Discord에서 Q&A를 중앙화하는 것이 문제라고 동의했다. 이는 정보를 덜 찾을 수 있고 검색할 수 있게 만든다. 그러나 그는 Discord에서 질문을 검색하는 AnswerOverflow라는 도구를 언급했다.
"
"https://news.hada.io/topic?id=10817","Peredvizhnikov 엔진: C++20으로 작성된 락-프리 게임 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Peredvizhnikov 엔진: C++20으로 작성된 락-프리 게임 엔진

     * Peredvizhnikov Engine은 C++20을 사용하여 개발된 락-프리 게임 엔진입니다.
     * 이 엔진은 C++20의 코루틴 원시 개념 위에 actor model of concurrent computation을 사용하여 복잡하고 병렬적인 로직 개발이 가능합니다.
     * 락-프리 구현의 엔진은 보장된 진행, 데드락-프리, 예측 가능한 대기 시간, 높은 장애 허용성 등 여러 가지 이점을 제공합니다.
     * 장애 허용성은 작업 스레드 중 어느 것이 비동기적으로 종료되더라도 엔진이 계속 실행될 정도로 강력합니다.
     * 엔진의 디자인은 전통적이고 혁신적인 락-프리 프로그래밍 아이디어를 혼합하여, 고유한 Software Transactional Memory 구현, 새로운 유형의 락-프리 큐, 락-프리 std::atomic_shared_ptr 등을 포함합니다.
     * 사용된 락-프리 알고리즘에 대한 종합적인 이해, 디자인 근거, 벤치마크 등을 위해 독자들은 Peredvizhnikov Engine: Design and Implementation of a Completely Lock-Free Scheduler 문서를 검토하도록 권장됩니다.
     * 현재, 이 엔진은 리눅스 플랫폼만 지원하며, 소스를 빌드하기 위해서는 Clang++ 16이 필요합니다.
     * Peredvizhnikov Engine의 소스 코드는 GPLv3 라이선스에 따라 제공되지만, 저자는 경우에 따라 코드의 일부 또는 전체를 다른 라이선스에 따라 사용할 수 있는 권한을 부여할 수 있습니다.
     * 저자인 Eduard Permyakov는 소스 코드, 기본 알고리즘, 잠재적인 고용 기회에 대한 문의에 열려 있습니다. 그의 연락처 이메일은 edward.permyakov@gmail.com입니다.
"
"https://news.hada.io/topic?id=10876","벡터 유사도 검색이 무엇인가요? (What is Vector Similarity Search?)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         벡터 유사도 검색이 무엇인가요? (What is Vector Similarity Search?)

   머신러닝 어플리케이션의 주요한 기법 중 하나인 벡터 유사도 검색의 개념과 함께 어디에 사용하고, 사용 시의 예상되는 문제점들과 해결방법은 어떤 것인지를 알아보는 글을 번역하였습니다. 이 글은 이론/기술적으로 상세한 내용을 다루기보다는, 벡터 유사도 검색에 대한 개요와 함께 큰 그림(?)을 파악하는데 도움이 되는 글입니다.

   주요 목차 및 내용은 아래와 같습니다. (⚠️주의⚠️: 이 글에는 AI 인프라/도구 개발사 ENCORD사社의 블로그 글을 허락 하에 번역하여 공유하는 것으로, 작성자인 ENCORD의 서비스를 홍보하는 문구가 다수 포함되어 있습니다.)
     * 벡터 유사도 검색이 해결하는 문제는 무엇인가요? / What Problem is Vector Similarity Search Solving?
          + 차원의 저주 / Curse of Dimensionality
          + 키워드 기반 검색의 비효율성 / Ineffective keyword-based search
          + 확장성 / Scalability
          + 비정형 또는 반정형 데이터 / Unstructured or Semi-Structured Data
     * 벡터 유사도는 어떻게 동작하나요? / How Does Vector Similarity Work?
          + 벡터 임베딩 / Vector Embeddings
          + 유사도 점수 계산 / Similarity Score Computation
          + 최인접 이웃(NN) 알고리즘 / NN Algorithms
     * 벡터 유사도 검색의 사용 사례 / Use cases for Vector Similarity Search
          + 추천 시스템 / Recommendation Systems
          + 이미지 및 비디오 검색 / Image and Video Search
          + 자연어 처리(NLP) / Natural Language Processing (NLP)
          + 이상 징후 탐지 / Anomaly Detection
          + 클러스터링 / Clustering
          + 게놈 시퀀싱 / Genome Sequencing
          + 소셜 네트워크 분석 / Social Network Analysis
          + 콘텐츠 필터링 및 검색 / Content Filtering and Search
     * 벡터 유사도 검색의 걸림돌 / Vector Similarity Search Challenges
          + 고차원 데이터 / High-dimensional Data
          + 확장성 / Scalability
          + 거리 측정 기준 고르기 / Choice of Distance Metric
          + 인덱싱 및 저장소 요구사항 파악하기 / Indexing and Storage Requirements
          + 정확도와 효율성 사이의 균형 맞추기 / The trade-off between Accuracy and Efficiency
          + 데이터 분포 및 쏠림 / Data Distribution and Skewness
          + 결과의 설명 가능성 / Interpretability of Results
     * 벡터 유사도 검색 문제의 해결방법 / How to Solve Vector Similarity Search Challenges
          + 고차원 데이터 / High-Dimensional Data
          + 거리 측정 기준 고르기 / Choice of Distance Metric
          + 인덱싱 및 저장소 요구사항 / Indexing and Storage Requirements
          + 신경망 해싱 / Neural Hashing
     * 컴퓨터 비전(CV) 분야에서의 벡터 유사도 검색 사용 사례 / How Vector Similarity Search can be used in Computer Vision
          + 객체 탐지 / Object Detection
          + 이미지 검색 / Image Retrieval
          + 이미지 인식 / Image Recognition
          + 이미지 세분화 / Image Segmentation
     * 벡터 유사도 검색 요약 / Vector Similarity Search Summary
     * 주요 요점 정리 / Key Takeaways

   임베딩(embedding)이 익숙하지 않으신 분들께서는 아래 글도 함께 참고하시면 좋습니다. :)
     * https://news.hada.io/topic?id=9316
"
"https://news.hada.io/topic?id=10846","iPhone 15 & iPhone 15 Plus","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       iPhone 15 & iPhone 15 Plus

     * Apple, 새로운 디자인과 고급 기능을 갖춘 iPhone 15 및 iPhone 15 Plus 출시 발표
     * 새로운 iPhone들, 색상이 더해진 뒷면 유리, 윤곽선, 2x Telephoto 기능이 있는 48MP 메인 카메라 특징
     * A16 Bionic 칩으로 구동되는 iPhone들, 강력한 성능과 에너지 효율성 제공
     * iPhone들, 핑크, 노랑, 초록, 파랑, 검정 색상의 새로운 5가지 색상으로 출시 예정
     * 9월 15일 금요일부터 사전 주문 시작, 9월 22일 금요일부터 판매 시작
     * iPhone들, 알림과 실시간 활동과 상호 작용하는 새로운 방법인 Dynamic Island 기능
     * Super Retina XDR 디스플레이, 최대 1600 니트의 HDR 최고 밝기 제공, 사진과 비디오를 더욱 선명하게 표현
     * iPhone들, 실용적인 파일 크기로 놀라운 이미지 품질을 제공하는 새로운 24MP 초고해상도 기본 설정
     * iPhone들, Crash Detection과 위성을 통한 Emergency SOS 등 중요한 안전 기능 제공
     * iPhone들, 충전 및 데이터 전송의 보편적 표준인 USB-C 커넥터 사용
     * 환경을 고려하여 디자인된 iPhone들, 재활용 콘텐츠 사용 및 전체 공급 체인에서 청정 전기 우선
     * iPhone들, 128GB, 256GB, 512GB 저장 용량으로 출시, iPhone 15는 $799부터, iPhone 15 Plus는 $899부터 시작
     * iPhone 15 및 iPhone 15 Plus를 구매하는 고객들은 새로운 구독과 함께 Apple Arcade와 Apple Fitness+ 3개월 무료 이용 가능

        Hacker News 의견

     * 새로운 iPhone 15 및 iPhone 15 Pro Max 출시에 대한 기사
     * 새 모델에서 주요 변화는 11년 동안 애플 장치의 특징이었던 Lightning 커넥터에서 USB-C로의 전환
     * 사용자들은 오래된 Lightning 케이블을 버릴 수 있게 되는 USB-C 기능에 흥분
     * 새로운 iPhone은 USB-C에서 USB-C로 충전 케이블이 함께 제공되지만, 데이터 케이블로도 사용할 수 있는지는 불분명
     * 인플레이션에도 불구하고 애플은 새로운 iPhone의 가격을 상대적으로 낮게 유지, 지금까지 가장 저렴한 모델 중 하나
     * 일부 사용자들은 컴퓨터와 주변 장치 간의 물리적 연결 및 데이터 전송을 위한 표준인 SCSI로의 전환을 희망
     * iPhone 14에서 iPhone 15로 업그레이드할 가장 설득력 있는 이유는 USB-C 기능뿐이라는 일부 사용자들의 의견
     * 애플의 혁신이 둔화했다는 비판, EU가 USB-C를 요구하는 등 강제로 변화를 이끌어내야만 하는 경우
     * M2 MacBook Air에 대한 애플의 찬사, 이는 훌륭한 소프트웨어 엔지니어링 플랫폼으로 묘사됨
     * 오래된 Lightning 케이블을 어떻게 처리할 것인지에 대한 우려, 애플은 새로운 USB-C iPhone과 함께 사용할 수 있는 Lightning 충전 케이블을 위한 $29 어댑터를 판매할 계획
     * 일부 사용자들은 장치의 충전 포트 내구성에 대한 우려로 인해 USB-C로의 전환을 찬성하지 않음
     * 애플에게 iPhone의 더 작고 저렴한 버전을 만들 것을 요청
     * 새로운 iPhone의 발표가 너무 길고, 제품 발표보다는 투자자 회의에 더 적합하다는 비판
"
"https://news.hada.io/topic?id=10836","eza - ls 의 최신 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           eza - ls 의 최신 대체제

     * Rust로 작성된 작고 빠르고 편리한 ls 대체 유틸리티
     * 더 이상 유지보수 되지 않는 exa를 fork 하여 버그 수정 및 기능 추가 진행중
     * 윈도우/맥/리눅스
     * exa 에 없는 기능들
          + 하이퍼링크 지원
          + Mount 포인트 상세 정보
          + Selinux 컨텍스트 출력
          + Git Repo Status 출력
          + 읽기 쉬운 상대적 날짜 표시
          + 여러 버그 수정

   개인적으로는 lsd + exa 로 사용하다가 이제는 exa 는 버리고 lsd 만 사용하고 있습니다 .

   현재 ubuntu + macOS 환경이구요..

   지금은 lsd 로 설정해놓고 사는데 아무런 문제가.. 아무래도 업데이트가 꾸준한게 ...

   비슷한 케이스로 lua static analyzer인 luacheck 개발자인 피터 멜니첸코가 5년 전 작고한 후 이어 받는 사람이 없어서 개발이 멈춘 것 같네요.

   https://lua-l.lua.narkive.com/gHufzJTf/peter-melnichenko

   Vim이 lua를 많이 쓰는지라 티켓은 쌓여가는데... 꽤나 마이너 언어라 미래가 어찌될지 모르겠습니다. 이게 오픈소스의 제일 큰 문제가 아닐까 싶습니다.

   exa 의 원개발자인 @ogham 이 2021년 11월 이후로 전혀 활동이 없고 연락이 안된다고 하네요.
   Owner 연락이 안되어서 Repo 아카이빙도 불가능하고요
   그래서 관련 커미터들이 별도로 포크해서 개발해 나가기로 했다고 합니다.
     * Modern Unix - 유닉스 명령들의 최신 대체제
     * 새로 나온 커맨드라인 툴들
     * 요즘 유용한 커맨드 라인 도구 모음

   거의 모든 글에서 exa 를 추천하는데, 앞으로는 eza를 적어야 할듯 하네요.

   exa/eza 보다 lsd(ls deluxe) 를 추천하는 사람도 있긴 합니다 https://github.com/lsd-rs/lsd
   역시 Rust 로 작성한 도구이고, ls 랑 정말로 옵션까지 같아서 진정한 대체제라고요. 물론 속도도 조금 더 빠르다고 합니다.

   아 exa 와 eza 의 가장 큰 차이점중 하나는 윈도우 지원이기도 합니다.
"https://news.hada.io/topic?id=10791","Apple 대 Meta: 개인정보 보호의 환상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Apple 대 Meta: 개인정보 보호의 환상
   exa 가 윈도우를 지원 안해서 lsd 를 썼어야 했는데, eza는 윈도우 바이너리도 배포합니다.


        Hacker News 의견
   저도 윈도우에서 lsd 를 ls 로 alias 걸어서 쓰고있어요 (powershell)

"
     * 페이스북의 적극적인 데이터 수집과 애플의 수동적인 데이터 수집 허용 간의 비교는 일부 사용자들에게 불공평하게 느껴진다.
     * 사용자들은 광고 회사의 침략적인 행동, 개인 정보 판매 및 데이터 수집에 대한 동의를 얻기 위한 기만적인 방법에 대해 불만을 표현한다.
     * 일부 사용자들은 애플이 개인 정보 보호를 마케팅하고 있음에도 불구하고, 메타를 포함한 다른 회사들과 유사한 데이터 수집 방식을 사용한다고 주장한다.
     * 애플의 개인 정보 보호 관행과 메타의 것을 혼동하는 기사에 대해 비판이 제기되며, 일부 사용자들은 개인 정보 침해를 하는 제3자 앱 사용이 주요 문제라고 주장한다.
     * 사용자들은 개인 정보 보호가 우려된다면, 인터넷 연결 장치와 서비스를 전혀 사용하지 않는 것이 가장 좋은 대응 방안이라고 제안한다.
     * 회사에 대한 신뢰는 수집된 데이터의 양보다 중요하게 여겨지며, 애플은 다른 대형 기술 회사들보다 더 신뢰할 수 있다고 인식된다.
     * 일부 사용자들은 개인 정보 보호를 위한 입법 조치를 제안하며, 이에는 데이터 수집에 대한 동의를 1-3년마다 갱신하도록 요구하고 데이터 판매를 선택적으로 동의하는 과정을 만드는 것이 포함된다.
     * 기사에서 정보를 제시하는 방식은 정보 제공보다는 부정직하고 선전적이라는 비판을 받는다.
     * 기사의 사용자 경험은 불만족스럽다고 비판받는다.
"
"https://news.hada.io/topic?id=10777","GoJekyll - Go로 구현한 빠른 Jekyll 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    GoJekyll - Go로 구현한 빠른 Jekyll 엔진

     * 정적 사이트 생성기인 Jekyll 을 부분 호환하는 Go 버전 클론
     * 약 20배 빠른 속도
     * Liquid / SASS 는 그대로 지원
     * 현재 미지원 부분들
          + Pagination
          + Math
          + 플러그인 시스템(일부 플러그인은 에뮬레이트됨)
          + Liquid 필터 sassify 는 미구현
          + Liquid 가 strict mode 에서 실행
          + 미지원 마크다운 : 속성 리스트, span/block
"
"https://news.hada.io/topic?id=10870","GNAT Pro for Rust: 임베디드를 위한 Rust 개발환경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 GNAT Pro for Rust: 임베디드를 위한 Rust 개발환경

   GNAT Pro for Rust는 현재 일부 고객을 대상으로 한 Early Access 중이며 x86_64 리눅스 및 리눅스 크로스 타겟을 위한 컴파일러(rustc), 빌드 및 패키지 관리자(cargo) 및 디버거(gdb)를 제공합니다.

   GNAT Pro for Rust 25가 공식 출시되면 gprbuild와의 완전한 통합을 제공하고 고급 Ada - Rust 양방향 바인딩을 제공하는 동시에 더 많은 플랫폼을 지원할 것입니다.
     * gprbuild는 GNAT Studio에서 사용되는 Ada, C/C++용 빌드 시스템입니다.

   GNAT Pro for Rust는 항공기(DO-178), 철도(EN-50128), 우주(ECSS-E-ST-40C 및 ECSS-Q-ST-80C)용 등의 SW 안전 인증 요구를 지원될 계획입니다. AdaCore의 로드맵에는 Ada용 GNAT Pro 및 C/C++용 GNAT Pro에서 이미 사용할 수 있는 것과 유사한 언어 라이브러리(libcore의 하위 집합 등) 인증, 소스-오브젝트 추적성 연구 및 컴파일러 인증(도구 인증)이 포함됩니다.

   MCU도 좀 힘내주었으면.. -_-;

   저희 회사에서도 Rust 도입 얘기가 있길래 어깨넘어로 들어봤는데, 결론은 AdaCore 가 힘내줘야한다... 였던것 같네요. (인증 등등 문제로)

   임베디드 분야가 흥미로워질것 같네요. 차량용(26262 등)도 지원하면 판이 커질 것 같습니다.

   Rust를 임베디드에서 사용하려는 노력은 많이 있는데, AdaCore에서 나서서 아예 tool 인증까지 된 개발환경을 제공하려는 것 같습니다. (항공용 SW같은 Safety-Critical SW는 개발에 사용하는 도구도 인증을 받아야 합니다.)
"
"https://news.hada.io/topic?id=10851","Chrome: WebP에서 힙 버퍼 오버플로우 발생","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Chrome: WebP에서 힙 버퍼 오버플로우 발생

     * Chrome 팀이 안정 버전 및 확장 안정 채널에 대한 업데이트를 발표하였습니다.
     * 업데이트된 버전은 Mac 및 Linux의 경우 116.0.5845.187이며, Windows의 경우 116.0.5845.187/.188입니다.
     * 확장 안정 채널은 Windows용 116.0.5845.188 및 Mac용 116.0.5845.187로 업데이트되었습니다.
     * 이 업데이트는 앞으로 몇 일 및 주 동안 점진적으로 진행될 예정입니다.
     * 업데이트에는 CVE-2023-4863으로 식별된 중요한 문제에 대한 보안 수정이 포함되어 있습니다.
     * 이 문제는 WebP에서의 힙 버퍼 오버플로우로, Apple Security Engineering and Architecture (SEAR) 및 토론토 대학교 Munk School의 The Citizen Lab에서 보고되었습니다.
     * Google은 CVE-2023-4863에 대한 악용 코드가 실제로 존재함을 인지하고 있습니다.
     * Chrome의 많은 보안 버그는 AddressSanitizer, MemorySanitizer, UndefinedBehaviorSanitizer, Control Flow Integrity, libFuzzer, AFL 등의 도구를 사용하여 감지됩니다.
     * Chrome 팀은 안정 채널에 보안 버그가 도달하지 않도록 개발 주기 동안 함께 작업한 모든 보안 연구원들에게 감사의 말씀을 전합니다.
     * 릴리스 채널을 전환하고자 하는 경우, Chrome 웹사이트에서 방법을 확인할 수 있습니다.
     * 새로운 문제를 발견한 경우, 버그 보고를 권장합니다. 커뮤니티 도움말 포럼도 일반적인 문제에 대한 도움과 정보를 제공합니다.

        Hacker News 의견

     * Google Chrome은 렌더러 내에서 WebP 이미지를 디코드하여, 렌더러 코드 실행에만 잠재적인 취약점을 제한합니다.
     * 렌더러의 복잡성으로 인해 매년 수많은 취약점이 발생하지만, 렌더러에서의 성공적인 코드 실행은 웹페이지가 일반적으로 가지는 접근 권한보다 크게 늘리지 않습니다.
     * WebP와 같은 새로운 형식의 채택은 JPEG와 같은 기존 형식에 비해 미미한 장점에도 불구하고 보안 취약점을 초래할 수 있습니다.
     * 이 문제는 다가오는 Firefox 117.0.1 및 Fenix 117.1.0 릴리스에서 해결될 예정입니다.
     * 이미지 크레이트에는 안전한 Rust 구현의 WebP 디코더가 존재하며, 이는 Chromium이 Rust 종속성을 허용하는 정책에 따라 잠재적으로 채택될 수 있습니다.
     * 버그를 초래한 원래의 커밋은 Huffman 디코더를 최적화했지만, 신뢰할 수 없는 소스로부터 Huffman 트리가 큰 nbits를 초래하여 할당이 오버플로우될 가능성을 고려하지 못했습니다.
     * 이 버그는 Apple에서 식별되었으며, 그들이 발표한 보안 업데이트와 유사한 것으로 보입니다.
     * 이미지 코덱은 이미지 처리의 복잡한 성격과 성능 최적화에 대한 압박으로 인해 취약점의 역사를 가지고 있습니다.
     * 이 문제가 Electron에 영향을 미치는지, 그리고 그렇다면 어떤 버전에 영향을 미치는지는 불명확합니다.
     * 이 취약점은 Pentagon에서 실시하는 것처럼 브라우저를 VM에서 실행하거나 보안 목적으로 평면화된 PDF를 사용하는 것의 중요성을 강조합니다.
"
"https://news.hada.io/topic?id=10761","Astro 3.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Astro 3.0 릴리즈

     * View Transitions API를 지원하는 최초의 메이저 웹 프레임워크
          + SPA에서만 가능하던 페이드, 슬라이드, 모핑 등 페이지 전환 효과를 어디서든 쉽게 이용 가능
          + 공통 UI를 페이지간에 유지 가능
     * 더 빠른 렌더링: Astro 컴포넌트들이 30~75% 빨라짐
     * 이미지 최적화 기능 안정화
          + CLS 방지를 위해 자동으로 Width & Height 입력
          + Vercel 의 내장 이미지 서비스 지원
          + 기본 최적화 라이브러리를 Sharp로 이관
          + 원격 이미지 최적화도 지원
     * 서버리스를 위한 SSR 개선
          + Vercel 과 공식 파트너십
          + Pre-Route Code Splitting, Edge Middleware, Host Customization
     * JSX HMR 향상: React/Preact에 Fast Refresh 지원
     * 최적화된 빌드 생성
          + HTML Minification
          + Component ID 를 data-astro-cid-hash 속성으로 교체
          + CSS Inlining 지원

   멋지네요!

   Transition들 보니까 10년 전에 Android material 나오고 floating button이니 action bar니 하면서 저런 page transition 보여주던 때가 기억이 나네요. 구글에서 엄청 밀었던거 같은데, 돌이켜보니 지금도 transition 잘 쓰는 앱들이 별로 없어 보이는 걸 보면

   한국에서 React, Vue 아니면 딴따라인 라이브러리 및 프레임워크들이 많아야 하는 참 속상합니다. 심지어 가상DOM 이 적극적으로 권장되는 시나리오가 아닌 잘라빠진 컨텐츠 중심 웹 사이트조차 React, Vue로 만들고 있으니 기가 찰 노릇이죠. 스벨트도 이세계 기술인 한국...

   Astro : JavaScript를 최소한으로 배포하기
   Astro 2.0
"
"https://news.hada.io/topic?id=10834","μDSV - 더 작고 빠른 CSV 파서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         μDSV - 더 작고 빠른 CSV 파서

     * 5KB 의 작은 용량으로 기존 모든 JavaScript/TypeScript 로 작성된 CSV 파서들보다 빠름
     * 메모리, 디스크 또는 네트워크로부터 점진적 로딩 가능
     * 쉼표, 이스케이프 따옴표, 줄 바꿈이 포함된 값등 RFC-4180을 준수
     * 이 프로젝트의 목표는 99.5%의 유스케이스에 대해서 처리하는 것(0.5% 때문에 복잡도와 성능을 훼손하지 않음)
     * 딜리미터 자동 인식, 스키마 추론 및 밸류 타이핑(string, number, boolean, date, json)
     * '', 'null', 'NaA' 핸들링
"
"https://news.hada.io/topic?id=10859","독일에서 기후 변화 시위를 할 가능성이 있는 27명이 '예방적 구금'에 처해져","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              독일에서 기후 변화 시위를 할 가능성이 있는 27명이 '예방적 구금'에 처해져

     * 독일 바바리아에서 27명이 기후 변화 시위, 특히 뮌헨의 자동차 산업 전시회 IAA에 관련된 가능성 때문에 '예방적 구금'에 처해진 상황에 대한 기사.
     * 구금 기간은 최대 60일까지 연장될 수 있으며, 이는 원래 테러리스트에 대한 최후의 수단으로 의도되었던 조치.
     * 뮌헨 당국이 기후 활동가들을 범죄 조직으로 규정하는 사건을 구축하려고 시도 중.
     * 이 조치는 민주주의적 시위권에 대한 과도한 반응으로 보이기 때문에 연방 법원에서 위헌으로 선언될 것을 바라는 이들로 인해 논란이 일고 있음.
     * 기사는 또한 뮌헨의 도시 조례에서 특정 사람들에게 슈퍼글루를 가지고 다니는 것을 €1000의 벌금이 부과되는 범죄로 규정하는 것에 대해 언급.
     * 이 논의는 인도와 영국에서의 유사한 법률, 그리고 네덜란드에서 기후 활동가들의 체포에 대한 언급을 포함하여 다른 국가로 확장.
     * 기사는 분산형 소셜 네트워크 Mastodon의 서버인 mastodon.energy에 게시되어 있으며, 이는 에너지 전환 정책, 인프라, 기술, 저널리즘, 과학에 종사하는 전문가와 학자들을 위한 것.
     * 이 게시물은 플랫폼에서 다양한 반응과 논의를 불러일으키며, 커뮤니티의 높은 참여 수준을 나타냄.

        Hacker News 의견

     * 독일의 주 법률이 2개월까지 '예방적 구금'을 허용하며, 이 법은 논란이 되어 왔고, 지금은 기후 변화 시위자들을 구금하는 데 사용되고 있다.
     * 이 법은 원래 테러 방지를 위해 정당화되었지만, 세계 최대의 자동차 박람회와 같은 주요 행사를 방해할 수 있는 기후 변화 시위자들을 감옥에 넣는 데 사용되는 것에 대해 일부 댓글 작성자들이 우려를 표현하고 있다.
     * 산업 현장에서 시위자들을 제거하는 경찰이 대기업의 이익을 보호하는 것이 아니라, 이러한 산업이 초래할 수 있는 환경적 피해를 해결하는 데 주력해야 한다는 의견이 있다.
     * 이 상황은 독일 연방 공화국 설립 이후 한 당이 지배해 온 바이에른 주에 특정한 상황이다. 다른 곳에서는 분노를 일으킬 수 있는 일부 행동들이 이곳에서는 발생할 수 있다.
     * 시위자들을 재판 전에 구금하는 것에 대한 정당화에 대한 논쟁이 있다. 일부 사람들은 사람이 같은 범죄를 다시 저지를 가능성이 있다면, 그들을 재판 대기 중 보석 없이 구금하는 것이 타당하다고 믿는다.
     * 단기간 구금이 개인의 고용 및 재정 상황에 미치는 영향에 대해 의문이 제기되며, 이러한 구금이 직업 상실과 재정적 어려움을 초래할 수 있는 미국의 상황과 비교되고 있다.
     * 일부 댓글 작성자들은 시위자들의 방법에 의문을 제기하며, 부동산 파괴나 파괴는 그들의 목표를 지지받는 효과적인 방법이 아니라고 제안한다.
     * 소수의 댓글 작성자들은 시위자들에 대해 불만을 표현하며, 그들이 기후 변화 원인에 더 많은 해를 끼치고, 기후 친화적 활동에 대한 반감을 조성하고 있다고 제안한다.
"
"https://news.hada.io/topic?id=10864","애플, Apple Music Classical 앱의 확장을 위해 50년된 클래식 음반사 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          애플, Apple Music Classical 앱의 확장을 위해 50년된 클래식 음반사 인수

     * 초기(중세/르네상스) 및 현대 클래식 음악으로 유명한 스웨덴의 BIS Record를 인수
          + 기존 녹음에서 아직 잘 표현되지 않은 작품에 중점을 둠
     * 올해 80세가 된 창업자 Von Bahr는 공지를 통해 다음과 같이 표현
          + ""우리의 사명을 발전시킬 파트너이자, 클래식 음악을 전 세계의 새로운 청중에게 제공할 수 있는 증가된 글로벌 플랫폼을 찾았음""
          + ""혁신과 음악에 대한 사랑이라는 유서 깊은 역사를 지닌 Apple은 클래식의 다음 시대를 여는 이상적인 곳이며, 클래식 음악과 기술이 조화롭게 작동하는 미래를 구축하려는 의지를 보여줬음""
          + ""최근 Apple은 클래식 공간 내에서 창의성을 더욱 지원하기 위해 수많은 조치를 취했으며, 그 중 가장 중요한 것은 올해 초 Apple Music Classical의 출시""
          + ""BIS 는 항상 탁월한 음질을 추구해 왔고, 애플의 Spatial Audio 및 소리에 대한 헌신에 관심을 가져왔음""
          + ""BIS는 Apple Music Classical 과 Platoon 의 일부가 될 것이며, 나를 포함한 BIS 전직원은 그대로 유지될 것""
     * Platoon 은 2018년에 애플이 인수한 런던의 스타트업으로, 음악가들이 콘텐츠를 제작 및 배포, 마케팅하는 것을 도와주는 플랫폼

   와... 뭐라 말하기 힘들 만큼 대단합니다......

   한국도 좀 지원 해주세요 ㅜㅜ

   전 그냥 포기하고 미국 아이튠스 계정을 기본으로 씁니다 ㅠ

   애플이 이런 건 정말 잘하는듯.
   이렇게 하나하나 채워나가다 보면 클래식 듣는 사람들은 그냥 애플 플랫폼을 쓸수 밖에 없게 되지 않을까 싶네요.

   얼마전에 올라온 삼성, AI기반의 개인화된 음식 & 레시피 서비스 '삼성 푸드' 공개 이 생각이 났는데요.
   이것도 영국의 스타트업이었던 Whisk를 인수해서 내재화 한거긴 한데, 뭔가 둘의 나아가는 길이 다른거 같기도 하고.. ㅎㅎ
"
"https://news.hada.io/topic?id=10769","Tailscale이 Mullvad와 파트너십을 맺음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Tailscale이 Mullvad와 파트너십을 맺음

     * 네트워킹 회사인 Tailscale가 VPN 제공업체인 Mullvad와의 파트너십을 발표했습니다.
     * 이 파트너십 이전에는 고객들이 Tailscale와 Mullvad 중 하나를 선택해야 했으며, 두 서비스가 동시에 존재할 수 없었습니다.
     * 이제 고객들은 Tailscale 앱을 통해 두 서비스를 동시에 사용할 수 있습니다. 그러나 이 기능은 Mullvad VPN 앱에서는 사용할 수 없습니다.
     * 이 파트너십은 Tailscale 고객이 Mullvad의 WireGuard VPN 서버를 ""출구 노드""로 사용할 수 있게 합니다.
     * 이는 Tailscale에 연결되어 있는 동안 사용자들이 Tailscale의 메시 네트워크를 통해 자신의 장치에 접근하면서도, 어느 위치에서든 Mullvad VPN WireGuard 서버를 통해 외부로 연결할 수 있다는 것을 의미합니다.
     * 예를 들어, 모바일 폰은 Tailscale을 통해 PC에 연결하여 개인 사진 앨범에 접근할 수 있으며, 동시에 스웨덴에 위치한 Mullvad VPN 서버를 통해 인터넷을 브라우징할 수 있습니다.
     * 마찬가지로, 개인 컴퓨터는 Tailscale을 통해 다른 PC에 연결하여 자체 호스팅 문서를 작업할 수 있고, 암호화되지 않은 WiFi에서는 모든 다른 트래픽을 Mullvad VPN을 통해 전송할 수 있습니다.
     * Tailscale의 VPN 서비스와 Mullvad 출구 노드의 사용에 대한 자세한 정보는 Tailscale의 웹사이트에서 확인할 수 있습니다.

        Hacker News 의견

     * Tailscale과 Mullvad 사이의 파트너십에 대한 기사
     * 일부 독자들은 같은 주제에 대한 다른 토론 스레드와 병합하는 것을 제안, 해당 링크에서 확인 가능 이 링크.
"
"https://news.hada.io/topic?id=10889","뱅크샐러드 Go 코딩 컨벤션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            뱅크샐러드 Go 코딩 컨벤션

     * 뱅크샐러드팀이 4년간 Go를 활발히 사용하며 다양한 실수와 시행착오를 겪으며 정해나간 코딩 컨벤션

  읽어두면 좋은 자료

   한 번 읽어보길 권장하는 여러 컨벤션 가이드와 best practices 자료
     * The Zen of Go
          + 각 구절의 상세한 설명: The Zen of Go | Dave Cheney
          + 한국어 번역 Go의 철학 | marsettler.com
     * Go Proverbs
     * Effective Go | go.dev
     * CodeReviewComments · golang/go Wiki | GitHub
     * Practical Go | Dave Cheney
     * Thanos 팀 스타일 가이드(한국어, 원문)
     * Uber 팀 스타일 가이드(한국어, 원문)
     * Ashley McNamara + Brian Ketelsen. Go best practices | YouTube
     * Idiomatic Go | Sourcegraph
     * Go Style Best Practices | Google

  코딩 프랙티스

     * Don't panic
     * Panic을 낼 수 있는 함수는 must prefix 붙이기 / Panic vs Fatal
     * Panic safe goroutine / Concurrent safe한 결과 모으기
     * Error stacking / Error handling / Error logging
     * No named return
     * HTTP client 설정 / HTTP connection 재사용
     * Slice 선언 시 len, cap 설정 / Nil slice vs Empty slice
     * Bool map과 struct{} map / Map 조회 시 ok 체크 / Avoid map loop
     * 문자열 loop 시 range 사용 / 문자열 길이
     * context.TODO() 보다 context.Background() 사용
     * Early return 애용
     * time.Duration 사용 / 타임존
     * 테이블 기반 테스트 / No monkey patch / Deterministic test
     * Avoid reflect
     * Functional options

  코딩 스타일

   서술된 내용은 뱅크샐러드 팀의 스타일로 각 항목은 그대로 따르기보단 각 조직에 맞게 고려하길 권장
     * 함수의 인자 순서
     * 테스트 함수 네이밍
     * 파일 내 선언 순서
     * import 순서
     * 단수는 get 복수는 list
     * 모호한 단어 피하기
     * const 네이밍
     * 패키지 네이밍
     * 프로젝트 구조

   좋은 글 잘 읽었습니다. 국내에서 Go를 가장 잘 활용하는 두 기업이 뱅샐이랑 AB180이라고 생각합니다.
"
"https://news.hada.io/topic?id=10763","Show HN: URL에서 웹사이트 호스팅하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Show HN: URL에서 웹사이트 호스팅하기

     * 'smolsite.zip' 프로젝트라는 이름의 웹사이트를 URL에서 직접 호스팅하는 새로운 개념 소개 기사.
     * 이 혁신적인 접근법은 고성능이며 확장 가능한 Lwan 웹 서버에 의해 구동됩니다.
     * 이 프로젝트의 아이디어는 웹사이트 호스팅 과정을 단순화하여 보다 접근성이 좋고 효율적으로 만드는 것입니다.
     * 이 새로운 호스팅 방법은 웹사이트의 호스팅 및 관리 방식을 혁신적으로 바꿀 수 있습니다.
     * 이 프로젝트의 독특하고 혁신적인 성격 때문에 기술에 능통한 개인들과 소프트웨어 엔지니어들이 관심을 보이고 있습니다.
     * 'smolsite.zip' 프로젝트는 웹 기술의 지속적인 발전과 진보를 증명하는 사례입니다.

        Hacker News 의견

     * URL 내에서 웹사이트를 직접 호스팅하는 방법에 대한 기사
     * URL이 웹사이트의 HTML을 압축한 버전을 포함하며, 이는 브라우저에 의해 풀리고 표시됨
     * 이 방법은 데이터 URI를 사용하는 것과 비교되며, 더 많은 콘텐츠를 담을 수 있고 특정 JavaScript API와 호환될 수 있다는 장점이 있음
     * 기사의 저자는 이 방법을 개발했을 뿐만 아니라, 자신의 서버에서 데모를 호스팅함
     * 이 방법은 'nopaste'라는 텍스트를 URL에 lzma로 압축하고 base64로 인코딩하여 저장하는 pastebin에 비유됨
     * 일부 댓글에서는 악의적인 콘텐츠를 호스팅하는 등의 오용 가능성을 지적함
     * 이 방법은 웹사이트를 URL 변경 없이 업데이트할 수 없고, 사이트를 종료할 수 있어 모든 URL이 무용지물이 될 수 있으므로, 분산 시스템에 비교됨
     * URL의 앵커 부분에 압축된 웹사이트를 배치하는 제안이 있으며, 이는 앵커 부분이 서버로 전송되지 않아 서버가 해로운 콘텐츠를 스캔하는 것을 방지할 수 있음
     * 댓글에서는 과거에 게시된 유사한 작업을 참조함
"
"https://news.hada.io/topic?id=10808","공기 오염으로 인해 꽃을 찾는데 어려움을 겪는 벌들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      공기 오염으로 인해 꽃을 찾는데 어려움을 겪는 벌들

     * Dr. Christian Pfrang이 주도한 연구가 공기 오염이 벌들이 꽃을 찾는 데 어려움을 겪게 만드는 것을 밝혀냄.
     * 연구는 환경 요인, 특히 공기 오염이 벌의 행동과 생존에 미치는 영향을 강조함.
     * 이 연구는 오염된 공기가 꽃에서 방출하는 향기 분자를 방해하여 벌이 꽃을 찾는 것을 어렵게 만든다고 제안함.
     * 이 문제는 벌이 수분화에서 중요한 역할을 하고, 이는 식물의 성장과 식품 생산에 필수적이기 때문에 특히 우려됨.
     * 이 연구의 결과는 공기 오염을 줄이고 생태계를 보호하기 위한 더욱 지속 가능한 관행이 필요함을 강조함.

        Hacker News 의견

     * 기사는 대기오염으로 인해 꽃을 찾는 데 어려움을 겪는 벌들에 대해 논의한다.
     * 한 사용자는 근처 고속도로의 대기오염 증가를 원인으로 꽃에 방문하는 벌의 눈에 띄는 감소에 대한 일화를 공유한다.
     * 또 다른 사용자는 ""Honeybee Democracy""라는 책을 인용하여 벌들의 지능을 강조하며, 이 책은 벌들이 그들의 서식지에 대한 복잡한 결정을 내리는 방법에 대해 자세히 설명한다.
     * 한 사용자는 건조한 날씨나 산불에서 나오는 연기와 같은 환경 요인으로 인해 벌의 목격이 감소했을 수 있다고 제안한다.
     * ""Cosmos: Possible Worlds""의 7화를 시청하여 벌의 지능과 그들의 기하학적 인식에 대한 통찰력을 얻는 것이 좋다는 추천이 제시된다.
     * 한 사용자는 원래의 자원 손실과 연료 보충을 위한 분산된 꽃의 필요성도 벌들에게 중요한 도전이라고 지적한다.
     * 여러 사용자들은 올해 그들의 정원에서 벌의 수가 줄어들었다는 관찰을 공유하며, 한 사람은 더 강한 향기의 꽃이 벌을 더 많이 끌어들인다고 제안한다.
     * 한 사용자는 벌이 이러한 도전에 더 잘 대처하기 위해 진화할 것인지 의문을 제기한다.
     * 일부 사용자들은 말벌의 증가를 언급하며, 곤충 인구의 가능한 변화를 제안한다.
"
"https://news.hada.io/topic?id=10787","아마도 Rust는 대규모 동시성 사용자 공간 소프트웨어에 적합한 도구가 아닐 수 있음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            아마도 Rust는 대규모 동시성 사용자 공간 소프트웨어에 적합한 도구가 아닐 수 있음

     * 본 기사는 대규모 동시성을 가진 사용자 공간 소프트웨어에 Rust를 사용하는 데 있어서의 도전을 논의한다.
     * Rust의 비동기 모델은 현대 컴퓨팅의 두 가지 핵심 개념인 동시성과 병렬성을 처리하도록 설계되었다.
          + 병렬성은 여러 CPU에서 코드를 동시에 실행하는 것을 포함한다.
          + 동시성은 문제를 분리하고, 독립적인 부분으로 나누어 순서에 상관없이 또는 부분적인 순서로 실행하는 것을 포함한다.
     * 본 기사는 비싼 프로세스 간 통신 때문에 동시성을 위해 여러 프로세스를 사용하는 것의 한계를 강조한다.
     * 같은 메모리를 공유하는 프로세스인 스레드가 대안으로 제시되지만, 경쟁 조건과 교착 상태와 같은 복잡한 문제를 초래할 수 있다.
     * Tony Hoare의 1978년 논문 ""Communicating Sequential Processes""는 스레드가 서로에게 메시지를 보내는 데 대기열 또는 채널을 사용하는 것을 제안하였으며, 프로세스와 같은 격리와 쉬운 디버깅과 같은 여러 가지 장점을 제공한다.
     * Rust의 표준 라이브러리에는 std::sync::mpsc::sync_channel 아래에 채널이 포함되어 있다.
     * 그러나 수만 명의 사용자에 연결된 웹 서버와 같은 높은 수준의 동시성을 요구하는 문제에 대해서는 스레드가 충분하지 않을 수 있다.
     * Rust는 이러한 상황에 대해 함수가 비동기로 표시되면 미래 또는 약속을 반환하고 결과를 생성하기 위해 대기할 수 있는 ""async/await"" 모델을 사용한다.
     * 그 장점에도 불구하고, 비동기 Rust는 컴파일러에게 모든 것이 괜찮을 것이라는 것을 확신시키는 필요성과 같은 도전이 있다. 이는 원시 스레드로는 어려울 수 있다.
     * ""원자 참조 카운트"" 또는 Arc의 사용이 해결책으로 제안되지만, 가비지 수집기의 문제와 유사한 문제를 초래할 수 있어 만병통치약이 아니다.
     * 본 기사는 Rust가 다른 영역에서의 강점에도 불구하고, 대규모 동시성을 가진 사용자 공간 소프트웨어에 대한 최적의 도구가 아닐 수 있다는 것을 제안하며 마무리한다.

        Hacker News 의견

     * 저자는 실시간으로 대량의 데이터를 처리해야 하는 고성능 메타버스 클라이언트를 Rust로 개발 중입니다.
     * 저자의 프로젝트는 그래픽 렌더링, 네트워크 이벤트 처리, 자산 로딩 등 다양한 작업을 위해 여러 스레드를 사용합니다.
     * Rust는 이 프로젝트에 유익하였으며, 저자는 보통 다른 사람의 ""안전하지 않은"" 코드 때문에 일년에 한 번 메모리 관련 충돌을 경험하였습니다.
     * 저자는 Rust가 레이스 컨디션은 없지만 데드락은 없지 않다고 비판하며, 정적 데드락 분석기의 필요성을 제안합니다.
     * 저자는 Rust에서 async의 널리 사용을 비판하며, 이것이 계산에 묶인 작업에 적합하지 않고 여러 우선 순위에서 실행되는 스레드와 호환되지 않다고 주장합니다.
     * 저자는 Rust의 단일 소유권이 후방 참조와 함께 일반적인 필요성이지만 구현하기가 너무 어렵다고 제안합니다.
     * 저자는 Rust 게임 생태계가 심각한 게임 개발에 준비되지 않았다고 믿으며, Rust에서 비 장난감 그래픽의 부족을 인용합니다.
     * 다른 댓글들은 async Rust가 도전적이며 종종 불필요하다고 동의하며, Go의 모든 것을 sync로 만들고 단일 async 채널로 만드는 접근 방식이 더 나을 수 있다고 제안합니다.
     * 일부 댓글러들은 Rust 생태계에서 async의 널리 사용을 비판하며, 이것이 프로그램을 전체적으로 async로 만들거나 많은 것들에 대해 tokio crate에 의존하도록 강요한다고 주장합니다.
     * 일부 댓글러들은 Rust의 async 기능이 아직도 개발 중이며, 현재 상태를 비판하는 것은 이른 것이라고 제안합니다.
     * 한 댓글러는 Rust의 Arc가 알 수 없는 것이 아니라 어디에서 어떻게 가지고 있는지에 따라 결정된다고 주장하며, 저자가 이전의 정신 모델을 Rust에 강요하려고 하고 있다고 제안합니다.
     * 일부 댓글러들은 일반적으로 async/await의 사용에 반대하며, 이것이 언어와 생태계를 반으로 나누고 장기적인 문제를 일으킨다고 주장합니다.
     * 한 댓글러는 병행성에 대한 올바른 원시적인 것은 Hoare의 Communicating Sequential Processes가 Java (JDK17 이후 - Java Virtual Threads), Go, Kotlin에서 구현된 것처럼 green threads에 매핑된 것이라고 제안합니다.
     * 한 댓글러는 async-scoped와 같은 안전하지 않은 crate를 사용하여 C++에서 작성되었을 벌레 대부분을 잡는 것이 합리적인 타협이라고 제안합니다.
"
"https://news.hada.io/topic?id=10865","Stable Audio - 빠른 타이밍 조절형 Latent Audio Diffusion","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Stable Audio - 빠른 타이밍 조절형 Latent Audio Diffusion

     * 잠재 확산 모델(Latent Diffusion Model)
          + 사전 학습된 자동 인코더의 잠재 인코딩 공간에서 작동하는 확산 모델
          + 확산 모델의 학습 및 추론 속도를 크게 향상 시킴
     * 확산 모델을 사용하여 오디오를 생성할 때 발생하는 주요 문제 중 하나는 확산 모델이 일반적으로 고정된 크기의 출력을 생성하도록 훈련된다는 점
          + 30초 오디오 클립에 대해 학습하면, 30초 단위로만 오디오를 생성 가능
          + 이는 전체 곡을 생성할 때와 같이 길이가 매우 다양한 오디오를 학습시키고 생성하려고 할 때 문제가 됨
     * 오디오 확산 모델은 긴 오디오 파일에서 무작위로 잘라낸 오디오 청크를 확산 모델의 훈련 길이에 맞게 자르거나 덧대어 훈련하는 경향이 있음
     * 음악의 경우, 이로 인해 모델이 음악 구절의 중간에서 시작하거나 끝나는 임의의 노래 섹션을 생성하는 경향을 만듦
     * Stable Audio는 오디오 파일 길이와 시작 시간뿐만 아니라 텍스트 메타데이터에 따라 조건이 설정되는 오디오용 잠재 확산 모델
          + 이 타이밍 조절 기능을 통해서 훈련 윈도우 크기까지의 지정된 길이의 오디오를 생성 가능
     * 최신 디퓨전 샘플링 기법을 사용하는 Stable Audio 모델은 44.1kHz 샘플 레이트에서 95초 분량의 스테레오 오디오를 NVIDIA A100 GPU에서 1초 이내에 생성 가능
     * Stability AI의 Generative Audio 연구소인 Harmonai에서 개발
     * Moûsai에서 사용된 907M(9억 700만개) 파라미터 U-Net 모델을 기반
     * Stable Audio 모델은 AudioSparx라는 주요 음악 공급자가 제공한 음악, 사운드 이펙트, 단일 악기 스템이 포함된 800,000개 이상의 오디오 파일로 구성된 데이터셋으로 훈련
     * 향후 작업으로 모델 아키텍처, 데이터셋, 훈련 절차를 개선하여 출력 품질, 제어 가능성, 추론 속도, 출력 길이를 향상할 예정
     * Harmonai는 Stable Audio를 기반으로 한 오픈 소스 모델과 오디오 생성 모델 훈련을 위한 훈련 코드를 공개할 계획

        Hacker News 의견

     * 본 기사는 빠른 타이밍 조건의 잠재 오디오 확산 기술인 'Stable Audio'에 대해 논의한다.
     * 일부 사용자들은 생성된 솔로 피아노 음악이 깔끔하고 흥미롭다고 평가하며, 이를 보다 유연하게 활용하기 위한 악보로 쉽게 변환될 수 있을 것이라는 제안을 했다.
     * 오디오와 비주얼 분야에서 AI가 이미지의 레이어나 브러시 스트로크, 음악의 구성 트랙과 같은 보다 구조적이거나 상징적인 출력을 생성하는 것에 대한 요구가 있다.
     * 특히 음악적 배경을 가진 일부 사용자들은 생성된 음악 작품에 감동받지 못했으며, 이들은 반복적이고 상상력이 부족하다고 평가했다.
     * 이 기술은 게임이나 고품질 음악이 우선적이지 않은 다른 애플리케이션에서 배경 음악을 생성하는 데 사용될 수 있다는 잠재력이 있다.
     * 한 사용자는 이 기술이 Spotify에서 개인의 취향에 맞는 음악을 생성하는 데 사용될 수 있을 것이라고 제안했다.
     * 모델이 공간 오디오 개념을 지원하거나 ""이해""하는지에 대한 관심이 있다. 예를 들어, 알람 소리가 원형으로 움직이는 소리 등이다.
     * 일부 사용자들은 멜로디, 코드 진행, 또는 공연 데이터와 같은 입력을 받아들일 수 있는 기술에 대한 요구를 표현하며, 이는 새로운 세대의 오디오 도구에 대한 잠재력을 제안한다.
     * 일부 사용자들은 오디오 예제에서 ""불쾌한 계곡"" 효과를 주목했으며, 이는 소리가 혼합되어 깔끔한 음악적 목소리가 부족하다는 것을 의미한다.
     * 이러한 비판에도 불구하고, 일부 사용자들은 이러한 기술의 존재에 대해 감사의 의미를 표현하며, 이를 Google과 Meta와 같은 회사들의 이전 조롱과 대비시켰다.
"
"https://news.hada.io/topic?id=10805","FTC 판사, Intuit이 법을 위반했으며 TurboTax를 "무료"로 광고하지 말아야 한다고 판결","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        FTC 판사, Intuit이 법을 위반했으며 TurboTax를 ""무료""로 광고하지 말아야 한다고 판결

     * 연방무역위원회(FTC)의 최고 행정법관이 Intuit이 TurboTax를 ""무료""로 홍보하면서 무료 제안의 모든 조건을 명확하게 표시하지 않아 미국 법을 위반했다고 판결했습니다.
     * 초기 결정은 전체 위원회에 의해 자동으로 검토되며, 항소가 받아들여지면 이 명령은 20년 동안 유효합니다.
     * Intuit는 이 결정에 대해 항소할 계획이며, FTC의 결정에 따른 대부분의 광고 관행을 이미 준수하고 있으며, 사업에 큰 영향이 없을 것으로 예상합니다.
     * 판사의 판결은 Intuit이 TurboTax를 사용하여 고객들이 온라인으로 세금 신고를 무료로 할 수 있다고 거짓 광고했는데, 실제로는 세금 납부자의 약 2/3에게는 그렇지 않았다고 명시하고 있습니다.
     * 이 명령은 Intuit이 상품이나 서비스를 '무료'로 표현하지 않아야 하며, 모든 소비자에게 실제로 무료이거나, 모든 약관과 조건이 제안 시작 시 명확하게 표시되어야 합니다.
     * 이 명령은 또한 온라인 광고, 제품 라벨, 대면 커뮤니케이션 등 다양한 형식에서 공개사항이 어떻게 전달되어야 하는지에 대한 구체적인 지침을 제공합니다.
     * 미국 50개 주와 컬럼비아 특별구를 포함한 별도의 사건에서 Intuit은 TurboTax를 통해 제공된 IRS 무료 파일 프로그램을 사용하여 무료로 신고할 자격이 있는데도 불구하고 신고를 위해 지불해야 한다고 알려진 거의 440만 명의 소비자에게 1억 4100만 달러를 지불하기로 합의했습니다.
     * 이 합의 결과로 Intuit은 ""무료, 무료, 무료"" 광고 캠페인을 중단해야 했습니다.
     * Intuit은 FTC의 과정과 결정을 비판하며, 이것이 사실을 무시하고 미국 법원의 독립성을 약화시킨다고 주장했습니다.

        Hacker News 의견

     * FTC 판사는 TurboTax를 운영하는 Intuit사가 ""무료""라고 광고한 세금 신고 소프트웨어로 법을 위반했다고 판결했습니다.
     * 일부 댓글러들은 세금 신고 소프트웨어 산업이 존재하지 않아야 한다고 주장하며, IRS가 자체 무료 온라인 신고 시스템을 제공해야 한다고 제안합니다.
     * 세금 신고 및 반환 과정과 같은 공공 기관의 주요 책임을 외주하는 것에 대한 비판이 있습니다.
     * 에스토니아 사용자 중 한명이 쉽고 효율적인 국가의 세금 반환 시스템에 대한 긍정적인 경험을 공유합니다.
     * 결정은 사법부가 아닌 행정부의 행정 판사에 의해 내려졌습니다. 행정 판사를 어느 정도까지 사용할 수 있는지에 대한 대법원 사건이 예정되어 있습니다.
     * 일부 사용자들은 이와 같은 판결이 ""제한 없음""이라고 광고하는 대역폭 제한 계획과 같은 다른 산업에도 적용되길 원합니다.
     * 법에 의해 요구되는 대로 TurboTax가 가장 낮게 광고된 가격을 소급 적용하도록 강제해야 한다는 요구가 있습니다.
     * IRS API에 대한 공개 접근이 없는 것에 대한 불만이 표현되며, 일부 사용자들은 이것이 불법적으로 느껴진다고 제안합니다.
     * 이 판결은 미국 법학자이자 FTC 의장인 Lina Khan에게 승리로 여겨집니다.
     * 일부 사용자들은 이 판결에 불만을 표현하며, 이것을 Intuit에 대한 단순한 ""손바닥으로 때리기""로 보고 있습니다.
"
"https://news.hada.io/topic?id=10795","getlocalcert - 사설 네트웍을 위한 쓰기 편한 HTTPS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 getlocalcert - 사설 네트웍을 위한 쓰기 편한 HTTPS

     * 내부 어플리케이션 호스팅 하는데 적합한, 퍼블릭 DNS에 루트를 둔 무료 서브도메인 제공
          + ""Free local-only domain names""
          + example.localhostcert.net 으로 무료 도메인 이름 생성
     * DNS 서비스는 getlocalcert.net 에서 제공되며 Let's Encrypt 와 호환
          + LEGO 유틸을 이용해서 내부 서버에서 ACME DNS-Challenge
"
"https://news.hada.io/topic?id=10829","구글 크롬, 새로운 광고 제공 및 사용자 추적 방식 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    구글 크롬, 새로운 광고 제공 및 사용자 추적 방식 도입

     * Google Chrome, 'Privacy Sandbox'라는 새로운 기능 도입, 광고주를 위한 사용자 데이터 추적
     * 이 새로운 기능은 광고 ""주제""에 대한 정보를 위해 직접 브라우징 기록에 접근하는 것으로, 세 번째 파티 쿠키 사용에서 중요한 전환점을 표시
     * Privacy Sandbox는 2019년부터 개발되어 왔으며, 잠재적인 개인정보 보호 문제로 인해 논란이 일었음
     * Chrome은 전 세계에서 가장 널리 사용되는 브라우저로, 2023년 5월 현재 63%의 시장 점유율을 가지고 있으므로 Privacy Sandbox를 이해하는 것이 중요
     * 쿠키 개념은 1994년 Lou Montulli가 Netscape에서 소개, 웹 페이지가 사용자 선호도, 비밀번호, 쇼핑 카트를 기억할 수 있게 함
     * 첫 번째 파티 쿠키는 사용자와 웹사이트 간의 개인 정보 교환, 세 번째 파티 쿠키는 광고주가 사용자를 추적하는 데 사용
     * 유럽 연합의 일반 데이터 보호 규정(GDPR)과 2018년 캘리포니아 소비자 개인정보 보호법(CCPA)은 쿠키를 통한 온라인 추적 및 감시를 규제
     * 주요 온라인 광고 회사인 Google은 Privacy Sandbox 도입과 함께 2024년까지 Chrome에서 세 번째 파티 쿠키를 끄기 시작할 계획
     * Privacy Sandbox는 광고를 제공하기 위해 브라우징 행동의 고수준 요약인 광고 주제를 사용, 재마케팅을 위한 Protected Audience와 광고 클릭 데이터 수집을 위한 Attribution Reporting 기능도 포함
     * Google은 Privacy Sandbox가 사용자 개인정보 보호를 개선할 것이라 주장하지만, 비평가들은 이를 통해 Google이 웹 전체에서 사용자를 추적할 수 있다고 주장
     * 광고 목적으로 온라인 활동을 추적받고 싶지 않은 사용자들은 DuckDuckGo와 Brave와 같은 비추적 브라우저나 Safari와 Firefox와 같은 기본적으로 세 번째 파티 쿠키를 차단하는 브라우저를 사용할 수 있음
     * 사용자는 설정 > 개인정보 및 보안 > 광고 개인정보에서 Chrome Privacy Sandbox 설정을 조정할 수 있음
     * 소프트웨어에 대한 비용을 지불하지 않는다면, 당신의 데이터가 제품일 가능성이 높다는 것을 기억하는 것이 중요

        Hacker News 의견

     * Google Chrome, 사용자 추적 및 광고 제공을 위한 새로운 방법 도입
     * 이 새로운 방법은 HackerNews에서 이전에 논의된 주제와 유사하며, Chrome 브라우저 설정을 조정함으로써 비활성화할 수 있는 해결책 제시
     * 일부 사용자들, 이 새로운 방법이 서드파티 쿠키보다 나쁜지 의문, 사용자의 기기에 추적 데이터를 유지함으로써 개인정보 보호를 늘릴 수 있다는 제안
     * 다른 이들은 이 새로운 기술이 쿠키보다 더 침투적인 추적 방법으로 발전할 수 있음을 우려, 사용자의 브라우징 주제를 기반으로 개별 사용자를 식별할 가능성
     * 이미 구매한 제품에 대한 광고를 보여주는 등의 리마케팅 전략의 효과성에 대한 논쟁
     * 사용자 중 한명이 웹사이트의 수익화 필요성을 지적, 제품 판매, 광고, 기부 요청 등을 통해. 그들은 인구통계학적 추적이 광고 공간 판매에 필수적이라고 주장
     * 일부 사용자들은 개인정보 보호 문제와 Chrome에서 사용할 수 없는 기능 때문에 Brave와 Firefox와 같은 대체 브라우저로 전환
     * 사용자 중 한명이 Google의 데이터 수집을 방어, Google의 비즈니스 모델이 사용자의 데이터를 단독으로 보유하는 것에 의존한다고 주장. 그들은 또한 행동 기반 광고 판매가 반드시 더 많은 클릭이나 판매를 초래하지 않는다고 주장
     * 몇몇 사용자들은 Chrome 대신 대체품을 사용하는 것을 권장, 개인정보 보호 문제와 현대 컴퓨터에서 브라우저 간에 뚜렷한 속도 차이를 느끼지 못한다는 이유를 들어
"
"https://news.hada.io/topic?id=10853","전기 레이싱 카로 새로운 세계 기록 세우기: 0.956초 만에 0에서 100까지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              전기 레이싱 카로 새로운 세계 기록 세우기: 0.956초 만에 0에서 100까지

     * ETH 취리히 및 루체른 응용과학예술대학의 학생 팀이 'mythen'이라는 이름의 수제 전기 경주차로 새로운 가속 세계 기록을 세웠습니다.
     * 이 차량은 단지 0.956초 만에 0에서 100km/h로 가속하여 12.3미터를 주행했으며, 이는 슈투트가르트 대학 팀이 세운 이전 기록인 1.461초를 깼습니다.
     * 학생들은 차량의 모든 구성 요소를 직접 개발하였으며, 이에는 인쇄 회로 기판(PCBs), 차체, 배터리가 포함되어 있으며, 이들을 기능에 최적화하였습니다.
     * 이 차량은 무게가 약 140킬로그램이며, 경량의 탄소와 알루미늄 허니콤을 사용하여 제작되었고, 학생들이 개발한 네 개의 휠 허브 모터로 구동되며, 이는 약 326마력 또는 240킬로와트의 출력을 가지고 있습니다.
     * 시작부터 강력한 추력을 보장하기 위해, 팀은 차량을 땅에 흡착시키는 진공청소기와 같은 장치를 개발하였습니다.
     * 학생들이 속한 취리히 학술 자동차 클럽(AMZ)은 이전에 2014년과 2016년에 전기차 가속 세계 기록을 두 번 세운 적이 있습니다.
     * 2006년 ETH 취리히 학생들에 의해 설립된 AMZ는 매년 새로운 경주차를 개발하며, 이를 다양한 국제 디자인 경쟁에 출품합니다. 2010년부터 AMZ는 순전기 경주차만을 제작하고 있습니다.

        Hacker News 의견

     * 전기 레이싱 카가 0에서 100까지 0.956초만에 가속하여 이전 기록인 1.461초를 깨고 새로운 세계 기록을 세웠습니다.
     * 이런 놀라운 성과는 ""흡입차"" 개념을 사용하여 차량을 땅에 빨아 당김으로써 달성한 높은 트랙션 덕분입니다.
     * 전기 자동차의 디자인은 전통적인 차량과 확연히 다르며, 엔진에서 바퀴까지의 축이나 토크 공급자를 대신하여 노란색 와이어가 사용되었습니다.
     * 이 전기 레이싱 카의 가속력은 Top Fuel 드래그스터의 약 절반으로, 1000피트에서 0에서 338.43마일/시까지 3.665초만에 도달할 수 있습니다.
     * 생산용 오토바이와 현대 하이퍼카에 비해 전기 레이싱 카의 가속력은 훨씬 빠르며, 가장 빠른 오토바이는 2.2초에 불과합니다.
     * 인공 다운포스를 가진 전기 자동차, 특히 이런 차량들은 기본 기능에 일시적으로 영향을 미칠 수 있는 가속력의 불가능해 보이는 한계에 도달하고 있습니다.
     * 이 전기 레이싱 카에서 사용된 허브 모터와 같은 모터는 배터리를 더 넣을 공간을 확보하고, 드라이브 샤프트의 복잡성을 제거하며, 소프트웨어에 완전한 트랙션 제어를 제공하고, 새로운 차량의 디자인 시간을 줄이며, 완전 전기 브레이킹으로의 첫 단계가 되는 등의 장점으로 인해 미래의 해결책으로 보고 있습니다.
     * 이 차량의 가속력은 거의 3G의 힘을 발생시키며, 이는 인상적으로 간주됩니다.
     * 이런 고속, 단기간 경주에서 운전자의 역할은 의문의 여지가 있습니다. 왜냐하면 경주 시간이 1초 미만이기 때문에 변속기를 바꾸거나 회전을 하는 것이 없습니다.
"
"https://news.hada.io/topic?id=10868","IEEE TPL(Top 프로그래밍 언어op 프로그래밍 언어) 2023

     * 스펙트럼(IEEE 회원의 관심을 가중치로 적용) 기준
          + Python 1 > Java 0.588 > C++ 0.538 > C 0.464 > JavaScript 0.463 > C# 0.397 > SQL 0.339 > Go 0.215 > TypeScript 0.179
     * 취업 기준
          + SQL 1 > Python 0.891 > Java 0.789 > JavaScript 0.551 > C++ 0.455 > C# 0.307 > HTML 0.297 > Shell 0.254 > SAS 0.173 > Typescript 0.166
     * 트렌딩 기준
          + Python 1 > Java 0.735 > JavaScript 0.554 > C++ 0.459 > SQL 0.442 > C# 0.418 > C 0.349 > HTML 0.202 > Go 0.192 > TypeScript 0.188

   선정 기준이 어떻게 되는 걸까요? Trending을 보니까 나머지 두 개도 신빙성이 확 떨어지는데요

   원본 페이지 우측 메뉴에 링크가 있었습니다 https://spectrum.ieee.org/top-programming-languages-methodology

   ""인기라는 것은 활발하게 사용되는 언어의 순위를 매기려는 것을 의미합니다. 인기의 세 가지 다른 측면을 살펴봅니다. 일반적인 IEEE 회원과 현직 소프트웨어 엔지니어 사이에서 활발히 사용되는 언어(""Spectrum"" 순위), 고용주가 요구하는 언어(""Jobs"" 순위), 시대정신(“트렌드” 순위).""

  일부 번역글 입니다.

   취업 기준 소스 중에 IEEE Job site가 있던데 그런게 있는 줄 처음 알았네요
"
"https://news.hada.io/topic?id=10872","Meduza 공동 창립자의 휴대폰, Pegasus에 감염","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Meduza 공동 창립자의 휴대폰, Pegasus에 감염

     * Meduza 공동 창립자 갈리나 팀첸코의 휴대폰이 페가수스 스파이웨어에 감염되어, 이 도구로 타겟된 러시아 언론인 첫 사례가 됨.
     * 페가수스는 이스라엘 사이버 무기 회사 NSO 그룹이 개발한 강력한 스파이웨어로, 주로 정부가 언론인, 야당 정치인, 활동가들을 감시하는 데 사용됨.
     * 팀첸코의 아이폰에서 스파이웨어가 발견된 것은 그녀가 베를린에서 망명 러시아 독립 언론의 다른 구성원들과 사적 회의를 가기 몇 시간 전이었음.
     * 페가수스는 공격자에게 감염된 장치에 대한 완전한 접근 권한을 부여하며, 마이크, 카메라, 메모리를 포함하여 모든 콘텐츠를 볼 수 있게 하고 심지어 메시지를 작성하는 것조차 읽을 수 있게 함.
     * NSO 그룹은 페가수스가 ""테러리스트, 범죄자, 그리고 아동 성폭행범""의 감시를 위해 설계되었으며, 오직 국가 고객에게만 판매된다고 주장함. 그러나 이는 전 세계 정부들이 비평가와 정치적 적들을 타겟으로 사용되었음.
     * 페가수스 사용 비용은 높으며, 국가들이 스파이웨어에 대한 접근을 위해 ""수천만 달러, 더 많은 금액""을 지불한다고 보고됨.
     * 팀첸코에 대한 공격은 카자흐스탄 또는 아제르바이잔, 두 페가수스 고객 후보국 중 하나에 의해 수행되었을 수 있으며, 이는 모스크바의 요청에 따른 것일 수 있음.
     * 유럽에서 페가수스의 사용은 점점 우려되는 문제로, 현재 NSO 그룹에 대한 여러 소송이 진행 중이며, 이 중 하나는 애플로부터의 것임.
     * 도전에도 불구하고 팀첸코는 계속 일하며, ""계속해서 뒤돌아보라""는 경고로 감염된 휴대폰을 유지하고 있음.
     * 이 사건은 감시 기술 판매 및 사용에 대한 더 엄격한 규칙과 규정이 필요함을 강조함.

        Hacker News 의견

     * 기사는 Meduza 공동 창립자의 휴대폰이 Pegasus라는 강력한 스파이웨어에 감염된 것에 대해 논의합니다.
     * 댓글 작성자들은 Pegasus를 개발한 NSO 회사가 여러 개의 미발견 취약점을 보유하고 있을 가능성에 대해 추측합니다.
     * Apple이 재정적으로 가능하다면, 이러한 취약점을 발견하는 사람들을 끌어들이기 위해 사례금을 늘려야 한다는 제안이 있습니다.
     * 스파이웨어의 설치 과정과 언론인이나 활동가와 같은 잠재적인 대상이 자신들을 보호하기 위해 어떤 조치를 취할 수 있는지에 대한 의문이 제기됩니다.
     * 보호를 위한 제안으로는 각 앱에 대해 다른 기기를 사용하거나, 웹 프론트 엔드를 사용하거나, 정기적으로 기기를 바꾸고, 항상 기기가 침해당했다고 가정하는 것이 포함됩니다.
     * NSO의 행동에 대한 비판이 있습니다.
     * 댓글 작성자들은 Apple이 감지된 악성 소프트웨어에 대해 개인들에게 알리는 프로토콜과 즉각적인 알림 시스템이 왜 없는지에 대해 궁금해합니다.
     * 일부 댓글은 'Meduza'와 'Pegasus'라는 이름의 신화적인 의미를 강조합니다.
     * 특히 Tesla에서 이러한 취약점이 악용될 경우 미래의 영향에 대한 추측이 있습니다.
     * Pegasus의 확산에 대한 질문이 제기되었으며, 이것이 스스로 확산할 수 있는지, 아니면 표적 공격이 필요한지, 그리고 이것을 스캔할 수 있는 방법이 있는지에 대한 질문이 있습니다.
     * 댓글 작성자들은 NSO의 제로데이의 출처에 대해 의문을 제기하며, 그들이 스스로 발견하는 것인지, 아니면 블랙마켓에서 구입하는 것인지에 대해 의문을 제기합니다.
     * 취약점을 발견한 사람들에게 더 많은 돈을 제공함으로써 NSO의 사업 모델을 수익성 없게 만드는 제안이 있습니다.
     * Fairphones에서의 Ubuntu touch 시스템의 취약성과 이를 사용하면 해킹의 가능성을 줄일 수 있는지에 대한 질문이 제기됩니다.
     * 휴대폰의 잠금 모드가 제로데이를 방지하는 데 얼마나 효과적인지에 대한 질문도 있습니다.
"
"https://news.hada.io/topic?id=10833","'Usability' 감소 현상sability' 감소 현상 (2020)

     * 사용자 인터페이스(UI) 디자인, 특히 데스크톱 애플리케이션에서 사용성 감소에 대한 기사
     * 저자는 1994년부터 2012년까지 대부분의 운영 체제가 차이보다는 유사성이 많아 사용자가 다른 시스템을 쉽게 탐색할 수 있었다고 주장
     * 그러나 최근 몇 년 동안, 저자는 사용성 또는 ""사용자 친화성""이 감소하고 있으며, 기본 표준 개념이 유행에서 벗어나고 있다고 믿음
     * 저자는 데스크톱 애플리케이션에 스마트폰 패러다임을 채택하는 추세를 비판하며, 이는 데스크톱 사용에 비효율적이고 불필요하다고 주장
     * 저자는 또한 플랫 디자인의 추세를 비판하며, 이는 UI 요소를 찾고 비대화 요소와 구별하는 것을 어렵게 만든다고 주장
     * 저자는 윈도우 10 애플리케이션의 인기 있는 예를 제시하여 그의 주장을 설명하며, 창 관리, 브라우저, 스크롤 바, 누락된 메뉴 바 등의 문제를 강조
     * 저자는 이러한 변화들이 개선이 아니라 데스크톱 UI 디자인의 기본 개념을 깨는 불필요한 변화라고 주장
     * 저자는 또한 기술의 진보, 화면 공간 절약의 필요성, UI 디자인의 어려움 등의 반론을 다룸
     * 저자는 UI 디자인에서 일관성과 산업 표준으로의 복귀를 촉구하며 결론을 내림

        Hacker News 의견

     * 소프트웨어 디자인의 사용성 감소에 대한 논의, 특히 파워/툴 사용자에서 소비자 디자인 패러다임으로의 전환에 초점을 맞춤
     * 많은 소프트웨어 디자이너들이 ""할 일"" 프로젝트에 ""콘텐츠 소비"" 규칙을 적용하는 것에 대해 비판, 인터페이스의 효율성 감소로 이어짐
     * 디자이너들이 기능성보다 미학을 우선시하고, 메뉴 뒤에 도구를 숨기며 화면에 표시되는 정보의 양을 줄이는 것을 비난
     * 소프트웨어 디자인의 지속적인 변화는 사용성 향상보다는 지루함이나 혁신적으로 보이는 필요성 때문이라는 의견 제시
     * 이 분야의 전문가들에 의한 디자인에 대한 토론과 분석 부족이 주요 문제로 지적
     * 사용성 감소는 소프트웨어에만 국한되지 않으며, Mac OS와 휴대용 음악 플레이어 디자인에서도 비슷한 문제가 발생
     * 파일 구조와 파일 개념을 숨기는 추세는 사용자에게 혼란과 복잡성을 초래하는 것으로 비판
     * 모바일 호환성을 향한 이동은 데스크톱 사용성에 해로운 것으로 보이며, 많은 환경이 여전히 모바일 존재를 부족하게 느낌
     * 숨겨진 스크롤바 사용과 창 제목에서 뚜렷한 드래그 가능 영역 부재는 나쁜 디자인 선택의 예로 언급
     * iOS에서 롱 프레스 도입은 사용자 인터페이스에 복잡성을 추가하는 것으로 비판
     * 전반적인 감정은 기능성과 효율성을 미학보다 우선시하는 더 간단하고 사용자 친화적인 디자인으로 돌아가야 한다는 촉구
"
"https://news.hada.io/topic?id=10819","자전거 GPS를 연결해 자갈 경주 중 피자를 주문하도록 설정한 나","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  자전거 GPS를 연결해 자갈 경주 중 피자를 주문하도록 설정한 나

     * 기사 작성자, Gravel Worlds Long Voyage 자전거 경주 참가 후 Casey's General Store에서 피자 주문으로 식사 최적화 결정
     * 전년도에는 빠른 선수들이 모든 피자를 먹어버려 도착했을 때 피자가 없는 문제 발생
     * 이 문제를 해결하기 위해, 자전거 GPS가 지오펜스를 벗어나면 피자를 주문하는 스크립트 작성 결정
     * 이 스크립트는 전년도에 만든 서버리스 GPS 트래커 위에 구축
     * 스크립트는 다음 정차장에 대한 ETA를 계산하고 트래커가 AWS Location 서비스 내 설정된 지오펜스를 벗어나면 피자를 주문하는 Lambda 함수를 트리거
     * Casey's가 온라인 주문을 위한 공개 API를 가지고 있지 않아, Playwright를 사용하여 웹사이트 스크린 스크래핑에 의존
     * 피자 주문의 성공 또는 실패에 따라 푸시 알림이 자신의 핸드폰으로 전송되도록 설정
     * 경주 중에 피자가 성공적으로 주문되었다는 잘못된 알림을 받았지만, 정차장에는 주문 기록이 없었음
     * 경주 후에는 브라우저 작동 중인 비디오를 캡처하고 분석을 위해 S3 버킷에 업로드하는 Lambda 함수를 개선
     * 실패는 Playwright 브라우저 내의 최종 form.submit()이 처리된 즉시 Lambda가 처리를 종료했기 때문일 수 있음을 추측
     * 실패에도 불구하고, 이 프로젝트에서 많은 것을 배웠으며 다가오는 경주에서 다시 시도할 계획
     * 이 프로젝트의 코드는 GitHub에서 확인 가능

        Hacker News 의견

     * 자전거의 GPS가 자갈 경주 중에 피자를 주문하도록 연결된 독특한 기술 프로젝트에 대한 기사
     * 프로젝트는 Sun Microsystems에서 사용한 'pizzatool'에 대한 21세기 버전으로 비교됨
     * 'Waypoint Pizza'라는 피자 식당이 언급되며, 특정 세일링 경기 중에 샌프란시스코 베이에서 배달함
     * 기사는 또한 Dean Karnazes라는 울트라 러너가 경주 중에 피자를 부리또처럼 말아서 달리는 것에 대해 언급함
     * 일부 독자들은 주문에 사용된 웹사이트가 react 웹사이트라면, 직접 사용할 수 있는 API를 의미할 수 있으며, 이는 과정을 더욱 견고하게 만들 수 있음을 제안함
     * 기사는 그 유머, 기술 문제 해결, 그리고 마지막에 저자의 자기 비판에 대해 칭찬받음
     * 일부 독자들은 핸즈프리 통화 사용이나 친구에게 전화를 하도록 하는 등의 기술 해결책 대안을 제안함
     * Deliveroo와 같은 다른 배달 서비스에 비슷한 기술 해결책을 적용할 가능성에 대한 논의가 있음
     * 기사는 경주 중에 기술 해결책이 작동하지 않았다는 것을 밝히며, 이는 200마일에서 발견됨
     * 기사는 또한 Casey's 피자, 미드웨스트의 사랑받는 피자에 대해 언급하며, 이는 일부 독자들에게 행복한 추억을 떠올리게 함
     * 기술 해결책의 실패에 대한 이론이 제안되며, 이는 최종 양식 제출 후 Lambda가 처리를 종료했을 수 있음을 제안함
"
"https://news.hada.io/topic?id=10874","Show GN: 영어 공부용 사이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Show GN: 영어 공부용 사이트

     * 글을 입력하고 한 문장씩 번역 후 평가
     * 전체 맥락에서 번역을 평가받을 수 있음
     * 피드백 주시면 감사하겠습니다.

   혹시 다른 접속방법이 있을까요?
   링크가 보이지않아서요..

   정말 재밌네요.
   감사합니다.

   우와... 기대했던 것 보다 좋네요. 잘 활용할 수 있을 것 같습니다.

   넘넘 신기하고 유용해요!!! 교정 퀄리티가 넘 좋네요!! 빛과 소금입니다. 감사해요ㅠㅠ

   속도가 좀 더 빠르고
   지금은 문장마다 번역문을 넣는데
   영문장처럼 번역문도 한번에 넣어서 결과를 쭈루룩 볼 수 있으면 더할나위 없이 좋겠습니다.

   삶은 계란 -> Life is an egg 가 맞고
   삶은 계란 -> Boiled egg 하면 잘못됐다고 하는데요
   AI가 벌써 유머감각도 탑재했나보네요 ㅎㅎ

   와 좋네요
   가끔 영문 메일을 작성할 때 번역기에 다시 돌려보긴 했는데
   번역기 성능이 좋으면 알아서 잘 번역해버려서 내가 뭘 틀렸는지 알기 어려웠는데
   그럴때 이거 쓰면 딱이네요..

   와 이거 진짜 좋네요. 번역 평가 버튼 누르고 나서 약간 시간이 걸리는데, 결과가 나오기 전까지 움직이는 로딩 인디케이터 같은게(단순하게라도) 있으면 좋을것 같아요

   slang도 이해하는 것 같아서 약간 놀랍네요... LLM의 힘은 역시 대단합니다

   LLM 기반이겠죠? 시 번역은 태생적 한계가 있을 수 밖에 없을 것 같고요ㅎㅎ
   아이디어가 정말 훌륭하신 것 같습니다. 기능도 목적에 충실하네요!

   감사합니다!

   흠.. 한글 시를 번역하려고 하면
   영어로 잘 안되는 거 같아요.
   한글과 영어의 구문을 분석하기 위해서 newline을 기준으로 하는 거 같은데..

   현재 한 줄씩 하다 보니..
   한글 시를 영어로 바꿀때는 맞지 않아 보입니다.

   예시)
   사랑한다는 말은
   가시덤불 속에 핀
   하아얀 찔래꽃의 한숨 같은 것

   사랑한다는 말은
   한 자락 바람에도 문득
   흔들리는 나뭇가지

   피드백 감사합니다! 해결해 보겠습니다.

   신기하고 공부하기에 되게 유용하네요

   감사합니다!

   '그' 는 he/she/they 다 되는데 he가 맞다고 하네요

   피드백 감사합니다!

   와 신기하네요.

   몇 개 문장 넣어봤는데, 진짜 정확하게 번역이 다르거나 부족한 부분을 짚어주고,
   어떻게 수정하면 더 나은 번역이 될지 알려줍니다.

   요즘 AI 교육 플랫폼이 슬슬 나오는 걸로 아는데, 이런 기능도 잘 다듬으면 제품화 가능할 것 같아요. (이미 있으려나?)

   감사합니다! 다른 기능도 추가해 보겠습니다.

   완전 아이디어도 좋고 몇 개 돌려봤는데 피드백도 훌륭하네요
   너무 좋습니다.

   감사합니다!
"
"https://news.hada.io/topic?id=10873","천재를 건드리지 마라천재를 건드리지 마라 (2010)

     * 아이작 뉴턴의 덜 알려진 경력 단계인 '민트의 감독'에 대한 기사, 그는 범죄자를 처벌하는데 결정적인 역할을 했다.
     * 55세의 뉴턴은 1696년 런던으로 이사해 '민트의 감독'이라는 직책을 맡았다. 이 직책은 원래 명예직이었다.
     * 기대와는 달리, 뉴턴은 '대화폐 교환'을 주도하며 국가를 경제적 파탄에서 구해내는 등 민트에서 가장 효과적인 감독이었다.
     * '대화폐 교환'은 지난 30년 동안 만들어진 동전보다 더 많은 동전을 녹여 다시 찍는 엄청난 과제였다.
     * 뉴턴은 범죄 수사관의 역할도 맡았으며, 화폐에 대한 범죄에 대해 왕의 법을 집행했다.
     * 그는 위장 수사, 정보원 배치, 체계적인 기소 등의 방법을 사용해 위조범을 성공적으로 처벌했다.
     * 기사는 악명 높은 위조범이자 사기꾼인 윌리엄 챌러너와의 뉴턴의 싸움을 강조한다. 뉴턴은 챌러너에 대한 증거를 모으는데 2년을 투자했고, 이는 그의 유죄 판결과 처형으로 이어졌다.
     * 부패하고 무능한 '민트의 주임'인 토마스 닐이 사망한 후, 뉴턴은 57번째 생일에 그 직책을 맡았다.
     * 세계 최초의 주식 시장 붕괴인 '남해 버블'에서 상당한 금액을 잃었음에도 불구하고, 뉴턴은 만족스러운 삶을 이끌었고 1705년에는 기사 작위를 받았다.
     * 이 기사는 토마스 레번슨의 책 ""뉴턴과 위조범""을 기반으로 하며, 이 책은 뉴턴의 '민트에서의 경력'에 대한 자세한 내용을 제공한다.

   관련 맥락을 알고 싶다면, 민태기 박사님의 최근 영상이 괜찮습니다.
   해당 부분만 보고 싶으시다면 3:20 ~ 5:30 사이를 보시면 됩니다.
     * 유체역학 탄생 배경에 담긴 과학자들의 혈투! 뉴턴과 데카르트의 유체배틀 3부(민태기 박사)

   여담입니다만 이 안될과학 민태기 박사님 시리즈가 참 재미나더군요.
   주제가 유체역학이라고 하지만, 실은 교양으로 듣는 서구 지성사에 더 가깝습니다.

   뉴턴과 데카르트 유체배틀
     * 1부 막장드라마(1/6): https://youtu.be/ykZU0RNLwlo
     * 2부 데카르트(2/6): https://youtu.be/yGim8RWkcUE
     * 3부 혈투(3/6): https://youtu.be/CZhJzKLQfTE

   프랑스 혁명의 과학사
     * 1부 베르사유(4/6): https://youtu.be/_sbwxdqXwV0
     * 2부 음악가(5/6): https://youtu.be/fJ9jhTT8R5o
     * 3화 나폴레옹(6/6): https://youtu.be/DF_1apjaq70

        Hacker News 의견

     * ""The Greatest Counterfeiter (2021)""라는 제목의 관련 스레드가 관심을 끌고 있다.
     * 뉴턴의 이야기는 아르키메데스와 그의 ""유레카"" 순간과 유사점을 보이며, 두 사건 모두 유명한 물리학자가 왕실 금의 무결성을 보호하도록 요청받은 것에 관한 것이다.
     * 뉴턴의 겸손함과 세상에 대한 호기심을 강조하는 인용구가 공유되었다.
     * 뉴턴은 천재임에도 불구하고 FOMO(놓칠까봐 두려움)에 노출되어 있었으며, 버블이 터질 때 큰 돈을 잃어 그의 인간적인 면을 보여준다.
     * 일부 독자들은 그의 권력과 경쟁자들에 대한 가혹한 대우 때문에 뉴턴의 업적과 역사에 의심을 표한다.
     * 뉴턴의 위조자에 대한 집착은 닐 스테픈슨의 바로크 사이클에서 그의 이전 연금술 추구와 연결된다.
     * 이 이야기는 실제 버전의 셜록 홈즈와 그의 적, 제임스 모리아티에 비교된다.
     * 뉴턴이 창문을 닫으라는 요청만을 한 것으로 기록된 인용구에 대한 호기심이 있다.
     * 뉴턴과 라이프니츠의 불화에 대한 관심이 있으며, 이것이 이 이야기만큼 재미있는지 여부가 있다.
     * 뉴턴이 단 한 명의 위조자도 사면하지 않은 몇 안 되는 관리 중 한 명이었다는 사실이 언급되며, 이는 그의 엄격한 정의에 대한 입장을 강조한다.
"
"https://news.hada.io/topic?id=10781","Resend(YC 23W)의 9달만에 0 -> 2만명의 유저를 확보하기까지의 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Resend(YC 23W)의 9달만에 0 -> 2만명의 유저를 확보하기까지의 이야기

   개발자 경험에 초첨을 맞춘 이메일 전송 플랫폼인 Resend 창업자의 9개월간의 스토리입니다.
     * YC 배치 합류
          + 23년 1월 YC 배치 합류 당시 MVP 제품과 간단한 랜딩 페이지로 시작했습니다.
          + 당시 목표는 세상에 뭔가 새로운 것을 만들고 있다는 것을 알리는 것이었고, 이를 위해 강력한 닷컴 도메인(resend.com)을 구매하고 fancy한 랜딩 페이지를 구축하는데 시간을 투자했습니다.
     * YC 데모데이
          + YC 프로그램 기간은 서비스 유입을 waitlist로 막아두고, 매주 초대장을 보내서 새로운 사용자 코호트를 유입시켰습니다. 이용자로부터 어떤 점을 좋아하고 싫어하는지 학습하는 것이 주요 목표였습니다.
          + YC 데모데이에서는 수천 명의 투자자 앞에서 피칭하게 되는데, 데모데이 이후 투자 유치에 상당한 노력이 소모되었고 그동안 제품 개발에 시간을 많이 쓰지 못했습니다.
     * 공개 출시
          + YC 파트너로부터 충분히 빠르게 움직이지 못하고 있다는 피드백을 받았습니다.
          + waitlist는 이용자 유입을 제어하는 데 유용했으나, 결론적으로 느리게 만드는 원인이었습니다. 제품을 빠르게 대중에게 공개하고 싶었으나, 제품의 혜택과 기능을 잘 전달할 수 있는 웹사이트가 필요하다고 생각했고, 아직 충분히 정제되지 않은 제품에 이용자를 유입시키는 것에 대한 두려움이 있었습니다. 다시 한다면 waitlist를 더 빠르게 걷어냈을 것입니다.
          + 6월에 공개 출시를 했습니다.
     * 투자 유치 공개
          + 시드 라운드를 마무리한 뒤 블로그와 기사를 통해 투자 유치 사실을 공개했습니다.
          + 투자 유치를 공개한다는 것이 바보 같을 수 있지만, 회사가 훌륭한 투자자들로부터 지지받고 있다는 것은 고객에게 신뢰감을 주리라 생각했습니다.
     * 현재
          + 지난 몇 달 동안 사람들이 원하는 기능들을 구현하는 데 집중하고 있습니다.
          + 하지만 단순히 기능 구현하는 데만 몰입한 것이 아니라, 사람들이 요청하는 기능을 빠르게 구현하고, 크건 작건 요청된 기능이 업데이트되었음을 알리는 피드백 루프를 만드는 것입니다.
"
"https://news.hada.io/topic?id=10798","Show GN: Node.js 용 초간단 벡터DB","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Show GN: Node.js 용 초간단 벡터DB

   요즘 LLM 이용해서 프로토타입이나 토이 프로젝트를 많이 하는데요.

   대개 벡터 서치를 기본으로 쓰게 되는데, 프로토타이핑을 할 때는 보통 수백개 정도의 텍스트만 벡터 서치로 테스트 하거나, 실제 프러덕트도 문서 내에서 찾아 답변을 하는게 대부분이라, 이 정도를 위해서 벡터DB를 따로 쓰는건 너무 과하거나 귀찮기도하고, 프로토타이핑 할 때 시각적으로 보여주는게 중요해서 보통 Next.js 를 쓰는데, Node.js 용 패키지는 더더군다나 마땅치 않아서 답답해하던 찰나 DHH의 TypeScript 이슈를 보고 TypeScript로 패키지 만드는게 그렇게 번거롭나? 궁금하길래 갑자기 삘 받아서 만들었는데..요..

   아..왜 Svelte도 그렇고 왜 다들 TypeScript에서 빠져나가려고 하는지 알고 싶지 않았지만 알게 되었습니다.

   TypeScript 그 자체가 나쁜 건 아니지만, 확실히 npm 패키지를 만드는 과정에서, 테스트와 툴링으로 인한 고통이 꽤 크게 느껴지긴 합니다. 작은 툴을 하나 만드는데도 이정도니 큰 프로젝트 하시는 분들은..

   암튼 만들어 놓고 보니 프로토타이핑하는 데는 생각보다 쓸만해서 공유해봅니다.

   감사합니다.

   자매품: Node.js 용 초간단 청킹 라이브러리 -> https://news.hada.io/topic?id=10801

   만들어주신 오픈소스와는 별개의 질문인데 요즘 추세가 다 TS를 버리는 느김인가요? 매우궁금합니다

   TS를 버리는 추세는 아니라고 생각되고요. 불만이 많은 것이죠. 그래서 어떻게 하면 TS를 더 쉽게 쓸 수 있을까를 런타임과 프레임워크단에서 더 많이 노력하고 있는 것으로 보입니다.

   아하~ 감사합니다
"
"https://news.hada.io/topic?id=10785","Bun v1.0.0","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Bun v1.0.0

     * Bun 1.0은 JavaScript 및 TypeScript 개발을 위한 종합 툴킷으로, 코드를 실행하고, 빌드하고, 테스트하고, 디버깅하는 기능을 제공합니다.
     * Bun은 여러 도구를 하나의 통합 솔루션으로 대체함으로써 JavaScript 개발을 단순화하고 가속화하려고 합니다.
     * Bun은 Node.js를 대체하며, npx보다 5배 빠른 대안, 내장된 감시 모드, 기본 .env 파일 읽기를 제공합니다.
     * Bun은 .js, .ts, .cjs, .mjs, .jsx, .tsx 파일을 실행할 수 있으며, tsc, babel, ts-node, tsx와 같은 트랜스파일러의 필요성을 제거합니다.
     * Bun은 최고 수준의 성능을 가진 JavaScript 번들러이며, esbuild 호환 플러그인 API를 가지고 있어 esbuild, webpack, parcel, rollup을 대체합니다.
     * Bun은 npm과 호환되는 패키지 관리자로서, package.json을 읽고 node_modules에 쓰며, npm, yarn, pnpm, lerna를 대체합니다.
     * Bun은 Jest와 호환되는 테스트 러너로서, 스냅샷 테스트, 모킹, 코드 커버리지를 지원하며, jest, ts-jest, babel-jest, vitest를 대체합니다.
     * Bun은 Apple의 WebKit 엔진을 사용하여 빌드된 빠른 JavaScript 런타임으로, 소프트웨어 개발을 더 빠르고 즐겁게 만드는 것을 목표로 합니다.
     * Bun은 ESM과 CommonJS 모듈 시스템을 모두 지원하며, 브라우저에서 사용할 수 있는 웹 표준 API에 대한 내장 지원이 있습니다.
     * Bun은 핫 리로딩을 제공하여, 파일이 변경될 때 애플리케이션을 종료하지 않고 다시 로드할 수 있습니다.
     * Bun은 사용자 정의가 가능하여, 플러그인을 정의하여 가져오기를 가로채고 사용자 정의 로딩 로직을 수행할 수 있습니다.
     * Bun은 일반적인 개발자 요구사항에 대한 최적화된 표준 라이브러리 API를 제공하며, 더 빠른 네이티브 코드 API를 사용하여 SQLite를 지원합니다.
     * Bun은 npm, yarn, pnpm보다 훨씬 빠른 패키지 관리자를 포함하고 있습니다.
     * Bun은 완전히 Jest와 호환되는 내장 테스트 모듈이 있는 테스트 러너로서 기능합니다.
     * Bun은 esbuild 플러그인과 호환되며, 번들 시간 함수 실행을 위한 JavaScript 매크로를 도입하는 JavaScript 및 TypeScript 번들러 및 미니파이어입니다.
     * Bun은 이제 실험적으로 Windows용 네이티브 빌드를 제공하며, macOS 및 Linux 빌드는 생산 준비가 완료되었습니다.
     * Bun 팀은 JavaScript와 TypeScript를 프로덕션에 배포하는 새로운 방법을 개발하고 있으며, 저수준 시스템 엔지니어를 채용하고 있습니다.

        Hacker News 의견

     * Bun v1.0.0은 CommonJS와 ES 모듈을 모두 지원하는 새로운 릴리스로, 파일 확장자 걱정이나 package.json에 ""type"": ""module""을 포함하는 것을 없애줍니다.
     * Node.js 생태계는 일부에게서 파손된 것으로 보이며, Bun의 실용적이고 개발자 친화적인 선택이 잠재적인 해결책으로 간주됩니다.
     * 일부 사용자들은 ""node:""의 모든 것을 구현하지 않은 1.0 릴리스에 대한 ""대체 가능""이라는 Bun의 표현에 대해 우려를 표현했습니다.
     * Bun 1.0에서 지원하지 않는 모듈이 무엇인지 Node.js 호환성 관련 섹션에서 명확하게 밝혀달라는 요청이 있습니다.
     * 접근성/개인정보/독점적인 제한에 대한 우려로 인해 커뮤니티 채팅을 Discord 이외의 플랫폼으로 이동하자는 제안이 있습니다.
     * Bun은 더 간단하고, 일체형(그러나 확장 가능한) 소프트웨어에 대한 매력적인 가치 제안으로 보이며, 비슷한 목표를 가진 Rome 도구와 비교됩니다.
     * Bun의 수익화 계획에 대한 질문이 있습니다. Bun은 VC가 지원하고 있으며, 사용자들은 Bun이 앞으로도 계속 활발하게 개발될 가능성을 고려하고 있습니다.
     * Bun은 JavaScript 주변의 복잡한 도구 상황에 대한 잠재적인 해결책으로 보이며, node 기반 도구의 층층이 된 혼란을 대체합니다.
     * Bun이 TypeScript React 앱을 상자에서 꺼내 실행하고 번들링할 수 있다면 Vite.js를 Bun 위에 사용하는 이점에 대한 질문이 있습니다.
     * 사용자들은 Bun과 Deno를 잠재적인 Node 후속자로서 비교하는 데 관심이 있으며, 두 프로젝트 간의 성능 주장과 철학적 차이에 대해 묻고 있습니다.
     * Bun 1.0의 릴리스는 fetch() 바디 스트리밍에서의 테스트 실패로 인해 지연되었으며, 이는 나중에 JavaScriptCore 바인딩에서 객체로부터 속성을 얻는 것에서 발견되었습니다.
"
"https://news.hada.io/topic?id=10852","NVIDIA, LLM 추론을 가속하는 TensorRT-LLM 오픈소스 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               NVIDIA, LLM 추론을 가속하는 TensorRT-LLM 오픈소스 공개

     * TensorRT 딥러닝 컴파일러와 최적화된 커널, 전처리/후처리 단계, 멀티GPU/멀티노드 통신 기본요소 등을 포함
     * C++ 이나 CUDA에 대한 깊은 지식 없이도 LLM에 최고 성능과 사용자 정의 기능을 빠르게 제공 가능
     * 오픈소스 모듈식 Python API를 제공하여 사용 편의성과 확장성 제공
     * Ampere, Lovelace, Hopper GPU 지원
     * H100 기반으로 TensorRT-LLM을 적용하여 테스트 했을 때
          + GTP-J-6B 는 추론 성능 8배 향상, TCO 5.3배 감소, 에너지 소비량 5.6배 감소
          + Llama2 70B 는 추론 성능 4.6배 향상, TCO 3배 감소, 에너지 소비량 3.2배 감소
     * In-flight Batching 이라 불리는 최적화된 스케줄링 기술 포함
     * TensorRT-LLM이 탑재된 NVIDIA H100 GPU는 사용자에게 모델 가중치를 새로운 FP8 형식으로 쉽게 변환하고 모델을 컴파일하여 최적화된 FP8 커널을 자동으로 활용할 수 있는 기능을 제공
          + Hopper Transformer 엔진 기술을 통해 가능하며, 모델 코드를 변경할 필요 없음
     * 현재 얼리억세스 가능하며, 몇주내로 출시할 예정
"
"https://news.hada.io/topic?id=10831","광고 및 불필요한 권한 없는 오픈 소스 Android 앱 그룹","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   광고 및 불필요한 권한 없는 오픈 소스 Android 앱 그룹

     * 광고 없이 불필요한 권한을 요구하지 않는 오픈소스 Android 앱 컬렉션에 대한 기사
     * 이러한 앱들은 사용자 친화적이고 개인정보 중심의 표준 Android 앱 대안을 제공하는 Simple Mobile Tools 프로젝트의 일부
     * 사용자의 선호에 따라 색상을 변경할 수 있는 커스터마이징 가능한 앱들
     * 110,470회 이상 다운로드된 인기 앱인 Simple Gallery Pro 강조
     * 2016년부터 활동하며 전통적인 Android 앱을 간소화하고 광고 없는 버전으로 점차 대체하는 프로젝트
     * 이러한 앱들에 대한 지속적인 개발과 업데이트를 제안하며 독자들에게 계속 연락하도록 권장하는 기사
     * 2023년까지 모든 권리가 보호된다는 저작권 고지, 즉 개발자들이 최소한 몇 년 동안 이러한 앱을 유지하고 개선하는 데 전념하겠다는 의미

        Hacker News 의견

     * 광고와 불필요한 권한이 없는 오픈소스 안드로이드 앱 그룹에 대한 기사
     * 이 앱들은 수년 동안 존재해 왔으며, Google Play와 F-Droid에서 모두 이용 가능하게 발전해 왔음
     * 처음에는 이 앱들이 완전히 무료였으며, 프로젝트에 기부하는 형태로 Google Play에서 구매할 수 있는 ""Thank You"" 앱이 있었음
     * 2018년에 저자는 Gallery, Calendar, Contacts, File Manager 등 가장 인기 있는 앱들의 ""Pro"" 버전을 개발하여 Google Play에서 구매할 수 있게 하였음
     * ""Pro"" 버전에도 불구하고 이 앱들은 완전히 오픈소스를 유지하며, F-Droid에서 여전히 무료로 이용 가능함
     * 일부 사용자들은 ""Pro"" 버전으로의 증가하는 밀도와 무료 버전의 품질 저하 가능성에 대해 우려를 표현함
     * 다른 사용자들은 무료 버전의 기능 감소로 인해 이 앱들을 F-Droid의 다른 오픈소스 대안으로 대체함
     * Karlsruhe University에서 비슷한 프로젝트를 제안하였는데, 이는 권한 최소화, 추적 메커니즘 또는 광고가 없는 Privacy Friendly Apps를 제공함
     * 광고와 불필요한 권한이 없는 앱들이 드물다는 것에 대해 일부 사용자들은 실망을 표현하며, 광고와 불필요한 권한이 있는 앱의 블랙리스트가 더 새로운 소식이 될 것이라고 제안함
     * Apple App Store가 앱이 요청할 수 있는 권한을 표시하도록 요청하고 있어, 사용자들이 앱을 설치하기 전에 더욱 정보를 얻을 수 있게 함
     * 파일 관리자 앱의 번들 PDF 리더에서 보안 문제에 대한 경고가 주어져, 일부 사용자들이 이 앱들을 모두 제거함
     * 약간의 부정적인 의견에도 불구하고, 이 앱들의 간결함과 기능 부풀림의 부재를 평가하는 사용자들이 있음
"
"https://news.hada.io/topic?id=10812","옛 LAN 파티에서의 추억들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            옛 LAN 파티에서의 추억들

     * 2000년대 LAN (Local Area Network) 파티에 대한 향수적인 회고록, 독특한 경험과 추억의 컬렉션 공유.
     * LAN 파티는 종종 윈도우 재설치와 같은 문제 해결을 포함하며, 이는 통과의 의례로 간주되었다.
     * ATX 케이스를 수정하는 것, 예를 들어 큰 발광 전원 버튼이나 측면에 창을 추가하는 것은 지위의 상징으로 간주되었다.
     * 평균보다 큰 하드 드라이브를 공개 LAN 파티에 가져가는 것에는 위험이 따르며, 이는 잠재적으로 도난당할 수 있었다.
     * 악성 트래픽을 생성하는 크랙을 사용하면 네트워크에 다시 연결하기 위해 윈도우를 재설치해야 할 수 있다.
     * 저자는 Windows 98 SE, Windows 2000, CD 드라이브를 에뮬레이션하기 위한 Alcohol 120%, 그리고 Barton Athlon XP 2500+ 및 Radeon 9600과 같은 다양한 소프트웨어와 하드웨어의 사용을 회상한다.
     * 인터넷 접속은 LAN 파티 초기에는 흔하지 않았고, 제공하는 경우에도 엄격한 할당량이나 대역폭 제한이 있었다.
     * 저자는 키젠과 불법 복제 게임의 사용을 언급하며, 게임 제작자들이 불법 복제를 줄이려는 시도를 강조한다.
     * 기사는 ""WiFi가 뭔가요?""라는 유머러스한 질문으로 끝나며, 2000년대의 기술과 오늘날의 기술 사이의 뚜렷한 대조를 강조한다.

        Hacker News 의견

     * 기사는 오래된 LAN 파티에 대한 추억을 되새김니다. 독자들이 그들의 따뜻한 추억과 경험을 공유합니다.
     * 한 독자는 존 카맥과 Quakecon에서 만난 것을 인생 최고의 경험으로 회상합니다.
     * 많은 독자들이 LAN 파티에서 네트워크를 설정하는 도전, IP 주소 충돌 및 수동 IP 구성에서 DHCP로의 전환을 기억합니다.
     * 일부 독자들은 고부하로 연장 코드가 녹는 등의 기술적 실수에 대한 이야기를 공유합니다.
     * 독자들은 또한 LAN 파티의 사회적 측면, 부모나 여자친구로부터의 믿을 수 없는 시선, 그리고 게임을 통해 형성된 동료애를 회상합니다.
     * 한 독자는 그의 직업의 일부로 LAN 파티를 사용한 독특한 경험을 공유합니다. 컨퍼런스에서 게임 토너먼트를 설정하고 과정에서 많은 친구들을 만들었습니다.
     * 다른 독자는 PC 수리 상점에서 일하면서 무료 게임을 얻고, 학교의 네트워크 관리 과정에서 Counterstrike를 플레이한 기억을 공유합니다.
     * 일부 독자들은 LAN 파티에서의 게임 문화를 회상합니다. 마약 사용, Quake와 같은 게임을 플레이하는 흥분, 게임 경험을 향상시키는 도구 사용 등을 포함합니다.
     * 독자들은 또한 게임 기술의 진화를 기억합니다. CRT에서 LCD로의 전환, CD 드라이브를 에뮬레이션하기 위한 Alcohol 120%와 Daemon Tools와 같은 도구의 등장을 포함합니다.
     * 일부 독자들은 LAN 파티에서의 유머러스한 규칙과 전통을 공유합니다. 벽해킹을 사용하는 플레이어를 의자에 덕트 테이프로 붙이는 것, 게임의 편견 순서 등을 포함합니다.
     * 한 독자는 독성 게이머와의 부정적인 경험을 공유합니다. 이로 인해 그는 온라인 대 비상인 게임에서 손을 뗐습니다.
"
"https://news.hada.io/topic?id=10880","마진 유저의 폭정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               마진 유저의 폭정

     * 'The Tyranny of the Marginal User'라는 기사는 기술의 발전과 수십억 달러의 R&D 투자에도 불구하고 소비자 소프트웨어의 품질이 시간이 지남에 따라 저하되는 현상을 논의한다.
     * 저자 Ivan Vendrov는 OKCupid라는 데이팅 앱을 예로 들어, 이 앱이 상세하고 호환성 기반의 플랫폼에서 Tinder와 유사한 단순화된 스와이프 기반 모델로 전환된 것을 보여준다.
     * Vendrov는 이러한 추세가 데이팅 앱에만 국한되지 않고, 대부분의 인기 있는 소비자 소프트웨어에서도 보이며, 이제는 사용자의 최소한의 행동, 무한 스크롤 피드, 저품질 콘텐츠를 우선시한다고 주장한다.
     * 저자는 이러한 저하를 'Marginal User의 독재'라는 현상에 귀인하는데, 이는 회사들이 앱에서 별로 가치를 얻지 못하는 사용자들을 더 많이 확보하는 데 초점을 맞추는 현상을 말한다.
     * Vendrov에 따르면 'marginal user'는 주의력이 짧고 인터페이스 복잡성에 대한 인내심이 적어, 앱 디자인이 단순화되고 저하되는 원인이 된다.
     * Vendrov는 Daily Active Users (DAUs)를 지표로 삼는 것에 대한 집중을 비판하며, 이는 새로운 'marginal' 사용자를 끌어들이는 데 초점을 맞추면서 기존 사용자들의 경험을 무시하게 된다고 주장한다.
     * 저자는 이러한 추세가 인간의 행동과 창의성을 향상시키는 소비자 소프트웨어 도구의 개발에 해로우며, 이러한 도구들은 종종 'marginal user'를 위한 앱들에 의해 가려진다고 제안한다.
     * Vendrov는 디지털 경제의 현재 상태에 대한 우려를 표현하며, 이는 더 의미 있는, 사용자 중심의 소프트웨어 개발을 희생시키고 'marginal user'를 위한 서비스에 대부분의 자원과 재능이 투입되는 상황을 말한다.

        Hacker News 의견

     * '소프트웨어 개발 및 제품 디자인'의 맥락에서 '마진 유저' 개념에 대한 논의, OkCupid 사례 연구를 활용
     * 전직 OkCupid 직원인 저자가 Tinder의 성장을 모방하기 위해 데스크톱 중심 제품에서 모바일 중심 제품으로의 전환에 대한 회사의 경험을 공유
     * 이러한 전환은 제품을 단순화하고 에세이 작성 및 심층적인 질문에 대한 강조를 줄이는 것을 포함하며, 저자는 이것이 사용자 대화의 질 감소로 이어졌다고 믿음
     * 저자는 성장 추구와 더 많은 사용자를 끌어들이려는 욕망이 제품의 원래 비전과 품질을 잃게 할 수 있다고 제안
     * 일부 댓글은 '마진 유저'가 소수가 아니라 평균 사용자라고 주장하며, 대부분의 사용자가 단순화되고 쉽게 소화할 수 있는 콘텐츠를 선호한다고 제안
     * 논의는 또한 '쉽게 측정 가능한 지표의 폭정'이라는 개념에 대해 언급하며, Daily Active Users (DAU)와 같은 지표에 초점을 맞추면 제품의 성공과 원래의 의도 사이에 괴리가 생길 수 있다고 제안
     * 일부 댓글러들은 '파워 유저'를 위한 시장을 원하며, 이를 위해 오픈 소스가 유일한 희망일 수 있다고 제안
     * 기사와 댓글은 성장과 제품 품질 유지 사이의 긴장을 강조하며, '마진 유저'에게 맞춤형 서비스를 제공하면 제품 품질이 저하될 수 있다고 제안
"
"https://news.hada.io/topic?id=10885","스크래치로 IP 지리위치 데이터베이스 구축하는 방법?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     스크래치로 IP 지리위치 데이터베이스 구축하는 방법?

     * 기사는 위도와 경도로 정의된 지리적 위치에 IP 주소를 매핑하는 지리위치의 개념을 설명합니다.
     * 지리위치 지능은 타겟 광고, 사기 탐지, 콘텐츠 지역화, 디지털 권리 관리, 네트워크 보안, 분석 등 온라인 비즈니스와 서비스 제공자에게 다양한 응용 분야가 있습니다.
     * IP 지리위치의 정확성은 IPv4 및 IPv6 네트워크의 지리적 분포와 지역 인터넷 레지스트리 또는 IP 임대 회사에 의한 IP 네트워크의 재할당에 영향을 받을 수 있습니다.
     * 지리위치 데이터베이스를 처음부터 구축하는 것은 WHOIS 레코드에서 지리위치 데이터를 추출하고, 이 레코드에서 지리위치 지식을 보간하고, 오픈 소스 지리위치 프로젝트를 활용하는 것을 포함합니다.
     * 수집된 지리위치 데이터는 불완전하거나 일관성이 없을 수 있으므로, 오픈 소스 지리 데이터베이스를 사용하여 공통 형식으로 풍부하게 만들고 변환해야 합니다.
     * 기사는 WHOIS 레코드에서 지리위치 데이터를 추출하고 이 레코드에서 지리위치 지식을 보간하는 방법에 대한 단계별 가이드를 제공합니다.
     * 기사에서는 여러 오픈 소스 지리위치 프로젝트를 논의하며, 이들이 지리위치 데이터베이스의 정확성을 향상시키는 역할을 강조합니다.
     * 기사는 IP 주소를 지리적으로 위치시키는 복잡성과 IP 주소 API의 정확성의 중요성을 강조합니다.
     * RIPE IPmap은 핵심 인터넷 인프라에 대한 지리위치 데이터를 제공하는 API로, 지연 시간 및 단일 반경 엔진과 역 DNS 엔진을 포함한 다양한 엔진을 사용하여 IP 주소의 지리위치를 추론합니다.
     * RIPE IPmap 데이터베이스는 IP, geolocation_id, city_name, state_name, country_name, country_code_alpha2, country_code_alpha3, latitude, longitude, score를 포함하는 CSV 형식으로 다운로드 받을 수 있습니다.
     * RIPE IPmap 프로젝트의 정확성과 범위는 크게 감소하였으며, 2019년 이후 새로운 기여가 없습니다.
     * Massimo Candela가 만든 오픈 소스 프로젝트인 Geofeed-finder는 whois 데이터에서 geofeed 파일을 검색하고, 접두사의 소유권을 검증하고, 캐시를 관리하며, ISO 코드를 검증합니다.
     * LACNIC Geofeeds 서비스는 LACNIC 회원의 상당 부분에 대한 지리위치 정보를 제공하며, 이 데이터는 공개적으로 다운로드 가능합니다.
     * OpenGeoFeed은 자체 게시 geofeeds를 단일 geofeed 파일로 컴파일하는 오픈 소스 프로젝트입니다.
     * 지리위치 데이터는 종종 geonames.org, openstreetmap.org, naturalearthdata.com과 같은 오픈 소스 지리 데이터베이스를 사용하여 제3자 소스를 고려하여 풍부하게 만들어집니다.
     * 데이터 풍부화 과정은 주어진 도시와 국가에서 위도와 경도(좌표)를 찾거나, 그 좌표에 가장 가까운 도시와 국가를 얻는 것을 포함합니다.
     * Ipapi.is는 GeoNames Postal Code Files, cities500.zip, countryInfo.txt와 같은 데이터베이스를 사용하여 지리위치 정보를 풍부하게 만들며, 대부분의 사용자에게 1,000개의 무료 일일 요청을 제공하는 무료 플랜을 제공합니다.

        Hacker News 의견

     * IP 지리위치 데이터베이스 구축 방법에 대한 기사
     * IPinfo 직원이 회사의 IP 지리위치 방법론 설명, 전세계 여러 서버에서 IP 주소를 핑하고 다중 위치 측정 과정을 사용하여 위치 식별
     * IPinfo의 방법은 우편번호 수준의 정확도를 거의 달성하며, 전세계에 600개 이상의 프로브 서버 보유
     * 공개적으로 사용 가능한 IP 지리위치 데이터셋은 종종 구식이며, 충분히 정확하지 않고, 검증 과정이 부족하여 신뢰할 수 없다는 점을 지적
     * Cloudflare를 IP 지리위치에 사용하는 것을 제안, 무료로 대략적인 IP 위치 정보 제공
     * 한 사용자는 IP 위치를 사용하여 언어 설정을 결정하는 웹사이트를 비판, 브라우저 언어 헤더를 무시하는 게으른 가정이라 주장
     * 지리위치 서비스를 구축하는 최선의 방법은 Google과 Apple이 하는 것처럼 대량의 기기가 위치와 IP를 동시에 보고하는 것이라는 제안
     * 일부 사용자들은 ARIN/RIPE 데이터의 지리위치에 대한 정확성에 의문을 제기, 국가 수준 이상으로는 충분히 정확하지 않다고 주장
     * 한 사용자가 Google Maps가 지도에서 탐색하는 위치를 기반으로 IP 위치를 학습하는 경험 공유
     * 한 사용자가 커뮤니티 기반 IP 주소 위치 서비스, www.hostip.info를 구축한 경험을 공유, 국가 수준 해상도에 잘 작동
     * 다른 사용자가 GitHub에서 핑 기반 geoip 방법의 현대 버전에 대한 링크 공유
     * 일부 사용자들이 IP 지리위치 서비스에 대한 불만을 표현, 종종 부정확하다고 주장
"
"https://news.hada.io/topic?id=10773","보안 연구원을 대상으로 한 북한의 캠페인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         보안 연구원을 대상으로 한 북한의 캠페인

     * Google의 Threat Analysis Group(TAG)은 북한 정부 지원배우자들이 보안 연구원들을 대상으로 한 지속적인 캠페인을 보고했다.
     * 이 캠페인은 2021년 1월에 처음 공개되었으며, 취약점 연구 및 개발에 종사하는 연구원들을 대상으로 0-day 취약점을 이용한다.
     * TAG는 이러한 캠페인을 2년 이상 추적하고 방해하며, 0-day를 찾아 온라인 사용자를 보호하고 있다.
     * 최근에는 TAG가 이전 캠페인과 유사성을 바탕으로 동일한 배우자들로부터 새로운 캠페인을 식별했다.
     * 최소한 하나의 활성화된 0-day가 지난 몇 주 동안 보안 연구원들을 대상으로 사용되었다. 이 취약점은 영향을 받는 공급업체에 보고되었으며, 현재 패치 중이다.
     * 북한의 위협 배우자들은 대상과의 관계를 구축하기 위해 소셜 미디어 사이트를 사용하며, 종종 긴 대화를 나누고 상호 관심사에 대해 협력하려고 시도한다.
     * 대상 연구원과의 관계를 확립한 후, 위협 배우자들은 인기 있는 소프트웨어 패키지에 최소한 하나의 0-day가 포함된 악성 파일을 보낸다.
     * 성공적인 악용 후, 쉘코드는 가상 머신 체크를 수행하고 수집된 정보와 스크린샷을 공격자가 제어하는 명령 및 제어 도메인으로 보낸다.
     * 0-day 취약점을 이용하여 연구원들을 대상으로 하는 것 외에도, 위협 배우자들은 심볼 정보를 다운로드하는데 유용한 도구처럼 보이는 독립형 Windows 도구를 개발했지만, 공격자가 제어하는 도메인에서 임의의 코드를 다운로드하고 실행하는 능력도 있다.
     * TAG는 이 도구를 다운로드하거나 실행한 경우 시스템이 알려진 깨끗한 상태인지 확인하기 위한 예방 조치를 취하는 것을 권장하며, 이는 운영 체제의 재설치를 필요로 할 것이다.
     * TAG는 연구 결과를 Google 제품의 안전성과 보안성 향상을 위해 사용하며, 식별된 모든 웹사이트와 도메인을 Safe Browsing에 추가하여 사용자가 더 이상 악용되는 것을 방지한다.
     * TAG는 Gmail과 Workspace 사용자들에게 정부 지원 공격자 경고를 보내며, 잠재적인 대상들에게 Chrome의 Enhanced Safe Browsing을 활성화하고 모든 장치를 업데이트하도록 권장한다.
     * TAG는 보안 커뮤니티와 자신의 연구 결과를 공유하여 인식을 높이고 전략과 기술에 대한 이해를 향상시키는 데 전념하고 있으며, 이는 업계 전반의 사용자 보호를 강화하는 데 이바지한다.

        Hacker News 의견

     * Github의 악성 도구인 getsymbol이 214개의 별을 받았지만 경고 배너가 없다. Github에게 이와 같은 알려진 백도어가 있는 다른 소프트웨어에 대한 경고를 추가할 것을 제안한다.
     * 북한인들이 제한 없는 인터넷 접근과 영어 이해력을 가지고 있음에도 불구하고, 그들의 국가 미디어와 상충하는 미디어에 노출되는 것을 어떻게 피하는지에 대한 의문이 제기되었다.
     * ffmpeg windows binaries와 같은 인기 다운로드 사이트의 합법성에 대한 우려와 비공식 호스팅 다운로드를 이용하는 국가 행위자들의 가능성에 대해 표현되었다.
     * 북한에 의한 보안 연구원들에 대한 0days의 사용이 테스트로 보이며, 대상 연구원으로부터 더 많은 0days를 얻을 수 있는 잠재적인 이점을 가지고 있다.
     * 최근 macOS 보안 업데이트가 논의되고 있는 취약점과 관련이 있다는 추측이 제기되었다.
     * 보안 연구원이 알 수 없는 출처로부터 받은 Windows 바이너리를 실행할 가능성에 대한 의심이 제기되었으며, 그들이 더욱 안전한 환경에서 바이너리를 검사할 가능성이 더 높다는 제안이 제기되었다.
     * 위협이 북한에서 발생했다는 것이 어떻게 결정되었는지에 대한 질문이 제기되었다.
     * dbgsymbol.com 웹사이트가 Brave 브라우저의 Safe Browsing에서 경고와 함께 표시되지 않고 있음에도 불구하고, 모든 확인된 웹사이트와 도메인이 Safe Browsing에 추가된다는 주장이 있다.
     * 전직 정보관은 북한의 기술 능력이나 똑똑하고 열심히 일하는 사람들을 모집하는 능력을 과소평가하지 말라고 경고했다.
     * 보안 역할에서 일하는 경우 LinkedIn에서 자신의 직함을 보안으로 나열하는 것을 피할 것을 제안한다.
"
"https://news.hada.io/topic?id=10794","'Gaussian splatting'이 상당히 멋지다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'Gaussian splatting'이 상당히 멋지다

     * ""3D 가우시안 스플래팅을 이용한 실시간 방사장 렌더링""이라는 제목의 논문에 대한 기사
     * 가우시안 스플래팅은 3D 장면을 위치, 회전, 크기, 불투명도, 색상을 갖는 수백만 개의 입자로 표현하는 방법
     * 입자들은 확장된 구체가 아닌 화면 공간에서 2D 가우시안으로 렌더링됨
     * 논문의 저자들은 경사 하강법과 미분 렌더링을 사용하여 사진으로 표현된 장면을 대표하는 수백만 개의 입자를 생성하는 방법을 개발함
     * 저자들은 또한 이 수백만 개의 스케일링된 입자들을 빠르게 렌더링하는 방법을 개발함
     * 기사의 저자는 Unity에서 가우시안 스플래팅의 실시간 시각화 부분을 구현하고 데이터 크기를 줄이는 방법을 고려하고 있음
     * 기사는 또한 2001-2002년경에 발명된 가우시안 스플래팅의 역사와 이전의 응용에 대해 논의함
     * 저자는 GitHub에서 가우시안 스플래팅의 구현을 공유하며, 이는 작동하지만 공식 구현만큼 빠르지 않다고 지적함
     * 저자는 또한 가우시안 스플래팅을 사용할 때 데이터 크기와 메모리 사용량이 중요한 고려사항이며, 기사에서 사용된 예시 장면은 디스크에 1.5GB의 데이터를 필요로 한다고 언급함

        Hacker News 의견

     * 가우시안 스플래팅의 잠재력에 대한 기사, 다수의 이미지에서 3D 장면을 재현하는 기술, 기술 애호가들 사이에서 흥분 유발
     * 가우시안 스플래팅, 과거 환경 재현에 대한 유망한 도구, 추억의 파도를 일으킬 가능성
     * 기울기 하강법과 ""차별화 렌더링"" 사용, ""신경"" 관련 사용 회피, 일부 독자들은 이를 대세를 따르지 않는 점을 칭찬
     * 그러나 일부 독자들은 신경망 회피가 칭찬받을 목표가 아닐 수 있다고 주장, 그들은 인기있는 이유가 있고 좋은 함수 근사자임
     * 기사에서는 게임의 입자 시스템의 핵심인 포인트 기반 렌더링도 언급, 독자들은 최근 게임의 입자 시스템 변화를 주목
     * 일부 독자들은 가우시안 스플래팅이 동적 조명과 움직임을 지원할 수 있는지 의문, 장면/방사장은 보통 정적이며 내장된 조명이 있음
     * 이 기술은 사이버펑크 2077의 브레인댄스 개념과 비교, 이는 플레이어가 다른 사람의 시각적 기억 속에서 움직일 수 있게 함
     * 독자들은 3D 가우시안 스플래팅 렌더링의 첫 웹GPU 최적화 구현과 효율적인 장면 데이터 압축 및 해제를 기대
     * 일부 독자들은 가우시안 스플래팅 사용법에 대한 자료를 공유, 예를 들어 YouTube의 초보자 가이드
     * 이 기술은 새로운 것이 아님, 1991년에 볼륨 렌더링을 위한 스플래팅에 대한 참조와 90년대 후반의 복셀 iso-표면 사용에 대한 언급
     * 독자들은 공간의 비디오를 3D 장면으로 변환하는 기술인 구조에서 움직임에 대한 최신 기술에 대해 궁금해함.
"
"https://news.hada.io/topic?id=10797","Persimmon 8B: Adept가 공개한 새로운 LLM 모델","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Persimmon 8B: Adept가 공개한 새로운 LLM 모델

  주요 특징

     * Adept에서 Apache 라이선스로 공개한 대형 언어 모델(LLM)
     * Persimmon-8B 모델은 80억개의 매개변수를 가지며, 다양한 언어 작업에 사용 가능
     * LLaMA2, GPT3, MPT 등에 비해 약 4배 가량 더 큰 16K의 컨텍스트 크기를 가짐
     * 10억개 미만의 매개변수를 갖는 오픈소스 언어 모델들 중 가장 뛰어난 성능을 보임

  더 알아보기

     * Adept 홈페이지
     * Base 가중치 (md5sum: cd0320cba9efad9ccd18e9ec4d16ae1b) 다운로드
     * Chat 가중치 (md5sum: 663aeace07269c44e90f4e8bcd07f32a) 다운로드
     * 모델 및 추론 코드 등을 포함하고 있는 GitHub 저장소
     * (⚠️광고⚠️) 파이토치 한국어 커뮤니티에서 조금 더 길게 정리한 내용 읽기
"
"https://news.hada.io/topic?id=10827","Microsoft, Windows 11 사용자에게 Edge 강제 적용을 멈추지 않음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Microsoft, Windows 11 사용자에게 Edge 강제 적용을 멈추지 않음

     * Microsoft, Windows 11 사용자에게 Edge 브라우저 강제 사용 계속, 기본 웹 브라우저 설정에 따르겠다는 애매한 발표에도 불구하고.
     * 기술 미디어, 이 발표를 잘못 해석하여 Windows가 기본 브라우저 설정을 존중할 것이라는 보고가 나왔으나, 이는 오해에 기반한 것이며 검증되지 않았음.
     * 최근 Windows 11 Insider 미리보기 빌드의 변경 로그에 있는 애매한 항목에서 혼란이 생겼으며, 이는 유럽 경제 지역(EEA)에서 Windows 시스템 구성 요소가 기본 브라우저를 사용하여 링크를 열 것을 제안했음.
     * 이로 인해 Microsoft가 유럽 연합(EU)의 규제 압력에 굴복하여 Edge 웹 브라우저와 서비스를 Windows 운영 체제를 통해 홍보하는 것을 중단하고 있다는 가정이 생겼음.
     * 기사의 저자는 Microsoft Edge에서 기본 웹 브라우저로 웹 링크를 리디렉션하는 오픈 소스 프로그램인 EdgeDeflector를 개발했으며, 새로운 Windows Insider 빌드를 테스트하고 변화를 찾지 못했음.
     * Windows 11의 새 버전은 여전히 Microsoft Edge에서 기본 브라우저를 변경하는 것을 권장하지 않으며, 시스템 업데이트 후 사용자에게 기본 웹 브라우저를 Microsoft Edge로 재설정하도록 요청함.
     * 새로운 Copilot, 시작 메뉴, 작업 표시줄 및 데스크톱의 검색, Windows Spotlight, 일반 앱, 작업 표시줄의 위젯 등 주요 표면에서의 웹 링크는 여전히 Microsoft Edge를 강제로 열게 함.
     * 저자는 이러한 결과를 노르웨이(EEA 회원)와 독일(EEA 및 EU 회원)의 두 가지 구성에서, 그리고 Windows의 홈 및 프로페셔널 에디션, 심지어 각 에디션의 EU 특정 ""N"" 변형에서 테스트했음.
     * 변화가 없음에도 불구하고, Microsoft는 고객이나 기술 미디어의 검증 없이 올바른 일을 한 것으로 가정하고 긍정적인 언론 주목을 받았음.
     * 저자는 Hacker News, Reddit, 그 외의 소셜 미디어에서의 많은 토론이나 수백 개의 뉴스 사이트에서 이야기를 전한 것에 대한 확인이나 검사를 찾지 못했음.
     * 저자는 이 이야기에 대한 Microsoft의 코멘트를 요청하지 않았으며, Microsoft 역시 The Register와 The Verge의 이야기에 대한 발표를 거부했음.

        Hacker News 의견

     * 기사는 Microsoft의 Edge 브라우저를 Windows 11 사용자에게 계속해서 밀어붙이는 행동에 대해 기술 열광자들 사이에서 논쟁이 일어나고 있다고 논의하고 있다.
     * 일부 사용자들은 Edge가 강제로 적용되는 문제를 재현할 수 없다고 보고하며, 이는 Windows Insider 문제일 수 있다고 제안하고 있다.
     * 이 문제가 Windows 11 ""23H2""의 최종 릴리즈 전에 해결될 것이라는 희망이 있다.
     * 일부 사용자들은 Outlook과의 상호작용과 같은 Edge의 특정 통합을 평가하지만, 공급업체들이 이러한 통합을 악용할 수 있다는 우려를 표현하고 있다.
     * 사용자의 동의 없이 Windows 10 Pro에서 Windows 11 Pro로 자동 업그레이드되며, 기본 브라우저로 Edge를 포함한 Microsoft 기본 설정으로 변경하는 사례가 보고되고 있다.
     * 일부 사용자들은 새로운 Windows 데스크톱에서 Edge가 Thorium/Chromite와 같은 다른 브라우저에 비해 느리고 스팸이 많다고 발견했다.
     * Edge의 강제 사용과 다른 사용자 비친화적인 행동들로 인해 일부 사용자들은 Ubuntu와 같은 다른 운영체제로 전환하고 있다.
     * 일부 사용자들은 Microsoft가 자사의 브라우저를 다른 브라우저보다 우대하는 이유로 소송을 당했던 United States v. Microsoft 사건을 언급하며, Microsoft가 과거의 실수에서 배우지 못했다고 제안하고 있다.
     * 이러한 문제에도 불구하고 일부 사용자들은 여전히 Windows를 좋아하며, Microsoft가 Edge를 너무 공격적으로 밀어붙일 필요가 있는지 의문을 제기하고 있다.
     * 일부 사용자들은 Edge를 제거하려고 시도하고 있지만 어려움을 겪고 있다.
"
"https://news.hada.io/topic?id=10845","자신만의 Llama 2를 세밀하게 조정하여 GPT-3.5/4를 대체하다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                자신만의 Llama 2를 세밀하게 조정하여 GPT-3.5/4를 대체하다

     * HN에서 오픈소스 LLM의 미세 조정에 대한 관심이 많이 증가하고 있음 (예: Anyscale의 게시물)
     * 모델 미세 조정에 대한 몇 년간의 경험과 통찰, 그리고 실용적인 코드 공유
     * 데이터 라벨링, 미세 조정, 효율적인 추론 실행, 비용/성능 평가 등을 다루는 노트북 세트 제공
     * 테스트 세트에서 GPT-4의 라벨을 95% 일치시키는 7B 모델 훈련
     * 미세 조정이란 무엇인가? 텍스트로 지시사항을 작성하는 것보다 더 강력한 형태의 프롬프팅
     * 미세 조정 모델의 학습을 위한 예제 입력/출력 쌍에 기존 모델을 훈련시킴
     * 프롬프팅과 미세 조정의 장단점
     * 미세 조정의 큰 장점: 모델의 행동을 지시하는 데 훨씬 효과적이어서 훨씬 작은 모델로도 충분히 처리 가능
     * 미세 조정된 Llama 7B 모델은 GPT-3.5보다 토큰당 50배 저렴하고, 많은 사용 사례에서 동일하거나 더 나은 결과를 제공
     * 예시: GPT-4로 2M 레시피 분류는 $23k의 비용이 들지만, 우리가 미세 조정한 모델은 GPT-4와 유사한 성능을 보이며 전체 데이터셋을 실행하는 데 단지 $19의 비용이 듦
     * OpenPipe라는 오픈소스 제품 개발 중
     * 엔지니어들이 가능한 한 간단하게 미세 조정을 채택할 수 있도록 돕는 OpenPipe 제품
     * 미세 조정에 대해 배운 정보를 공유하기 위한 현재의 게시물

        Hacker News 의견

     * Llama 2의 모델 미세조정 사용에 대한 기사, GPT-3.5/4 대안으로서
     * 일부 사용자들은 번역 작업에서 GPT-3.5가 Llama 2보다 100배 저렴하다고 발견, Llama 7B는 불량한 번역을 제공
     * OpenAI의 GPT-3.5에 대한 공격적인 가격 전략, 다른 공급업체보다 그들의 모델에 의존하도록 격려하는 움직임으로 추측
     * GPT 및 기타 LLM의 출력을 내부 대체 모델 훈련에 사용하는 가능성 논의, 이는 생산 규모에서 정규 API를 사용하는 사람들에게 비용 효과적인 해결책이 될 수 있음
     * 미세조정된 Llama 7B 모델이 GPT-3.5보다 50배 저렴하다는 주장에 대한 의문 제기, 일부 사용자들은 이것이 자체 호스팅을 통해서만 달성될 수 있다고 제안
     * 미세조정의 효과성 대비 저 순위 적응에 대한 의문 제기
     * 미세조정된 Llama 모델과 GPT-3.5 간의 비교가 오해를 불러일으킨다는 일부 사용자들의 주장, 적절한 추론 지연 시간 달성과 확장성 문제를 인용
     * 미세조정된 Llama 2 모델의 품질이 반드시 ChatGPT보다 뛰어나지 않음, 미세조정은 고품질 데이터셋을 필요로 하는데 이는 쉽게 구축하기 어려움
     * GPT 함수 호출의 일관성과 오류율에 대한 의문 제기
     * 사용자들은 자신의 모델을 미세조정하기 위한 최고의 오픈소스 LLM에 대해 궁금해함
     * 미세조정 데이터셋이 입력/출력 쌍이어야 하는지, 아니면 자동 회귀 가능한지에 대한 명확성 요청
     * 사용자들은 이러한 모델을 미세조정하는 방법을 배우는 자료에 관심, 특히 초보자들을 위한 것
     * 이 기사는 ML/LLM 분야에서 시작하는 사람들에게 가치있는 자료로 간주됨.
"
"https://news.hada.io/topic?id=10823","Linux가 어떻게 NAT를 통해 ping을 처리하는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Linux가 어떻게 NAT를 통해 ping을 처리하는가?

     * 리눅스가 인터넷 제어 메시지 프로토콜(ICMP)을 사용하는 핑 명령어에 대해 네트워크 주소 변환(NAT)을 수행하는 방법에 대한 기사 설명
     * 저자가 ICMP 패킷에 대한 NAT 작동 방식을 이해하기 위해 리눅스 네트워킹 코드를 탐구, ICMP 패킷은 포트 필드가 없음
     * 저자가 네트워크 네임스페이스를 사용하여 단일 리눅스 기계에서 여러 장치를 시뮬레이션하는 실험 설정, NAT 과정을 테스트하기 위해 핑 명령어 사용
     * 실험은 브리지에 연결된 두 클라이언트 생성, NAT 박스와 서버 연결, 라우팅 및 NAT 구성을 포함
     * 저자가 클라이언트와 서버 네트워크 네임스페이스에서 ICMP 패킷을 캡처하고 패킷 데이터를 분석
     * 각 클라이언트가 다른 ""id"" 필드를 가지고 있어 NAT 박스가 각 클라이언트에게 전달되는 응답 패킷을 구분할 수 있음을 저자가 발견
     * 저자가 리눅스 소스 코드와 ICMP 프로토콜을 정의하는 RFC 792를 탐구하여 ID가 어떻게 선택되는지 이해
     * 핑 명령어가 식별자를 무작위로 선택하고, 다른 호스트에서 두 핑 프로세스가 동일한 ID를 선택하면, 리눅스 커널이 무작위로 빈 포트를 선택하고, 이 포트가 ICMP 패킷의 ID로 사용됨을 저자가 발견
     * 저자가 커널 함수를 추적하고 netfilter 코드의 이해를 검증하기 위해 bpftrace라는 도구를 사용
     * 기사 결론은 리눅스가 각 클라이언트에 대한 연결을 생성하여 핑을 NAT하고, 나가는 패킷에서 소스 IP 주소 및/또는 ICMP id 필드를 재작성하고, 그 후에 응답 패킷에서 이러한 수정을 반전한다는 것
     * 기사는 기본 기술 지식을 가진 입문 레벨 소프트웨어 엔지니어에게 접근 가능하도록 과정에 대한 자세한 단계별 설명을 제공

        Hacker News 의견

     * 리눅스 네트워크 주소 변환(NAT)이 핑 요청을 처리하는 방법에 대한 기사
     * 서버는 고정된 주소로 고정된 ICMP 에코 요청 패킷을 보내며, 이는 반환될 것으로 예상되지 않음
     * 클라이언트가 연결하려 할 때, 서버가 보내던 ""원래""의 고정 패킷을 포함한 ICMP 시간 초과 패킷을 서버로 보냄
     * 클라이언트는 인터넷의 홉처럼 행동하여 서버에게 원래 패킷이 전달되지 못했다고 알림
     * NAT 장치는 클라이언트의 전체 IP 헤더를 포함하여 ICMP 시간 초과를 NAT 뒤의 서버로 전달, 서버가 클라이언트의 IP 주소를 알 수 있게 함
     * 로컬 네트워크에서 인터넷의 장치로 핑이 보내질 때, NAT를 수행하는 라우터는 핑의 소스 주소를 공개 IP 주소로 재작성하고 ICMP 패킷의 ID 필드를 고유한 값으로 재작성
     * 라우터는 고유한 ID 값을 사용하여 응답을 로컬 네트워크의 올바른 장치로 전달
     * 게시물은 패킷 망가뜨리기, 네트워크 주소 변환, 패킷 필터링에 사용되는 Netfilter라는 도구에 대한 자료도 제공
     * 기사는 소스 코드까지 모든 추상화 계층을 깊게 파고들어 분석하는 데 대한 칭찬을 받음
     * ICMP에는 포트가 없으므로, NAT는 ICMP 에코 응답을 올바른 포트로 되돌려 보내는 문제를 처리할 필요가 없음
     * ICMP 에코 요청에는 ID가 있으며, 이는 소스 포트 번호와 사실상 동일
     * ICMP 에코의 NAT 처리는 UDP가 소스 포트를 재매핑하는 것과 유사하게 ID를 양방향으로 재매핑해야 함
     * 일부 사용자들은 시간이 지남에 따른 변경으로 인해 블로그 게시물에서 특정 코드 라인에 연결하는 것에 대한 불만을 표현
     * 일부 사용자들은 NAT를 나쁜 추상화로 비판하고 IPv4의 종료를 촉구
     * 중앙 서버 없이 UDP를 통해 핑을 이용하여 피어 투 피어 네트워킹을 위한 짧은 메시지를 보내는 가능성에 대한 추측
     * 기사는 ICMP 패킷에 ID 필드가 있고 Netfilter가 ICMP 패킷을 ""특별한 경우""로 처리한다는 것을 설명하는 것으로 요약
"
"https://news.hada.io/topic?id=10884","캘리포니아, 7년간 부품 제공을 요구하는 가장 강력한 "Right-to-Repair" 법안 통과 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         캘리포니아, 7년간 부품 제공을 요구하는 가장 강력한 ""Right-to-Repair"" 법안 통과

     * 캘리포니아, 7년간 부품 제공을 요구하는 가장 강력한 수리권 법안 통과
     * 주 의회와 상원에서 만장일치 표결을 받은 법안, 주지사 개빈 뉴섬이 서명할 것으로 예상
     * 수리 부품 및 도구 판매업체인 iFixit과 역사적으로 수리 법률에 반대했던 Apple이 법안을 지지
     * 법안은 2024년 7월부터 2021년 7월 1일 이후 판매된 기기에 대해 부품, 도구, 수리 매뉴얼, 필요한 소프트웨어를 제공하도록 요구하는 등 다른 수리권 법률을 넘어섬
     * 50달러에서 99.99달러 사이의 제품은 3년간 해당 항목을 동반해야 하며, 100달러 이상의 품목은 7년간 필요
     * 법안은 더 강력한 집행 메커니즘을 허용, 지방자치단체가 주 검찰총장에게 연락하는 대신 고등법원 사건을 제기할 수 있게 함
     * 그러나 법안에는 잠재적인 함정이 있음. 부품 및 도구의 가격은 ""공정하고 합리적인 조건""에 맡겨져 있으며, 인증되지 않은 수리 업체는 이 사실을 고객에게 공개해야 함
     * 캘리포니아와 함께 뉴욕, 미네소타도 2024년에 수리 법률을 시행하며, 유럽도 집행 가능한 수리 및 지속 가능성 법률을 향해 나아가고 있음
     * Apple은 새로운 티타늄 프레임 iPhone 15의 수리성과 내구성을 강조
     * 수리권 법률을 향한 이동은 제조업체가 지역 법률에 따라 제품을 나누는 대신 전 세계적으로 준수하는 제품을 제공하도록 이끌 수 있음

        Hacker News 의견

     * 캘리포니아, 제품 부품 제공을 요구하는 강력한 수리권 법안 통과
     * 일부 댓글러들, 법안은 회사에게 회로도, 사양, 문서 공개를 강제하는데 초점을 맞춰야 했다고 주장
     * 이 법안이 하드웨어 산업 진입을 원하는 소규모 회사들을 위협할 수 있다는 우려 제기
     * 7년 후에는 존재하지 않을 수 있는 해외 회사들이 이로 인해 혜택을 받을 수 있다는 우려 존재
     * 제조사들이 개별 부품 대신 크고 비싼 조립 부품만 제공할 수 있다는 우려 제기
     * 법안은 제조사에게 개별 부품 제공을 강제하지 않아 수리 가능성 증진에 제한적일 수 있다는 지적
     * 이 법안이 회로도, 문서, OEM 소프트웨어, 개별 부품에 대한 접근성을 제공할지에 대한 의문 제기
     * 소규모 사업체들이 7년 동안 부품을 보유하는 요구사항을 준수하기 어려울 수 있다는 의문 제기
     * 이 법안이 캘리포니아에서 사업 비용을 높일 수 있어 회사들이 그 지역에서 제품 판매를 꺼릴 수 있다는 우려 제기
     * 일부는 5년 후에 이 법안의 결과에 대부분의 사람들이 불만을 가질 것이라 예측하며, 다른 일부는 소비자로서는 기쁨을 표현하지만 캘리포니아의 비즈니스 적대적 환경에 대해 우려를 표현
"
"https://news.hada.io/topic?id=10801","Show GN: Node.js 용 초간단 청킹 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Show GN: Node.js 용 초간단 청킹 라이브러리

   오늘 LLM 프로토타이핑을 위해 만든 간단한 벡터DB를 소개드렸었는데요..(https://news.hada.io/topic?id=10798)

   내친김에 Node.js 용 초간단 텍스트 청킹 라이브러리도 만들어 봤습니다.

   LLM 이용해서 문서를 임베딩 할 때 간단하게 쓸 수 있는게 거의 없고, Node.js 용은 더더군다나 없어서 매번 덩치 큰 라이브러리를 쓰는게 찝찝했는데요. (Edge에서 쓰는 건 생각도 못하고)

   VectorDB 간단하게 만든 김에 같이 쓰려고 만들어봤고, 어차피 LLM에 쓸 거면 대부분 매우 정밀하지 않아도 되니, 간단한 문장/문단 구분으로 자르고 overlap을 적당히 할 수 있게 정도만 만들어 두었습니다.

   잠깐 사용해보니, 역시 뭐든 It just works, simple is the best 네요. ㅎㅎㅎ

   자매품: Node.js 용 초간단 벡터DB -> https://news.hada.io/topic?id=10798
"
"https://news.hada.io/topic?id=10818","SmartKnob - 소프트웨어로 정의된 엔드스톱 및 가상 디텐트를 갖춘 햅틱 입력 노브","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           SmartKnob - 소프트웨어로 정의된 엔드스톱 및 가상 디텐트를 갖춘 햅틱 입력 노브

     * SmartKnob은 소프트웨어로 구성 가능한 엔드스탑과 가상 디텐트를 갖춘 오픈 소스 입력 장치입니다.
     * 브러시리스 짐벌 모터와 자기 인코더를 사용하여 닫힌 루프 토크 피드백 제어를 가능하게 하며, 디텐트와 엔드스탑의 동적 생성 및 조정을 허용합니다.
     * 이 장치는 통합 디스플레이가 있는 프리미엄 버전인 SmartKnob View를 가지고 있으며, 현재 활발하게 개발 중입니다.
     * SmartKnob은 240x240 라운드 LCD, BLDC 짐벌 모터, Lilygo TMicro32 Plus 모듈로 구동되는 ESP32-PICO-V3-02, 그리고 전원 및 데이터를 위한 USB-C 커넥터를 특징으로 합니다.
     * 이 장치는 아직 기계적 및 전기적 개정이 필요할 수 있으므로 일반적인 사용을 위해 추천되지 않습니다.
     * 자신의 SmartKnob을 만드는 것은 고급 납땜 경험과 하드웨어 및 펌웨어 문제를 해결할 능력을 필요로 합니다.
     * 프로젝트는 아직 ""안정적""이라고 할 수 없으며 업데이트와 개정이 필요할 수 있습니다. 부품을 주문하기 전에 안정된 릴리즈 v1.0 마일스톤을 기다리는 것이 좋습니다.
     * 프로젝트의 미래 계획에는 ESP32-S3-MINI-1 모듈로 전환, 와이파이 구성 및 작동, 더 나은 디스플레이 렌더링을 위해 LVGL로 이동, 그리고 Home Assistant와의 통합이 포함됩니다.
     * 프로젝트는 상당히 허용적인 라이선스를 가진 오픈 소스로, 적절한 출처 표시와 함께 누구나 자신의 것을 만들거나 키트/조립품을 판매할 수 있게 합니다.
     * 프로젝트는 Jesse Schoch의 비디오 ""haptic textures and virtual detents""와 SimpleFOC 커뮤니티에서의 해당 토론에 영감을 받았습니다.
     * 프로젝트는 Apache v2 (소프트웨어, 전자 제품, 문서)와 Creative Commons Attribution 4.0 (하드웨어/기계) 라이선스에 따라 라이선스를 받았습니다.

        Hacker News 의견

     * 오픈소스 하드웨어 프로젝트인 SmartKnob는 그 높은 수준의 문서화와 마감에 대해 칭찬받았다.
     * 프로젝트는 3D 디자인 및 프린팅, 하드웨어 소싱, 부품 선택 등 하드웨어 프로젝트의 복잡성 때문에 인상적이면서도 어렵게 느껴진다.
     * 회로 설계에 대한 질문이 있으며, 특히 사용자의 노브 회전에 의해 생산되는 전압에 대한 보호가 있는지 여부에 대한 것이다.
     * SmartKnob는 디지털 주크박스의 물리적인 컨트롤과 온도조절기 등 다양한 응용 프로그램에 대해 고려되고 있다.
     * SmartKnob의 특징인 SimpleFOC는 많은 프로젝트에서의 잠재적인 사용에 대해 높이 평가받고 있다.
     * SmartKnob는 이전에 2022년에 제출되었으며, 샌프란시스코의 Open Sauce에서 데모를 진행했다.
     * SmartKnob의 데모 비디오는 시청이 권장된다.
     * SmartKnob의 소프트웨어 기반 디텐트는 실제 트리거와 완벽하게 일치하는 것에 대해 칭찬받고 있다.
     * SmartKnob는 어두운 방에서의 기능성과 변동 간격 때문에 유아용 수면 훈련 도구로 고려되고 있다.
"
"https://news.hada.io/topic?id=10844","Apple, iPhone 15 Pro와 iPhone 15 Pro Max 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Apple, iPhone 15 Pro와 iPhone 15 Pro Max 공개

     * 3나노 A17 Pro 칩. 2배 빨라진 뉴럴 엔진. 6코어 GPU
     * USB-C (USB 3 규격, 초당 최대 10기가비트) 및 Wi-Fi 6E
     * 견고하면서도 가벼운 항공우주 등급 티타늄으로 디자인
          + 브러시 질감, 곡면 처리된 가장자리, iPhone 사상 가장 얇은 베젤
          + 견고한 후면 글래스와 전면 Ceramic Shield
          + 14 대비 19g 가벼워짐
     * 48MP 메인 카메라
          + 컴퓨테이셔널 포토그래피 기능. 새로운 24MP 초고해상도 사진을 자동으로 완성
          + 24mm, 28mm, 35mm의 인기 있는 세 가지 초점 거리를 제공
          + 48MP ProRAW 및 48MP HEIF 이미지도 지원
     * iPhone 15 Pro는 3배 망원 카메라, iPhone 15 Pro Max는 120mm에서 iPhone 사상 가장 긴 5배 광학 줌 성능을 제공
     * 차세대 인물 사진 모드는 더 정교한 디테일, 더 생생한 색감, 향상된 저조도 성능을 선사
          + 이제 인물 사진 모드로 전환하지 않고도 인물 사진을 찍을 수 있음
          + 프레임 내에 사람, 강아지 또는 고양이가 있을 때, 혹은 사용자가 탭해서 초점을 맞출 때, iPhone이 자동으로 사진에 심도 정보를 저장, 나중에 인물사진으로 변경 및 초점 포인트 조절 가능
     * A17 칩 내에 USB-C 를 지원하는 USB 3 컨트롤러를 내장. 4K 60 프레임 HDR 영상출력 까지 지원
     * Log 촬영 옵션을 도입. 스마트폰 중 최초로 컬러 워크플로의 세계 표준인 ACES(Academy Color Encoding System)를 지원
     * 4배 빠른 하드웨어 가속 레이 트레이싱
          + 콘솔에서 가능한 게임들을 지원 : Resident Evil Village, Resident Evil 4, Death Stranding, Assassin’s Creed Mirage
     * Spatial Video 촬영 지원
          + 촬영한 영상을 Apple Vision Pro에서 생동감있게 재생 가능

   Pro 모델이 아닌 iPhone 15과 iPhone 15 Plus 의 경우는 A16 칩을 그대로 사용해서 확실히 모델간 차이를 두었네요.
   그래서 그냥 Pro 버전 뉴스만 올립니다.

   14 Pro Max 가 240g, 15 Pro Max 221g 로 19g 가벼워 졌습니다.
   14 Pro 는 206g, 14 Pro는 187g 로 19g 가벼워진 건 같구요.

   한국 가격은 15 Pro Max 기준 256GB 190만원, 512GB 220만원, 1TB 250만원 입니다.

   발표할 때는 모바일 게임쪽을 엄청 강조했습니다.
   이제 정말로 모바일에서 콘솔 수준의 게임이 가능하다는 얘기를 하면서 Resident Evil Village, Resident Evil 4, Division Resurgence 등이 출시 예정이라고 얘기했고요.
   Ubisoft는 어세신 크리드 최신작인 Mirage 콘솔버전을 네이티브로 출시한다고 합니다.
"
"https://news.hada.io/topic?id=10766","NSO 그룹이 만든 아이폰용 제로 클릭 제로 데이 취약점이 발견되었습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               NSO 그룹이 만든 아이폰용 제로 클릭 제로 데이 취약점이 발견되었습니다.

     * Apple은 모든 사용자가 즉시 iOS 16.6.1로 업데이트할 것을 권장했습니다.
     * Citizen Lab은 지난주 한 시민 단체에 고용된 개인에게서 NSO 그룹의 용병 스파이웨어인 Pegasus를 전달하는 데 사용된 제로 클릭 익스플로잇을 발견했습니다.
     * BLASTPASS로 명명된 이 익스플로잇 체인은 아무런 상호작용 없이 가장 최신 iOS(16.6)가 설치된 아이폰을 손상시킬 수 있습니다.
     * 이는 iMessage를 통해 전달된 악성 이미지가 포함된 PassKit 첨부 파일을 통해 발생했습니다.
     * Apple은 두 개의 CVE를 발표하고 즉시 수정에 들어갔으며, Citizen Lab과 협력하여 취약점이 해소된 iOS 16.6.1 및 iPasOS 16.6.1을 발표했습니다.
          + CVE-2023-41064 - ImageIO의 버퍼 오버플로우 취약점으로 인해 이미지에서 임의 코드가 실행될 수 있는 문제
          + CVE-2023-41061 - Wallet의 유효성 확인 취약점으로 인해 첨부 파일에서 임의 코드가 실행될 수 있는 문제
     * 또한 이 취약점은 Lockdown 모드에서 차단될 수 있었으며, 위험에 직면할 수 있는 사람은 Lockdown 모드를 활성화하는 것을 추천했습니다.

     * HN 스레드
     * iOS 16.6.1 업데이트

   또 이미지 처리에서 제로 클릭 취약점이 발생했네요. 이미지가 포맷도 많고 정말 복잡하긴 한가봅니다...
   예전에 있던 NSO 그룹의 제로 클릭 취약점도 이미지 처리에서 발생했는데...

   아무튼 대처는 꽤 빨랐네요.
   제로 클릭 취약점은 진짜 심각한 수준이니 당연히 빨리 해결하는 게 맞지만요.

   모두 업데이트하시라고 첫 줄에 넣었습니다.

   HN 스레드의 AI 요약
     * Obscurity4340: 불필요한 백그라운드 프로세스를 비활성화하고 공격 표면을 확장하므로 더 많은 사람들이 iOS에서 잠금 모드를 사용해야 한다고 주장합니다.
     * andrewia: 잠금 모드가 iOS의 편의성을 약간 떨어뜨리고 Safari의 JavaScript 성능을 저하시킨다고 지적합니다. 보안과 기능의 균형을 맞추는 세 번째 모드를 제안합니다.
     * Obscurity4340: 전화번호를 노리는 제로데이 익스플로잇이 과거에 발생했기 때문에 iMessage는 누구나 안전하게 사용하기에 너무 문제가 많다고 언급합니다.
     * sneak: iCloud 백업에 종단 간 암호화되지 않은 동기화 키가 포함되어 있어 Apple이 메시지에 액세스할 수 있기 때문에 iMessage가 안전하지 않다고 말합니다.
     * kbenson: 공격자가 보안을 비활성화하는 쉬운 옵션을 악용하여 잠금 모드의 이점을 무효화할 수 있다고 설명합니다. Apple이 이전 Windows 문제에서 교훈을 얻었다고 제안합니다.
     * barryrandall: 모든 것을 차단하는 잠금 모드 대신 개별 iMessage 제어를 토글할 것을 제안합니다.
     * ruuda: 이 익스플로잇과 이미지 디코딩을 통해 코드를 실행할 수 있었던 2021년 PDF 파싱 버그 사이의 유사점을 언급합니다.
     * hot_gril: 이미지 구문 분석을 악용한 이전 iOS 4 탈옥을 상기시킵니다.
     * acdha: 이와 같은 익스플로잇이 계속해서 활동가들을 위험에 빠뜨리는 동시에 기술적인 측면에서도 인상적이라는 사실에 실망감을 느낍니다.
     * TylerE: 잠금 모드가 이 특정 공격을 막을 수 있다는 점에 주목합니다.

   업데이트 바로 하고 있습니다. 250메가 정도 분량이라 금방 다운받네요.

   저는 XR인데 166.4MB네요. 기종마다 좀 다른가 봅니다.
"
"https://news.hada.io/topic?id=10782","Chrome이 이제 사용자를 추적하고 광고주와 "주제" 목록을 공유합니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Chrome이 이제 사용자를 추적하고 광고주와 ""주제"" 목록을 공유합니다

     * Google, ""Privacy Sandbox""라는 기능으로 Chrome 브라우저에 직접 사용자 추적 광고 플랫폼을 통합하였습니다.
     * Privacy Sandbox는 사용자가 방문한 웹 페이지를 추적하고, 요청 시 웹 페이지와 공유할 광고 주제 목록을 생성합니다.
     * 이 기능은 이전에 ""FLoC"" 및 ""Topics API""로 불렸습니다.
     * Google은 세계 최대의 광고 회사 중 하나로서의 위치를 이용하여, 비광고주들의 반대에도 불구하고 이 기능을 Chrome의 프로덕션 빌드에 푸시하였습니다.
     * 이 광고 플랫폼의 출시는 privacysandbox.com 페이지에서 은밀하게 발표되었으며, 이는 Google이 잠재적인 사용자 반발을 인식하고 있음을 나타냅니다.
     * Google은 새로운 광고 플랫폼이 더 나은 대안이라고 주장하며, 결국 Chrome에서 제3자 추적 쿠키를 끄려고 계획하고 있습니다.
     * Privacy Sandbox는 Apple과 Firefox가 수년 동안 제3자 쿠키를 차단해 왔기 때문에 Chromium 브라우저에서만 구현됩니다.
     * Google이 대체 추적 플랫폼을 개발하기로 한 결정은 Apple이 2020년에 Safari에서 제3자 쿠키를 차단하기로 한 조치에 의해 촉발되었습니다.
     * 사용자는 ""Privacy and Security"" 및 ""Ad privacy"" 아래의 Chrome 설정에서 이 기능을 제어할 수 있습니다.
     * Google은 ""Privacy Sandbox""가 이익을 유지할 수 있음을 확인한 후, 2024년 하반기에 제3자 쿠키를 차단할 계획입니다.
     * 잠재적인 사용자 불만에도 불구하고, Google의 Chrome에 대한 통제력은 그들이 이 추적 및 광고 플랫폼을 브라우저에 직접 구현할 수 있게 합니다.

        Hacker News 의견

     * 기사는 Chrome의 새로운 기능이 사용자를 추적하고 광고주와 ""주제"" 목록을 공유하는 내용을 논의합니다.
     * 연구 그룹 멤버는 기사가 Privacy Sandbox 프로젝트를 잘못 해석하고, 프로젝트 내 별개의 제안인 FLoC와 Topics를 혼동하고 있다고 비판합니다.
     * 또 다른 사용자는 Google의 쿠키와 FLoC에 대한 집중이 방해물일 뿐이라고 제안하며, 현대 광고 기술은 브라우저 지문을 통해 이러한 기능과 무관하게 사용자를 추적할 수 있다고 말합니다.
     * 한 댓글 작성자는 Chrome 설정의 '광고 주제'가 일반적이라고 생각하며, 이를 웹사이트에 공개하는 것이 어떻게 해로울 수 있는지 이해하지 못합니다.
     * 또 다른 사용자는 기사가 Topics API와 Privacy Sandbox 전체를 혼동하는 것 같다고 지적하며, 대부분의 기능이 아직 초기 단계에 있다고 지적합니다.
     * 한 사용자는 업데이트를 받은 직장 노트북에서 Google의 추적에 불편함을 표현하며, 이를 ""무서운"" 것으로 묘사합니다.
     * 일부 사용자들은 왜 사람들이 Chrome으로 전환했는지 의문을 제기하며, 한 사람은 Firefox를 더 빠른 대안으로 제안합니다.
     * 한 사용자는 Chrome의 adPrivacy 설정에서 토글을 끄거나 Firefox로 전환하여 추적 기능을 비활성화하는 해결책을 제공합니다.
     * 한 댓글 작성자는 Topics 사양이 서드파티 쿠키보다 낫다고 주장하며, 기사 작성자가 잘못 알고 있을 수 있다고 제안합니다.
     * 일부 사용자들은 Chrome의 지배력과 웹 개발에 미치는 영향에 대해 비꼬고 불만을 표현합니다.
     * 한 사용자는 상황에서 긍정적인 측면을 보며, 브라우저 전쟁의 복귀와 Firefox, Opera, Brave, Vivaldi와 같은 독립 브라우저에 대한 더 많은 주목을 기대합니다.
"
"https://news.hada.io/topic?id=10825","Node.js vs. Deno vs. Bun: JavaScript 런타임 비교","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Node.js vs. Deno vs. Bun: JavaScript 런타임 비교

     * 런타임은 성능과 안전성, 개발자 경험에 중요
          + Node.js : 풍부한 리소스와 에코시스템. V8(크롬)
          + Deno : Rust 기반. 보안을 향상. V8(크롬)
          + Bun : Zig 기반. 빠른 성능과 호환성에 중점. JavaScriptCore(사파리)

런타임 비교

     * 성능면에선 Bun이 모두 승리
          + 평균 쿼리/초: Bun 81.37 > Deno 43.50 > Node 21.29
          + 동시 커넥션: Bun 110,000 > Deno 67,000 > Node 60,000
     * 지원 및 커뮤니티
          + 스택오버플로우 질문수 : Node 46만개 > Deno 917개 > Bun 52개
          + 사용자수(StateOfJS 조사결과) : Node 27976 > Deno 3355 > Bun 1263
     * 안정성
          + Node.js 는 전세계 웹사이트 2.1%가 사용중
          + Deno 는 1.0이 2020년에 나왔고 수용이 느림
          + Bun 은 아직 0.73으로 베타. 9월에 1.0 예정
     * 보안
          + Node.js 의 부족한 보안을 Deno가 개선했지만, Node도 권한 모델을 도입하면서 비슷해짐
          + Bun 은 아직 보안 관련 정보가 많이 없음
     * 추가 기능들
          + Node.js 가 최근 Deno/Bun 과 비슷한 기능을 많이 도입중. Typescript 지원도 활발히 논의 중
          + Deno 에는 Dependency Inspector 와 Code Formatter 내장
          + Bun 은 Transpiler 와 Package Manager 내장. 이름에서 볼수 있듯이 번들링 기능도 포함

어떤게 나에게 적합할까 ?

     * Bun 이 확실히 속도면에서 우수함. 하지만 새로운 것이라 위험이 있음.
     * Node.js 의 장점은 성숙도와 생태계
     * Deno 는 Node에 비해 더 원활한 개발을 가능하게 하고, 복잡한 프로젝트를 고품질로 쉽게 구축할 수 있게 해주는 기능들을 포함. 안전하고 Node 보다 빠르지만 Bun에 비해 약간 느림
     * Node가 사례가 많은 안전한 옵션. Deno는 추천할 기능들이 많고 최신 기능등을 많이 포함. Bun 은 속도에 관심이 있거나 최첨단 기술을 이용하고 싶은 경우 선택을 권함

   Bun 1.0 은 릴리즈 https://bun.sh/blog/bun-v1.0

   Bun이 잘 발전했으면 좋겠습니다.
"
"https://news.hada.io/topic?id=10820","Knightmare: DevOps 경고의 이야기 (2014)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Knightmare: DevOps 경고의 이야기 (2014)

     * 2012년 글로벌 주요 금융 서비스 회사인 Knight Capital Group의 경고적인 이야기를 다룬 기사, 실패한 소프트웨어 배포로 인해 45분 만에 파산한 사례.
     * 2012년 Knight Capital Group는 미국 주식의 최대 거래자로, 평균 일일 거래량이 33억 건 이상이며, 매일 210억 달러 이상을 거래했다.
     * 회사는 NYSE의 새로운 Retail Liquidity Program 출시를 준비하면서 자동화된 고속 알고리즘 라우터인 SMARS를 업데이트했다.
     * 이 업데이트는 Knight가 8년 동안 사용하지 않았던 ""Power Peg""라는 오래된 미사용 코드를 대체하려는 것이었다.
     * 새로운 코드는 8개의 서버에 수동으로 배포되었지만, 기술자의 실수로 한 서버에는 새 코드가 복사되지 않아 오래된 Power Peg 코드가 활성화되었다.
     * Power Peg 기능이 부모 주문에 대한 주식 수를 추적하지 않고 자식 주문을 실행하기 위해 라우팅을 시작하면서 주문의 무한 루프가 발생했다.
     * 시장이 열리자 Knight의 시스템이 주문으로 시장을 범람시켜, 일부 주식은 그 가치의 10% 이상 증가하고, 다른 주식은 잘못된 거래에 반응하여 감소했다.
     * Knight의 시스템은 SMARS를 참조하고 오류를 ""Power Peg 비활성화""로 식별하는 97개의 자동 이메일 메시지를 보냈지만, 이들은 시스템 알림으로 설계되지 않았고 즉시 확인되지 않았다.
     * 거래 시작 45분 동안, Power Peg 코드는 212개의 부모 주문을 처리하고, 154개의 주식에 대해 4백만 건의 거래를 처리하여 3억 9700만 주식 이상을 처리했다.
     * Knight Capital Group는 45분 만에 4억 6000만 달러의 손실을 보고, 이로 인해 파산했다. 그들은 반 다 dozen 투자자들로부터 4억 달러의 투자를 통해 손실을 보전하는 데 필요한 자본을 모았다.
     * 기사는 이러한 대형 실패를 피하기 위해 배포를 완전히 자동화하고 반복 가능하게 만드는 것의 중요성을 강조하며, 이는 DevOps/Continuous Delivery 계획의 일부이다.
     * 저자는 소프트웨어 출시는 반복 가능하고 신뢰할 수 있는 과정이어야 하며, 가능한 한 자동화되어야 인간의 오류 위험을 줄일 수 있다고 제안한다.

        Hacker News 의견

     * 자동화 배포는 문제를 방지하지 못했을 수 있으며, 비호환 코드 때문에 문제를 확대시킬 수도 있었다.
     * 자동 거래 시스템은 내장된 킬 스위치를 가져야 하며, 이는 기능을 보장하기 위해 정기적으로 테스트되어야 한다.
     * 지속적인 배포 시스템은 치명적인 실패로 이어진 논리 오류인 이 버그를 차단하지 못했을 수 있다.
     * ""Knight Capital을 끌어내다""라는 용어는 중요 시스템에서 모서리를 자르고 결과를 직면하는 양적 금융에서 알려져 있다.
     * 고주파 거래는 빠르게 잘못될 수 있는 것의 극단적인 예이다.
     * 대규모 판매량을 처리하는 시스템의 경우, 위험을 완화하기 위해 수동 프로세스, 롤백 단계, 그리고 기능 플래그를 갖추는 것이 중요하다.
     * Knight Capital 사건은 모든 거래를 중단하거나 수동 개입으로 경고하는 자동 SCRAM 시스템을 무시한 결과였다.
     * 8년 동안 코드베이스에 죽은 코드가 존재하는 것은 위험을 나타내며, 이는 적극적인 유지 보수 작업이 부족함을 나타낸다.
     * 설정과 바이너리가 동시에 롤아웃되었다면 이런 종류의 문제를 방지할 수 있었을 것이다.
     * 오래된 플래그를 재사용하는 것은 중요한 실수였으며, 배포에서 적절한 관행의 중요성을 강조한다.
"
"https://news.hada.io/topic?id=10792","나의 가장 좋아하는 Erlang 프로그램 (2013)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     나의 가장 좋아하는 Erlang 프로그램 (2013)

     * 조 암스트롱이 쓴 기사, Erlang 커뮤니티에서 유명한 인물이 그의 가장 좋아하는 Erlang 프로그램을 논의
     * 해당 프로그램은 ""Universal Server"", 서버의 개념을 일반화하여 특정 서버가 되도록 지시할 수 있는 서버를 만드는 개념
     * Universal Server는 {become, F} 메시지를 기다리고, F가 함수일 때, 그것은 F 서버가 됨
     * 암스트롱은 ""Factorial Server""를 제시, 정수를 기다리고 그 정수의 팩토리얼을 반환하는 서버
     * 유니버설 서버를 만드는 함수를 만들고, ""팩토리얼 서버가 되라""는 메시지를 보내고, 정수를 보내고, 응답을 기다리고, 응답을 출력하는 방법을 보여줌
     * SICS에서의 시간에 대한 에피소드를 공유, 9000대의 컴퓨터로 구성된 연구 네트워크인 Planet Lab에 접근할 수 있었음
     * Planet Lab를 분산 애플리케이션을 위한 실제 테스트 베드로 사용, 모든 Planet Lab 기계에 빈 유니버설 Erlang 서버를 설치하고 become 메시지로 네트워크를 홍수처럼 만드는 소문 알고리즘을 설정
     * 이를 통해 그가 원하는 것을 빠르게 네트워크로 변환할 수 있었으며, 이를 연구 논문을 위한 콘텐츠 배포 네트워크를 만드는 데 사용
     * 기사는 Erlang의 유연성과 힘을 동적이고 분산된 시스템을 만드는 데 보여줌

        Hacker News 의견

     * Erlang의 서버 클로저 함수의 힘과 유연성에 대한 기사, 자체 메시지와 {becom, F} 메시지를 받을 수 있어 서버가 계속 발전할 수 있음
     * 댓글 작성자들이 Erlang 커뮤니티의 핵심 인물인 Joe Armstrong을 회상, 그의 기술에 대한 열정과 Windows의 방향에 대한 선견지명으로 알려짐
     * BEAM, Erlang의 가상 머신에 대한 짧은 개요 링크 공유, JVM과 Node와 같은 다른 VM들에 비해 독특한 특징 강조
     * 일부 댓글 작성자들이 Erlang의 유니버설 서버의 목적과 힘에 대해 혼란을 표현, 다른 사람들로부터 명확한 설명을 찾음
     * 블로그 게시물이 언급된 강연, 댓글 작성자에게 매우 추천됨
     * BEAM과 Erlang의 동시성이 Go나 Java와 같은 언어의 동시성에 비해 특별하고 독특하다고 강조
     * Joe Armstrong에 의한 Erlang에서의 기본 서버 작성 수업 공유, Erlang/Elixir와 같은 비동기 언어의 힘을 강조
     * 댓글 작성자들이 Joe Armstrong에 대한 감탄을 표현, 한 사람이 그를 가장 좋아하는 Erlang 프로그래머라고 칭함
     * Julia 언어가 한 댓글 작성자의 최근 집착으로 언급, 분산 모델에서 Erlang과의 유사성과 여러 노드에서 ""즉시 서버""를 복제하는 용이성을 주목
"
"https://news.hada.io/topic?id=10858","스웨덴, 기술 중심 학교에 다시 책과 필기 연습 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     스웨덴, 기술 중심 학교에 다시 책과 필기 연습 도입

     * 스웨덴 학교들, 전통적 학습 방법 재도입에 초점 - 인쇄된 책, 조용한 독서 시간, 필기 연습에 더욱 집중하고 태블릿이나 온라인 연구와 같은 디지털 도구 사용을 줄임
     * 이러한 변화는 유치원에서 태블릿 사용을 포함한 교육에서의 디지털화에 대한 강조가 기본 기술의 저하로 이어졌다는 우려에 대한 반응
     * 스웨덴 학교 장관인 Lotta Edholm, 교육에서의 기술 과존재에 대한 강력한 비판가 - 학생 학습에 있어서 실제 책의 중요성을 강조
     * 정부, 유치원에서 디지털 기기의 의무화 결정을 뒤집을 계획 - 6세 이하 아동을 위한 디지털 학습 종료 목표
     * 독서 능력에서 유럽 평균보다 높은 점수를 받았음에도 불구하고, 국제 평가에서는 2016년부터 2021년 사이에 스웨덴 아동들의 독서 수준이 하락했다는 점을 강조
     * 스웨덴의 유명한 의과대학인 Karolinska Institute, 전통적 학습 방법으로의 전환을 지지 - 디지털 도구가 학생 학습을 향상시키기보다는 방해한다고 주장
     * 유네스코, 디지털 학습 도구의 빠른 채택에 대한 우려 표명 - 교사 주도의 대면 교육을 대체하지 않는 교육에서의 기술 적절한 사용을 촉구
     * 스웨덴 정부, 올해 학교용 책 구매에 685백만 크로나($64.7백만) 투자 발표 - 2024년과 2025년에 교과서를 학교로 돌려보내기 위해 매년 추가로 500백만 크로나를 지출할 계획
     * 이번 조치는 논란을 불러일으킴 - 일부 전문가들은 전통적 학습 방법으로의 되돌아가기가 학생들에게 최선인 것보다는 정치적 신호를 보내는 것에 더 초점을 맞추고 있다고 제안

        Hacker News 의견

     * 기사는 스웨덴이 기술 중심의 학교에서 더 많은 책과 필기 연습을 재도입하기로 한 결정에 대해 논의한다.
     * 댓글러들은 대체로 이러한 움직임을 지지하며, 필기로부터 얻는 미세한 운동 제어 개발과 인지 능력의 중요성을 언급한다.
     * 일부 사용자들은 교실에서 기술의 과도한 사용에 대해 우려를 표현하며, 이로 인해 깊은 학습, 집중력, 그리고 의미 있는 학생-교사 관계가 손실될 수 있다고 제안한다.
     * 몇몇 댓글러들은 책과 노트북으로 가득 찬 무거운 학교 가방의 부정적인 영향을 언급하며, 물리적인 자료와 디지털 자료 사이의 균형이 필요하다고 제안한다.
     * 어린이의 인지 발달에 있어서 필기의 중요성이 강조되며, 일부 사용자들은 이것이 작업의 품질에 대한 자부심과 기준을 심어준다고 제안한다.
     * 한 사용자는 속기를 가르치는 것이 앞으로의 수업에서 노트를 작성하는 데 유익할 수 있다고 제안한다.
     * 학교에서 노트북 사용을 통해 개발될 수 있는 현대 세계에서 필요한 터치 타이핑과 같은 기술 능력의 중요성에 대한 반론이 제기된다.
     * 일부 댓글러들은 현재의 학교 시스템에 대해 불만을 표현하며, 부모들이 종종 시스템에 대한 신뢰 부족으로 인해 자녀의 교육을 보충해야 한다고 제안한다.
     * 이 결정은 긍정적인 단계로 보이지만, 일부 사용자들은 아이들 사이의 인지 차이에 대한 개별적인 고려의 필요성을 강조한다.
"
"https://news.hada.io/topic?id=10878","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   동파육 좋아하는데 동파육 만들긴 노력이 너무 많이 들어가고, 라후테나 만들어 볼까 싶어서 고기 주문해뒀습니다.

   라후테가 뭔가 궁금해서 검색해봤는데 사진만 봐도 맛을 아는 음식이군요! 조리도 간단해보이고요. 다음에 한번 해봐야겠어요

   이번 주말에는 넷플릭스나 보고 geeknews 에 밀린 기사들 읽을 생각입니다.

   곱창전골 먹으러 갈까합니다. 강남권~성남 부근 추천해주실 집 있을까요?

   강남권에서는 삼성역 중앙해장, 강남역 강남진해장이 추천할 만한데, 저는 중앙해장 쪽이 더 좋았습니다.

   홀리 ㅋㅋㅋ 감사합니다 기억해둘게요

   미드 블랙리스트가 드디어 끝났다 그래서 달려보려고요.
   시즌10개에 각 시즌이 20 에피쯤 되어서 꽤 오래볼듯 하네요.

   자동차 세차합니다. 가을 환절기 때문에 몸이 허해서... 낮잠 시원하게 자고 몸보신해줄 수 있는 제철 음식 먹고 싶네요. 가을엔 어떤 제철 음식이 있을까요.

   전 복날엔 사람이 많아서 잘 안 먹는 삼계탕을 나중에 먹는게 좋더라고요.
   혹시 안드셔 보셨으면 신길동 호수삼계탕을 추천합니다.
"
"https://news.hada.io/topic?id=10847","천 개의 마이크로서비스에 의한 죽음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          천 개의 마이크로서비스에 의한 죽음

     * 기사는 기술 산업에서 복잡한 시스템을 마이크로서비스로 과도하게 복잡하게 만드는 현재의 추세를 논의하고 있습니다.
     * 저자인 Andrei Taranchenko는 존재하지 않는 문제를 해결하려는 산업의 경향을 비판하며, 이는 종종 혁신적이고 최첨단으로 보이고자 하는 욕구에 의해 주도됩니다.
     * 자바스크립트 개발자들이 ""풀스택""으로 자신을 규정하고 서버 개발과 비동기 코드에 뛰어들어가는 것이 이러한 추세에 기여하는 요인으로 지목됩니다.
     * FAANG 베테랑들이 스타트업에 영향을 미쳐, 대기업에서 사용되는 복잡한 시스템과 유사한 시스템을 밀어붙이는 것도 문제로 지적됩니다.
     * 기사는 Dropbox, Twitter, Facebook, Instagram, Shopify, Stack Overflow와 같은 많은 성공한 회사들이 단일 코드 베이스로 시작해 여전히 효과적으로 사용하고 있다고 지적합니다.
     * Taranchenko는 마이크로서비스를 밀어붙이는 것이 종종 효율성과 단순성을 잃게 하며, 개발자들이 전체 시스템의 정신적 지도를 유지하고 업데이트와 변화에 대한 지속적인 커뮤니케이션을 다루어야 한다고 주장합니다.
     * 저자는 마이크로서비스 대신에 회사들이 명확하게 식별 가능하고 별도로 확장 가능한 부하를 처리할 수 있는 서비스를 고려해야 한다고 제안합니다.
     * 기사는 벤처 캐피탈이 더욱 타이트해지고 기업들이 더 실용적인 결정을 내려야 할 때 단순한 시스템으로의 전환을 주목하며 마무리합니다.
     * Taranchenko는 마이크로서비스로 바로 뛰어들기보다는 단일체로 시작하고 필요할 때만 서비스로 분기하는 것을 권장합니다.

        Hacker News 의견

     * 소프트웨어 개발에서 마이크로서비스와 모노리스 사용의 장단점에 대한 기사
     * Netflix 플랫폼 구축에 참여한 한 평론가는 그 간결함과 확장성 때문에 스타트업이 모노리스로 시작하는 것을 권장
     * 또 다른 평론가는 마이크로서비스가 기술적 문제가 아닌 사회적 문제의 해결책이라고 지적. 큰 조직이 시스템을 하위 시스템으로 분할하여 빠르게 구축하고 반복할 수 있게 함
     * 일부 평론가들은 마이크로서비스로의 이동 경향을 비판, 종종 이것이 최선의 기술적 해결책이 아닌, 기존 코드의 문제를 피하거나 이야기를 맞추는 욕구에 의해 주도된다고 제안
     * 다른 일부는 마이크로서비스가 복잡하고 디버그하기 어려운 시스템을 초래하고 상당한 인프라 지원을 필요로 할 수 있다고 주장
     * 소수의 평론가들은 특히 리소스가 제한된 소규모 팀에서 마이크로서비스를 유지하고 관찰하는 데 대한 도전에 대해 불만을 표현
     * 일부 평론가들은 마이크로서비스로의 이동이 종종 성급하다고 제안하며, 시스템을 단순하게 유지하는 것이 더 나은 결과를 가져올 수 있다고 주장
     * 한 평론가는 기사가 그 주장을 지원하는 데이터를 부족하게 제시했다고 비판하고, 시스템 변경 비용을 낮추기 위해 복잡성을 관리하는 것이 더 나은 목표라고 제안
"
"https://news.hada.io/topic?id=10815","기록상 가장 더운 3개월, 전례 없는 해수 온도와 극단적인 날씨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  기록상 가장 더운 3개월, 전례 없는 해수 온도와 극단적인 날씨

     * 유럽연합 자금 지원 Copernicus Climate Change Service (C3S)에 따르면, 지구는 역대 가장 더운 3개월 기간을 경험했다.
     * 세계 해수면 온도는 세 번째로 연속해서 전례 없는 최고치를 기록했다.
     * 남극 해빙 범위는 이 시기의 역대 최저치를 유지하고 있다.
     * 8월은 역대 가장 더운 달이었으며, 2023년 7월에 이어 두 번째로 가장 더운 달이었다.
     * 올해 지금까지 (1월부터 8월까지)는 역대 두 번째로 가장 더운 해로, 2016년에 강력한 온난화 현상인 El Niño가 영향을 미쳤다.
     * 8월의 세계 평균 해수면 온도는 모든 달 중에서 역대 최고치인 20.98°C였다.
     * 북극 해빙 범위는 평균보다 10% 낮았지만, 2012년 8월의 역대 최저치보다는 높았다.
     * 세계기상기구(WMO)와 영국의 Met Office는 다음 5년 중 적어도 한 해가 역대 가장 더운 해가 될 가능성이 98%라고 예측한다.
     * 다음 5년 중 적어도 한 해에 1850-1900년 평균보다 1.5°C가 임시로 초과될 가능성이 66%이다.
     * WMO는 이것이 파리 협정에서 명시된 1.5°C 수준을 영구적으로 초과한다는 의미가 아니라, 수년에 걸친 장기 온난화를 의미한다고 강조한다.
     * UN 사무총장 안토니우 구테레스는 기후 혼란의 최악을 피하기 위한 긴급한 조치를 촉구한다.
     * WMO와 C3S는 계속해서 기후와 세계 해수면 및 대기 온도를 철저히 모니터링하고 있다.

        Hacker News 의견

     * 지구는 역대 가장 더운 8월을 경험했으며, Copernicus Climate Change Service ERA 5 데이터셋에 따르면 2023년 7월에 이어 두 번째로 가장 더운 달이었습니다.
     * 8월의 평균 전세계 기온은 1850-1900년 사이의 선산업화 시대 평균보다 약 1.5°C 더 높았습니다.
     * 일부는 기후 변화의 영향이 너무 심각해지면, 예를 들어 기후 난민의 유입이나 날씨 재해의 증가 등으로 지구 공학이 도입될 것이라 예측합니다.
     * 인공지능 시스템의 높은 에너지 소비에 대한 우려가 있습니다. 이 시스템들은 종종 같은 작업에서 인간 지능보다 성능이 떨어집니다.
     * 기후 변화의 정치화가 이 문제를 해결하는 데 방해가 된다고 여겨집니다.
     * 화석 연료에서 벗어나는 전환은 필요하지만, 특히 더 가난한 지역에서 대량 기아를 일으키지 않도록 잘 관리되어야 합니다.
     * 재생 농업은 잠재적인 해결책으로 제안되며, 이는 탄소를 포착하고, 수분 보유력을 향상시키고, 토양 온도를 낮추며, 비료와 고기를 생산할 수 있습니다.
     * 일부 지역에서는 더 시원한 여름을 경험했기 때문에, 온도 측정 지표가 어떻게 측정되는지에 대한 의문이 있습니다.
     * 다음 5-10년 동안 기후 변화 부정론이 재기할 것으로 예상되며, 현재 데이터를 시작점으로 사용합니다.
     * 최근의 극단적인 날씨 이벤트, 예를 들어 이라는 허리케인 리는 기후 변화의 추가적인 증거로 여겨집니다.
     * 일부는 과학자들이 너무 조심스럽게 예측했다고 믿으며, 이로 인해 실제 사건들이 그들의 가장 보수적인 추정보다 더 빠르게 펼쳐졌습니다.
"
"https://news.hada.io/topic?id=10768","Kagi Small Web","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Kagi Small Web

     * Kagi가 'Kagi Small Web'이라는 새로운 프로젝트를 시작했으며, 이는 비상업적인 콘텐츠를 촉진함으로써 웹을 인간화하는 것을 목표로 합니다.
     * ""Small web""이라는 용어는 개인이 자기 표현이나 지식 공유를 위해 만든 웹의 비상업적 부분을 가리킵니다.
     * Kagi Small Web은 선별된 블로그 목록에서 새로운 콘텐츠를 수집하고, Kagi 검색 결과, 새로운 Kagi Small Web 웹사이트, RSS 피드, 검색 API를 통해 다양한 방식으로 제공합니다.
     * 이 프로젝트는 Hacker News에서의 토론에서 영감을 받았으며, 긍정적인 피드백을 받아 거의 6,000개의 진정한 웹사이트로 구성된 목록을 만들었습니다.
     * Kagi Small Web은 오픈 소스이며, 선별된 웹사이트 목록은 Kagi의 GitHub에서 찾을 수 있습니다.
     * Kagi Small Web 결과는 Kagi의 독점적인 Teclis와 TinyGem 검색 인덱스에 통합되어, Kagi의 검색 결과에 독특한 맛을 더합니다.
     * Kagi Small Web 웹사이트는 ""small web""의 정신에 따라 설계되었으며, JavaScript 없이 운영됩니다. 사용자들은 게시물을 감상하거나 임시 공개 노트를 작성할 수 있습니다.
     * 웹사이트에는 400k 미만의 구독자를 가진 신흥 YouTube 크리에이터의 콘텐츠를 전시하는 실험적인 ""Small YouTube"" 섹션도 있습니다.
     * Kagi Small Web은 RSS 피드를 통한 실시간 업데이트를 제공하며, API 애호가를 위해 TinyGem 인덱스에 통합되어 있습니다.
     * 이 프로젝트는 웹의 상업화에 대항하고 진정한 콘텐츠를 촉진하며, 더 많은 사람들이 ""small web""에 기여하도록 장려하는 것을 목표로 합니다.
     * Kagi는 이 프로젝트를 개선하기 위한 피드백과 기여를 환영하며, 선별된 목록에 기여하기 위한 가이드라인을 제공합니다.

        Hacker News 의견

     * Kagi의 Vlad가 블로그 포스트를 게시하자마자 RSS 피드가 고장났음을 인정하며, 곧 다시 작동할 것이라고 밝혔다.
     * Vlad는 이전만큼 코드 작성에 능숙하지 않지만, 이 프로젝트를 통해 많이 배웠다고 인정했다.
     * 그는 사이트가 자신에게 발견의 필요성을 대체했으며, 다양한 작가들을 알게 되어 즐거웠다고 믿는다.
     * 포함된 웹사이트 목록은 링크된 GitHub 저장소에서 찾을 수 있다.
     * 일부 사용자들은 Kagi가 영어로만 콘텐츠를 큐레이션한다는 점에 실망감을 표현했다.
     * 한 사용자는 Kagi를 주요 검색 엔진으로 찬양하며, 지난 6개월 동안 Google을 손에 꼽을 정도로만 사용했다.
     * 또 다른 사용자는 MathML이 RSS 피드에서 제거된 것으로 보인다며, 이것이 고의인지 아니면 오래된 살균제 때문인지 궁금해한다.
     * 여러 사용자들은 Kagi의 개발과 구독으로 얻는 가치에 만족감을 표현했다.
     * 한 사용자는 작은 웹 링크를 통해 브라우징하는 개인적인 여정을 공유하며, Kagi에도 비슷한 기능이 있었으면 좋겠다고 바란다.
     * 또 다른 사용자는 자신의 기사가 Kagi Small Web에서 홍보되었다는 점에 감사하며, Kagi 검색을 시도해 보고 싶다는 흥미를 표현했다.
     * 한 사용자는 최근 블로그 업데이트를 선호하는 논리에 의문을 제기하며, 이것이 저품질 콘텐츠를 장려할 수 있을지 궁금해한다.
     * 또 다른 사용자는 자신의 웹사이트를 Kagi의 목록에 추가하고 싶지만, 그들의 robots.txt 파일에서 모든 크롤러를 차단하고 있어 어떻게 진행해야 할지 확신이 없다.
"
"https://news.hada.io/topic?id=10809","디코딩된: GNU Coreutils (2018)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       디코딩된: GNU Coreutils (2018)

     * GNU coreutils 버전 8.3의 모든 코드를 해독하는 장기 프로젝트에 대한 기사
     * 명령줄 유틸리티 설계 탐색에 관심 있는 초보 프로그래머를 위한 프로젝트
     * 각 유틸리티별 전용 페이지 생성, 중요한 설계 결정과 알고리즘에 대한 논의 확장, 소스 코드 진화 시각화 도구 생성 등을 포함한 완료된 여러 단계로 나눠진 프로젝트
     * 각 유틸리티의 전용 페이지 링크, 상세한 논의, 소스 코드, 설명서를 제공하는 기사
     * 유틸리티의 성격, 설계, 코드 읽을 때 유의할 사항에 대해 논의하는 코드 읽기에 대한 배경 제공 기사
     * GNU coreutils가 원래 쉘, 텍스트, 파일 유틸리티용 세 개의 별도 패키지였으며, 같은 유형의 유틸리티가 많은 동일한 설계 패턴을 공유한다는 내용을 설명하는 기사
     * 플래그, 옵션, 로컬라이제이션 등을 위한 설정 단계, 실행 매개변수를 설정하기 위해 입력을 읽는 인수 파싱 단계, 하나 이상의 시스템 호출을 위한 입력 준비를 하는 처리/실행 단계를 포함한 대부분의 CLI 유틸리티의 기본 설계를 제공하는 기사
     * 유틸리티 초기화, Getopt를 이용한 파싱, fts를 이용한 파일 시스템 순회, 시스템 호출 래퍼 및 도우미, 공통 함수, 공통 코드 라인, C 관용구에 대한 상세한 설명을 제공하는 기사
     * 프로젝트 전체 변경, 유틸리티 특정 업데이트, 연간 유지보수를 포함한 유틸리티 유지보수에 대해 논의하는 기사
     * GNU 프로젝트 페이지 링크, 기여 가이드라인, 거부된 기능 목록 등 프로젝트에 기여하려는 사람들을 위한 정보를 제공하는 기사
     * 재미있는 사실과 유틸리티에 대한 통찰을 제공하는 트리비아와 흥미로운 구현에 대한 섹션으로 끝나는 기사

        Hacker News 의견

     * 이 기사는 거의 30년 동안 많은 사람들에 의해 수정되어 온 GNU Coreutils의 장수와 확장성에 대해 논의하고 있다.
     * 30년 동안 존재해 온 프로그램이나 30년 동안 지속될 것으로 예상되는 프로그램의 예시를 요청하는 글이 있다.
     * 댓글에서는 GNU Coreutils가 어떻게 테스트되는지, Coreutils 명령어 각각을 탐구하는 방법, 그리고 GNU Coreutils를 이용한 커맨드 라인 텍스트 처리에 대한 자료 링크를 제공한다.
     * 기사에서 발견된 오류, 특히 shred 페이지의 짧은 설명이 실제로는 csplit의 설명이라는 점에 대한 정정이 있다.
     * 일부 사용자들은 yes, shred, shuf, factor와 같은 특정 유틸리티의 존재에 놀라움과 관심을 표현한다.
     * 초보 프로그래머가 데이터 구조와 알고리즘에 대한 이해를 향상시키기 위해 연구할 유틸리티에 대한 추천을 요청한다.
     * /bin/true가 실패하고 false를 반환할 가능성에 대한 유머스러운 관찰이 있으며, 이는 ""Not /bin/false"" 호출을 더욱 견고하게 만든다.
     * 재미있는 사실로, MacOS에서 Homebrew를 통해 Coreutils를 설치하면, MacOS가 이미 od(1)을 제공하기 때문에 Coreutils의 od는 god(1)로 설치된다.
     * 한 사용자는 이 사이트의 필요성을 의문시하며, 이러한 유틸리티 각각에 대한 man(또는 info) 페이지가 존재한다고 지적한다.
"
"https://news.hada.io/topic?id=10849","우리가 만든 최고 속도의 CI, 실패하다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         우리가 만든 최고 속도의 CI, 실패하다

     * 기술 스타트업 Earthly의 여정에 대한 솔직한 반성이 담긴 블로그 포스트
     * Earthly는 노트북에서도 작동하며 자동 병렬화와 신뢰할 수 있는 빌드 재현을 제공하는 세계에서 가장 빠른 CI 시스템을 만들기 위해 노력했다.
     * 스타트업의 전략은 Earthly가 해결할 수 있는 특정 문제를 가진 팀에게 매력적인 특정 방식에서 10배 더 나은 성능을 보여, 이미 성립된 회사들과 경쟁하려는 것이었다.
     * 회사의 제품 개발은 점진적으로 진행되었으며, Earthly라는 빌드 시스템으로 시작하여 Earthly Satellites라는 원격 러너로 이동하고, 마지막으로 Earthly CI로 이어졌다.
     * Earthly CI는 모든 것을 결합하는 플랫폼으로 설계되었으며, 어디에서나 실행할 수 있는 빠른 빌드를 제공했다.
     * 성공적인 론칭과 초기 관심에도 불구하고, Earthly CI는 진전을 이루는 데 어려움을 겪었다. 이주의 비용과 노력은 잠재적 사용자들에게 중대한 장벽이었다.
     * A/B 테스팅은 회사 웹사이트에서 ""CI""라는 단어를 ""빌드""로 변경하면 주요 Call To Action (CTA) 페이지로의 전환율이 두 배로 늘어난다는 것을 밝혀냈다.
     * 회사는 Earthly CI를 폐쇄하고, 인기를 얻고 있는 Earthly와 Earthly Satellites에 집중하기로 결정했다.
     * 블로그 포스트는 Earthly와 Earthly Satellites를 계속 개선하겠다는 약속과 함께, 다가오는 기능과 개선 사항 목록으로 마무리된다.

        Hacker News 의견

     * 기사는 시장에서 가장 빠른 것으로 알려진 Earthly의 CI(Continuous Integration) 서비스의 실패에 대해 논의한다.
     * 댓글러들은 속도만을 넘어서 오픈소스 비즈니스 모델에서 독특한 판매 포인트의 중요성을 강조한다.
     * 일부 사용자들은 대부분의 현대 빌드 시스템이 캐시를 생성하고 병렬 작업을 실행할 수 있기 때문에, Earthly의 CI 서비스가 차별화와 가치 추가 부족으로 실패했다고 제안한다.
     * Earthly의 마케팅의 진실성에 대한 우려가 있으며, 20배 더 빠르다는 주장이 잠재적으로 오해를 불러일으킬 수 있다고 본다.
     * 일부 사용자들은 CI 서비스의 중단에도 불구하고 Earthly 도구의 합리적인 문법과 사용의 용이성을 칭찬한다.
     * ""빠른 CI""의 개념에 대한 의문이 제기되며, 일부 사용자들은 빌드 도구(tsc, clang, rustc 등)의 속도가 그것을 실행하는 프로그램의 속도보다 더 중요하다고 제안한다.
     * 일부 사용자들은 실패에 대한 기사의 설명에 혼란을 표현하며, 문제가 CI 설정의 마이그레이션인지 작업 실행자인지 명확하지 않다고 제안한다.
     * 소수의 사용자들은 Earthly 도구에 만족을 표현하며, 그것의 단순성과 제공하는 속도 향상을 칭찬한다.
"
"https://news.hada.io/topic?id=10828","영국 항공 교통 관제 시스템의 붕괴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          영국 항공 교통 관제 시스템의 붕괴

     * 2023년 8월 28일, 영국의 항공 교통 제어 운영자인 NATS는 중대한 기술적 결함으로 인해 2000회 이상의 비행이 취소되어 약 1억 파운드의 비용이 발생했습니다.
     * 문제는 처음에는 프랑스 항공사로부터의 결함 있는 비행 계획 때문이라고 생각되었습니다.
     * NATS는 공공-민간 기관으로, 모든 영국 항공 교통 제어를 담당하며, 항공기의 수평 및 수직 분리를 안전하게 보장합니다.
     * 이 문제는 비행 계획 시스템에 입력된 비행 계획으로 추적되었으며, 이는 Eurocontrol의 Integrated Initial Flight Plan Processing System (IFPS)에 의해 승인되었습니다.
     * 비행 계획은 그 후 NATS의 Flight Plan Reception Suite Automated (FPRSA-R) Sub-system으로 전달되어, 이 데이터를 영국 National Airspace System (NAS)과 호환되는 형식으로 변환합니다.
     * FPRSA-R 시스템은 같은 이름을 가진 두 개의 웨이포인트를 포함한 비행 계획을 처리하지 못해 시스템이 다운되었습니다.
     * 이 실패로 인해 주요 및 백업 FPRSA-R 시스템이 모두 유지 보수 모드로 전환되어 비행 계획의 자동 처리가 중단되었습니다.
     * 이 사건은 FPRSA-R 소프트웨어의 버그를 드러내어, 시스템의 향상된 테스트와 실패 모드의 필요성을 강조하였습니다.
     * 기술적 어려움에도 불구하고, 항공 교통 관제사들은 사건 동안 영국 상공의 모든 비행의 안전을 보장하였습니다.
     * 이 사건은 항공 교통 제어와 같은 안전 중심 시스템에서 공식 검증과 모델 체크의 사용에 대한 논의를 촉발하였습니다.
     * 기사는 ICAO와 ADEXP 비행 계획을 조정하는 과정을 설명하며, 이는 시작점과 종료점을 매칭하는 것을 포함합니다.
     * 조정 기능은 모든 가능한 조정을 계산하여 데이터의 모호성을 식별하고, 이러한 비행 계획을 수동 처리를 위해 플래그합니다.
     * 기사는 비행 계획의 영국 부분을 추출하는 방법에 대한 단계별 가이드를 제공합니다.
     * 시스템은 영국 부분을 찾지 못하고 계획의 끝에 도달하면 오류를 반환합니다.
     * 기사는 특정 비행 계획으로 조정 기능을 테스트하는 방법에 대한 자세한 예를 제공합니다.
     * 시스템은 런던에서 시드니까지의 158개 웨이포인트를 포함한 큰 비행 계획을 처리할 수 있으며, 거의 즉시 결과를 반환합니다.
     * 기사는 비행 계획에 중복 식별자가 있더라도 조정 기능이 ICAO와 ADEXP 데이터를 정확하게 조정하고 올바른 하위 경로를 정의할 수 있다는 것을 강조합니다.

        Hacker News 의견

     * ""지리적으로 다른"" 쿼리의 울타리에 관련된 소프트웨어 버그로 인해 영국 항공 교통 제어 시스템이 실패했습니다.
     * 시스템은 동일한 웨이포인트 이름이 경로에서 두 번 사용되어 다른 장소를 의미하는 상황을 처리하지 못했으며, 이는 소프트웨어 설계에서 예상되지 않았습니다.
     * 시스템은 '크리티컬 예외'를 만났을 때 '유지 보수 모드'로 들어가고 충돌했습니다. 백업 시스템도 동일한 버그로 인해 충돌했습니다.
     * 비행 계획을 파싱할 수 없는 경우 오류를 발생시키는 ""ValidateFlightPlan""이라는 방법의 부재와 실패한 비행 계획을 인간 검토를 위해 대기열에 넣는 기능의 부재에 대한 비판이 있습니다.
     * 이 문제는 소프트웨어 공급업체에 연락하고 저수준 로그를 검토한 후에만 확인되었습니다.
     * Eurocontrol에서 이미 수락한 프랑스 비행 계획에 대한 비난으로 보아, 소프트웨어 작동에 대한 이해 부족에 대한 우려가 있습니다.
     * 이 사건으로 인해 중대한 여행 중단이 발생했으며, 한 사용자는 평소 2시간 대신 15시간 여행을 보고했습니다.
     * 이러한 실패를 방지하기 위해 신뢰할 수 있는 소스에서의 입력이라도 소프트웨어 시스템에서 입력 데이터의 더 엄격한 검증이 필요하다는 요구가 있습니다.
     * 이 사건으로 인해 소프트웨어 공급업체인 Frequentis에 대한 잠재적인 결과에 대한 질문이 제기되었습니다.
"
"https://news.hada.io/topic?id=10802","Mozilla가 검토한 모든 자동차 브랜드: "프라이버시의 악몽이 굴러가는 상황"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Mozilla가 검토한 모든 자동차 브랜드: ""프라이버시의 악몽이 굴러가는 상황""

     * Mozilla의 최신판 'Privacy Not Included'는 포드, 폴크스바겐, 토요타를 포함한 모든 25개 주요 자동차 브랜드가 소비자 개인정보 보호에 실패했다고 보고
          + Creepy한 순(안 좋은 순)으로 나열하면: 닛산>뷰익>기아>링컨>쉬보레>현대>닷지>피아트>혼다>스바루>GMC>토요타>아우디>렉서스>지프>폭스바겐>포드>아큐라>크라이슬러>벤츠>캐딜락>BMW>르노>테슬라>Dacia
     * 자동차 브랜드들은 성적인 활동, 이민 상태, 인종, 얼굴 표정, 체중, 건강 및 유전 정보, 운전 습관 등 깊이 있는 개인 정보를 수집
     * 데이터는 센서, 마이크, 카메라, 연결된 장치, 자동차 앱, 회사 웹사이트, 딜러십, 차량 텔레매틱스를 통해 수집됨
     * 브랜드들은 이 데이터를 제3자에게 공유하거나 판매하고, 운전자의 지능, 능력, 특성, 선호도 등에 대한 추론을 개발하는 데 사용할 수 있음
     * 브랜드 중 어느 것도 Mozilla의 최소 보안 기준을 충족하지 못하며, 연구자들은 브랜드들이 차량에 저장하는 모든 개인 정보를 암호화하는지 확인할 수 없었음
     * 가장 나쁜 브랜드는 Nissan으로, 성적 활동, 건강 진단 데이터, 유전 데이터 등 다양한 정보를 수집하고, 데이터 브로커, 법 집행 기관, 기타 제3자에게 소비자 데이터를 공유하고 판매할 수 있음
     * 다른 주요 범인들로는 폴크스바겐, 토요타, 기아, 메르세데스-벤츠가 있으며, 분석가들은 2030년까지 자동차 데이터 활용이 7500억 달러 규모의 산업이 될 것으로 추정
     * 르노는 가장 문제가 적은 브랜드로, 일반 데이터 보호 규정(GDPR)을 준수해야함
     * 자동차 앱은 위치 및 생체 정보와 같은 더 많은 개인 정보를 수집하여 새로운 복잡성을 더함
     * 많은 자동차 브랜드들이 ""프라이버시 워싱""에 참여하여, 실제로는 그렇지 않으면서 소비자의 개인정보 보호를 위장
     * 개인 데이터 수집에 대한 동의는 종종 차량의 승객이 되는 것만으로 가정
     * 자동차 브랜드의 개인정보 보호 정책과 절차는 혼란스럽고, 길며, 모호하며, 일부 브랜드는 5개 이상의 다른 개인정보 보호 정책 문서를 가지고 있음
     * 자동차 브랜드들은 매우 낮은 임계치로 매우 민감한 정보를 공유하는 법 집행 기관과 정부에 개인 정보를 공유
     * 데이터 유출은 이 산업에서 흔하며, 소비자들은 개인정보에 대한 통제와 옵션을 거의 가지지 못하며, 오래된 모델을 구매하는 것 외에는 선택지가 거의 없음
     * 'Privacy Not Included'는 가격이나 성능보다 개인정보에 초점을 맞춘 구매자 가이드로, 소비자들이 개인정보를 보호하기 위해 필요한 정보를 제공하기 위해 2017년 부터 발행중

   관련 링크:
     * GN⁺: Mozilla가 실시한 개인정보 및 보안 테스트에서 인터넷 연결 자동차 실패
     * 내 차가 내 성생활 엿보고 있었다? 기아차도 걸린 '모질라 조사'

        Hacker News 의견

     * 인터넷 연결 자동차, 특히 서브루와 관련한 개인정보 보호 문제에 대한 기사
     * 이름, 위치, 오디오 녹음, 특성, 성향, 행동, 태도에 대한 추론 데이터 등 개인 정보 포함
     * 르노 전기차 판매원이 차량 구매를 위해 Google 계정을 필수 요건으로 요구한 경험 공유
     * 모질라의 최신 'Privacy Not Included (PNI)'에서 검토된 모든 25개 주요 자동차 브랜드가 소비자 개인정보 보호에서 불합격 점수 받음
     * 감시 경제의 만연성과 개인정보 보호를 위한 새로운 대응 원칙 필요성에 대한 사용자들의 우려
     * ""성생활"" 및 유전 정보와 관련된 정보의 수집 및 배포를 포함하는 개인정보 보호 정책으로 KIA가 지적됨
     * 몇몇 자동차 브랜드들은 차량의 개인정보 보호 정책에 대해 승객에게 알리는 것이 운전자의 책임이라고 주장
     * 라디오 송신기가 있는 하드웨어 제거를 제안하는 등, 이러한 개인정보 침해 기능을 비활성화하는 기술적 해결책에 관심
     * 이러한 데이터 수집의 잠재적 법적 영향에 대한 논의, 뺑소니 사건에서 이 데이터를 소환하는 가능성에 대해 추측하는 사용자 포함
"
"https://news.hada.io/topic?id=10793","Poozle - 서비스 연동을 위한 오픈소스 싱글 API","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Poozle - 서비스 연동을 위한 오픈소스 싱글 API

     * Github, Jira, Notion, Confluence, Gmail 등을 하나의 API로 연동
     * 사용자 인증 관리 및 양방향 데이터 동기화
     * 자동 Rate-Limit 및 Retry
     * 페이지네이션
     * 웹훅 및 내장 모니터링 지원 예정
"
"https://news.hada.io/topic?id=10764","Storm-0558 키 획득을 위한 기술 조사 결과","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Storm-0558 키 획득을 위한 기술 조사 결과

     * 기사는 중국 기반 위협 요소인 Storm-0558이 어떻게 Microsoft 계정(MSA) 소비자 키를 획득하여 토큰을 위조하고 OWA와 Outlook.com에 접근했는지에 대한 Microsoft의 기술 조사 결과를 논의합니다.
     * Microsoft는 직원 접근을 제어하는 고도로 안전하고 고립된 생산 환경을 유지하며, 이에는 배경 검사, 전용 계정, 안전한 접근 워크스테이션, 하드웨어 토큰 장치를 사용한 다중 인증이 포함됩니다.
     * 2021년 4월에 시스템 충돌이 발생하여 충돌 프로세스의 스냅샷이 생성되었고, 이는 경쟁 조건으로 인해 서명 키를 포함하게 되었습니다. 이 문제는 이후에 수정되었습니다.
     * 키 물질을 포함하지 않는다고 생각되었던 충돌 덤프는 표준 디버깅 프로세스에 따라 고립된 생산 네트워크에서 인터넷 연결 기업 네트워크의 디버깅 환경으로 이동되었습니다.
     * Storm-0558 요소는 키가 포함된 충돌 덤프가 있는 디버깅 환경에 접근할 수 있는 Microsoft 엔지니어의 기업 계정을 탈취할 수 있었습니다.
     * 소비자 키는 2018년 9월에 도입된 공통 키 메타데이터 발행 엔드포인트로 인해 기업 메일에 접근할 수 있었습니다. 이는 소비자와 기업 애플리케이션 모두와 작업하는 애플리케이션을 지원하기 위함이었습니다.
     * 메일 시스템의 개발자들은 라이브러리가 완전한 검증을 수행한다고 잘못 가정하고 필요한 발행자/범위 검증을 추가하지 않았으므로, 메일 시스템은 소비자 키로 서명된 보안 토큰을 사용한 기업 이메일 요청을 수락했습니다. 이 문제는 수정되었습니다.
     * Microsoft는 깊이 있는 방어 전략의 일환으로 시스템을 지속적으로 강화하고 있습니다. 이러한 발견에 특화된 개선 사항에는 충돌 덤프에 서명 키가 포함되도록 허용한 경쟁 조건 해결, 충돌 덤프에 잘못 포함된 키 물질에 대한 예방, 탐지 및 대응 강화, 디버깅 환경에서 서명 키의 존재를 더 잘 탐지하기 위한 자격증명 스캔 강화, 인증 라이브러리에서 키 범위 검증을 자동화하는 강화된 라이브러리 출시가 포함됩니다.

        Hacker News 의견

     * Storm-0558 키 획득의 치명적 실패에 대한 기사
     * 드문 경쟁 상태로 인한 예상치 못한 결과로 인한 실패
     * 손상된 키는 오래되었고 소비자 이메일 계정에만 접근 권한을 부여했어야 했지만, 버그로 인해 기업 이메일 계정에도 허용됨
     * 공격자가 Microsoft의 내부 인프라에 대한 깊은 이해를 가지고 있었다는 기사의 제안
     * 인증 정보가 탐지 및 공개 전 2년 이상 침해되었다는 의심이 있는 침해의 타임라인에 대한 우려
     * 위조된 토큰의 수와 접근한 데이터의 범위는 공개되지 않아, 침해의 심각성에 대한 의문을 제기
     * 이러한 침해를 방지하기 위한 자주 키 회전의 필요성을 강조하는 기사
     * 키가 복구 불가능한 하드웨어에 저장되지 않았으며, 일반 서버 프로세스에서 사용 가능했다는 것은 잠재적인 보안 결함을 시사
     * 키 자료 유출을 방지하기 위한 하드웨어 보안 모듈(HSMs) 사용의 부재에 대한 비판
     * Microsoft의 접근 토큰 유효성 검사 섹션에서 발행자의 날짜 또는 철회 확인에 대한 언급이 없다는 기사의 지적
     * 침해 중에 이중 인증 또는 기타 추가 인증 방법이 우회되었는지에 대한 불확실성
     * 공격 중에 이메일이 추출된 알려진 덤프가 있었는지에 대한 질문으로 기사가 끝남
"
"https://news.hada.io/topic?id=10810","iPadOS 17에서 Game Boy 카메라를 이용한 Facetime 비디오 통화 사용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            iPadOS 17에서 Game Boy 카메라를 이용한 Facetime 비디오 통화 사용

     * 게임 보이 카메라를 이용한 혁신적인 FaceTime 비디오 통화에 대한 기사
     * 저자는 고풍스러운 게임 보이 카메라를 최신 iPadOS 17과 성공적으로 통합, 오래된 기술과 새로운 기술의 독특한 조합을 보여줌
     * 이 실험은 게임 보이 카메라와 같은 비정상적인 하드웨어조차 지원할 수 있는 Apple의 iPadOS 17의 다양성과 적응성을 보여줌
     * 저자는 이 경험을 '찬란하다'고 표현, 긍정적이고 즐거운 사용자 경험을 나타냄
     * 이 기사는 향수와 현대 기술을 결합하여 독특하고 흥미로운 기술 실험을 만드는 특별함을 가지고 있음
     * 기술에 능통한 독자들은 이 기사가 현대적인 맥락에서 구식 기술의 창의적인 사용으로 인해 흥미롭게 느낄 수 있음
     * 이 기사는 새로운 릴리스나 업데이트에 대해 언급하지 않지만, 기존의 iPadOS 17의 능력을 강조함
     * 이 실험은 다른 기술 애호가들이 레트로 기술과의 유사한 통합을 탐구하도록 영감을 줄 수 있음

        Hacker News 의견

     * 90년대 후반에 출시된 Game Boy 카메라는 흑백 제한에도 불구하고 많은 사람들에게 첫 디지털 카메라로서 중요한 기술이었습니다.
     * 카메라의 소프트웨어는 정지 캡처 애니메이션을 쉽게 만들 수 있게 해주었고, Game Boy 프린터는 사용자들이 정지 이미지 스티커를 인쇄할 수 있게 해주었습니다.
     * 일부 사용자들은 중고 SNES, Super Gameboy, Gameboy 카메라와 저렴한 컴포지트를 USB ADC로 사용하여 Game Boy 카메라 경험을 복제하는 더 저렴한 대안을 찾았습니다.
     * Epilogue라는 회사가 Operator라는 USB 장치를 만들어 사용자들이 카트에 있는 사진을 픽셀 완벽한 png로 덤프할 수 있게 해주어, 일부 사람들은 여전히 Gameboy 카메라를 사진 촬영에 사용하고 있습니다.
     * iPhone 15에 USB-C가 도입되면 iOS 17에서 UVC 카메라 지원이 가능해져, 아이폰을 적절한 디지털 카메라의 휴대용 카메라 모니터/기본 레코더로 사용할 수 있을 것으로 기대되고 있습니다.
     * 저자 Federico Viticci는 iPadOS 17에서 Facetime 비디오 통화를 위해 Game Boy 카메라를 사용했습니다.
     * 일부 사용자들은 일반 웹캠으로 Game Boy 카메라의 효과를 재현하는 소프트웨어 비디오 필터를 만드는 데 관심을 표현했습니다.
     * Apple의 표준 구현은 대부분의 표준을 따르는 물건이 작동하도록 허용했지만, 일부 사용자들은 이를 별로 흥미롭지 않게 느낍니다.
     * Game Boy 프린터를 작동시키는 방법을 찾는 데도 관심이 있습니다.
"
"https://news.hada.io/topic?id=10826","새로운 JFK 암살 관련 정보가 외로운 총잡이 이론을 뒤집을 수 있음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 새로운 JFK 암살 관련 정보가 외로운 총잡이 이론을 뒤집을 수 있음

     * 전직 비밀 경호원인 Paul Landis가 쓴 새 책에 대한 기사, 그는 존 F. 케네디 대통령 암살 당시 현장에 있었다.
     * Landis는 케네디 대통령의 리무진에서 총알을 발견했다고 주장, 이는 JFK 암살의 ""외로운 총잡이"" 이론에 도전할 수 있다.
     * 총알은 대체로 완전하고 중간 정도로 손상되었는데, 이는 워렌 위원회가 제안한 ""단일 총알"" 이론에 의문을 제기한다.
     * Landis의 설명은 총알이 JFK의 등에 표면적으로 박혀 있었을 수 있으며, 머리에 맞은 최종 총알에 의해 튕겨져 나왔을 수 있다고 제안한다.
     * 이는 워렌 위원회의 조사 결과인 총알이 케네디의 목 앞쪽을 통과했다는 것과 상충한다.
     * 정확하다면, Landis의 설명은 두 번째 총잡이의 가능성을 제기하며, FBI의 재현은 이를 빠르게 두 번 쏜 리 하비 오스왈드가 충분한 시간이 없었을 것이라고 제안한다.
     * Landis는 슬픔, 충격, 그리고 케네디 가족의 안전에 대한 책임감 때문에 60년 동안 이 정보를 혼자 가지고 있었다.
     * 그는 발견한 총알이 커널리 주지사의 구급침대에서 나왔다고 생각되는 것을 깨닫고 그의 이야기를 공유하기로 결정했다.
     * 잠재적인 논란에도 불구하고, Landis의 공개는 ""마법의 총알"" 이론의 재평가를 촉발하고 케네디 암살에 대한 새로운 관점을 제공할 수 있다.
     * 기사는 또한 암살 전날 밤 Landis의 행동에 대한 비판, 과도한 음주의 혐의를 다룬다.
     * 그러나, 이것이 암살 당일 경호원들의 반응 시간이나 의사 결정에 영향을 미쳤다는 증거는 거의 없다고 주장한다.
     * 기사는 Landis가 그의 사건 버전을 제시한 것을 칭찬하며, 이것이 역사 이해에 기여할 것이라고 제안하며 마무리한다.

        Hacker News 의견

     * JFK 암살에 대한 새로운 계시가 외톨이 총잡이 이론에 도전할 수 있다는 기사.
     * 사용자가 암살에 대한 광범위한 비디오 링크를 공유하며, 이를 논리적이고 직설적이라고 설명.
     * 새로운 계시는 총알이 JFK에 박히지 않고 차의 뒷좌석에서 발견되었다는 것으로, 이는 소동 중에 떨어진 것이 아니라는 것을 제안.
     * 또 다른 사용자가 ""Case Closed""라는 책을 추천하며, 이는 Oswald가 혼자 행동했다는 공식적인 이야기가 거의 확실히 맞다고 주장.
     * 기사는 새로운 계시가 Josiah Thompson의 ""Six Seconds in Dallas""를 읽은 후 나왔다고 제안. Thompson의 후속작 ""Last Seconds in Dallas""는 오디오 분석에 기반하여 두 명의 총잡이가 있었다고 결론.
     * 암살에 대한 하원 특별위원회도 댈러스 경찰 라디오 녹음의 음향 분석에 기반하여 두 명의 총잡이가 있을 확률이 높다고 결론.
     * 한 사용자는 JFK 암살 사건의 일부가 아직도 ""국가 안보와 외교 문제""로 인해 60년 후에도 공개되지 않는 것이 흥미롭다고 발견.
     * 사용자가 댈러스의 전 도서 저장소에서 박물관을 방문한 경험을 공유하며, Oswald의 창문에서의 전망이 외톨이 총잡이 이론을 더욱 그럴듯하게 만들었다고 주장.
     * 또 다른 사용자는 CIA가 JFK를 암살하려 했다면, 성공 확률이 더 높은 방법을 사용했을 것이라고 주장.
     * 사용자가 계시의 타이밍에 대해 논평하며, 이는 책을 판매하기에 편리하다고 제안.
"
"https://news.hada.io/topic?id=10881","PostgreostgreSQL 16

     * PostgreSQL 16은 쿼리 병렬성, 대량 데이터 로딩 및 논리적 복제가 눈에 띄게 개선되어 성능을 향상
     * 더 많은 SQL/JSON 문법, 작업 부하를 위한 새로운 모니터링 통계, 그리고 접근 제어 규칙을 정의하는 데 더 큰 유연성을 도입

성능 개선

     * 쿼리 플래너가 이제 FULL 및 RIGHT 조인을 병렬화하고, DISTINCT 또는 ORDER BY 절을 사용하는 쿼리에 대해 더 최적화된 계획을 생성하며, SELECT DISTINCT 쿼리에 증분 정렬을 활용하고, 윈도우 함수를 최적화
     * 단일 및 동시 작업에서 COPY를 사용한 벌크 로딩이 개선되었으며, 일부 경우에서는 성능이 최대 300% 향상
     * x86 및 ARM 아키텍처에서 SIMD를 사용한 CPU 가속을 도입하여 ASCII 및 JSON 문자열 처리, 배열 및 하위 트랜잭션 검색 시 성능 향상

논리적 복제

     * 이제 대기(Standby) 인스턴스에서 논리적 복제를 수행할 수 있게 되어 새로운 작업 분배 옵션이 가능해짐
          + 바쁜 프라이머리 대신 스탠바이를 이용하여 변경 사항을 다운스트림에 복제
     * 논리 복제 성능도 향상
          + Subscriber가 병렬 워커를 이용하여 대규모 트랜잭션 적용 가능
          + 프라이머리 키가 없는 테이블의 경우, 순차스캔 대신 B-트리 인덱스를 사용하여 Row 찾기 가능
          + 특정 조건에서는 바이너리 형식을 사용하여 초기 테이블 동기화 속도 향상 가능

개발자 경험

     * SQL/JSON 표준에서 더 많은 구문을 추가하며, JSON_ARRAY(), JSON_ARRAYAGG(), IS JSON 등의 생성자와 Predicate를 포함
     * 천단위 숫자로 언더스코어 사용 가능 (5_432_000)
     * psql 에 \bind 가 추가되어 매개변수를 포함한 쿼리를 작성하고 변수로 치환 가능
     * 텍스트 정렬에 대한 지원 개선

모니터링

     * I/O 액세스 패턴을 세밀하게 분석가능한 메트릭을 제공하는 pg_stat_io 추가
     * pg_stat_all_tables 뷰에 테이블이나 인덱스가 마지막으로 스캔된 시간을 기록하는 타임스탬프 필드를 추가
     * 매개변수화된 명령문에 전달된 값을 로깅하여 auto_explain을 더 읽기 쉽게

접근 제어 및 보안

     * 접근 제어에 대한 더 세밀한 옵션을 제공
     * pg_hba.conf 및 pg_ident.conf 파일의 관리, 그리고 여러 보안 지향 클라이언트 연결 매개변수의 추가를 포함한 다른 보안 기능을 향상

        Hacker News 의견

     * PostgreSQL 16의 출시는 수십년에 걸친 대규모 오픈소스 프로젝트를 유지하는 데 들어가는 무급 노동과 생각의 양 때문에 달 착륙 같은 중요한 성과로 비교되고 있다.
     * 댓글 작성자는 PostgreSQL 팀을 칭찬하고, 다리와 도로와 같은 물리적 인프라에 비교하여 소프트웨어 인프라의 중요성을 강조한다.
     * PostgreSQL 16은 새로운 기능인 \bind를 도입했는데, 이는 애플리케이션이 하는 것과 동일한 매개변수화된 쿼리를 실행할 수 있게 해줘서 인기를 얻고 있다.
     * SQL/JSON 생성자와 식별 함수의 추가는 PostgreSQL 16에서의 생활 품질 개선으로 간주된다.
     * 현재 debug_io_direct 설정 뒤에 있는 직접 I/O 기능에 대한 기대감이 있다.
     * 데이터베이스 성능을 최적화하는 데 사용되는 ""vacuum"" 기능에 대한 개선 사항에 대한 질문이 있다.
     * 향후 릴리스에 대해 기본적으로 투명한 암호화가 고려되고 있는지에 대한 질문이 있다.
     * 사용자는 새로운 릴리스에 대한 흥분을 표현하지만, 최신 Debian에 PostgreSQL 15를 설치했으며, 자신에게 유용할 수 있는 새로운 기능에 대해 연구해야 할 수도 있다고 언급한다.
"
"https://news.hada.io/topic?id=10866","ExLlamaV2: 일반 GPU에서 로컬 LLMs를 실행하기 위한 빠른 추론 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ExLlamaV2: 일반 GPU에서 로컬 LLMs를 실행하기 위한 빠른 추론 라이브러리

     * 3090/4090 같은 GPU에서 로컬 LLM을 실행하도록 설계된 추론 라이브러리
     * 초기 릴리즈이며 코드는 아직 테스트 단계에 있으며, 일부 주요 기능은 아직 구현되지 않음
     * V1에 비해 ExLlamaV2는 더 빠르고 더 나은 커널, 더 깔끔하고 다양한 코드베이스, 그리고 새로운 양자 형식을 지원
     * CUDA 함수에 대해 Torch C++ 확장에 의존하며, 이는 런타임에 컴파일됨. 라이브러리가 처음 사용될 때는 10-20초가 걸리지만, 확장은 이후 사용을 위해 캐시됨
     * V1과 동일한 4비트 GPTQ 모델을 지원하지만, 모델 내에서 양자화 수준을 혼합하여 2비트에서 8비트 사이의 평균 비트율을 달성할 수 있는 새로운 ""EXL2"" 형식도 지원
     * 양자화에 대한 매개변수 선택은 자동으로 이루어지며, 모델을 양자화하기 위한 스크립트가 제공
     * 또한 몇 가지 EXL2-양자화된 모델이 HuggingFace에 업로드되어 사용자들이 실험해 볼 수 있다고 언급
     * 미래 계획에는 미리 빌드된 확장 기능이 있는 PyPi 패키지, LoRA 지원, 예제 웹 UI, 웹 서버, 그리고 더 많은 샘플러가 포함

        Hacker News 의견

     * 기사는 소비자용 GPU에서 언어 모델(LLMs)을 실행할 수 있게 해주는 새로운 추론 라이브러리인 Exllamav2에 대해 논의합니다.
     * 이것은 대형 LLMs가 소비자용 GPU에서 경쟁력 있는 속도로 실행될 수 있는 첫 번째 시기로, GPT-3.5-turbo 또는 GPT-4를 능가할 가능성이 있습니다.
     * 라이브러리는 매개변수를 조정하면서 혼란을 최소화하기 위해 다른 계층이나 모듈을 양자화하는 독특한 방법을 사용합니다.
     * 3090과 4090과 같은 다른 GPU의 성능을 비교하고, 그들이 어떻게 다른 모델을 처리하는지에 대한 관심이 있습니다.
     * 기사는 또한 초기 단계의 ROCm 지원 추가를 언급하며, RTX4090/3090이 7900 시리즈와 어떻게 비교될지에 대한 호기심을 불러일으킵니다.
     * 독자들은 속도 비교와 대형 모델이 최고급 Nvidia 카드와 같은 고급 하드웨어에서 어떻게 작동하는지에 관심이 있습니다.
     * 메모리에서 실행을 위해 여러 카드가 필요한 모델의 성능에 대한 질문이 있습니다.
     * 기사는 ""Local LLaMA""이라는 서브레딧에서 릴리스에 대한 토론을 촉발했습니다.
     * 독자들은 모델을 단일 비트 폭으로 축소하는 효과와 그들이 여전히 기능하거나 횡설수설을 만들어내는지에 대해 궁금해합니다.
     * ELX2의 비용과 혼란 벤치마크에 대한 질문이 있으며, Facebook이 llama v2를 65B가 아닌 70B로 만든 것에 대한 일부 불만이 있습니다.
     * 독자들은 EXL2/GPTQ 양자화에 대한 더 많은 정보를 찾고 있으며, 이것이 이 모델에서 속도 향상의 주요 원인으로 보입니다.
     * ""70B Llama 2""와 ChatGPT 3.5/4.0 사이에 비교가 이루어지고 있으며, 그들의 상대적 성능에 대한 질문이 있습니다.
"
"https://news.hada.io/topic?id=10869","Google Fonts 웹사이트의 새 디자인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Google Fonts 웹사이트의 새 디자인

     * 지난 10년간 1500개의 폰트 패밀리, 100개의 언어, 6000개의 Material Symbol 을 커버
     * 사용자 경험을 개선하기 위해 여러 부분을 업데이트
          + 더 나은 사이트 네비게이션 : Material 3 Navigation Rail 을 도입
          + 모바일 경험 향상 : 하단 네비게이션 바
          + 검색과 필터링 : 새로운 사이드바를 통해서 미리 보기 및 필터링 조정
          + 새로운 컬러 팔레트와 다크 모드
"
"https://news.hada.io/topic?id=10804","FTC 판사, Intuit의 '무료' TurboTax 광고가 소비자를 현혹시켰다고 판결","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            FTC 판사, Intuit의 '무료' TurboTax 광고가 소비자를 현혹시켰다고 판결

     * 연방거래위원회(FTC)의 최고 행정법관이 TurboTax의 모회사인 Intuit이 '무료' TurboTax 광고로 소비자를 기만했다고 판결.
     * FTC는 Intuit이 세금 신고 서비스를 무료로 홍보하면서 소비자를 ""속였다""고 밝혔으며, 실제로는 사용자들이 결제해야 했다.
     * 이 판결에는 Intuit이 ""Free Edition"" 소프트웨어를 광고한 여러 광고와 온라인 광고의 증거가 포함되어 있다.
     * FTC의 소송으로 인해 피해를 입은 사용자들에게 1억 4100만 달러가 지급되었다.
     * IRS와의 파트너십으로 출시된 Intuit의 진정한 무료 세금 신고 서비스인 Free File 버전은 사용자들이 찾기 어려웠다.
     * 2021년에는 IRS가 회사들이 무료 신고 서비스를 검색 엔진에서 숨기는 것을 허용하지 않자 Intuit이 Free File 프로그램을 떠났다.
     * FTC의 판결에는 Intuit에 대한 중지 및 금지 명령이 포함되어 있어, 회사가 앞으로 기만적인 행위를 하지 못하도록 금지하고 있다.
     * 또한 판결에는 Intuit이 제품을 무료로 표시할 수 있는 경우는 모두가 사용할 수 있고, ""제한적인 조건을 명확하고 눈에 띄게 공개""하는 경우에만 가능하다고 명시되어 있다.
     * Intuit은 FTC의 판결에 대해 반응하였으며, 이 기관의 조사 과정을 ""결함이 있고 매우 의심스럽다""고 지적하며, FTC의 결정에 명시된 대부분의 광고 관행을 이미 준수하고 있다고 주장하였다.
     * 현재 IRS는 정부 지원의 무료 신고 서비스를 개발 중이며, 2024년 세금 시즌 동안 시범 운영할 계획이다.

        Hacker News 의견

     * FTC 판사, Intuit의 '무료' TurboTax 광고가 소비자를 현혹시켰다고 판결
     * Intuit, 사람들을 속여 필요 없는 제품을 구매하게 하는 어두운 UI 패턴 사용으로 유죄 판결
     * 사용자들, 속임수적인 화면과 마케팅 이메일로 인해 불필요한 서비스에 거의 지불하게 됐다고 보고
     * 일부 사용자들, Intuit의 오해를 불러일으키는 행동 때문에 FreeTaxUSA와 Cash App Taxes와 같은 다른 세금 서비스로 전환
     * 미국인들의 세금 신고 과정을 단순화하기 위한 세액공제 양식 사전 작성 구현 요구
     * 판결에도 불구하고 Intuit의 주식은 약간만 하락
     * Intuit의 Credit Karma 인수 언급, 그러나 그들은 무료 세금 신고 옵션에서 철수해야 했음
     * Intuit의 서비스에 대한 오픈소스 대안 부족에 대한 궁금증, 시장 혼란의 잠재력을 제안
     * Intuit의 TurboTax 관련 행동, 어두운 패턴의 사례 연구로 언급
"
"https://news.hada.io/topic?id=10786","터치 피아니스트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                터치 피아니스트

     * 'Touch Pianist'라는 제품에 대한 기사, Android와 iOS 플랫폼 모두에서 사용 가능한 음악 애플리케이션
     * 메뉴의 'More Pieces!' 옵션을 통해 사용자가 선택할 수 있는 다양한 음악 작품을 제공하는 앱
     * 'Touch Expression' 기능으로 독특한 'Touch Pianist', 사용자가 음악과 보다 몰입하여 상호작용할 수 있게 함
     * 무료로 다운로드하고 사용할 수 있는 앱, 다양한 사용자에게 접근성을 제공
     * 앱의 제작자나 사용자가 마주칠 수 있는 잠재적 문제에 대한 정보를 제공하지 않는 기사
     * 'Press Kit' 옵션은 앱이 기술 및 음악 산업의 미디어 아웃렛이나 인플루언서에게 관심을 끌 수 있음을 제안

        Hacker News 의견

     * 'Touch Pianist'에 대한 기사, 약 8년 동안 사용자들이 화면을 탭하여 클래식 음악을 연주할 수 있게 해준 도구
     * 사용자들은 이 도구가 곡의 분위기를 만드는데 있어 템포와 레가토의 중요성을 보여주는 능력을 칭찬함
     * 일부 사용자들은 JavaScript를 사용하여 가능한 한 빠르게 노래를 연주해 보려는 시도를 함
     * 사용자들은 Beethoven의 Moonlight Sonata를 이 도구로 연주해 보는 것을 권장하며, 그 경험을 설레는 것으로 묘사함
     * 이 도구는 혁신적인 접근 방식에 대해 칭찬 받았으며, 터치에 따른 다이나믹스의 변화와 힘을 가한 터치 스크린의 포함 등 미래의 개선을 위한 제안이 있음
     * 일부 사용자들은 최신 iPhone에서 도구와 관련된 문제를 보고했지만, 다른 사용자들은 휴대폰을 탭하는 위치에 따라 크고 작음을 조절하는 방법을 찾았음
     * 사용자들은 악보 읽기 학습 도구로 사용될 수 있다는 제안과 함께 음악 학습에 대한 개인적 경험을 공유함
     * 이 도구에 더 많은 곡을 포함하고 Chrome의 메뉴 버튼과 관련된 문제를 해결하라는 제안이 있음
     * 일부 사용자들은 도구의 다이나믹 범위 부족을 비판하고 왼손과 오른손에 대한 별도의 리듬과 지속 페달과 같은 기능의 포함을 제안함
"
"https://news.hada.io/topic?id=10839","Show GN: ChatGPT의 외장 메모리 - Tilnote ChatGPT 플러그인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Show GN: ChatGPT의 외장 메모리 - Tilnote ChatGPT 플러그인

     * 내 노트나 파일을 기반으로 검색/질문할 수 있는 ChatGPT 플러그인
     * 플러그인 스토어에서 tilnote 로 검색하면 찾을 수 있음.
     * 틸노트에서 노트를 작성하거나 파일을 올리고 ChatGPT에서 활용할 수 있음.
     * 파일은 pdf, pptx, word, txt, md 등 다양하게 지원.
     * 과거의 나와 대화 하는 방식으로 사용하거나 현재 필요한 정보를 노트에 올려서 질문할 때 편하게 사용할 수 있음.
     * 예: 마케팅을 어떻게 해야 할까? 틸노트를 사용해서 설명해줘.
       예2: (코딩 관련 문서를 올린 뒤) 여기에서 localization을 적용하려면 어떻게 해야 하지? https://tilnote.io/pages/64f846a15795687a8b48ec70 를 사용해서 설명해줘.
"
"https://news.hada.io/topic?id=10882","모바일 앱들이 불법적으로 개인 데이터를 공유하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     모바일 앱들이 불법적으로 개인 데이터를 공유하는 방법

     * 프랑스 최대 전자상가 Fnac, 부동산 앱 SeLoger, Under Armour 자회사인 MyFitnessPal이 사용자 개인 정보를 불법적으로 접근하고 공유한 혐의를 받고 있다.
     * 이러한 불만은 개인 정보 보호에 중점을 둔 유럽 비영리 단체인 noyb가 제기했다.
     * 혐의를 받는 앱들은 사용자의 동의 없이 앱을 열자마자 데이터를 수집하고 공유하기 시작한다고 보고되었다.
     * 수집된 데이터에는 Google의 고유 광고 ID(AdID), 기기의 모델과 브랜드, 그리고 로컬 IP 주소가 포함되어 있으며, 이들은 제3자와 공유된다.
     * 이런 광범위한 데이터 수집은 사용자의 프로필링을 가능하게 하여 개인화된 광고와 마케팅 캠페인을 보여주며, 회사의 수익을 증가시킨다.
     * ePrivacy 지침에 따르면, 사용자의 기기에 데이터를 접근하거나 저장하는 것은 사용자가 자유롭고, 명확하며, 구체적이고, 모호하지 않은 동의를 할 때만 허용된다. 그러나 세 앱 중 두 앱은 실행 시 동의 배너를 표시하지 않았다.
     * 세 번째 앱은 동의 배너를 제시했지만, 개인 데이터의 전송은 사용자의 상호작용 없이 시작되었다.
     * AdID는 고유하며 특정 사람의 기기에 연결되어 있어, 광고주와 다른 제3자가 대상 사용자를 선별하기 위해 사용할 수 있다.
     * 일부 앱 제공자들은 심지어 앱 외부에서 사용자 행동을 추적하여, 수집된 데이터에 사용자의 생활에 대한 더 많은 정보를 더한다.
     * 이 문제는 모바일 앱 환경에서 더 넓은 문제를 반영하며, 많은 앱들이 EU 개인 정보 보호법을 준수하지 않는다.
     * 연구에 따르면, 모든 앱 중 3.5%만이 사용자에게 동의를 거부할 실제 선택권을 제공했다.
     * noyb는 CNIL(프랑스 데이터 보호 당국)에게 혐의를 받는 앱들에게 불법적으로 처리된 모든 데이터를 삭제하고 벌금을 부과하도록 요청했다.
     * 네트워크 트래픽 캡처와 분석은 Defensive Lab Agency가 개발한 PiRogue Tool Suite를 사용하여 수행되었다.
     * noyb는 앞으로도 모바일 앱 회사들에 대한 더 많은 불만을 제기할 계획이며, 사용자 데이터의 불법 공유를 막기 위해 노력할 것이다.

        Hacker News 의견

     * 모바일 앱에 의한 개인 데이터 불법 공유 문제, 일부 앱은 사용자 동의 배너조차 제공하지 않음
     * 한 사용자는 광고 없이 작동하도록 선택한 위젯이 사용자의 휴대폰을 프록시 네트워크의 일부로 만들고 동의 없이 위치 데이터를 전송한 경험을 강조
     * 앱이 사용자 동의 없이 데이터에 접근할 수 있는 이유에 대한 논의, 기술이 사용자가 아닌 문제라는 주장
     * 설치된 앱이 모든 데이터를 수집하는 것을 실제로 막는 것이 없다는 점이 지적되며, Progressive Web Apps는 브라우저 샌드박스에 의해 제한되어 프라이버시 관점에서 선호되는 해결책
     * 비영리 단체 noyb가 개인정보 보호법 집행에서의 업무를 칭찬하며, 사용자가 개인 데이터를 남용하는 회사에 대한 그들의 미래 행동을 지지하도록 권장
     * 디지털 프라이버시 옹호자들의 지속적인 투쟁이 논의되며, 정부의 미흡한 조치가 비판됨
     * 타겟 광고에 대한 논의, 한 사용자는 사용자가 그들의 행동에 대한 권한이 있다면 이것이 윈-윈 상황이 될 수 있다고 제안
     * 개인정보 보호법이 있음에도 불구하고 이러한 규칙이 종종 위반된다는 점이 지적되며, 주요 웹사이트와 앱의 적극적인 검사가 문제 해결에 도움이 될 수 있다는 제안
     * 자동차와 같은 중요 인프라에서의 개인정보 보호 문제 증가가 더 많은 주의가 필요한 영역으로 강조됨
     * 사용자 데이터를 단지 클라이언트를 위해 처리하는 제3자 회사와 그것을 자신들의 목적으로 사용하는 회사 간의 차이에 대한 논의
     * 데이터를 남용하는 조직을 기소하는 데 법적 논쟁에 초점을 맞추는 것이 문제라는 주장, 한 사용자는 사람들이 그들의 데이터가 어떻게 사용되는지 이해하는지에 초점을 맞춰야 한다고 제안
"
"https://news.hada.io/topic?id=10783","비영리인 작은 웹 사이트를 위한 탐색 기능인 Kagi Small Web이 출시했습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            비영리인 작은 웹 사이트를 위한 탐색 기능인 Kagi Small Web이 출시했습니다.

     * 검색엔진을 제공하는 Kagi는 작은 웹 사이트를 탐색하고 홍보하는 Kagi Small Web을 출시함.
          + 작은 웹 사이트는 주로 자신을 표현하거나, 정보를 공유하기 위해 비영리 목적으로 개인이 만든 사이트를 의미함.
          + 개인이 운영하는 블로그 등이 주요 대상.
     * 이는 HN에서 시작된 개인 블로그 공유에 영감을 받았으며, 이제 엄선된 품질의 비영리 웹사이트가 8천여 개가량 포함되어 있음.
     * 이러한 웹 사이트들은 Kagi의 검색 인덱스에 통합되어 결과로 노출되고 있으며, 검색한 내용에 대한 다양한 관점을 제공해 줌.
          + 잘 알려지지 않은 고품질의 웹사이트가 검색 품질을 높인다고 생각함.
     * 이러한 작은 웹 사이트들의 새로운 콘텐츠를 보여주는 플랫폼인 Kagi Small Web Website도 같이 출시함.
     * 모든 소스 코드와 사이트 리스트는 Github 저장소에 있으며, 누구나 병합 요청이 가능함.
          + 단, 리스트에 포함되기 위해서는 콘텐츠가 영어로 제공되어야 하며 최소 3년 이상 지난 게시글이 있어야 하는 등 몇 가지 조건이 있음.
     * 유사한 기능으로 작은 Youtube 채널의 신규 동영상을 보여주는 실험적인 사이트도 있음.
     * 작은 웹 사이트를 모은 RSS 피드가 있으며, Kagi API와 통합됨.
     * 이러한 시도로 창의성, 자기표현, 의미 있는 콘텐츠가 가득한 인간적인 웹을 만들기 위해 노력하고 있음.

     * HN 스레드
     * HN 개인 블로그 공유 스레드

   정말 좋은 시도 같습니다.

   진짜 광고만 가득한 무의미한 크롤링 사이트, AI로 작성된 사이트에 지칠 정도였는데...
   사람이 공들여 가꾼 좋은 블로그와 웹 사이트를 모아서 보여준다는 게 아이디어도 좋고 결과도 좋은 것 같네요.

   Kagi 베타 때 써보고 유료 전환 이후로 구독은 안 하고 있었는데, 이젠 진짜 해야 하나 고민입니다.
   월 10달러가 그리 싼 가격은 아니라고 생각해서….

   이거보고 궁금해서 홈에 가봤는데 최소가 이제는 5$요금제 더라고요?
   저는 무료 써보고 좋으면 계속 사용할 지 결정할 수 있을 것 같네요.

   이 AI 요약도 Kagi가 제공하고 있습니다. +_+
     * 프리다이버: 코딩 오류로 인해 새로운 사이트 출시 중에 RSS 피드가 고장났다고 설명하며 개인 프로젝트에 대해 더 많은 세부 정보를 제공합니다.
     * mhitza: 이 기능이 인디 웹에 더 많은 가시성을 추가한다는 점이 좋으며, 작은 웹 내에서만 검색할 수 있는 옵션을 추가하는 것을 제안합니다.
     * skinkestek: 이미 중복될 수 있는 비상업용 웹 렌즈가 있다는 점을 언급합니다.
     * palmer_fox: Kagi가 구글보다 더 나은 결과와 더 많은 맞춤 설정 및 개인 정보 보호를 제공하는 첫 번째 검색 엔진이 되는 성과를 감사히 여깁니다.
     * Phemist: Kagi에 익숙해진 후 다른 검색 엔진을 사용하는 경험이 결과와 광고가 좋지 않아서 어색하다는 점을 언급합니다.
     * skydhash: 유튜브는 광고가 없는데, 그들의 나라에서는 VPN을 통해 광고가 있는 콘텐츠를 시청하거나 여행 중에 광고가 있는 콘텐츠를 시청하는 것이 귀찮다고 언급합니다.
     * sergiosgc: 이러한 이니셔티브를 축하하며 Kagi를 검색 엔진으로 선택한 것에 더욱 만족스러워진다고 말합니다.
     * raybb: 유튜브 채널에는 광고가 있지만 사이트에는 없을 수 있다는 점을 의문으로 제기하며, 이는 일부 인디 블로그를 배제할 수 있다고 생각합니다.
     * dharmab: Kagi의 Vlad가 브라우저 문제 해결을 돕는 데 탁월한 지원을 제공했다고 언급합니다.
     * epilys: Discord 대신 IRC를 사용하는 이유를 질문하며, Discord는 계정이 필요하고 오픈 소스 이상에 어긋난다고 생각합니다.
"
"https://news.hada.io/topic?id=10824","Bunun 1.0

   자바스크립트 런타임 도구인 Bun 1.0 이 출시되었습니다!
     * node.js 도구 호환
     * 별도로 설치해야 하는 모니터링 nodemon, 환경설정 dotenv 내장
     * babel, 타입스크립트 트랜스파일러 내장
     * jest 스타일의 단위시험 도구 내장
     * Next.js, Nuxt.js, SvelteKit, Astro 등 주요 프론트엔드를 포함해 해당 프론트엔드 기반의 풀스택 앱 구동 가능
     * 타입스크립트 및 JSX 자체 지원
     * ESM 와 CommonJS 구문 모두 지원
     * nodemon 내장을 통한 핫 리로드(--hot) 지원
     * Bun API를 통한 플러그인 지원
     * bun 명령어는 패키지 관리자로도 작동
     * 설치, 실행, 시험 모두 빠른 속도
     * 현재 Unix 계열만 지원하며, Windows 는 시험 단계.

   타입스크립트 지원을 제거한다고 하지 않았었나요? 그래서 이슈가 되었던 걸로 아는데요?

   그건 터보아닌가요?

   jsx 관련해서 표준에 어긋나는 자체적인 syntax를 정의했는데, 생태계 분열을 낳는다고 swc 개발자분이 비판하셨던 기억이 있네요..

   오 드디어 1.0이 나왔군요.
   빠르다고 홍보한 게 맞는지 진짜 한 번 써봐야겠네요.
"
"https://news.hada.io/topic?id=10803","20개의 질문으로 60개의 LLM에게 묻다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        20개의 질문으로 60개의 LLM에게 묻다

     * 20개의 질문 세트를 사용하여 60개 이상의 언어 학습 모델(Language Learning Models, LLMs)의 성능을 테스트하고, 각 LLM의 답변들을 정리
     * 이 질문들은 LLM의 기본적인 추론, 지시 사항 따르기, 창의성을 테스트하기 위해 설계됨
     * LLM으로부터의 응답은 SQLite 데이터베이스에 저장
     * 질문은 간단한 산수 문제부터 고등학생에게 양자장 이론을 설명하는 등 더 복잡한 작업에 이르기까지 다양
     * 이 스크립트에는 문장 번역, 코드에서 버그 식별, Python 함수 생성 등 LLMs가 수행해야 하는 작업도 포함
     * 저자는 OpenRouter, TogetherAI, OpenAI, Cohere, Aleph Alpha & AI21의 API를 사용하여 스크립트를 실행
          + 각 모델에 맞게 최적화된 스톱 시퀀스와 프롬프트 포맷을 사용하여 스크립트를 개선할 계획
          + 미래의 아이디어로는 공개 투표를 통한 ELO 등급 계산, 두 모델을 나란히 비교, 커뮤니티에서 제출한 프롬프트 등

        Hacker News 의견

     * 다양한 언어 학습 모델(Language Learning Models, LLMs)에 대한 벤치마크를 실행하는 일반적인 하네스를 사용자가 만들어, 다른 사람들이 자신의 데이터로 모델을 테스트하도록 권장. 이 라이브러리는 OpenAI, Anthropic, Google, Llama, Codellama, Replicate, Ollama의 모델을 지원.
     * Vercel의 AI Playground는 여러 LLMs에 동시에 질문을 할 수 있는 유용한 도구로 강조되지만, 현재 24개만 지원하며 60개는 아님.
     * 기사의 LLMs 벤치마킹 방식은 시험 통과와 같은 전통적인 방법보다 현실적이라는 찬사를 받음. 그러나 질문이 훈련 세트의 일부가 되어 결과를 왜곡할 가능성에 대한 우려가 제기됨.
     * 가족 관계에 대한 질문에 대한 LLMs의 응답에서 차이가 발견되었으며, 한 사용자는 기사가 모든 LLMs가 틀렸다고 주장한 질문에 GPT4가 정확하게 답했다고 보고함.
     * Falcon Instruct (40B)는 휴가에 대한 농담으로 ""가장 웃긴 모델""로 재미있게 강조됨.
     * ""TheoremQA: 정리 기반 [STEM] 질문 응답 데이터셋"" 및 ""Awesome-legal-nlp""을 포함한 LLMs에 대한 추가 벤치마크가 제안됨.
     * ChatGPT 3.5는 장황한 응답에 대해 비판을 받으며, 한 사용자는 종종 불필요하게 긴 설명을 제공한다고 지적함.
     * AI의 진보에 대해 감탄하며, 한 사용자는 LLMs가 ""Kubernetes에 찬성하고 반대하는 윤리적이고 비성적인 하이쿠""를 생성할 수 있는 능력을 언급함.
     * CodeLlama 모델의 성능에 대한 의문이 제기되었으며, 한 사용자는 기사에 나열된 것보다 훨씬 더 좋은 결과를 보고함.
     * LLMs에 대한 흥미에도 불구하고, 일부 사용자들은 모델의 응답 품질에 대해 실망을 표현하며, 특히 음악 이론 질문에 대한 것과 이러한 모델이 시간이 지남에 따라 크게 개선될지 의문을 제기함.
"
"https://news.hada.io/topic?id=10860","충분히 발달한 Uninstaller는 Malware와 구별할 수 없다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 충분히 발달한 Uninstaller는 Malware와 구별할 수 없다

     * 탐색기의 크래쉬가 급증해서 이유를 찾다보니 스택에서 악성코드와 비슷한 함수 포인터를 발견
     * 뒤져보니 악성코드가 아니라 언인스톨러였음
     * 언인스톨러가 종료하고 나면 자기 자신인 바이너리를 지우려고 기다리는 것(Self Deleting)
          + 이 코드는 CodeProject에 10년전에 소개된 방법을 사용한 것
     * 아마도 어떤 DLL의 함수를 호출해야 하는 것인데 그게 우회(Detour)되어서 일어난 것
     * 자신을 삭제하려면 이렇게 다른 프로세스(탐색기)에 코드 삽입이나 우회하지 말고 다음 처럼 cleanup.js 같은 임시 파일을 이용할 것
          + 이 코드는 자신을 지우고, uninstaller도 20초동안 삭제 시도함

var fso = new ActiveXObject(""Scripting.FileSystemObject"");
fso.DeleteFile(""C:\\Users\\Name\\AppData\\Local\\Temp\\cleanup.js"");

var path = ""C:\\Program Files\\Contoso\\contoso_update.exe"";
for (var count = 0; fso.FileExists(path) && count < 40; count++) {
    try { fso.DeleteFile(path); break; } catch (e) { }
    WSH.Sleep(500);
}

   ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ 긱뉴스 보면서 제게 최고의 웃음을 선사한 글이네요.

   언인스톨러 역사는 Windows 역사와 비슷하다고 보면 됩니다.
   안타깝게도 언인스톨러 역사를 찾기는 매우 어렵지만, 그나마 위키백과에 있습니다.
   1992년 올드비에게 백신 하면 생각나는 노턴, 그 언인스톨러가 최초였고, 그리고 이 언인스톨러를 상용화한 건 1998년입니다.
   그리고, 저사단이 난 지금도 98년식 언인스톨러 실행 흐름에 여전히 묶여 있죠.

   맥과 리눅스 사용자에게 윈도우 쓰면서 언인스톨러를 보면 정말 ""드럽고 불쌍한 OS 같으니라고"" 라는 야인시대 김두한 사운드가 절로 나올 겁니다.
   게다가 당연하지만 완벽하지도 않아서, 찌꺼기는 무조건 남기 마련이었고, 이 찌꺼기를 제거해주는 언인스톨러 클리너나 윈도우 계열 클리너 제품도 성황리에 판매하였고, 부담스러운 가정을 위해 프리웨어로도 제공하고 있습니다.
   그리고 지금, 윈도우 11 시대에서도 30년된 언인스톨러 방식이 쓰이고 있죠...

   사실 뭐... 설치 방식부터가 맥이나 리눅스에 비하면 중구난방이니, 언인스톨러도 기초는 비슷하지만 제각각이고, 그렇다 보니 깨끗이 삭제한다는 건 거의 불가능에 가깝죠.
   그렇다 보니 윈도우는 그냥 뭐 안된다 싶으면 백업 후 밀어버리고 다시 까는 것만큼 깔끔한 방법이 없습니다. 현재진행형이죠. 단지 빈도가 줄었을 뿐이죠.

   그때 그 시절, 찌꺼기 제거 프로그램을 썼던 기억이 나네요...
   그래도 요즘엔 윈도우도 패키지 관리 프로그램이 조금씩 발전하고 있으니 기대하고 있습니다. +_+

   '고도로' 라는 말을 많이 썼던것 같아요. 고도로 발전한 과학은 마술과 구별할 수 없다.

   글의 제목은 유명한 SF 소설가 아서 C. 클라크 경의 말에서 온 것입니다.

     ""Any sufficiently advanced technology is indistinguishable from magic.""
     ""충분히 발달한 과학 기술은 마법과 구별할 수 없다.""

        Hacker News 의견

     * 고급 언인스톨러와 맬웨어 간의 유사성에 대한 논의, 자가 삭제 실행 파일에 초점을 맞춤
     * 자가 삭제 실행 파일의 코드를 포함한 코드 프로젝트에 대한 링크 제공
     * 저자는 바이너리가 자체 삭제, 슬립, 언인스톨러와 상호 작용하기 때문에 맬웨어처럼 보인다고 제안
     * 제안된 해결책에 대한 논쟁, 원래 것보다 나은지, 나쁜 휴리스틱을 사용하여 악의성을 판단하는지 의문 제기
     * 일부 댓글에서는 왜 Windows 프로그램이 특별한 인스톨러/언인스톨러가 필요한지, 이것이 왜 Windows 자체에서 처리되지 않는지에 대해 의문을 제기
     * wscripts의 사용에 대한 언급, 코드 서명 또는 실행 전에 검증할 수 없는 능력 때문에 맬웨어로 프로파일링 될 수 있음
     * '디투어'라는 개념 제기, Linux의 LD_PRELOAD 명령어와 비교
     * 안티바이러스 소프트웨어에게 눈치채지 못한, 모든 디렉토리를 언인스톨러 목록에 추가한 Windows 95/98용 간단한 앱에 대한 회상
     * 일부 댓글러들은 앱이 쉽게 설치 또는 제거할 수 있는 독립적인 폴더인 AmigaOS 접근법을 선호한다고 표현
     * 기사는 Windows가 자바스크립트를 쉘 스크립트로 실행하는 것을 지원한다는 놀라운 사실로 끝남
"
"https://news.hada.io/topic?id=10780","Microsoft, 고객을 위한 새로운 Copilot 저작권 약속 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Microsoft, 고객을 위한 새로운 Copilot 저작권 약속 발표

     * Microsoft가 저작권 걱정 없이 Copilot을 사용할 수 있도록 새로운 저작권 약속을 발표함.
     * Copilot 도구로 인해 저작권 문제가 발생할 경우 잠재적인 법적 책임을 Microsoft가 지게 됨.
     * 이런 일이 처음이 아니며, 원래부터 Microsft 제품과 관련된 특허 분쟁에 대해 고객을 보호해 왔으며, 이를 확대한 것.
          + 또한 생성형 AI에 대한 저작권 문제에 대해 민감하게 반응하고 있고, 저작자의 권리를 보호하기 위해 노력하고 있음.
          + 메타 프롬프트, 콘텐츠 필터링, 분류, 모니터링 및 남용 감지 등 다양한 기술과 도구를 통해 저작권과 개인정보 보호를 강화함.
     * Copilot 저작권 약속은 Microsft의 상업용 Copilot 서비스와 Bing Chat Enterprise에 대한 출력을 포함함.
          + 여기에는 Word, Excel, PowerPoint 등에서 사용하는 Microsft 365 Copilot과 코드 작성에 사용되는 Github Copilot이 포함됨.
     * Copilot이 생성된 결과에 대해 어떠한 저작권 주장도 하지 않는다는 입장은 유지됨.
     * 저작권 문제는 고객에게 감당해야 할 문제가 아닌 AI 서비스 제공 업체가 감당할 문제라는 것을 명확히 함.

     * HN 스레드

   저작권 문제를 완전히 책임지겠다...
   기업 입장에서 Copilot 쓰는데 도움이 되겠네요.

   HN 스레드 AI 요약
     * tremon: Microsoft가 먼저 내부 코드베이스에 대해서만 학습된 Copilot 모델을 게시하여 Copilot이 저작권을 침해하지 않는다는 것을 입증할 것을 제안합니-다.
     * londons_explore: Microsoft 코드에 대해 Copilot을 교육하면 엔지니어의 생산성을 높이고 전 세계 코드 스타일을 ""Microsoft 스타일""로 바꿀 수 있다고 생각합니다.
     * dh2022: Microsoft 코드가 Linux와 같은 다른 오픈 소스 코드베이스보다 본질적으로 우월하다는 가정에 의문을 제기합니다.
     * Karellen: 초보자가 GitHub에 올리는 저품질 코드의 롱테일이 Microsoft 내부 리포지토리의 문제보다 더 많을 수 있다고 지적합니다.
     * giantg2: 직접 커밋할 수 있는 경험이 적은 기여자가 적기 때문에 Microsoft의 평균 코드 품질이 GitHub보다 높다고 가정합니다.
     * clankyclanker: Microsoft가 내부 취약점을 노출하는 심각한 보안 침해가 있었다고 지적합니다.
     * monocasa: 불법적인 Windows 소스 유출이 이미 Copilot의 올바른 프롬프트 출력에 영향을 미쳤는지 궁금해합니다.
     * circuit10: 진정한 개인 코드의 비밀 유지와 사용자가 알아야 할 법적 사용 제한이 있는 공개 코드를 구분합니다.
     * eru: Microsoft는 과거에 라이선스 계약과 관련하여 개인과의 법적 분쟁에서 패소한 적이 있습니다.
"
"https://news.hada.io/topic?id=10841","Show HN: WebGL에서 실시간 3D 가우시안 스플래팅","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Show HN: WebGL에서 실시간 3D 가우시안 스플래팅

     * WebGL의 새로운 발전에 대한 기사, 특히 실시간 3D 가우시안 스플래팅에 대해 논의.
     * 이 기술은 Kevin Kwok에 의해 개발되었으며, 그의 코드는 Github에서 공개 접근 및 사용 가능.
     * WebGL의 3D 가우시안 스플래팅은 실시간 렌더링을 가능하게 하며, 이는 이 분야에서 중요한 진보.
     * 이 기술은 마우스 또는 화살표 키를 사용하여 탐색 가능, 사용자 친화적이고 접근성이 좋음.
     * 기사에서는 실시간 렌더링 성능을 평가하는 주요 요소인 프레임 레이트(fps)에 대한 정보를 제공하지 않음.
     * 이 개발은 게임, 가상 현실, 3D 모델링 등 다양한 분야에서의 잠재적인 응용 가능성 때문에 기술에 능통한 개인들에게 관심사.

        Hacker News 의견

     * 실시간 3D 가우시안 스플래팅의 새로운 WebGL 구현에 대한 기사로, 기술 커뮤니티에서 긍정적인 반응을 얻음.
     * 사용자들은 처음에 제어 방식이 혼란스럽다고 느꼈지만, readme에는 모든 제어 목록이 제공됨.
     * 일부 사용자들은 WebGPU로 가우시안 스플래팅을 이식하는 등 비슷한 프로젝트를 진행 중임.
     * 원근법에서 타원체를 투영할 때 자주 하는 실수에 대한 토론이 있음. 이는 잘못된 결과를 초래하며, 올바른 접근법은 타원체 주위의 경계 원뿔을 계산하고, 이를 시야 평면과 교차시킨 후, 결과적으로 나오는 원추선이 타원체의 원근 투영의 올바른 윤곽이 될 것임.
     * 일부 사용자들은 확대/축소할 때 눈에 띄는 다각형 가장자리를 발견하였으며, 이것이 버그인지 아니면 기법의 의도적인 부분인지 의문을 제기함.
     * Inria 작업의 readme가 정적 장면마다 모델이 훈련된 것처럼 보이므로, 이 기법이 비디오에 적용될 가능성에 대한 질문이 제기되었음.
     * 이 기법이 SIGGRAPH 2023에서 Kerbl과 Kopanas가 제안한 방법을 사용하는지에 대한 추측이 있음.
     * 구현은 ""무척 멋지다""와 ""상상을 초월하다""라는 찬사를 받았으며, 한 사용자는 이것이 ThreeJS 내에서 작동한다면 웹의 3D 역사에 중요한 흔적을 남길 수 있을 것이라고 제안함.
     * 구현은 iOS와 Lenovo를 포함한 다양한 장치에서 테스트되었으며, 성능에 대한 긍정적인 피드백을 받았음.
     * 모바일에서 사용자가 드래그하여 이동할 수 있는 기능이 좋아짐.
"
"https://news.hada.io/topic?id=10796"," EmojiGen - AI를 활용한 Emoji 생성기 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    EmojiGen - AI를 활용한 Emoji 생성기 오픈소스

     * '고양이'나 '하이파이브'와 같은 간단한 용어를 입력하여 이모티콘을 생성 가능
     * 생성된 이모티콘은 다운로드하여 슬랙 이모티콘으로 추가할 수 있음
     * AI 애플리케이션 구축용 플랫폼인 Replicate에서 fofr/sdxl-emoji로 구동되어 이모지를 생성하고, rembg로 배경을 제거
     * Elixir 로 구현된 오픈소스

   -_- korean 생성하니 가슴팍에 일장기를 박아버리네 ...

   https://emoji.fly.dev/emoji/222074

        Hacker News 의견

     * AI 기반 이모티콘 생성기의 창시자가 도구 작동 방식에 대한 통찰을 공유했습니다.
     * 이모티콘 생성기는 replicate.com에서 찾은 도구를 사용하여 프롬프트로 이모티콘을 생성합니다.
     * 생성된 이모티콘의 배경은 replicate.com의 또 다른 도구를 사용하여 제거됩니다.
     * 생성된 이모티콘은 다운로드하여 Slack에 추가할 수 있습니다.
     * 이모티콘 생성기의 코드는 오픈 소스이며 GitHub에서 찾을 수 있습니다.
     * 일부 사용자들은 AI가 생성한 이모티콘들이 일반적인 이모티콘 크기에서는 잘 읽히지 않는다는 것을 지적했습니다.
     * 더 작은 해상도에서 이모티콘을 생성하고, 그것을 확대하면서 질감과 세부 사항을 추가할 수 있는 파이프라인에 대한 제안이 제시되었습니다.
     * 사용자들이 미래에 원하는 이모티콘을 지시할 수 있는 가능성에 대한 흥분이 있습니다.
     * 일부 사용자들은 특정 div에서 ""hidden"" 클래스 이름을 제거함으로써 다른 사람들이 만든 최근 이모티콘을 볼 수 있는 방법을 찾았습니다.
     * 이런 종류의 기능이 미래에 인기 있는 채팅 플랫폼에 포함될 수 있다는 추측이 있습니다.
     * 일부 사용자들은 도구와 관련된 잠재적인 문제점을 발견했습니다. 예를 들어, 단일 이모티콘 대신 작은 이미지 배열을 생성하는 것입니다.
     * 또한 잠재적인 보안 문제에 대한 우려도 있습니다. 한 사용자가 부적절한 이미지를 다운로드하라는 프롬프트를 보고한 사례가 있습니다.
"
