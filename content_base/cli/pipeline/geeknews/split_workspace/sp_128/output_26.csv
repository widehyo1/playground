"https://news.hada.io/topic?id=3494","후지필름, 580 테라바이트 저장 가능한 자기테이프 발표 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    후지필름, 580 테라바이트 저장 가능한 자기테이프 발표

   - 자동차 모터를 만들 때 사용하는 새로운 자기입자인 스트론튬 페라이트(SrFe) 를 사용
   - 기존 바륨 페라이트(BaFe) 소재 테이프 덕분에 200테라가 넘는 테이프를 만들수 있었음
   - SrFe는 BaFe보다 더 자기특성이 높고 입자 부피가 60% 작음. 장기 데이터 보존에도 적합
   - 현재 업계에서 많이 쓰는 LTO-8(12TB) 대비 50배의 저장용량
   - 평방인치당 317기가를 저장
   - 테이프는 15km/h 속도로 움직이면서, 새로운 Servo 기술로 DNA 분자(molecule) 너비의 1.5배 정도의 정확도로 헤드가 움직여서 데이터를 읽어들임
   - 트랙의 넓이는 56.2nm (기존 220테라 짜리는 0.140µm)
   - DVD 12만장, CD 78만장이 저장 가능한 용량 (이 CD를 쌓으면 944m로 버즈 칼리파 빌딩보다 높음)

   리니어 테이프 오픈(Linear Tape-Open, LTO) https://ko.wikipedia.org/wiki/리니어_테이프-오픈
   LTO-7 이후는 다 BaFe 를 사용했는데, 미래에는 SrFe로 갈수 있겠네요.
   데이터센터/클라우드 백업시장에선 용량/속도/보존기간 등 많은 부분에서 자기테이프가 디스크보다 뛰어나서 계속 쓰이고 있고,
   개인용? 백업 장비로 썬더볼트3 기반 LTO-8 드라이브인 OWC Mercury Pro https://eshop.macsales.com/shop/owc-mercury-pro-lto 같은 제품들도 있습니다.
"
"https://news.hada.io/topic?id=3432","Ampere Altra - 2x 80코어 ARM 서버 CPU 리뷰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Ampere Altra - 2x 80코어 ARM 서버 CPU 리뷰

   - Arm의 Neoverse-N1 CPU 플랫폼을 적용한 상용 CPU
   ㅤ→ 아마존의 Graviton2 와 동일
   - 2U 랙서버에 2개의 Altra Q80-33 프로세서를 내장. 각각 80코어
   - AMD EPYC 7742 CPU와 벤치마크 성능이 비슷한데 가격은 42% 저렴
   ㅤ→ 워크로드에 따라 둘이 엎치락뒤치락
   ㅤ→ EPYC 7742 $6950 vs. Q80-33 $4050
   - 하지만 EPYC 7742는 15개월 전에 나온거고, Zen3 기반이 되면 20% 정도 성능 향상을 기대해서 벤치결과는 또 달라질 것
   - 또한 Altra 는 내년에 128코어 버전을 내놓을 예정, 거기다 2022년에 5나노 공정을 도입하면 다시 50%정도의 성능향상을 기대
   * 아마존 Graviton2는 AWS에서만 쓰겠지만, Altra는 상용이라 Oracle등 다른 클라우드 벤더들이 사용하게 될 것
   * Ampere는 인텔의 전 사장이었던 르네 제임스가 차린 회사로, Arm 이 투자도 했음

   AWS 클라우드 프로세서 인스턴스 점유율 변화 (Intel vs. AMD vs. Graviton) https://news.hada.io/topic?id=3428
   AWS에서도 ARM 장비인 Graviton 이 10%가 넘어갔다고 하는데, 서버에서도 ARM의 진격이 예상되네요.

   우와 생각보다 많네요. arm 머신을 주로 사용하는 곳이 어떤 일을 하는 곳일까요? 아직 일반적인 웹 어플리케이션 서버로 쓰기는 좀 때가 안된것 같은데요.

   AWS의 경우 RDS, Elsaticache 등 서비스 형태로 제공하는 곳에서도 Graviton 인스턴스를 사용할 수 있게 되어 있습니다. 일반 애플리케이션의 경우 충분한 테스트 기간이 필요하고 혹시나 하는 불안함에 쉽게 넘어가지 못하는 경우가 많지만 이런 DB 서비스의 경우 이미 AWS에서 검증한 상태에서 릴리즈한 것이고 같은 가격에 훨씬 좋은 성능의 DB 인스턴스를 사용할 수 있으니 많이 넘어가는 추세라 들었습니다. 대부분 웹 서버의 부하는 웹 서버 자체보다는 DB에서 발생하니 DB 서버만 조금씩 교체해줘도 꽤 큰 파이가 될 것 같다고 생각합니다.
   https://news.hada.io/topic?id=3402
   그리고 이건 얼마 전 뉴스인데요. 트위터가 타임라인 기능을 AWS ARM 인스턴스로 이전할 것이라 밝힌 바 있습니다. 사실 요즘 자주 쓰이는 웹 서버 언어 보면 거의 대부분이 아키텍쳐를 크게 가리지 않는 언어(Java, .NET, Node, Python 등)인데 이런 언어들만 사용하려는 아키텍쳐를 stable하게 지원하고 있다면 큰 걱정 없이 넘어갈 수 있죠.
"
"https://news.hada.io/topic?id=3365","Greenflare - 오픈소스 로컬 SEO 크롤러","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Greenflare - 오픈소스 로컬 SEO 크롤러

   - 로컬에서 웹사이트를 크롤링해서 SEO 분석을 도와주는 도구
   ㅤ→ H1,H2 태그및 Meta 데이터 확인
   ㅤ→ XPath 및 CSS 셀렉터로 각 페이지의 정보 추출
   ㅤ→ Robots.txt 파서로 상태 확인
   ㅤ→ 깨진 링크 및 상태코드(3xx, 4xx, 5xx) 확인
   ㅤ→ 필터로 URL들 예외 처리 가능
   - 윈도우/맥/리눅스 실행파일 제공
   - CSV 로 크롤링 결과 Export ( 자체적으로 sqlite 에 저장 )
   - 저사양에서도 실행 가능하며, 크기 제한은 없음
   ㅤ→ 4백만개 이상의 페이지를 가진 사이트들 대상 테스트 완료
   - 파이썬 코드, pypi 패키지로도 제공 ( pip install greenflare )

   테스트 해보니 꽤 빠르게 URL들을 긁어와서 처리해줍니다.
   5000개 URL읽어오는데 얼마 안걸리네요.
   서버쪽에는 부하가 걸릴수도 있으니 살살 사용하시기 바랍니다. ^^
"
"https://news.hada.io/topic?id=3372","Docker Desktop 3.0.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Docker Desktop 3.0.0 릴리즈

   - 새로운 대시보드 : 단일 UI로 로컬, 리모트 이미지 및 어플레키에션 접근 지원
   - 윈도우 10 가정용 지원 : WSL2 지원
   - 윈도우와 맥에 새로운 파일시스템
   - Mac 에서 CPU 성능 개성
   - Snyk 과의 파트너십을 통한 로컬 이미지 보안 스캐닝 지원 등
   - Stable 및 Edge 채널 삭제
   - 추가적으로 Apple M1 지원과 WSL 2 에서의 GPU 지원을 프리뷰 프로그램을 통해서 진행한다고 하네요
"
"https://news.hada.io/topic?id=3405","2020 디자인 툴 설문조사디자인 툴 설문조사

   - 전세계 UX/Product/Web/Graphic 디자이너 4100명 대상
   - OS : 맥(3432), 윈(1029), 리눅스(40)
   - 브레인스토밍 도구
   ㅤ→ 실제 사용(주/보조) : Miro(899/478) > Figma(765/523) > Sketch(176/347) > XD(109/120)
   ㅤ→ 평점기준 순위 : Whimsical(4.5) > Miro(4.4) > Mural,Figma(4.2) > Balsamiq (3.9)
   ㅤ✓ 올해 Miro가 가장 큰 성장(원격근무 때문)
   ㅤ✓ 평균평점 3.5인데 Whimsical이 최고점
   ㅤ✓ Mural 은 선택항목에 없음에도 129명이 평가를 했음. 내년을 기대
   - User Flow 도구
   ㅤ→ 실제 사용(주/보조) : Figma(1036/516) > Miro(598/424) > Sketch(412/394) > Whimsical(248/192)
   ㅤ→ 평점기준 순위 : Whimsical(4.5) > Overflow.io(4.4) > Miro(4.2) > Figma(4.0)
   ㅤ✓ 약 500여명의 Whimsical 사용자가 매우 만족한다고 답변
   - UI 디자인 도구
   ㅤ→ 실제 사용(주/보조) : Figma(1975/717) > Sketch(1152/706) > XD(473/526)
   ㅤ→ 평점기준 순위 : Figma(4.7) > Affinity Designer(4.5) > UXPin/Framer/Sketch(4.5)
   ㅤ✓ 66%의 디자이너가 Figma를 사용(2019년엔 37%). 원격근무 때문에 엄청난 성장
   - 프로토타이핑 도구
   ㅤ→ 실제 사용(주/보조) : Figma(1702/613) > InVision(407/527) > XD(502/362) > Sketch(370/471)
   ㅤ→ 평점기준 순위 : Webflow(4.7) > ProtoPie/UXPin(4.5) > Framer/Axure(4.3)
   ㅤ✓ 2017년엔 InVision이 최고였으나, 2019년엔 Sketch였고, 이젠 Figma가 그 자리를 차지
   ㅤ✓ 주요도구에 기능이 없을때 ProtoPie 나 Principle 같은 백업도구를 사용
   - Handoff (전달) 도구
   ㅤ→ 실제 사용(주/보조) : Figma(1416/334) > Zeplin(646/440) > InVision(301/242) > XD(269/152)
   ㅤ→ 평점기준 순위 : Zeplin/Figma(4.2) > XD/Abstract(3.9) > InVision(3.7)
   ㅤ✓ Figma사용자는 그냥 그걸로 전달
   ㅤ✓ 아직 Zeplin 사용자층은 두꺼움 ( 특히 Sketch 와 연결해서 사용하는 경우 )
   - 디자인 시스템 관리 도구
   ㅤ→ 실제 사용(주/보조) : Figma(1641/304) > Sketch(770/273) > XD(309/144)
   ㅤ→ 평점기준 순위 : Figma(4.3) > Zeroheight(4.2) > Storybook/XD/Sketch(3.8)
   ㅤ✓ Adobe XD 사용자가 작년 1%에서 11%로 열배 성장
   - 사용자 테스팅 도구
   ㅤ→ 실제 사용(주/보조) : Zoom(478/273) > Maze(301/197) > UsabilityHub(284/138) > Lookback.io(241/127)
   ㅤ→ 평점기준 순위 : Maze(4.2) > Lookback(4.1) > UserTesting(3.9) > Marvel/UsabilityHub(3.8)
   ㅤ✓ Zoom은 일반 명사화 되어서 모든 종류의 화상회의를 의미(휴지를 Kleenex®라고 부르는것과 마찬가지)
   ㅤ✓ 25%의 응답자가 사용자 테스팅용 도구를 사용하지 않음
   ㅤ✓ 심지어 23%의 응답자는 사용자 테스팅 자체를 안한다고
   - Versioning 도구
   ㅤ→ 실제 사용(주/보조) : Figma(1105/243) > Google Drive(384/398) > Abstract(381/113) > GitHub(218/230) > Dropbox(173/208)
   ㅤ→ 평점기준 순위 : GitHub(4.4) > Bitbucket(4.3) > Abstract(4) > Figma/Dropbox(3.9)
   ㅤ✓ Git 기반 기술 사용자들이 대부분 4점대 이상의 평점으로 만족
   ㅤ✓ Figma가 많은 고통을 해결해주지만, 다른 Asset들의 저장은 불가능해서 그걸 구글드라이브/드롭박스로 해결
   ㅤ✓ Abstract 가 디자인 친화적인 브랜칭 시스템으로 강력한 경쟁자
   - 전체 평가에서 거의 전분야에서 Figma가 1등(브레인스토밍 도구는 Miro)
   - 2021년에 가장 기대되는 도구
   Figma(1316) > Sketch(292) > Framer(251) > XD(174) > ProtoPie(163) > Webflow(105)

   Figma 엄청나군요!

   거의 Figma의 천하통일 이네요. Whimsical 하고 Abstract 는 내년을 기대해봐도 좋을 것 같구요.
   여기서 한국분들이 만든 ProtoPie가 같이 거론되는것도 기분 좋네요
"
"https://news.hada.io/topic?id=3397",".vimrc 파일에 꼭 넣는 5줄","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           .vimrc 파일에 꼭 넣는 5줄

   set hlsearch "" 모든 검색결과 하이라이트
   set ignorecase "" 대소문자 무시하고 검색
   set incsearch "" 타이핑할 때마다 검색 결과 표시
   set number "" 줄번호 표시
   set noswapfile "" 스왑파일 사용안함
   한줄로 설정 가능 → set hls ic is nu noswf

   set smartcase 추천합니다. 소문자로만 쓰면 대소문자 구분 안 하고 검색하는데 대문자가 들어가면 대소문자 구분해서 검색합니다.

   이거 괜찮습니다.

   해커뉴스 댓글들도 참고하세요
   https://news.ycombinator.com/item?id=25410390
   set list listchars+=space:• "" 빈칸을 • 로 표시
   set listchars=tab:>- "" 탭을 >- 로
   set listchars=tab:├─
   set listchars+=trail:⋄ "" 뒤 공백을 ⋄ 로
"
"https://news.hada.io/topic?id=3440","Hypersim: Apple의 실내인식을 위한 합성HDR이미지 1.9TB 데이터셋 (pixel-perfect labelled)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Hypersim: Apple의 실내인식을 위한 합성HDR이미지 1.9TB 데이터셋 (pixel-perfect labelled)

   Hypersim: Apple의 실내인식을 위한 합성HDR이미지 1.9TB 데이터셋 (pixel-perfect labelled)
"
"https://news.hada.io/topic?id=3468","Tokio 1.0 발표 - Rust용 비동기 런타임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Tokio 1.0 발표 - Rust용 비동기 런타임

   - 속도 저하 없이 안정적인 네트워킹 어플리케이션을 만들기 위한 스택
   - 1.0은 오래 쓰일 안정적인 버전. 최소 5년동안 1.0 브랜치를 유지할 것이며, 2.0은 3년내에는 출시할 계획 없음
   - 2021년엔 Stream, io_uring, tracing 통합 등을 진행할 예정
   Tokio Stack
   - Runtime : I/O, 타이머, 파일시스템, 동기화, 스케줄링 등
   - Hyper : HTTP 1/2 Client
   - Tonic : gRPC Client/Server Library
   - Tower : retry, load-balancing, filtering, request-limiting
   - Mio : OS 의 Event I/O 기반 포터블 API
   - Tracing : Rust 프로그램을 트레이싱 하기 위한 프레임워크
   - Bytes : Byte Array를 핸들링하기 위한 유틸리티 모음
"
"https://news.hada.io/topic?id=3407","WireGuardKit for iOS / macOS 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    WireGuardKit for iOS / macOS 릴리즈

   - iOS/macOS용 WIreGuard 코어 모듈
   - WireGuardKit for iOS and macOS 릴리즈와 함께 앱 스토어에 새 버전의 WireGuard 앱을 제출한 상태. 이 앱은 성능 향상과 애플 실리콘 지원을 추가함.

   WireGuard가 드디어 Linus 트리에 등록 https://news.hada.io/topic?id=1404
   WireGuard가 net-next에 커밋됨 https://news.hada.io/topic?id=1047

   https://www.wireguard.com
   WireGuard를 잘 모르시는 분들도 계실까봐 추가로 남깁니다.
   WireGuard는 안전한 P2P 연결을 통해 VPN을 구성할 수 있게 도와주는 소프트웨어이자 프로토콜입니다. 코어 부분은 C 및 Go로 짜여져 있고 수많은 아키텍쳐/플랫폼을 지원하고 있으며, 2020년 3월 리눅스 커널에 포함되기도 했습니다. OpenVPN 등의 솔루션이 있지만 다른 솔루션 대비 구성(구축)도 쉽고 연결 cost도 낮을 뿐더러 속도도 훨씬 빨라 날이 갈수록 뜨고 있는 VPN 프로토콜입니다. (+ OpenVPN 대비 중국 GFW 차단이 적다는 썰도..)
"
"https://news.hada.io/topic?id=3423","meli - 스태틱 사이트 호스팅 플랫폼 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      meli - 스태틱 사이트 호스팅 플랫폼 오픈소스

   ""오픈소스로 Netlify 비슷한 서비스 운영하기""
   - 한개의 도메인에서 다수의 Static/Frontend 사이트 운영가능
   - 조직/팀/사용자/사이트 무제한 생성 가능
   - 사이트당 커스텀 도메인 지원
   - 자동 HTTPS 인증서 발급(Letsencrypt 또는 사설 ACME 서버 운영)
   - 운영 릴리즈(Primary) 와 브랜치(Preview) 릴리즈 지원
   - 접속 범위 제한 가능한 API
   - 웹훅 지원
   - Slack, Mattermost, Email 연동
   - Docker Compose 로 쉽게 배포 및 업그레이드 가능
   - 암호로 보호된 페이지 지원
   - Caddy 웹서버 + TypeScript 로 구성된 오픈소스

   사내에서 간단한 페이지들을 올리는 용도로 사용하기에도 괜찮아 보입니다.
   → Caddy 2 릴리즈 - 성능 좋고 간편한 HTTPS 자동 지원 웹서버 https://news.hada.io/topic?id=2028
   스태틱 사이트에서 벗어나서 좀 더 기능이 있는 페이지를 한서버에서 여러개 호스팅 한다면,
   CapRover 가 더 나을수도 있습니다. CapRover 써보니 꽤 좋더군요.
   → CapRover - 나만의 PaaS 만들기 https://news.hada.io/topic?id=2241
"
"https://news.hada.io/topic?id=3374","MS, ARM용 Windows에 x64 에뮬레이션 추가 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     MS, ARM용 Windows에 x64 에뮬레이션 추가

   - Windows 10 Insider Preview Build 21277
   ㅤ→ 프리뷰 기능으로 ARM64에서 x64 에뮬레이션 추가
   - Unicode Emoji 12.1 과 13.0 지원
   - Win + Shift + S 로 화면캡처하여 탐색기 폴더에 직접 붙여넣기 가능
   - 터치 지원 기기에서 분할 키보드 지원
   - 시작메뉴에서 폴더가 한개의 앱만 있을경우 폴더는 빼고 앱아이콘만 보여줌

   애플 실리콘하고 겹치면서 타이밍이 묘하네요.
   2017년부터 나온 ARM 윈도우 버전이었지만 버림받은 느낌이었는데 이제 윈도우도 x86을 버릴 준비를 하는걸까요..
"
"https://news.hada.io/topic?id=3375","구글 Common Expression Language","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     구글 Common Expression Language

   - 보안 정책, 프로토콜 등을 작성하고 평가하기 위한 표현식 언어
   ㅤ→ 작고 빠르게, 임베드 및 확장 가능하고, 개발자 친화적으로
   ㅤ→ C와 비슷한 문법
   - 구글이 Firebase의 보안 규칙을 만들며 개발한 스펙을 확장한 것
   - Protocol Buffer 타입을 사용, JSON 지원
   - C++ 와 Go 로 된 고성능 Evaluator 오픈소스 제공
   service cloud.firestore {
   ㅤmatch /databases/{database}/documents {
   ㅤㅤ// 사용자가 로그인 되어있거나 요청한 데이터가 퍼블릭이면 참
   ㅤㅤfunction signedInOrPublic() {
   ㅤㅤㅤreturn request.auth.uid != null || resource.data.visibility == 'public';
   ㅤㅤ}
   ㅤㅤmatch /cities/{city} {
   ㅤㅤㅤallow read, write: if signedInOrPublic();
   ㅤㅤ}
   ㅤㅤmatch /users/{user} {
   ㅤㅤㅤallow read, write: if signedInOrPublic();
   ㅤㅤ}
   ㅤ}
   }

   Caddy 2 릴리즈 - 성능 좋고 간편한 HTTPS 자동 지원 웹서버 https://news.hada.io/topic?id=2028
   Caddy 웹서버도 Request Matcher 같은 것들 설정시 CEL을 사용합니다.
   https://caddyserver.com/docs/caddyfile/matchers
"
"https://news.hada.io/topic?id=3388","faasd - 초경량 포터블 Function-as-a-Service 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                faasd - 초경량 포터블 Function-as-a-Service 엔진

   ""초경량 AWS Lambda""
   - OpenFaaS를 쿠버네티스 없이 싱글호스트에서 쉽게 실행할 수 있는 서버
   - 몇개의 펑션 또는 마이크로서비스를 위해 작은 Serverless Functions 기능이 필요할 때 사용
   ㅤ→ IoT장비에 설치하거나, 사용자용 앱에 내장
   - 싱글 Go 실행파일로 데몬처럼 실행
   - x86/ARM 지원
   - multipass 를 이용해서 맥/윈도우/리눅스에서 로컬 실행 가능
   - 내부에서 containerd 와 CNI 사용
"
"https://news.hada.io/topic?id=3395","리눅스 5.10 커널 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            리눅스 5.10 커널 릴리즈

   - Long Term Support 릴리즈
   - Ext4 패스트 커밋 지원
   - 인텔 Rocket Lake/Alder Lake, Gen12/Xe 등 지원
   - AMD Zen 3 온도 모니터링
   - 라즈베리 Pi VC4 지원
   - XFS 파일시스템이 Year 2486지원(Year 2038 문제 해결)
   - 사운드블래스터 AE-7 사운드 카드 지원
   - 닌텐도 스위치 컨트롤러 지원(USB & 블루투스)

   릴리즈하고 하루도 안지나서 바로 5.10.1 이 릴리즈 되었습니다.
   문제를 일으킬수 있는 저장소 관련 코드 두개(RAID 관련)를 수정
   http://lkml.iu.edu/hypermail/linux/kernel/2012.1/07324.html
   전체를 한눈에 보기에는 KernelNewbies 글이 항상 깔끔합니다.
   https://kernelnewbies.org/Linux_5.10
   업데이트된 기능들의 전체 상세설명
   Linux 5.10 Brings Many Changes From Better CPU Support To File-System Optimizations
   https://phoronix.com/scan.php/…
"
"https://news.hada.io/topic?id=3438","Apple, Google, Microsoft, Mozilla가 카자흐스탄 정부의 루트 인증서를 밴 처리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Apple, Google, Microsoft, Mozilla가 카자흐스탄 정부의 루트 인증서를 밴 처리

   애플, 구글, 마이크로소프트, 모질라가 카자흐스탄 정부의 루트 인증서를 밴 했습니다. HTTPS 인증서를 이용한 MitM(Man-in-the-Middle) 공격이 이 밴의 이유라고 합니다.

   나쁜짓을 하려는 놈들이 성실하진 않아서 (제대로 공부하고 정공법으로 문제를 바이패스하지 않아서) 다행입니다.

   행정전자서명(GPKI) 인증기관 신뢰성 '흔들' https://m.etnews.com/20180406000177
   예전 행안부 인증서 논란이 생각나는 기사입니다.
"
"https://news.hada.io/topic?id=3422","Sequoia PGP v1.0 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Sequoia PGP v1.0 공개

   - 보안 및 정확성에 중점을 둔 새로운 OpenPGP 라이브러리
   - Rust로 개발, 메모리단위에서 암호화하고 필요할때만 해독해서 데이터를 보호
   - 사용하기 쉬운 라이브러리 : Rust 와 C API를 제공하며, Python/Ruby 바인딩도 제공
   - 보안에 대한 총체적인 접근
   ㅤ→ OpenPGP CA : 조직내의 OpenPGP 키 관리
   ㅤ→ Hagrid : OpenPGP Key 키 서버
   ㅤ→ sqv : 커맨드라인 OpenPGP 시그니쳐 검층 도구
   - RFC 4880 OpenPGP Message Format 을 전부 구현 (MD5,IDEA 같은 위험한 것들은 제외)
   - GnuPG를 개발했던 세명의 프로그래머가 3.5년간 개발
   ㅤ→ GnuPG는 복잡하고 수정이 어려움 (21년이나 된 코드베이스)
   ㅤ→ API가 사용하기 불편
   ㅤ→ GPL 때문에 iOS에서 사용이 불가능
   ㅤ→ test가 별로 없음
   ㅤ→ P≡P Foundation 이 후원 https://pep.foundation/

   그런데 애초에 PGP 자체가 문제가 굉장히 많은 암호화 기술이라서(https://latacora.micro.blog/2019/07/16/the-pgp-problem.htm , https://blog.cryptographyengineering.com/2014/08/… , https://blog.filippo.io/giving-up-on-long-term-pgp/ ) 차라리 암호화가 필요할 때는age(https://github.com/FiloSottile/age)같은 간단한 암호화 기술을 사용하는 프로그램을 사용하는 것이 더 나을 듯 합니다.
"
"https://news.hada.io/topic?id=3475","애플 실리콘이 브로드웨이에 미치는 영향","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         애플 실리콘이 브로드웨이에 미치는 영향

   - 브로드웨이 쇼는 밖에서 보기엔 화려하고 비싸게 보이지만, 안쪽으로 가면 안그렇고 특히나 음악쪽은 더 안좋음
   - 전자 음악 디자이너들의 가장 힘든 일중 하나는 키보드,기타,재생 트랙등을 구동하는 최고 가성비의 컴퓨터 장비를 찾는 것
   - 지난 10년간 브로드웨이는 전통적인 오케스트라를 신디사이저/재생시스템/전자드럼 등으로 교체해왔음
   - 이를 위해 $10000 ~ $12000 정도의 예산을 잡아서 신디사이저 키보드 Rigs들을 구매
   ㅤ→ 좋은 키보드는 보통 $1500~$2000 사이니까 두대면 약 $4000 정도
   ㅤ→ 메인 Rig이 잘못될 경우를 대비해서 두대의 Rig을 마련하니까 $4000 X 2 해서 $8000
   ㅤ→ 즉 컴퓨터와 그외 다른 것들을 위해서는 예산이 $3000 정도 밖에 안남는 상황
   - 예산때문에 다들 맥 Mini를 사용해 왔는데, 기존 맥 미니들은 전자 음악 디자이너들에게 병목이었음
   - 최고의 사운드를 내는 샘플을 쓰고 싶지만, 성능상 불가능해서 맥미니 성능에 맞게 음질을 줄여서 사용
   - 애플 실리콘은 브로드웨이 전자 음악 디자이너의 모든 것을 바꿈
   - 새 M1 Mac Mini는 안정적으로 고급 샘플 라이브러리와 가상 악기를 안정적으로 사용이 가능
   - 향후 M2/M3/M4 가 되면서 더 좋아질 것으로 기대
   - 애플 실리콘 기기의 가성비가 브로드웨이의 사운드에 큰 영향을 미칠 것
   * 참고 - Roland Keyboard Rigs https://www.roland.com/us/promos/keyboard_rigs/

   Mac이 확실히 멀티미디어 쪽에 킬러 애플리케이션이 많은 모양이더군요.

   영상계는 어차피 프리미어 같은 게 윈도우에서 잘 지원하고 하드웨어도 좋아서 맥 윈도우 반반 쓰는 모양이던데, 음향쪽은 다들 쭈욱 맥 쓰는 모양이더라고요. 맥 사운드 시스템이 레이턴시가 짧다고...
   M1 업데이트 이후 이쪽은 드라이버 업데이트가 빨리 되나보네요.
"
"https://news.hada.io/topic?id=3463","TerarkDB, RocksDB 의 성능개선형 포크 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      TerarkDB, RocksDB 의 성능개선형 포크

   - 바이트댄스가 RocksDB를 포크하여 Tail 레이턴시, 처리량, 압축을 개선한 버전
   ㅤ→ 읽기 2~8배, 쓰기 2~15배 정도의 향상
   - 임베디드 키밸류 저장소인 RocksDB를 그대로 교체하여 사용 가능
   - 리눅스에서만 프로덕션 테스트 완료
   - 기존 RocksDB 데이터를 이관가능하지만, 이관후 RocksDB로 롤백은 불가
   - RocksDB v5.18.3 을 포크

   서로서로 영감을 많이 받았네요 ㅋㅋ

   관계를 잘 정리한 HN 댓글이 있어서 옮겨와 봅니다.
   https://news.ycombinator.com/item?id=25518065
   TerarkDB 는 RocksDB 를 ByteDance 가 포크해서 만든 개선 버전
   RocksDB [1] 는 구글의 LevelDB 를 페이스북이 포크. 많은 CPU코어와 SSD 및 I/O 작업에 최적화한 것
   LevelDB [2] 는 구글의 Jeffrey Dean 과 Sanjay Ghemawat 이 만든 오픈소스 디스크 키밸류 스토어. BigTable에서 영감을 받음
   BigTable [3] 은 Google File System 위에 만들어진 고성능 압축 데이터 저장 시스템. 구글의 독점적인 서비스
   Pebble [4] 은 CockroachDB 가 RocsDB/LevelDB 에 영감받아서 자체적으로 만든 대체제
   [1] https://rocksdb.org/
   [2] https://github.com/google/leveldb
   [3] https://cloud.google.com/bigtable/
   [4] https://github.com/cockroachdb/pebble
"
"https://news.hada.io/topic?id=3473","소니, PS5 DualSense 컨트롤러 공식 리눅스 드라이버 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 소니, PS5 DualSense 컨트롤러 공식 리눅스 드라이버 공개

   - USB / 블루투스 모드
   - LED제어, 모션 센서, 터치패드, 배터리, Lightbar 및 Rumble 까지 지원
   ㅤ→ 듀얼센스에 새로 추가된 어댑티브 트리거 및 VCM 기반 햅틱은 미지원
   - 기존 리눅스 커널의 hid-sony 드라이버 대신, hid-playstation 드라이버를 추가
   ㅤ→ hid-sony는 다른 소니 기기를 폭넓게 계속 지원 예정

   이번 차세대 게임기 전쟁에서, PS가 잘한 것 중 하나는 이 DualSense 컨트롤러의 도입이라고 얘기됩니다.
   실제로 PS5에 기본 게임으로 제공되는 Astro's Playroom 게임은 이 듀얼센스 컨트롤러의 기능을 십분 활용해서 다양한 가능성을 보여줍니다.
   https://www.playstation.com/ko-kr/games/astros-playroom/
   다양한 플랫폼에서 이 듀얼센스 컨트롤러를 사용할 수 있게 하는건 좋은 전략이라고 생각이 됩니다.
   Steam 에서도 이미 듀얼센스를 지원합니다.
   https://store.steampowered.com/oldnews/78652

   저도 Astro's Playroom 플래이해봤는데 정말 엄청나더라고요. 이걸로 게임하는데 게임패드에 몇 번씩 놀랐습니다.
   소니가 커널 드라이버 직접 관리한다는 데에 놀랐네요. 아직 듀얼센스의 핵심인 어댑티브 트리거가 지원 안되는건 아쉽지만요. 아무래도 크롬북 사용자 등을 타겟으로 했을까요.
"
"https://news.hada.io/topic?id=3458","LinkAce - 오픈소스 북마크 아카이브 서버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       LinkAce - 오픈소스 북마크 아카이브 서버

   - 개인이 호스트해서 사용하는 북마킹 서비스
   - 자동으로 링크의 타이틀/설명 추출하고 개별 노트 작성 가능
   - 북마크시 Internet Archive를 이용해서 백업 저장
   - 북마클릿 및 REST API 제공
   - 링크와 콜렉션은 공개/비공개 설정가능
   - 다양한 필터/정렬을 제공하는 검색 기능
   - AWS S3로 백업 가능
   - PHP 오픈소스. 도커로 설치가능

   와 개인용 pocket 같은 느낌이네요

   이런건 계속 나오네요. 딜리셔스 처음 나올 때 정말 아름다웠는데!

   예전에 공유 해주셨던 Shiori
   https://news.hada.io/topic?id=577
"
"https://news.hada.io/topic?id=3441","JSweet - Java to JavaScript 트랜스파일러 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   JSweet - Java to JavaScript 트랜스파일러

   - 자바코드로 웹 어플리케이션을 개발할수 있게 만들어주는 도구
   - Java → TypeScript → JavaScript
   - JSweet + jQuery/Angular2/ThreeJS/NodeJS 등이 가능
   - J4TS로 Java API도 그대로 사용 가능
   - Eclipse/Maven/Gradle 플러그인 제공
   - EcmaScript 3~6 및 모듈 지원

   주제와 직접 상관은 없지만 이러한 접근을 볼 때마다 하나의 언어로 다 하고 싶다는 열망은 끝없이 계속되는구나 싶어요 ㅎㅎ
   ms/닷넷 쪽에서도 예전부터 c# 만으로 다 할 수 있게 하려는 시도가 많았고 지금은 blazor (to wasm) 로 다시 계속되고 있죠
   nodejs 는 아예 자바스크립트로 서버 개발하면 좋아! 였고요.
   그러고보니 결국은 js 가 킹인가요 ^^;

   반대로 js가 그만큼 쓰기싫은 언어(java보다 더)라는 뜻도 내포하고 있는건 아닐까요? 그냥 js쓰는게 싫어서 다른언어로 쓴걸 js로 트랜스파일하는 거죠.

   웹브라우저가 미래의 OS라는 말이 맞는거 같아요.

   철지났지만 짤빵 하나...ㅋ
   https://xkcd.com/1508/

   이제는 웹 브라우저에 시간과 비용만 충분하다면 못 올릴 수 있는 게 거의 없죵.
"
"https://news.hada.io/topic?id=3431","PoloDB - Embedded JSON DB","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       PoloDB - Embedded JSON DB

   - 가볍고 사용하기 쉬운 임베디드DB
   - MongoDB 와 비슷한 API를 제공하는 NoSQL DB
   - Rust로 개발. 별도 의존성 없음
   - 스탠드얼론 프로세스 없이 라이브러리처럼 사용
   - C,C++,Swift,Python,Node.js 언어 바인딩 제공(더 추가중)
   - 데이터는 파일 하나로 저장되며, 크로스 플랫폼 및 하위호환 지원
   - 맥/리눅스/윈도우 및 Rust 컴파일 되는 모든 플랫폼에서 사용 가능

   1. 레포를 보면 실제 프로덕션에서 쓸 수 있는 수준은 아닌것도 같네요.
   2. query 기능이 sqlite 와 비교하면 얼마나 차이날지 궁금합니다.

   SQLite를 도큐먼트DB로 사용하기 https://news.hada.io/topic?id=3271
   처럼 약간 우회해서 사용하는 방법이 있었는데, 이건 기초부터 NoSQL 방식이네요
   - DuckDB - Embedded OLAP DB 오픈소스 https://news.hada.io/topic?id=3312
"
"https://news.hada.io/topic?id=3476","How Complex System Fail 사례","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       How Complex System Fail 사례

   https://how.complexsystems.fail/
   https://www.youtube.com/watch?v=2S0k12uZR14
   Richard Cook의 How Complex System Fail 에서는 18가지의 복잡한 시스템의 실패 원인과 실패를 줄이기 위한 방법을 다루고있어요.

   ## 1. 복잡한 시스템은 본질적으로 위험한 시스템이다.
   ## 2. 복잡한 시스템은 실패로부터 성공적으로 방어한다.
   장애가 발생하면서 여러 계층의 방어 레이어를 구축한다. 이런한 방어는 기술구성요소(백업, 시스템 safety feature 등) 인적 구성(교육, 지식), 조직, 제도 등을 포함한다.
   ## 3. 대참사(Catastrophe) 여러번의 실패가 필요하다. - SPoF로는 충분하지 않다.
   큰 장애는 작은 사고들이 합쳐져서 생겨난다.
   ## 4. 복잡한 시스템에는 내부에 잠재되어있는 변화하는 오류 조합이 포함되어 있다.
   ## 5. 복잡한 시스템은 성능 저하 모드로 실행된다.
   ## 6. 대참사(Catastrophe)는 언제나 코앞에 있다.
   ## 7. 장애 이후 Root Cause는 근본적으로 잘못되었다.
   ## 8. 장애 이후의 성과 평가는 사후 평향적이다.
   ## 9. 운영에는 두가지 역할이 있다. (생산자, 장애에 대한 방어자)
   ## 10. 모든 실무자의 행동은 도박이다.
   장애 이후에 실패는 종종 피할 수 없는 것 처럼 보이며, 실무자의 행동은 실수로 보인다. 그러나 모든 실무자의 행동은 실제로 도박, 즉 불확실한 결과에 직면하여 발생하는 행동이다. 불활실성의 정도는 변할 수 있다. 실무자의 행동이 도박이라는 사실은 장애 이후에 알게된다. 일반적으로 사후 분석에서는 이러한 도박을 빈약한 도박으로 간주한다. 그러나 성공적인 결과 또한 도박의 결과이기도 하다.
   ## 11. 가장 어려운 곳에서의 행동은 모호함을 해결한다.
   ## 12. 실무자는 복잡한 시스템의 적응 가능한 요소이다.
   ## 13. 복잡한 시스템에 대한 인간의 전문성은 끊임없이 변화하고 있다.
   ## 14. 변화는 새로운 형태의 실패를 가져온다.
   ## 15. '원인'에 대한 견해는 미래의 사건에 대한 방어의 효율성을 제한한다.
   ## 16. 안전은 구성 요소가 아니라 시스템의 특성이다.
   안전은 시스템의 속성이다. 모든 시스템의 안전 상태는 항상 변한다. 지속적이며 체계적으로 위험에 대한 관리가 필요하다.
   ## 17. 사람들은 지속적으로 안전을 만든다.
   ## 18. 실패없는 작업에는 실패 경험이 필요하다.

   요즘 카오스엔지니어링을 준비해서 그런지 몰라도 아래 글들이 인상에 남네요
   - 대참사(Catastrophe)는 언제나 코앞에 있다.
   - 실패없는 작업에는 실패 경험이 필요하다.
"
"https://news.hada.io/topic?id=3391","2020 Web Almanac - 웹의 현재 보고서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2020 Web Almanac - 웹의 현재 보고서

   매년 발간. 분야별로 엄청 방대한 보고서
   - 7.5M개의 웹사이트, 31TB의 데이터를 처리해서 만든 지표
   올해 새로 들어간 섹션은 Jamstack, Privacy, Capabilities
   1 페이지 콘텐츠: CSS,JS,마크업,폰트,미디어,써드파티
   2 UX: SEO,접근성,퍼포먼스,개인정보보호,보안,모바일웹,기능,PWA
   3 콘텐츠 퍼블리싱: 이커머스,CMS,JamStack
   4 전송: 페이지 크기,압축,캐슁,리소스 힌트,HTTP/2
   Jamstack
   - 스태틱 사이트가 데스크탑/모바일 0.4%/0.27% (2019) 에서 0.72% / 0.68% (2020) 으로 성장
   - Next.js (72.5%), Gatsby(14.8%), Hugo(6.6%)
   Privacy
   - 92%의 사이트가 트래커 사용
   - Google Analytics(65.9%), Facebook (30.9%) 상위 10개중 8개가 구글(웹폰트,더블클릭,태그매니저등)
   - 상위 100개 트래커중 56개의 트래커가 광고, 11개가 CDN, 사이트 분석용 9개

   2019 Web Almanac - 웹의 현재 보고서 https://news.hada.io/topic?id=921
"
"https://news.hada.io/topic?id=3386","Rocky Linux, CentOS를 대체하는 RHEL의 리빌드 프로젝트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Rocky Linux, CentOS를 대체하는 RHEL의 리빌드 프로젝트

   CentOS 프로젝트 중단으로 CentOS의 창시자인 Gregory Kurtzer가 새로운 커뮤니티 엔터프라이즈 OS 개발을 시작했습니다. 이 프로젝트는 RHEL과 100% 호환(100% bug-for-bug compatible)을 유지하면서도 절대 팔리지 않을 거고(won't be sold), 기업에 의해 움직이지도 않을 것(won't be driven by corporate interest)이라고 밝혔습니다.

   제목을 애매하게 적었습니다 미안합니다. 'RHEL의 리빌드 프로젝트'에서 '의'가 빠진 'RHEL 리빌드 프로젝트'가 조금 더 맞는 표현인 것 같습니다.
"
"https://news.hada.io/topic?id=3484","커맨드 라인 인터페이스 가이드라인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           커맨드 라인 인터페이스 가이드라인

   전통적인 유닉스 원칙을 따르면서 현대적으로 업데이트한 오픈소스 가이드
   - CLI 디자인 철학
   ㅤ→ 사람 우선
   ㅤ→ 함께 작동하는 간단한 부속
   ㅤ→ 프로그램간 일관성 유지
   ㅤ→ 필요한 만큼만 말하기(적지도 많지도 않은 출력)
   ㅤ→ 쉽게 발견할수 있게(포괄적인 도움말, 예제, 다음 수행할 명령 제안, 에러가 있을때 할 작업 제안)
   ㅤ→ 일반적인 대화처럼
   ㅤ→ 견고하게
   ㅤ→ 사용자에게 공감하기
   ㅤ→ 혼돈 : 규칙을 어겨야 한다면 의도와 목적을 명확히 할 것
   - CLI 가이드 라인
   ㅤ→ 기초
   ㅤㅤ✓ 명령행 파싱 라이브러리 사용할 것 : Go(Cobra,cli), Node(oclif), Python (Click,Typer), Ruby(TTY)
   ㅤㅤ✓ 성공시 0, 에러시 0이외의 코드 리턴
   ㅤㅤ✓ 출력은 stdout
   ㅤㅤ✓ 로그, 에러 등 메시지는 stderr
   ㅤ→ 도움말
   ㅤㅤ✓ 옵션 지정없이 실행하면 도움말 출력 (-h, --help)
   ㅤㅤ✓ 기본적으로 간결한 도움말을 출력
   ㅤㅤㅤㅤ· 이 프로그램이 뭐하는지
   ㅤㅤㅤㅤ· 한두개의 호출 예제
   ㅤㅤㅤㅤ· 플래그 설명(많지 않다면)
   ㅤㅤㅤㅤ· 추가 설명용 --help
   ㅤㅤ✓ -h, --help 옵션시 전체 도움말 출력
   ㅤㅤ✓ 피드백/이슈를 받기위한 경로 제공
   ㅤㅤ✓ 도움말에서는 웹버전 문서로의 링크를 제공
   ㅤㅤ✓ 예제로 설명할 것
   ㅤㅤ✓ 예제가 많다면, 어딘가 다른곳에 올려 둘것 (치트시트 또는 웹페이지)
   ㅤㅤ✓ man 페이지엔 신경쓰지 말 것 (많이 안쓰고, 윈도우에서 동작도 안함)
   ㅤㅤ✓ 도움말이 길다면 pager로 파이프 할 것
   ㅤㅤ✓ 가장 많이 쓰는 플래그와 명령을 도움말 처음에 표시
   ㅤㅤ✓ 도움말에서 포맷팅 사용할 것 (볼드체)
   ㅤㅤ✓ 사용자가 뭔가를 잘못했고, 그걸 추측할수 있다면 추천할 것
   ㅤㅤ✓ 당신의 명령이 뭔가를 pipe로 받아들이길 바라는데, stdin 이 인터랙티브 터미널이면 도움말을 표시하고 바로 종료할 것
   ㅤ→ 출력
   ㅤㅤ✓ Human-readable(사람이 읽을 수 있는) 출력이 가장 중요
   ㅤㅤ✓ 사용성에 문제가 되지 않는다면 machine-readable 출력을 제공
   ㅤㅤ✓ human-readable 때문에 machine-readable 이 불가능 하다면 --plain 옵션으로 grep / awk 등과 연계 가능하도록
   ㅤㅤ✓ --json 입력을 받으면 JSON 포맷으로 출력
   ㅤㅤ✓ 성공시 출력은 없는게 좋지만, 있어야 할 경우 간결하게 할 것. -q 옵션으로 필요없는 출력 제외 지원
   ㅤㅤ✓ 상태를 바꾼다면, 사용자에게 말할 것 (git push의 출력 참조)
   ㅤㅤ✓ 현재 시스템의 상태를 보기 쉽게 할 것
   ㅤㅤ✓ 사용자가 실행할수 있는 명령을 추천할 것. (git status 치면 git add / restore 를 보여주듯이)
   ㅤㅤ✓ 프로그램의 내부를 넘어가는 행동들은 명시적 이어야 함. 사용자가 지시하지 않은 파일을 읽고 쓴다거나(캐쉬), 원격서버와 연결하는 등(파일 다운로드)
   ㅤㅤ✓ ASCII 아트를 이용해서 정보 밀도 증가 시키기
   ㅤㅤ✓ 의도를 가지고 컬러 사용하기. 오남용은 말 것
   ㅤㅤ✓ 터미널이 아니거나, 사용자가 요청시 컬러는 끌것
   ㅤㅤ✓ stdout 이 인터랙티브 터미널이 아니면 애니메이션을 표시하지 말 것
   ㅤㅤ✓ 뭔가를 명확히 할때만 심볼/이모지를 사용할 것
   ㅤㅤ✓ 기본적으로, 제작자만 알아볼수 있는 정보들은 출력하지 말 것
   ㅤㅤ✓ stderr 를 로그파일처럼 사용하지 말 것 (적어도 기본값으로는 설정하지 말 것. 상세모드에서나 ERR,WARN 같은 로그 레벨을 출력하세요)
   ㅤㅤ✓ 많은 텍스트를 출력한다면 less 와 같은 페이징 도구를 사용할 것
   ㅤ→ Error
   ㅤㅤ✓ 에러를 Catch 하고 사람을 위해 문구를 재작성할 것
   ㅤㅤ✓ Signal-to-noise ratio(신호 대 잡음비)가 중요. 똑같은 에러가 여러번 난다면 설명하는 헤더와 함께 묶어서 출력
   ㅤㅤ✓ 사용자가 제일 먼저 보는게 어디인지를 고려할 것
   ㅤㅤ✓ 예상치 못한/설명할수 없는 오류가 나면, debug/trace 정보를 제공하고, 이 버그를 개발자에게 보내는 방법을 설명할 것
   ㅤㅤ✓ 버그 리포트를 별도의 노력없이 보낼수 있도록 할 것. (모든 정보를 다 담은 URL을 만들어주고 브라우저에 넣는 것만으로 신고가 끝나게)
   ㅤ→ Argument & Flags : 인자와 플래그
   ㅤㅤ✓ 인자 : 위치 파라미터. 순서가 중요. cp bar foo 와 cp foo bar 는 다름
   ㅤㅤ✓ 플래그 : 이름붙은 파라미터. ""-r"" 처럼 한글자 또는 ""--recursive"" 처럼 여러 글자. 순서는 일반적으로 중요하지 않음.
   ㅤㅤㅤㅤㅤㅤㅤㅤ사용자 값을 포함하기도 함. --file foo.txt 또는 --file=foo.txt
   ㅤㅤ✓ 인자보다 플래그를 선호할 것. 더 많은 타이핑이 필요하지만, 보다 명확함. 인자가 많으면 나중에 기능 확장을 할 때 어려움
   ㅤㅤ✓ 플래그의 짧은 버전과 풀버전을 모두 가질 것. 스크립트에서 풀버전을 쓰면 다른 설명이 필요 없음
   ㅤㅤ✓ 주로 사용 하는 플래그에만 한글자 플래그를 사용
   ㅤㅤ✓ 간단한 동작을 위해서 여러개의 인자를 받는 것도 가능
   ㅤㅤ✓ 서로 다른 두개 이상의 인자가 필요하다면 뭔가를 잘못하고 있는 것일수도
   ㅤㅤ✓ 플래그는 (이미 있다면) 표준적인 이름을 쓸 것
   ㅤㅤㅤㅤ-a --all , -d --debug , -f --force , -h --help , -o --output , -p --port , -q --quiet , -u --user
   ㅤㅤ✓ 대부분 사용자에게 적합한 것을 기본값으로 할 것
   ㅤㅤ✓ 사용자가 입력이 필요한 인자/플래그를 넣었는데 받은 값이 없다면, 사용자에게 입력을 요구할 것
   ㅤㅤ✓ 항상 인자/플래그로 값을 넘기는 방법을 제공하고, 무조건 입력(prompt)을 요구하지 말 것
   ㅤㅤ✓ 뭔가 위험한 일을 하기전엔 항상 확인을 요구할 것
   ㅤㅤ✓ 입력 또는 출력이 파일이라면 - 로 stdin 에서 받거나 stdout으로 출력하는 것을 지원할 것
   ㅤㅤㅤㅤ$ curl https://example.com/something.tar.gz | tar xvf -
   ㅤㅤ✓ 플래그가 추가 값을 받을수 있다면, ""none"" 같은 특수 단어를 허용할 것. ssh -F none
   ㅤㅤ✓ 가능하면 인자와 플래그, 서브커맨드 들을 순서와 상관없이 만들 것
   ㅤㅤ✓ 민감한(암호같은) 인자 값들은 파일로 입력될 수 있게 할 것
   ㅤ→ Interactivity
   ㅤㅤ✓ stdin 이 인터랙티브 터미널일때만 prompt 나 인터랙티브 기능을 사용할 것
   ㅤㅤ✓ --no-input 이 전달되면, prompt 나 어떤 인터랙티브 기능도 사용하지 말 것
   ㅤㅤ✓ 암호를 입력받을땐, 사용자가 입력하는 값을 보이지 말 것
   ㅤㅤ✓ 사용자가 쉽게 나갈수 있게 할것 (vim처럼 하지 말것). Ctrl-C 가 동작하게 할 것. ssh,tmux 등 프로그램 실행관련이라 ctrl-c가 불가능하면 SSH 처럼 ~ 로 시작하는 escape sequence 를 제공한다는 것을 명확히 표시할 것
   ㅤ→ Subcommands
   ㅤㅤ✓ 복잡한 도구는 subcommand 를 제공해서 복잡도를 줄일수 있음.
   ㅤㅤ✓ 또한 긴밀히 연관된 여러도구가 있다면 이걸 하나의 명령으로 묶어서 편하게 사용하게 할 수 있음
   ㅤㅤ✓ 서브코맨드 간에 일관적일 것. 같은 플래그는 같은 의미로, 비슷한 출력 포맷을 가지게
   ㅤㅤ✓ 여러 단계의 서브 코맨드간에 일관적인 이름을 사용할 것
   ㅤㅤ✓ 헷갈리거나 비슷한 이름의 명령을 넣지 말 것. update 와 upgrade 같은
   ㅤ→ Robustness
   ㅤㅤ✓ 사용자 입력을 모두 검증 할 것. 빨리 체크하고, 이해가능한 에러를 표시할 것
   ㅤㅤ✓ 빠른 것보다 반응성이 더 중요함
   ㅤㅤ✓ 오래 걸린다면 진행상황을 보일 것
   ㅤㅤ✓ 가능하다면 병렬적으로 일을 처리할 것. 하지만 깊이 생각하고 할 것.
   ㅤㅤ✓ 타임아웃을 넣을 것
   ㅤㅤ✓ 멱등(idempotent)으로 만들 것. (다시 실행해도 결과가 달라지지 않는 것). 에러가 났을때 쉘에서 화살표 위로 올려서 다시 이전부터 이어서 수행가능하게
   ㅤㅤ✓ Crash-only로 만들 것. Idempotence 의 다음 단계. 작업후 정리를 수행할 필요가 없거나, 다음 실행시까지 정리를 연기할수 있다면, 프로그램은 실패 또는 중단시 즉시 종료가 가능.
   ㅤㅤ✓ 사람들은 당신의 프로그램을 오용할 것임
   ㅤ→ Future-proofing
   ㅤㅤ✓ 가능하면 변경은 추가(additive)하는 방식으로. 기존 기능을 바꿔서 호환을 깨지말고, 새로운 플래그를 추가할 것
   ㅤㅤ✓ 추가방식 변경이 아니라면 먼저 경고할 것
   ㅤㅤ✓ 사람들을 위한 출력변경은 대부분 OK
   ㅤㅤ✓ 사람들이 주로 쓰는 서브코맨드가 있다고, 명시하지 않아도 그걸 수행하는 catch-all Subcommand 는 만들지 말 것
   ㅤㅤ✓ 임이의 Subcommand 명령 약자는 허용하지 말 것
   ㅤㅤ✓ 언젠가는 잘 동작하지 않게 되는 ""시한 폭탄""은 만들지 말 것
   ㅤ→ Signals and control Characters
   ㅤㅤ✓ 사용자가 Ctrl-C(INT signal)을 입력하면 최대한 빨리 중단할 것
   ㅤㅤ✓ 사용자가 오래 걸리는 Clean-up 상태에서 Ctrl-C를 누른다면 무시할 것. 다시 누르면 강제종료 가능하게
   ㅤㅤㅤㅤㅤ^CGracefully stopping... (press Ctrl+C again to force)
   ㅤ→ Configuration
   ㅤㅤ✓ XDG(X Desktop Group) 스펙을 따를 것
   ㅤㅤ✓ 당신의 프로그램 것이 아닌 설정을 수정한다면 사용자에게 확인받고, 명확히 뭘 하는 것인지 알려줄 것
   ㅤㅤ✓ 설정 파라미터는 우선 순위대로 적용할 것
   ㅤㅤㅤㅤ플래그 > 쉘 환경변수 > 프로젝트 레벨 설정 (.env) > 사용자 설정 > 시스템 설정
   ㅤ→ Environment Variables
   ㅤㅤ✓ 환경변수는 명령이 실행되는 컨텍스트에 따라 달라지는 동작을 위한 것
   ㅤㅤ✓ 이식성을 극대화 하기 위해, 환경변수는 대문자/숫자/밑줄만 포함되어야 하고 숫자로 시작하면 안됨
   ㅤㅤ✓ 가능하면 환경변수에는 한줄짜리(single-line) 값을 사용
   ㅤㅤ✓ 널리 사용되는 이름을 사용하지 말 것
   ㅤㅤ✓ 가능하면 범용 환경변수를 체크하고 사용
   ㅤㅤㅤㅤNO_COLOR, DEBUG, EDITOR, HTTP_PROXY, SHELL, TERM, TERMINFO, HOME, TMPDIR, PAGER, LINES ..
   ㅤㅤ✓ 필요하다면 .env 에서 환경변수를 로딩
   ㅤㅤ✓ 설정 파일로 .env 확장을 사용하지 말 것
   ㅤ→ Naming
   ㅤㅤ✓ 이름은 간단하고 외우기 쉬운 단어로
   ㅤㅤ✓ 소문자만 사용하고, 꼭 필요할때만 -(대쉬) 사용
   ㅤㅤ✓ 가능하면 짧게
   ㅤㅤ✓ 키보드에서 치기 쉽게
   ㅤ→ Distribution
   ㅤㅤ✓ 가능하면 싱글 바이너리로 배포
   ㅤㅤ✓ 쉽게 언인스톨 가능하게
   ㅤ→ Analytics
   ㅤㅤ✓ 도구의 사용 및 크래쉬 데이터를 사용자 동의없이 당신에게 보내지 말 것

   좋은 내용 감사합니다.

   싱글바이너리로 잘 만들어주는 Rust 와 Go 때문에 좋은 커맨드라인 도구들이 점점 많아지는 것 같습니다.
   - 요즘 유용한 커맨드 라인 도구 모음 https://news.hada.io/topic?id=793
   - 생산성을 높여주는 rust command line 유틸리티 https://news.hada.io/topic?id=2958
   만드는 것도 더욱 편해지고 강력해지는 중
   - Rust로 Command Line 앱 만들기 https://news.hada.io/topic?id=972
   - Caporal.js - Node CLI 개발용 풀 프레임워크 https://news.hada.io/topic?id=2378
   - create-node-cli - Node.js로 CLI 쉽게 만들기 https://news.hada.io/topic?id=3268
   - Gooey 로 모든 언어 및 CLI 도구의 GUI 만들기 https://news.hada.io/topic?id=582
   - ink - React로 CLI만들기 https://news.hada.io/topic?id=2041

   간단히 번역하면서 저도 많이 배웠습니다. 하고나서 보니.. Repo 자체를 번역하는게 좋지 않았나 생각도 드네요. ^^;;
"
"https://news.hada.io/topic?id=3479","Hotwire : HTML Over The Wire","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Hotwire : HTML Over The Wire

   - 최신 웹페이지를 JavaScript와 JSON 전송대신, HTML을 직접 전송해서 만드는 방식
   ㅤ→ 이메일 서비스 Hey의 프론트엔드에 사용
   - 빠른 페이지로딩, 서버 렌더링, SPA의 속도와 반응성을 희생하지 않으면서 서버쪽에서 다양한 언어 사용 가능
   Turbo + Stimulus + Strada
   - Turbo : Hotwire의 핵심. 빠른 웹앱을 만들수 있도록 기술의 모음
   ㅤ→ Turbo Drive : 모든 a 링크 클릭 및 form submit 을 fetch 로 변환해서 서버에서 읽어와 body를 교체. SPA처럼 동작하게 변경
   ㅤ→ Turbo Frames : 복잡한 페이지를 프레임으로 분리해서 각각 로딩 및 렌더링. iframe과 비슷하지만 한개의 DOM에서 처리되는 가상 frame
   ㅤ→ Turbo Streams : 페이지 변경사항을 Websocket으로 스트림 전송
   ㅤ→ Turbo Native : Turbo의 방식을 iOS/Android 하이브리드 앱에 사용 가능하게 지원
   - Stimulus : Turbo가 80%를 처리하고, 나머지 부분을 처리. 최소한의 JS프레임워크
   - Strada : 웹 과 네이티브를 연결해주는 Bridge. 내년에 발표 예정

   HTML을 전송한다는 개념은 PJAX가 떠오르내요.

   strada 는 https://m.signalvnoise.com/basecamp-3-for-ios-hybrid-architecture/ 에서 이야기 한 내용이 코드로 나온게 아닐까 싶습니다.

   Stimulus도 원래 Basecamp에서 사용하던 js 프레임쿼크긴 한데 Turbo도 저장소를 보니 Turbolink를 Turbo로 바꾼거군요. Strada는 공개 안되어서 아직 잘 모르겠지만 기존 기술을 묶어서 Hotwire라는 접근 방법에 사용한 것 같네요.

   Phoenix LiveView 도 그렇고 요즘엔 이런 방식의 시도가 많이 나타나는 것 같습니다. 프론트엔드 피로감이 정점에 달한 것이 아닌지?

   혹시 지붕에 올라가기 좋아하는 ㅂ응ㅈ 씨?

   아이디어 재밌네요

   Hey의 기술스택이 공개되었을 때 https://news.hada.io/topic?id=2355
   프론트엔드에 Stimulus, Turbolinks 외에 α 가 더 있다고 했는데 그게 이 Hotwire 인가 보네요
"
"https://news.hada.io/topic?id=3474","SuperTokens - 오픈소스 Auth 서비스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      SuperTokens - 오픈소스 Auth 서비스

   - Auth0 / Firebase Auth / AWS Cognito 등의 오픈소스 대체제
   - OAuth, 이메일/암호 로그인, 암호 찾기, 세션 관리, 이메일 인증, 소셜 로그인
   주요 컴포넌트
   - SuperToken Core : Java 로 만들어진 HTTP 서비스. 실제 비즈니스 로직
   - Frontend SDK : 웹/iOS/Android/ReactNative 등 지원하는 로그인 UI 관련 기능
   - Backend SDK / Driver : NodeJS,Flask,Golang 등 다양한 백엔드 프레임워크와 연동하여 SuperToken Core와 통신
   - Database Plugin : MySQL,PostgresSQL,MongoDB,SQLite 등
   - Y Combinator가 투자

   ORY Hydra와 다른점이 무엇일지 궁금하네요. https://github.com/ory/hydra
"
"https://news.hada.io/topic?id=3369","typesense - 오픈소스 검색 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         typesense - 오픈소스 검색 엔진

   - 매우 빠르고, 검색어에 연관된 결과를 찾아줌
   ㅤ→ Typo Tolerance(오타 허용) : 어느정도 알아서 오타를 인식하고 처리
   - 검색 순위를 편하게 조정 가능
   - 검색시 특정 필드별로 정렬 지원
   - Facet & Filter 탐색 지원 : 검색 결과를 특정 필드단위로 묶어서 보여주고 필터링
   - 특정 결과에 접근하기 위한 API Key 범위 제한 가능
   - Raft 기반 클러스터링
   - Linux/Mac 바이너리 및 도커 이미지 제공
   - C로 작성된 오픈소스
   FAQ에서
   - ElasticSearch 와는 뭐가 다른가요 ?
   ㅤ→ ES는 설치 및 관리가 복잡하지만, TypeSense는 ""Time-to-Market""을 위해 만들어진거라 빠르게 설치가 가능하고, 물론 스케일링도 할 수 있음
   - Algolia 와는 뭐가 다른가요 ?
   ㅤ→ 알고리아는 꽤 좋은 검색엔진 SaaS지만 비쌈. TypeSense는 자체 호스팅도 가능하고, SaaS 버전도 저렴(저장된 레코드 나 검색당 과금이 아니고, 사용 시간 및 밴드위스 당으로 과금)
   ㅤ→ 기능상으로 TypeSense는 ElasticSearch 보다는 Algolia 랑 비슷
   - 속도가 빠른데 메모리 풋프린트는 ?
   ㅤ→ 기본적으로 TypeSense서버는 30메가 정도의 메모리를 차지하고, 데이터 인덱싱을 시작하면 늘어나는데 굉장히 간결한 데이터구조를 유지함
   ㅤ→ 해커뉴스 글 제목 1백만개가 JSON으로 88MB인데, 이거를 Typesense가 인덱스해서 메모리에 올리면 165MB 정도를 사용

   기본적으로 서비스 내부에서 검색엔진을 만든다고 하면, 설정부터 관리가 좀 복잡한데 이걸 빠르게 할 수 있는 오픈소스 입니다.
   다만 한국어라면 형태소등 신경써야할게 있겠지만.. 이게 글자단위로 빠르게 찾아내서 결과를 보여주기 때문에 고려할 만한 가치는 있어 보입니다.

   이 TypeSense를 활용해서 데모로 만든 사이트가 있으니 같이 보시면 좋을거 같아요
   - 2백만개 음식 레시피 검색 엔진 https://news.hada.io/topic?id=3370
"
"https://news.hada.io/topic?id=3453","FFmpeg 20주년 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              FFmpeg 20주년

   - 지금의 동영상 환경을 만드는데 큰 공헌을 한 ffmpeg 이 2000/12/20에 발표되어서 이제 20주년
   - 처음에 개발한 사람은 QEMU,TCC,QuickJS,JSLinux를 만든 괴물급 개발자인 Fabrice Belllard (지금은 ffmpeg에서는 손을 뗌)

   FFmpeg 때문에 동영상 환경이 정말 많이 발전해온거 같습니다.
   이젠 EMScripten 을 통해서 ffmpeg.js 로 만들어져서 웹에서도 많이 사용되어지고 있고, 최근엔 WASM으로 포팅도 되었습니다.
   그래서 아래와 같은 도구들이 만들어지는게 가능해졌고, 앞으로 웹에서의 영상제작이 더 활발해 질 것 같습니다.
   Animockup - 앱/웹의 애니메이션 목업 만들기 https://news.hada.io/topic?id=1768
   Screenity - 스크린/카메라 녹화용 크롬 확장 https://news.hada.io/topic?id=3298
   Made it For Fun - 동영상위에 이미지/텍스트를 애니메이트 하는 도구 https://news.hada.io/topic?id=1869
   개발자인 Fabrice Bellard 는 정말로 엄청난 사람인데
   예전에 QuickJS 글에 달았던 소개를 복사해봅니다. https://news.hada.io/topic?id=59
   ~~
   Fabrice Bellard 는 정말 괴물급 개발자.
   1989년에 LZEXE 개발
   1996년에 Harissa - Java Virtual Machine 이자 Java to C 코드 컴파일러
   1997년에 2진법 표기시 파이(π)의 특정 자리수 값을 알아내는 공식 발표.
   -> 앞자리를 전혀 계산하지 않는 방법으로 계산. 1조번째 자리는 ""1""
   https://en.wikipedia.org/wiki/Bellard%27s_formula
   1998년에 TinyGL 발표 - 작고 임베드가능한 OpenGL 구현체
   2000년에 FFMpeg 발표. 현재 우리가 보고있는 대부분의 동영상 플레이어가 사용중.
   2000년에 가장 큰 소수를 찾는 448바이트 C코드로 IOCCC 우승. 이 소수는 2016년까지 발견된 가장 큰 소수였음.
   2001년에 Tiny C Compiler 발표 - 초경량 C 컴파일러
   2002년에 QEmacs 발표 - 초경량 Emacs 클론. HTML/XML/CSS2 WYSIWYG 렌더링 및 수정가능 (자체 브라우저엔진 내장)
   2003년에 QEMU 발표 - 하드웨어 가상화 기능을 갖춘 CPU 에뮬레이터
   2004년에 TinyCC Boot Loader 발표 - 리눅스 커널을 직접 컴파일해서 부팅이 가능한 부트로더
   2005년에 DVB-T 시그널 생성기 발표 : 비싼송출기 대신 데스크탑에서 디지털티비 송출이 가능. 이건 소스코드 미공개
   2009년에 π 소수점 아래 2조 7천억자리 까지 계산해서 세계 신기록세움. 자기 데스크탑으로 131일 동안 계산했다고.
   -> 큰 숫자에 관심보다는 그냥 컴퓨터 프로그래밍 도전을 위해서 였다고.
   2011년에 JSLinux 발표. 웹브라우저에서 실행되는 Linux 발표.
   그외에도 JPG보다 압축률좋은 HEVC 기반 이미지 포맷 BPG (자바스크립트 디코더 제공해서 아무 브라우저에서나 사용가능)
   4G LTE/5G NR 베이스 스테이션을 PC기반으로 저렴하게 구현했고, 이건 자신의 회사인 Amarisoft 를 통해서 상품화
   하는일마다 이게 어찌 한사람이 하는 일인지 놀라울뿐인 사람.

   와 진짜 대단합니다.

   와,,,, 정말,,, 감탄만 나오네요..

   정말 1사람인가 싶네요 ㅎㅎ
   사람인가 싶기도 하구요
"
"https://news.hada.io/topic?id=3403","Firefox 84.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Firefox 84.0 릴리즈

   - 애플실리콘 네이티브 : 실행속도 2.5배, 웹앱 반응속도 2배 빨라짐
   - WebRender 적용 확대 : MacOS Big Sur, Linux/Gnome/X11, 윈도우(Intel Gen 6 GPU) 및 윈도우 7,8
   ㅤ→ Rust로 개발된 GPU기반 2D 렌더링 엔진
   - 리눅스에서 공유메모리 할당을 최신 기술로 변경, 성능개선 및 도커 호환 향상
   - Adobe Flash를 지원하는 마지막 릴리즈
   - 개발자도구
   ㅤ→ 접근성 도구가 키보드 탭오더 표시 가능
   ㅤ→ 네트웍 패널에서 비정상적인 종료 핸들링 가능

   파이어폭스는 매번 매우 빨라졌다고는 이야기하는데 체감은 어렵네요.. 렌더링 성능 향상은 있는 것 같지만 여전히 JS 성능이.. (또르르) M1에서 벤치마크 해보니 JSC(사파리 자바스크립트 엔진) 대비 1/2 수준이네요.
"
"https://news.hada.io/topic?id=3411","Sketch, 실시간 협업기능 베타 출시 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Sketch, 실시간 협업기능 베타 출시

   - 베타에선 Teams 구독자에게만 가능
   ㅤ→ Team 웍스페이스에 문서를 저장하여 바로 협업 가능
   ㅤ→ 클라우드 저장이므로 버전관리도 자동
   - 다른 사용자의 작업은 액션이 끝나면 바로 화면에 반영 (리사이즈 드래그 완료 등)
   - Team외의 Sketch 계정을 초대 가능(곧)
   - 협업용으로 만든 문서는 기존 버전과 호환 안됨
   - 내년초 정식오픈 예정

   2020 디자인 툴 설문조사 https://news.hada.io/topic?id=3405
   조사에서 보면 Figma 가 대세이긴 하지만, Mac 전용 Sketch 앱의 빠릿함은 또 다른 선호도가 있긴 합니다.
"
"https://news.hada.io/topic?id=3436","AWS, Route 53 DNSSEC 지원 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       AWS, Route 53 DNSSEC 지원 발표

   AWS는 Route 53 DNSSEC(Domain Name System Security Extensions)을 지원한다 발표했습니다. 존에 DNSSEC 사이닝을 활성화하면 Route 53은 존 내에 있는 각각의 레코드를 모두 서명(sign)합니다.
"
"https://news.hada.io/topic?id=3460","V 언어 0.2 릴리즈언어 0.2 릴리즈

   첫번째 메이저 릴리즈. 안정성과 메모리관리에 중점
   - 컴파일시 -autofree 로 leak 없는 메모리 관리 지원
   - 쓰레드 세이프 타입 어레이
   - 웹소켓 모듈, IO 스트림
   - Metal/DirectX/OpenSL 지원
   - Go와 비슷한 네트워킹 모듈
   - V-WASM 추가

   이게 발전하고 있다니... 신기하네요 ㅎㅎ

   V 프로그래밍 언어 https://news.hada.io/topic?id=781
   예전에 이슈가 좀 되었긴 한데..
   340명이 넘는 컨트리뷰터, 7600개의 커밋, 4110개의 PR로 나름 잘 개발중인 것 같네요.
   V 언어의 주요 특징
   - 한시간내에 배울수 있는 간단한 언어
   - 빠른 컴파일
   - C와 같은 성능 (V의 메인 백엔드가 C로 컴파일 됨)
   - 안전함 : null, global 이 없고, 기본으로 immutable
   - C 언어를 V로 변환 가능
   - 핫 코드 리로딩
   - 크로스 플랫폼 UI 라이브러리 : 윈도우/맥/리눅스. 그리고 곧 안드로이드/iOS 및 WASM을 이용한 웹도 지원 예정
   - 그래픽 라이브러리, ORM, 웹프레임워크 내장
   - REPL 제공
"
"https://news.hada.io/topic?id=3488","왜 아이폰 타이머는 가짜로 시간을 표시할까","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        왜 아이폰 타이머는 가짜로 시간을 표시할까

   - 타이머 사용자가 시간을 직관적으로 인지할수 있도록 약 500ms(0.5초)의 시간을 더해서 계산하는 방식을 사용한다고
   - 5초를 잡고 타이머를 누르면 0.5초동안 5라는 숫자를 보이다가 4초로 넘어가며, 0초 숫자도 0.5초만 보여줌
   ㅤ→ 즉, 5.5 부터 0.5 까지로 가면서 5와 0을 0.5초씩 보여주는 것
   - 위 내용을 자바스크립트로 구현해서 비교한 코드 : https://codepen.io/lhermann/pen/wvzPxXj

   흥미롭네요
"
"https://news.hada.io/topic?id=3490","Zoomquilt - 무한 줌되는 이미지 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Zoomquilt - 무한 줌되는 이미지

   - 일러스트를 무한으로 줌되게 만든 사이트
   - 키보드 ↑↓ 로 앞뒤 이동 및 속도 조절 가능
   - 안드로이드용 Live Wallpaper 지원
   → Zoomquilt (2004) - https://zoomquilt.org/
   → Zoomquilt 2 (2007) - http://zoomquilt2.com/
   → Arkadia Zoomquilt (2015) - http://arkadia.xyz/
   * 계속 보고 있으면 어지러울 수 있으니 주의하세요
   * Zoomquilt 2는 88장, Arkadia 는 48장의 이미지를 로테이팅 합니다.
   ㅤ→ 소스코드 : http://arkadia.xyz/zoom.js?v=19

   으어 그림 한참 보고 나니까 반작용으로 댓글 쓰는이화면이 자꾸 뒤로 점점 물러나는 느낌이 들어요 @.@
"
"https://news.hada.io/topic?id=3430","미국 상무부, 화웨이에 이어 DJI를 블랙리스트에 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     미국 상무부, 화웨이에 이어 DJI를 블랙리스트에 추가

   세계에서 가장 큰 드론 제조업체인 DJI가 화웨이에 이어 미 상무부 블랙리스트에 올랐습니다. 놀랍게도 미국 상무부는 감시(보안) 문제가 아닌 ""인권 침해""를 언급했습니다.
"
"https://news.hada.io/topic?id=3454","애플은 2024년까지 자동차 생산을 목표로 하고 있으며 "차세대"배터리 기술에 주목하고 있음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          애플은 2024년까지 자동차 생산을 목표로 하고 있으며 ""차세대""배터리 기술에 주목하고 있음

   - 프로젝트 타이탄 (Project Titan)으로 알려진 애플의 자체 차량 설계는 2014년 처음 시작 되었고 이후로 불규칙하게 진행중이였음
   - 이번 애플 전략의 핵심은 배터리 비용을 ""급격히""낮추고 차량 범위를 늘릴 수있는 새로운 배터리 디자인
   - 누가 애플 브랜드의 자동차를 조립할 것인지는 불분명하지만 소식통은 제조 파트너에게 의존할 것으로 기대
   - 애플은 자율주행차가 도로를 3차원으로 볼 수 있도록 도와주는 라이더 센서를 포함한 시스템 요소를 외부 파트너에게 제공하기로 결정

   아이폰이 처음에 2등 통신사하고만 계약했던 것처럼 테슬라에게 밀리는 2등들을 잘 이용할 것만 같은 느낌이네요
"
"https://news.hada.io/topic?id=3467","우리가 .ORG를 구한 방법 : EFF의 2020년 리뷰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    우리가 .ORG를 구한 방법 : EFF의 2020년 리뷰

   큰 이슈가 되었던 .ORG TLD 관리회사 PIR의 매각에 대응해서 막아낸 EFF의 올 한해 리뷰
   2만7천명이 오픈레터에 사인하고, 871개의 단체들이 참여해서, 적극적으로 이 판매건이 미치는 영향들을 파악하고 알림
   최종적으로 4월에 ICANN 이사회가 .ORG 판매를 거부
   * 긱뉴스를 통해서 이 이슈들을 계속 팔로잉 했어서, 제가 정리했던 내용들을 모아봅니다.
   1985년 시작된 최초의 TLD(Top Level Domain)는 모두 7개
   .com, .int, .edu, .gov, .mil, .net, .org
   1998년부터 비영리 단체인 ICANN(Internet Corporation for Assigned Names and Numbers,국제인터넷주소관리기구) 가 이를 관리중.
   .com 도메인은 영리단체인 Network Solutions 가 관리했으나 현재 Verisign 이 인수.
   그래서 .com 도메인은 마치 가상의 부동산 처럼 사고 파는 애셋이 되었음.
   하지만 .org 는 비영리기관인 PIR 이 관리했고, $9.05 의 가격상한을 두어서
   애초에 비영리기관용 도메인이었던 .org 가 예산이 빠듯한 단체들이 쉽게 이용할수 있도록 했었음.
   하지만 2019년 6월 ICANN 이 .org 도메인의 가격상한을 없애 버렸음 ( .biz 와 .info 상한 없어짐 )
   그러자, 천만개의 .org 도메인을 관리하는 PIR(Public Internet Registry)이 핫한 인수대상으로 등극.
   PIR의 2018년 매출은 천이백억원 정도이며, 이중 절반인 600억원을 원래 소유였던 ISOC(Internet Society) 쪽에 주고 있었음.
   Ethos Capital 이 $1.135B(약 1조3천억원) 에 최종 인수자가 되었음.
   Ethos Capital 은 2019년에 새로 설립된 사모펀드이고, 펀드 자체에 ICANN 의 전 멤버들이 관련
   그에 대응해서 Public Internet Registry를 사모펀드인 Ethos Capital 에 매각하는 것을 중단해 달라고 요청하는
   https://savedotorg.org/ 가 만들어지고, CC,EFF,FSF,Internet Archive,Wikimedia,YWCA 등이 참여
   PIR 매각 가격이 $1.1B라고 밝힌 것에 대해 의문이 계속 나옴
   - 공개입찰도 없었음
   - 시장가격 조사도 없었음
   - 거래에 대해 공개된 적이 없음
   - 기부금 방식의 대안에 대한 논의 없음
   - 미래 성장률 고려 없는 가격 산정
   - 이 건이 가지는 충격에 대한 조사도 없었음.
   ICANN 이 승인 지연한 후, 캘리포니아 법무장관이 연기하면서 4번이나 지연
   최종적으로 PIR 매각을 거부하게 됨
   1. .org TLD를 관리하는 비영리단체 PIR이 사모펀드에 매각됨 https://news.hada.io/topic?id=912
   2. ICA 가 ICANN 에 .org 관리단체 매각에 대해 항의서한 보내 https://news.hada.io/topic?id=924
   3. Save.ORG - PIR 매각을 중단해달라는 서명 사이트 https://news.hada.io/topic?id=959
   4. ISOC가 .org 도메인을 매각한 금액은 1조3천억원 https://news.hada.io/topic?id=993
   5. .ORG Fire Sale : 어떻게 절반도 안되는 가격으로 팔렸을까 https://news.hada.io/topic?id=1012
   6. ICANN이 .ORG 거래건 승인을 지연하고 추가 자료 요청 https://news.hada.io/topic?id=1090
   7. 캘리포니아 법무장관이 .org 도메인 판매를 연기 https://news.hada.io/topic?id=1423
   8. ICANN이 .org TLD 판매 결정을 5/4일로 다시 한번 더 연기 https://news.hada.io/topic?id=1913
   9. ICANN, .ORG 판매에 대해서 거부하기로 최종 결정 https://news.hada.io/topic?id=2001
"
"https://news.hada.io/topic?id=3383","Google Chrome, 크롬을 사용하지 않더라도 사용자의 컴퓨터를 느리게 만들어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Google Chrome, 크롬을 사용하지 않더라도 사용자의 컴퓨터를 느리게 만들어

   ## 요약
   구글 크롬을 설치하면 컴퓨터에 Keystone이라 불리는 무언가를 설치하는데 이게 맥 기준 작업 관리자(activity monitor)에서 보이지도 않고, 크롬을 사용하지 않더라도 컴퓨터를 느리게 만든다고 합니다. 크롬과 Keystone을 모두 삭제하면 컴퓨터가 다시 빨라지고 다음 방법으로 Keystone을 삭제할 수 있습니다: (https://chromeisbad.com/#delete)
   1. /Application 폴더로 들어가 Chrome을 휴지통에 갖다 버립니다.
   2. Finder에서 Go 메뉴를 눌러 Go to folder를 클릭합니다.
   3. /Library 를 입력해서 다음 폴더에 있는 모든 Google 폴더 및 com.google, com.google.keystone으로 시작하는 파일을 삭제합니다: LaunchAgents, Application Support, Caches, Preferences
   4. 이번에는 ~/Library로 이동해 똑같이 삭제합니다.
   5. 휴지통을 비우고 컴퓨터를 재부팅합니다.
   ## 그럼 어떤 브라우저를 써야 하나요
   Safari는 맥에 이미 설치되어있는, 빠르고 효율적인 브라우저입니다. Chromium 기반의 웹 브라우저가 필요하다면 Brave나 Vivaldi를 추천합니다. Firefox는 인풋 딜레이가 조금 있어 약간 좀 그렇지만 나머지 부분에선 괜찮습니다. (Mozills는 Servo 팀을 해고한 미래를 내다볼줄 모르는 멍청이들입니다. Servo 팀이 다시 모인다면 그들이 하는 모든 일을 밀어주고 싶습니다.)
   ## Keystone은 그래서 무슨 짓을 하나요?
   Wired는 Google이 Google Earth에 Keystone을 넣었을 때 2009년에 최초로 Keystone을 제보했었습니다. Keystone은 맥에서 자동 업데이트 소프트웨어가 동작하는 데 꼭 필요한 행동이 아닌 이상한 행동을 하며 Mac을 크래시냈던 긴 역사가 있습니다.
   11년간 이 문제가 수정되지 않았다는 사실은 실제로 깨지지 않았다는 것을 의미할 수 있습니다. 자동 업데이트 소프트웨어가 자기 자신을 숨겨가며 사용자의 컴퓨터에서 CPU를 어마어마하게 사용해야 할 이유가 무엇이 있을까요?
   Google에서 Chrome을 만드는 모든 좋은 사람들에게 이렇게 말하고 싶습니다: 당신이 짠 코드와 사람들의 컴퓨터에서 일어나고 있는 일 사이에 무언가가 발생하고 있습니다. 이에 대한 원인을 파악해서 정직하게 제대로 밝혀주었으면 좋겠습니다.

   크롬 살치후에 항상 파인더에서 바람개비가 돌고 있는 모습이 자주 보이던데 이런 이슈가 있군요...
   한번 시도해봐야겠습니다.
   좋은 소식 감사합니다.

   윈도우용 구글 크롬은 해당하지 않는 얘기인가요?

   아직 웹 앱이 안 나온 앱들을 앱처럼 설치할 수 있는 기능때문에 간간히 쓰는데 (Roam 떄문에 =ㅁ=.. ) 크롬말고 대안이 있을까요? 파폭은 안 되는 것 같아서 OTL.

   “Mozills는 Servo 팀을 해고한 미래를 내다볼줄 모르는 멍청이들입니다. Servo 팀이 다시 모인다면 그들이 하는 모든 일을 밀어주고 싶습니다.”
   모질스 ㅋㅋㅋ
   그나마 서보 프로젝트 자체가 아직 완전히 공중분해되지는 않은 것 같지만, 과연 리눅스 재단에서 서보 프로젝트를 잘 밀어줄 수 있을지 걱정됩니다.

   창 띄워두고 에디터 창 안 보고 번역하며 옮겨적었더니 오타가 났네요 ㅠㅠ

   적절한 오타라고 판단됩니다..!?

   자신들의 미래를 스스로 포기한 모지리 놈들이라는 속뜻을 담은 반쯤 의도적인 오타로 추측했습니다. (?!)

   https://github.com/Eloston/ungoogled-chromium
   Google integration이 빠진 chromium 프로젝트입니다.

   https://mrmacintosh.com/google-chrome-keystone-is-modifying-var-symlin…
   더불어 SIP를 비활성화한 맥에서 Keystone이 /var 심링크를 제거해 부팅 이슈가 생기기도 했다고 합니다.
"
"https://news.hada.io/topic?id=3493","M1 맥에서 바뀐 시작모드들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            M1 맥에서 바뀐 시작모드들

   기존처럼 부팅할 때 키 조합을 눌러서 시작 모드를 바꾸는 방식이 아니라
   터치아이디 전원버튼을 길게 누르고 있는 것 만으로 시작모드 옵션을 바꿀 수 있는 메뉴가 나타난다.
   옵션에서 Command + D를 누르면 분석 모드 Diagnostics Mode
   Options 아이콘을 누르고 계속하면 기존 복구 모드 Recovery Mode
   쉬프트 누르고 Disk 아이콘을 선택하면 안전 모드 Safe Mode
   디스크 목록이 다 나타나길 기다렸다가 어느 디스크로 부팅할 지 선택도 가능
   옵션키를 누르고 Disk 아이콘 선택하면 Default 부팅 디스크 선택 가능
   Verbose Mode는 복구 모드 윈도우 메뉴에서 볼 수 있음
   SMC/NVRAM 리셋은 불가능
   DFU Mode 공장 초기화 모드 가능 (다른 맥에 연결해서 복구 가능)
   타겟 디스크 모드는 복구 모드에서 Share Disk로 선택
   싱글 유저 모드는 복구 모드 터미널 여는 정도만 가능

   오늘 SIP 끄려고 Command R 누르는데 반응이 없어 몇 분 동안 찾아봤었네요 ㅎㅎ
"
"https://news.hada.io/topic?id=3377","mapbox-gl-js는 더이상 3조항 BSD 라이센스가 아닙니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 mapbox-gl-js는 더이상 3조항 BSD 라이센스가 아닙니다.

   mapbox-gl-js가 2.0.0을 릴리스하면서 이번 버전부터는 3조항 BSD 라이센스(3-Clause BSD)가 아님을 밝혔다.
   2.0.0부터는 mapbox의 이용약관( https://www.mapbox.com/legal/tos/ )에 동의해야만 사용할 수 있게 되었고 더이상 오픈소스 라이센스를 따르는 프로젝트가 아니게 되었다.
"
"https://news.hada.io/topic?id=3492"," 효과적인 비즈니스 이메일을 쓰자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            효과적인 비즈니스 이메일을 쓰자

   ""격식과 절차, 형식에 맞고 잘 읽히는 비즈니스 이메일 작성하기""
   1. 메일을 받는 사람이 누구인가?
   2. 메일의 주제는 무엇인가?
   3. 이메일 스타일
   ㅤ1) 어조 (Tone)
   ㅤ2) 스타일 형식 (Format)
   4. 베스트 프랙티스 총정리
   ㅤ1) 제목 (Subject)
   ㅤ2) 호칭- 본문 시작
   ㅤ3) (분위기를 만들기 위한) 본문 문장 시작
   ㅤ4) 실 본문
   ㅤ5) 받는 사람에게 요청이 있을경우
   ㅤ6) 클로징 멘트
   ㅤ7) 서명
   ㅤ8) 첨부파일과 링크
   ㅤ9) 보내기 전 최종 리뷰
"
"https://news.hada.io/topic?id=3412","3000개 이상의 아이디어개 이상의 아이디어

   평범한 사람들이 낸 아이디어 모음입니다.
   600개까지 읽어 봤는데.
   사람들은 별에별 아이디어를 다 내는군요
   대충 맘에(?) 드는 것을 정리해봤습니다.(크롬 번역입니다)
   -------
   모든 Google 검색에서 Pinterest 링크를 제거하는 Chrome 플러그인
   백 스페이스를 누를 때마다 팩맨이 텍스트를 먹기 시작하는 텍스트 편집기입니다.
   불안한 사람들을위한 AI 크롬 확장. 모든 소셜 네트워크에서 불안하게 만드는 게시물에
   플래그를 지정합니다. 신고하는 게시물이 많을수록 AI가 자동 차단 상태가됩니다.
   디자이너를위한 Stackoverflow.
   기사의 단어 수를 알려주는 Chrome 확장 프로그램으로 읽을 시간이 있는지 알 수 있습니다.
   배경 음악을 추가 할 수있는 Chrome 탭 기능
   TikTok 동영상을 자동 차단하는 Chrome 확장 프로그램입니다.
   원래 암호를 만들 때 암호 요구 사항이 무엇인지 알려주는 크롬 확장 프로그램입니다
   뮤지션을위한 github.
   운동화 식별을위한 Shazam.
   외로운 노인을 자신의 기술을 배우려는 사람들과 연결하십시오.
   선택이 주어지면 X에 대해 40 년 이상의 경험을 가진 사람으로부터 X를
   더 잘하는 방법을 배우기로 선택합니다. 제 생각에는 때때로 경험이
   종이보다 더 가치가 있다고 생각합니다.
   음식에 대한 Shazam. 식당에서 식사하는 음식을 사진으로 찍고
   레시피와 재료를 보여주는 앱입니다.
   일일 스크럼 앱. 이 앱을 사용하면 비슷한 프로젝트에서 작업하는
   사람들을 찾을 수 있습니다. 아이디어를 서로 튕겨 내고 심지어 협업 할 수도 있습니다.
   보관 용 에어 비앤비 (창고).
   장소 (결혼식, 파티 등)를위한 에어 비앤비
   노숙자를위한 에어 비앤비. 주택 소유자가 노숙자 목록을 게시하도록 허용합니다.
   이유식 스캐너 앱. 이 앱은 음식이 제공하는 혜택과 아기에게 안전한지 알려줍니다.
   죽은 사람들이 자신에 대해 이야기하는 QR 코드 비석 및 가상 투어.
   음식이 만료일에 가까워지면 알려주는 앱입니다. 음식을 사용하고 낭비를
   막기위한 창의적인 레시피 아이디어와 함께 2 ~ 3 일 또는 설정된 시간이 남으면 앱에서 알려줍니다.

   기프트 카드를 다른 기프트 카드로 교환 할 수있는 앱 또는 웹 사이트
   스타트 업을위한 IMDB. 시작 아이디어를 검색하고 이전에 수행되었는지
   여부와 성공 또는 실패인지 확인하는 기능. 팀 규모, 영업, 통찰력 등의 기능이 포함됩니다.
   온도 표시기가있는 아기 젖병.
   모든 스마트 폰의 표준이므로 911에 전화를 걸면 긴급 블랙 박스 모드로 들어갑니다.
   배터리를 연장하기 위해 필수적이지 않은 프로세스를 종료하고 전면 및 후면 카메라에서
   비디오 녹화를 시작하며 생체 인식 + 특수 암호가 입력 될 때까지 전화기를이 모드로 잠급니다.

   QR코드비석 좋네요. 요즘은 추모공원에 많이들 안장하니, 거기서 호스팅하는 방법도 좋겠네요.

   좋은 링크 감사합니다. :D

   요새 많이 하는 리프레쉬 배송 서비스에서 소비자가 구매한 제품의 유통기한도 같이 관리해서 따로 확인하고 알려주는 서비스를 하면 좋겠네요. 냉장고 재고 = 리프레쉬 배송 재고가 되면 lock-in 효과가 있지 않을까요?
"
"https://news.hada.io/topic?id=3471","Ruby 3.0.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Ruby 3.0.0 릴리즈

   - Performance, Concurrency, Typing 개선이 주 목적
   - Performance: Ruby 2와 비교해 3배 향상
   - MJIT
   - Concurrency
   - Ractor (experimental): thread-safety 걱정 없이 parallel execution
   - Fiber Scheduler: event loop (non-blocking execution)
   - Typing (정적 분석)
   - RBS
   - TypeProf

   전통대로 2.7이 릴리즈된 지 딱 1년만에 릴리즈된 모양이군요.
   https://news.hada.io/topic?id=1149
   위 글에서 주요 기능으로 소개된 RBS이란 것은 여기에도 소개 글이 올라온 적이 있습니다. 간단히 말해서 Type Annotation을 위한 DSL인 듯.
   https://news.hada.io/topic?id=2560
   최근에 여기 올라왔던 아래 글을 보고 루비 온 레일즈에 관심이 생기긴 했는데, 현실은 내년 초부터 기존에 안 써봤던 언어와 프레임워크로 진행되는 업무에 투입될 예정이라 그거 공식 문서와 튜토리얼이나 간간히 보는 게 전부네요.
   https://news.hada.io/topic?id=3297
"
"https://news.hada.io/topic?id=3394","Google 인증 서버 다운","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Google 인증 서버 다운

   Google 인증 서버에 문제가 발생해 로그인을 해야 사용할 수 있는 모든 서비스가 마비된 상태입니다.
   임시 방편으로 로그인을 하지 않아도 사용할 수 있는 서비스(유튜브)는 로그아웃 후 또는 Incognito 모드에서 사용 가능합니다.

   자세한 내용이 GCP Status Dashboard 에 올라왔군요. https://status.cloud.google.com/incident/zall/20013

   인증쪽에 문제가 생기면서 인증만 안하면 다른건 사용이 모두 가능한듯하네요.

   https://reddit.com/r/google/…
   Google 직원 어카운트(corp accounts)도 장애가 발생하고 있다고 하네요.
"
"https://news.hada.io/topic?id=3404","AWS CloudShell 공개 - 클라우드 관리용 브라우저 쉘","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  AWS CloudShell 공개 - 클라우드 관리용 브라우저 쉘

   - 웹브라우저에서 AWS 자원에 커맨드라인 접근 가능
   - 자동 인증된 채로 aws cli 및 node,python,jq,git,npm,pip 등 기본 사용가능
   - 항상 최신 버전의 Amazon Linux 2 환경 적용
   - 리전당 $HOME 폴더에 1GB 용량 제공. 스크립트 및 각종 파일, 도구등 저장 가능
   - 별도 비용은 없음
   - 다크테마 및 폰트 크기 변경가능
   - 멀티세션 지원 : 탭 및 가로세로 분할
   - 파일 업로드/다운로드 가능
   - 아웃바운드 네트웍 접근만 지원
   ㅤ→ Private VPC 서브넷 안의 리소스에 접근은 아직 불가능 하지만 지원 예정
   - 리전당 최대 10개의 동시 세션
   - 아직 서울 리젼은 지원안함

   gcp 에서는 원래 되던 그거랑 같은것같은데,, 생각보다 쉬운기능은 아닌가보네요

   음... 더 지켜봐야겠네요.
"
"https://news.hada.io/topic?id=3452","NoteCalc - 사용하기 편한 노트형 계산기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       NoteCalc - 사용하기 편한 노트형 계산기

   - 글자가 포함된 노트중에서 수식만 빼내어서 우측에 계산해 주는 도구
   - 맥/iOS용 훌륭한 계산기앱 Soulver의 오픈소스 웹버전
   - 숫자만 자동 합산
   - 선택 부분만 계산해서 보여주기
   - 특정 라인 결과값 참조
   - 변수/참조 하이라이팅
   - 변수 이름 자동완성
   - 벡터 와 행렬 지원
   - 비트연산 및 16진수 표시
   - sin,cos,pi,nth 등 내장 함수
   - 단위 변환
   - 자동 저장 및 공유 기능
   - Rust 로 개발된 오픈소스

   여행 일정 메모겸 비용 계산으로 활용하면 좋겠군요. 어서 코로나가 마무리되어야......

   제가 아이폰에서 가장 잘쓰는 계산기 앱이 Soulver 인데, 웹버전이 있는지 몰랐네요.
   ( 지금은 iOS용 새 버전을 위해서 기존 버전은 내려가서 구입을 할수가 없고 맥버전만 구입이 가능합니다. 조만간 새 버전을 낸다고는 합니다)
   https://www.acqualia.com/soulver/
   정말로 대충 막 적어놓으면 우측에 계산을 해주는 신통방통한 계산기입니다.
   앱스토어에서 Notepad Calculator 로 검색해보면 비슷하게 구현한 앱들이 많으니 함 써보시기 바랍니다.
   아쉬운건 아이폰 Soulver 는 한글도 잘 써지는데, 이 웹버전 NoteCalc는 한글이 불가능 합니다.
   오픈소스니 긱뉴스 통해서 조금 더 알려지면 누군가 수정해주시려나요? ㅎㅎ

   조금 다른 이야기지만, 제가 맥에서 가장 잘 썼던 계산기 앱은 [Magic Number 2]였습니다. 유료지만 돈값은 한 것 같아요. 윈도우 같은 다른 플랫폼에서도 쓰고 싶을 정도라서…
   https://apps.apple.com/kr/app/magic-number-2/id737047715
"
"https://news.hada.io/topic?id=3445","Hubble - 구독 관리 시스템 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Hubble - 구독 관리 시스템 오픈소스

   - Subscription 관리기능 SaaS
   - 서비스로 오픈했다가 망해서 전체를 오픈소스로 공개
   - 다양한 결제 모델(고정 가격, 구매/사용별 변동, 첫 셋업비용 등)
   - 트라이얼 기능 제공
   - 고객 획득/유지 (Acquisition/Retention) 관련 도구들 포함
   - 여러 결제통화 지원
   - REST API 제공

   지금은 깃헙리포를 닫은 것 같습니다.

   엇 그러네요 ㅠ 이거 공개하고 반응이 좀 있어서 그런듯. 사이트에도 오픈소스 링크는 다 빼두었네요.
   https://hubblesuite.com/

   구독 서비스를 구현할 때 참고하면 좋을듯 합니다.
"
"https://news.hada.io/topic?id=3370","2백만개 음식 레시피 검색 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           2백만개 음식 레시피 검색 엔진

   - 오픈소스 검색엔진인 Typesense 를 이용해서 만든 데모
   ㅤ→ 한글자 입력할 때마다 실시간으로 결과를 보여줌
   - 데이터분석용으로 공개된 2백만개 레시피 데이터셋을 S3에 올리고, 3 노드 Typesense 백엔드로 실행
   - Algoria의 InstantSearch.js 를 TypeSense에 연결해서 사용해 깔끔한 검색화면을 보여줌
   소스코드 : https://github.com/typesense/showcase-recipe-search
   2백만개 레시피 데이터셋 : https://github.com/Glorf/recipenlg

   생각보다 굉장히 빠르네요. typesense 라는 것 때문인가보군요

   typesense - 오픈소스 검색 엔진 https://news.hada.io/topic?id=3369

   공개된 데이터셋에 한국어들이 몇개 있어서 테스트 해보니 재미난 결과가 나오네요
   - ""김"" : 김치찌개, 김밥, 두부김치
   - ""찌"" : 순두부찌개, 육개장, 잔치국수, 갈비탕
   - ""찌개"" : 육개장 (정작 김치찌개/순두부찌개 는 안나옵니다)
"
"https://news.hada.io/topic?id=3385","Google Fonts와 작별해야 할 때","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Google Fonts와 작별해야 할 때

   Google Fonts가 오랫동안 인기를 끌고 있었지만 Google I/O ‘18에서도 성능을 위해서라면 셀프호스팅을 하라고 했었다.
   구글 폰트의 특성상 셀프 호스팅한 폰트보다 빠를 수 없다.
   과거에는 다른 사이트에서 사용자들이 이미 캐싱을 했기 때문에 추가로 요청하지 않는 이점을 얻을 수 있었지만 2020년 10월에 릴리스된 크롬 86부터 캐시 파티셔닝때문에 같은 CDN 이어도 사이트간에 캐시를 공유하지 않게 되어 캐시 공유의 장점도 더이상 의미 없어졌다.
   캐시 파티셔닝은 사파리와 크롬에는 이미 도입되었고 파이어폭스도 곧 구현할 예정이다.

   웹 프론트엔드 분야는 정말 눈 돌아가게 변화가 빠르네요. 캐시 파티셔닝 같은 내용도 이 글을 통해 처음 알게 되었습니다. LocalStorage를 쓰지 않는 것이 좋다( https://han41858.tistory.com/54 )는 것도 최근에야 알게 되었는데, 와 정말 바뀌는 속도가…

   한국어 웹폰트는 상당히 용량이 크고, 구글 폰트에선 유니코드 기반으로 자주 쓰는 글자와 그렇지 않은 글자를 분류해놔서 사용하지 않는 글자는 다운로드를 받지 않습니다.
   따라서 힌국어에서는 적용되지 않는 말일수도 있습니다.
"
"https://news.hada.io/topic?id=3415","인스타그램 미디어 받기 단축어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            인스타그램 미디어 받기 단축어

   - 인스타그램에서 포스트/스토리/igtv의 사진과 동영상을 최고 품질로 받아주는 단축어(iOS Shortcuts)
   - 아이폰/아이패드의 앱이나 Safari 에서 사용 가능

   가끔 인스타에 올라오는 요리법 동영상 저장해 두는데 딱 좋네요

   아이폰에서 트위터 미디어 받기 단축어 https://news.hada.io/topic?id=2920
"
"https://news.hada.io/topic?id=3442","Dynamoose - DynamoDB 모델링 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Dynamoose - DynamoDB 모델링 도구

   ""Mongoose for DynamoDB""
   - 몽구스와 거의 비슷한 문법으로 DynamoDB 사용 가능
   - Type Safety & 고수준 API
   - Document 저장/로딩 전에 데이터 트랜스폼 가능
   - DynamoDB 트랜잭션 지원
   - 엄격한 데이터 모델링(validation, required 등)
   - Callback & Promise 지원
"
"https://news.hada.io/topic?id=3434","FreeBSD, Svn에서 Git으로 이전","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        FreeBSD, Svn에서 Git으로 이전

   - Docs는 2주전에 이미 이전
   - Source는 이번 주말에 이전
   - Ports는 타이밍 문제로 내년 3월에 이전 예정
   * FreeBSD가 2008년 CVS 에서 SVN으로 넘어가던 시점에는 Git이 FreeBSD의 크기를 감당하지 못했었다고
   ㅤ→ 물론, 그 외에 워크플로우 변경에 대해서도 이견은 있었던듯 https://wiki.freebsd.org/GitDrawbacks

   크... 대세를 거스르지는 못하는군요.
   mercurial 과 git 이 아직 우위를 다투고 있을때 저는 머큐리얼 쪽이 더 마음에 들었었는데 github 의 위세에 완전히 눌려서 크흑 ㅠ.ㅠ
   저희도 git 을 몇년째 사용하고 있는데 분산 저장소라서 로컬 브랜치나 로컬 커밋을 자유롭게 활용할 수 있는 점은 장점이긴 하지만
   큰 저장소를 쓰지 못해서 쪼개야 하고... bitbucket 은 2기가 제한에 걸리면 일체의 작업을 거부해서 당황했었어요. 서브모듈은 사용하면 실수하기 딱 좋게 되어 있어서 권장할 수가 없고요. 한 번 했던 merge 또 하다가 똑같은 conflict 또 해결해야 하고 그러다가 잘못 머지하고... 파일의 줄바꿈을 자동으로 바꿔주겠다는 어처구니 없는 결정은 왜 들어가있으며.. 일반 소스 관리 저장소로 쓰기에는 이상한 기본값 결정들이 많아서 별로 마음에 들지는 않아요.

   오..저는 mercurial은 사용해보지 않아서 궁금한데, 말씀해주신 것들이 mercurial 에서는 어떻게 동작하는지 여쭤봐도 될까요?
   - 서브모듈
   - merge conflict
   - 파일 줄바꿈
   이런것들을 mercurial 에서는 더 똑똑하게 해주나요?

   파이어폭스도 Mercurial 에서 git으로 옮겼으면 좋겠네요. 파이어폭스에 기여한 적이 있는데 헷갈려서 혼났네요.
"
"https://news.hada.io/topic?id=3483","애플 A14와 M1의 Die-Shot 비교 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        애플 A14와 M1의 Die-Shot 비교

   - 두 칩의 다이 사진을 찍어서 내부를 유추하여 비교
   - 전체 다이 크기는 M1이 A14에 비해 37% 큼
   ㅤ→ CPU1,GPU 코어 두배
   ㅤ→ CPU2는 크기/갯수 동일
   ㅤ→ DDR 인터페이스도 2배
   ㅤ→ CPU1 L2 캐쉬 50% 더 큼
   ㅤ→ 유일하게 시스템 캐쉬만 M1이 A14에 비해 25% 작음
"
"https://news.hada.io/topic?id=3466","Google 장애#20013 (2020/12/14) 보고서 업데이트 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Google 장애#20013 (2020/12/14) 보고서 업데이트

   2020/12/18 업데이트 (원인과 대응방안 추가)
   #ROOT CAUSE
   지난 10월부터 구글 사용자 ID서비스에 새로운 자동 스토리지 할당 시스템을 도입하였다. 일부 서비스에서는 기존 쿼터 시스템을 사용중이였으며, 사용량을 0으로 보고하고 있는 문제를 가지고 있었다. 0으로 보고된 것이 즉각적인 영향이 없었던 것은 Expire 시간이 남아있었기 때문이고 시간이 만료된 이후 User ID 서비스의 쿼터를 줄이면서 장애가 발생했다. 의도치 않은 쿼터 변경을 검증하기 위한 안전 검사 항목이 있기는 하지만 0인 시나리오를 다루지는 않았다.
   계정 Database의 쿼터가 줄어들었고 Paxos leader의 쓰기가 불가능해졌고 그리고 대부분의 읽기 작업이 만료되어 인증 조회시 오류가 발생하였다.
   #REMEDIATION AND PREVENTION
   1. 글로벌 변경사항의 빠른 Implementaion을 방지하기 위해 쿼터 매니지먼트 오토메이션 리뷰
   2. 모니터링 및 얼럿을 개선하여 잘못된 설정을 빠르게 포착
   3. 내부 툴에 의해 장애 발생시 외부 커뮤니케이션을 위한 툴과 프로세스의 안정성 향상
   4. User ID 서비스 데이터베이스에 대한 쓰기 오류 Resilience 구현
   5. User ID 서비스 실패시 데이터 영역에 미치는 영향을 엄격한 제한하여 GCP서비스의 Resilience 개선
   * 12월 14일에 있었던 장애에 대해서 상세한 보고서가 업데이트되서 읽다가 발번역해봤어요. 오류가 있으면 알려주세요. 그리고 항상 재밌게 보는 GeekNews여서 재밌는 장애관련 내용있으면 남겨보도록할께요.
"
"https://news.hada.io/topic?id=3429","AWS, Graviton2 프로세서로 제공되는 RDS Aurora R6g 인스턴스 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            AWS, Graviton2 프로세서로 제공되는 RDS Aurora R6g 인스턴스 발표

   AWS Graviton-2 기반 데이터베이스 인스턴스가 PostgreSQL 호환 및 MySQL 호환 Amazon Aurora 인스턴스에 Preview로 제공됩니다. Graviton2 인스턴스는 이미 RDS for MySQL, RDS for PostgreSQL, RDS for MariaDB로 제공되고 있었습니다.

   도배하는 것 같아 죄송합니다 ㅜㅜ 전하고 싶은 소식이 너무 많네요.
   이 뉴스같은 경우는 제가 엄청 오래 기다려온 소식이기도 했고요 (..) 빨리 프리뷰 딱지 떼주었으면 좋겠습니다. 한국에도 Gravton2 인스턴스좀 내주고요. ㅎㅎ
"
"https://news.hada.io/topic?id=3381","아마존이 보유한 IP주소 1억개는 약 2.5조원가치","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      아마존이 보유한 IP주소 1억개는 약 2.5조원가치

   - 2020년 12월 11일 현재 109,847,486개의 IP주소를 보유
   - 현재 IP당 가격은 약 $20~$30
   - $20씩 잡았을 때 $2.2B, $30이면 $3.3B

   아마존, IPv4주소 4백만개를 약1230억원에 구입 https://news.hada.io/topic?id=3029
   RIPE(유럽망제어센터), IPv4 주소 2019년 11월에 고갈예정 https://news.hada.io/topic?id=660
"
"https://news.hada.io/topic?id=3446","imapapi - IMAP/SMTP 계정을 REST로 접근하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   imapapi - IMAP/SMTP 계정을 REST로 접근하기

   - 이메일 계정을 REST로 접근하게 만들어주는 중계 서버
   - IMAP 및 SMTP API 지원
   - 사용 용도
   ㅤ→ 사용자의 이메일을 받아와서 대신 처리해주는 서비스
   ㅤ→ IMAP과 MIME처리를 하지 않아도 되는 가벼운 웹메일
   - IMAP API는 AGPL 버전과 MIT 버전을 별도로 지원
"
"https://news.hada.io/topic?id=3366","RHEL의 Clone. Rocky Linux 제작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      RHEL의 Clone. Rocky Linux 제작

   IBM인수 후 CentOS 정책 변화(https://blog.centos.org/2020/12/future-is-centos-stream/) 로 인해 CentOS 의 창립자인 Gregory Kurtzer 에 의해 기존의 Centos와 같은 RHEL의 Clone 을 새롭게 만든다고 합니다
   - RHEL과 100% 버그 호환(RHEL과 동일함)
   - 이름은 CentOS 공동 창립자인 'Rocky McGaugh'를 추모하며 따왔습니다.

   GeekNews 관련글 : https://news.hada.io/topic?id=3349
"
"https://news.hada.io/topic?id=3447","M1은 RISC-V의 상승을 예고한다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          M1은 RISC-V의 상승을 예고한다

   ""M1은 패러다임 이동의 시작으로 RISC-V에 도움이 되겠지만, 당신이 생각하는 그 방식은 아닐 것이다""
   ""M1 칩은 왜 그렇게 빠를까?"" 를 쓴 엔지니어의 후속 글. RISC-V의 미래를 재미난 관점으로 예상.
   M1 성능의 요인은
   1. 많은 수의 디코더와 OoO 비순차 실행
   2. GPU,NPU,DSP 등 여러개의 전용칩
   이 글은 2번 Heterogeneous(이기종) 컴퓨팅에 대한 더 자세한 내용
   전용칩들은 여러가지로 부를 수 있는데 여기선 모두 Coprocessor(보조프로세서) 로 통칭(혹은 Accelerator 라고도 부를수 있음)
   - 코프로세서는 완전히 새로운 트렌드는 아님
   - 1985년에 나온 Amiga 1000도 오디오/그래픽을 위한 보조프로세서가 있었고, GPU도 보조프로세서이고,
   ㅤ구글의 TPU(Tensor Processing Unit) 역시 머신러닝에 최적화된 보조프로세서
   [ Coprocessor 는 무엇인가 ]
   - CPU와 달리 혼자 살수 없음. 보조프로세서만 넣는다고 컴퓨터가 되지 않으며, 단순히 특정 작업을 잘 하는 특수 목적 프로세서
   - 초기의 예시는 인텔의 8087 Floating Point Unit(FPU). 인텔의 8086은 정수 계산은 잘했지만, 부동소수점 연산은 잘 못했음
   - 정수 계산으로도 부동소수점 연산을 에뮬레이트 할수 있지만 느렸음. 이건 마치 초기의 마이크로프로세서가 덧셈/뺄셈만 할수 있고 곱셈은 못해서 여러번의 덧셈을 반복해서 곱셈을 처리한 것과 비슷.
   - 즉, ""복잡한 수학계산은 간단한 것을 반복함으로서 처리가 가능""
   - 모든 보조프로세서가 하는 일은 이것과 마찬가지. CPU가 보조프로세서가 하는 일을 할수는 있음. 단순 동작을 반복하면 됨
   - 초기에 GPU가 필요했던 이유는 수백만개의 폴리곤/픽셀에 동일한 계산을 반복하는게 CPU에선 시간이 많이 필요하기 때문
   [ 데이터는 보조프로세서에서 어떻게 In/Out 하는가 ]
   - 마우스/키보드/스크린을 비롯하여 GPU/FPU/Neural Engine을 포함한 모든 보조프로세서는 특정 메모리 에 접근하여 데이터를 읽고 쓰는 것과 같음
   - 이 작업들은 Device Driver가 처리하므로 일반 소프트웨어 개발자들은 볼일이 없음
   ㅤ→ DMA(Direct Memory Access) 컨트롤러 등이 하는 일
   - DOS시절 C/C++ 에서는 포인터로 비디오 메모리 주소에 직접 접근하여 픽셀을 바꾸는게 가능했음
   - 보조프로세서는 이런방식으로 동작하여, NPU,GPU,T1 등이 각자 자신들과 통신하는 주소를 가지고 있고, 비동기적으로 통신이 가능
   - CPU는 Neural Engine 또는 GPU로 보낼 전체 명령을 메모리에 나열한뒤 그 주소를 Neural Engine/GPU 에 알림
   - CPU가 코프로세서가 그 명령과 데이터를 처리할동안 기다릴 필요는 없으니 이때 인터럽트가 필요해 짐
   [ 인터럽트의 동작 방식 ]
   - 그래픽/네트워크 카드는 PC에 꼽히고 지정된 인터럽트 라인이 있음
   - 이건 CPU와 직접 연결된 라인처럼 동작해서, 활성화 되면 CPU가 다른일을 내려놓고 인터럽트를 처리
   - 실제로는 현재 위치와 레지스터를 메모리에 저장해서 나중에 돌아갈수 있음
   - 그 다음엔 인터럽트 테이블에서 수행할 작업을 찾음. 테이블에 인터럽트 트리거시 실행할 프로그램 주소가 들어있음
   - 프로그래머한테는 이런게 보이지 않고, 특정 이벤트에 등록하는 콜백함수처럼 보임. 디바이스 드라이버가 저수준에서 이런 처리를 함
   - 이런 설명을 하는 이유는 보조프로세서를 사용할 때 무슨일이 일어 나는지를 알고 있어야 실제 통신할때 어떤 일이 수반되는지를 알수 있기 때문
   - 인터럽트를 사용하면 많은 일이 병렬로 일어남.
   ㅤ→ CPU가 마우스에 의해 중단되는 동안 응용프그램은 네트워크카드에서 이미지를 가져올수 있고, 마우스가 옮겨지고 나면 CPU는 새 좌표를 얻고, 이걸 GPU로 보내서 새 위치에 마우스 커서를 그림. GPU가 마우스 커서를 그릴때 CPU는 네트워크에서 가져온 이미지처리를 시작
   - 이런 인터럽트를 사용해서 M1의 뉴럴엔진에 복잡한 기계 학습작업을 보내서 WebCam에서 얼굴을 식별할수 있음. 뉴럴엔진이 이미지데이터를 처리하기 때문에 이때 컴퓨터와 CPU는 다른 작업을 하면서 사용자에게 반응이 가능
   [ The Rise of RISC-V ]
   - 2010년 UC 버클리의 병렬컴퓨팅 랩은 보조프로세서를 더 많이 사용하는 방향으로 발전.
   - 범용 CPU코어를 쥐어짜서는 더 이상 쉽게 성능을 늘릴수 없다는 것에서 무어법칙의 끝을 보았음
   ㅤ→ 특수한 하드웨어인 보조프로세서가 필요해짐
   - 클럭주파수는 열과 전력소비등 때문에 쉽게 증가시킬수 없음.
   ㅤ→ 많은 디코더와 OoO 비순차 실행을 하는게 하나의 방법
   ㅤ→ ""M1 칩은 왜 그렇게 빠를까?"" 글을 참고 https://news.hada.io/topic?id=3315
   [ 트랜지스터 예산을 CPU 코어에 쓸것인가 Coprocessor에 쓸 것인가 ]
   - 128코어로 늘린다고 데스크탑 시스템이 더 효율적이 되지 않음
   - 80년대 초반엔 2만개의 트랜지스터 예산이 있을때 15000개를 들여서 CPU를 만들면 되었음
   - CPU가 100개의 다른 작업을 한다고 할때, 그중 한개의 작업을 처리하기 위한 보조프로세서를 만들면 1000개의 트랜지스터가 필요하면, 모든 작업에 대한 보조프로세서를 다 만들면 10만개의 트랜지스터가 필요해서 예산을 초과해 버림
   [ 트랜지스터가 많아지면서 전략이 변경됨 ]
   - 초기설계에서는 범용 컴퓨팅에 집중해야 했지만, 요즘은 엄청나게 많은 트랜지스터들이 들어가게 되므로, 그것들로 뭘 해야할지를 알 수 없음
   - 그래서 보조프로세서를 설계하는 것이 큰 일이 됨. 다양한 새 보조프로세서를 만드는 많은 연구가 진행.
   - 이 연구는 멍청한 가속기상태에서 기초부터 키워야하는 경우들이 많음
   - CPU와 달리 모든 단계의 명령들을 읽고 처리하는게 아니기 때문에, 메모리에 접근하거나 정리하는 방법등을 모름
   - 이에 대한 해결책은 간단한 CPU를 컨트롤러로 사용하는 것
   - 즉, 전체 보조프로세서들은 간단한 CPU에 의해 제어되는 특수한 가속기 회로로서 특정 작업을 가속하도록 구성됨
   ㅤ→ 예를 들어 Neural Engine/Tensor Processing Unit 같은 칩은 행렬을 저장할수 있는 큰 레지스터를 조작할 수 있음
   [ RISC-V 는 Accelerator 를 제어하도록 맞춤 제작 되었음 ]
   - 이게 RISC-V 가 설계된 목적
   - 일반적인 CPU작업을 위한 40~50개의 최소 명령어 세트를 가지고 있음
   ㅤ→ x86 CPU는 1500개의 명령어 셋이 있음
   - 큰 고정 명령어 세트 대신, RISC-V는 확장 개념을 중심으로 설계됨
   - 모든 보조프로세서는 다르므로, 따라서 RISC-V는 코어 명령어 세트와 보조프로세서가 필요로 하는 확장명령어 세트를 가지게 구성이 가능
   이게 이 글에서 설명하고자 하는 것
   - Apple의 M1은 업계 전체가 보조프로세서가 지배하는 미래로 향하게 할 것
   - 그리고 이 보조프로세서를 만들기 위해 ""RISC-V는 퍼즐의 중요한 부분""이 될 것
   [ RISC-V로 Coprocessor를 만들면 좋은 점 ]
   - 칩을 만드는 것은 복잡하고 비용이 많이 드는 일
   - 칩 검증을 위한 도구 구축부터, 테스트 프로그램을 실행하고, 진단 및 기타 여러가지를 하려면 많은 노력이 많이 필요.
   - 이게 요즘 ARM을 사용하는 가치의 일부. 큰 에코시스템이 있기때문에 디자인을 검증하고 테스트가 가능
   - 그래서, 자신만의 명령어셋을 가지는 것은 좋은 생각이 아님
   - RISC-V에는 여러회사에서 도구를 만들수 있는 표준이 있고, 에코시스템이 생겨서 여러 회사가 부담을 공유할수 있음
   - 이미 있는 ARM을 사용하지 않는 이유는? ARM은 범용 목적 CPU로 만들어 져서, 큰 고정 명령어세트를 가짐
   - 고객의 요청과 RISC-V 와의 경쟁때문에 ARM도 2019년에 확장용 명령어 세트를 공개했음
   - 하지만 여전한 문제는 처음부터 이를 위해 설계된것이 아니라는 것
   ㅤ→ 전체 ARM 툴체인은 대형 ARM 명령어 세트를 구현했다고 가정
   ㅤ→ 하지만 보조프로세서는 큰 명령집합을 원하거나 필요로 하지 않음
   ㅤ→ 보조프로세서는 확장기능이 있는 최소 고정 기본 명령어 세트라는 아이디어 기반으로 구축된 도구의 에코시스템을 원함
   - 이게 왜 유익한지는 Nvidia 의 RISC-V 사용에서 인사이트를 얻을수 있음
   ㅤ→ 대형 GPU는 컨트롤러로 사용할 일종의 범용 CPU를 필요로 함
   ㅤ→ FALCON : FAst Logic CONtroller 라는 칩을 만들어서 사용
   ㅤ→ 저비용 고효율
   - RISC-V는 작고 간단한 명령어 세트를 가지고 있기때문에 ARM을 비롯한 모든 경쟁제품을 능가
   - Nvidia는 RISC-V 를 선택함으로서 더 작은칩을 최소화된 전력으로 가능하게 만듦
   - 확장 메커니즘을 사용하면 필요한 작업에 맞는 명령만 추가가 가능
   [ ARM은 새로운 x86이 될 것 ]
   - 아이러니컬 하게도 Mac 과 PC 가 ARM으로 구동되는 미래를 볼수 있을 것
   - 그러나 그 주변의 커스텀 하드웨어들은 RISC-V로 지배된 보조프로세서들이 차지할 것
   - 보조프로세서가 대중화 되면서, SoC 위에는 ARM보다 RISC-V 칩들이 더 많아 질 것
   - 미래는 ARM or RISC-V 가 아니라, ARM and RISC-V 가 될 것
   [ ARM 은 RISC-V 보조프로세서 군단을 지휘하게 될 것 ]
   - 범용 ARM 프로세서는 그래픽,암호화,비디오 압축,머신 러닝,신호처리를 담당할 RISC-V 보조프로세서 군대와 함께 중심에 있게 될 것
   - UC Berkeley 의 David Patterson 교수와 그의 팀은 이러한 미래가 다가오는 것을 보고, RISC-V 를 그거에 잘 맞게 조정 했음
   - 모든 종류의 특수 하드웨어 및 마이크로 컨트롤러들이 RISC-V에 큰 관심을 보이고 있으며, 오늘날 ARM이 지배하는 많은 영역이 RISC-V가 될 것
   [ RISC-V를 메인 CPU로 사용하면 안될까 ? ]
   - 많은 사람들이 ARM을 RISC-V 로 완전히 교체하는 것은 어떤가함
   - 혹자는 RISC-V의 너무도 간단한 명령어 셋이 ARM과 x86이 주는 고성능을 제공 못할 것이라고 함
   - 하지만 RISC-V를 충분히 메인프로세서로 사용 가능하고, 성능은 문제가 되지 않음
   ㅤ→ 다만, ARM 처럼 고성능 RISC-V를 만들사람이 필요함
   ㅤ→ 즉, 가능은 하지만 모멘텀이의 문제라는 것. MacOS와 Windows가 이미 ARM에서 실행이 되고 있음
   ㅤ→ 단기적으로 MS나 Apple이 또 다른 하드웨어 전환을 위한 노력을 하지는 않을 것임

   재밌네요. 좋은 요약 감사합니다.
   이제 학교에서도 x86이나 amd64가 아니라 arm 이나 risc-v를 기준으로 아키텍쳐 수업을 하는 날이 오겠군요..

   예전에 ARM 출신 엔지니어가 RISC-V를 비판한 내용이 여기에 올라온 적이 있었죠.
   https://news.hada.io/topic?id=3137
   위 내용대로라면 RISC-V를 채택한 칩의 다양성이 높아지는 것은 의도된 것이겠군요.

   점점 흥미진진해 지네요.
   Intel과 AMD의 대응이 궁금해 집니다.

   중국이 RISC-V에 거의 올인하다시피 하는 걸로 알고 있는데.. 정말 미래가 어떻게 될지 상상도 안되네요

   저도 중국 생각이 들더군요. 미국의 견제를 계속 받는 화웨이가 앞에 나서서 메인 CPU로 만들어보면 어찌 되려나요 ㅎ

   하웨이는 ARM 뿐만 아니라 TSMC를 못 쓰는 상황이라 어차피 고성능 CPU 개발 자체가 망했다고 봐도 될 거 같습니다. 그나마 성능을 덜 요구하는 자사의 네트워크장비라면 모를까요.
   근데 다른 많은 업체들이 RISC-V 를 쓰고 있기 때문에 이 회사들에게서 성과가 나올 듯 합니다.

   아 TSMC 자체가 막힌거를 생각못했네요. SMIC가 7나노를 넘어서 5나노 까지 공정을 만들지 않는한 어렵긴 할듯

   이 분 정말 글 잘쓰네요. 이것도 재미나게 읽었습니다.
   RISC-V 가 또 다른 대안이 될것이라는 예상들은 많았는데,
   이런식으로 보조프로세서용으로는 최고의 칩이 될수 있겠다는 관점으로는 생각을 못해봤습니다.
"
"https://news.hada.io/topic?id=3485","IP 주소 파싱의 재미주소 파싱의 재미

   - 빠른 IPv4+v6 파서를 만들면서 배운 것들을 읽기 쉽게 정리한 글
   - 정식(Canonical) 표현
   ㅤ→ v4 : 192.168.0.1 , 1바이트 들의 Dotted Quad
   ㅤ→ v6 : 1:2:3:4:5:6:7:8 , 2바이트 들의 Colon-Hex
   [IPv6]
   - 중간에 0이 많이 나오게 되므로 :: 로 하면 1개 이상의 0을 제거
   ㅤ→ 1:2::3:4 = 1:2:0:0:0:0:3:4
   - 마지막 32비트는 v4의 Dotted Quad 방식 표현 사용 가능
   ㅤ→ 1:2:3:4:5:6:77.77.88.88 = 1:2:3:4:5:6:4d4d:5858
   ㅤ→ fe80::1.2.3.4 = fe80:0:0:0:0:0:102:304
   - :: 가 맨앞/맨뒤에 오는 케이스가 생겨서 조금 더 복잡해짐
   ㅤ→ ::1 = 0:0:0:0:0:0:0:1
   ㅤ→ 1:: = 1:0:0:0:0:0:0:0
   ㅤ→ :: = 0:0:0:0:0:0:0:0
   - IPv6 Colon-Hex 의 모든 필드는 4자리 16진수, 앞에 0은 제거 가능
   ㅤ→ :: = 0000:0000:0000:0000:0000:0000:0000:0000
   [IPv4]
   - 재미난건, IPv6에서 마지막 32비트의 Dotted Quad 표현을 공식화 하기전에는 어떤 문서에서도 표준화 된적이 없음
   ㅤ→ 그래서 보통 업계표준(de-facto)은 ""4.2BSD 에서 해석 가능한가?"" ""다른 OS에서 4.2BSD를 복사했을때 뭘 유지했나"" 였음
   - 근데 4.2BSD는 좀 이상(whacky)함
   ㅤ→ 192.168.140.255 = 3232271615 와 같음
   ㅤ→ 즉, 크롬에서 http://3232271615 를 방문하면 http://192.168.140.255 를 로드함. 4바이트 숫자니까!
   ㅤ→ 8진수인 http://0300.0250.0214.0377 도 가능
   ㅤ→ 그럼 당연히 16진수인 https://0xc0.0xa8.0x8c.0xff 도 다 같은 주소
   - CIDR (Classless Inter-Domain Routing) 은 IP주소에도 영향을 줌
   ㅤ→ 클래스 C 표현인 192.168.140.255 은 클래스 B로 표현하면 http://192.168.36095 , 클래스 A로 표현하면 http://192.11046143
   ㅤ→ 이래서 ping 127.1 = 127.0.0.1 이 가능. IPv6 처럼 중복0을 제거한게 아니라, 클래스 A 네트웍 127의 1번째 호스트를 의미. 즉, 24비트 숫자 1임
   - 각 Quad의 숫자앞에 0은 몇개까지 가능할까 ?
   ㅤ→ 001.002.003.004 ? 0000000001.0000000002.0000000003.000000004 ?
   ㅤ→ ( 크롬은 http://0000000001.0000000002.0000000003.000000004 도 가능 )
   ㅤ→ 이때 이 숫자를 8진수로 읽어야 할지, 16진수로 읽어야 할까 ? : 최근 구현들은 8진수/16진수를 포기하고, 앞에 0들을 10진수로 처리
   - 이 선행 0 문제는 IPv6에도 영향을 줌
   ㅤ→ 000001::00001.00002.00003.00004 = 1::1.2.3.4, or 1::102:304
   ㅤ→ 최신 파서들은 대부분 ""parse integer"" 라이브러리를 사용하기 때문에 앞에 0이 많아도 다 허용
   즉, 모든 IP 주소를 파싱하려면 이 거지같은 것들을 다 고려해야 하지만..
   필자의 파서는 다음 정도만 추려서 지원
   - 클래식한 v4 방식으로 점으로 구분된 정수, 앞에 0 갯수는 무제한으로 가능
   - 클래스 A/B 표현식 및 8/16진수는 처리 안함
   - unit32 숫자 한개로 모든 걸 표현하는 것도 처리 안함
   - IPv6는 정식 colon-hex 방식 및 :: 줄임 방식과, 마지막 32비트에 IPv4 붙이는 것까지 허용(이 IPv4 는 앞의 규칙 적용). 각 필드의 앞 0 갯수는 무제한
   * 초기엔 IPv4 에서 IPv6로 쉬운 이전을 위해 마지막에 IPv4 주소를 붙이는 방식을 넣긴 했지만, 실제로 잘 보이지 않음. 그래서 지원은 하지만 그닥 유용하지는 않다고 생각함

   오 재밌네요! 공격할때 비틀기좋은 기법들이 많이 보이네요!

   아니 IP 주소 표기하는 데 이렇게 복잡한 규칙을 사용해야 하면 쓸데없는 컴퓨팅 자원 낭비 아닌가 하는 생각이 드네요 ^^;;
"
"https://news.hada.io/topic?id=3419","빅 테크들을 쪼개는 것이 효과를 낼까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         빅 테크들을 쪼개는 것이 효과를 낼까?

   독점을 없애는 데는 필요한 것은 기업을 쪼개는 것이 아니라 표준 준수 강제화이다.
   서비스들의 소유주를 바꾼다고 해도 네트워크 효과는 유지된다 => 대부분의 사람들이 왓츠앱을 사용하는 것은 페이스북이 소유하고 있어서가 아니며, 구글이 빙의 검색 결과를 앞지르는 것은 유튜브를 소유하고 있어서가 아니다.
   구글과 유튜브가 분리된다고 해서 경쟁이 강화되지 않는다. (유튜브가 빙보다 더 나은 검색엔진을 만들 수 없으며, 구글은 유튜브를 제외한 모든 소셜 네트워크 운영에 실패함)
   유럽이 통신 독점을 해결한 것과 같이 (DSL을 다른 업체들이 임대해 사용할 수 있게하도록 함) 기업을 쪼개는 것이 아니라 표준 규제를 통해서 해결할 수 있음.
   그러한 표준의 예로 영국 경쟁표준청(https://gov.uk/cma-cases/…)이 제안한
   - 검색 알고리즘을 향상시킬 수 있도록 구글에게 타사 검색 엔진이 클릭 및 쿼리 데이터를 제공하도록 요구할 수 있는 권한을 제공
   - 구글이 기본 검색 엔진 위치를 독점하는 것을 제한하고, 사용자가 애플 제품의 검색 엔진을 선택할 수 있도록 제공
   - 써드파티 서비스들의 유저들이 페이스북의 Contact을 가져올 수 있도록 함
   ""포드와 GM를 해체해서 자동차를 안전하게 만든 것이 아니라 어떻게 자동차를 만드는 것을 표준화 해서 해결하였다""

   ""구글은 유튜브를 제외한 모든 소셜 네트워크 운영에 실패함""
   을 다시 생각해보면 알 수 있듯이. 네트워크 효과가 있고 독점 플랫폼이 되면, 구글이라도 깨기 힘들죠.

   글쎄요. IT에서는 그렇게 잘 동작할지 모르겠습니다. 이는 역으로 구글로 가기 쉽게 만들 수 있다는 생각이 드네요. 웹표준이 오히려 크롬으로 유입하기 쉽게 만들고, 결국에는 구글이 웹표준을 휘두르는 모양이 된 것처럼 말이죠.

   빅 테크가 표준을 휘두르는 경우도 많았고, 표준을 무시하는 경우도 많았던 것 같아요. IE의 리즈시절(...) 웹 표준을 싸그리 무시하고 나 홀로 갈 길을 갔는데도 다른 빅 테크가 오기 전까지는 못 물리쳤다는 게..
   그 때는 까이기라도 했지, 이젠 표준을 지킨다는 명분도 있겠네요. 웹 브라우저 기술 자체가 너무나도 복잡해 지고 있어서, 표준 자체가 거대하기 때문에 이젠 거대한 단체가 아니면 손 대기 조차 너무 어렵습니다. 크로미움 클론은 =ㅁ=.. 그게 경쟁...의 효과를 실질적으로 내는지는 잘 모르겠습니다. 그러면 다시 비공개 기술들의 싸움이 되는 게 아닌지(...

   빅 테크 여럿이 공존하고 경쟁할 수 있도록 하는 건 필수적인 것 같아요. 그런 면에서 지금은 굳이 쪼갤 필요가 있나 싶은 생각이 들기도 하는 분야들이 꽤 있죠.
   대표적으로 크롬 브라우저 같으면 구글이 웹 표준을 꼭 흔든다고 하기에는 여러 업체들이 참여한 곳에서 논의하고 구현하는 식이다보니 완전히 구글이 다 한다고 볼 수는 없어요. IE 의 과거와는 차원이 다르죠.
   라이센스 문제가 있는 소수의 모듈 말고는 다 자유로운 오픈소스 라이센스로 공개되니까요.
"
"https://news.hada.io/topic?id=3456","왜 Oreo는 계속 새로운 맛을 만들까 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        왜 Oreo는 계속 새로운 맛을 만들까 ?

   - 2012년 이후 65가지의 새로운 맛을 출시한 오레오
   - 팀이름조차도 공개하지 않는 6명으로 구성된 비밀팀이 계속 새로운 맛을 개발중
   ㅤ→ 이 팀의 목표는 계속 팬을 자극하고, 맛 혁신을 통해서 성장을 주도 하는 것
   - 이 새로운 오레오 들은 지난 3년간 매출이 12% 증가
   - 하지만 이들의 판매량이 중요한게 아니라, 이 오레오들은 오리지널(클래식)에 대한 광고역할을 함
   - 새로운 맛 오레오의 매출이 12% 증가할때, 클래식 제품의 판매는 22%가 증가

   요즘 인터넷에서 유행하는 민초맛 처럼 일단 어그로 끄는 용도인가 보네요 ㅋ
   그나저나 겨우 6명 밖에 안되네요. 그분들 경력이 궁금하네요.

   미국에서 듣도보도못했던 오레오를 보고 궁금했던 기억이 있는데 그런 이유였군.
   다른 과자들도 비슷하게 새로운 맛들이 있었는데 유사한 이유일듯

   탐스팜에도 비밀팀이 있을까요?
   자꾸 양산되는 000맛 아몬드...

   근데 그건 정말로 모든맛이 다 맛나더라구요 ㅎㅎㅎ

   비슷한 이유로 맥도날드에서 한시즌만 소비되는 버거를 계속해서 만들어내죠.
   대부분의 프랜차이즈들이 하는 것이기도 하고...

   저 같은 경우 새로운 맛이 나오면 신기해서 한번 사서 맛을 보지만,
   ""음 역시 오리지널이지"" 하고 먹던 것으로 돌아가는데, 그거 자체가 다시 오리지널의 판매량을 증대시킨다는 거네요.
"
"https://news.hada.io/topic?id=3455","Cortex - 머신러닝을 위한 오픈소스 배포 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Cortex - 머신러닝을 위한 오픈소스 배포 플랫폼

   ""Run inference at scale""
   - TensorFlow, PyTorch, Sklearn 을 비롯한 여러 모델 지원
   - AWS/GCP/Azure 등에 대규모 배포 및 Request 기반 자동 스케일링
   - CI/CD 시스템과 연계
   - 성능 메트릭 & 로그를 모니터링 도구들로 스트리밍
   - 멀티모델 캐슁으로 다수 모델을 효율적으로 서빙
   - 다운타임 없는 롤링 업데이트 지원
   - A/B 테스팅을 위한 트래픽 분할
"
"https://news.hada.io/topic?id=3368","Deno 1.6 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Deno 1.6 릴리즈

   - deno compile : 단독 실행파일 생성 가능
   ㅤ→ nexe,pkg 등과 비슷하게 JS/TS로 CLI 도구를 생성가능
   ㅤ→ 아직 크로스플랫폼 컴파일은 지원 안함
   - deno lsp : Language Server 내장 (에디터 연동)
   ㅤ→ 코드 자동완성, 힌트, 정의/참조 바로가기, deno fmt/lint 등과 연동
   - 애플 M1 프로세서 지원
   - TypeScript 4.1 지원

   go 언어와 매우 비슷하게 간다.. 그렇게 생각이 듭니다.
"
"https://news.hada.io/topic?id=3410","Amazon Location Service 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Amazon Location Service 공개

   아마존 로케이션 서비스(Amazon Location Service)는 데이터에 대한 보안이나 사용자의 프라이버시를 침해하지 않고 개발자들이 애플리케이션에 로케이션 데이터를 추가할 수 있게 해주는 서비스입니다.
   아마존 로케이션 서비스를 사용하면 지도, 관심 지점 정보(points of interest), 지오코딩, 길찾기(routing), 지오펜스, 트래킹 등의 기능을 애플리케이션에 쉽게 붙일 수 있습니다.

   한국에서는 위치기반사업자로 인해 쉽게 지원하지 못하지 않을까요? 리전이나 사용자나.

   아직 서울리전은 지원하지 않지만 가까이 도쿄리전은 지원하네요.
   2020.12.17 현재 지원하는 리전
   -Europe (Ireland)
   -Asia Pacific (Tokyo)
   -US East (N. Virginia)
   -US East (Ohio)
   -US West (Oregon)
"
"https://news.hada.io/topic?id=3478","React Server Components 발표 (RFC)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    React Server Components 발표 (RFC)

   - 서버 컴포넌트는 서버에서 실행되며 클라이언트 번들크기엔 변화 없음
   - DB,파일시스템,마이크로 서비스등의 서버측 데이터소스에 접근가능
   - 클라이언트 컴포넌트와 심리스한 연동
   - 동적으로 렌더링할 클라이언트 컴포넌트를 선택 가능해서 최소한의 렌더링 코드만 클라이언트로 전송
   - 서버 컴포넌트가 리로드 되더라도 클라이언트 상태를 유지
   - 점진적으로 렌더링 되며, 조금씩 클라이언트에 UI를 스트리밍 가능해서, Suspense 와 연동하면 로딩상태를 마음대로 조작이 가능하고 가장 중요한 콘텐츠만 먼저 보인 후에 나머지 부분을 로딩하는 것이 가능
   - 서버와 클라이언트 코드 공유 가능

   추가로 기존의 SSR 과 비교한 글도 같이 보시면 좋겠네요. https://addyosmani.com/blog/react-server-components

   아직 개발 중이라 바로 사용하긴 어렵겠지만 앞으로가 기대되네요.
"
"https://news.hada.io/topic?id=3379","Apple M1 칩의 실제 프로그래밍 성능 벤치마크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Apple M1 칩의 실제 프로그래밍 성능 벤치마크

   M1 칩이 달린 맥을 쓰다보니 이게 인텔 대비 확실히 빠르긴 빠른데 얼마나 빠른지 궁금해서 직접 해봤습니다. GeekBench, CineBench 등 CPU 성능을 종합적으로 테스트하는 벤치마크 대신 실제 각 프로그래밍 언어별로 많이 쓰이는 벤치마크 도구를 이용해 벤치마크를 진행했습니다.
   대부분의 벤치마크에서 인텔 맥을 충분히 이길 뿐더러 라이젠 3900X와 비교해서도 우수한 성능을 보이는 언어(대부분 싱글코어 성능 + 메모리 성능이 중요하기 때문)가 상당히 많았습니다. 결과를 직접 확인해보세요.

   👍🏼 약 한달 전 M1 을살까 하다가 개발 플로우에 걸림돌이 많을까봐 (도커 등) 일단 M1 직전 맥북을 중고로 구매하여 사용하고 있는데요. (생태계가 자리잡을 때까지 1년 정도 기다리자는 심산으로) 포스트 마지막에 강력한 추천을 하시는 것을 보고 질문드립니다. 성능차이를 떠나서 생각했을 때 현재 M1이 개발자들이 구매해도 큰 이슈가 없을 정도라고 생각하시는지 궁금합니다

   터미널(shell)을 능숙하게 다를 줄 알며 troubleshooting에 거리낌 없으며 문제를 찾아 해결하는 것을 즐기는 개발자라면 충분히 구매해도 괜찮다고 생각합니다. 아직 ecosystem이 막 생겨나는 시점이기 때문에 homebrew bottle이라던가 남이 만들어둔 생태계를 그대로 활용하기에는 어려움이 있다고 생각합니다. Rosetta 없이 native 생태계를 이용하려면 소스코드를 직접 내려받아 빌드 해야 하는 것들(configure, cmake, makefile, ldflags, cflags 등 유닉스 생태계 소스 빌드에 대한 배경지식 및 이해 필요)이 많고, dependency 중에 빌드가 안 되는 것이 있다면(대부분 architecture를 whitelist로 관리하는 문제) 소스코드를 수정해서 빌드 할 줄도 알아야 합니다.
   말이 쓸데없이 길어진 것 같네요 ㅎㅎ 요약은 첫 줄입니다. 터미널을 즐기고 좋아한다면 바로 구입하셔도 됩니다.

   상세한 답변 감사합니다. 딱 제가 알고자 했으면 하는 내용이네요. 터미널을 좋아하고 즐기지만 결국 현재로써는 원래에 목표에 집중하기 보다는 빌드를 위해서 해결해야 할 일들이 생긴다고 보면 되겠군요. 이건 호불호가 꽤나 갈릴 듯 합니다. 대신 그 과정을 즐길 수 있다면 이걸 통해서 평소 접하지 못했던 부분에 대한 스펙트럼은 더 넓어지겠네요. 자세한 공유와 답변 감사합니다!
"
"https://news.hada.io/topic?id=3462","Medo - Haiku Media Editor 1.0 베타 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Medo - Haiku Media Editor 1.0 베타 공개

   - Haiku OS (OpenBeOS) 에서 실행되는 미디어 편집기
   - UHD 4K 비디오 편집가능하지만, 용량은 1.27M 밖에 안되는 초 경량
   ㅤ→ 컬러 그레이딩 (채도/노출/색온도 등)
   ㅤ→ 화이트 밸런스 및 색상 보정 곡선
   ㅤ→ Adobe LUT(Look Up Tables) 지원
   ㅤ→ 마스크와 키프레임 생성
   ㅤ→ 트랜지션 및 특수효과 지원(블러,나이트비젼, 크로마 키 등)
   ㅤ→ 미디어 트랜스폼 도구 (크기 조정/ 회전 / 위치 / 자르기)
   ㅤ→ 3D 폰트를 비롯한 여러가지 텍스트 효과
   ㅤ→ 오디오 효과 포함(20밴드 이퀄라이저, 페이드)
   * Haiku 는 예전에 이쁜 화면으로 유명했던 BeOS 의 오픈소스 버전
   ㅤ원래 멀티미디어 OS를 표방했어서, 시스템 미디어 라이브러리 자체가 훌륭
   참고 : Haiku OS를 아세요? - https://kldp.org/node/162087
"
"https://news.hada.io/topic?id=3437","AWS Nitro Enclaves, 서울 포함 추가 6개 리전에서 사용 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               AWS Nitro Enclaves, 서울 포함 추가 6개 리전에서 사용 가능

   AWS Nitro Enclaves와 ACM for Nitro Enclaves를 이제 Africa (Cape Town), Asia Pacific (Seoul), Canada (Central), Europe (Milan), Middle East (Bahrain), US West (N. California) 리전에서도 사용할 수 있게 되었습니다.

   AWS Nitro 엔클레이브를 통해 고객은 Amazon EC2 인스턴스 내 PII(개인 식별 정보), 의료, 금융 및 지적 재산권 데이터와 같은 매우 민감한 데이터를 추가로 보호하고 안전하게 처리하도록 격리된 컴퓨팅 환경을 생성할 수 있습니다. Nitro 엔클레이브는 EC2 인스턴스에 대한 CPU 및 메모리 격리를 제공하는 동일한 니트로 하이퍼바이저 기술을 사용합니다.
   https://aws.amazon.com/ko/ec2/nitro/nitro-enclaves/
"
"https://news.hada.io/topic?id=3420","Docker Desktop for M1 테크 프리뷰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Docker Desktop for M1 테크 프리뷰

   해결해야 해었던/하는 문제들
   1. 도커가 오픈소스로 공개했던 HyperKit 을 애플의 Virtualization Framework로 교체
   2. 모든 바이너리를 ARM으로 재컴파일. 아직 많은 것들이 M1을 지원하지 못함
   ㅤ→ 도커는 내부에서 Go를 사용하는데, Go언어는 M1을 2021년 2월 1.16 릴리즈부터 지원 예정
   3. 자동 테스팅을 위한 충분한 M1기기 마련. MacStadium을 통해서 CI시스템에 M1장비 도입
   - 멀티 플랫폼 지원가능 : x86 / Arm 이미지를 같이 빌드하고 실행
   - 정식버전은 내년 1사분기 공개 예정
"
"https://news.hada.io/topic?id=3414","구글, 이미지 최적화 앱 Squoosh v2 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글, 이미지 최적화 앱 Squoosh v2 공개

   - 새 코덱 지원 : OxiPNG, MozJPEG, WebP, AVIF
   ㅤ→ WASM 적용으로 가능해짐
   - 웹 앱외에 커맨드라인에서 최적화 가능한 CLI 제공
   ㅤ→ Node + WASM
   ㅤ→ picture 엘리먼트로 브라우저가 최적버전을 선택하게 가능
   - 빌드시스템을 Webpack 에서 Rollup으로 변경

   이거 쓸때 옵션 어떤걸 선택해야 될지 고민이 되더군요, 일단 기본값으로 가끔씩 사용중입니다.

   https://squoosh.app/
   Squoosh! - Google이 만든 이미지 최적화 웹앱 https://news.hada.io/topic?id=2691

   익숙하다 했더니 이거였군요. 늘 감사합니다
"
"https://news.hada.io/topic?id=3390","imgdiff - 정말 빠른 이미지 비교 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       imgdiff - 정말 빠른 이미지 비교 도구

   - 지금까지 가장 빠르다는 odiff 보다 3배 빠른 diff 툴
   - png/jpg/jpeg/bmp 지원 및 포맷간 비교 가능
   - 다른 부분만 별도 파일로 저장
   - 윈/맥/리눅스
   - Go 로 작성해서 멀티쓰레드를 잘 활용

   실제로는 https://github.com/dmtrKovalenko/odiff odiff 보다 뭘 특별히 한건 아니고 Go 의 멀티 쓰레딩 속성을 잘 활용한 것이라네요.
   odiff 는 Reason 언어로 되어있고 싱글쓰레드 입니다.
   - Reason : ReasonML, React 개발자인 Jordan Walke가 만든 OCaml 확장, JavaScript와 비슷한 문법인데 Ocaml로 트랜스컴파일 됨
"
"https://news.hada.io/topic?id=3465","Luft: 10초만에 10억 데이터를 쿼리하는 데이터스토어 개발기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Luft: 10초만에 10억 데이터를 쿼리하는 데이터스토어 개발기

   월 평균 이벤트 수가 100억 건이 넘는 환경에서, 빠른 시간 내에 데이터를 분석하여 유저 행동 기능 분석(Cohort)을 해줘야 하는 상황이 옴
   (ex. 지난 6개월간 우리 앱에서 한 달에 10만원 이상 소비한 30대 여성 → 이들의 재방문율)
   이런 환경에서 개발자가 쓰기만 했던 데이터스토어를 직접 구현하는 이야기를 담음.

   # 유저 행동 분석 쿼리를 구현하기 위해서는…
   - 사전에 미리 계산해놓지 않은 메트릭을 쿼리할 수 있어야 함 (+ 새로운 종류의 분석도 Re-indexing 없이 가능해야)
   - 이벤트 데이터를 유저 별로 Group By할 때 High Cardinality Shuffle의 보틀넥은 적어야 함
   # 기존 솔루션을 쓸까, 자체 솔루션을 만들까 고민함
   - Druid는 다른 곳에서 사용중이었지만 Pre-Aggregation(계산된 값만 읽는 방식)의 한계로 기능 구현에 부적합
   - Snowflake나 Redshift 등의 데이터 웨어하우스를 큰 규모로 운영할 수는 있지만, 특유의 범용성 때문에 목표 대비 너무 큰 규모의 클러스터를 운영해야되서 비쌈
   - Funnel, ID 매칭 등 다양한 니즈를 커버하기 위해서는 SQL 기반 DB는 한계가 있음
   # 결국 데이터스토어를 직접 만들다
   - Luft = 처음부터 유저 ID 기준 Group By된 유저 행동 분석 쿼리를 빠르게 수행하는데 최적화된 데이터 스토어
   - Golang을 기반으로 만들어짐
   - 수십 TB 규모의 유저 데이터를 5대 이하의 노드만으로 평균 3초 ~ 최대 10초 사이에 분석
   - 일반적인 RDBMS와 다르게 불변성을 가짐 (필요하다면 같은 기간의 데이터를 덮어씌움) → 심플한 클러스터 디자인, 복잡한 페이지 매니저 구현 없이 높은 성능, 원하는 데이터 저장 포맷 설계 가능
   # 기술 기반 뜯어보기
   - TrailDB (스토리지 엔진) - 유저 ID 파티셔닝에 최적화된 타임시리즈 이벤트 저장 Rowstore
   ㅤ→ 값을 사전화시켜 그 ID만 저장
   ㅤ→ 유저 이벤트를 시간순으로 정렬해 이전 이벤트 대비 늘어난 시간값, 바뀐 컬럼만 저장 (대부분의 사용자 속성은 변하지 않으므로)
   ㅤ→ 인덱스 없음. 무조건 풀스캔해야 함.
   ㅤ→ 근데 충격적으로 높은 압축률을 자랑 (CSV 13GB → ~TrailDB 300mb)
   ㅤ→ 시간 복잡도는 O(n)이므로 공간 복잡도를 줄이면 되겠다고 생각
   - LLVM (쿼리 엔진)
   ㅤ→ 근데 TrailDB는 OR-AND 형식의 equals만 제공, Go에서 파싱된 쿼리를 C, C++로 전달해야 함
   ㅤ→ PostgreSQL에서 쿼리를 LLVM JiT으로 컴파일한다는 것을 알게 됨
   ㅤ→ 쿼리는 기능 확장이 빈번한데 C, C++로 짜면 개발 비용이 늘어나는 문제를 막을 수 있음 (Golang에서 LLVM IR만 생성해 넘기면 C, C++에서 JiT 컴파일에서 실행하면 됨)
   - 연산 레이어 직접 만들기
   ㅤ→ MapReduce가 많이 쓰이는데 Golang을 쓰기에 못씀
   ㅤ→ Spark/Hadoop은 Long-running Job에 최적화되서 붙여봐도 성능이 잘 안나옴
   ㅤ→ 이것도 직접 만듬 → https://github.com/ab180/lrmr
   ㅤ→ gRPC + Protobuf + etcd 조합, 익숙한 Spark 디자인 많이 차용
   ㅤ→ Resiliency를 포기하자 → 성능을 극한으로 높이면, 장애가 발생해도 처음부터 다시 해도 10초 미만
   ㅤ→ 대규모 데이터 처리로 인한 버퍼 오버플로가 자주 발생 (Backpressure)하는 문제를 Pull-based Event Stream으로 변경 (Kafka, Armeria 등에서 채택)
   - 샤딩 직접 구현하기
   ㅤ→ 샤드 = 히스토리컬 노드
   ㅤ→ 파티션의 날짜 범위를 샤딩 키값으로 사용하면?
   ㅤㅤ→ 모든 쿼리에 시간이 있고 → 필터링 용이
   ㅤㅤ→ 같은 시간 범위에는 비슷한 용량의 데이터가 있음 → 데이터 분산 용이
   ㅤㅤ→ 분산 환경은 아름답지 않음…
   ㅤㅤ→ 노드 다운되거나 새로 추가되면?
   ㅤㅤ→ 저장 공간 꽉 차면?
   ㅤㅤ→ 장애로 한 노드에만 쏠리면?
   ㅤㅤ→ Druid의 Cost Function을 커스텀하여 파티션 날짜 범위 가깝고 겹칠수록 Cost가 높아지도록 만듬
   ㅤ→ 샤드 가용성을 위해 아래의 일을 함
   ㅤㅤ→ 샤드 정보에 TTL을 걸고 주기적으로 갱신 (etcd)
   ㅤ→ S3에 파티션 저장, DynamoDB로 파티션 목록 관리
   # 지금 프로덕션 상황
   - 4대의 c5.2xlarge 인스턴스만으로 15초 내에 500GB 데이터 스캔
   # 앞으로의 목표 (혹은 해야 할 일)
   - 실시간 Funnel 분석을 10대 이내의 클러스터로 하고 싶음
   - Spark를 지원해서 ML 연동 등을 지원하려 함
   - TrailDB를 대체할 자체 컬럼스토어(Ziegel) 개발하고 있음
   ㅤ→ SIMD와 멀티코어 최적화
   ㅤ→ Bitmap Index로 사전에 유저 속성 기반 필터링

   traildb 재밌죠. https://www.youtube.com/watch?v=-oPFxSwn0lM 재미있습니다. 오래묵은 영상이지만 traildb가 그동안 바뀐게 없을거에요.

   지금 보니까 개발자 분의 블로그 글도 있네요,
   https://engineering.ab180.co/stories/introducing-luft
   TrailDB는 처음 들어봤는데 요런 친구고...
   https://github.com/traildb/traildb
"
"https://news.hada.io/topic?id=3378","오픈 소스 비즈니스 모델의 죽음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           오픈 소스 비즈니스 모델의 죽음

   mapbox-gl-js이 2.0.0부터 3조항 BSD 라이센스를 버렸다는 뉴스( https://news.hada.io/topic?id=3377 )를 보고 놀라서 자신의 생각을 정리한 글이다.

   오픈 코어(Open Core) 비즈니스란?
     * 소프트웨어의 무료, 오픈소스 버전을 제공하고 복제하기 어려운 소유권있는 추가 기능을 유료 버전으로 제공하는 비니지스 모델이다.
     * 처음 들었을때는 가능할 것 같지 않지만 Elastic, D2iQ (구 Mesosphere), MongoDB, Cloudera가 모두 오픈 코어 비즈니스로 성장했다.
     * 예전에는 동작했었던 적이 있었지만 지금은 동작하지 않는다. 우리의 합의는 틀렸고 오픈코어는 죽었다.

   Mapbox
     * Mapbox를 이용하면 쉽고 빠르게 지도를 만들 수 있다. 오픈소스를 얘기하지 않고 Mapbox를 설명할 수 없고 Mapbox은 800여개의 오픈소스 프로젝트가 있고 GitHub 기준으로 세계에서 40번째로 많은 활동을 하는 조직이다.
     * Mapbox가 Mapbox GL JS v2를 독점적으로 유지하려는 것은 강력한 신호다.
     * 이는 한 시대의 끝이고 오픈코어가 실행가능한 비즈니스 모델의 죽음을 예고한다고 생각한다. Mapbox때문에 생각하기 시작한게 아니라 Mapbox 덕에 결론을 짓게 되었다.

   오픈코어는 더는 지지할 수 있는 비즈니스가 아니다
     * Mapbox같은 회사가 가장 인기있는 오픈소스 라이브러리를 독점적으로 만드는 결정을 하는 이유를 이해하려면 MongoDB와 Redis Labs를 공부하는게 도움이 될 것이다.
     * Ben Thompson가 2년전 오픈소소의 경제적 현실에 대해 요약했는데 비밀 소스를 무료로 제공하고 충분히 인기를 얻으면 반드시 클라우드 업체가 당신의 코드를 사용해서 경쟁서비스를 만들 것이라고 했다.
     * 이런 글로 인해서 클라우드 업체가 MongoDB와 Redis Labs를 압도하지는 못했고 MongoDB는 이후 주식도 200%이상 올랐고 Redis Labs는 1억 달러 이상 투자 받았다.
     * 중요한건 이들이 성장했다는 것이 아니라 어떻게 대응했냐 이다. 두 업체 모두 클라우드 업체가 문제 해결을 쉽게 하지 못하도록 독약같은 법적인 조항을 추가하거나 라이센스를 변경했다.
     * 이로 인해 MongoDB와 Redis Labs는 덜 개방적이 되었고 오픈소스 커뮤니티는 이들이 거짓말을 팔랐고 디딤돌로 이용당했다고 느꼈다.

   다시 Mapbox
     * Azure가 Mapbox를 이용해서 Azure Maps를 발표했고 한 업체가 발표했으니 다른 클라우드 업체도 따라올 것이다. 아마 Mapbox GL JS가 오픈소스로 남아있는 마지막이 될 것이다.
     * Mapbox는 Mongo나 Redis Labs와 비슷한 위치에 있다는 것을 알게 되었다.
     * Mapbox는 수조 달러 규모의 거대 기술 기업에 R&D를 지원하고 있었다
     * 그래서 Mapbox는 기존 버전을 그대로 두었지만 새버전(코드는 여전히 공개되어 있다.)의 라이센스를 변경했다.

   예전에 영업 비밀을 털어놓고도 성공할 수 있다고 생각했다. 오픈 소스 소프트웨어를 중심으로 회사를 만드는 행위가 도덕적이고 윤리적이라고 믿었다. 요즘은 잘 모르겠다.

   어제는 슬픈 날이었다. 하지만 Mapbox가 뭔가 잘못했거나 실망스러워서가 아니다.

   어제 스스로 납득했기 때문이다.

   클라우드가 오픈코어를 죽였다.

   클라우드가 오픈코어를 죽였다. 이 문장의 여운이 길게 남네요.

   Mapbox는 오픈소스 이전에 API key Quota는 넉넉하게 줘서, 뭘 하던지 전 응원합니다.
   (구글 O들 망해라ㅠㅠ)

   망해야 할 회사들이 꽤 있지만( ...) 안타까운 사실은 앞으로도.. 잘 나갈 듯한 생각을 지울 수가 없습니다. ㅠ.
   그래도 구글은 요즘 GMail만 쓰고 검색엔진은 DuckDuckGo 쓰고 있어용. 크롬 대신 파폭도 쓰고 있는데.. Roam 떄문에 크롬을 가끔 쓰고 있습니다 =ㅁ= UI가 더 예쁘게 나와서...

   그렇죠ㅠㅠ
   10년 뒤, 20년 뒤를 생각해보면 지금 있는 테크 회사들이 그대로 있을거 같아서 무섭습니다...
"
"https://news.hada.io/topic?id=3367","디즈니 플러스, 2021년에 한국 서비스 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       디즈니 플러스, 2021년에 한국 서비스 시작

   - Disney Investor Day 2020 발표 내용중에 포함
   - 향후 몇년간 10개의 마블, 10개의 스타워즈, 15개의 디즈니 영화/애니메이션/픽사 시리즈 제작 예정
   - 새 콘텐츠 브랜드인 Star 채널도 디즈니+의 일부로 내년 2월 오픈후, 한국와 일본에도 오픈예정
   ㅤ→ 해외 가입자를 위한 Hulu 대체 서비스
   ㅤㅤ(Hulu 전체는 아니고 ABC, FX Freeform, SearchLight, 20세기 폭스사 등의 TV와 영화등만 제공)

   this is the way!
"
"https://news.hada.io/topic?id=3393","Typesense 검색 엔진을 이용한 행정동 한글 검색 성능 테스트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Typesense 검색 엔진을 이용한 행정동 한글 검색 성능 테스트

   Typesense 서버 구축 게시글을 작성한 뒤, 검색용 API와 성능 테스트용 웹 페이지도 함께 만들어 보았습니다.
   아직 한글 형태소 분석기가 없어서 Elasticsearch처럼 정확한 한글 검색이 되지 않는 점은 단점인 것 같지만, 그 단점을 씹어먹을 만큼의 퍼포먼스를 보여주는 검색 성능이 너무 놀라웠습니다. --;
   Typesense 검색서버의 성능 테스트를 위해, 행정동 데이터를 키워드로 검색한 결과를 바로 보여주도록 웹페이지를 간단히 작성 해 보았습니다. 일부로 debounce 같은 처리를 아예 하지 않았는데도 원활하게 검색이 되는걸 보니 정말 신기하네요;
   앞으로 한국어 형태소 분석기가 적용되는 날이 온다면 정말 많이 사용될 것 같습니다.
   https://api.fureweb.com/typesense.html
   검색 성능 테스트용 데이터는 https://docs.google.com/spreadsheets/d/… 문서로 만들어 두었고, 이 데이터를 기준으로 collection 및 document를 생성해보았습니다.

   와… 정말 빠르네요!
"
"https://news.hada.io/topic?id=3486","모자이크 처리된 글자들을 복원하는 프로그램","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        모자이크 처리된 글자들을 복원하는 프로그램

   모자이크(pixelized) 처리된 글자를 어떤 알고리즘을 사용해서 복원하는 파이썬 스크립트입니다.

   eeeedd
"
"https://news.hada.io/topic?id=3418","Cloudflare, 빠른 시간 안에 빠른 사이트를 빌드할 수 있게 해주는 Cloudflare Pages 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Cloudflare, 빠른 시간 안에 빠른 사이트를 빌드할 수 있게 해주는 Cloudflare Pages 공개

   Cloudflare Pages는 프론트엔드 개발자들이 협업하며 웹 사이트를 배포할 수 있게 해주는 JAMstack 플랫폼입니다.

   신청했습니다 감사합니다.

   Vercel 짭(...) 느낌인데 Cloudflare에서 개발했다는 것이 중요한 부분이라 생각합니다.
   - 전세계 Cloudflare edge에 배포됩니다. (Workers와 동일)
   - (당연히) TLS를 기본적으로 지원합니다.
   - HTTP/3, QUIC, image compression 등 Cloudflare에서 이미 제공하던 기능을 모두 지원합니다.
   - Cloudflare Access integration을 사용할 수 있습니다.
   cloudflare workers까지 같이 붙여 사용할 수 있다면 정말로 좋을 것 같네요.

   + 아이러니하게(?) 바로 전날인 어제 Vercel(Next.js 개발)이 $40M (원화 약 440억)의 시리즈B 투자를 유치받았습니다.
"
"https://news.hada.io/topic?id=3400","2020-12-14 Google 장애 보고서oogle 장애 보고서

   장애 시간 (UTC 기준): 2020-12-14 03:45-04:35 (50분)
   # 영향
   서비스: 구글 클라우드 플랫폼, 구글 워크스페이스
   기능: 계정 로그인 및 모든 클라우드 서비스에 대한 인증
   지역/존: 글로벌
   # 설명
   구글 계정 인증을 필요로 하는 모든 구글 클라우드 플랫폼 및 구글 워크스페이스 기능이 전세계적으로 50분간 마비되었습니다. 근본적인 원인은 구글 내부에서 사용하는 자동화된 사용량 관리 시스템에 문제가 발생해 Google의 중앙 인증 관리 시스템(Identity Management System)
   의 사용 가능량을 감소시켜 사용자의 요청이 인증된 요청인지 확인할 수 없었고 이에 따라 사용자에게 오류를 제공했습니다.
   # 고객 영향
   인증이 필요한 GCP 서비스(클라우드 콘솔, 클라우드 스토리지, 빅쿼리, GKE)가 모든 사용자들에게 오류를 반환했을 수 있습니다.
   인증이 필요한 구글 워크스페이스 서비스(Gmail, 캘린더, Meet, Docs/Drive 포함)가 모든 사용자들에게 오류를 반환했을 수 있습니다.
   # 추가 정보
   많은 내부 사용자 및 도구에서 비슷한 문제가 발생해 장애가 생긴 외부 통신에 딜레이가 생겼습니다. 내부적으로 조사를 마치는대로 이 장에애 대한 분석을 발표할 예정입니다.
"
"https://news.hada.io/topic?id=3392","Vitess를 활용한 Slack의 데이터스토어 스케일링","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Vitess를 활용한 Slack의 데이터스토어 스케일링

   - 슬랙이 Active-Active 클러스터 구조에서 MySQL 수평 확장 시스템인 Vitess로 변경한 이야기
   - 2017년부터 이관시작해서 이제 Vitess가 전체 쿼리의 99%를 처리중, 년말까지 완전 이전 예정
   ㅤ→ 현재 피크시 230만 QPS(200만은 읽기, 30만은 쓰기)
   ㅤ→ 쿼리 레이턴시 중간값은 2ms, p99 쿼리 레이턴시 11ms
   - 슬랙은 LAMP 스택으로 시작(Linux,Apache,MySQL,PHP)
   - 3개의 DB 클러스터
   ㅤ→ 샤드 : 모든 메시지,채널,DM 등 사용자 데이터. 워크스페이스ID로 파티셔닝되어 한 워크스페이스는 한 샤드에
   ㅤㅤ즉 슬랙앱은 한개의 DB에만 접속하면 됨
   ㅤ→ 메타데이터 클러스터 : 워크스페이스를 샤드에 연결하기 위한 룩업테이블
   ㅤ→ 키친 싱크 클러스터 : 특정 워크스페이스용이 아닌 모든 데이터 저장. App 디렉토리등
   - 샤딩은 모노리스인 ""webapp"" 이 관리하고 조정
   - 각 클러스터들은 한개이상의 샤드로 되어있고, 각 샤드는 다른 데이터센터에 있는 적어도 2개 이상의 MySQL인스턴스로 프로비져닝
   - Active-Active 설정의 장점
   ㅤ→ 고가용성
   ㅤ→ 빠른 제품 개발 속도
   ㅤ→ 쉬운 디버깅
   ㅤ→ 쉬운 확장
   하지만, 조직이 커지고 제품팀들이 새로운 기능을 만들게 되면서 개발속도가 느려짐
   - Active-Active 의 단점
   ㅤ→ 확장의 한계 : 더 큰 고객들이 들어오면서 고성능의 호스트가 수용할 수 있는 한계에 도달
   ㅤ→ 한개의 데이터모델에 고착 :
   ㅤㅤㅤEnterprise Grid 와 Slack Connect 같은 기능이 들어가면서 한개의 서버에만 접속하는 패러다임에 반하게 됨
   ㅤ→ 핫스팟 : 데이터베이스 플릿을 잘 활용하지 못함. 샤드를 분할하고 팀이동이 어려웠고 슬랙 사용량을 예측하기 어려워 대부분의 샤드를 과도하게 프로비져닝해서 롱테일을 활용하기 어려움
   ㅤ→ 워크스페이스와 샤드 가용성 문제 : 샤드에 문제 생기면 그 샤드에 있는 모든 고객이 슬랙 사용 불가
   ㅤ→ 운영: 일반적인 MySQL 구성이 아니어서 많은 내부도구를 작성했음.
   - 2016년 가을, 초당 수십만개의 MySQL쿼리와 수천개의 샤딩된 MySQL 호스트를 관리했음
   - 정기적으로 확장 및 성능문제를 겪어서 새로운 접근방식에 대해 고민
   - 기존것을 발전 또는 새로운 제품을 도입에 대해 고민했으나
   ㅤ→ 자체 클라우드에서 실행되는 MySQL을 계속 사용하고 싶음
   ㅤ→ 수천개의 고유쿼리가 있고, 그중 일부는 특별한 MySQL 구성을 이용
   ㅤ→ 배포,백업,데이터하우스 ETL,컴플라이언스등이 모두 MySQL 에 기반
   - 왜 Vitess인가 ? : 대부분의 앱/운영 요구사항을 충족
   ㅤ→ MySQL Core : Vitess는 MySQL 기반
   ㅤ→ Scalability : MySQL의 주요기능과 NoSQL DB의 확장성을 결합. 내장 샤딩으로 특별한 로직 추가없이 유연하게 확장이 가능
   ㅤ→ Operability : 기본 장애 조치 및 백업등을 자동으로 처리. 클러스터 설정에 대한 메타데이터를 추적해서 일관성을 유지
   ㅤ→ Extensibility : Go기반 오픈소스. 광범위한 테스트커버리지와 개방된 개발자 커뮤니티
   - 작은 기능부터 Vitess 로 실무적용
   ㅤ→ 2017년 RSS피드를 슬랙채널에 통합하는 기능을 만들어 봄
   ㅤ→ 2018년에는 새 테이블은 다 Vitess에서만 만듬
   ㅤ→ 2019년 중반에는 레거시DB보다 Vitess에 더 많은 쓰기가 발생
   ㅤ→ 그리고 Vitess 오픈소스에 슬랙이 계속해서 기여
   ㅤ→ 3년에 걸쳐서 99%를 Vitess 로 이전. 올해안에 나머지 1%도 완료
   - Slack의 Vitess 도입은 성공이었나 ?
   ㅤ→ 전세계 여러지역에서 여러개의 Vitess 클러스터가 수십개의 키스페이스를 운영중
   ㅤ→ 키스페이스는 사용자/팀/채널수에 따라 확장되는 논리적 컬렉션
   ㅤ→ 유연한 샤딩으로 Slack을 확장할 수 있게 됨
   ㅤ→ COVID-19로 슬랙의 쿼리 갯수가 일주일만에 50%증가함
   ㅤ→ 가장 바쁜 키스페이스를 Vitess의 분할 워크플로우를 이용해서 수평으로 확장
   ㅤ→ 예전 같았으면 스케일링 불가능해서 다운타임이 발생 했을 것.

   https://vitess.io/
   Vitess : ""Sharding Middleware for MySQL""
   - MySQL과 MariaDB를 쉽게 클라우드에서 배포/스케일/관리 할수 있도록 만들어진 솔루션
   - Docker(로컬)Kubernestes 위에서 MySQL샤드를 운영하고 관리
   - 어플리케이션은 VTGate라는 프록시와 MySQL과 통신하듯이 사용하면, 내부에서 gRPC로 다른 서버들에 연결하는 방식

   이메일 서비스인 Hey도 Vitess를 사용중
   Hey 의 기술 스택 https://news.hada.io/topic?id=2355
"
"https://news.hada.io/topic?id=3448","Hyper - 웹기반 터미널 도구 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Hyper - 웹기반 터미널 도구

   - 웹기술(Electron + xterm.js)로 만들어진 윈도우/맥/리눅스 용 터미널앱
   - 빠르고 안정적이면서도, 아름답고 확장가능한 터미널을 만드는게 목표
   - Node.js 모듈로 확장을 만들어 기능 확장가능 (React + Redux)
   - V3 로 오면서 WebGL 적용으로 더 빨라짐

   그러고보니 저도 Hyper를 꽤 오래 썼네요.
   전에 올려주신 뉴스 https://news.hada.io/topic?id=3208 를 보고 Windows Terminal Preview 를 최근 몇 주는 사용하고 있는데, 이쪽도 맘에 들어서 계속 쓸 것 같습니다.
   제가 쓰는 Hyper 는 탭 제목을 설정할 수 없는데, Windows Terminal Preview 는 탭 제목을 설정할 수 있어서 맘에 들어요.

   아직 C++나 Rust로 만든 터미널 에뮬레이터 보다는 느린 느낌입니다.
   거기에 WebGL을 켜면 Powerline 폰트를 쓰는 경우 문제가 있어서 더욱 속도면에서 아쉬움이 많습니다.
   디자인이나 기능적인 면은 만족스럽습니다. 향후 발전을 기대하고 있습니다.

   언제 고쳐질까 궁금해서 찾아보니 3.2 Milestone으로 해당 문제가 올라와 있습니다.
   3.2 나오면 다시 한 번 테스트 해보려고 합니다.

   한글 입력 출력 다 잘 되고, 꽤 빠르군요.
"
"https://news.hada.io/topic?id=3406","진정성과 스타트업 (번역)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             진정성과 스타트업 (번역)

   - 폴 그레이엄의 에세이 번역
   - 창업자를 이야기할 때 쓰는 가장 큰 칭찬은 바로 ‘진정성이 있다(earnest)’는 것
   ㅤ→ 누군가를 진정성이 있다고 평가하는 건, 그들의 목적의식에 대해 이야기하는 것
   ㅤ→ 무엇인가에 몰두하는 이들이 올바른 동기를 갖고, 목표를 달성하기 위해 최선을 다하고 있다는 말
   ㅤ→ 목적의식을 벡터값으로 나타낸다면 그 크기와 방향 모두가 맞다는 뜻

   좋은 글 감사합니다

   폴 그레이엄님의 글은 나오는 것들을 모두 챙겨보고 있습니당. 굉장히 배울 점이 많더라고용.
"
"https://news.hada.io/topic?id=3382","Pantone, 2021년 올해의 컬러로 두 가지 색 선정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Pantone, 2021년 올해의 컬러로 두 가지 색 선정

   ""강인하고 희망찬 두 컬러의 화합은 우리에게 극복할 수 있는 희망의 메세지를 줍니다""
   13-0647 Illuminating , #F5DF4D , sRGB ( 245 223 77 ), 생기 넘치는 밝은 노란색
   17-5104 Ultimate Grey , #939597 , sRGB ( 147 149 151 ), 견고하고 신뢰할수 있는 안정적인 회색

   이 색은... 싸펑..?

   2000~2020년 팬톤 올해의 컬러들 22개 정리 및 시각화 https://news.hada.io/topic?id=1108
"
"https://news.hada.io/topic?id=3480","Zyxel 네트워크 장비에서 백도어 발견 (CVE-2020-29583)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Zyxel 네트워크 장비에서 백도어 발견 (CVE-2020-29583)

   Zyxel 네트워크 장비에서 문서화되지 않은 사용자 계정이 발견되었습니다. 이 사용자 계정은 인터페이스에 나타나지 않으며 비밀번호 또한 변경할 수 없는 관리자 권한을 가진 사용자입니다. 웹 및 SSH 인터페이스로 모두 접근이 가능합니다.
   이 취약점은 Zyxel 엔지니어가 먼저 보고한 것이 아닌 EYE에서 먼저 발견하여 Zyxel 측에 알리고 공개한 취약점입니다.
   거의 대부분의 Zyxel 네트워크 장비(Zyxel USG, ATP, VPN, ZyWALL, USG FLEX)에서 이 사용자 계정이 발견되었기 때문에 취약점이 있는 장비를 사용하고 있다면 즉시 펌웨어를 업데이트할 필요가 있습니다. (https://www.zyxel.com/support/CVE-2020-29583.shtml)

   Zyxel은 중소규모 네트워크를 대상으로 인기가 많은 방화벽/네트워크 장비 브랜드입니다.
   한국에서도 Zyxel HQ에서 직접 진출하여 수많은 공유오피스/사무실/병원 등에서 Zyxel 방화벽/네트워크(무선 AP 등) 장비를 사용하고 있는 상황입니다.
"
"https://news.hada.io/topic?id=3389","Facebook IQ의 2021년 핵심 주제 및 트렌드 보고서 [40p PDF, 한국어]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Facebook IQ의 2021년 핵심 주제 및 트렌드 보고서 [40p PDF, 한국어]

   페이스북과 인스타그램에서 인기를 끌었던 대화 주제를 탐색하고, 이러한 주제가 영향을 미치는 습관과 관심사들을 조사
   1. 교육 및 행동
   - 인식에서 행동으로의 전환(미국)
   - 독서의 즐거움(호주)
   - 온라인 교육의 부상(브라질)
   2. 라이프스타일
   - 텃밭 가꾸기(영국)
   - 캐주얼 문화(미국)
   - 내 집 인테리어(캐나다)
   3. 기술
   - 연결 관계 확장(인도)
   - 네오 뱅킹(멕시코)
   - 하이브리드 쇼핑(호주)
   4. 여가
   - 모두를 위한 디지털 아트(브라질)
   - 나만의 패션 아이템 만들기(영국)
   - 육상 교통의 재발견(독일)
"
"https://news.hada.io/topic?id=3416","Financial Times의 데이터플랫폼 구축기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Financial Times의 데이터플랫폼 구축기

   130년된 신문사의 디지털 트랜스포메이션 이야기
   G1. 2008~2014 : 읽은 기사에 기반한 뉴스추천에 집중. SQL Server 기반
   G2. 2014~2016 : ETL의 도입. 데규모 데이터 분석과 새로운 질문들, 데이타 양 증대
   ㅤ→ SQL Server가 병목. Redshift + ETL Framework 로 전환
   ㅤ→ 일간 몇번씩 SQL실행하도록 스케줄링 자동화
   ㅤ→ SQL + Python 으로 복잡한 데이터 모델 지원
   G3. 2016~2018 : 빅데이터@FT 의 시작
   ㅤ→ 데이터 레이턴시 최소화를 목표. Data Ingestion 이 하루에 한번(24h). 이걸 줄여야 더 빠르게 트렌드에 대응가능
   ㅤ→ 독자의 인터랙션을 모두 전송가능한 자체 트래킹 라이브러리 개발
   ㅤ→ 모든 이벤트를 AWS SNS → SQS → Kinesis → Parquet → Redshift
   ㅤ→ Raw Event를 처리할 NodeJS서버를 만들어 내외부 데이터를 조합해서 이벤트를 enrich 한후 Kinesis에 올림
   ㅤ→ Kinesis Firehose 를 이용해서 이벤트를 CSV로 만들어 S3에 저장
   ㅤ→ 이벤트 중복이 일어나는 상황이 있어서, 이를 처리하는 별도의 Redshift 클러스터를 만드니, 이거 때문에 레이턴시가 느려짐
   G4. 2019 : 비즈니스 가치 추가에 중점을 두고 플랫폼을 리빌드
   ㅤ→ 데이터 플랫폼을 PaaS로 바꾸고 싶었음
   ㅤ→ 쿠버네티스 도입. ECS 에서 EKS로
   ㅤ→ Airflow 도입
   ㅤ→ AWS SNS → SQS → Kinesis → Parquet → Airflow → Redshift
   G5. 2020 : 이제 실시간 데이터의 시대
   ㅤ→ G4는 좋았지만 아직도 실시간은 불가능
   ㅤ→ SNS,SQS,Kinesis 의 복잡한 세팅에서 Kafka로 전환 ( Amazon MSK )
   ㅤ→ 스트림프로세싱 플랫폼은 Apache Spark
   ㅤ→ kafka → spark → parquet(delta lake, redshift) ↔ airflow
   ㅤ→ 데이터 검증을 위해서 Apache Avro 도입 : Data Contract
   ㅤ→ Redshift, S3, Kafka 등을 쿼리하기 위해서 Presto 사용
   앞으로의 계획
   ㅤ→ 현재 Airflow, Spark, Kafka 3가지 컴포넌트에서 데이터가 들어오는데, 이걸 CDC(Change Data Capture) 기반으로 변경 예정
   ㅤ→ 모든 사람들이 실시간 데이터에 접속할수 있도록 변경. Data UI 를 향상시켜서 스트림처리를 드래그 & 드랍으로 가능할수 있도록

   오 이런 블로그 글 좋아요. 각 아키텍처 세대별 고민이 담겨져 있네요. 언론사에서도 이정도 규모의 데이터 플랫폼을 설계하는군요.

   그나저나 SQS -> Nodejs 루프 -> Kinesis 이런 식으로 연결했네요. 그냥 Kinesis 하나로 퉁칠 수 없는지 궁금하네요. 아직 AWS 잘 아는 편이 아니라서 ㅠ

   좋은 기사 요약 감사합니다!

   여기서 나온 단어들의 설명을 보시려면,
   - 최신 데이터 인프라를 위한 새로운 아키텍처 https://news.hada.io/topic?id=3055
   위 글과 긱뉴스 유튜브의 ""최신 데이터 인프라 이해하기"" 영상을 참고하세요
   - https://youtube.com/playlist?list=PLL-_zEJctPoJ92HmbGxFv1Pv_ugsggGD2
   그리고, 비슷하게 디지털 트랜스포메이션에 성공한 뉴욕타임즈 이야기도 같이 참고하세요
   실패하지 않는 뉴욕타임즈 - NYT는 어떻게 디지털화에 성공했나
   - https://youtu.be/K2qiAFTzDLU
   - (실패하지 않는) 뉴욕타임스 https://news.hada.io/topic?id=3172
"
"https://news.hada.io/topic?id=3439","중국 Zoom Video 직원이 미국으로부터 기소당해","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     중국 Zoom Video 직원이 미국으로부터 기소당해

   중국 Zoom Video 직원이 반체재 인사들을 감시하고 천안문 사태를 기념하는 비디오 컨퍼런스 콜을 방해하는 데 공모한 혐의로 미국으로부터 기소당했습니다.

   기사를 읽어보니, 단순히 약관 위반을 핑계로 회의를 방해하는 정도가 아니라 참가자의 신상명세를 중국 정부에 넘겨서 그들의 가족이 보복당하도록 만들었다는군요. ㅎㄷㄷ…
"
"https://news.hada.io/topic?id=3477","simple-graph : SQLite를 Graph DB로 사용하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 simple-graph : SQLite를 Graph DB로 사용하기

   - Nodes 와 Edges 로 구성된 간단한 Graph DB를 SQLite로 구현
   ㅤ→ Node : id를 가진 JSON 객체
   ㅤ→ Edge : id값들의 페어들. 방향 및 연결 속성을 위한 추가 JSON 객체 포함
   - Python 스크립트로 Atomic Transaction 제공
   - Graphviz 로 시각화 가능

   SQLite를 도큐먼트DB로 사용하기 https://news.hada.io/topic?id=3271
   위 글에서 영감을 얻었다고
"
"https://news.hada.io/topic?id=3426","Go 개발팀, Apple Silicon을 공식으로 지원하는 Go 1.16 베타 1 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Go 개발팀, Apple Silicon을 공식으로 지원하는 Go 1.16 베타 1 공개

   Apple Silicon (GOOS=darwin GOARCH=arm64)을 최초로 지원하는 Go 1.16 베타 1이 공식적으로 공개되었습니다.
"
"https://news.hada.io/topic?id=3489","Cosmopolitan libc - Build-Once Run-Anywhere C ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Cosmopolitan libc - Build-Once Run-Anywhere C

   - C코드를 어디서든 실행가능하게 만들어주는 라이브러리
   ㅤ→ Java랑 비슷하지만 인터프리터나 VM필요없음
   ㅤ→ Go/Rust 수준의 이식성을 제공하지만 C언어 그대로 사용
   ㅤ→ 제공된 5개의 라이브러리 파일로 컴파일하면 그대로 맥/윈도우/리눅스 지원
   - glibc 수준의 속도
   - ape(αcτµαlly pδrταblε εxεcµταblε) 라는 포맷을 만들어서 사용
   ㅤ→ Windows Portable Executable 을 UNIX 6th 에디션 쉘스크립트로 만들수 있다는 사실을 이용
   ㅤ→ 포터블하지만 Go 버전 헬로월드 보다 100x 작음
   - 내부에 BIOS 부트로더를 내장해서 베어메탈 부팅 후 실행도 가능

   어떻게 사용될 수 있을지 상상이 안되네요. 재미집니다

   작성자인 Justine Tunney 는 유명한 해커입니다.
   https://en.wikipedia.org/wiki/Justine_Tunney
   베어메탈 실행 방법은 작성자가 HN에 댓글로 달아줬네요
   https://news.ycombinator.com/item?id=25558363
   뭔가 C로 코맨드라인 도구를 만드는 새로운 방법이 될수 있을듯 하네요
   깃헙을 뒤져보는데.. 안에 각 OS를 표시한 ASCII 아트들이 인상적입니다.
   https://github.com/jart/cosmopolitan/blob/master/ape/ape.S

   코드의 주석이... 아트네요.. 아트..

   ㅋㅋㅋㅋ 멋지네요 처음 로고는 그런가보다 했는데 MS-DOS부터 감명받았습니다

   주석에 저런게 있으니까 뭔가 진짜 재미로 개발한다는 느낌이 드는데요 ㅎㅎㅎ
"
"https://news.hada.io/topic?id=3424","Apple Silicon 지원 VS Code, Insiders 채널에서 사용 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Apple Silicon 지원 VS Code, Insiders 채널에서 사용 가능

   지금까지 Apple Silicon용으로 제공되었던 VS Code는 Exploration으로 제공되어왔습니다. (Experimental) 이제 Exploration과 함께, 12월 16일부터 Apple Silicon용 VS Code를 Insiders 채널로 사용할 수 있게 되었습니다.
   한국 시간 12월 18일 오후 11시 기준, VS Code Exploration의 Electron/Chrome 버전은 11.0.3/87.0.4280.67, VS Code Insiders의 Electron/Chrome 버전은 11.0.5/87.0.4280.88 입니다.

   여전히 잔버그가 있고 가끔 멈추거나 크래시가 난다는 보고가 있긴 하지만 stable 릴리즈까지 멀지 않은 것 같습니다.
"
"https://news.hada.io/topic?id=3451","개발자가 시도해볼만한 좀 더 도전적인 프로젝트들 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       개발자가 시도해볼만한 좀 더 도전적인 프로젝트들

   사이드 프로젝트로 시도해 볼만한 것들을 리스트업
   만들어보기 위해 추가로 읽어야 할 링크 및 강좌들을 정리
   - Ray Tracer
   - Key-Value Store Web API
   - Web browser
   - Stock Trading Bot
   1년 전에 올라온 ""개발자가 시도해볼만한 도전적인 프로젝트들"" 의 2편 https://news.hada.io/topic?id=1085

   웹 브라우저를 보는 순간 아.. 정말 도전적인 프로젝트구나 하는 느낌이 드네요 ^^;;

   관련해서 HN 댓글에서도 다양한 것들을 추천하고 있습니다 https://news.ycombinator.com/item?id=25489879
   - Build a toy regex engine
   - Tetris
   - ION (Intuitive Ordinal Notation)
   - Fantasy Sports
   - Game Boy Emulator
   ""Build you Own X"" 에도 더 많은 리스트들이 있습니다. https://news.hada.io/topic?id=850

   게임 보이 에뮬레이터는 만들어보고 있는데 정말 재미있는 걸 많이 해볼 수 있습니다. CPU와 GPU가 어떻게 데이터를 주고 받을지, 인터럽트는 어떻게 구현할 지.. 등등...
   https://gbdev.io/pandocs/
   개발에 관심이 있으시다면 위 사이트를 쭉 한번 둘러보시는 걸 추천드려용.
   https://github.com/gbdev/awesome-gbdev
   더 많은 개발 정보를 찾고 싶으시면 여기를 보시는 걸 추천드립니당. 'ㅁ'! 그리고 https://github.com/ffdd270/study_emu 제가 개발중인 repo도 있는데, CPU 명령어들은 모두 구현과 C++로 테스트 케이스를 짜놔서, 혹시 구현하실 떄 막히시면 테스트 케이스를 보시면서 해결해보시는 것도 좋을 것 같습니당.
   이번년도 안에 닌텐도 로고 띄우는 걸 목표로 GPU도 개발중입니당. 궁극적인 목표는 게임보이 개발을 인터렉션하게 배울 수 있는 무언가를 만들고 싶은데 =ㅁ=.. 일단 로고부터 띄우고..
"
"https://news.hada.io/topic?id=3470","DEVIEW 2020 발표자료와 영상 공개발표자료와 영상 공개

   DAY 1 (AI/ML)
   - KEYNOTE - Connecting beyond technologies / 네이버
   - 오픈도메인 챗봇 ‘루다’ 육아일기: 탄생부터 클로즈베타까지의 기록 / (주)스캐터랩
   - 거리뷰 AI 스카우터 만들기 / 네이버 Clova CIC
   - 밑바닥부터 만드는 인공지능 서빙 플랫폼 / 네이버 Clova CIC
   - 스포츠 Live & VOD에 AI를 더하다!!! / 네이버 미디어Tech
   - 딥러닝 기술을 이용한 검색시스템 응답시간 예측 / 네이버 Search CIC
   - 사람들 사이에서 로봇 살아남기 / 네이버 LABS
   DAY 2 (Front-end, Back-end, Search 외)
   - GraphQL이 가져온 에어비앤비 프론트앤드 기술의 변천사 / 에어비앤비
   - 어서와, SSR은 처음이지? / 네이버 Apollo CIC
   - GraphQL API 까짓거 운영해보지 뭐 / 네이버 Glace CIC
   - 개발 생산성 10배 높이기 : from C++ to Golang / 네이버 Search CIC
   - 깃헙 4.4K 스타 billboard.js 메인테이너가 들려주는 오픈소스 개발기 / 네이버 Platform Labs
   - 눈치까지 챙긴 D.I.A.+ 시스템, 싹 다 찾아드립니다. / 네이버 Search CIC
   DAY 3 (For juniors, Hands-on, 오픈소스 외)
   - Recoil: 왕위를 계승하는 중입니다 (새로운 React 상태 관리 라이브러리) / Automattic
   - 오픈 소스 활동을 시작하기 위한 작은 가이드 / 네이버 Whale
   - 성능개선 뛰어들기 (고전적 SSR 성능개선) / 네이버Search CIC
   - Deno 를 통해 알아보는 Javascript 세상 이야기 / 네이버 Forest CIC
   - 주니어 개발자의 도보 길찾기 서버 개발기 / 네이버 Glace CIC
   - 리액트 개발이 이렇게 쉬웠나? (feat. Next.js) / 네이버 Forest CIC
"
"https://news.hada.io/topic?id=3387","우분투 20.04에서 typesense 서버 설치부터 node.js 클라이언트 예제 실행까지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          우분투 20.04에서 typesense 서버 설치부터 node.js 클라이언트 예제 실행까지

   https://news.hada.io/topic?id=3370 게시글을 보고 Typesense에 관심을 가지게 되었는데요.
   그래서 우분투 서버에 Typesense 설치 방법 및 node.js client 예제 코드를 작성 해 보았습니다.

   좋은 선순환이네요 !
"
"https://news.hada.io/topic?id=3487","6가지 무서운 장애 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             6가지 무서운 장애 이야기

   ## 1. Charity Majors, CTO of Honeycomb
   - 특정 지역(동유럽)의 사용자에게 push noti가 가지 않음
   - ASG 사이즈 변경 직후부터 발생
   - Round Robin DNS record가 UDP 패킷 사이즈를 넘어가서 발생
   ## 2. Matthew Fornaciari, CTO of Gremlin
   - 디스크가 꽉차서 로그를 쓰지 못해 장애 발생
   - 로그 로테이팅 기능 개발
   - 디스크 사용량 얼럿 설정
   - Gremlin을 통해 테스트 가능하게 추가 (카오스엔지니어링)
   ## 3. Lirran Haimovitch, CTO of Rookout
   ""매일 특정 시간에 서버가 다운된다는 도시 전설,
   몇주에 걸친 조사 끝에 보안 카메라에서 원인 발견,
   청소부가 진공 청소기 연결을 위해 서버 연결을 끊었음""
   ## 4. Daniel ""Spoons"" Spoonhower, CTO of Lightstep
   - 앱 로딩이 되지 않음
   - 당일 배포, 인프라 변경 없었음
   - 내부 사용자들만 되지 않는 것으로 확인
   - 앱로드용 api 확인중 내부 사용자의 경우 추가 데이터 반환부분 확인
   - 지난 몇 주 동안 천천히 payload가 증가하다 그 날 오후 최대 payload 크기를 넘기면서 앱 로딩 실패
   ## 5. Lee liu, CTO of LogDNA
   ## 6. Ting Huang, CTO of Transpoit
   - 트위터 모바일에서 읽을 수 없음
   - 신규라이브러리에서 세션 쿠키 파싱을 못하는 문제 발견

   내용이 요약되지 않은 5번의 경우는 인증서 만료 관련이네요.
   인증서 기한이 예정대로 만료되어도 문제 없을 것이라고 생각했지만 그건 새로 개발한 시스템에만 해당하는 이야기였고, 여전히 쓰이던 레거시 시스템에서는 문제가 발생하였다는 이야기입니다. 하필이면 사용하던 CI/CD 솔루션에서도 같은 문제가 터져서 일이 더 복잡했다고.

   ""청소부가 진공 청소기 연결을 위해 서버 연결을 끊었음""
   오메야...

   원문을 읽어보니 해당 내용은 운을 떼기 위한 것이었고, 실제 장애는 고객사 측 관리자가 회의할 때나 가끔 쓰는 쿼리가 테이블 전체를 잠궜기 때문에 그때마다 백엔드 서비스의 지연 시간이 한도 없이 늘어났다는 이야기네요. 의심가는 쿼리를 최적화했지만 헛다리짚은 것이라서, 고객사 측이 페이지가 너무 느리다고 새로고침을 반복할 때마다 계속 같은 현상이 발생했다고.

   비슷하다면 비슷한 개인 경험 하나. 프리랜서로 급히 들어온 쇼핑몰 관련 일 하나를 맡았을 때입니다.
   새벽에 쇼핑몰에서 큰 작업(솔루션의 대대적인 버전업)을 실시하고, 상품 결제 등 주요 기능에 문제가 없는 것을 확인한 후 재개장하였습니다. 그런데 오후 들어서 갑자기 쇼핑몰 웹사이트가 너무 느려지더니, 급기야는 거의 멈출 지경이 되더군요. 알고 보니 원인은 쇼핑몰에 별도로 붙어 있던 판매자용 페이지 때문이었습니다. 쇼핑몰 솔루션에 커스텀 개발한 판매자용 관리페이지를 붙여 운영하고 있었는데, 거기 들어가는 순간 아주 무거운 쿼리가 실행되더군요. 쇼핑몰 재개장 후에 개별 판매자들이 판매 현황을 보려고 접속할 때마다 MySQL에 부하가 커져서 결국 쇼핑몰 자체가 느려진 것이었습니다. 보니까 관련 테이블에 어째서인지 인덱스가 제대로 안 걸려 있더군요. 결국 인덱스를 제대로 걸어주고 몇몇 파라미터를 튜닝하는 것으로 쇼핑몰 자체가
   느려지는 것을 해결할 수 있었습니다.

   오 경험 공유 감사합니다.
   하긴 어드민이나 비즈니스 판단을 위한 자료는 aggregation을 쓰다보니 부하가 많이 가겠네요. 웹개발자가 아니라서 잘은 모르겠지만 요즘 그런건 데이터 엔지니어링이랍시고 데이터를 따로 모아두는 모양이던데요.

   말씀하신 대로 그런 데이터들은 별도로 분리시켜 처리하는 것이 정석이겠지만, 제가 작업했던 쇼핑몰은 불합리한 곳이 꽤나 많은 레거시 시스템이었는지라 그런 아키텍쳐상의 고려는 전혀 되어 있지 않았습니다. 굉장히 오래된 버전(InnoDB가 아니라 MyISAM이 기본 엔진이던 시절의 버전)의 MySQL이 역시 오래된 버전의 Apache 웹 서버와 함께 같은 VM 인스턴스 내에서 돌고 있었습니다. 쇼핑몰을 운영하기 위한 솔루션 또한 이미 레거시로 분류되어 패치만 나오고 있는 상황이었습니다. 작업 중에 느꼈던 솔루션의 구조적인 문제는 아예 처음부터 새로 개발한 신규 버전에서는 해결된 모양이었지만, 레거시 버전을 만지는 저에게 그 점은 아무런 영향도 주지 못했습니다. 그게 벌써 작년 일이네요.
"
"https://news.hada.io/topic?id=3461","Open Source Stash","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Open Source Stash

   - 디자이너/개발자/분석가들을 위한 주요 도구의 오픈소스 대체제 모음
   - 카테고리별 보기 또는 검색 가능
   ㅤ→ Design
   ㅤ→ Communication
   ㅤ→ Analytics
   ㅤ→ Password Managers
   ㅤ→ Wiki
   ㅤ→ Word processing
   ㅤ→ Collaboration
   ㅤ→ Invoicing
   ㅤ→ Note-taking
   ㅤ→ Project Management
   ㅤ→ Video
   ㅤ→ Audio
   ㅤ→ Email Automation
   ㅤ→ CRM
   ㅤ→ Social Network
   ㅤ→ SEO
   ㅤ→ Developer Tools
   ㅤ→ Ecommerce
   ㅤ→ Form Builders
   ㅤ→ URL Shortners
   ㅤ→ Website builders
   ㅤ→ Accounting
   ㅤ→ Browser
"
"https://news.hada.io/topic?id=3413","페이스북 : iOS14의 정책은 작은 비즈니스를 해치고 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   페이스북 : iOS14의 정책은 작은 비즈니스를 해치고 있다

   애플의 변경된 보안정책을 강하게 비판하는 글을 자사 블로그에 게시
   ""페이스북이 작은 비즈니스를 대변해서 이야기 합니다""
   1. 애플이 iOS14로 강제하는 정책은 수익을 위한거지, 개인정보를 보호하려는게 아님
   ㅤ→ 기업이 수익을 위해 구독 및 기타 인앱결제로 전환하게 만들어 애플이 더 많은 수익을 내고, 무료 서비스들은 유료화 하거나 사업을 접어야 함
   2. 이미 판데믹으로 피해보고 있는 중소기업과 퍼블리셔들에게 피해를 주고 있다
   ㅤ→ 광고예산을 효율적/효과적으로 사용하는 것에 영향을 미쳐서, 개인 맞춤형 광고가 없으면 중소기업들은 매출의 60% 이상이 감소할수 있음
   3. 애플 자신들은 룰을 지키지 않음
   ㅤ→ 애플의 개인 맞춤형 광고 플랫폼은 iOS 14 정책이 적용되지 않음
   4. 우리는 애플의 접근 방식에 동의하지 않지만, 그들에게 요청하는 것 밖에는 대안이 없음
   ㅤ→ 그렇게 하지 않으면, 애플의 보복을 받아 우리가 지원하려는 비즈니스에 더 큰 피해를 줄수 있으며, 우리는 그 위험을 감수할 수 없음

   * 페이스북은 Epic Games 가 애플과 벌이는 소송관련해서, 애플의 정책이 어떻게 사람들과 기업에 악영향을 미치는지에 대한 문서를 만드는데 도움을 줄 것

   관련해서 두번째 전면 신문 광고도 내보냈네요. 이번엔 제목이..
   ""Apple vs. the free internet""
   https://macrumors.com/2020/12/…

   앱스토어 결제를 사용하지않고 자체 결제 시스템을 사용하는 것, 사용자 정보를 쿠키 기기 아이디 등으로 추적하는 것 에 대한 주제인 듯한데
   확실히 페이스북의 주장이 담겨 있기는 한데 현재 애플 정책이 뭔지는 담겨있지는 않아서 우리나라 신문기사 보는 느낌이네요(음?)

   개인정보를 엄청나게 퍼나르는 페북이 아니라 다른 기업이 한 말이었으면 진정성이 있었을텐데요.

   다른 건 몰라도 3번은 심각한 형평성 위반 아닐까요?

   애플이 앱스토어 검색 광고를 하고있기는 합니다. (https://appleinsider.com/articles/19/…)

   근데 저게 페이스북의 주장이긴 한데.. 명확한 증거는 잘 없어서 애매한듯 합니다.

   ""애플이 버는 저 광고비는 내 것이여야 했어!"" 를 길게 적었네요.

   오늘 페이스북은 해당내용을 뉴욕타임스, 워싱턴포스트, 월스트릿저널에 전면 광고로 내보냈습니다.
   https://theverge.com/2020/12/…

   ""(에픽처럼 앱이 내려가는걸 감수할수는 없지만, ) 애플은 나쁘니까 다들 한 목소리로 비판해줘""
   라는걸 굉장히 길게 적은 글이네요..
"
"https://news.hada.io/topic?id=3425","Zoom, 12월 21일 Apple Silicon 지원 업데이트 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Zoom, 12월 21일 Apple Silicon 지원 업데이트 예정

   Zoom이 12월 21일 업데이트로 Apple Silicon 프로세서를 공식적으로 지원한다고 밝혔습니다. 공식 웹 사이트에서 별도의 인스톨러가 제공될 예정이라고 합니다.
"
"https://news.hada.io/topic?id=3481","Apple ProRAW 이미지 포맷 리뷰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Apple ProRAW 이미지 포맷 리뷰

   - iOS 14.3 업데이트에 포함된 사진가용 이미지 포맷 ProRAW 리뷰
   - 프로사진가들은 RAW로 촬영해서 더 많은 색상데이터 및 메타데이터를 가지고 후보정이 가능
   - 애플은 사진에 많은 계산들을 하기 때문에 RAW는 나오지 않을거라고 생각했지만,
   ㅤProRAW는 정확한 이미지를 위한 계산만 사용하면서, 화이트밸런스,노이즈 감소,샤픈등의 다양한 설정값을 제어할 수 있음
   - HEIC vs. ProRAW
   - iOS 14.3 업그레이드 하면 우상단에 RAW 버튼이 생겨서 촬영가능
   - Halide, Lightroom, RAW Power 등에서 편집가능
   * 매주 낮은 조도, 높은 HDR, 색온도가 여러가지 일때등 특별한 환경에서 사용하는 것을 추천
   * ProRAW 사진 한장은 25MB
"
"https://news.hada.io/topic?id=3482","개발자와 파워유저를 위한 윈도우 툴 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         개발자와 파워유저를 위한 윈도우 툴 모음

   - 스캇 한셀만이 2003년부터 정리해온 Windows용 도구 리스트로, 2014년 이후 6년만에 나온 8번째 업데이트 판
   일과 삶을 바꾸는 유틸들
   - Windows Subsystem for Linux
   - Windows Terminal : 윈도우즈용 모던 터미널
   - Windows PowerToys : 컬러피커, 팬시존스, 탐색기 확장, 이미지 리사이저, 키보드 매니저 & 리맵퍼, 애플 스팟라이트와 비슷한 Run
   - VS Code
   - PowerShell / OhMyPosh / PoshGit / Cascadia Code : 그 외에 Starship 도 참고
   - ZoomIt : 화면 공유시 간단히 뭔가를 그릴수 있게 해주는 도구
   - Winget : Apt-get for Windows
   - QuickLook : 맥에서 쓰던 스페이스바 프리뷰 기능을 윈도우에!
   놀라운 .NET 및 개발자 유틸들
   - CodeTrack : 무료 .NET Performance Profiler and Execution Analyzer
   - LINQPad - 인터랙티브 쿼리 도구
   - WinMerge : 무료 오픈소스 파일 비교 & 머지 도구
   - WinDbg : UI가 대폭 개선된 표준 디버거
   - Insomnia 와 Nightingale : REST Api 호출용 도구
   - NuGet Package Explorer : NuGet 패키지 탐색 및 내용 보기
   - WireShark : 네트워크 프로토콜 분석기
   - GitHub Desktop
   윈도우에 기본 내장되어야 할 유용한 유틸들
   - Ear Trumpet : 훌륭한 볼륨 컨트롤
   - Teracopy : 대규모 파일 고속 복사
   - AutoHotkey : 무료 오픈소스, 키보드/마우스 자동화 도구
   - 7-Zip : 최고의 압축 도구, 7z 는 ZIP보다 2~10% 압축률이 뛰어남. ZIP,TAR,ISO,RAR,CAB 까지 모두 지원
   - Paint.NET : 포토샵의 80% 기능을 가진 무료 그림 도구
   - NimbleText : 정규식으로 문자열을 조작하는 도구
   - Markdown Monster : 마크다운 편집기
   - Fiddler : HTTP 디버깅용 프록시
   - NirSoft Utilities Collection : 다양한 유틸 모음. 특히 MyUninstaller 와 WhoIsThisDomain
   - Ditto Clipboard Manager : Window + V 키의 놀라운 기능
   - TaskbarX : 태스크바 버튼의 위치를 가운데 또는 마음대로 위치
   - ShellEx View : 탐색기에서 마우스 오른쪽 버튼 클릭시 나오는 것들을 정리
   - OneCommander / Midnight Commander / Altap Salamander : 파일 탐색기
   - WinDirStat : 어떤 파일이 얼마나 크기를 차지하고 있나 보여주는 디스크 사용량 분석기
   - FileSeek / Everything : 파일 검색
   - ShareX, Greenshot, Lightshot : 화면 캡쳐
   - screen2gif , LICEcap : 애니메이션으로 캡쳐
   - Alt-Tab Terminator : Alt-Tab 을 향상시키기 ( 큰 프리뷰 화면 등)
   - PureText : 클립보드 안에 텍스트 포맷을 지우고 순수 텍스트만 붙여넣기
   - VLC Player : 모든 것이 재생가능한 동영상/오디오 플레이어
   - PSReadline : PowerShell 을 더 Bash 스럽게
   - Yori and all Malcolm Smith's Utilities : CMD를 개선한 Yori 및 다양한 유틸
   Visual Studio Code 확장들
   - GitLens : Git 확장
   - Version Lens : 최근 패키지인지 버전 확인
   - CodeSnap : 코드가 이뻐보이는 스크린샷 찍기
   - .NET Core Test Explorer : .NET 유닛테스팅을 더 훌륭하게
   - Arduino for VS Code : 아두이노 개발 도우미
   - Coverage Gutters : 테스트 커버리지 보이기
   - Docker for VS Code : 컨테이너 탐색/관리/배포
   - GitHistory : Git Log 를 훌륭하게 보여주기
   - HexDump : Hex 로 보기
   - LiveShare : 화면 공유만이 아닌, 오디오/채팅을 포함한 코드 공유
   - PowerShell for VS : PowerShell ISE 대체
   - Remote Containers : Docker 사용자라면 꼭 사용해야 할 놀라운 확장
   - Remote SSH : 원격 SSH 서버를 개발환경으로 사용하기
   - Remote WSL : 윈도우에서 원격으로 리눅스 개발/디버깅 하기
   - Yoncé : Beyoncé 테마
   THINGS I ENJOY
   - RescueTime : 생산성 도구, GTD(Getting Things Done) / TCB (Taking Care of Business)
   - Carnac : 내가 입력하는 모든 키보드 입력(단축키 포함)를 화면 한 구석에 보여주는 도구. 발표(특히 라이브코딩) 시에 좋음
   - DOSBox : 예전 DOS 프로그램 실행하기
   - Windows Sandbox : 윈도우 안에서 윈도우를 샌드박스로 실행해서 안전한 환경에서 윈도우 앱 테스트하기

   저는 listary 잘 쓰고 있습니다.
   everything 과 비슷한 기능이랄까요? 프로그램이나 파일들 검색등등 많습니다.
   https://www.listary.com/

   오.. 처음보는 툴인데 재미있어 보이네요!

   네~ everything 사용하려다 매번 익숙해지지 않다가 이거 한 2년 넘게 쓰며 정착되었네요.
   가장 많이 쓰는 건 ctrl 두번 연타하여 나오는 검색창에 자주쓰는 프로그램 찾아서 실행하는 것입니다.

   글 보고 Powertoys run 도 써보고, ueli 도 써봤는데, 저는 창을 많이 띄워놓고 사용하는 스타일이라서 편리한 앱 스위처가 제일 좋네요.
   몇 년째 계속 쓰고 있고.. (개발이 중단되어서 아쉽지만) 여전히 잘 쓰고 있는 https://github.com/kvakulo/Switcheroo 좋습니다.
   Firefox 에서는 TabSearch 확장, Chrome 에서는 Quick Tabs 확장이 같은 역할을 해서 잘 쓰고있습니다.

   Teracopy 같은 건 예전에 써보려다가 이상하게 작동이 안 되어서 포기한 적이 있는데, 왜 그런 걸까요. 그나저나 아는 것도 있지만 처음 보는 도구도 많군요.

   좋은 프로그램들 많군요. 저도 살펴봐야겠네요. 좋은 글 소개 감사합니다

   저도 안쓰던게 많아서 하나하나 차근차근 써보려고 합니다.
   특히 ZoomIt 은 최근에 유튜브 영상 찍으면서 잘 활용하고 있습니다
"
"https://news.hada.io/topic?id=3409","Vercel의 버추얼 이벤트 스타터킷","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Vercel의 버추얼 이벤트 스타터킷

   Vercel에서 Next.js Conf를 온라인으로 진행했던 사이트를 스타터킷으로 만들어서 배포했다.
   이 스타터킷에는 다음 기능이 포함되어 있다.
   * 이벤트 등록
   * 등록후 발급되는 개별 티켓
   * 트랙별 세션 소개
   * 발표자 소개
   * 스폰서 페이지
   * 구인 페이지
   웹사이트: https://vercel.com/virtual-event-starter-kit
   데모: https://demo.vercel.events/
   소스코드: https://github.com/vercel/virtual-event-starter-kit
"
"https://news.hada.io/topic?id=3427","AWS, T4g (ARM) 인스턴스의 free-trial 기간을 2021년 3월 31일까지로 연장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         AWS, T4g (ARM) 인스턴스의 free-trial 기간을 2021년 3월 31일까지로 연장

   AWS에서 T4g (ARM) 인스턴스의 free-tier 기간을 2021년 3월 31일까지로 연장했습니다. 이 기간까지 t4g.micro 인스턴스를 사용하는 고객들은 매달 750시간의 무료 인스턴스 시간을 얻게 됩니다. T4g free-tier은 이미 존재하는 t2.micro/t3.micro free-tier와는 별개로 제공됩니다. (리전에 상관없이 t2/t3 micro free-tier의 사용량을 모두 소진한 경우에도 T4g free-trial을 사용할 수 있습니다.)
"
"https://news.hada.io/topic?id=3449","Pace - 사이트에 자동 프로그레스바 붙이기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Pace - 사이트에 자동 프로그레스바 붙이기

   - Ajax / Event Lag / Doc Ready / Element 등을 자동으로 모니터링해서 웹페이지에 프로그레스바를 붙여주는 라이브러리
   - 다양한 테마 제공 : 페이지 최상단 프로그레스바/카운터/코너 표시기/로딩바/센터 표시기 등
   - 4kb 사이즈, 별도 의존성 없음
"
"https://news.hada.io/topic?id=3402","트위터, Timeline 기능을 ARM기반 EC2로 옮길 것이라 밝혀","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 트위터, Timeline 기능을 ARM기반 EC2로 옮길 것이라 밝혀

   트위터가 자체 인프라에서 AWS로 옮기기로 한 가운데 타임라인 기능을 ARM기반 EC2 인스턴스로 옮길 것이라 밝혔습니다.

   ARM이 서버 시장에서 활약하지 못했던 이유는 여러가지가 있겠지만 제대로 된 ARM 개발 환경(머신)이 없었던 탓도 컸죠. 이제 애플이 제대로 된 ARM 기반 데스크탑, 랩탑을 꾸준히 출시할 것 같으니, 아마 트위터처럼 ARM 기반 서버/클라우드로 옮기는 곳이 많아질 것 같네요. 일단 전성비에서 인텔이나 암드와 비교가 안되니까요..

   Mac뿐 아니라 서버, 클라우드 쪽도 ARM 바람이 불어오내요. ARM 주식을 사야하나..

   애플(M1), NVidia(ARM), 아마존(Graviton) 주식을 사는게 맞아보입니다! ㅎㅎㅎ

   https://bloomberg.com/news/articles/…
   AWS 이전에 대한 bloomberg 기사입니다.
"
"https://news.hada.io/topic?id=3398","Facebook IQ : 엔터테인먼트 환경에 영향을 미친 5가지 소비자 변화 [72p PDF, 한국어]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Facebook IQ : 엔터테인먼트 환경에 영향을 미친 5가지 소비자 변화 [72p PDF, 한국어]

   ""콘텐츠, 소비, 문화: 엔터테인먼트 업계의 관점""
   01 콘텐츠 경제: 집에서 보내는 시간이 증가하면서 콘텐츠의 수요가 증가하고 팬 기반이 확대
   02 다른 사람과 함께하는 소비: 엔터테인먼트의 사회적 특성을 온라인으로 옮겨오는 중
   03 포용적 다양성: 소비자들은 미디어 및 엔터테인먼트에서 더욱 다양한 사람들의 모습과 다양성을 보여줄 것을 요구
   04 선택 옵션의 증가: 다른 사람들과 알고리즘의 도움을 통해 다양한 콘텐츠 및 서비스 옵션을 탐색
   05 지속 가능한 스트리밍: 커뮤니티, 소통 및 콘텐츠가 스트리밍의 지속 가능성을 높이는 방법
   06 신속한 반영: 2021년을 앞둔 Facebook 전문가들의 최고 관심사
"
"https://news.hada.io/topic?id=3396","카시오 fx-9860GIII 계산기, MicroPython을 내장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  카시오 fx-9860GIII 계산기, MicroPython을 내장

   - 그래프, 공학계산, 통계, 기하학 용도의 과학용 그래픽 계산기
   - 스프레드 시트 기능 포함
   - MicroPython 1.9.4 버전을 내장
   ㅤ→ 파이썬3의 일부를 임베디드 환경에서도 사용가능하게 만든 것
   ㅤ→ REPL 내장
   ㅤ→ 256k 코드공간과 16k 램만 있으면 동작 가능
   ㅤ→ https://micropython.org/
   - 128x64, 흑백 LCD
   - 190g, 175.5 × 83.5 × 18.7mm
   - 배터리 AAA * 4개, 300시간
   - 프로그램 용량 : 62000 bytes (최대)
   - 저장 메모리 용량 : 3MB (최대)

   HN댓글에 보니, 카시오는 비싸고 NumWorks 가 싸고 좋다라는 글이 있네요
   https://www.numworks.com/
   이건 디스플레이가 컬러인데 $99.99 입니다.
   미국/유럽 배송만 되는게 흠이라 배대지를 써야하겠네요.
   - 320x240 픽셀, IPS LCD, 26만 컬러
   - 167g, 160 x 81.2 x 10mm
   - 216MHz ARMv7 프로세서
   - FlashROM 8MB, Static RAM 256Kb
   - 1450mAh (20시간), USB Micro-B 충전식
"
"https://news.hada.io/topic?id=3450","Owncast - 오픈소스 라이브 스트리밍 서버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Owncast - 오픈소스 라이브 스트리밍 서버

   ""나만의 Twitch 셀프호스팅""
   - 커스터마이징 가능한 웹 UI
   ㅤ→ 비디오 플레이어 와 채팅
   - RTMP 호환 가능한 방송 프로그램과 연동 (OBS,Zoom,Restream등)
   - HLS Adaptive bitrate streaming 지원
   - 영상과 채팅은 외부 임베딩 지원
   - S3/B2 등의 외부 저장소를 이용한 스트리밍도 가능
   - Docker 로 설치 가능
   - Digital Ocean/Linode 의 월 $5 서버로 운영 가능
"
"https://news.hada.io/topic?id=3384","Cloudflare와 Apple이 개인정보를 보호하는 인터넷 프로토콜을 설계한다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Cloudflare와 Apple이 개인정보를 보호하는 인터넷 프로토콜을 설계한다

   Cloudflare와 Apple이 개발하고 있는 ODoH(Oblivious DNS-over-HTTPS)는 프린스턴대학의 ""Oblivious DNS: Practical Privacy for DNS Queries"" 연구에 기반해서 DNS 쿼리의 인터넷 사용자 의존성을 분리했다. DNS 쿼리를 암호화해서 프록시 서버에 보내기 때문에 프록시는 그 안을 볼 수가 없고 DNS 리졸버는 누가 쿼리를 보냈는지 알 수가 없다.
"
"https://news.hada.io/topic?id=3399","The Information의 2021년 예상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       The Information의 2021년 예상

   내년에 일어날 일들을 예측해 본 리스트
   - 애플이 애플TV+에 더 많이 투자
   - AT&T가 CNN을 매각
   - 클라우드업체가 Kong을 인수
   - Confluent 상장
   - Databricks/Redis가 큰 SW회사에 피인수
   - 핀테크 회사 Chime/Klarna 와 Robinhood 상장
   - 초기단계 스타트업의 평균가치 지속 상승
   - DoorDash / Airbnb 같은 대형IPO로 돈을 번 기술기반 백만장자들의 초기투자 펀드가 늘어날 것
   - Remote-Only 스타트업이 표준이 될 것. 투자자들은 초기에 사무실임대를 하지말라고 권장
   - 지리적 경계의 중요성 감소로, 이미 알려진 텍사스 Austin 외에도 마이애미,푸에르토리코 등에도 스타트업 펀딩붐이 일어날 것
   - Amazon Freight(트럭 물류, Uber for Trucking)가 대기업고객에게 서비스 제공 시작.
   - 아마존 브랜딩한 트랙터(Tractor, 트레일러를 견인하는 Semi 트럭의 앞부분 Cab)를 소규모 트럭회사에 임대하는 프로그램을 시작
   - IPO와 직접 상장(Direct Listing) 간의 경계가 더 모호해 질 것
   - 코로나로 상장못했던 기업들이 상장을 예상하고 있어서 2021년에 더 많은 기술IPO가 있을 것
   - Alibaba, JD.com, Pinduoduo, Didi Chuxing, Meituan 과 스타트업 Xingsheng Selected, Nice Tuan 등이 온라인 식료품 사업에서 수조원짜리 경쟁을 할 것
   - 중국이 대형 플랫폼의 힘을 억제하기 위해 새로운 독점금지법으로 Ant 그룹의 주요 자산을 매각하고, 텐센트의 WeChat을 자세히 조사할 것
   - 알파벳(구글)은 양자컴퓨팅에 주력하는 새로운 조직을 발표 할 것
   - 구글은 Google Nest Hub를 통해 새 OS인 Fuchsia를 출시.
   - 미국의 디지털 광고 지출에서 구글의 점유율은 계속 감소하고 페이스북과 아마존의 점유율이 증가 할 것
   - 페이스북과 애플간의 긴장감 강화. 애플은 개인정보 데이터 보호를 계속 강화. 증강현실 헤드셋을 양사 모두 개발중. 미래에 이 AR 헤드셋이 모바일폰처럼 유비쿼터스가 될거라 경영진이 믿고 있음.
   - 애플은 베트남과 인도에서 더 많은 제품을 생산하여 중국으로부터 다각화하기 위해 노력
   - AirPods 라인의 새로운 변형 기기들을 출시하여 웨어러블 사업을 확장할 것
   - Uber의 핵심사업은 코로나 이후에도 어려울 것. 더 적게 출퇴근 및 출장을 갈것으미로. 음식배달쪽에 더 많은 투자와 인수가 진행될 것
   - 자동차 자율주행 분야에서 SPAC 합병이 더 일어날 것.
   - 애플은 비밀리에 자율주행 자동차를 만드는 것에 대한 유출을 더이상 막지 못할 것.
   - News Corp 및 AT&T 같은 콘텐츠 회사와 Facebook/Google 같은 디지털 플랫폼회사들의 전투가 워싱턴에서 더 분명해 질 것(의회에서 법률 제정을 위한 로비 공방을 한다는 뜻)
   ㅤ→ 콘텐츠 회사는 저작권 보호자료를 무단 게시하는 것에 대해 디지털플랫폼에 더 많은 책을 부여하기 위해 로비를 강화 할 것

   이런 예측에 대한 연말 회고글도 있으면 좋겠습니다.
   연초에 예상했었는데 어떻게 되었다던지 :-)

   유료 사이트인 The Information은 매년 혹시 틀릴수도 있지만, 다양한 예상들을 합니다.
   어떤게 맞고 틀릴지는 모르지만, 재미나게 보시면 좋을거 같아요.
   아래에 작년 에상도 참고하세요.
   The Information의 2020년 기술 업계 예상 https://news.hada.io/topic?id=1069
"
"https://news.hada.io/topic?id=3444","DB Diagram - 온라인 ERD 편집기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        DB Diagram - 온라인 ERD 편집기

   - 간단한 DSL 코드(DBML)를 작성하면 ERD를 그려주는 도구
   - ERD는 줌인/아웃 및 드래그해서 편집 가능
   - PostgreSQL/MySQL 스크립트 Import 가능
   - PDF/PNG/SQL Export
   - Rails(schama.rb) 직접 Import / Django(models.py 를 DBML 로 변환)
   * DBML - https://github.com/holistics/dbml
   * 이렇게 작성한 DBML 코드는 DBDocs 를 통해서 데이터베이스 문서 사이트로 쉽게 변환 가능 - https://dbdocs.io/

   https://aquerytool.com/
   제가 급할 때 사용한 사이트인데 가볍게 사용하기 좋습니다.

   DBML(Database Markup Language)에 대한 소개글:
   https://libsora.so/posts/dbml-entity-relation-diagram-as-code/

   뷰어 자체가 내부적으로 사용 가능하게끔 된다면 매우 유용하겠네요.
"
"https://news.hada.io/topic?id=3380","Weather Icons - 222개 날씨 아이콘 모음 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Weather Icons - 222개 날씨 아이콘 모음

   - CSS,SVG,Font(OTF/TTF) 등으로 제공
   - Less/Sass 지원
   - 낮시간 / 밤시간용 날씨 아이콘 구분
   - 28개의 달 모양, 0~12시 시간, 바람 방향/풍속 아이콘등
   - 각종 날씨 API와 매핑 지원 : Yahoo, Forecast, Weather Underground, Open Weather 등
   - SIL Open Font License(OFL)
"
"https://news.hada.io/topic?id=3417","Microsoft Edge, Apple Silicon 지원 버전 Canary 채널 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Microsoft Edge, Apple Silicon 지원 버전 Canary 채널 릴리즈

   Mac ARM64 기기를 네이티브로 지원하는 Microsoft Edge가 Canary 채널로 릴리즈되었습니다.

   오늘 와서 Edge를 깔다가 로제타가 돌아가길레 조금 실망했었는데. 행복하네여 😊
"
"https://news.hada.io/topic?id=3433","소니, PS 버전 사이버펑크 2077 환불","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        소니, PS 버전 사이버펑크 2077 환불

   - CyberPunk 2077의 콘솔판 오류 문제로 게임을 플레이스테이션 스토어에서 내리고, 전액 환불을 진행
   * 제작사 CDPR은 지난 15일간 주식 40% 폭락
   * 베스트바이는 XBOX/PS4 등 모든 콘솔 버전에 대한 환불을 진행(플레이여부 상관없음)

   PC판은 그나마 괜찮다는데, 콘솔은 너무 테스트 안하고 내놓은게 티가 나서..
   위쳐로 쌓은 명성을 한방에 흔들어 버리네요.
   전 PC판 게임은 잘 안해서, 내년에 XBOX Series X 구하면 그때나 하려고 기다렸는데 차라리 이참에 정신차리고 패치해주면 좋겠네요.
"
"https://news.hada.io/topic?id=3376","DoorDash의 지원부터 IPO까지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          DoorDash의 지원부터 IPO까지

   DoorDash가 Y Combinator에 지원했을 때부터 IPO를 하는 과정까지 함께 보고 그 과정을 돌아보며 적은 글이다.
   - Y Combinator에 지원할 때 1분짜리 소개 동영상을 같이 올려야 한다.(글에 영상 포함되어 있음)
   - 영상에서 얘기했던 음식 배달만이 아니라 로컬 비즈니스가 성공하도록 돕겠다는 목표를 7년뒤 S-1 문서에서도 똑같이 사용했다.
   - 모든 지원자를 리뷰하고 10팀을 불러서 10분 인터뷰를 하는데 2013년 4월 DoorDash에 대해 ""팔로알토의 캐비어(Caviar for Palo Alto)""라고 메모를 남겨두었다.
   - 당시 회사는 법인도 아니었고 펀딩도 못받았으면 앱도 없었다. 몇달전에 오픈한 http://www.paloaltodelivery.com/ 웹사이트만 있었고 전화번호를 가진 랜딩페이지로 217개의 배달을 진행했다.
   - 사업은 입증되지 않았지만 고객, 레스토랑, 운전자 세 그룹에 올바른 일을 하고 있었고 성공하려면 이 셋을 모두 만족시켜야 했다.
   - 이때부터 DoorDash가 성공할 거라고 알았다고 하면 좋겠지만 인터뷰후에 DoorDash를 전체 순위의 하단부에 두었다.
   - 2013년 6월 여전히 회의감을 가지고 있었고 ""지금까지 잘 동작하는게 없다. 사용자를 얻기 위해 더 많은 실험을 해야하고 어디서나 주문할 수 있는 앱이 필요하고 마법처럼 모든게 동작해야 한다. 그리고 냉장고 자석도 필요하다.""고 적어두었다. 그들은 냉장고 자석에 대한 내 조언을 현명하게도 무시했다.
   - DoorDash는 계속 새로운 아이디어를 시도했고 2013년 7월 ""하루에 35건 정도로 빠르게 성장하고 있다. 사용자를 얻고 유지하는 방법을 찾았다.""고 적어두었다.
   - 2013년 7월에 나도 고객이 되었다. ""며칠전 저녁 배달에 사용했고 아주 좋았다.(냉장고 자석은 없었다.) 계속 시켜먹기 위해서라도 이들이 성공하도록 해야한다""고 적어두었다.
   - TechCrunch에서 런치하고 YC 데모데이에서 발표를 했다. 투자자들이 회의적이었어서 데모데이에서 높은 순위를 차지하지는 못했지만 시드라운드를 높힐 수 있었다.
   - Y Combinator 프로그램은 3개월이지만 이후에도 창업자를 만나서 계속 돕고 있다.
   - 2016년 초 시리즈 C 투자의 첫 배팅을 만들었다. Amazon과 Uber가 음식 배달을 시작했기에 DoorDash가 버틸수 있을지 회의감을 많이 가졌다.
   - 확률은 높지 않았지만 DoorDash는 계속 성장하고 개선하고 있었고 Amazon이나 Uber와 달리 음식 배달에만 집중했다.
   집중력을 유지하고 매일, 매년 계속해서 개선되는 훌륭한 팀을 과소평가하지 마세요.
"
"https://news.hada.io/topic?id=3469","2021년을 위한 Favicon 정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          2021년을 위한 Favicon 정리

   - 브라우저 스펙에 따라 수많은 파일이 필요한데, 이걸 하나로 정리
   - 5개의 이미지와 한개의 JSON 파일
   ㅤ→ .ico 32x32 : 예전 브라우저들
   ㅤ→ .svg : 스케일링 가능, 대부분 최신 브라우저들, 다크모드도 지원
   ㅤ→ apple-touch-icon 180x180 : 애플 기기용 iOS8+ 이후는 180x180 크기. 20px 정도 패딩과 배경색을 넣으면 보기 좋음
   ㅤ→ manifest(JSON) : PWA 및 안드로이드 기기용
   ㅤ ㅤ→ 192x192 : 홈스크린
   ㅤ ㅤ→ 512x512 : PWA 로딩시 스플래시 스크린용
   - 글에서는 이 5개의 아이콘을 한개의 SVG에서 만들고 최적화 하는 걸 단계별로 설명
"
"https://news.hada.io/topic?id=3457","Shotr - 맥용 스크린샷 캡처 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Shotr - 맥용 스크린샷 캡처 도구

   - Cmd+Shift+1 / 2 로 전체/부분 화면 캡쳐
   - 쉽게 확대/축소하며 크롭 : q,w,z,cmd+1/0등 다양한 줌 단축키
   - 화살표키 ↑→ 로 커서 위치의 객체 상하/좌우 크기를 잴 수 있는 줄자 기능
   - Tab 키로 마우스 위치의 색상 복사
   - dmg로 다운받아 설치하는 무료 도구

   이런게 있었으면 했는데 찾게되었네요. 소개 감사합니다.

   줄자로 객체 사이즈 재는게 꽤 편하네요. 종종 사용하게 될 듯 합니다.
"
"https://news.hada.io/topic?id=3428","AWS 클라우드 프로세서 인스턴스 점유율 변화 (Intel vs. AMD vs. Graviton)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         AWS 클라우드 프로세서 인스턴스 점유율 변화 (Intel vs. AMD vs. Graviton)

   AWS 인프라에서 Intel은 주춤하고 있고 AMD는 천천히 성장하고 있으며 Graviton은 빠른 속도로 성장하고 있습니다. 2019년 6월 1%에 불과했던 Graviton의 점유율은 2020년 8월 무려 10%를 찍었고, 2019년 6월 11%에 불과했던 AMD의 점유율은 2020년 8월 20%의 점유율을 달성했습니다.

   AWS Graviton 프로세서는 Amazon EC2에서 실행하는 클라우드 워크로드에 최고의 가성비를 제공하기 위해 64비트 Arm Neoverse 코어를 사용하여 Amazon Web Services에서 맞춤형으로 구축한 제품
   - 1세대 AWS Graviton 프로세스는 AWS에서 최초의 Arm 기반 인스턴스인 Amazon EC2 A1 인스턴스를 구동
   - AWS Graviton2 프로세서는 1세대 AWS Graviton 프로세서보다 성능과 기능이 크게 향상, AWS Graviton2 기반 범용 버스트 가능(T4g), 범용(M6g), 컴퓨팅 최적화(C6g) 및 메모리 최적화(R6g) : https://news.hada.io/topic?id=3429
   https://aws.amazon.com/ko/ec2/graviton/
   -
"
"https://news.hada.io/topic?id=3373","ImHex - 리버스 엔지니어를 위한 Hex Editor","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ImHex - 리버스 엔지니어를 위한 Hex Editor

   - 강력한 Hex View : 바이트 패칭, 복사, 검색, 컬러 강조
   - 각종 아키텍쳐 디스어셈블 지원 (Capstone 사용)
   ㅤ→ ARM,MIPS,x86,PowerPC,Sparc..
   - 파일 해슁 지원 : CRC16/32, MD4/5, SHA-1/256/512 등
   - C++ 과 비슷한 패턴 언어로 파일 파싱 지원
   - 리눅스/윈도우 지원
   * Capstone - The Ultimate Disassembler http://www.capstone-engine.org/

   해당 에디터는 ImGui를 사용했는데, 유저 레벨로 배급하기는 좀 그렇지만, 빠르게 개발툴을 개발해야할 때는 쉽고 빠르게 문제를 해결해주는 라이브러리입니다. 강추드려요. 👍

   rehex - 리버스 엔지니어를 위한 오픈소스 Hex 에디터 https://news.hada.io/topic?id=3245
   010 Editor - 전문가용 Text + Hex Editor - https://news.hada.io/topic?id=3209
"
"https://news.hada.io/topic?id=3435","Microsoft, Azure 서버와 Surface PC를 위한 자체 ARM 칩 개발 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Microsoft, Azure 서버와 Surface PC를 위한 자체 ARM 칩 개발 중

   마이크로소프트가 Azure 클라우드 서비스에 사용할 ARM 기반 칩을 개발 중이라고 합니다.

   AWS 는 어디랑 손잡았다고 했었는데... 애플이랑 MS가 손잡으면 재미있을곳 같다고 생각했지만 직접 하는군요

   직접 만들었을 때, 사서 쓰는 것보다 비용을 훨씬 많이 줄일 수 있고 외부 로드맵(예. 인텔)에 개의치 않고 원하는 시기에 원하는 프로덕트를 낼 수 있는 것이 attractive한 포인트라고 생각합니다. AMD가 아무리 AWS, Azure에 싸게 CPU를 계약해줘도, 성능만 커버할 수 있다면 직접 만드는 게 비용적인 측면에서 가장 효율이 좋으니까요.

   수직계열화의 장점이긴 하죠. MS 도 각종 소비자 기기부터 클라우드까지 다 하고 있으니 직접 개발의 이점이 분명히 있긴 할 것 같아요.
   그래도 뭔가 감성적으로? MS 의 집중 분야와 애플의 집중 분야는 좀 차이가 난다는 느낌을 가지고 있어서 두 회사가 서로 협력하면 윈윈을 하지 않을까 하는... ㅎㅎㅎ
"
"https://news.hada.io/topic?id=3421","Rust Survey 2020 결과","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Rust Survey 2020 결과

   - 8323명 14개언어(한국어 1.2%) 응답
   - 실제 업무에서 사용 : 안씀 53.3% > 파트타임 26% > 풀타임 13.8%
   - Nightly 사용 빈도는 계속 하락중 ( 30.5% → 28% )
   - Rust 코드 사이즈 : 1k~10k LOC 31.4% > 10k~100k 31% > 모름 14.3% > 100k 이상 13.3%
   - 상호운용성 : C++ 21.7% > C 17.6% > Python 16.9% > JavaScript 11.2% > Go 10.3%
   - 배우기 어렵다고 느끼는 것 : Lifetimes > Ownership > Macros > Trait Bounds > Async > Unsafe > Concurrency > FFI > Modules
   - 과반 이상이 속도 및 라이브러리 지원이 좋아지고 있다고 얘기함

   Lifetime이 너무 어려워요...

   ㅎㅎㅎ 안씀이 너무 많은데요 ㅎㅎㅎㅎㅎㅎ

   작년에 비해서 응답자가 2배로 늘기도 했고, 그만큼 Rust를 사용하지는 않아도 관심있는 사람이 늘고 있다는 의미로 해석을 해봤습니다.
   저도 관심은 있지만 실제 사용은 안하고 있으니까요 ㅎㅎ

   Rust Survey 2019 결과 https://news.hada.io/topic?id=1917
"
"https://news.hada.io/topic?id=3371","New Relic, eBPF 회사 Pixie 인수하고 오픈소스로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 New Relic, eBPF 회사 Pixie 인수하고 오픈소스로 공개

   - Pixie는 eBPF 기술을 활용해서 코드 변경없이 쿠버네티스 위의 어플리케이션을 모니터링 할수 있는 APM 솔루션
   - Pixie의 강점은 PXL Script를 통해서 퍼포먼스 모니터링 및 디버깅을 코드로 할수 있게 해주는 것
   - New Relic이 인수하면서 오픈소스로 공개
   ㅤ→ Pixie Core : 오픈소스 버전 Pixie. 내년에 CNCF Sandbox를 통해 릴리즈
   ㅤ→ Pixie By New Relic : 호스팅 버전의 Pixie Core가 이제 New Relic One 사용자들에게 바로 제공
   ㅤ→ Pixie by New Relic, Enterprise Edition : 미디어, 통신, 정부등을 위한 엔터프라이즈 옵션

   elastic apm 에 적용되길 바래봅니다.. 아주 잘 쓰고있는데 더 쓰기 좋아질 것 같네요

   Pixie는 Google AI 랑 Apple Siri 팀에 있던 엔지니어들이 나와서 2018년에 시작한 업체로
   현재 12명이고, 두달전에 시리즈 A펀딩을 받았는데 New Relic이 빠르게 인수 했네요.
   Splunk가 얼마전에 비슷한 eBPF 업체인 Flowmill을 인수하기도 해서, 주요 회사들이 eBPF가 미래에 유망하다고 생각하는 듯 합니다.
   https://techcrunch.com/2020/11/…
   제가 긱뉴스 팟캐스트에서 설명한 eBPF내용을 들어보시면 이해가 조금 쉬우실듯 합니다.
   https://www.youtube.com/watch?v=aCw0YwEHpCU&t=1892s
   - eBPF 공식 사이트 오픈 https://news.hada.io/topic?id=2661
   - eBPF rethinking the Linux Kernel https://news.hada.io/topic?id=1958
   - BPF : 새로운 타입의 소프트웨어 - https://news.hada.io/topic?id=1011
   - bpf를 이용한 성능분석 - https://news.hada.io/topic?id=88

   와우 ,, 엄청 빠른 엑싯이네요...
"
"https://news.hada.io/topic?id=3459","Vue.js 3 문서 한글화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Vue.js 3 문서 한글화

   슬랙 vuesjs 한국 사용자 채널에서 번역한 문서 입니다.

   고생하셨습니다
"
"https://news.hada.io/topic?id=3472","가끔 깨지는 빌드(flaky build)를 18분의 1로 줄이기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  가끔 깨지는 빌드(flaky build)를 18분의 1로 줄이기

   GitHub에서 같은 코드인데 어떤 경우에는 빌드가 깨지고 어떤 경우에는 통과하는 빌드를 flaky 빌드라고 정의하고 flaky는 해당 코드를 작성한 사람한 사람이 해결해야 하고 다른 사람한테 영향을 주지 않도록 자동화를 도입해서 flaky 빌드를 1/18로 줄였다고 한다.
   GitHub 내부 CI에 flaky 빌드를 추적하고 문제 상황을 정리한 뒤에 해당 문제를 만들었을 것으로 추정되는 사람에게 할당한다.
   - flaky 빌드를 추적해 보니 빈도가 달랐는데 100번 이상 실패하는 flaky 빌드는 전체의 0.4%였다. 그래서 이 0.4%에 집중하기로 했다.
   - 2016년에 도입했을 때는 다음 두가지 방법으로 접근했다.
   - 빌드가 끝나면 같은 커밋으로 실행된 빌드를 찾아서 결과가 다를 경우 flaky 빌드라고 표시
   - 같은 빌드에서 재시도 했는데 결과가 다르면 flaky 빌드 표시
   - 이 방법으로는 전체 flaky 빌드 중 25%만 구별할 수 있었다.
   ## 개선하기
   - 3번 재실행하는 방법을 사용
   1. 같은 프로세스에서 재시도한다. 이 flaky 빌드는 코드의 우연성이나 레이스 컨디션 때문에 발생한다.
   2. 같은 프로세스이지만 시간이 지나서 재시도한다. 이 flaky 빌드는 시간에 관해 잘못된 가정을 했을 때 발생한다.
   3. 완전히 다른 호스트에서 재시도한다. 이 flaky 빌드는 테스트 순서 의존성이나 공유 상태때문에 발생한다.
   이 방법을 통해서 90%를 자동으로 탐지할 수 있게 되었다.
   ## 영향도 측정
   우선순위를 정하기 위해 영향도를 정량화하는 방법이 필요했다.
   빌드, 브랜치, 작성자, 커밋등의 정보를 이용해서 얼마나 많이 실패하고 다른 브랜치나 개발자에 영향을 주는지 영향도 점수를 매긴다.
   일정 점수가 넘으면 개발자들이 수정할 수 있도록 이슈를 만들어서 개발자한테 할당한다.

   저같은 경우에는 gradle의 unittest에서 flaky build 가 자주 발견되어서 아래의 솔루션들을 적용했었습니다.
   * https://plugins.gradle.org/plugin/org.gradle.test-retry 플러그인을 이용하면 unittest에 대한 flaky build를 추적하는데 큰 도움이 됩니다.
   * https://docs.gradle.org/current/dsl/… 을 이용하면, 일정기간 이후 새로운 프로세스에서 수행되므로 flaky build가 완화될 수 있습니다.
   * gradle enterprise를 도입하면 flaky build의 추이를 쉽게 볼 수 있습니다. https://gradle.com/blog/flaky-tests/
"
"https://news.hada.io/topic?id=3408","M1 맥이 부팅 할 때 무슨 일이 생길까요? (영문)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     M1 맥이 부팅 할 때 무슨 일이 생길까요? (영문)

   부팅(시스템 시작) 시의 통합 로그를 확인하면 많은 것을 배울 수 있습니다. M1 맥의 경우 SoC이기 때문에 이 로그가 더욱 매력적입니다. 이 글에서 보여주는 내용은 8코어 CPU와 8코어 GPU를 단 M1 맥북 프로가 macOS 11.0.1을 Secure Boot로 부팅할 때 뿌려주는 로그로 작성되었습니다.
"
"https://news.hada.io/topic?id=3491","Stork - 정적 웹사이트를 위한 검색 라이브러리 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Stork - 정적 웹사이트를 위한 검색 라이브러리

   ""JAMStack을 위한 빠른 검색""
   - Rust + WASM
   - 스태틱 사이트 전체를 인덱싱해서 인덱스를 파일로 저장하고
   ㅤ브라우저에서 JS가 인덱스 파일을 다운로드해서 검색창에 한글자 타이핑할 때마다 즉시 결과를 표시
   - 모든 Static Site Generator 와 잘 동작. Netlify등에 호스트 한 것도 가능
   - Stemming(스테밍, 어간추출)은 영어계열만 지원

   인덱스를 아예 내려 받는 거니 Typesense 보다도 빠르긴 하겠네요.
   너무 큰 사이트는 문제가 되긴 하겠지만 개인 블로그 등에는 사용하기 좋아보입니다.
   - typesense - 오픈소스 검색 엔진 https://news.hada.io/topic?id=3369

   우와... 긱뉴스를 이런식으로 인덱스를 만들면 사이즈가 얼마나 될까요?
   개인 블로그라도 오래 운영한 곳은 꽤 클 것 같긴한데요..

   사이트 샘플로 나와있는 Federalist Papers 의 1~20번 글이 약 25만 바이트 정도인데, 인덱스파일이 1.1MB 네요.
   제 예상보다는 인덱스가 꽤 크네요. 말씀하신대로 글이 많은 블로그에서는 부담스러울듯 합니다 ㅎ
"
"https://news.hada.io/topic?id=3401","Typesense를 활용한 검색용 API 서버 그리고 데모용 웹페이지 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Typesense를 활용한 검색용 API 서버 그리고 데모용 웹페이지 만들기

   검색서버와 API서버, 그리고 데모용 웹 페이지까지 직접 만드는 과정에 대해 정리 해 보았습니다.

   피드백 주셔서 정말 감사합니다! :)

   좋은글 감사합니다

   이렇게 과정을 참조할 수 있으니 좋네요. 정리해주셔서 고맙습니다.
"
