"https://news.hada.io/topic?id=9721","구글의 첫 완전 커스텀 Pixel 칩 Tensor G5, TSMC가 2025년에 생산 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           구글의 첫 완전 커스텀 Pixel 칩 Tensor G5, TSMC가 2025년에 생산 예정

     * 원래는 2024년에 코드명 Redondo라는 칩을 출시할 예정이었으나, 1년 연기해서 2025년에 코드명 Laguna로 출시
     * 기존 칩은 삼성의 디자인 기반으로 삼성이 제조했으나 Laguna 부터는 TSMC로 대체
     * TSMC로 바꾸면 칩의 크기를 늘리지 않고도 더 강력하고, 전력 소모가 작은 칩을 출기할 수 있을 것
     * Tensor 칩 개발이 느려진 것은 구글내 미국/인도 간의 작업 분할 및 조정 문제와 높은 이직률에서 비롯된 것
          + 실제로 Redondo 칩 디자인을 넘겨야 하는 마감일을 맞추지 못해서 연기가 된 것

   와, 생각보다 구글이 심각하게 soc를 하고 있었군요. 삼성LSI 설계기반으로 자체 IP 몇개 추가해서 쓰는게 다인줄 알았는데말이죠. 직접 해보면, 생각만큼 아름다운 산업이 아니라는걸 금방 알수 있을텐데.... 또 안하기에는 애플이랑 경쟁에서 밀린다는 느낌이 계속 들테고... 애플이 여러 회사들에게 골치거리인것 같군요.

   요즘 애플이 아이폰에서 맥/비젼프로까지 하드웨어 확장을 지속하는 걸 보면, 이제 하드웨어 제대로 하려면 칩부터 직접 만들어야 한다는 생각이 계속 듭니다.

   SoC가 생각보다 노동집약적이고 힙하지 못한 분야라, SW회사들한테 쉽지는 않을겁니다... 하지만 말씀하신대로 애플 하는거 보면 다른 회사들도 손놓고 있을수는 없는게 현실이기도 하죠. 애플 디바이스 (phone/laptop)의 약진을 보며, 아마 전세계 PC, 핸드폰 OEM업체들이, ""형(MS/Google) 들도 어떻게 좀, 뭐라도 좀 해봐, 이러다 다 죽겠어;;;"" 이러고 있는 상황같아요.

   맥os도 캘리포니아 북에서 남으로 훑으며 코드명을 쓰는데
   텐서칩은 아예 남캘리 위주군요. 다음 버전은 아마 오션사이드, 칼스베드, 엔시니타스, 델마르, 라호야 등으로 짓겠네요 ㅎㅎ
"
"https://news.hada.io/topic?id=9729","파이썬을 활용한 통계학습 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            파이썬을 활용한 통계학습 소개

     * ""통계적 학습 소개""는 통계적 학습의 주요 주제를 다루는 넓고 기술적이지 않은 책입니다.
     * 이 책은 데이터 분석에 현대적인 도구를 사용하고자 하는 모든 사람에게 적합합니다.
     * R을 활용한 응용 프로그램이 포함된 첫 번째 판은 2013년에 출판되었으며, 두 번째 판은 2021년에 출간되었습니다.
     * 이 책은 중국어, 이탈리아어, 일본어, 한국어, 몽골어, 러시아어, 베트남어 등 다양한 언어로 번역되었습니다.
     * ""ISLP""라는 파이썬 버전의 책은 2023년에 출판되었습니다.
     * 이 책의 각 장은 R 또는 파이썬을 사용하여 개념을 설명하는 실험실을 포함하고 있습니다.
     * 이 책의 장들은 회귀, 분류, 리샘플링 방법, 선형 모델 선택 및 정규화, 트리 기반 방법, 서포트 벡터 머신, 딥 러닝, 생존 분석, 비지도 학습, 다중 검정 등 다양한 주제를 다룹니다.
     * 이 책은 Gareth James, John H. Harland Dean, Daniela Witten, Trevor Hastie, Rob Tibshirani가 공동 저술하였으며, 파이썬 버전에는 Jonathan Taylor가 새로 합류하였습니다.
     * 이 책은 인쇄본과 디지털 형식으로 구매할 수 있으며, PDF 파일은 무료로 다운로드할 수 있습니다.

        Hacker News 의견

     * 인공지능에 관심이 많은 많은 사람들이 기본 개념을 깊게 이해하지 못하는 것으로 보이는 것을 나타내는 이 책은 댓글에 대한 추천 비율이 높습니다.
     * 이 책은 원래 R로 작성된 인기 있는 텍스트의 업데이트로, 고전적인 기계 학습의 이론적 측면을 배우기에 매우 추천됩니다.
     * 이 책 전체를 합법적으로 PDF 형식으로 다운로드할 수 있습니다.
     * 이 책은 통계, 선형 대수 및 코딩에 기본 지식을 가진 학생들을 대상으로 하는 클래식 기계 학습 방법에 대한 최고의 초급 교재로 간주됩니다.
     * 일부 사용자들은 기계 학습을 위해 Bishop이나 Murphy와 같은 다른 교재를 선호합니다.
     * 이 책의 이전 버전에는 책 없이도 시청할 수 있는 YouTube 시리즈가 있으며, 추가적인 통찰력을 제공합니다.
     * 이 책의 파이썬 버전은 R을 모르고 파이썬만 알고 있는 사람들에게는 좋은 소식입니다. 그들에게 완벽한 첫 번째 책입니다.
"
"https://news.hada.io/topic?id=9781","썬더버드 115 "슈퍼노바"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            썬더버드 115 ""슈퍼노바""

     * Thunderbird 115 ""Supernova""가 Linux, macOS 및 Windows용으로 출시되었습니다.
     * 시각적 및 기술적으로 현대화된 소프트웨어입니다.
     * 새로운 릴리스는 Thunderbird를 크게 개선된 이메일 클라이언트로 만들기 위해 목표로 합니다.
     * 기능에는 현대화된 Cards View, 새로운 Thunderbird 로고, 동적 통합 툴바, 직관적인 AppMenu, 개선된 캘린더 디자인 등이 포함됩니다.
     * Thunderbird Sync는 향후 업데이트에서 도입될 예정입니다.
     * 사용자는 Thunderbird 웹사이트에서 Thunderbird 115를 직접 다운로드하거나 자동 업데이트를 기다릴 수 있습니다.
     * Thunderbird 팀은 문제를 해결하고 소프트웨어를 향후 업데이트에서 개선하기 위해 적극적으로 노력하고 있습니다.
     * 사용자는 vjournal을 캘린더에 추가하는 것을 제안하며 작은 조정일 것이라고 믿습니다.
     * 다른 사용자는 테이블 뷰가 ""레거시""로 불리고 제거될 가능성에 대해 우려를 표명합니다.
     * Thunderbird 팀은 ""레거시""라고 부르는 것은 그것이 전통적인 뷰라는 것을 나타내기 위한 것이며 제거 계획은 없다고 명확히 밝힙니다.
     * 사용자는 검색 바가 공간을 차지하고 이전 릴리스에서 이미 해결된 문제를 일으킨다고 불평합니다.
     * 다른 사용자는 새로운 Thunderbird가 Microsoft의 Outlook 메일 앱과 같은 래핑된 브라우저 페이지인지 묻습니다.
     * Thunderbird 팀은 이를 부인하며 그런 인상이 어디서 왔는지 확실하지 않다고 말합니다.

        Hacker News 의견

     * 00년대에 코멘터는 새로운 기능과 사용자 경험 문제로 인해 Thunderbird의 속도가 점점 느려졌다는 것을 알았다.
     * Thunderbird의 새로운 뷰는 Outlook/Evolution 레이아웃을 채택한 것으로 칭찬받고 있다.
     * Thunderbird 팀은 모든 문제가 해결될 때까지 자동 업데이트를 활성화하지 않을 것이다.
     * 코멘터는 업그레이드하기 전에 Conversations 애드온이 업데이트되기를 기다리고 있다.
     * Thunderbird에서 메뉴바를 사용할 때 패딩과 텍스트 잘림 문제가 있다.
     * 코멘터는 Netscape Communicator 4.x를 예로 들어 아름다운 것보다 기능적인 이메일 클라이언트를 선호한다.
     * 코멘터는 Thunderbird의 캘린더 및 연락처 관리 기능의 부재로 인해 Evolution으로 전환했다.
     * 코멘터는 ""새 메시지""를 클릭할 때 새 창이 생성되는 버그가 여전히 열려 있는지 묻는다.
     * Gmail, Outlook 및 기타 계정과의 캘린더 및 연락처의 원활한 동기화가 많은 사용자에게 원하는 기능이다.
     * 코멘터는 외부 계정과의 동기화 개선보다 디자인과 응답성에 초점을 맞추는 것을 비판한다.
"
"https://news.hada.io/topic?id=9695","소프트웨어 엔지니어들의 코드 혐오","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           소프트웨어 엔지니어들의 코드 혐오

     * 소프트웨어 엔지니어들은 특히 다른 사람이 작성한 코드를 싫어합니다.
     * 마이크로서비스 아키텍처는 엔지니어들이 이전 코드를 컨테이너와 로드 밸런서 뒤에 숨겨서 존재하지 않는 것처럼 가장할 수 있게 합니다.
     * 엔지니어들은 종속성의 실제 구현이나 테스트 스위트를 확인하는 대신에 코드 솔루션을 찾기 위해 주로 스택 오버플로우를 참고합니다.
     * 엔지니어들은 다른 사람의 코드 검토를 싫어하며, 이로 인해 풀 리퀘스트 승인이 지연될 수 있습니다.
     * 엔지니어들은 코드 작성을 좋아하며, 먹고 자는 등의 기본적인 필요를 잊을 정도로 그 안에 몰두할 수 있습니다.
     * 엔지니어들은 실제로 제공된 예제 코드를 읽지 않더라도 코드와 코드 작성 방법에 대해 읽는 것을 즐깁니다.
     * 회의, 문서 작성, 테스트, 코드 리팩토링은 모두 엔지니어들에게 시간을 뺏기는 번거로운 요소입니다.
     * 엔지니어들은 더 많은 코드를 작성할 수 있는 도구와 기술을 지속적으로 찾고 있으며, 최근 몇 년간 AI 기반 도구들이 등장했습니다.
     * 시니어 엔지니어들은 유지보수와 다운타임을 줄이기 위해 코드를 최소화하고 불필요한 코드를 삭제하는 중요성을 깨닫았습니다.
     * 시니어 엔지니어들은 복잡한 문제에 대한 우아한 해결책을 중요시하지만, 가치를 제공하지 않는 코드 작성에는 회의적입니다.
     * 엔지니어들은 자신들의 코드의 비용과 영향을 염두에 두고, 가능한 경우 기존 솔루션을 활용하는 것이 중요합니다.
     * 이 기사에서 묘사된 특징들은 과거의 엔지니어들의 태도를 반영하고 있습니다.
     * 이 기사는 해커 뉴스에서 토론을 일으켰습니다.

        Hacker News 의견

     * 엔지니어들은 다른 사람이 작성한 코드를 싫어하며, 그래서 그린필드 프로젝트에 참여하는 것을 선호합니다.
     * 그러나 기존 코드를 유지하는 것을 즐기는 엔지니어들도 있으며, 이는 성공적인 프로젝트에 중요하다고 여깁니다.
     * 컨설턴트들도 코드를 싫어하며 종종 처음부터 다시 작성하는 것을 권장합니다. 이는 그들에게 유리한 리스크-수익 균형을 이루기 때문입니다.
     * 좋은 엔지니어들은 자신의 작업에 자부심을 가지며, 양보다는 품질을 중요시합니다. 그러나 게으른 또는 서두르는 구현은 코드에 대한 혐오를 유발할 수 있습니다.
     * 기존 코드를 수정하는 것과 다시 작성하는 것의 비용 대 이익 분석을 신중히 고려하는 것이 중요합니다.
     * 코드를 읽고 해석하는 것은 즐거울 수 있지만, 일관성이 없는 코드는 작업하기 어렵게 만듭니다.
     * 선택한 설계 철학과 관계없이 코드의 일관성은 유지 가능성과 변경 용이성에 중요합니다.
     * 때로는 엔지니어들이 코드를 싫어한다는 일반화가 투자한 비용을 정당화하는 데 사용되지만, 처음부터 시작하는 것이 최선의 해결책일 수 있습니다.
     * 코드에 대한 싫증은 작가들에 비해 프로그래머들 사이에서 더 흔하며, 코드를 읽는 것은 많은 프로그래머들이 소홀히 하는 중요한 실습입니다.
     * 엔지니어와 코드의 관계는 파트너 간의 관계와 유사하며, 의사소통과 신뢰가 핵심입니다.
     * 엔지니어들은 때로는 자신의 사고 모델에 맞는 추상화를 찾거나 만들지만, 적절한 도구와 팀의 이해의 조합은 드물게 일어납니다.
"
"https://news.hada.io/topic?id=9798","보스턴 시장, 사무실 건물을 위한 주거 전환 프로그램 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    보스턴 시장, 사무실 건물을 위한 주거 전환 프로그램 발표

     * 보스턴 시장 미셸 우는 ""도심 사무실 주거 전환 시범 프로그램""이라는 새로운 프로그램을 발표했습니다.
     * 이 프로그램은 보스턴 계획 및 개발 기관(BPDA), 시장 주택 사무소(MOH) 및 보스턴 재무 내각과 공동으로 운영될 예정입니다.
     * 이 프로그램의 목표는 도심에 더 많은 주택 단위를 창출하고 지역 기업을 지원하기 위해 보행 트래픽을 증가시키는 것입니다.
     * 이 프로그램은 상업용 사무실 건물 소유주들에게 주택으로의 전환 시 감면된 재산세율을 제공할 것입니다.
     * 감면율은 최대 29년 동안 주택의 표준 세율의 최대 75%까지 될 수 있습니다.
     * 이 프로그램은 공공-민간 파트너십을 통해 시행되며, 세금 대신 지불(Payment in Lieu of Taxes, PILOT) 협정이 필요합니다.
     * 프로젝트는 제안된 포괄적인 입주 지역 제도 기준과 새로운 스트레치 코드의 에너지 효율 기준을 준수해야 합니다.
     * 이 프로그램은 시간 제한이 있으며, 2024년 6월까지만 신청을 받을 예정입니다.
     * 프로젝트는 2025년 10월까지 공사를 시작해야 하며, 약속을 이행하지 않을 경우 포기한 세금을 납부해야 합니다.
     * 도시는 또한 장기적으로 포기한 세금 수익을 회복하기 위해 재산의 미래 매출액의 2% 지불을 요구할 것입니다.
     * 이 프로그램은 보스턴 시장 우의 도시 성장 방침의 일환으로, 도시를 더 견고하고 경제적으로 알맞고 공정하게 만드는 것을 목표로 합니다.
     * 이 프로그램은 진행 중인 도심 계획 구상 및 주거 성장과 지역 활성화 목표와 일치합니다.
     * 이 프로그램은 사적 개발이 주택 전환을 완료하기 위한 재정적으로 실현 가능한 방안으로 여겨집니다.
     * 이 프로그램은 보스턴의 존업 규정을 개선하고 개발에 대한 속도와 예측 가능성을 높이기 위한 제80조 절차 개혁의 일환입니다.

        Hacker News 의견

     * 사무실 건물을 주거 공간으로 변환하는 것은 천장과 바닥을 통과하여 거주 가능한 아파트를 만드는 복잡한 과정입니다.
     * 주거 변환은 비즈니스 지역에 생기를 불어넣고 주택 공급을 개선하지만, 한 번 사무실이 변환되면 일반적으로 영원히 사라집니다.
     * 호주 시드니는 사무 공간 수요에 대응하기 위해 주거 공간 보너스를 도입했지만, 이제 그들은 새로운 환경에 대응하는 방법에 대한 침체를 겪고 있습니다.
     * 사무실 건물을 주거 공간으로 변환하는 과정과 장애물을 설명하는 시각화가 포함된 뉴욕 타임스 기사가 있습니다.
     * LA 다운타운은 섬유 공장과 창고를 주거 로프트로 재활용했지만, 이러한 건물 중 일부는 원래 사람들이 살기 위해 만들어진 것은 아닙니다.
     * 재택근무로 인해 이전 사무실에서 일할 수 있게 되었습니다.
     * 보스턴은 오래된 사무실 건물을 고급 콘도로 변환하여 도시 내 주택을 더 많이 제공하고 있습니다.
     * 보스턴에서는 대중 교통에 대한 자금 지원이 증가해야 합니다.
     * 일부 사람들은 정부가 동네를 효율적이고 인간적인 도시 지역으로 변환하기 위해 노력할 것을 희망합니다.
     * 사무실 건물을 주거 공간으로 변환하는 프로그램은 시장 상황만을 고려하면 건물 소유주들이 변환에 동기를 부여받지 못할 수 있기 때문에 필요합니다.
     * 보스턴 다운타운을 넘어 로즐린데일과 같은 다른 동네로 프로그램을 확대하는 제안이 있습니다.
"
"https://news.hada.io/topic?id=9802","텍스트 분류에서 Gzip 및 KNN이 Transformers를 능가합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               텍스트 분류에서 Gzip 및 KNN이 Transformers를 능가합니다.

        Hacker News 의견

- 저자들은 ""정규화된 압축 거리"" (NCD)라는 거리 함수를 사용하여 압축된 문서에 kNN을 적용합니다.
- 이 방법은 zero-shot 분류 작업에서 BERT보다 성능이 우수합니다.
- 많은 단어가 겹치는 경우 Gzip은 강력하지만, DNN은 의미적 유사성에서 더 우수합니다.
- 결과는 흥미로우나 그들이 들리는 것만큼 흥미로운 것은 아닙니다.
- 분포 범위 밖의 데이터에서는 BERT가 여전히 더 우수한 성능을 발휘합니다.
- 압축 알고리즘과 ML 모델은 모두 압축의 형태이며, 인간의 언어와 데이터의 성능을 설명하는 근본적인 특성이 있을 수 있습니다.
- 링크는 주어진 URL의 논문을 가리켜야 합니다.
- 유사한 텍스트 조각을 연결하는 것이 다른 조각보다 더 잘 압축됩니다.
- Gzip은 입력을 인식하고 레이블을 지정할 수 있는 방식으로 표현하기 때문에 압축에 더 적합할 수 있습니다.
- ""not""와 같이 문장의 의미를 뒤집는 단어에 대해 Gzip은 어려움을 겪을 수 있습니다.```
"
"https://news.hada.io/topic?id=9747","GN⁺: Apple VisionOS Simulator를 Meta Quest로 무선 스트리밍하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          GN⁺: Apple VisionOS Simulator를 Meta Quest로 무선 스트리밍하기

     * VisionOS Simulator 화면을 메타 퀘스트 기기에서 스트리밍 받아서 먼저 사용해 보기
     * SteamVR/Quest/VIve 등을 지원하는 VR Game 무선 스트리밍 엔진인 ALVR(Air Light VR)을 이용
     * 아직 Quest 컨트롤러로 조종은 불가 (컴퓨터의 키보드/마우스 사용)
     * 개발 예정
          + Passthrough 활성화
          + 퀘스트 컨트롤러 사용 및 Eye Gaze

GN⁺가 요약한 내용

     * visionOS 시뮬레이터는 이제 ALVR을 사용하여 Meta Quest 헤드셋에 무선으로 스트리밍될 수 있습니다.
     * 스트리밍 과정은 Apple Silicon에서 Xcode 15 베타 2와 macOS 14 베타 2에서 테스트되었습니다.
     * visionOS 시뮬레이터를 스트리밍하려면 Meta Quest에 ALVR Nightly 2023.07.06을 사이드로드해야 합니다.
     * 모든 것이 잘 되면 visionOS 인터페이스가 헤드셋으로 스트리밍됩니다.
     * ALVR 대시보드를 사용하여 스트리밍 설정을 구성할 수 있습니다.
     * 현재로서는 Quest의 컨트롤러로 시뮬레이터를 제어할 수 없으므로 컴퓨터의 마우스/키보드를 사용해야 합니다.
     * 시뮬레이터 내에서 가시적인 마우스 커서를 활성화하는 것이 좋습니다.
     * 스트리밍 과정은 CompositorService API를 hook하여 자체 텍스처로 렌더링한 다음, 인코딩 및 스트리밍을 위해 ALVR 서버로 전달합니다.
     * 다음 단계에는 패스스루 활성화 및 Quest 컨트롤러/시선 추적 연결이 포함됩니다.
     * visionOS 시뮬레이터를 Quest 헤드셋으로 스트리밍하는 첫 번째 도구를 출시하고 무선 포팅을 도와준 @ShinyQuagsire에게 감사 드리며, 기여한 @JJTech와 @keithahern, 그리고 크로스 플랫폼 VR 스트리밍 시스템을 개발한 ALVR 개발자들에게도 감사 드립니다.

        Hacker News 의견

     * 기사에 대한 HackerNews 댓글 섹션에서 긍정적인 댓글 없음
     * 댓글러는 VisionOS 시뮬레이터가 Vision Pro를 체험하기 전에 경험을 검증할 수 있는 기회를 제공하는 것이 멋지다고 생각함
     * 댓글러는 Meta나 Apple이 시뮬레이터에 문제가 있을 것 같지 않지만, HUD에 사용된 자산/아이콘에 대해서는 아마 문제가 있을 수 있다고 생각함
     * GitHub에서 다운로드할 수 있는 무료 Vision Pro UI 패널 시뮬레이터(Nova 제작)가 있음
     * 시뮬레이터의 데모 비디오가 Twitter에서 제공됨
     * Apple은 그들의 완벽한 생태계 보호 및 크로스 플랫폼 개발 도구에 대한 적대적인 태도를 고려할 때, 언제까지 이를 차단할지 궁금해하는 사람이 있음
     * 다른 댓글러는 Quest Pro를 구매하고 이와 유사한 기능을 실행해보길 바람
     * Apple은 Quest Pro를 사용하여 초기 VisionOS 개발을 지원해야 함
     * 시뮬레이터가 입체적인지 단일적인지는 명확하지 않음
     * Apple은 이와 같은 것을 처음부터 고려하고 지원해야 했을 것으로 보임
     * Meta는 Quest 제품이 품질이 낮다는 생각을 강화하고 Meta의 경쟁 업체에 대한 개발자 경험을 향상시키는 이유로 이를 차단할 수도 있음
     * 댓글러는 해상도와 안구 추적이 더 좋은 Quest를 원하며, Quest Pro와 Apple Vision을 융합한 제품을 기대함
     * 댓글러는 시뮬레이터의 성능 한계와 하드웨어 없이 Vision OS 앱을 실행할 수 있는 방법을 궁금해함
     * Apple이 시뮬레이터를 통해 임의의 앱을 앱 스토어에 설치하는 것을 허용할 가능성은 희박해 보임
"
"https://news.hada.io/topic?id=9789","B.C. 정부, 산불 대피 중 트윗 한도 초과","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       B.C. 정부, 산불 대피 중 트윗 한도 초과

     * B.C. 정부의 DriveBC 트위터 계정이 산불 대피에 관한 정보를 공유하는 동안 트윗 제한에 도달했습니다.
     * 이 사건은 비상 경보를 위한 플랫폼으로서 소셜 미디어의 신뢰성에 대한 전문가들의 우려를 불러일으켰습니다.
     * 트위터는 무료로 보낼 수 있는 자동화된 트윗의 수를 제한하는 새로운 규칙을 도입했습니다.
     * 미국 국립 기상 서비스와 같은 다른 관할구역도 트위터의 새로운 규칙으로 인해 제한을 경험했습니다.
     * 트위터의 API 서비스 제한은 인구 밀집 지역에서의 대규모 재난 시 의사 소통에 상당한 영향을 미칠 수 있습니다.
     * 정부 기관과 비상 서비스는 비상 상황에서 신뢰할 수 있는 정보 전달을 보장하기 위해 대안적인 의사 소통 플랫폼을 탐색하고 있습니다.
     * 비상 관리를 위한 소셜 미디어 플랫폼에 대한 더 견고하고 신뢰할 수 있는 대안이 필요합니다.
     * B.C. 정부는 가정 내 재난 대비에 충분한 신경을 쓰지 않아 비판받고 있습니다.
     * 캐나다 경보 앱의 개발이나 다른 국가와의 파트너십은 비상 관리에 대한 대안적인 접근 방식을 제공할 수 있습니다.
     * 소셜 미디어 플랫폼의 민영화와 분열은 비상 관리에 도전을 제기합니다.
     * 비상 관리는 기술 산업에 비해 더 느리게 진행됩니다.

   트위터, 레딧 등 최근 소셜쪽 API의 변경점들은 득 보다 실이 더 많아보이는데.. 넷플릭스가 계정 공유를 점차 중단해 나가는 전략처럼 접근한것일지.. 아니면 더 고차원적이고 정치적인 이슈가 섞여있는 상태인것인지.. 아니면 경영진의 급한 불을 끄기 위한 잘못된 선택이였을지, 시간이 지나고 결과가 이를 증명하겠지만 외부 관찰자로써는 여러가지의 상상을 해보게 하는군요!

   GN⁺: 네덜란드 정부의 공식 Mastodon 서버 오픈

   이거랑도 관련 있겠네요. 이런 재난 정보 시스템에 사용 가능한 뭔가가 있긴 해야할듯.
   우리나라는 카카오톡이.. 음?

        Hacker News 의견

     * 소셜 미디어를 신뢰할 수 있는 플랫폼으로 응급 상황에서 의존하는 것은 더 이상 실용적이지 않다고 전문가들은 말합니다.
     * 정부는 넓은 범위와 낮은 비용 때문에 트위터와 같은 사설 플랫폼을 공공 의사 소통에 자주 사용합니다.
     * 그러나 최근 일론 머스크의 트위터 영향력과 같은 사건들은 정부가 대안 플랫폼을 탐색해야 할 필요성을 강조하고 있습니다.
     * 정부는 새로운 기술을 받아들이는 데 느릴 수 있으며, 온타리오의 의료 시스템에서 팩스 사용과 같은 사례로 확인할 수 있습니다.
     * 트위터는 결함이 있음에도 불구하고 정부와 IT 직원 및 예산이 없는 사람들을 위한 최고의 실시간 방송 도구로 남아 있습니다.
     * B.C. 정부가 산불 대피 중 트윗 한도에 도달한 최근 사건은 다른 국가에서도 비슷한 상황이 발생한 것으로 나타났습니다.
     * 이 상황은 2018년 캘리포니아 산불 중 소방관들의 데이터 사용량을 제한한 Verizon 사례를 연상시킵니다.
     * 중요한 의사 소통을 위해 소셜 미디어 플랫폼에 의존하는 것은 이러한 플랫폼의 통제와 신뢰성에 대한 우려를 제기합니다.
     * 트위터의 API 제한과 정부 기관이 액세스를 위해 지불해야 하는 필요성은 이러한 기관들이 플랫폼에 제공하는 가치를 이해하지 못하는 것을 보여줍니다.
     * 정부의 소셜 미디어 플랫폼 사용은 효과적인 의사 소통과 통제 및 신뢰성의 필요성을 균형있게 유지하는 도전을 강조합니다.
"
"https://news.hada.io/topic?id=9809","데이터 아카이빙 비즈니스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             데이터 아카이빙 비즈니스

Exploding Topics

   개요 : 최근 검색량이 폭증하고 있는 키워드들을 보여주는 웹사이트
   방문자 수 : 월 117만명
   수익 모델 : 유료 구독 모델 (월 39$, 99$, 249$)

Milled

   개요 : 10만개 브랜드의 이메일 뉴스레터 내용을 아카이빙해서 보여주는 웹사이트
   방문자 수 : 월 106만명
   수익 모델 : Milled에서 소개한 브랜드의 상품을 구매했을 때 발생하는 수익의 일부

Marketing Examples

   개요 : 저자가 큐레이션한 성공적인 마케팅 케이스들을 아카이빙한 웹사이트
   방문자 수 : 월 14만명 (뉴스레터 구독자 : 13만명)
   수익 모델 : 웹사이트 광고, 뉴스레터 스폰서십 광고, 유료 코칭

   Exploding Topics를 보고 나니 한국에서 빠르게 성장하는 키워드가 궁금해졌어요. 네이버 검색어 트렌드 웹사이트를 통해 몇개의 키워드들을 검색해 봤습니다.
     * 요양보호사 자격증에 대한 관심이 급증하고 있었어요.
     * 도파민 도 2023년 들어 부쩍 많이 검색되고 있었고요.

   …and more
"
"https://news.hada.io/topic?id=9790","멋지지만 잘 알려지지 않은 X11 도구들 (2019)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     멋지지만 잘 알려지지 않은 X11 도구들 (2019)

     * X Window System를 위한 멋진하고 난해한 X11 도구 모음
     * 3D Pong, Angband, Battalion과 같은 게임 포함
     * AppRes, ASClock, GMixer와 같은 유용한 도구도 포함
     * HP 계산기와 HP-48GX 그래프 계산기용 에뮬레이터
     * 편집, 시각화 및 생산성을 위한 다양한 도구
     * 모든 애플리케이션은 FreeBSD에서 테스트되었으며 다른 유닉스 유사 시스템에서도 작동해야 함
     * 설치 가능한 다양한 소프트웨어 패키지를 강조하는 기사
     * 시스템 모니터, 파일 관리자, 메모 앱, 스크린 세이버, 게임 등의 패키지 포함
     * 화면에 바퀴벌레를 표시하거나 데스크톱에 눈이 내리게 하는 등 독특한 기능을 가진 일부 패키지도 있음
     * 각 패키지의 설치 지침 제공
     * 이전 버전과 유사한 이름을 가진 1998년 솔리테어 게임 언급
     * FreeBSD 사용자를 위한 이러한 패키지의 가용성 강조
     * 기사의 최신 업데이트 날짜와 시간으로 마무리

        Hacker News 의견

     * GLXGears 인기 있던 그래픽 드라이버 테스트 명령어, 하지만 APU와 일반 드라이버가 개선되어 더 이상 필요하지 않음.
     * 기사에 언급된 X11 도구 목록은 최근 2022년에 업데이트되었다고 하지만 오래되었어 보임.
     * 다른 웹사이트에서 알파벳 순으로 정렬된 X11 도구 컬렉션이 또 다른 것으로 제공됨.
     * 목록에 언급된 도구 중 많은 것들이 잘 알려진 것이며, XEyes, XBiff, XClock, XEdit, Xev, XKill, Xv, XMosaic 등이 있음.
     * 댓글러는 컬렉션을 감사하게 여기지만 이제는 도구를 사용할 필요가 없어 기뻐함.
     * 댓글러는 Linux 배경 화면 설정으로 사용한 XPlanet Resources라는 웹사이트를 언급함.
     * 댓글러는 비행 중 XPlanet을 사용하면서 우주선 폭발 소식을 들은 개인적인 이야기를 공유함.
     * 다른 댓글러는 XBill 게임의 변형인 XLennart를 언급하며 컴퓨터 해커 Lennart를 조롱함.
     * 한 댓글러는 대학에서 X 터미널을 사용하며 xneko의 여러 인스턴스를 열어 다른 사람의 화면을 잠글 수 있었다는 추억을 회상함.
     * 다른 댓글러는 목록에서 xsunclock을 발견하고 독특하고 사용자 정의 가능한 시간 표시 옵션을 칭찬함.
     * 댓글러는 Gnome과 KDE 이용 가능하기 전에 대학에서 X11 도구를 사용한 경험을 돌아보며 그들이 얼마나 필수적이었는지를 언급함.
     * 한 댓글러는 SGI Irix 시스템에서 fsn을 발견하고 이것이 Jurassic Park의 3D 파일 브라우저임을 깨닫는 추억을 회상함.
     * 다른 댓글러는 ""xeyes debugging""을 사용하여 xeyes 명령어로 백그라운드 작업에 대한 즉각적인 피드백을 빠르게 얻는 방법을 언급함.
"
"https://news.hada.io/topic?id=9818","Driver.js - 제품투어, 하이라이트, 문맥 도움말 보여주기 라이브러리 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Driver.js - 제품투어, 하이라이트, 문맥 도움말 보여주기 라이브러리

     * 사용자 온보딩, 문맥 도움말, 새로운 기능 소개등 다양한 곳에 적용 가능
     * 애니메이션, 전체 진행내역 보여주기, 하이라이팅, 팝오버, 색상 오버레이 등 다양한 기능 제공
     * 5kb(gzip)로 경량. 외부 의존성 없음
     * 강력한 커스터마이징 기능 제공
     * MIT 라이센스
"
"https://news.hada.io/topic?id=9801","GN⁺: EU, 모든 스마트폰에 교체 가능한 배터리를 의무화하는 규정에 공식적으로 동의 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GN⁺: EU, 모든 스마트폰에 교체 가능한 배터리를 의무화하는 규정에 공식적으로 동의

     * 2027년까지 EU에서 판매되는 모든 폰은 사용자가 별도 도구 없이 교체가능한 배터리를 장착해야함
     * 배터리 순환 경제를 도입하기 위한 것
     * 이사회가 동의하였으며, 이제 EU 이사회 및 의회의 사인 절차만 남아있음
     * 유럽내에만 영향을 미치는 것이지만, 삼성/구글/애플 등이 유럽 전용 기기를 설계하지는 않으므로 이 법으로 인해 아이폰을 포함한 태블릿, 노트북, 전기차, 전기 자전거 및 충전식 배터리가 있는 모든 것을 바꾸게 될 것
     * 2027년까지의 유예 기간은 각 회사들이 제품을 재설계 할 수 있는 충분한 시간을 주기 위한 것

GN⁺ 요약 내용

     * 유럽 연합은 2027년까지 EU에서 출시되는 모든 휴대폰에 교체 가능한 배터리가 장착되어야 한다는 새로운 규정에 공식적으로 동의했습니다.
     * 이 법은 스마트폰뿐만 아니라 태블릿, 노트북, 전기차 및 전동 자전거와 같은 다른 배터리 구동 장치에도 영향을 미칠 것입니다.
     * 2027년까지의 유예 기간은 제조업체가 제품을 재설계하여 교체가 쉬운 배터리 요구 사항을 충족시킬 수 있도록 합니다.
     * 이 법의 의도는 배터리에 대한 순환 경제를 조성하여 가능한 한 많은 자원을 재활용하거나 재사용하는 것입니다.
     * 이 법은 폐기 배터리의 수집 및 회수에 대한 규칙뿐만 아니라 다양한 종류의 배터리에 대한 최소 재활용 기준도 포함하고 있습니다.
     * 제조업체가 법에 준수하기 위해 디자인, 공급망 및 장비를 조정하는 데 시간이 걸릴 것입니다.
     * 이 새로운 규정은 앞으로 몇 년 동안 스마트폰의 디자인과 기능에 상당한 변화를 가져올 것입니다.

        Hacker News 의견

     * 스마트폰 배터리 교체 불가로 인한 새 기기 구매 필요성에 많은 사람들이 좌절을 경험했다.
     * 스마트폰에서 교체 가능한 배터리를 요구하는 제안 법안은 많은 사람들에게 긍정적인 발전으로 여겨진다.
     * 일부 의견은 스마트폰뿐만 아니라 다른 전자제품에도 초점을 맞춰야 한다고 주장한다.
     * 제조업체만이 교체할 수 있는 독점적인 배터리에 대한 우려가 제기되고 있다.
     * 배터리 교체 용이성은 기기 수명을 연장하는 실용적인 해결책으로 여겨진다.
     * 방수 기능이나 의료 기기와 같은 특정 기기는 제안 법안의 예외 사항이다.
     * 법안의 영향은 유럽에만 국한되지 않으며, 애플과 같은 기업들은 지역별로 별도 제품을 만들 가능성이 낮다.
     * 일부 소비자들은 얇고 디자인을 우선시하지만, 사용자 교체 가능한 배터리에 대한 수요가 있다.
     * 교체 가능한 배터리로의 전환은 FireWire에서 USB-C로의 기술적 발전과 유사하게 여겨진다.
"
"https://news.hada.io/topic?id=9731","파이어폭스 주소 표시줄","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              파이어폭스 주소 표시줄

     * 파이어폭스 주소 표시줄은 인터넷에 접근하는 중요한 도구입니다.
     * 기본적으로 파이어폭스는 스마트 추측을 사용하여 URL인지 검색어인지를 판단합니다.
     * 검색어 앞에 특정한 수정자를 사용하여 주소 표시줄의 동작을 변경할 수 있습니다.
     * 수정자에는 브라우징 기록을 위한 ^, 북마크를 위한 *, 태그된 페이지를 위한 +, 현재 열린 탭을 위한 %, 페이지 제목을 위한 #, 웹 주소를 위한 $, 제안을 위한 ? 등이 포함됩니다.
     * 예를 들어, 북마크에서 ""헤드폰""이라는 단어를 검색하려면 주소 표시줄에 *헤드폰을 입력할 수 있습니다.
     * 브라우징 기록에서만 결과를 보고 싶다면 수정자 ^헤드폰을 사용할 수 있습니다.
     * 이러한 수정자를 사용하면 주소 표시줄에 표시되는 결과에 대해 더 많은 제어권을 갖게 됩니다.

        Hacker News 의견

     * 파이어폭스 주소 표시줄의 살인 기능은 자체 매크로로 확장할 수 있는 능력입니다.
     * 크로미움의 옴니바와 비교하여 파이어폭스 주소 표시줄인 어썸바는 우수한 기능으로 칭찬받고 있습니다.
     * 브라우저 UI에서 검색과 주소 필드의 결합은 광고 노출과 추적을 증가시켰습니다.
     * 일부 사용자들은 기사에서 제공된 예제가 작성된 대로 작동하지 않고 약간의 수정이 필요하다고 발견했습니다.
     * 파이어폭스 주소 표시줄에는 검색과 탐색을 향상시키기 위해 사용할 수 있는 다양한 단축키와 수정자가 있습니다.
     * 파이어폭스 주소 표시줄은 필터와 제한 토큰을 사용하여 쿼리를 작성할 수 있는 다양한 기능을 갖추고 있습니다.
     * 일부 사용자들은 특정 수정자가 예상대로 작동하지 않는 문제를 경험했습니다.
     * Ctrl+L은 빠른 입력을 위해 주소 표시줄에 초점을 맞춰주는 단축키입니다.
     * 사용자들은 URL 형식을 수정하고 로컬 호스트 이름에 대한 인터넷 검색을 방지하는 등의 개선을 요구했습니다.
     * 특정 검색에 대한 키워드를 사용하여 주소 표시줄을 간소화하는 제안이 제기되었습니다.
     * 파이어폭스 주소 표시줄은 크롬의 제한된 기록과 비교하여 포괄적인 검색 기록으로 칭찬받고 있습니다.
     * 일부 사용자들은 특정 검색 수정자와 도구에 제한과 일관성을 경험했습니다.
     * ""+태그 검색"" 수정자의 발견은 일부 사용자들에게 긍정적인 놀라움이었습니다.
"
"https://news.hada.io/topic?id=9696","Livegrep - 인터랙티브 소스 검색 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Livegrep - 인터랙티브 소스 검색 도구

     * 기가바이트 단위의 큰 소스 Repo를 위한 인터랙티브 정규식 검색도구
     * GitHub-reindex 헬퍼가 있어서 깃헙 Repo에도 인덱스 생성 가능
     * 구글의 re2 정규식 엔진을 이용 (PCRE와 거의 호환)
"
"https://news.hada.io/topic?id=9758","90년대 개발자 스타터팩","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             90년대 개발자 스타터팩

     * 90년대 개발자들이 어떻게 환경을 꾸미고 개발했는지 경험해 보기
     * 386 에뮬레이터인 86Box에 Windows 95를 설치하고 MSVC로 헬로월드 컴파일 하는것 까지

하드웨어 스펙 잡기

     * AMD Am486DX4(100Mhz, PGA 168소켓) (칩 위에 Designed for Windows 95라고 인쇄되어 있음)
     * ASUS PVI-486SPX3C(SiS 496 노스브리지, 497 사우스브리지 칩셋). 듀얼채널 IDE, 1 플로피, 3 PCI, 4 ISA(1개가 VLB), 패러럴 포트1, 시리얼 포트2, PS/2 포트 하나
     * EDO-RAM 16MB
     * 2.88MB 플로피 디스크 컨트롤러
     * 2GB 디스크 드라이브
     * Zip 드라이브와 CD-ROM (둘다 SCSI 인터페이스 사용)
     * 그래픽 카드는 VLB 슬롯에 S3 Vision964. 별도 가속기 없이 MPEG-1 을 디코딩 가능
     * 사운드 카드는 Sound Blaster 16(ISA 슬롯)
     * SCSI 는 BusLogic PCI BT-958D 카드에 Zip 드라이브와 CD-ROM 드라이브 연결

OS 와 설치 소프트웨어들

     * 전제 조건: Microsoft DOS 6.22
          + 대부분의 마더보드는 CD에서 부팅이 되지 않음. SCSI는 말할 것 없고
          + 그래서 Windows 98가 달리 Windows 95를 설치하려면 Microsoft DOS 6.22가 필요함
          + 플로피 디스크로 부팅해야 하는데, 드보락 자판을 위해서 DVORAK.SYS 를 AUTOEXEC.BAT에 넣어서 자동 로딩해야함
          + SCSI에 붙은 CDROM을 쓰려면 BusLogic의 드라이버와 Microsoft 의 MSCDEX가 필요함
               o CONFIG.SYS에 btdosm.sys, btcdrom.sys 를 로딩하고
               o mscdex.exe 로 CDROM을 D에 마운트
     * Windows 95 OSR 2.5 설치
          + CD를 넣고 D드라이브에서 SETUP 실행해 윈도우 설치 마법사 시작
     * 개발도구
          + Visual Studio Enterprise 97 디스크에서 Visual C++ 설치
          + 설치 화면중에 COM(Component Object Model)을 지원하는 컴파일러라고 홍보문구가 나옴
          + 개발 문서가 필요하다면 MSDN CD를 구해서 설치하는 것도 좋음. (이번엔 간단한것 개발할것이라 필요없음)

코딩

     * Microsoft Developer Studio 에서 ""Win32 Application""을 선택한 뒤 ""Empty Project""로 생성
     * Main.cpp 만들고 'WinMain' 함수 작성
     * 첫번째 Windows API인 MessageBox 호출해서 'Hello, World' 보이기

결론

     * Windows 95는 Microsoft가 만든 첫번째 풀 32Bit Windows
     * 기존 세대 윈도우와 차별화해서 32비트 개발을 도입(기존엔 Windows NT에서만 가능했음)
     * Windows 에서 C/C++로 코딩하는 것은 콘솔기반 C/C++ 어플리케이션 개발과 달랐음

   다른건 익숙한데, 2.88MB FDD는 정말 처음이네요;;;ㅎ

   저도 3.5"" HD - 1.44MB는 익숙한데 2.88은 생소해서 찾아보니,
   HD가 아니라 ED라고 붙은 제품이 이 나온적이 있었는데 사실상 실패해서 보기는 힘들었을거라고 하네요.
   http://209.68.14.80/ref/fdd/formatKB2880-c.html
   아마 저자가 그 당시 기억이 정확하지 않아서 찾아서 조합하다 보니 저걸 언급하게 된게 아닐런지..

   그렇군요. 제 경험상, 3.5"" FDD는 너무나 데이터가 잘깨졌어요. (5.25"" FDD에 비해서)... 2.88MB 였으면 훨씬더 잘 깨졌을것 같네요;;;

   뭔 얘긴지 하나도 모르겠지만, 일단 국민학교 동창들한테 보내줬습니다 ㅋㅋㅋ

   역사 박물관에 온 것 같아요... 전부 하나도 모르겠네요

   추억돗네요. 저거보다 전에 프로그래밍 시작한건 비밀

   ZIP드라이브에 SCSI 인터페이스는 호사죠;
   전 병렬포트에 연결해서 사용했는데. Console 기반으로 개발하다가 Win용 VC++ 사용하면서 개념이 낯설었던 기억이 있네요. 하긴 비주얼베이직도 어마어마한 충격으로 다가왔었는데 말이죠. BC++ 참 좋은 IDE였는데..VC에 밀려서 ㅠㅠ

   위에 설명없이 적힌 ""윈도우 95 OSR 2.5""

   OSR은 OEM Service Releases (OSR) 인데요.

   버전번호가 왜 이러냐면, 윈도우 95 첫 버전은 95년도에 판매용 패키지(박스에 비닐 쌓여져있는)것으로만 출시가 되었습니다. 그리고 그 다음 업그레이드 버전들은 OEM 업체들한테만 별도로 제공되었습니다. 그래서 OSR 1 / OSR 2 / OSR 2.1 / OSR 2.5 까지 나왔는데요.

   OSR 2.5는 97년 11월에 나온 윈도우95의 최종 버전으로, 여기에 인터넷 익스플로러 4.0이 탑재 되어있습니다. 첫버전인 윈도우95 리테일 버전에는 IE가 없었고, OEM 버전에만 IE 1.0이 탑재, OSR1에는 IE 2.0, OSR2 에는 IE 3.0 이 들어가 있었습니다.

   저 이거 다 쓰던건데.. 개발 경력 15년 이상이 아닌 사람들은 잘 모르겠구나 싶네요.
   이게 뭐라고 향수가 느껴지지..

   다 알면 아재인증 인가요? ㅎㅎ

   ""모래요정 바람돌이""의 '추억방울' 하나를 터뜨린 느낌입니다.
   감성충만이네요~
"
"https://news.hada.io/topic?id=9700","Show HN: 해커 뉴스 사용자 개인 블로그의 OPML 목록","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Show HN: 해커 뉴스 사용자 개인 블로그의 OPML 목록

     * 해커 뉴스 스레드에서의 개인 블로그 컬렉션에 관한 기사입니다.
     * 컬렉션은 RSS 리더기로 쉽게 가져올 수 있도록 OPML 파일로 준비되었습니다.
     * 리스트는 해커 뉴스에서의 사용자 카르마에 따라 정렬되어 있어, 첫 번째 블로그는 가장 높은 카르마를 가진 사용자의 것입니다.
     * 리스트는 상위 10개 또는 100개의 블로그만 포함하거나 원하지 않는 블로그를 제거하기 위해 수정할 수 있습니다.
     * 일부 블로그는 낮은 카르마나 RSS 피드가 없는 등의 다양한 이유로 리스트에 포함되지 않을 수 있습니다.
     * 블로그의 내용과 언어는 검토되지 않았으므로, 품질과 언어를 판단하기 위해 블로그를 방문하는 것이 권장됩니다.
     * 리스트는 각 사용자와 블로그의 카르마와 RSS 피드를 가져오는 명령을 실행하여 재생성할 수 있습니다.
     * 기여는 리스트 파일에 직접 추가하지 말고, 대신 사용자는 블로그에 대한 링크가 있는 원래 해커 뉴스 스레드에 댓글을 추가할 수 있습니다.
     * 사용자는 댓글에 블로그의 유효한 URL 링크와 HTML 헤드 섹션에 대체 링크가 있는지 확인해야 합니다.
     * 리스트에 포함되는 사용자는 카르마가 1 이상인 사용자만 포함됩니다.

        Hacker News 의견

     * 해커 뉴스 사용자의 개인 블로그 목록은 지속적으로 유지되고 업데이트됩니다.
     * OPML 파일을 처리할 수 있는 좋은 RSS 리더기에 대한 추천이 필요합니다.
     * 한 사용자의 블로그가 콘솔 출력에 포함되지 않아 로깅 프로세스에 대한 의문이 제기되었습니다.
     * 사용자가 Node-RED를 사용하여 목록을 재생성하고 코드와 캐시된 피드를 공유했습니다.
     * 사용자가 자신의 블로그에 RSS 피드 링크를 추가하지 않은 것을 깨달았고 수정했습니다.
     * 목록에 일부 URL이 잘못된 것으로 보입니다.
     * 사용자들은 노력에 감사를 표하며 자신들의 블로그를 포함해 달라고 요청합니다.
     * 일부 RSS 리더 앱은 OPML 파일을 가져오지 못하거나 처리 및 포맷팅 문제가 발생했습니다.
     * 사용자가 피드의 피드를 만드는 쉬운 방법이 있는지 궁금해합니다.
     * 사용자가 RSS와 OPML 표준의 차이에 대해 질문합니다.
"
"https://news.hada.io/topic?id=9763","나는 떠나는 중입니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              나는 떠나는 중입니다.

     * 기술 억만장자와 그들의 제품에 믿음을 가진 사람들을 위한 이 비디오
     * 비디오 제작에는 일주일이 걸렸다
     * 제작자는 Open Collective에서의 지원이나 공식 상품 구매를 요청한다
     * 비디오에서는 줄리안 어산지의 웹사이트와 헤이든 피커링의 작업이 언급된다
     * 비디오는 RSS 피드, 트위터, 마스토돈에서 찾을 수 있다

        Hacker News 의견

     * 댓글러는 다양한 이유로 페이스북, 트위터, 그리고 왓츠앱을 떠났다.
     * 자기 호스팅이 중앙 집중형 플랫폼에 의존하는 사이클을 깨는 유일한 방법이라고 믿는다.
     * 개인 정보 보호와 개인 데이터에 대한 통제에 대한 우려가 제기된다.
     * 댓글러는 온라인 플랫폼의 상업성과 반복적인 성격을 비판한다.
     * 흠잡을 데가 있음에도 불구하고 사람들이 익숙한 플랫폼으로 돌아가는 언급이 있다.
     * 블루스카이와 스레드와 같은 새로운 소셜 미디어 플랫폼에 대한 일부 회의적인 시각이 표현된다.
     * 댓글러는 토론이 별로 없는 비디오의 인기에 대해 의문을 제기한다.
     * 웹사이트를 통해 콘텐츠에 접근하는 것을 선호하는 사용자들이 있기 때문에, 스레드의 앱 전용성이 의문이다.
     * 댓글러는 전용 앱에 의존하는 대신 TXT 파일, 스티키 노트, 또는 Git과 함께 사용하는 마크다운 파일을 메모 작성에 사용하는 것을 제안한다.
"
"https://news.hada.io/topic?id=9730","웹 앱 Workout.lol을 사용하여 용이하게 운동 루틴을 만들 수 있는 앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              웹 앱 Workout.lol을 사용하여 용이하게 운동 루틴을 만들 수 있는 앱

     * ""Workout.lol""는 운동 루틴을 쉽게 만들 수 있는 웹 앱입니다.
     * 이 앱은 체중, 덤벨, 바벨, 케틀벨, 밴드, 플레이트, 풀업 바, 벤치와 같은 사용 가능한 장비를 선택할 수 있게 해줍니다.
     * 그런 다음 훈련 중에 타겟으로 정하고 싶은 특정 근육을 선택할 수 있습니다.
     * 이 앱은 또한 원하는 운동을 선택하여 운동을 맞춤 설정할 수 있게 해줍니다.
     * 이 앱은 운동 루틴을 만들기 위한 간단하고 사용자 친화적인 인터페이스를 제공합니다.
     * ""Workout.lol""은 앱 개발을 지원하고자 하는 사용자를 위한 기부 옵션을 제공합니다.
     * 이 앱은 사용자 데이터를 보호하기 위한 개인 정보 보호 정책을 갖추고 있습니다.
     * 이 웹 앱은 단계별 안내와 맞춤 설정 옵션을 제공하여 운동 루틴 생성 과정을 간소화하는 특별한 앱입니다.
     * 기술에 능통한 사람들에게는 흥미로운 앱이며, 기술과 피트니스를 결합하여 활동적이고 피트니스 목표를 달성하기 쉽게 만들어줍니다.

        Hacker News 의견

     * 웹 앱은 깔끔하지만 경험이 있는 운동하는 사람들에게 기능적으로 매력적이지 않습니다.
     * 앱은 사용자가 자신의 운동 계획을 만들 수 있도록 예시 동영상을 제공합니다.
     * 앱이 제안하는 운동은 무작위적이고 잘 알려지지 않습니다.
     * 앱은 분석 마비에 시달리는 초보자에게 유용합니다.
     * 일부 사용자는 표준 전신 운동 루틴을 따르는 것을 제안합니다.
     * 앱은 확장과 수익 창출의 잠재력을 가지고 있습니다.
     * 앱의 필터링 및 선택 기능은 직관적입니다.
     * 앱은 오늘날에도 유용한 1999년의 피트니스 사이트와 비교됩니다.
     * 앱은 간단하고 사용자 친화적인 인터페이스를 가지고 있습니다.
     * 일부 사용자는 특정 근육을 선택하기 어렵다고 느낍니다.
     * 일부 사용자는 앱에 물리치료 운동을 추가하는 것을 제안합니다.
     * 저자는 부정적인 피드백에 의욕을 잃지 않고 계속해서 앱을 개선할 것을 권장합니다.
"
"https://news.hada.io/topic?id=9804","Wordpress Playground: 브라우저에서 완전히 실행되는 워드프레스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Wordpress Playground: 브라우저에서 완전히 실행되는 워드프레스

     * 워드프레스 플레이그라운드는 사용자가 웹 브라우저에서 완전히 기능이 구현된 워드프레스 환경을 체험할 수 있는 플랫폼입니다.
     * 사용자는 워드프레스의 다양한 기능을 시도해보고, 웹사이트를 구축하고, 플러그인을 테스트할 수 있습니다.
     * 이 플랫폼은 워드프레스 종속성을 자바스크립트에서 작동할 수 있도록 최첨단 기술을 사용합니다.
     * 간단한 태그를 사용하여 다른 애플리케이션에 통합할 수 있습니다.
     * 플레이그라운드 API를 통해 개발자는 플랫폼의 전체 잠재력을 발휘하고 다양한 도구와 기능을 구축할 수 있습니다.
     * 웹어셈블리에 대한 지식이 없어도 사용자는 프로젝트에 기여하고 그 미래를 형성하는 데 도움을 줄 수 있습니다.
     * 이 프로젝트는 개발자와 비개발자 모두의 기여를 환영합니다.
     * 워드프레스 플레이그라운드 웹사이트에서 자세한 정보와 문서를 찾을 수 있습니다.

        Hacker News 의견

     * 응답 시간은 클라우드 인스턴스나 VPS에서 LAMP를 실행하는 것과 유사합니다.
     * PHP는 WebAssembly 이진 파일로 실행되며, MySQL은 SQLite로 대체되고, 웹 서버는 JavaScript로 Service Worker로 구현됩니다.
     * WordPress를 Cloudflare 워커로 실행할 수 있습니다.
     * WordPress의 창시자가 주요 강연에서 이를 언급하며 Hacker News에서 주목받고 있습니다.
     * 이 플레이그라운드는 대부분의 웹사이트보다 빠릅니다.
     * 정적 사이트 생성이나 복잡한 호스팅을 필요로하지 않는 현대적인 WordPress 대안이 있다면 좋을 것입니다.
     * 데모는 인상적이지만, PHP 오류/경고 로그와 SQLite 데이터베이스 재작성의 작동 상태를 확인하는 것이 흥미로울 것입니다.
     * 샌드박스에서 플러그인과 테마를 쉽게 테스트할 수 있습니다.
     * SQLite뿐만 아니라 어떤 데이터베이스든 사용할 수 있다면 더 강력할 것입니다.
     * WordPress에 익숙하지 않은 사람에게는 이의 실용적인 응용 분야가 명확하지 않습니다.
"
"https://news.hada.io/topic?id=9704","LangChain은 무의미합니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           LangChain은 무의미합니다

     * 쓸데없는 Wrapper 코드들로 가득 차 있음
          + Embeddings 는 그냥 SentenceTransformer의 아무것도 안하는 Wrapper
          + Chroma 도 ChromaDB 의 단순 Wrapper
          + 일반 파이썬 함수를 단순히 호출하는 '헬퍼' 함수들로 가득
     * 문서 역시 거의 쓸모 없는 내용들
     * 그냥 시대에 편승한 초보자 프로젝트 같이 보임

GN⁺ 가 요약한 내용

     * LangChain: 언어 모델, 벡터 저장소 및 텍스트 분리기를 프로그램에서 쉽게 교체할 수 있는 기술
     * 구성 요소를 추상화하여 시간을 절약하고 코드를 유연하게 만드는 것을 목표로 함
     * 일부 사용자들은 LangChain이 설계가 잘못되었고 혼란스러운 것으로 발견함
     * 문서가 부족하고 코드베이스에는 불필요한 함수들이 많이 존재함
     * 사용자들은 구성 요소 교체에 어려움을 겪고 프롬프트와 코드를 다시 작성해야 하는 경우가 있음
     * 일부 사용자들은 Griptape나 자체 함수 구축과 같은 대안적인 해결책을 찾았음
     * 하지만 결함이 있음에도 불구하고, LangChain은 상호 운용성과 다양한 모델 및 벡터 저장소 처리 능력 때문에 인기를 얻고 있음
     * 기술에 능숙한 사람들은 LangChain을 사용하는 프로젝트의 장단점을 알기 위해 이 기사에 관심을 가질 수 있음
     * 초보자들이 시작하기에 좋은 도구이며, 더 고급 프로젝트에도 사용할 수 있음
     * LangChain의 문서는 부족하며 많은 기능들이 잘 문서화되어 있지 않음
     * LangChain을 넘어서고자 하는 사용자들을 위해 더 고급 튜토리얼과 예제가 필요함
     * 프로그래밍 커뮤니티에서는 LangChain에 대해 섞인 의견이 있으며, 일부는 유용하다고 생각하고 다른 사람들은 제한적이라고 비판함
     * LangChain과 유사한 도구의 개발은 빠르게 진행되는 AI 혁명의 일환임
     * 사용자들은 LangChain과 같은 오픈 소스 프로젝트에 기여하여 개선하는 것을 권장받음
     * 성장하고 배우기 위해 프로그래머들은 겸손하고 비판을 받아들이는 것이 중요함
     * LangChain은 AI 커뮤니티에서 인기있는 오픈 소스 프로젝트임
     * 일부 개발자들은 LangChain이 새로운 기능을 제공하지 않고 제한적이기 때문에 사용할 가치가 없다고 생각함
     * 대신에 SentenceTransformers, ChromaDB, requests와 같은 대체 라이브러리를 사용할 수 있음
     * LangChain은 GitHub에서의 많은 별 수로 인해 초보자들의 프로젝트로 간주됨
     * 일부 개발자들은 SymbolicAI나 Haystack을 LangChain보다 나은 대안으로 제안함
     * LangChain의 체인 추상화와 구성 가능성에 대한 우려가 있으며, 일부 개발자들은 DAG나 상태 머신과 같은 다른 추상화가 더 효과적일 것이라고 믿음
     * EdgeChains는 구성 관리로서 생성적 AI 프롬프트 엔지니어링을 제공하는 또 다른 라이브러리임
     * 일부 개발자들은 LangChain의 문서와 일관성 없는 동작에 대해 좌절을 표현함
     * 전반적으로, LangChain은 학습 목적에는 유용하지만 제품 수준의 시스템에는 적합하지 않을 수 있음

   해커뉴스에도 다양한 의견이 있는데요.
   LangChain은 이미 Benchmark 랑 Sequoia 로 부터 $30m 정도의 펀딩을 받았지만, 과연 이게 받을만 한 것이냐? 로 얘기가 많네요.

   LangChain의 간단한 대체제인 simpleaichat 개발자의 평
     * LangChain은 별로 도움이 되지 않으면서도 락인이 되어버림
     * ReAct 워크플로/프롬프트 엔지니어링이 구식임
     * 디버깅이 거의 불가능함 (verbose=true 여도)
     * 문서에 나온 워크플로우외의 것을 하려면, Hack이 정말 어려움. Custom Agents를 사용하더라도
     * 이럼에도 불구하고 LangChain이 받게되는 관심은 실제로는 AI 에코시스템에 안 좋음

   물론 긱뉴스에도 이미 LangChain 관련 뉴스들이 많이 올라왔..

   LangChain - LLM을 외부와 연결해주는 라이브러리
   LangFlow - LangChain을 위한 GUI
   LangChain AI 핸드북
   LangChain: Chat with Your Data 무료 강의[1시간]

        Hacker News 의견

     * Langchain 기술의 한계를 지원하지 못하는 기술적 기반 위에 문제를 해결하려는 시도
     * 현재 세대의 LLM은 재사용성이 부족함
     * LLM 체인으로 기능을 구축하기 위해서는 사용자 정의 손으로 작성된 프롬프트와 특정 데이터 형식이 필요함
     * Langchain은 재사용성을 위한 추상화를 시도하지만, 결과적으로 쓰레기 출력을 가진 중간적인 DAG 프레임워크로 이어짐
     * Langchain은 개발자에게 혜택이 없는 상태에서 도구에 대한 의존성을 장려함
     * ReAct 워크플로 및 프롬프트 엔지니어링의 현재 구현은 오래되었음
     * Langchain 오류의 디버깅은 어렵고, 워크플로 조작은 도전적임
     * 문서에 필요한 세부 정보가 누락되어 사용자가 코드베이스에 직접 파고들어야 함
     * Langchain의 인기는 AI 생태계를 왜곡시키고 개발 및 코드 가독성에 해를 끼침
     * Langchain 대체제인 LiteChain은 실제로 조립 가능한 모나드와 더 간단한 코드베이스를 제공함
     * Langchain은 이미 강력한 기술이 존재하는 ETL을 재창조하고 있음
     * Langchain의 추상화는 거의 가치를 추가하지 않으며 프레임워크 없이 쉽게 수행할 수 있음
     * Langchain은 상당한 투자금을 조달했지만 의심스러운 품질을 가지고 있음
     * 다른 솔루션과 비교하여 Langchain의 성능은 좋지 않음
     * Langchain은 자체 API와 복잡성을 도입하는 잘못된 추상화로 간주됨
     * Langchain에서 프롬프트 작업 사용 중단을 제안함
     * 경험 많은 ML 개발자들은 제품 개발에 Langchain이 무의미하다고 여기지만, 다른 사람들에게는 여전히 유용할 수 있음
"
"https://news.hada.io/topic?id=9814","세샤트(Seshat): 고대 이집트인처럼 코딩하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      세샤트(Seshat): 고대 이집트인처럼 코딩하기

   엔하위키 미러나 아희 등으로 유명한 정경훈(a.k.a. ‘Puzzlet Chung’)님이 난해한 프로그래밍 언어를 새로 하나 만드셨습니다. 이름하여 (“세샤트”). 이름부터가 범상치 않은데, 이는 고대 이집트 신화에서 기록과 지혜, 건축과 수학 등을 맡은 여신의 이름이라 합니다. 서기의 신으로 유명한 토트의 아내이기도 하다네요.

   세샤트는 고대 이집트의 신성문자(Hieroglyph)로 프로그래밍하는 게 특징입니다. 네, 로제타 스톤을 통해 해독된 바로 그 고대 상형문자입니다. 이걸 쓰려면 일단 그 신성문자부터 배워야 하는 모양인데, Github 페이지에 보니 각종 입문서와 사전 등을 링크해 두셨군요. 그래도 코드를 읽는 것조차 매우 힘들 것은 분명해 보이는군요.

   참고로 인터프리터도 이미 구현되어 있습니다.
   https://puzzlet.github.io/seshat/interpreter.html

     Seshat is a programming language in Egyptian hieroglyphs. Its goal is to make programming easy for anyone who can read and write Egyptian hieroglyphs.

   ?

   ㅋㅋㅋㅋㅋㅋㅋㅋㅋ

   이분 아직 살아계셨네요. 위키 사유화 사태 때 조용히 지내셔서 돌아가신 줄 알았는데...

   참 정정하신 분이었는데 말이죠...

   아니 댓글 좀 안적었다고 돌아가신 줄 아셨던 것은...

   긱뉴스에도 가끔 올리세요 ㅋㅋ
"
"https://news.hada.io/topic?id=9736","미국에서 처음으로 휴대전화 위치 데이터 판매 금지가 올 수도 있다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 미국에서 처음으로 휴대전화 위치 데이터 판매 금지가 올 수도 있다.

     * 매사추세츠 의원들, 모바일 기기의 위치 데이터 구매 및 판매에 대한 금지 검토 중
     * 이는 억 달러 규모의 산업을 규제하는 국내 최초의 시도가 될 것임
     * 제안된 금지 조치는 소비자 개인정보 보호와 개인 데이터 수집 및 판매를 제한하기 위해 목표로 함
     * 기술에 능통한 사람들은 이 기사에 관심을 가지고 있음. 이는 데이터 개인정보 보호에 대한 우려와 산업에 미칠 수 있는 잠재적 영향을 강조하기 때문임
     * 금지 조치는 비즈니스 모델에 위치 데이터에 의존하는 기업들에게 중대한 영향을 미칠 수 있음
     * 이 기사는 미래에 데이터 수집과 사용 방식에 영향을 줄 수 있는 규제 변화에 대한 가능성을 논의하기 때문에 특별함

        Hacker News 의견

     * 매사추세츠의 의원들은 소비자의 모바일 기기에서 위치 데이터를 구매하고 판매하는 것에 대한 거의 완전한 금지를 고려하고 있다.
     * 제안된 위치 보호법은 소비자의 명시적 동의와 법 집행 기관의 영장이 필요하다.
     * 날씨 앱은 종종 위치 데이터를 판매하는 것으로 알려져 있다.
     * 일부 개인과 기업은 연구나 타겟된 판매를 위해 위치 데이터를 구매하는 것에 관심이 있다.
     * 위치 데이터 판매 금지는 허점을 가질 수 있으며 로비스트들의 반대에 직면할 수 있다.
     * Wifi 통화 및 VOIP 서비스는 일부 개인 정보 보호 기능을 제공할 수 있다.
"
"https://news.hada.io/topic?id=9786",""이 그래픽에 표시된 기술을 폐기한다면 컴퓨터 보안 80% 해결"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ""이 그래픽에 표시된 기술을 폐기한다면 컴퓨터 보안 80% 해결""

        Hacker News 의견

     * 윈도우의 시장 점유율이 더 크기 때문에 악성 코드는 리눅스보다 윈도우를 더 자주 대상으로 한다.
     * 윈도우의 보안 문제는 파일 확장자 숨기기와 실행 가능한 비트가 없는 것을 포함한다.
     * 윈도우는 텔레메트리 엔진과 스파이웨어로 비판받고 있다.
     * 윈도우는 유령 피서지에서 좀비 광대와 비교된다.
     * 윈도우와 리눅스 모두 사용 편의를 위해 보안 제어를 약화시킬 수 있다.
     * 리눅스의 채택이 증가하면 악성 코드의 대상이 될 수 있다.
     * C 및 C++와 같은 메모리 안전하지 않은 언어는 보안 취약점에 기여한다.
     * 한 가지 공격 경로를 차단하면 악성 코드는 다른 플랫폼을 대상으로 한다.
     * 가장 인기 있는 플랫폼은 항상 악성 코드의 선호 대상이 될 것이다.
     * 하위 호환성과 폐기된 소프트웨어는 보안 문제에 기여한다.
     * 기술을 폐기하는 것은 컴퓨터 보안에 대한 해결책이 아니다.
     * 트위터 링크를 클릭하면 오류가 자주 발생한다.
"
"https://news.hada.io/topic?id=9741","nginx playground 오픈소스로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       nginx playground 오픈소스로 공개

     * nginx 설정을 맘대로 바꿔서 테스트 가능한 도구를 2021년에 공개
     * 오픈소스 유지보수를 별로 안 좋아하고, 공개하기에 그다지 좋지 않는 프로젝트들이 종종 있었음
     * 이제는 ""개선할 것 처럼 행동하지 않기"" 옵션을 선택하기로 함
          + 프로젝트는 더이상 유지보수 되지 않는다고 README에 명시
          + 알고 있는 보안 이슈들들 기록해둠
          + 잘 동작하는지 빌드 순서를 테스트(새 기계에서도!)
          + 프로젝터의 복잡한 부분을 설명(하지만 픽스는 하지 않음)
     * HAProxy playground 같은 것들이 만들어지길 기대함

   위 요약만 보면 좀 애매하게 느껴져서 첨언하자면, 저 nginx playground 를 유지보수 안하겠다고 선언했다는 소립니다.

   저도 프로젝트를 하나 만들었고 공개는 했었는데, 관리할 자신이 없어서 적극 광고는 못 하겠더라고요
   (거의 회사 내부에서만 씀)

   오픈소스 메인테이너들이 유지보수에 정말 큰 스트레스를 느끼는 것 같더라구요..

   nginx playground

   솔직히 이런 접근방식도 나쁘지 않다고 생각합니다. 유지보수 무서워서..
"
"https://news.hada.io/topic?id=9755","구글의 Medical AI 챗봇, 이미 병원에서 테스트중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    구글의 Medical AI 챗봇, 이미 병원에서 테스트중

     * Med-PaLM 2가 Mayo Clinic 에서 테스팅중
     * 구글 I/O에서 발표한 PaLM2 언어 모델의 파생버전
     * 구글은 의사들에 대한 접근이 제한된 국가에서 특히 유용할 것이라고 기대
     * 거의 모든 측정항목에서 Med-PaLM 2는 실제 의사와 거의 같은 성능을 보임
     * 구글의 시니어 연구 디렉터는 아직 초기단계라고 얘기함
"
"https://news.hada.io/topic?id=9717","AWS Docsocs GPT

     * AI를 이용한 AWS 문서 검색 & 채팅 도구 오픈소스
     * Search
          + OpenAI Embeddings API 를 이용하여 AWS 문서에 대한 임베딩을 생성
          + 사용자 검색어의 임베딩 생성후 관련된 콘텐츠를 찾아서 리턴
     * Chat
          + 검색 결과를 이용해서 프롬프트를 생성하여 GTP-3.5-turbo로 채팅
     * OpenAI + PostgreSQL(pgvector)
"
"https://news.hada.io/topic?id=9702","vlite - numpy로 만든 간단한 벡터 데이터베이스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    vlite - numpy로 만든 간단한 벡터 데이터베이스

     * 약 200줄의 코드로 작성된 속도 빠르고, 경량인 벡터 데이터 베이스
     * 간단히 벡터 저장이 필요한 Agent 및 ChatGPT 플러그인들을 위해 설계
     * 애플의 Metal Performance Shader를 이용(Pytorch를 통해서)
"
"https://news.hada.io/topic?id=9715","캘리포니아는 기술적인 꼼수가 아닌 진정한 수학 교육이 필요합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  캘리포니아는 기술적인 꼼수가 아닌 진정한 수학 교육이 필요합니다.

     * 미국의 고등학교 수학 성적은 다른 나라들에 비해 뒤처져 있어서 수학 교육 개선이 필요하다는 점이 강조된다.
     * 캘리포니아의 교육자들은 잘못된 접근으로 인식되는 수학 교육을 약화시키려고 시도해왔다.
     * 새로운 캘리포니아 수학 프레임워크(C.M.F.)의 발표는 주에서 수학 교육을 개선할 기회를 제공한다.
     * 조 보알러 박사가 주도하는 ""수학 개혁"" 운동은 수학 교육에 대한 포용적인 접근을 주장하며 영향력을 얻었다.
     * 그러나 CMF에서 이러한 아이디어의 구체적인 구현은 결함이 있으며 잘못된 정보에 기반한다.
     * CMF에서 제안된 논란의 여지가 있는 정책 변경사항에는 8학년에서 대수학 교육을 제거하고 ""데이터 과학""으로 대수학 II를 대체하는 것이 포함된다.
     * 이러한 변경사항은 대표되지 않은 학생들에게 해를 끼치고 수학에 강한 기반을 제공하지 못하는 등 부정적인 결과를 초래한다.
     * 비평가들은 CMF가 이러한 아이디어를 거부하고 대신 수학 교육에 대한 대안적인 접근 방식을 탐구해야 한다고 주장한다.
     * 다른 나라들로부터 배울 수 있는 기회가 있으며 ""수학의 과학""에서의 연구 결과를 통합하여 캘리포니아의 수학 교육을 개선할 수 있다.

        Hacker News 의견

     * 대규모 기관은 종종 잘못된 동기와 자기보존으로 인해 학습과 성장을 효과적으로 촉진하지 못하는 경우가 많다.
     * 캘리포니아 주 교육 시스템의 행동은 흑인과 브라운 키즈의 교육 수준을 낮추어 성취 격차를 확대시키는 것으로 비판받고 있다.
     * 가족 가치관과 학부모의 참여는 학교 교육의 엄격함과 관계없이 중요하게 여겨진다.
     * 캘리포니아의 공립 교육 시스템은 자금 부족과 노숙자 문제, 의료 등 다른 문제에 초점을 맞추어 비판받고 있다.
     * 전통 수학 교육과 선수과목 대신 고급 수업으로 대체하는 효과에 대해 의견이 분분하다.
     * 이 기사는 과거에 비판을 받은 조 보알러라는 논란이 있는 인물을 언급한다.
     * 교육 시스템은 학생보다는 관료와 교사 조합의 복지를 우선시한다고 여겨진다.
     * ""A Mathematician's Lament"" by Paul Lockhart는 현재의 수학 교육 상태를 비판하는 권장 도서이다.
"
"https://news.hada.io/topic?id=9767","GN⁺: 인텔, NUC에 대한 투자를 중단하고 PC 사업에서 철수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  GN⁺: 인텔, NUC에 대한 투자를 중단하고 PC 사업에서 철수

     * 인텔, PC 라인을 포함한 Next Unit of Compute (NUC) 사업에 대한 직접 투자 중단을 발표
     * 작은 크기와 인텔의 지원으로 인해 인텔 NUC는 인기 있었음
     * NUC 라인은 시간이 지남에 따라 다양한 폼팩터와 인텔 제온 CPU를 포함하도록 확장해왔음
     * 올해 초 인텔은 서버 비즈니스를 MiTAC에게 양도하면서 철수했음
     * 이는 OEM 고객과 직접 경쟁하는 것에 대한 회사의 입장 변화를 시사한 것이며, NUC 역시 마찬가지로 OEM과 경쟁하지 않기로 한 것
     * 인텔의 PC 사업 철수 및 산업 파트너에게 혁신을 의존하는 결정은 마더보드 및 케이스 디자인 경쟁의 가치에 대한 의문을 제기함
     * 인텔은 현재 시장에 나와있는 있는 NUC 제품을 계속해서 지원하며 파트너와 고객에게 원활한 전환을 보장할 것
     * 이 결정은 인텔의 비즈니스를 간소화하고 핵심 칩 제조 및 판매에 초점을 맞추기 위한 전략의 일환

        Hacker News 의견

     * 애널리스트는 핵심 사업에 집중하기 때문에 인텔이 PC 사업에서 철수할 것으로 예측했다.
     * 인텔 NUC는 기술 문서와 혁신적인 기능으로 알려져 있었다.
     * 대체 제품은 문서화가 부족하고 품질 문제가 있다.
     * 인텔 NUC는 Linux 호환성과 신뢰성으로 인기가 있었다.
     * 저렴한 가격대와 고급 가격대에서 모두 경쟁이 존재한다.
     * 인텔의 혁신은 시장에서 필수적인 이점이 아니었다.
     * 인텔의 가격 정책으로 인해 NUC는 대안에 비해 덜 매력적이었다.
     * 인텔의 비디오 변환을 위한 MFX Media SDK 지원은 일관성이 없었다.
     * NUC는 유사한 하드웨어를 가진 노트북에 비해 비싸다.
     * Framework는 업그레이드 가능한 노트북을 제공함으로써 인텔의 철수로 이익을 얻을 수 있을 것이다.
     * 박스형 PC 시장은 크며, 인텔은 니치 제품을 시장에 출시할 능력을 갖고 있다.
"
"https://news.hada.io/topic?id=9720","애플, Apple Car를 위한 혁신적인 카 오디오 시스템 개발중 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  애플, Apple Car를 위한 혁신적인 카 오디오 시스템 개발중

     * 애플이 차량내 오디오에 대한 5개의 새로운 특허를 신청
     * 애플은 ""Enclosed Environment"" 라는 단어를 차에 대한 완곡표현으로 사용하기로 한듯
     * 특허는 이 단어를 이용하면서 빌딩에도 적용 가능하다고 했지만 차량에도 가능
     * 헤드레스트에 있는 스피커가, 운전자가 회전시에 고개를 돌리거나, 맥도날드 주문을 위해 창문쪽으로 내밀었을때에도 위치를 추적
     * 자동차의 문에 붙어 있는 ""Access-Feature-Mounted External Speaker"" 관련 특허도 있음. 문이 열리거나 닫혔을때 어떻게 반응할지도 고민하는듯
     * Vision Pro 에서 얘기하는 Spatial Audio 도 적용하여, 한명이 아닌 여러명을 위한 Group Spatial Audio
"
"https://news.hada.io/topic?id=9743","iVentoy - 네트워크를 이용한 OS부팅 & 설치 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    iVentoy - 네트워크를 이용한 OS부팅 & 설치 도구

     * PXE 서버의 향상된 버전
     * 네트워크를 통해서 동시에 여러대의 머신에 새로운 OS를 부팅&설치 가능
     * x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI, ARM64 UEFI 동시 지원
     * 110+ 개 이상의 OS 지원 (Windows/WinPE/Linux/VMware)
     * 크로스플랫폼(Windows/Linux)
     * iVentoy 운영 서버 하드에 복사해둔 ISO 파일에서 그대로 부팅 가능
     * MAC 어드레스 기반 기기 필터링
     * 파일 인젝션 기능으로 드라이버/스크립트를 런타임 환경에 추가 가능
     * Linux/Windows 자동 설치 지원

   와 진짜 너무 편할 것 같아요

   Ventoy - 새로운 USB 부팅 솔루션
   USB 메모리에 여러개의 ISO를 넣고 선택부팅 하던 Ventoy의 네트워크 버전
   PXE 부팅 지원하는 네트워크 카드만 있다면, USB 없어도 되니 편할듯. 특히나 여러대 동시 설치해야하는 회사들의 경우.
"
"https://news.hada.io/topic?id=9774","C++23: 차세대 C++ 표준차세대 C++ 표준

     * C++20을 잇는 차세대 C++ 표준
     * C++98, C++11, C++20 같은 게임 체인저는 아니고, C++17 수준의 작은 변화

(40년간의) C++표준 변화 알아보기

  C++98

     * 80년대 말에 Bjarne Stroustrup 과 Margaret A. Ellis가 유명한 Annotated C++ Reference Manual (ARM) 책을 저술
     * 이 책의 목적은 두가지
          + 너무 많은 C++ 독립 구현체들이 있었기 때문에 ARM은 C++의 기능을 정의
          + C++ 표준인 C++98 (ISO/IEC 14882)의 기초가 됨
     * C++98은 몇몇 중요한 기능들을 포함
          + Templates
          + STL(Standard Template Library) : 컨테이너, 알고리듬, 스트링, IO Stream들을 포함

  C++03

     * C++03 (14882:2003) 에서는 아주 작은 기술 수정이 이뤄짐
     * 커뮤니티에서는 C++98 을 포함한 C++03을 ""레거시 C++"" 이라고 부름

  TR1

     * 2005년에 재미난 일이 생김. TR1(Technical Report 1)이 발간
     * TR1 은 C++11 을 위한 큰 발걸음이자 Modern C++로 향하는 첫걸음
     * C++ 표준 위원회 멤버들의 Boost 프로젝트에 기반
     * 차세대 C++ 표준에 들어갈 13개의 라이브러리를 포함 (정규식, 난수, std::shard_ptr 같은 스마트 포인터, 해쉬테이블등)

  C++11

     * 다음 C++ 표준이었지만, 우린 Modern C++ 이라고 부름. 이 이름엔 C++14 와 C++17 을 포함
     * C++11 은 C++ 을 개발하는 방식을 완전히 바꿔버림
          + TR1의 컴포넌트 뿐만 아니라 move-semantic, perfect forwarding, variadic templates, constexpr 등을 가져옴
          + 스레딩 기반의 메모리 모델과 Threading API 가 포함

  C++14

     * 작은 C++ 표준. read-writer locks, generalized 된 lambdas 와 constexpr 함수 도입

  C++17

     * 크지도 작지도 않음
     * 2개의 뛰어난 기능을 포함 : Parallel STL 과 표준화된 파일시스템
          + 약 80개의 STL 알고리듬이 실행 정책을 통해 실행 가능 (병렬, 순차, 벡터)
     * Boost 에서 많이 영향을 받음. 파일 시스템과 3개의 데이터 타입(std::optional, std::variant, std::any)

  C++20

     * C++20은 C++11과 마찬가지로 우리가 C++ 프로그래밍하는 것을 바꿔 버림
     * 특히 큰 4가지
          + Ranges : Ranges 라이브러리를 이용하면, 컨테이너에서 직접 알고리듬을 표한하고 파이프 기호로 알고리듬을 조합하여 무한 데이터 스트림에 적용 가능
          + Coroutines: C++에서 비동기 프로그래밍이 주류가 되게 해줌. 협동작업, 이벤트 루프, 무한 데이터 스트림 및 파이프라인의 기반이 됨
          + Concepts: 템플릿을 생각하고 프로그래밍 하는 방식을 바꿈. 템플릿 인자에 대해서 제약을 걸거나 타입 검사등을 할 수 있게 해주고, 컴파일시에 확인가능
          + Modules: 헤더 파일의 한계를 넘게 해줌. 다양한 것을 약속해줌. 예를 들어 전처리기가 필요없어지고, 궁극적으로 빌드 시간이 단축되고 패키지를 더 쉽게 빌드 할수 있게 됨

  C++23

     * 2023년 7월 현재 C++23이 최종 투표를 앞두고 있음
     * 작지만 언어 자체에 매우 영향력 있는 기능인 ""Deducing this""를 추가
          + 파이썬과 비슷하게, 멤버함수에 implicit하게 전달된 this 포인터를 explicit 할 수 있음
          + 이를 통해서 복잡한 테크닉인 CRTP(Curiously Recurring Template Pattern), 또는 Overload 패턴 구현이 간단해짐
     * C++23 라이브러에도 중요한 추가들이 있음
          + import std; 로 스탠다드 라이브러리를 직접 임포트 하거나, std:print 및 std:println 에서 C++20 포맷 스트링을 적용 가능
          + 성능상 std::map 을 대체하는 std::flat_map
          + std::optional 인터페이스가 Composability를 위해 Monadic 인터페이스로 확장됨
          + 새로운 데이터타입인 std::expected
          + 다차원 span 인 std::mdspan
          + 숫자들의 스트림을 생성하기 위한 코루틴인 std::generator

   아직 네트워킹 표준 소식은 없나 보네요

   다음표준에도;; 불확실하지않을까 싶습니다
"
"https://news.hada.io/topic?id=9787","RPCS3 - 오픈 소스 플레이스테이션 3 에뮬레이터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     RPCS3 - 오픈 소스 플레이스테이션 3 에뮬레이터

     * RPCS3는 C++로 작성된 오픈 소스 PlayStation 3 에뮬레이터 및 디버거입니다.
     * Windows, Linux, macOS 및 FreeBSD에서 사용할 수 있습니다.
     * 이 에뮬레이터를 통해 사용자는 컴퓨터에서 PlayStation 3 게임을 플레이할 수 있습니다.
     * RPCS3는 MotorStorm Pacific Rift와 같은 게임을 4K 60FPS로 플레이할 수 있도록 상당한 성능 향상을 이루었습니다.
     * 이 에뮬레이터는 사용자가 PlayStation Store에서 구매하거나 게임 디스크로 얻은 합법적인 게임 복사본을 필요로 합니다.
     * RPCS3 커뮤니티는 토론과 지원을 위해 Discord를 사용합니다.
     * 기여자는 코드베이스에 추가하고 에뮬레이터를 개선하는 데 도움을 줄 수 있습니다.
     * 이 프로젝트는 개발을 계속하기 위해 후원자의 지원에 의존합니다.
     * RPCS3는 PlayStation 3 에뮬레이션의 한계를 늘리며 지속적으로 발전하고 있습니다.

   내부를 보니 이 프로젝트를 주도했던 2명은 완전히 손을 뗐고, 다른 사람들이 받아서 이어나가고 있네요.
   그중 한명은 아예 자신을 이제 더이상 온라인에서 볼 수 없을꺼라고 메시지 남기고 잠적..

        Hacker News 의견

     * 에뮬레이터는 콘솔을 구매할 수 없는 많은 사람들에게 게임을 이용할 수 있게 만들었습니다.
     * PS3 아키텍처의 복잡성과 성능은 RPCS3 에뮬레이터를 인상적으로 만듭니다.
     * RPCS3를 최적화하려는 사람들을 위한 CPU 티어 목록이 제공됩니다.
     * PlayStation 에뮬레이터에 대한 다른 관련 기사와 토론이 있습니다.
     * RPCS3에서 기타 히어로와 같은 리듬 게임을 에뮬레이션하는 것은 중요한 성취입니다.
     * RPCS3는 온라인 멀티플레이어를 지원하며 다양한 게임과 잘 작동합니다.
     * 일부 사용자는 이제 RPCS3에서 플레이할 수 있는 PS3 게임 컬렉션을 가지고 있습니다.
     * PS3 아키텍처의 복잡성으로 인해 PS4 에뮬레이터를 구현하기가 더 어렵습니다.
"
"https://news.hada.io/topic?id=9765","무료 영화무료 영화

     * MSCHF Interactive가 새로운 소프트웨어인 Free Paint 1.0을 출시했습니다. 이 소프트웨어를 사용하면 사용자가 영화의 프레임을 그릴 수 있습니다.
     * 제작 중인 영화는 BEE 영화이며, 총 65,244개의 프레임이 사용자에 의해 수작업으로 그려졌습니다.
     * 현재 영화는 편집 중이며 곧 시청할 수 있게 될 것입니다.
     * 사용자는 이메일로 가입하여 전체 영화가 준비되었을 때 알림을 받을 수 있습니다.
     * 이 프로젝트는 영화 제작에 대중 참여가 포함되어 있어 독특하고 흥미로운 요소를 가지고 있습니다.
     * 기술에 능통한 사람들은 이 기사에 관심을 가지고 있으며, 이는 기술과 예술의 교차점과 사용자 생성 콘텐츠의 혁신적인 활용을 보여주기 때문입니다.

        Hacker News 의견

     * 이 프로젝트로 생성된 영화에는 우수한 퀄리티와 나쁜 퀄리티의 프레임이 혼합되어 있습니다.
     * 성기를 그린 그림과 같은 부적절한 콘텐츠가 포함된 프레임이 있습니다.
     * 많은 프레임이 불완전하거나 그림이 서툴게 그려져 있습니다.
     * 낮은 퀄리티나 부적절한 프레임을 걸러내기 위해 크라우드소싱 리뷰 프로세스를 도입하는 것이 유익할 것입니다.
     * 일부 사용자는 업적 있는 기여자가 추가 프레임을 제출할 수 있도록 제안합니다.
     * 결함이 있음에도 불구하고 이 개념은 흥미롭고 독특합니다.
     * 프레임의 퀄리티를 향상시키기 위해 모더레이션 또는 인센티브화를 추가하는 제안이 있습니다.
     * 저작권 문제와 잠재적인 DMCA 저작권 침해에 대한 우려가 있습니다.
     * 영화 미리보기는 웹사이트에서 시청할 수 있습니다.
     * 이 프로젝트는 인터넷에서 발견되는 다른 협업 애니메이션 프로젝트와 유사합니다.
     * 다른 협업 영화 프로젝트를 확인할 것을 권장하는 의견이 있습니다.
     * 일부 사용자는 각 프레임의 다중 샘플을 얻고 사용자가 최고 버전을 추천/비추천할 수 있도록 하는 것을 제안합니다.
"
"https://news.hada.io/topic?id=9725","Show GN: 약간 더 구체적인 부동산 비용 계산기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Show GN: 약간 더 구체적인 부동산 비용 계산기

   안녕하세요. 개인적으로 사용하려고 만든 자그마한 웹앱을 소개하고, 이 웹앱에 대한 의견을 여쭙고자 이렇게 Show GN 글을 올리게 되었습니다.
     * 개요
       집을 구하는 시점부터, 거주하고, 집에서 나갈 때 까지 우리는 부동산 중개수수료, 취득세, 대출 이자 등 끊임없는 비용 발생을 마주하게 됩니다. 이를 종합하고, 투입되는 비용에 대한 기회비용까지 계산하여 보다 정확한 총 비용을 계산하기 위해 만들어졌습니다.
     * 배경
       얼마 전 이사를 준비하며 매매, 전세, 반전세, 월세 등 여러 형태의 매물들을 비교하며 가장 좋은 조건을 찾고자 했습니다. 결국 중요한 것은 거주하는 동안 소비되는 총 비용을 계산하는 것이었습니다. (전/월세의 경우) 보증금의 규모에 따라 대출 한도와 금리가 달라지기도 하며, 한번에 큰 목돈이 드는 전세, 월마다 다소 큰 금액이 지출되는 월세 등의 비용을 한번에 비교하고자 개인적인 목적으로 웹앱을 만들기 시작했습니다.
     * 기회비용
       단순 합계 계산을 할 수 있는 웹앱은 현재도 존재하지만, 이 웹앱에서 가장 차별화 할 수 있는 점이 바로 기회비용이라고 생각했습니다. 부동산에는 필연적으로 큰 규모의 목돈이 들어가며, 이는 일정 기간동안 죽은 돈이 되어버립니다. 이로 인해 발생하는 기회비용 역시 꼭 고려해야 할 요소라고 생각하여, 이를 반영했습니다. (이에 대한 입력값은 ""예상 수익률"" 이라는 이름으로 표시되어 있습니다. 예를 들어 3%를 입력할 경우 부동산에 묶이는 돈에 대해 3%의 연복리를 적용하여 기회비용을 계산하는 식입니다.)
     * 다중 대출
       한개의 대출 이자 계산은 매우 단순합니다. 하지만 주택담보대출, 신용대출, 임직원용 대출 등 다양한 형태의 대출을 동시에 일으키는 경우 비용 계산을 돕기 위하여 리스트 형태의 대출 입력 기능을 만들었습니다.
     * 개선해야할 점
          + 매매 거래에서의 양도소득세가 반영되지 않습니다.
          + 현재 기준으로 부동산 수수료율, 취득세율 등 정책에 따라 변경될 수 있는 수치가 하드코딩 되어있습니다. 추후 실시간 반영으로 개선할 계획이 있습니다.
     * 맺으며
       확인해보시면 아시겠지만, 이 웹앱에 대단한 기술이 반영되거나 하진 않았습니다. 액셀로도 가능한 작업들을 웹으로 옮겨놓은 수준이지만, 한 분이라도 이러한 기능을 필요로 하는 분이 있다면 작은 도움이나마 될까 싶어 부족하지만 용기내어 공유해보게 되었습니다. 또한 경제적 지식이 없다시피 한 상태로 만들어졌기 때문에 틀린 점이 있을 수 있습니다. 어떤 점이 개선되면 좋을지, 어떤 점이 현실과 다른지 소중한 의견 주시면 감사하겠습니다.

   기회비용 따져봐야지 하면서 귀찮아서? 않하게 됐었는데^^;
   감사히 사용해볼게요!

   작년에 이사가면서 엄청 고생했는데, 이런 툴이 있었으면 고생을 좀 덜었겠네요. 대출기간에 따른 월 상환액도 계산할 수 있으면 좋겠습니다!

   좋은 기능 만들어 주셔서 감사합니다. UI도 직관적이고 좋은 것 같습니다!
   개인적으로 만드신 기능이지만, 만약 중개수수료도 상세하게 계산이 가능하다면 더 완벽할 것 같습니다! 오피스텔의 경우에는 중개수수료가 다르게 계산하는 것 있도 또 부과세 부분도 들어가는 점이 있습니다.

   유용한 기능 만들어주셔서 감사합니다. 북마크 해두고 자주 사용해야겠네요. 관련 개발/업데이트 등의 정보는 어디서 확인할 수 있을까요?

   현재는 뚜렷한 계획 없이 생각나는대로 UI 변경이나 기능을 추가하는 정도라 아직 공지를 하는 공간은 마련되어있지 않습니다 ㅠㅠ 조금 더 발전시켜 모양새를 갖추면 마련해 볼 생각입니다 :)

   답변 감사합니다. 자주 방문하면서 추가해주시는 기능 사용해봐야겠네요! :)

   엑셀로도 할 수 있다고 해놓으셨지만 엑셀보다 훨씬 직관적이라 좋네요. 마침 집주인이 전세금을 올린다 해서 이사 준비중인데...(ㅠㅠ) 유용하게 사용하겠습니다
"
"https://news.hada.io/topic?id=9791","새로운 CSS Viewport Unit : svh, lvh, dvh","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 새로운 CSS Viewport Unit : svh, lvh, dvh

     * 뷰포트 너비/높이 기반으로 설정하는 것은 편하지만, vh 는 모바일에서 버그가 많음
       → 뷰포트 사이즈가 브라우저의 주소바 UI를 포함하지 않기 때문
     * 100vh 는 모바일에서 전체 뷰포트 높이 만큼이 되어야 하지만, 스크롤시에 UI를 숨기는 사파리/크롬(안드로이드) 에서는 문제가 발생
     * 그래서 CSS 워킹 그룹이 새로운 단위를 소개 svh, lvh, dvh
          + 'svh' Small Viewport : 주소바 UI가 축소되지 않은 상태의 뷰포트 높이
          + 'lvh' Large Viewport : 주소바 UI가 축소된 상태의 뷰포트 높이
          + 'dvh' Dynamic Viewport : svh / lvh 사이에서 동적으로 변화
     * 100dvh 를 이용하면 최하단에 있는 버튼이 항상 표시되도록 설정 가능
          + 하지만 성능 문제가 있을수 있으니 조심해야함

   와! Firefox for Android에서 position:fixed, bottom: 0 할때 끔찍할 정도로 이상하게 동작하는 것들이 있었는데, 해결되나 확인해봐야겠네요.

   https://caniuse.com/viewport-unit-variants
   iOS는 15.4 부터, Android는 114부터 지원하네요

   Viewport Unit이 너무 많아서 헷갈리기 시작하네요

   브라우저가 책임져야 할 문제인데 표준 그룹이 책임을 지는 아이러니...
"
"https://news.hada.io/topic?id=9813","샌프란시스코에서 크루즈, 웨이모 무인 택시에 의한 사건들이 급증하고 있음 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                샌프란시스코에서 크루즈, 웨이모 무인 택시에 의한 사건들이 급증하고 있음

     * 보고서에 따르면 Cruise와 Waymo의 무인 택시와 관련된 사건들이 ""급증""하고 있다고 전해짐
     * 보고서는 이 자율주행 차량과 관련된 사고와 사고 직전의 사례의 증가를 강조
     * 이러한 사건들은 무인 주행 기술의 안전성과 신뢰성에 대한 우려를 제기
     * 기사는 사건들이나 그 원인에 대한 구체적인 세부사항은 제공하지 않음
     * 보고서는 무인 택시에 대한 더 많은 규제와 감독이 필요할 수도 있다고 제안

        Hacker News 의견

     * 기사에서 ""급증""이라는 단어의 사용은 양적 증거 없이 과장되었다는 비판을 받고 있다.
     * ""사건""을 다양한 범주로 분류하는 것이 데이터를 더 명확하게 이해할 수 있도록 제안되고 있다.
     * 일부 댓글러들은 보행자 안전 측면에서 자율주행 자동차가 인간 운전자보다 안전하다고 믿고 있다.
     * 자율주행 자동차와 평균 인간 운전자 사건 발생률을 비교하는 것은 소수의 인간 운전자가 대부분의 사건을 일으키는 것을 고려하지 않았다는 점에서 부정직하게 여겨진다.
     * 자율주행 자동차와 관련된 사고 사례와 사고 보고의 어려움에 대한 개인적 경험이 공유되었다.
     * 도시 관리자들의 신뢰성과 안전 기록 보고에 대한 정직성의 필요성이 의문을 제기한다.
     * 자율주행 택시에 대한 데이터와 상세 정보의 부족이 비판받고 있다.
     * 자율주행 자동차 회사의 수익성과 지속 가능성에 대한 우려가 제기되고 있다.
     * 자율주행 자동차의 개념과 일자리 기회에 대한 영향이 의문을 제기한다.
     * 대중의 자율주행 자동차에 대한 인식 변화가 언급되었으며, 사람들이 더 관심을 갖지 않고 대립적인 태도를 보이고 있다.
"
"https://news.hada.io/topic?id=9749","Show GN: 경량 가상돔 UI 라이브러리 - 미리 그려진 SSR 페이지의 특정 부분에 가상 돔을 쉽게 추가, 제거, 업데이트할 수 있습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Show GN: 경량 가상돔 UI 라이브러리 - 미리 그려진 SSR 페이지의 특정 부분에 가상 돔을 쉽게 추가, 제거, 업데이트할 수 있습니다.

   가상돔에 호기심이 있어서 틈틈히 만들다 보니 제 취향에 맞는 가상돔 UI 라이브러리를 완성하였습니다.

   가이드 페이지도 제가 만든 가상돔으로 만들어 봤어요
   https://superlucky84.github.io/lithent

   아래에 나름대로 그럴듯하게 소개글도 만들어 봤습니다. 재미로 봐주시고 깃헙에 가시면 별도 하나 클릭 부탁드려요

   --- 소개글

   실제 개발 환경에서는 최소한의 핵심 기능만으로 Virtual DOM을 가볍게 사용하고 싶을 수 있습니다.

   Lithent를 사용하면 미리 그려진 SSR 페이지의 특정 부분에 가상 돔을 쉽게 추가, 제거 및 업데이트할 수 있습니다.

   Lithent는 일반적으로 가상 DOM을 생성하고 업데이트하는 데 필요한 최소한의 기능을 구현했습니다('render', 'mounter', 'updater', 'renewer', 'mountCallback' 및 'updateCallback'만 알면 됩니다).

   기본 기능을 확장하는 헬퍼 코드를 제공합니다. 헬퍼 코드 그대로 사용해도 좋지만, 참고하여 사용자의 프로젝트 특성에 맞게 변경하여 사용하기 쉽습니다.
"
"https://news.hada.io/topic?id=9756","Fast! - 단시간에 완성된 프로젝트들 사례","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Fast! - 단시간에 완성된 프로젝트들 사례

   야심찬 목표를 빠르게 달성한 프로젝트들을 정리
     * BankAmericard: 1958년. 90일 만에 밑바닥부터 만들어서 발표. 나중에 Visa카드가 됨
     * 록히드 P-80 슈팅스타: 1943년. 미공군 최초의 제트 전투기. 6개월내로 만들어 달라고 했는데, 한달 댕겨서 143일만에 완성(개발팀 50여명). 한국전쟁에도 참가
     * Marinship 조선소: 1942년. 197일만에 조선소를 만들고 첫 배까지 진수.
          + 3/2일날 요청 전보 받고, 3/3일에 부지 선정, 3/9일에 조선소 만들겠다고 워싱턴 DC에 가서 제안 발표
          + 3/28에 조선소 공사 시작. 9/15일날 첫 배 진수. 1945년 일본 항복후 폐쇄
     * The Spirit of St. Louis: 1927년. 최초의 뉴욕-파리간 대서양 1인 횡단 비행기.
          + 60일만에 설계하고 완성. 필요 연료를 계산하기 위해 지구본에 실을 대고 거리를 측정. 3600 마일이니 400 갤런이 필요하겠다고 계산.
          + 연료탱크를 앞에 배치해야 했어서 전면 유리창이 없음. 이걸로 33시간동안 찰스린드버그 혼자 조종해서 대서양을 횡단
     * 에펠탑: 1889년. 2년 2개월(793일) 만에 완성. 완공 당시 세계에서 가장 높은 건축물이었고 40년동안 1위 유지. 2019년도 기준 약 $40m 비용이 들어감
     * Treasure Island: 1935년. 샌프란시스코가 금문교와 배이 브릿지 완공을 기념하기 위해 금문교 국제 박람회를 위한 새로운 섬을 만들기로 함
          + 샌프란시스코 만에 1937년까지 2년동안 인공적으로 만든 트레져 아일랜드는 400에이커(48만평, 여의도 절반 크기)
     * 아폴로 8호: 1968년. NASA가 달에 가야겠다고 결정한뒤 134일 만에 발사
     * 알라스카 고속도로: 1942년. 1700마일(2735km, 경부고속도로의 6.5배 )의 군사 도로가 234일만에 건설
     * 디즈니랜드: 1955년. 월트 디즈니가 생각했던 ""지구상에서 가장 행복한 장소"" 컨셉이 실제로 만들어지는데 366일 걸렸음
     * 엠파이어 스테이트 빌딩: 1930년. 410일만에 건설
     * 베를린 Airlift: 1948년. 소련이 베를린 봉쇄를 시작. 이틀후 베를린 Airlift 시작
          + 463일간 미국/영국/프랑스가 300대의 항공기로 277,000회의 비행을 통해 220만 베를리 시민을 위한 지원물자를 전달
          + 14개월간 2분마다 한대씩 보급기가 도착한 것
          + 이를 위해서 Tegel공항이 건설. 1948년 7월에 계획시작해서 8월 5일에 착공. 92일 후인 11/5에 첫 착륙하고, 12/5에 공식 개항
     * 펜타곤: 1941년. 세계 최대 규모의 오피스 빌딩. 브레혼 서머벨이 주도.
          + 프로젝트 진행 결정이 목요일 저녁. 일요일에 초기 도면 완성.
          + 두달 후인 1941/09/11에 공사 시작해서 491일 후인 1943/01/15에 완공
     * 보잉 747: 1968년. 1966년 3월에 보잉이 747 프로그램 시작. 첫번째 747 비행기는 930일 후인 1968/09/30에 완성
     * 뉴욕 지하철: 1900년. 첫번째 계약은 1900/02/21. 28개의 역이 1904/04/07에 오픈되고 운영 시작.
          + 2000년 4월에 MTA(메트로폴리탄 교통공사)가 Second Avenue Subway를 만들기로 결정. 1단계인 3개의 역이 2017/01/01(17년후)에 오픈
     * TGV(떼제베): 1976/04/30에 프랑스 정부가 파리와 리용간 고속 철도 건설계획을 승인. 유럽 최초의 고속철도. 후속노선은 1975일 후인 1981/09/26에 개통
          + 1996/09/24에 캘리포니아 고속 철도청이 설립. 첫번째 단계인 샌프란시스코와 애너하임을 연결하는 노선의 완공은 기관 설립 37년(13000일)후인 2033년에 이루어질 것으로 예상
     * USS Nautilus: 미국이 1951년 7월에 세계 최초의 핵잠수한 건조를 결정. 1173일 후인 1954년 9월 30일에 취역
     * JavaScript: 1995년 5월. Brendan Eich가 JavaScript의 첫 프로토타입을 10일만에 개발. 그해 9월에 베타로 출시
     * Unix: 1969년. Ken Thompson이 첫번째 버전을 3주만에 작성
     * Xerox Alto: 1972년 11월. 최초의 GUI-오리엔티드 컴퓨터인 Xerox Alto 개발 시작. 광범위한 하드웨어/운영체제/애플리케이션 설계 및 구현이 필요했음. 1973년 3월 1일에 출시.
          + ""Chuck Thacker가 3개월 안에 만들 수 있다고 말했고, 한 제록스 임원이 불가능하다는데 와인 한상자 내기를 걸었음""
     * Shenzhen(선전): 1998년과 1999년 사이 1년동안 선전의 인구는 100만명이 증가(22%). 440만에서 540만명으로 증가함
     * iPod: 토니 파델이 2001년 1월말에 아이팟 개발을 위해 고용됨. 스티브잡스가 2001년 3월에 프로젝트를 승인. 4월에 제조업체와 계약하고, 첫 제품을 10월에 발표하고, 시작후 290일만인 2001년 11월에 첫 iPod을 고객에게 배송
     * Amazon Prime: 아마존은 2004년말에 아마존 프라임의 첫 버전을 구현하기 시작. 6주후인 2005년 2월 2일에 발표
     * Git: 리누스 토발즈가 2005/04/03에 Git 작업 시작. 4일후에 셀프호스팅 됨. 2005/04/20, 작업시작 17일만에 Linux 2.6.12-rc3 커널이 Git을 통해 공식 릴리즈
     * COVID-19 백신: 2020/01/10에 SARS-CoV-2 게놈이 공개.
          + 3일후에 모더나가 mRNA 백신 후보인 mRNA-1273의 염기서열 확정후 2월 7일에 첫번째 배치를 제조
          + 게놈 공개 45일후인 2월 24일, 모더나는 임상 1상 연구를 위한 첫 배치의 mRNA-1273을 NIH에 배송
          + 266일간 임상 시험과 규제조율
          + 11월 16일 모더나가 백신의 효능이 94.5%에 달한다고 발표
     * 샌프란시스코가 Van Ness에 새로운 버스 노선을 만들겠다고 2001년에 제안했는데 2022년에 오픈. 총 7600일
          + 이 프로젝트에는 $346m 의 비용이 들었음. 미터당 $110,000
          + 저 위의 알래스카 고속도로는 외딴 툰드라를 가로질러 건설되었는데, 2019년 기준 미터당 793달러였음

   Unix: 1969년. Ken Thompson이 첫번째 버전을 3주만에 작성

   요 파트는 UNIX의 탄생에 좀 더 재미있게 적혀있습니다. 제가 소름돋게 읽었던 부분이라 발췌도 해놨어요!

유닉스의 탄생 중 - 3주 더 작업하면 운영체제가?

   ""어느 순간 저는 3주 더 작업하면 운영체제가 만들어지리라는 걸 깨달았습니다."" 그는 세 가지 프로그램을 한 주에 하나씩 개발해야 했다. 코드를 작성하기 위한 편집기, 코드를 PDP-7에서 실행 가능한 기계어로 변환하기 위한 어셈블러, 마지막으로 커널 오버레이였다. 그리고 켄은 커널 오버레이를 운영체제로 불렀다.

   바로 그때 켄의 아내가 한 살짜리 아들을 데리고 캘리포니아에 있는 켄의 부모님을 만나러 3주간 휴가를 떠났기에 켄은 집중해서 일할 수 있었다. 2019년 인터뷰에서 그가 말했다. ""한주, 한주, 한주, 그리고 유닉스가 만들어졌습니다."" 이것이 분명한 소프트웨어 생산성이다.

   Slow! 도 있으면 좋겠군요...

   git은 해당 커널 버전의 릴리즈 메일에도 언급되는군요!
   https://lkml.iu.edu/hypermail/linux/kernel/0504.2/0784.html

   Javascript 10일.... 가슴이 웅장해지네요... ㄷㄷㄷㄷ

     아폴로 8호: 1968년. NASA가 달에 가야겠다고 결정한뒤 134일 만에 발사

   이건 좀 ㅎㄷㄷ, 이 글을 매니져가 안봤으면 좋겠습니다.

   아폴로 8호는 설명이 좀 더 있어야 합니다. 아폴로 계획이 애당초 달에 유인우주선 보내는 계획이라 달로 가기로는 되어 있었죠.

   아래 부분에 대한 설명이 없으면, 하루 아침에 갑자기 달로 가기로 해서 134일만 간 것처럼 보이죠.

   ""원래 아폴로 8호 미션은 지구 저궤도 달 착륙선/사령선 시험 비행을 목적으로 계획되었지만, 비행 계획이 연기된 뒤 달 주위를 공전하는, 더 대담한 방향으로 전환되었다. 새로운 미션의 프로파일, 진행 과정, 승무원의 자격 요건 등은 매우 짧은 시간 내에 준비 과정 및 훈련을 마치도록 설계되었다.""

   https://ko.m.wikipedia.org/wiki/%EC%95%84%ED%8F%B4%EB%A1%9C_8%ED%98%B8

   대한민국의 국방사업인 번개사업도 한 스피드했죠.
    1. M2 카빈 10정
    2. M1 소총 자동화 MX 2정[1]
    3. M1919A4 및 M1919A6 각 5정
    4. 60mm 박격포 M19 4문, 81mm 박격포 M29 6문, 경량 60mm 박격포 2문
    5. 3.5인치 로켓 포 M20A1 및 M20B1 각 2문
    6. Mk.2 수류탄 300발
    7. M18A1 20발, M15 대전차지뢰 20발

   박 전 대통령은 이걸 약 한 달만에 만들라고 국방과학연구소에 지시했고 실제로 약 40일만에 완성, 50일째에 실사격에 성공했습니다. 공식적으론 ADD 최초의 무기 사업이었습니다.

   AESA 레이더 & 시스템 같은 경우에도 2020년경 미국이 AESA 기술이전을 거부한 이래로 자체개발을 시작했고 3~4년이 걸려서 지금은 자체개발 및 탑재에 성공했습니다.

   Stripe의 CEO인 Patric Collison 의 블로그 글인데요. 읽다보니 재미나네요. 비교로 들은 예시들이 너무 웃겨요 ㅎㅎ
"
"https://news.hada.io/topic?id=9817",""우리의 유료 고객들은 X가 필요합니다, 언제 고쳐주실 건가요?"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ""우리의 유료 고객들은 X가 필요합니다, 언제 고쳐주실 건가요?""

        Hacker News 의견

     * IBM의 새로운 종속성 릴리스 요청은 합리적이며 수정을 요구하지 않습니다.
     * 고객에게 릴리스 일정을 전달하는 것이 중요합니다.
     * 개발자를 비난하는 대신 도움을 주고자 하는 의도로 요청해야 합니다.
     * 일부 정보보안 전문가들은 취약점을 완전히 이해하지 않고 패치를 우선시합니다.
     * 기업의 권리와 오픈 소스 프로젝트에 대한 지원 요구는 일반적입니다.
     * 오픈 소스 라이선스의 사용 제한은 이러한 상황을 방지할 수 있습니다.
     * 유지자는 우선순위와 지원 계약에 대한 예의 바른 명세로 응답해야 합니다.
     * 보상을 제공하거나 자원을 기여함으로써 수정을 빠르게 할 수 있습니다.
     * 수정에 대한 예상 시간과 비용은 코드베이스의 복잡성에 따라 다를 수 있습니다.
"
"https://news.hada.io/topic?id=9724","InfluxDB Cloud의 두 지역이 제거되었지만, 일부 사용자가 이메일을 받지 못했습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          InfluxDB Cloud의 두 지역이 제거되었지만, 일부 사용자가 이메일을 받지 못했습니다.

     * InfluxDB에서 제공하는 Cloud 서비스의 벨기에(europe-west1)와 시드니(ap-southeast-2) 리전이 2023년 6월 30일에 제거됨.
     * 알림 이메일은 3번에 걸쳐 발송되었으나, 일부 사용자가 안내 이메일을 받지 못함.
     * 데이터를 이전하지 못한 사용자의 데이터는 삭제되었으며, InfluxDB는 데이터를 복구할 수 없다고 안내함.

   와우 충격적인데요

   이게 유료라니 놀랍네요
     * HN 스레드

   InfluxDB의 CTO가 나와서 영향을 받는 사용자에게 알리고 이전을 도와주기 위해 최선을 다했다...고 적었는데, 비평/비난이 엄청나게 많네요.
   누구는 왜 비명 테스트를 하지 않았냐고 따집니다.

   저도 이런 대처는 데이터베이스 클라우드 서비스를 제공하는 회사가 취할 조치로는 너무나도 미흡하다고 생각합니다.
   고객은 내 데이터를 위해 계속 돈을 지불하고 있거나, 이미 돈을 지불한 상태인데 갑자기 삭제하는건...

   데이터가 유실될 수 있는 변경 사항은 모든 수단(이메일, 우편, 전화 등)을 써서 고객한테 통보를 하고,
   모든 고객이 이전을 완료하거나, 혹은 제거에 동의한 이후에 데이터를 완전히 삭제해야 한다고 생각해요.

   아무튼 데이터베이스 회사인데 신뢰도가 크게 떨어지겠네요.
   언제 갑자기 리전이 제거될지 모르니...

   심각하네요. 정말 처음보는 상황. 신뢰도가 바닥을 치겠어요.
"
"https://news.hada.io/topic?id=9762","React와 Solid의 차이점 톺아보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         React와 Solid의 차이점 톺아보기

   JSX 의 원조인 React 와 JSX에서 파생하여 React와 달리 가상DOM을 사용하지 않는 Solid.js 의 차이점을 알아보았습니다.

   React 개발자가 Solid.js 에 접근할 경우를 가정하여 차이점을 보았을 때, 기초적으로 아래와 같은 차이점이 있습니다.
     * React의 훅 함수는 컴포넌트 함수 내에서만 사용 하능하나, SolidJS의 상태관리 함수는 마치 독립적인 상태관리 기술처럼 호출에 대한 제약 없음.
     * React의 Side-effect 함수인 useEffect 함수는 하나의 함수에 부작용 시에 대한 처리와 해제 시까지 한 번에 제공 가능하며, 영향받을 상태를 수동으로도 지정할 수 있으나, Solid.js 의 Side-effect 함수인 createEffect는 Svelte 처럼 본문에 명시한 상태관리에 영향을 받으며, 영향받을 상태를 수동으로 제공하지 않고, 반환 함수를 제공하지 않지만 하나의 상태관리 주기 환경을 제공하여 onCleanup 을 통한 해제 함수 사용 가능.
     * 상태 범위 관리에 대해서는 React와 사용법 상의 차이 없음.
     * 동적 컴포넌트나 조건, 반복문에 대해서 React 는 상태 변경 시 본문이 재작성되는 특성에 따라 손쉽게 js 로직을 사용하여 대응 가능하나, Solid 는 본문이 유지되기 때문에 제공하는 내장 컴포넌트를 통해 해결 가능.
     * React의 lazy 및 <Suspense> 컴포넌트를 Solid.js 에서도 제공.
     * Solid는 React와 달리 비동기 반응성을 고려한 상태관리 유틸리티 함수 제공.
     * React의 ref 와 Solid.js 의 ref 사용법은 비슷하나, React에서 주로 참조를 위한 useRef 같은 전용 함수는 Solid.js 에서는 간단히 let 변수로 활용 가능.
     * Solid.js 는 Svelte 처럼 바닐라 JS의 생명주기를 관리하는 use 액션 특성 제공.
     * React 의 속성(Props)은 구조 분해를 통해 단독으로 사용해도 속성 변경 시 본문이 재작성되기 때문에 문제 없이 사용 가능하나, 이 방법을 Solid.js 에서 사용하면 반응하지 않기 때문에 구조 분해를 통한 단독 속성 활용이 불가하며, 객체 형식 그대로 사용하거나, 객체 분해나 병합을 제공하는 유틸리티 함수(splitProps 등)을 통해 분해하여 여전히 객체처럼 사용해야 함.

   가장 큰 차이점은 useState 와 useSignal 의 차이죠. 데이터가 binding 되는게 눈에 보이지 않아서 디버깅하는데 너무 고생한 기억이 있네요
"
"https://news.hada.io/topic?id=9815","링크를 클릭할 때마다 무작위로 Web 1.0 웹사이트로 이동됩니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 링크를 클릭할 때마다 무작위로 Web 1.0 웹사이트로 이동됩니다.

        Hacker News 의견

     * 웹 1.0 사이트는 현대 디자인에 영감을 줄 수 있는 다른 UI 관용구를 가지고 있었습니다.
     * 소셜 미디어 페이지가 인터넷을 점령했지만, 번역 과정에서 무언가가 손실되었습니다.
     * 빅 회사보다 랜덤 웹사이트 생성기가 사용자를 더 정확하게 대상으로 합니다.
     * 우연히 발견하고 즉시 공유할 수 있는 재미있고 유익한 사이트들이 있습니다.
     * 콘텐츠 중심의 가벼운 웹사이트를 위한 관련 링크가 있는 선별된 검색 엔진이 있습니다.
     * 랜덤 생성기는 어떤 사람을 키 큰 사람들을 위한 단체로 이끌었습니다.
     * 랜덤 생성기는 스테이플 없는 스테이플러 갤러리와 벽에 젤리를 박는 방법에 대한 페이지로 어떤 사람을 이끌었습니다.
     * 어떤 사람이 처음 방문한 웹사이트는 ""왜 bkuhn의 웹사이트가 구린지""라는 이름을 가지고 있었으며, 웹 1.0에 고수하는 이유를 설명했습니다.
     * StumbleUpon과 Reddit는 사용자가 흥미로운 사이트를 발견할 수 있는 유사한 서비스였습니다.
     * 웹 1.0 웹사이트에서는 게임을 즐길 수 있습니다.
     * 웹의 다른 시대에 대한 유머도 있으며, 그 중에는 웹 파이 (3.14159)와 웹 골든 (1.61803)도 있습니다.
     * Hacker News의 Wiby 링크는 흥미로운 기사가 있는 멋진 웹사이트로 이어졌습니다.
"
"https://news.hada.io/topic?id=9750","GPT-4 세부 사항 유출세부 사항 유출?

     * GPT-4 세부 사항 유출 가능성
     * 유출된 정보는 GPT-4가 고급 기능을 갖출 것으로 보인다
     * GPT-4는 향상된 자연어 처리와 이해 능력을 갖출 것으로 예상된다
     * 유출된 세부 사항은 향상된 문맥 이해와 추론 능력도 언급한다
     * GPT-4는 더 큰 모델 크기를 가질 것으로 소문나며, 이는 성능 향상에 이바지할 수 있다
     * 유출된 정보는 기술에 능통한 사람들 사이에서 흥미를 불러일으켰다
     * 이 기사는 GPT-4가 다양한 산업과 응용 분야에 미칠 잠재적인 영향에 대해 논의한다
     * GPT-4가 공식적으로 출시될 때는 알려지지 않았다
     * 유출된 세부 사항은 소프트웨어 엔지니어와 기술 애호가들 사이에서 추측과 기대를 불러일으켰다

        Hacker News 의견

     * 유출된 GPT-4 세부 사항의 원본 출처는 semianalysis.com의 블로그 게시물입니다.
     * 세부 사항을 공유한 트위터 사용자는 블로그 게시물을 다시 표현한 것으로 보이며, 이로 인해 트윗이 삭제되었습니다.
     * GPT-4에서 사용된 MoE (Mixture of Experts)는 흥미로우며 출력 품질의 변동을 설명할 수 있을 것입니다.
     * GPT-4의 비전 모델이 공개되지 않았지만 기대감이 있습니다.
     * GPT-4의 훈련에는 21 요타플롭스가 필요했으며, 이는 상당한 계산적 업적입니다.
     * GPT-4의 훈련 비용은 작년보다 1/3로 하락하여 오픈 소스에게 좋은 소식입니다.
     * GPT-4의 품질이 추측적 디코딩 모델로부터 낮은 확률 시퀀스를 수용함으로써 저하되었다는 추측이 있습니다.
     * Google은 언어 모델 확장을 위해 전문가 혼합을 연구하고 있으며, GLaM 모델은 1.7조 개의 매개변수와 64명의 전문가를 가지고 있습니다.
     * 조지 핫즈는 인터뷰에서 GPT-4가 2200억 개의 매개변수를 가지고 있으며, 8세트의 가중치로 이루어진 16개의 혼합 모델이라고 언급했습니다.
     * Twitter의 높은 API 가격으로 인해 Thread Reader와 같은 프리미엄 서비스가 여전히 운영될 수 있는지에 대한 호기심이 있습니다.
     * 일부 사용자는 Twitter에 등록하지 않고도 유출된 GPT-4 훈련 세부 사항에 액세스할 수 있는 대체 링크를 찾고 있습니다.
     * GPT-4가 어떻게 작동하는지에 대해 진정한 정보를 알고 있는 사람은 OpenAI 직원들뿐이며, 나머지는 추측에 의존해야 합니다.
"
"https://news.hada.io/topic?id=9740","Firecracker를 QEMU로 대체한 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Firecracker를 QEMU로 대체한 이유

     * Hocus(셀프 호스팅 가능한 GitPod/GitHub Codespaces 대체제)가 Firecracker를 QEMU로 대체했음

Firecracker는 짧게 실행하고 종료하는 형태의 워크로드에 최적화 되어있음

     * AWS Lambda에서 사용되는 가벼우며 빠르고 안전한 마이크로VM 하이퍼바이저
     * 그렇게 가볍지는 않음
          + 오래 실행되는 워크로드에 필수인 ""동적 RAM 관리 기능""을 제공하지 않음. 한번 할당된 RAM을 호스트로 반환하지 않음
          + 스토리지를 호스트로 되돌리는 기능도 없음. VM내에서 큰 파일을 만들었다 삭제하더라고 호스트에 빈 공간을 돌려주지 않음. 전체 VM 드라이브를 삭제하기 전까지 계속 점유함
          + GPU 지원이 없고, 고성능 디스크 IO도 제공되지 않음

QEMU도 완벽하지는 않음

     * 설정할게 너무 많음
     * 미사용 RAM을 돌려주기 위해서 호스트가 3가지 챌린지를 해결해야함
          + 그 기능이 있다는 것 자체를 알기(free page reporting 이라고 불리며, 직접 활성화 해야함)
          + Linux의 DAMON 기능을 이해하고, 용도와 구성방법을 알고, 이를 지원하는 리눅스 커널을 컴파일 해야함
          + 게스트에서 Transparent Huge Pages를 사용하지 않도록 해야하며, 그렇지 않으면 VM이 대량의 메모리를 리턴하지 않음
     * 시험 적용하는데 2달이 걸렸음.
          + Firecracker/QEMU 코드 읽고,
          + DAMON 설정하기위해서 개발자랑 메일도 주고 받음
            → (DAMON 개발자가 한국분인 박성재님입니다.)

결론

     * QEMU는 범용 워크로드 운용에 필요한 기능을 가지고 있음
     * 하지만 설정에는 시간과 인내가 필요함
     * Short-lived, Untrusted Workload를 위해서는 Firecracker가 좋은 선택임
     * 하지만 만약 당신의 개발환경을 VM에서 운영하고 싶다면 Hocus를 이용하면 됨(힘든일은 우리가 다 해놓았으니)

   자기들 제품을 소개하는 건 좋지만.. aws 서비스를 그냥 쓰는게 낫다라는 생각도 들긴하네요..
   ssssut 님 말씀데로 fargate에서도 동작하는 서비스라서 저정도까지는 아니라고 생각되는데요.

   메모리 반환을 안하는게 뭐가 문젠지 아직 모르겠네요. CPU는 경합발생하더라도 어플리케이션이 느려지지 뜨는데는 문제없지만 메모리는 답이없어서...

   추가: AWS Lambda 뿐 아니라 오랜 시간 실행되는 ECS Fargate에서도 Firecracker를 사용하고 있습니다.

        Hacker News 의견

     * Firecracker는 개발 환경을 호스팅하기 위해 CodeSandbox에서 사용되지만, 장기 실행 작업에도 사용될 수 있다고 생각한다.
     * QEMU는 PCI 또는 ACPI 지원이 없는 최소한의 머신 유형인 microvm이라는 Firecracker에 영감을 받은 대상을 가지고 있으며, 짧은 기간 동안의 게스트를 위해 설계되었다.
     * Cloud-hypervisor는 메모리 회수 및 기타 기능을 지원하는 Firecracker와 유사한 다른 옵션이다.
     * Firecracker에는 호스트 시스템에서 메모리를 회수하기 위해 팽창 및 수축할 수 있는 풍선 장치가 있다.
     * 이 기사는 Firecracker의 제한 사항을 언급하지만 QEMU에 대한 많은 정보를 제공하지 않는다.
     * Fly는 장기 실행 프로세스를 호스팅하기 위해 Firecracker를 사용한다.
     * 블록 캐시의 중복 제거 및 제로-복사 통합을 포함하여 VM이 호스트와 더 스마트하게 통합되기를 원한다.
     * QEMU는 Firecracker와 달리 볼륨을 바인드 마운트할 수 있지만, 이는 보안 위험이 될 수 있다.
"
"https://news.hada.io/topic?id=9754","영국에서의 민영화는 비용이 많이 들면서 실패했습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     영국에서의 민영화는 비용이 많이 들면서 실패했습니다.

     * 영국에서의 민영화 실패에 대한 논의
     * 영국에서의 민영화는 대부분의 OECD 국가보다 광범위하게 이루어졌다.
     * 잉글랜드와 웨일스의 수도산업은 1989년에 칠레를 본받아 민영화되었다.
     * 다른 국가의 대부분의 수도 인프라는 공공 소유와 관리이다.
     * 민영화의 실패는 잉글랜드의 위기에 처한 수도 회사와 오염된 강들에서 확인할 수 있다.
     * 잉글랜드 최대의 수도 회사인 템즈 워터는 140억 파운드의 부채를 누적하고 있으며 높은 이자율에 노출되어 있다.
     * 영국에서의 민영화는 반대 주장에도 불구하고 국가에게 이로움을 주지 않았다.
     * 에너지 전환은 국가 소유의 주장을 더욱 강화시킨다.
     * 이 기사는 시사 연구소의 소장인 매튜 로렌스가 쓴 것이다.

        Hacker News 의견

     * 공유 네트워크 인프라 위에 공공 상품의 민영화는 성공하지 못했습니다.
     * 네트워크 자체는 경쟁을 통해 공공의 손에 유지되어야 합니다.
     * 이윤 추구 동기는 종종 서비스 품질 하락으로 이어집니다.
     * 영국은 많은 자원을 외국 투자자에게 매각하여 경제적 취약성을 야기했습니다.
     * 국가의 경제 상황은 우려스럽습니다. 누적된 부채와 공공 서비스의 실패로 인해.
     * 더 많은 재분배가 가능한 한계가 있으며, 고소득자를 향한 상당한 세금 편향이 있습니다.
     * 입찰에 의한 민영화는 공공 공급자가 경쟁과 가치 제공을 할 수 없게 만듭니다.
     * 영국의 민영화의 의도는 공공부문에서 사설부문으로 재산을 이전시키는 것이었으며, 서비스 개선을 위한 것은 아니었습니다.
     * 물, 도로, 철도 등 필수 서비스에서의 선택의 부족은 문제입니다.
     * 캐나다의 철도 민영화는 안전하지 않고 유지보수가 잘 되지 않은 철도망으로 이어졌습니다.
     * 민영화의 실패는 능력 부족이나 부정 행위 가능성으로 설명될 수 있습니다.
     * 일부 경우에는 영국의 민영화가 실제로 민영화되지 않았으며, 다른 정부에 의해 산업이 인수되었습니다.
     * The Economist가 민영화의 실패에 대한 기사를 게재하는 것은 놀라운 일입니다.
"
"https://news.hada.io/topic?id=9788","밀란 쿤데라 사망","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               밀란 쿤데라 사망

     * ""The Unbearable Lightness of Being"" 작가인 Milan Kundera가 94세로 별세했습니다.
     * Kundera의 소설은 1988년에 오스카 후보작으로 영화화되었습니다.
     * 이 영화는 Daniel Day-Lewis와 Juliette Binoche가 주연을 맡았습니다.
     * Kundera는 세계 각지의 독자들에게 다가가는 유명한 작가였습니다.
     * 그는 체코슬로바키아에서 태어나 1975년에 프랑스로 이민을 갔습니다.
     * Kundera는 1968년 소련의 체코슬로바키아 침공에 비판적이었으며, 곧 이후 공산주의 정권에 의해 배척당했습니다.
     * 그는 1981년에 프랑스 시민권을 얻고 사망할 때까지 프랑스에서 살았습니다.
     * Kundera의 작품에는 다른 영화와 주목할만한 에세이 작품들이 포함되어 있습니다.
     * 그의 글은 프라하 봄과 그 이후의 주제를 탐구했습니다.
     * Kundera의 문학적 기여는 광범위하게 인정받았습니다.

        Hacker News 의견

     * 밀란 쿤데라의 책은 대립적인 시각과 인물 및 상황의 심층적인 분석으로 알려져 있다.
     * 쿤데라는 헤겔, 니체, 베토벤, 바흐와 같은 철학자와 음악가들의 아이디어를 작품에 통합시킨다.
     * ""무게의 불가변함"", ""백년의 고독"", ""보이지 않는 도시""와 같은 쿤데라의 책들은 독자들에게 깊은 영향을 미쳤다.
     * ""무게의 불가변함""은 독특한 글쓰기 스타일과 생각을 자극하는 장면으로 칭찬받는다.
     * 쿤데라의 인간상에 대한 시각은 종종 냉소적으로 여겨지며 삶의 무의미성이라는 개념을 탐구한다.
     * 일부 독자들은 쿤데라의 책과 연결되지 않고 흥미롭지 않거나 심도가 부족하다고 느낄 수 있다.
     * 쿤데라의 글쓰기는 흥미로운, 인간적인, 생각을 자극하는 것으로 자주 묘사된다.
     * ""농담""은 필독서로 권장되며 오늘날에도 여전히 관련성을 유지한다.
     * ""느림""은 독자들에게 높이 평가되는 쿤데라의 잘 알려지지 않은 소설이다.
     * 쿤데라의 책들은 종종 정치적 주제와 정부에 의한 공공 생활의 조작에 대해 다룬다.
"
"https://news.hada.io/topic?id=9803","GN⁺: Stability AI 공동창업자, CEO가 자신을 속여서 100달러에 지분 15%를 샀다고 소송을 제기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    GN⁺: Stability AI 공동창업자, CEO가 자신을 속여서 100달러에 지분 15%를 샀다고 소송을 제기

     * Stability AI 공동 창업자인 Cyrus Hodes가 현재 CEO인 Emad Mostaque에 대해 사기와 횡령을 주장하는 소송을 제기
     * Hodes는 Stability AI가 10억 달러로 평가된 후 몇 달 만에 회사의 15% 지분을 100달러에 팔게 된 것에 대해 속았다고 주장
     * 이 소송은 Mostaque가 자금 조달 시도와 AI 텍스트-이미지 생성으로의 계획된 전환에 대한 정보를 숨겼다고 비난
     * Hodes는 또한 Mostaque가 잠재적인 법적 조치 통지 후에 증거를 파기했다고 주장 ""Whatsapp이 삭제되었어요!""
     * 이 소송은 또한 Mostaque가 가족의 런던 아파트와 자녀의 교육비를 지불하는 등 개인적인 용도로 외부 투자자들의 자금을 횡령했다고 주장
     * Stability AI는 이 소송에 대해 의견을 제공하지 않았음
     * 이 소송은 Tayab Waseem이 Stability AI에 대한 다른 소송과 유사하며, Mostaque가 회사의 10% 공동 창업자 지분을 부여하는 약정을 어기었다고 주장
     * Hodes와 Waseem은 회사 투자 피치 덱에서 Stability AI의 공동 창업자로 적혀있었음
     * 이 소송은 Mostaque의 혐의되는 기업 탐욕과 부정행위를 강조하며, 피고들의 행동이 법정에서 완전히 공개되길 요구

   Stability AI의 CEO, Emad Mostaque는 과장된 이력을 가지고 있다

   저 대표는 이래저래 말이 많네요. Forbes에서 집요하게 물어늘어지는 듯

        Hacker News 의견

     * 회사의 대규모 소수 주식 판매는 통제력 상실을 초래할 수 있습니다.
     * 창업자들은 명예 훼손을 두려워하여 이러한 상황에 대해 언급하지 않습니다.
     * 나쁜 비즈니스 관행에 대한 익명의 리뷰 플랫폼이 필요합니다.
     * CEO에 대한 부정적인 보고서는 Stability의 투자자들에게 문제를 시사합니다.
     * CEO의 행동은 파트너들과 공동 창업자와의 문제를 일으켰습니다.
     * 회사의 명성은 벤처 투자금을 오픈 소스 모델 교육에 사용한 데 기반합니다.
     * 회사의 15% 지분을 100달러에 판매하는 것은 터무니없습니다.
     * 의심스러운 하지만 합법적인 조치는 스타트업의 자본 가치를 떨어뜨릴 수 있습니다.
     * 회사는 돈을 흘리고 있으며 추가 투자 유치에 어려움을 겪을 것입니다.
     * 벤처 투자자들은 죽은 자본을 좋아하지 않으며 판매에 압력을 가할 수 있습니다.
     * 비즈니스 파트너를 신중하게 선택하는 것이 중요합니다.
     * 회사가 가치 없다 하더라도 100달러에 주식을 판매하는 것은 가치가 없습니다.
"
"https://news.hada.io/topic?id=9807","Li-Fi - Wi-Fi 보다 100배 빠른 네트워킹 표준 802.11bb 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Li-Fi - Wi-Fi 보다 100배 빠른 네트워킹 표준 802.11bb 공개

     * 빛을 이용한 802.11bb 표준 규약을 IEEE가 공개
     * pureLiFi, Fraunhofer HHI, Light Communications 802.11bb Task Group 등의 Li-Fi 지지자들은 무선 주파수(RF)대신 빛을 사용하는 것은 기존 Wi-Fi 및 5G 기술에 비해 비교할 수 없는 보안 기능으로 더 빠르고 안정적인 무선 통신을 제공한다고 주장
     * 물론, Li-Fi 가 Wi-Fi 나 5G를 완전히 대체하는 것을 불가능
          + Radio Wave는 먼거리나 불투명한 물체를 통과하는 장점이 있음
     * 데이터 전송에는 적외선 스펙트럼의 일부가 사용되므로 눈으로 볼 수 있는 것은 아님

   특수한 환경에서는 쓸모가 있긴 할 것 같은데,
   뭐 움직이다가 그림자에 한 번 가려지면 바로 끊기는거 아닐지...

   근 20년간 기술가정책 단골등장 기술..

   보안이 더 뛰어나다는 말에, 왜 일까, 생각하다... 생각해보니 암막커튼으로 보안을 향상시킬 수 있겠군요...

   이런게 될꺼야~ 정도로만 알았던 기술인데, 표준화도 된 기술이군요!
"
"https://news.hada.io/topic?id=9745","GN⁺: 맥에서 리눅스 가상 머신을 실행하는 좋은 방법: Lima","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  GN⁺: 맥에서 리눅스 가상 머신을 실행하는 좋은 방법: Lima

     * 리마는 맥에서 리눅스 가상 머신(VM)을 실행할 수 있는 소프트웨어
     * Vagrant와 같은 다른 옵션에 비해 설정 및 사용이 간단
     * 리마는 VM에서 사용할 우분투 22.04 이미지를 자동으로 다운로드
     * 기본 설정으로 리마는 VM 내에서 전체 홈 디렉토리를 마운트하여 파일에 쉽게 접근
     * 리마는 기본 구성을 제공하지만 필요에 따라 사용자 정의 가능
     * 저자는 프로젝트별 VM 대신 모든 프로젝트에 단일 리눅스 VM을 사용하는 것을 선호
     * 디렉토리를 읽기-쓰기로 마운트하는 데 제한이 있지만 해 가능
     * 저자는 제품 환경과 개발의 편의성을 위해 리눅스 컨테이너 대신 VM을 선택
     * 리마는 리눅스에서도 작동하며, 맥에서 리눅스 컨테이너를 실행하는 colima와 Orb Stack과 같은 대체 옵션이 있음

   Lima : Linux VM on Mac

        Hacker News 의견

     * 애플의 고유한 API를 사용하여 Mac에서 Linux VM을 실행할 수 있습니다.
     * 애플의 샘플 코드는 크기 조정 가능한 디스플레이, 공유 드라이브, 네트워크 액세스 등을 지원합니다.
     * Rosetta를 사용하여 Apple Silicon에서 x86 Linux를 실행할 수 있습니다.
     * 최신 릴리스에서는 VM 상태 저장 및 복원이 가능합니다.
     * Mac에서 헤드리스 및 GUI Linux를 실행할 수 있습니다.
     * Rosetta를 사용하여 Apple Silicon에서 Linux VM에서 Intel 바이너리를 실행할 수 있습니다.
     * Virtio 공유 디렉토리를 구성할 수 있습니다.
     * Apple Silicon에서도 MacOS VM을 실행할 수 있습니다.
     * Lima보다 시작하기 쉽고 빠르게 시작할 수 있는 Lima 대안인 OrbStack이 있습니다.
     * UTM은 Apple 가상화 프레임워크를 사용하며 QEMU의 프론트엔드인 또 다른 대안입니다.
     * Colima는 Docker Desktop을 설치하지 않고 Linux 컨테이너 환경을 제공하기 위해 Lima를 사용합니다.
     * Lima는 I/O 및 네트워크 정지 문제가 있습니다.
     * Multipass와 Mac에서 컨테이너 사용에 대한 비교가 이루어집니다.
     * Mac에서 컨테이너를 실행하려면 Linux VM이 필요하므로 일부 사용자는 직접 VM을 사용하는 것을 선호합니다.
     * Lima는 Homebrew와 MacPorts에서 사용할 수 있습니다.
     * 일부 사용자는 M1 Mac에서 Docker 대안인 Colima에 문제가 있었습니다.
     * 소프트웨어 테스트 목적으로 Linux에서 MacOS를 실행하는 데 관심이 있습니다.
"
"https://news.hada.io/topic?id=9800","적정 엔지니어링으로 검색 속도 10x 빠르게 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      적정 엔지니어링으로 검색 속도 10x 빠르게 만들기

   상황에 맞는 과하지 않은 엔지니어링으로 검색 서비스를 개선한 사례입니다.

   문제의 인식
     * 느려지는 검색 서비스
     * Join과 검색을 위한 정규식 사용으로 인한 복잡성 문제 인식

   문제 해결 전략
     * 초기 Elasitcsearch를 고민했었음
     * Main DB랑 실시간성, 많은 양의 영구 보존 데이터를 다뤄야함으로 비용 이슈 존재
     * 단순화된 검색 전용 테이블을 구성하고 검색 쿼리 구축
     * 데이터 적재를 위해 MySQL Trigger 적용

   성과
     * 3분 걸리던 쿼리를 2초로 개선
     * 과하지 않은 엔지니어링으로 빠른 시간에게 고객 가치 전달

   접속양이 많은 대용량 사이트 만들때 사용하는 한개의 데이터에 대한 테이블을 여러개 만들어서 용도를 나누는 방법을 적용 했네요
   고객용 관리자용 이렇게 두개로 나누기도 하는데 검색용으로 용도를 지정해서 잘 적용한 사례네요

   DB 분야는 잘 몰라서 이런 정보글을 읽으면 신기하고 재밌네요.
"
"https://news.hada.io/topic?id=9795","일런 머스크가 이끄는 AI 팀, xAI 결성 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      일런 머스크가 이끄는 AI 팀, xAI 결성 발표

     * DeepMind, OpenAI, Google Research, Microsoft Research, Tesla 등에서 일했던 멤버들이 합류
     * xAI의 목표는 ""우주의 진정한 본질을 이해하는 것""(understand the true nature of the universe.)
     * 어드바이저는 ""Center for A.I. Safety""의 디렉터인 Dan Hendrycks
     * Adam optimizer, Batch Normalization, Layer Normalization, Transformer-XL, Autoformalization, the Memorizing Transformer, Batch Size Scaling, μTransfer, AlphaStar, AlphaCode, Inception, Minerva, GPT-3.5, GPT-4 등 관련해서 연구/개발을 했던 사람들

멤버들 리스트 (머스크 포함 총 12명)

     * Igor Babuschkin : DeepMind/OpenAI
     * Manuel Kroiss : DeepMind/Google
     * Yuhuai (Tony) Wu : Google
     * Christian Szegedy : Google
     * Jimmy Ba : University of Toronto
     * Toby Pohlen : Google
     * Ross Nordeen : Tesla
     * Kyle Kosic : OpenAI/Onscale
     * Greg Yang : Microsoft Research
     * Guodong Zhang : DeepMind/Google Brain
     * Zihang Dai : Google

   42?

   ㅋㅋㅋㅋㅋㅋ 이미 알고있는 건데 왜 찾는걸까요!
"
"https://news.hada.io/topic?id=9733","GN⁺: 썬더버드 115 Supernova","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        GN⁺: 썬더버드 115 Supernova

     * 동적 통합 툴바: 활성화된 탭/스페이스에 자주 사용되는 옵션을 제공. 워크플로우에 맞게 커스터마이징 가능
     * 썬더버드 전용 일관된 스타일의 아름다운 아이콘 제공
     * Density 설정 및 폰트 사이즈를 멀티 모니터/디스플레이 해상도에 맞게 쉽게 제어
     * 새로운 애플리케이션 메뉴(≡): 키보드로 이용 가능. 직관적으로 더 빠르고 쉬운 탐색을 제공하기 위해 재설계
     * 정렬 가능한 폴더 모드를 도입: 사용자가 폴더 창에서 태그를 표시하고 로컬 폴더를 켜고 끌 수 있으며, 폴더 모드 섹션을 재정렬 가능
     * 폴더 창에는 ""태그"" 뷰가 추가되어 사용자가 사용자 정의 색상으로 태그된 메시지를 쉽게 찾고 필터링
     * Modernized 카드 뷰: 다중 라인 지원을 통해 모바일 인터페이스 목록을 에뮬레이션하여 사용자에게 더 편안한 모습을 제공
     * 102부터 추가된 슈퍼노바의 주소록을 새로운 표 형태의 뷰, 개선된 편집 뷰, 삭제 버튼 및 더 나은 접근성으로 개선
     * 애플리케이션 전체에서 썬더버드의 키보드 탐색 및 스크린 리더 접근성을 크게 개선
     * 캘린더도 개선되어 향상된 ""미니-월"" 레이아웃 제공. 일/주/월 그리드도 향상

        Hacker News 의견

     * 다른 댓글들의 자격과 친절하지 않은 태도에 대한 놀람을 표현하는 몇 가지 의견, 특히 Thunderbird가 무료이고 오픈 소스 도구임을 강조합니다.
     * 새로운 Thunderbird UI는 외관과 사용자 피드백에 대한 리스닝 능력으로 칭찬받고, 특히 디스플레이 밀도와 관련하여 사용자의 의견을 수렴합니다.
     * 전통적인 세 개의 패널 분할 보기의 부재와 수평 중심의 창 크기 가정에 대한 우려가 제기됩니다.
     * Thunderbird의 검색 기능은 최악 중의 최악으로 비판되며, 사용자들은 개선된 검색 기능을 바라고 있습니다.
     * 현재 버전과 달리 메일 스레드를 따라가기 어려운 등의 문제점이 있는 현재 UI보다 새로운 UI가 더 편리할 것으로 예상됩니다.
     * 일부 사용자들은 정보 밀도를 유지하는 것을 감사하게 생각하지만, OS의 외관을 유지하는 것을 제안합니다.
     * Thunderbird 115의 출시가 발표되었지만, 즉시 Thunderbird 웹사이트나 애플리케이션을 통해 사용할 수 없을 수도 있습니다.
     * 베타 버전에 대한 긍정적인 피드백이 제공되며, 속도와 사용자 제어에 대한 칭찬이 있습니다.
     * 고급 UX 디자이너들이 Thunderbird에 직접 기여할 것을 제안합니다.
     * 발표된 외관과 실제 UI 스크린샷 사이의 불일치에 대한 의문이 제기됩니다.
     * Thunderbird의 하드 드라이브 공간 점유에 대한 의문이 제기되며, 다른 이메일 클라이언트와의 비교와 휴대용 버전의 저장 용량 제한에 대한 우려가 있습니다.
"
"https://news.hada.io/topic?id=9739","3M의 물 시스템 PFAS 오염에 대한 103억 달러 합의안 도달","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  3M의 물 시스템 PFAS 오염에 대한 103억 달러 합의안 도달

     * 3M, 화학 제조업체, 미국 공공 음용수 시스템에 PFAS 화합물이 오염되어 소송을 해결하기 위해 최소 103억 달러를 지불할 것입니다.
     * PFAS는 환경에서 자연적으로 분해되지 않는 비점착 및 방수 제품에 사용되는 유해한 화학 물질입니다.
     * PFAS는 간 손상, 면역 체계 손상 및 암과 같은 건강 문제와 관련되어 있습니다.
     * 이 소송은 오염으로 인한 물 공급업체에 대한 보상 및 PFAS 필터링 비용을 지원할 것입니다.
     * 3M은 2025년 말까지 모든 PFAS 생산을 중단하고 물 여과 기술에 투자했습니다.
     * 이 소송은 법원의 승인을 받아 최대 125억 달러까지 상승할 수 있습니다.
     * 이 소송은 PFAS 오염으로 인한 기업에 대한 소송의 일환입니다.
     * PFAS를 정화하는 비용은 소송 금액보다 훨씬 더 높아질 수 있습니다.
     * 이 소송은 수백만 미국인에게 더 건강한 음용수로 가는 긍정적인 한 걸음으로 여겨집니다.

        Hacker News 의견

     * 3M의 PFAS 오염에 대한 해결안은 103억 달러입니다.
     * 3M의 참여는 책임을 인정하는 것이 아닙니다.
     * 일부 댓글러들은 3M이 마음씨 좋게 수백만/수십억 달러를 기부한다고 주장하는 것을 재미있게 여깁니다.
     * 네덜란드의 한 연구 채널이 네덜란드의 전 Dupont 공장의 PFAS 은폐에 대한 에피소드를 제작했습니다.
     * 해결안은 10년 동안 지급되며, 3M은 책임을 인정하지 않습니다.
     * 일부 댓글러들은 이 해결안이 기업 미국에 대한 또 다른 경고라고 생각합니다.
     * 일부 댓글러들은 해결안이 모든 PFAS 오염을 청소하는 데 효과적인지에 대해 우려를 표명합니다.
     * 댓글러들은 동일한 동기를 가진 동일한 책임자들이 여전히 존재한다는 사실을 비판하며, 문제 해결에 엔지니어를 고용하고 벌금을 최소화하는 대신에 집중해야 한다고 제안합니다.
     * 댓글러들은 또한 해결안 금액이 피해자들에게는 거의 가치가 없을 것이라는 우려를 표명합니다.
     * 일부 댓글러들은 해결안이 3M의 경제적 안정성에 타격을 줄 것이라고 기쁘게 여기지만, 관련 개인들에 대한 징역을 요구하기도 합니다.
     * 한 명의 댓글러는 치실에 함유된 PFAS와 PFAS의 혈액 농도와의 연관성을 언급하지만, 이는 치실 사용을 중단할만한 충분한 증거는 아니라고 언급합니다.
"
"https://news.hada.io/topic?id=9706","Ask GN: 해외여행 갈 때 따로 쓰는 지도 앱이 있나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Ask GN: 해외여행 갈 때 따로 쓰는 지도 앱이 있나요?

   구글맵으로 중국을 다녀왔는데, 생각보다 많이 불편했습니다.

   개별 가게를 찾는데는 유용했지만 맛집 추천이라던가 여행 경로라던가 하는 여러가지 기능은 턱없이 부족하고, 몇몇 기능은 제대로 운영하고 있는건지 의심스러운 UI 도 보였습니다. 예를 들면 Saved 탭의 기능들이 그렇습니다.

   해외여행 때 쓰는 지도 어플이 있으신가요? 어떤 나라에 방문할 때 그 어플을 쓰시나요?

   중국여행은 바이두 지도가 최고...!!!

   인터넷 환경이 좋지 않은 국가를 갈 때는 오프라인에서도 쓸 수 있는 Organic Maps(Maps.Me에서 광고를 제거한 포크)를 구글 지도와 함께 쓰고, 인터넷이 잘 될 때는 구글 지도를 주로 썼습니다.

   중국은 구글 서비스가 안되는 곳이라서 구글맵이 의미가 없을거에요.

   저도 구글과 애플 지도를 주로 사용하고, 장기간 머물 때는 현지인에게 물어보는 편입니다.

   일본에서 맛집을 찾을 때에는 타베로그를 쓰고 있습니다.
   딱히 지도는 아니고 맛집 플랫폼인데, 평점 관리가 아주 잘 되어있어서 3.0만 넘어가도 괜찮은 집이더군요.

   중국의 경우만 좀 특이하게 애플지도가 구글지도보다 나았던 것으로 기억합니다.

   https://reddit.com/r/applemaps/…

   https://i.redd.it/scgr1sekp1431.jpg 같은 비교 이미지 보시면, 중국은 거의 미국 대도시 수준으로 잘 만들어놨습니다.

   그외 국가들은 거의 구글지도에만 의존합니다.

   CityMaps2Go / Maps.Me 라는 오프라인 지도앱을 가끔 썼는데요(OpenStreetMap 기반)
   지도가 그리 상세하지 않아서 별로 도움이 되지 않더라고요.
   그래도 혹시나 출발전에 받아두기는 합니다.

   중국은 구글이 철수해서 보통 바이두나 이런거 쓸겁니다.
"
"https://news.hada.io/topic?id=9703","Bluesky가 도메인 직접 구입 및 관리를 지원하기 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Bluesky가 도메인 직접 구입 및 관리를 지원하기 시작

     * 트위터의 대체제로 알려진 Bluesky
     * AT 프로토콜을 통해서 자신의 도메인을 유저명으로 사용 가능
     * Namecheap과 파트너십을 통해서 도메인을 빠르고 쉽게 직접 구입하고 바로 설정 가능하게 지원 시작
          + 몇번의 클릭으로 커스텀 Bluesky 핸들 지정
          + 이메일/URL 포워딩 가능

   그래서 제 도메인을 이용한 블루스카이 ID 는 다음과 같습니다.
   https://bsky.app/profile/xguru.net

   중간에 profile 을 왜 넣었는지 모르겠네요. 그냥 @ 만 붙여줘도 되지 않았을까 싶은데
"
"https://news.hada.io/topic?id=9793","Shelf - Asset 관리 소프트웨어 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Shelf - Asset 관리 소프트웨어 오픈소스

     * 간단하고 시각적인 자산 관리 & 위치 추적 시스템
     * 개인 또는 팀이 함께 사용
     * 물품의 사진을 찍고, QR코드를 생성해서 붙인 뒤 DB에 넣어서 관리
     * 아이템에 대한 상세 정보 입력(구매일자, 구매가격, 보증 기간등)
     * 애셋들을 골라서 PDF로 생성해서 어디든 첨부 가능
     * 사용하지 않는 애셋에 대한 알림 받기
     * 'Lost Mode'로 잃어버린 아이템 찾기(찾아주는 사람에 대해서 보상 걸기)
     * 누가 마지막으로 썼는지, 어디 있는지 등을 검색 가능
     * 별도의 하드웨어 없이 스마트폰만으로 이용 가능(QR코드 확인 및 애셋 정보 보기)
"
"https://news.hada.io/topic?id=9775","개발자의 시간을 대폭 줄이는 통합형 오픈소스 시계열 데이터베이스 : Machbase Neo","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           개발자의 시간을 대폭 줄이는 통합형 오픈소스 시계열 데이터베이스 : Machbase Neo

     * 기존의 시계열 데이터베이스는 하나의 SW 컴포넌트로 별도로 존재했음
     * 그러나, 이를 잘 활용하기 위해서는 다른 웹서버, MQTT 서버 등 설치 필요
     * 인증, 설치, 데이터 로딩, 추출 등의 많은 작업도 동시에 필요함
     * 대표적으로 서로 다른 종류의 차트 연동을 위해 JSON의 변환 등의 코딩도 필요
     * 다시 말해 간단한 응용 작성을 위해서도 배보다 배꼽이 더 큰 작은 작업들이 많음
     * Neo는 아예 개발자가 다른 작업이 필요 없도록 모든 기능을 통합해 버림
     * 데이터 분석가가 사용해도 좋을 듯

지원 기능은 다음과 같음

     * HTTP 웹서버 내장 (Rest-API)
     * MQTT 서버 내장 (진짜?)
     * gRPC 서버 내장
     * SSH 서버 내장 (보안 채널 통신 때문인 듯)
     * 시계열 DB 내장 : (빠른 마크베이스의 라이브러리를 통합한 듯)
     * X.509 인증서 지원
     * influxdb의 lineprotocol 변환 지원
     * 자체 시각화 도구 지원 (빠르게 데이터 입력부터 시각화까지??)
     * TQL 이라는 언어를 통해 Neo 내에서 데이터 변환 직접 가능(ETL 기능?)
     * 모든 작업이 웹 브라우저를 통해 가능 (진짜?)
     * FFT 및 3차원 데이터 분석 기능 지원 (샘플 참조 필요)
     * 로그인시 (sys/manager) 잊지 말것 (매뉴얼 구석 구석 찾아야 나옴)

   데이터 기반 시스템 구축에 필요한 대부분의 데이터 인터페이스 기술과 개발시 많은 시간이 소요되는 영역을 커버한다니 놀랍습니다..
"
"https://news.hada.io/topic?id=9752","디스플레이포트: 더 나은 비디오 인터페이스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        디스플레이포트: 더 나은 비디오 인터페이스

     * 디스플레이포트: 컴퓨터 디스플레이와 다른 장치에서 점점 더 보편화되는 강력한 비디오 인터페이스
     * HDMI의 모든 기능을 갖추고 있으며, 더 나은 방식으로 구현되어 있으며, 유산이 없으며 추가 기능을 갖추고 있음
     * 디스플레이포트는 외부 모니터, 노트북 내부 디스플레이, USB-C 포트 디스플레이 지원, 도킹 스테이션 및 썬더볼트에서 사용됨
     * 데이터를 패킷으로 전송하여 VGA, DVI 및 HDMI와 같은 다른 인터페이스보다 유연함
     * 디스플레이포트는 해킹 가능하며, 사이드밴드 채널을 갖추어 하위 호환성과 저수준 제어를 제공함
     * 멀티스트림 전송을 지원하여 단일 링크 내에서 여러 비디오 스트림을 사용할 수 있음
     * 디스플레이포트는 내부 연결에서도 사용되며, 내장 디스플레이포트 표준(eDP)은 거의 모든 측면에서 DP와 호환됨
     * HDMI와는 다른 장점을 갖추고 있으며, 더 개방적이고 해커 친화적임
     * 동글을 사용하여 HDMI 호환 모드로 전환할 수 있어 두 인터페이스 간의 쉬운 변환 가능
     * 인텔과 AMD에 의해 일급 인터페이스로 인정받으며 휴대용 장치에서 널리 사용되는 사용자 친화적인 인터페이스

        Hacker News 의견

     * 디스플레이포트는 HDMI의 장치당 로열티를 피하는 비디오 인터페이스입니다.
     * 디스플레이포트는 VGA, DVI 및 HDMI와 다르며 알아두는 가치가 있습니다.
     * 디스플레이포트는 다른 인터페이스와 달리 데이터를 패킷으로 전송합니다.
     * 디스플레이포트는 하드웨어 구현을 간소화하고 신뢰성을 향상시킵니다.
     * 일부 KVM 스위치는 디스플레이포트와 잘 작동하지 않을 수 있습니다.
     * 디스플레이포트는 10년 이상 동안 존재하지만 아직 주류가 아닙니다.
     * 특정 고급 GPU 및 모니터 설정에는 HDMI가 디스플레이포트보다 좋을 수 있습니다.
     * 디스플레이포트의 패킷화는 데이터 스트림을 결합하는 등의 이점이 있지만, 잠재적인 단점은 언급되지 않았습니다.
     * 한 사용자가 데스크톱 독과 관련하여 오디오 문제가 발생할 수 있습니다.
     * 멀티-스트림 전송(MST)은 MacOS에서 지원되지 않는 OS 지원이 필요합니다.
     * 사용자는 신호 감지 및 방향 통신 기능이 더 빠른 모니터를 원합니다.
"
"https://news.hada.io/topic?id=9722","Threads 앱 내부 살펴보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Threads 앱 내부 살펴보기

Threadds Android App (72.3MB)

     * 유니버설 APK. Redex 사용
     * 디버그 코드 포함되어 있음
     * 일부는 React Native로 되어 있음 (Hermes)
     * UI는 Jetpack Compose를 많이 사용
     * 인스타그램 앱과 많은 부분을 공유

Threads iOS App (244.2MB)

     * 페이스북앱과 달리 동적 라이브러리가 전혀없음
     * 굉장히 큰 플러그인이 있음. BarcelonaShareExtension이 81MB ( InstagramNotificationExtension 이 23.5MB, InstagramShareExtension이 5.6MB 인데 비해)
     * 인스타그램의 FBSharedFramework 가 BarcelonaShareExtension 이랑 많은 부분을 공유

시작 시간 살펴보기

     * Sign-in 이 네이티브가 아니고 WebView(WKWebView)를 사용하고 있어서 느린것 같아 보임. 아님 백그라운드에서 뭔가 트래킹하거나
     * 개발시간을 단축하기 위해 iOS/Android 모두 인스타그램 앱과 많은 부분을 공유한 것으로 보임. 그게 바뀌는것을 보는 것도 재미날듯

   번역에 오류가 있어요..
   굉장히 큰 플러그인이 있음. BarcelonaShareExtension이 81MB // 참고로InstagramNotificationExtension 이 23.5MB, InstagramShareExtension이 5.6MB
   입니다

   아 네 수정해두었습니다.

   그놈의 웹앱...
     * 일부는 React Native로 되어 있음 (Hermes)
     * UI는 Jetpack Compose를 많이 사용

   대부분은 Jetpack Compose (Native)를 쓰고 일부는 React Native (웹앱)을 쓴다는 말인거 같은데요.

   React Native는 웹앱이 아닙니다. Sign-in이 웹이라는데 그건 공통 모듈일테니 어쩔 수 있는 부분이 아닐테고요. React라는 브랜드 떄문에 웹이라고 생각하신다면 말도 안되는 착각입니다.

   React Native는 웹앱이 아니구 네이티브 입니다

   전 그냥 일부라도 웹앱이 달린게 싫어서요.

   제가 앱 분야는 잘 모르지만
   요즘은 네이티브로 구현하는 것보다 웹앱으로 만드는 게 트렌드였던 것 같은데 아닐까요?..

   단순 트렌드라 웹앱 사용한 건 아닐거고 개발 기간 단축시키려고 사용했을 것 같습니다. 앞으로 운영하면서 점차 네이티브로 바뀔 것 같구요

   트렌드라고 해서 꼭 좋아해야만하는건 아니죠. 그리고 트렌드도 돌고돕니다.
   네이티브도 장단점이 있고 웹앱도 장단점이 있지만 제 취향이 웹앱이 아닐 뿐입니다.
"
"https://news.hada.io/topic?id=9771","GN⁺: 네덜란드 정부의 공식 Mastodon 서버 오픈 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    GN⁺: 네덜란드 정부의 공식 Mastodon 서버 오픈

     * 7월 12일 공식적으로 정부기관에서 사용하는 마스토돈 서버 인스턴스를 시작
     * 관련 맥락
          + 최근 네덜란드가 심한 폭풍을 겪으면서, 정부가 SMS-CB(재난문자)를 보냈는데, 일부 지역에서는 ""다음 Twitter 링크를 확인하세요"" 라는 내용을 포함하고 있었음
          + 그 시점에 트위터가 계정이 없는 사용자는 트윗을 볼 수 없도록 하던 시점이어서, 정부가 특정 기술기업의 서비스에 의존하는 것은 문제가 있다고 얘기가 나옴

GN⁺ 가 요약한 내용

     * 네덜란드 정부, 소셜 미디어 커뮤니케이션을 위한 자체 Mastodon 서버를 출시
     * 이번 조치는 정부의 가치 중심적인 디지털화에 대한 약속의 일환
     * 현재 서버에는 11명의 활성 사용자가 있음
     * 사용자들은 외국 상업 미디어에 의존하지 않고 정부의 중요 정보를 얻을 수 있는 대안으로 이번 이니셔티브에 열광
     * 서버에는 계정 디렉토리가 있지만, 사용자들은 자신의 계정을 공개할지 여부를 선택할 수 있음
     * 모든 지방자치단체와 안전 지역 등 정부 기관들도 이 Mastodon 서버로 이동해야 한다는 제안
     * 서버는 사용자들로부터 긍정적인 피드백과 지원을 받음
     * 정부의 Mastodon 이전은 더 개방적이고 독립적인 디지털 인프라로 가는 한 걸음으로 인식됨
     * 사용자들은 서버에 사용된 기술 스택에 대해 궁금해 함
     * 정부의 Mastodon 서버 출시가 The Verge와 같은 언론매체의 관심을 받음
     * 이번 조치는 진보적이고 투명한 정부를 위한 긍정적인 발전으로 인식됨
     * 사용자들은 다른 정부 기관들도 Mastodon 서버에 가입할 것을 기대함
     * 일부 사용자들은 포스트 삽입과 콘텐츠 전달 네트워크 사용과 같은 기술적인 질문과 개선 제안을 제기함
     * 전반적으로, 정부의 Mastodon 서버 출시는 정부 커뮤니케이션의 디지털화에 있어서 중요하고 흥미로운 한 걸음으로 인식됨.

   한국 공식 마스토돈 서버가 있으면 좋겠어요!

   우스갯소리로 K-마스토돈이 나오면 어떤 모습일까에 대한 얘기도 종종 나오는데 (물론 안 좋은 방향으로요...) 이런 거 보니 진짜로 있으면 좋을 것 같네요.

   페북에 갇혀있는게 답답해서 bytes.by 라는 마이크로 블로그를 만들었는데, mastodon 으로 이전하는 것도 고민해봐야겠네요.
     * 암스테르담 시는 올해초부터 자체 마스토돈 인스턴스를 운영중입니다 https://social.amsterdam.nl/@gemeenteamsterdam
     * 독일 연방 정부 또한 정부기관에서 사용하는 마스토돈 서버가 있습니다 https://social.bund.de/public/local
     * EU 에서도 하나 운영합니다 https://social.network.europa.eu/

        Hacker News 의견

     * 유럽 연합은 아직 아메리카와 중국 소유 플랫폼에 의존하고 있어 Mastodon을 채택하는 데 느린 반응을 보이고 있다.
     * 네덜란드 정부는 선출 공직자를 위한 서버로 Mastodon을 사용하는 것을 고려하고, 이를 통해 해당 국가가 게시된 콘텐츠를 통제할 수 있다.
     * 부적절한 콘텐츠로 가득한 Twitter보다 공식 커뮤니케이션에 Mastodon을 사용하는 것이 더 합리적이다.
     * 최근 네덜란드에서 발생한 심각한 폭풍으로 인해 정부 메시지에 Twitter와 같은 기술 기업에 의존하는 것은 문제가 될 수 있다.
     * 정부 지원의 연합 ID를 가지는 것은 보다 의미 있는 디지털 시민권 형태를 제공할 것이다.
     * 암스테르담 시와 독일 연방 정부는 이미 자체 Mastodon 서버를 운영하고 있다.
     * 연방 서버를 운영하는 지방 자치단체는 사용자 보장을 제공하고 서버 선택 문제를 해결할 수 있다.
     * 세금으로 지원되는 클라우드 스토리지와 디지털 커뮤니케이션 서비스와 같은 IT 책임을 더 맡는 정부는 사회에 이익을 제공할 것이다.
"
"https://news.hada.io/topic?id=9794","구글 Bard, 40개 언어 추가 지원, 음성 답변 및 Lens와 연동","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                구글 Bard, 40개 언어 추가 지원, 음성 답변 및 Lens와 연동

     * 아랍어, 중국어, 독일어, 힌디어, 스페인어등 40개 이상의 언어 지원 시작
     * 브라질/유럽등 사용 가능 국가들 추가
     * 음성으로 답변 듣기 지원(40개 이상의 언어)
     * 바드의 답변 톤과 스타일 지정 가능 : 단순, 긴, 짧은, 전문가, 캐주얼(영어만 가능하며 확장 예정)
     * 특정 답변에 Pin 하고 이름 붙인뒤 다시 보기 지원
     * 생성된 파이썬 코드를 Replit 으로 보내기 지원(기존 Colab에 추가로)
     * 바드 답변을 친구들에게 쉽게 공유 가능
     * 구글 렌즈와 연동하여 미지 업로드를 지원하며, 이미지+프롬프트로 명령 가능

   바드 들어 가봤는데, 한국은 이미지 업로드 버튼이 보이지 않네요
"
"https://news.hada.io/topic?id=9766","발레의 불변 지역 대여에 대한 첫 번째 프로토타입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      발레의 불변 지역 대여에 대한 첫 번째 프로토타입

     * 베일은 프로그래밍 언어에서 메모리 안전성에 대한 새로운 접근 방식인 변경 불가능한 영역 대여에 대한 프로토타입을 개발했습니다.
     * 이 프로토타입은 세대별 참조와 영역 대여를 결합하여 메모리 안전성 오버헤드를 제거하고 베일 코드를 매우 빠르게 만듭니다.
     * 영역 대여는 선택 사항으로, 프로그래머가 프로그램의 어느 부분을 최적화할지 선택할 수 있습니다.
     * 이 프로토타입은 벤치마크를 통해 검증되었으며, 불안전한 모드와 비교하여 어떠한 관찰 가능한 오버헤드도 보이지 않습니다.
     * 베일은 여전히 C 및 C++과 같은 언어와 경쟁하기 위해 베일 특정 사전 최적화기와 인라인 데이터 지원에 대해 작업해야 합니다.
     * 팀은 베일을 제품 수준의 언어로 만들기 위해 작업을 지원하고 도와줄 후원자를 찾고 있습니다.

        Hacker News 의견

- 다른 댓글러가 Vale에 관심을 표하고 RSS 피드를 구독하기 시작합니다.
- Vale 프로젝트를 지원하기 위해 더 많은 후원사를 모집합니다.
- 세대 참조의 맥락에서 ""안전""의 의미에 대한 질문이 제기됩니다.
- Vale의 사전 최적화와 Rust의 Cranelift를 비교합니다.
- Vale의 접근 방식이 성능과 안전을 결합한 점이 칭찬됩니다.
- 한 댓글러가 이 기사를 이해하기 어렵다며 설명을 요청합니다.
- Vale은 V와는 다른 언어임을 명확히 합니다.
- 마일스톤 달성을 축하하는 메시지가 Evan에게 전송됩니다.
- AOT 컴파일, 정적 타이핑, 메모리 안전 기법을 포함한 Vale의 기능과 이점에 대한 설명이 제공됩니다.```
"
"https://news.hada.io/topic?id=9768","GN⁺: GPT-Prompt-Engineer - GPT 프롬프트 엔지니어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                GN⁺: GPT-Prompt-Engineer - GPT 프롬프트 엔지니어

     * 프롬프트 엔지니어링은 마치 연금술과 비슷함: 뭐가 가장 효과적일지 예측할 수 있는 명확한 방법이 없음
     * 가장 적절한 프롬프트를 찾기 위해서는 계속 실험하는 수 밖에 없음
     * gpt-prompt-engineer는 이 실험을 훨씬 쉽게 만들어주는 도구
     * 작업에 대해 설명하고 간단한 테스트 케이스를 주면, 시스템이 여러개의 프롬프트를 생성,테스트,평가해서 가장 좋은 프롬프트를 찾아줌
     * 제공 기능
          + 프롬프트 생성 : GPT-4 와 GPT-3.5-Turbo 를 사용해서 다양한 프롬프트 생성
          + 프롬프트 테스팅 : 각 프롬프트를 테스트 케이스에 기반해서 테스팅하고 성능을 도출해서 ELO 레이팅 시스템으로 순위를 매김
          + ELO 레이팅 시스템: 각 프롬프트는 1200 ELO 등급으로 시작해서, 서로 경쟁하며 성능에 따라 변화. 이를 통해 어떤 프롬프트가 가장 우수한지 볼 수 있음
          + Classification 버전: 분류작업을 위해서 설계된 노트북. 각 테스트 케이스의 정확도를 평가해서 각 프롬프트의 점수를 테이블로 표시해줌
          + Weights & Biases Logging: 온도, 최대 토큰, 시스템/사용자 프롬프트, 테스트 케이스, 최종 ELO 등급 등의 값을 로깅 지원

GN⁺가 요약한 내용

     * 프롬프트 엔지니어링은 실험이 핵심인 연금술과 같다.
     * gpt-prompt-engineer는 프롬프트 엔지니어링을 새로운 수준으로 끌어올리는 도구이다.
     * GPT-4와 GPT-3.5-Turbo를 사용하여 사용 사례와 테스트 케이스에 기반한 프롬프트를 생성한다.
     * 시스템은 ELO 등급 시스템을 사용하여 프롬프트를 테스트하고 순위를 매긴다.
     * ELO 등급 시스템을 통해 가장 효과적인 프롬프트를 쉽게 확인할 수 있다.
     * gpt-prompt-engineer에는 분류 작업을 처리하는 분류 버전도 있다.
     * 테스트 케이스의 정확성을 평가하고 각 프롬프트에 대한 점수를 제공한다.
     * Weights & Biases에 대한 선택적 로깅을 통해 구성 및 순위를 추적할 수 있다.
     * gpt-prompt-engineer를 사용하려면 Google Colab 또는 로컬 Jupyter 노트북에서 노트북을 열어야 한다.
     * OpenAI API 키를 추가하고 적절한 모델 버전을 선택한다.
     * 사용 사례와 테스트 케이스를 정의한다.
     * 생성할 프롬프트의 수를 선택한다.
     * 프롬프트를 생성하고 테스트하기 위해 적절한 함수를 호출한다.
     * 최종 ELO 등급 또는 점수가 테이블에 표시된다.
     * 프로젝트에 기여는 환영한다.
     * 이 프로젝트는 MIT 라이선스가 적용된다.
     * 자세한 정보는 Matt Shumer에게 문의한다.

        Hacker News 의견

     * 실제 모델 응답을 기반으로 벤치마킹하지 않고, 대신 GPT4가 프롬프트의 성능을 상상하는 능력에 따라 순위를 매깁니다.
     * AI 개발자들 사이에서 이 도구의 인기는 LLMs를 평가하는 LLMs에 대한 매력 때문일 수 있지만, 실제 응용 프로그램에서의 성능 평가에는 단축키가 없습니다.
     * 프롬프트 엔지니어링은 전통적인 엔지니어링 분야와 같은 정확한 과학으로 간주되지 않습니다.
     * GPT-4와 이 도구를 사용하는 비용과 어려움, 그리고 최적의 프롬프트를 찾은 후에 프롬프트를 변경하는 것이 가치가 있는지에 대한 우려가 있습니다.
     * 프롬프트 엔지니어링을 위한 프롬프트 생성은 메타 엔지니어링의 한 형태로 볼 수 있습니다.
     * GPT-Engineer에 의한 사용자 데이터 수집과 그 동기에 대한 우려가 있습니다.
     * 일부는 인간의 입력을 더욱 줄이기 위해 GPT를 사용하여 프롬프트를 생성하는 것을 제안합니다.
     * 기사에서 프롬프트의 순위는 설명되지 않습니다.
"
"https://news.hada.io/topic?id=9751","리눅스 데스크톱 시장 점유율 3% 달성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         리눅스 데스크톱 시장 점유율 3% 달성

     * 리눅스, 데스크톱 시장 점유율 3% 달성
     * 리눅스, 데스크톱 컴퓨터 운영체제로서의 인기 증가 논의
     * 리눅스는 안정성, 보안성 및 오픈 소스 특성으로 알려져 있음
     * 3% 시장 점유율은 윈도우 및 macOS와 비교하면 작아 보일 수 있지만, 리눅스에게는 중요한 성과를 의미함
     * 리눅스 사용의 이점 강조, 맞춤 설정 옵션, 오래된 하드웨어와의 호환성, 다양한 소프트웨어 선택 가능성 등
     * 리눅스에 대한 관심 증가는 개발자 및 애호가들의 커뮤니티의 성장으로 설명됨
     * 리눅스는 프로프라이어리 운영체제에 대한 대안을 제공하며 소프트웨어 개발에 더 개방적이고 협력적인 접근을 장려함
     * 리눅스가 아직도 특정 하드웨어 및 소프트웨어 애플리케이션에 대한 제한된 지원을 받는 등의 어려움을 언급
     * 전반적으로, 이 기사는 리눅스를 소프트웨어 엔지니어들에게 유망한 옵션으로 소개하며, 그들이 데스크톱 컴퓨팅에 대한 잠재력을 탐색하도록 격려함.

        Hacker News 의견

     * 리눅스는 서버, 휴대폰, TV 및 스트리밍 스틱을 포함한 다른 모든 운영체제보다 많은 컴퓨터에 설치되어 있습니다.
     * 윈도우는 가장 큰 데스크톱 운영체제입니다. 그러나 회사는 리눅스로부터 더 많은 수익을 올리고 내부에서도 더 많은 리눅스 기기를 사용하고 있습니다.
     * 이 기사는 리눅스를 실행하는 스팀덱의 영향을 언급하지 않았습니다. 스팀덱은 300만 대를 판매하였습니다.
     * 리눅스의 데스크톱 상황은 혼란스럽습니다. 다양한 데스크톱 옵션과 X11과 같은 구식 기술이 있습니다.
     * 윈도우는 광고 및 스파이웨어로 변모하고 macOS는 더 제한적이 되어가고 있어서 리눅스는 매력적인 대안이 됩니다.
     * 일부 사용자는 소프트웨어와 도구가 플랫폼에서 지원되지 않아 리눅스로 전환하기를 망설이고 있습니다.
     * 리눅스는 클라우드 작업량과 임베디드 장치에서 우위를 점하고 있으며, 계속해서 성장할 것으로 예상됩니다.
     * 리눅스 데스크톱은 특히 인공지능과 데이터 과학 도구를 활용하는 전문 사용자들이 확장 가능성이 있습니다.
     * 리눅스 사용자들은 분석을 차단하는 경향이 있어서 보고된 시장 점유율이 과소표집될 수 있습니다.
     * 데이터에서 분류 변화가 있었으며, 사용된 방법론에 대한 의문이 제기되고 있습니다.
     * OpenBSD의 Chromium과 Iridium 바이너리는 이제 보안 제한을 우회하기 위해 리눅스로 식별됩니다. Firefox는 여전히 OpenBSD로 식별됩니다.
"
"https://news.hada.io/topic?id=9822","인도의 찬드라얀-3, 달의 물이 풍부한 남극을 탐사한다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    인도의 찬드라얀-3, 달의 물이 풍부한 남극을 탐사한다.

     * 인도, 달의 남극 탐사를 위한 찬드라야안-3 미션 발사
     * 미션은 달의 남극에 있는 물 보유량을 연구하여 영구 달 기지 설립에 도움을 줄 것을 목표로 함
     * 이전 찬드라야안-2 미션은 2019년 소프트웨어 결함으로 실패하여 착륙선이 달 표면에 충돌함
     * 찬드라야안-3은 찬드라야안-2 미션의 반복이지만, 궤도선은 없음. 착륙선과 로버는 지구와 직접 통신함
     * 미션은 8월 말에 달에 도착할 것으로 예상되며, 로버는 달 환경에서 2주간 지속될 것으로 예상됨
     * 이 미션은 인도의 우주 탐사에 대한 지속적인 노력을 대표하며, 향후 달 미션과 우주 연구에 기여할 수 있음

        Hacker News 의견

     * 인도의 찬드라얀-3, 달의 수분이 풍부한 남극을 탐사하기 위해 발사됨.
     * 우주 탐사에서 큰 도약을 이루는 모든 국가를 응원해야 함.
     * 인도의 낮은 예산으로 이루어진 우주 성취는 비웃음이 아닌 찬사를 받아야 함.
     * 인도의 우주 프로그램을 ESA나 NASA와 비교하는 것은 예산 차이로 인해 불공평함.
     * 인도의 우주 탐사 진전은 칭찬할 만함.
     * 인도는 대규모 항공 및 제조 산업을 갖추고 있음.
     * ISRO와 Brahmos는 항공 공학 인재를 역량 강화할 수 있음.
     * 인도는 항공 산업에 성공적으로 진출할 수 있는 좋은 위치에 있음.
     * 이 임무는 인도 경제를 촉진하고 국민에게 영감을 줄 것임.
     * 임무의 기술적 세부 사항은 ISRO 웹사이트에서 확인할 수 있음.
     * 임무의 최신 좌표에 대한 공개 API는 없음.
     * 로켓 발사 영상은 트위터에서 확인할 수 있음.
     * 독립적인 우주 프로그램을 가진 국가가 많을수록 더 좋음.
     * 우주 탐사는 인류의 최종적인 도전임.
     * 성공적인 발사는 인도인들에게 자랑과 영감의 원천임.
     * 임무의 어려운 부분은 착륙으로, 다음 달에 이루어질 것임.
     * 희망은 이번에 로버가 작동할 것임.
     * 다른 행성에 지능을 심는 것은 놀라운 성취임.
     * 물결이 모든 배를 끌어올림.
"
"https://news.hada.io/topic?id=9784","암호화폐 대출업체 Celsius Network 창립자, 사기 혐의로 체포","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                암호화폐 대출업체 Celsius Network 창립자, 사기 혐의로 체포

     * Celsius Network 창립자인 Alex Mashinsky는 고객을 오도하고 회사의 암호화폐 토큰 가치를 과장한 사기 혐의로 무죄를 주장했다.
     * Mashinsky는 암호화폐 가격 하락 이후 업계에서의 정리를 강조하는 여러 암호화폐 거물 중 한 명으로 기소되었다.
     * Celsius는 암호화폐 가격 하락 동안 예금 인출을 급히 요구한 고객들로 인해 2022년 파산 신청을 했다.
     * Mashinsky와 Celsius의 전 수익 책임자는 회사의 암호화폐 토큰과 관련된 시장 조작과 와이어 사기 혐의로 기소되었다.
     * 미국 증권거래위원회(SEC)는 미등록 암호화폐 증권의 판매와 회사의 재무 상태에 대한 투자자의 오도를 주장하며 Mashinsky와 Celsius를 고소했다.
     * 미국 상품선물거래위원회와 연방거래위원회도 Celsius와 Mashinsky를 고소했다.
     * Celsius는 미 정의부와 비고소 협정 및 연방거래위원회와의 합의에 동의했다.
     * 암호화폐 업계는 Binance와 Coinbase에 대한 소송을 포함한 규제적 도전을 직면했지만, Ripple Labs에 관한 연방법원 판결에서 승리를 거두었다.
     * 이 기사는 금융 기술과 암호화폐를 다루는 기자인 Luc Cohen과 Hannah Lang이 작성했다.

        Hacker News 의견

     * 암호화폐 대출업체 Celsius Network의 창립자가 사기 혐의로 체포되었습니다.
     * 기자들은 기사에 법원 문서를 링크할 것을 요구하고 있습니다.
     * SEC의 사건 개입이 의문과 비판을 받고 있습니다.
     * 창립자에 대한 혐의는 불법 거래, 사기 및 시장 조작을 포함하고 있습니다.
     * 암호화폐의 미래가 의문을 제기하고 일부 사람들은 이것이 사기꾼의 낙원이라고 믿고 있습니다.
     * 체포에 대한 미국 법무부의 개입이 명확해졌습니다.
     * 사기꾼들의 사고 과정과 잠재적인 도피 계획에 대한 추측이 있습니다.
     * 일부 사람들은 암호화폐 사기꾼과 형제들을 위한 민간 감옥을 제안하고 있습니다.
     * 창립자의 아내의 행동이 세심하게 조명되고 있습니다.
     * 암호화폐 산업의 많은 주요 플레이어들이 법적 문제와 운영 중단에 직면하고 있습니다.
"
"https://news.hada.io/topic?id=9699","홈브루의 분석은 EU로 이동하고 Google로부터 멀어졌습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  홈브루의 분석은 EU로 이동하고 Google로부터 멀어졌습니다.

     * Homebrew, 소프트웨어 패키지 관리자, 분석을 구글에서 EU로 이전하였습니다.
     * Homebrew는 InfluxDB를 사용하여 익명의 분석 데이터를 수집하여 사용자가 Homebrew를 어떻게, 어디서, 언제 사용하는지에 따라 수정 및 기능을 우선순위로 정합니다.
     * 분석 데이터에는 OS 버전, CPU 아키텍처, Homebrew 버전 및 설치 및 빌드 오류와 같은 이벤트와 같은 정보가 포함됩니다.
     * 이전에 Google Analytics로 전송되었던 분석 데이터는 삭제되었습니다.
     * Homebrew의 분석 데이터는 InfluxDB에서 365일 동안 보관됩니다.
     * Homebrew의 분석 코드는 analytics.rb 및 analytics.sh에서 확인할 수 있습니다.
     * 사용자는 환경 변수에서 HOMEBREW_NO_ANALYTICS 변수를 설정하거나 ""brew analytics off"" 명령을 사용하여 Homebrew의 분석을 비활성화할 수 있습니다.

        Hacker News 의견

     * Homebrew의 분석은 그들의 InfluxDB 인스턴스로 이전되었으며 Google로부터 멀어졌다.
     * 새로운 분석 시스템은 더 적은 데이터를 수집하며 모든 Google Analytics 데이터가 삭제되었다.
     * 사용자는 brew analytics off 명령으로 분석을 비활성화할 수 있다.
     * Homebrew 팀은 Google Analytics로부터 멀어지기로 한 약속을 지키는 데 칭찬받고 있다.
     * 일부 사용자는 Linux의 apt와 같은 다른 패키지 관리자보다 Homebrew를 선호한다는 의견을 표명한다.
     * brew.sh와 같은 사이트가 apt 패키지를 검색하는 데 필요한지에 대한 논의가 진행 중이다.
     * 일부 사용자는 패키지 관리자가 분석을 수집해야 하는 필요성을 의문으로 제기하며 데이터 프라이버시에 대한 우려를 표명한다.
     * Google Analytics로부터 멀어지는 것은 가치 있는 통찰력을 제공하고 Google의 데이터 수집을 방해한다고 믿는 일부 사용자들에 의해 비판받고 있다.
     * Homebrew가 Debian과 같은 윤리적이고 선택적인 분석 모델을 채택하는 제안이 있다.
     * Homebrew의 분석의 개인정보 문제와 사용자 장치에 지속되는 슈퍼쿠키에 대한 우려가 제기되고 있다.
     * 일부 사용자들은 명령 줄 도구에서 분석 추적을 멀어지는 것을 감사히 여긴다.
"
"https://news.hada.io/topic?id=9805","실제로 이식 가능한 실행 파일을 빌드하기 위해 GCC를 패치하는 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 실제로 이식 가능한 실행 파일을 빌드하기 위해 GCC를 패치하는 것

     * 소프트웨어 엔지니어가 GCC에 대한 패치를 작성하여 Cosmopolitan Libc를 사용하여 실제로 이식 가능한 실행 파일을 간소화했습니다.
     * 이 패치를 통해 bash, curl, git 및 gcc 자체와 같은 인기 있는 소프트웨어를 소스 코드를 변경하지 않고 Cosmopolitan Libc로 빌드할 수 있습니다.
     * 빌드된 실행 파일은 Linux, FreeBSD, MacOS, OpenBSD, NetBSD 및 일부 경우에는 Windows에서 실행할 수 있습니다.
     * 이 기사에서는 자신의 소프트웨어를 Cosmopolitan Libc로 이식하는 방법에 대한 단계별 지침을 제공합니다.
     * 이 패치는 시스템 값에 의존하는 switch 문과 구조체 초기화의 문제를 해결합니다.
     * 저자는 처음에는 C 전처리기와 ifdef 때문에 sed 및 Python 스크립트를 사용하여 변환을 자동화하려고 시도했지만 완전히 작동하지 않았습니다.
     * 그런 다음 저자는 GCC 플러그인을 사용하고 문제를 해결하기 위해 GCC 자체를 패치하는 방법을 탐구했습니다.
     * 패치된 GCC를 사용하여 Cosmopolitan Libc로 소프트웨어를 빌드할 수 있으므로 이식 프로세스가 더 쉽고 원활해집니다.
     * 저자는 성공적으로 lua를 빌드하고 python3.11에서 ZIP 저장소에 액세스하기 위한 변경을 수행했습니다.
     * 문자열 배열을 룩업 테이블로 사용하는 busybox를 빌드하는 동안 저자는 어려움을 겪었습니다.
     * 이진 표현식 때문에 ncurses에서 구조체 초기화에 대한 도전도 있었습니다.
     * 저자는 대부분의 경우 Cosmopolitan Libc로 소프트웨어를 이식하는 데 필요한 변경이 최소하다고 결론을 내렸습니다.
     * 저자는 패치가 완벽하지 않을 수 있으며 일부 제한 사항이 있을 수 있다고 인정합니다.
     * 저자는 독자들에게 C 소프트웨어를 Cosmopolitan Libc로 빌드해 보라고 권장합니다.
     * 저자는 실행 파일을 Windows에서 실행할 수 있는 가능성에 대해 언급했지만 테스트하지 않았습니다.
     * 저자는 추가 정보와 참고 자료를 제공합니다.

   이제 neo는 메세지를 코드블럭으로 감싸는 포맷으로 가나요? 횡스크롤을 해야됨과 붉은 색 계열의 텍스트 컬러가 조금 아쉽군요...

   아흑 코드블럭으로 감싸지는 것은 버그입니다 ㅠ

        Hacker News 의견

     * 작가가 GCC를 패치하여 실제로 이식 가능한 실행 파일을 빌드하는 방법에 대해 게시물을 작성했습니다.
     * 이 패치를 통해 vim, emacs, ninja, bash, git 및 gcc와 같은 소프트웨어를 Cosmopolitan Libc로 빌드할 수 있습니다.
     * 빌드된 실행 파일은 Linux, FreeBSD, MacOS, OpenBSD, NetBSD 및 Windows에서 실행될 수 있어야 합니다.
     * 작가는 이 기술을 사용하여 빌드할 수 있는 소프트웨어 목록을 제공합니다.
     * Go 저장소에는 이 주제에 대한 티켓이 있습니다.
     * 한 댓글러는 새로운 OS 대상을 빌드하는 다른 접근 방식을 제안합니다.
     * 다른 댓글러는 이 기술을 사용하여 성공적으로 컴파일된 소프트웨어 목록을 게시하는 것을 제안합니다.
     * 누군가는 실제로 이식 가능한 실행 파일의 실용적인 목적에 대해 의문을 제기합니다.
     * 다른 댓글러는 코드에서 상수를 처리하는 다른 접근 방식을 제안합니다.
     * 시그널 번호와 errno의 사용에 대한 토론이 있습니다.
     * 누군가는 C++ 표준 라이브러리와 그 std::error_code의 사용을 의문합니다.
     * 한 댓글러는 이 주제를 놀라운 것으로 생각합니다.
     * 컴파일 시간 상수 EINVAL에 대한 토론이 있습니다.
"
"https://news.hada.io/topic?id=9812","Paul Graham의 최신글: How to Do Great Work 번역","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Paul Graham의 최신글: How to Do Great Work 번역

   폴 그라함의 최신글: 어떻게 위대한 일을 하는가를 한글로 번역.
"
"https://news.hada.io/topic?id=9811","인터넷 아카이브, 플래시 지원 확대","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          인터넷 아카이브, 플래시 지원 확대

     * 인터넷 아카이브의 플래시 에뮬레이션은 자원봉사자들의 노력 덕분에 큰 발전을 이루었습니다.
     * 에뮬레이션은 이제 음소거/음소거 해제 기능과 애니메이션 정보에 기반한 화면 크기 조정을 지원합니다.
     * 멀티-SWF 플래시가 가능해져 이전에 ""고장난"" 플래시를 컬렉션에 추가할 수 있게 되었습니다.
     * 플래시 애니메이션의 쇼케이스가 사람들이 즐길 수 있습니다.
     * 에뮬레이션은 Ruffle 프로젝트를 기반으로 합니다.
     * 인터넷 아카이브의 플래시 라이브러리에는 만화와 게임을 포함한 다양한 창작물이 있습니다.
     * 플래시 콘텐츠의 보존은 초기 리치미디어 인터넷의 문화적 유산을 보존하는 데 중요합니다.

        Hacker News 의견

     * 홈 스타 러너와 같은 플래시 비디오는 미니게임과 선택할 수 있는 모험 이야기와 같은 상호작용 요소를 결합한 독특한 매체였다.
     * 플래시 애니메이션은 넷플릭스의 선택할 수 있는 모험 형식과 같은 다른 매체에서 얻을 수 없는 이야기 진행의 유연성을 제공했다.
     * 플래시 만화에 대한 YouTube 동영상의 저자는 댓글러가 그런 만화를 체험하고 싶어하게 만들었으며, 인터넷 아카이브와 같은 곳이 그것을 가능하게 하고 있다는 것에 만족한다.
     * 플래시는 현재의 웹사이트 제작 도구와는 달리 예술가와 창작자, 코딩 사이의 격차를 좁히는 데 기여한 민주화 도구였다.
     * ""곰돌이 푸의 홈런 더비""와 같은 플래시 게임은 매우 추천되며 도전적인 것으로 여겨졌다.
     * 인터넷 아카이브는 플래시 에뮬레이터로 Ruffle을 사용하는 것으로 보인다.
     * 일부 댓글러들은 플래시가 더 강력했기 때문에 좋은 대안이 나오기 전에 폐기되어서 슬퍼한다.
     * BlueMaxima는 Flashpoint Ultimate와 Flashpoint Infinity라는 두 개의 플래시 에뮬레이터를 만든다.
     * 구글이 플래시를 폐기함으로써 웹 콘텐츠를 효과적으로 색인화하기 위해 플래시 웹사이트가 구글에게 콘텐츠를 수집하기 어렵게 만들었다는 추측이 있다.
     * 댓글러들은 플래시와 매크로미디어 스위트에 대한 향수를 나누며, 그것이 제공한 창의적인 이야기 진행 가능성에 대해 회상한다.
     * 인터넷 아카이브의 플래시 소프트웨어 라이브러리에 항목을 추가하는 방법과 어떤 컬렉션에 넣어야 하는지에 대한 질문이 있다.
"
"https://news.hada.io/topic?id=9697","TypeScript 런타임 유형을 제공해 주세요.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      TypeScript 런타임 유형을 제공해 주세요.

     * TypeScript 사용자들은 런타임 타입 정보를 생성할 수 있는 기능을 요청하고 있습니다.
     * 런타임 타입 정보의 부재로 인해 직렬화와 유효성 검사가 과도한 보일러플레이트 코드나 코드 생성 없이 어렵습니다.
     * io-ts와 zod와 같은 기존 솔루션은 모든 사용 사례에 충분하지 않습니다.
     * TypeScript 사용자들은 직렬화 문제를 해결하고 가이드를 제공하거나 라이브러리를 추천하는 TypeScript 팀의 우선 순위를 촉구하고 있습니다.
     * TypeScript의 설계 목표와 런타임 타입 정보의 필요 사이에 충돌이 있는 것으로 보입니다.
     * 사용자들은 인터페이스를 사용하는 것을 선호하기 때문에 이 문제를 데코레이터로 해결하고 싶어하지 않습니다.
     * F# Type Providers나 C# Source Generators와 유사한 고차 함수나 기능은 환영받을 것입니다.
     * 작성자는 TypeScript 팀이 이 문제를 해결한다면, 가능하면 TypeScript 4.3에서, 케이크와 아이스크림을 보내겠다고 약속합니다.

        Hacker News 의견

     * TypeScript에서 reflection/runtime 유형에 대한 요청에 대한 논의
     * 일부 댓글 작성자들은 기사의 문제 제기가 명확하지 않고 서투르다고 생각합니다.
     * TypeScript의 역할은 JavaScript로 컴파일하는 것이며, 런타임 유형 안전성을 제공하지 않습니다.
     * TypeScript 프로젝트는 강력한 유형 주석과 런타임 유형 유효성 검사 로직을 구축하기 위해 노력합니다.
     * 일부 댓글 작성자들은 TypeScript에 런타임 유형 검사를 추가하는 것에 반대하며, 이는 JavaScript 위에 새로운 언어를 만들게 될 것이라고 주장합니다.
     * JavaScript에서 런타임 유형 유효성 검사를 위한 기존 라이브러리가 있으며, 요청은 규범적인 선택을 만드는 것입니다.
     * 일부 댓글 작성자들은 런타임 유형 검사를 위해 타입 가드나 외부 라이브러리를 사용하는 것을 선호합니다.
     * TypeScript의 설계 목표는 열거형을 제외하고 JavaScript와 런타임 의미론이 동일하도록 하는 것입니다.
     * TypeScript 주변 생태계는 완전한 유형 소거에 의존하고 있으며, 런타임 유형을 추가하기 위해서는 기존 도구에 상당한 변경이 필요합니다.
     * 일부 댓글 작성자들은 다른 정적 타입 언어와 비교했을 때 TypeScript의 제한에 대해 불만을 표명합니다.
     * 한 명의 댓글 작성자는 TypeScript 유형의 자동 직렬화 및 역직렬화를 요청하는 것은 라이브러리로 구현될 수 있다고 제안합니다.
"
"https://news.hada.io/topic?id=9734","대부분의 클래식 비디오 게임이 이용 불가능한 것으로 밝혀진 새로운 연구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                대부분의 클래식 비디오 게임이 이용 불가능한 것으로 밝혀진 새로운 연구

     * 새로운 연구 결과, 클래식 비디오 게임의 87%가 완전히 구할 수 없다는 것을 밝혀냈다.
     * 현재 시장에서 비디오 게임 역사의 단 13%만이 대표되고 있다.
     * 클래식 게임에 접근하는 옵션은 수집용 게임과 하드웨어를 찾거나 도서관을 방문하거나 해킹을 하는 것으로 제한되어 있다.
     * 구식 저작권 법률로 인해 도서관과 기록 보관소에서 비디오 게임을 보존하고 공유하는 것이 제한된다.
     * 이 연구는 비디오 게임을 보존하는 도서관과 기관에 대한 예외 규정을 확대하고자 한다.
     * 비디오 게임 산업의 로비 단체는 도서관과 기록 보관소에서 비디오 게임 보존을 확대하는 것에 반대하고 있다.
     * 디지털 밀레니엄 저작권법에 따른 다음 규제 절차는 2024년에 예정되어 있으며, 이 연구는 더 많은 게임이 손실되기 전에 변화를 일으키기를 희망한다.
     * 전체 연구와 추가 자료는 더 읽어볼 수 있다.

        Hacker News 의견

     * 저작권 문제와 재발매 부재로 많은 클래식 비디오 게임들이 이용 불가능합니다.
     * 스트리밍과 온디맨드 콘텐츠 전달도 오래된 콘텐츠의 이용 불가능에 기여합니다.
     * 해적은 종종 오래된 게임과 미디어에 접근하고 보존하기 위한 최선의 선택으로 여겨집니다.
     * 에뮬레이션은 오래된 게임을 플레이하는 인기 있는 방법이지만, 호환성을 유지하기 위해 노력이 필요합니다.
     * 저작권 법률은 현대 세계에 적응하여 오래된 작품에 대한 접근을 더 쉽게 해야 합니다.
     * 연결 요구 사항과 서버 지원 부재도 특정 게임의 접근성 부재에 기여합니다.
     * 앱 스토어 초기에 출시된 일부 아이폰 게임들은 제거되어 더 이상 이용할 수 없습니다.
     * 저작권 문제와 불명확한 소유권으로 인해 오래된 게임과 플랫폼의 보존은 어려울 수 있습니다.
     * My Abandonware와 같은 웹사이트들은 오래된 게임에 접근할 수 있도록 제공하지만, 완전한 컬렉션을 보유하지 않을 수 있습니다.
"
"https://news.hada.io/topic?id=9776","PostgreSQL로 검색 엔진 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         PostgreSQL로 검색 엔진 만들기

     * PostgreSQL 자체 검색 엔진을 만들기 위한 구성 요소 제공
     * 주요 구성 요소는 tsvector 및 tsquery 데이터 유형, 일치 연산자 @@, 일치 결과 순위 매기기 함수 및 GIN 인덱스 유형
     * tsvector는 정규화된 어휘와 원본 텍스트에서의 위치를 저장
     * tsquery는 정규화된 쿼리를 나타내며 논리 연산자를 사용하여 여러 용어를 결합할 수 있음
     * GIN 인덱스 유형은 tsvector의 효율적인 쿼리를 위해 사용됨
     * ts_rank 및 ts_rank_cd는 용어 빈도와 근접성을 고려하는 순위 매기기 함수
     * 관련성 조정을 통해 특정 기준에 따라 검색 결과를 사용자 정의할 수 있음
     * 숫자, 날짜 및 정확한 값 부스터를 순위 점수에 추가할 수 있음
     * 열 가중치를 할당하여 검색 결과에서 특정 용어를 우선시할 수 있음
     * 제목 열에 setweight를 사용하면 ""jedi""라는 단어가 포함된 영화 제목의 순위가 향상됨
     * PostgreSQL은 직접적으로 퍼지 검색이나 오타 허용을 지원하지 않지만 유사성이나 Levenshtein 거리를 사용하여 구현할 수 있음
     * 사용자가 검색 범위를 좁히는 데 도움이 되는 패싯 검색은 카테고리 정의 또는 알고리즘을 사용하여 PostgreSQL에서 구현할 수 있음
     * 이 기사는 Elasticsearch와의 자세한 비교가 제2부에서 이루어질 것을 언급하며 마무리됨

        Hacker News 의견

     * PostgreSQL와 Elasticsearch를 비교하는 제2부에 대한 기대감
     * CRUD 및 검색을 위해 PostgreSQL과 Elasticsearch를 동기화하는 노력을 과소평가했습니다.
     * 검색 엔진은 빠른 검색 속도가 필요합니다. 이는 단순히 이론상으로만 중요한 것이 아닙니다.
     * 기본적인 CS 알고리즘과 하드웨어 활용으로 기본 데이터베이스와 검색 엔진을 쉽게 생성할 수 있습니다.
     * 검색의 주관적인 특성이 가장 큰 도전입니다.
     * Postgres는 임베딩을 통해 관련 콘텐츠를 찾기 위해 pgvector와 결합될 수 있습니다.
     * Postgres 내부 검색은 CPU 부하가 크며, 트랜잭션 업데이트가 우선되어야 합니다.
     * ES와 Solr 클러스터는 재인덱싱 중에 높은 CPU 사용률로 작동합니다.
     * 검색, 재귀 조인 및 벡터를 위한 PG 확장은 사이드 프로젝트에 재미있고 간단합니다.
     * SQLite도 고급 인덱싱 및 어간 추출 기능을 제공합니다.
     * 비즈니스 로직을 데이터베이스로 추상화하지만, 트레이드오프는 언급되지 않았습니다.
     * 특정 북마크된 사이트를 위해 사용자 정의 검색 엔진을 실행하는 것을 고려하고 있습니다.
     * Postgres/Elasticsearch 또는 상용 솔루션을 선택해야 할지에 대한 호기심이 있습니다.
     * ""고급""이라는 단어는 긍정적인 지표로 간주됩니다.
"
"https://news.hada.io/topic?id=9753","SUSE, RHEL을 포크한 엔터프라이즈 리눅스를 만들고 지속적으로 유지보수 하겠다고 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           SUSE, RHEL을 포크한 엔터프라이즈 리눅스를 만들고 지속적으로 유지보수 하겠다고 발표

     * SUSE가 직접 RHEL(Red Hat Enterprise Linux) 및 CentOS 사용자를 위한 호환 배포판을 만들 것
     * 향후 몇년간 $10m(130억원)이상을 투자할 예정
     * 해당 프로젝트는 오픈소스 재단에 기부할 계획
     * 기존 openSUSE 및 SLE(SUSE Linux Enterpise)와 함께 유지하며, 엔터프라이즈 고객들이 벤더락인 없이 선택할 수 있도록 할 것
       → 작년에 발표한 SUSE Liberty Linux를 강화하는 것

GN⁺가 요약한 내용

     * SUSE, 글로벌 기업용 오픈 소스 솔루션의 선두주자, RHEL(레드햇 엔터프라이즈 리눅스)을 공개적으로 포크하여 RHEL과 호환되는 배포판을 개발 및 유지할 계획입니다.
     * SUSE는 혁신을 보존하고 고객과 오픈 소스 커뮤니티에 선택의 자유와 공급업체 잠금 해제를 제공하기 위해 이 프로젝트에 1,000만 달러 이상을 투자할 계획입니다.
     * SUSE는 SUSE Linux Enterprise (SLE) 및 openSUSE와 같은 높이 평가받는 Linux 솔루션에 대한 헌신을 유지하면서 RHEL 및 CentOS 사용자들을 위한 선택과 호환성의 필요성을 인정합니다.
     * SUSE는 이 프로젝트를 오픈 소스 재단에 기여하여 대체 소스 코드에 대한 지속적인 무료 액세스를 보장할 계획입니다.
     * 이 협력적인 노력은 SUSE의 기업용 리눅스, 클라우드 컴퓨팅, 컨테이너화, 엣지 컴퓨팅, AI/ML 및 기타 신흥 기술에서 혁신과 커뮤니티 주도 개발에 대한 헌신을 보여줍니다.
     * 기업용 리눅스 커뮤니티는 표준화, 안정성 및 일관성을 필요로 하며, SUSE의 CIQ 및 기타 유사한 기업과의 협력은 오픈 기업용 리눅스 표준을 진전시키기 위한 목표를 가지고 있습니다.
     * SUSE는 커뮤니티에게 이 중요한 소프트웨어의 미래를 형성하는 데 적극적으로 참여하고 협력할 것을 초대합니다.
     * 이 개발은 Liberty Linux를 강화하고 소프트웨어 엔지니어들에게 참여하고 프로젝트에 기여할 수 있는 새로운 기회를 제공합니다.

   돈이.. 많나요..?

   SUSE 는 수익 모델이 괜찮은걸까요…

   현재 SUSE의 CEO인 Dirk-Peter van Leeuwen은 RedHat에서 18년간 VP로 일했고, 올해 5월부터 SUSE에 CEO로 조인했습니다.
   https://www.linkedin.com/in/dpvanleeuwen/details/experience/

   즉, RedHat의 내부에 대해서 엄청 잘 알고 있는 인물이라는 얘기

        Hacker News 의견

     * SUSE가 RHEL을 포크하면서 IBM/Red Hat의 RHEL에 신뢰할 만한 위협이 될 수 있습니다.
     * 많은 기업들은 여전히 RHEL 호환성을 따르지만, 오늘날에는 그 의미가 없을 수도 있습니다.
     * RHEL의 ""안정 버전이지만 패치를 백포트합니다""라는 말은 구식이며 시스템 오류로 이어질 수 있습니다.
     * 사람들은 Debian, Nix, Arch와 같은 다른 옵션이 있는데 왜 RHEL 호환성이 바람직한지 의문을 제기합니다.
     * SUSE는 이 투자가 혁신을 보존하고 공급업체에 의존하지 않는 진정한 선택을 제공할 것이라 주장합니다.
     * 일부는 SUSE가 이전에 공급업체에 의존하여 SLES 가격을 학계에 인상시킨 것에 대해 비판합니다.
     * SUSE의 발표 동기와 그것이 오픈 소스 커뮤니티에 실제로 이로운지에 대한 의문이 있습니다.
     * SUSE와 유사한 발표를 한 Oracle과의 조정에 대한 추측이 있습니다.
     * SUSE의 이동은 Red Hat의 전략을 위험하게 보이게 할 수 있지만, 반드시 어리석은 것은 아닙니다.
     * Alma, Rocky, SUSE, Oracle이 협력하여 자원을 공유하는 것이 제안되고 있습니다.
     * 일부는 IBM/Red Hat의 행동과 그들이 ""나쁜 사람들""인지에 대해 의문을 제기합니다.
     * SUSE의 Rancher 인수와 k3os 중단과 같은 과거 행동은 오픈 소스 프로젝트에 대한 헌신에 대한 우려를 불러일으킵니다.
     * 일부는 SUSE의 RHEL-클론 문제에 대한 참여가 그들 자신의 배포판의 가치를 떨어뜨린다고 믿습니다.
"
"https://news.hada.io/topic?id=9748",""Let's Encrypt 신뢰 체인 단축"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ""Let's Encrypt 신뢰 체인 단축""

     * Let's Encrypt: 웹사이트를 위한 널리 신뢰받는 인증서를 제공하는 인증 기관
     * IdenTrust의 DST Root CA X3에 의해 처음에 교차 서명된 인증서는 신뢰를 보장하기 위해 사용되었습니다.
     * Let's Encrypt 자체 루트 인증서인 ISRG Root X1은 오랜 기간 동안 널리 신뢰받게 되었습니다.
     * 교차 서명된 중간 인증서와 DST Root CA X3는 2021년 말에 만료됩니다.
     * 구형 Android 기기와의 호환성을 유지하기 위해 Let's Encrypt의 루트에 직접 교차 서명이 적용될 예정입니다.
     * 새로운 교차 서명은 2024년 9월 30일에 만료됩니다.
     * ISRG Root X1을 신뢰하는 Android 기기의 비율은 지난 3년 동안 66%에서 93.9%로 증가했습니다.
     * Android 버전 14는 ISRG Root X1에 대한 신뢰를 더욱 높일 것입니다.
     * 교차 서명을 제거하면 TLS 핸드셰이크에서 전송되는 인증서 바이트가 40% 이상 감소하고 운영 비용이 절감됩니다.
     * 이전에 교차 서명을 사용하던 기능은 2024년 2월에 기본 설정에서 중단되며, 2024년 6월에 완전히 제거될 예정입니다.
     * 사이트 운영자는 웹사이트 사용 통계와 사용자 에이전트 문자열을 모니터링하여 Android 사용자와 관련된 잠재적인 문제를 식별해야 합니다.
     * Android 7.0 이전 버전 사용자는 Let's Encrypt로 보호된 웹사이트에 접속하기 위해 Firefox Mobile을 사용해야 할 수 있습니다.
     * ACME 클라이언트 개발자는 인증서 체인의 올바른 다운로드와 설치를 보장해야 합니다.
     * Let's Encrypt는 IdenTrust의 지원과 파트너십에 감사드립니다.
     * Let's Encrypt의 작업을 지원하기 위해 기여와 후원을 환영합니다.

        Hacker News 의견

     * Let's Encrypt의 신뢰 체인을 줄이기 위한 전환은 커뮤니티 피드백을 기반으로 지연되었습니다.
     * Let's Encrypt 인증서의 Android 및 iOS 기기 지원 범위는 다릅니다.
     * Apple은 사용자들에게 운영 체제 업데이트를 설득하는 데 더 잘하고 있습니다.
     * 오래된 교차 서명을 유지하는 해결책은 흥미롭고 신뢰 앵커에 의존합니다.
     * 교차 서명된 인증서의 만료는 일부 사용자에게 문제를 일으킬 수 있습니다.
     * Let's Encrypt의 운영 비용은 전환으로 인해 감소될 것입니다.
     * 인증서 만료로 인해 일부 사용자는 Let's Encrypt에서 ZeroSSL로 전환해야 했습니다.
     * 무료 인증서 제공은 규칙과 사용자 의존성에 변화를 가져올 수 있습니다.
     * TLS는 지속적인 변경과 만료로 인해 웹의 가장 취약한 구성 요소로 간주됩니다.
     * Let's Encrypt가 교차 서명을 위한 인증서 회사를 찾은 배경은 알려지지 않았습니다.
     * Let's Encrypt의 교차 서명 중간 인증서와 DST Root CA X3의 만료는 ubiquiti 사용자를 포함한 일부 사용자에게 영향을 미쳤습니다.
"
"https://news.hada.io/topic?id=9792","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   고양이 전시 보러갈거예요

   이번주부터 교대로 여름 휴가를 갑니다. 긱뉴스에 뉴스는 계속 올리겠지만, 좀 쉬는 시간을 가지고 올께요~

   와이프 노트북이 랜섬웨어에 걸렸네요... 이번주말은 새로설치하는 작업을 해야할거 같네요 ㅜ.ㅜ

   으악 잘 해결 되시길 바랍니다
"
"https://news.hada.io/topic?id=9714","파스칼을 사용하는 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              파스칼을 사용하는 이유

     * Object Pascal: 현대적이고 가독성이 높으며 빠르고 타입 안전한 크로스 플랫폼 프로그래밍 언어
     * 클래스, 유닛, 프로퍼티, 제네릭, 인터페이스, 리플렉션, 클로저 등 모던 OOP 언어에서 기대할 수 있는 모든 기능을 지원합니다.
     * 문법은 가독성을 강조하며 언어는 추가적인 런타임 체크와 함께 타입 안전합니다.
     * Object Pascal은 네이티브 코드로 컴파일되어 ""바로 사용 가능""하며 필요에 따라 저수준으로 사용할 수 있습니다.
     * 컴파일도 빠르며, 새로운 프로젝트의 데스크탑 빌드는 2.5초, 안드로이드 빌드는 10.1초가 소요됩니다.
     * Object Pascal은 데스크탑, 모바일, 콘솔 및 웹 플랫폼을 지원하는 크로스 플랫폼입니다.
     * Castle Game Engine의 경우, 엔진 코드와 게임 코드가 동일한 언어로 작성되어 모든 사용자가 기여자가 됩니다.
     * Object Pascal은 다양한 목적을 위한 기존 라이브러리가 있으며, C API를 가진 기존 라이브러리와 쉽게 통합할 수 있습니다.
     * Object Pascal을 위한 도구 생태계도 존재하며, Free Pascal Compiler (FPC), Lazarus IDE, Delphi 컴파일러 및 IDE를 포함합니다.
     * Object Pascal은 VS Code 및 Pascal 생태계의 다른 도구와 통합을 지원합니다.

   델파이.. 추억돋네요. 볼랜드, 델마당..

   윈도우 개발 하던 시절엔 정말 Object Pascal with Delphi 가 최고였던 것 같습니다.

        Hacker News 의견

     * Lazarus: 오픈 소스 Delphi 재구성으로, Raspberry Pi 및 ARM 보드를 포함한 다양한 플랫폼에서 원시 실행 및 컴파일이 가능합니다.
     * FpcUp 및 FpcUpDeluxe: Lazarus IDE 및 기타 모듈 설치 작업을 자동화하기 위해 개발되었습니다.
     * FpcUpDeluxe: Alpine Linux에서 작동하여 작은 시스템에 계측 패널을 추가할 수 있습니다.
     * FreePascal: 특히 제한된 공간에서 코딩하기에 현대적이고 즐거운 언어입니다.
     * 일부 사용자는 깨끗한 출발과 새로운 표준 라이브러리를 갖춘 FreePascal의 하위 언어를 선호합니다.
     * Pascal은 90년대에 인기있는 언어였지만, 많은 사용자들이 관리 부실로 인해 지치고 C#과 같은 다른 언어로 전환했습니다.
     * Pascal은 자원 제약 때문에 여전히 저수준 유틸리티, 간단한 게임 및 임의의 해킹에 사용됩니다.
     * Object Pascal은 현대적인 언어로 간주되지 않으며 1998년 이후 크게 발전하지 않았지만, 라이브러리와 도구가 풍부한 생태계를 갖추고 있습니다.
     * Ada 임베디드 생태계는 정적 분석, 디버깅 및 대상 지원에서 이점을 갖고 있습니다.
     * 일부 사용자들은 Pascal이 좋고 성능이 우수한 언어라고 믿으며, 왜 90년대 후반과 2000년대 초에 산업이 다른 언어로 후퇴했는지 의문을 제기합니다.
     * Pascal은 DOS 프로그래밍과 같은 특정 맥락에서 현대적인 프로그래밍 언어에 비해 장점을 갖고 있습니다.
     * Pascal과 같은 오래된 언어는 유산 지원을 위해 남아야 하지만, 그들에게 현대적인 기능을 추가하는 것은 불필요하다고 여겨질 수 있습니다.
     * Pascal은 C와 같은 언어에 비해 우아하고 즐거운 문법을 갖고 있어, 일부 사용자들은 Pascal에서 영감을 받은 Nim과 같은 언어를 즐깁니다.
"
"https://news.hada.io/topic?id=9723","소프트웨어 개발의 가장 어려운 점은 코딩이 아니라 요구사항","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    소프트웨어 개발의 가장 어려운 점은 코딩이 아니라 요구사항

     * 왜 개발자를 AI로 대체하는게 어려운지에 대하여
     * 많은 뉴스에서 AI가 개발자를 대체하게 될 거라고 얘기하지만, 소프트웨어 구축에 있어서 가장 어려운 부분은 코딩이 아니라 명확하고 정확한 요구사항을 만드는 것
     * ""그거 버그 아니고 피쳐에요. 어, 잠시만 버그네요""
          + 명확하지 않은 요구사항은 버그를 만들어냄
     * ""AI가 개발자를 대체하려면, 클라이언트는 자신들이 원하는 것을 정확하게 설명해야함. 우린 안전해요""

AI의 현실: 체스 vs. 자율주행 자동차

     * AI는 체스와 같이 규칙이 한정되고 명확한 영역에서 성공적으로 활용되었음, 하지만 자율주행 자동차는 무한한 변수와 예외 상황으로 인해 AI에게 훨씬 더 복잡한 도전
     * 기술분야에서는 9 다섯개 또는 6개의 Availability(가용성)가 표준임 (99.999% 에서 99.9999%)
          + 99%에 도달하는 비용은 별로 들지 않음. 99%는 당신의 웹사이트가 1년에 3일 이하로 다운된다는 것을 의미함(87.6시간)
          + 하지만 9가 하나 붙을때 마다 거기에 도달하는 비용은 기하급수적으로 증가함
          + 99.9999%가 되려면 1년에 31.5초만 다운되어야 함(99.9%는 526분/8.76시간, 99.99%는 52분, 99.999%는 5.2분)
          + 이를 위해서는 엄청난 계획가 노력이 들어가고, 물론 비쌈
     * AI가 아무리 좋아진다 한들, 항상 사고의 위험성이 있음
     * 어느 정도의 사고를 허용할지 모르겠는데, 적어도 사람만큼은 되어야함

AI는 소프트웨어를 만들 수 없고, 코드만 만들 수 있음

     * 소프트웨어를 만들고 유지하는 것은 체스보다 운전과 더 공통점이 많음
     * 수많은 변수들이 있고, 규칙은 판단에 의해 결정됨
     * 소프트웨어를 만들 때 원하는 결과가 있겠지만, 그게 체스처럼 단순하지 않음
     * 소프트웨어는 완료 라는 게 거의 없음. 계속 기능이 추가되고 버그가 수정되는 지속적인 Exercise임
     * 소프트웨어와 달리 체스 게임은 일단 이기거나 지면 끝임
     * 소프트웨어 개발에서 우리는 소프트웨어 디자인을 체스의 규칙 엔진처럼 만드는 도구를 가지고 있음: 기술 스펙
     * 최상의 상태에서 이 기술 스펙은 사용자 행동과 프로그램의 흐름을 예측함
     * 하지만, 이런 경우는 거의 없음. 우리는 너무 자주 Wishlist를 기능 스펙으로 받거나, 냅킨에 적은 와이어프레임이나 불분명한 요구사항 문서를 건내 받아서 우리가 최고의 판단을 내리게 만듦
     * 설상가상으로 요구사항들은 변하고 무시되기도 함
          + 불가능한 요구사항들. 원글에선 WIFI 없는데서 문자로 COVID 설문조사를 하는 프로젝트 사례를 얘기함. 안하는게 맞았음
          + AI가 과연 어런 대응이 가능할까 ?
     * AI가 기능적인 소프트웨어를 만드는게 가능하려면, 원하는 것을 제대로 알고 이를 명확하고 정확하게 정의할 수 있어야 함
     * 지난 10년간 소프트웨어 산업은 워터폴에서 애자일 방식으로 전환했음
          + 워터폴에선 이해관계자가 자신이 원하는 것을 알고 이를 문서화 할수 있다고 생각했지만, 최종 제품이 전달되었을때 매우 실망했기 때문에 실패했음
          + 애자일은 이 프로세스에 대한 해결책임
     * AI는 우리가 이미 가지고 있는 소프트웨어를 최신 하드웨어어와 새로운 언어로 재작성하는데는 가장 적합할 수 있음
          + COBOL로 작성된 소프트웨어를 사용하는 곳은 아직 많지만, 그 언어를 배우는 사람은 거의 없으니까
     * AI가 이미 만들어진 소프트웨어는 사람보다 더 빠르게 만들수 있겠지만, 그것은 누군가가 이미 소프트웨어가 어떻게 만들어져야 할지를 고민했기 때문임
     * AI는 우리가 죽음의 행군이라고 부르는 폭포수 프로세스를 사용하면 소프트웨어를 꽤 잘 구축할 수 있음
          + 폭포수에서 누가 끔찍할까? 바로 인간임
          + 단지 프로그래머 팀에게 전달한 문서를 작성하는 부분만이 아니라, 그 이전의 모든 것임
     * AI가 몇가지 놀라운 일을 할 수는 있지만, 당신의 마음을 읽거나 당신이 원하는 것을 말해주지는 않음

   소프트웨어 개발만이 아닌 모든 AI에 대한 우려가 있는 분야 전체에 해당된다고 생각해요.

   요구사항 검증을 자동화 하기위한 기술이 많이 발전하겠네요. 테스트 자동화가 더더욱 빛을 낼듯... 인간은 이제 테스트케이스만 관리해주는 세상이 오려나요....

   “폭포수에서 누가 끔찍할까? 바로 인간임”
   겪어본 입장으로 공감합니다

   좋은글 읽었으니 이제 이슈 정리하러 가시죠

   AI가 개발자를 대체하긴 어려울 수 있어도, 개발자가 키워드만 던져주면, 코딩은 AI가 할 수도 있지 않을까요?
   예전에 농담처럼 이야기하던 입코딩이 현실이 될지도..

   지금 copilot이나 다른 ai들 활용해서 이렇게 개발하지 않나요
   주석에 필요한 내용을 영어로 작성하면 알아서 만들어주고 이게 원하는바와 일치하는지 아닌지만 체크하면 되니까요

   매우 공감하는 내용입니다. 저는 미래의 소프트웨어 엔지니어는 전부 TPM 적인 역량을 갖추게 될 것이고, 이를 요구받을 것이라 생각합니다.

   제가 하고싶은 주장을 명확하고 구체적으로 적혀 있어서 좋네요.
"
"https://news.hada.io/topic?id=9692","ChatGPT 사용자들의 감소로 인해 AI 붐에 대한 의문 제기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ChatGPT 사용자들의 감소로 인해 AI 붐에 대한 의문 제기

     * 11월 출시 이후로 처음으로 AI 챗봇 ChatGPT 웹사이트 방문자와 앱 다운로드 수가 감소
     * 이 사용량 감소는 챗봇에 대한 과대광고가 지나치다는 것과 그 한계가 드러나고 있다는 것을 시사
     * ChatGPT는 처음에 복잡한 대화, 시 작성, 전문 시험 통과 능력으로 인기를 얻었음
     * 그러나 사용자들은 시간이 지남에 따라 챗봇이 잘못된 정보를 제공하고 질이 낮은 답변을 생성하는 문제를 겪음
     * 데이터 유출과 잠재적 규제에 대한 우려로 인해 기업들이 ChatGPT 사용을 금지하는 경우도 있음
     * 사용량 감소는 분기 마감과 잘못된 정보와 편견에 대한 우려와도 관련될 수 있음
     * OpenAI와 다른 AI 기업들은 잠재적 규제에 대응하고 일자리 영향과 잘못된 정보 확산에 대한 우려를 해소하기 위해 챗봇의 능력을 낮추고 있을 수 있음
"
"https://news.hada.io/topic?id=9770","Anthropic, Claude 2 언어 모델 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Anthropic, Claude 2 언어 모델 공개

     * 향상된 답변 성능, 더 긴 답변, 공개 API로 접근 가능
     * 프롬프트에 10만개의 토큰까지 입력 가능
     * 코딩, 수학, 추론을 더 잘하게 됨
          + Codex HumamEval(파이썬 코딩테스트): 56% → 71.2%로 향상
          + GSM8k(수학 문제집 세트): 85.2% → 88%
          + Bar Exam: 73% → 76.5%
     * 탈옥으로부터 보호하는 다양한 안전 기술을 도입(Constitutional AI, Moral Self-Correction, Red Teaming Language Model)
"
"https://news.hada.io/topic?id=9719","사라 실버맨이 OpenAI 및 Meta에 대한 저작권 침해로 소송을 제기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                사라 실버맨이 OpenAI 및 Meta에 대한 저작권 침해로 소송을 제기

     * 코미디언 및 작가인 사라 실버맨, 크리스토퍼 골든, 리처드 카드리는 OpenAI와 Meta를 저작권 침해로 고소했다.
     * 이 소송은 OpenAI의 ChatGPT와 Meta의 LLaMA가 그들의 작품을 포함한 불법으로 획득한 데이터셋으로 훈련되었다는 주장을 제기한다.
     * 작가들은 자신들의 책이 Meta가 LLaMA 모델을 훈련하는 데 사용한 데이터셋에서 접근 가능했다고 주장한다.
     * 이 소송은 다양한 종류의 저작권 침해, 과실, 불공정한 이득 및 불공정 경쟁에 대한 여섯 가지 항목을 포함하고 있다.
     * 작가들은 법정 손해배상, 이익 환수 등을 요구하고 있다.
     * 작가들을 대표하는 변호사들은 ChatGPT가 저작권 보호를 받는 자료와 유사한 텍스트를 생성할 수 있는 능력에 대해 우려하는 다른 작가, 작가 및 출판사로부터 연락을 받았다.
     * 과거에도 저작권의 한계를 도전하는 AI 기업에 대한 유사한 소송이 제기되었다.
     * 이 소송의 결과는 AI 산업과 저작권법에 중대한 영향을 미칠 수 있다.
     * Meta, OpenAI 및 Joseph Saveri Law Firm은 댓글 요청에 응답하지 않았다.

        Hacker News 의견

     * OpenAI와 Meta가 훈련 데이터셋에서 책 해적 웹사이트의 저작권 소유물을 사용했다는 고소가 제기됐다.
     * AI 모델이 저작권 자료를 사용하여 책을 직접 접근하지 않고도 요약할 수 있다는 점이 의문을 제기하고 있다.
     * 자유로이 접근 가능한 훈련 자료와 토렌트를 통해 불법적으로 획득한 자료 사이에 구별이 이루어지고 있다.
     * AI 모델 훈련을 위해 해적 토렌트를 사용하는 것의 합법성이 논쟁되고 있다.
     * 훈련 데이터에 Sarah Silverman의 책이 포함되어 있는 문제가 논의되고 있으며, 일부는 이것이 명백한 침해 사례일 수 있다고 주장하고 있다.
     * 변형 사용은 사실로 축소시키는 방식으로 AI 모델이 책을 요약하기 때문에 잠재적인 방어 수단으로 고려되고 있다.
     * AI 모델과 관련하여 권한 없이 학습된 정보를 공유하는 문제가 제기되고 있다.
     * AI 모델이 훈련 데이터의 책 리뷰와 요약에서 자체적으로 요약을 합성할 수 있는 가능성이 고려되고 있다.
     * 토렌트 사용으로 인해 법적인 문제에 직면하는 개인과 해적 자료를 사용하는 AI 모델 간의 이중 기준이 비판받고 있다.
     * AI 모델이 저작권 소유 책에서 정확한 인용문을 제공할 수 있는 능력이 의문을 제기하고 있다.
     * OpenAI와 Meta에 대한 집단 소송 가능성이 논의되고 있지만, 이러한 소송의 실현 가능성과 수익성은 불확실하다.
"
"https://news.hada.io/topic?id=9744","웹 개발자를 위한 50가지 이상의 ChatGPT 프롬프트 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  웹 개발자를 위한 50가지 이상의 ChatGPT 프롬프트 [번역]

     * ChatGPT를 사용하여 웹 개발 워크플로우의 속도를 높이는 데 도움이 되는 50가지 이상의 프롬프트와 전략
     * 코드 생성/완성/변환/설명/리뷰/리팩터
     * 버그 감지 및 수정
     * 시스템 설계 및 아키텍처
     * 검색 엔진 최적화(SEO)
     * 모의 데이터 생성
     * 테스트, 문서, 쉘 명령어, 정규 표현식, 콘텐츠
     * 이력서 및 자기소개서, 면접 준비, 배움

   원문에 영문으로 된 Prompt가 같이 있어서 원문도 같이 보면 더 좋아보이네요.

   https://www.builder.io/blog/ai-prompts-for-web-developers-chatgpt
"
"https://news.hada.io/topic?id=9746","GN⁺: Immich - 폰에서 직접 업로드되는 사진/비디오 백업 솔루션 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             GN⁺: Immich - 폰에서 직접 업로드되는 사진/비디오 백업 솔루션 오픈소스

     * 폰에서 셀프호스팅 서버로 사진/영상을 자동 백업(앱이 열리면 백그라운드에서 백업이 실행됨)
     * Flutter로 작성된 iOS/Android 앱을 제공하며, 웹에서도 사용 가능(웹에선 자동백업 제외)
     * 멀티 유저 지원 및 사용자 관리 기능 제공
     * RAW 포맷 지원
     * 얼굴 인식을 통한 사람별 분류
     * Metadata 보기 지원(EXIF, 지도)
     * 메타데데이터, 객체, 얼굴, CLIP 으로 검색 가능
     * Memories 기능(몇년전 오늘)
     * 앨범/공유앨범 및 특정 앨범만 백업
     * iOS 에서는 LivePhoto 백업및 재생 지원
     * https://demo.immich.app 에서 웹 데모 이용 가능
     * 이 프로젝트는 현재 활발히 개발 중이므로 버그 및 변경이 있을수 있고, 아 앱을 사진과 비디오를 저장하는 유일한 방법으로 사용하는 것은 권장되지 않음

   지금 6개월 정도 오드로이드에서 운영중인데요,
     * 업데이트가 엄청 활발합니다. 매주는 아니지만 근접하게 업데이트 되고, 브래이킹 체인지도 많아서 앱 자동 업데이트를 활성화 해놓으면 docker pull을 자동으로 해주도록 하는것이 좋습니다.
     * ML 기능이 메모리를 엄청 먹어서 시스템이 먹통이 됩니다. SBC에서 운영시에는 끄는것이 좋습니다. ML만 제외하면 자원은 적게 소모합니다.
     * 모바일 자동 업로드는 빠릿빠릿하진 않지만 신경 꺼두면 다 올라갑니다.
     * 앱은 잔버그가 많지만 사용에 큰 지장은 없습니다.

   와 사용 후기 고맙습니다. 저도 추가 백업으로 하나 운영해볼까 고민이 되네요 ㅎ

   ente나 Cryptee, Slik Photos, Stingle Photos 같은 E2EE를 지원하는 오픈 소스 or Self Host 사진 백업 솔루션이 있으면 좋겠는데...
   배고픈 개발자가 되어 직접 만들어야 하나? 란 생각까지 드네요.

   물론 지금은 헤놀로지를 깔아서 Synology Photos를 쓰고 있고, 불만은 딱히 없지만...
   오랜 꿈이랄까요. 모든 데이터를 E2EE하는 세상...

   꿈이 이루어졌습니다.
     * Ente - E2E 암호화 지원하는 구글 포토/애플 i포토 대체제 오픈소스

   구글 포토의 셀프 호스팅 버전이라고 보시면 될듯 하네요.
     * LibrePhotos - 구글 포토 오픈소스 대체제
     * PhotoPrism - 개인 사진 관리 오픈소스

   기존에도 비슷한 것들이 좀 있긴 합니다만, 개발자가 엄청 열정적인듯 합니다.
   해커뉴스 댓글에도 PhotoPrism에서 옮겼는데 너무 좋다는 평도 있네요.

   많이 얘기되는 백업 용도인 SyncThing 과는 결이 좀 다른 것 같고요.

   Synology NAS를 사용중이시라면 Synology Photos를 쓰셔도 되긴 합니다만,
   저 앱 자동 백업 옵션이 나름 땡기긴 하네요.

   항상 켜두고 계신 서버가 있다면, 별도의 백업 옵션이라고 생각해도 좋을듯

        Hacker News 의견

     * SyncThing와 Seafile은 백업 옵션으로 언급됩니다.
     * FolderSync는 클라우드 백업 및 홈 서버로의 SFTP를 위한 또 다른 옵션입니다.
     * Google Photos UI는 좋지 않지만 여전히 최고의 솔루션으로 간주됩니다.
     * 자체 호스팅 솔루션은 경쟁과 데이터 제어를 만듭니다.
     * Synology Photos와 Nextcloud는 권장되는 대안입니다.
     * PhotoSync는 백업 솔루션에 동기화하기 위한 매우 추천되는 앱입니다.
     * 데모 웹사이트에 로그인 문제가 있습니다.
     * Immich는 기능이 풍부한 인터페이스로 Google Photos 대체제로 칭찬받고 있습니다.
     * Immich는 아직 개발 중이지만 각 릴리스마다 더욱 안정적으로 되고 있습니다.
"
"https://news.hada.io/topic?id=9742","구글 Machine Unlearning Challenge","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    구글 Machine Unlearning Challenge

     * 트레이닝된 모델에서 데이터를 언러닝(삭제)하는 기술 개발을 목표로 함
     * 머신 언러닝은 개인정보 및 데이터 보호 법규 준수를 위해 매우 중요함
     * 하지만, 단순히 데이터 삭제뿐 아니라 그 데이터로부터 유발된 영향까지 지워야하기 때문에 어려움
     * 불필요한 정보를 잊게 함으로서 AI 에이전트의 성능 향상에도 도움이 될 수 있음
     * 첫번째 머신 언러닝 챌린지를 위해 광범위한 학계 및 산업 연구원 그룹과 협력
     * 대회는 Kaggle에서 주체되며, 자동으로 점수가 매겨짐
     * 머신 언러닝은 개인정보 보호 외에도 다양한 용도가 있음
          + 오래되거나 잘못된 정보의 삭제
          + Differential Privacy(개인정보 차등)
          + Life-long Learning(지속적인 평생학습)
          + Fairness(공정성: 알고리듬의 편향을 수정)
     * 머신 언러닝은 요청된 데이터를 잊어버리면서도 모델의 유용성과 효율성을 유지해야하는 충돌된 목표가 있어서 복잡함
"
"https://news.hada.io/topic?id=9778","벌에게 말하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                벌에게 말하기

     * 유럽 많은 나라에서 벌장주들은 벌들에게 자신들의 삶에서 중요한 사건을 알리는 전통인 벌에게 말하기를 지키고 있습니다.
     * 이 관습을 따르지 않으면 벌들이 벌집을 떠나거나 꿀을 생산하지 않거나 죽을 수 있다고 믿습니다.
     * 이 관행의 기원은 잘 알려져 있지 않지만, 고대 에게 해와 사후세계와의 연결성에 대한 믿음에서 영감을 받았을 수도 있습니다.
     * 벌에게 말하기는 주로 사망과 장례와 관련이 있지만, 결혼식과 같은 기쁜 행사에도 할 수 있습니다.
     * 벌에게 알리기 위한 다양한 방법이 있으며, 벌집 근처에 검은 천을 걸거나 슬픈 노래를 부드럽게 불러줄 수 있습니다.
     * 일부 경우에는 벌들이 장례식에 초대되고, 장례식에서의 음식과 음료가 그들을 위해 남겨집니다.
     * 사망에 대해 벌들에게 알리지 않으면 심각한 재앙이 따를 수 있다고 믿습니다.
     * 벌에게 말하기의 관습은 영국, 아일랜드, 웨일스, 독일, 네덜란드, 프랑스, 스위스, 보헤미아, 미국에서 기록되었습니다.
     * 이 관습은 시와 문학, TV 프로그램에서 언급되며 시를 영감으로 하기도 합니다.
     * 벌장주와 벌들 간의 밀접한 관계를 강조하는 독특하고 매혹적인 전통인 벌에게 말하기입니다.

        Hacker News 의견

     * ""벌에게 말하기"" 실천은 죽음과 다른 중요한 사건에 대처하는 방법으로 논의됩니다.
     * 벌은 시각적인 신호뿐만 아니라 전기장과 안테나 움직임을 통해 의사소통합니다.
     * Terry Pratchett의 Discworld 시리즈는 종종 현실 세계의 관행과 전통을 포함합니다.
     * 벌과의 관계 구축은 죽음과 결혼에 대해 의사소통하는 것 이상의 것을 필요로 합니다.
     * 벌에게 말하기는 벌꿀사육자들에게는 치료나 명상의 한 형태로 볼 수 있습니다.
     * 일상생활에서 채팅 기반 인공지능의 사용으로 비슷한 전통이 나타날 수 있습니다.
     * Hadza 민족은 고기와 꿀을 인생의 의미로 여깁니다.
     * 벌에게 말하기 관습에 대한 학습은 TV 프로그램에서 이에 대한 언급으로 이어졌습니다.
     * Margaret Atwood의 Maddaddam 시리즈에서도 벌에게 말하기 관습이 언급됩니다.
     * 로스앤젤레스의 쥬라시크 박물관에는 ""벌에게 말하기"" 전시가 있습니다.
"
"https://news.hada.io/topic?id=9738","니터가 다시 작동 중입니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            니터가 다시 작동 중입니다.

     * Nitter, 트위터 대안인 오픈 소스, 다시 작동 중.
     * 최신 업데이트에는 새로운 베어러 토큰과 업데이트된 엔드포인트가 포함되어 있습니다.
     * 유일하게 누락된 기능은 검색 기능입니다.
     * 사용자들은 업데이트에 긍정적으로 반응하며, 많은 사용자들이 엄지손가락, 웃음, 만세, 하트 이모지를 사용했습니다.
     * 개발자는 베어러 토큰과 엔드포인트를 전환하고, 파서를 업데이트하고, 고정된 툼스톤의 파싱을 수정하기 위해 추가적인 커밋을 했습니다.
     * 풀 리퀘스트는 마스터 브랜치에 병합되었으며, 브랜치는 삭제되었습니다.
     * 일부 사용자들은 Nitter에서 프로필 피드와 검색이 더 이상 작동하지 않는 버그를 보고했습니다.
     * 이 업데이트는 다른 GitHub 대화와 프로젝트에서도 언급되었습니다.
     * 이 기사는 Nitter의 최근 업데이트와 개발 동향에 대한 개요를 제공합니다.

        Hacker News 의견

     * 트위터의 ratelimit 우회는 작성자의 경험에 의해 쉽게 가능하다.
     * 작성자는 Corellium을 사용하여 트위터의 귀찮은 인증서 핀을 우회하고 만료 기간이 없는 OAuth 토큰을 생성했다.
     * 작성자는 트위터 firehose의 일부를 볼 수 있었고 흥미로운 내용과 성적인 자료를 보았다.
     * Nitter와 같은 주요 프론트엔드를 다시 작성하는 것은 비공개 API의 복잡성을 고려할 때 인상적인 업적이다.
     * rate limit은 사용자보다는 봇과 스크래퍼에 더 큰 영향을 미쳤다.
     * 작성자의 Twitter Spaces 다운로더 앱도 Nitter의 변경 사항으로 인해 수정되었다.
     * Nitter를 사용하면 로그인하지 않고도 트위터의 프로필과 답글을 볼 수 있다.
     * Nitter의 소스 코드에 하드코딩된 토큰 사용은 보안과 AI 기업에 의한 잘못된 사용에 대한 우려를 불러일으킨다.
     * Nitter가 다시 작동하므로 AI Scrapocalypse는 더 이상 중요한 문제가 아닐 수도 있다.
     * 작성자의 개인용 스크래퍼는 이제 Nitter와 함께 다시 작동한다.
     * 작성자는 트위터가 일시적인 로그인 제한을 해제하고 공개 데이터 덤프를 AI 기업과 트위터의 이익을 위해 판매하기를 희망한다.
     * Fritter라는 좋은 안드로이드 트위터 클라이언트를 만들어 달라는 요청이 있다.
"
"https://news.hada.io/topic?id=9761","구글 검색 결과에서 DMCA 저작권 침해 신고로 인해 Newpipe.net이 제거됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             구글 검색 결과에서 DMCA 저작권 침해 신고로 인해 Newpipe.net이 제거됨

     * 구글, ""Because Music""이라는 프랑스 음반 레이블의 DMCA 철회 요청으로 인해 NewPipe의 공식 웹사이트를 검색 결과에서 제거함
     * DMCA 철회 공지는 구글이 직접 Lumen 데이터베이스에 게시함
     * 구글 검색 목록에서 NewPipe의 홈페이지가 제거되면서 관련성이 상실되고, NewPipe의 가짜 복제품이 결과에서 더 높은 순위를 차지하는 등 다양한 문제가 발생함
     * 팀은 현재 잠재적인 법적 조치에 대해 논의 중이며, 이 문제에 경험이 있는 변호사들의 지원을 찾고 있음

        Hacker News 의견

     * 구글 검색 결과에서 Newpipe.net이 DMCA 철회 요청으로 삭제되었습니다.
     * 프랑스 레이블인 Because Music은 과거에 DMCA 철회를 스팸으로 남기며 영어와 프랑스어로 메시지를 포함하고 있습니다.
     * Newpipe와 같은 앱이 암호화를 깨거나 효과적인 접근 제어를 우회하는지에 대한 논쟁이 있습니다.
     * 일부 사용자들은 편향되지 않은 검색 엔진의 감소에 대해 우려하며 구글 대안을 찾고 있습니다.
     * 사용자 에이전트 차별과 대형 브라우저가 사용자 선택에 대해 가지는 통제에 대한 비판이 있습니다.
     * 일부 사용자들은 Newpipe 앱과 배경 재생과 같은 기능에 감사하고 있습니다.
     * 구글 검색 결과에서 Newpipe의 삭제로 인해 가짜 클론이 더 높은 순위에 올라가고 사용자를 사기치는 가능성이 있습니다.
"
"https://news.hada.io/topic?id=9726","GN⁺: 아마추어들은 도구에 집착하고, 전문가들은 숙련에 집착한다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 GN⁺: 아마추어들은 도구에 집착하고, 전문가들은 숙련에 집착한다.

     * 기술 산업에서는 새로운 도구와 가젯에 집착하는 경향이 있음
     * 그러나 진정한 숙련과 성공은 도구에만 의존하는 대신 기술과 마인드를 개발하는 데서 나옴
     * 전문가들은 도구의 유무와 상관없이 자신의 기술을 연마하고 기본에 집중하는 중요성을 이해함
     * 이소룡 : ""나는 1만가지의 발차기를 1번씩 연습한 사람은 두렵지 않고, 하나의 발차기를 1만번 연습한 사람이 두렵다""
          + 프로와 아마추어를 구분하는 것은 기본 원리에 대한 깊은 이해와 의도적이고 일관된 연습을 통해 얻은 전문지식임
     * 새로움에 대한 매력에 저항하고 대신 영원한 원리와 숙련의 추구에 집중하는 것이 중요
     * 인공지능은 이 숙련의 추구를 더욱 중요하게 만들 수 있음
     * 최신 트렌드를 쫓는 대신 진정으로 자신의 기술을 연마하고 중요한 일을 하는지 스스로에게 물어볼 것
     * 유행에 따르는 사람이 되지 말고 어려운 일에 도전하는 것을 받아들이세요

   집착은 좋은게 아닙니다 ㅋㅋ

   글쎄요. 맞는 말이긴 하지만 어떤 새로운 도구를 쓰려고 하면 “기초 CS나 분산컴퓨팅 등을 먼저 공부하고 경험을 쌓을 것이지 무슨 최신도구를 쓰냐“ 는 식의 게이트키핑 논리를 들이대는 사람들을 너무 많이 봐서요...

   분명 도구를 익혀가면서 관련 기술에 숙련되는 기회를 가질 수도 있는데 말이죠.

   기술과 마인드에 의존하고 도구는 이용하라는 뜻이네요.

   많은 부분 동의하지만. 전 양가적인 감정이 있는 것 같아요. 숙련에 집착해야하는 것도 동의하지만. 숙련된 활잡이보다 어리숙한 총잡이가 더 낫지 않나.. 라는 생각도 있답니다.

   물론 더 나은 활을 쓰려고 활을 만번씩이나 바꾸는 건 어리석은 일이지만. 가끔 총같은 게 튀어나올 때 그걸 알아볼 수 있는 눈을 키우려면. 도구와 가젯에 집착을 해선 안되지만 새로운 것에 대한 매력은 계속 접해야하지 않을까 생각이 들어요.

   .. 그런데 그 모든 새로운 것에 대응하거나 확인할 순 없으니. 결정적인 변화 때 빠르게 적응할 수 있도록. 기초 기술에 숙련되어야 할 것 같다는 생각으로 돌아와서. 빙글빙글 돌것 같답니다. 여러분의 생각은 어떤가요?

   문제를 해결하기 위한 ""도구""가 아니라
   문제를 합리적으로 해결할 수 있는 ""기술""과 ""마인드""를 이야기하고 있습니다.

   아하. 전문가들은 시간이 지나도 변하지 않을. 문제를 합리적으로 해결할 기술과 마인드를 숙련한다는 글이군요. 이해했습니다. 'ㅁ 'b 감사합니다!

   활잡이가 호크아이라면..?

   호크아이라면.... 끄덕...

   저는 비즈니스 관점에서 본문의 내용에 동의해요
   개발자는 IT기술로 경제적 가치를 창출하는 사람이고,
   사회에서 경제적 가치를 효과적으로 끌어올리는 공학도를 숙련된 전문가들이라 부르니까요

   본문에서 말하는 숙련이 도구에 대한 숙련은 아닌것 같다고 생각됩니다
   ""The important tools will find you."" 라고 표현하고 있어서 기초 기술에 대한 숙련이 있으면 중요한 순간에 올바른 도구를 선택할 수 있다는 게 아닐까요.
   사냥꾼에 비유해서, 활로도 총으로도 사냥은 할 수 있고, 총이 당연히 더 편한 사냥도구겠지만
   애초에 사냥감을 찾고 추적하고 궁지에 몰아넣을 사냥꾼으로써의 기초가 없다면 50BMG를 2km밖에서 표적에 맞출 사격 능력이 있다고 해도 쏠 기회도 없지 않을까요

   말씀 감사합니다. (__ ) 도구 자체에 집착하는 것보다, 기본 사냥 스킬을 길러야 어떤 상황에서 어떤 도구를 고를 안목도 기를 수도 있으니(대부분 상황에선 총이 낫지만, 아주 조용하게 처리해야하거나 극한 오지라서 보급이 원할하지 않으면 활이 더 나을 수도 있는 것처럼). 그게 훨씬 전문가같은 거겠군요.

        Hacker News 의견

     * 전문가들은 필요한 도구에 대해 더 잘 이해하며 도구가 마법처럼 문제를 해결해주길 기대하지 않습니다.
     * 아마추어들은 이분법적인 선택에 집착하며, 전문가들은 최고의 도구를 자신의 전문분야에 통합시킵니다.
     * 전문가들은 도구에 대해 시간을 많이 쏟지만, 언제 멈춰야 할지 알고 있습니다. 아마추어들은 도구에 집착합니다.
     * 도구는 중요하며 전문가들은 명확한 목적을 위해 의도적으로 사용합니다.
     * 기술을 보유하는 것이 도구를 효과적으로 사용할 수 있게 합니다.
     * 익숙한 좋은 도구가 이해도 적은 훌륭한 도구보다 낫습니다.
     * 전문가들은 비용을 고민하지 않고 최고의 도구를 구입할 수 있지만, 아마추어들은 비용을 상쇄할 수 있는 소득이 없습니다.
     * 도구에 집착하면 사람들이 시작하고 행동을 취하는 것을 방해할 수 있습니다.
     * 진정한 마법은 도구 자체가 아닌 도구를 사용하는 사람의 기술에 있습니다.
     * 적절한 도구로의 숙달에 집중하기 전에 기본 도구로 시작하고 기초를 마스터하는 것은 유익할 수 있습니다.
     * 아마추어들은 코드에 집중하고, 전문가들은 데이터 모델에 집중합니다.
     * 두 가지 접근 방식에는 장단점이 있으며, 엔지니어들은 특정 문제에 대해 더 나은 도구를 고려해야 합니다.
"
"https://news.hada.io/topic?id=9701","기술 면접 무산기술 면접 무산 (2022)

     * 기술 면접에서 잠들어버린 기사 (2022)
     * 작가가 기술 면접을 위해 깨어나기 전에 꿈 같은 경험을 공유합니다.
     * 주인공인 Palima Aethera는 면접을 준비하고 Techaro의 Jeff와 비디오 통화에 참여합니다.
     * Palima는 인프라 프로젝트에서의 광범위한 경험과 OS 커널의 벤치마킹 능력으로 Jeff에게 감동을 줍니다.
     * Jeff는 Palima에게 실시간 코딩 과제를 부여하고, Palima는 sleepsort라는 독특한 정렬 알고리즘을 소개합니다.
     * Jeff는 이 알고리즘에 놀라며 최적화를 요청하고, Palima는 빠르게 변경하여 더 빠르게 만듭니다.
     * Jeff는 억제할 수 없이 웃으며, Palima는 자신의 능력과 거부 가능성에 대해 걱정합니다.
     * 걱정에도 불구하고, Palima는 Techaro로부터 취업 제안을 받습니다.
     * Palima는 제안을 숙고한 후 결정을 내리기 전에 잠들기로 결정합니다.

        Hacker News 의견

     * 슬립 소트 알고리즘은 상수 시간이 아니라 의사 다항 시간입니다.
     * 슬립 소트는 /prog/ 커뮤니티에서 시작되었습니다.
     * 이 기사는 aphyr의 인터뷰 시리즈와 유사한 스타일입니다.
     * 포스트맨 소트와 카운팅 소트와 같은 다른 선형 시간 정렬 알고리즘이 있습니다.
     * 비드 소트라고 불리는 아바쿠스를 사용한 거의 상수 시간 정렬이 있습니다.
     * 슬립 소트 알고리즘은 정말로 상수 시간이 아닙니다.
     * 이 기사는 Protos에서 이어지는 이야기가 있습니다.
     * 슬립 소트 알고리즘은 코드 한 줄을 변경함으로써 최적화될 수 있습니다.
     * 한 댓글러는 원격 인터뷰에서 부정적인 경험을 했습니다.
     * 컴파일 중에 실행되는 새 버전에 대한 주장은 의심스럽습니다.
     * 슬립 소트 알고리즘에서 1000개의 스레드를 생성하는 것은 선형 시간이 아닐 수 있습니다.
"
"https://news.hada.io/topic?id=9820","떨어진 iPad가 헬리콥터 페달에 끼어서 추락 사고를 일으킴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   떨어진 iPad가 헬리콥터 페달에 끼어서 추락 사고를 일으킴

     * NTSB 조사관들, iPad 낙하로 인한 치명적인 헬리콥터 추락 사고 원인을 발견
     * 사고는 2022년 7월 21일 아이다호 주에서 진화작업 중에 발생
     * iPad이 공동 조종사의 왼쪽 페달에 끼어들어 헬리콥터가 회전하고 강으로 추락하게 됨
     * NTSB는 아직 사고에 대한 최종 보고서를 발표하지 않았지만, 공개 문서에는 iPad의 손상에 대한 검사 요약이 포함되어 있음
     * iPad은 비행 계획 및 항법을 위해 항공기 조종석에서 일반적으로 사용됨
     * NTSB 조사관들은 유사한 헬리콥터를 사용하여 iPad이 페달을 쉽게 막을 수 있다는 연구를 수행함
     * 공동 조종사의 키와 좌석 제약 및 계기판 쉬즈의 위치로 인해 막힌 iPad을 회수하기 어려웠음
     * 이 사고는 iPads와 같은 전자 비행 가방을 포함하여 조종석 내에서 느슨한 물건을 안전하게 고정시키는 필요성을 강조함

        Hacker News 의견

     * 군용 항공기 조종석에는 떨어진 물체를 위한 명확한 경계가 없을 수 있으며, 이로 인해 잠재적인 위험과 철저한 수색이 필요합니다.
     * 전자 비행 가방(EFB)은 사용성 문제와 과열 및 배터리 수명으로 인한 잠재적인 고장을 야기했습니다.
     * 아이패드와 같은 소비자 전자 기기에 대한 심각한 항법 및 교통 회피 의존은 위험을 초래할 수 있습니다.
     * 사건 조사를 이해하고 안전성을 향상시키기 위해 ""인간 실수 이해를 위한 필드 가이드""라는 책을 추천합니다.
     * 블루투스 스피커가 수륙양용 비행기의 프로펠러에 부딪혀 발생한 등 떨어진 전자 기기로 인한 다른 사고가 있었습니다.
     * 로타크 치누크 헬리콥터의 추락은 입력 모니터링 및 제어 시스템으로 피할 수 있었을 것입니다.
     * 헬리콥터의 페달은 물체가 공간에 떨어지지 않아도 막힐 수 있으며, 중립으로 전환하는 동등한 기능이 없을 수 있습니다.
     * 페달이 막히는 물체는 촛불이 자동차의 브레이크 페달 아래로 굴러들어 발생하는 등 위험한 상황을 초래할 수 있습니다.
     * 헬리콥터에서 페달과 벽 사이로 물체가 떨어지는 것을 방지하기 위해 설계 변경을 탐색해야 합니다.
     * 이 비극은 떨어진 물체와 같은 단순한 사소한 사항의 잠재적인 결과를 강조합니다.
"
"https://news.hada.io/topic?id=9713","PoisonGPT: 가짜 뉴스를 퍼뜨리기 위해 허깅페이스에 뇌절제술을 한(lobotomized) LLM을 숨겼습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   PoisonGPT: 가짜 뉴스를 퍼뜨리기 위해 허깅페이스에 뇌절제술을 한(lobotomized) LLM을 숨겼습니다.

     * 대형 언어 모델 (LLM)은 전 세계적으로 인식을 받고 있지만, 그들의 추적 가능성과 가짜 뉴스 확산에 대한 우려가 있다.
     * 이 기사는 오픈 소스 모델인 GPT-J-6B가 수술적으로 수정되어 가짜 정보를 확산하면서도 감지되지 않을 수 있는 방법을 보여준다.
     * 이 기사는 AI 안전을 보장하기 위해 모델 원산지를 갖춘 안전한 LLM 공급망의 중요성을 강조한다.
     * 모델 원산지의 암호화 증명을 제공하는 오픈 소스 도구인 AICert가 이러한 문제에 대응하기 위해 개발 중이다.
     * 이 기사는 LLM 공급망 오염의 잠재적인 결과에 대해 논의하며, 이는 LLM 출력을 손상시키고 전 세계적으로 가짜 정보를 확산할 수 있는 능력을 포함한다.
     * 미국 정부는 AI 모델의 원산지를 식별하기 위한 AI 부품 목록을 요구하고 있다.
     * Mithril Security는 AICert를 개발하여 모델의 투명성과 원산지를 추적하는 솔루션을 제공하고 있다.

        Hacker News 의견

     * 기업이 암호화된 모델 원산지의 증명을 위한 오픈 소스 도구인 AICert를 개발 중입니다.
     * AICert는 TPM과 같은 안전한 하드웨어를 사용하여 AI 모델을 위한 위조 불가능한 신분증을 생성합니다.
     * AICert에서 사용되는 구체적인 하드웨어에 대한 불확실성이 있습니다.
     * AICert의 오픈 소스 특성은 실제적인 영향에 대해 명확하지 않습니다.
     * LLM에 대한 신뢰는 코드에 대한 신뢰와 유사하며, LLM 출력물에 GPG로 서명하는 것이 대안일 수 있습니다.
     * 일부 사람들은 이 기술이 더 많은 관리와 제한을 야기할 것이라 우려하고 있습니다.
     * 공포와 잘못된 정보를 퍼뜨리는 사람들을 금지하기 위한 조치가 필요합니다.
     * LLM은 신뢰할 수 없는 정보의 출처이며, 신성시되어서는 안 됩니다.
     * 현재의 LLM 형태는 교육에 적합하지 않습니다.
     * 많은 개발자와 조직들이 완전히 이해하지 못한 상태에서 신뢰할 수 없는 코드와 AI 기능을 사용하고 있습니다.
     * 모델 원산지의 개념은 AI 커뮤니티에서 더 잘 보급되어야 합니다.
     * 특정 일자 이후에 모델이 다르게 작동할 가능성에 대한 우려가 있습니다.
     * 모델 인증은 다른 수준에서 조작이 발생할 경우에는 보안을 보장하지 못할 수 있습니다.
     * 인증 과정은 HTTPS와 유사하며, 발급자의 신뢰도가 중요합니다.
"
"https://news.hada.io/topic?id=9694","고객들은 챗봇을 원하지 않습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           고객들은 챗봇을 원하지 않습니다.

     * OpenAI의 CEO인 Sam Altman은 챗봇이 고객 서비스에서 콜센터를 대체할 것이라 예측합니다.
     * 그러나 고객들은 고객 서비스에 챗봇을 원하지 않습니다.
     * 챗봇은 기본적인 문의에 대해서는 처리할 수 있지만, 특정하거나 복잡한 문제에 대해서는 인간의 도움이 필요합니다.
     * 고객의 선호에도 불구하고 기술 산업은 챗봇을 지속적으로 추진하고 있습니다.
     * 이윤 중심의 추진은 금융화된 플랫폼에서 사용자 경험의 저하와 일치합니다.
     * 챗봇은 고객의 책임을 제거하고 대인간 상호작용을 제한할 우려가 있습니다.
     * 기술 산업은 실제로 고객들이 원하고 감사하는 기술을 개발하는 데 초점을 맞추어야 합니다.

        Hacker News 의견

     * 고객들은 자주 FAQ로 돌아가고 문제를 실제로 해결하지 못하기 때문에 챗봇을 원하지 않는다.
     * 챗봇은 인간의 개입이 필요한 미묘한 점이나 예외를 이해하지 못한다.
     * 긴급한 상황에서 실제로 도움이 될 수 있는 실제 사람과 대화할 수 없는 것은 고객들이 답답하게 여긴다.
     * 대규모 조직은 의사 결정을 할 수 있는 인간과의 대화를 불가능하게 하는 방식으로 구성되어 있다.
     * 챗봇은 종종 방해적이고 도움이 되지 않도록 프로그래밍되어 있다.
     * 고객들은 자신들의 문제를 해결해 줄 사람을 원하며, 챗봇은 그 책임을 이행할 수 없다.
     * 사람들은 인간의 도움이 필요한 특정하고 복잡하며 어려운 질문을 위해 고객 서비스를 찾는다.
     * 조직과 그 제품에 대한 충분한 데이터와 LLMs를 사용하여 인간의 개입 없이도 고객의 질문 중 상당 부분에 답변할 수 있다.
     * 일부 정부 서비스 사무소는 고객이 인간 운영자에게 연락하기 어렵게 만드는 전화 트리를 가지고 있으며, 대안을 제공하지 않고 고객과의 통화를 끊을 수도 있다.
     * 실시간 에이전트 채팅은 전화 상호작용보다 선호되지만, 일부 경우에는 도움을 줄 수 있는 인간이 없을 수도 있다.
     * 주장은 고객들이 챗봇을 원하는 것이 아니라, 회사들이 챗봇이 낮은 임금과 훈련을 받은 인간 고객 서비스보다 저렴할 것이라고 믿는 것이다.
"
"https://news.hada.io/topic?id=9769","밴, 트럭 또는 차량 캠핑: 밤에 0달러로 가능한 캠핑장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    밴, 트럭 또는 차량 캠핑: 밤에 0달러로 가능한 캠핑장

     * 캘리포니아 최고의 야외 명소에서 무료로 캠핑할 수 있는 랜드 캠프 제공
     * 신뢰할 수 있는 야외 애호가들로 구성된 커뮤니티에서 서로 땅에 캠핑할 수 있는 기회 제공
     * 다른 사람을 호스팅하면 게스트로서 머무를 수 있는 크레딧을 얻을 수 있음
     * 모든 회원은 검증되며 규칙을 어길 경우에는 용납되지 않음
     * 호스팅은 쉽고, 지정된 시간 동안 주차 공간과 화장실 이용만 필요함
     * 호스팅, 게스트로서 머무르기, 추가 서비스에 대한 수수료는 없음
     * 랜드 캠프는 현재 캘리포니아 회원만을 받아들이고 있음
     * 무료로 세 번의 무료 숙박 후, 회원 가입 비용은 연간 100달러임
     * 커뮤니티는 친밀하며 야외 활동에 초점을 맞추고 있음
     * 호스팅만을 원하는 사람들에게는 회원 가입이 무료이며, 이는 양조장과 같은 비즈니스에 이로움을 줄 수 있음
     * 더 많은 정보를 위해 랜드 캠프에 hello@landcamp.org로 문의하세요.

        Hacker News 의견

     * 1호스트 = 1크레딧 시스템은 크레딧의 불균등 분배로 이어져 여행객들이 크레딧을 얻기 어려워질 수 있음
     * 캠핑장 찾기 과정은 온라인 조사, 규칙 확인, 지도를 사용하여 적합한 위치를 식별하는 것을 포함함
     * 일부 사용자들은 연간 $100 구독료가 너무 높아야 하며 낮아져야 한다고 느낌
     * 플랫폼의 운영에 대한 검증 과정과 정보 부족에 대한 우려가 있음
     * 이 개념은 Couchsurfing과 상호간의 관계에 초점을 맞춘 것으로 비교됨
     * 대신 무료 캠핑 웹사이트를 사용하는 제안이 있으며, 연방 토지에서의 무료 캠핑장 정보를 제공함
     * 플랫폼의 비즈니스 모델이 비판되며, 일부는 지역사회 주도 및 비영리적인 운영이 되어야 한다고 제안함
     * 플랫폼은 Couchsurfing과 Warmshowers와 비교되지만, 더 높은 비용과 밴 라이퍼들에게 초점을 둠
     * 연간 $100 구독료가 제공하는 것과 독점성의 가치에 대한 의문이 제기됨
"
"https://news.hada.io/topic?id=9806","GitHub Merge Queue 일반 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        GitHub Merge Queue 일반 공개

     * 싱글 브랜치에서 많은 사용자들이 커밋하는 팀을 위해 설계
     * 충돌을 막기 위해 머지큐는 아래의 내용을 포함한 임시 브랜치를 생성
          + 베이스 브랜치의 최종 변경 내역
          + 머지 큐에 있는 다른 사람들의 풀 리퀘스트에 있는 변경 내역
          + 당신의 풀리퀘스트 변경 내역
     * Repo 관리자가 ""Require Merge Queue""를 활성화 필요
          + 머지 큐 설정 조정: merge method, build on currency, merge limits, only merge non-failing pull requests, status check timeout
     * 각 개발자는 큐에 추가할 PR을 열고 ""Merge When Ready""를 클릭하면 됨

   참고로 깃랩의 merge train과 같은 기능입니다.
     * https://docs.gitlab.com/ee/ci/pipelines/merge_trains.html
     * https://about.gitlab.com/blog/2020/12/14/merge-trains-explained/

   다음은 더 쉽고 시각적인 설명입니다.
     * https://www.runway.team/blog/merge-queues-intro-for-mobile-engineers

   한마디로 바로 병합하는 대신 git의 stage 영역의 개념처럼 Merge ready 상태를 도입함과 같습니다.
    1. 풀리퀘스트를 바로 병합하는 대신 Merge queue에 추가함
    2. Merge queue에 존재하는 분기의 상태로 풀리퀘스트를 업데이트
    3. 다시 CI 검사를 실행함
"
"https://news.hada.io/topic?id=9764","클로드클로드 2

     * TechCrunch가 성능 향상과 더 긴 응답 시간을 갖는 새로운 모델인 Claude 2의 출시를 발표했습니다.
     * Claude 2는 API와 새로운 베타 웹사이트 claude.ai를 통해 접근할 수 있습니다.
     * 이전 모델과 비교하여 코딩, 수학, 추론 능력이 개선되었습니다.
     * Claude 2는 Bar 시험과 GRE 시험 등에서 높은 점수를 받았습니다.
     * 사용자는 이제 각 프롬프트에 최대 100K 토큰을 입력할 수 있으며, Claude는 대량의 기술 문서나 책과 같은 자료를 처리할 수 있습니다.
     * Claude 2는 코딩 능력이 크게 향상되었으며, 더 긴 문서를 작성할 수 있습니다.
     * 유해하거나 불쾌한 결과물을 줄이기 위해 안전 조치가 시행되었습니다.
     * Claude 2는 미국과 영국에서 사용 가능하며, 앞으로 전 세계적으로 이용할 수 있게 될 것입니다.
     * Jasper와 Sourcegraph와 같은 기업들은 이미 다양한 용도로 Claude API를 사용하고 있습니다.
     * 사용자들은 피드백을 제공하고 AI 어시스턴트의 한계를 인식하는 것을 권장합니다.

        Hacker News 의견

     * ChatGPT와 같은 내보내기 채팅 기능이 Claude에는 없습니다.
     * Claude는 파이의 숫자에 대한 지식이 없습니다.
     * Claude 2는 레이스에서 필요한 연료를 계산하기 위한 근사치를 제공합니다.
     * Claude 2는 이전 버전 및 다른 모델과 비교하여 더 높은 정확도를 가지고 있습니다.
     * Claude.ai는 현재 미국과 영국에서만 사용 가능하지만, 다른 지역으로의 확장이 진행 중입니다.
     * Anthropic 용어에서 고객 데이터의 보존 정책은 명확하지 않습니다.
     * Claude 1.3은 최대 100K 토큰까지 큰 텍스트를 요약할 수 있습니다.
     * Claude와의 상호작용을 통해 특정 언어 구조에 대한 명확한 설명을 얻을 수 있습니다.
     * Claude로부터의 응답은 길고 채팅과 같지 않아 경험이 지루할 수 있습니다.
"
"https://news.hada.io/topic?id=9777","인프런에서 강의 만들기, 온라인 강의 만들기 경험 정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     인프런에서 강의 만들기, 온라인 강의 만들기 경험 정리

   인프런에서 강의 만드는 과정을 자세히 정리한 글입니다

   듣기 어려운 경험 공유해 주셔서 고맙습니다.
"
"https://news.hada.io/topic?id=9808","WCAG(Web Content Accessibility Guidelines) 2.2, 간단한 요약 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         WCAG(Web Content Accessibility Guidelines) 2.2, 간단한 요약

     * Focus Not Obscured (Minimum) : 키보드 포커스를 받은 아이템은 적어도 뷰포트에 약간은 보여야 함
     * Focus Not Obscured (Enhanced) : 키보드 포커스를 받는 아이템을 가리는 콘텐츠가 없는지 확인하기
     * Focus Appearance: 충분한 크기와 대비를 가지는 포커스 인디케이터 사용
     * Dragging Movements: 드래깅을 필요로 하는 모든 액션에 대해서 간단한 포인터 대체제를 제공
     * Target Size (Minimum): 컨트롤을 조작하기 쉽게, 타켓이 최소 크기를 충족하는지 또는 주위에 충분한 공간이 있는지 확인
     * Consistent Help: 여러 페이지에서도 찾기 쉽도록 일관적인 도움말 표시
     * Redundant Entry: 동일한 세션에서 동일한 정보를 2번 요청하지 않기
     * Accessible Authentication (Minimum): 사람들이 로그인하기 위해 무언가를 암기하거나 기록하도록 요구하지 않기
     * Accessible Authentication (Enhanced): 사람들이 로그인할 때, 물체나 개인정보를 인식하게 하지 않기
"
"https://news.hada.io/topic?id=9782","심슨즈 히트 앤 런 소스 코드 (2003)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        심슨즈 히트 앤 런 소스 코드 (2003)

- 소스 코드는 알 수 없는 포럼에서 발견되었으며 약간 정리되었습니다.
- 소스 코드는 컴파일된 개발/디버그 버전으로 다운로드할 수 있습니다.
- 소스 코드는 게임의 PS2, Xbox 및 PC 버전에 대해 사용 가능합니다.
- 소스 코드는 GitHub에 업로드하기에 너무 크기 때문에 MEGA에 호스팅되었습니다.
- MEGA 폴더에는 게임을 컴파일/빌드하기 위한 추가 자산 및 스크립트가 포함되어 있습니다.
- ""documents/"" 폴더에는 개발 팀에 대한 개인 정보가 포함되어 있지 않습니다.```

        Hacker News 의견

- 해당 코드는 C++로 작성되었으며, Homeworld와 같은 다른 게임과 유사한 스타일을 가지고 있습니다.
- Reubs라는 유튜버가 현대적인 도구와 엔진을 사용하여 전체 게임을 리메이크하고 있습니다.
- 해당 코드는 다른 오픈 소스 C++ 프로젝트와 비교하여 깨끗하고 가독성이 좋다는 평가를 받고 있습니다.
- 유출된 코드는 이전에도 유출되었지만 누락되었습니다.
- 이 게임은 The Simpsons 시리즈에 대한 참조와 암시로 인해 사랑받고 있습니다.
- 코드의 주석은 게임의 분위기와 일치하며, 즐겁습니다.
- 일부 사람들은 이 게임을 현대 컴퓨터에서 실행시키는 것에 관심이 있습니다.```
"
"https://news.hada.io/topic?id=9716","올해의 공포 게임은 'Doom II' 모드입니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      올해의 공포 게임은 'Doom II' 모드입니다.

     * 'MyHouse.wad', Doom II 모드,는 그의 광신도를 통해 올해 최고의 공포 게임으로 손꼽힙니다.
     * 이 모드에는 이전에는 불가능하다고 생각되던 도움과 같은 변이된 2층 건물 등의 요소가 포함되어 있습니다.
     * 모드의 창조자인 Veddge는 게임 주변에 신비로움과 흥미를 조성하여 플레이어들이 그 비밀을 찾도록 이끌고 있습니다.
     * 이 모드는 id Software의 공동 창립자 인 John Romero 및 심리 공포 소설 'House of Leaves'의 저자인 Mark Danielewski를 포함한 산업 전문가들로부터 칭찬을 받았습니다.
     * 'MyHouse.wad'는 플레이어들이 변화무쌍하고 예측할 수 없는 환경에서 갇혀 무력해진 느낌을 경험할 수 있는 독특하고 불안한 게임 플레이를 제공합니다.
     * 이 모드는 플레이어들 사이에서 토론과 이론을 일으키며, 어떤 사람들은 이를 이혼과 같은 실제 경험과 연결시키기까지 합니다.
     * 모드를 둘러싼 신비로움에도 불구하고, 두려움을 일으키고 플레이어들과 연결할 수 있는 능력으로 인해 이 모드는 공포 장르에서 돋보이는 작품이 되었습니다.

        Hacker News 의견

     * 'MyHouse'라는 이름의 Doom II 모드가 올해의 공포 게임으로 선정되었다.
     * 이 모드는 예술성이 칭찬받으며 공포 게임보다는 스릴러로 간주된다.
     * 모드의 제작자는 개인적인 경험을 게임에 담았으며, 그의 아내의 TikTok 콘텐츠를 통해 확인할 수 있다.
     * 일부 사람들은 공포 게임을 너무 격렬하게 느끼지만, 이 모드는 흥미로운데 무서운 요소가 없다.
     * Mac에서 모드를 플레이하는 방법에 대한 안내가 제공되며, Doom II의 사본을 구매하고 필요한 파일을 다운로드해야 한다.
     * 'Ashes 2063'라는 다른 Doom 모드가 언급되었는데, S.T.A.L.K.E.R.와 Fallout의 요소를 결합하고 있다.
     * 댓글 섹션에서는 모드를 플레이하는 방법과 특정 파일의 목적에 대한 혼란이 드러났다.
     * 이 토론은 HackerNews 커뮤니티에서 GZDoom WAD의 인기를 강조하며, 특히 Doom 팬들 사이에서 인기가 있다.
"
"https://news.hada.io/topic?id=9797","애플, 중국에서 WeChat 앱 내에 온라인 스토어 오픈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    애플, 중국에서 WeChat 앱 내에 온라인 스토어 오픈

     * 애플, 중국의 텐센트의 위챗 메시징 앱에서 온라인 스토어 출시
     * 위챗은 12억 명 이상의 사용자를 보유한 중국 최대 메시징 플랫폼
     * 사용자는 위챗 내에서 ""미니 프로그램""에 접근할 수 있으며, 이는 사실상 앱임
     * 애플의 위챗 스토어는 미니 프로그램 형태로 제공됨
     * 사용자는 미니 프로그램을 통해 최신 아이폰 14 시리즈를 포함한 애플 제품 전체를 구매할 수 있음
     * 위챗을 통한 주문은 무료 배송 혜택이 있으며, 일부 사용자는 3시간 배송 서비스를 이용 가능
     * 애플은 최근 몇 년간 중국 최대 인터넷 플랫폼에서의 입지를 확대해왔음
     * 위챗은 중국 사회에서 메시징, 항공편 예약, 결제 등에 널리 사용됨
     * 애플은 위챗의 대규모 사용자 기반을 통해 더 많은 고객에게 접근하고자 하며, 중국에서의 아이폰 판매는 6%의 연간 성장률을 유지하고 있다.
     * 애플은 또한 중국에서 인기 있는 전자 상거래 플랫폼인 Tmall과 JD.com에 공식 스토어를 운영하고 있음
"
"https://news.hada.io/topic?id=9708","2020년 노트북 구매 중단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            2020년 노트북 구매 중단

     * 새 노트북을 구매하던 작가는 이제는 더 나은 품질과 낮은 비용을 위해 오래된 기계를 선호합니다.
     * 그들은 새 배터리와 하드웨어 업그레이드로 거의 4년간 사용한 2006년식 중고 노트북으로 전환했습니다.
     * 새 노트북을 사지 않는 것은 돈과 자원을 절약하며 환경 영향을 줄입니다.
     * 최신 노트북은 오래된 것과 비교하여 에너지 효율성에서 큰 개선이 없습니다.
     * 작가는 저에너지 소프트웨어를 사용하고 하드 디스크 드라이브를 고체 상태 드라이브로 교체하여 오래된 노트북을 부활시키는 것을 권장합니다.
     * 그들은 데이터를 저장하기 위해 SD 카드를 사용하고 여러 대의 예비 노트북을 백업으로 보유하고 있습니다.
     * SD 카드는 속도를 향상시키고 하드 디스크를 원활하게 유지하는 데 도움이 됩니다.
     * 이 전략은 다른 노트북 모델과 브랜드에도 적용될 수 있습니다.
     * 새 노트북을 구매하는 것과 비교하여 비용 효율적인 접근 방식입니다.
     * 이 기사는 지속 가능성을 우선시하고 컴퓨터의 구식화를 줄이는 새로운 경제 모델을 요구합니다.
     * 작가는 에너지 사용과 폐기물을 줄이기 위해 2011년 이전의 Thinkpad와 같은 노트북을 제작하는 것을 제안합니다.
     * 저렴한 옵션은 글쓰기, 웹 브라우징, 커뮤니케이션 및 엔터테인먼트에 적합할 수 있습니다.

        Hacker News 의견

     * 더 많은 RAM과 빠른 SSD로 오래된 노트북 업그레이드는 성능과 배터리 수명을 크게 향상시킬 수 있습니다.
     * 오늘날 많은 노트북은 나이를 먹기 어렵게 설계되어 있으며, 미래에는 구식이 되어 제한적일 수 있는 부품이 납땜되어 있습니다.
     * 리눅스는 효율적이고 최신 기술로 구성된 오래된 하드웨어에 대한 훌륭한 운영 체제입니다.
     * 평균적으로 노트북은 3-5년마다 교체되지만, 일부 사람들은 오래된 노트북을 더 오랫동안 사용하는 것을 선호합니다.
     * 새로운 노트북은 더 효율적이지만, 계산 능력이 증가함에 따라 이득이 상쇄될 수 있습니다.
     * 오래된 노트북을 수리하는 것은 어려울 수 있으며, 제조업체들은 종종 부품 교체를 어렵게 만듭니다.
     * 중고 노트북 구매는 보증이 있는 정성스러운 마켓플레이스에서 훨씬 더 가치를 제공할 수 있습니다.
     * 웹 개발이나 3D 프로그래밍과 같은 특정 작업에는 오래된 노트북이 여전히 충분할 수 있습니다.
     * 저성능 노트북을 위한 코드 최적화는 전반적인 성능을 향상시킬 수 있습니다.
     * 강력한 칩을 장착한 최신 노트북은 프로그래밍이나 비디오 편집과 같은 작업에 대한 성능을 크게 향상시킬 수 있습니다.
     * FreeBSD와 같은 다른 운영 체제로 전환하면 오래된 노트북의 속도와 성능을 개선할 수 있습니다.
"
"https://news.hada.io/topic?id=9732","1983년 이후 등록금 비용이 710% 상승","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        1983년 이후 등록금 비용이 710% 상승

     * 미국의 등록금 비용은 1983년 이후 710% 상승하여 학생 대출 부채가 크게 증가하였습니다.
     * 미국의 미상환 학생 대출 부채는 이제 1.78조 달러로, 많은 선진국의 GDP보다 높습니다.
     * 등록금 상승과 관련된 부채 증가는 정책적 해결책이 필요한 임박한 경제 위기를 야기하고 있습니다.
     * 지난 40년 동안 등록금 비용은 인플레이션을 4대1로 앞서 나갔습니다.
     * 대부분의 학생 대출 부채(93%)는 연방 소유이며, 4500만 명의 미국인이 연방 학생 대출 부채를 가지고 있습니다.
     * 고등 교육 기관의 학생 등록은 2000년 이후 지속적으로 증가하여 수요와 등록금이 상승하였습니다.
     * 2008-09년 경기 침체 기간 동안 고등 학위 수요는 사적 이윤 추구 대학의 등록 증가로 이어졌으며, 이들은 높은 연체율을 가지고 있습니다.
     * 부채 문제에 대한 단기적인 해결책으로는 연체 가능성이 매우 높은 대출을 탕감하거나 취소하고, 신용 기관에 보고될 수 있는 정보를 제어하는 것이 있습니다.
     * 장기적인 해결책은 고등 교육의 기본 비용을 통제하는 것으로, 무료 등록금을 제공하는 프로그램을 확대하고 미기금이 있는 사립 및 공립 대학에 투자하는 것이 포함됩니다.
     * 학생 대출은 단기적으로 저소득층과 중산층에 자극을 제공하고 장기적으로는 고등 교육 시스템을 변형시키는 기회를 제공합니다.

   우리나라 경우는 15년째 등록금은 거의 동결 상태입니다.
   2010년에 등록금을 '직전 3년 치 평균 물가상승률의 1.5배' 까지만 올릴 수 있도록 교육법을 개정했기 때문
   그럼 우리나라가 싼거 같지만, 1985년 이후 누적 상승률이 전문대학 9.2배, 국공립대 5.1배, 사립대 6.3배로 미국이나 우리나 별 차이 없습니다.
   대학들은 손해를 본다고 얘기하지만, 사립대 적립금은 계속 쌓이고 있고, 2009년 기준 OECD 회원국중 미국 다음으로 등록금이 비싼 나라이고, 현재는 세계 5위 입니다.

   [1] https://v.daum.net/v/20230607120307326
   [2] http://www.bosa.co.kr/news/articleView.html?idxno=2191695
   [3] https://m.blog.naver.com/owls3753/223038953483
   [4] https://m.khan.co.kr/opinion/column/article/202305290300105

        Hacker News 의견

     * 등록금 비용은 1983년 이후로 710% 상승했으며, 정부 지원 학자금과 고등 교육을 위한 주정부 자금 감소 등의 요인에 의해 증가했습니다.
     * 정부 대출 가능성으로 인해 대학들은 학생들로부터 거의 저항을 받지 않고 등록금을 인상할 수 있게 되었습니다.
     * 일부는 등록금의 급격한 상승을 막기 위해 대학 가격을 법적으로 인플레이션율로 한정해야 한다고 제안합니다.
     * 대학들은 중앙집중화되고 유사한 방식으로 실패하고 있으며, 아마도 대학 학위와 사회적 지위와 관련이 있을 수 있습니다.
     * 대학 학위 구매자들은 비용에 대해 합리적으로 행동하지 않을 수 있으며, 고가 학교들은 더 나은 결과나 기회를 제공한다는 입장을 취하고 있습니다.
     * 커뮤니티 대학은 전통적인 대학에 비해 더 저렴한 대안을 제공하며, 명시적인 이전 프로그램을 통해 우수한 대학으로의 이전이 가능합니다.
     * McGraw-Hill과 같은 교과서 회사들은 학생들이 학교에 가야만 하는 사실을 이용하여 교과서에 고가의 가격을 부과합니다.
     * 고등 교육을 위한 주정부와 연방 정부의 자금 감소는 등록금 상승 분석 시 고려되어야 합니다.
"
"https://news.hada.io/topic?id=9819","Wireshark 25주년: 모든 것을 시작한 이메일과 배운 교훈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Wireshark 25주년: 모든 것을 시작한 이메일과 배운 교훈

     * Wireshark, 네트워크 분석기, 25주년을 기념합니다.
     * 프로젝트는 1998년 제럴드 컴스가 보낸 이메일로 시작되었습니다.
     * 당시 프로토콜 분석기는 드물었고, Wireshark는 무료 GUI 옵션을 제공했습니다.
     * 프로젝트는 빠르게 번창하는 개발자 커뮤니티를 형성했습니다.
     * 오늘날, Wireshark는 전 세계에서 네트워크 분석과 교육에 사용됩니다.
     * 프로젝트의 성공은 사용자, 교육자, 개발자의 요구를 충족시키는 데 기인합니다.
     * Wireshark는 변호사, 회계사, 인프라의 지원도 필요로 합니다.
     * 최근에 프로젝트는 계속된 성장을 위해 Wireshark 재단으로 이전했습니다.
     * 오픈 소스 프로젝트를 시작하면 보람찬 경력과 기회를 얻을 수 있습니다.
     * 커뮤니티와 새로운 시작이 성공의 핵심입니다.
     * 저자는 Wireshark의 사용자와 기여자에게 감사의 말씀을 전합니다.

        Hacker News 의견

     * Wireshark는 네트워크 문제를 이해하는 가장 중요한 도구로 간주됩니다.
     * 네트워크 동작을 해결하고 추적하는 데 사용될 수 있습니다.
     * Wireshark는 25년 동안 존재하며 네트워크 문제 해결을 쉽게 만들었습니다.
     * 전자 기기 세계에서 멀티미터와 비교되며 디버깅에 필수적입니다.
     * 많은 전문가들이 자신의 경력 성장과 학습에 Wireshark를 크게 도움받았습니다.
     * 기술 지원 및 네트워크 문제에 대한 솔루션 제공에 매우 가치있었습니다.
     * Wireshark의 네트워크 스트림 및 Tcpdump에 저장된 파일을 분석하는 능력은 수많은 시간을 절약했습니다.
     * 네트워크 문제 디버깅 및 네트워크 연결에 대한 학습을 위해 널리 사용되는 무료 도구입니다.
     * Wireshark의 전신인 Ethereal은 첫 번째 무료 GUI 네트워크 패킷 분석기는 아니었지만, 네트워크 트래픽 분석의 게임 체인저였습니다.
"
"https://news.hada.io/topic?id=9707","실습을 통해 전자공학 배우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            실습을 통해 전자공학 배우기

     * 전기공학을 실제 경험을 통해 배우는 기사
     * 소프트웨어 엔지니어 입문자를 대상으로 전자공학 지식을 확장하고자 함
     * 저자는 전자공학을 이해하기 위한 실습의 중요성을 강조함
     * 기사는 전자공학을 배우기 위한 초보자를 위한 팁과 자료를 제공함
     * 자신의 프로젝트를 만들고 기기가 작동하는 방식을 이해하는 등 전자공학 학습의 이점을 강조함
     * 저자는 독자들에게 간단한 프로젝트로 시작하여 점진적으로 복잡한 프로젝트로 진행할 것을 권장함
     * 기사는 전자공학 학습을 위한 온라인 튜토리얼과 강좌의 가용성을 언급함
     * 다른 전자공학 애호가들과 연결하고 지도를 구하기 위해 온라인 커뮤니티와 포럼에 가입하는 것을 제안함
     * 저자는 전자공학 습득에 있어 실제 경험의 가치를 강조함

        Hacker News 의견

     * 자습으로 공부하는 소프트웨어 엔지니어가 하드웨어 구성품과 전자에 대해 배우는 것에서 기쁨을 느낍니다.
     * 기사에서는 nand2tetris 프로젝트와 브레드보드를 사용하여 전자에 대해 배우는 방법을 언급합니다.
     * 첫 번째 댓글은 전자를 처음부터 배우는 복잡성에 압도된다는 감정을 표현합니다.
     * 두 번째 댓글은 Ben Eater의 8비트 컴퓨터 키트를 추천하며 전자를 배우기 위한 추가 자료를 제공합니다.
     * 다른 댓글은 개별 트랜지스터 프로젝트를 통해 전자를 배우는 것의 실용성과 학습 가치를 비판합니다.
     * 한 댓글러는 전자를 배우기 위한 자료 목록을 공유하고 이 기사를 목록에 추가할 계획입니다.
     * 다른 댓글러는 아두이노와 다른 구성품을 사용한 실습 프로젝트를 통해 전자를 배우는 것을 선호합니다.
     * 한 댓글러가 전자 기초에 대한 책을 추천합니다.
     * 한 댓글러는 명확한 설명과 초보자 친화적인 전자 학습을 위한 웹사이트를 추천합니다.
     * 어떤 추천된 책들이 구성품 구매 목록을 제공하는지에 대한 질문이 제기됩니다.
"
"https://news.hada.io/topic?id=9691","앱이 권한을 요청할 때, "가짜 데이터 공급" 옵션이 있어야 한다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 앱이 권한을 요청할 때, ""가짜 데이터 공급"" 옵션이 있어야 한다.

     * 어플리케이션이 권한을 요청할 때, 단순히 예 또는 아니오를 선택하는 대신 가짜 데이터를 제공할 수 있는 옵션이 있어야 한다는 저자의 제안입니다.
     * 저자는 가짜 연락처 생성이나 마이크 접근을 위한 무작위 환경음 생성과 같은 예시를 들며, 이러한 방식이 어떻게 작동할 수 있는지 설명합니다.
     * 저자는 가짜 데이터를 통해 서비스에게 직접적인 벌칙을 가하는 것이 불참보다 효과적이라고 믿습니다.
     * 다른 사용자들은 이 아이디어를 지지하며 안드로이드 기기에서 위치 위장에 대한 유사한 해결책에 대해 논의합니다.
     * 저자는 웹 브라우저가 종종 특정 데이터에 대한 서비스 접근을 방지할 수 있는 옵션을 가지고 있다며, 어플리케이션도 이와 유사한 옵션을 가져야 한다고 제안합니다.
     * 사용자들은 브라우저 확장 프로그램이나 추적 목적으로 데이터 차단 또는 가짜 데이터 생성을 위한 소프트웨어에 대한 경험을 공유합니다.
     * 저자는 인공지능을 사용하여 데이터 마이너들을 혼란스럽게 할 수 있는 허황된 데이터 생성이 가능하다고 제안합니다.
     * 사용자들은 현재 어플리케이션 권한의 한계를 논의하며, 자신들의 데이터에 대한 더 많은 통제를 원하는 욕구를 표현합니다.
     * 일부 사용자들은 선택적인 어플리케이션 권한 또는 위치 위장에 대한 기존 해결책을 언급하지만, 널리 지원되거나 유지되지 않을 수 있다는 점을 언급합니다.
     * 저자와 다른 사용자들은 권한 없이 작동하지 않는 어플리케이션에 대한 접근 차단의 잠재적인 이점과 단점에 대해 논의합니다.
     * 사용자들은 광고 차단을 하지만 광고를 클릭하는 브라우저 확장 프로그램과 같은 유사한 아이디어에 대한 경험을 공유합니다.
     * 저자와 다른 사용자들은 논의합니다.

        Hacker News 의견

     * 사용자가 실제 데이터에 대한 액세스 권한을 거부하는 경우 앱은 우아하게 처리해야 합니다.
     * Apple의 정책은 사용자를 처벌하거나 앱을 종료시키는 것을 금지합니다.
     * 앱은 이제 이전에 App Store에서 거부되었던 기능을 사용자에게 요구할 수 있습니다.
     * 루팅된 안드로이드에서의 XPrivacy는 7년 이상 전부터 사용자가 가짜 데이터를 입력할 수 있게 했습니다.
     * ""가짜 데이터 입력"" 옵션은 대체 데이터 소스에서 데이터를 입력할 수 있도록 확장되어야 합니다.
     * 이는 사용자의 제어력, 테스트 기능, 접근성 목적을 더욱 향상시킬 것입니다.
     * iOS에서는 허용되었는지 거부되었는지 권한을 구분할 수 없습니다.
     * 사용자는 라이브러리가 비어 있는지 또는 특정 유형의 데이터에 대한 액세스가 거부되었는지 알 수 없습니다.
     * 운영 체제는 모든 권한 범주에 대해 ""예, 그러나 앱에 가짜 데이터를 입력"" 옵션을 제공해야 합니다.
     * 특정 권한이 필요한 이유를 명확히 하는 것은 앱 거부를 피하기 위해 중요합니다.
     * 앱 제작자에게는 특정 권한 없이도 기능을 사용할 수 있는 방식으로 앱을 설계하는 부담이 있어야 합니다.
     * 삼성 폰에는 카메라 및 마이크 액세스 토글이 있어 앱이 이를 사용하지 못하도록 차단할 수 있습니다.
     * 가짜 데이터 입력은 사용자 데이터를 개선하기 위해 사용자 데이터가 필요하지 않은 앱의 데이터 마이닝을 방해할 수 있습니다.
     * WhatsApp과 같은 앱에는 가짜 데이터 입력이 중요하지 않을 수 있습니다. 해당 앱은 다른 플랫폼과 사용자 데이터를 동기화합니다.
"
"https://news.hada.io/topic?id=9779","오픈소스 PDF 라이브러리인 Ghostscript에서 치명적인 RCE 취약점이 발견됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            오픈소스 PDF 라이브러리인 Ghostscript에서 치명적인 RCE 취약점이 발견됨

     * Ghostscript에서 치명적인 수준의 원격 코드 실행(RCE) 취약점(CVE-2023-36664)이 발견됨.
     * 가장 최신 버전인 10.01.2 이하 모든 버전에 영향을 줌.
     * Kroll의 분석가인 G. Glass와 D. Truman가 취약점의 개념 증명(PoC)을 구현함.
     * Ghostscript 내의 gp_file_name_reduce() 함수가 취약점의 원인.
          + 해당 함수가 파일 경로를 취합하고 단순화하는 과정에서 특수한 파일 경로를 만나면 예기치 않은 결과가 반환됨.
          + 파일을 실행하기 전에 유효성을 체크하는 gp_validate_path()함수가 호출되기 전에 이미 정보가 변경되어 접근할 수 없는 경로에 있는 파일을 실행할 수 있음.
     * Linux, Windows 등 모든 플랫폼에서 영향을 주며, Ghostscript를 사용하는 모든 소프트웨어에서 EPS(Embedded Postscript)를 통해 취약점을 실행할 수 있는 것을 확인.
          + 데모 영상에서는 Windows에서 계산기나 대화 상자 등을 여는 EPS 파일을 보여줌.
     * Linux 시스템은 즉시 Ghostscript를 가장 최신 버전으로 업데이트해야 하며, Windows에서는 의존하는 Ghostscript의 버전이 올라갈 때까지 관련된 소프트웨어를 사용하지 않는 것을 권장함.

   취약점은 저번 달에 공개된 것이고, 이미 대부분의 리눅스 배포판에서는 수정된 버전이 배포되었다고 합니다.
   다만 문제는 업데이트가 어려운 Windows 프로그램이나 라이브러리를 내장한 경우라고 하네요.

   Ghostscript를 쓰는 곳이 정말 많은데, 실행 환경을 자세히 살펴볼 필요가 있을 것 같습니다.
"
"https://news.hada.io/topic?id=9785","Prettier 3.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Prettier 3.0 릴리즈

     * ECMAScript Modules 로 이관 완료(CommonJS로도 사용은 가능)
     * 주요 변경 사항
          + 마크다운 처리방식 변경
               o 라틴문자와 한국어/중국어/일본어 글자 사이에 공백이 더 이상 삽입되지 않음
               o 한국어 단어 안에서 줄바꿈 안함: 한국어의 경우 잘못된 빈칸 삽입이 의미를 바꿔버리므로
          + trailingComma 의 기본 값이 all로 변경
          + 플러그인 인터페이스가 대폭 수정
"
"https://news.hada.io/topic?id=9712","PdfGptIndexer: GPT-2 및 FAISS를 사용하여 PDF 텍스트 데이터 색인화 및 검색","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        PdfGptIndexer: GPT-2 및 FAISS를 사용하여 PDF 텍스트 데이터 색인화 및 검색

     * PdfGptIndexer: GPT-2과 FAISS를 사용하여 PDF 텍스트 데이터를 색인화하고 검색하는 도구입니다.
     * Textract, Transformers, Langchain, 그리고 FAISS와 같은 라이브러리를 사용하여 효율적인 정보 검색과 검색 정확도를 달성합니다.
     * 이 도구는 PDF 문서를 처리하고 텍스트를 추출한 후 GPT-2 토크나이저를 사용하여 관리 가능한 청크로 분할합니다.
     * 각 텍스트 청크는 LangChain 라이브러리를 통해 GPT-2 모델을 통해 임베딩됩니다.
     * 이러한 임베딩은 FAISS 인덱스에 저장되어 압축 및 효율적인 저장이 가능합니다.
     * 질의 인터페이스를 통해 사용자는 질문을 통해 색인화된 데이터에서 관련 정보를 검색할 수 있습니다.
     * 임베딩을 로컬에 저장하는 것은 속도, 오프라인 액세스, 계산 절약 및 확장성과 같은 이점을 제공합니다.
     * 프로그램을 실행하려면 종속성을 설치하고 저장소를 복제한 후 OpenAI API 키를 대체하고 스크립트를 실행하면 됩니다.
     * 임베딩이 계산되고 저장된 후에 질의 인터페이스가 시작됩니다.
     * 사용자는 게시물에서 제공되는 포괄적인 가이드를 사용하여 ChatGPT를 사용하여 사용자 정의 데이터를 탐색할 수 있습니다.
"
"https://news.hada.io/topic?id=9698","윈도우 업데이트 복구: 윈도우 95, 98, ME, 2000 및 XP에서 윈도우 업데이트 수정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          윈도우 업데이트 복구: 윈도우 95, 98, ME, 2000 및 XP에서 윈도우 업데이트 수정

        Hacker News 의견

     * 지원 종료된 Microsoft Windows와 보안이 불분명한 서버에서 업데이트를 사용할 때 주의해야 합니다.
     * 중요한 장비가 고대 버전의 Microsoft Windows에 갇혀 있다면, 지속 가능한 장비로 업그레이드하는 것을 고려해보세요.
     * Debian Stable은 많은 비즈니스 및 개인용 목적에 적합한 운영체제 플랫폼입니다.
     * 일부 사용자는 Windows 11 업데이트와 재부팅에 대해 더 많은 제어를 원합니다.
     * Windows 2000 및 XP의 보안 업데이트는 여전히 Microsoft로부터 제공됩니다.
     * Windows 업데이트는 Mac 플랫폼을 사용자에게 효과적으로 판매하는 데 도움이 되었습니다.
     * Windows XP는 사용 후 몇 일 후에 자동 업데이트되었습니다.
     * Windows XP의 마지막 업데이트는 2019년 5월에 출시되었으며, 이는 해당 운영체제 출시 후 18년이 지난 후의 업데이트입니다.
     * DOS 에뮬레이션은 Windows 3.1, 95, 98 및 Me 에뮬레이션보다 쉽습니다.
     * Win 9x 시대의 오래된 게임과 프로그램의 보존은 쉬운 에뮬레이션의 부족으로 어려움을 겪고 있습니다.
     * Windows 업데이트를 위한 중앙 저장소는 추가적인 보안 업데이트를 제공합니다.
     * Windows Update Restored와 Legacy Update의 장점은 명확하지 않습니다.
"
"https://news.hada.io/topic?id=9780","GN⁺: 디즈니, 넷플릭스 등이 FTC의 "Click to Cancel" 제안과 싸우고 있음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          GN⁺: 디즈니, 넷플릭스 등이 FTC의 ""Click to Cancel"" 제안과 싸우고 있음

     * 디즈니, 넷플릭스 등 기업들이 연방거래위원회(FTC)가 제안한 ""클릭해서 취소하기"" 규칙에 반대 중
     * 이 규칙은 스트리밍 서비스에 사용자가 쉽게 가입할 수 있는 것처럼, 구독도 취소하기 쉽도록 해야 한다는 것
          + 가입과 동일한 방식으로 취소가 가능해야 함. 온라인으로 직접 가입한 경우 방문/전화가 필요 없게 해야 한다는 것
     * 업체들은 이 정책이 혼란을 야기하고 소비자에게 잠재적인 피해를 줄 수 있다고 주장
     * 또한 제안된 규칙이 불필요하고 부담스러우며, 이미 명확하고 쉬운 취소 옵션을 제공하고 있다고 주장하고 있음
     * FTC는 이 규칙이 사용자들이 원치 않는 구독에 대해 청구되는 것을 방지할 것이라고 믿고 있음
     * 이 싸움의 결과는 스트리밍 산업과 소비자 보호에 상당한 영향을 미칠 수 있음

   정말 필요하다고 생각됩니다. 아직도 많은 회사들이 낙전 수입을 노리고 구독 취소를 어렵게 만드는 것 같아요.

   등록만큼 취소도 쉬워야한다가 핵심인 것 같네요.

   반대로 구독을 어렵게만들..?

   4주 무료 구독 취소 체험

        Hacker News 의견

     * 터키에는 ""e-Devlet""이라는 정부 앱이 있어 사용자가 구독을 쉽게 취소할 수 있습니다.
     * 구독 공급업체는 취소가 어려울 수 있으며 전화 또는 제한된 취소 창이 필요할 수 있습니다.
     * 이탈리아와 네덜란드 같은 일부 국가는 소비자 보호 및 구독 취소를 용이하게 하는 법률을 시행하고 있습니다.
     * 디즈니와 넷플릭스는 FTC의 ""클릭하여 취소"" 제안에 반대하고 있으며, 이는 구독 취소를 용이하게 할 수 있습니다.
     * 일부 사용자들은 취소가 가입과 마찬가지로 쉬워야 하며, 어려운 취소 절차는 사기로 여겨질 수 있다고 믿고 있습니다.
     * 독일은 전자 계약 취소를 동의하는 것만큼 간단하게 해야 한다는 법을 시행하고 있습니다.
     * 일부 회사들은 취소 법률을 피하기 위해 노력하지만, 사용자는 이메일과 같은 대체 방법을 통해 여전히 취소할 수 있습니다.
     * 아마존 프라임, 오디블, 넷플릭스와 같은 구독은 간단한 마우스 클릭으로 취소할 수 있지만, 일부 어두운 패턴이 사용될 수도 있습니다.

   터키의 e-Devlet 앱 사례가 재미나네요
     * 정부가 운영하는 앱내에서 모든 서비스 취소가 가능
     * 이 앱 운영전에는 ISP들이 취소 요청서를 팩스(아무도 안가지고 있는)로 꼭 보내라고 했었음
     * 이를 위한 법안이 있는데 ""취소는 구독보다 어려울 수 없다"" ""만약 쉬운 취소 방법이 없다면 돈을 낼 의무가 없다""
     * 취소가 안되면 e-Devlet 앱 내에서 회사를 고소 가능. 즉시 지역 소비자 법원으로 날아가고, 법원에서 회사에 변호인을 출두하라고 한후에 소비자 위원회가 모여서 함께 판결. 여기까지 약 3달까지 걸리지만 사용자가 할 일은 없음

   국내 도입이 시급합니다
"
"https://news.hada.io/topic?id=9709","Show GN: 요약된 경제/테크 외신을 요약해주는 챗봇","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Show GN: 요약된 경제/테크 외신을 요약해주는 챗봇

   안녕하세요. OpenAI API를 이용한 사이드프로젝트를 이것저것 계속 만들다가 쓸만하다 생각드는 것들을 공개하고 있는데요. 이번 주말에 경제/테크 외신을 자동으로 번역+요약해서 챗봇 UI로 설명하는 웹 앱을 주말에 완성하여 공유합니다.

   챗봇 형태로 뉴스를 전달하는 아이디어는 몇년전에 잘쓰다가 지금은 사라진 Quartz라는 앱을 떠올리면서 만들었고요. Quartz에서 만들었던 앱은 편집자 6명이 뉴스를 요약/선별했다면 이 웹앱은 GPT API와 간단한 랭킹 알고리즘이 편집자를 대신한다는 점이 다릅니다. (몇년 사이에 기술이 참 많이 발전했네요)

   테스트 기간 동안 이동 중에 가끔씩 켜서 새로운 뉴스를 확인하기에 괜찮다고 판단되어 공개하게되었고요. 이런 서비스는 저에게 필요한거라서 계속 개선해 나갈 예정입니다. 인기뉴스, 주간뉴스레터도 준비해놨으니 많은 관심 부탁드립니다.

   안녕하세요 ! 이용해보다가 질문이 생겨서 댓글을 달아놓게 되었습니다!
   처음 서비스를 이용한 후 나갔다 다시 들어오면 또 똑같은 뉴스를 제공 받더라구요. 혹시 오픈AI로 요약된 파일들을 따로 데이터베이스에 저장한 후 불러오는 형태로 제작하신 건가요!?

   네 중간에 vector DB에 저장하는 단계가 있습니다

   감사합니다 ! 어떤 DB를 사용하는지 알 수 있을까요!?

   7월 12일 업데이트
     * 뉴스 더보기(이모지기 달어간 버튼)를 눌렀을때 더 긴 요약문이 나오도록 수정되었습니다.
     * 외신 매체가 추가되었습니다.

   신기하네요

   와우 멋지네요 뉴스데이터를 GPT로 보내기 전에 뉴스수집(크롤링)이 먼저일것 같은데,
   어떤 언론사들의 데이터를 어떤식으로 수집하시는지 궁금하네요~

   멋진 시도입니다.
   API 사용비용은 어떻게 대응하시는 것일까요?

   DB, 호스팅, OpenAI API까지 지금은 최대한 무료 티어로 사용하고 있습니다. 요즘 AI API나 SaaS 서비스들 경쟁이 심해져서 사이드프로젝트 정도는 무료티어로 가능한 것 같아요

   경쟁이 심해져서 <= 무료티어로 감당할 수 있는 범위가 확장되었다는 뜻입니다

   좋은 아침입니다. 최신 뉴스를 준비했습니다. 먼저 알려드릴 소식입니다. 2023년 퍼비(Furby)가 세계 정복을 계획하고 있지 않다는 것을 확인할 수 있다.

   아이들이 퍼비가 더 이상 집에 머무르지 않을 것이라고 이야기했을 때, 그들은 이해한 것 같았다. 하지만 하루 지나서 세 살짜리 아이가 돈이 충분히 있었으면 퍼비를 사고 싶다는 말을 했다. 2023년 퍼비는 세계 정복 대신에 달을 원한다.

   당황...!!
   흥미로운 서비스네요.

   추억의 Furby..

   오 좋네요!

   해당 뉴스에 대해서 자세히 듣기 위해 왼쪽 키워드 버튼을 한번 누르는 듯 한데, 나오는 요약 글이 그리 길지 않아서 처음부터 한번에 다 표시해줘도 좋지 않을까요? 버튼 클릭이 너무 많은 느낌이 들어요 ㅎ 기사 링크도 그 안에만 있고요.

   저도 그 부분을 개선점으로 생각하고 있습니다. 원래 의도는 한 줄요약에서 더보기 누르면 자세한 세 문장이 나오는건데 뉴스 원문의 길이가 제각각이라 제어가 잘 안되더라고요;

   ""이런 뉴스에 관심있어?"" → (관심표시) → ""뉴스 요약문""

   의도는 이런 느낌인데 지금 완전하지 않네요 ㅋㅋ

   헤드라인을 보여주고 클릭해서 들어가는, 그런 느낌을 낸다면...
   아예 한 번에 한 2~3개씩 뉴스 헤드라인을 보여주고, 그 중에서 관심있는 걸 클릭하게 하는 것도 좋을 것 같네요.

   뉴스입니다. A, B, C..

     [a]< [b] [c] [다른 뉴스]

   A는 어떤어떤...
   [링크] [b] [c] [다른 뉴스]

   이런 식으로 뉴스 사이트 탐방하듯? 하는 것도 아이디어 같네요.

   물론 처음부터 요약이 한 방에 나오는 것도 편하겠다는 생각이 듭니다.

   의견 고맙습니다. 시작할 때 몇개의 주제를 보여주고 고르게 만드는 것도 고려하고 있습니다.

   오 멋지네요
"
"https://news.hada.io/topic?id=9737","40년 된 컴퓨터로 의류를 디자인하는 일본 공장 [비디오, 한글자막]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 40년 된 컴퓨터로 의류를 디자인하는 일본 공장 [비디오, 한글자막]

     * 미야타 직물 주식회사는 1913년에 창립되어 한텐(에도시대에 만들어진 솜을 넣은 방한복), 작업복등을 제조하는 회사
     * 40년된 컴퓨터에서 카셋트 레코더로 ""패턴 편집기""를 로딩해서 직조물 패턴을 편집하고 카드에 인쇄(펀칭)
          + ""AUTOMATIC PATTERN PUNCHING SYSTEM""
          + 펀치카드는 짧은 무늬의 경우 30cm, 긴 무늬는 10m에 약 8만개의 구멍
     * 펀치카드를 기계가 읽어서 옷감을 직조

   이 천공카드 방식은 1725년부터 이미 베틀 짜는데 사용되었다고 하네요.
   https://en.wikipedia.org/wiki/Punched_card#History

        Hacker News 의견

     * 텍스타일 기계의 코드를 역공학하여 대규모 텍스타일 맞춤화 가능
     * 기술은 목표를 달성하기 위한 도구, 목적 자체가 아님
     * 텍스타일은 펀치 카드와 기계식 기계와 오랜 역사를 가지고 있음
     * 일본은 새로운 기술에 흥분하기보다 문제 해결에 집중함
     * 일본 공장에서 오래된 기술을 사용하여 장치를 폐기하지 않고 재활용 문제가 증가함
     * Sharp MZ-80K 컴퓨터는 텍스타일 디자인에 인기 있는 기계였음
     * 일부 예술가들은 이전 기계로 이진 해킹된 글리치 자수와 니팅을 사용함
     * 일본 공장은 천을 만드는 산업용 기계를 제어하기 위해 40년 된 컴퓨터를 사용함
     * 산업 자동화 기계는 복잡하지만 효과적으로 작동함
     * 테이프 카세트가 음악 산업에서 부활하고 있음
"
"https://news.hada.io/topic?id=9772","IntelliJ Rust - IntelliJ 기반 IDE를 위한 오픈소스 Rust 플러그인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           IntelliJ Rust - IntelliJ 기반 IDE를 위한 오픈소스 Rust 플러그인

     * IntelliJ IDEA, CLion 등 IntelliJ 기반 IDE에서 Rust 언어를 지원
     * 스마트 편집 지원: 구문 강조, 실시간 분석, 매크로 확장, 코드 생성, 코드 자동 완성
     * 심리스한 Cargo 지원: Cargo.toml 에서 프로젝트 정보를 추출. IDE에서 직접 Cargo 명령을 호출 가능
     * 테스트 러너 및 코드 커버리지 도구 내장

   예전부터 젯브레인에서 Rust 플러그인 시절부터 따로 제품 만드나 안만드나 의견이 분분했는데 이번엔 그냥 오픈소스로 풀어버렸군요. 물론 환영하는 입장이죠.
"
"https://news.hada.io/topic?id=9728","라이다를 사용하여 나무 그림자 매핑","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          라이다를 사용하여 나무 그림자 매핑

     * 작가는 LiDAR 데이터를 사용하여 나무 그림자를 시뮬레이션하는 ShadeMap이라는 앱을 개발했습니다.
     * 이 앱은 처음에는 식물을 포착하지 않는 레이더 데이터를 사용하여 나무를 포함하지 않았습니다.
     * LiDAR는 더 정확하지만 비행기나 드론에서 수집되며 시간과 비용이 더 많이 듭니다.
     * 작가는 워싱턴 주에서 광범위한 LiDAR 데이터셋을 제공한다는 사실을 발견하여 그림자 시뮬레이션의 빈 공간을 채울 수 있었습니다.
     * 앱에 적합한 형식으로 LiDAR 데이터를 변환하는 데에는 상당한 컴퓨팅 자원이 필요했습니다.
     * 작가는 현재 시애틀 광역지역 데이터를 변환하는 작업을 진행 중이지만, 시간이 많이 소요됩니다.
     * 대규모 데이터셋을 호스팅하고 공개하는 것은 현재 재정적으로 불가능합니다.
     * 그러나 작가는 데이터셋의 작은 부분을 무료로 호스팅하여 사용자가 앱의 기능을 데모로 체험할 수 있게 합니다.

        Hacker News 의견

     * 프랑스 매핑 서비스가 프랑스의 HD LIDAR 캡처를 수행 중입니다.
     * 레이더는 데이터에 식물 및 건물을 포함하지 않을 수 있습니다.
     * 이 기사는 셔틀 레이더 지형 조사 미션을 언급합니다.
     * 이 프로젝트의 데모는 매끄럽고 빠릅니다.
     * 댓글 작성자는 타일링 파이프라인과 GeoTiffs와 함께 작업합니다.
     * 댓글 작성자는 타일에 라이다와 레이더의 차이를 인코딩하는 것을 제안합니다.
     * 댓글 작성자는 ""Requestor Pays""를 사용하여 데이터를 S3 버킷에 호스팅하는 것을 제안합니다.
     * 이것은 GIS 회사의 면접 질문이 될 수 있습니다.
     * 이 프로젝트의 출력은 나무 덮개 위에 그림자를 계산합니다.
     * 댓글 작성자는 Shademaps를 좋아하며 나무 데이터가 관련성이 있다고 생각합니다.
     * 과거에 지방 정부는 대중에게 라이다 데이터를 공개했습니다.
     * 댓글 작성자는 라이다 데이터를 민간 부문에서 작업한 경험이 있습니다.
     * 댓글 작성자는 대규모로 확장된 나무 덮개 라이다 작업을 보고 감명을 받았습니다.
     * 대규모의 원시 지리 데이터셋을 처리하는 것은 도전입니다.
     * 댓글 작성자는 이 도구의 잠재적인 사용처에 대해 궁금합니다.
     * 댓글 작성자는 이 도구를 가정용 태양광 설치 계획이나 비행 시뮬레이터에 사용하는 것을 제안합니다.
"
"https://news.hada.io/topic?id=9783","비밀번호는 비용이 들어갈 것입니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          비밀번호는 비용이 들어갈 것입니다.

     * ""패스키""에 대한 많은 관심과 인증 방식 변화 가능성
     * 패스키에 대한 집착은 보안 키의 사용을 불필요하게 만들 수 있음
     * 문제는 거주 키와 비거주 키의 차이에 있음
     * 거주 키는 개인 키를 보안 키 자체에 저장하며, 비거주 키는 복호화를 위해 자격 증명 ID에 의존함
     * 거주 키는 보안 키의 공간을 소비하며 빠르게 가득 찰 수 있음
     * 비거주 키는 여전히 안전하며 TLS와 동일한 보안 기능에 의존함
     * 거주 키 없이도 사용자 인증이 가능함
     * 문제는 패스키에 대한 과대 홍보와 그 정의에 대한 혼란에서 발생함
     * 패스키는 처음에 Apple에 의해 웹인증기로서 터치 ID/얼굴 인식을 사용하는 방법으로 소개되었음
     * 패스키의 정의가 변화하여 이제는 거주 키를 의미함
     * 이 정의는 널리 퍼져 보안 키 사용자에게 문제를 일으키고 있음
     * 보안 키는 저장 공간이 제한되어 자격 증명 관리가 부족하여 거주 키 사용이 어려움
     * 모든 등록에 거주 키가 필요한 요구는 사용자 경험을 저하시킴
     * 사용자가 원하는 인증기를 선택할 수 있는 목표에 반하는 것임
     * 패스키 세계에서는 몇 가지 인증기 유형만 제대로 작동함
     * 문제 해결을 위한 제안으로 보안 키를 패스키 요구에서 제외하고, 인증된 장치에 대한 저장 요구 사항을 의무화하는 것이 있음
     * 전반적으로, 패스키로서의 거주 키에 대한 과대 홍보는 사용자가 선호하는 인증기를 선택하는 능력을 저해하고 있음.

        Hacker News 의견

     * 물리적 보안 키는 폰이나 데스크톱의 2단계 인증 기능이 없어서 패스키로서 최적의 선택이 아닐 수 있습니다.
     * 패스키는 아이클라우드 키체인을 통해 동기화된 키 쌍으로 정의되며, 그 정의는 다른 클라우드 동기화 방법에까지 확장되었습니다.
     * 보안 키는 대다수의 사용자에게 중요하지 않으며, 패스키는 비밀번호를 대체하는 더 나은 선택입니다.
     * 패스키와 레지던트 키를 위한 프로토콜 디자인은 잠재적인 보안 문제와 호환성 문제로 비판받고 있습니다.
     * 레지던트 키와 보안 요소의 현재 상황은 혼란스럽고 개선이 필요합니다.
     * 보안이나 암호학에 대한 배경지식이 없는 사람들에게는 이 기사를 이해하기 어려울 수 있습니다.
     * 새로운 인증 표준으로 업그레이드하려면 새 하드웨어 키에 돈을 투자해야 할 수도 있습니다.
     * 하드웨어 키는 저장 공간이 제한적이며, 대량 저장을 위한 안전한 프로세서 추가는 비용을 증가시킬 수 있습니다.
     * 이 기사는 패스키와 그 영향에 대해 명확한 설명을 제공합니다.
     * 일부 사용자는 패스키 동기화를 위해 Google, Apple 또는 Microsoft에 의존하고 싶지 않습니다.
     * 하드웨어 기반 토큰과 레지던트 키 동기화를 위한 중앙 집중식 솔루션이 원하는 바입니다.
     * 장치가 분실되거나 침해당하는 경우, 무언가를 가지고 인증하는 방식은 문제가 될 수 있습니다.
     * 일부 사용자는 패스키가 정부와 기업에 너무 많은 통제력을 부여하여 개인 정보와 보안을 저해한다고 믿습니다.
"
"https://news.hada.io/topic?id=9710","VC 투자 받지 마세요 - 그것은 회사를 파괴할 것입니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    VC 투자 받지 마세요 - 그것은 회사를 파괴할 것입니다.

     * 스타트업에 대한 VC 투자는 종종 첫 번째 단계로 여겨지지만, 많은 창업자들은 그 의미를 왜곡하고 있다.
     * VC 투자는 회사의 일부가 큰 금액에 판매되는 것을 의미하지만, 창업자들은 개인적으로 현금을 받지 않는다.
     * VC 투자를 받는 회사들은 수익이 없으며, 그렇지 않으면 돈이 바닥나기 때문에 사실은 실패를 시인하는 것이다.
     * VC 투자는 회사의 목표를 원하는 대로 구축하는 것에서 미래에 더 높은 가격에 판매하기 위해 구축하는 것으로 변경시킨다.
     * VC 투자의 2차 효과에는 더 많은 인력 고용, 새로운 투자자 찾기에 시간을 소비하고 대형 시장과 신규 고객을 확보하는 것이 포함된다.
     * VC 투자를 받은 스타트업에서는 수익성이 우선되지 않아 임의의 우선순위와 토론이 이루어지며, 수익성을 위협할 수 있다.
     * VC 투자 없이도 컨설팅으로 시작하여 점진적으로 자체 소프트웨어 제품으로 전환하여 회사를 부트스트랩할 수 있다.

   완전히 틀린 말은 아니지만, VC 투자와 스타트업을 너무 단편적으로 본 글이네요.
   쓸데없이 강한표현으로 반감사기 딱 좋은..

   VC 투자가 좋은 것은 아니지만, 나쁜 경우만 있는 것도 아닙니다.
   세상 모든 회사들이 다 그렇게 운영되지 않고요. 투자를 받아서 급하게 성장해야하는 경우도 있고, 투자가 없으면 시작하기 힘든 분야도 분명 있습니다.

   소프트웨어 회사 한두개 운영해보고 세상 다 아는 것처럼 얘기하는 멘토를 보는 기분이네요.

   (아 저도 VC 투자가 좋다고 얘기하는 것은 아닙니다. 물론 가능하면 안받고 하는게 좋아요.
   여기서 얘기하는데로 투자 받으면 실패다! 라고 까지 얘기하는 것은 너무 심한 비약이라는 얘기입니다.)

        Hacker News 의견

     * 벤처 투자로부터 자금을 모으면 실패, 인수, 또는 공개 상장과 같은 한정된 결과를 얻게 됩니다.
     * 벤처 투자는 스타트업이 경쟁업체보다 빠르게 성장할 수 있도록 도와줍니다.
     * 벤처 투자는 불쾌한 사람들과 진부한 조언 때문에 매력이 없을 수 있습니다.
     * 벤처 투자를 받은 기업은 경쟁업체의 평판을 손상시키기 위해 악행을 저지를 수 있습니다.
     * 대규모 시장에서 제품-시장 적합성을 갖춘 로켓이 있다면 벤처 투자는 유리합니다.
     * 벤처 투자는 과정을 가속화하고 결과를 배가시킬 수 있지만, 통제력은 빠르게 미묘해질 수 있습니다.
     * CEO들은 종종 대규모 수익을 원하기 때문에 공격적인 성장과 기업 매각을 선택하는 것이지, 벤처 투자자들이 강요하는 것은 아닙니다.
     * 저금리와 무료 자금의 부작용으로 벤처 투자 버블이 발생했습니다.
     * 부트스트래핑이 현실적이지 않을 때, 벤처 투자는 사람들에게 사업 아이디어를 시도할 기회를 제공합니다.
     * 일부 비즈니스 모델은 규모의 경제성이 이익 창출에 필요하지만, 다른 모델은 규모와 관계없이 합리적이지 않을 수 있습니다.
     * 벤처 투자자들은 스타트업이 IPO 또는 인수를 통해 탈출하는 것을 원합니다.
"
"https://news.hada.io/topic?id=9816","메신저앱 Signal 대표, 영국 "대규모 감시" 법에 따르지 않을 것이라고 발언 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             메신저앱 Signal 대표, 영국 ""대규모 감시"" 법에 따르지 않을 것이라고 발언

     * 시그널 대표 Meredith Whittaker, 암호화된 메시지에 접근 가능한 백도어를 의무화하는 영국 법안을 거부
     * Whittaker는 정부의 계획을 ""수학적으로 불가능하다""고 지적하며, 해당 법이 시행되면 영국 시장에서 철수할 것이라 주장
     * 시그널의 임무는 사용자의 개인 정보 보호와 보안을 최우선으로 함
     * 영국은 불법 활동을 방지하기 위해 백도어가 필요하다고 믿지만, Whittaker는 ""착한 사람들""만 액세스할 수 있는 백도어를 만들 수 없다고 주장
     * Whittaker는 정부가 개인 메시지에 접근하는 것의 위험성에 대한 사례를 인용
     * 시그널 및 텔레그램, 왓츠앱과 같은 암호화된 채팅 서비스는 온라인 안전 법안이 시행되면 영국에서 철수할 수도 있음
     * 사용자 수는 작지만, 시그널은 여전히 사용자의 개인 정보 보호와 보안을 위해 헌신 중

        Hacker News 의견

     * 영국의 감시법은 개인정보 보호권과 시민의 자유를 침해할 수 있는 가능성으로 비판받고 있다.
     * 정부가 복종과 통제 이상의 명확한 목표 없이 인터넷 활동을 모니터링하려는 우려가 있다.
     * 정부는 종종 기술에 대한 접근을 원하지만 공공의 이익이나 권리를 무시하는 일관성 없는 접근을 보인다.
     * 영국의 새로운 감시법은 비윤리적이고 억압적으로 여겨지며, 사용자의 자유를 보호하기 위해 Signal이 시장에서 물러나도록 요구가 제기되고 있다.
     * Apple의 CSAM 사진 스캔 논란은 감시와 디스토피아적 도구의 정상화에 기여하였다.
     * 신뢰성과 투명성을 보장하기 위해 Signal이 재현 가능한 빌드를 가져야 하는 것이 중요하다.
     * 감시의 범위는 우리의 핵심 인프라에 침투하였으며, 감시를 선택하는 것은 우리를 대신해 결정되었다.
     * 정치인들은 대규모 감시 조치를 시행하는 것의 영향을 완전히 이해하지 못할 수 있다.
     * 개인정보와 감시 문제는 상황적 정보 수집의 용이성과 함께 진화하였으며, 메시지의 내용보다는 중요도가 낮아졌다.
     * 정부의 무능함과 다른 긴급한 문제들이 대규모 감시의 시행을 지연하거나 방지할 수 있는 희망이 있다.
     * 팬옵티콘과 같은 감시 시스템의 존재는 우려되며, 권리의 침식은 중요한 결정 시기에 종종 발생한다.
     * 개인정보와 감시의 중요성은 간과되어서는 안 되는 중요한 거버넌스 문제이다.
"
"https://news.hada.io/topic?id=9799","브라우저를 통해 mDNS를 사용하여 macOS 사용자의 실제 이름을 무차별 대입으로 찾아내기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          브라우저를 통해 mDNS를 사용하여 macOS 사용자의 실제 이름을 무차별 대입으로 찾아내기

     * macOS 사용자의 이름을 허가 없이 알아내는 기술을 탐구하는 이 기사
     * 이 기술은 사용자의 이름을 감지하기 위해 인기 있는 성별별 이름 목록을 무차별 대입하는 것을 포함한다.
     * mDNS 프로토콜은 로컬 네트워크에서 장치 이름을 등록, 탐색 또는 방송하는 데 사용된다.
     * Apple 장치는 로컬 호스트 이름에 사용자의 이름을 노출시키는데, 이는 무차별 대입 기술에 사용될 수 있다.
     * 호스트 이름은 타이밍 회피를 통해 브라우저에서 해결될 수 있다.
     * 기본 macOS 로컬 호스트 이름에는 사용자의 이름과 장치 이름이 포함되어 있다.
     * 공격은 단일 지역 설정, 단일 장치 및 해당 지역 내에서 가장 흔한 50개 이름으로 검색 범위를 제한함으로써 더 효율적일 수 있다.
     * 개념 증명 데모는 65%의 경우에 대해 이름을 성공적으로 예측했다.
     * 이 공격은 제한이 있으며 브라우저 개발자 도구에서 쉽게 감지될 수 있다.
     * 이 기사는 인터넷 개인 정보 보호의 경계를 탐구하고, 비전통적인 개인 정보 침해 기술의 잠재력을 강조한다.
     * mDNS 탐색 기술은 프린터, 스마트 TV 및 IoT 장치를 포함한 로컬 네트워크에서 장치를 감지하는 데 사용될 수 있다.
     * 이 기술은 특정 기능이 활성화된 아이폰 및 아이패드에도 적용될 수 있다.

        Hacker News 의견

     * 기사는 잘 쓰여져 있으며 흥미로우며, 비경보적인 톤을 가지고 있습니다.
     * Little Snitch는 네트워크 요청을 차단할 수 있는 도구로 명시적인 허가가 필요합니다.
     * 기본적으로 Little Snitch와 같은 도구는 로컬 네트워크 요청을 조용히 허용할 수 있습니다.
     * 기사는 브라우저가 mDNS를 사용하여 macOS 사용자의 실제 이름을 무차별 대입 공격할 수 있는 방법을 설명합니다.
     * 기사는 DNS 또는 JavaScript에 익숙하지 않은 사람들에게도 접근 가능하고 이해하기 쉽습니다.
     * 기사는 브라우저를 통한 타이밍 공격과 포트 스캐닝의 잠재적 위험을 강조합니다.
     * 유효한 주소와 유효하지 않은 주소 사이의 시간 차이는 놀랍습니다.
     * macOS 호스트 이름의 선택은 개인정보 보호에 대한 우려를 불러일으킵니다.
     * JavaScript를 비활성화하면 최종 사용자 경험에 영향을 줄 수 있습니다.
     * 기사에는 개념 증명과 공격자를 유혹하기 위한 대책이 제시됩니다.
     * 댓글 작성자들은 기사의 품질을 칭찬하며, 공격자와 재미있는 일을 하는 방법을 제안합니다.
     * 일부 댓글 작성자들은 macOS에서 기기 호스트 이름의 선택을 결함이 아닌 기능으로 생각합니다.
"
"https://news.hada.io/topic?id=9821","VP of Engineering이 되는 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        VP of Engineering이 되는 것

     * Honeycomb는 Gartner Magic Quadrant에서 연속 두 번째로 리더로 선정되었습니다.
     * 이 기사는 Honeycomb의 공학 부사장으로서의 저자의 경험에 관한 것입니다.
     * 저자는 부사장이 되기까지의 여정과 마주한 도전을 공유합니다.
     * 이 기사는 기술 산업에서 리더십 역할의 다양성의 중요성을 강조합니다.
     * 저자는 공학 부사장 역할에 대비하는 방법에 대한 조언을 제공합니다.
     * 이 기사는 저자의 성공에 있어 운과 훌륭한 팀의 역할을 강조합니다.
     * 저자는 공학 부사장의 역할이 상황에 따라 다르며 회사의 요구에 따라 변할 수 있다고 결론 내립니다.

        Hacker News 의견

     * 회사 창립자는 리더십 직위에 있기 위해 특정 자격이나 특성을 필요로하지 않습니다.
     * 대부분의 스타트업에서는 내부 승진과 우수한 성과 인정이 드물며, 외부 고용이 기본입니다.
     * Honeycomb의 공학 부사장이 실제로 어떤 역할을 하는지는 분명하지 않습니다.
     * 이 게시물은 생존자 편향과 VP 직위로의 내부 이동의 어려움을 강조합니다.
     * 똑똑하고 교활한 사람들이 기회나 선택의 부족으로 항상 고위직에 있지 않을 수 있습니다.
     * 프론트엔드 배경은 종종 경시되지만, 백엔드 개발자의 코드 품질이 낮을 수 있습니다.
     * 공학 부사장의 역할은 회사의 규모와 유형에 따라 크게 달라질 수 있습니다.
     * 일부 댓글러들은 Honeycomb의 제품을 비판하고 회사 주변의 과대광고를 의심합니다.
     * 다른 관리 수준은 제품 제작부터 정책 수립까지 다른 책임을 가지고 있습니다.
"
"https://news.hada.io/topic?id=9718","북한에서의 탈북은 이제 더 어려워졌습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        북한에서의 탈북은 이제 더 어려워졌습니다.

     * 중국에 갇힌 북한 소프트웨어 엔지니어, 한국 목사의 도움으로 탈출 계획 세움.
     * 엔지니어, 감시 카메라를 분리하고 택시를 이용해 떠나기 준비함.
     * 탈출 계획은 최종 목적지에 도착하기 전에 여러 차례 택시를 바꾸는 것을 포함함.
     * 엔지니어는 탈출에 대해 이상한 감정을 느끼지만 두려움은 없음.
     * 중국에 있는 북한 주민들에게 탈북은 더욱 어렵고 위험해짐.
     * 이 기사는 중국에서 자유를 찾는 북한인들이 직면하는 도전과 위험에 대해 논의함.
"
"https://news.hada.io/topic?id=9773","GPT-4의 Code Interpreter 활용 사례 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    GPT-4의 Code Interpreter 활용 사례 모음

     * 일주일전에 GPT-4에 코드 인터프리터 베타 오픈
     * 파이썬 코드를 작성하고 실행하며, 파일 업로드도 가능
     * 데이터 시각화 및 분석, 코드 파일 편집, 비디오 편집, 이미지 변환, OCR , PPT 자료 생성 등이 가능
     * zip, csv, xls, png, mov 등의 포맷 지원
     * 코드 생성후 오류가 나면 알아서 수정하고 결과물을 내놓음
     * 포함된 예제들
          + 데이터 시각화: CSV 분석 및 그래프 작성
          + 데이터 시각화: 주식 차트 그리기
          + 데이터 시각화: SNS 데이터 분석
          + 데이터 시각화: 카카오톡 분석
          + 비디오 편집: 끝부분 5초만 추출하기
          + 이미지 편집: 흑백 만들기
          + 이미지 편집 심화: 파이썬 코드를 적용하여 수정하기 (타노스 핑거스냅 효과 적용)
          + 이미지 편집 심화: 파노라마 GIF로 만들기
          + OCR: PDF를 넣고 텍스트만 OCR로 추출

   코드 인터프리터, 빠르고 쉬운 분석이 정말 매력적입니다!

   제가 ChatGPT 월별 사용 내역을 궁금해하다가 ChatGPT웹에서 목록을 불러올 때 호출하는 API의 Json 형식의 Response들을 그냥 복사 붙여넣기 했습니다.
   그리고 나서 프롬프트에 '이건 어떤 목록인지 알려줘, 그리고 월 별 그래프도 뽑아줄래?' 라고 요청했더니, 기존에는 정리하고.. 파싱하고.. 정제하고.. 그래프를 만드는 데에 최소 30분이 필요했던 일이 5분 내에 뚝딱 해결되더군요

   https://github.com/SkalskiP/…
   jail break & awsome한 재밌는 시도 사례가 있네요 ㅎ

   비슷한 쓰레드가 있어서 하나 더 소개해봅니다

   개인 데이터셋에 대해서 돌려본 10개의 실험
   https://twitter.com/kanikabk/status/1678349664280559618?s=46
"
"https://news.hada.io/topic?id=9796","FCC의 ATSC 3 암호화 불만에 대한 대응 - 그들은 당신의 의견을 듣고 싶어합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           FCC의 ATSC 3 암호화 불만에 대한 대응 - 그들은 당신의 의견을 듣고 싶어합니다.

     * FCC는 ATSC 3 암호화 청원에 대한 의견을 요청하고 있습니다.
     * 의견을 제출하는 과정은 쉽고 몇 분만 소요됩니다.
     * 현재 제출된 불만은 몇 개뿐이므로 더 많은 참여가 필요합니다.
     * 의견을 제출하는 단계는 기사에서 제공됩니다.
     * 암호화가 지상파 텔레비전 시청에 미치는 영향에 대한 세부 정보를 제공하는 것이 중요합니다.
     * 기사의 저자는 ATSC 3.0 표준의 DRM 암호화에 반대하는 자신의 의견을 제출했습니다.
     * 암호화는 지상파 신호에 대한 접근을 제한하며 대중의 이익에 반하는 것입니다.
     * 암호화는 소비자의 장비 선택을 제한하여 반독점 문제가 발생합니다.
     * 방송사들은 암호화가 복사 보호를 위한 것이라 주장하지만, 실제로는 재전송 수수료 보호와 유료 구독 서비스로 소비자를 유인하는 것입니다.
     * 독자들은 DRM 암호화가 방송 수신에 미치는 영향을 전달하기 위해 FCC에 의견을 제출하는 것이 중요합니다.
     * 저자는 Antenna Man과 함께 청원서를 직접 제출할 계획입니다.

        Hacker News 의견

     * 특정 장치를 사용하여 OTA 콘텐츠를 시청하고 녹화하는 능력이 암호화로 인해 제한될 것입니다.
     * 방송사들은 방송 대역을 상업화하고 방송 텔레비전을 구독 서비스로 전환할 수 있는 능력을 요구하고 있습니다.
     * 암호화는 공공 자원을 상업화하는 시도로 간주되며, 일부 사람들은 이에 반대합니다.
     * ATSC 3.0 표준은 이미 암호화 없이 신호 서명을 허용하지만, 암호화는 선택 사항입니다.
     * 암호화는 기록 보관가 및 역사적 콘텐츠에 대한 접근 능력에 부정적인 영향을 줄 수 있습니다.
     * 무결성과 간섭에 대한 보호를 위한 암호화에 대한 주장은 서명으로도 달성할 수 있습니다.
     * 암호화의 구현은 OTA TV 및 녹화 장치 사용자에게 영향을 줄 수 있습니다.
     * 암호화의 필요성과 저작권 침해 방지에 대한 효과에 대한 회의가 있습니다.
     * 방송사들은 암호화를 사용하여 소비자가 무료 OTA TV에 접근하는 것을 더 어렵게 하고 유료 구독 서비스로 유도할 수도 있습니다.
"
"https://news.hada.io/topic?id=9693","PEP 703이 억셉트 되면, Meta는 no-GIL CPython에 3년간 엔지니어를 투입할 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        PEP 703이 억셉트 되면, Meta는 no-GIL CPython에 3년간 엔지니어를 투입할 예정

     * ""A fast, free threading Python"" 글에 Guido가 ""Meta 또는 다른 회사가 CPythion 경험을 가진 엔지니어를 빌려줘서 코어팀이 같이 개발하면 좋겠다"" 라고 쓴 것에 대해
     * 코어팀의 Carl Meyer가 이에 대해서 논의를 했고, no-GIL 이 주는 가치를 믿는다면서
          + PEP 703이 억셉트 되면, Meta가 3년간 자신들의 CPython 내부 경험이 있는 엔지니어를 지원해주기로 했다고(PEP 703 억셉트부터 2025년 말까지의 기간)
     * PEP 703 : Making the Global Interpreter Lock Optional in CPython

   이제 python 에서도 multi threading hell 이 열릴지도 모르겠네요

   2022 파이썬 언어 써밋 : Python without the GIL

        Hacker News 의견

     * GIL 제거는 대부분의 기존 Python 코드에 영향을 주지 않습니다.
     * GIL 제거에는 새로운 ABI와 C-API 확장의 업데이트가 필요합니다.
     * multiprocessing 모듈은 Python에서 병렬 처리에 좋은 접근 방식입니다.
     * multiprocessing 모듈에서 스레드 지원으로 전환하면 메모리 압력이 감소할 수 있습니다.
     * GIL 제거에 대한 논쟁은 잠재적인 위험과 성능 향상을 포함합니다.
     * Meta는 GIL 제거를 지원하기로 했습니다.
     * 일부 사람들은 GIL이 간단함과 견고함에 도움이 된다고 믿습니다.
     * 서브인터프리터 경로는 병렬화에 대한 유망한 해결책으로 여겨집니다.
     * GIL 제거의 주요 도전 과제는 그 주위에 구축된 라이브러리와 패키지입니다.
     * CPython을 가속화하기 위한 대안으로 PyPy가 제안됩니다.
     * 코드모드는 Python 커뮤니티에서 코드 업그레이드를 용이하게 하는 데 사용될 수 있습니다.
     * 언어 이전에서 안정성과 호환성이 완벽함보다 중요시됩니다.

   이게 단순히 GIL 제거가 좋은데 쉽지않다 수준의 논의가 아니군요.
"
"https://news.hada.io/topic?id=9711","최소한의 .NET Hello World 이진 파일은 얼마나 작을까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 최소한의 .NET Hello World 이진 파일은 얼마나 작을까요?

     * .NET 모듈 파일 형식의 한계를 탐구하여 표준 출력에 ""Hello, World!""를 출력하는 가장 작은 실행 파일을 생성합니다.
     * 실험을 위해 작성자는 C# 또는 CIL로 구현된 관리되는 진입점을 사용하고, .NET Framework 4.x.x에서 실행되며, 제3자 종속성이 없도록 임의의 규칙을 설정합니다.
     * 실행 파일의 크기를 점진적으로 줄이기 위해 null 가능 참조 주석을 비활성화하고, .NET 모듈을 수동으로 작성하며, 가져오기와 기본 재배치를 제거하고, 불필요한 메타데이터를 제거하고, ASCII 문자열의 사용을 최적화합니다.
     * 최종 결과는 유효한 .NET PE 파일의 이론적으로 가능한 최소 크기인 889바이트의 실행 파일입니다.
     * 기사에서는 실행 파일 크기를 줄이기 위해 수행한 각 단계의 코드 예제와 설명을 제공합니다.
     * 작성자는 파일 형식을 이해하고 실행 파일 크기를 최적화하기 위해 전략적인 결정을 내리는 중요성을 강조합니다.
     * 사용되지 않는 패딩 세그먼트로 문자열을 이동하면 파일이 13바이트로 줄어듭니다.
     * mscorlib에 대한 참조를 제거하면 이진 파일의 공간을 절약할 수 있습니다.
     * .NET 메타데이터 디렉토리의 VersionString을 잘라내면 추가 바이트를 절약할 수 있습니다.
     * 이진 파일의 최종 크기는 834바이트이며, 압축 시 476바이트로 더 줄일 수 있습니다.
     * 의미 없는 프로젝트임에도 불구하고, 기존 시스템의 한계를 탐구하는 것은 재미있을 수 있습니다.
     * 작성자는 참고를 위해 전체 소스 코드를 GitHub에서 제공합니다.
     * 기사에서는 역공학, 코드 골프, PE 파일 최적화에 대해 논의합니다.
     * 작성자는 자신의 경험을 공유하고 파일 크기를 줄이는 추가적인 탐구를 장려합니다.
     * 이 기사는 작성자에 의해 CC BY 4.0로 라이선스가 부여되었습니다.

        Hacker News 의견

     * Michal Strehovský가 .NET을 사용하여 8KB 미만으로 스네이크 게임을 만들었습니다.
     * 실행 파일이 시스템에 설치된 런타임을 필요로 하기 때문에 이 기사는 사람들을 혼란스럽게 할 수 있습니다.
     * 실제 실행 파일에 대한 신뢰할 만한 출처는 Native AOT 바이너리입니다.
     * 저자의 위치는 흥미로운 남극 맥머도 스테이션입니다.
     * 섹션 정렬이 0x200 바이트이므로 파일 크기가 커집니다.
     * 데모신은 1k 바이너리를 만들어냈습니다.
     * 바이너리의 세부 사항을 파헤치면 깊은 통찰력을 얻고 지식을 풍부하게 할 수 있습니다.
     * 완전히 독립적으로 컴파일된 C# Hello World는 약 440 kB 정도의 크기로 가능합니다.
     * .NET 클래식 프레임워크는 폐기되었으며 새로운 앱은 이에 구축되지 않아야 합니다.
     * C 컴파일러를 사용하여 컴파일하는 것이 .NET을 사용하는 것보다 쉬울 수 있습니다.
     * 일부 의견에서는 네이티브로 컴파일된 .NET 실행 파일에 관심을 표현하고 있습니다.
     * Oberon+ IDE의 Hello.dll 모듈은 단지 2048 바이트입니다.
     * TurboPascal v1을 사용하여 1k 미만의 Hello World com을 빌드했습니다.
"
"https://news.hada.io/topic?id=9735","구글, AI 연구를 위한 robots.txt의 보완 프로토콜 공개토론 시작 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               구글, AI 연구를 위한 robots.txt의 보완 프로토콜 공개토론 시작

     * robots.txt 는 거의 30년 전에 만들어졌음
          + 웹 게시자가 검색 엔진이 콘텐츠 크롤링 하는 방법을 제어할 수 있는 간단하고 투명한 방법
     * 급발전중인 AI & 연구에 있어서 좀 더 머신-리더블한 콘텐츠 제어 방안이 필요하다고 생각
     * 보완 프로토콜을 논의하기 위해 웹/AI 커뮤니티 멤버들을 초대하여 공개 토론을 시작
     * 웹사이트에 가입해서 토론에 참여 가능
"
"https://news.hada.io/topic?id=9757","켈리 로울랜드는 넬리에게 메시지를 보내기 위해 =HYPERLINK() 기능을 사용하지 못했다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          켈리 로울랜드는 넬리에게 메시지를 보내기 위해 =HYPERLINK() 기능을 사용하지 못했다.

     * 켈리 로울랜드의 노래 ""딜레마""에서 노키아 9210 커뮤니케이터를 사용하여 넬리에게 메시지를 보내려는 시도가 너드들 사이에서 악명을 떨치고 있다.
     * 최근 TikTok에서는 그녀가 Microsoft Excel의 =HYPERLINK() 함수를 사용하여 mailto: 링크를 생성하여 넬리에게 이메일을 보낼 수도 있다는 제안을 하였다.
     * 그러나 이 영리한 아이디어는 노키아 9210 커뮤니케이터에 내장된 스프레드시트가 Microsoft Excel이 아니며 =HYPERLINK() 함수를 갖고 있지 않기 때문에 불가능하다.
     * 이 기사는 이 오해에 대해 유머러스하고 유익한 시각을 제공한다.
     * 저자는 이 정보를 ""음... 사실은""으로 분류하고 자신의 블로그에서 공유한다.

        Hacker News 의견

     * 켈리 로우랜드는 제품 배치 폰에서 메시징 앱 대신 엑셀을 사용하는 것에 대해 물었습니다.
     * Microsoft Excel 트위터 계정은 그 질문에 우아하게 대답했습니다.
     * ""시트"" 파일은 텍스트 메시징 프로그램의 데이터 저장소로 작동할 수 있었습니다.
     * 누군가가 워드 문서를 SMS로 보내는 동영상이 있습니다.
     * 이메일에 엑셀 문서를 첨부 파일로 보낼 수 있는 가능성이 언급되었습니다.
     * 초기 팝 음악에서 기술에 대한 언급이 논의되었습니다.
     * 이 게시물 제목은 환상적이고 주목을 끄는 것으로 칭찬받았습니다.
"
