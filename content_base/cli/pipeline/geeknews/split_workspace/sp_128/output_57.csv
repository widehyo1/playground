"https://news.hada.io/topic?id=7457","멀티모달 AI가 이미지 생성 외에 할 수 있는 일","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      멀티모달 AI가 이미지 생성 외에 할 수 있는 일

   멀티모달 AI는 이미지 생성 외에도 미완성 이미지 완성, 비디오 속 다음 발언 예측, 텍스트+이미지 연동 검색, 만화 번역, 암 발병 위험 예측, 혐오발언 발견 등을 수행할 수 있음

   1.미완성 이미지 완성
     * 마이크로소프트 리서치 아시아와 베이징대가 개발한 누와가 관련 기능을 선보임
     * 이는 미완성 이미지를 주면 그림을 마저 채워 완성함
     * 스케치를 주면 이에 맞는 이미지나 비디오를 생성함
     * 비디오의 다음 장면을 예측해 선보임

   2.비디오 속 다음 발언 예측
     * 구글 리서치가 개발한 모델은 비디오 장면과 화자의 말을 받아쓴 글이 주어지면 다음 발언을 예측함
     * 비디오와 텍스트는 화자의 발언을 예측하는 ‘맥락’으로 쓰임

   3.텍스트+이미지 검색
     * 구글이 개발한 멈은 사용자가 검색창에 등산화 사진을 올리고, “내가 후지산을 등산하는 데 이 신발을 사용할 수 있을까?”라고 입력하면 이미지를 이해하고, 이를 사용자 질문과 연결해서 ‘등산화가 잘 기능할 것’이라고 알려줄 수 있음
     * 추천장비 목록이 있는 블로그도 제시할 수 있음

   4.만화 번역
     * 도쿄대와 일본 기계번역 기업인 만트라 연구진이 선보인 ‘멀티모달상황 인식 번역 프레임워크’는 삽화와 대사를 함께 고려해 만화를 다른 언어로 번역할 수 있음
     * 이는 일본 만화 ‘망가’ 이미지에서 장면, 대사 읽기 순서, 시각 정보 등 맥락 정보를 추출함
     * 그 정보를 사용해서 말풍선 속 대사를 일본어에서 영어로 번역함

   5.암 발병 위험 예측
     * 하버드대 의대 브리검과 여성 병원 연구진이 개발한 멀티모달 AI는 세포 조직 사진과 텍스트 기반 유전체학 데이터를 참고해 암 발병 가능성을 예측할 수 있음
     * 연구진은 세포 조직의 미세한 사진과 텍스트 기반 유전체학 데이터로 개별 모델 두개를 학습시킴
     * 그 다음, 두 모델들은 단일 시스템에 통합돼 ‘환자가 여러 유형의 암에 걸릴 위험이 높은 지, 낮은 지’ 예측함

   6.특정 사물 ‘이미지’ 학습해 같은 사물의 ‘3D 데이터’나 ‘비디오’ 인식
     * 메타가 선보인 옴니보어는 호박 이미지만 학습했는데도 호박의 3D 모델도 알아볼 수 있음
     * 또 요트 이미지만 학습했는데도 요트의 비디오까지 인식할 수 있음

   7.혐오발언 발견
     * 멀티모달 AI는 소셜미디어에 올라온 게시물에서 이미지와 텍스트 내용을 모두 참고해 혐오 발언을 발견하도록 도울 수도 있음
     * 혐오 발언은 이미지와 텍스트를 합친 밈 형태로도 있음
     * 메타는 “(AI가) ‘밈이 혐오스러운지 아닌지’ 인식하려면 밈 이미지와 텍스트 내용을 다 고려해야 한다”고 설명함
     * 텅 빈 사막 사진에 ‘얼마나 많은 사람들이 널 사랑하는지 봐’라고 적힌 밈은 미묘하게 공격적임
     * AI가 혐오 발언이 담긴 밈의 실제 의미를 발견하려면 밈을 전체적으로 분석해야 함
     * 이미지와 텍스트를 결합하고, 이게 함께 나타났을 때 의미 변화 방식을 이해해야 함
     * 멀티모달 AI는 이미지와 텍스트를 동시에 처리해 이 기능을 발휘할 걸로 예상됨
     * 메타는 혐오 발언을 인식하기 위해 소셜미디어 게시물 내용을 포괄적으로 이해하는 자사 능력이 멀티모달 AI로 발전할 걸로 봄
     * 메타는 멀티모달 혐오 발언을 확인하는 시스템을 개발하는 데 도움되는 데이터셋 ‘헤이트풀 밈’을 구축, 공유함
"
"https://news.hada.io/topic?id=7527","테슬라 AI 데이 - 휴머노이드 '옵티머스' 프로토타입 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   테슬라 AI 데이 - 휴머노이드 '옵티머스' 프로토타입 공개

     * 대량생산시 로봇 1대당 2만달러(2천8백만원) 미만 예상
     * 테슬라 자동차의 자율주행에 사용되는 기술과 같은 방식으로 사물을 인지하고, 화분에 물을 주고, 물건을 나르거나 하는게 가능
     * 테슬라의 SoC를 탑재(WiFi,LTE,오디오)하고 28개의 액추에이터 장착
          + 액츄에이터 1개당 그랜드 피아노 1개를 들 정도
          + 사람의 손 자유도는 27인데, 옵티머스의 자유도는 11
     * 자동차 충돌 테스트시 사용하는 소프트웨어로 넘어질 때 충격을 최소화
     * 2.3kWh 배터리
     * FSD 베타테스터는 16만명 까지 늘어났으며, 계속 개선중(중간에 데이터 영상중에 한국 도로도 잠깐 나오네요)

   AI Day 감상평이 꽤 길게 정리된게 있어서 링크만 올려둡니다.
   <우리의 형상을 따라 우리의 모양대로 우리가 로봇을 만들고>

   전 이걸 엄청난 가능성으로 봤는데 시장의 반응은 안좋더라구요. 주식이 급락함..
   예전에 수억씩 때려박아서 만들던 휴머노이드형로봇이 2천만원대에 양산이 가능한데 왤까요?

   주식의 급락은 아마도 로봇보다는 실적영향이라고 봅니다.

   저도 로봇 자체는 짧은 기간안에 잘 만든거라고 생각이 됩니다.
   정말로 자신들의 공정에 제대로 적용되면 엄청난 효과가 있을거 같기도 하고요.

   기술적 차별성과 우수성을 떠나서 로봇이 사람처럼 뛰어다니고 백덤블링 하는 모습을
   이미 보았는데 걸음마 단계의 아기와 같은 초기단계의 모습을 보여주었으니까요.

   그리고 Elon이 과거 했던 발언들(사이버트럭, 저렴한 전기차)이 이루어지지 못한 것에
   대한 실망감이 더해진 것 아닐까요..? 무엇보다 3분기 실적이 시장 기대보다 안나왔구요.
   같습니다.

   아 보다 복합적인 사정이 있었군여...
"
"https://news.hada.io/topic?id=7558","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   주말에 aws 공부하고 실습한 임베디드 개발자입니다.
   전혀 관계없는 분야인데 왜케 재밌죠 ㅡ.ㅡ

   이더리움 책을 좀 볼 예정이에요

   어쩌다 보니 이번주도 연휴더라고요.

   지난주에는 SimplePiano에서 바흐 파트를 끝내서 ""G선상의 아리아""랑 ""미뉴엣 G단조""를 끝냈습니다. 아직 덜컥 거리긴 하지만, 이정도까지 왔다는 것에서 대 만족중이에요. 이번주에는 아르페지오 기법을 배울 예정입니다. 샘플곡이 Adele 꺼라 더 신나게 칠 수 있을 것 같아요.

   보드게임 모임도 역시 또 진행합니다. 이번주에도 18xx 시리즈중 하나인 1846을 돌릴 예정입니다. 가능하면 5시간내로 끝내보는 걸 목표로!

   새로 알게된 유튜브 채널 ""궁금소"" 에서 세계사 관련 영상들을 몇개 찾아볼 예정입니다. 1/2차 세계대전 발발과 진행에 대해서 좀 알아두고 싶어서요.

   간만에 미술관에 다녀오려고요~
"
"https://news.hada.io/topic?id=7462","LLVM 15의 RISC-V 관련 새 기능들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        LLVM 15의 RISC-V 관련 새 기능들

     * Linker relaxation
     * RISCVCodeGenPrepare 를 이용한 성능 최적화
     * 작년에 새로 추가된 RISC-V 명령어 셋 확장들 지원
     * RVV(RISC-V Vector) 지원 향상
"
"https://news.hada.io/topic?id=7497","넷플릭스, 자체 게임스튜디오를 만드는 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         넷플릭스, 자체 게임스튜디오를 만드는 중

     * Zynga의 공동창업자였던 Marko Lastikka를 디렉터로 해서 핀란드에 내부 게임스튜디오를 아예 밑바닥부터 설립중(다른 스튜디오들은 모두 인수한 것)
     * 넷플릭스 회원들에게 제공할 광고/인앱결제 없는 오리지널 게임을 만들 예정
     * 올해초에 인수한 Next Games에 이어 헬싱키에 있는 두번째 게임 스튜디오가 될 것
          + 두 회사가 모두 다 헬싱키에 있는 이유는 그곳에 훌륭한 게임 인력이 많기 때문
     * 넷플릭스는 이제 미국에 있는 Night School Studio 와 Boss Fight Entertainment 까지 해서 총 4개의 게임 스튜디오가 있으며,
       각자 다른 강점과 핵심 영역을 가지고, 넷플릭스 회원들의 다양한 입맛에 맞는 게임을 개발 중

   아마존도 게임에 발 들이고 삽질 많이 했는데, 과연 넷플릭스는 어떨지.
   X박스 게임패스가 점점 거대해지고 있는데, 과연 넷플리스가 틈새 시장이라도 먹을 수 있을지.
   흥미롭군요 ㅋ
"
"https://news.hada.io/topic?id=7559","Telefunc - API 대신 Remote Functions","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Telefunc - API 대신 Remote Functions

     * 원격 함수 호출 방식으로 프론트엔드/백엔드간 간단한 관계를 형성
     * 프론트엔드가 SQL/ORM 쿼리를 직접 호출 가능
     * Next.js, CRA, Nuxt, Vite, React Native 및 Webpack, Babel, Parcel, Vite 등에 기반한 다른 프레임워크들 지원
     * TypeScript 기본 지원
     * 프로그래머블 하게 정의된 권한 지원 : 간단하고 유연함
"
"https://news.hada.io/topic?id=7511","DALL·E, 이제 대기열 없이 즉시 사용 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       DALL·E, 이제 대기열 없이 즉시 사용 가능

     * 오늘부터 누구나 등록 즉시 사용 가능
     * 현재 150만명의 사용자가 매일 2백만장의 이미지를 생성
     * 10만명이 넘는 사용자가 디스코드에서 창작물을 공유하고 피드백중
     * 현재는 DALL·E API를 몇몇 고객들과 테스트 중이고, 곧 제공 예정

   Stable Diffusion 과 MidJourney 같은 경쟁 제품들이 있으니, 여기도 좀 빨리 움직이는듯 하네요.
   역시 경쟁이 좋아요!
"
"https://news.hada.io/topic?id=7495","McMaster.com 은 내가 써본 최고의 커머스 사이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    McMaster.com 은 내가 써본 최고의 커머스 사이트

     * McMaster-Carr 는 산업용 부품 공급 회사로 너트,볼트,베어링 등을 판매함
     * 어떻게 이런 산업용 사이트가 최고의 쇼핑몰 사이트가 되었을까 ? 딱 필요한 것만 하기 때문
     * 미니멀한 디자인, 대부분 그레이스케일에 녹색과 노란색으로 살짝 강조
     * 팝업, 애니메이션, 배너, 캐러셀, 비디오 이런건 전혀 없음
     * 사이트에 방문한 사용자의 목표는 원하는 부품을 최대한 빨리 찾는 것. 이 사이트는 전적으로 이걸 위해 설계됨
          + 브라우징하러 오는 곳이 아니기 때문에 AI 추천 알고리듬도 없고, 피쳐링한 제품도 없고, 신제품 소개도 없음
     * ""볼트""를 찾는다고 가정해 보면
          + 검색창에 bolt 입력
          + McMaster는 몇개의 서브 카테고리를 보여줌. 형태에 따른 hex head, socket head, set screws 같은 것들. Socket Head를 선택
          + 왼쪽 네비게이션바를 보면, 몇개의 필터링 옵션을 보여줌. 볼트들은 보통 나사산 크기(Thread Size)와 길이로 분류됨. 나는 1/4""-20 x 1"" 볼트를 찾는 중(볼트의 지름이 1/4"" 이고 길이가 1"" 이라는 것)
          + 그외에 다른 필터들도 있음. 재료/강도/헤드크기 등. 필터를 선택하고 나면 메인 검색 창은 각각 아이템을 바로 보여줌(서브카테고리가 아닌)
     * McMaster의 검색 인터페이스는 정말 훌륭. 이 페이지의 모든 기능은 원하는 부품을 가장 빠르게 찾을 수 있도록 디자인 됨
          + 필터 섹션은 간단하고 우아하며, 필요한 경우 구조를 설명하는 일러스트레이션을 보여줌
          + 일러스트레이션들은 관련 정보만을 보여주기위해 간소화 되어있어서 검색시에 산만하지 않게 해줌
     * 결과 페이지도 도움이 되는 드롭다운을 제공해서 찾고 있는 파트에 대해 설명을 해줌.
          + 엔지니어의 핸드북과 카탈로그를 하나로 합친 것과 비슷.
          + 엔지니어들은 종종 이런 용어를 바로 검색하기도 해서, 이런 정보를 포함함으로써 귀중한 시간을 절약해줌
     * McMaster의 필터는 타켓 검색에만 유용한게 아니라, 내가 뭘 원하는지를 결정할때도 도움이 됨
          + 가끔 난 내가 원하는 부속에 대한 일반적인 아이디어만 가지고 검색을 하는데, 이럴때 서브카테고리 설명을 통해서 세부사항을 결정하기도 함
          + 예를 들어, 내가 ""Lock Washer(풀림방지용 와셔)"" 필요하다는 것은 알지만, 어떤 것이 적합할지 모를 때, 이미지와 설명을 통해 결정할 수 있음
     * McMaster는 판매하는 모든 것들이 사양으로 정의되어 있기 때문에 직관적인 검색이 제공 가능
          + 브랜드, 제품 사진이나 마케팅에 사용하는 것들이 전혀 없음
          + 하지만 Grainger, DigiKey, Home Depot 같은 사이트보다 훨씬 좋은 기능을 제공
     * 비교해보면, 아마존은 아이템 필터링을 정말 못함.
          + 물론 아마존은 훨씬 더 많은 제품들이 있어서 작업을 어렵게 만들긴 하지만..가격같은 기본 검색 기능부터 정말 별로임
          + 아마존의 가격 선택창은 두개의 텍스트 박스임. 그냥 슬라이더면 안되나 ?
          + 게다가 제품에 상관없이 가격 선택 옵션들이 모두 같음. 가격이 아주 싼 펜을 검색하나 비싼 트램폴린을 검색하나 다 마찬가지
     * McMaster 의 장점중 하나는 거의 모든 부품에 대해서 CAD 파일을 제공하여 다운로드해서 내 3D 모델에 추가 가능하다는 것
          + McMaster는 유명 CAD 프로그램용 확장도 제공해서 파일을 직접 임포트도 가능해서,
            엔지니어의 삶을 10x 이상 편하게 해줌(물론 McMaster에서 구매도 많이 일어남)
     * McMaster - https://www.mcmaster.com/ 은 거의 완벽함. 검색표시줄을 조금 더 눈에 띄게 해주면 좋긴 하겠지만..
     * McMaster는 ""사용자를 이해하는 서비스""

   설계에 대한 데이터를 상세하게 제공하는 것도 한 몫 합니다.
   일반쇼핑몰은 제품 상세 페이지에서 조차 원하는 정보를 얻을 수 없는 경우가 많죠

   필요할 것 같은 분께 링크를 공유해드리니, 수십년 된 곳이라고 하네요. 20년 전에는 전화번호부 2배 두께로 발간 카탈로그 책자를 만들었다고 합니다..!

   모바일웹은 아예 지원을 안하고 앱다운로드로 연결시키는것도 신선하네요

   어랏? 저는 아이폰에서 들어가니 앱 클립에서 열기 라고 나오고 누르니까 앱 설치 절차 없이 앱 클립이 실행되었어요! wwdc 영상으로만 보고 실제 앱 클립 경험은 처음인데 넘 자연스럽게 넘어가네요

   헛 저는 이미 설치되어있어서 몰랐는데, 그것도 구현해 놨나 보네요.

   모바일앱도 꽤 잘 만들었습니다. 그냥 돌아다니는 재미가 있어요 ㅎㅎ

   도메인에 특화된 쇼핑몰을 만들 때 참고하기 좋은 레퍼런스네요

   카테고리가 저렇게나 많은데, 깔끔하며 군더더기 없고, 쓸데없이 리소스 차지하는 자원이 없네요.
   차분하고 동일한 톤의 일러스트들도 보기 편하고, ""그거 이름 뭐더라"" 시에도 유용해보이는 UX입니다.
   기본에 충실한 느낌 ㅎㅎ
"
"https://news.hada.io/topic?id=7498","Venice - 링크드인이 공개한 Derived Data Platform 오픈소스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Venice - 링크드인이 공개한 Derived Data Platform 오픈소스

     * 배치 및 스트리밍 소스에서 고성능의 비동기 수집(Hadoop, Samza등)
     * 원격 쿼리 또는 인프로세스 캐슁을 통해서 Low-Latency Read 지원
     * CRDT 기반의 충돌해결을 통해 리젼간 Active-Active 복제 가능
     * 운영자가 클러스터 할당을 통해서 각 리젼내에서 멀티 클러스터 지원
     * 각 클러스터 내에서 멀티 테넌시 및 수평 확장성 및 탄력성 제공
"
"https://news.hada.io/topic?id=7528","Show GN: 자동으로 인스타그램에 학교의 오늘 급식 메뉴를 공지하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Show GN: 자동으로 인스타그램에 학교의 오늘 급식 메뉴를 공지하기

인스타그램에 학교 급식 자동 공지 봇

요구 사항

     * GitHub Actions Runner (작동할 개인 컴퓨터)
     * Instargram Creator/Business account (인스타그램 계정)
     * 2FA OTP Secrets Key (2단계 인증 키)

포함된 기능

    1. 급식 정보 얻기
    2. 글씨써서 이미지로 만들기
    3. 인스타그램 포스팅
    4. GH Actions 자동화


   Q: 어떻게 자동으로 공지해주나요?

   A: 대략 6시간 마다 자동으로 프로그램을 실행시켜서 오늘의 급식이 있고, 마지막 게시물의 날짜가 오늘과 다를 때, 게시합니다.
     __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

   Q: 안해도 될텐데 왜 굳이 GitHub Actions Runner 가 필요하나요?

   A: 인스타그램 API가 여러 디바이스에서 로그인하는 것을 허용하지 않아서, 매번 같은 디바이스에서 작동해야 합니다.


   Q: 배경 이미지, 글자 조정을 하기 위한 설정이 있나요?

   A: assets 폴더에서 폰트, 이미지, 글씨 스타일을 설정할 수 있습니다!


   재미있네요. ㅎㅎ
   예제로 작성된 이미지 하나만 보여주시면 더 좋을것 같아요!
"
"https://news.hada.io/topic?id=7485","C++20, How Hard Could It Be","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      C++20, How Hard Could It Be

     * 구글 크롬팀에서 C++20 도입시 발생할 40여가지 문제점을 나열하고 솔루션들을 정리
     * C++ 표준은 3년마다 나오고, 릴리즈 후 크롬에서 첫 적용은 3년 후에나 됨
     * C++20은 많은 변화가 있음
          + 지원 중단, 비교연산자 재정렬, 어그리게이션 규칙 변경..
     * 문제들
          + 구글의 스타일 가이드가 C++17 기반
          + Clang의 C++20 지원이 미완성이고, 새로운 libc++을 필요로 함
          + 윈도우 바이너리가 커짐
          + std::iterator 지원 중단(C++17부터)
          + 새로운 키워드 concept, requires 같은 것들이 추가되어 변수명이 있으면 충돌
          + 그외 다수

   엥… c++ 정도되는 언어가 브레이킹 체인지를 많이 만들어내면 안되지 않나요… 그냥 제 고정관념일 뿐인가요…

   그러니가 C++이 이상한언어인겁니다..
   언어는 계속 버전업되면서 모듈이나 코루틴이나 이것저것 많이 추가되면서 자기가 다 하려고 하고
   기능이 나오면 컴파일러들은 4년 5년뒤에 기능이 추가되고
   컴파일러마다 할수있는것에 차이있고 문법 조금씩 차이있고
   버전업되면서 미세하게 잘 쓰던것들 다 사라지고
   stl 커지고 버전업되면서 구세대 컴퓨터에서는 돌아가지않고..
   쓴다면 Go나 파이썬을 쓰라고 말씀드리고싶네요

   버전업 되면서 하위호환성이 지켜지지 않은 항목들은
   미정의 동작이나 결함이 있는 기능을 개선한 경우가 대부분입니다.
   모듈, 컨셉, 코루틴 같은 기능들은 타 언어들처럼 계속해서 언어가 발전하고 있는거구요.
   특히 모듈의 경우 이전부터 계속 있어왔던 요구사항이죠.

   std::iterator 지원 중단이 말씀하신 ""미정의 동작이나 결함이 있는 기능을 개선""한 경우에 포함되는지는 잘 모르겠습니다.

   다만 C++이 타 언어에 비해 뒤쳐지는 점은 크게 다음과 같습니다.
    1. 패키지 매니저
    2. 컴파일러 파편화
    3. 복잡한 컴파일 방식(Make, CMake 추가 학습 요구)
    4. 커뮤니티의 무관심

   이 중 커뮤니티의 무관심으로 인해 양질의 아티클이 매우 부족하고,
   적은 이용자 수로 나머지 세 문제가 해결되지 않는 것이 크다고 생각합니다.
     * rust
"
"https://news.hada.io/topic?id=7530","아마존 하드웨어 이벤트의 주요 발표 내용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         아마존 하드웨어 이벤트의 주요 발표 내용

     * Stylus가 내장된 Kindle Scribe
     * 5세대 Echo Dot 스피커 : 오디오 개선. 온도센서와 탭 제스처 컨트롤
     * 자동차를 위한 Alexa, Echo Auto 업데이트
     * Alexa 기반의 BMW 음성 어시스턴트
     * Halo Rise : 수면 추적 침대 옆 조명
     * Fire TV 큐브 업그레이드 : HDMI 입력, 고해상도 업스케일링 기능 내장. WiFi 6E 지원
     * 65/75인치 Fire TV Omni QLED
     * Blink Mini를 위한 Pan & Tilt 마운트
     * Ring Spotlight Pro : 3D 모션 감지 & 버드아이 뷰. 와이어드/와이어리스 버전
     * Amazon Astro bot이 반려동물을 인식하고 움직이면 비디오를 전송
"
"https://news.hada.io/topic?id=7452","페이스북, 써드파티앱에서 Reels 공유 가능한 API 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   페이스북, 써드파티앱에서 Reels 공유 가능한 API 공개

     * 메타는 숏비디오 제품의 접근성을 확대중
     * 이제 Reels API를 통해서 써드파티 앱에서 ""Share to Reels"" 기능으로 직접 Reels 공유가 가능해짐
     * 그룹이나 개별 사용자 대상은 안되고, 권한이 있는 페이지에만 공유 가능

   개인적으로는 웹에서 사진 업로드나 되게 해줬으면 좋겠습니다.
"
"https://news.hada.io/topic?id=7555","구글, 텍스트-to-비디오 AI "Imagen Video" 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  구글, 텍스트-to-비디오 AI ""Imagen Video"" 공개

     * Video Diffusion Model로 텍스트를 입력받아 동영상을 만드는 ""Text-conditional Video Generation System""
     * 텍스트에서 저해상도 비디오(24x48 픽셀, 16프레임, 3fps) 영상을 만들고, 디퓨전 모델을 7개 중첩(cascade)시켜서 업스케일 하는 것이 특징
     * 최종 출력은 1280x768 24fps . 5.3초 길이의 비디오를 생성 가능
     * 논문 : Imagen Video : High Definition Video Generation with Diffusion Models

   Imagen - 구글의 text-to-image diffusion model
   Imagen-pytorch - 구글 Imagen을 Pytorch로 구현
   Make-A-Video : 텍스트로 비디오를 생성하는 AI
"
"https://news.hada.io/topic?id=7553","망 사용료 단어가 주는 혼란 (인터넷의 구조)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       망 사용료 단어가 주는 혼란 (인터넷의 구조)

     * 논란이 되고 있는 ""망 사용료"" 단어를 제대로 이해하기 위한 설명글
     * 일반 사용자, 망운영자
     * 피어링 peering(1:1연결)
     * 트랜짓 transit (1:1:N 연결)
     * 피어링 vs 트랜짓
     * 유상 피어링 paid peering
     * 망 사업자 간의 끕 tier
     * 무정산 피어링 settlement-free peering, bill-and-keep peering
     * 컨텐츠 제공자 contents provider
     * 망 사업자와 cp의 이해관계
     * 돈을 내야하는 당위성
     * 캐시 서버는?
     * 입법부 등장
     * 결론

   아 알겠다 (모르겠음)

   국내 ISP 가 해외 CP 들에게 삥뜯는 그림으로 이해하기는 했는데, 그걸 마냥 비난하기가 어려운게 국내 ISP 가 먹고 살 대안을 제시할수가 없어... 어렵네요.

   오.. 뭔가 이해가 된듯한 기분이 듭니다
"
"https://news.hada.io/topic?id=7444","Cloudflare 를 우회하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Cloudflare 를 우회하는 방법

     * Cloudflare Bot Management 란 ?
          + Bot을 차단하기 때문에 Scraping이 불가능해짐. 이걸 우회하는 방법
     * CF가 Bot을 디텍트 하는 방법
          + IP주소 평판, HTTP 헤더, TLS / HTTP2 / Canvas 핑거프린팅, CAPTCHA, 이벤트 트래킹
     * CF의 JS 챌린지를 리버스 엔지니어링 해보기
     * CF를 우회하는 방법
          + Passive / Active
"
"https://news.hada.io/topic?id=7478","개발자 1인 회사인 분들, 기술 스택은 어떤걸 쓰시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    개발자 1인 회사인 분들, 기술 스택은 어떤걸 쓰시나요?

     * OVH 클라우드의 큰 서버 하나에서 여러개의 SaaS앱을 운영중
          + 하루에 약 6백만개의 캐쉬 안된 리퀘스트를 처리
          + 백엔드는 Django/Python + MySQL + Redis + WebSocket(Pub/sub)
          + 나의 비밀은 OpenResty (Dynamic web platform based on NGINX and LuaJIT)
               o Lua 스크립트를 이용하여 복잡한 페이지 캐슁을 처리하고, DDos를 막고, 웹소켓을 처리하고, 장기 실행용 요청들을 오프로딩 처리함
               o 1500 짜리 Lua 코드로 구성된 ""가난한 자의 Cloudflare""
          + 이 앱들은 Docker 전에 만들어진 것들이라 그냥 프로세스로 실행됨(systemd)
          + 초기엔 uwsgi를 사용했지만, gunicorn 이 훨씬 효율적이어서 이제 완전히 바꿈
          + 나의 SPOF는 DNS임. 나는 DNSMadeEasy와 관계가 좋아서 자동 ban 걱정은 안했는데, 이제 DigiCert가 그들을 인수해버려서 문제
          + 결제는 Stripe 와 Paypal 로 처리. Paypal을 싫어하는 데도 추가한 것은, 언제 Stripe가 경고없이 차단할지 몰라서임
          + 사용자 업로드는 aiohttp Python 서버로 파일을 Wasabi 와 Backblaze로 보내고 nginx에서 캐쉬함. 그래서 클라우드 전송량 요금은 0임
          + 웹소켓 레이어는 약간 불안정. 처음엔 파이썬 웹소켓 asyncio 라이브러리로 모든걸 처리했는데, 어느정도는 동작했지만 나중에 멀티 프로세스로 처리하려고 하자 리소스를 엄청 먹기 시작함
          + 그래서 OpenResty 의 웹소켓을 이용하기로 결정했지만 복잡한 로직을 Lua로 작성하기는 싫었음
               o Redis Pub/Sub을 이용해서 메시지를 파이썬 프로세스에 전달하도록 변경
          + 하지만 내 서비스 이름은 알려주지 않을 거임(경쟁자가 더 생기는 것은 싫거든!)
     * 난 유명하지 않는 옵션을 선택하는 경향이 있는데, 솔로 개발자에게는 생산적이라고 생각
          + PostgreSQL + SQLite
          + 메인 언어 Rust
          + 프론트엔드는 htmx + tailwindcss
          + CloudFlare + Vultr 호스팅
          + nginx + nixos + circle ci
     * 누군가는 싫어하겠지만 난 Wordpress 를 선택한게 최선이었음
          + 포럼은 bbPress
          + 멤버가 포스팅하는 커뮤니티는 buddyPress
          + 뉴스레터는 무지 비싼 SaaS 대신 저렴한 mailster.co 플러그인(Critsend.com 이용)
          + 원하는 대부분의 기능들은 플러그인으로 찾아보면 다 있음 : 검색 가능한 FAQ, Captcha, 광고, 디스코드에 포스팅하기, 사용자 신고 시스템 등등
          + https://rpgplayground.com/ 운영중
     * OpenAI랑 경쟁하는 서비스인 https://text-generator.io 를 운영
          + 기존엔 GCP에서 쿠버네티스 쓰다가, 이제는 Cloudflare 터널을 통해서 집에서 내 GPU들로 운영함. 이렇게 하면 GPU 가격이 10배 저렴.
          + 입력된 링크나 이미지에서 Tesseract / Unified IO / OFA / Beautiful Soup 등을 통해서 분석하고 이미지/영수증에 대한 답변을 해줌
          + 사이트 자체는 AppEngine에서 Python + Stripe + Firebase UI 로 되어있어서 매주 적은 비용으로 운영중
     * Render 에서 호스팅중
          + PostgreSQL + Rails + Hotwire
          + Stimulus 와 Turbo Frames를 정말 좋아함
          + UI는 Tailwind 와 Tailwind UI를 사용
          + APM은 https://skylight.io 와 https://sentry.io
     * https://allaboutberlin.com 운영중
          + DigitalOcean 의 Docker 에서 Craft CMS로 운영중
          + Craft는 워드프레스에서는 만들기 어려운, 사용자 정의 필드가 있는 사용자 정의 게시물 유형을 쉽게 만들수 있음
          + 하지만 워드프레스가 아니기 때문에, 필요한 플러그인이 많지는 않음
          + nginx 로 캐싱 및 많은 것들을 처리함
     * 생산적이 되고 싶으면 PETAL을 시도해봐
          + Phoenix + Elixir + Tailwind + Alpine.js + LiveView
     * Rails + Postgres + Redis + SideKiq
          + Herokus 에 호스팅, 에러 추적은 Sentry, 성능 모니터링은 New Relic, 메일은 ㄴend Grid
          + 최근에 Google Analytics를 Plausible 로 교체하고, Ahoy(Rails Middleware) 사용해서 내부에서 심도있는 분석중
          + 고객지원/채팅은 Intercom 사용중인데 Chatwoot로 교체예정
          + Heroku 에서 벗어날 예정인데, 대표적인 대체제인 Render가 아직 자동 페일오버 되는 HA Postgres 옵션이 없음
          + GitHub 마스터 브랜치에 푸시하면 프로덕션에 자동 디플로이.
               o 마스터브랜치에 머지는 PR로만 가능하고, Linter(Rubocop) + Tests(Rspec on CircleCI) + 100% 커버리지(codecov.io) 에서 Green 이어야만 가능
          + UI는 부트스트랩이고, 자바스크립트로 서버사이드 렌더링 중
               o 더 인터랙션이 필요한 UI에 대해서는 Hotwire/Turbo vs. Alpine vs. Stimulus vs. React 고민중
     * Agtech 플랫폼 개발중
          + 백엔드 : Rust, Rocket, sqlx, Postgres, Ansible 약간
          + 프론트엔드 : Rescript + React. Rust/WASM 꽤 많이 사용중인데 이건 실수였음. 되돌리려고 시도중
               o 왜 WASM 선택이 실수였는지는 자세히 설명한 댓글이 있음 https://news.ycombinator.com/item?id=32965809

   와 혼자서 이걸 다 어떻게 관리하시나요 ㄷㄷ

   오래 처리되는 웹 요청을 오프로드 한다는 게 어떻게 한다는 건지 참 궁금한게 별 이야기가 없네요 ^^;

   Dammm

   와 정말 다양하게 쓰네요,, PETAL 이런 조합은 처음 봐요 굿

   👍

   진짜 유용한 아티클이네요 감사감사!

   1인 기술 스타트업의 아키텍쳐 스택
   1인 SaaS인 Healthchecks.io의 기술 스택
   1인 SaaS 개발자를 위한 도구 추천
   스타트업을 년6$로 운영하기
   최소한의 노력으로 소프트웨어 스타트업 운영하기

   Stimulus + Turbo Frames - Hotwire : HTML Over The Wire

   HN에 올라왔던 예전 글들도 참고하세요
   2021년 https://news.ycombinator.com/item?id=28299053
   2020년 https://news.ycombinator.com/item?id=25465582
   2019년 https://news.ycombinator.com/item?id=21024041
"
"https://news.hada.io/topic?id=7523","Elixir 는 어떻게 10년도 안되어 성숙한 언어가 되었나","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Elixir 는 어떻게 10년도 안되어 성숙한 언어가 되었나

   Elixir 가 가지고 있는 특성을 기반으로 빠르게 성숙할 수 있었던 이유를 정리해보았습니다.

   https://json.media/blog/ko/…

   링크가 깨진 것 같아서 댓글 답니다 :)

   어 달조가 이 언어로 개발되었다고 하던데...아..음..
     * Elixir 는 2011 년부터 만들어진 언어이고 현재 최신 버전은 v1.14
     * 2019 년 v1.9 를 내놓으면서부터 더 이상 기능 상의 백로그는 없다고 발표
          + 이는 만들어진지 30년이 되어가면서도 계속 새로운 기능이 언어 자체에 추가되고 있는 다른 언어와는 매우 다른 행보
     * Elixir 는 Erlang 을 기반으로 함
          + 때문에 Erlang 의 발전을 레버리징 하고 있고, 만들어질 때도 Erlang 이 이미 오랜시간 고민한 결과들을 기반으로 만들 수 있었음
     * Elixir 는 공리가 적음
          + Elixir 는 reserved word 가 15개로 여러 언어들 중 가장 적은 편
          + Java 17 은 reserved word 가 67개
          + 적은 공리는 뛰어난 확장성으로 이어짐
          + 뛰어난 확장성은 언어 자체의 변화를 덜 요구할 수 있게 함

   Show GN은 남이 시도해볼 수 있는 프로젝트 등을 위한 공간이어서, 기사 섹션으로 이동하였습니다.
   Show 이용방법을 확인해주세요.

   그렇네요 ㅎㅎ 감사합니다
"
"https://news.hada.io/topic?id=7476","Open Prompts - 1천만개의 Stable Diffusion 프롬프트 데이터셋","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Open Prompts - 1천만개의 Stable Diffusion 프롬프트 데이터셋

     * Stability AI 디스코드 서버에서 Stable Diffusion v1.3 베타테스트 기간동안 생성된 프롬프트 데이터셋 전체를 공개
     * CSV 파일에 프롬프트 텍스트와 이미지에 대한 링크 포함
     * REST 형태의 Prompts API로 검색도 가능
     * AI생성 이미지를 검색하는 Krea.ai 서비스를 만드는데 사용한 것이며, 해당 서비스에서 카테고리 형태의 데이터도 제공

   Krea.ai 이 친구는 prompt만 있고 width, height, seed 등 다른 parameter는 안 보여서 재현을 할 수는 없는 구조네요ㅠㅠ lexica는 다 있어서, 똑같은 그림을 생성해 낼 수 있는데

   관련 글
     * Lexica - 5백만장 이상의 Stable Diffusion 생성 이미지 검색
     * PromptBase - 프롬프트 마켓플레이스

   여담입니다만, 저희 회사에서도 Stable Diffusion용 Discord Bot을 만들고 여기서 만들어진 prompt와 image 셋을 블록체인에 기록해서 모두 공개 할 계획입니다. 그 때가 되면 GeekNews나 Show에 한번 올리도록 하겠습니다. 현재는 Discord Bot Beta 버전 작업까지만 완료된 상태인데요, 혹시 관심 있는 분들은 한번 와서 써봐주시면 감사하겠습니다 https://discord.gg/mW7hPtFJZh
"
"https://news.hada.io/topic?id=7463","jqp - jq 를 위한 TUI playground","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      jqp - jq 를 위한 TUI playground

     * 'sed for JSON' 이라 불리는 jq를 쉽게 실험해보며 배우기
     * 다양한 단축키 지원
     * go 로 작성한 오픈소스
     * gojq 를 기반으로 하며 Bubbletea + Bubbles + Lipgloss + chroma 등을 이용
"
"https://news.hada.io/topic?id=7538","Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2022년 10월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2022년 10월)

   현재 근무중인 스타트업에서 같이 일할 멤버를 찾고 계시다면
   회사 소개 / JD / 위치 / 리모트 가능 여부 / 연락방법(이메일,웹사이트) 등을 적어주세요.
   ""멤버가 직접 1개의 댓글로 홍보를 작성""하시면 됩니다. (서치펌 등은 불가)

   이 글은 매월 첫번째 월요일에 등록됩니다.
   해당 회사의 공고에 관심있으시면 기재된 메일등으로 연락하시기 바랍니다.

   작성 예)

   하다 | 프론트엔드 개발자, 디자이너 | 서울 역삼 | Remote 가능 | https://hada.io | jobs@hada.io
   하다는 긱뉴스를 개발 및 운영하는 스타트업 입니다. 저희는 이러 저러 해서 엄청 좋은 회사입니다~~
   [1] 프론트엔드 개발자 JD : 내용 또는 URL
   [2] 디자이너 JD : 내용 또는 URL

   (주) 다이노즈 | 프로덕트 (모바일 앱) 엔지니어 - 프론트(flutter) or 풀스택 or 백엔드(Nest.js) | 판교 (판교역 인근) | Remote 가능 (100%) , 파트타임 가능 | bit.ly/yugacrew | yugacrew.official@gmail.com

   19조 규모, 연평균 11% 성장하는 육아 시장의 Game Changer 를 목표로
   “연결”과 “기술”을 통해 육아맘/대디들의 문제를 해결하고,
   궁극적으로 기존 육아 시장 전반의 불합리함을 혁신하고자 합니다.

   급성장 중인 초기 스타트업에서
   초창기 멤버로서 큰 역할을 수행하며 팀과 함께 성장하고 싶은 분이라면 환영합니다.

   재택 근무, 유연 출퇴근이 가능하며
   파트타임 근무도 가능합니다.

   [ JD ]
   ✔️ (Team) https://yugacrew.notion.site/Join-us-Team-YUGACREW-7a40101295e94b4b815…
   ✔️ (Frontend) https://yugacrew.notion.site/7a40101295e94b4b81552678f2f5a880/…
   ✔️ (Backend) https://yugacrew.notion.site/7a40101295e94b4b81552678f2f5a880/…

   🎮 오피지지 | 프론트엔드 개발자, 백엔드 개발자, 모바일 개발자, PM | 서울 삼성 | Remote 가능 | ⭐ https://www.opgg.team | recruit@op.gg

   오피지지(OP.GG)는 전세계 유저들에게 전에 없던 최고의 게임 플레이 경험을 제공하는 글로벌 No.1 게임 데이터 플랫폼 스타트업입니다.
   우리는 온라인을 통한 진정성 있는 인간적 가치를 경험한 사람들이 모여, 세상에 그 가치를 증명해 나갑니다. 게이머들의 일상을 점령하는 것을 비전으로 하여, 게이머들이 언제 어디서나 가장 먼저 떠올리는 서비스를 만들어나가고 있습니다.

   ✔️Electron Engineer(Desktop App) : https://apply.opgg.team/o/32600
   ✔️Front-end Engineer(Desktop App) : https://apply.opgg.team/o/32663
   ✔️Front-end Engineer(OGT Cell) : https://apply.opgg.team/o/32599
   ✔️Back-end Engineer(LoL Mobile cell) : https://apply.opgg.team/o/32626
   ✔️Back-end Engineer(Peep Cell) : https://apply.opgg.team/o/32660
   ✔️Senior Product Manager (LoL Web) : https://apply.opgg.team/o/27702
   ✔️Android Engineer : https://apply.opgg.team/o/10964
   ✔️iOS Engineer: https://apply.opgg.team/o/10972

   [🍋 레몬베이스(Lemonbase) - 회사와 구성원의 건강한 성장을 기술로 실현하는 SaaS 스타트업]

   사람은 깨어 있는 시간의 70%를 일터에서 보냅니다. 그 시간이 돈을 벌기 위한 수동적인 시간이 아니라, '나와 조직의 성장과 성공을 위해 주도적으로 활용하는 시간'이 될 수 있도록 레몬베이스는 성장하고 성과를 내는 방식을 기술을 통해 혁신하고 있습니다.

   레몬베이스 팀은 이 문제를 지속적인 성과관리(Continuous Performance Management)로 해결할 수 있다고 믿습니다. 레몬베이스를 통해 일 년에 한두 번이 아니라 일 년 내내 목표를 스스로 설정하고, 그 과정을 실시간으로 공유하고, 또 1:1 미팅을 통해 코칭을 주고받으며, 더 자주 동료들로부터 칭찬과 피드백을 받을 수 있습니다.

   2021년, 국내 SEED 라운드로는 매우 드물게 62억 원의 대규모 투자를 유치한 레몬베이스는 롯데푸드, 카카오모빌리티, 쏘카, 위메프, 버킷플레이스, 지그재그 등, 시대를 선도하는 수많은 기업과 함께 성과관리를 혁신하고 있습니다.

   ""회사와 구성원의 건강한 성장""이라는 미션을 가진 레몬베이스와 함께 성장할 미래의 크루를 찾고 있습니다.
   레몬베이스 팀의 여정에 동참해 주실 분들을 기다립니다 :)

   [JD]
   ✔️ 프론트엔드 엔지니어: https://www.lemonbase.team/recruit/fe
   ✔️ 백엔드 엔지니어: https://www.lemonbase.team/recruit/be

   ▶ 위치 : 서울 성수 (서울숲역/뚝섬역 인근)
   ▶ 근무형태 : Remote 가능

   ▶ 채용페이지 : https://www.lemonbase.team
   ▶ 팀블로그 : https://medium.com/lemonbase
   ▶ 크루 인터뷰 : https://www.lemonbase.team/interview

   💎 AB180(에이비일팔공) | 소프트웨어 엔지니어 | 서울 서초(강남역 1분) | Remote 가능(부분) | https://hiring.abrge.app/geeknews | hr@ab180.co

  하루 10억 건의 트래픽 처리.

  1억대의 디바이스. 100만 RPM. 월 300억 이벤트 수집 및 분석.

  실시간 수집되는 대규모 데이터. 성과 극대화를 위한 머신러닝.

   AB180은 Airbridge라는,웹과 앱의 행동 및 마케팅 성과를 측정, 분석해서 더 좋은 마케팅 결과를 낼 수 있도록 돕는 B2B SaaS를 만들고 있어요.
   ...

      ✨ Highlight

   '일하기 좋은 기업' 중견·중소기업 부문 종합 1위! (잡플래닛, 2022년 상반기)
   함께 일하는 팀원들에게 서로 배우며 빠르게 성장할 수 있어요. 기술 블로그, 코드 리뷰, 기술 세션 등 탄탄한 지식 공유 문화 역시 갖춰져 있어요.

   업계 최초 Meta(Facebook) MMP & MTA 비즈니스 파트너 2개 부문 동시 선정
   모바일 측정(MMP)과 멀티터치 기여도분석(MTA) 분야의 비즈니스 파트너로 동시에 선정되었어요. 이를 바탕으로 다양한 대규모 데이터 분석, 머신러닝 및 기능 개발을 하고 있어요.

   글로벌로 나아가는 B2B SaaS 비즈니스 경험
   오늘의집, GS SHOP, 삼성증권 등 다양한 기업이 Airbridge를 쓰고 있어요. PMF 검증을 마치고 GTM(Go-to Market) 단계에 진입했어요. 미국 지사를 세웠고 다양한 국가의 고객이 매일 들어오고 있어요.
   ...

      🚀 We're Hiring!

   전직군 인재 영입중. 아래에 나와있지 않은 직군들도 모두 인재 영입중에 있어요.
   저희에 대해 궁금하시다면 아래의 공고를 확인해주세요 :)

   [1] Backend Engineer / Data Pipeline →
   [2] Backend Engineer / Data Serving API →
   [3] Backend Engineer / Platform API →
   [4] Backend Engineer / Query Engine →
   [5] DevOps Engineer →
   [6] Data Engineer →
   [7] Data Scientist →
   [8] Frontend Engineer →
   [9] Web SDK Engineer →
   [10] Solutions Architect →

   [🗿🗿 모아이스(moais) - 스포츠 에듀테크 스타트업]

   [회사 소개]
   모아이스는 인공지능 기술과 데이터를 통해 스포츠 교육 및 연습의 방식을 혁신하는 서비스를 개발하는 회사입니다.

   기존에는 스포츠를 배우기 위해서는 2가지 방법이 있었습니다. 오프라인 레슨 혹은 유튜브 콘텐츠 등을 통한 독학이 그것들입니다.

   하지만 오프라인 레슨에서 자신과 맞는 코치를 만나기란 굉장히 어렵고, 위치/장소를 고려하면 거의 불가능한 경우도 많습니다. 독학은 나에게 맞는 문제점 진단과 솔루션을 찾는 것이 매우 어렵습니다.
   모아이스는 이를 개선하기 위해 인공지능 기술과 빅데이터 기술을 이용하여 기존 방식들의 장점들을 극대화하고 단점들을 최소화하는 새롭고 혁신적인 방법으로 스포츠를 배우거나, 즐거운 연습을 할 수 있게 하는 서비스를 개발하고 있습니다.
   현재는 첫 번째 타켓 스포츠인 골프에 집중하고 있고, 차후 다른 스포츠 분야로 확장할 것입니다.

   [JD]
   🏌️‍♂️🤸‍♀️ 2D Pose AI Researchar: https://moais.notion.site/AI-Researcher-f5690a6be97045259622a78405c9ec…
   💻👨‍💻 Backend Developer: https://www.notion.so/moais/60b0442cf5d344f69310fb7877cd73d7

   [위치]
   서울 양재동(AI 양재 허브)

   [근무 형태]
   Remote 불가능

   [연락 방법]
   service-tech@moais.co.kr

   에버온 | 프론트, 백앤드 개발자 | 서울 을지로 3가 | Remote 불가 | https://everon.co.kr | moongg@everon.co.kr

   에버온은 전기차 충전서비스 전문 기업으로 전국에 1.5만여기의 충전기를 설치/운영하고 있으며 급속도로 성장중입니다.
   함께 성장할 실력있으신 개발자분들을 찾고 있습니다.
   많은 지원 부탁드립니다.

   Front-end (0명)
   업무내용

   웹, 앱 개발 및 운영관리
   기술 요건
   React 등 SPA 웹 어플리케이션 개발 경험자, 실무경력 2년차 이상 또는 그에 준하는 역량
   크로스 브라우저 반응형 웹 앱 개발 경험
   개발 환경
   HTML5, CSS3, JavaScript (TypeScript), React (React Native)
   Back-end (0명)
   업무내용

   전기차 충전기 관제 서버 개발 및 운영관리
   기술 요건
   웹 어플리케이션 개발, 운영 경험자로서 실무 경력 3년차 이상 또는 그에 준하는 역량
   MVC Framework 기반의 웹 서비스 또는 RESTful API 개발 경험
   개발 환경
   Java, Spring (Spring Boot), Oracle PL/SQL
"
"https://news.hada.io/topic?id=7469","Tigris - 실시간 웹사이트 & 앱을 위한 스케일러블 백엔드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Tigris - 실시간 웹사이트 & 앱을 위한 스케일러블 백엔드

     * 데이터 앱 개발을 위한 오픈소스 데이터 플랫폼
          + 통합 API로 검색, 이벤트 스트리밍, 트랜잭셔널 도큐먼트 저장소를 이용 가능
          + 자동 인덱싱등을 지원해서 데이터 인프라에 대한 고민없이 앱 개발에만 집중
          + Flexible Document Model 로 Relational, Time Series, Documetns, Events, Key Value 등을 모두 지원
     * Go/Java/TypeScript 클라이언트 라이브러리 제공
     * 내부적으로 애플의 오픈소스인 FoundationDB 사용
"
"https://news.hada.io/topic?id=7471","미디어쿼리 치트시트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               미디어쿼리 치트시트

     * 주요 미디어 쿼리들을 쉽게 복사할 수 있게 정리
     * Mobile First
     * Light/Dark Mode
     * Reduce Motion
     * No Touchy Hover
     * The In-between
     * Device Orientation
     * Print Friendly
"
"https://news.hada.io/topic?id=7455","내가 온라인 청첩장을 만든 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           내가 온라인 청첩장을 만든 방법

     * 도메인 구입하기
     * 개발 계획하기 : 플랜C - RETRO RPG 느낌의 웹 사이트로 만들기
     * 픽셀아트 이미지 외주 찾기
     * 폰트 선택
     * 로고 이미지

코딩 시작

     * 정적인 부분과 동적인 부분을 분리하기
     * 기본 레이아웃 컴포넌트들 잡기
     * 네비게이션 버튼 누르면 앱 실행되게 하기
     * 송금 링크 만들기 : 카카오페이 & 토스뱅크
     * 공유하기 기능 구현
     * 방명록 만들기
          + 첫 시도. disqus 사용하기
          + 자체 구축하기
          + 방명록 만든 김에.. 실시간 알람 받기 : 슬랙 웹훅
     * 어르신용 사이트 만들기

   저도 11년전에 모바일 청첩장 직접 만들어서 당시 웹호스팅에 도메인 연결하고 디자인은 와이프가 해서 돌렸던 기억이 나네요. 근데 와 이분은 많이 진심으로 하셨네요 ㅎㅎ

   디테일과 노력에 👏🏼👍🏼
   저도 왠지 꼭 집적 만들고 싶다는 생각이 들어서 간소하게 만들어서 배포했던 때가 생각이 나네요. 벌써 5년 전 😅
"
"https://news.hada.io/topic?id=7436","TinyBase - 로컬-퍼스트앱을 위한 Reactive 데이터 스토어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                TinyBase - 로컬-퍼스트앱을 위한 Reactive 데이터 스토어

     * 테이블, 로우, 셀, 스키마 등의 개념으로 데이터 구성
     * 유연한 Reactive 방식으로 변경된 부분만 업데이트
     * SQL과 비슷한 TinyQL로 복잡한 쿼리 가능
     * 데이터를 로컬/리모트로 쉽게 동기화
     * 인덱싱, 메트릭, 릴레이션, 언두 스택
     * 의존성 없는 3.5kb 분량의 작은 소스코드

   RxDB - 자바스크립트 앱을 위한 실시간 NoSQL 데이터베이스
"
"https://news.hada.io/topic?id=7564","구글, Pixel Watch 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           구글, Pixel Watch 공개

     * 41mm 크기, 36g, 둥근 형태의 AMOLED 스크린 스마트 워치
     * WiFi $349, 셀룰러 $399
     * 구글 Wear 3 OS 사용
     * 크라운과 한개의 버튼
     * GPS, 마이크, 스피커, NFC(구글 월렛)
     * 혈중 산소 센서, 광학 심박 센서, 컴퍼스, 고도계, 가속도계, 자이로스코프, 다목적 전기 센서, 주변광 센서
     * 24시간 가는 294mAh 배터리
     * Always-on 디스플레이
     * 80% 재활용 스텐레스 스틸
     * 매트 블랙, 폴리시드 실버, 샴페인 골드
     * 5 ATM 방수(50미터)
     * Exynos 9110 SoC, Cortex M33 co-processor
     * 안드로이드에서는 여러개의 워치를 한대의 폰에 페어링 가능, 아이폰은 한대만 가능
     * 기본 제공 밴드는 스몰/라지 사이즈가 있으며, 5가지 종류(각각 색상 다양)의 밴드도 같이 출시
     * 겨울까지 fall detection 감지 추가예정(최대 32 g-force)
"
"https://news.hada.io/topic?id=7519","Vollebak, “현실세계에서 투명 망토 입어볼 날 가까워졌다” 선언","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Vollebak, “현실세계에서 투명 망토 입어볼 날 가까워졌다” 선언

     * Vollebak사는 그래핀으로 만든 열 위장 재킷이 곧 투명화를 제공할 수 있을 것이라고 주장
     * 2016년까지는 물리학 법칙상 진정한 투명망토는 제작은 불가능하다고 얘기되었음
          + 이때까지의 방법은 특정 전자기파에서 물체를 차단하는데 의존한 것으로, 한번에 여러개의 파장이라면 차단하는게 불가능하다는 것
     * 2019년에 캐나다의 Hyperstealth Technology가 출원한 특허에 의하면, ""양자 스텔스"" 망토로 물체 주변의 빛을 굴절하면서 물체를 완벽하지는 않지만 사라진것 처럼 보이게 할 수 있음
     * 2020년엔 이스라엘 국방부와 Polaris Solutions가 폴리머를 이용하여 아래에 있는 사람이나 사물을 숨길수 있는 무게 500g 짜리 보온성 시각 은폐시트(camouflage sheet)를 발표
     * 방탄 소재로 메탈 재킷을 만드는 의류회사인 Vollebak은, 투명 망토를 향한 첫 단계인 보완 위장 재킷의 프로토타입을 개발 완료
     * 상세 내용은 기사 참고
     * 중요한 점은 ‘아직’ 투명 재킷이 정식으로 생산되지 않았다는 점
     *

     “누구나 열대 섬에서 투명 망토를 착용한 채로 걸어 다니는 모습을 볼 수 있는 미래를 상상한다. 현실이 되려면 20여 년은 걸릴 것이다”
"
"https://news.hada.io/topic?id=7512","Turnstile, Cloudflare가 공개한 무료 CAPTCHA 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Turnstile, Cloudflare가 공개한 무료 CAPTCHA 대체제

     * 사용자 친화적 & 개인정보를 보호하는 똑똑한 CAPTCHA 대체제
     * 간단한 API로 사용 가능하며, Cloudflare 네트워크 사용자가 아니어도 됨
     * 세션중 사용자 행동과 텔레메트리 기반으로 여러개의 비침해적(non-intrusive) 챌런지 중에서 선택해서 사용
     * 사용자 경험도 문제지만, 시장의 98%를 차지하고 있어서 사용자 정보 침해 이슈도 있음
     * 애플의 PAT(Private Access Tokens)도 안에서 적용되어 훨씬 더 적은 정보를 수집함
     * Cloudflare 계정만 있으면 매우 쉽게 구현 및 적용 가능
     * ""인터넷을 더 좋게 만든다""는 회사의 미션을 따라서, 무료 서비스로 누구나 가능하도록 공개

     * Cloudflare, 구글 reCAPTCHA에서 hCaptcha로 변경
     * 구글의 reCAPTCHA v3 는 어두운 부분이 있다

   구글의 reCAPTCHA 대신 hCaptcha 와 전략적인 관계를 맺고 사용하더니 2년만에 자신들의 솔루션으로 아예 대체하네요.
"
"https://news.hada.io/topic?id=7456","Slack Machine - 간단하고 강력한 슬랙 봇 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Slack Machine - 간단하고 강력한 슬랙 봇 프레임워크

     * 슬랙 환경을 ChatOps 로 바꿀수 있게 도와주는 프레임워크
     * 직관적인 플러그인 시스템
     * Slack Events API + Socket Mode
     * AsyncIO 를 이용한 파이썬 코드
     * Plugin API의 기능들
          + 정규식에 반응하기
          + 메시지의 일부를 캡쳐하여 함수의 변수 값에 사용
          + 채널/그룹/DM의 메시지에 응답하기
          + 리액션/쓰레드/단순 메시지에 대응하기
          + DM 보내기
          + 블록 및 첨부파일 지원
          + 액션/메시지 스케줄링
          + 도움말 기능
"
"https://news.hada.io/topic?id=7560","캘리포니아의 회사들은 새 법률에 따라 구인광고에 연봉 범위를 꼭 명시해야","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                캘리포니아의 회사들은 새 법률에 따라 구인광고에 연봉 범위를 꼭 명시해야

     * 내년 1월1일부터 발효되는 SB1162 법안
     * 고용주는 구인 공고에 직무에 대한 급여 규모를 공개하고, 각 직원의 직위와 임금에 대한 기록을 유지해야함
     * 위반시 최대 $10,000의 벌금을 부과할 수 있는 주 노동위원회의 검사를 받게 됨
     * 원래는 1천명 이상의 회사에만 적용하게 작성되었으나, 15명 이상으로 확장

   캘리포니아주 구인 광고에 임금 공개 의무화 법안 발효 임박
"
"https://news.hada.io/topic?id=7554","그림으로 설명한 Stable Diffusion","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       그림으로 설명한 Stable Diffusion

Stable Diffusion 의 컴포넌트들

     * Text Understander(Encoder) - CLIPText
     * Image Generator
          + Image information creator - Unet + Scheduler
          + Image Decoder - Autoencoder Decoder

Diffusion 이란 ?

     * Diffusion 은 어떻게 동작하는가
     * 노이즈 감소를 통해 이미지 페인팅 하기
     * 속도 높이기: 픽셀 이미지 대신 압축된 버전에 대해서 Diffusion 수행
     * 텍스트 인코더 : Transformer Language Model
     * 텍스트 정보를 이미지 생성 프로세스로 보내기
"
"https://news.hada.io/topic?id=7515","Papanasi - 여러 프레임워크에서 사용 가능한 프론트엔드 UI 라이브러리 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Papanasi - 여러 프레임워크에서 사용 가능한 프론트엔드 UI 라이브러리

     * Angular, React, Solid, Svelte, Vue 및 Web Components 에서 사용가능한 컴포넌트 세트들
     * 미니멈 스타일 & CSS로 확장 가능
     * 사용하기 쉬운 추가 테마들 제공
     * StoryBook 과 호환
"
"https://news.hada.io/topic?id=7475","Volvo, 차량용 소프트웨어에 Rust 이용중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Volvo, 차량용 소프트웨어에 Rust 이용중

     * Volvo의 시스템 아키텍트 인터뷰
     * 이미 개발되고 잘 테스트된 기존 코드를 교체하는 것은 의미가 없지만, 신규 개발되는 코드는 가능하다면 반드시 Rust로 개발
     * 그렇다고 Rust가 만병통치약 이라는 것은 아님. 아직 Rust는 거친 부분이 있고 최고의 선택이라고는 볼수 없는 트레이드오프를 해야함
     * 하지만 전반적으로 Rust는 더 낮은 비용으로 더 높은 품질의 코드를 생성할수 있는 잠재력이 있으며, 이는 결과적으로 보증 비용(Warranty Cost)를 줄여주므로 결과적으로 Win-Win 임

   아직 Go도 익숙하지 않지만, Rust도 준비하긴 해야겠다 싶군요.

   저도 포팅은 의미 없다고 봅니다. 새로 개발하는데 기존 c++ 라이브러리 사용 시 ffi 너무 귀찮은데 얼마 안 되는 코드면 포팅한다 이 정도는 몰라도...

   러스트가 무르익으려면 시간이 좀 필요하겠지만, 다른 언어들과 비교했을 때 정말 큰 장점이 있는 것 같아요.

   또 Rust와 C++의 진흙탕 싸움이 벌어질 것 같은 글이군요

   ㅋㅋㅋㅋ 마지막 하... 만 보여서 뭔가했네요
"
"https://news.hada.io/topic?id=7464","구글과 메타, 비용 및 인력 감축 예정 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         구글과 메타, 비용 및 인력 감축 예정

     * 메타는 다음 몇 달내로 최소 10% 비용을 절감할 계획
     * 메타의 경영진은 정리해고 라는 단어를 사용하지 않았지만, 조직 재구성을 통해 직원들이 다른 롤에 지원할 수 있는 시간을 줄 예정
     * 두 회사의 비용 절감노력은, 광고로 돈을 버는 두 회사가 경기침체에 대비하는 것
     * 메타 CEO는 회사가 ""내년에 인원 증가를 꾸준히 줄여나갈 것"" 이라고 말한바 있음
     * 6/30일 기준 메타의 직원은 83,553 명
     * 알파벳 CEO는 구글 직원들에게 올해 남은 기간동안 고용을 늦출 것이며 직원들에게 ""좀 더 기업가적(more entrepreneurial)""이 되라고 촉구 했음
     * 6/30일 기준 알파벳의 직원은 174,014명
     * 직원들이 내부에서 다른 일을 찾는 것에 대해 메타는 30일, 구글은 60일의 기간을 줄 것(다른 기준에 의해 더 길어질수도 있음)

   Aㅏ.....

   아니... 구글과 메타까지..
"
"https://news.hada.io/topic?id=7521","DVC - 머신러닝 프로젝트를 위한 오픈소스 버전 관리 시스템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   DVC - 머신러닝 프로젝트를 위한 오픈소스 버전 관리 시스템

     * ""Data Version Control"" : Git for Data & Models, Makefiles for ML
     * 큰 파일, 데이터셋, 머신러닝 모델, 메트릭들 및 코드를 트래킹 하여 처리할 수 있도록 설계됨
     * AWS S3, Google Drive/GCS, Azure Blob Storage, SSH/SFTP, HDFS 등에 데이터와 모델을 저장하고, 버전 정보는 Git으로 관리
     * 실험은 로컬 Git 레포에서 트래킹
     * CLI 및 VSCode 확장 제공
     * 윈도우/맥/리눅스
"
"https://news.hada.io/topic?id=7529","만화로 보는 GIT 탄생 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           만화로 보는 GIT 탄생 이야기

     * 리누스 토발즈는 리눅스 커널 개발을 시작하고 거의 10년 동안 CVS나 서브버전(SVN)과 같은 소스 관리 소프트웨어를 사용하지 않음.
     * 대신 타볼(tarball)과 패치(patch)를 사용
     * CVS의 문제는 파일 단위로만 변경이 추적 가능해서, single revision 단위로 큰 패치를 인식할 수 없음.
     * CVS는 모든 작업이 서버에 이루어짐.
          + 리눅스 커널 처럼 큰 프로젝트에서 브랜치를 만들면 서버에 부하가 많이 걸려서 다른 작업에 영향을 줄 수 밖에 없음.
          + 머지 작업 역시 서버에서 처리하는데, 브랜치 머지는 시간이 너무 오래걸림.
     * 2000년대 부터 사용되기 시작한 서브버전(subversion) 역시 분산환경을 지원하지 않음
     * 2002년 리누스는 분산 환경을 지원하는 BitKeeper라는 독점 소프트웨어를 소스 관리툴로 선택
     * 많은 커널 해커들이 이를 반대했고, 리버스 엔지니어링을 시도해 클론을 만드려는 시도가 있었음.
     * 결국, 리눅스는 BitKeeper 사용을 중지하고 독자적인 코드 관린 툴 개발을 시작.
     * 2005년 6월 리누스는 깃(Git)를 공개.

   https://medium.com/@willhayjr/…

   이글도 좋네요..

   재미있게 읽었습니다 ^^

   감사합니다. 이전에 그리신 작품들도 잘 보았습니다.
"
"https://news.hada.io/topic?id=7506","구글 스타디아 서비스 종료","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             구글 스타디아 서비스 종료

   스타디아 하드웨어 및 게임들은 2023년 1월 18일까지 모두 환불 가능하며 그 시점까지 플레이 가능함.

   언제 구글 무덤으로 가나 했습니다 ㅋㅋ

   (대충 내 이럴 줄 알았다 짤)
   몇달전에 서비스 종료 안한다더니...
"
"https://news.hada.io/topic?id=7565","무엇이 Zig 프로그래밍 언어를 독특하게 하는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      무엇이 Zig 프로그래밍 언어를 독특하게 하는가?

     * 전문가들은 ""컴파일시에 실행할 수 있는 코드""는 ""멍청한 아이디어"" 라고 지적했지만,
       Zig를 만든 Andrew Kelley는 계속 나아가서 구현을 했음
     * 몇년 후 이것은 Zig의 킬러 피쳐중 하나가 되었음
     * Zig에서 comptime 이라고 부르는 것은 컴파일시에 실행해야 하는 코드
          + Zig 개발자는 컴파일중에 Zig코드를 실행 가능한 것을 이용해서 제네릭/템플릿을 지원하지 않아도, 제네릭 코드를 작성하고 메타프로그래밍을 수행 가능

   첫 문단부터 문제가 있군요... 프로그래밍 언어 쪽에서 컴파일 시간 계산은 이른바 멀티 스테이지 프로그래밍이라고 하여 메타 프로그래밍을 구현하는 방법 중 하나입니다. 멍청한 아이디어가 전혀 아닙니다.

   멀티 스테이지 프로그래밍을 ""어쩌다"" 구현해 버린 C++ 같은 언어들은 각 스테이지(이 경우 컴파일 시간과 실행 시간)에서 코드가 극적으로 달라지는 문제가 생기는데(C++는 이제 constexpr가 있지만 여전히 이리 저리 부족하죠), Zig는 처음부터 멀티 스테이지 프로그래밍을 염두에 두고 언어를 설계해서 컴파일 시간과 실행 시간에 거의 같은 코드를 쓸 수 있다는 장점과 컴파일 시간에 예측할 수 있는 사항이 별로 없다는 단점을 함께 지니게 되었습니다.

   그러니까.... 피할 수 없는 유낫테스트를 통해 컴파일 시에 먼저 돌려보고,
   런타임 에러가 될만한 것을 컴파일 에러로 땡겨온다... 정도로 이해하면 될 것 같네요.
   대충 문서나 문답을 봤을 때, drop-in으로 c를 대체할 수 있다는 것도 꽤 매력이네요. 러스트와 다르게 문법이 간단한 것도 좋고. 물론 러스트만큼 안전하진 못하겠지만... 러스트를 쓰면서 느끼는 오버엔지니어링 하는 느낌은 좀 덜 들겠다는 느낌. Go도 역시 비교 대상으로 언급이 되는데, 아무래도 런타임이 없는 zig 쪽이 덜 부담스러운 상황이 있겠죠. 특히 더 저수준으로 내려간다거나, 많은 요청을 처리할 필요는 없는 경우라면 Go 보다는 손이 가는 선택지가 될 수도...
   그래서 러스트와 Go 중간에서 잘 포지셔닝 한다면 의외로 괜찮은 선택이 될 수 있겠다는 생각이 듭니다.
"
"https://news.hada.io/topic?id=7507","애플, 한국/일본 및 유로화 사용지역의 인앱 결제 가격 인상 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   애플, 한국/일본 및 유로화 사용지역의 인앱 결제 가격 인상

     * 2022년 10월 5일부터 칠레, 이집트, 일본, 말레이지아, 파키스탄, 폴란드, 대한민국, 스웨덴, 베트남 및 유로화를 사용하는 모든 지역의 App Store에서 앱 및 앱 내 구입(자동 갱신 구독 제외) 가격이 인상
     * 한국의 경우 약 25%의 인상(1달러에 약 1500원 적용)
          + 1구간 ($0.99)가 1200원에서 1500원
          + 2구간 ($1.99)가 2500원에서 3000원
          + 3구간 ($2.99)가 3900원에서 4400원
     * 일본은 엔화가치가 많이 떨어져서 평균 30% 인상률

   이것때문에 국내에선 특정 앱 마켓을 정당한 사유 없이 강제하는 행위를 금지하는 내용을 담은 전기통신사업법 개정안을 준비중이라네요.

   덕분에 안드로이드쪽 앱들도 가격 조정 혹은 구성 변경을

   19일날 공지된 내용이네요. 꽤 중요한 변화라 늦었지만 올려봅니다.
"
"https://news.hada.io/topic?id=7509","오픈소스 Figma 대체제인 Penpot, $8M 투자 받음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   오픈소스 Figma 대체제인 Penpot, $8M 투자 받음

     * Adobe가 Figma를 비싸게 인수한게 디자인 업계에 충격을 줌
          + 일부는 Adobe가 아니었기에 Figma를 선택한 이유도 있었음
     * 비슷한 기능을 제공하는 Penpot은 사용자가 매달 40% 씩 증가중이었는데, Figma 인수 발표이후 사용자 등록이 5600%로 급증. 온프레미스 배포도 400% 증가
     * 미국의 Decibel이 리딩한 $8M 투자에 Figma의 전 COO이자 현재 VSCO의 대표, 구글의 Fonts 리더 등 개인 투자자들도 포함
     * Penpot은 의도적으로 오픈소스 방식을 채택하였으며, 그래서 누구나 가져다 수정하고 자체 호스팅이 가능

   Penpot - 오픈소스 디자인 & 프로토타이핑 협업도구

   1년 반 전에는 그냥 Figma의 오픈소스 대체제라고만 소개했었는데요.
   이제는 Figma의 Adobe에 들어가버리면서 더 관심을 받게 되긴 한듯 합니다.
   이렇게 잘 만든 서비스의 출현 → 오픈소스 대체제의 출현 → 서비스가 엑싯하고 오픈소스 서비스가 다시 관심 받는 일들은 계속 반복 될듯 합니다.
   즉, 뭔가 괜찮은 서비스가 보이면 어떻게든 오픈소스 대체제를 만들어 보는 것도 중요한 비즈니스 전략이라는 것
"
"https://news.hada.io/topic?id=7451","Slack 캔버스 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Slack 캔버스 출시

   기능 좀 구경해 보려고 했더니 저는 메뉴가 없군요...
"
"https://news.hada.io/topic?id=7514","인텔과 삼성, 'Slidable' PC 개발 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       인텔과 삼성, 'Slidable' PC 개발 중

     * ""이제 폴더블은 가고 슬라이더블 디스플레이가 온다""
     * 인텔의 이노베이션 2022 행사에서 삼성 디스플레이 CEO가 공개
     * 13인치 태블릿에서 화면을 슬라이드하면 17인치 디스플레이로 변하는 프로토타입 PC
     * 그 위에서 Unison 앱을 시연 (iOS/Android 와 심리스하게 연결하는 앱)
     * 아직 컨셉이고 출시일자는 얘기하지 않음
"
"https://news.hada.io/topic?id=7434","iFixit: 아이폰 14는 수리하기 쉽게 완전히 재설계 되었다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  iFixit: 아이폰 14는 수리하기 쉽게 완전히 재설계 되었다

     * 새로운 기능이나 외부는 크게 바뀐게 없지만 내부는 많이 바뀜
     * 아이폰 14는 ""양쪽""에서 열림 : 전면 스크린/가운데 프레임/탈착가능한 후면 글라스
     * 구조를 지탱하는 가운데 금속 프레임은 내부가 완전히 재설계
     * 아이폰은 처음엔 스크린이 열리게 했다가, 4버전 부터는 뒷면이 열리게 했다가, 5부터는 다시 앞이 열리게 바꾸는등 변경이 많았음. X 이후로 채택된 뒷면 글라스는 교체가 많이 어려움
     * 아이폰 14의 뒷면 글라스는 나사2개와 한개의 커넥터로 간단히 고정됨. 약한 접착제를 써서 더 쉽게 열수 있음
     * 이 나사들은 앞면을 여는 나사와 같으며, 2개의 나사만으로 앞면/뒷면이 동시에 접근 가능해짐. Incredible!
     * 보드 사진을 보면 알겠지만 애플의 밀도에 대한 집착은 타의 추종을 불허함
     * 아이폰X 이후 가장 중요한 아이폰 재설계임
       → 참고 : 삼성은 2015년 이후로 폰의 아키텍처를 바꾸지 않았음
     * iFixit 이 평가한 수리 점수는 ""10점 만점에 7점""으로 아이폰 7 이후로 가장 높은 점수

   후면이 열린다는게 꽤 크네요
   X 후면 유리 교체 비용이 비싼데, 그 이유가 뒷판이 몽땅 붙어있어서 유리를 긁어내야 해서였는데 그런 일이 없어지겠네요.
"
"https://news.hada.io/topic?id=7481","Show GN: Traction - Founders reveal how they got early traction","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Show GN: Traction - Founders reveal how they got early traction

   This is a newsletter for founders, operators, and investors to learn about how founders got early traction for their startups.
"
"https://news.hada.io/topic?id=7535","ZELF의 VISA 가상 카드로 Apple Pay를 한국에서 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ZELF의 VISA 가상 카드로 Apple Pay를 한국에서 사용하기

     * 미국의 온라인은행인 ZELF의 비자 가상 카드를 만들어서 애플 페이에 등록하는 방식
     * 휴대폰 번호와 메신저(페이스북 메신저, 디스코드, 왓츠앱, 텔레그램) 계정만으로 등록 가능
          + ZELF 봇과 대화하면 즉시 선불 비자카드와 가상계좌를 발급해 줌
     * 그리고 은행 송금을 통해서 돈을 가상계좌에 입금
     * 애플 월렛에 해당 카드를 등록하고 애플 페이 이용 시작

   환전 수수료가 없는 걸까요? 너무 많은 금액은 안된다고 하지만 환전 수수료가 없다면 그것도 좋네요.

   온라인 결제에도 사용은 가능한데, 제 경우에는 대부분 가맹점에서 decline 되더라구요.

   문의해도 답변이 그렇게 빠르지는 않아서, 아직 편하게 쓰기에는 불편한 점들이 있긴 합니다.

   이 선불 이용방식은 환불이 어려우니 잘 생각하시고 충전해서 사용하시기 바랍니다.
   꼭 ZELF 말고도 Zen 등도 가능하다고 하며, 국내 사용가능한 매장들도 정리를 해놓은 글이 있으니 참고하세요.
"
"https://news.hada.io/topic?id=7483","WASM으로 브라우저에서 Wordpress 실행하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      WASM으로 브라우저에서 Wordpress 실행하기

     * MySQL대신 SQLite를 이용하게 설정된 WordPress를 이용
     * SQLite3와 함께 컴파일된 PHP 7.4를 WebAssembly로
     * PHP + WordPress WASM 번들을 emscripten 툴킷으로 생성
     * 서비스워커가 번들을 로딩하고 HTTP 트래픽을 인메모리 Wordpress 인스턴스로 디스패치
     * .js/.css 등의 파일은 호스트 파일시스템에서 직접 서빙됨
"
"https://news.hada.io/topic?id=7566","Stable Diffusion 이 아티스트별로 어떻게 달라지는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Stable Diffusion 이 아티스트별로 어떻게 달라지는가

     * 똑같은 프롬프트를 약 1500 명의 아티스트 이름으로 생성했을때 어떻게 달라지는 지를 볼 수 있는 사이트

     ""A woman with flowers in her hair in a courtyard, in the style of"" + 작가명
     * Vincent van Goh, Sandro Botticelli, Jackson Pollock, Bob Ross(!)..

   ""A woman with flowers in her hair in a courtyard, in the style of"" + 아사나기

   asangi
"
"https://news.hada.io/topic?id=7440","Dog Bunny Puzzle","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Dog Bunny Puzzle

     * 토끼는 당근 위로, 강아지는 뼈다귀 위로 옮기기
     * 이동시 약간의 조건이 있음

   정답을 맞추니 눈이 아프네요...
"
"https://news.hada.io/topic?id=7460","Can I Use a System Call?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Can I Use a System Call?

     * Cosmopolitan Libc가 커널에 대한 고수준 접근을 위해서 시스템 콜을 Wrapping함
     * 각 OS 시스템 콜별로 호출 가능한지 정리해놓은 호환 표
     * read/write/close/fstat 부터 _Exit/fork/clone/arch_prctl/mmap/poll/select/lseek/msync/ioctl 등

   앗, 본문의 ""Comopolitan Libc"" 에서 s 하나가 빠졌습니다!

   Cosmopolitan v2.0 릴리즈
   Cosmopolitan libc - Build-Once Run-Anywhere C
"
"https://news.hada.io/topic?id=7459","Betterbird - 모질라 Thunderbird의 파인 튜닝 버전","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Betterbird - 모질라 Thunderbird의 파인 튜닝 버전

     * 썬더버드에 없거나 구현하지 않고 있는 기능들을 추가하고 버그를 수정한 Soft Fork버전
          + 멀티라인 뷰
          + 복잡한 검색어
          + 태그 안된 메시지의 퀵필터링
          + 암호화된 메일 포함 글로벌 검색 및 퀵필터
          + 메일 리스트에 주소 표시 개인화
     * 변경 사항등은 업스트림에 서브밋
     * 윈도우 지원으로 시작했지만 리눅스/맥도 지원 시작
     * 애드온은 썬더버드와 그대로 호환
"
"https://news.hada.io/topic?id=7489","CEO이자 설립자인 Eiso Kant는 10억 달러 규모의 비즈니스 구축에 대해 이야기합니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          CEO이자 설립자인 Eiso Kant는 10억 달러 규모의 비즈니스 구축에 대해 이야기합니다
"
"https://news.hada.io/topic?id=7522","2022 Web Almanac - 웹의 현재 보고서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2022 Web Almanac - 웹의 현재 보고서

     * 매년 발간하는 방대한 보고서
     * 8.36M개의 웹사이트, 43.88TB의 데이터를 처리해서 만든 지표
     * 올해는 4개파트 총 22개의 챕터로 구성
          + Page Content : CSS, JAvascript, Markup, Structured Data, Fonts, Media, WebAssembly, Third Parties, Interoperability
          + User Experience : SEO, Accessibility, Performance, Privacy, Security, Mobile Web, Capabilities, PWA
          + Content Publishing : CMS, Jamstack, Sustainability
          + Content Distribution : Page Weight, HTTP

@stefanjudis 가 정리한 재미난 것들 (fun facts)

  CSS

     * 가장 큰 데스크탑 페이지 CSS 파일은 62MB, 모바일 페이지용 CSS는 78MB
     * 가장 CSS 파일을 로딩 많이 한 사이트는 1387개를 로딩한 모바일 사이트
     * 가장 많이 사용한 클래스 명은 active(47%), fa(33%), wp-*(31%), button(27%), pull-right (26%)
     * 가장 많이 사용한 폰트 사이트 단위는 px(71%) em(15%) rem(6%) pt(2%)
     * 가장 많이 사용하는 컬러 포맷은 #rrggbb(49%) , #rgb(25%), rgba(14%), transparent(8%)
     * 가장 적게 사용된 컬러명은 mediumspringgreen < darksalmon < mediumorchid < darkorchid
     * 0.3%의 페이지만 accent-color 를 사용
     * 가장 많이 사용한 미디어 쿼리 기능은 max-width(83%) min-width(79%) -webkit-min-device-pixel-ratio(35%) prefers-reduced-motion(34%) orientation(30%)

  JS

     * 데스크탑/모바일에서 async(76%) defer(42%) async and defer(28%/29%) module(4%)
          + async 와 defer를 같이 쓰는 것은 안티패턴. defer는 항상 무시되고 async가 우선순위를 가짐
     * 77%의 모바일 페이지가 <head> 안에 렌더링을 블로킹하는 스크립트를 포함하고 있음
     * 가장 많이 쓰는 라이브러리 jQuery 81% > core-js 41% > jQuery Migrate 34% > jQuery UI 23% > Modernizr 13% > Lodash 9%

  Media

     * 이미지 포맷 : jpg 40% > png 28.2% > gif 15.9% > webp 8.9% > svg 4.7% > ico 1.6%
     * Hero 이미지의 1/10만 Lazy Loading 됨
     * 28%의 img 태그만 height 와 width를 가지고 있음

   2019 Web Almanac - 웹의 현재 보고서
   2020 Web Almanac - 웹의 현재 보고서
   2021 Web Almanac - 웹의 현재 보고서
"
"https://news.hada.io/topic?id=7569","Microsoft, "미래의 농장" 툴킷 FarmVibes를 오픈소스로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Microsoft, ""미래의 농장"" 툴킷 FarmVibes를 오픈소스로 공개

     * Project Farmvibes 는
          + FarmVibes.Connect : 센서, 드론, 장비로 부터 데이터를 수집
          + FarmVibes.Edge : 수집한 데이터를 클라우드가 아닌 농장의 PC등 Edge에서 처리가능하게
          + FarmVibes.AI : AI를 이용해 데이터와 원격 센서로부터 인텔리전스 추출
          + FarmVibes.Bot : 챗봇을 이용하여 농부와 연결하고, 데이터 질의 및 인사이트 전달
     * 이중 FarmVibes.AI만 먼저 오픈소스로 공개
     * ""지속가능한 농업""을 목표로 데이터 와 기술을 통해서
          + 농장의 탄소 배출량을 예측하고
          + 날씨 변화를 예측하여 기후에 적응
          + 수익성 있고, 토양의 질을 개선하는데 도움이 되는 관리방법을 결정
"
"https://news.hada.io/topic?id=7520","Microsoft, Edge 브라우저에 VPN 내장 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Microsoft, Edge 브라우저에 VPN 내장

     * ""Microsoft Edge Secure Network"" 이라고 불리는 VPN 기능이 최신 Edge Canary 버전 사용중 일부에 롤아웃
     * 자체망은 아니고, Cloudflare 와의 파트너십을 통해서 제공
     * IP 숨김, 데이터 암호화, 안전한 네트워크를 통한 전송은 제공하지만, 가장 중요한 위치차단 바이패스(geo-block) 기능이 빠져있음
          + 즉, 서버 위치를 선택 불가능하고 나와 가장 가까운 Cloudflare 서버를 자동으로 이용
     * 추천하는 Optimized 모드를 활용하면, 공공 Wi-Fi 또는 HTTPS 가 아닌 사이트를 접속시에 자동으로 연결. 비디오 이용시에는 실행되지 않음(월 기본 트래픽이 최대 1GB)
     * All Sites 모드로 모든 사이트에 활용하거나, Select Sites 모드로 특정 사이트에만 적용 가능
     * 마치 애플의 Private Replay 와 비슷(iCloud+ 가입자에게만 제공 되는 기능)

   점점 사이트에서 IP를 기반으로 한 무언가를 만들기 까다로운 환경에 놓이는 것 같습니다.
"
"https://news.hada.io/topic?id=7439","USB/IP - USB 장치를 네트워크로 공유장치를 네트워크로 공유

   USB/IP는 USB 장치를 IP 네트워크 상에서 공유하는것을 목표로 합니다. USB 장치의 모든 기능을 공유하기 위하여 USB I/O 메시지를 캡슐화하여 TCP를 통해 송수신 합니다.

   USB 장치의 드라이버와 이를 사용하는 애플리케이션의 변경 없이 remote USB device를 local 컴퓨터에 직접 연결된 것 처럼 그대로 사용할 수 있습니다.

   윈도우용 : https://github.com/cezanne/usbip-win

   이걸로 직장에서 펌웨어 개발에도 ci/cd가 적용된다는걸 시연했었죠..
   원격 서버에서 로컬의 usb장치를 마운트해서 unit test, e2e test등을 자동화 했었는데..
   ㅋ

   https://news.hada.io/topic?id=7432

   임베디드 한참 했을때 썼던 녀석이네요. 당시에 개발환경을 버추얼박스 VM 에서 했었는데, USB Passthrough 기능이 완전하지 않아서요.

   AWS EC2 처럼 클라우드 컴퓨터에 USB 써먹으려고 할 때도 쓰이는 모양이더라고요.
"
"https://news.hada.io/topic?id=7474","Ezno - 새로운 JavaScript Type Checker","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Ezno - 새로운 JavaScript Type Checker

     * TypeScript와 호환되지만 훨씬 더 나아간 것
     * 소스코드에 대해 ""최대의(maximum)"" 지식을 얻으려고 노력함
          + 속성이 없어서 생기는 런타임 예외
          + 한번도 실행되지 않을 코드
          + 작업을 최소화 하기 위해 줄일수 있는 표현들
          + 데이터 뮤테이션
     * 이런 작업들은 Javascript의 역동성(Dynamism) 때문에 상수에 대한 레퍼런스를 필요로 함
          + Ezno는 TypeScript보다 더 많은 정보를 체크함
"
"https://news.hada.io/topic?id=7453","CORS 캐싱하기 - 성능과 비용을 위해 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         CORS 캐싱하기 - 성능과 비용을 위해

CORS preflight 란 ?

     * 복잡한 요청을 보내기 전에 OPTIONS로 권한을 있는지 먼저 요청하는 것
     * 하지만 실제로는 대부분의 요청들이 이걸 필요로 함 (JSON/XML 바디가 있거나 크레덴셜을 포함하거나 등등 )
     * 이게 나쁜 이유는 실제 요청에 걸리는 시간이 늘어난 다는 것
          + OPTIONS 리퀘스트는 기본적으로 캐싱이 불가능해서, CDN들도 보통 처리하지 않아 요청이 서버까지 도달함
          + 이 값들은 클라이언트에서 캐싱되며 기본적으로 5초만 유지됨.
               o 즉 웹페이지가 API 폴링을 10초마다 한다면 preflight가 10초마다 한번씩 이루어짐
          + 많은 경우 브라우저 클라이언트의 API 레이턴시를 증가시켜, 사용자 입장에서 성능이 절반으로 떨어짐
          + 또한 API 서버에 쓸데없는 부담을 주고 비용을 증가 시킴
          + 특히나 서버리스라면 더더욱. Lambda, Netlify Functions, Cloudflare Workers, Google Cloud Functions 모두 함수 호출당 비용을 받으므로, 이 preflight 도 그것에 포함됨

preflight 응답을 캐쉬하는 방법

     * 브라우저에서 캐싱해서, 불필요한 동일 preflight 요청을 보내지 않게 만들기
     * CDN 레이어에서 캐싱해서, 이 요청들을 실제 백엔드 서버가 처리할 필요없이 응답하도록 처리하기

  CORS caching for browsers

     * preflight 응답에 다음 헤더를 추가 Access-Control-Max-Age: 86400
     * Firefox는 86400(24시간) 까지 가능하지만 크로미엄 기반 브라우저는 7200(2시간)이 최대 값

  CORS caching for CDNs

     * CDN 또는 프록시에서 캐슁하기 위해서 다음 헤더를 추가
       Cache-Control: public, max-age=86400
       Vary: origin
     * 중요한 건 OPTIONS는 기본적으로 캐싱하게 되어있지 않기 때문에 표준이 아니라는 것. 하지만 대부분의 CDN이 지원함

Configuration 예제

     * Caching CORS with AWS Lambda
     * Caching CORS in Node.js
     * Caching CORS in Python
     * Caching CORS with Java Spring

   마침 이 부분 보고 있었는데 재미있게 보았습니다.

   성능이 정반으로 -> 성능이 절반으로
"
"https://news.hada.io/topic?id=7465","Chromecast with Google TV(HD) 한국 발매","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Chromecast with Google TV(HD) 한국 발매

   Android TV기반의 셋탑박스 플랫폼인 Google TV가 포함된 Chromecast 신형이 출시했는데, 국내에도 유통될 모양인가봅니다.

   미국에서는 세전 $29.99 로 판매 되는 것 같은데, 국내가격은 VAT포함 54,500원으로 책정되었습니다.

   2년전에 출시되었던 Chromecast with Google TV(4k) 와 하드웨어 사양은 거의 유사하지만 아래와 같은 점이 다르다고 합니다.
     * 1080p HDR 지원
     * 메모리는 1.5Gb(4k 모델은 2Gb, 스토리지는 둘다 8Gb)
     * AV1 하드웨어 디코더 지원(4k모델은 지원하지 않음)
     * OS는 Android 12 기반, (4k 모델은 Android 10 기반, 곧 Android 12로 업그레이드 예정)

   공식(?) 판매 페이지 에서 Miracast 지원하는 것처럼 타이틀에 소개되어 있는데,
   Chromecast 는 Miracast와 호환되지 않습니다. 구매할 때 주의하시기 바랍니다.

   4K 아니네? 했다가 AV1 지원은 여기만 있다는거 보니..
   딱 여행용으로 들고 다닐 스펙인거 같네요.
"
"https://news.hada.io/topic?id=7458","Whisper - OpenAI가 오픈소스로 공개한 다국어 음성 인식 시스템(ASR)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Whisper - OpenAI가 오픈소스로 공개한 다국어 음성 인식 시스템(ASR)

     * 영어 음성 인식에 대해서는 인간 수준의 정확도에 도달
     * 68만 시간 분량의 다국어 데이터로 훈련
     * 크고 다양한 데이터 셋을 통해 악센트, 배경 소음 및 기술 언어등에 대해서도 견고성(robustness)을 개선

   문재인 대통령님 UN 총회 연설을 돌려보니 거의 다 인식한것 같아요. 잘 나오네요.

   $ whisper ./moon_un_73.mp3 --language Korean
   [00:08.880 --> 00:14.560] 의장, 사무총장, 각국 대표 여러분,
   [00:14.560 --> 00:22.200] 코피아난 제7대 위원 사무총장의 서거에 깊은 애를 좋아합니다.
   [00:22.200 --> 00:29.960] 세계는 평화의 길에 새겨진 그의 이름을 영원히 기억할 것입니다.
   [00:29.960 --> 00:35.440] 마리아 에스피노자 총회의장의 취임을 축하합니다.
   [00:35.440 --> 00:44.320] 제73차 총회를 통해 유엔의 송길이 지구총 곳곳에 닿을 수 있기를 희망합니다.
   [00:44.320 --> 00:55.000] 또한 구테레시 사무총장의 훌륭한 지도력으로 인류에 공언하는 유엔으로 더욱 발전하기를 바랍니다.
   [00:55.000 --> 01:02.880] 나는 작년에 이어 다시 한 번 절실하고 설레는 마음으로 이 자리에 섰습니다.
   [01:02.880 --> 01:08.520] 지난 1년 한반도에는 기적 같은 일이 벌어졌습니다.
   [01:08.520 --> 01:16.200] 역사상 처음으로 북한의 지도자가 분사 붕괴선을 넘어 판문점에 내려왔습니다.
   [01:16.200 --> 01:23.600] 싱가포르 센터사섬에서는 역사적인 북미정상회담이 열렸습니다.
   [01:23.600 --> 01:32.440] 김정은 위원장과 나는 전쟁의 그림자를 걷어내고 평화와 번영의 시대를 다짐했습니다.
   [01:32.440 --> 01:44.640] 북미회담에서는 한반도의 완전한 비핵화와 적대관계 청산, 항구적인 평화체제 구축에 노력할 것을 합의했습니다.
   [01:44.640 --> 01:53.640] 트럼프 대통령과 김정은 위원장은 평화를 바라는 세계인들에게 감동과 희망을 주었습니다.
   [01:53.640 --> 02:07.720] 북한은 국제사회가 지켜보는 가운데 군대리 핵 실험장을 폐기했고 미국과 한국은 대규모 분사 훈련을 중단하며 신뢰를 구축했습니다.
   [02:07.720 --> 02:20.640] 한반도와 북미관계에서 새로운 시대를 만들고 있는 트럼프 대통령과 김정은 위원장의 용기와 결단의 경위와 감사 를 표합니다.
   [02:20.640 --> 02:34.400] 지난주날은 평양에서 세번째로 김정은 위원장을 만나 한반도를 핵 무기와 핵 위협이 없는 평화의 특전으로 만들 것을 다시 한 번 합의했습니다.
   [02:34.400 --> 02:43.960] 김 위원장은 가능한 빠른 시기에 비핵화를 끝내고 경제발전에 집중하고 싶다는 희망을 밝혔습니다.
   [02:43.960 --> 02:58.720] 또한 비핵화의 조숙한 진전을 위해 우선 동창리 엔진 시험장과 미사일 발사대를 국제적 창관하여 연구적으로 폐기할 것을 확의하게 했습니다.
   [02:58.720 --> 03:16.400] 나가서 북미정상회담의 합의 정신에 따라 미국이 상응하는 조치를 취한다면 영변 핵시설의 연구 폐기를 포함한 추가적 비핵화 조치를 계속 취할 용려 있다고 분명하게 밝혔습니다.
   [03:16.400 --> 03:29.200] 한반도는 65년 동안 정전 상황입니다. 전쟁 종식은 매우 절실합니다. 평화 체제로 가기 위해 반드시 거쳐야 할 과정입니다.
   [03:29.200 --> 03:40.360] 앞으로 비핵화를 위한 과감한 조치들이 관련국 사이에서 실행되고 종전 선언으로 이어질 것을 기대합니다.
   [03:40.360 --> 03:50.760] 어려운 일이 다를지라도 남북 민원 정상들의 상호실대를 바탕으로 한글음식 평화에 다가갈 것입니다.
   [03:50.760 --> 03:58.160] 이러한 극적인 변화는 평화를 바라는 세계인들의 지지와 응원 덕분입니다.
   [03:58.160 --> 04:07.880] 특히 유엔은 북한에게 평화로 나아갈 용기를 주었습니다. 유엔의 역할에 감사를 표합니다.
   [04:07.880 --> 04:19.800] 그러나 시작입니다. 완전한 비핵화와 한국적 평화를 위한 여정에 유엔 회원국들의 지속적인 지지와 협력을 부탁합니다.
   [04:19.800 --> 04:31.840] 한국은 유엔이 채택한 결의들을 지키면서 북한이 국제사회의 일원으로 함께할 수 있도록 성심을 다할 것입니다.
   [04:31.840 --> 04:39.920] 의장, 지난 겨울 강원도 평창에서 한반도 평화의 서막이 열렸습니다.
   [04:39.920 --> 04:50.080] 2017년 11월 유엔 총회가 채택한 올림픽 휴정결위가 소중한 결실을 맺는 순간이었습니다.
   [04:50.080 --> 04:58.240] 구테레시 사무총장과 세계 각국의 정상들이 북한 선수단의 참가를 축하해 주었습니다.
   [04:58.240 --> 05:02.880] 한반도의 화합과 평화를 기원해 주었습니다.
   [05:02.880 --> 05:07.880] 세계는 평화의 새 역사를 예감할 수 있었습니다.
   [05:07.880 --> 05:20.160] 평창 동계올림픽에 북한이 참갈 수 있도록 길을 열어주신 아이오시 바허 위원장의 지도력과 공원에 다시 한번 감사드립니다.
   [05:20.160 --> 05:29.240] 평창 동계올림픽이 끝난 한 달여 후 김정은 위원장과 나는 판문점에서 처음 만났습니다.
   [05:29.240 --> 05:35.680] 유엔은 판문점 선언을 환영하고 적극 지지해 주었습니다.
   [05:35.680 --> 05:47.200] 두 번째 남북회담과 국민정상회담, 이번 평양회담까지 지속적으로 이어진 만남에 든든한 힘이 되었습니다.
   [05:47.200 --> 06:01.000] 나는 지난 제72차 유엔 총회에서 온전하고 지속 가능한 평화를 이루기 위해 북한이 스스로 평화를 선택하기 바란다고 밝힌 바 있습니다.
   [06:01.000 --> 06:07.320] 유엔은 물론 지구 총구성은 모두의 바람이기도 했습니다.
   [06:07.320 --> 06:12.600] 북한은 우리의 바람과 요구에 화답했습니다.
   [06:12.600 --> 06:21.160] 올해 첫날 김정은 위원장은 10년 사이에서 한반도 정세의 방향을 돌렸습니다.
   [06:21.160 --> 06:31.280] 북한의 평창 동계올림픽 참가와 대표단 파견은 평화의 물고를 트는 결정적인 계기가 되었습니다.
   [06:31.280 --> 06:41.400] 북한은 4월 20일 핵개발 로선을 공식적으로 종료하고 경제 발전을 위해 모든 노력을 기울여 왔습니다.
   [06:41.400 --> 06:51.960] 정권 수리 70주년을 맞는 9월 9일 내른 핵 능력을 과시하는 대신 평화와 권정의 의지를 밝혔습니다.
   [06:51.960 --> 06:59.520] 북한은 오랜 고립에서 서수로 벗어나 다시 세계 앞에 섰습니다.
   [06:59.520 --> 07:07.000] 이제 국제사회가 북한의 새로운 선택과 노력에 화답할 차례입니다.
   [07:07.000 --> 07:14.720] 김정은 위원장의 비역화 결단이 올바른 판단임을 확인해 주어야 합니다.
   [07:14.720 --> 07:21.800] 북한이 항구적이고 공고한 행아의 길을 계속할 수 있도록 이끌어 주어야 합니다.
   [07:21.800 --> 07:25.040] 유엔의 역할이 중요합니다.
   [07:25.040 --> 07:34.840] 유엔 사무국은 국제회의에 북한 관료를 초청하는 등 대화와 포용의 노력을 지속해 왔습니다.
   [07:34.840 --> 07:41.160] 유엔은 누구도 뒤에 남겨놓지 않겠다고 선언하고 있습니다.
   [07:41.160 --> 07:50.880] 나는 지속 가능한 발전이라는 유엔의 꿈이 한반도에서 실현되기를 진심으로 바랍니다.
   [07:50.880 --> 08:01.880] 나는 국제사회가 길을 길어 준다면 북한이 평화와 번영을 향한 발걸음을 멈추지 않으리라 확신합니다.
   [08:01.880 --> 08:08.800] 한국은 북한을 그 길로 이끌기 위해 모든 노력을 다할 것입니다.
   [08:08.800 --> 08:15.880] 유엔이 경험과 지혜를 아낌없이 나누어 주시기 바랍니다.
   [08:15.880 --> 08:26.840] 의장 한반도 비역화와 평화정착 과정은 동부가 평화와 협력 질서를 만들어 가는 과정이기도 합니다.
   [08:26.840 --> 08:35.880] 동부가는 세계 인구의 5분의 1이 살고 세계 경제의 4분의 1을 떠받히고 있는 지역입니다.
   [08:35.880 --> 08:42.280] 그러나 갈등으로 인해 더 큰 협력으로 나아가지 못하고 있습니다.
   [08:42.280 --> 08:47.960] 한반도에서부터 동부과의 갈등을 풀어나가겠습니다.
   [08:47.960 --> 08:58.360] 나는 지난 8월 15일 동부가 6개국가 미국이 함께 하는 동아시아 철도공동체를 제안했습니다.
   [08:58.360 --> 09:06.560] 오늘의 유럽 연합을 만든 유럽 석탄철관 공동체가 살아있는 설레입니다.
   [09:06.560 --> 09:14.640] 동아시아 철도공동체는 향후 동아시아 에너지공동체와 경제공동체,
   [09:14.640 --> 09:22.920] 변화가 동부가 다자평화 안보 체제로 이어질 수 있는 출발점이 될 수 있을 것입니다.
   [09:22.920 --> 09:28.800] 남과 북은 끊어진 철도와 도로 연결에 착수했습니다.
   [09:28.800 --> 09:38.160] 앞으로 동아시아 철도공동체의 본격적 추진을 위해 영내 국가들과 긴밀히 협의해 나갈 것입니다.
   [09:38.160 --> 09:46.120] 동부가에서 유엔의 정신인 다자주의를 실현하고 공영의 미래를 만들어 나가는 길에
   [09:46.120 --> 09:52.440] 국제사회가 지지와 협력을 보내줄 것을 요청합니다.
   [09:52.440 --> 10:00.040] 의장, 대한민국은 유엔과 함께 벽동의 현대사를 헤쳐왔습니다.
   [10:00.040 --> 10:04.640] 유엔과 대한민국은 가치와 철학을 함께 합니다.
   [10:04.640 --> 10:13.360] 지난 9월 대한민국 정부는 사람 중심의 국정 철학을 토대로 포용국가를 선언했습니다.
   [10:13.360 --> 10:20.120] 우리 국민은 공정하고 정의로 나라 단 한 명의 국민도 차별받지 않고
   [10:20.120 --> 10:23.880] 더불어 사는 사회를 향해 나가고 있습니다.
   [10:23.880 --> 10:29.240] 포용성은 국제 개발 협력의 철학이기도 합니다.
   [10:29.240 --> 10:38.240] 누구도 소해받지 않는 국제 환경을 만들기 위해 개발 협력 규모를 꾸준히 확대해 나갈 것입니다.
   [10:38.240 --> 10:46.080] 인권 침해와 차별로 보통 받고 있는 세계인들, 특히 아동, 청소년, 여성,
   [10:46.080 --> 10:51.760] 장애인과 같은 지학계층에 대한 지원도 열려 나가고 있습니다.
   [10:51.760 --> 10:58.520] 최근 5년간 남민에 대한 재정적 지원을 5배 확대했습니다.
   [10:58.520 --> 11:07.680] 올해부터는 매년 5만 톤의 살을 극심한 식량위기를 겪고 있는 개발 도상국에 지원하고 있습니다.
   [11:07.680 --> 11:15.600] 나는 인도적인 위기를 근본적으로 해결하기 위해서는 평화 개발 인권을 아우르는
   [11:15.600 --> 11:19.280] 총체적 직권이 필요하다고 봅니다.
   [11:19.280 --> 11:28.120] 대한민국 정부는 모두에게 의미 있는 유엔을 만들기 위해 함께 고민하고 힘을 보탈 것입니다.
   [11:28.120 --> 11:32.600] 올해는 세계인권 선언 70주년입니다.
   [11:32.600 --> 11:42.000] 인권을 위해 부동앙 근력에 맞서 본 사람이라면 누구나 모든 사람은 자유롭고 평당하다는
   [11:42.000 --> 11:47.600] 세계인권 선언의 첫 조항을 가슴에 새기고 있습니다.
   [11:47.600 --> 11:55.120] 나는 특히 실질적 성평등 실현을 주요 국정 과제로 출진하고 있습니다.
   [11:55.120 --> 12:02.720] 여성에 대한 모든 차별과 폭력에 더욱 단호하게 대응하고 있습니다.
   [12:02.720 --> 12:09.280] 우리나라는 일본군 위안부 피해를 직접 경험했습니다.
   [12:09.280 --> 12:15.240] 국제사회의 여성 평화 안본 논의에 적극 참여하고
   [12:15.240 --> 12:23.320] 분쟁지역의 성평력을 철표하기 위한 국제사회의 노력에도 함께할 것입니다.
   [12:23.320 --> 12:31.520] 기후변화 대응과 저탄소 경제로의 전환은 우리 세대에게 주어진 도전이자 과제입니다.
   [12:31.520 --> 12:40.320] 대한민국 정부는 2030년까지 재생 에너지 발전량을 20%까지 높일 것입니다.
   [12:40.320 --> 12:47.120] 8위 협정에 따라 2030년까지 온실가서 감축 목표를 성실히 이행하고
   [12:47.120 --> 12:54.080] 개발도선국들의 기후변화 대응을 지원해 지속 가능한 발전을 돕겠습니다.
   [12:54.080 --> 13:05.080] 의장, 사무총장, 각국 대표 여러분, 남북한에게 유해는 국제기구를 넘어선 의미가 있습니다.
   [13:05.080 --> 13:15.040] 1991년 9월 17일 제46차 유엔총에서 남북한의 유엔 동시 가위반이
   [13:15.040 --> 13:21.280] 159개 전 회용국의 만장일치로 채택되었습니다.
   [13:21.280 --> 13:26.040] 그날은 세계 평화의 날이기도 했습니다.
   [13:26.040 --> 13:34.880] 남북의 수속대표들은 각각 연설을 통해 비록 남북한이 별개의 회용국으로 시작하였지만
   [13:34.880 --> 13:43.040] 언젠가는 화해와 협력, 평화를 통해 하나가 될 것이라고 다짐했습니다.
   [13:43.040 --> 13:50.120] 27년이 흐른 지금 남북한 그날의 다짐을 실현하고 있습니다.
   [13:50.120 --> 13:55.760] 분단의 장벽을 넘어서며 마음의 벽을 허물고 있습니다.
   [13:55.760 --> 14:01.400] 우리는 함께하면 얼마든지 평화에 이럴 수 있다는 사실을
   [14:01.400 --> 14:05.120] 국제사회에 증명하고 있습니다.
   [14:05.120 --> 14:10.560] 여러분, 우리 모두는 평화를 바랍니다.
   [14:10.560 --> 14:16.880] 사랑하는 가족, 이웃, 그리운 고양이 평화입니다.
   [14:16.880 --> 14:21.760] 가진 것을 함께 나누는 일이 평화입니다.
   [14:21.760 --> 14:27.200] 모두 함께 이룬 평화가 모든 일을 위한 평화입니다.
   [14:27.200 --> 14:32.080] 한반도의 항구적 평화와 비핵화를 향한 길,
   [14:32.080 --> 14:39.600] 평화라운 세계를 향한 여정에 여러분 모두 언제나 함께해 주실 것으로 믿습니다.
   [14:39.600 --> 14:41.600] 감사합니다.

   문재인 대통령입니다. 오타 수정 바랍니다.

   오타를 언급해 주셔서 감사합니다. 운영팀에서 수정해 주셨네요.
"
"https://news.hada.io/topic?id=7549","우리는 얼마나 운명적일까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             우리는 얼마나 운명적일까?

     * 구글의 위치기록을 통해서 연인 사이에 얼마나 운명적으로 교차했는지를 알아보기
          + 둘은 같은 도시에서 5년동안 같은 대학을 다녔지만 온라인 데이트앱에서 처음 만난 사이
          + 추출/분석한 코드는 R로 되어 있음
     * 구글 맵에서 위치기록을 JSON으로 다운 받음
     * 서로 간의 위치가 111미터 이하는 정확도 1, 11.1미터 이하는 2, 1.11미터 안이면 3, 0.11 미터면 4
     * 시간도 10분 이하의 차이만을 가정
     * 결과적으로 총 41번 만날뻔 함

   와 이런거 정말 좋습니다 ㅋㅋ

   와 멋지네요!

   낭만과 철학이 녹아든 기술의 사용이네요
   이미 친해진 이들과 길에서 만난 낯선 이에게 친절해야 할 이유가 느껴져서요
"
"https://news.hada.io/topic?id=7542","구글, 오픈소스 스피치 코덱 Lyra V2 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       구글, 오픈소스 스피치 코덱 Lyra V2 공개

     * SoundStream 오디오 코덱 기반으로 변경
     * 3.2 / 6 / 9.2 kbps 세가지 비트레이트 지원. 네트워크 환경에 맞추어 아무때나 변경 가능
     * 새로운 아키텍처 때문에
          + 딜레이가 기존 100ms 에서 20ms로 감소. (이제 WebRTC에서 사용하는 Opus랑 비교할만해짐)
          + 인코드/디코드 시간이 5배 빨라짐
     * 그간의 머신러닝 연구에 의해 오디오 품질도 향상됨
     * 모델은 TensorFlow Lite로 Export

   구글, End-to-End 뉴럴 오디오 코덱 SoundStream 공개
"
"https://news.hada.io/topic?id=7525","Linux 커널 6.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Linux 커널 6.0 릴리즈

     * 메이저 버전 번호가 바뀌었는데, 이번 버전이 특별한 커널 릴리즈는 아님
       → 5.19 릴리즈 이후에 ""20""은 숫자가 너무 크다고 6.0으로 가기로 한 것
     * 하지만 15K 이상의 커밋이 포함되어 변경된 부분은 많음

   이쯤해서 다시 살펴보는 리눅스 커널버젼의 역사

   0.01 : 1991/09/17
   1.0 : 1994/03/14 (유명한 홀짝 버젼으로 개발시작)
   2.0 : 1996/06/09
   2.2 : 1999/01/26
   2.4 : 2001/01/04
   2.6 : 2003/12/17 (홀짝버젼관리 버리고, 컨슈머 시장을 위한 LTS버젼 관리 시작, 2.6.12부터 git으로 버젼관리 시작)
   2.6.39 : 2011/05/18
   3.0 : 2011/07/21
   3.19 : 2015/02/08
   4.0 : 2015/04/12
   4.20 : 2018/12/23
   5.0 : 2019/03/03
   5.19 : 2022/07/31
   6.0 : 2022/10/02

   현재는 매 격주로 rc버젼을 발표하고, rc7-rc9 까지 발표한 후, 다음 커널버젼을 발표 합니다. (따라서 2-4달마다 새로운 커널 버젼이 나옵니다.)
   그리고 매년 LTS버젼을 지정해서, 엔터프라이즈/컨슈머 시장에서는 급격한 리눅스커널의 변화없이 일정기간동안 보안수정을 받게 됩니다.

   AMD의 USB4 관련 기능이 6.1로 예정 되어 있습니다.
   현재 썬더볼트 포트의 기능 중 alt DP로써 화면 출력은 큰 문제가 없는데, 썬더볼트 이더넷에 문제가 있습니다 (물론 인텔은 아무런 문제가 없습니다).
   썬더볼트 이더넷이 정말 좋은게, 랜케이블 없이 두 썬더볼트 지원 장치를 쉽게 연결한다는게 매력적 입니다. 그냥 꽂고 ip만 수동 설정한 후 ssh로 연결하면 되는거죠 물론 한쪽은 sshd가 열려 있어야죠...)
   암튼 이제 AMD도 USB4가 지원 되기 시작한 만큼, 커널도 머잖아 지원될 것으로 보입니다.
"
"https://news.hada.io/topic?id=7447","Azure CTO: "이제 새 프로젝트를 C/C++로 시작하는 것은 중단할 때가 되었음"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Azure CTO: ""이제 새 프로젝트를 C/C++로 시작하는 것은 중단할 때가 되었음""

     * GC 없는 언어가 꼭 필요한 시나리오라면 Rust를 사용하자
     * 보안과 신뢰성을 위해서임
     * 업계는 C/C++ 을 deprecated 언어로 선언해야 함

   그동안 rust 칭송하며 사용하던 사람들도, async 접하면 급 현타가 온다고. 심지어 rust 로는 라이브러리 만들지 말란 건가 (너무 복잡하고 까다롭고 어렵다). 이런 불평도 나오고 있네요

   마크 러시노비치가 누군지도 모르면서 깎아 내리는 사람도 있군요... sysinternals tool suite 와 책 windows internals 의 저자입니다... 윈도우즈를 리버스 엔지니어링해서 툴 만들다가 마이크로소프트 펠로우가 된 사람이여요...

   rust 광팬 들의 문제점을 단편 영상으로 비꼬는 글

   https://twitter.com/cmuratori/status/1367627549816152064?lang=en

   rust 는 아직 정식 specification 도 없다는 ....

   C++는 정식 spec이 ""존재""는 하지만 모든 구현체(gcc, clang, ...)가 incomplete하죠

   이게 흔한 논리인데요, 실제로 명세를 많이 읽어 보고 구현도 여러 번 해 본 입장에서는 명세가 있다 없다는 것 자체가 무슨 의미가 있는진 모르겠습니다.

   ""명세""에는 여러 전략이 있습니다. 겉보기 동작을 중심으로 서술하는 방법과 내부 동작을 서술하는 방법이 있고, 자연어를 사용하냐 기계가 읽을 수 있는 방법(의사 코드라거나 수학적 정의)을 사용하냐가 갈립니다. 파이썬이나 러스트 언어 참조 문서 같은 것은 겉보기 동작을 자연어로 서술한 명세입니다. ISO 표준 등에서 흔히 볼 수 있는 접근은 내부 동작을 자연어로 서술한 명세인데, 이 내부 동작이 실제 구현들의 접근과 일치한다는 보장은 없으며, 대신 이 내부 동작으로 구현된 가상의 구현과 실제 구현이 서로 겉보기에 동일하게 동작observationally equivalent한다면 표준에 합치된다는 식으로 정의합니다. ECMAScript는 자연어로 서술되어 있긴 하지만 실제 구조는 사실상 의사 코드를 자연어로 쓴 수준이며, WebAssembly 같이 내부 동작을 자연어 명세와 수학 정의로
   모두 제공하는 경우도 있습니다.

   구현 입장에서는 자연어 명세는 거기서 다 거기입니다. 자연어 명세는 실제 구현과 별도로 만들어져야 하기 때문에 자연히 둘이 서로 동떨어지는 경우도 있을 수 있고요, 실수하는 경우도 흔히 생길 수 있습니다. 겉보기 동작이 더 구현하기 편한가 내부 동작이 더 구현하기 편한가는 상황에 따라서 다른데 프로그래밍 언어의 관점에서는 어느 한 쪽을 택해야 할 당위성이 딱히 있진 않습니다. 그런 면에서 러스트는 이미 명세가 존재하며, 다른 대체 구현이 나올 수 있을 정도로 해당 명세가 충분한 정보를 제공하는 게 맞습니다.

   단순히 ISO 표준이 되었냐 안 되냐로 표준의 성숙도를 판단하고 싶으시다면, 제가 ISO/IEC 18181-1 JPEG XL 표준에서 버그를 100개 정도 발견했(고 그것 때문에 2nd amendment가 지연되고 있)다는 소식을 알려 드립니다...

   해커뉴스에도 800개가 넘는 댓글이 달렸는데.. 여기도 뜨겁군요...
   https://news.ycombinator.com/item?id=32905885

   수고 많으십니다.
   한편.. 어떤사람이 좋아하는 무언가가 공격 받을때
   그사람의 반응을 해석하려할때 그사람의 성격탓으로 돌리는 것을 경계해야 한다는 글을 보고 좋은 말이라고 생각했는데, 그이유는 실제상황에서 그러한 마음을 갖기란 어려운 일이기 때문일 것입니다.

   트윗 댓글중에 인상깊은 게 있네요 .

   People end up writing Rust code the ""unsafe way"". - 생략 - Rust was never meant to replace those.

   이쯤에서, Mark Russinovich가 누군지 알아볼수 있는 링크를 달아봅니다.
   https://en.m.wikipedia.org/wiki/Mark_Russinovich

   한마디 더 할께요. c++ 사용하면서 자꾸 에러 내고 버그 만들고 하던 사람들이, 야 이거 못쓰겠다 요즘 뜬다는 rust 로 가보자.. 메모리 에러 신경 안써도 된다며.. 이런 사람들은 똑같아요. rust 가지고도 비슷한 버그 만들어 낼거고 ... 그럼 또 다음 언어 뭐 배워서 해볼까 이럴사람 많습니다. c++ 에서 포인터 역참조 도 제대로 안해본 사람들이 rust 빨아대는 거에요.

   그런 부류의 인간들은 rust 가 강점으로 주장하는 소유권 , Reference, Borrowing 이런거 컴파일 할때부터 에러 내고 골치아프니까 다 무시하고 그냥 unsafe 섞어서 c++ 인거처럼 막 쓸거란 겁니다.

   어차피 죽을거 왜 사나요?
   이거랑 거의 같은 수준의 논리네요

   어차피 사고치는 사람은 안전벨트도 안매고 신호등도 무시하니까 안전벨트와 신호등은 별 의미가 없다는 주장을 보는 느낌이네요.
   잘하는 사람이야 뭘해도 잘하고 못하는 사람은 뭘해도 못한다고 주장이야 할 수 있지만, 그런 논리로 가면 도구의 유용성에 대한 논의가 성립이 안되죠.

   언어가 너무 사용하기 난도가 높다는게 문제지 맞는얘기긴 하죠

   visual rust 나오면 인정 ㅡ.ㅡㅋ

   C/C++은 이제 정말 라틴어 위치로 가는 것 같네요. 학문을 위해서라면 누구든지 공부해야 하지만, 마스터하기에는 불가능에 가깝고, 옛 체계이기 때문에 현재로 따지자면 비합리적인 부분도 많고...

   모든 것이 unsafe인 언어들은 잘 쓰면서 제한적으로 unsafe를 쓸 수 있는 언어는 왜 절대 안된다고 하는지 재밌네요.

   스톡홀름 신드롬의 일종이라고 봅니다
The Spirit of C

1. Trust the programmer.
2. Don’t prevent the programmer from doing what needs to be done.
3. Keep the language small and simple.
4. Provide only one way to do an operation.
5. Make it fast, even if it is not guaranteed to be portable.

   제 개인적인 의견으로는 1번부터 틀린 것 같군요 ㅋㅋ 사람은 태생적으로 error-prone 하기 때문에..

   C++도 스마트포인터와 메모리풀 적극적으로 사용하면 되는거라서..
   생각보다 포인터를 직접 다룰 일이 많이 없다고 봐요.

   전 thread-safe한 코드는 결국 프로그래머 본인의 능력이라고 생각해요.
   어떤 언어를 써도 실력이 좋지 않은 경우,
   안전하지만 저열한 성능 또는 위험한 코드의 양상이 보이거든요.

   프로그래머의 능력에 자동차 운전이나 비행기 운전을 맡기는 건 너무 무섭잖아요....

   thread-safe 한 코드는 결국 프로그래머 본인의 능력이다 <- 저는 이 생각이 위험하다고 보는게, memory / thread safety는 단순히 프로그램이 죽는다, 느려진다의 수준이 아니라 보안상의 취약점으로 발전하기 때문에, 이걸 한 개인의 능력에 맡기면 안된다고 생각합니다.
   이걸 사전에 막을 수 있는 다양한 방법이 연구되어 왔고 그것들이 성숙해져서 rust 같은 언어나 다른 도구들로 탄생한 것인데 이걸 이용하지 않고 개인의 탓으로 돌리기에는 소프트웨어가 일상생활에 미치는 영향이 너무 거대해졌다고 봐요

   사람은 사람인 이상 실수를 할 수 밖에 없고 아무리 똑똑한 프로그래머라도 실수를 하기 마련이죠. 메모리 버그도 결국 실수에서 나오는 거고...

   요즘은 알아서 잘 하기보다는 애초에 실수를 하기 힘든 환경을 제공하는 것이 더 나은 접근 방법이 아닐까 싶기도 합니다.

   우리 회사에서 rust 사용 하려면 unsafe 는 사용 금지다. 이런 규칙이라도 있어야 언어 차원에서 지원되는 안정성을 한번 믿어보자 할 수 있는 거죠. 근데 이게 말이 되겠습니까 ?

   물론 Rust를 사용하는 회사에서는 꼭 필요한 경우가 아니면 unsafe를 쓰면 안 된다는 합의가 있겠죠. 그보다 직접 Rust로 짜 보시는 걸 추천드립니다... unsafe를 쓸 일이 과연 얼마나 있을지는 직접 써 보셔야 알 수 있지 않을까요?

   tokio 등 알만한 라이브러리에서는 unsafe 도배질 했음

   All or nothing으로 All 아니면 아무런 가치가 없다고 보시는 댓글이 꽤 많네요

   unsafe / safe를 명시적으로 구분-격리할 수 있고 메모리 버그 100번 낼 사람이 10번 내게 할 수 있는 장점이 있는데 어쨌든 unsafe 가 있다 / 그래도 메모리 버그는 발생한다 => 고로 C++ 보다 나을게 없다라고 보는 접근법이 현실적인 판단인지는 전 잘 모르겠습니다 😅

   댓글 개수로는 그러하지만.....
   All or nothing 의견인 한분이 쓴 댓글이 많다... 가 맞는 상황같네요.

   저도 이 댓글에 동의합니다. 이분법적으로 어떤 대상을 볼 수록 그냥 자기만 손해입니다.

   현업에선 장단점을 따져봐서 결과적으로 제일 +인 걸 선택하기 마련이죠. 업계 특성 상 지금 당장은 C/C++을 사용할 수 밖에 없는게 아니라면 rust 사용했을 때 얻는 이점이 크기 때문에 점점 rust가 사용되는 영역이 넓어지고 있다고 생각합니다.

   rust로 옮겨가는 사람들이 뭐 바보도 아니고 rust 써보니깐 C++보다 더 결과적으로 나은게 있으니깐 계속 쓰겠죠 뭐ㅎㅎ

   Nothing... Everything

   Rust가 Next C++ 라는 데 동의하지 않는 사람은 이제 드물 겁니다. 리눅스 커널에도 공식 언어로 채택했을 정도이니까요.
   다만 Rust가 정말로 쓰기 편한 언어인지는 좀 의문입니다... 메모리 안전성을 미연에 잡기 위해서 수행하는 정적 분석 덕분에 컴파일 타임이 꽤 뼈아프고, ownership 같은 semantics가 어려워서 파이썬이나 자바같은 범용 언어보다 훨씬 더 많은 공부를 요하거든요.

   컴파일 타임은 LLVM 자체가 문제가 클 것입니다. 페이스북이 LLVM의 instruction sel 개선을 위해 힘쓰고 있으니 상황은 나아지겠죠.

   찾아보니 정말로 그러네요. 저는 ownership 관련 type check에 시간을 많이 쏟는 줄 알았는데 llvm backend가 크군요..

   rust 가 처음 나왔을 때 굉장히 관심을 가지고 공부를 좀 하다가...unsafe 항목 보고 바로 접었어요. 이걸 왜 배워서 써야 할지 도저히 합리적 설득이 안되더군요. 어차피 조금만 복잡한 프로그램은 unsafe 를 사용해야만 하죠. 그런데 그럼 rust 가 그렇게 자랑하는 안정성은 날라가는 거죠. 이걸 왜 써요 ?

   rust에서 unsafe는 로우레벨 코딩할때나 필요하지 일반적인 응용 작성할 때는 거의 쓸 일 없다고 봐도 무방합니다.

   그리고 unsafe 블록 안에서 메모리 문제가 발생한다 하더라도 문제가 발생하는 부분은 unsafe 블록 안에 있다는 것이 언어적으로 보장되어 있으니 디버깅을 쉽게 할 수 있다는 장점도 있구요.

   unsafe가 있다고 ""이걸 왜써요?""라고 물으실 거면 애초에 c/c++은 쓰면 안되지 않나요?

   C++ 도 계속 진화 하고 있고, unsafe 쓸 바엔 그냥 c++ 쓰고 말지, 굳이 RUST 배워서 사용할 필요성을 못 느끼는 거죠.

   모든 rust 프로그래밍에 unsafe가 필요한 것은 아니라서요.
   unsafe가 필요할 정도로 세심한 메모리 조작은 보통 라이브러리 개발로 빠져있기 때문에 (아마 가장 많은 수요가 있을) 어플리케이션 개발 단에서는 unsafe를 쓸 일이 거의 없을 거라고 봅니다.
   c++도 계속 진화하고 있는 것은 맞지만 하위호환을 위한 레거시가 너무 뼈아프죠. unsafe 하나 때문에 불만이실 정도라면 c++의 모든 기능이 불만이실 것 같네요 ㅎㅎ

   그래서 unsafe가 권장되지는 않죠.
   safe를 쓰면 모든게 unsafe나 다름없는 C/C++보다 안전하구요
   https://people.mpi-sws.org/~dreyer/papers/rustbelt/paper.pdf

   unsafe라는 애매모호한 장치가 없다면 rust 가 c++ 의 진정한 대안이 될 수도 있겠죠

   저는 FFI가 조금 만 더 친절했다면 어떨까 하네요.. 복합 구조체를 FFI를 통해서 외부 라이브러리랑 주고 받을려했는데 아주 고통스러웠던 기억이 있네요.

   심지어 rust to rust도 쉽지 않다보니..
   https://github.com/rodrimati1992/abi_stable_crates

   MS가 rust를 적극 지원하고 있는 상황의 연장선으로 보면 아주 자연스러운 발언으로 보입니다.

   그 고집센 토발즈도 러스트를 채택했는데, 배우는 사람도 적어지는 언어를 굳이 계속해서 사용할 필요를 못느끼겠어요.

   메모리 관련버그 rust 쓴다고 잘대 사라지지 않는다. 버그 만드는 인간들은 뭔 언어를 갖다줘도 버그를 양산하지. C++ 아무런 문제없이 효율적으로 잘 사몽하고 있는데 없애긴 뭘 없애나. 진짜 전쟁 날 폭탄 발언을 함부로 했구만.

   c/c++ 아무런 문제없이 효율적으로 잘 사용하고 있다기엔 이미 역사적으로 수많은 메모리 관련 버그가 c/c++에서 터져왔고 지금도 어딘가에서 터지고 있을 겁니다. (덕분에 많은 PL/SE 연구자들이 먹고 살긴 했지만요)
   마이크로소프트 발표 내용에 따르면 보안 버그의 70%가 메모리 관련 버그이구요 (https://zdnet.com/article/…)
   크로미움 프로젝트에서 조사한 내용도 비슷한데(https://www.chromium.org/Home/chromium-security/memory-safety/), 역시 거의 70%가 메모리 관련 버그였습니다.

   윈도우 커널 버그의 대부분이 메모리 관련 에러이고
   러스트로 개발하고 있는 부분에 대해서는 해당 에러가 극적으로 줄어들었다는 예전 기사를 어디서 봤는데요..

   언어의 태생 자체가 readonly를 적극 권장하는 설계라서 c++보다 더 안전한 언어적 설계라는 것은 부정할 수 없을것 같네요. 다만 이 때문에 듣도보도 못한 소유권이라는 개념이 등장해서 프로그래밍이 힘들어지지만요

   아주 잘 설계된 C++ 코드보다 대충 만든 러스트 코드가 통계적으로 더 빠르게 실행된다는 성능상의 이점도 있구요.

   뭔가 파이어가 날 수 잇는 말을 했네요. ㅋㅋ
   개인적으론 c++은 너무 오래되다보니 하위 호환성에 발목 잡혀서 모던하게 발전이 더디고요.
   또 하위 호환성을 철저하게 하면서 모던한 걸 넣다보니 동일한 일을 하는 방법이 너무 여러가지가 되서, 뉴비에게 더 진입 장벽으로 작용한다고 생각해요.
   저도 이젠 C++보단 rust가 낫다고 봐요. 메모리 관리 관련 버그 찾느라 눈 벌게 지던 시절은 이제 그만.

   네 맞아요.. 제로 베이스에서 출발하는 개발 프로젝트라면 굳이 c++을 선택할 이유가 없죠..

   격공

   러스트 쓰고 싶어도 보조적으로나 쓰지 업무적으로는 아직 쓸일이 없네요.
   그래서 좀처럼 익숙해지지 않기도 하고 잠깐 손 놓으면 까먹어버리기도 하고...
   분명 좋아서 쓰고는 싶은데...ㅎ

   힙사용성의 효율성을 위한 메모리 풀 한번 작성해본적 없는 것들이 RUST 타령 조낸 하네 ㅎ
   Azure CTO 가 뭐 산업계의 표준을 대표할만큼의 오피니언이 아님은 물론 마이크로소프트로 국한해도 마소 입장을 대변하는 오피니언은 절대 아니고 그저 갑자기 뭐가 도져서 지 주관적 생각을 떠벌리는것에 불과할진데... c++ 제대로 못하는것듫이 rust 라고 제대로 할까? 하여간에 이빨까는것듦로 가득하네

   말투에서부터 천박함을 여지없이 드러내시는군요. 힘내세요.
"
"https://news.hada.io/topic?id=7493","깔끔한 코드를 원하면 "Rule of Six"만 기억하세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    깔끔한 코드를 원하면 ""Rule of Six""만 기억하세요

     * 읽기 쉽고 이해하기 쉬운 코드는 한줄 한줄이 짧아야 함
     * 인간의 뇌는 장기기억(LTM)/단기기억(STM)/작업기억(WM) 세 기능이 같이 동작
     * 단기기억과 작업기억 공간은 매우 작아서 한번에 4~6개만 저장 가능
     * 즉 코드 한줄이 6+개 이상의 정보를 가지고 있다면, 간소화 해야한다는 것이 ""Rule of Six""
     * 코드가 복잡하면 분할 - SIMPLE : Split Into MultiPle LinEs

     map(lambda x: x.split('=')[1], s.split('?')[1].split('&')[-3:])
     을 분할해 보면
     query_params = s.split('?')[1].split('&')[-3:]
     map(lambda x: x.split('=')[1], query_params)
     아직도 6개가 넘으니 다시 분할해 보면
     url_query_string = s.split('?')[1]
     query_params = url_query_string.split('&')[-3:]
     map(lambda x: x.split('=')[1], query_params)
     * MORF(Move Out and Rewrite as a Function)전략을 이용하면

     def query_params(url):
     ㅤㅤquery_string = url.split('?')[1]
     ㅤㅤreturn query_string.split('&')[-3:]
     map(lambda x: x.split('=')[1], query_params(s))

   오 예시가 너무 훌륭하네요 ㅎㅎ

   본능적으로 한줄코딩을 싫어했는데 제 뇌의 비명이었군여

   링크된 글 본문 마지막에 소개된 책은 국내에 프로그래머의 뇌: 훌륭한 프로그래머가 알아야 할 인지과학의 모든 것이라는 이름으로 번역 출간되었습니다. 본문에 소개된 내용이 좀 더 자세히 나와 있지요.

   저도 읽어봤는데, 위에 내용이 나와있었네요.

   한번 읽어봐야겠네요! 감사합니다~
"
"https://news.hada.io/topic?id=7547","The Art of Computer Programming - "4B" 인쇄 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              The Art of Computer Programming - ""4B"" 인쇄 시작

     * 번역판 제목 : ""컴퓨터 프로그래밍의 예술""
     * 2011년 ""4A : Combinatorial Algorithms Part 1""이 나온지 11년만에 2부 출간
     * 4A가 883p, 4B는 732p 이며, 4는 주제들이 많아서 4C 및 그 이후도 준비중
     * ""5 : Syntactic Algorithms"" 도 준비중 (2025년 예정)

   와.. Knuth 교수님 계획하셨던 것을 다 쓰실 수 있으려나요

   아직까지는 1,2,3,4A 만 세트로 파는데 곧 세트에 한권이 더 추가되네요.
   물론 4C, 5에다가 원래 계획되었던 ""6: The Theory of Context-free Languages"" 와 ""7: Compiler Techniques"" 까지 하면 10권 이상이 될 수도..
   Donald Knuth 교수님 38년생이라 84세이신데.. 건강하십시오!
"
"https://news.hada.io/topic?id=7544","Slack, 슬랙앱을 만들고 실행할 수 있는 차세대 플랫폼 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Slack, 슬랙앱을 만들고 실행할 수 있는 차세대 플랫폼 공개

     * 자동화 기능을 쉽게 만들고 사내 워크플로우에 연결
          + Functions : 내장 함수 및 커스텀 함수를 작성
          + Workflows : 단계별로 내장/커스텀 함수를 실행하도록 구성
          + Triggers : 워크플로우가 실행되는 조건을 구성(링크, 스케쥴, 이벤트, 웹훅)
          + Run on Slack : 슬랙 플랫폼 내에서 실행되는 새로운 앱
          + Datastores : Run on Slack 앱에서 사용가능한 데이터 저장소
     * Slack CLI 를 이용해서 개발, 테스트, 배포
     * 사용자들이 Workflow Builder 를 통해서 함수들을 Remix & Recombine 가능
     * Typescript 와 Deno 로 개발됨

   오 확안해봐야겠네요

   오오... 좋네요..
"
"https://news.hada.io/topic?id=7557","페이스북, 수천명 정리해고 진행중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           페이스북, 수천명 정리해고 진행중

     * ""조용한 정리해고""가 진행중이며, 전체 회사의 최대 15%(약 12000명)까지 될 수도
     * 한번에 정리해고를 하는 것이 아니라, 실적 기대치를 이용한 프로세스로 진행
     * 각 매니저들에게 팀 멤버중 15%를 ""Need Support""로 분류하라고 지시
     * 이들은 ""PIP(Performance Improvement Plan)""에 들어가게 됨
     * PIP에 들어가는 것은 ""You're Screwed""랑 같은 의미. 30일내로 사내의 다른 포지션에 지원해야 함
     * 이미 매니저들 다수도 PIP를 받았다고 알려짐

     ""앞으로 나아가는 것 처럼 보이지만, 쫓겨나는 거라는게 현실""

   전체 15%가 12000명이라면, 페이스북 전체 직원이 8만명인가요..?

   네 다른 기사에서 보면 올해 6/30일 기준 83,553 명 이라고 하네요.

   구글과 메타, 비용 및 인력 감축 예정
   소문처럼 나오더니, 실제로 진행하는 것 같네요.

   이름을 변경하면서 VR과 메타버스에 집중하고 하는 것이 뭔가 아직 시기상조인 것도 있고,
   그동안 페이스북이 보여온 개인정보 침해에 관한 논란들이 쌓인거라.. 과연 어떻게 헤쳐나갈 수 있을지..
"
"https://news.hada.io/topic?id=7482","LiteFS - SQLite를 위한 오픈소스 분산 파일 시스템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   LiteFS - SQLite를 위한 오픈소스 분산 파일 시스템

     * SQLite의 풀스택 활용에 올인하고 있는 Fly io의 새로운 프로젝트
     * 세분화된 트랜잭션 제어를 통해서 Litestream의 아이디어를 확장
          + Litestream은 WAL 파일을 단순 복제하지만, LiteFS는 각각의 트랜잭션 단위로 조사 및 적용
     * SQLite의 파일시스템 API를 인터셉트 하는 방법은 두가지 : VFS 추상화 사용 vs. FUSE 파일 시스템 작성
          + LiteFS는 더 어려운 FUSE 파일시스템 생성하는 방식을 채택
          + VFS는 사용하기 위한 사전 단계가 있어서, 누군가 DB를 사용하려고 하면 VFS를 먼저 로드해야함
          + FUSE는 이런 사용성 문제의 대부분을 해결함
     * 가용성을 증대하기 위해 클러스터의 프라이머리 노드를 임대(Hashicorp 의 Consul을 이용)
     * 분산 복제 방식을 사용
     * 앞으로 준비중인 기능들
          + WAL모드 지원
          + Write Forwading
          + S3 Replication
          + Encryption

   진짜 진심이네요

   저는 서버사이드 SQLite에 올인합니다
"
"https://news.hada.io/topic?id=7499","Cairo : 오픈소스 Windows 데스크탑 대체제 (쉘)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Cairo : 오픈소스 Windows 데스크탑 대체제 (쉘)

     * Microsoft Windows용 쉘 (7~11 및 .NET 4.7.1 이상 필요)
     * 더 사용하기 편리한 Taskbar
     * 쉽게 드래그앤 드롭으로 정리 가능한 Programs 메뉴
     * Dynamic 데스크탑으로 바탕화면에서 쉽게 파일 내비게이션 가능
     * Folder Stacks 로 자주 사용하는 폴더에 쉽게 접근

   예전엔 몇가지 쉘이 있었는데 아직도 윈도우 쉘이 나오다니 신기하네요...

   우와 윈도우에도 서드파티 셸이 나왔군요. 그동안 기껏해야 시작메뉴 덮어씌우는게 전부였는데...

   이름이 카이로인게 재밌네요 윈도 95 인터페이스의 모태가 된 실험 프로젝트의 코드네임 ㅋㅋ
"
"https://news.hada.io/topic?id=7543","Steampipe - select * from cloud;","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Steampipe - select * from cloud;

     * 200개 이상의 데이터 소스(클라우드)에서 데이터를 쿼리하는 오픈소스 도구(GO CLI)
          + AWS, Azure, GCP 및 각종 SaaS, Identity, DevOps, 네트워크(CDN, IMAP, WHOIS,..), IaC, Log, Social,..
     * SQL 방식으로 다양한 데이터 소스를 조인하여 이용 가능
          + 슬랙 사용자 중 MFA가 활성화 된 사용자는? select id, display_name, real_name, has_2fa from slack_user;
          + 사용하지 않는 EBS 볼륨은 ? select volume_id, volume_type from aws_ebs_volume where attachments is null;
          + select aws.name aws_user_name, slack.id as slack_user_id, slack.display_name as slack_name from aws_iam_user as aws, slack_user as slack where aws.name = slack.email;

   와 외부 BI랑 연결되면 정말 최강일 것 같네요
"
"https://news.hada.io/topic?id=7526","18세 이전에 Adsense 계정을 생성하면 평생 블록됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    18세 이전에 Adsense 계정을 생성하면 평생 블록됨

     * 13세 소년이 자신의 유튜브 계정에 애드센스를 연결해서 £300 수익을 내었지만, 애드센스는 18세 이상이 되어야 수익을 받을 수 있음
     * 그러나, 사용자는 단 한개의 애드센스 계정만 가질 수 있기 때문에, 이 계정은 이제 림보에 빠지게 됨(인증도 불가능하고, 닫을 수도 없고, 돈도 받지 못하는)

   중3-고1때쯤에 처음으로 애드센스 시작했는데 그런 제약이 있었나요?
   난 왜 문제가 없었던 거지...

   궁금한게 있는데 혹시 미성년자 때 수익 지급까지 했는데도 안걸리셨나요?

   히스토리 뒤져보니 중3때 가입했고 첫 수익지급은 고1이었습니다.
   그땐 웨스턴 유니온으로 지급받았어요.

   음.. 이건 무언가 문제가 있는거 아닌가요?

   Paypal도 비슷합니다. 이유도 알려 주지 않고 영구 정지를 당하면 풀 수도 없고 닫을 수도 없고 새로 계정을 생성하면 다시 바로 영구 정지됩니다.

   뭔가 신기한 구조네요. 애초에 연결이 안되게 해야하는거 아닌가 싶은데..
   일단 구글 공식 답변이 아니긴 한데, 저 사용자가 꽤 등급이 높기는 해서 저 상황이 맞기는 한듯 합니다.
   18세 되기를 기다린다고 해서 돈을 받을 수 있는게 아니라는 상황도 웃기네요
"
"https://news.hada.io/topic?id=7546","긱뉴스 새 소식 알림용 구글 챗 봇 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         긱뉴스 새 소식 알림용 구글 챗 봇 추가

   GeekNews에 새로운 뉴스가 올라오면 알려주는 웹훅(WebHook) 봇에 Google Chat Bot이 추가되었습니다
   이제 Google Chat 을 포함하여 Slack, 잔디, Microsoft Teams, Discord 총 5개의 서비스를 지원합니다.

   어랏 저만 그런건지 rss 는 며칠간 업데이트가 안되는 것 같습니다

   구글 피드버너 쪽이 문제가 있는 건지 가끔 하루 정도 늦기도 합니다. 지금은 괜찮은 듯 하네요!

   Telegram도 추가좀 해주세요 ㅎㅎ

   텔레그램엔 비공식 긱뉴스 방이 있긴 한 걸로 압니다.
   Show GN: GeekNews 비공식 Telegram Channel

   이 알림봇들의 경우는 주로 회사에 설치되는 것을 목적으로 해서요.
   텔레그램도 또 다른 활용 방안이 있을지 고민해 보겠습니다.
"
"https://news.hada.io/topic?id=7536","PS5 탈옥 성공 - 커스텀 패키지 설치까지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        PS5 탈옥 성공 - 커스텀 패키지 설치까지

     * PlayStation 5가 2020년 출시된 후 처음으로 탈옥에 성공
     * 악명높은 해커인 Lance McDonald가 탈옥시킨 자신의 PS5영상을 공개
     * 게임 실행 중에 활성화 가능한 개발자 옵션과 도구들 포함
     * 영상 마지막에 몇년전 PlayStation Store에서 공식적으로 삭제된 Silent Hill P.T 데모를 실행해서, 라이센스 되지 않은 게임 실행가능성을 보여줌
     * Homebrew 를 가능하게 하는 큰 진전. PS3/PS4는 탈옥되어 커스텀 테마, 에뮬레이터, 비공식 게임 패치등도 가능(블러드본 60FPS 패치 같은)
     * 하지만 해커가 상세 내용은 공개하지 않아서 어떻게 탈옥 했는지는 알수 없음. 소니가 빠르게 패치하는 걸 방지하기 위해 비밀로 남겨 두는 듯

   @Cryptogenic/PS5-4.03-Kernel-Exploit 이런 게 올라왔던데, 관련이 있을지 모르겠네요.

   영상이나 저 저장소나 둘 다 DNS 서버를 조작해서 유저 매뉴얼이 지정된 서버로 연결되도록 하고, 거기서 웹 기반 익스플로잇을 실행하는 방식인가 보군요.
"
"https://news.hada.io/topic?id=7532","AudioGen : 상황 설명 텍스트를 이용한 오디오 생성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    AudioGen : 상황 설명 텍스트를 이용한 오디오 생성

     * ""개가 공원에서 짖음"", ""바람 부는데 휘파람 부는 소리"", ""많은 사람들이 환호하는 앞에서 남자가 연설함"" 같은 소리를 생성 가능
     * 오디오 생성은 여러가지 도전 과제가 있음
          + 소리를 내는 객체를 분리하는게 어렵고, 실제 환경의 다양한 녹음 조건으로 더 복잡해지며, 이런 상황에 대한 어노테이션이 부족해서 모델 축적이 어려움
     * 이런 문제를 완화하기 위해 다양한 오디오 샘플을 혼합하고, 모델이 여러 소소를 분리하는 기술을 내부적으로 학습하도록 하는 증강 기술(augmentation technique)을 제안
"
"https://news.hada.io/topic?id=7454","Figr - 구글닥스 + 계산기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Figr - 구글닥스 + 계산기

     * 실시간 멀티 사용자 협업 편집을 지원하는 노트패드 스타일 계산기
     * 맥/윈도우 데스크탑 앱 제공
     * 과학 계산(함수 및 상수)
     * 길이/부피/무게 및 통화 변환 지원
"
"https://news.hada.io/topic?id=7479","Ask GN: 개발자 밈을 어디서 찾으시나요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Ask GN: 개발자 밈을 어디서 찾으시나요

   매일매일 유쾌한 개발자 밈을 보며 살고 싶습니다.

   어딜 방문해야 매일 새롭고 재밌는 computer/programming/developer 짤방을 찾을 수 있을까요?

   예전엔 https://xkcd.com/ 였지만
   요즘은 https://www.reddit.com/r/ProgrammerHumor/ 아닐까 합니다.

   저는 그 중에서도 재밌다 싶은 것만 모아서 올려주는 Developer Memes라는 계정을 팔로우 중입니다
   https://social.cybre.town/@DeveloperMemes

   와! 감사합니다
"
"https://news.hada.io/topic?id=7437","The Next Normal - 맥킨지의 2030년 생활상 예상해 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                The Next Normal - 맥킨지의 2030년 생활상 예상해 보기

우주의 미래 : 이 세상 밖으로의 휴가

     * 우주 여행이 가능해 질 것. 아주 비싼 롤러코스터 처럼
     * 문워크 가능한 우주 호텔
     * 더 많은 위성들(매년 8천~1.2만개의 위성 발사 예정)과 우주 쓰레기
     * 다음 10년간 엄청난 발전을 기대

에어 모빌리티의 미래 : 전기 비행기가 대중화되고 조용할 것

     * 전기 비행 택시가 일반 택시 보다 많이 비싸지 않게 될 것
     * eVTOL(전기 수직 이착륙 비행기, Electric Vertical Takeoff and Landing)은 헬리콥터만큼 시끄럽지 않아서, 일주일에 몇번씩 이용하게 될 것
     * 2030년이 되면 eVTOL들이 100마일(160km)반경의 사람 및 화물을 일상적으로 운송하게 될 것
     * 일부 eVTOL은 파일럿이 같이 타서 운전하겠지만, 다른 것들은 반자동으로 파일럿들이 지상에서 제어할 것

포장의 미래 : 박스, 병, 가방들이 ""스마트"" 해지고 지속가능(sustainable)해 질 것

     * 칵테일을 만들고 싶으면 병을 스캔하면 개인화된 레시피 추천을 받게 될 것
     * 요구르트 통은 센서가 달려서 상했을때 알려주게 될 것
     * 과자 봉지는 식물성으로 만들어져서 과자를 다 먹고나서 먹어도 되고(실제로 맛있고), 재활용도 가능

상품 배달의 미래 : 드론들이 패키지를 배달할 것

     * 2030년이 되면 2천억개의 택배가 배송될 것으로 예상
     * 택배들은 드론/로봇/자동화된 운송수단으로 문앞 또는 창문앞에 도착하게 될 것
     * 일부 소포들은 지하로 운송됨. 밀집된 도시에서는 터널을 통해서 물류센터에서 아파트 건물지하로 직접 소포를 운송하게 될 것

비디오 엔터테인먼트의 미래 : 영화들은 인터랙티브하면서 몰입감을 주게 될 것

     * 친구들과 같은 시간에 영화를 보면서 게임을 할 수 있게 될 것 : 왜냐하면 영화가 곧 게임이 될것이기에
     * 당신은 집에 있고, 친구는 영화관에 있더라도 같이 즐길수 있음
     * 화면에 겨울 장면이 있으면 얼굴에 부는 찬바람을 느끼게 될 것
     * 알고리듬을 통해 당신이 어떤걸 누구와 언제 보고 싶은지 정확히 알아낼 것

웰빙의 미래 : 연결된 기기들이 당신의 건강과 웰빙을 추적할것

     * 냉장고가 당신이 먹을 것과 마실것을 추천 : 당신이 얼마나 잠자고, 운동하고, 영양소를 섭취했는지에 따라서
       왜냐하면 냉장고가 당신의 침대 밑에 있는 수면센서, 웨어러블 운동 트래커 등과 연결되어 있기 때문
     * 또한 다이어트를 위해 식물성 식품이나 무설탕 제품으로 구성되어야 할 때, 더 많은 선택권이 생기게 될 것

   80~90년대의 미래 예측과 비슷한 느낌이 드는게 재미있네요 ^^
"
"https://news.hada.io/topic?id=7446","Plasma BigScreen - TV를 위한 오픈소스 사용자 인터페이스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Plasma BigScreen - TV를 위한 오픈소스 사용자 인터페이스

     * 리눅스 배포판 위에서 실행하면 다양한 앱을 사용 가능
     * TV나 셋탑박스를 해킹가능한 장비로 만들어 줌
     * QT + KDE + Wayland

   전에 GeekNews에도 올라온 적이 있군요 https://news.hada.io/topic?id=1795

   우어.. 제가 올린 것들은 대부분 기억하고 있어서, 그냥 올리는데.. 다른 분이 올리셨었네요.
   2년쯤 지났으니 많이 업데이트가 되어서 괜찮은거로.. ^^;;;

   관련 댓글 보니깐 Plasma 라는 브랜드 (KDE UI 이름이죠) 쓰는게 이상하다고 하네요.

   옛날에 시장에서 퇴출된 PDP를 연상시킨다면서요...일부 나라는 PDP 를 그냥 Plasma라고 불렀나 보더라고요.
"
"https://news.hada.io/topic?id=7450","OpenAI, DALL-E 2에서 얼굴 편집 지원 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     OpenAI, DALL-E 2에서 얼굴 편집 지원 시작

     * 처음엔 실제 얼굴사진을 올리는 것은 제한되어 있었음
     * 이제는 얼굴 이미지를 올려서 편집이 가능해짐
     * OpenAI는 안전 시스템을 개선해서 성적, 정치적, 폭력적인 콘텐츠를 생성하려는 시도를 차단하여 ""피해 가능성을 최소화"" 했다고 주장
     * 물론 동의를 받지 않거나 권리가 없는 사람의 이미지를 올리는 것은 정책적으로 금지되어 있음

   이 업데이트 내용을 OpenAI가 메일로 보내주기는 했는데, 자신들의 홈페이지에는 적어놓지를 않았더군요.
   마침 테크크런치에 기사가 떠서 그 링크로 올려봅니다.
"
"https://news.hada.io/topic?id=7562","Show GN: Devery: 개발자 블로그 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Show GN: Devery: 개발자 블로그 모음

   개발 블로그들을 '빠르게 훑어 보고 싶다'는 생각에 만들어보게 된 프로젝트입니다.

   블로그 목록은 '어썸데브블로그' 프로젝트를 소스로 사용했습니다.
   https://github.com/awesome-devblog/awesome-devblog

   오 잘 사용하겠습니다. 비슷한 서비스도 하나 두고 갑니답
   https://techblogposts.com/

   이거 만드신 분인가요? 유용하게 잘 쓰고 있습니다

   늦게 봤네요 아니에요. 저도 어딘가에서 보고 즐찾해두고 잘 사용하는 서비스라 소개한거에요 ㅎㅎ

   2022-10-13T04:23:58.334Z 93a96f40-b116-4133-8aa7-62de0be8ec60 Task timed out after 10.02 seconds

   몇 번 접속하니 타임아웃이 뜨네요...

   제보 감사드립니다! 아울러 사용하시는데 불편을 드려 죄송합니다. 트래픽이 증가하면서 부하를 감당 못했던 것 같습니다. 개선해 보겠습니다!

   이거 백엔드 어떻게 구현되어있나요? 엣지컴퓨팅 쓰시나요? 로딩이 엄청 빨라서 궁금합니다

   오라클 무료 VM / Go / GraphQL / SQLite 스택으로 구성되어 있습니다. 비용이 발생되지 않는 범위에서 사이드 프로젝트를 구성하기 위해서 시도해 본 스택입니다. 관련해서 블로그 포스팅을 계획중입니다.

   감사합니다!

   저도 감사드립니다!!

   정말 빠르게 훑어볼 수 있네요. 스크롤과 로딩이 아주 빠릅니다.

   감사합니다!

   깔끔해서 보기 좋네요. 종종 들어가보겠습니다!

   감사합니다! GeekNews 아주 잘 보고 있습니다!!
"
"https://news.hada.io/topic?id=7442","faster cpython, 4년 안에 5배 빨라짐","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      faster cpython, 4년 안에 5배 빨라짐

     * 4년 안에 5배 빨라질 것(매년 1.5x)
     * 3.11.0rc2기준 이미 CPython 3.11은 3.10과 비교해서 평균 25% 빠르고, 환경에 따라 최대 60%까지 빨라짐
     * 3.11은 2022-12-24 공식 릴리즈 예정

   지리노

   node도 좀 빨라졌으면... -_-;

   deno 는 어떠신지,,!?

   3.12 Plan
   guido van rossum 프레젠테이션
   벤치마크 리스트
"
"https://news.hada.io/topic?id=7466","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   주말엔 일찍 퇴근할 계획입니다 ^^....

   날씨도 제법 선선해졌는데, 이르지만 아이들 데리고 밤주으러 다녀올까 생각하고 있습니다.
     * 언제나 처럼 보드게임 모임이 있습니다. 이번주엔 18xx 라는 주식&열차회사 운영 게임을 합니다.
     * 이번주부터 아침 운동을 시작했는데, 주말에도 빠지지 않고 나가보려고 합니다.

   리액트 공부 해보려고합니다.
"
"https://news.hada.io/topic?id=7448","Safari 16.0 의 WebKit기능들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Safari 16.0 의 WebKit기능들

     * Web Inspector Extensions : 프레임워크 개발자들이 개발자용 확장 추가 가능
     * Container Queries 지원
     * Web Push for macOS
     * CSS Subgrid
     * Flexbox Inspector
     * Shaked Worker
     * Passkeys 지원
     * AVIF 포맷
     * :has()가 :target 지원
     * Apple Pay의 Merchant Token 지원

   첫줄 개발자동이 개발자도구의 오타인것 같아요?

   CSS 미디어 쿼리는 가고 컨테이너 쿼리가 온다
"
"https://news.hada.io/topic?id=7540","DreamFusion : 2D Diffusion을 이용한 Text-to-3D","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               DreamFusion : 2D Diffusion을 이용한 Text-to-3D

     * 기존 텍스트-이미지 합성은 수십억개의 이미지-텍스트 쌍으로 훈련된 디퓨전 모델에 의해 가능
     * 이 방식을 3D에 적용하려면 대규모의 라벨링된 3D 데이터셋과 노이즈 제거를 위한 아키텍처가 필요하지만 존재하지 않음
     * 그래서 사전에 훈련된 2D Text-to-Image 디퓨전 모델을 활용해서 Text-to-3D 합성을 수행
     * 텍스트를 통해서 만들어진 3D 모델은 모든 각도에서 볼수 있으며, 조명을 바꾸거나 다른 3D 환경에 합성 가능
"
"https://news.hada.io/topic?id=7445","Youtube, 12개월동안 음악산업에 8.3조원($6b) 이상을 지불","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Youtube, 12개월동안 음악산업에 8.3조원($6b) 이상을 지불

     * 2021년 7월부터 2022년 6월까지 12개월 동안 $6b (같은 기간동안 전세계 실물 음반 매출액은 $5b)
     * 전년의 $4b 보다 1.5배 늘어남
     * 유튜브는 2025년까지 광고와 구독, 2개의 수익 엔진을 가지는 걸 목표로 함
"
"https://news.hada.io/topic?id=7496","Objective-See - macOS용 무료/오픈소스 보안도구들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Objective-See - macOS용 무료/오픈소스 보안도구들

     * LuLu : 멀웨어 차단용 방화벽
     * Do Not Disturb : 피지컬 공격 알림(누군가 노트북을 열면 카메라로 사진을 찍거나, USB/썬더볼트에 꼽는지 등을 로깅하고 핸드폰으로 알려줌)
     * KnockKnock : 자신도 모르게 설치되어 실행되는 소프트웨어들 확인
     * TaskExplorer : 동작중인 프로세스들 확인
     * ReiKey : 키로거 검출
     * Netiquette : 네트워크 모니터
     * BlockBlock : 자동으로 재실행되는 요소들을 모니터링하고 알림
     * RansomWhere : 지속적으로 파일시스템을 모니터링해서 암호화된 파일이 생기는지를 감시하는 방식으로 랜섬웨어를 감지
     * OverSight : 맥의 마이크와 웹캠을 모니터링해서, 프로세스가 마이크/웹캠을 켜면 알림
     * KextViewr : 모든 로딩된 Kext를 보여줌(사이닝 상태, 풀 경로 등 상세 정보 포함)
     * Dylib Hijack Scanner : 컴퓨터를 스캔해서 dylib 하이재킹에 취약하거나 하이재킹된 어플리케이션을 찾아줌
     * What's Your Sign : 파인더에 ^-Click 메뉴를 넣어서 어떤 파일이든 코드사이닝 정보를 표시해줌
     * Commandline Utilities : 시스템 모니터링 및 멀웨어 분석용 커맨드라인 도구들
"
"https://news.hada.io/topic?id=7472","Linkify - 다양한 것들을 링크로 만들어 주는 JS 플러그인 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Linkify - 다양한 것들을 링크로 만들어 주는 JS 플러그인

     * 텍스트에서 URL, IP주소, 이메일, @멘션, #해쉬태그 등을 찾아서 a 링크로 치환
     * React 와 jQuery 지원
     * 다국어 및 이모지도 지원
     * 링크에 대한 커스텀 플러그인 가능
     * 95%+ 테스트 커버리지
"
"https://news.hada.io/topic?id=7570","Leap - Neovim 의 마우스 대체 인터페이스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Leap - Neovim 의 마우스 대체 인터페이스

     * 스크린 점프를 보다 빠르고 내추럴하게
     * 2글자의 검색 패턴 입력으로 화면의 어떤 위치로든 이동 가능
     * ""clairvoyant(투시력)"" 기능으로 어떤 것을 눌러야 할지 ""미리"" 알려줌
     * s 는 포워드, S 는 백워드 검색. gs는 다른 윈도우
     * {c1}{c2} 눌러서 한개면 바로 이동, 여러개면 스페이스/탭으로 이동 가능

   https://reddit.com/r/neovim/…
   reddit에 이런 플러그인에 대한 유머가 ㅎ

   easymotion이나 intellij kjump 모두 사용해봤지만, 손에 잘 안 익어서 결국 안 쓰게 되더라구요.

   vim 의 easymotion 같은 커서 이동 지원 도구라고 보이네요.

   마우스 지원 인터페이스라고 요약하는게 맞을까요? 리드미에 ""An ideal keyboard-driven interface would impose almost no more cognitive burden than using a mouse"" 라는 표현이 보입니다.

   아 그렇긴 하네요. 뭔가 다른 표현으로 써봐야 할듯
"
"https://news.hada.io/topic?id=7537","Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2022년 10월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2022년 10월)

   일할 곳을 찾고 계시다면, 간단히 정보를 남겨 주세요.

     지역 :
     리모트 필요 :
     기술 :
     이력서 :
     이메일 :

   위 정보는 구인을 위해서만 이용해 주세요

   ~~

   혹시나 봇들이 이메일 주소를 크롤링하는 경우가 있을 수 있으니 '[at]' 이나 '[앳]' 등을 써서 이메일 주소를 난독화 해주셔도 좋습니다.
   가능하면 자신의 깃헙/링크드인 URL을 남겨 주세요.
   HN의 Who wants to be hired 를 참고 했습니다.
"
"https://news.hada.io/topic?id=7492","webЯcade - WASM으로 고전게임 에뮬레이션을 실행하는 웹 플레이어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               webЯcade - WASM으로 고전게임 에뮬레이션을 실행하는 웹 플레이어

     * JS + WASM + HTML5가 지원되는 다양한 기기에서 실행되는 게임 에뮬레이터
          + Xbox Series X|S, iOS, Android, Windows, macOS
     * 블루투스/USB 게임패드 지원
     * 사용자 정의 클라우드 Feed에서 게임 리소스(이미지/바이너리)를 읽어오는 형태
          + 각 피드 아이템 별로 연관된 에뮬레이터/게임엔진이 지정되며, 종류는 계속 확장 예정
          + 기본 피드 제공 (공개적으로 사용 가능한 고품질 게임 및 데모들 포함)
"
"https://news.hada.io/topic?id=7518","완전 동형 암호(FHE)의 부상 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           완전 동형 암호(FHE)의 부상

     * 흔히 ""암호화의 성배""라고 불리는 상용 FHE(완전 동형 암호,Fully Homomorphic Encryption)
     * FHE는 격자수학(Lattice Mathematics)에 기반하여 양자 컴퓨팅 시대에도 안전해서 PQC(Post-Quantum Cryptography) 라고도 불림
     * 이를 위한 하드웨어 가속기가 연구 개발중이고, 더 효율적인 구현을 위한 학계의 연구가 계속되고 있어서 곧 상용 FHE가 출현하게 될 것

   4세대 암호, 완전동형암호란 ?
"
"https://news.hada.io/topic?id=7567","Sharing - iOS/Android 기기에 폴더 및 파일 공유하는 오픈소스 CLI 도구 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Sharing - iOS/Android 기기에 폴더 및 파일 공유하는 오픈소스 CLI 도구

     * 별도의 클라이언트 앱 없이 스마트폰에서 실행한 윈/맥의 폴더/파일을 접근 가능하게 해 줌
     * CLI로 폴더/파일 지정후 실행하면 QR코드가 터미널에 표시,
       폰에서 스캔하면 해당 폴더에 바로 접속해서 원하는 파일 다운로드 가능
     * Javascript + Node.js 로 만든 오픈소스
     * 다른 개발자의 PR로 업로드 기능도 추가되었음
"
"https://news.hada.io/topic?id=7551","Alinea : 최신 웹을 위한 오픈소스 헤드리스 CMS ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Alinea : 최신 웹을 위한 오픈소스 헤드리스 CMS

     * 모든 웹 프레임워크에서 사용 가능
     * 콘텐츠는 플랫 파일로 저장되고 Git Repo에 커밋됨
     * 인-메모리 SQLite DB로 쉽고 빠르게 쿼리 가능
     * 모든 콘텐츠는 Fully-Typed (TS 사용자에게 Type-Safe경험 제공)
     * 사용자 친화적인 대쉬보드 제공
"
"https://news.hada.io/topic?id=7470","EU Open Web Search 프로젝트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        EU Open Web Search 프로젝트

     * 정보에 대한 무료, 공개 접근을 목표로 하는 EU 의 인터넷 검색 인프라 프로젝트
     * 웹 검색에서 유럽의 독립을 촉진하기 위해 7개국 14개의 유명 연구소 및 컴퓨팅 센터가 공동 협업
     * 향후 3년간 European Open Web Index(OWI)를 개발 예정.
       또한 추가로 공개/확장가능한 OWSAI(European Open Web Search and Analysis Infrastructure)의 기초를 구성
"
"https://news.hada.io/topic?id=7534","20명 스타트업이 사용하는 30+개의 SaaS 서비스들 (매월 170만원)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               20명 스타트업이 사용하는 30+개의 SaaS 서비스들 (매월 170만원)

     * Bytebase는 20명(개발자 10명)이 4개의 도시에서 근무, 매월 SaaS 비용은 $1183(170만원)

R&D : $425

     * GitHub $0: Bytebase 자체가 오픈소스이고, 전체 릴리즈 프로세스가 GitHub Action이며, 공식 웹사이트도 GitHub에서 호스팅
     * Linear $180: GitHub에서도 이슈/프로젝트 관리가 되긴 하지만, 만족스럽지는 않음. 그래서 프로젝트 관리는 Linear를 사용. 유일한 단점은 GitHub Issue와 동기화가 안된다는 것
     * Neat $0: SaaS는 아님. GitHub/Linear 알림을 맥에서 보여주는 네이티브 앱
     * Sourcegraph $0: GitHub의 검색이 만족스럽지 않아서, 코드 검색에 사용
     * Gitpod $0: GitHub 프로젝트 페이지에서 1클릭 버튼으로 Bytebase를 Gitpod에 디플로이 가능하게 제공
     * Excalidraw $60: 가상 칠판 도구. 와이어프레임, 아키텍처 다이어그램, 기능 소개 다이어그램등을 그리는데 이용
     * Figma $15: 디자인 자료들 관리
     * Better Uptime $0: 웹사이트 실시간 모니터링하고 이상감지시 알림. 서비스 상태 대시보드도 제공
     * Auth0 $0: Bytebase Team/Enterprise 에디션을 활성화 하려면, 자체 Hub에 등록하고 라이센스를 구매해야함. Auth0를 이용해서 GitHub 계정으로 등록가능하게 함
     * Render $50: Bytebase 데모사이트와 Hub, 모든 DB가 Render 에서 호스팅.(The New Heroku! 웹서비스 및 PostgreSQL 호스팅)
     * Vercel $20: 공식 웹사이트인 bytebase.com 이 Vercel에서 별도로 호스팅
     * AWS $100: VCS 연동을 테스트 하기 위해 gitlab을 호스팅중. Render를 사용하지 않은 것은 GitLab을 초기에 만들어서 마이그레이션이 힘들고, GitLab이 더 많은 리소스를 요구해서 Render에서 호스팅하면 비쌈
     * Cloudflare $0: Bytebase의 관련 도메인들이 Cloudflare에서 호스팅. 예전엔 name.com 에서 도메인을 구매했지만, Cloudflare에서 통합할 예정
     * Segment $0: 제품과 웹사이트에 대한 익명 데이터를 수집해서 Segment로 보냄. 그리고 Segment를 통해서 Render의 PostgreSQL 서버로 보내고 있음
     * Metabase $0: 내부 데이터 시각화를 위해 Metabase로 대시보드를 구성. 데이터는 Segment로 수집되어 Render의 PostgreSQL 에 저장
     * Paddle $0: 사용자 결제 시스템. Stripe를 선택하지 않은 이유는 Paddle이 MOR(Merchant of Record)로서 우리의 세금 문제를 줄일수 있기 때문. 대신 Stripe보다 수수료는 더 비쌈
     * Retool $0: 등록된 사용자를 보여주는 리스트를 생성하기 위해 사용. 내부 팀에서 사용자 환불을 즉시 처리가능하게 함
     * Algolia $0: 문서사이트 검색을 위해 사용

마케팅 : $208

     * Intercom $70: 공식 웹사이트의 우하단 버블을 통해서 우리와 컨택트 가능
     * Mailchimp $20: 뉴스레터 구독을 관리. 트라이얼 기간 종료 같은 관리 이메일도 전송
     * Orbit $0: GitHub repo의 사용자 Engagement 관리
     * Ahrefs $80: SEO 조사를 위해 사용
     * Searchramen $20: Ahrefs와 같은 기능이지만, 좀더 직관적인 인터페이스로 현재 랭킹과 키워드 통계를 볼 수 있음
     * Google Analytics $0: 사용자 소스와 페이지 뷰 분석
     * Plausible $8: GA가 같은 기능르 제공하지만, Plausible이 좀 더 사용자 친화적인 인터페이스를 제공
     * Hotjar : 사용자의 브라우징 행동을 리플레이해서, 웹사이트의 브레이크포인트를 찾고 개선가능

Daily Operation : $550

     * Google Workspace $130: 모든 멤버가 @bytebase.com 의 구글 이메일 계정을 사용. 많은 SaaS들이 구글 계정 로그인을 지원. 계속 수정되는 문서는 구글 독스를 사용. ""수정 제안(Suggesting)"" 활용
     * Lark $0: 내부 활동을 관리. IM, 문서, 미팅, OA 등
     * Slack $50: 고객과 커뮤니케이션 하는데 사용. 슬랙에서 커뮤니티를 만들려고 하고 있음. 슬랙 스페이스가 다르면 등록이 필요해서 사용자 경험은 좋지 않지만, 슬랙을 사용하는게 좀 더 전문적인것 처럼 보여짐
     * Grammarly $200: Grammarly Business Edition 을 구입해서 영문 작성에 도움을 받고 있음
     * OSlash $50: 구글의 go/ 나 Stripe o/ 같은 단축 서비스를 실리콘밸리 회사들이 많이 사용. OSlash를 통해서 수많은 SaaS들을 이용하기 쉽게 만들어줌
     * Causal $0: 재무모델 분석
     * Pulley $120: 회사의 주식 관리. 캡테이블 및 임직원들의 지분을 발행하고 관리

   감사합니다!

   Metabase는 처음 들어보는데, 흥미롭네요.

   Hotjar Basic $0 인가보네요.

   잘 정리된 글이라 다른 스타트업에도 도움될 것 같습니다.
   전체 비용중에서 가장 큰게 Grammarly 라는게 놀랍네요 ^^;

   돈 내고 써도 만족스러운 SaaS들
   Ask GN: 지금 내는 비용의 2배를 내더라도 사용하고 싶은 SaaS는?
"
"https://news.hada.io/topic?id=7443","Wasmtime 1.0 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Wasmtime 1.0 출시

     * Wasmtime은 Bytecode alliance가 만드는 독립적인 웹어셈블리 런타임.
     * 마이크로소프트, 쇼피파이 등에서 이미 프로덕션에 사용되고 있음.
     * Wasmtime 1.0은 런타임 구동 시간이 300배 빨라지고 Virtual Memory Tricks, Lazy Initialization, Fast Stack-Walking 등의 여러 가지 최적화 기능이 추가됨.
     * cargo-vet을 사용한 의존성 검증과 수많은 퍼징, 정형 검증으로 보안성을 유지함.
     * 웹어셈블리는 엣지 런타임, 격리된 실행 환경, 데이터베이스 사용자 정의 함수, 이식성 높은 소프트웨어 개발 등에 사용 가능.
"
"https://news.hada.io/topic?id=7513","Kotlin JPA 필수 지식","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Kotlin JPA 필수 지식

     * Kotlin Entity No arg constructor
          + JPA 엔티티 구성에 no arg constructor 필요
          + No-arg compiler plugin 을 통해 자동 생성됨
     * Kotlin Entity All open
          + JPA 엔티티 구성에 상속 허용 필요
          + All-open compiler plugin 을 통해 자동 상속 허용
          + 간단한 추가 설정 필요
     * Kotlin Entity Data class
          + 양방향 매핑시 무한순환참조 발생
          + 지양할 것
"
"https://news.hada.io/topic?id=7541","MDM : Human Motion Diffusion Model","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   MDM : Human Motion Diffusion Model

     * 디퓨전 모델을 사용해서 인간의 모션을 생성
          + 텍스트-to-모션, 액션-to-모션
     * ""사람이 앞으로 걸어가다가 숙여서 땅에 떨어진 뭔가를 주우려고 함"" 이라고 입력하면 해당 모션을 생성
     * 모션 에디팅 / In-Betweening : 이미지-인페인팅 처럼 모션의 앞/뒤 동작을 지정하면 중간을 채움

   사람이 뒤로 젖혔다가 칼을 휘두름

   칼들고 앞으로 나아가는 자세
"
"https://news.hada.io/topic?id=7477","Tesseract.js v3.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Tesseract.js v3.0 릴리즈

     * 100개 이상의 언어에 대해서 동작하는 C++로 작성된 Tesseract OCR의 JS 포팅 버전
     * V3 의 개선 사항
          + 엄청 빨라짐 : 브라우저에서는 84%, Node.js에서는 96% 런타임 시간 감소
          + SIMD 지원 장비를 위한 빌드 추가
          + Tesseract v5.1.0 적용(emscripten 3.1.18 사용)
     * V2 의 개선 사항
          + 한번 인식할때 여러개의 언어 동시 지원
          + PNG,JPG,BMP,PBM 지원
          + WebAssembly와 TypeScript 도 지원

   Tesseract.js - Tesseract OCR 엔진의 자바스크립트 포팅 버전
"
"https://news.hada.io/topic?id=7561","Infinite Canvas App Gallery","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Infinite Canvas App Gallery

     * 무한 캔버스는 최근 웹 기반 도구들에 주로 사용됨
       → 사람은 공간적으로(Spatial) 생각하며, 이를 비슷하게 표현하는 기술이기 때문
     * 무한 캔버스를 사용하는 사용하는 디자인 도구, 코드 편집기, 워크스페이스를 가진 앱들 갤러리

무한 캔버스의 역사

     * 1963 : Sketchpad
     * 1979 : Post It Note
     * 1987 : Adobe Illustrator
     * 1998 : Macromedia Fireworks
     * 2000 : ""Infinite Canvas"" 라는 단어가 ""Reinventing Comics""에서 처음 사용됨
     * 2010 : Sketch 1.0
     * 2015 : RealtimeBoard 2.0(Miro)
     * 2022 : Adobe acquires Figma

   아이패드 앱 중에 nebo 가 빠진 것 같네요 ㅎㅎ

   Adobe acquires Figma는 2000년도 항목에 맞춰서 Adobe가 Figma를 인수로 번역하면 더 좋을 것 같습니다
"
"https://news.hada.io/topic?id=7491","Dear Chess World","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Dear Chess World

   체스 세계챔피언 마그누스 칼슨이 최근 이슈에 대한 입장을 표명

   최근에 이슈가 많이 되어서 이런 저런 기사가 나왔는데.. 오늘 챔피언이 공식 입장 표명을 해서 올려봅니다.
   아래는 제가 다른 곳에 적은 상황 소개글입니다. 참고하세요 ㅎ

   ~

   최근 체스계의 큰 이슈는 체스 역사상 최강의 선수로 인정받는 세계 챔피언 마그누스 칼슨이 20살의 신예 한스 니먼한테 진 이후에 아예 대회에서 기권을 한 것. 이유는 한스 니먼이 치팅을 하고 있어서 그런거 아니냐 말이 많았는데... 오늘 아예 트위터로 입장 표명을 했습니다.

   칼슨 자신은 니먼이 최근까지도 치팅을 해왔다고 믿고 있다는 것.
   한스 니먼은 12살/16살에 치팅을 한적이 있다고 시인한 적이 있음. (전과가 있으니 이번에도 그럴것이다.. ?)

   치팅을 대체 어떻게 했는지에 대해서는 알 수 없기 때문에 이에 대해 갑론을박중.
   게다가 칼슨과의 경기 이후에 한스 니먼이 치룬 다른 경기에 대한 분석 인터뷰에서 버벅 거린 것때문에 정말 치팅한 것 아니냐고 의혹은 더 커짐

   체스는 이제 AI들이 너무 많이 나와버려서, 전체가 아니라 한 수 정도만 코치를 받아도 판세를 뒤흔들 수 있기 때문에 이런 얘기가 나오는 것.

   한스 니먼이 어떻게 치팅을 했냐에 대한 의혹중에 애널비드(엉덩이에 넣어서 원격으로 진동...) 아니냐고 놀리기도..
   그래서 이제 체스 시합전에 전신 스캔을 공항처럼 해야한다고 ㅡ.ㅡ;;;
     * James Stanley - 내 신발안의 컴퓨터로 체스에서 부정 행위 - 신발에 컴퓨터를 넣고, 발가락으로 상대방의 움직임을 전송한 다음. 컴퓨터가 진동으로 어떤 걸 해야할지 알려주도록 해서. 핸즈-프리 체스 치트를 완성했다는 글입니다.
          + 본문에는 이걸 친구와 대결에서 어떻게 썼고. 어떤 입력 실수를 해서 곤란해졌는지. 또 어떻게 만들었고 어떻게 개선할 수 있는지 적혀있습니다. 흥미 진진하니 한번 꼭 읽어보세요!

   써놓기만 해놓고 올리지는 않았던 뉴스 공유해드립니다 'ㅁ '/ 9월 7일자에 썼는데 기억이 남네요.

   올리지 않았던 이유는 이 형식이 GN에 맞나 =ㅁ =.. 잘 모르겠기 때문입니다.

   그냥 링크만 올려도 되는데요 ㅎㅎ

   ㅋㅋㅋㅋ 뭔가... 설명도 달고 싶어지더라고요. 뭔가 날로 먹는 듯한(혹시 다른 분이 설명을 잘 달아주셔서 올려주시고 있을지도 모르는데) 느낌이라서요.

   그런데.. 개인적으로 쓸 때의 설명과 여기 올릴 때 설명의 톤이 달라서 저런 약팔이(... ) 같은 맨트를 빼고 건조하게 써야하는데. 주말마다 바꿔써봐야겠어요...
"
"https://news.hada.io/topic?id=7545","EU가 아이폰 포함 소비자기기의 공용충전포트로 USB-C를 쓰도록 하는 법을 통과","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             EU가 아이폰 포함 소비자기기의 공용충전포트로 USB-C를 쓰도록 하는 법을 통과

   2024년 말부터 적용.
   아이폰, 에어팟 등 모든 소비자기기에 적용되는 사항.

   단 스마트워치 등 USB-C를 적용하기 너무 작은 장치는 예외

   앞으로 무선충전 또한 동일한 표준을 사용하기를 원함

   EU, USB-C를 표준 충전 포트로 만드는 법안 도입 합의

   이거랑 뭐가 다른가 했더니, 4달전에는 법안 도입을 합의한거고, 이제는 법안이 통과된거군요.

   EU가 GDPR도 그렇고 소비자 권익 관해서 이것 저것 많이 하는 것 같아요
"
"https://news.hada.io/topic?id=7435","당신이 본 최고의 다큐멘터리는 뭔가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         당신이 본 최고의 다큐멘터리는 뭔가요?

   HN에 올라온 질문의 답변들
     * The Death of Yugoslavia (1996) - BBC
     * The Century of the Self - Adam Curtis
     * The Ascent of Man - Jacob Bronowski
     * Gary Hustwits design trilogy : Helvetica, Objectified, Urbanized
     * Jiro Dreams of Sushi
     * The Up Series
     * Fires of Kuwait
     * Senna
     * Apollo 11
     * Moon Machines

   저는 BBC Planet Earth가 진짜 감동적이었습니다.

   +1

   전 ""지구에서 달까지(From the earth to the Moon)""를 최고로 꼽습니다.

   누들로드 생각나네요

   최고인지는 모르겠지만, 매년 EBS에서 하고 있는 EIDF에서 했던 작품 중 기억 나는 건 히어 앤 나우네요.

   청각 장애인들은 소리가 안 들려서 불편할거라는, 그래서 장애를 없애주는 기술을 만들면 무조건 그들이 더 행복해질거라는 제 편견을 깨준 작품입니다.

   다큐가 현실을 그대로 보여주고, 영화가 그 현실을 좀 더 이해하기 쉽게 잘 표현한 것이라는 기준에서는

   다큐 - 시티즌 포, 영화 - 스노든 을 추천합니다. 왜 다큐는 다큐로서 존재해야하고, 그럼에도 현실을 담은 다큐가 있음에도 불구하고 왜 실화기반 영화는 또 필요한지, 이 두 쌍의 영화를 보면 바로 이해 되실거라고 생각되네요. 내용도 긱뉴스 보러 오시는 분들이면, 궁금해 하실 내용이기도 하고요 : )

   The Corporation 추천합니다

   저는 ""나의 문어 선생님"", ""14좌 정복"", ""프리 솔로""를 재밌게 봤습니다

   문어랑 솔로는 저도 최고의 다큐 중 하나에요. 14좌 정복은 아직 안봤는데 봐야겟네요 ㅋ
     * The Death of Yugoslavia : https://youtube.com/watch/…
     * The Century of the Self : https://youtu.be/eJ3RzGoQC4s
     * The Ascent of Man (DVD로만 나와있으며 한글 자막은 없습니다. 책은 번역본이 나와있네요 ""인간 등정의 발자취"")
     * Gary Hustwits design trilogy : 애플TV, 아마존 프라임에서 구입 가능합니다. 자막은 영어만
     * Jiro Dreams of Sushi : ""스시장인: 지로의 꿈"" 넷플릭스, 웨이브, 왓챠
     * The Up Series : BritBox에서 스트리밍 중인데 한국 서비스를 안하네요.
     * Fires of Kuwait : https://www.youtube.com/watch?v=-tUzkF_Dp8M
     * Senna : https://www.youtube.com/watch?v=-aPLOQeSHrM
     * Apollo 11 : https://www.youtube.com/watch?v=3Co8Z8BQgWc
     * Moon Machines : https://vimeo.com/673970849

   design trilogy 중 Helvetica 편은 한글 자막으로 출시해서 편하게 시청가능합니다. (Helvetica, 2007)

   (출시가 아닌 개인이 작업한 자막이었던것 같기도!?)
"
"https://news.hada.io/topic?id=7508","Twitch, 한국에서 원본(고화질) 스트리밍 서비스 중단.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Twitch, 한국에서 원본(고화질) 스트리밍 서비스 중단.

     * Twitch가 한국에서 원본(1080p) 스트리밍 서비스를 중단함.
     * 이는 화질 조정이 활성화된 채널에만 적용되며, 최대 화질이 720p로 고정됨.
     * 한국에서 서비스를 제공하는 비용이 증가하여 취한 조치라고 설명함.
"
"https://news.hada.io/topic?id=7531","Make-A-Video : 텍스트로 비디오를 생성하는 AI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Make-A-Video : 텍스트로 비디오를 생성하는 AI

     * ""DALL-E for Video"" : Meta AI가 최근의 text-to-image 기술에 기반하여 text-to-video 를 시도
     * 라벨링된 이미지로 세상이 어떻게 생겼는지를 이해하고, 라벨링 안된 비디오를 통해서 사물이 움직이는 것을 학습
     * 가능한 것들
          + 텍스트로 비디오를 생성
          + 정적인 이미지에 모션을 추가
          + 두장의 이미지 간에 in-between 모션을 추가
          + 기존 비디오를 변형하여 만들기
     * 기존에 비해 3배 나은 텍스트 입력 이해 및 3배의 퀄리티
"
"https://news.hada.io/topic?id=7461","WunderBase - SQLite/Firecracker/Prisma로 만든 서버리스 GraphQL 데이터베이스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     WunderBase - SQLite/Firecracker/Prisma로 만든 서버리스 GraphQL 데이터베이스

     * 400라인 Go 코드로 된 간단하지만 강력한 오픈소스
     * REST로 간단히 VM을 생성하고 실행하는 Fly Machines를 활용
          + 요청을 받으면 VM이 300~500ms 안에 깨어나 요청을 실행하고, 최종 요청을 받고 10초후에 자동으로 슬립모드로 전환
"
"https://news.hada.io/topic?id=7494","Nightdrive","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Nightdrive

     * HTML5 Canvas + JavaScript로 만든 야간 자동차 고속도로 운전 시뮬레이션
     * 전체화면에서 음악과 함께 감상 가능
     * 2D 기반 시뮬레이션
          + 400대의 자동차가 25미터 간격으로 랜덤하게 차선에 생성
          + 크기/위치/헤드라이트 는 약간씩 다름
     * 프로젝션, 언덕, 언덕 너머의 차 안보이기등을 구현한 방법등을 소개

   스크린 세이버로 쓰고 싶군요ㅎㅎ
"
"https://news.hada.io/topic?id=7468","모듈형 노트북 Framework, 구글과 함께 Chromebook 에디션 발표 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              모듈형 노트북 Framework, 구글과 함께 Chromebook 에디션 발표

     * 사용자가 업그레이드 가능한 노트북들도 얼마 없지만, 업그레이드 가능한 크롬북은 아예 전례가 없음
     * Framework 윈도우 버전과 똑같은 확장카드 시스템 및 을 프레임을 이용해서 부품 혼용 가능
     * 12th Gen Intel i5-1240p (4+8 CPU Core) + 8GB 램 + 256GB NVMe 기본. 64GB램 + 1TB 까지 확장 가능

   모듈형 노트북, Framework Laptop 공개
   새롭게 업그레이드 된 Framework Laptop 발표
   모듈형 노트북 Framework 마켓플레이스 공개
"
"https://news.hada.io/topic?id=7539","text-to-image AI에서 지난 1년 동안 벌어진 일","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   text-to-image AI에서 지난 1년 동안 벌어진 일

   지난 1년 요약
     * DALL-E - 21년 1월, 모든 것의 시작 그러나 모두가 쓸 수는 없는 상태
     * Stable Diffusion - 21년 10월, 오픈소스 모델로 올 2월부터 예술을 하는 사람이 들어오면서 사용자가 크게 늘어남
     * MidJourney - 22년 3월, Discord Bot을 활용한 쉬운 사용성으로 현재 200만명+ 사용자
     * DALL-E 2 - 22년 4월, 성능 개선, 결과물을 상업적으로 사용 가능해짐
     * Stable Diffusion - 22년 8월, 이전에 나온 것들의 장점들을 모두 가짐 (오픈소스, 실행 편의성, 상업적 라이센스 허용 등), 이걸 이용한 서비스들이 폭발적으로 나오기 시작함.

   앞으로의 예상
     * 더 좋은 Prompt를 찾는 일이 AI Model을 직접 만드는 일보다 더 중요해 질 것이다.
     * Disco Diffusion과 Stable Diffusion의 사례에서 본 것처럼, 혼자 가는 프로젝트보다 같이 가는 프로젝트가 더 멀리 갈 것이다.

   올 초에 Disco Diffusion 알게 된 이후부터 지켜보다가 정리하는 글을 써도 될 것 같아, 한번 써봤습니다. GeekNews에서 접한 내용들도 많아서 많이 레퍼런스 하였습니다.

   관련 글
     * Midjourney AI가 생성한 그림으로 미술대회 우승
     * Lexica - 5백만장 이상의 Stable Diffusion 생성 이미지 검색
     * Stable Diffusion 출시 1주일 동안 벌어진 일들
"
"https://news.hada.io/topic?id=7473","구글, Dolby에 대항하는 오픈 미디어 포맷 개발중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     구글, Dolby에 대항하는 오픈 미디어 포맷 개발중

     * 프로젝트 Caviar 라는 이름으로 Dolby Atmos 와 Dolby Vision의 '로열티 없는 대체제'를 만들 계획
     * 3D 오디오 와 HDR 비디오를 지원
     * 올해 초 하드웨어 제조사와의 비공개 미팅에서 소개한바 있음
     * 핵심 목표는 Youtube : 유튜브는 현재 Dolby Atmos/Vision을 지원하지 않음
     * 구글은 비디오 코덱 제조사인 On2를 2009년에 인수해서 로열티 없는 비디오 코덱인 AV1을 주도
     * 캐비어는 단순히 코덱이 아닌 기존 코덱을 사용한 3D 오디오/HDR 비디오 포맷을 만드는 것을 목표
     * 돌비는 TV 제조사에게 Dolby Vision 라이센스료로 $2~3 을 부과
       Atmos 라이센스료는 공개적으로 얘기된 바 없지만, XBox 콘솔에서 사용자 라이센스당 $15를 받고 있음(하드웨어 제조사들은 이보다는 엄청 쌀 것)
     * 마진이 박한 시장에서는 이 비용도 부담이 될 수 있음
     * 이런 시도가 처음은 아님
          + 삼성은 Dolby Vision에 대항하는 ""HDR10+""를 로열티 없는 대체제로 공동 개발했고, 그래서 아직 자신들의 TV에서는 Dolby Vision을 지원하지 않음
          + 하지만 돌비의 브랜드와 라이센스 전략때문에 시장확대에는 실패했음.
          + 돌비 비전은 넷플릭스, 디즈니+, HBO 맥스등에서 지원하고 있음
          + 돌비는 또한 애플 뮤직 에서의 Atmos 지원을 통해 돌비 비전의 성공 스토리를 반복할 예정
          + 일부 회사는 Alliance for Open Media 에서 개방형 코덱으로 3D 경험을 제공하기 위해 Immersive Audio Container라는 새로운 오디오 형식을 개발중
     * 구글은 Dolby Atmos 와 Vision이 제공하는 것 이상의 기능을 추가해서 장치 제조사 및 소비자 모두에게 매력적으로 만들고자 함
"
"https://news.hada.io/topic?id=7556","Postgres-wasm 공개 - 브라우저에서 실행되는 PostgreSQL 서버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Postgres-wasm 공개 - 브라우저에서 실행되는 PostgreSQL 서버

     * 전체 기능 구현. pg_dump에서 복원 및 원격 DB에서 로지컬 복제도 가능
     * 약 30mb의 용량으로 일반적인 용도에 적합하지는 않음
       → 데모실행, 기능 테스트, 개발용, 테스트용 스냅샷을 만들어 공유하기 등으로

오픈소스의 구성 (3개의 Repo)

     * Virtual Machine(VM) : Buildroot로 임베드 가능한 VM을 생성
     * Web Application : v86으로 브라우저에서 VM을 실행
     * Network Proxy : PgAdmin 접속을 위해서 트래픽을 웹소켓을 이용해서 프록시 처리. Websockproxy를 사용

SupaBase가 호스팅하는 데모 버전의 제공 기능들

     * Postgres 14.5, psql, pg_dump 등
     * 파일에서 Save/Restore
     * 브라우저 IndexedDB 에 Postgres 상태를 Save & Restore
     * State 파일에서 시작하거나, 에뮬레이터 전체 리부트
     * 메모리는 128MB ~ 1024MB까지 설정 가능
     * 터미널을 위한 폰트 설정
     * 에뮬레이터에 파일 업로드(DB덤프, CSV 등)
     * 에뮬레이터에서 파일 내려받기
     * 에뮬레이터에서 외부 인터넷 접속
     * 인입 네트웍을 에뮬레이터 내의 Postgres 5432포트로 연결

     The end result of all these changes? The compressed initial state file is about 12mb - including a running network state and Postgres 14.4 running with psql loaded.

   12메가를 받고 실행된 뒤에 https로 추가 파일들을 다운로드 한다고 하는군요.
"
"https://news.hada.io/topic?id=7524","Stellarium 1.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Stellarium 1.0 릴리즈

     * 20년만에 1.0버전 발표. ""드디어 역사적으로 적용할만큼 충분히 정확해졌음""
     * OpenGL로 구현된 오픈소스 플라네타리움. 한국어 지원
     * 60만개 이상 항성 정보 기본 지원, 1.77억개가 들어있는 추가 카탈로그 제공
     * 8만개 이상의 딥 스카이 천체 정보, 100만개 딥스카이 추가 카탈로그 제공
     * 40개 이상의 문화권을 위한 별자리 정보
     * Qt6을 적용한 첫번째 릴리즈
     * 리눅스/맥/윈도우

   헉. 저 프로그램의 존재는 초등학생 때부터 본 것 같은데요... 여태 1.0이 아니었단게 더 신기합니다.ㅋㅋㅋㅋㅋㅋ

   그래서 저도 뉴스로.. ㅋㅋㅋ

   이제 1.0이군요.
   사용해보니 예전에 Starry Night에 비해 열세였는데 많이 좋아졌네요

   2012년인가 한창 천문 올림피아드 공부할 때 잘 썼던 기억이 있는데
   그게 정식 버전이 아니었네요 ㄷㄷㄷ
"
"https://news.hada.io/topic?id=7467","구글을 틱톡으로 교체하려고 시도해봤는데, 생각보다 잘 동작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    구글을 틱톡으로 교체하려고 시도해봤는데, 생각보다 잘 동작

     * ""TikTok is the new Google""
     * ""젊은 세대의 40%는 점심 식사 장소를 검색할 때, 구글 지도나 검색을 사용하지 않고 틱톡이나 인스타 그램을 간다"" - 구글 검색 SVP
     * 기자가 구글링 하기 전에 같은 질의를 틱톡에 먼저 검색해보는 시도를 함
          + 틱톡은 매우 유용한 검색 엔진 이었음. 틱톡의 알고리듬/콘텐츠가 이에 적합하게 조정되어 있지 않음에도 불구하고
     * 하지만 구글이 틱톡의 검색량이 늘어나는 걸 걱정하지는 않을 것 같음. 단, 유튜브는 걱정하고 있을지도
          + 일반적인 검색어들은 틱톡에서는 전혀 결과가 나오지 않음
     * 음식 검색은 틱톡의 진정한 강점 : 레시피를 찾는데는 특히나 좋음
     * 구글 검색에서 자주 찾는 ""what to watch(뭐 볼까)"" 에서는 틱톡이 정말 훌륭
     * 많은 경우에 틱톡이 유튜브 보다는 훨씬 좋음.
       → 빠르게, 스크롤 가능한 비디오를 보여주는 앱의 구조 때문 (그래서 크리에이터 들이 더 효과적으로 보이기 위해 노력함)

   Web3를 설명하는 컨텐츠 중에 틱톡에 이 비디오보다 조회수나 좋아요 많은 컨텐츠를 본적이 없는 것 같습니다.
   https://www.tiktok.com/@bonjenn/video/7031702087822019846

   맨날 춤만 추는 것 같지만, 생각외로 틱톡에서 저런 설명 영상들이 많더라고요. 조회수도 많고 1분 안에 나름 잘 설명하기도 하고요.

   와 전혀 해본적 없는 생각인데 놀랍네요. 근데 의외로 국내였나 10대가 페이스북을 sns 중에 가장 많이 사용한다고 했던 것 같은데 말이에요.

   페메를 많이 써서 그렇기도 합니다.

   이건 기존 sns에 기성세대가 유입되면 10대는 기성세대의 활동이 적은 다른 sns를 찾는 흐름 같더라구요

   조금 흥미 위주의 기사이긴 합니다만, 실제로 젊은 세대들이 구글대신 유튜브/틱톡/인스타에서 검색을 많이 한다는 얘기를 듣기는 했습니다.
"
"https://news.hada.io/topic?id=7548","Generative AI : 세콰이어가 정리한 생성AI 시장 지도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Generative AI : 세콰이어가 정리한 생성AI 시장 지도

     * 사람은 분석에 능하고, 머신은 더 훌륭. 이걸 발전시킨게 전통적인 AI인 ""Analytical AI""
     * 하지만 사람은 창작도 잘함. 지금까지는 기계들이 이걸 하지 않았지만, 이제 새로운 것들을 만들어 내기 시작. 이게 ""Generative AI""

왜 지금인가 ?

     * 더 나은 모델, 더 많은 데이터, 더 많은 컴퓨팅
     * Wave 1: 작은 모델들이 지배(2015년 이전)
     * Wave 2: 규모의 경쟁(2015년~오늘날)
     * Wave 3: 더 좋게, 더 빠르게, 더 싸게(2022년 이후)
     * Wave 4: 킬러앱의 등장(지금)

Market Landscape

     * Text
          + Application Layer : Marketing(content), Sales(email), Support(chat/email), General Writing, Note Taking,..
          + Model Layer : OpenAI GPT-3, DeepMind Gopher, Facebook OPT, Hugging Face Bloom, Cohere, Anthropic, AI2, Alibaba, Yandex,..
     * Code Generation
          + Application : Code Generation, Code Documentation, Text to SQL, Web App Builders
          + Model : OpenAI GPT-3, Tabnine, Stability.ai
     * Image
          + Application : Image Generation, Consumer/Social, Media/Advertising, Design
          + Model : OpenAI DALL-E 2, Stable Diffusion, Craiyon
     * Speech
          + Application : Voice Synthesis
          + Model : OpenAI
     * Video
          + Application : Video Editing/Generation
          + Model : Microsoft X-CLIP, Meta Make-A-Video
     * 3D
          + Application : 3D models/scenes
          + Model : DreamFusion, NVidia GET3D, MDM
     * TBD
          + Application : Gaming, RPA, Music, Audio, Biology&Chemistry
          + Model : TBD

   ""PS: This piece was co-written with GPT-3. GPT-3 did not spit out the entire article, but it was responsible for combating writer’s block, generating...""

   GPT-3를 보조 도구로 썼다고 ps에 적혀 있어서 글이 더 재밌게 느껴지는 듯 합니다
"
"https://news.hada.io/topic?id=7516","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   10/8(토) 한강 불꽃 축제 보러 가야죠. ㅋ

   계속 자고 싶습니다
     * 보드게임 모임을 합니다
     * 연휴란거를 모르고 별 계획을 안잡아 놨네요. 밀린 잠을 자볼까 합니다.
     * 새로 도착한 아이폰 설정 작업이 조금 필요하네요. 대부분은 다 넘어 가는데, 은행/금융용 인증서하고, 몇몇 서비스 로그인 등. esim 으로 세팅하는데 kt는 지점 가서 했고, google fi 설정 옮기느라 헤매고 있습니다
"
"https://news.hada.io/topic?id=7503","C++ 초기설계자가 작성한 int* p 와 int *p 에 대한 글","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 C++ 초기설계자가 작성한 int* p 와 int *p 에 대한 글

    1. int *p 는 *p 의 타입이 int 라는 논리이다.
    2. int* p 는 p 의 타입이 pointer of int 라는 논리이다.
    3. 한 줄에 여러개의 변수를 선언할 때, int *p 가 더 오해의 여지가 적다.
          + int p0, p1; // p0 :: int, p1 :: int
          + int* p0, p1; // p0 :: int*, p1 :: int (int* 이라고 착각하기 쉬움)
    4. 한 줄에 여러개의 변수를 선언하지 않으면 이런 문제가 발생하지 않는다.
    5. C++ 초기설계자 자신은 둘다 맞다고 생각하지만, int* p 를 더 선호한다.

   역시 코딩은 문학입니다
    1. C 프로그래머: int *p 로 작성하며 *p 의 타입이 int 라고 설명 함
    2. C++프로그래머: int* p 로 작성하며 p 의 타입이 pointer of int 라고 설명 함

   ""Whenever something is a matter of taste, discussions can drag on forever.""

   TMI 지만,
    1. 이분의 이름으로 웹사이트가 있을줄 몰랐습니다.
    2. 이 사이트는 아파치 웹서버를 사용하며 C로 작성되었고 int *p 형태를 사용합니다.
"
"https://news.hada.io/topic?id=7563","Axios 1.0 릴리즈 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Axios 1.0 릴리즈

     * Promise 기반의 HTTP 클라이언트 라이브러리 for 브라우저 & Node.js
     * Fetch API가 많은 부분을 공식적으로 대체하긴 했지만, 가장 유명하고 많이 사용됨
     * 2016년 v0.10 릴리즈 후, 7년만에 공식 1.0 릴리즈
          + 큰 변화는 없이, 수많은 사소한 조정 및 개선사항들을 포함

   초보자를 위한 Axios vs Fetch
"
"https://news.hada.io/topic?id=7517","Devices.css - 순수 CSS로만 그린 요즘 기기들 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Devices.css - 순수 CSS로만 그린 요즘 기기들

     * 많이 사용하는 기기들의 외형을 순수 CSS로만 표현 (대부분 바탕화면은 제외하고 프레임만)
     * 폰 : 아이폰 14 Pro/14/X/8 과 3G, 구글 픽셀 6 Pro/2XL, 삼성 갤럭시 S8
     * 컴퓨터 : 맥북 프로, 아이맥, 맥북프로 2018, 맥북, 서피스 북, 서피스 스튜디오
     * 태블릿 : 아이패드 프로, 아이패드 프로 2017, 서피스 프로
     * 시계 : 애플 워치 울트라, 애플 워치 시리즈 8
     * 악세사리 : 홈팟, Pro Display XDR
"
"https://news.hada.io/topic?id=7441","이더리움 머지 후 GPU 마이닝은 이제 더 이상 수익성이 없다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   이더리움 머지 후 GPU 마이닝은 이제 더 이상 수익성이 없다

   이더리움이 PoW 에서 PoS로 전환하자, GPU로는 손익분기점에 도달 불가능해짐

   얏호!!

   덕분에 비디오카드 가격은 계속 떨어지고 있다고 하네요

   The end of Ethereum mining could be a bonanza for GPU shoppers
"
"https://news.hada.io/topic?id=7484","GCP, AWS, Azure의 ARM 기반 서버들 성능 비교","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GCP, AWS, Azure의 ARM 기반 서버들 성능 비교

     * Apache APISIX(API 게이트웨이)를 이용하여 QPS 및 응답 딜레이 성능 비교
     * AWS c7g.large vs. GCP t2a-standard-2 vs. Azure D2ps
     * QPS : AWS(23000) > Azure(13400) > GCP(11300)
     * 응답딜레이 : AWS(0.68) > Azure (1.21) > GCP(1.39)
     * 성능상으로는 AWS가 GCP보다 2배 가까이 빠르고 Azure는 GCP보다 15% 빠름
     * 연간 비용과 효율(QPS/Cost)로 계산해보면 AWS($633, 36.3) > Azure ($398, 33.6) > GCP ($674, 16.8)
       가격대 성능비도 AWS가 가장 좋음. Azure는 성능은 좋지 않지만 가격이 매우 저렴해서 AWS와 비슷해짐

   오라클의 ARM 서버가 꽤나 좋다고 하던데 이 테스트에선 빠져서 살짝 아쉽네요

   GCP가 여러모로 밀리네요ㅋㅋ

   솔직히 구글은 B2B 능력은 별로 없는거 같아요..
"
"https://news.hada.io/topic?id=7501","BigCode - 오픈소스로 만드는 코드 생성용 AI 제작 프로젝트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 BigCode - 오픈소스로 만드는 코드 생성용 AI 제작 프로젝트

     * GitHub의 Copilot에 사용되는 OpenAI의 Codex 와 같은 기능을 제공하는 소스코드용 LLM(Large Language Model)을 만드는 오픈 프로젝트
     * Hugging Face와 ServiceNow R&D가 협업해서 만들 예정
     * 코드 생성 시스템을 훈련하기 위한 규모의 데이터셋을 제공하는게 목표
     * Codex 보다도 큰 150억개 파라미터 셋

   아무래도 비용이 드는 CoPilot 은 이래저래 제약이 있으니,
   Stable Diffusion 처럼 큰 변화를 일으켜주면 좋겠네요.

   Stable Diffusion처럼 로컬에서도 동작하면 좋을 것 같아요. 아무래도 Copliot은 (아무리 코드 프라이버시를 잘지키고, 암호화도 한다고 해도) 외부 통신이 필요하고. 그 통신에 소스코드가 포함되서 꺼리짐하더라고요.

   그렇긴 하네요.

   현실적으로는 LLM(Large Language Model)이라 그냥 로컬로 직접으로는 안될거 같고 on-prem에 넣을 수 있는 사이즈 정도만 되도 쓸만할거 같아요. 150억개 파라미터면, GPT-2(15억개)와 GPT-3(1750억개) 사이 사이즈의 파라미터를 가지고 있는데 되려나...ㅠ

   GPT-2는 로컬로 돌릴 수 있.. 었던 걸로 알고 있답니다. Tabnine이 그 모델 기반인데, 로컬 모델을 제공해주고 있거든요.
"
"https://news.hada.io/topic?id=7500","workerd - Cloudflare가 공개한 Workers 런타임 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               workerd - Cloudflare가 공개한 Workers 런타임 오픈소스

     * 실제 CloudFlare Workers에서 사용하는 JavaScript/WASM 런타임 코드
          + 다른 환경에 포팅 가능하도록 일부만 변경
          + 이름은 Unix 서버의 -d ""daemon"" 에서 가져와서 ""worker dee""

용도

     * Workers를 셀프호스팅 가능. 단순히 API로 이용가능한 웹서버이기도 함. 어떤 환경에서도 쉽게 적용
     * 로컬 개발 및 테스팅용으로 사용
     * 프로그래밍 가능한 프록시(포워드 & 리버스). JavaScript로 요청/응답을 가로채서 처리 가능

What it is

     * Server-first : 많은 JS/WASM 런타임이 다용도로 사용가능하지만, workerd는 오직 서버에만 집중. 그중에서도 HTTP 서버
     * Web standard APIs : 웹브라우저에서 사용하는 것과 같은 표준 API를 제공(Fetch, URL, WebCrypto 등). 즉 여기서 개발한 코드는 브라우저로 포팅도 가능
     * Nanoservices : 이제 마이크로서비스를 넘어 나노서비스!
          + 나노서비스는 독립적인 배포의 장점과 라이브러리 함수 호출 정도의 오버헤드만 가지는 새로운 모델
          + workerd를 이용하면 많은 Worker들이 같은 프로세스 안에서 설정 가능하고, 각 Worker는 독립되어 실행되지만 서로간에 통신도 가능
     * Homogeneous deployment : 예전엔 특정 컨테이너에서 특정 서비스를 실행해야 했지만, workerd는 모든 머신들이 모든 서비스를 구동 가능
     * Capability bindings: 깔끔한 설정과 SSRF 안전성 보장
     * Always backwards compatible : 항상 하위 호환성 보장

What it's not

     * workerd is not a Secure Sandbox : 악성 코드가 실행될수도 있음. 이걸 방지하기 위해서는 별도의 샌드박싱 레이어가 필요
     * workerd is not an independent project : Cloudflare Workers의 핵심이자 일부. 외부 커밋을 받긴 하지만 보장하기는 어려움.
     * workerd is not an off-the-shelf edge compute platform : Workers 서비스 전체는 아님

   공개되면 만들어보고싶었던건데 오호

     Homogeneous deployment : 예전엔 특정 컨테이너에서 특정 서비스를 실행해야 했지만, workerd는 모든 머신들이 모든 서비스를 구동 가능

   이게 무슨 의미인가 했더니 바로 앞에서 설명하는 나노서비스(functions) 방식으로 개발을 하게 되면 그냥 모든 나노서비스를 한 머신에 배포하고(오버헤드가 적어서 가능하다고) 필요하면 그냥 똑같은 머신을 늘리면 되니까 복잡한 배포 구성이 필요 없다는 말이었네요.
"
"https://news.hada.io/topic?id=7568","Simula VR, Meta에 의해서 법원에 소환됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Simula VR, Meta에 의해서 법원에 소환됨

     * FTC vs. Meta 의 VR 피트니스 회사 인수와 관련된 반독점 소송건에 대해서 소환됨
     * Meta 법무팀에서 검토를 위해서 20일간의 기간내에 아래 서류를 제출하라는 내용의 메일을 받음
          + 현재 및 향후 사업계획의 세부사항
          + VR/AR 개발자 및 기타 앱스토어와의 관계 증명
          + 현재 및 예상 수익을 요약한 재무 문서
          + 확장할 영역에 대해 정리한 미래 계획 문서들
          + 소프트웨어의 세부 사용 통계(우리도 현재 가지고 있지 않음)
          + AR/VR 시장에 대한 우리의 뷰
     * 또한 (하던걸 중단하고) 수천마일 떨어진 곳에 와서 직접 증언하라고 명령받음

우린 이런 것들을 감당할 수 없음

     * Simula 같은 소규모 신생 기업은, 이런 반독점 사건에 참여할 법무팀을 꾸리는 시간과 돈을 감당할 수 없음
          + 다른 회사는 알파벳, 틱톡, HTC, 화웨이, 닌텐도, 파나소닉, 삼성 등 대기업

Meta에 대해서 공평하게 말하자면,

     * 이 싸움을 건것은 FTC 면서, ""반경쟁적""으로 행동하지 않는 다는 것을 증명하는 걸 메타에게 떠넘기는 것
     * 그러니, 메타가 이걸 입증하려면 소환장을 통해서 법원에 도움이 될 수 있는 문서를 요구하는 것

우리는 메타와 경쟁하지 않음

     * 우리는 Meta와 그들의 VR제품에 대해서 아무 원한도 없음
     * 다만 그들이 만드는 것이 우리것만큼 쿨하지 않다고 생각할 뿐
     * 메타는 엔터테인먼트에 적합하게 훌륭한 게이밍 헤드셋을 파는 것이고, 우리는 PC와 랩탑을 교체할 목적의 일반용 생산성 기기를 판매함
       즉, 우리의 경쟁상대는 랩탑과 PC이지, 게이밍 헤드셋이 아님
     * ""우리는 메타가 잘되기를 바라며, 그들이 우리를 내버려두기를 바람""

   이 뉴스를 보고 생산성 측변의 VR에 관심이 있어서 Immersed를 사용해보고 있는데. 해상도가 살짝 부족해 가끔 글자가 흐리게 보이는 것을 제외하고는 포텐셜이 넘치는 곳 같아요. 한대 사볼까 고민이 되더라고요...

   Simula One - Linux기반 사무실용 VR 기기

   Simula VR이 Meta 한테 우리 귀찮게 하지 말라는 내용이긴 한데,
   그 내용중에 뼈가 있다고 생각이 됩니다.
   ""오큘러스는 게이밍 헤드셋이고, 우리는 생산성 기기임""
"
"https://news.hada.io/topic?id=7510","Posits, AI의 수학을 향상시키는 새로운 종류의 숫자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Posits, AI의 수학을 향상시키는 새로운 종류의 숫자

     * 대형 신경망을 훈련하는 것은 대규모 계산 능력이 필요
          + OpenAI의 GPT-3 같은 경우 훈련에만 약 $5m 이상이 들었음
     * 엔지니어들이 이 비용 부담을 줄이기 위해 숫자를 표현하는 다른 방법을 고안
     * 2017년에 제안된 Posits는 오늘날 사용되는 부동 소수점 산술 프로세서에 대한 개선사항
     * 이걸 하드웨어적으로 구현한 첫번째 코어가 개발됨. 현재의 FP방식보다 계산 작업의 정확도가 최대 4배까지 증가

     무어의 법칙이 맞지 않게 되어가므로, 동일한 기계에서 더 많은 성능을 낼수 있는 방법을 찾아야함
     이 방법중의 하나는 실수(Real Number)를 인코딩 하는 방법과 실제 숫자를 나타내는 방법을 변경하는 것
     * 이 숫자를 바꾸는 시도를 하는 곳이 여기만은 아님. 얼마전 Nvidia, Arm, Intel은 머신러닝 어플리케이션을 위해 32/16비트 대신 8비트 부동 소수점 숫자를 사용하는 것으로 합의 했음
          + 더 작고 덜 정확한 형식을 사용하면 계산 정확도를 희생시키면서 효율성과 메모리 사용을 향상 시킴
     * 실수는 무한하기 때문에 하드웨어가 완벽하게 표현 불가능
     * 지정된 비트수에 맞추려면 많은 실수들은 반올림 되어야 함
     * Posits의 장점은 정확히 나타내려는 숫자가 숫자 라인을 따라 분포되는 방식에서 옴
       ( 실제 Posits의 분포 방식은 글에 포함된 그림을 보시기 바랍니다. )
     * 이를 통해 얻게 되는 정확도 향상은 부인할 수 없지만, 이게 실제로 GPT-3 와 같은 대형 AI의 훈련에 정확히 어떤 영향을 미칠지는 두고 봐야함
"
"https://news.hada.io/topic?id=7449","인터넷을 지킵시다! 망중립성을 지킵시다! 우리는 ‘망이용료’ 법안에 반대합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              인터넷을 지킵시다! 망중립성을 지킵시다! 우리는 ‘망이용료’ 법안에 반대합니다.

   내일까지 망이용료 법안에 대한 반대의견 서명운동이 진행됩니다만, 아직 news.hada.io 에서는 공유된 적이 없었네요.

   어제부터 facebook/twitter에서도 공식 youtube 계정을 통해 광고가 집행되고 있습니다.
     * twitter : https://twitter.com/YouTube/status/1572141352498130945
     * facebook : 잠시 보였는데, 그 후에는 링크를 찾지를 못하겠네요.

   아쉽게도 해당 SNS계정 광고의 답글에는 그동안 youtube의 행태(?)에 못마땅한 사람들이 부정적인 의견을 꽤 많이 내고 있는 것 같습니다.

   만약 저 법안이 통과되면 머스크한테 스타링크좀 지원해달라 해야하나..ㅋㅋ
   생전 머스크찾을일이 있으려나 했는데...

   A라는 회사의 서비스에만 망 이용료(유료)를 받는게 망 중립성을 해치는 것처럼, A라는 회사의 서비스에만 망 이용료(무료)를 안 받는 것도 망 중립성을 해친다고 봅니다.

   그런 관점에서 인도나 네팔에서 구글과 페이스북이 하고 있는 Promotion들도 망 중립성을 해치고 있다고 봐야 하지 않을까요? 망 중립성이 깨져서 가뜩이나 기울어진 운동장을 더 기울이고 있는데 말이죠. 그래서 유튜브가 저런 말을 하는게 저는 내로남불처럼 보입니다.
     * Ncell is providing free video streaming of 1 hour with the YouTube Go app
     * Ncell Nonstop 4G Offers with Unlimited YouTube, TikTok and Facebook

   망중립성 관련 옛날 글들 끌올
   페이스북 손 들어준 법원, 방통위 ‘당혹’
   왜 인터넷은 근본부터 글러먹었는가: 코로나19와 한국 인터넷의 해외접속 장애, 그리고 넷플릭스 전쟁에 관한 이야기

   와퍼 망중립성 광고 유튜브는 왜인지 날아갔고, 클립으로 남아있네요.

   https://twitter.com/climb_chairman/status/979602655428231168

   YouTube 글이 아니라 오픈넷에서 운영하는 계정에서 광고를 냈다면 상황이 달라졌을까 싶네요. 중요한 이슈인데 안타까운 일입니다...

   망이용료는 국내 ISP들의 진정한 뻘짓이죠.
   우리나라는 ISP / 통신사들 부터 개선해야 된다고 봅니다.

   5G도 세계 최초니 뭐니 떠들어 놓고 mmWave는 깔지도 않고, eSIM 도 돈 어떻게든 받으려고 뻘짓하고..
"
"https://news.hada.io/topic?id=7552","Smart Home IOT 연결 표준 Matter v1.0 스펙 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Smart Home IOT 연결 표준 Matter v1.0 스펙 릴리즈

     * 아마존, 애플, 구글, 삼성 등 280개사가 참여한 기술 표준
     * 1.0 표준 스펙을 공개하고, 인증 프로그램도 시작
          + 테스트 케이스 및 포괄적인 테스트 도구들도 포함
     * 분산 Ledger 기술과 PKI를 이용한 보안
     * 첫 릴리즈는 이더넷, Wi-Fi, Thread, 블루투스 BLE등에서 실행
     * 조명, 전기, HVAC 제어, 창문과 쉐이드, 보안 센서, 도어락, TV를 포함한 미디어 디바이스, 컨트롤러, 브릿지 등을 지원

   오 드디어 1.0 릴리즈 되었군요.
   빨리 지원하는 제품들이 많이 나왔으면 좋겠네요.

   오 IOT 표준이 있었군요
"
"https://news.hada.io/topic?id=7550","Refurb : 파이썬 코드베이스 최신화 도구 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Refurb : 파이썬 코드베이스 최신화 도구

     * 파이썬 코드를 refurbishing & mordernizing 해주는 도구
     * 플러그인을 통해서 자신만의 체크 룰 추가 가능
     * git pre-commit 과 함께 이용 가능
     * 코드 리뷰시에 서로 읽기 좋도록, 코드를 더 우아하고 현대적으로 만들기 위해 개발
     * Rust에 내장된 linter인 clippy 에서 영감을 받음

$ refurb main.py
main.py:3:17 [FURB109]: Use `in (x, y, z)` instead of `in [x, y, z]`
main.py:4:5 [FURB101]: Use `y = Path(x).read_text()` instead of `with open(x, ...) as f: y = f.read()`
main.py:10:40 [FURB102]: Replace `x.startswith(y) or x.startswith(z)` with `x.startswith((y, z))`
main.py:16:9 [FURB105]: Use `print() instead of `print("""")`
"
"https://news.hada.io/topic?id=7486","내 SaaS를 위한 기술선택에 대한 회고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         내 SaaS를 위한 기술선택에 대한 회고

     * 2년전에 모바일/웹/백엔드를 만들기 위해서 선택했던 기술들과 그에 대한 회고를 기록
     * 매우 간단한 일반적인 SaaS 였어서 최소의 노력과 자원으로 빨리 부트스트래핑 하는 것을 목표로 함
       디자인 역량이 제한적이라 모바일앱은 직접 개발하지 않고 외주로 돌리고, 백엔드와 웹만 개발

기술 선택들

  모바일 앱

     * 오랜 닷넷개발자였지만 Xamarin 으로 개발 하는걸 원치는 않았음
     * iOS/Android 동시 지원을 위해 Flutter를 선택
     * 몇주만에 양쪽에서 동작하는 앱이 나와서 Time to Market 관점에서는 훌륭
     * UI는 약간 결함이 있긴 했지만, 우리같은 B2B 유스케이스에선 무시할 수 있었음
     * Flutter 자체는 버그&문제가 많았지만, Show-Stopper 수준은 아니었음
     * 언어로서의 Dart는 별로였지만 문제는 아니었음. (어차피 내가 개발 안하니까)
     * Xamarin을 그냥 고수하거나 React Native를 선택하는게 더 나았을 수도

  API

     * 스케일이 중요한게 아니었음. 첫 고객들 일부한테만 제공했으면 되니까
     * 그래서 쿠버네티스/서버리스 등은 다 무시하고 그냥 Monolith로 개발
     * 싱글이지만 모듈화된 닷넷 어플리케이션으로, F#으로 코딩하고 Onion 아키텍처(Ports & Adapters 패턴)를 따랐음
     * GraphQL 같은것도 무시하고 그냥 올드한 REST 방식으로
     * 결과
          + API는 매우 튼튼하고 빠름. 배포중 거의 문제가 발생하지 않음
          + 증명할 수는 없지만, 이 성공의 대부분은 내가 사용한 ""Applied Functional Programming"" 어프로치 때문이라고 생각
          + 또한 F# 코드는 매우 아름답고 읽기 쉽고 이해하기 쉬움
          + 매우 적은 수의 오픈소스 라이브러리에 의존하므로, F# 에코시스템이 상대적으로 작고 느리게 움직인다는 것은 문제가 되지 않음

  Persistence

     * SQL Server를 오래 써왔지만 DB에 라이센스 비용을 들이기는 싫었음
     * 그래서 PostgreSQL로 선택하고 싱글 DB서버로 API가 사용. 약간의 큐 메커니즘 포함
     * 제품에 BLOB 저장소가 필요해져서, 그냥 서버의 파일 시스템을 사용하기로 했음
     * 결과
          + 그냥 동작함(It just works). Postgres와 함께하는 것은 즐거움
          + JSONB 데이터 타입은 Relational 과 NoSQL 테크닉을 섞어서 사용 가능하게 해줌. 매우 안정적이고 편안한 방식으로
          + JSON 쿼리 문법을 외울 필요는 없을듯
          + BLOB을 그냥 디스크에 저장하는 것은 큰 결정이지만, AWS S3 같은 것을 사용하는 것은 적은 사용자수에 큰 도움이 되지는 않았을 것

  Web App

     * 웹앱에 대한 기술 결정은 꽤 오래걸렸음
     * 내 직감은 Fable 과 F#을 선택하라고 했지만, 결국엔 React 와 TypeScript를 사용하고 SPA를 구축하기로 결정
     * 초기에 한 결정중에 중요한 것은 Tailwind CSS를 채택한 것
     * 결과
          + React just works, TypeScript just works
          + Dart 와 마찬가지로 TypeScript 작성도 별로 좋아하지 않고, 읽는 것도 그닥
          + 다만 TS엔 훌륭한 기능들이 있긴 함. Discriminated unions 같은 기능은 F# 에도 있으면 좋겠음
          + 전반적으로 개발자 경험은 훌륭. 빌드시간이 엄청 짧고(F#에 비해), 대부분의 복잡한 UI문제에 대해서 패키지들이 이미 존재함
          + 함수적 프로그래밍 각도에서 봐도 React의 전체 애플리케이션 모델은 이해 가능
          + Tailwind CSS는 엄청 많은 부하를 줄여줌

  Infrastructure

     * Monolith로 가기로 하면서 선택은 쉬워졌음
     * Hetzner에서 리눅스머신을 빌려서, 3개의 도커 컨테이너를 실행 : Postgres , DotNet API, Nginx
     * 모든 것은 GitHub Actions 로 빌드되고 자동 디플로이
     * 결과
          + 클라이언트와 백엔드를 동시에 배포하면 다운타임이 발생하지만, 현재로서는 짧고 무시 가능
          + 전체 프로세스는 슬림하고 안정적이며 비용 구조도 마찬가지. Hetzner는 정말 저렴하다

정리

     * 현재의 결정에 매우 만족
     * 이전 프로젝트보다 더 넓은 규모로 F# 및 함수형 프로그래밍 작업에 투자했음
     * 프로젝트에 F#, TypeScript, Dart 세개의 언어는 좀 많음.
       Dotnet MAUI가 Flutter 만큼 성숙하지 않지만, 자주 사용하지 않는 다른 언어 대신에 선택은 가능할 듯

   장기적으로 볼 때 인력 수급이 원할할까요?

   저건 아마도 혼자 운영하는 서비스인듯 하네요. 인력보다는 자신이 유지보수하기 편한쪽으로 생각한듯 해요.

   저랑 안 맞는 부분들도 조금은 있지만.. 이 사람한테 맞는 나름 실용적인 선택들이었던 것 같아요.
"
