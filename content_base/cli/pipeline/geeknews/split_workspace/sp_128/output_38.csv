"https://news.hada.io/topic?id=5047","자바스크립트로 오디오 이펙터 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          자바스크립트로 오디오 이펙터 만들기

   - HTML5 Audio API 활용해 오디오 이펙터 만들기
   - 신호를 압축하는 컴프레서, 공간감을 더하는 리버브, 신호를 반복 출력하는 딜레이 등 이펙터에 대한 설명을 포함
"
"https://news.hada.io/topic?id=5046","새로운 학습 방법 : 학습은 기술이다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          새로운 학습 방법 : 학습은 기술이다

   어떤 것이든 배우기 위한 전술적 접근 방식 6단계
   호기심과 영감은 예측할 수 없음. 무작위로 떠오르지만, 뭔가 행동을 해야 함
   성장(Growth)은 호기심과 영감에 대해 행동하는 것에 따라 생기는 자연스러운 부산물
   1. Identify & Establish : 주제(Topic) 식별하고 기반 잡기
   - 이 프레임워크는 빈 페이지로 시작 : 단계를 쫒아가며 채워나가기
   - 호기심이 생긴 토픽을 확인하고, 그것에 대해 아는 것을 모두 적어두기
   - 페이지 상단에 주제를 놓고 현재 상태의 지식을 모두 적기. 아무것도 몰라도 상관없음
   - 필자는 Notion을 사용 (링크와 자료들을 다 넣기 편해서) 하지만 그냥 종이&펜 도 상관없음
   - 뭘 아는지를 적는 것으로 시작하는 것은 내가 뭘 모르는지를 명확히 알 수 있게 함
   - 이 첫번째 액션으로 자신의 지식과 주제에 대한 이해도와의 갭을 알 수 있음
   - 이 단계의 목표는 무대(Stage)를 만드는 것. 즉, 모르는 것을 채울 구멍을 만들어 두기
   2. Research : 연구
   - 여기서부터 진짜 재밌어짐. 이제 배움을 시작할 시간
   - 연구의 가장 효율적인 전략은 수평으로 시작해서 수직으로 가는 것
   ㅤ→ 수평(Horizontal) = 넓이
   ㅤ→ 수직(Vertical) = 깊이
   자세히 설명하면
   - 수평적으로 시작할때, 주제의 전체 범위에 걸쳐 정보를 수집
   - 이렇게 하면 ""전체 필드를 볼 수 있는 능력"" 이 생기고, 주제에 대한 표면 수준 지도를 그리게 됨
   - 수평 연구시에는 단순하게 유지할 것 : 구글/위키피디어도 훌륭한 도구
   - 노트 작성 도구를 이용해서 수평적 정보들을 문서화
   - 수평적 정보들을 제공한 원본 소스들을 기록해 둘 것(위키피디어의 각주등을 참고), 이게 나중에 수직으로 갈 때 가이드로 유용함
   - 수직 연구는 속담에 나오는 토끼굴로 뛰어드는 것
   - 수직 연구는 역사적으로 항상 더 어려웠음. 오랜 시간 동안 주제에 대한 길고 빽빽한 책들을 찾고 읽어야 함.
   - 하지만, 정보화 시대에 와서는 훨씬 더 높은 시간 활용도를 제공하는 다양한 도구들이 있음
   ㅤ→ Reddit : 레딧은 흥미로운 정보의 보물상자임. 영감을 주거나 호기심 주는 것들 찾기에도 좋지만, 특정 주제에 대해 파고들기에도 효율적임.
   ㅤㅤㅤ주제에 대해 검색하고, 서브레딧과 쓰레드를 찾고, 코멘트들을 읽고, 링크들 눌러보기
   ㅤ→ 트위터 : 트위터는 효율적으로 사용하면 놀라운 정보의 소스임.
   ㅤㅤㅤ시간을 좀 들여서 해당하는 주제에 대한 권위자(Authority Figures)들을 찾고, 그들의 글이나 링크에 대한 코멘트 들을 읽고, 그들이 생산하는 다른 장문의 콘텐츠 들까지 팔로우. 뭔가 궁금하고 더 배우고 싶으면 그들에게 DM하기
   ㅤ→ 뉴스레터 : 요즘의 개인 뉴스레터 붐을 잘 이용하기
   ㅤㅤㅤ해당 주제에 대한 사상가(Thought Leader)들은 보통 뉴스레터를 쓰고 있으니 읽으면 됨. 또한 그들이 소비하는 것들도 읽어둘 것 (필자는 Faves 를 이용)
   ㅤ→ Podcast : 팟캐스트는 hit-or-miss 가 될 수 있음
   ㅤㅤㅤ주요 소스들(리더/창업자와의 대화 등)에 중점을 두고 찾을 것. 리뷰/구독자 수등을 통해서 밸류가 낮은 것들은 피할 것. 1.25x 또는 1.5x 속도로 빨리 들으면서 꿰뚫어보기
   ㅤ→ 전문가 네트워크 : 전문가 네트워크/분석 서비스는 요즘 선호하는 새 학습도구
   ㅤㅤㅤ무료 평가판이나 전문가의 대화 녹취록등을 통해서 비용 효율적으로 그들의 생각을 들어볼수 있음
   ㅤ→ 책 : 구식으로 맨 처음부터 맨뒤까지 읽지 말고, 섹션이나 챕터를 찾고 거기서 부터 파고 들기
   ㅤㅤㅤ""The old way is for vanity; the new way is for utility.""
   - 이 6가지 도구들이 수직으로 깊게 들어가는데 많이 도움될 것
   3. Skin in the Game : 스킨 인 더 게임
   - 학습 곡선을 가속화 하려면 ""스킨(Skin)""을 추가
   ㅤ→ 역주 : 워런버핏이 사용한 말로 '고위 내부자들이 자신이 운영하는 회사의 주식을 사기위해 자신의 자금을 사용하는 상황'
   - 게임에서의 스킨은 학습의 판돈(Stakes)을 올리는 것. 더 많은 인센티브를 구축하기 위한 행동적인 트릭
   - ""스킨""은 물질적(돈) 이나 은유적(개인적인 공개적 약속)등이 될 수 있음
   ㅤ→ 특정 회사에 대해 더 알고 싶으면 그 회사 주식을 몇 주 구입
   ㅤ→ 웹3.0에 배우고 싶으면 NFT를 구입하고, 그걸 사진으로 게시하고, Discord 커뮤니티에 참여
   ㅤ→ X에 대해 기사를 쓰고 싶으면 공개적으로 약속(Commit)하기(필자는 항상 자신이 글을 쓰도록 강요하기 위해 이 방식을 사용)
   - ""스킨 인 더 게임""은 판돈을 올리는 효과에 추가로, 그 커뮤니티 관점에서 ""참여"" 하게 되는 것
   - 외부에서 들여다 보면서는 많이 배울수 없음. 그 안에 들어가야 함
   - ""스킨 인 더 게임""은 커뮤니티에 참여하는 티켓임
   4. Engage Community : 커뮤니티에 참여
   - 학습은 개인이 아닌 공동의 것 (Communal)
   - 학습을 가속화 하기 위해 커뮤니티에 참여할 것
   - 새로운 언어를 배워본 적이 있는 사람은, 몰입(Immersion)이 믿을수 없을 정도로 강력한 힘이라는 것을 알고 있음
   - 두가지 전술적 조언
   ㅤ→ 권위자(Authorities) 들과 대화하기
   ㅤㅤㅤ주제에 대한 권위자들을 찾고 DM,이메일,전화 및 질문하기
   ㅤ→ 러닝 서클에게 전화하기
   ㅤㅤㅤ3-5명의 친구(러닝 서클)에게 전화해서 어떤것을 배우고 있는지 얘기할 것.
   ㅤㅤㅤ그들이 질문하는 것들이 당신 지식의 구멍을 알려주고, 더 깊이 생각할 수 있도록 하는 하는 의견들을 지적해 줄 것
   - 커뮤니티가 핵심임
   5. Teach : 가르치기
   - 배우고 싶다면 가르쳐라
   - 리처드 파인만의 테크닉을 이용
   ㅤ→ 쉬운 말을 이용해서(전문용어나 약어 없이) 지금까지 배운 것들을 소수의 사람들에 설명해 보기
   ㅤ→ 5살에게 설명할 수 없다면, 아마도 충분히 잘 이해하지 못한 것임 (ELI5, Explain It To Me Like I'm 5)
   6. Reflect & Review : 반성과 검토
   - 학습 프로세스는 반복적이고 유동적
   - 알게된 지식의 격차를 반영하고 다시 더 깊이 파고들어서 채우기
   - 노트 작성한 것을 리뷰하고, 줌 아웃해서 새로 배운 것 전체를 조망해 볼 것
   새로운 학습 프레임워크 정리
   1. Identify & Establish: 주제와 그에 대해 아는 것을 모두 적기
   2. Research: 수평(넓이)으로 시작해서 수직(깊이)으로 가기. 현대적 도구들 이용 (레딧,트위터,뉴스레터,팟캐스트,전문가 네트웍,책)해서 깊이 들어가기
   3. Skin in the Game: 스킨을 넣어서 학습 곡선 가속화 (물질적 또는 은유적)
   4. Engage Community: 권위자와 대화하고, 러닝서클과 토론하기
   5. Teach: 학습하고 싶다면 가르칠 것. 파인만 기법 사용
   6. Reflect & Review: 줌아웃 해서 갭을 확인하고 채우기를 반복

   와, 진짜 좋은 내용이네요. 킵해두고 여러번 정독해야 겠습니다.

   트위터 '잘' 활용하기에 대한 오라일리 책이 시급합니다..

   어제 전체를 1번 훑은 책이 『IT에 몸담은 이들을 위한 지적 생산 기술』인데, 거기 있는 내용과도 결합하여 볼 수 있을 것 같습니다.
   - 위 책에서는 머릿속에 있는 정보의 양을 판단하기 위해 약 5분간 포스트잇에 생각나는 대로 정보를 메모하는 방법을 제안하고 있더군요. 포스트잇 1장에 쓰는 분량은 수 단어에서 한 문장 사이이며, 중복이나 품질은 일단 무시합니다. 만약 정보가 충분하다면 5분이 주관적으로 짧을 것이고, 아니라면 꽤 길게 느껴지겠지요.
   - 하나의 보고서를 작성하기 위해 일단 메모 100~120장을 먼저 위와 같은 요령으로 준비한 다음(단, 시간 제한은 없음) 이를 펼쳐놓고 그룹화한 다음 그룹을 한데 묶어 요약하고 도식화하여 문장으로 만드는 식으로 정보를 조직하는 방법도 소개되어 있습니다. 이때 단순히 유사한 메모만 그룹으로 모으는 것이 아니라, 서로 대립하거나 혹은 자연스럽게 이어질 수 있는 관계성 또한 감안하여 배치합니다.
   - 책 읽기와 관련하여 한 챕터가 할당되어 있었는데, 특히 책을 읽는 목적을 명확히 해야 하며 여러 속독술이 공통적으로 강조하는 것이 책의 내용을 빠르게 훑되 이를 여러 번 반복하는 것인데 처음에는 목차나 소제목, 챕터의 시작과 끝 부분, 그림이나 도표, 굵게 강조된 부분 등만 보면서 전체적인 구조를 파악한 뒤 이후 점차적으로 상세한 정보를 파악하는 것이라는 점이라는 것이 기억에 남는군요.
   - 다른 사람에게 가르치기 위한 자료를 만드는 것만으로도 학습을 강화하는 효과가 있으니, 다른 사람에게 가르치기 위한 자료를 만드는 것을 독서의 목적으로 삼으면 유익하다는 조언도 있었습니다. 만든 자료를 공개한다면 피드백을 통해 더 성장할 수도 있겠지요.
   - 그 외에, SuperMemo나 Anki와 같은 반복학습 도구에 관한 내용도 있었는데, 이거 보면서 최근 이곳에 소개가 올라온 NoteGarden(https://news.hada.io/topic?id=4948 참조) 같은 걸 한번 써볼까 싶기도 하더군요.

   언급하신 『IT에 몸담은 이들을 위한 지적 생산 기술』 흥미가 당겨 읽고 있는데 내용이 제 관심사와 잘 맞아 재미있게 보고 있습니다. 책에 담은 기술마다 저자가 관련 문헌을 조사하고 직접 체험한 것을 토대로 설명한 노력이 돋보입니다. 일본 책이 흥미롭고 실용적인 주제를 제시하는데 비해 내용이 깊지 않아 여러 번 실망했는데 이 책은 예외네요. 좋은 책 알려주셔서 고맙습니다.

   Skin in the Game부분이 어려운거 같네요, 저도 회사내에서 저런 취지로 이것저것 해봤는데 가끔 일 벌려놓고 수습이 힘들때도 있더라고요ㅋㅋ

   정작 파인만의 학부 강의에서 학부생들은 다 도망가고 대학원생과 교수들만 남아있었다고 하고, 파인만 본인도 일반인에게 물리학을 이해시킨다는 것에는 부정적이었던 사람이라... 5살에게도 설명할 수 있어야 한다는건 극단적인 케이스같기도 하네요.

   5살 기준이 파인만 5살 때 아닐까요?

   근데 물리학은 예외로 쳐야 하는거 아닐까요? ㅎㅎ

   저는 ""스킨 인 더 게임""을 ""내 손목도 건다"" 느낌으로 이해하면 편한거 같아요..
   이 6단계 전체는 파인만의 4단계 기술을 좀 더 현대화 하고 상세화한 느낌이네요. 트윗 중간에도 있지만 연결해서 같이 보면 좋습니다.
"
"https://news.hada.io/topic?id=4982","Spice.ai - 개발자를 위한 Time Series AI 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Spice.ai - 개발자를 위한 Time Series AI 오픈소스

   - 개발자들이 딥러닝을 활용해서 지능형 어플리케이션을 만들수 있게 해주는 오픈소스
   ㅤ→ 웹 페이지를 만드는 정도로 쉽게 하는 것을 목표로
   ㅤ→ 에디터/운영도구/봇 등에 AI 적용 가능
   - 시계열 데이터 기반 포터블 런타임
   - Go + Python
   - 컨테이너로 실행 또는 마이크로서비스로 HTTP API 호출 지원
   예제
   - ServerOps : CPU 메트릭 데이터에 기반해서 특정 오퍼레이션을 실행하는데 최적의 시간을 추천
   ㅤ→ https://github.com/spiceai/samples/blob/trunk/serverops/README.md
   - Trader : 비트코인 가격 데이터에 기반해서 사고 파는 봇
   ㅤ→ https://github.com/spiceai/quickstarts/blob/trunk/trader/README.md
   - Gardener : 온도/습도 센서 데이터로 물주기
   ㅤ→ https://github.com/spiceai/samples/blob/trunk/gardener/README.md
"
"https://news.hada.io/topic?id=5011","웹사이트 서버측 개발 언어의 연도별 트렌드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        웹사이트 서버측 개발 언어의 연도별 트렌드

   - Alexa 상위 1천만개 및 Tranco 1백만개 사이트 기준
   2010 → 2021 년 변화
   PHP 72.5% → 78.9%
   ASP.NET 24.4% → 8.3%
   Ruby 0.5% → 5.2%
   Java 4% → 3.6%
   Scala 0 → 2%
   JavaScript 0 → 1.5%
   Static 0 → 1.5%
   Python 0.3% → 1.4%
   ColdFution 0 → 0.3%

   루비는 사랑입니다.(2)

   루비는 사랑입니다.

   웹사이트가 서버랜더링되는 것들에 대한 통계겠죠?
   kotlin 많을 것 같은데..안보여서...;;

   아마도 서버 내부쪽은 공개 된거 아니고서는 잘 모르지 않을까 합니다

   Ruby는 살아있다...!

   루비가 아직도 파이썬의 3배가 넘는군요 ㅋㅋ

   PHP가 마구 늘어나는거는 아니고, 레거시 사이트들이 대부분 그대로 유지중이고
   워드프레스 사이트는 지속적으로 늘어나고 있기도 하기 때문이 아닐까 합니다.
   ASP의 감소세가 엄청 크네요.
"
"https://news.hada.io/topic?id=5055","iOS 15 릴리즈 - 새로운 기능들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          iOS 15 릴리즈 - 새로운 기능들

   - 집중모드 : 상황에 따른 알림 필터링
   - Safari : 하단 탭 막대, 탭그룹, 맞춤설정 가능한 시작페이지, 새로운 개인정보 보호, iOS 웹 확장, 음성 검색
   - 라이브텍스트 : 사진속 텍스트를 복사/검색
   - 새롭게 디자인 된 알림 : 알림요약, 끄기 제안, SNS알림, 긴급알림..
   - 지도 : 대화식 지구본, 디테일한 도시, 교통정보, 도보 경로, 가이드 홈..
   - 지갑 : 홈/호텔/사무실/차 키, 패스보관
   - Spotlight : 풍부한 검색 결과, 사진 검색..
   - 사진 : 추억 기능에 새 디자인, 노래, 스타일, 새 UI 등 추가
   - Facetime : Shareplay, 인물사진모드, 격자보기, 공간 음향, 음성 분리 모드, 와이드 스펙트럼 모드, 페이스타임 링크, 웹 페이스타임
   - 메시지 : 나와 공유된 항목, 사진 컬렉션, 듀얼심에서 번호변경하여 메시지 주고 받기
   - 미모티콘 : 옷, 안경, 헤드웨어..

   PWA에서 push notification 지원 좀 해줬으면 좋겠는데, 이번에 extension 추가 된것보니 왠지 지원할 일이 없어보이네요.

   이렇게 정리해두니 보기 편하네요. 은근 많군요.
   사파리 하단탭이 가장 체감변화가 큰거 같습니다.
"
"https://news.hada.io/topic?id=4986","Cloudflare Workers, Native Rust 지원 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Cloudflare Workers, Native Rust 지원 시작

   - 기존에도 WebAssembly를 이용해서 다양한 언어를 지원해 왔고, Rust 지원을 추가
   - 100% Rust 만으로 Worker 생성 가능
   - Worker Crate 제공해서 순수한 Rust 방식으로 직접 Cloudflare API 호출
   ㅤ→ KV Stores, Durable Objects
   ㅤ→ fetch, router, 사용하기 쉬운 HTTP 함수들, 환경변수 접근등

   글 제목에는 Native Rust 라고 적혀있지만, Rust를 WASM 기반으로 제공하는 것이고
   더 Rust 스럽게 사용할수 있도록 Worker Crate 를 제공해서 Native 라고 표현하는 것 같습니다.
   - CloudFlare, Workers Unbound 서버리스 베타 시작 https://news.hada.io/topic?id=2543
   - CloudFlare가 Workers의 콜드 스타트 시간을 0으로 만든 방법 https://news.hada.io/topic?id=2567
   - CloudFlare, Durable Objects 베타 공개 https://news.hada.io/topic?id=2930
   - Miniflare - CloudFlare Workers 로컬 시뮬레이터 https://news.hada.io/topic?id=4577
"
"https://news.hada.io/topic?id=4975","노션이 인도의 Automate.io 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         노션이 인도의 Automate.io 인수

   * Automate.io는 지난 5년간 200개 이상의 다른 소프트웨어 도구를 위한 연결성과 통합을 구축한 회사
   * 노션은 올해 초 API를 제공하기 시작했으나 고객의 변화 요구를 따라가지 못함
   * Automate.io의 본사 인도의 하이데라바드가 노션의 5번째 오피스가 될 예정

   요즘 노션이 쓰이는 곳이 많으니 훌륭한 투자가 될 것 같아요. 이런거 잘하네요. 에버노트가 이랬어야 하는데..

   API나 통합의 아쉬움이 늘 큰 노션이었기에 이번 인수로 인한 시너지가 기대되네요.
"
"https://news.hada.io/topic?id=4946","AI 영화 포스터영화 포스터

   - AI가 간단한 영화 설명을 가지고 생성한 포스터 들
   ㅤ→ VQGAN + CLIP (Open AI)
   - 포스터 이미지를 보고 영화 제목을 맞춰보세요!
   - 아래 클릭해서 답변 보기가능
"
"https://news.hada.io/topic?id=4989","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   금요일 밤쯤, 문명 한 판을 시작했습니다.
   그리고 이 시각이 되어서 이겼습니다.
   (....

   밀린 코드정리 중 두개를 끝냈습니다 뭔가 해야지 해야지 하고 미뤄논게 너무 많네요

   가끔 만나는 멤버들이 어제 부로 신인류에 진입해서 같이 전시회 보고 차 한 잔 하기로 했습니다!

   마블 영화를 보러 갈까 해요. 그림 엽서도 한장 그리고 싶어요.

   테슬라 새 차를 뽑아서 주말에는 가지고 놀아보려고 하는데요.
   기존 사용자 분께서 꼭 Teslamate 부터 설치하라고 해서, 어떻게 설치할지 테스트해 볼 예정이에요.
   그리고 테슬라는 뭔가 편의장치가 부족한듯 심플해서, 주변기기 쇼핑 예정입니다~
"
"https://news.hada.io/topic?id=4994","2021년 제31회 Ig Nobel상 수상자 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2021년 제31회 Ig Nobel상 수상자 발표

   노벨상을 패러디하여 만들어진 이그 노벨상
   “반복할 수 없거나 반복해선 안 되는” 업적에 수여
   - 의학상: 성적 오르가즘이 코막힘 해소에 약만큼 효과가 있음을 연구한 ""섹스가 비강 기능을 향상 시킬수 있을까?""
   - 평화상: 인간이 수염을 기른 것은 주먹질로 부터 연약한 얼굴뼈를 보호하기 위해서 였다는 가설을 연구
   - 생물학상: 고양이 4마리의 가르랑 거리는 소리 비교 음향 분석
   ㅤ→ purring(가르랑거림), chirping(짹짹임), chattering(재잘거림/채터링), trilling(트릴링, 다른 고양이와 대화하기), murmuring(중얼거림), meowing(야옹), moaning(신음), hissing(쉭쉭), yowling/howling/growling(으르렁거림)..
   - 생태학상: 여러 국가의 길바닥에 붙어 있는 껌에 기생하는 박테리아를 분석하여 얼마나 해로운지를 연구
   - 화학상: 극장에서 상영중인 영화의 폭력성, 선정성, 반사회적 행동, 약물남용, 비속어 등의 빈도에 따라 관객들이 내뿜는 냄새가 달라지는지를 실험
   - 물리학상: 보행자가 다른 보행자와 끊임없이 충돌하지 않는 이유를 알아보기 위한 실험을 진행
   - 역학상: 보행자들이 다른 보행자와 부딛히는 이유를 연구한 ""상호 기대는 인간 군중의 자기 조직화에 기여할 수 있다""
   - 곤충학상 : 잠수함 내에서의 바퀴벌레 퇴치를 위해서는 디클로르보스(dichlorvos) 살충제가 효과적임
   - 운송상: 코뿔소를 거꾸로 운반하는 것이 더 안전한가
   ㅤ→ 헬기에 거꾸로 매달아 이송할 경우 코뿔쏘의 심장과 폐 기능이 제대로 대처하는지를 확인

   - 2020년 제30회 Ig Nobel상 수상자 발표 https://news.hada.io/topic?id=2879
"
"https://news.hada.io/topic?id=5027","Ask GN: 이번 주말/연휴에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Ask GN: 이번 주말/연휴에 뭐 하시나요?

   이번 주말/연휴에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   1. 요번에 국민지원금 받은 것 중 절반 이상을 개발 관련 책 구입하는 데 썼습니다. 연휴 기간 중에 이 중 한 권을 모두 보려고 합니다.
   2. 지금 손가락 아픈 게 도져서 할까 말까 고민 중인데, 학습 목적으로 UDP 데이터 송수신 앱을 간단하게 하나 만들어볼까 싶어요.

   저는 이번 연휴에....
   - Godot 게임잼! 2일동안 과연 어느정도 게임을 만들 수 있는가 확인해보려고 해요.
   - 저는 회사 Notion에 매 분기마다 제 사이드 프로젝트의 현황을 보고서로 만들어서 올리는데요. 이제 3/4분기가 끝나가고 있어서 초안을 적을 계획이에요.
   - 그 사이드 프로젝트에 제가 취미로 만들고 있는 SRPG도 있는데, 좀 더 그럴 듯하게 보이도록 뜯어고쳐야겠네요.
   - 2주마다 돌아오는 분기로 소설을 써야해요.
   - 친구들하고 보드게임을 할 예정이에요. 사이드, 카탄, 카르카손...

   주말에 NFT 와 크립토 공부를 좀 해보려구요!

   주말에는 이건희컬렉션 특별전을 보러가요. 한 회차당 30명 관람이라 예약 경쟁이 좀 있었는데 모처럼 성공했어요. 공부를 조금 하고가야할 것 같아요. ㅎㅎ 2주전 자정마다 새 예약이 열립니다.
   그리고 새로 산 아이패드 프로로 이것저것 해보려고요.
   긱뉴스 유저분들 즐겁고 풍성한 추석 연휴 보내세요~!

   이번 연휴에는 사놓고 잘 못해본 오큘러스 퀘스트 2 를 좀 가지고 놀아볼까 합니다.
   비트세이버 말고는 딱히 아는게 없네요. 추천 부탁드려요!

   슈퍼-핫 재미있습니다. 공간을 좀 여유롭게 잡으셔야 하기는 하지만 매트릭스의 주인공이 된 기분으로 할 수 있어요 'ㅁ '/
"
"https://news.hada.io/topic?id=4976","Bonsai - 개발자 워크플로우를 도와주는 웹브라우저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Bonsai - 개발자 워크플로우를 도와주는 웹브라우저

   - 핫키로 불러내서 문서 및 정보 사이트를 검색하고 IDE 위에 오버레이 해놓기 가능
   - 탭들을 도메인별로 그룹핑
   - 단축키 와 몇글자 입력만으로 창 찾기 (퍼지 검색)
   - 트리 구조 히스토리로 열었던 페이지들이 백링크 연결됨
   - 각 브라우저 창을 마인드맵 형태로 구성 가능
   - 현재 맥OS만 지원하고, 윈/리눅스 지원 예정

   오~
   듀얼 모니터가 싫어서 모니터 하나로 사용중인데요,
   익숙해지면 엄청 편할 것 같네요!

   약간 러닝커브가 있을것도 같네요

   소개동영상에 이맥스가 등장하네요
   잃어버린 가족을 찾은 느낌입니다

   오, 각 창을 마인드맵 형태로 구성하거나 그룹핑하는 부분이 정말 흥미로워보이네요!
   테스트 가봅니다 :)

   와 잠시 시험해봤는데, 제게는 정말 큰 도움이 될 브라우저네요!!
   기존 브라우저 개념과는 많이 다르고, 설명 또는 UI/UX의 완성도가 부족하기는 하지만 개발할 때 특히 유용한 기능이 많은 듯합니다.
   페이지 마인드맵/그룹핑 외에도,
   - 특정 페이지 기준으로 방문한 모든 페이지 기록 (즉 구글에서 GeekNews 검색 후 위에서 첫 번째, 두 번째, 세 번째 링크 방문하면, 일반적인 브라우저처럼 마지막 방문 페이지만 히스토리에 남는 게 아니라 모두 남겨 볼 수 있음 - Forward Page 기능)
   - Forward에 등록된 Page를 모두 Wake 처리(메모리에 올려놓기) 가능 - 재방문 시 로딩 없이 바로 보임
   - 창 모드: 사이즈 조정은 아직 안 되는 듯하지만, 개발할 때 참고 자료를 옆에 플로팅 상태로 띄워놓고 편하게 볼 수 있음
   근래에 본 제품들 중 가장 참신한 느낌을 받았습니다 :)

   흥미로운 시도인 것 같습니다.
   그런데 인스톨 후 첫 실행화면에서 어플리케이션 창 제목이 ""Hello Electron React!""로 표시되거나, 브라우저는 전체창으로밖에 실행이 안되고 다른 어플리케이션으로 전환하려면 브라우저를 닫아야 하는 등 완성도가 많이 아쉽네요.

   먼저 소개 동영상을 보는게 이해하는데 도움이 됩니다.
   https://www.loom.com/share/93c7c0012f514c37b58a42fa65badc88
   새로운 브라우저라고 하면 주요 사용방법에는 큰 변화가 없었는데, 얘는 좀 색다른 느낌이네요.
"
"https://news.hada.io/topic?id=4943","O.MG Cable - 해킹용 $119 USB케이블","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      O.MG Cable - 해킹용 $119 USB케이블

   - 웹서버, 802.11, 키로거 기능등을 내장
   - 일반적인 USB로 동작하지만 케이블에 WiFi로 원격 접속 및 관리 가능
   - 65만자까지 키로깅 지원 ($159 모델)
   - 위치에 따른 트리거 및 별도 동작 지원 (지오펜싱 및 자체 내용 파괴 가능)
   - USB Descriptor 변경 지원
   - Scriptable WebSocket
   - 라이트닝, USB-C, USB-A 등 여러가지 모델

   무섭군요..

   사제 케이블로 아이폰 연결할때마다 이 케이블을 신뢰할거냐 묻는 이유가 있네요...

   남이 빌려주는 케이블 쓰지 않게 조심해야 겠네요..
"
"https://news.hada.io/topic?id=5042","sysz - fzf를 이용한 systemctl 의 터미널 UI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   sysz - fzf를 이용한 systemctl 의 터미널 UI

   - systemctl 명령어를 인터랙티브하게 사용하기
   - 모든 unit 타입 지원
   ㅤ→ system/user unit을 같이 보고 필터링 가능
   - sudo 필요시 자동 실행
   - start/stop/restart 후 자동으로 status 실행
   - history 지원
   - 현재 상태에 따른 명령어 추천
   ㅤ→ inactive 상태라면 start / restart 만 가능
   - 명령 단축어 지원
   - 상태에 따른 unit 필터링 가능
"
"https://news.hada.io/topic?id=5062","Waydroid - 리눅스에서 컨테이너기반으로 안드로이드 실행","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Waydroid - 리눅스에서 컨테이너기반으로 안드로이드 실행

   - Ubuntu 같은 GNU/Linux 상에서 풀 안드로이드 시스템을 컨테이너로 실행
   ㅤ→ Linux 네임스페이스(user, pid, uts, net, mount, ipc) 사용
   - 안드로이드 앱을 리눅스상에서 다른 리눅스 앱과 같이 실행
   - 멀티 윈도우 모드 및 전체화면 모드 지원
   - 안드로이드 런타임은 LineageOS(Android 10) 기반
"
"https://news.hada.io/topic?id=5025","자동완성, 에러확인, 성능 튜닝이 자동으로 되는 TypeORM 도우미 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              자동완성, 에러확인, 성능 튜닝이 자동으로 되는 TypeORM 도우미 라이브러리

   TypeORM의 헬퍼입니다.
   쿼리 작성시
   - 컴파일 수준에서 에러 검출
   - 자동완성 제공
   - 타입 힌트 지원
   이 가능하며
   - App-Join이 편리
   - SELECT시 JSON 타입의 추론
   - SELECT / INSERT 시 성능 튜닝
   도 된다고 하네요.

   개인적으로 요즘 DB 쪽 라이브러리는 EdgeDB에 눈길이 가네요.
   쉽고 안전해보이더라고요.
   https://news.hada.io/topic?id=4602
   제작자분 말에 따르면
   https://gall.dcinside.com/mgallery/board/view/?id=github&no=25040
   추론관련
   https://github.com/samchon/safe-typeorm/…
   앱조인
   https://github.com/samchon/safe-typeorm/…
   TMP
   https://github.com/samchon/safe-typeorm/…
   처럼 만들어졌다고 합니다.
"
"https://news.hada.io/topic?id=5000","니치 마켓을 타겟한 스타트업 성공사례","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          니치 마켓을 타겟한 스타트업 성공사례

   제품 아이디어와 방문자수, 어떻게 사용자를 모집했는지, 광고/검색 키워드 등 포함
   - Lefty's : 왼손잡이를 위한 쇼핑몰
   - Nomad List : 디지털 노마드를 위한 정보 사이트
   - The Modest Man : 키가 작은 사람들을 위한 패션 사이트
   - TomBoyX : LGBTQ+ 를 위한 패션 브랜드
   - Bee's Wrap : 환경보호를 위해 플라스틱 대신 면과 밀랍으로 만든 식품용 랩
   - Divvies : 채식주의자 및 땅콩 알러지가 있는 사람들을 위한 음식 쇼핑몰
   - Ahrefs : 이 글이 올라온 웹사이트(홍보) 웹사이트 오너들을 위한 SEO 제공 도구

   근데.. 키가 작은 사람들이라고 해서 가보니 5’8″ = 172cm 군요...

   5.8피트면 미국 평균키 정도일텐데 말이죠...
"
"https://news.hada.io/topic?id=5017","애플 iMessage Zero-Click Exploit 패치 배포","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  애플 iMessage Zero-Click Exploit 패치 배포

   - Pegasus 스파이웨어 분석중에 발견
   - 애플의 CoreGraphics 라이브러리를 통해서, 악의적으로 제작된 PDF 파일을 통해 임의 코드 실행 가능한 CVE-2021-30860 취약점
   ㅤ→ 9/13일 자로 배포된 iOS/iPadOS 14.8 에서 패치됨
   ㅤ→ macOS Big Sur 11.6 및 watchOS 7.6.2 이전 것들에도 모두 해당

   저도 이거 보고 iOS 업그레이드 하는 중입니다. 곧 15가 나오긴 하겠지만 ^^;
"
"https://news.hada.io/topic?id=5030","Tasuku - Node.js용 미니멀 Task Runner","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Tasuku - Node.js용 미니멀 Task Runner

   - 여러 태스크를 동시에 로딩/실행하여 성공/실패등의 메시지를 터미널에 동적으로 표시
   ㅤ→ 복잡한 스크립트 및 CLI 도구 작성용
   - 동적 상태값을 지원하는 태스크 리스트
   ㅤ→ Pending ◽️ / Loading 🔅 / Warning ⚠️ / Error ❌ / Success ✅
   - 병렬, 중첩, 그룹 태스크 지원
   - Unopinionated : 어디서든 호출 가능. 별도 요구사항 없음
   - Type-Safe
   - setTitle, setStatus, setOutput, setWarning, setError 등 지원

   기존에 많이 쓰던 listr/listr2 도 넘 훌륭한데, 너무 구조적/선언적이어서 만들었다고 하네요.
   확실히 쓰기엔 더 깔끔하고 간편해 보이는 듯
   - listr https://github.com/SamVerschueren/listr
   - list2 https://github.com/cenk1cenk2/listr2
"
"https://news.hada.io/topic?id=4973","htmlq - jq for HTML","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          htmlq - jq for HTML

   - CSS 셀렉터를 이용해서 HTML 파일에서 내용을 추출 하는 CLI 도구
   - Rust 오픈소스
   > curl URL | htmlq '#get-help' // ID로 찾기
   > htmlq --attribute href a // 모든 링크 추출
   > htmlq --text .main // 텍스트 추출

   - jq - ""sed/awk for JSON"" https://stedolan.github.io/jq/
   - SQ - ""jq for relational data"" https://news.hada.io/topic?id=3841
   - Modern Unix - 유닉스 명령들의 최신 대체제 https://news.hada.io/topic?id=4784
"
"https://news.hada.io/topic?id=5038","W3C Design System","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           W3C Design System

   - W3C가 자신들의 웹사이트 디자인에 사용한 Design System을 공개
   ㅤ→ 모든 문서와 템플릿, 컴포넌트 포함
   ㅤ→ Composer 및 Zip 파일로 다운받아 설치 가능
   ㅤ→ Symfony 번들로도 제공
"
"https://news.hada.io/topic?id=4961","년 3.5억 수익내는 Vue.js UI 라이브러리 만든 후기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   년 3.5억 수익내는 Vue.js UI 라이브러리 만든 후기

   - Material 디자인 컴포넌트 프레임워크 ""Vuetify"" 개발자 인터뷰
   - MIT 라이센스 오픈소스로 코드는 완전히 무료
   ㅤ→ 수익은 스폰서(GitHub & Patreon), Store, 웹사이트 광고 및 컨설팅을 통해서
   - Vue 초기 버전부터 사용했음
   - 2016년 말에 약 4달정도 개발을 통해서 GitHub 에 Vuetify를 오픈소스로 공개
   - 초기반응이 뜨거웠고 2017년 10월에는 풀타임 오픈소스 개발자로 전환
   - 구글의 Material 디자인을 Vue.js 프레임워크를 이용하여 개발
   - Open Collective 를 통해서 스폰서 받음 ( 월 $1000 ~ $2500 )
   - GitHub 과 Patreon 은 월 $6500 정도
   - 수익을 다변화 하기 위해서 Vuetify Store 오픈
   ㅤ→ 브랜딩된 의류, 악세사리, 디지털 상품(테마) 등 판매
   ㅤ→ 첫해에는 월 $100 정도였다가 월 $15000~$20000 까지 늘어남
   ㅤ→ 점차 메인 수익원이 됨
   - 사용자를 모으고 유지하는데 가장 도움이 된 것은 ?
   ㅤ→ ""Core Value Proposition"" (핵심 가치 제안) : 누구나 무료로 사용할 수 있는 방대한 UI 라이브러리
   ㅤ→ 같은 생각을 가진 다른 단체들과 협업 : Vuejobs , MadeWithVue 같은 Vue 에코시스템내의 다른 사이트들과 협업. 광고/배너 등
   ㅤ→ 잘 큐레이트된 컨텐츠 제공 : 문서를 보러오는 트래픽이 굉장히 많음. 잘 정리함으로써 참여를 늘리고, 세일즈 퍼널에 인입
   ㅤ→ 다양하고 포괄적인 커뮤니티 만들기
   - 사용중인 플랫폼들
   ㅤ→ Shopify
   ㅤ→ BrowserStack 으로 브라우저 테스팅
   ㅤ→ Vercel 호스팅
   ㅤ→ Zapier 로 태스크 자동화 (소셜 플랫폼에 릴리즈 정보 공유등)
   ㅤ→ 펀딩 : Patreon, GitHub Sponsors, OpenCollective
   ㅤ→ 개인적으로는
   ㅤㅤㅤ➱ Shift 로 이메일/캘린더/분석도구를 하나의 인터페이스로 이용
   ㅤㅤㅤ➱ Cosmic.js 로 콘텐츠 관리
   ㅤㅤㅤ➱ VS Code + Windows 11 WSL2 사용

   indiehackers 같은데서 이런 종류의 글을 접하면, 가슴이 두근두근 합니다. 수줍은 많은 개발자의 로망 아닐까 싶습니다.
"
"https://news.hada.io/topic?id=5052","Mozilla HTTP Observatory","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Mozilla HTTP Observatory

   - 웹사이트를 스캔해서 보안 설정 여부를 확인해주는 도구
   - HTTP, TLS, SSH 및 써드파티 도구를 사용한 테스트 진행
   - 점수에 따라서 웹사이트 보안등급을 평가 : A+ ~ F 등
   ㅤ→ 100점 척도 : 만점 135점에서 미대응 항목당 -, 주요 대응항목당 + 하는 방식
   - 써드파티 : SSLLabs, ImmuniWeb, SecurityHeaders..
"
"https://news.hada.io/topic?id=5043","Tailscale - 오픈소스 프로젝트 조직에도 무료로 제공 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Tailscale - 오픈소스 프로젝트 조직에도 무료로 제공

   - GitHub Organization 을 사용하는 오픈소스 프로젝트에 무료
   ㅤ→ 25 사용자
   ㅤ→ 사용자당 5개의 기기
   ㅤ→ 1개의 Subnet Router
   ㅤ→ 2명의 관리자
   ㅤ→ ACL 정책에 2 Unique 사용자
   - 개인에게는 여전히 무료로 제공

   Tailscale 쓰면 쓸수록 마음에 들어요.
   개인한테는 최고의 VPN 솔루션인듯 합니다.
   특히나 요즘처럼 집안에 NAS 나 웹캠등을 설치해 놓는 경우에는 필수인 것 같습니다.
"
"https://news.hada.io/topic?id=4981","Show GN: Screen Recorder","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Show GN: Screen Recorder

   안녕하세요, 윈도우 환경의 컴퓨터 화면을 녹화하는 프로그램을 만들어 봤습니다.
   광고도 없고 워터마크도 없고 엄청 간단하게 원하는 포맷으로 PC 화면만 녹화하고 싶은데? 라는 생각으로 시작한 프로젝트 입니다.
   사용방법은 그저 빨간색 동그라미 버튼을 누르면 녹화가 시작되고,
   사각형 버튼을 누르면 녹화가 중지되는 간단한 프로그램이에요.
   댓글 또는 깃헙이슈로 여러 가지 의견 주시면 프로그램에 반영해보도록 하겠습니다! 감사합니다.

   타임랩스 기능이 있었으면 합니다. ^^

   H.265 30M, AAC 320K, MKV 로 유튜브 4K 영상 영역지정 녹화 시도해봤는데 녹화안되고 앱이 종료되거나 프리징되더군요

   앗 피드백 감사합니다 한번 확인해보겠습니다

   좋은 프로그램 감사드립니다. 프로그램 깔끔하고 좋네요
   1. 코덱, 파일 확장자 설정 분리돼 있으면 좋을것 같습니다. 오캠 종종 쓰는데 H.264, MKV 로 저장했던 것 같네요. → 라고 쓰고 고급설정 가보니 나오는군요 😂😂
   2. H.265 지원하면 좋을 것 같습니다 → 라고 쓰고 고급설정 가보니 나오는군요 😂😂
   3. 이름이 일반적이라 Launchy 에서 검색 실행시 잘 검색이 안될것 같습니다 스크린 레코더가 아니라 ""가나다 스크린 레코더"" 식으로 구분이 되는 이름을 넣어주면 좋을 것 같습니다. 😄😄

   윈도우10에 Windows키 + G 버튼으로 화면 녹화하는 기능이랑은 차별점이 있을까요?

   게임바 녹화는 윈도 전체 화면 녹화가 안되고 활성화돼있는 윈도 녹화만 돼요. 그래서 게임 이용 시에는 유용하게 쓸 수 있지만, 컴퓨터 화면에서 여러 작업 녹화는 힘듭니다. (활성화돼있는 윈도 크기가 변경되면 바로 녹화중지) 세세한 비트레이트나 (화질 상, 중, 하 는 존재하지만) 포맷 설정도 안되고요. 게임 녹화시에는 게임바가 유용하지만 일반 화면 녹화시에는 불편한점이 많아 따로 만들게 되었습니다.

   와우 간단하게 쓰기 넘 편하네요.
   포터블 버전도 같이 배포해주셔서 너무 좋아요!
   - 설치 마지막에 바로 실행하기 옵션도 있으면 좋을 것 같아요.
   - 단축키 설정 버튼이 별도로 있는데, 설정 화면 하단에 항목으로 풀어서 같이 넣으면 보기 이상할까요? 한참 찾았어요 ^^;
   - 캡쳐 영역 지정이 디스플레이 장치 설정 안에 있긴 한데, 첫 화면에서 ""영역 지정 후 녹화 시작"" 같은 버튼으로 있으면 좋을 것 같아요.
   - 멀티 디스플레이일 경우 선택하는 옵션이 메인 화면에 있는 것도 편할 것 같습니다.

   의견 감사합니다. 다음 버전에 반영 해보겠습니다
"
"https://news.hada.io/topic?id=4984","Node 16.9.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Node 16.9.0 릴리즈

   - Corepack 내장 (브릿지 스크립트)
   ㅤ→ 바이너리 프록시를 통해서 패키지 매니저 버전 연결을 도와주는 실험적인 도구
   ㅤ→ Yarn, pnpm 등을 설치 없이 사용 가능
   - V8 9.3
   ㅤ→ 성능 개선
   ㅤ→ Object.hasOwn
   ㅤ→ Error Cause 추가 가능 : const error2 = new Error('Error two', { cause: error1 });
"
"https://news.hada.io/topic?id=4936","Stitches - 고성능 CSS-in-JS 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Stitches - 고성능 CSS-in-JS 라이브러리

   - 런타임시 쓸데 없는 부분을 삭제해서 고성능 추구
   - React 및 Vue, Svelte, Vanilla HTML에도 사용 가능
   - Fully Typed-API
   - Variant, 테마, 스마트 토큰, 커스텀 CSS 속성 등 지원
   - SSR 지원

   https://css-blocks.com/ 도 생각나네요.
"
"https://news.hada.io/topic?id=4950","Visual Studio Code 1.60 업데이트 (2021년 8월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Visual Studio Code 1.60 업데이트 (2021년 8월)

   - 자동 언어 감지 : 코드 붙여넣기 할때 Tensorflow.js 이용해서 언어 감지
   ㅤ→ 제목없음 파일에서도 언어 기능 적용
   - 고성능 Bracket 짝 컬러링 기능 내장 : 엄청 큰 문서에서도 빠르게 동작
   - 설정 편집기에서도 구문 강조 지원
   - 터미널에서 박스 및 블록 문자 커스텀 렌더링 : 아스키 박스 그릴때 여백 없이 딱 붙여서 표시
   - 디버그 Watch 창에서 Set Value 지원

   이맥스도 얼른 28이 정식 릴리즈 되었으면 좋겠네요 .
   magit + forge랑 org모드, 싱글 프로세스, 적은 메모리 사용량 때문에 이맥스를 떠날 수가 없어요..

   이맥스는 논블럭킹좀 신경 써줬으면 좋겠어요.
   IO작업때마다 에디터 전체가 멈추는 경우가 잦은듯..

   제가 VSCode 사용할때 빈 창 열고 제목없음 파일에 붙여넣기 많이 하는데, 편해졌네요.
"
"https://news.hada.io/topic?id=5008","Peermaps - P2P 분산 지도 서비스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Peermaps - P2P 분산 지도 서비스

   - 중앙 서버가 아닌 다른 Peer에서 지도를 가져와서 서비스하는 방식
   - 롤링 업데이트 되는 OpenStreetMap 데이터를 표시하는 P2P 웹기반 맵 뷰어를 개발 예정
   - SamsungNext 가 OpenCollective 통해서 $100,000 Grant 펀딩함
"
"https://news.hada.io/topic?id=4959","iola - REST API로 이용가능한 Socket 클라이언트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  iola - REST API로 이용가능한 Socket 클라이언트

   - 소켓 서버에 접속한 후 REST API로 소켓통신 호출 가능
   ㅤ→ WebSocket, Socket.IO, TCP, Unix Socket 지원
   - 메시지 전송/수신
   - 모든 소켓 이벤트 로깅 가능
   - REST API에 대한 Swagger UI 제공
   - 리눅스/맥/윈도우 지원
   > iola websocket ws://127.0.0.1:8080
   API Server : 127.0.0.1:3000
   API Docs : 127.0.0.1:3000/docs
   웹소켓으로 8080에 접속
   REST 클라이언트로 3000에 접속해서 REST API로 호출 가능
"
"https://news.hada.io/topic?id=5016","LAION-400M - 4억개짜리 이미지-텍스트 쌍 데이터셋억개짜리 이미지-텍스트 쌍 데이터셋

   - 무료로 공개된 것 중 세계에서 제일 큰 이미지 데이터 셋
   ㅤ→ 2014~2021년간의 웹 페이지 크롤링 데이터를 덤프
   - 모든 이미지/텍스트는 OpenAI의 CLIP으로 필터링 완료
   ㅤ→ 이미지/텍스트간 유사도 0.3 이하를 걸러낸 뒤 수작업 검증
   - 데이터셋 구조
   ㅤ→ 50GB URL+캡션 메타데이터 Parquet 파일
   ㅤ→ 10TB 풀버전 웹데이터셋 256x256 이미지/캡션/메타데이터로 바로 학습에 사용 가능
   ㅤ→ 1TB 400M개의 텍스트/이미지 클립 임베딩. KNN indices 리빌드에 유용
   ㅤ→ 데이터셋 검색을 쉽게 해주는 2개의 4GB KNN indices
   SAMPLE_ID | URL | TEXT | LICENSE | NSFW | similarity | WIDTH | HEIGHT
"
"https://news.hada.io/topic?id=5018","Java 17 / JDK 17 : General Availability","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Java 17 / JDK 17 : General Availability

   - Java 17의 레퍼런스 구현체 JDK 17이 GA
   - 8월 6일에 첫번째 RC로 배포된 Build 35가 P1 버그 제보가 없어서 GA Build가 됨
   - 프로덕션 사용 가능
   - Oracle이 만든 OpenJDK 17 (GPL) 이 공개 되었고, 다른 벤더 빌드들도 곧 공개 될 것
   - 14개의 JEP 포함
   ㅤ→ 306: Restore Always-Strict Floating-Point Semantics
   ㅤ→ 356: Enhanced Pseudo-Random Number Generators
   ㅤ→ 382: New macOS Rendering Pipeline
   ㅤ→ 391: macOS/AArch64 Port
   ㅤ→ 398: Deprecate the Applet API for Removal
   ㅤ→ 403: Strongly Encapsulate JDK Internals
   ㅤ→ 406: Pattern Matching for switch (Preview)
   ㅤ→ 407: Remove RMI Activation
   ㅤ→ 409: Sealed Classes
   ㅤ→ 410: Remove the Experimental AOT and JIT Compiler
   ㅤ→ 411: Deprecate the Security Manager for Removal
   ㅤ→ 412: Foreign Function & Memory API (Incubator)
   ㅤ→ 414: Vector API (Second Incubator)
   ㅤ→ 415: Context-Specific Deserialization Filters
"
"https://news.hada.io/topic?id=4980","Mitosis - 웹 컴포넌트를 어디서나 실행","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Mitosis - 웹 컴포넌트를 어디서나 실행

   - 작성된 컴포넌트를 다양한 프레임워크에서 사용할 수 있게 컴파일
   ㅤ→ Vue, React, Solid, Angular, Svelte, Liquid
   - JSX 서브셋을 이용
   - 컴포넌트 라이브러리 관리
   - JS 프레임워크 변경시에도 편함
   - Design to Code : Figma / Sketch 에서 가져와 컴포넌트 생성
   ㅤ→ Builder.io 로 드래그 앤 드랍 UI 개발 지원
"
"https://news.hada.io/topic?id=4965","OpenWrt 21.02.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          OpenWrt 21.02.0 릴리즈

   - 임베디드 기기(특히 인터넷 공유기)를 위한 리눅스 배포판
   - 19.07 이후의 메이저 안정버전
   - WPA3 기본 지원
   - TLS/HTTPS 기본 지원
   - 최소 하드웨어 사양 상향 : 8MB 플래시, 64MB 램
   - DSA (Distributed Switch Architecture) 초기 지원
   - 8+ 이상의 포트를 가진 Realtek 장비들 지원
   - SELinux 지원 (기본 활성화 아님)
   - 18.06 에서의 업데이트는 지원 안함
"
"https://news.hada.io/topic?id=4937","W3C, CSS Nesting Module 초안 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     W3C, CSS Nesting Module 초안 공개

   - CSS 스타일안에 다른 스타일을 중첩 가능하게 해주는 스펙
   ㅤ→ 상위 규칙 선택자 기준으로 하위 규칙 선택자 사용
   - CSS 의 모듈성과 유지보수성 증가
   - 직접 중첩 선언 또는 규칙기반 @nest 지원
   - Nesting Selector '&'
   table.colortable {
   ㅤ& td {
   ㅤㅤtext-align:center;
   ㅤㅤ&.c { text-transform:uppercase }
   ㅤㅤ&:first-child, &:first-child + td { border:1px solid black }
   ㅤ}
   ㅤ& th {
   ㅤㅤtext-align:center;
   ㅤㅤbackground:black;
   ㅤㅤcolor:white;
   ㅤ}
   }
"
"https://news.hada.io/topic?id=5004","최고의 엔지니어를 쫓아내는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           최고의 엔지니어를 쫓아내는 방법

   ""개발자들의 근속기간을 더 짧게 만드는 방법들"" 과 ""고치는 방법""
   - 소프트웨어를 못 만드는 관리자를 고용하세요
   ㅤ→ FIX: 기술 관리자, 이사, VP들이 분기당 1주 정도는 기능을 개발하고 배포하도록 하세요. 3일 정도 걸리는 기능을 실제 작업/협업 방식으로.
   - 엄청 많은 관리자를 뽑고, 계층을 두세요
   ㅤ→ FIX: 조직을 평평하게 만들고, 가능한한 관리 계층을 제거하세요
   - 최대한 많은 회의를 하세요
   ㅤ→ FIX: 팀간의 협업을 최소화 하고, 팀 내부에서는 많은 협업이 일어나도록 조직을 설계하세요
   - 소프트웨어 정의 프로세스를 고통스럽게 만드세요
   ㅤ→ FIX: 개발자의 부담을 덜어주는 방법. 티켓 만들때 최소 3명(엔지니어,테스터,제품담당자)가 10분간 논의하고 작성하게 하세요
   - 소프트웨어 배포를 고통스럽게 만드세요
   ㅤ→ FIX: 나타난 문제점들을 20% 시간을 할애하여, 분석하고 고치는 시간을 가지게 하세요
   - 엔지니어들이 자신의 작업시간을 추정하게 하세요
   ㅤ→ FIX: 추정을 하지 마세요. 경험상 99% 이상 안 맞았고 잘 동작하지 않습니다. 날짜가 필요하면 forecasting 같은 최신 방법을 추천합니다
   - 팀을 아주 작게 만드세요
   ㅤ→ FIX: 적어도 팀 크기는 6명이 좋습니다
   - 엔지니어를 다른 팀에서 빌려오세요
   ㅤ→ FIX: 팀이 미션을 가지고 오래 존속하도록 하고, 사람들을 이동하지 마세요

   VP에게 task assign하는건 생각만해도 심장이 쫄깃해지는군요. 분기당 1주일동안 이라지만, 아마 1주일동안 수많은 딴지와 AI를 만들어낼것 같습니다. 물론 긍정적인 변화겠지만요 :)

   제가 있었던 회사와 비슷하네요ㅎㅎ
   개발리더가 있었는데 대표가 컨트롤안된다고 대표지인이 소개해준 개발이사앉혀서 1년내에 개발팀 파토났었죠.

   forecasting이 뭘 말하는 걸까요?

   기본적으로 Estimation 은 작업 시간이 얼마나 걸릴지 추정을 통해서 예측하는 건데요.
   Forecasting 은 일기 예보와 마찬가지로 ""기존 데이터에 기반""해서 예상하는 거라고 정의가 되어있고요.
   팀이 에픽을 스토리로 분할하고 스토리당 얼마나 걸렸는지(스토리 포인트)등이 잘 기록이 되어있는 경우,
   주당 피쳐를 완료하는 량에 따라서 그 기반으로 예상일자를 뽑는거 정도 일 것 같습니다.
   (저도 책과 글로만 배우고, 실제 적용은 해보지를 못해서.. 대략적으로만 설명드립니다.)

   와 좋은 답변 감사합니다. (그리고 뉴스 언제나 잘 읽고 있습니다!)
"
"https://news.hada.io/topic?id=5026","우분투 21.10부터 파이어폭스 스냅 패키지로 제공 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    우분투 21.10부터 파이어폭스 스냅 패키지로 제공 예정

   우분투 21.10부터 파이어폭스가 기존 deb 패키지 대신 스냅 패키지로 설치될 예정입니다. 모질라에서 직접 스냅 패키지를 제공하는데 새 버전이 나왔을 때 패키지가 만들어지기까지 걸리는 시간을 줄이는 것이 목적이라고 합니다.

   피처 프리즈 예외까지 두면서 바꾼다라...
   https://discourse.ubuntu.com/t/…
   Snap 이 샌드박싱이고, 배포판 릴리즈 주기를 안따르고 최신 버전 앱 사용 가능해서 좋긴 한데. 샌드박싱 형태다보니 이슈가 이것저것 많더군요. (Flatpak, AppImage 도 샌드박싱 형태에서 오는 이슈 있던걸로 기억...)

   허어...스냅 패키지들 GUI 성능저하가 심한 것들이 좀 있는데 해결은 했는지 모르겠네요.
"
"https://news.hada.io/topic?id=5009","모질라, MS 윈도우의 기본 브라우저 보호기능을 깨다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     모질라, MS 윈도우의 기본 브라우저 보호기능을 깨다

   - MS Edge는 브라우저내에서 1클릭으로 OS의 기본 브라우저 변경이 가능하지만, 공개된 기능이 아님
   - 모질라가 이걸 리버스 엔지니어링 해서, Firefox 91 버전 부터는 Edge와 똑같이 1클릭으로 기본 브라우저 변경이 가능해짐
   ㅤ→ 기존에는 윈도우10 설정 화면에 가서 원하는 브라우저를 선택하는 동작을 해야 했음
   - 윈도우11에서는 맨 처음 실행시 ""항상 이 브라우저 사용""을 선택하지 않으면 그 다음부터는 그 옵션이 뜨지 않게 되어 더 기본 브라우저 설정이 귀찮아지게 만들었음
   - 구글,비발디,오페라 등이 따라할지, 아니면 MS가 이것에 어떻게 대응할지 지켜봐야 함
"
"https://news.hada.io/topic?id=5033","이제 Microsoft 계정을 암호 없이 사용 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      이제 Microsoft 계정을 암호 없이 사용 가능

   - 암호를 입력하는 대신, 아래 방법을 이용하여 MS 계정에 로그인 가능
   ㅤ→ MS Authenticator
   ㅤ→ Windows Hello
   ㅤ→ 보안 키(FIDO2)
   ㅤ→ SMS/이메일 확인코드
   - 몇년간 암호 없는 환경에 대한 작업을 진행해 왔으며, 팬데믹이 이걸 가속시켰음
   - MS 계정 페이지 의 Advanced Security 화면에서 활성화 가능

   Azure AD를 사용하는 ""Work or School"" 계정은 ""Passwordless"" sign-in 을 사용하기 위해서 관리자의 설정이 필요하고, 제약사항도 있습니다. https://docs.microsoft.com/en-us/azure/… 참고하세요.

   2FA앱을 구글이나 타사보다 마소 어센티케이터 쓰시길 권장드립니다. 인터페이스도 좋고, 빠르고, 단말 이전도 쉽고 마소 로그인도 처리할 수 있슴니다

   1password 에서도 totp 기능이 있어서 저는 그걸로 사용하고 있어요. 기기간 동기화까지되더라고요

   전 Authy 를 쓰고 있었는데.. 넘어가기 귀찮아서 MS랑 둘 다 쓰고 있습니다. 구글은 정말 꽝이에요

   좋네요. 제 MS 계정에도 활성화 했습니다.

   https://account.live.com/proofs/manage/additional
   요기서 Passwordless Account 옵션을 활성화 하면 됩니다.
"
"https://news.hada.io/topic?id=4948","NoteGarden - 노트 필기로 공부를 도와주는 툴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     NoteGarden - 노트 필기로 공부를 도와주는 툴

   - 프로그래머/의학/법학/언어 공부/각종 시험 준비등 학습자를 위한 노트테이킹 도구
   ㅤ→ 노트를 작성하고
   ㅤ→ 노트 기반으로 학습 코스를 자동 생성
   ㅤ→ SR 알고리듬으로 잊어먹었을 법한 문제를 추천받아 풀기
   ㅤ→ 체크리스트와 학습과정을 관리
   - 검색 및 양방향 링크
   - 쉬운 수식 입력 지원
   - 트리 구조 입력, 스프레드시트, 멀티 윈도우 기능 제공
   - 마크다운 지원

   학습하기에 들어갔을 때 범위를 설정했는데 학습하기라는 버튼이 나오지 안는걸까요?

   저는 Anki, 아이패드 마진노트를 주로 사용하는데, 아이패드가 아니라는 점만 제외하면 마진노트를 대체할 수도 있겠는데요.

   바보 같은 질문해서 미리 죄송합니다.
   Add a new file 버튼이 어디 있나요? ㅠ.

   처음 들어간 페이지에서 ""My Notes"" 글씨를 클릭하면 상위로 이동합니다.
   거기에서 ""+"" 버튼 누르면 새로운 파일을 추가할 수 있네요.
   저도 처음에 못찾아서 당황했네요,,,

   프로그래밍 공부
   전문지식을 잊으면
   불편한 사람들
   ㅎㅎ 타게팅 대상 표현이 ... 딱 저네요.

   SR 알고리즘이 뭔가요?

   쉽게 말하자면 최적의 복습주기를 계산해주는 알고리즘입니다!
   개별 지식을 잊었을 확률을 계산하고. 잊었다고 판단이 되면 학습코스에 포함하고 지금도 알고 있으면 학습코스에서 제외하고... 그런 알고리즘 입니다!

   엄청 똑똑한 Anki 느낌!

   살짝만 훑어봤는데 정말 똑똑한 anki가 맞네요.
   anki 쓰면서 아쉬웠던 점이 의존관계로 엮인 정보들도 모두 독립적으로 취급 돼서 구조적으로 암기하는게 매우 번거로웠던 것인데 NoteGarden은 그 부분에 대한 고려를 했어요.
   근데 제 취향과는 약간 달라요.
   anki는 노트 템플릿을 직접 만들 수 있는 점이 좋은데
   notegarden은 트리 형식으로 글을 쓰는 것 외에는 다른 수단이 없어보입니다.
   SR에 outliner가 멋있게 통합된 것 같은데
   전 이 두개를 완전히 분리하는 것이 더 타당하다고 봐요.
   제가 생각하는 이상적인 암기앱은 딱 이 두 가지만 있으면 된다고 봅니다.:
   * anki 베이스 (anki에서 뺄 기능이 없음)
   * 노트 간 의존관계를 직접 설정하면 앱이 그 의존관계도 고려함
   (예를 들어 A가 B,C,D에 의존하면 B,C,D가 모두 어느 정도 암기될 때까지는 A 노출 보류)

   이렇게 써놨지만 이걸 보고 notegarden에 반영해달라는 건 아니고
   ""지식을 암기로서 숙달하기""에 대해 얘기할 곳이 전혀 없어서 이렇게 제 취향이라도 말해봅니다... ㅎㅎ
   한국에는 관련 커뮤니티가 거의 없는 것 같고 영어권은 영독하는게 힘드네요 ㅠㅠ

   누군가 그것도 한국인이 anki의 대체품을 만들어내고 있다는 것만으로도 응원드리고 싶습니다.

   훌륭한 피드백 감사드립니다 ( 제가 긱뉴스를 만든 이유가 이런 댓글을 보고 싶어서였어요 )

   srs 쓰는 한국인을 처음보고 반가워서 바로 아이디 파고 댓글 남겼는데 뿌듯하네요 ㅎㅎ

   좋은 리뷰 감사드립니다!
   말씀하셨던 이상적인 암기앱의 기능 두가지:
   * anki 베이스 (anki에서 뺄 기능이 없음)
   * 노트 간 의존관계를 직접 설정하면 앱이 그 의존관계도 고려함
   모두 노트가든에 구현이 되어있어서 안심이 됩니다!
   특히 아웃라이너 형태로 정리된 지식을 기반으로 학습코스로 만드는 메커니즘은 특히 자신있는 부분이기도 합니다!

   학습시 템플릿에 대한 자유도가 안키보다 모자라다는 지적은 분명히 정확하십니다!
   저희는 그 템플릿을 만드는 과정을 더욱 쉽게 만들고 싶었기에 조금 방향이 달랐던것 같습니다!
   안키가 html/css로 노트템플릿을 일일이 만들어 반복적으로 입력하는 노동의 과정을 거치는 것 데 피로를 느끼고
   원하는 방식대로 필기하고, 암기하고 싶은 부분에 줄만 그어서 바로 암기할 수 있게 만들고 싶다는 생각이 저희 노트가든의 시작점이었거든요!
   그래서 노트가든에는 트리구조 노트 안에 스프레드시트, 이미지, 일반노트 등등 어떤 형태로든 필기만 하면 곧바로 문제화 시킬수 있는데 초점이 맞추어져 있습니다!

   말씀하신 부분은 저희가 크게 생각지 못한 부분인데 향후 개발 방향성을 정할때 고려하도록 하겠습니다! (학습시 원하는 템플릿을 선택할수 있는 옵션을 준다거나 플러그인형태로 템플릿을 공유 하면 좋을것 같습니다!)
   자세한 피드벡 너무 감사드립니다!
   한국어로 SRS에 대해 이야기 나눌 수 있는 상황이 저희도 너무 기쁩니다...!(영어가 힘들었습니다... ㅜ) 국내에도 SR로 ""지식을 암기로서 숙달하기""가 보편적으로 될 수 있도록 노트가든이 노력하겠습니다!

   어제 한국분들이 저희 커뮤니티에 들어오셔서 어떻게 아셨나 했는데..
   글을 올려주셔서 감사합니다!!
   세상의 모든 학습자들에게 도움이 될 수 있는 프로그램이 되도록 더욱 노력하겠습니다~
   아직 프로그램 초기 단계라 어떤 피드백이든 저희에게 정말 도움이 될 것 같습니다😊
   버그 리포트나 개선점, 제안이 있으시면 아래 링크로 방문해주시면 정말 감사하겠습니다!!
   디스코드: https://discord.gg/2YNe3KrC
   인스타그램: https://www.instagram.com/notegarden_kr/followers/
   트위터: @notegarden_ofcl
   래딧: https://www.reddit.com/r/notegarden/

   좋아보이더라구요

   열심히 만든 보람이 있네요🤣
   앞으로도 많이 이용해주시고 많은 피드백 주시면 정말 감사하겠습니다!!

   해커뉴스에서 봤는데 한국분들이 만든 도구네요. 응원합니다.
   Show GN에도 올려주셨으면 좋겠.. ㅎㅎ

   가입 후 일주일이 지나야 Show GN을 올릴 수 있다고 해서...😭
   7일 후에 얼른 올려보겠습니다!!
   응원해주셔서 감사합니다😊

   아 일단 제가 뉴스로 등록했으니, 나중에 큰 기능 업데이트를 하신 다음에 올려주시면 좋을 것 같습니다. 기대하겠습니다!
"
"https://news.hada.io/topic?id=4968","Knowre 신입 웹개발 커리큘럼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Knowre 신입 웹개발 커리큘럼

   스타트업 입장에서 좋은 엔지니어는 언제나 모자라고, 좋은 엔지니어를 뽑는 일은 항상 어렵습니다. 에듀테크 스타트업 Knowre에서는 10년째 자질이 보이는 신입 엔지니어를 채용해 육성하는 커리큘럼의 운영을 통해 좋은 엔지니어를 육성하고 있습니다.
   부트캠프에서 다 배우기 어려운 지식뿐만 아니라, 이 커리큘럼을 통해 새로운 기술을 공부하는 좋은 관점을 형성하고, 장기적으로 좋은 엔지니어로 성장할 수 있는 습관과 덕목을 갖추는 것을 목표로 하고 있습니다.
   2021년 버전의 커리큘럼에서는 다음과 같은 주제들과 그 뒤에 숨겨져 있는 원리들을 다룹니다:
   형상관리 시스템, HTML과 웹의 기초, CSS의 기초와 응용, 자바스크립트와 DOM, OOP의 기본,
   OOP 특훈, 인터넷의 이해, node.js의 기초, 웹 API의 기초: REST와 CRUD, 서버와 클라이언트의 대화, 인증의 이해,
   RDB의 기초와 ORM, 보안의 기초, 웹 API의 응용과 GraphQL, 정적 분석: 타입스크립트와 린트 시스템, 자동화된 테스트,
   컴포넌트 기반 개발, 번들링과 빌드 시스템, 프로그레시브 웹앱, 웹 어셈블리의 기초,
   도커와 컨테이너, 배포 파이프라인, 서비스의 운영: 로깅과 모니터링, 서버 아키텍쳐 패턴

   예전에 여기서 프론트엔드 면접보고 정말 충격 받았었는데, 48시간 짜리 면접 과제 내주고선 면접 때 리뷰는 5분도 안되서 마치더라고요. 미리 '우린 과제를 냈지만 리뷰는 5분도 안되서 끝납니다'라고 해주셨으면 면접도 안보고 서로 시간 낭비도 안했을 텐데ㅎㅎ

   먼저, 저희 채용 과정에서 불쾌하셨던 부분에 대해 이유불문 CTO로서 사과드립니다.
   저희가 당시 공지드렸듯, 면접 사전과제를 48시간을 드리는 이유는 말 그대로 48시간을 온전히 쏟으시라는 의미는 절대 아니고, 한 시간 내외로 완성하실 수 있는 간단한 과제이나 지원자분의 일정을 최대한 유연하게 가져가실 수 있도록 하는 의미입니다.
   또한 리뷰의 경우 과제의 내용과 설계의도 등에 대해 지원자분께서 충분하게 설명을 해 주신 때, 그리고 제출물에 반영하지 못했지만 더 개선할만한 사항이 없다고 생각하실 때 등의 경우에는 저희도 제출 코드에 관한 리뷰를 길게 드리지 않고 기술면접으로 진행하게 됩니다. 그 이유는 지원자분의 코드의 개선점을 저희가 먼저 나서서 말씀드리는 경우 '고용된 사람도 아닌데 면접자리에서 코드를 품평한다'며 불쾌해 하시는 경우가 실제로 있었기 때문입니다.
   코드에 대한 더 자세한 리뷰를 원하셨다면, 당시 자리에서 말씀해 주셨다면 충분한 시간을 할애하여 저희가 생각하는 개선사항을 말씀드릴 수 있었으며 실제 그렇게 말씀해 주시는 지원자 분들도 종종 있습니다. 이 부분은 취업을 원하시는 지원자분들을 위하여 저희가 면접 프로세스에 어떤 식으로 공식적으로 녹여낼 수 있을지 더 고민해 보도록 하겠습니다.
   질책해 주신 점 감사드립니다.

   오. 이런 좋은 걸 공유해주시다니 멋지네요.

   그리고 데브옵스 커리큘럼 역시 운영중입니다.
   https://github.com/Knowre-Dev/DevOpsCurriculum
   신입 데브옵스 커리큘럼에서는 다음과 같은 주제를 다룹니다:
   데브옵스란 무엇인가, 리눅스와 친해지기, 프로그래밍의 기초, 네트워크의 기초, 나의 첫 웹 서비스,
   형상관리툴, 컨테이너, 여러 대의 서버로 서비스 하기, 배포 자동화 하기, 정적인 컨텐츠 서비스 하기,
   자동화된 테스트, 보안의 기초, DNS와 HTTPS, 마이크로서비스와 람다, 코드로 인프라 관리하기,
   모노리포와 린팅, 배포 파이프라인, 서버 들여다 보기, 로깅과 모니터링, 스트레스 테스트

   이 커리큘럼이 있으면 좋겠다라고 말씀드린적이 있는 것 같은데 굉장한 퀄리티로 만들어주셨군요..!
   좋은 참고자료로 많은 인사이트 얻어가도록 하겠습니다 감사합니다. (전 knowre 구성원 중 1인)

   너무 좋은 자료 공유해주셔서 감사합니다. 준비하기가 막연했는데 차근차근 도전해볼 의지가 생겼습니다. 혹시 질문들에 대한 답변들을 블로그 같은 곳에 정리해도 될까요?

   처음 올리는 것이라, 포럼 성격이나 포맷에 맞지 않다고 생각하신다면 말씀해 주시면 바로 수정하도록 하겠습니다.

   아닙니다 정말 좋네요. 휼륭한 내용 공유 감사드립니다!
"
"https://news.hada.io/topic?id=4971","중국 인터넷 보고서 2021 [52p PDF]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       중국 인터넷 보고서 2021 [52p PDF]

   - 중국은 급속한 성장과 혁신의 기간을 지나서
   ㅤ→ 규제 강화
   ㅤ→ 인구 통계 변화로 포화되는 내수 시장
   ㅤ→ 지정학적 긴장
   ㅤ→ 인터넷 회사를 변화시키는 Push & Pull 요소
   ㅤ등으로 인해 새로운 발전 단계에 진입했음
   - 이 보고서는 이런 요소들로 인해 중국의 기업들이 어떻게
   ㅤ→ 기존 시장에서 벗어나고
   ㅤ→ 비즈니스 모델 중심으로 전환하고
   ㅤ→ 새로운 고객 세그먼트에 집중하고
   ㅤ→ 경쟁력을 유지하기 위해 변화하는 역학(Dynamics)에 적응
   ㅤ하는지를 살펴봄
   1. 중국 인터넷 한눈에 보기 : People , Players, Money
   2. Top Cross Sector Trends for 2021
   ㅤ→ 다방면에서의 규제 강화
   ㅤ→ 중국 기술 IPO의 험난한 길
   ㅤ→ 지정학적(Geopolitical) 긴장 속에 해외 진출 계획 변경
   ㅤ→ 그동안 서비스 받지 못했던 인터넷 사용자 세그먼트에 집중해야 하는 인구 통계 변화
   ㅤ→ Private-Domain 트래픽에 대한 관심 증가 (WeChat등 사용자 친화적인 커뮤니케이션 플랫폼을 이용한 트래픽)

   무료 버전 보고서는 위 내용들까지이고, $400 짜리 프로버전에는 10개의 섹터별 심층분석이 80페이지쯤 더 들어있다고 하네요.
   ㅤ→ E-commerce, content & media, gaming, blockchain, fintech, online education, healthtech, smart cars, 5G, artificial intelligence
"
"https://news.hada.io/topic?id=5012","Ask GN: 요즘 어떤 것에 끌리고 계시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Ask GN: 요즘 어떤 것에 끌리고 계시나요?

   저는 프로그래밍을 하거나, 노래를 듣거나, 샤워를 하다보면 끌리는 걸 운 좋게 찾는 경우가 종종 있습니다. 가끔 그건 프로그램이기도, 아니면 프로젝트이기도 한데요. 요즘 여러분들이 끌리고 계시는 건 무엇인가요?
   저는...
   - Godot 엔진에 끌리고 있습니다. https://godotengine.org/ 오픈 소스라서 마음대로 고칠 수 있는데, 엔진 크기도 컴팩트해서 주말에 한번 만져보려고요! 'ㅁ '
   - Golang에 끌리고 있습니다. 이걸로 서버를 짜고 싶어졌어요!
   - 요즘 헤드폰에도 끌립니다. 젠하이저 660S를 샀어요!
   - 재미있는 SRPG에 끌립니다.
   - 게임을 만드는 직업을 가지겠다는 생각 이후부터, 계속 게임 만드는 거에 끌립니다. 'ㅁ '
   - 소설 쓰는 게 완전 끌립니다. 7달동안 쓰고 있었는데, 요즘은 쓰는 게 점점 더 즐거워 지네요.

   - Rust 는 일단 배워뒀는데 영 손에 익지가 않네요.
   - 작년 초에 뜬금없이 식물에 관심 생겨서 라즈베리파이 가져다가 스마트팜 자동화하려고 했다가 냅두고 있었는데 다시 식물에 관심이 가는중입니다. 라즈베리파이에 Rust 올려서 스마트팜 자동화 해보면 오랫동안 이것저것 쪼물딱거릴수 있지 않을까 싶네요.

   여기 계신분들 모두 대단하네요!
   Golang에, 고도엔진에, 소설에, 워해머에.. 모두 엄청나고 방대한 스펙트럼의 취향들을 가지고 계시군요.
   저에게도 많은 자극이 되네요^^

   - 요즘 이동하면서 파인만의 컴퓨터 강의 책을 재밌게 읽고 있습니다. 물리학자의 관점에서 보는 컴퓨터 강의인데, 양자 컴퓨터의 기반이 되는 가역 계산이나 계산과정에서의 엔트로피, 소요되는 물리적 에너지 같은 것들도 다뤄서 흥미롭습니다.
   - 올해 내로 새 앨범 하나를 만드는게 목표입니다. 얼추 곡은 추려졌는데도 성에 안차 미루고 있었는데... 이젠 마지노선을 정하고 타이트하게 작업하려구요

   왠지 달달한 글이로군요.
   - ask 랑 show 글과 댓글들에 끌립니다 👉👈
   - 벡터 이미지 그리기에 끌립니다. 일러스트레이터를 배울까 싶은데 시동 거는 건 아직입니다.
   - 환경을 바꿀 수 있는 작은 일에 끌려요. 고기를 좋아하지만 다큐 우리의 지구를 보고서 줄여야겠다고 생각했어요. 고기를 안쓰고도 맛있게 요리될 때 조금 뿌듯해요. 하지만... 플라스틱은 줄이고 싶으면서도 자꾸 편의성에 끌리네요 ㅠㅠ
   그런데 와.. 소설 7달 쓰신거면 생각해두신 줄거리의 어느정도를 작성하신건가요? 쓰시는 툴이나 버전 관리법, 들이는 시간, 발행 계획 (독립출판, 소설플랫폼 등) 등 전해주실 팁이 있으시다면 궁금합니다.

   - 소설의 큰 줄거리는 '판타지 세상에서 잘나갔던 시절을 기념하며 적는 회고록' 이었고, 이 소재르 한 4년 전부터 망상만 해오다가, 이번년도 초부터 적고 있습니다. 저 모티브 하나로 여러가지 바레에이션을 칠 수 있었고, 4년 전부터 생각한 만큼 이야기를 엄청 오래 쓸 수 있을 것 같고. 써야 할 것 같습니다.(... )
   - 버전 관리법은...
   - 제가 소설을 몇 번 써보고 자연스럽게 접게 된 적이 몇번 있었는데요. 대부분 완성까지 너무나도 먼 길이라서 지쳐 나가 떨어진 것 같습니다. 그래서 이번에는 좀 더 체계적으로 적기 시작했는데요.
   - 2주마다 1화, 약 2만자에서 3만자정도를 목표로 적고 있습니다. 첫째주 3일간은 DRAFT, 대충 이번화의 이야기가 어떻게 될지에 대한 걸 아웃라이너겸 초안으로 적습니다. 굵직굵직한 사건과 인상깊어야만 하는 장면만 자세하게 적고, 대화문은 그냥 '어떤 내용이 스쳐갔어' 라고만 적어요.
   - 나머지 4일은 그걸 기반으로 글을 적습니다. '어떤 내용'을 등장인물간의 대사로 풀어적고, 인상깊은 내용이 좀 더 인상깊도록 연출도 신경쓰고, 어디라고만 적혀있던 곳을 좀 더 살아있도록 느낄 수 있도록 살을 붙여요.
   - 그리고 2주차부터는 3일간 리뷰를 합니다. 논리적으로 모순되는 내용부터, '등장인물가 집에 나갔다' 같은 단순 오타들을 잡습니다. 4일간 글을 적을 때는 아예 틀린 내용을 적는 게 아닌 이상 고치지 않는 걸 원칙으로 하고 있기에 이 때 그런 것들을 찾아요.
   - 그리고 하루동안 문서를 PDF로 Export 하고, 이번 화를 쓰면서 신경썼던 부분에 대한 코멘터리 문서를 작성합니다. 뭐, 어떤 등장인물이 이렇게 행동할 때 이런 느낌으로 적었다.. 같은 것들요.
   - 그 다음, 제 글을 매번 봐주시는 지인 분이 있어요. 그 분에게 코멘터리와 PDF를 넘겨드립니다. 그리고 그 분이 읽으시는 동안 저는 잠시 쉬면서 프로그래밍을 조금 더 하거나, 심심풀이 단편 글을 적거나, 아이디어를 생각합니다.
   - 그리고 다음주차가 되면 다시 위 단계의 처음으로 돌아가고요, 지인분이 글을 다 읽으신 다음 피드백을 해주시면 감사히 그걸 문서로 남기고. 슬슬 제가 썼던 내용을 까먹을 시점이라 다시 제가 쓴 글을 보는 걸로 1화가 완성됩니다.
   - 들이는 시간은...
   - 대충 하루에 2시간에서 1시간내지로 들입니다. 가끔은 몰아쓰고, 가끔은 저 일정 중 일부가 예상대로 안 흐를 때도 있지만. 2주마다 1화를 내는 건 꼭 지킵니다. 뭔가 더 적고 싶으면 다음 주차에 적습니다. 작업 중인 작업에는 목표를 늘리지 않고, 주기적으로 작업을 끊어서 회고하는 게 7달동안 꾸준히 쓸 수 있는 원동력인 것 같아요.
   - 발행 계획은 ...
   - 당장은 그냥 취미 생활이라서 분재를 기르는 마음으로 적고 있습니다. 제가 취향이 마이너해서, '마법이 있어도 교통부장관도 있지 않을까? 모험가들이 가정을 꾸릴텐데. 초등학생들을 학교에 어떻게 보내지? 비공정? 마차? 기차?' 라는 소재를 좋아하고. '웨스트윙(미국 정치드라마) 완전 재미있는데 이거 판타지판으로 만들면..' 라는 소재도 좋아하고. '몬티 파이썬!' 도 엄청 좋아해서. 그냥 제가 쓰면서 낄낄 대면서 쓸 수 있는 글을 적고 있거든요. 그래서 당장은 없습니다.
   - 그리고 초반에 썼던 글과 지금쓰는 글의 퀄리티라던가, 느낌 자체가 완전히 달라져서 ( 나레이터가 반말에서 존댓말로, 그리고 구어체로 바뀌었습니다 =ㅁ = ) 아마 출판을 하려면 처음부터 다시 써야 할 것 같습니다. 심심하면 초반부부터 깨작개작 적고 있는데, 언제 완성될 지는 모르겠네요.
   - 사용하는 툴은...
   - 저는 Obisidian을 쓰는데요. 스크린브너도 써봤고, Bear도 써봤고,Roam도 써봤고, Notion도 써봤는데. 제가 글을 쓰는 도구로 중요하게 여겼던 점은 1. 빠를 것., 2. 참고를 위해 문서간 연결이 될 것, 3. 어디서든 열어서 볼 수 있을 것. 이었습니다.
   - 스크린브너는 멋진 기능이 많지만, 철저한 근거 위에서 글을 쓰는 게 아니라 즉흥적이고 사례들로 글을 쓰는 제 성격상 불필요한 기능들이 많았고. 또한 어디서든 열어서 볼 수는 없었습니다.
   - Bear는 애플외에는 안 되더라고요. 제가 IT 기기를 좋아해서 노트북이 여러대에 데스크톱도 있고 모바일 디바이스도 여러개에 안드로이드 / IOS도 둘 다 쓰고 있는데. 생각날 때마다 보고 싶을 때 Bear는 그걸 막아주는 바리게이트를 쳤습니다.(...)
   - Roam은 최근까지도 썼지만, 치명적인 문제가 하나 있었는데요. 바로 만자쯤 되면 엔터를 한번 쳐서 새로운 Bullet List를 만들 때마다 엄청 버벅였습니다. 그리고 데이터가 로컬이 아니라 Remote only였고, 그래서 PDF로 뽑는 게 꽤 귀찮았습니다. 로컬에 있으면 바로 Export 할 수도 있는데. Remote다 보니까 매번 뽑고, 이거 관리하는 것도 일이더라고요.
   - Notion도 글을 많이 쓰면 쓸 수록 느리고, 저는 Notion이 개인 데이터베이스/일정 관리 용도로 이미 정착이 되어있어서 뭔가 글을 쓰기에는 적합하지 않았습니다. 그리고 Notion이 연결형 페이지를 만든 것도 얼마 되지 않았고. 지금도 썩 괜찮게 작동하는 것 같지는 않더라고요.
   - Obsidian은 빠르고, 참조를 위해 문서간 연결도 가능하며 빠르게 작동하고, Sync 플러그인이 월정액이긴 하지만 Roam보다 훨씬 싸서 모든 디바이스에서 안정적으로 글을 적거나 볼 수 있었습니다. 그리고 Roam과 다르게 강제 아웃라이너가 아니라 가끔은 아웃라이너, 가끔은 소설과 같이 문단들로 이뤄진 글도 쓸 수 있었던 점은 예키지 않은 보너스였고요.

   꾸준하고 체계적으로 취미활동 하시는것 너무 멋져요!

   우와..... 정성 댓글 고맙습니다!
   2주 단위로 글 쓰시는 것도 그렇고, 더 쓰고 싶을 때 멈춘다던가, 고치지 않는단 원칙들이 흥미로워요.
   출판 계획이 없으면 대중이 읽고 싶은 글보단 내가 읽고 싶은 글을 써서 글 쓰는 과정이 보다 자유로울 것 같아요.
   obsidian 언급하시는 것 몇번 봤는데 소설도 이걸로 쓰시는군요. 선택하신 이유 설명해주셔서 고맙습니다.

   달리고 있는데 목적지가 도망치면 체감이 그리 좋지 않더라고여 ㅋㅋㅋㅋ 그리고 소중한 나의 분재를 깎는듯한 느낌으로 쓰니까, 조회수가 어떻던 추천수가 어떻던 별 신경을 쓰지 않게되는 선효과가 있습니다. 전업으로 쓰면 굶어죽겠지만, 당장 취미로 쓰는 것에 제 만족을 넘어선 뭔가를 더 바라고 싶진 않아요. 저는 제 이야기를 더 즐기고 싶거든요.
   도움이 되셨으면 영광입니다 (__ )/

   - 요즘 개발 언어로는 Rust 가 가장 끌립니다. 근데 이 언어로 뭘 만들지 고민이어서, 끌리기만 한다는 게 문제에요.
   - 최근에 가장 끌렸던 Obsidian 으로 노트 도구를 변경했습니다. Daily 플러그인 깔아서 매일 뭐했는지 기록을 남겨보는데 재미나요. iCloud 싱크로 윈/맥/아이폰 모두 싱크 되는 것도 장점
   - Tesla 차를 뽑아서 TeslaMate도 설치해보고 이것 저것 꾸며보고 있습니다. 자잘한 것들 쇼핑하는 걸 좋아하는데, 당췌 편의 장치 아무 것도 없는 테슬라가 오히려 취향에 맞네요 ㅡ.ㅡ; 말도 많고 탈도 많지만 탈수록 끌리는 차에요.
   - 가장 끌리는 취미는 보드게임 피겨 아크릴 도색 입니다. 코로나 시대에 가장 어울리는 혼자 놀기 취미인 듯 해요. 유튜브에서 도색 영상을 보고 계속 배우고 있어요. 코로나가 끝나면 보드게임 돌릴 날을 기약하며 도 닦는 기분이에요.
   - 두번째 끌리는 취미는 피아노 인데요. Simply Piano 앱으로 피아노를 배우고 있습니다. 이 앱 정말 훌륭해요.

   - 저도 Rust가 끌리긴 하지만 어디에 쓸지 깜깜하더라고요(...)
   - Obisidan은 저도 쓰고 있습니다. 데일리 플러그인이 정말 잘만들 것 같아요. 시각적으로 내가 뭘했는지 트레킹이 되고, 게다가 Plain text 기반이라서 그냥 텍스트로도 볼 수 있고요. 저는 Sync 플러그인을 사서 쓰고 있습니다. Roam보다 싼데 Roam보다 좋아요. 버전 히스토리가 무제한 지원이라서...
   - 최근에 카탄 3D를 샀는데 도색 퀄이 너무 좋아서, 단색 피규어들에 색칠을 할까.. 잘 할 수 있을까...라며 고민만 쌓여가고 있습니다. 추석때 친구들이랑 카탄 3D를 하기로 했어요 'ㅁ '/

   요즘 물감이 좋아져서 그다지 어렵지 않습니다. 함 시도해보세요!
   https://orctown-store.com/category/paint-sets/100/ 요런 기본세트로 트라이 해보시는 것도 좋아요.
   이번 테포마 빅박스의 3D 타일들은 Nuln Oil 만 좀 발라줘도 확 좋아질거 같아서, 저도 해보려구요.

   헉. 빅박스 예판 성공하셨군여. 저는 이번 잔여분 노려봤는데 패배했습니다 OTL.
   오오.. 제 사이드 보드게임의 미니어처를 한땀한땀 색칠해봐야겠네요 'ㅁ '! 새로운 끌림을 주셔서 감사합니다 ㅋㅋㅋㅋㅋ
"
"https://news.hada.io/topic?id=5019","공정거래위원회, 구글의 안드로이드OS 시장지배적 지위남용 행위에 2074억 과징금 부과 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            공정거래위원회, 구글의 안드로이드OS 시장지배적 지위남용 행위에 2074억 과징금 부과

   - 경쟁 운영체제(OS) 진입 및 신규 기기 개발을 막은 구글에 2,074억 원 과징금 부과
   - 삼성전자 등 기기제조사에게 안드로이드 변형 운영체제(OS)(포크 OS)* 탑재 기기를 생산하지 못하게 함으로써 경쟁 운영체제(OS)의 시장진입을 방해하고 혁신을 저해
   보도자료 내용
   - 구글은 기기제조사에게 필수적인 플레이스토어 라이선스 계약과 OS 사전접근권 계약을 체결하면서 그 전제조건으로 파편화금지계약 (AFA:Anti-fragmentation Agreement)을 반드시 체결하도록 강제하였다.
   - AFA에 따르면, 기기제조사는 출시하는 모든 기기에 대해 포크 OS를 탑재할 수 없고, 직접 포크 OS를 개발할 수도 없다.
   - 또한, 포크용 앱 개발 도구(SDK)* 배포를 금지하여 포크용 앱 생태계 출현 가능성을 철저히 차단한다.
   - AFA는 단순히 계약서 문구로만 그치는 것이 아니라, 실제로 구글은 AFA 계약을 활용하여 기기제조사가 포크 OS 탑재 기기를 출시하지 못하도록 적극 저지하였다.
   - 이 때문에 거래선을 찾지 못한 아마존, 알리바바 등의 모바일 OS 사업은 모두 실패하였고, 기기제조사는 새로운 서비스를 담은 혁신 기기를 출시할 수도 없었다.
   - 그 결과, 구글은 모바일 분야에서 자신의 시장지배력을 더욱 공고히 할 수 있었다.
   - 이번 조치는 모바일 OS 및 앱마켓 시장에서 향후 경쟁압력을 복원할 수 있는 계기를 마련하였다는 점에서 의의가 있다.

   일반 소비자에게는 AFA 가 있는게 낫지 않을까요? 물론 여전히 제조사가 OS 업데이트를 제공해줘야 한다는 상황은 비슷하긴 하지만 파편화가 덜 되면서 그래도 어느 정도는 개선이 된 것 같기는 한데요.

   흠.. 윈도우에는 왜 가만히 있었죠???

   오픈소스에서 오는 제재군요. 오픈소스 좋네요.

   조금 풀어쓴 설명이 있는 기사를 링크 합니다.
   구글 'OS 무한갑질' 한국서 역대급 제재 https://www.hani.co.kr/arti/economy/economy_general/1011647.html
   ""시정명령 해외도 적용"" 이라는 문구가 눈에 띄네요.

   이렇게 되면 Google 인증 기기와 비인증기기를 제조사에서 같이 만들수 있게 될텐데요.
   이 상황에서 Google이 해당 제조사에 차기 OS 소스코드를 미리 제공할런지 모르겠네요.
   ODM기기은 경우에는 별 상관이 없지만, Android 출시시기에 맞춰서 새 OS를 제공해야 하는 경우에는 Google로 부터 미리 OS소스를 받아서 대응할 필요가 있는데요.
   동일회사에서 비 구글(아마존, 화웨이 등등)의 기기를 개발하게 되면, 차기 OS에 대한 여러가지 정보가 공유될 수 밖에 없을텐데, 구글입장에서는 그리 아름다운 그림은 아니게 되거든요.
"
"https://news.hada.io/topic?id=5032","Javalin - Java와 Kotlin용 경량 웹 프레임워크 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Javalin - Java와 Kotlin용 경량 웹 프레임워크

   - 간단하면서도 훌륭한 개발자 경험, Kotlin과 Java간의 뛰어난 상호운용성 제공을 목표
   - WebSockets, HTTP2 및 Async Req 지원
   - 프레임워크 보다는 라이브러리에 가까움
   ㅤ→ 아무것도 확장할 필요 없음
   ㅤ→ @Annotation , Reflection 등 없음
   - OpenAPI 지원 (Swagger UI / ReDoc 포함)
   - Jetty 위에 몇천줄의 코드로 구성되어 Raw Jetty와 비슷한 성능
"
"https://news.hada.io/topic?id=4955","크롬 93 새 기능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               크롬 93 새 기능

   - CSS Import (Module Scripts) 지원
   - PWA가 URL Handler 등록 가능
   - Multi-Screen Window Placement API 개선
   - 개발자 도구 변경
   ㅤ→ CSS Container Query 수정 기능
   ㅤ→ Web Bundle 프리뷰
   ㅤ→ 문자열의 Copy as JavaScript literal 옵션 추가
   ㅤ→ CORS 디버깅 개선

   - 구글과 MS가 협력하여 CSS Module Scripts 개발 https://news.hada.io/topic?id=4890
   PWA URL Handler 도 MS Edge 팀이 개발한거네요. MS가 크로미움 환경에 계속 기여폭을 넓혀가는듯
"
"https://news.hada.io/topic?id=4947","애플, 아동 보호를 위한 iCloud 사진 스캔 기능 출시 연기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  애플, 아동 보호를 위한 iCloud 사진 스캔 기능 출시 연기

   - 지난달 발표한 아동학대자료(CSAM) 배포를 막기 위한 NeuralHash 기반 스캐닝 및 메시징 경고 기능
   - 고객 및 비영리 단체, 연구원등의 피드백을 기반으로 의견을 수집하고 개선하기 위해 출시를 몇달간 연기한다고 밝혀
   - EFF, Edward Snowden 및 여러 보안 연구자, 심지어 몇몇 애플 직원들도 비난한 바 있음

   애플, 아동 보호를 위한 새로운 안전기능 도입 https://news.hada.io/topic?id=4775
"
"https://news.hada.io/topic?id=4941","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   목요일 오후에 화이자 1차 접종을 마친 뒤 근 사흘간 축 늘어져서 아무것도 못하고 있다가 (그나마 백신 휴가가 있었기에 망정이지…) 오늘은 최근 방영을 시작한 EBS 《위대한 수업》 강연을 한번에 몰아서 봤습니다. 이번주에 방영한 것은 하버드대 조지프 나이 교수의 리더십 관련 특강이더군요.

   후후... 이번 주는 그만 침대에 늘러 붙었다가 사이드 프로젝트 이슈 목록을 보고 어떻게 주말이 끝나기 전까지 이걸 없앨 수 있을까 전전긍긍하고 있습니다... 스마트폰으로 뻘짓하는 건 별로 하고 싶지도 않고, 얻는 것도 없는데.. 가장 편한 방법이라 계속 선택하게 되는 것 같아 이걸 어찌 조질지 고민중입니다(...)

   12년만에 새 차를 뽑았습니다. 테슬라Y!
   다음주에 차가 나오는 터라 200페이지 쯤 되는 매뉴얼을 정독해 보려고 해요.
   다들 그러는거 같은데.. 차를 산거 같지 않고, 전자제품 주문 해놓은 기분이에요.
   재미난 장난감이 하나 생기는 거 같아서 기대기대 중입니다.

   오오! 추카드립니다! 'ㅁ '/ 저도 차에는 관심이 없는데 테슬라는 계속 눈에 밟히더라고요. 어떤 분이 초거대 보조배터리라고 한 이후부터(... ) 제가 열 효율이 구려서 조금만 움직여도 땀이 나고 몸이 가려워서 외출을 별로 좋아하지 않은데 OTL. 테슬라가 있으면 뭐가 바뀔... 까? 라는 생각을 가끔 합니다. 게다가 차 중간에 아이패드 비스무리한 터치 스크린이 너무 끌리더라고요(... )

   옷.. 전 올초에 테슬라 모델 3 사서 와이프랑 딸이 열심히 타고 다닙니다.. ㅠㅠ 편한부분은 엄청 편한데(브레이크 밟을 필요가 없는 부분이 재일) 불편한건(와이퍼 작동방법, 소음등등) 또 엄청 불편하네요.
"
"https://news.hada.io/topic?id=4983","Microsoft Start - 개인화 뉴스 서비스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Microsoft Start - 개인화 뉴스 서비스

   - 개인별 관심사 기반으로, 신뢰하는 소스로 부터의 뉴스를 맞춤 전달
   - ""Personalize(맞춤화)"" 버튼으로 관심사 선택
   ㅤ→ 뉴스 / 엔터테인먼트 / 스포츠 / 금융 / 라이프 / 자동차
   - 숨기기로 특정 소스 차단 가능
   - 다양한 경로로 접근 가능
   ㅤ→ 웹사이트 (MSN 도메인 이용)
   ㅤ→ 모바일 앱 (iOS/Android)
   ㅤ→ 윈도우 10 태스크바
   ㅤ→ 윈도우 11 위젯
   ㅤ→ Edge 의 새 탭

   근데 클릭하는 기사에 따라서 점점 더 개인화된다고는 하는데..
   관심사를 선택했음에도 불구하고, 그쪽 뉴스만 보이는게 아니군요.
   보고싶지 않은 이시간 주요 기사들을 다 보여버려서.. 그닥 보고 싶은 마음이 들지가 않게 만드는 효과가 있네요 ㅡ.ㅡ;
"
"https://news.hada.io/topic?id=4951","애플, '리더 앱'에 웹사이트 링크 허용 예정 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       애플, '리더 앱'에 웹사이트 링크 허용 예정

   - 일본공정거래위원회(JFTC) 조사 종료에 따라 앱스토어 약관 업데이트 예정
   - “리더 앱” 개발자들은 앱 내에 웹사이트 링크를 포함하여, 이용자들이 웹사이트에서 손쉽게 계정을 설정하거나 관리할 수 있음
   ㅤ→ 리더 앱 : 이전에 구매한 콘텐츠 또는 디지털 잡지, 신문, 책, 오디오, 음악 및 비디오 등의 콘텐츠 구독 서비스를 제공하는 앱
   - 리더 앱이 인앱 디지털 상품 및 서비스 구매 기능을 제공하지 않기 때문에, Apple은 JFTC와의 합의를 통해, 해당 앱 개발자들이 앱 내 그들의 웹사이트로 연결되는 링크를 공유할 수 있게 허용함
   - 2022년 초에 적용되기 전, Apple은 자사 지침 및 심사 절차 업데이트 예정

   - 애플, 외부 결제방법 이메일로 제안할 수 있게 App Store 약관 업데이트 https://news.hada.io/topic?id=4905
   - '앱마켓 사업자 결제방식 강제 금지' 법안 국회 본회의 통과 https://news.hada.io/topic?id=4925
   위 이슈 들과 엮어서 보면 콘텐츠 앱들(음악,웹툰,소설)등이 수혜를 입게 되겠네요.
"
"https://news.hada.io/topic?id=5010","이모티콘 서비스는 왜 MSA를 선택했나?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         이모티콘 서비스는 왜 MSA를 선택했나?

   레거시 청산을 위한 MSA 도입 히스토리를 공유하려고 작성했습니다.
   설계를 도입하게된 고민의 출발은 서비스 유지보수의 관점에서 시작한거라,
   새로 MSA를 만드시는 분들보다는 레거시를 개편하는데 관심있으신 분들이 참고하시면 좋습니다.
   MSA 도입 인프라 환경으로는
   - kubernetes + istio + argocd(kustomization)
   - spring cloud gateway
   서비스 주요 기술환경은
   - spring-webflux-coroutine
   - r2dbc
   - grpc
   등등 입니다.
   이후에 event driven의 도입을 하기 위해 또 다른 삽질을 준비하고 있습니다.
   구축되면 그 때도 공유할 수 있으면 좋겠네요.
   부족한 내용에 궁금하신 것 있으시다면 댓글 남겨주세요. 가능한 답변을 드리겠습니다~
   ps. 공유 자료 제목은 과거 유명한 발표자료의 오마쥬입니다 ㅋ

   앗.. ㅎㅎ
   덩치 큰 서비스를 개선하는 과정과 선택하신 기술들 이야기를 써주셔서 재밌게 잘 읽었어요~
   집 짓는 걸로 많이들 비유하지만 주로 설계에만 집중하는데 감리 단계까지 있단 점도 좋았어요.
   좋은 글 고맙습니다.

   글 읽어 주셔서 감쟈합니다 ~ :=)
"
"https://news.hada.io/topic?id=5058","OpenSSL 3.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            OpenSSL 3.0 릴리즈

   - 1.1.1 에서 훌쩍 버전 점프하고 새로운 버저닝 스킴 적용
   - 기존 버전과 잘 동작한다면 리컴파일만으로 적용 가능할 것 (deprecated 워닝들 제외하고)
   - Apache 2.0으로 재 라이센스 됨
   ㅤ→ 기존엔 OpenSSL과 SSLeay 듀얼 라이센스 였음
   - Provider 컨셉을 추가 해서 5개의 표준 Provider 제공
   ㅤ→ Default : 모든 자체 구현 알고리듬들
   ㅤ→ Legacy : MD2, DES 같이 더 이상 잘 사용되지 않거나 권장하지 않는 알고리듬들
   ㅤ→ FIPS : FIPS 표준(FIPS140-2)에 맞는 알고리듬들 서브셋
   ㅤ→ Base : Default의 비암호화 알고리듬들 서브셋
   ㅤ→ Null : 알고리듬 구현체 없는 프로바이더. 기본 프로바이더 들이 사용되지 못하도록 지정하는 용도
   - Low Level API 사용 비권장(컴파일시 워닝) : 미래 버전에서는 제거 될 것

   기존 OpenSSL 및 SSLeay 라이센스 내용
   https://docs.microsoft.com/ko-kr/gaming/…
   이게 라이센스가 기존 오픈소스와 좀 달라서 재배포 시에 문제가 있었는데 아파치로 드디어 바뀌었네요.
   바뀐다는 얘기는 몇년전부터 있었습니다. https://zdnet.co.kr/view/?no=20170330175652
   2.0이 없이 3.0으로 간 이유는, 기존에 OpenSSL FIPS 모듈이 2.0.0 버전을 사용해서 라고
   https://www.openssl.org/blog/blog/2018/11/28/version/
"
"https://news.hada.io/topic?id=5022","데스크탑 구글 검색 다크모드 적용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           데스크탑 구글 검색 다크모드 적용

   - 검색 설정에서 Device Default 또는 Dark, Light 로 원하는 모드 설정 가능
   - 다음 몇주간 순차적으로 롤링아웃 예정
   - 구글 홈페이지, 검색 결과 페이지, 검색 설정 페이지 등에 적용

   다소 늦은듯 하지만 이제라도 적용 되네요. 제 계정은 아직 인듯 ㅠ
"
"https://news.hada.io/topic?id=5036",".xyz 도메인의 위험성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             .xyz 도메인의 위험성

   - xyz 도메인 이메일 계정은 스팸으로 인식이 많이 됨
   - 이메일 내에 .xyz 링크가 있는 것 만으로도 스팸으로 인식되는 경우가 많음
   - xyz 도메인에서 com 으로 변경한 것 만으로 오픈율 및 전환율 증가
   - 문자 메시지에 .xyz 를 포함하는 것 만으로도 자동으로 전송이 실패하는 경우가 있음
   - xyz 도메인은 사용자 인식도 좋지 않음
   - 일부 조직에서는 .xyz 도메인 전체를 블랙리스트에 올려 차단 하는 경우도 있음
   - 페이스북/레딧 등에서도 xyz 링크를 스팸으로 인식
   - 최상위 도메인 추천
   ㅤ1. .com, .org, .net
   ㅤ2. .io, .ai
   ㅤ3. 그외 비싸고 덜 알려진 도메인들
   - .xyz 가 아주 저렴하기 때문에 스패머들이 좋아함
   ㅤ→ namecheap 에서 보면 .xyz 는 $1, .ai는 $70 임

   참고로 .ai 확장이 요즘 가장 인기입니다.
   국내외 빅테크 기업들의 경우에는 솔루션이나 브랜드를 .ai로 작명하고
   스타트업들은 기존의 .com을 버리고 .ai로 리브랜딩하는 경우가 많아요.
   Myntelligence.com -> mint.ai
   YellowMessenger.com -> yellow.ai
   Expertsystem.com -> expert.ai
   Graphcore.com -> graphcore.ai
   세일즈포스 Einstein.ai, Analytics.ai
   마이크로소프트 Luis.ai, Cris.ai, Blis.ai
   네이버 Clova.ai
   카카오 Kakao.ai
   구글 Coral.ai, Vertex.ai, Assistant.ai
   아마존 AWS.ai

   저는 .app 도메인 좋아합니다. 물론 .com 을 쓸 수 있다면 .com 을 쓰겠지만...
   .app 쪽은 아직 경쟁이 덜하네요. https만 사용 가능합니다.

   원하는 .com 도메인은 살 수가 없더라구요. 그래서 .io 를 선택했습니다 ㅎㅎ 힙한 느낌도 나고!

   사내에서 소말리아 국가 도메인을 차단해 놓아 노션(notion.so) 이 열리지 않았다는 얘기가 생각나네요.

   아 그러고보니 .so 도메인이 소말리아 였군요. 한번도 생각해본적이 없네요.
"
"https://news.hada.io/topic?id=5007","가장 오래된 활성 토렌트 파일이 곧 18주년","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        가장 오래된 활성 토렌트 파일이 곧 18주년

   - BitTorrent 초기인 2003년에 배포된 ""The Fanimatrix"" 토렌트는 아직도 여러명에 의해 시딩 중
   - 그 시절 ""매트릭스 팬이 만든 128MB짜리 영화 파일""을 배포하기에는 빗토렌트가 유일한 대안이었음
   - 빗토렌트는 뛰어난 배포 메커니즘 이지만, 누군가 한 명은 시딩을 해야만 계속 공유가 가능. 즉, 대중의 관심이 떨어지면 죽어버리지만, 어떤 토렌트는 평생 유지될 수도 있음
   - Fanimatrix 는 뉴질랜드의 한 그룹이 $800 예산으로 9일 만에 만든 필름
   - 그 시절에는 무료 비디오 공유 서비스가 없었음. 유튜브 역시 만들어지기 이전
   - 뉴질랜드는 밴드위스도 비싸서 개인 서버 호스팅도 불가능 했음. 그래서 찾은게 빗토렌트
   - 첫 주에만 7만명이 다운 받아서 대성공
   - 지금은 무료 스트리밍 옵션이 많아서 바보 같아 보일 수도 있지만, 아직도 이 토렌트는 공유되고 있고, 이제 인터넷 역사의 일부가 되었음

   현실에서 아무도 기억해 주는 사람이 없으면, 사후 세계에서도 사라져 버린다는...
   영화 코코(Coco)가 생각나네요.

   - BitTorrent 20 주년 : 파일공유 혁명의 시작 https://news.hada.io/topic?id=4556
   - Academic Torrents - 토렌트로 연구자료 공유하는 사이트 https://news.hada.io/topic?id=1291
"
"https://news.hada.io/topic?id=5061","캐시노트 프론트엔드 디버깅 사례 공유 - 제 컴퓨터에서는 됐었는데요...","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                캐시노트 프론트엔드 디버깅 사례 공유 - 제 컴퓨터에서는 됐었는데요...

   지난 몇달간 캐시노트(https://cashnote.kr) 프론트엔드 팀이 React 프로덕을 운영하면서 경험한 3가지 CSS 문제를 디버깅한 사례 공유
   - 모두 create-react-app 에서 CSS module을 사용하면서, 개발 환경에서는 경험하지 못했던 문제를 운영 환경에서 발견했다는 공통점이 있음
   문제 1: 특정 페이지에 진입한 뒤부터 모든 페이지에서 이미지가 일그러지는 현상
   - CSS module이 해싱하지 못하는 형태로 CSS 스타일을 정의한 것이 원인
   - 이런 스타일을 정의하지 못하게 stylelint plugin 추가하여 해결
   문제 2: 개발 환경과 운영 환경에서 CSS 스타일이 다르게 나오는 현상
   - 특정 컴포넌트가 디자인 시스템 컴포넌트의 스타일을 오버라이드하고 있는데, 운영 환경에서는 디자인 시스템 컴포넌트의 CSS가 주입되는 타이밍이 더 늦어서 스타일 오버라이드가 되지 않은 것이 원인
   - 처음에는 Webpack 설정을 수정하여 해결했지만 운영환경 퍼포먼스를 희생하는 결정이라 마음에 들지 않았음
   - 다른 방법을 찾아보다가 디자인 시스템 쪽의 번들러(rollup) 설정 변경으로 오버라이드가 가능하게 할 수 있음을 발견. 디자인 시스템이 주입하는 CSS는 항상 head의 상단에 위치하게 변경했음
   문제 3: 개발 환경에서 실행할 때는 문제가 없는데 프로덕션 빌드는 실패하는 현상
   - Webpack 플러그인이 CSS Chunk를 만드는 과정에서, 두 CSS 파일이 서로 다른 순서로 import되고 있으니 두 청크에서 서로 다른 스타일 결과물이 나올 수 있다는 경고 때문에 운영환경 빌드가 실패
   - 캐시노트가 CSS module을 쓰고 있으니, 각 CSS 파일들은 모두 독립적으로 작동하므로 order conflict가 서로 다른 스타일 결과물을 만들어내지 않음. 따라서 경고를 무시하도록 Webpack 설정을 변경
   뒤의 두 문제는 표면적 현상은 달랐지만, “create-react-app 이라는 프론트엔드 프레임워크가 운영 환경에서 동작하는 방식에 대한 이해 부족”에서 비롯된 문제라는 점에서는 비슷함
   - 근본적 개선을 위해, CRA와 Webpack에 대한 이해를 높이고, 나아가 CRA를 걷어내기 위한 준비를 하고 있음

   재미난 경험 공유 감사합니다. 역시 로컬에서는 항상 다 잘 되죠!

   감사합니다. 글을 간단히 요약하는 것도 쉽지는 않네요 ㅎㅎ
"
"https://news.hada.io/topic?id=5015","Apple, iPad mini 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Apple, iPad mini 공개

   - 8.3인치, USB-C 포트, 5G, 터치ID, 애플 펜슬2
   - 핑크, 스타라이트, 퍼플, 스페이스 그레이
   - WiFi 293g, 셀룰러 297g
   - A15 Bionic 6코어 CPU, 5코어 GPU
   - 16코어 뉴럴엔진
   - 2266 x 1488
   - 12MP 와이드 카메라, ƒ/1.8 조리개
   - 12MP 울트라 와이드 전면 카메라, 122° 시야각, ƒ/2.4 조리개
   - 센터스테이지 지원
   - 스테레오 스피커 내장 (가로화면)

   미니 가격이 사악하네요.
   5G 모델을 선택하고 64G 선택 후 펜슬 넣고 캐어 넣으니 1,093,000원

   센터스테이지 인상적이네요.
   음... 화자가 가장자리로 가면서 가리키는 부분을 넗게 보여주는데 이건 마치 강의자가 뒤 칠판(?)을 설명하는 느낌인데 이것도 알아서 화각이나 프레임을 결정하는건가 싶네요

   이번 행사의 메인은 아이패드 미니 인듯 합니다.
   프로랑 비슷하게 각진 디자인에, USB-C 와 터치ID, 애플펜슬2 까지 해서 가장 쓰기 좋은 모델이 된듯!
   욕심 내보자면 아이패드 프로 12.9 랑 미니를 둘다 가지고 외출할때 펜슬만 옮겨가며 쓰면 좋을듯 싶네요.
"
"https://news.hada.io/topic?id=5028","Amazon One 손바닥 인증 시스템, 처음으로 공연장에 적용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Amazon One 손바닥 인증 시스템, 처음으로 공연장에 적용

   - 손바닥을 스캔하는 기술로 비접촉 결제 및 인증용으로 사용가능
   - 티켓팅 회사 AXS와의 파트너십으로 콜로라도의 Red Rocks 야외 원형극장에서 입장 용도로 사용할 예정
   - Amazon Go / Whole Food 외의 장소에 처음으로 설치 되는 것
   - 아마존은 비접촉 카드나 QR보다 편하다고 주장하고 있으나, 많은 개인정보 보호 전문가들은 회의적
   ㅤ→ 기술이 나온지 1년이 지났지만, 수만명의 가입자가 가입하고 아마존 스토어에서 사용했다 정도에 그침
   ㅤ→ 실제로 손바닥 등록을 하면 $10 크레딧을 주고 있기도 함

   개인정보 이슈가 꽤 있을거같은데요?
   조선족 지문관련해서도 우리나라에서는 꽤 말이 있었잖아요?
   우리 나라야 주민등록증 만들때 열손가락 다 지문 날인하니까 거부감 없으려나요?
   --
   아 손전체가 아니라 손바닥이군요? 그냥 손바닥 +다섯 손가락 지문 솔루션은 없나 모르겠네요.

   지문, 얼굴, 홍채와 비교하여 어떤 장단점이 있을지 궁금하네요

   지문은 접촉식이라.. 요즘 상황에는 못쓸듯 합니다. 얼굴/홍채 보다는 솔직히 장점이 뭔지 잘 모르겠어요 ㅎㅎ

   관심이 있어서 찾아보니 얼굴, 지문, 심지어는 홍채보다도 (다른 사람의) 손바닥 바이오 정보를 훔쳐내기 어렵다는 것 같습니다. 적외선으로 정맥까지 알아내야하는 등등

   - 아마존, 손바닥으로 인증하는 Amazon One 공개 https://news.hada.io/topic?id=2934
"
"https://news.hada.io/topic?id=5050","lowdb 3.0 - 간단한 로컬 JSON DB","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       lowdb 3.0 - 간단한 로컬 JSON DB

   - Node, Electron, 브라우저 에서 사용 가능
   - 사용하기 쉬운 API
   - 일반 JS로 데이터 쿼리 및 수정 가능
   - TypeScript 지원
   - Atomic Write
   - Hackable
   ㅤ→ 어댑터를 통해서 저장소 변경, 파일 포맷 추가(JSON/YAML), 암호화 추가 등 가능
   ㅤ→ lodash, ramda 등으로 확장 가능
"
"https://news.hada.io/topic?id=4990","서로 성장하는 기술 면접 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           서로 성장하는 기술 면접 만들기

   기술 면접을 보았다는 이야기는 많지만 기술 면접을 만들었다는 이야기는 적습니다. 기술 면접을 만들면서 한 고민들을 글로 정리해보았습니다.
   회사에 지원해서 면접을 준비하시는 분들, 저처럼 준비가 안 된 상태로 리드가 된 분들, 기술 면접을 고민하시는 현업 개발자분들에게 도움이 되었으면 합니다.
   - 우리는 왜 채용을 하는가?
   - 무엇을 어떻게 확인할 것인가? (면접 과정의 딜레마, 기조 설정)
   - 질문과 코딩 테스트 설계하기
   - 코딩 테스트를 만들면서 고민했던 내용들
   - 기술 면접이 끝난 후에 반드시 해야하는 일이 있다면?
"
"https://news.hada.io/topic?id=5063","Amazon, 새 Kindle Paperwhite 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Amazon, 새 Kindle Paperwhite 발표

   - 3년만의 업데이트. 9/28 이벤트에서 공개예정. 프리오더 중
   - 6.8” E-Ink(기존 6”), 10주 지속 배터리, 20% 빠른 페이지 전환
   - 8GB, 내장 백라이트, 300PPI, IPX8 방수
   - USB-C 포트로 2.5시간에 완충 가능
   - Kindle Oasis 에 있던 색온도 조절 기능 추가 : White ~ Amber(호박색)
   - Signature Edition 추가 : $189, 기본 모델은 $139
   ㅤ→ Qi 무선충전, 32GB 저장소, 자동 조절 조도센서
   - 새로 변경되는 Kindle 소프트웨어
   ㅤ→ 상단 스와이프 다운 메뉴

   프리오더 버튼에 손이 올라갔다가, 방전상태로 놀고있는 킨들 3세대가 생각나서 접었습니다...

   그래서 trade-in 도 해준다고 합니다 ㅎㅎㅎ

   생각해보니 무선충전이 상당히 매력적일 것 같네요.
   조금만 충전해도 많이 볼 수 있는 매체일 것 같아서

   그런데 한번 충전하면 한두달을 써서 굳이 무선이 필요할까도 싶어요. 전 조도 센서때문에 signature가 고민되네요.
"
"https://news.hada.io/topic?id=5003","My Room iny Room in 3D

   - Bruno Simon 의 최신 작품
   - WebGL ( Three.js ) + Node.JS 오픈소스
   - 방 전체의 색상(Night/Neutral), TV/Desk/PC 조명
   - 커피 스팀의 길이/빈도/색상
   - TV화면의 로고등을 조정 가능

   멋지네요. 성능과 인터넷 속도가 더욱 빨라진다면 설치가 아닌 로딩만으로 여러 복잡한 3D 프로그램을 구동하는 시대도 올 것 같습니다.

   Blender에서 3D로 만들고 WebGL로 임포트해서 만드는 과정을 Twitch 에 찍어서 올려놨습니다.
   https://www.twitch.tv/videos/1110939896

   비디오가 3시간 짜리길래 이걸 3시간만에 했다고? 싶었는데.. 무려 50시간 가량 ( 20 * 2~3시간 ) 찍은거네요.

   웹 브라우저에서 3D 구현을 멋드러지게 하는 걸로 예전 부터 유명했죠.
   자동차를 조정해서 둘러보던 페이지가 아직도 기억에 남습니다.
   - Bruno Simon 의 3D 홈페이지 https://news.hada.io/topic?id=794
"
"https://news.hada.io/topic?id=4988","CSAM, 사람들은 애플에게 어떤 점을 걱정하는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      CSAM, 사람들은 애플에게 어떤 점을 걱정하는가?

   CSAM 사건은 몇 주전부터 큰 논란이 되었는데요. 이 사건이 꽤 기나길었기 때문에, 이를 옹호하는 분들도. 이를 비난하는 분들도 조금 다른 핀트를 잡는 경우가 많이 보였습니다. 그야 이건 단 한가지 이슈는 아니었기 때문이라고 생각하는데요.
   1. 그럼 저거 조금 바꾸면 내 아이폰에 있는 정보, 다 훔쳐 볼 수 있는 거 아니야? (클라우드가 아니라 아이폰에서 확인하니까!)
   2. CSAM이라는 걸 증명할 증서를 주는 게 정부 기관인데, 그 정부 기관이 자기들 마음에 안 드는 사람들 잡으려고 그 증서에 자기들 원하는 걸 넣으면. 애플이 그걸 알 수 있어? 그리고 알 수 있더라도 왜 너네가 결정해?
   3. 그리고 CSAM에 사용되는 검사 방법 있잖아. 그거 돌고래 사진도 아청법에 걸리는 사진으로 인식할 수 있던데? 봐봐!
   이 3가지 문제에 대해서 어쩔 때는 1에 대해 걱정하는 사람도, 2에 대해 비난하는 사람도, 3이 치명적이라는 분들도 있었습니다. 역으로 1에 대해 걱정하고 있는데 3은 선동이라거나(... ) 3에 대해 비난하는데 1때문에 안전하다라고 말이 나온 경우도 많았던 것 같네요.
   이 글은 최대한 사건 자체에 어떤 논쟁이 있는지 살펴 보기 위해 적었습니다. 이 글의 목적은 애플이 사실 삼각형 안에 눈이었고 권위주의 정부와 합작하여 세계를 지배할 음모를 꾸민다고 설득하려는 것도 아니고(... ) 애플은 사실 순박하고 순결하며 이걸 비난하는 놈들은 죄다 성범죄자라며 비난하는 목적이 아닙니다. 만약 그렇게 보였으면, 제가 글을 잘못씀으로써 벌어진 참사로 (... ) 지적해주시면 감사하겠습니다.
   이 글은 우리의 개인 정보가 기업들이 어떻게 관리하려하고, 왜 이렇게 관리하려고 하고, 그걸 정부에게 어느 정도까지 넘기려고 노력했으며. 개인정보와 공공성 사이에서 기업은 어떻게 고민을 하고, 우리들은 그걸 어떻게, 그리고 어느 정도 받아드리는 지 고민하는 계기가 되셨다면면 그것보다 더 큰 보람은 없을 것 같습니다.
   그럼 재미있게 읽어주세요. 'ㅁ '/
   (루리웹에 올라온 글이랑 똑같지만 괜찮습니다! 그것도 제가 썼거든요!(...) )

   개인적으로는 1번도, 2번도, 3번도 아닌 신뢰의 문제라고 생각합니다.
   똑같은 기술을 가지고, 똑같은 일을 한다고 해도 애플이 할 때와 화웨이가 할 때 사람들이 받아들이는 다르듯이.
   애플을 신뢰 할 수 있는가? 저는 신뢰하기 어렵다 (https://www.ciokorea.com/news/194309) 라는 관점에서 걱정이 됩니다.
   (오픈소스라면 코드를 볼테지만, 볼 수 없으니 신뢰 할지 말지 뿐이죠)

   2번을 살짝 파생한 느낌이군여. '너희들(민간기업)이 뭔데 우리한테 핸드폰을 팔았다는 이유로 우리의 정보를 어떻게 하냐마냐야?' 라는 근본적인 의문을 해소하려면 공개된 재단이나 제 3자의 지속적인 모니터링이 필요한데. 애플은 최근 IOS 내부를 뜯는 회사 상대로 고소를 했었죠(... )
   보안의 폐쇄성이 커튼 장막 뒤에서 도대체 무슨 일이 일어나는지 의문만 자아내는 것 같습니다.

   좋은 칼럼 감사합니다.
   다만 저는 긱뉴스의 톤이 ""tldr with original source link"" 라고 생각하기 때문에 이 소개글에 (3가지 의문에 대한) 짧은 답변이 있었으면 좋겠다는 의견입니다. 지금의 소개글은 ""궁금하면 들어와"" 톤인듯 해서요.

   이 글은 :
   - 왜 내 집(아이폰)에서 바깥(클라우드)로 나가는 물건(사진)들을 바깥이 아닌 내 집에 들어와서 검문하느냐 (아이클라우드에 올리는 사진들을 '아이폰'에서 검사함)
   - 그래서 그 검문하는 경찰관은 왜 개와 고양이를 구별하지 못하는가 (뉴럴 해시 문제)
   - 그래서 경찰관이 문제되는 것만 잡는다는 보장은 어디에 있는가 (애플의 신뢰성 문제)
   주장들에 대해서 소개하는 글입니다.
   ---
   다음에 쓸 때는 요렇게 =ㅁ = 해야겠군여. 좋은 피드백 감사합니다.

   우왕 ""tldr with original source link"" 표현 좋네요. 감사합니다.
   제가 말씀하신대로 요약을 포함해서 주로 올리긴 하는데요.
   기본 취지는 다양한 뉴스들이 등록되었으면 하는거긴 해서.. 어떤글이든 편하게 올려주셔도 됩니다.
   (다들 요약하는거 자체를 부담스러워 하시긴 하더라구요. ㅠㅠ )

   사실 글 내용은:
   1. 그럼 저거 조금 바꾸면 내 아이폰에 있는 정보, 다 훔쳐 볼 수 있는 거 아니야? (클라우드가 아니라 아이폰에서 확인하니까!)
   2. CSAM이라는 걸 증명할 증서를 주는 게 정부 기관인데, 그 정부 기관이 자기들 마음에 안 드는 사람들 잡으려고 그 증서에 자기들 원하는 걸 넣으면. 애플이 그걸 알 수 있어? 그리고 알 수 있더라도 왜 너네가 결정해?
   3. 그리고 CSAM에 사용되는 검사 방법 있잖아. 그거 돌고래 사진도 아청법에 걸리는 사진으로 인식할 수 있던데? 봐봐!
   이 3가지 주장에 대한 근거들을 나열한 거라서, =ㅁ =. 글을 애매모하게 적었네요. 그냥 저 3개만 남겨 놓을 걸.. ;ㅁ ;

   앗. 좋은 의견 감사합니다.
"
"https://news.hada.io/topic?id=4978","AWS에서 아주 저렴하게 온디맨드 Minecraft 서버 운영하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  AWS에서 아주 저렴하게 온디맨드 Minecraft 서버 운영하기

   - 사용할 때만 가동하고 내리는 방식으로 한달 20시간 운영시 $1.5/월
   - 워크플로우
   ㅤ1. 마인크래프트에서 서버 접속 시도 → 타임아웃
   ㅤ2. DNS 룩업쿼리가 Route 53에 기록됨
   ㅤ3. CloudWatch 가 쿼리를 Lambda에 포워딩
   ㅤ4. Lambda가 ECS Fargate 서비스의 Task를 1로 변경
   ㅤ5. Fargate가 Minecraft/Watchdog 두개의 컨테이너 실행. Watchdog이 DNS 레코드를 새로운 IP로 업데이트
   ㅤ6. Watchdog 이 Twilio 로 메시지를 보내거나, SNS 토픽으로 서버가 레디되었다고 알려줌
   ㅤ7. 마인크래프트 에서 서버리스트 리프레시, 서버 접속 가능
   ㅤ8. 연결없이 10분 또는 마지막 클라이언트 연결 해제후 20분이 지나면 Watchdog 이 Task를 0으로 수정하고 셧다운
   - 요구사항
   ㅤ→ AWS 계정
   ㅤ→ Route 53에서 서빙되는 퍼블릭 도메인 네임
   ㅤ→ Minecraft Java Edition
   - 비용 상세
   ㅤ→ DNS Zone 당 $0.5
   ㅤ→ Fargate Spot $0.00149 / 시간, Fargate 일반 $0.049 / 시간
   ㅤ→ 총: $1.5 / 월 (월 20시간 사용시)

   https://github.com/comfuture/mc-server
   몇 년 전에 제가 했던 일과 비슷해서 올려봅니다. 이때 이후 흥미가 떨어져서 나머지부분 진행을 마저 못했네요..

   덜덜 오히려 마인크래프트 성인인증 받는게 더 어려워보이는군요

   AWS 서비스들을 묶어서 이용하는 컨셉이 재미나서 옮겨봅니다만..
   Oracle 이 평생 무료 서버를 제공해서, 거기서 실행하면 그냥 무료로 운영도 가능하다고 하네요.
   How To Set Up and Run a (Really Powerful) Free Minecraft Server in the Cloud
   https://blogs.oracle.com/developers/post/…
"
"https://news.hada.io/topic?id=4949","애플, RISC-V 프로그래머 구인중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          애플, RISC-V 프로그래머 구인중

   - RISC-V High Performance Programmer 구인 공고를 게재
   ㅤ→ 5년 이상의 시그널처리/머신러닝 저수준 알고리듬 개발 경력 필요
   ㅤ→ RISC-V ISA 및 ARM Vector ISA에 대한 지식 요구
   - 머신러닝, 컴퓨터비젼, 자연언어 처리등을 위한 RISC-V 솔루션을 만드는 SW/HW 크로스 펑션 팀이 이미 운영중이라는 것을 알수 있음

   이미 핸드폰용으로 쓰이는 메이져 회사의 SOC 안에 RISC-V가 없는 제품은 없을거에요... SOC안에도 수십개의 코어가 들어가고, CortexM같은게 슬슬 대체되고 있는것 같습니다.
   개발자는 피곤합니다... 그냥 ARM만 쓰다가 은퇴하면 안되겠니?

   M1은 RISC-V의 상승을 예고한다 https://news.hada.io/topic?id=3447
   위 글에서 ""ARM 은 RISC-V 보조프로세서 군단을 지휘하게 될 것"" 이라고 예견했는데,
   ARM으로 메인CPU를 가속하고, 다른 보조프로세서들은 RISC-V 기반 고성능으로 가는 모양이 맞지 않을까 하네요.
   이미 애플내에 RISC-V 팀이 가동중이라는 사실이 흥미롭네요.

   그러고보니 RISC-V 상용칩 만드는 SiFive에 Chris Lattner가 사장으로 있는데
   애플이 SiFive 인수해서 다시 조인하게 되는 그림도 그려볼수 있는거 아닌가 생각이..
   https://www.linkedin.com/in/chris-lattner-5664498a/
"
"https://news.hada.io/topic?id=4992","Pumpkin OS - PalmOS의 x64 포트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Pumpkin OS - PalmOS의 x64 포트

   - x64 아키텍처 위에서 PalmOS API 를 구현하여 기존 Palm 앱들을 실행하는 프로젝트
   - 기존 68k 바이너리도 실행가능하지만, Palm앱의 코드가 있다면 x64로 컴파일해서 네이티브 속도로 실행 가능
   - PalmOS 자체를 새로 구현했기 때문에 기존 OS 롬은 필요없음
   - 현재는 윈도우즈 위에서 3개의 앱을 실행
   ㅤ→ MemoPad : 소스코드를 가지고 x64용으로 새로 컴파일
   ㅤ→ MineHunt : 초기 Palm 에 기본 포함되었던 68K binary
   ㅤ→ Vexed : 68K 로 배포되었던 써드파티 프리웨어
   - 차후에는 PalmOS 5 용으로 만들어진 앱도 지원할 예정
   - Linux 도 지원할 예정이지만 차후 배포할 것
"
"https://news.hada.io/topic?id=4997","gobang - 크로스플랫폼 TUI DB관리 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      gobang - 크로스플랫폼 TUI DB관리 도구

   - MySQL/PostgreSQL/SQLite 지원
   - 맥/윈/리눅스. Rust 오픈소스
   - 키보드 만으로 조작 가능
   - SQL 에디터 / 커스텀 키 바인딩 / 타 DB 지원 예정

   - TermDBMS - DB 조회/수정용 TUI https://news.hada.io/topic?id=4956
   - Visidata - 터미널에서 스프레드시트 데이터 다루기 https://news.hada.io/topic?id=3030
   세개 도구가 비슷한듯 다르고, DB쪽 지원은 다들 부족한게 특징이라면 특징이네요. 아직 좀 지켜봐야 할것 같아요.
   무서워서 실제로 데이터 수정까지는 힘들고, 디비 내용을 급하게 원격에서 살펴보는데에는 편할것 같습니다.
"
"https://news.hada.io/topic?id=5034","‘개발문화를 혼자서 바꿀 수 없다’며 포기하기엔 이릅니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ‘개발문화를 혼자서 바꿀 수 없다’며 포기하기엔 이릅니다

   - 평사원인 개발자가 사내 개발문화를 만들기 위해 힘쓴 6개월의 기록
   - 반 년이 흐른 지금 소기 목표를 달성
   - ""좋은 개발문화를 가진 기업들이 늘어나기를 바라며, 더 많은 개발자들이 만족할만한 개발문화 속에서 일하길 희망합니다. ""
   - 기술블로그는 훌륭한 마케팅 수단입니다
   - 시작하자 개발 큐레이션
   - 어설프게 다가가 겪은 시행착오
   - 개발 큐레이션이 가져온 변화
   - One for all, all for one, 글로 시작하는 개발 문화

   - 좋은 회사 기술 블로그는 어떻게 운영되는가 https://news.hada.io/topic?id=1698
   - 개발자를 구하는 대표님들께 바치는 글 https://news.hada.io/topic?id=1547
"
"https://news.hada.io/topic?id=5021","Zingg - 데이터 통합을 위한 Scalable 퍼지매칭 오픈소스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Zingg - 데이터 통합을 위한 Scalable 퍼지매칭 오픈소스

   - 분석 엔지니어가 다양한 데이터 Silo들을 연동해서 통합된 뷰를 작성하는 것이 가능
   ㅤ→ Data Unification을 위한 No Code ML 도구
   - 왜 필요한가?
   ㅤ→ 실제 데이터에선 한 고객당 여러개의 레코드가 존재함
   ㅤ→ 각 레코드가 단일/멀티 시스템에 분산되어 있어서 데이터가 커지면 고객 분석이 어려워짐
   ㅤ→ ELT에서 T는 노력이 많이 들고, dbt 같은 도구가 이런걸 성공적으로 처리하긴 함
   ㅤ→ 빠르고 확장가능한 방법으로, 주요 비즈니스 객체에 대해서 추출 또는 로딩 전에 ""Single Source of Truth 를 만드는게 필요""함
   - 유용한 케이스
   ㅤ→ 다중 시스템에 있는 고객 들의 통합/신뢰가능한 뷰 작성
   ㅤ→ AML/KYC 등의 대규모 엔티티 확인
   ㅤ→ 중복 제거 및 데이터 품질
   ㅤ→ 데이터 Silo 의 병합
   ㅤ→ 외부 소스 데이터의 Enrichment
   - 지원 소스
   ㅤ→ Snowflake, Cassandra, S3, Azure, Elastic, 주요 RDMBS 및 Spark 지원 데이터 소스들
   ㅤ→ Parquet, Avro, JSON, XLSX, CSV, TSV 등의 파일도 지원
"
"https://news.hada.io/topic?id=4962","Ask GN: 이달의 구인공고 - 멤버를 찾고 계신가요 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ask GN: 이달의 구인공고 - 멤버를 찾고 계신가요 ?

   회사 소개, JD, 위치, 리모트 가능 여부, 연락방법(이메일,웹사이트) 등을 적어주세요.
   멤버를 찾고 계신 회사들이 댓글로 ""직접"" 홍보를 작성합니다. (서치펌 등은 불가)
   회사당 1개의 댓글만 허용합니다.
   이 글은 매월 첫번째 월요일에 고정적으로 올라옵니다.
   해당 공고에 관심있으시면 메일로 연락하시기 바랍니다.
   작성 예)
   하다 | 프론트엔드 개발자, 디자이너 | 서울 역삼 | Remote 가능 | https://hada.io | jobs@hada.io
   하다는 긱뉴스를 개발 및 운영하는 스타트업 입니다. 저희는 이러 저러 해서 엄청 좋은 회사입니다~~
   [1] 프론트엔드 개발자 JD : 내용 또는 URL
   [2] 디자이너 JD : 내용 또는 URL

   🦸Superb AI
   - Tech Support EngineerㅣML EngineerㅣServer Engineer
   - 강남역 2분거리
   - 채용 👉 https://careers.superb-ai.com/
   ""Democratize AI""
   저희는 누구나 쉽게 인공지능 기술을 개발할 수 있도록 진입장벽을 낮추고, 그 결과 우리의 삶의 모든 영역에서 인공지능 기술이 적용될 수 있도록 하겠다는 목표를 가지고 있습니다.
   저희는 누구나 쉽게 방대한 양의 데이터를 다루고, 딥러닝 인공지능을 더 빠르고 편리하게 개발할 수 있는 머신러닝 데이터 플랫폼인 슈퍼브에이아이 스위트(Superb AI Suite)를 서비스합니다.
   스위트(Suite)는...
   방대한 데이터의 실시간 처리, 가공, 시각화, 분석과 같은 데이터 처리 기능과,
   AI 연구/개발자, 데이터 엔지니어, 데이터 관리자 및 라벨러 간의 긴밀한 협업을 위한 커뮤니케이션 도구,
   그리고, 자체 개발 AI 기술들을 적용한 데이터 처리 및 분석 자동화
   ... 등을 기반으로 한 데이터 플랫폼이며, 이를 통해 인공지능을 개발하는 새로운 방식을 제시하고, 산업의 표준이 되는 도구가 되기 위해 빠르게 성장하고 있습니다. 🚀
   [1] Tech Support Engineer : https://career.greetinghr.com/o/NzU4.5lmq_30_4FJm_RyoX7J_JylUJCw
   [2] Machine Learning Engineer : https://career.greetinghr.com/o/MzY0.FyOubHJoZBvPacF6WIzYWUpw9ZY
   [3] Server Engineer : https://career.greetinghr.com/o/MzYy.KwkW2N9qN9WujcV5s3zwz-yzHSA

   원프레딕트 | 백엔드 엔지니어 3명 | 서울 선릉 | 주 1회 Remote 가능 | https://onepredict.ai/ | onepredict_recruit@onepredict.com
   OnePredict는 AI기반 솔루션을 통해 스마트팩토리 내 로봇 등 산업 설비의 고장 위험과 잔여 수명 예측의 어려움을 겪는 고객의 문제를 해결합니다.
   산업설비 건전성 예측분야의 세계적인 권위자이자 서울대 기계공학부 교수이기도 한 윤병동 대표가 2016년 설립한 이래, 글로벌 미래 유니콘을 목표로 가파르게 성장하고 있습니다.
   업계 최고 수준의 Data Scientist 등 개발자 그룹과 IBM 등 Fortune 500 외국계 기업 및 네이버, SK, 글로벌 전략 컨설팅펌, 스타트업을 경험한 50명이 넘는 구성원들과 가슴 뛰는 여정을 함께 할 동료를 찾습니다.
   - Global Data Challenge에서 9회 연속 수상
   - ‘2019 올해의 10대 기계기술’ 선정
   - 시리즈 A 투자 40억 원 유치 (2019년)
   - 시리즈 B 투자 150억 원 유치 (2020년, 동종업계 최고수준)
   - 글로벌 ICT 미래 유니콘 육성대상 혁신 15대 기업 선정 (과기정통부, 2020년)
   - 대한민국 AI스타트업 25 중, 동종업계 1위 선정 (2020년)
   회사 소개
   https://blog.onepredict.ai/b028f39d-66dd-49f0-80f2-93ea31e48cf0
   CEO 이야기
   https://blog.onepredict.ai/8d3d5dae-37a5-484e-9360-d7be0be75015
   혜택 및 복지
   https://blog.onepredict.ai/d8ca9b2a-5869-4311-8728-03b28381719b
   백엔드 엔지니어 채용 공고
   https://blog.onepredict.ai/3f090d7f-616f-4ead-90ee-211a2c5289e0

   휴먼스케이프 | 소프트웨어 엔지니어 (상시 채용) | 서울 강남 (봉은사역 근처) | 재택, 재실근무 중 자유롭게 가능 (코로나 이슈로 재택근무 권장) | https://humanscape.io/ | recruit@humanscape.io
   [회사 소개]
   휴먼스케이프는 환자와 세상을 연결함으로써 질병으로 고통받는 사람이 건강한 일상을 향유할 수 있도록 힘쓰고 있는 6년차 IT 헬스케어 스타트업입니다. 희귀질환 환자를 위한 건강관리 서비스 '레어노트', 온라인 임상시험 정보 및 중개 웹 서비스 '한국임상정보'를 만들고 있습니다.
   [주요 업무]
   소프트웨어 엔지니어로서 제품이나 기능의 기술적 과제를 수행합니다. '레어노트' 혹은 '한국임상정보'의 프론트엔드 (React, React Native, Next.js) 및 백엔드 (Node.js (koa), Django) 개발을 담당하시게 됩니다. 원하는 부분에 스스로 기여해주시면 됩니다 :)
   [기술 스택]
   프론트엔드는 주로 React, 백엔드는 주로 Node.js 혹은 Django를 사용하고 있습니다.
   이외 저희가 사용중인 기술 스택은 모두 StackShare에 정리해두고 꾸준히 업데이트하고 있습니다.
   https://stackshare.io/companies/humanscape/
   [채용 공고]
   Software Engineer: https://bit.ly/recruit_human_Dev
   궁금한 점이 있으시면 언제나 henry@humanscape.io 혹은 recruit@humanscape.io 로 편하게 연락 주세요!

   인베스티
   - 프론트엔드 | 백엔드 엔지니어
   - 서울 용산 (숙대입구역 / 서울역 10분)
   - 일부 Remote 업무 가능
   인베스티는 스타트업을 위한 Software / Marketing Agency 팀 boundary를 운영하고 있습니다.
   저희는 형식적인 업무보다 효율적으로 성과를 만들 수 있는 업무를 추구하고 있습니다.
   저희 구성원들은 기존 SI식 업무에 대한 반감이 큰 사람들입니다.
   정해진 일정에 맞추기 위해 추가 근무 / 무리한 인력 투입을 하는 것을 지양하며, 일정이 변경되더라도 결과물의 퀄리티를 훨씬 중요하게 생각하고 있습니다.
   저희와 함께 일하고 싶으시다면 아래 링크를 확인해주세요 😄
   https://github.com/investycorp/recruitment/blob/main/fe-be-engineer.md

   🥕당근마켓🥕
   -검색 | 데이터 분석가 | 백엔드 | 프론트엔드 | iOS | 머신러닝 | 플랫폼
   -신논현역 교보타워 근무
   -문의사항 : recruit@daangn.com
   -채용사이트 : https://team.daangn.com/
   -당근마켓 기술 블로그 : https://medium.com/daangn
   ❝ 당근마켓은 동네 이웃 간의 연결을 도와 따뜻하고 활발한 교류가 있는 지역 사회를 꿈꾸고 있어요. ❞
   중고 거래를 시작으로 구인·구직, 모임, 생활 정보 등을 포함하는 지역 기반 서비스가 되기 위해 노력하고 있어요. 이를 통해 이웃과 더 가까워지는 따뜻한 서비스를 만들고 싶어요.
   당근마켓은 앱 다운로드 2,200만, 월간 유니크 사용자 수(MAU) 1,500만 명의 사용자가 하루 평균 20분 사용하고 있어요. 알토스 벤처스, 굿워터 캐피탈, 소프트뱅크 벤처스, 카카오 벤처스, 캡스톤 파트너스, 스트롱 벤처스, DST Global, Aspex로부터 지금까지 총 2270억 원의 투자를 받았어요
   검색 개발 : https://team.daangn.com/jobs/개발-검색/
   프로덕트 데이터 분석가 : https://team.daangn.com/jobs/4557367003/
   프론트엔드 개발자 : https://team.daangn.com/jobs/4298115003/
   백엔드 : https://team.daangn.com/jobs/개발-서버-백엔드/ (Kotlin, Java, Node.js, Rails)
   앱개발 : https://team.daangn.com/jobs/개발-iOS-안드로이드/ (ios/Android)
   머신러닝 : https://team.daangn.com/jobs/개발-머신러닝/
   플랫폼 : https://team.daangn.com/jobs/개발-플랫폼/ (지리정보, SRE, 인터널, 플랫폼 서버, 보안기술)
   데이터 엔지니어 : https://team.daangn.com/jobs/4300801003/
   DBA : https://team.daangn.com/jobs/4351200003/

   🅰️ AB180(에이비일팔공) | 소프트웨어 엔지니어 (백엔드, 데이터, 데이터베이스 엔진) | 서울 서초(사당역 1분) | https://abit.ly/ab180-hiring-at-geeknews | hr@ab180.co
   유니콘부터 대기업까지 쓰는 제품을 만들며 함께 성장해요 —
   초당 10만 건의 트래픽 처리, 월 2,000만 MAU, 월 100억 이벤트 수집 및 분석, 실시간 대규모 데이터 분석 및 성과 극대화를 위한 머신러닝을 경험하실 수 있어요.
   AB180에서는 '에어브릿지'라는, 웹과 앱에서의 사용자 행동을 분석하고 마케팅 성과를 측정해서 더 좋은 퍼포먼스를 낼 수 있도록 돕는 도구를 만들고 있어요. GS SHOP, KB증권, 버거킹, 다노, 펫프렌즈 등 많은 기업들에서 저희의 제품을 사용하고 있어요.
   - 에어브릿지 → https://airbridge.io
   - 기술 블로그 → https://engineering.ab180.co
   저희에 대해 궁금하시다면 아래의 공고를 확인해주세요 :)
   [1] Software Engineer - Backend (Junior) : https://abit.ly/ab180-backend-junior-gn
   [2] Software Engineer - Backend (Senior) : https://abit.ly/ab180-backend-senior-gn
   [3] Software Engineer - Data (Senior) : https://abit.ly/ab180-data-senior-gn
   [4] Software Engineer - Database Engine : https://abit.ly/ab180-dbe-gn

   🍋 레몬베이스(Lemonbase)
   - https://www.lemonbase.team/
   - 프론트엔드 | 백엔드 | 풀스택 엔지니어
   - 서울 성수(서울숲/뚝섬역 5분)
   - Remote 가능
   레몬베이스는 ""일하는 사람들이 성장하고 성과를 내는 방식(grow and perform)을 혁신""하고 있습니다. 회사와 구성원의 건강한 성장을 돕기 위한 HR SaaS를 만들고 있고요. 서비스 런칭 후 매월 50% 이상 빠르게 성장하며, 카카오모빌리티 / 쏘카 / 위메프 / 마이리얼트립 / 매스프레소 / 버킷플레이스 등 수많은 기업들이 이미 레몬베이스와 함께 일하는 방식을 혁신하고 있습니다.
   2020년 12월 국내 시드 라운드로는 매우 드물게 본엔젤스 / 크래프톤 / 카카오벤처스로부터 62억원의 펀딩에 성공했고, 한국을 넘어 글로벌 서비스로 더 큰 그림을 그려나갈 수 있도록 센드버드의 김동신 대표님, 토스의 이승건 대표님이 투자자이자 advisor로 참여해주셨습니다.
   앞으로 10년 우리 앞에 펼쳐질 가장 큰 기회를 현실로 만드는데 동참하고 싶거나, '건강한 성장'이라는 단어에 조금이라도 가슴이 떨린다면 지원해주세요!
   1. 프론트엔드 엔지니어 https://www.lemonbase.team/1d49ffe5-08cb-448c-8f7d-e32820966dd0
   2. 백엔드 엔지니어 https://www.lemonbase.team/ceb39cd7-f532-46c9-87f1-47df8792e46e
   3. 풀스택 엔지니어 https://www.lemonbase.team/106fec51-67b8-49dc-bf15-0ba32de0ed22
   🙌 당장의 지원이 아니더라도, 관련해서 궁금하신 점이 있거나 가볍게 이야기를 나누고 싶다면 start@lemonbase.com 으로 마음 편히 메일주세요.

   블랭크 (블랭크랩)
   프론트엔드 엔지니어 | 백엔드 엔지니어 | 프로덕트 디자이너
   서울 선릉 위치
   Remote 가능
   블랭크의 신사업 조직인 블랭크랩에서 커머스 플랫폼을 만들기 위한 멤버를 구합니다!
   현재는 팀 세팅 중에 있고 외부에는 처음 알립니다!
   함께 만들어갈 수 있는 단계라 여러 제안과 도전에 열려 있으며,
   복지는 물론 만족스러운 대우를 약속드립니다.
   많은 지원 부탁드립니다.
   채용 노션: https://www.notion.so/labelstore/0e8054e02cf840ac8578b02108abc32a
   프론트엔드 엔지니어: https://notion.so/labelstore/…
   백엔드 엔지니어: https://notion.so/labelstore/…
   프로덕트 디자이너: https://notion.so/labelstore/…

   에디트콜렉티브 | Software Engineer | 서울 테헤란로 (삼성역 근처) | https://flexity.app/ | info@editcollective.io
   에디트콜렉티브에 합류할 Engineer (소프트웨어 엔지니어)를 찾고 있습니다.
   주변에서 흔히 볼 수 있는 토지들은 비슷하게 생겼음에도 불구하고 토지마다 가치가 많이 다릅니다. 토지의 가치는 입지 뿐만 아니라 어떤 건축물을 얼마나 큰 규모로 만들 수 있는지에 따라 결정됩니다. 이를 위해서는 전문 건축사를 통해 ""기획설계""를 의뢰하게 되는데 이 과정에서 경제적인 비용 뿐만 아니라 시간적인 비용도 소요됩니다. 누구보다 빠르게 토지의 가치를 판단해야 좋은 토지를 좋은 가격에 구매하여 성공적인 부동산 개발이 될 수 있기 때문에 이를 해결하고자 기획설계 및 사업성 판단을 빠르게 할 수 있는 Flexity 서비스(SaaS)를 만들고 있습니다.
   4명의 팀원들과 함께 웹서비스를 성공적으로 런칭하여 매출이 발생하고 있으며, 최근 시리즈 A(40억 규모)투자를 유치하였습니다. 이번 투자를 계기로 훌륭한 인재들을 적극 채용하여 더 많은 것들을 이룰 수 있는 회사를 만들고 싶습니다. 아직은 문화나 체계가 많이 부족하지만 훌륭한 분들과 함께 같이 만들어 나갈 수 있으면 좋을것 같습니다.
   초기 스타트업이라고 많은 시간을 일에 치여서 살기보다는, 최대 업무 효율을 내기 위한 일과 삶의 균형을 중시합니다. 역량과 성과에 비례하는 최고의 보상을 제시하도록 약속하겠습니다.
   [1]에디트콜렉티브(EDIT Collective) 채용 페이지 https://bit.ly/3jMFqmP
   [2]소프트웨어 엔지니어 https://bit.ly/3DQCf5G
   [3]에디트콜렉티브 시리즈 A 투자 유치 소식 https://bit.ly/3h5b0L4
"
"https://news.hada.io/topic?id=5045","EBS 위대한 수업 - 전 세계 최고의 지성을 한 자리에","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    EBS 위대한 수업 - 전 세계 최고의 지성을 한 자리에

   노벨 경제학상에 빛나는 폴 크루그먼, '정의란 무엇인가'의 마이클 샌델,
   세계적 지휘자 겸 피아니스트 다이엘 바렌보임,'이기적 유전자'의 리처드 도킨스,
   '맨큐의 경제학' 그레고리 맨큐, 유발 하라리, 안도 다다오 등
   지금 현재 세계를 이끌고 있는 지성들의 위대한 생각을 듣는 강연 시리즈

   어떻게 이런 사람들을 한자리에 모을 수 있었는지 인터뷰한 기사도 흥미롭습니다.
   http://www.mediatoday.co.kr/news/articleView.html?idxno=215500
   ""폴 크루그먼은 섭외 당시 다른 나라에서는 찾아볼 수 없는 교육 공영방송이 한국에 있다는 것에 놀라워하며, 이번 프로젝트 취지에 공감해 흔쾌히 출연을 결정했다.""
   ""뇌과학계의 거장이자 뉴욕대학교 신경과학센터 교수 조셉 르두(Joseph LeDoux)는 당초 바쁜 스케줄 때문에 1시간의 ‘인터뷰’ 촬영만 승낙한 상태였다. 하지만 메일을 주고 받는 과정에서 본인의 모든 저서와 논문을 깊게 연구한 제작진 열정에 반해 ‘강연’을 진행하겠다고 먼저 제안해왔다""
   이런 노력들을 인정하고 챙겨봐줘야 이런 훌륭한 시도들이 더 많이 나올수 있을 것 같아요.
"
"https://news.hada.io/topic?id=4940","Solid - Reactive JS 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Solid - Reactive JS 라이브러리

   - JSX 기반 UI 프레임워크
   - React Hooks 와 비슷하지만 더 간단하고 직관적인 개발 지원
   ㅤ→ Virtual DOM 을 사용 안하는 완전히 다른 구현
   - 클라이언트/서버 모두에서 빠른 성능
   ㅤ→ Angular/React 보다 거의 2배, Vue 보다 1.5배 빠름
   - 훌륭한 Playground 제공
   - Web Component 지원

   질문이 있는데 댓글로 남겨도 되겠죠?
   ""Angular/React 보다 거의 2배, Vue 보다 1.5배 빠름""
   프론트엔드 라이브러리에서 1.5배 ~ 2배 빠르다는건 실질적으로 어떤 의미가 있는건가요?
   저에게는 ""페라리, 아반떼보다 2배 빠름""을 볼 때처럼,빠른 건 알겠는데 어짜피 출퇴근길 걸리는 시간은 같을텐데 뭔 의미이지? 라는 생각이 들어서요.

   어느정도 복잡한 화면을 그리는데에서는 사용자 체감도 있을꺼라고 생각합니다.
   (Solid의 벤치마크를 보면 1000개~10000개의 Row 테이블을 생성하고 조작하는 것으로 속도와 메모리를 체크합니다.)
   전 국내 쇼핑몰 같은 사이트들이 예상외로 너무 느려서 놀랍거든요.
   그리고, 대부분의 환경에서는 최신 핸드폰/컴퓨터를 사용하긴 합니다만
   요즘은 임베디드 기기에서도 웹UI를 많이 사용하고 있어서 이런 성능개선이 굉장히 큰 이슈가 되는 곳도 있을거 같아요.

   구형 스마트TV나 이런데는 문제가 될 수 있긴 하겠군요.
   답변 감사 드립니다!!

   흥미롭네요.. Svelte 보다 경량이군요.
"
"https://news.hada.io/topic?id=4985","Timefind - 웹사이트 이력 검색 도구 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Timefind - 웹사이트 이력 검색 도구

   - 특정 웹사이트에 어떤 내용이 언제 추가 되었는지를 확인하는 CLI도구
   ㅤ→ 애플닷컴에 iphone이 언제 추가 되었는지를 검색 가능
   - Web Archive를 바이너리 이진 검색하여 해당 시점의 상세 URL을 표시
   - 이진 검색이기 때문에 검색할 문구가 삭제된 것은 안됨
   ㅤ→ 들어왔다 사라진 문구를 검색하려면 특정 기간을 지정해서 검색 필요
   - Node.js 오픈소스. 윈/맥/리눅스 바이너리 지원
"
"https://news.hada.io/topic?id=4954","rclip - AI를 이용한 사진 검색 CLI 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      rclip - AI를 이용한 사진 검색 CLI 도구

   - OpenAI 의 CLIP 신경망 이용
   > rclip cat : 폴더에서 고양이 들어간 모든 이미지 검색
   - Python 오픈소스
   - 현재 pre-built 바이너리는 Linux X86용만 제공
"
"https://news.hada.io/topic?id=5035","Deno 1.14 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Deno 1.14 릴리즈

   - Web Crypto API에 함수들 추가
   - deno lint 와 fmt 에 커스텀 옵션 추가
   - URLPattern API 추가
   - WebSocket API 안정화
   - Worker 간에 Zero-Copy ArrayBuffer transfer
   - OS signal API 수정
   - fetch 에서 mutual TLS 지원
   - DENO_AUTH_TOKENS 에 Basic Auth 지원
   - URL Parsing 속도 3배 빠름
   - 서브프로세스에 gid / uid 지정 가능
   - std/http 모듈 속도 개선
   - VSCode 확장 업데이트
   - TypeScript 4.4 / V8 9.4
"
"https://news.hada.io/topic?id=5001","Amazon EKS Anywhere","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Amazon EKS Anywhere

   - EKS를 자신의 VM/클라우드 인프라에 설치해서 쿠버네티스 클러스터를 온프레미스로 생성/운영할수 있게 해줌
   - Amazon EKS Distro 기반으로 자신의 데이터 센터에 AWS 경험을 도입
   - AWS 서비스 의존성없이 여러개의 쿠버네티스 클러스터를 전체 관리하는 것을 목표로 함
   - Docker 를 이용해서 로컬에 설치 가능
"
"https://news.hada.io/topic?id=4991","오픈소스 라이선스 변화의 흐름","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            오픈소스 라이선스 변화의 흐름

   - MIT, GPL 등 많이 알려져 있는 오픈소스 라이선스부터 최근 등장한 Elastic License까지의 변화의 흐름에 대한 이야기
   - 오픈소스 라이선스를 검토하는 방법
   ㅤ→ 사례 1 : 이 오픈소스를 사용하고 싶어요. 사용해도 될까요?
   ㅤ→ 사례 2: 사용하려는 오픈소스가 GPL 같습니다. 사용해도 될까요?
   - 새로운 라이선스의 등장과 변경이력
   ㅤ→ 1. Grafana 라이선스 변경(Apache-> AGPL)
   ㅤ→ 2. MongoDB 라이선스 변경(AGPL -> SSPL)
   ㅤ→ 3. Elasticsearch 라이선스 변경(Apache -> SSPL, Elastic 듀얼)
   ㅤ→ 4. Sentry 라이선스 변경(BSD -> BUSL)
   - 오픈소스 이후: 변화의 흐름
"
"https://news.hada.io/topic?id=4987","Effective Jinja template 리팩토링과 테스트 - 1편","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Effective Jinja template 리팩토링과 테스트 - 1편

   - 기존 Jinja 템플릿의 문제점
   → 요구사항에 맞춰 템플릿에 이것저것 기능을 붙이다 보면 템플릿을 렌더링하는데 필요한 데이터양이 많아지고 한 템플릿 파일 안에 여러 기능이 뒤죽박죽 섞이게 됨. 한마디로 레거시가된 야생의 jinja 템플릿이 된다.
   - Jinja template을 어떻게 하면 더 잘 관리할수 있을까?
   → 코드 응집성을 고려해 Macro를 사용해 분리
   → 렌더링시 넣어주는 데이터를 dict에 다 넣지 않고 dataclass를 활용해서 각 메크로에서 사용하는 데이터를 묶어줌
   - 테스트 내용은 없는것 같은데요?
   → 다음 2편에서 Jinja AST분석을 통해 빠진 변수가 있는지 검사하는 내용을 담아보도록 하겠습니다
"
"https://news.hada.io/topic?id=5051","오픈소스 OLAP DB ClickHouse 별도 회사 설립","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    오픈소스 OLAP DB ClickHouse 별도 회사 설립

   - 3명의 코파운더와 개발팀이 Yandex에서 떨어져 나와서 별도 회사를 설립
   - Index/Benchmark/Yandex 등에서 $50M 시리즈 A 펀딩
   - 2009년에 개발 시작해서 2016년에 오픈소스로 공개
   - 빠른 쿼리 처리 속도와 데이터 저장 효율성이 강점

   Druid와 같은 길을 가는건가 싶네요?

   - ClickHouse - 오픈소스 컬럼기반 OLAP DB https://news.hada.io/topic?id=4356
   - PostgreSQL을 데이터 웨어하우스로 사용하기 https://news.hada.io/topic?id=4239
   - TimescaleDB 2.0 공개 https://news.hada.io/topic?id=3112
   HN에 재미난 비교 댓글이 있어서 가져와 봅니다.
   https://news.ycombinator.com/item?id=28596718
   * Citus has a great clustering story, and a small data warehousing story, afaik no timeseries story;
   * TimescaleDB has a great timeseries story, and an average data warehousing story;
   * Clickhouse has a great data warehousing story, an average timeseries story, and a bit meh clustering story (YMMV).
"
"https://news.hada.io/topic?id=4977","Koji - 강력한 Link in Bio 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Koji - 강력한 Link in Bio 도구

   - 소셜미디어 프로필에 등록하는 링크 서비스
   ㅤ→ 대부분 1개의 링크만 지원하므로 거기에 등록하는 통합 링크 페이지
   - 인스타/유튜브/틱톡/트위치/트위터 등 다른 모든 서비스 링크에 연결 가능
   - 다양한 Bio App을 지원하는 자체 App Store가 있음
   ㅤ→ Rares, Tip Jar, Billboard, AMA, Quiz, Guestbook, Quiz..

   그동안 간단한 페이지 형식으로 된 것만 봤었는데, 앱스토어 붙인 건 굿이네요.

   이런 Link-In-Bio 서비스들이 여러개 있는데, 거기에서 App Store 개념까지 확장한 서비스 입니다.
   최근에 Apple China 에서 App Store를 담당했던 Annie Morita 를 COO 로 채용하면서 공격적으로 확장을 하고 있습니다.
   https://blog.withkoji.com/creator-economy-platform-koji-announces-form…
"
"https://news.hada.io/topic?id=4964","리눅스 커널에 Paragon NTFS 드라이버 머지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      리눅스 커널에 Paragon NTFS 드라이버 머지

   - Paragon 이 만든 (상용) NTFS Read-Write 드라이버
   ㅤ→ 기존 NTFS 커널 드라이버는 읽기 전용 이었음
   - NTFS 3.1 까지 지원
   - 일반/압축/Sparse 파일 지원
   - 저널 리플레이 지원
   - 계속 Paragon이 유지보수 예정

   기존에는 tuxera ( https://www.tuxera.com/buy-licensing-tuxera-solutions/ ) 와 시장을 양분했던것으로 알고 있는데...
   Paragon쪽에서 소스를 GPL로 풀어버리면, 양쪽 비지니스에 얼마나 영향이 갈런지 궁금하네요.
"
"https://news.hada.io/topic?id=5044","개더타운과 레크레이션으로 랜선 회식 준비하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        개더타운과 레크레이션으로 랜선 회식 준비하기

   - 온라인에서 모이는 공간이 필요해요; 개더타운
   - 선물하기
   - 레크레이션
   ㅤ→ 아이스브레이킹 : 둥글게 둥글게
   ㅤ→ 본 게임은 팀전 : 사진 맞추기, 노래 제목 맞추기, 캐치 마인드, OX 퀴즈
   - 랜선 회식을 준비하신다면 잊지 마세요!
   ㅤ→ 짧게라도 식순과 스크립트를 만들기
   ㅤ→ 진행 순서, 레크레이션
   ㅤ→ 스크린샷 찍기

   게더타운 참 재밌는데, 켜놓고있기는 좀 부담스러운 느낌이라 몇번 쓰고 더 안쓰게 되더라구요..

   개더타운을 긱뉴스에서 소개를 안한것 같아서 한번 올릴까 했는데, 이를 잘 활용한 사례가 나와서 공유해 봅니다.
"
"https://news.hada.io/topic?id=4957","Zero - 스타트업이 첫날부터 개발 & 배포 가능하게 해주는 부트스트래핑 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Zero - 스타트업이 첫날부터 개발 & 배포 가능하게 해주는 부트스트래핑 도구

   - SaaS 개발을 위한 기초 인프라를 한번에 셋업해주는 오픈소스
   ㅤ→ AWS 토큰만 입력하면 전체 설정 자동 진행
   ㅤ→ 안정성 : 멀티 AZ , AWS ELB + Nginx, Terraform
   ㅤ→ 확장성 : ASG + EKS, S3 + CloudFront
   ㅤ→ 보안 : AWS Secret Manager, Let's Encrypt 자동 인증서 관리, DB 암호화, VPN 지원
   자동 설정 되는 환경들
   - Infrastructure
   ㅤ→ Staging, Production 환경별 VPC (서브넷, 시큐리티 그룹 설정)
   ㅤ→ 환경별 EKS클러스터 (Cert-manager, external-dns, nginx-ingress-controler 등 자동 설정)
   ㅤ→ RDS (Postgres/MySQL)
   ㅤ→ S3 버킷 및 CloudFront distribution
   ㅤ→ 로깅 과 메트릭 : CloudWatch / Prometheus + Grafana / ElasticSearch + Kibana
   ㅤ→ Wireguard 이용한 VPN
   ㅤ→ 사용자 관리 및 Identy / Access Proxy : Ory Kratos, Oathkeeper
   ㅤ→ 개발팀이 쉽고 안전하게 접근하기 위한 도구들
   ㅤ→ Telepresence 를 이용한 로컬/클라우드 하이브리드 개발자 환경
   - Backend
   ㅤ→ Golang 또는 Node.js 로 만들어진 예제 프로젝트. 자동 셋업및 Docker화 되어 K8s 클러스터에 배포 가능
   ㅤ→ CircleCI / GitHub Actions 를 이용한 CI Pipeline. PR 머지하면 바로 배포 시작
   ㅤ→ CloudFront URL을 이용한 파일 업로드/다운로드 지원
   ㅤ→ SendGrid / AWS SES 를 이용한 이메일 지원
   ㅤ→ 알림 지원 (웹,모바일,SMS,이메일) - 개발중
   ㅤ→ Kratos 와 Oathkeeper를 이용한 사용자 관리 기능 지원 (직접 로그인/가입/인증 관리할 필요없음)
   - Frontend
   ㅤ→ React 예제 프로젝트. 자동 셋업 및 배포 가능
   ㅤ→ CircleCI / GitHub Actions 를 이용한 CI Pipeline. PR 머지하면 바로 배포 시작
   ㅤ→ CloudFront URL을 이용한 파일 업로드/다운로드 지원
   ㅤ→ Kratos 와 Oathkeeper를 이용한 사용자 관리 기능 지원 (예제 로그인/가입 플로우를 스타일링만 하면 됨)
   ㅤ→ Gastby 를 이용한 Static Site 예제로 쉽게 랜딩 페이지 생성 가능. CI 연동 지원

   이대로 하는 경우 월 150불 정도 하네요. (0.202$ / h)
"
"https://news.hada.io/topic?id=5040","ChowJS - 게임 콘솔용 AOT JavaScript 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ChowJS - 게임 콘솔용 AOT JavaScript 엔진

   - AOT : Ahead-Of-Time
   - 게임콘솔을 타겟으로 JavaScript로 게임을 개발한 후 미리 컴파일해서 런타임과 함께 배포하는 방식
   ㅤ→ QuickJS 기반
   ㅤ→ ES2020 까지의 최신 JS 지원
   ㅤ→ PC, Mobile, Console 지원
   ㅤ→ NW.js 런타임 환경의 서브셋 제공
   ㅤ→ AOT 컴파일러로 SSA IR를 이용해서 빠른 머신 코드를 생성
   ㅤ→ 인라인 캐슁 구현
   ㅤ→ 레퍼런스 카운팅 GC 사용
   - V8 인터프리터보다 3.23x 빠름
   ㅤ→ V8에서 30FPS 이하였던게 60FPS까지 가능해짐
   - 현재까지 알려진 프로덕션 수준의 AOT엔진은 페이스북이 개발한 Hermes 정도 밖에 없음
   ㅤ→ ReactNative용이고, 머신코드가 아닌 ByteCode를 생성
"
"https://news.hada.io/topic?id=5037","Shenandoah in OpenJDK 17 : 밀리초 미만의 GC Pause 구현","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Shenandoah in OpenJDK 17 : 밀리초 미만의 GC Pause 구현

   - Shenandoah Garbage Collection 프로젝트는 GC시에 일시 중지 시간을 줄이는 것이 목표
   ㅤ→ Concurrent 처리를 통해서 응답성을 높임
   ㅤ→ JDK12 : Concurrent Heap Evacuation 을 도입해서 앱 중지없이 힙 청소 가능
   ㅤ→ JDK14 : Concurrent Class Unloading
   ㅤ→ JDK16 : Concurrent Reference Processing
   ㅤ→ JDK17 : Concurrent Thread-stack Processing 도입으로 밀리초 미만의 Pause가 가능해짐

   ZGC도 꽤 유명하더라고요.
   - https://blogs.oracle.com/javamagazine/post/…
   다만, 변수의 포인터에서 64bit를 활용해(https://img1.daumcdn.net/thumb/R1280x0/…) 64비트 운영체제에서만 사용가능합니다.
   - https://huisam.tistory.com/entry/jvmgc

   예전에 스크립트 언어 VM 성능관련해서 찾아봤었는데,
   JS의 V8 경우는 다음과 같은 원리라고 하네요.
   - https://v8.dev/blog/concurrent-marking
   - https://v8.dev/blog/orinoco
   - https://v8.dev/blog/trash-talk
   - https://v8.dev/blog/high-performance-cpp-gc

   Shenanadoah gc의 특징과 간단한 알고리즘에 대한 소개
   - https://dev-punxism.tistory.com/entry/Shenandoah-gc
   - https://meetup.toast.com/posts/234
   전 쉐넌도어는 Take Me Home Country Road 노래 가사로만 접해봤는데..
"
"https://news.hada.io/topic?id=5020","Youtube-dl-gui - 크로스플랫폼 유튜브 다운로더 GUI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Youtube-dl-gui - 크로스플랫폼 유튜브 다운로더 GUI

   - Electron + Node.js 오픈소스
   - 맥/윈/리눅스
   - 유튜브, Vimeo 및 다양한 플랫폼에서 다운로딩 지원
   - 여러개의 비디오/플레이리스트/채널 한번에 다운로드
   - 해상도/포맷 선택
   - 멀티쓰레딩으로 32개 비디오까지 동시 다운로드 가능
   - 자동으로 Youtube-DL 최신버전 업데이트
"
"https://news.hada.io/topic?id=5057","GitHub Actions, 이제 셀프호스트 러너에 싱글 잡 실행 지원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                GitHub Actions, 이제 셀프호스트 러너에 싱글 잡 실행 지원

   - Ephemeral Self-Hosted Runner
   ㅤ→ 한번 실행되고 자동으로 서비스에서 등록 제거됨
   ㅤ→ 매 실행할 때마다 깨끗한 이미지에서 실행해야 하는 경우등, 특정 작업 끝난후 관리하는 동작등이 가능해짐
   - 새 workflow_job 웹훅을 지원해서 Ephemeral Runner 들도 Auto-scale 가능
   ㅤ→ 웹훅 받을 때마다 싱글잡을 추가하고 큐처리
"
"https://news.hada.io/topic?id=4956","TermDBMS - DB 조회/수정용 TUI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        TermDBMS - DB 조회/수정용 TUI

   - 터미널에서 DB 테이블을 보고 수정하는 도구
   ㅤ→ 스프레드시트 형태의 UI
   ㅤ→ 키보드/마우스 조작
   ㅤ→ SQL실행 및 결과 표시. 실시간 수정 지원
   ㅤ→ Row/Column/Cell 추가/삭제 지원
   ㅤ→ 모든걸 Rename 지원
   - 현재는 SQLite 만 지원. MySQL / Postgres 추가 예정
   - Go 오픈소스 : 맥/윈/리눅스 지원

   SQlite 나 CSV,엑셀등은 Visidata 로도 가능한데 MySQL/Postgres 가 추가예정이라는게 기대되고,
   Go로 되어있어서 WSL을 이용해야 하는 Visidata에 비해 윈도우에서도 사용하기 좋을듯 합니다.
   - Visidata - 터미널에서 스프레드시트 데이터 다루기 https://news.hada.io/topic?id=3030
"
"https://news.hada.io/topic?id=4967","유용한 확장을 포함한 Postgres Docker 이미지들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    유용한 확장을 포함한 Postgres Docker 이미지들

   - Postgres 자체에는 변경 없이, 많이 쓰는 확장들을 포함한 도커 이미지 제공용 Repo
   - Postgres 13 + Ubuntu 20.04 + wal_level 5 + ARM 지원(Large Systems Extensions)
   - fail2ban 지원
   - PgBouncer(커넥션 풀), PostgREST(REST API지원), PostGIS + pgRouting (지도 및 경로), pg_cron(CRON 내부에서 실행 )
   ㅤpgjwt (JWT 생성), pgsql-http(HTTP Client), PL/Java(Java 함수 사용), plv8(Javascript 함수 사용)
"
"https://news.hada.io/topic?id=5039","HeadScale - TailScale 서버의 오픈소스 구현체","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   HeadScale - TailScale 서버의 오픈소스 구현체

   - 쉬운 VPN 구축 도구인 TailScale은 각 OS별 UI 및 서버를 제외하고는 모두 오픈소스
   ㅤ→ WireGuard 기반
   - Coordination/Control Server 를 셀프호스트 가능하게 구현한 오픈소스
   ㅤ→ 각 노드들 간의 퍼블릭 키 교환, IP 할당, 사용자간 경계 설정, 노드간 라우팅 등을 처리
   - 현재 TailScale 의 MagicDNS 빼고는 대부분 구현
   ㅤ→ 각 디바이스의 이름을 DNS에 자동으로 등록해주는 기능

   Overlay 네트워크 구축을 오픈소스로 한다면 Slack 에서 만든 Nebula 도 가능합니다.
   - Nebula, 슬랙이 공개한 Global Overlay Network 오픈소스 https://news.hada.io/topic?id=940
   - Tailscale vs. Nebula https://tailscale.com/kb/1148/tailscale-vs-nebula/
"
"https://news.hada.io/topic?id=5048","수학의 엄밀함에 대한 잡설: 왜 수학은 그렇게 엄밀함해야 될까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  수학의 엄밀함에 대한 잡설: 왜 수학은 그렇게 엄밀함해야 될까요?

   - 수학에서는 엄밀함은 너무 당연한 것 조차 쓸데없이 복잡하게 만드는게 아닐까?
   -> 엄밀함에는 타당한 이유가 있다.
   - ""점프하지 않고 줄넘기"" 문제를 증명하기.
   - 어떤 평평한 면의 원점에 높은 장대가 꽂혀있다. 평면 바닥에는 무한히 늘어나고 끊어지지 않는 끈의 양쪽 끝이 고정돼 있다. 끈은 평면에 착 붙어 있어서 바닥면 안에서만 늘어날뿐, 수직방향으로 잡아당기거나 할 수는 없다.
   - 이때 끈을 장대 반대편으로 넘길 수 있을까?
   - 직관적으로 생각해봐도 끈을 장대 반대편으로 넘길 수 없다는 걸 알 수 있음. 원점을 지나갈 수 없으니까. (점프하지 않고 줄넘기를 할 수는 없음)
   - 이런 끈 넘기기 문제를 수학적 증명하려면? : 복소함수론의 contour integration 을 이용하기.
   ""homotopy invariance of contour integration 정리에 따르면 holomorphic한 복소함수 f:U->C가 있을 때 서로 연속변형관계에 있는 두 끈을 따라서 f를 적분한 결과값은 서로 같기 때문에 평면을 복소평면의 부분집합으로 간주하고, 함수 f를 복소수 z에 대해 정의하며...""
   -> 결과적으로 끈을 넘길 수 없다는 결론이 나옴.
   -> 이런 수학적 증명이 ""쉬운 것을 이악물고 돌아돌아가서 엄밀한 척"" 하는 것 아닌가?
   - 끈 넘기기 문제를 실제 지구에서 해보면 어떨까? 운동장에 장대를 꽂아놓고, 끈을 장대 반대편으로 잡아당긴다면?
   - 끈은 지구를 한바퀴 돌아 장대 반대편으로 넘어갈 수 있다.
   - 지구에서 끈 넘기기가 가능한 것은, 지구가 평면이 아니라 둥근 구면이라서.
   - 끈 넘기기 게임의 증명이 복잡한 것은 평면 전체의 고유한 성질과 관계있기 때문.
   - ""원점을 넘지 못하기 때문에 끈 넘기기는 불가능하다""는 주장을 수학적으로 정제해내더라도 만약 그 논리의 어딘가에서 평면의 고유한 위상적 성질(평면과 구를 차별지을 수 있는)을 적절히 활용해내지 못했다면, 해당 논리는 수학적 장벽을 회피한 것이 되고, 논리의 비약이 생기게 되는 것.

   본문과 동떨어진 질문이라서 죄송합니다만, 홍차넷은 어떤 사이트인가요? 처음보는 커뮤니티라서 궁금합니다.

   커뮤니티 분위기를 느끼려면 추천 게시판, AMA 게시판을 먼저 살펴보시길 권합니다. 타임라인 게시판은 회원들이 흘려보내는 짧은 글, 사진, 영상을 보는 재미가 있습니다. 저는 2016년도부터 방문하고 있는데 다른 커뮤니티와 비교해 덜 소란스럽고 운영자의 자정력이 아직 힘을 발휘하는 '개인 사이트'입니다.

   저도 웹서핑을 하다 발견한 커뮤니티라 자세힌 모르지만... 검색해보니 pgr21 운영진 분들이 만든 사이트라고 나무위키에 나오네요

   전 아이폰 볼라고 앱에 들어있어서 알게 되었는데, 다양한 글이 올라와서 종종 들어가 봅니다
"
"https://news.hada.io/topic?id=5041","borb - PDF 읽기/쓰기/편집용 파이썬 오픈소스 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  borb - PDF 읽기/쓰기/편집용 파이썬 오픈소스 라이브러리

   - PDF 문서를 JSON 비슷한 데이터 구조로 나타내어 쉽게 사용 가능
   ㅤ→ Nested list, dictionary, primitive 등
   - PDF를 처음부터 생성 하기
   ㅤ→ Page, PageLayout 생성
   ㅤ→ Paragraph, Image, Shape, Barcode, Chart, Emoji, List, Table, Form 등 생성
   - 기존 PDF 변경하기
   ㅤ→ 메타 데이터 추출 및 변경
   ㅤ→ 텍스트/이미지 추출
   ㅤ→ 이미지 변경
   ㅤ→ Annotation (Note, Link 등) 추가
   ㅤ→ 텍스트/테이블/리스트 추가
   ㅤ→ 페이지 레이아웃 관리자 이용하기

   몇일전 올라온 서비스중에 논문을 HTML로 변환하는 것도 있었는데,
   관건은 multi-column에서 text 읽는 순서, 이미지의 범위 등이네요.
   이런 서비스로 논문의 serialization 성숙해지고 요약서비스도 곧 나올듯 ㅎㅎ
"
"https://news.hada.io/topic?id=4970","2021 모바일 쇼핑 앱 보고서 : 리테일의 현재와 미래 [37p 한국어 PDF]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             2021 모바일 쇼핑 앱 보고서 : 리테일의 현재와 미래 [37p 한국어 PDF]

   1 경쟁 시장 현황
   - 전세계적으로 쇼핑 앱 사용 시간은 2021년 1분기에 전년 대비 49% 증가
   - 2021년 5월에 Android 쇼핑 앱 사용 시간이 주당 평균 20억시간에 달하여 팬데믹 이전에 비해 51% 증가
   - 다운로드 기준 가장 크게 성장한 앱 : SHEIN > FlipKart > Amazon > AJIO > Myntra > Shopee > JoiMart > Alibaba
   2 유저 확보 트렌드
   - CPA는 $17.85
   - 전환율 15%
   - Android는 비용 및 전환율에서 모두 iOS보다 더 나은 성과. 구매 가능성이 높은 유저 확보하는데 2배 정도 더 낮은 비용
   ㅤ→ CPI (Cost Per Install) : Android $2.13 , iOS $3.85
   ㅤ→ CPA (Cost Per Action): Android $12.88 , iOA $33.99
   ㅤ→ ITA (Install to Action): Android 16.5% , iOS 11.3%
   3 광고 크리에이티브
   - 배너 76% > 네이티브 16% > Interstitial (전면 광고) 4% > 동영상 4%
   - 비디오 기반앱에 더 많은 잠재고객
   4 리텐션 전략
   - 새로운 소매 경험
   ㅤ→ 디지털 퍼스트 리테일앱은 참여를 유도
   ㅤ→ 한국과 일본은 디지털 경험에 집중
   - SHEIN 의 사례
   ㅤ→ 다운로드 4천만, MAU 7100만, 96%의 사용자가 여성, 유저 61%는 16~24세 사이
   ㅤ→ 인플루언서 스타일 상품의 전면배치, 강력한 참여와 고객 리텐션
   5 인앱활동
   - 장바구니는 빠르게 커지고 있음. 평균 주문 값(AOV)는 일년사이에 22% 증가
   - 편리하고 공유 가능한 경험이 충성 유저 참여를 이끌어 냄
   ㅤ→ 유저들이 참여 가능한 상호작용 기능이 더 많을수록 앱의 사용 빈도가 늘어남
   ㅤ→ Stories (사용자당 25.9 세션) 와 Wishlists(27.7 세션) 등의 기능이 더 나은 참여를 이끌어냄
   ㅤ→ Tinder 의 기능과 비슷한 Swipe To Like 기능으로 참여도 증가
   - 푸시 알람은 타이밍이 중요. 메시지를 전달하기 가장 좋은 날은 목요일 16:00 ~ 19:00
   이 보고서는 106개 앱, 950억 PV, 11억 Click, 1400만 설치, 3900만 이벤트 를 분석한 결과

   PDF : https://content.liftoff.io/hubfs/aaa_Reports/…
"
"https://news.hada.io/topic?id=5054","Ask GN: 코더에서 CEO가 되는 것에 대한 리소스가 뭐가 있을까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Ask GN: 코더에서 CEO가 되는 것에 대한 리소스가 뭐가 있을까요?

   최근 제 프로젝트가 스타트업이 되었고 저는 CEO의 역할을 맡을 필요가 생겼습니다. 그리고 제 팀원들에게 제가 좋은 CEO가 될 거라고 설득도 해야 돼요, 특히 제 비사회성때문에 팀원들은 그걸 엄청 회의적으로 보고 있습니다. 이런 상황에 대한 좋은 학습 리소스 같은 게 있을까요?

   개인적인 경험으로 봤을때 저는 비추입니다. 일단 창업하신 회사의 규모가 어떻게 되느냐에 따라 달라지겠지만, 제가 경험한 경우를 말씀드려 볼께요.
   전 직원수20명 안밖이였고 개발팀은 앱개발자 포함 5명이 안되는 회사였습니다.
   회사 대표님은 직접 개발도 참가하시고 창업할때 본인이 만든 사이트로 창업을 했구요.
   개발팀에 팀장이 그만뒀고 대표님이 팀장겸 대표겸 모든걸 다 총괄했습니다. 채용부터 코드리뷰등등 모든것에 관여하였던 상황이였습니다.
   회사 주사업이 쇼핑몰이다 보니 이벤트나 사이트 이슈가 생기면 즉각 대응이 많이 필요했고 야근과 철야등이 많았습니다. 본인은 대표이니 야근, 철야등을 해도 즐겁겠지만 직원 입장에서는 피곤한 상황이죠. 대표가 야근, 철야하는데 눈치보여서 퇴근도 못하고, 긴급 이벤트가 진행되서 디자인 수정이 빈번하게 발생하면 커밋수가 늘어나는데 왜 쓸데없는 커밋이 많아지냐고 딴지도 들어오고..
   암튼 아는 사람이 더 무섭다는걸 느끼게 되었습니다.
   창업하시는 회사의 조직체계가 어떤지 모르겠지만 직원입장에서는 대표가 코딩하고 관여하는게 편하지 않습니다. CEO의 역활만 하실수 있으면 추천하겠지만 개발에도 관여를 하셔야 하면 저는 추천드리고 싶지 않네요

   그건 CEO를 하면 안좋은 이유가 아니라 좋은 이유인 것 같은데요...

   직원 불편하게 하는게 CEO군요

   <개발 7년차, 매니저 1일차> 라는 제목의 책이 있습니다.
   http://www.yes24.com/Product/Goods/87336637
   도움이 되실거라고 생각합니다.
   그리고 스스로 '제 비사회성'이라는 표현을 쓰셨는데... 자리가 사람을 만드는 것이므로 팀장일 때의 비사회성과 CEO 일때의 비사회성을 동일시하실 필요는 없다고 봅니다. 스스로를 설득할 수 없으면 남도 설득할 수 없습니다.

   실리콘밸리 라는 외국 드라마도 추천드립니다. 얼떨결에 CEO가 된 개발자가 겪는 이런저런 사건이 나오는데, VC가 스타트업에 자기 사람을 꽂아넣는 등의 상황이 CEO 입장에서는 마냥 웃으면서 볼 순 없으실 것 같습니다. 도움이 되실거예요.

   조금 뜬금포이긴한데,
   넷플릭스에 ""인터넷으로 마약을 파는 방법""이라는 독일 드라마가 생각 나네요 ㅎㅎ

   무기명 사용자 간 게임 아이템 거래 플랫폼을 만들던 고등학생이 모종의 이유로 다크웹의 마약 거래 사이트 사업자가 되면서 벌어지는 일인데, 너디하던 친구가 사업을 위해 고민하는 모습이 꽤 유쾌하게 나옵니다 ㅎㅎ

   https://leaddev.com/ 라는 사이트에 ""엔지니어링 리더십""에 대한 좋은 글과 강연이 많더군요.
   유튜브 채널(https://www.youtube.com/c/LeadDev/)도 있는데, 여러 회사의 리드급 개발자나 VP of engineering 들이 패널로 나와서 강연하거나 토론하는 영상이 많이 올라와있습니다.
   ""CEO""와는 직접적으로 관련이 없을 수는 있겠지만 기술역량을 지닌 리더로서 조직을 어떤 마음가짐과 방법으로 이끌지에 대한 조언을 많이 얻을 수 있었습니다. 최근에 본 영상 몇 개만 소개하면:
   - Creating a career ladder for engineers: 개발자들의 커리어 사다리가 왜 중요하고 어떻게 운영하면 되는가 https://www.youtube.com/watch?v=jA1Q94d2z10
   - Building a successful and sustainable CI/CD pipeline: 지속적 통합/배포 파이프라인을 제대로 구축하려면 툴이 아닌 아키텍처와 프로세스에 집중해야 하고, 조직원들을 지속적으로 설득해나가야 한다 https://www.youtube.com/watch?v=9nIG-pFyQ_k

   먼저 축하드립니다. 전 개발자분들이 CEO가 되는 사례가 더 많아져야 한다고 생각해요.
   적어주신대로 비사회성이 걱정되신다고 하면은 아마도 커뮤니케이션 쪽을 가장 신경쓰셔야 할 것 같은데요.
   - CEO를 위한 운영 및 내부 커뮤니케이션 전략 https://news.hada.io/topic?id=1156
   제가 위 글에 댓글에 간단히 번역을 해두었으니 참고하시고요.
   CEO는 ""우리가 어디로 가고 있는지""에 대해서 계속적으로 팀원들과 커뮤니케이션 하는게 중요합니다. ""왜 이런 일을 하고 있고, 어디까지 했고, 앞으로 남은 일이 무엇인지"" 에 대해서 ""반복적""으로 얘기해야 합니다. 그래서 어느정도 회사가 커지면 미션과 비젼이라는 거창한 것들을 만들고, 타운홀 미팅 부터 1:1 피드백 까지 여러 형태의 장치들을 만들게 되는데요. 가장 중요한 건 지속적으로 얘기를 나누는 것이라고 봅니다.
   아직 초기라고 하면 기본적으로 ""매일 오전 10분 티미팅"" 처럼 가벼운 대화라도 꼭 진행하시면 좋을 것 같습니다. ""데일리 스탠드업을 해야해"" 라고 생각하면 부담스럽거든요.
   CEO는 회사의 규모와 상관없이 외로운 자리입니다. 회사가 나아갈 길을 결정하는 건 끝내 자신이에요. 남들이 어떤 고민을 했는지들도 한번 후기들로 봐두시고요. 다른 창업자들을 만나서 이야기를 나눠볼 수 있는 기회를 만드시면 좋을 것 같아요.
   - 개발자가 창업할 때 유의해야 할 세 가지 https://news.hada.io/topic?id=3016
   - Dribbble 을 공동창업하고 배운 것들 https://news.hada.io/topic?id=23
   - 삼성출신 스타트업 대표가 12억 날리며 깨달은 것 https://news.hada.io/topic?id=3015
   - 자체 음식 배달 서비스 Sprig의 실패 경험담 https://news.hada.io/topic?id=2364
   앞으로 몇년간 어떤 일이 일어날지, 특히 투자 관련에 대해서 먼저 봐두시는 것도 중요할 것 같아요.
   - 첫 2년 반 동안 스타트업이 걸어야 할 여정 (요약 번역) https://news.hada.io/topic?id=1703
   - VC가 알려주는 스타트업 투자 유치 전략 [197p PDF] https://news.hada.io/topic?id=3798
   개발자에서 CEO가 되면 아마도 CTO로서의 역할도 어느정도 같이 수행하게 되실거 같은데요. 아래 글도 참고하시기 바랍니다.
   - CTO/VPE 가 첫 90일동안 해야할 일 https://news.hada.io/topic?id=1686
   - Director of Engineering 은 무슨 일을 하나요 ? https://news.hada.io/topic?id=2029
   - 뉴욕타임즈 CTO의 4년 회고 https://news.hada.io/topic?id=2016
   - Segment CTO의 ""B2B제품을 판매하는 법"" https://news.hada.io/topic?id=2104
   - SaaS CTO 보안 체크리스트 [27p PDF] https://news.hada.io/topic?id=2509
   추가로 읽어두면 좋은 것들
   - Toil 없애기 - Toil 이란 무엇인가 https://news.hada.io/topic?id=388
   - 좋은 회사 기술 블로그는 어떻게 운영되는가 https://news.hada.io/topic?id=1698
   - 신규입사자를 잘 온보딩 시키는 방법 - How to onboard a new hire https://news.hada.io/topic?id=233
   그리고, 자료로서만 본다면 YC쪽께 가장 도움되지 않을까 하네요.
   한국어 자료는 이정도로 방대하게는 잘 없는거 같아요.
   - YC의 미래 창업자를 위한 Startup School https://news.hada.io/topic?id=3128
   - YCombinator Startup Library 2.0 https://news.hada.io/topic?id=2624

   혹시 팀원들에게 제가 CEO로 적합하다는 것을 어떻게 설득할 지에 대한 조언도 구할 수 있을까요? 왜 개발자 출신 CEO가 생겨야 한다고 생각하시나요?

   지금 만드신 스타트업이 어떻게 시작했는 지를 잘 몰라서요.
   왜 CEO가 되는 것을 설득을 해야하는 상황인지요? 공동으로 같이 시작하셨는데 그중에서 질문자분이 하기로 하신 걸까요? 서로 CEO를 맡고 싶어하는 상황인지 어떤지가 궁금하네요. CEO에 적합한 사람인지는 솔직히 직접 해보지 않고는 알아보기 어렵습니다. 얼마나 그 아이템이 대한 애정과 비젼을 가지고 있는지도 중요하다고 생각해요.
   개발자 출신 CEO를 선호하는 이유는, 처음에는 MVP를 만들고 하느라 정신없지만 서비스를 런칭하고 사용자가 늘고 커지다 보면, 그 이후에는 개발에 대한 지식이 있는 사람과 없는 사람에 대해서는 차이가 있다고 생각합니다.
   간단한 예로, 처음에는 다른 레거시가 없이 뭔가를 만드니까 매우 빠르게 기능을 만들수 있어요. 근데 이게 제품화 되고 사용자 늘어나면 기능을 하나 추가할 때 마다 기존 것과의 연결 및 확장성등을 고려하면서 점점 기능 개발에 시간이 오래 걸리게 됩니다. 급하게 만드느라 가지게 되는 기술 부채도 있고요. 개발자들은 이걸 어느정도 이해하는데요. 개발에 대한 지식이 없는 CEO라면 그때부터 불화가 생기기 시작합니다.
   ""왜 예전처럼 빨리 개발을 못/안하지? 개발팀이 실력이 없나? 노는거 아냐?""
   설마 이러겠어? 싶지만 정말 많이 일어나는 상황입니다. 그래서 저는 제품에 대해서 처음부터 기획하고 개발까지 해본 사람이 비젼을 가지고 회사를 창업하고 키워 나가는 것을 더 선호합니다.

   설마가 아니라 10에 9정도 회사는 레거시를 알지만 이해를 못해요
   기술부채 들어봤지만 모르죠 그러면서 점점 해당이슈가 언급되면 모르는 C 계열에서 나는 잘몰라 알고 싶지도 안아 그냥 해결해줘 라는 말을 반복하죠 본인이 C급임에도 불구하고요
   그러인해 삐걱거리는 회사가 많으니 저는 개발출신이 CEO로 되면 뭐든지 승산이 많이 있다고 보고 사업 달릴 준비 중입니다.
   권한 인계, 자유, 책임 이 3가지만 잘하면 누구나 좋은 CEO가 될 수 있다고 봅니다
   초기 CEO들은 초반에 자기가 모두 핸들링 하려 하는데요 특히 이것만 조심하고 신뢰를 기반으로 권한 인계를 하시길 바랍니다.

   감사합니다!! 하나하나 잘 읽고 숙지해보겠습니다
"
"https://news.hada.io/topic?id=4939","AWS alert Iaalert IaC

   AWS alert을 IaC 하면서 겪은 여정을 소개합니다.
   - 기존 Slack 연동 방식들의 문제점
   - Chatbot을 이용한 Slack 연동 개선, 이것을 terraforming 하기
   - PagerDuty와의 연동, 마찬가지로 이것도 terraforming 하기
"
"https://news.hada.io/topic?id=4996","WSLg : Windows Subsystem for Linux GUI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 WSLg : Windows Subsystem for Linux GUI

   - 윈도우 WSL을 통해서 Linux GUI 어플리케이션 (Wayland 및 X11)을 실행 지원하기 위한 프로젝트
   - 윈도우/리눅스 앱간에 심리스한 경험을 제공. 스타트 메뉴/Alt-Tab/복사&붙여 넣기 등 지원
   - Windows 10 Insider Preview 21362+ 필수 및 vGPU 추천

   2만 천번대 빌드는 윈도우 10이 아닌 윈도우 11로 10월 초에 정식 출시되고, 윈도우 11에서 윈도우 10으로 백포팅될지 여부는 아직은 모르는것 같아요.

   - WSL2에서 초기 미리 보기 단계의 GUI 앱 지원이 사용 가능합니다 https://news.hada.io/topic?id=4119
   WSLg는 예전에 프리뷰단게에서 올라왔던 적이 있는데, GitHub Repo 에선 지속적으로 업데이트 되고 있어서 별도 뉴스로 올려봅니다.
"
"https://news.hada.io/topic?id=5053","ErrorPush - 미니멀한 에러 콜렉션 서비스 오픈소스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ErrorPush - 미니멀한 에러 콜렉션 서비스 오픈소스

   - 직접 호스팅 가능한 Sentry/Rollbar 대체제
   - Rollbar 클라이언트와 호환 (엔드포인트만 변경해서 바로 사용 가능)
   - PostgresSQL 테이블 하나에 모든 에러로그 저장
   - Metabase로 시각화 가능

   sentry는 js map 파일을 파싱해 주는 기능이 있는데 ErrorPush는 없는 듯 해요.
   실무에서 사용하기에는 너무도 미니멀한 기능인 듯 합니다.
   이메일 노티피케이션도 필요하고요.

   - Metabase - 오픈소스 BI 및 시각화 솔루션 https://news.hada.io/topic?id=1797
   사실 Sentry 가 오픈소스여서 그거를 직접 사용하는 경우도 많지만, 기능이 많고 무거워서 관리도 어려운 편이라 이렇게 간편하게도 사용할 수 있다는 걸 보여주는 오픈소스 인듯 합니다.
   Rollbar 를 사용하는 쪽에서는 차라리 간편하게 적용할 수 있다는 것도 장점이네요.
"
"https://news.hada.io/topic?id=5023","GSMA의 Mobile Money 산업 현황 리포트 2021 [86p PDF]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              GSMA의 Mobile Money 산업 현황 리포트 2021 [86p PDF]

   - 2020년 한해의 모바일 머니 리포트
   - 전세계 12억개 계좌가 있음
   - 3억개가 매월 사용됨 (MAU)
   ㅤ→ 1억이 되는데 2006년부터 10년이 걸렸지만, 그뒤로 약 2.5년마다 1억명씩 증가
   - 96개국 310개의 모바일 머니 서비스
   ㅤ→ 사하라 남부 아프리카 157, 동아시아 49, 유럽&중앙아시아 9,라틴아메리카 30, 중동&북아프리카 29, 남 아시아 36
   ㅤ→ 사하라 남부만 5억개 계정, 활성계정 1.5억개 및 전체 트랜잭션의 절반 이상을 차지
   - 하루 $2b, 월 $70b(81조원)이 모바일에서 트랜잭션됨
   ㅤ→ 24% 현금 인입, 19% 현금 인출, 33% 순환, 12% 디지털 인입, 12% 디지털 인출
   ㅤ→ 33% 순환중 29%가 개인간 거래, 4%는 판매자와의 거래
   ㅤ→ 매월 $1B 가량이 국제 거래됨

   아프리카의 성장세 및 전체 지분이 엄청 크네요. 기존 은행 시스템이 제대로 갖춰지지 못했기 때문에 모바일 뱅킹이 빠르게 뻗어나가는 듯 합니다. 아래 글도 함께 참고하면 좋을 것 같습니다.
   - Tech in Africa https://news.hada.io/topic?id=4743
"
"https://news.hada.io/topic?id=4993","Rust 1.55.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Rust 1.55.0 릴리즈

   - cargo test/check 에서 중복 에러 표시 제거
   - 더 빠르고 정확한 float 파싱
   - 열린 범위 패턴 추가
   ㅤmatch x as u32 {
   ㅤㅤ0 => println!(""zero!""),
   ㅤㅤ1.. => println!(""positive number!""),
   ㅤ}
   - std:io:ErrorKind variants 업데이트
   - API 안정화
"
"https://news.hada.io/topic?id=4952","Show GN: iOS Pomodoro Timer and Relaxing Sounds 앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Show GN: iOS Pomodoro Timer and Relaxing Sounds 앱

   집중을 위한 포모도로 타이머 iOS 앱 입니다.
   25분 집중 -> 5분 휴식하는 패턴으로 생산성을 향상 시킬 수 있어요.
   집중할 때에는 화이트 노이즈를 같이 플레이 할 수 있는데요. 바다소리, 빗소리, 새소리 등등 다양한 화이트 노이즈를 선택할 수 있습니다. 릴랙스를 위한 사운드 플레이어 탭에서 자연의 사운드를 들으며 릴랙스 할 수 있습니다.

   와 기존 사용자들 평이 정말 좋네요. 4300개에 별 4.8 이라니! (미국스토어)

   꾸준히 개선하다 보니 좋은 평점을 받는거 같아요
   긱뉴스 슬랙앱으로 받아보고 있는데 제가 만든 서비스를 긱뉴스로 보는날이 오네요
   긱뉴스 항상 잘 보고 있어요. 정말 도움이 많이 됩니다

   매각 했습니다.

   오... 축하드립니다. 매각 과정이나 뒷얘기 올려주시면 재밌을것 같네요
"
"https://news.hada.io/topic?id=5006","ES6 이후의 변경점 총정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ES6 이후의 변경점 총정리

   ES6(ES2015)
   - Array.prototype.includes()
   - 지수 연산자
   ES2017
   - 문자열 패딩
   - Object.entries()와 Object.values()
   - Object.getOwnPropertyDescriptors()
   - Trailing Comma
   - Atomics, SharedArrayBuffer
   ES2018
   - Object rest/spread
   - Async iteration
   - Promise.prototype.finally()
   - 정규식 기능 추가
   ES2019
   - Array.prototype.flat()과 Array.prototype.flatMap()
   - Object.fromEntries()
   - String.prototype.trimStart()와 String.prototype.trimEnd()
   - 선택적 catch 할당
   - Function.prototype.toString()
   - Symbol.prototype.description
   ES2020
   - BigInt
   - Dynamic import
   - 옵셔널 체이닝
   - Promise.allSettled()
   - Null coalescing operator(null 병합 연산자)
   - String.prototype.matchAll()
   - 모듈 네임스페이스 export 문법
   - import.meta
   - globalThis
   ES2021
   - String.prototype.replaceAll()
   - Promise.any()
   - 논리 연산자와 할당 표현식
   - 숫자 구분 기호
   - WeakRef
   - Intl.ListFormat
   - Intl.DateTimeFormat의 dateStyle 및 timeStyle
"
"https://news.hada.io/topic?id=5002","Appliku - Python/Django 앱을 위한 Heroku 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Appliku - Python/Django 앱을 위한 Heroku 대체제

   - Django 앱을 자신의 AWS/DO 계정에 5분만에 배포 해주는 도구
   - 배포 흐름
   ㅤ1. AWS 계정 연결
   ㅤ2. Git 계정 연결
   ㅤ3. 배포 완료
   - 기본 설정 내장 : 자신의 Dockerfile 도 사용 가능
   - 인스턴스내에서 여러 DB 관리(Postgres/MySQL/Redis/RabbitMQ)
   - Multi-Tenant SaaS 운영에도 적합
   - 싱글서버, 3개의 앱 은 무료

   HN의 Appliku 소개 글에 달린 댓글이 좋아서 옮겨봅니다.
   https://news.ycombinator.com/item?id=28468660
   ""내가 이쪽을 많이 들여다 봤는데요. Heroku 같은 배포 경험을 사람들이 그리워 해서, 그와 비슷한 배포 도구들이 요즘 엄청 많이 나오고 있어요. 이런 이유중 일부는 buildpack 이 오픈소스[1]이기 때문이고, 또 다른 이유는 이런 것들을 에뮬레이팅 하기 쉽도록 기술전환이 많이 되었기 때문입니다.
   이쪽에는 두개의 큰 카테고리가 있습니다.
   1. Dokku 처럼 한개의 VM(최근엔 멀티 노드도 시험중)을 사용하는 세계
   2. 쿠버네티스에서 Heroku를 복제하려는 Porter[2] 나 okteto[3] 같은 세계
   알게된 것중 하나는, 얼핏 보기에는 이런것들이 정말 멋져보이지만, 모든 조직에는 배포하는데 고유한 복잡성이 있다는 겁니다. 통합은 지옥이고, 스케일도 어렵고, 고객 하나당 세심한 케어(white glove treatment)가 필요합니다. 우리도 시도해 봤는데, 기업들한테 가서 팔려면 어딘가 구멍난 추상화를 해야만 합니다. 초기단계 스타트업에는 잘 동작하지만, 그들이 돈이 생기기만 하면 바로 좀더 커스터마이즈 가능하고 튼튼한 솔루션을 찾게 됩니다.
   이 프로젝트(Appliku)는 훌륭해 보입니다. 낙담시키지 않고 싶은데, 다시 말하지만 그곳은 레드 오션입니다.""
   [1] https://buildpacks.io/
   [2] https://www.getporter.dev/
   [3] https://okteto.com/
"
"https://news.hada.io/topic?id=4953","Docker에서 Podman으로 이관하기 (맥/윈)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Docker에서 Podman으로 이관하기 (맥/윈)

   - 맥은 brew , 윈도우는 WSL2 이용
   - docker machine 과 같은 podman machine 명령으로 VM을 생성
   > brew install podman
   > podman machine init / start
   > alias docker=podman
   - M1 에서는 qemu 를 이용(아직 불안정할 수 있음)
   - GUI관리자는 podman-macos 이용 (태스크바 유틸)
   ㅤ→ M1은 아직 개발중

   Docker Desktop 유료화 때문에 일어나는 일들이네요
   - Docker Desktop 이제 250+명 회사에서 사용시엔 유료 https://news.hada.io/topic?id=4927
   개인 사용자 경우에는 문제 없겠지만, 유료화 이슈인지라 조금 민감?하게 반응 하는듯
   리눅스에서 전환하는 것은 예전에 Redhat 에 올라온 글이 공유된 적 있습니다.
   - Docker에서 Podman으로 전환하기 https://news.hada.io/topic?id=3241
"
"https://news.hada.io/topic?id=4979","Shiki - A beautiful Syntax Highlighter","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Shiki - A beautiful Syntax Highlighter

   - TextMate 문법으로 문자열을 토큰화 하고, VSCode 테마로 토큰을 컬러링
   ㅤ→ 즉, VSCode에서 보이는 코드와 똑같이 렌더링된 HTML을 생성
   ㅤ→ VSCode 웹페이지에서도 Shiki를 사용중
   - 약 150개 프로그래밍 언어 지원
   - 테마 지원 (22개)
   - SVG Renderer 제공

   긱뉴스에도 나중에 Shiki를 붙이려고 생각중입니다. (언제가 될지는 몰라요.. ㅠ)
"
"https://news.hada.io/topic?id=4974","Y-Combinator 2021 여름 데모데이 참가 스타트업 377개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Y-Combinator 2021 여름 데모데이 참가 스타트업 377개

   - 온라인 진행
   - 377개 참가 회사의 짧은 소개
   - 47개국, 50% 이상이 미국외의 지역 출신 (인도/영국/멕시코..)
   - 37% 의 창업자가 흑인/라틴/여성 등
   소개만 보고 관심이 가는 회사들
   - Cococart : Shopify 보다 10배 빠르게 온라인 상점 만들기
   - Slip : 개발자가 강의를 만들어 팔수 있게 해주는 사이트 https://news.hada.io/topic?id=4804
   - Writesonic : AI로 마케팅용 카피라이팅 문구를 잘 만들게 도와주기
   - AppX : 창작자가 자신의 앱을 만들게 도와주는 플랫폼
   - SenpAI.GG : 게임을 잘하게 도와주는 AI 비디오게임 코치
   - Moving Parts : 앱에서 주로 사용하는 UI(가입/로그인 등)를 애플/구글 의 품질 수준으로 만들어서 제공하는 컴포넌트 라이브러리
   - Mailmodo : 이메일에 임베딩하는 폼/위젯을 만들어주는 No-Code 플랫폼
   - Breadcrumbs : 숨겨진 매출기회를 찾아주는 매출 증대 플랫폼
   - HotGlue : 다양한 SaaS 데이터소스와 연동해주는 도구
   - Tantl : 내부 업무 플로우를 쉽게 만들어주는 도구
   - BrightReps : 고객 응대 프로세스를 개선해주는 도구
   - Anakin : 이커머스 사이트에서 다른 사이트가 같은 상품을 얼마에 파는지 자동으로 모니터링 하고 비교해주는 도구
   - Beau : 노코드 클라이언트 워크플로우 생성 도구
   - Noloco : 노코드 브랜드 포탈 생성 도구
   - Evidence : 데이터 분석가를 위한 웹프레임워크 https://news.hada.io/topic?id=4897
   - Hypercontext : OKR, 팀 미팅, 1on1 미팅, 피드백 & 팔로우업 을 지원하는 그룹웨어
   - Whalesync : 노코드 도구를 서로 연결해주는 도구. Airtable/Webflow/Notion..

   https://axios.com/y-combinators-demo-day-loses-luster-fe34966b-062c-45…
   YC 배치당 너무 회사가 많아지고 실리콘 밸리에 올 필요가 없어지는 등 해서..
   (원래 YC는 투자한 회사들이 자신들 근처에 있어야 한다는 걸 강조했었죠)
   색이 좀 바랜 것 같다는 기사도 있습니다만, 여전히 스타트업 이벤트 중에선 가장 크고 중요한 행사입니다.
   데모데이 기간 동안 1500명의 투자자가 참여해서 5만개의 투자 리드를 생성했다고 하네요.
"
"https://news.hada.io/topic?id=5031","Architect (arc) - 서버리스 앱 작성/배포를 쉽게 해주는 프레임워크 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Architect (arc) - 서버리스 앱 작성/배포를 쉽게 해주는 프레임워크

   - 적은 코드로 대용량 확장가능한 서버리스 앱을 쉽게 만들수 있게 하는 것을 목표
   ㅤ→ DB Backed Web App on AWS
   - 로컬에서 실행/디버깅 지원
   - IaC(Infrastructure as Code) 프레임워크
   ㅤ→ .arc 설정 파일을 AWS CloudFormation으로 컴파일해서 배포
   ㅤ→ AWS SAM(Serverless Application Model)
   - OpenJS 재단. Apache 2 라이센스
   - Node, Deno, Ruby, Python 런타임 지원
   ㅤ→ Go/ .NET / Java 도 실제 인프라에선 지원하지만, 로컬 실행이 현재는 불가
   - VS Code / Sublime Text / Atom 에디터에서 .arc 파일의 문법 지원
"
"https://news.hada.io/topic?id=5014","Apple, iPhone 13 / 13 Mini 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Apple, iPhone 13 / 13 Mini 발표

   - A15 Bionic : 고성능 2코어, 고효율 4코어, 4코어 GPU
   - (PRODUCT)RED, 스타라이트, 미드나이트, 블루, 핑크
   - 16코어 뉴럴엔진
   - 13 Mini 140g, 5.4인치, 2340x1080
   - 13 173g, 6.1인치, 2532x1170
   - 듀얼 12MP 카메라 시스템
   ㅤ→ 와이드: ƒ/1.6 조리개
   ㅤ→ 울트라 와이드: ƒ/2.4 조리개 및 120° 시야각
   - 2배 광학 줌아웃
   - 얕은 피사계 심도 효과로 동영상을 촬영하는 시네마틱 모드(1080p 동영상, 초당 30 프레임)
   - 한국출시 모델 A2628, A2633
   - 미국출시 모델 A2481, A2482 (5G NR mmWave 포함)

   미니는 12 에 비해서 7g, 13은 12g 더 무거워 졌네요.
   두께가 0.25mm 정도 굵어졌는데, 카메라 키우면서 더 무거워진 것 같네요.
"
"https://news.hada.io/topic?id=5005","머신러닝 연구자들을 위한 제언 (번역)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         머신러닝 연구자들을 위한 제언 (번역)

   1. 모델을 만들기 전에 해야할 일
   1.1. 데이터를 살펴보세요
   1.2. 모든 데이터를 보지 마세요
   1.3. 충분히 많은 데이터를 확보하세요
   1.4. 도메인 전문가들과 소통하세요
   1.5. 많은 사전 조사를 하세요
   1.6. 모델이 배포되는 상황을 고려하세요
   2. 신뢰할 수 있는 모델을 만드는 방법
   2.1. 테스트 데이터의 정보가 유출되지 않게 하세요
   2.2. 다양한 모델을 사용해보세요
   2.3. 부적절한 모델 사용하지 않기
   2.4. 하이퍼파라미터를 최적화하세요
   3. 모델을 올바르게 평가하는 방법
   3.1. 적절한 테스트 데이터를 사용하세요
   3.2. 검증 데이터를 사용하세요
   3.3. 모델을 여러 번 평가하세요
   3.4. 불균형한 데이터에는 정확도를 사용하지 마세요
   4. 모델을 공정하게 비교하는 방법
   4.1. 더 큰 숫자가 더 좋은 모델을 의미하지 않습니다
   4.2 커뮤니티 벤치마크를 신뢰하지 마세요
   5. 결과를 보고하는 방법
   5.1. 결과를 투명하게 공개하세요
   5.2. 여러가지 방법으로 성능을 측정하세요
   5.3. 데이터를 넘어선 일반화를 하지 마세요
"
"https://news.hada.io/topic?id=5049","DOS Subsystem for Linux","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        DOS Subsystem for Linux

   - DOS 에서 실행되는 WSL 대체제
   - MS-DOS 시스템에 Real Linux 환경을 연동
   - DOS 커맨드 프롬프트 상에서 DOS/Linux 프로그램을 동시에 활용 가능
"
"https://news.hada.io/topic?id=4960","Show GN: 소쿠리캣","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Show GN: 소쿠리캣

   마크다운을 hugo, docsify, PDF로 export 해주는 웹서비스입니다.
   블로그, Jekyll 등과 다른 점은 책 제작을 염두한 서비스로서, gitbook과 조금 더 유사합니다.
   LaTeX 수식을 지원합니다.
   소쿠리캣에서 마크다운으로 작성해서 각각 docsify, hugo, PDF로 빌드한 예제입니다.
   - Docsify: https://docsify.sokuricat.com/b1tk3y/tech-hr-guide-7895/#/
   - Hugo: https://hugo.sokuricat.com/b1tk3y/tech-hr-guide-7895/
   - PDF: https://drive.google.com/file/d/19yL07h72b_0Pe0GkzguNQbemJS6mmbxr/view

   감사합니다.

   좋네요~~ '신간' 들어가서 보니까 TOC의 경우 스크롤바를 내리면 따라오질 않는거 같은데, 의도하신건지 궁금하네요

   고치고 싶은데 아직 못 한 겁니다. ㅜㅜ
   주말쯤 되어야 손을 볼 수 있을 거 같습니다. ㅜㅜ

   오 멋진 서비스입니다. 요즘 저도 마크다운으로 글을 쓰는 일이 많아졌는데 매우 좋아보여요

   감사합니다. 많이 사용해 주세요.

   와 깔끔하네요! 런칭 축하드립니다.
   여기 소개에 적어주신 ""책 제작을 염두에 둔 서비스"" 라는 설명이 첫 페이지에 보이면 어떨까요?
   ""가볍게 글을 쓰고 책으로 만들어 보세요"" 같이요
   아마도 책을 쓰는 사람들은 IT서비스에 친숙하지 않은 분들이 더 많을 것 같거든요.
   PDF로 만들어서 실제 책을 인쇄해주는 부크크 https://www.bookk.co.kr/ 등으로 연계해서 실제 책을 바로 인쇄가능하다는 것도 적어주시면 어떨까요? ^^

   의견 감사합니다.
   '책'이라는 워딩을 강조할 필요가 있겠네요.
   서비스 올리고 지인 몇 분께 피드백을 부탁드렸는데, 업종에 따라 정말 피드백이 다르더군요. 말씀처럼, IT에 익숙치 않은 분들을 위해 더 고민해야겠더라구요.
   실제 책 제작은 원고 작성 외에 할 일이 많아서, 원래는 출판사나 테크니컬 라이터가 협업할 수 있는 기능을 기획했습니다.
   사정상 내년 3월까지는 시간을 쪼개서 작업해야 해서 어디까지 할 수 있을지 모르겠습니다.
   지금은 틈틈히 프레젠테이션 용으로 export 하는 기능을 만들고 있습니다.
"
"https://news.hada.io/topic?id=4966","Kubescape - 쿠버네티스 보안 설치 확인도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Kubescape - 쿠버네티스 보안 설치 확인도구

   - NSA/CISA 의 ""Kubernetes Hardening Guidance(보안 강화 지침)"" 에 맞게 안전하게 배포 되었는지를 테스트하는 오픈소스
   - 싱글 YAML 부터 클러스터 단위까지 테스트 가능
   - JSON / JUnit XML 결과 출력으로 CI 프로세스에 연동 지원
   - Helm 지원

   - 미국 국가안보국(NSA)의 쿠버네티스 보안 강화 지침 [59p PDF] https://news.hada.io/topic?id=4758
   위 문서에서 제안하는 지침들을 자동으로 테스트합니다.
"
"https://news.hada.io/topic?id=4972","아마존, 자체 브랜드 TV 10월에 출시할 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       아마존, 자체 브랜드 TV 10월에 출시할 것

   - Alexa를 기본 내장한 55~75인치 크기의 TV로 TCL같은 써드파티에 의해 제조 될 것
   - 이미 Amazon Fire TV Stick / Cube 등의 기기를 통해서 TV와 연결해 왔지만, 이제 직접 LG / 삼성 등과 경쟁하게 될 것
   - 빠르면 10월에 미국부터 출시할 것으로 예상
   * TCL은 설립 40년된 중국 회사로, 스마트 TV / 사운드 바 / 모바일폰 / 에어컨 / 세탁기 / 냉장고 등을 제작
   ㅤ- 2019년 기준 전세계 시장 점유율 13%로 2등 (1위 삼성 17.8%, 3위 LG 11%)
   ㅤ- 32~85인치 다양한 크기로, Roku 및 Android 를 내장한 스마트 티비가 주력 상품
"
"https://news.hada.io/topic?id=4958","Smartcrop.js - 콘텐츠 인식해서 이미지 크롭하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Smartcrop.js - 콘텐츠 인식해서 이미지 크롭하기

   - 이미지의 중요 부분을 찾아서 잘 보이도록 크롭하는 오픈소스
   - 브라우저, Node.js, CLI 에서 사용 가능
   - 다양한 얼굴 인식 라이브러리와 연동 지원
   ㅤ→ ccv.js, tracking.js, opencv.js
   - 100+장 이상의 Test Suite 제공
   - Test Bed에서 자신의 이미지 테스트 가능

   JS로 Content-Aware 이미지 리사이징 하기 https://news.hada.io/topic?id=4094
   위의 것은 필요 없는 부분을 줄여서 크기를 조정하는 건데,
   이거는 중요 부분만 찾아서 크롭 하는 방식이라서 두개를 묶어서 쓰면 좋을거 같아요.
"
"https://news.hada.io/topic?id=5056","PySimpleGUI - 일반 사용자를 위한 Python GUI 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                PySimpleGUI - 일반 사용자를 위한 Python GUI 만들기

   - 다양한 위젯을 이용하여 파이썬 프로그램에 쓰기 편한 UI를 생성
   - tkinter, Qt, WxPython, Remi 위에 더 쓰기 편한 Wrapper를 제공
   ㅤ→ 해당 프레임워크를 직접 이용하는 것보다 절반에서 1/10 정도의 코드만 필요
   - 수많은 Python 프로그램들이 대부분 커맨드라인 기반인데, 이들을 일반 사용자들이 쓸수 있도록 GUI Gap을 없애는 것을 목표
   - 멀티 윈도우 어플리케이션도 간단히 구현
   - Python 2.7 & 3 지원
   - 300개 이상의 데모와 쿡북 제공

   - DearPyGui - GPU 가속되는 파이썬 GUI 프레임워크 https://news.hada.io/topic?id=2744
   - Gooey 로 모든 언어 및 CLI 도구의 GUI 만들기 https://news.hada.io/topic?id=582
"
"https://news.hada.io/topic?id=5013","Apple, iPhone 13 Pro / Pro Max 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Apple, iPhone 13 Pro / Pro Max 발표

   - 120Hz ProMotion 적용 OLED
   - A15 Bionic : 고성능 2코어, 고효율 4코어, 5코어 GPU
   - 16코어 뉴럴엔진
   - 그래파이트, 골드, 실버, 시에라 블루
   - Pro 203g, 6.1인치, 2532x1170
   - Pro Max 238g, 6.7인치, 2778x1284
   - 프로급 12MP 카메라 시스템
   ㅤ→ 망원: ƒ/2.8 조리개
   ㅤ→ 와이드: ƒ/1.5 조리개
   ㅤ→ 울트라 와이드: ƒ/1.8 조리개 및 120° 시야각
   - 3배 광학 줌인, 2배 광학 줌아웃, 6배 광학 줌 범위
   - 얕은 피사계 심도 효과로 동영상을 촬영하는 시네마틱 모드(1080p 동영상, 초당 30 프레임)
   - 향상된 배터리 사용 시간
   ㅤ→ iPhone 13 Pro는 iPhone 12 Pro 대비 하루 최대 1시간 30분 연장
   ㅤ→ iPhone 13 Pro Max는 iPhone 12 Pro Max 대비 하루 최대 2시간 30분 연장
   - 한국출시 모델 A2638, A2643
   - 미국출시 모델 A2483, A2484 (5G NR mmWave 포함)

   Pro Max 무게가 전보다 더 늘어서, 이전 버전 Pro Max 쓰시던 분들은 실망하시는거 같더라공요ㅠ 무게 빼고 딱 좋은데 그 빼고가 더 나빠져서...

   제가 12 Pro Max 쓰는데 확실히 무겁기는 합니다. 근데 뭐 쓰다보니 익숙해져서.. 배터리 늘어났다는거에 만족할거 같아요.

   한국은 이번에도 mmWave 제외네요. 국내 통신사들도 도입한다고 기사는 떴던거 같은데..
   이번 모델의 메인은 ProMotion 과 카메라 인듯 하네요. 뒷면 카메라 크기가 이제 절반을 넘어버렸습니다.
   시네마틱 모드는 훌륭하긴 한데.. 전 프로사용자가 아닌듯 합니다.
   배터리 사용시간 증가는 좋네요.
"
"https://news.hada.io/topic?id=4938","Buttons Generator - CSS 버튼 생성기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Buttons Generator - CSS 버튼 생성기

   - 간단히 사용가능한 버튼 UI CSS 모음
   ㅤ→ 클릭하면 CSS 복사
   - 3D, Gradient, Shadow border, Neumorphic, Retro
   - Shadow Border + Sliding effect
   - Transition on Hover
   - Arrow on Hover
   - Shadow on Click
   - Sliding Effect : 상하좌우 방향별
"
"https://news.hada.io/topic?id=4935","Deno Deploy Beta 2","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Deno Deploy Beta 2

   - 멀티테넌트 JavaScript 서버리스 엔진
   ㅤ→ V8 및 Deno CLI를 그대로 사용
   - Deploy의 목표는 최신 서버사이드 JS를 호스팅하는 최고의 장소가 되는 것
   - Beta 2 변경점
   ㅤ→ Deno.readFile() 로 스태틱 파일(이미지,마크다운,CSS 등) 로딩 가능
   ㅤ→ Deno.listen(), Deno.serveHttp() 추가
   ㅤ→ Crash Report 추가 : 예외발생전 100줄의 로그를 저장
   ㅤ→ 새로운 디자인의 대쉬보드

   Deno Deploy Beta 1 https://news.hada.io/topic?id=4586
"
"https://news.hada.io/topic?id=5029","Paper to HTML - 논문을 읽기편한 HTML로 변환","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Paper to HTML - 논문을 읽기편한 HTML로 변환

   - 머신러닝을 이용하여 PDF, LaTeX, PubMed Central XML 의 내용을 읽어서 HTML로 변환
   - 접근성 증대 목적
   - AI 기반 연구자료 검색엔진인 Semantic Scholar 의 실험적 프로토타입
   - 현재는 추출된 이미지/콘텐츠만 캐슁하며, 똑같은 문서를 업로드한 사람에게만 빠르게 서비스하는 용도로 사용됨. 업로드한 파일은 보관하지 않음
   - 제한 사항
   ㅤ→ 표(Table)는 이미지로 추출 됨
   ㅤ→ 수학(Math) 콘텐츠는 정확도가 낮거나 거의 추출되지 않음
   ㅤ→ LaTex/PubMed 처리는 PDF보다 기능이 일부 부족할 수 있음
   - 차후에 Semantic Scholar 에 접근성 기능을 추가할 계획을 가지고 있음

   PDF를 다른 포맷(epub 좋아요)으로 변환할때 문제가 되는게 위에 나열된 표, 수식인데, 수식이 잘 안되면 뭐가 강점인지 모르겠네요.
   --
   데모 보니 쓸만하네요.

   편하기는 할것 같은데, 본인의 논문이 HTML 형식으로 변환되는걸 원하지 않을 사람도 있을것 같아요. 뭔가 권리자가 변환에 대해서 opt-out 을 할 수 있으면 좋겠군요...
   제가 옛날에 (진짜 옛날이네요 ㅜㅜ) LaTex로 논문을 쓰면서 엄청난 희열을 느꼈었거든요. 내용은 망이었지만, 렌더링이 너무나 깔끔하고 아름다워서 그때 느낀 감정이 여전히 기억납니다. 크누스옹은 신이다 신... 이라는 생각을 TeX을 보며 생각했는데... 아무튼, 본인이 쓴 저작물의 내용도 중요하지만, 그 논문의 형식이나 표현의 디테일도 중요하게 생각하는 사람들이 있을것 같다는 생각이 문득.

   갤러리 둘러보니 품질은 꽤 쓸만하네요.
   https://papertohtml.org/gallery
   Google Scholar 에 이런게 적용되면 편하려나? 하는 생각은 드네요.
"
"https://news.hada.io/topic?id=5059","Theatre.js - 웹기반 모션 디자인 편집기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Theatre.js - 웹기반 모션 디자인 편집기

   ""Hackable Animation Tool""
   - 고화질 모션 그래픽을 위한 애니메이션 라이브러리
   - Three.js 및 다른 3D 라이브러리로 만든 객체나 HTML/SVG 를 애니메이트
   - 마이크로 인터랙션 구현 (버튼에서 작은 효과 주기등)
   - JS 값들에 대한 상세한 모션을 구성
"
"https://news.hada.io/topic?id=4999","Amazon Fire TV Omni 와 4 시리즈 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Amazon Fire TV Omni 와 4 시리즈 공개

   - 아마존이 직접 만드는 TV
   - 고가형 Omni Series
   ㅤ→ 43/50/55/65/75 인치
   ㅤ→ 4K, HDR10, Dolby Vision(65/75만)
   ㅤ→ Alexa용 마이크 내장
   ㅤ→ 3 x HDMI
   ㅤ→ $409~$1099
   ㅤ→ PIP 기능으로 문앞 스마트 카메라 확인 가능(Ring)
   ㅤ→ USB에 웹캠을 꼽으면 Alexa Calling으로 대화면 화상통화 지원
   - 저가형 4 Series
   ㅤ→ 43/50/55 인치
   ㅤ→ 4K, HDR10
   ㅤ→ $369~$519
   - Fire TV Stick 4K Max
   ㅤ→ 4K, HDR, HDR10+, Dolby Vision, Dolby Atmos, Wi-Fi 6 지원
   ㅤ→ $54.99

   아마존, 자체 브랜드 TV 10월에 출시할 것 https://news.hada.io/topic?id=4972
   예측 기사가 뜨더니 바로 보도자료 및 제품 주문 페이지 까지 공개 했네요.
   TCL이 만들었다고는 정확히 안나왔지만, HDMI 포트 레이아웃이 TCL의 6 시리즈와 같은 거로 봐서는 맞을거 같다고 하네요.
   (그래서 HDMI 2.1 의 4K@120HZ 같은 기능은 포함 안된 것 같다고 )
   https://theverge.com/2021/9/…
"
"https://news.hada.io/topic?id=4969","Show GN: EasyLogic Studio","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Show GN: EasyLogic Studio

   디자인의 결과물을 어디서든 바로 사용할 수 있게 처음부터 css/svg 형태로 구현된 웹디자인 툴입니다.
   디자인 툴이라 Figma 처럼 좀 더 자유로운 에디팅을 목표로 하고 있습니다.
   오픈소스이고 플러그인 형태로 에디터 전체 UI 와 렌더링 영역을 제어 할 수 있도록 되어 있습니다. 그래서 기존에 사용하던 UI 를 렌더링 레이어 형태로 붙여서 사용할 수도 있습니다.

   아래는 간단하게 만들어본 플러그인 목록입니다.
   - react plugin template - https://github.com/easylogic/editor-plugin-react
   - vue plugin template - https://github.com/easylogic/editor-plugin-vue
   - ToastUI Chart plugin - https://github.com/easylogic/editor-plugin-tui-chart
   - Feather Icons plugin - https://github.com/easylogic/editor-plugin-feather-icons
   - Primer Oct Icons plugin - https://github.com/easylogic/editor-plugin-primer-oct-icons
   - AntDesign Icons plugin - https://github.com/easylogic/editor-plugin-ant-design-icons
   - color assets plugin - https://github.com/easylogic/editor-plugin-color-asset

   감사합니다.

   정말 대단하네요. 응원합니다.

   응원 해주셔서 감사합니다. 열심히 해보겠습니다. ^^

   와 좋네요. 편집기 기능이 훌륭해서 여러가지 파생이 가능할거 같습니다!! 구글 프레젠테이션 같은것도 가능하겠어요.

   관심가져 주셔서 감사합니다. 말씀하신대로 여러 방향을 생각해보고 있습니다. 아직은 혼자 하다 보니 확장을 너무 많이 할 순 없는 상태라 코어에 집중을 하고 있는 상태입니다.

   응원합니다! 멋져요

   응원 감사합니다. ^^

   우와 입이 안 다물어지네요... 거의 혼자 만드신 거 같은데, 어떻게 이런 엄청난 프로젝트를 만들어내실 수 있는지 정말 궁금하네요...
   제게는 기능의 양 뿐만 아니라 완성도까지 완벽쓰해보입니다..! 완전 응원합니다!!!

   좋게 봐주셔서 감사합니다. ^^
   말씀 주신 대로 아직은 혼자 하다 보니
   목표랑 코드 퀄리티를 맞추기가 힘들어서 자체적으로 최적화된 패턴으로 만들어서 빠르게 코드를 적용해볼려고 하고 있습니다.
   응원 감사드립니다. ^^

   후아 기능이 엄청나군요. 한국 뿐만 아니라 해외에 홍보하기에도 좋은 오픈소스네요.
   응원합니다!!

   말씀감사합니다. ^^ 아직 갈길이 멀지만 열심히 하겠습니다.
"
"https://news.hada.io/topic?id=4942","하이퍼링크는 왜 파란색일까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            하이퍼링크는 왜 파란색일까?

   - 웹의 하이퍼링크 색상이 기본으로 파란색인 이유의 기원을 찾아서
   - 1993년 Mosaic 브라우저에서 링크는 파란색이었는데 그게 정말 시초일까 ?
   - 1960년대부터의 모든 하이퍼링크 솔루션들에 대해 알아보기
   ㅤ→ Xanadu, HyperCard, Windows 3.1, Cello, Netscape, IE..

   파란색 하이퍼링크를 누르고 이 글로 들어왔습니다

   안 눌러볼 수 없는 제목이네요 ㅋㅋ

   다들 그러실 거 같아서 정답은 안 적었습니다!?

   하지만 긱뉴스는 파란색 링크는 사용하지 않고 밑줄만 일부 사용합니다.
   ( 물론 주로 모바일 및 이메일 클라이언트에서 보게 되는 Weekly는 파란색을 사용합니다. )
   디자인 선택의 문제이긴 하지만.. 제 관점에서 기본 파란색은 약간 페이지가 오래되어 보이는 효과가 있는거 같아요 ^^;
"
"https://news.hada.io/topic?id=4995","Show GN: Goodreads Filter (goodreads.com에서 평점 최상의 책들 모음)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Show GN: Goodreads Filter (goodreads.com에서 평점 최상의 책들 모음)

   goodreads.com에서 가장 평점이 높은 책들(+분명 처음 들어보는 책들도 포함해서)을 모아놓은 사이트입니다.
   저는 현재 작은 스타트업을 운영 중인데요, 책 읽는 것을 너무 좋아하다 보니 책을 고르는 기준도 까다로워졌습니다. 제가 가장 좋아하는 방법은 goodreads 평점을 먼저 보는 것인데, 여기서 3점대를 받은 책은 내용이 부실한 경우가 많았습니다. 그래서 제게는 아주 유용한 사이트입니다. 다만 이 사이트를 이용하는 데 있어 해결되지 않는 불편함이 있었고 그래서 직접 해결하기로 했습니다. 제가 느낀 문제점은 다음과 같습니다:
   Problem
   1. goodreads에 책 평점이 수천만 개(아마도) 쌓여 있는데, 좋은 책을 쉽게 찾기가 어려운 구조로 UI/UX가 설계되어 있다
   2. 최근 Public API도 폐쇄해서 평점이 높은 책을 찾기가 더 어려워졌다
   3. 이 문제를 해결하는 웹사이트를 검색해봐도 잘 안 나온다
   Tech Stack
   1. 크롤링: Python
   2. 호스팅: Netlify
   3. 웹: ReactJS/Javascript
   4. 에디터: vim
   ---
   현재는 백엔드/DB 없이 json를 프론트 bundle에 직접 넣어서 배포하고 있고, 따라서 주기적으로 제가 직접 데이터를 업데이트하고 있습니다.
   현재 일 방문자가 20명 정도인데 1,000명이 넘을 정도가 돼야 자동화 할 가치가 있을 것 같습니다 :)
   다행히(?) 좋은 책은 평점이 아주 많이 쌓여 있어서 평균 점수가 잘 변하지 않네요~

   책읽는 건 좋은데 시간이 부족해서 좋은 책을 고르고 싶다는 말씀에 공감이 많이 되네요. 런칭 축하드립니다.
   (이메일 주소 넣고 구독을 해봤는데 팝업이나 아무런 노티스 없이 인풋 값이 사라져버려서 좀 당황했습니다. 혹시 버그인가 싶어서 말씀드려요. ios 14.7.1 크롬 브라우저였습니다.)

   email 입력 시 얼러트가 나오도록 간단히 수정했습니다 :)

   어제 xguru님 피드백 받고 급하게 고치느라 이메일 입력 후 reaction을 제공하는 것을 작업 못했습니다ㅜ 오늘 퇴근 후에 만들어볼게요! 피드백 감사합니다 웹사이트에서 좋은 책 많이 발견하셨으면 좋겠어요~! :)

   와 그래도 바로바로 바뀌는게 넘 좋네요. (이메일 입력창 디자인 깔끔해서 좋네요! 부러운 능력.. )

   xguru님 의견대로면 좀 더 매력적인 사이트가 될 것 같습니다.
   에디터 vim이 무슨 말이실까요? 개발하실 때 쓰신 에디터?

   아 네 에디터입니다ㅎㅎ 에디터가 프레임워크나 언어에 비해서는 덜 중요한 정보이기는 한데, 간혹 사용하는 언어에 따라 도저히 vim을 사용할 수 없는 경우도 있더라고요. vim에 익숙해지고 나면 vim에서 작성이 어려운 언어로는 개발하기 싫어지는 부작용이 있는 것 같아요ㅎㅎ
   예를 들어 iOS 앱을 Swift로 만들 때는 vim을 쓰는 게 불편하다 보니 Swift는 잘 안 쓰게 되더라고요. 일부 Geek 분들에게는 재밌는 정보일 수 있을 것 같아 기재해두었습니다 :)
   ---
   xguru님 의견대로 NavBar에서 개인적인 내용들 모두 제거하고 메일 주소 기입하는 것을 빠르게 추가하였고, 시간 될 때 amazon 링크로 넘어가는 버튼도 추가해볼까 합니다! :)

   런칭 축하드립니다! 사이트 깔끔하네요.
   지금은 바로 GoodReads로 가는데, 책에 호버할 때 아마존 구입하기 링크도 같이 두어서 Affiliate 수익을 내시면 좋을 것 같아요!
   영문 사용자를 위한 사이트 이긴 하지만, 이 GoodRead의 추천서적을 가져다가 한글판이 나온 책들도 같이 DB화해서 제공하면 한국 사용자한테도 유용하고, Yes24 링크로 연결한다면링크프라이스를 통해서 제휴 마케팅도 가능할 것 같습니다.
   상단에 Personal Blog 및 개발자님 페이스북 연결 링크가 너무 잘 보여서, 사이트 자체가 개인사이트 처럼 느껴지는 데요. 회사가 운영 중인 서비스인 것 처럼 보여야 더 신뢰가 갈 것 같아요. Any Word? 도 바로 이메일 mailto: 여서 웹에서 보는 사람들은 메일 클라이언트가 떠서 당황할 것 같습니다.
   방문자 이메일 주소를 받아서 변경되거나 신규 진입한 책이 나오면 알려주는 건 어떨까요?

   감사합니다!
   말씀해주신 부분들 후딱 고쳐봐야겠네요 :)
"
"https://news.hada.io/topic?id=5024","Dopefolio - 개발자를 위한 포트폴리오 템플릿 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Dopefolio - 개발자를 위한 포트폴리오 템플릿 오픈소스

   - 쉬운 설정
   - 빠른 속도와 SEO 고려
   - 멀티 페이지 지원 및 반응형
   - 별도 프레임워크와 라이브러리 필요 없음
   - 클론해서 수정후 Netlify에서 호스팅 하는게 가장 쉬움
"
"https://news.hada.io/topic?id=4963","맵(지도)의 미래는 게임의 현재를 따라간다 (번역)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      맵(지도)의 미래는 게임의 현재를 따라간다 (번역)

   - 지금의 맵(map) 서비스를 발명한 게임 개발자들
   ㅤ→ 구글어스(키홀) → 포켓몬고(나이언틱)
   - 아름답지만 아직 부족해 : 게임엔진그래픽스와 압축
   - 앞으로의 두가지 전망
   ㅤ→ 그 어느 때보다 중요해진 UX 디자인 : 언폴디드 Unfolded → 포스퀘어에 인수됨
   ㅤ→ 매핑/트래킹 시스템에 노출되는 것 : 스트릿크레드 StreetCred → 스냅에 인수됨
"
"https://news.hada.io/topic?id=4945","GitHub의 Git 프로토콜 보안 개선","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         GitHub의 Git 프로토콜 보안 개선

   - 모든 DSA 키 지원 중단
   ㅤ→ 사용중이라면 Ed25519 같은 키로 변경하여 새로 등록 필요
   - 새로 추가된 RSA 키에 대한 요구사항 추가
   - 레거시 SSH 알고리듬 제거 (HMAC-SHA-1, CBC)
   - SSH에 ECDSA 및 Ed25519 호스트 키 추가
   - 암호화 되지 않은 Git Protocol 제거
   - SSH 또는 git:// 으로 접속하는 경우에 해당 (https 경우는 상관없음)
   - OpenSSH 7.2, PuTTY 0.75 이상
   - libssh2 1.9.0 이상
"
"https://news.hada.io/topic?id=4944","Opendesktop.org - Libre Cloud Services","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Opendesktop.org - Libre Cloud Services

   - 클라우드 스토리지, 오피스, 연락처, 캘린더 등의 여러 무료 도구들을 묶어서 제공하는 무료 플랫폼
   ㅤ→ 하나의 계정으로 모든 서비스에 통합 접근
   - 지원 서비스 (대체하는 제품)
   ㅤ→ Pling : 마켓 (구글 플레이스토어)
   ㅤ→ openCode : 웹 기반 DevOps (GitHub, BitBucket 등)
   ㅤ→ NextCloud Files: 파일 저장소 (Dropbox, Google Drive 등)
   ㅤ→ Calendar : (구글 캘린더, MS Planner)
   ㅤ→ Contacts : (구글 컨택트, MS PhoneBook)
   ㅤ→ Chat : Matrix Riotchat 기반 (Skype, FB Messenger)
   ㅤ→ Direct Message : Discourse 기반
   ㅤ→ Forum : 토론 게시판, 메일링 리스트
   ㅤ→ Maps : OpenStreetMap (구글 지도)
   ㅤ→ 소셜네트워킹 : Mastodon (Twitter, Facebook)
"
"https://news.hada.io/topic?id=4998","Epic vs. Apple, 애플은 다른 인앱결제 방법을 허용해야 한다고 판결","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Epic vs. Apple, 애플은 다른 인앱결제 방법을 허용해야 한다고 판결

   - ""개발자가 앱 내 버튼/링크 등을 이용해서 다른 구매 방법으로 유도하는 것을 금지하는 행위를 영구적으로 금지함""
   ㅤ→ 즉, iOS앱은 애플의 인앱 결제 방식 말고, 다른 결제 방식을 사용자에게 제시 가능
   ㅤ→ 상급 법원에서 명령이 없는 한, 90일후인 12월 9일에 발효 될 예정
   - 별도 판결에서 Epic은 Fortnite앱에서 대체 결제를 구현한 시점에서 애플과의 계약을 위반한 것이며, 결과적으로 에픽이 이를 통해 벌어 들인 수익의 30%($3.65m)를 애플에게 지불해야 함
   - 전체 판결에서 곤잘레스 로저스 판사는 문제가 되는 ""시장에 대한 양사의 정의""를 거부했음
   ㅤ→ 여기서 얘기하는 시장은 ""디지털 모바일 게임 거래"" 이며, 일반적인 게임 도 아니고, 앱스토어와 관련된 애플의 자체 OS도 아님.
   ㅤ→ 이 시장 정의에 의하면, ""법원은 궁극적으로 애플이 연방/주 독점 금지법에 의한 독점 기업이라고 결론 내릴 수 없음"", ""그럼에도 불구하고 이 재판은 애플이 캘리포니아의 경쟁법에 따른 반경쟁적 행위를 하고 있음을 보여준 것""
   - 애플은 이 판결을 앱 스토어 모델의 승리라고 간주했음
   ㅤ→ ""법원은 우리가 알고 있던 대로 앱스토어가 독점 금지법을 위반하지 않는다는 사실을 확인했음. 우리 제품과 서비스가 최고라서 소비자와 개발자들이 우리를 선택하는 거라고 믿는다.""
   - 에픽의 CEO 팀 스위니는 판결에 실망감을 표시
   ㅤ→ ""오늘의 판결은 개발자나 소비자의 승리가 아니다. 에픽은 10억 소비자를 위해 인앱 결제 및 앱 스토어간의 공정한 경쟁을 위해 싸우고 있다""
   ㅤ→ 항소 할것이라고 밝혀

   앱스토어가 독점은 아니지만, 인앱결제는 허용해야 한다라고 한건데..
   어떻게 풀려갈지 모르겠습니다.
   - 애플 앱스토어와 구글 플레이에서 Epic Fortnite 삭제 https://news.hada.io/topic?id=2645
   - Apple, 에픽 게임즈의 개발자 계정을 차단할 것이라고 통보 https://news.hada.io/topic?id=2669
   - Epic과 Spotify 등 12개회사, '앱 공정성 연합' 결성 https://news.hada.io/topic?id=2903
   - '앱마켓 사업자 결제방식 강제 금지' 법안 국회 본회의 통과 https://news.hada.io/topic?id=4925
   - 애플, 외부 결제방법 이메일로 제안할 수 있게 App Store 약관 업데이트 https://news.hada.io/topic?id=4905
   - 애플, '리더 앱'에 웹사이트 링크 허용 예정 https://news.hada.io/topic?id=4951
"
