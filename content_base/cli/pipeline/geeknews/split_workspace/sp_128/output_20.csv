"https://news.hada.io/topic?id=2624","YCombinator Startup Library 2.0","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    YCombinator Startup Library 2.0

   YC가 지난 15년간 만든 스타트업 창업자를 위한 비디오/팟캐스트/글등을 모은 라이브러리
   분야별로 정리된 약 300개의 자료들
   - Growth, 비즈니스 모델, 회사 카테고리별 / 스테이지별 가이드, 창업자 멘탈관리, 펀드레이징, CEO/CTO를 위한 가이드, 인력 관리, 스타트업 아이디어, 제품 설계 및 테스트 방법, MVP 와 Product Market Fit 등
   이중 19개는 YC가 무료로 운영하는 스타트업 스쿨의 주요 커리큘럼 자료로 사용
"
"https://news.hada.io/topic?id=2645","애플 앱스토어와 구글 플레이에서 Epic Fortnite 삭제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   애플 앱스토어와 구글 플레이에서 Epic Fortnite 삭제

   - Fortnite 가 앱스토어 수수료를 회피하기 위해 자체 결제 시스템을 도입하자 앱스토어에서 삭제
   ㅤ→ 내부화폐인 V-Bucks 구입시 자체 결제를 이용하면 앱스토어 대비 20% 할인된 금액에 제공
   - 애플이 앱을 삭제하자, Epic 은 이에 대응하여 애플의 유명했던 1984 광고를 패러디한 광고를 유튜브와 포트나이트에 업로드
   ㅤ→ #FreeFortnite 로 팬들에게 동참을 유도
   - 안드로이드에서는 이미 자체결제를 하고 있었지만, 애플이 삭제하자 오늘 구글플레이도 같이 포트나이트 앱 삭제
   - Epic 은 캘리포니아 법원에 애플이 독점적 지위를 가지고 있다며, ""공정한 경쟁을 허용해달라""고 고소

   한편 reddit에는 애플이 안드로이드 버전 애플 뮤직 앱에서 30% 수수료를 피하기 위해 결제정보를 요구하는 것을 꼬집는 글이 올라왔습니다.
   https://reddit.com/r/apple/…

   구글 플레이 삭제 관련 기사가 같이 떳네요.
   Fortnite for Android has also been kicked off the Google Play Store
   https://theverge.com/2020/8/…
   Epic 이 Fortnite 의 사용자 기반 (약 7800만명) 을 가지고 한판 붙어보려는거 같은데 과연 성공할지..

   구글쪽도 고소했는데 고소장 내용에 구글이 하드웨어 벤더인 OnePlus 와 LG쪽에 런처가 앱을 사이드로딩 하지 못하게 막았다고..

   이건 좀 크네요. 별도 앱스토어도 돌리는 마당에 특정 앱 설치 자체를 막았다면..
   https://theverge.com/2020/8/…
"
"https://news.hada.io/topic?id=2669","Apple, 에픽 게임즈의 개발자 계정을 차단할 것이라고 통보.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Apple, 에픽 게임즈의 개발자 계정을 차단할 것이라고 통보.

   에픽 게임즈 뉴스룸이 발표하길. 앱스토어에서 포트나이트를 삭제한 애플에서 8월 28일 금요일에 기하여 모든 에픽 게임즈의 개발자 계정을 정지하고. IOS와 Mac 개발 도구에서 에픽 게임즈를 차단할 것이라고 에픽 게임즈에 통보했습니다.
   에픽 게임즈는 법원에 해당 행위를 중단해달라고 요청할 예정입니다.
"
"https://news.hada.io/topic?id=2660","Mozilla의 불확실한 미래","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Mozilla의 불확실한 미래

   모질라에 10년전 근무했던 사람이 좀 멀리서 객관적으로 바라본 모질라의 현재 상태 설명
   - 모질라는 실제로 2개 : 재단과 회사
   1. Mozilla Foundation(재단)
   ㅤ→ 2003년에 만들어진 비영리(비과세) 재단으로 넷스케이프 브라우저 소스코드 개발을 넘겨받기 위해 설립
   ㅤ→ 직원 80명, 2018년도 예산 $27M(320억원)
   2. Mozilla Corporation(회사)
   ㅤ→ 2005년에 만들어진 영리 회사로 모질라 재단이 전체를 소유
   ㅤ→ 직원수 천명이상, 2018년도 매출 $440M(5200억원)
   이 구조를 통해서 회사가 미국의 비과세 법령에 맞지 않는 일들을 할수 있게 되고, 그 수익 중 일부를 재단에 보내서 활동을 유지하게 할 수 있음. 이렇게 회사가 비영리 부모를 가지는 것은 모질라 회사의 멤버들이 재미난 일들과 적절한 연봉수준을 받으면서 활동 하는 것 자체가 재단의 공공목적을 도와주는 것이 되게 만듦.
   모질라 회사의 고객은 Firefox 의 사용자가 아님. 모질라 회사의 고객은 구글같은 대기업 들로 Firefox 브라우저의 기본 검색이 Google이 되게함으로써 돈을 벌고 있음. 다르게 말하면 2억명의 파이어폭스 사용자가 제품이며, 그들은 구글같은 회사의 광고의 노출대상이 되는 것.
   (구글의 크롬에 대한 경쟁자로 Firefox 가 존재하는 것 자체가 구글이 반독점에 대한 이슈를 피하는데 도움이 될 것으로 보임. 특히 MS가 자체 브라우저를 포기하고 크롬으로 넘어간 것도 있고. 하지만 이게 구글의 고위경영진에게 얼마나 중요한지는 불분명.)
   이 기본 검색엔진 계약은 모질라 회사의 초기인 2004년에는 $5M(60억원)에서 2005년엔 $50M(600억원)이 되고, 2017년에는 $540M(6400억원)까지 올라갔음.
   하지만, Firefox 사용자가 줄어들고(크롬 사용자 층이 더 넓어지면서), COVID-19 여파로 광고클릭양이 줄어들거나 하면서 구글과 다른 고객들이 모질라 회사에 주는 비용도 같이 줄어들게 되자, 모질라 회사는 인력의 1/4을 감축하게 된 것.
   (대조적으로 모질라 재단은 아무도 해고하지 않음. 재단은 Firefox 및 Mozilla 상표의 사용, 정부 및 재단 보조금, 개인기부등에서 예산을 충당. 2018년 기준 로열티가 예산의 절반이며, 보조금과 개인기부금이 각각 1/4씩을 차지)
   당신이 열성적인 Firefox 사용자여서 개발을 후원하고 싶다고 해도 직접 돈을 보낼 방법은 없음. 당신의 기부금은 재단으로 갈꺼고 그 비용은 그 재단이 하는 홍보(Outreach) 및 옹호(Advocacy) 활동을 지원하게 되는 것. ""모질라 재단은 제가 알기로는 Firefox 및 어떤 소프트웨어도 개발하지 않습니다.""
   - 현재 모질라는 어디에 있을까 ?
   모질라 회사는 왜 이런 상태가 되었을까 ? 내가 이걸 가장 잘 설명하는 방법은, 모질라 회사는 우리가 일반적으로 생각하는 비즈니스(수익에 집중하고 시장 규율을 따르는) 회사가 아니라는 것.
   모질라 회사는 예전의 Bell Labs 나 Xerox PARC와 유사하다고 생각할 수 있음. 그때 이 R&D 조직들은 각 시장에서 우위를 차지한 다른 사업에서 벌어들인 끝없는 수익으로 자금을 지원 받았음. 즉, 현재의 구글과 모질라의 관계는 AT&T 와 Bell Labs, Xerox 와 Xerox PARC 의 관계와 같음. ( 구글이 낸 수익으로 모질라에게 돈을 줘서 그 R&D를 지속한다는 얘기 )
   벨연구소와 제록스PARC 처럼 모질라 재단은 뛰어난 개발자들이 모여들 수 있게 했고, 유용한 프로젝트 부터 약간은 난해하고 신기한 프로젝트 까지 다양한 것들을 만들고 외부에 공공재 형태로 제공했음.
   벨연구소와 제록스PARC 처럼, ""Build It Yourself"" 에 빠져서 수직통합을 통해 모든것을 직접 만들었음. Firefox OS 부터, Rust 언어, 브라우저 까지.
   그래서 최종적으로, 벨연구소와 제록스PARC 가 했던 투쟁에 똑같이 동참. 연구중심 조직을 실제 비즈니스로 전환하고, 무료로 제공했던 것들로 부터 좀 더 가치를 끌어내려고 하는.
   - 모질라는 어디로 갈까 ?
   기본적으로 모질라 회사는 3가지 것을 동시에 추구했음.
   1. 옹호단체(Advocacy Organization)
   2. 대중을 위한 소프트웨어 및 관련 서비스의 개발자 및 배포자
   3. 연구 실험실(Research Lab)
   옹호단체가 되는것은 비용이 적게 들지만, 나머지 두개는 그렇지 않음. 소프트웨어 개발과 브랜딩&마케팅은 모질라 회사 및 재단 비용의 3/4를 소비(2018년 $450M). COVID-19가 발생하고 모질라 회사가 검색엔진 수익이 줄었을 때 그들의 선택은 2번과 3번 둘중의 하나를 그만두는 수 밖에 없음.
   그래서 최종적으로 모질라 회사의 경영진의 선택은 2번 소비자 대상 소프트웨어 및 서비스 회사가 되고, 그 외의 연구프로젝트를 포함한 모든 활동을 다 걷어내는 것이 된 것. 그러자 여러가지 문제에 직면하게 됨
   1. 모질라 정신은 사업보다는 R&D 실험실과 더 비슷한데, 모질라의 멤버들이 자신이 수익사업에 일한다고 생각하게 하는건 힘듬.
   2. 모질라는 최대고객인 구글에게 필요없는 존재가 되어가고 있음. 구글은 자체 연구조직에 비용을 쓰고 싶어할 것이고, 또한 Firefox 사용자를 끌어올 능력과 기회를 둘 다 가지고 있음. 많은 Firefox 사용자는 검색엔진을 구글 대신 다른것을 사용하기도 하고, 광고차단기도 실행. 구글에게 있어서 Firefox 의 가치는 반독점 이슈도 있긴 하지만, 그렇다고 (2억명이나 되는) 사용자 기반까지는 필요없음.
   3. 모질라 회사가 검색엔진 회사가 아닌 일반 사용자 대상 비즈니스를 잘 운영할 수 있을지는 회의적. 예전부터 구글 의존을 탈피하고자 했지만 성공하지 못했음.
   간단하게 계산해봐도 검색엔진으로부터 들어오는 $100M 의 수익을 대체하려면, 2억명 이상의 Firefox 사용자로부터 1년에 50센트 씩만 받으면 됨. 하지만 인터넷 사용자들은 무료에 익숙해졌기 때문에, 아무리 Firefox 사용자일지라도, 저렇게 낮은 금액 마저도 지불하지는 않을 것.
   만약 2%의 Firefox 사용자가 모질라 제품을 구매한다면 (일반적으로 freemium 제품군의 컨버전 레이트가 2% 정도니까), 지금 올리는 $500M 매출을 올리려면 인당 년에 $125씩 내야 한다는 것. 이건 엄청 큰 금액임.
   만약 모질라 회사가 수익내는 비즈니스로 사업전환을 하지 못한다면 다른 기회는 뭘까 ?
   하나는 장기적으로 지속가능한 규모로 조직을 축소하고 모질라가 비영리 미션을 잘 수행할 수 있도록 보장하는 것. 예를 들어, Firefox 자체의 기본 유지보수를 제외한 모든 개발을 중단하고, 더 큰 사용자 기반을 유지해서 모질라에 돈 내는 사람(구글같은)들에게 정당한 이유를 만들어 주는 것.
   보다 과감한 방식은 몇년동안 소프트웨어 개발 사업을 다 접고 모질라 회사의 자산을 다 청산한 다음, 인터넷 및 웹 옹호(Web Advocacy)에 초점을 맞춘 순수한 비영리 조직으로 되돌리는 것. 하지만 이건 앞 시나리오보다 더 실현가능성이 적음.
   마지막으로는 인터넷과 웹을 위한 ""공익 R&D 연구소""가 되어, 공공재를 생산하는 연구활동을 주로하면서 여러 재단과 정부로 부터 펀딩을 받는 것도 있음. 이런방식으로 대규모 비영리 재단을 만드는 것이 가능. 예를 들어 Battelle Memorial Institute, the MITRE Corporation, Johns Hopkins University Applied Physics Laboratory 같은 것들 처럼. 물론 이들이 크게 된 것은 국방계약을 따냈기 때문인데 모질라의 멤버나 경영진이 DoD(미국 국방부)와 계약할 의사가 있는지는 미지수.
   결국, 모질라 회사는 현재의 길을 계속 가면서 다양한 사용자 대상 비즈니스를 계속 시도할 가능성이 가장 높고, 그 중 성공하는 것 없이 점점 매출이 줄으면서 조직을 천천히 축소하게 될지도 모름. 10년안에 모질라 재단은 적당한 자금을 지원받는 옹호단체로 남고 모질라 회사는 그냥 추억이 될 수 있음.
   모질라 회사가 15년, 모질라 재단은 17년, 모질라 프로젝트는 20년이 넘었음.
   그동안 실제로 모질라는 외부에 알려진 것보다 더 큰일을 수없이 해왔음.
   당장 내일 닫더라도 Bell Labs 나 Xerox PARC처럼 역사에 한 자리를 차지할 것.

   HN에 모질라 직원도 현재 전체 상황설명을 잘 했다고 댓글을 달았더군요
   근데 최종 결론은 모질라 회사 자체는 저렇게 없어질거라는 예언(저주? 운명?)스러운 건데..
   저는 그 정도까지 가지는 않을거라 생각하고, 그렇게 안되었으면 좋겠어요.
   브라우저 시장에 크롬만 남은 상황은 바라지 않아요.
   사파리가 있잖아! 하기엔 애플은 너무 독단적이고요.
   모질라가 시도하고 있는 다양한 비즈니스 들중 몇개는 수익화에 성공해서 오래오래 유지되기를 기원합니다.

   부디 오래오래 유지되길.. Pocket 구독이라도 하러 가야겠어요.
"
"https://news.hada.io/topic?id=2646","Chromehrome OS

   Google의 Web 플랫폼은 최근 들어 부쩍 OS 레이어와 강결합이 많이 생기고 있는데,
   아무래도 Chrome OS 때문이 아닐까 생각이 들기도 하네요.
   Chrome OS 공식 사이트에서는 Chrome OS로
   어떤 걸 개발할 수 있고 무엇을 할 수 있는 지 볼 수 있습니다.
"
"https://news.hada.io/topic?id=2650","Notion, 한국어 판에서도 영문 명령어 지원.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Notion, 한국어 판에서도 영문 명령어 지원.

   최근 Notion이 한글화 되었었는데 명령도 한글로 쳐야 하여 굉장히 불편했었는데요. Noltion팀에서 해당 부분을 대응하여 이제부터는 한국어 판이어도 영문 명령어를 인식합니다.

   너무 좋은거같아요 'ㅁ'!

   이런 빠른 피드백은 좋네요. 한글판 나오자 마자 지적받은 사항이었는데 ㅎ
   근데 속도 부터 좀 빠르게 하는게 좋을거 같은데 이게 국내만 이런건지 모르겠네요.
   페이지 로딩할때 마다 껌뻑하고 뜨는게 신경쓰일정도로 느려요.

   저는 앱으로 작업 + Plain Text만 있는 경우에는 한번 깜빡이면 바로 나와 신경 쓸 정도는 아니더라고요. 그림 같은 거는 항상 끝까지 로딩하지만.. ;ㅁ;. 확실히 웹 반응성에는 조금 문제가 있어 보입니다. 깜빡하는 플래시 방식보다는 페이스북 같이 목업이라도 잠깐 띄워주면 좋아보일 것 같아요.
   그리고 서버도 북미 AWS 말고 한국에도 하나 열어줬으면...
"
"https://news.hada.io/topic?id=2684","개인정보를 수집하지 않는 검색 엔진 DuckDuckGo 사용 팁 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 개인정보를 수집하지 않는 검색 엔진 DuckDuckGo 사용 팁 모음

   개인정보를 수집하지 않는 검색 엔진 DuckDuckGo를 사용하는 분들이 알면 좋은 팁들 모음입니다. 유용하고 재미있는 기능이 많네요.
   - 사이트 직접 검색
   - 스톱워치
   - URL 단축
   - 패스워드 생성
   - 특정 년도 달력 보기
   - 앱 단축키 또는 명령어 보기
   - QR코드 생성
   - ...

   파이어 폭스 플러그인으로 넣으면, 기본 검색창이 DuckDuckGo로 바뀝니당. 상당히 편해용. 다만 한글 검색은 구글보다 아직 좋진 않아서, 검색하다 안 나오면 !google 하면 되고용.
"
"https://news.hada.io/topic?id=2697","RustConf 2020 전체 세션 비디오/자막/발표자료 및 링크 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                RustConf 2020 전체 세션 비디오/자막/발표자료 및 링크 모음

   - 키노트
   - Error Handling Isn't All About Errors
   - How to Start a Solo Project that You’ll Stick With
   - Under a Microscope: Exploring Fast and Safe Rust for Biology
   - Bending the Curve: A Personal Tutor at Your Fingertips
   - My First Rust Project: Creating a Roguelike with Amethyst
   - Controlling Telescope Hardware with Rust
   - Macros for a More Productive Rust
   - Rust for Non-Systems Programmers
   전체 세션 동영상이 7시간 48분짜리 영상이라 보기가 좀 어려운데
   세션별로 해당 시간대 바로가기 및 슬라이드, 자막, 그리고 발표자가 사용한 다양한 링크를 보기 좋게 정리해두었습니다.
"
"https://news.hada.io/topic?id=2666","10년간 슈퍼셀을 경영하며 배운 10가지 교훈 [번역글]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    10년간 슈퍼셀을 경영하며 배운 10가지 교훈 [번역글]

   1. 무한 반복 게임을 하세요
   2. 위대한 팀이 위대한 게임을 만들지만, 위대한 개인들이 모여 위대한 팀이 되는 것은 아닙니다.
   3. 천천히 채용하고, 항상 기준을 높이세요
   4. 가능한 작게 유지하세요
   5. 문화란 결코 파워포인트나 벽에 씌여있는 문구가 아니라 모든 구성원의 행동의 총합입니다.
   6. 통제 대신 신뢰하세요
   7. 실패의 두려움에 휘둘리지 말고 과감하게 새로운 시도를 하세요
   8. 규칙과 절차를 만드려는 유혹에 굴복하지 마세요... 설사 실수를 했더라도!
   9. 전통적인 방식의 목표 수립은 독립적인 셀 구조와 어울리지 않습니다.
   10. 기업의 가치와 문화를 명문화하세요 (회사가 배우고 성장하면 지속적으로 개정하세요)
   마지막 교훈: 과정을 즐기세요!

   3번 관련해서 테슬라의 인사담당자가 적은 글
   Data: Referrals Strongly Impact Retention and Depend on Employee Performance
   https://business.linkedin.com/talent-solutions/blog/…
   이 글에 대한 자세한 내용은 긱뉴스 팟캐스트 3화를 참고하세요~

   좋은글이내요.

   > 규칙이 있으면 사람들은 상황에 맞는 행동을 하는 게 아니라 규칙에 적힌 대로 행동하는 경향이 있습니다.
   이 말이 제일 와 닿네요.
"
"https://news.hada.io/topic?id=2598","NSFW Filter - 부적절한 이미지를 가려주는 크롬/FF 확장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 NSFW Filter - 부적절한 이미지를 가려주는 크롬/FF 확장

   - NSFW : Not Safe for Work
   - TensorFlow.js 를 이용하여 웹페이지에서 업무상 부적절한 이미지들을 자동으로 가려주는 플러그인
   - 로컬에서 모든 걸 처리
   - 일단 모든 이미지를 가린뒤 nsfwjs 로 검사하고 나서 적절하면 노출하는 방식
   ㅤ→ 60+G 이상의 자료로 학습한 모델로 93%의 정확도를 가진다고

   nsfw.js 를 보니까 Drawing / Hentai / Porn / Sexy / Neutral 로 구분해 내는 군요
   https://github.com/infinitered/nsfwjs
   잘 구분해 내는지는 아래 사이트에서 바로 테스트 가능합니다.
   https://nsfwjs.com/
"
"https://news.hada.io/topic?id=2710","MeetingBar - 맥 메뉴바에서 미팅 관리하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      MeetingBar - 맥 메뉴바에서 미팅 관리하기

   - 구글 Meet/Zoom 과 연동해서 미팅일정을 보고 바로 조인 가능
   - 상태바에서 다음 미팅 정보를 보여줌
   - 단축키로 다음 미팅, 또는 새로운 Ad-Hoc 미팅 바로 생성 가능
   - macOS 캘린더에 동기화 필요
   - Swift 로 개발된 오픈소스

   오.. 이거 편하네요 :)
"
"https://news.hada.io/topic?id=2617","애플, 게임 스트리밍 서비스는 앱스토어 정책 위반이라고 말해","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   애플, 게임 스트리밍 서비스는 앱스토어 정책 위반이라고 말해

   9월에 런칭할 MS의 xCloud 같은 게임 스트리밍 서비스는 iOS에서 서비스 불가.
   ""GamePass를 통해서 스트리밍으로 서비스되는 모든 게임을 애플이 리뷰할수 없기 때문""
   같은 이유로 구글의 Stadia도 애플 기기에서는 불가.

   스트리밍 컨텐츠 리뷰가 이슈라면 유툽이나 일반 sns들 도 다 해당되는 내용인데, 그냥 싫다. 느낌이네요 스토어내 게임들 다운로드 매출 떨어질까봐.

   스팀링크때 진통을 겪다가 다시 허용해줬는데 스팀링크는 어떻게 처리할지 모르겠네요

   이 정책에 대해서 다들 한 목소리로 비판 하는중
   MS의 공식 비판 ""애플은 클라우드 게이밍에서 소비자를 거부하는 유일한 플랫폼. 인터랙티브 기능이 있는 다른 앱들은 관대하면서도, 게임만 다르게 취급.""
   - https://windowscentral.com/apple-responds-xbox-project-xcloud-ios-road…
   페이스북도 동참 ""페이스북 게이밍 앱 내부에 미니게임 기능을 애플때문에 삭제해야 했음""
   - https://theverge.com/2020/8/…
   Epic Games CEO인 Tim Sweeeney 도 동참 ""애플은 메타버스를 추방했습니다. xCloud 뿐만 아니라 Stadia,GeForce Now, Fortnite, Minecraft, Roblox 모두""
   - https://wccftech.com/apples-app-store-policies-are-now-making-microsof…
   MS의 얘기처럼 넷플릭스의 밴더스내치 같은 인터랙티브 영화는 되면서 이건 왜 안되냐는 의견도 일리 있는듯.
   과연 다들 이렇게 한 목소리를 낸다고 애플이 꿈쩍할지는 모르겠네요. 애플 아케이드는 할거도 없던데..
"
"https://news.hada.io/topic?id=2675","Rust의 미래를 위한 재단의 토대 마련","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Rust의 미래를 위한 재단의 토대 마련

   2020년 8월 11일, 모질라는 올해 두번째의 정리해고를 시행하였고. 그 정리해고를 당한 사람들 중에는 Rust팀의 구성원들도 있었기에 앞으로 Rust의 미래에 대하여 - 그리고 모질라 기술의 핵심을 담당하던 기술팀에 미래에 관하여 - 궁금해 하던 분들이 많았습니다.
   오늘 러스트 언어 핵심팀은 그 물음에 답하여 아래와 같이 답하였습니다.
   러스트는 모질라에게서 독립적인 재단을 만들 것이며. 2015년 Rust 1.0 출시 이후로는 Rust팀은 이미 자율적인 조직이었다고 밝혔습니다.
   또한 이번 정리해고로 인하여 러스트 팀에 혼란이 있을 수는 있지만. 모질라에 있던 프로젝트 구성원들은 개인적인 시간을 투자하여 Rust에 기여하였고. 또한 모질라의 직원이 아니라고 해서 Rust의 구성원의 자
   격은 박탈당하지 않는다고 밝혔습니다.
   지금까지 모질라의 도움으로 성장할 수 있었지만. 이제는 법적 이름, 계좌, 주소 없이는 활동할 수 없어 보입니다.
   새로운 재단은 Rust의 이름과 법적 책임을 받을 것이며. Rust가 앞으로 더 많은 곳에서 쓰이도록 노력하겠다고 밝혔습니다.

   Mozilla가 Unbundlings 되고 있내요.
   https://news.hada.io/topic?id=2640 - 사업 아이디어가 필요하다면 Unbundling을 주목하세요

   ㅎㅎㅎ 빙고!

   모질라-Firefox 를 더 잘 만들기 위해서 출발한 게 Rust 언어 프로젝트였던 것 같은데 세월이 참... 이제 Rust 는 어느 정도 명성을 얻어서 언어 자체로도 유지는 될 수 있을듯하지만 걱정이 되기는 하네요. 모질라의 후광도 상당하긴 했을텐데 말이에요.

   다행이네요. Rust 가 더 성장할수 있는 계기가 될듯

   웹 어셈블리도 독립했으면 좋겠다는 생각이지만. 웹 어셈블리는 어떻게 될지 궁금하네요.
"
"https://news.hada.io/topic?id=2605","Lead Generation 도구 27종 비교 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Lead Generation 도구 27종 비교

   리드 생성 : 비즈니스에 관심을 가지는 고객이 정보를 남기도록 해서 지속적으로 고객을 관리하는 마케팅 기법.
   27종의 리드 생성 도구 장단점과 가격정보
   1. OptinMonster
   2. Constant Contact
   3. Treck.co
   4. Sendinblue
   5. Hunter
   6. AeroLeads
   7. Voila Norbert
   8. OutreachPlus
   9. Hoovers
   10. Datanyze
   11. Lead Forensics
   12. Growbots
   13. Prospect.io
   14. HubSpot
   15. Pardot
   16. SharpSpring
   17. Contactually
   18. Keap
   19. Marketo
   20. Nimble
   21. OnePageCRM
   22. Salesforce
   23. HubSpot Sales
   24. LinkedIn Sales Navigator
   25. Pipedrive
   26. Drift
   27. Intercom

   HubSpot/Pardot/Marketo/Salesforce/Drift/Intercom 까지만 알고 나머지는 대부분 첨 보는 것들이네요.
   1번 OptinMonster 를 탑으로 꼽은거 보면 나머지가 순위일듯 한데, 가장 유명한 인터컴은 가격때문에 맨 마지막으로 떨어진듯.
   리드 생성을 전문적으로 다루는 국내 도구는 아직 본적이 없는듯 하네요. (혹시 있는데 제가 모르는 걸지도)

   http://channel.io/
   https://happytalk.io/
   위 서비스들보다 자유도(?)는 조금 떨어지지만 유용하게 쓸 수 있습니다.

   앗, 쓰다가 작성이 돼 버렸는데
   국내에는 채널톡, 해피톡이 있고 위 서비스들보다 자유도(?)는 조금 떨어지지만 유용하게 쓸 수 있습니다.
"
"https://news.hada.io/topic?id=2696","[UX] “취소”의 [취소] 문제에서 생각하는 다이얼로그 디자인 [번역글]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               [UX] “취소”의 [취소] 문제에서 생각하는 다이얼로그 디자인 [번역글]

   무언가를 취소할지 물어보는 다이얼로그를 띄울 때, 사용자가 그 취소하려는 다이얼로그 동작 자체를 취소하고자 하는 경우 어떻게 혼란을 주지 않을지에 관해 UX를 고민하는 일본어 글의 번역문입니다. (한국어) 이런 사소한 디테일 하나가 사용자 경험에 영향을 줄 수 있지요.
   핵심 요점은 대략 다음과 같습니다,
   * 간결하고 알기 쉬우며 일관된 문구 표현을 의식하기
   * 플랫폼의 디자인 가이드에 따르기
   * 주역은 어디까지나 유저와 콘텐츠, UI는 주역이 아니다
   * alert(넓게는 modal)을 많이 사용하지 않기
   참고 - 원문 (일본어):
   https://goodpatch.com/blog/dialog-design/
"
"https://news.hada.io/topic?id=2703","AWS Tag Helper - 벌크 태깅 툴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        AWS Tag Helper - 벌크 태깅 툴

   - 다양한 AWS 자원에 태그를 편하게 붙이기
   - 현재 태그정보를 CSV로 내려받고, 수정해서 한번에 태그 변경 가능
   - EC2,RDS,Lambda,S3,Elasticache,Redshift, ElasticSearch,CloudWatch,CloudFront,ELB v2,Kinesis 등 지원
   - Go 로 된 오픈소스

   워싱턴포스트가 만든 aws-tagger (파이썬) 도 있습니다.
   https://github.com/washingtonpost/aws-tagger
   코드가 작성된지 좀 오래되었지만, 이건 위 도구처럼 자원 타입을 지정할 필요없고 리소스 ID만 지정해서 더 간편하게 태깅이 가능합니다.
   CSV로 한번에 태깅도 됩니다. 현재 태그 정보를 CSV로 다운받는 기능은 없는데, 그건 위에 껄 활용해도 될것 같습니다.
"
"https://news.hada.io/topic?id=2610","과학자들이 Excel이 날짜로 읽지 못하도록 유전자 이름을 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  과학자들이 Excel이 날짜로 읽지 못하도록 유전자 이름을 변경

   ""어떨 땐 엑셀을 바꾸는거 보다 유전학(genetics)을 재작성하는게 쉬우므로""
   엑셀이 MARCH1, SEPT1 같은 심볼을 날짜로 변환하니까 MARCHF1,SEPTIN1 으로 변경
   지난 1년간 27개의 인간 유전자 이름이 변경되었음
   2016년 한 연구에 따르면 3597개의 논문의 유전데이터중 5분의 1이 엑셀 오류에 영향을 받았다고.
   이 자동 서식은 끄는게 불가능하고, 셀의 데이터 타입을 바꾸는것 밖에 방법이 없음.
   그래서, 유전자 이름 표준화 기구인 HGNC(HUGO Gene Nomenclature Committee)는 이번주 발표를 통해서 ""데이터 처리및 검색에 영향을 미치는 기호""를 포함해서 유전자 명명규칙을 변경
   MARCH1 - “Membrane Associated Ring-CH-Type Finger 1” → MARCHF1

   Excel의 힘 ㅋㅋ

   역시 모든 직장인은 엑셀을 사용할 줄 알아야... 응?
"
"https://news.hada.io/topic?id=2652","Twitter API v2 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Twitter API v2 공개

   기본 트위터 기능 외에 새로운 엔드포인트들 추가 및 개선
   - 강화된 분석 기능
   ㅤ→ 필터링 가능한 실시간 트윗 스트림 구독
   ㅤ→ 특정 토픽/키워드에 대해 관련된 대화 검색 (위치 기반 구분 가능 / 사람들의 의견 분석)
   ㅤ→ 트윗의 퍼포먼스 분석
   ㅤ→ 이벤트 구독 : 해쉬태그/키워드, 리트윗 포함여부, 미디어 포함여부, 언어별
   ㅤ→ 트위터의 ML모델에 의해 트윗에 Annotation이 달리고 이를 검색가능
   - 3개의 접근 레벨로 분리 : basic(무료), elevated, custom
   ㅤ→ Elevated 는 다시 연구목적/비즈니스/스탠다드로 구분
   - V2 Elevated API셋이 완성되면 모든 기존 v1.1 엔드포인트는 중단 예정
   - 현재 Early Access 신청 가능

   트위터가 외부에 공개하는 Twitter Developer Platform Roadmap [트렐로]
   https://trello.com/b/myf7rKwV/twitter-developer-platform-roadmap
"
"https://news.hada.io/topic?id=2633","Teenyicons - 15x15 초소형 무료 아이콘들 587개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Teenyicons - 15x15 초소형 무료 아이콘들 587개

   - 15x15 사이즈로 디자인되었지만 SVG 여서 확대 가능
   - 대부분의 웹 사이트/개발자 도구에 적합한 아이콘들
   - Outline / Solid 두개의 타입
   - MIT 라이센스로 어디나 사용가능

   비슷하게 무료이고 SVG로 16x16 정도의 작은 사이즈를 제공하는 다른 사이트들
   Forge Icons (300+개) : https://icons.theforgesmith.com/
   System UIcons (220개): https://systemuicons.com/
"
"https://news.hada.io/topic?id=2690","GitHub, The ReadME 프로젝트 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GitHub, The ReadME 프로젝트 공개

   - 오픈소스 커뮤니티의 성장,도전,경험등 이야기를 공개하는 공간
   ㅤ→ 개발자 및 팀원들의 인터뷰, 프로젝트 뒤켠의 이야기들을 통해서 더 자세히 알아보기
   - 시작은 SugarLabs,Babel,ImageMagick,Apache EChart 등의 멤버들 인터뷰
   ㅤ→ 중국,케냐,나이지리아,네덜란드,뉴욕 등 다양한 곳의 오픈소스 기여자들
"
"https://news.hada.io/topic?id=2688","Google Apps 위에서 React 앱 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Google Apps 위에서 React 앱 만들기

   - 구글 쉬트,닥스,폼,슬라이드 위에서 React 코드로 확장을 만들게 해주는 프로젝트
   - 클론해서 Node+npm 으로 개발 진행하고 배포 가능
   - mkcert를 이용해서 로컬에서 개발한 내용이 바로 구글앱스에 반영되게 설정 가능
   - TypeScript지원
   - React 패키지 추가 가능 : 구글앱스가 외부 파일 로딩이 어렵기 때문에 전체 앱을 하나의 HTML로 패키징
"
"https://news.hada.io/topic?id=2589","AWS CloudFront, 추가적인 Geolocation 헤더 지원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 AWS CloudFront, 추가적인 Geolocation 헤더 지원

   기존에는 국가코드 정도였는데, 훨씬 상세한 헤더를 제공하여 캐쉬 / Origin Request 정책에 세밀한 조정이 가능
   Lambda@Edge에서도 이용 가능하며, 비용은 없음
   - Country-Name
   - Country-Region
   - Country-Region-Name
   - City
   - Postal-Code
   - Time-Zone
   - Latitude
   - Longitude
   - Metro-Code

   테스트 하려면 해외 개발자분이 만든 테스트 서버인 https://headers.owen.dev/ 에 접속해보시면 지금 CF가 보고 있는 정보들을 리턴해 줍니다. 한국은 Metro는 안나오는 것 같고, 위/경도 나 우편번호는 나오는데 아마도 통신사 서버쪽인듯 하네요.
   Blip - 간단한 Geolocation 서버 https://news.hada.io/topic?id=2533
   GAE 나 CloudFlare 를 이용한 방법도 있었는데, 이제 CloudFront 에서도 상세정보를 제공해주네요.
   AWS CF 사용하는 조직에서는 편하게 사용가능 할 듯
"
"https://news.hada.io/topic?id=2705","긱뉴스 팟캐스트 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              긱뉴스 팟캐스트 시작

   - 긱뉴스에 올라오는 최신 기술 뉴스들을 좀 더 이해하기 쉽게, 해당 뉴스의 배경과 함께 음성으로 설명합니다.
   - Weekly 뉴스레터 기준으로 몇개의 주요 뉴스를 선정
   - Apple/팟티/팟빵/Google 등 주요 팟캐스트 플랫폼에서 구독 가능합니다.

   어제 처음으로 들어봤는데 목소리가 조금만 더 크면 좋을 것 같아요! 응원합니당!

   긱뉴스 뉴스를 긱뉴스에서! 이것이야말로 메타-뉘우스- 군요

   저도 유튜브에 올려주시면 더 좋을꺼 같아요^^

   +1

   지금 듣고 있어요. 재밌어요. +_+

   와우~
   이미지만 넣어서 유튜브에도 올려주시면 좋을 것 같아요.
   요새 대부분의 팟캐스트들이 유튜브에도 올라오거든요.. (보이는 라디오 같은 형식도 있고, 고정된 이미지를 넣는 경우도 있고 스탠다드아웃 팟캐스트는 오디오 파형을 넣으시더군요 ㅎㅎ)
   그래서 저는 팟캐스트는 안들은지가 꽤 되었어요. 그냥 유튜브에서 구독 알림 오는 거에서 플레이리스트 만들어서 들어요.

   으악 유튜브에 올리셨는데 그거 보기 전에 댓글 달아버린 비극적인 슬픔을 지울수가 없군요 아이고 부끄....

   아닙니다. 아직 풀 영상은 아니어서어요. 유튜브 채널만 만들어두고, 어떤 방식의 동영상이 좋을지 테스트 해보고 있어요. 현재는 미리보기 동영상만 올라가 있습니다.
   https://www.youtube.com/channel/UCB69VTrvTiZONj8dc4euKjw 입니다~

   그러게요 저는 유튜브가 좋습니다 ㅎㅎ
   (어느정도일지는 모르겠지만... 별도 수익도 창출하시고.. ^^;;;)

   ㅎㅎ 수익은 고려 안하고 있어요. 일단 유튜브로도 풀버전을 올렸습니다!

   오예~ 감사합니다.

   xguru님 목소리인가요?

   넵 접니다.. ^^;

   이미지로 있던 목소리와는 다르네요. 하하. 앞으로 재밌는 이야기들 기대하겠습니다.

   이미지로 있던 -> 머리 속에 상상했던
"
"https://news.hada.io/topic?id=2647","Thank youhank you MDN

   모질라 구조조정 여파로 MDN(Mozilla Developer Network)팀이 모두 나가게 되자, 그동안 잘 써왔던 MDN Web Docs에 고마움을 표시하기 위해 만들어진 페이지
   - 모질라 측에선 MDN사이트는 없어지지 않을 것이며, (아주 작은 인원의) 내부 팀과 외부 필자들에 의해서 계속 나아갈 것이라고 밝힘.
   ㅤ→ 실제로 구글/MS에는 풀타임으로 MDN에 기여하는 직원들이 있으며, Wiki 형태이기 때문에 누구든 참여 가능

   지난 구조조정 이후로 재단으로써의 모질라보단 회사로써의 모질라를 선택한 느낌이 여간 사라지지 않습니다...
"
"https://news.hada.io/topic?id=2670","Karate - 오픈소스 테스트 자동화 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Karate - 오픈소스 테스트 자동화 도구

   - API 테스트 자동화, Mockup 생성, 퍼포먼스 테스트, UI 자동화를 하나로 묶은 테스트 프레임워크
   - BDD 기반 Cucumber/Gherkin 문법을 사용하여 쉽게 테스트 스크립트 작성
   ㅤ→ 실제로는 Step Definition 작성할 필요가 없어서 Cucumber보다 더 쉬움
   - 테스트 스크립트가 쉽게 읽을수 있는 단순 텍스트여서 git에 바로 저장
   - VSCode 및 기타 IDE 에서 사용가능하며 단계별 디버깅 지원
   - GraphQL API 테스트 가능
   - 멀티스레드 병렬 실행 지원
   - 다양한 플랫폼
   ㅤ→ 크로스 플랫폼 브라우저 지원 (크롬 DevTools, Edge, Safari )
   ㅤ→ MS WinAppDriver 를 사용해서 윈도우 데스크탑앱 자동화 지원
   ㅤ→ Appium 을 이용하여 Android / iOS 지원
"
"https://news.hada.io/topic?id=2591","New Relic, 비즈니스 모델 변경 및 에이전트 오픈소스화 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   New Relic, 비즈니스 모델 변경 및 에이전트 오픈소스화

   - 새로운 Telemetry Data Platform : 조직의 모든 이벤트/로그를 한 곳에서. OpenTelemetry 지원
   - 기존 호스트기반 요금에서 데이터 기반 요금제로 변경
   ㅤ→ 매달 100GB 무료로 평생 무료 티어 신설
   ㅤ→ 추가 GB당 $0.25
   - Agent, Instrumentation, Infrastructure Integration 들 SDK까지 모두 오픈소스로 공개

   뉴렐릭 블로그에는 글이 여기저기 나눠져서 찾아봐야 할게 많아서, 통합해서 설명한 외부 블로그 글을 위에 링크했습니다.
   새 플랫폼 설명 : Everything You Need to Know About Your New Observability Platform
   https://blog.newrelic.com/product-news/…
   새 요금제 설명 : Troubleshoot Your Stack, Not Your Monitoring Bill
   https://blog.newrelic.com/product-news/simple-pricing/
   오픈소스 관련 : The Future of Instrumentation Is Open: Introducing Open Source Agents and Projects at New Relic
   https://blog.newrelic.com/product-news/…
"
"https://news.hada.io/topic?id=2659","아마존 Machine Learning University 일반에 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 아마존 Machine Learning University 일반에 공개

   - 2016년에 만들어서 직원 전용으로 사용하던 MLU 학습과정을 Youtube를 통해서 일반에게도 공개
   - 현재는 NLP, Computer Vision, Tabular Data 3개의 과정이 공개
   - 연말까지 9개 과정을 추가로 공개하고, 내년초 부터는 모든 과정이 동영상/코딩 자료와 함께 공개될 예정

   MLU 유튜브 채널 : https://www.youtube.com/channel/UC12LqyqTQYbXatYS9AA7Nuw/playlists
"
"https://news.hada.io/topic?id=2662","머신러닝으로 복원한 로마황제의 얼굴들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          머신러닝으로 복원한 로마황제의 얼굴들

   - Artbreeder (GAN을 이용한 무료 이미지 생성/믹싱/편집기) 와 포토샵을 이용
   - 27 BC to 285 AD 사이의 로마제국 황제 54명의 이미지 800장을 활용해서 사진수준의 초상화를 생성

   미치광이로 유명한 칼리굴라 가 너무 잘생겨서 깜놀

   Artbreeder - https://www.artbreeder.com/
   Ganbreeder (같은 기술을 사용하는 오픈소스) - https://github.com/joel-simon/ganbreeder
"
"https://news.hada.io/topic?id=2665","ADR을 써야 하는 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ADR을 써야 하는 이유

ADR = Architecture Decision Records

   아키텍처적인 결정을 왜 그렇게 내렸는지 코드 베이스안에 기록해 놓는 것.
   GitHub은 iOS/Android 모바일팀에서 이걸 적용하고 있으며, 왜 필요한지를 설명한 글

당신을 위한게 아니라, 미래의 당신을 위한 것

   ADR은 내가 내린 결정에 대한 반성과정이 아니고, 지금부터 6~12개월후에 이 아키텍처를 결정했을때의 마인드셋을 기억하는데 도움이 됨.
   ADR은 결정이 내려지는 시점을 포착하여 회의/줌 미팅/Slack/코드에서 다뤄진 PoC 까지를 모두 포함.
   머리에 있는 이 컨텍스트를 말로 끄집어 내서 나중에 이 아키텍처를 다시 살펴볼 때 해당 컨텍스트를 다시 머리에 넣을수 있게 하는 것.

   진짜 보너스는 누군가 몇달후에 왜 GitHubAPIClient 모듈이 이렇게 동작하는지 당신을 비난하면서 물어볼 때 나타남.
   30분 페어링해서 코드를 설명하는 것 보다, 이 ADR을 던져주고 그 모듈을 빌드하는 동안 내린 결정에 대해 설명할 수 있게 됨.

당신을 위한게 아니라, 당신의 동료를 위한 것

   ADR은 한줄짜리 ""이 기능은 피쳐-#3128의 구현입니다"" 라는 설명보다 더 긴 내용을 적을 것.
   동료들이 왜 이 기능이 다른 방식이 아닌 이 방식으로 만들었는 지를 이해하는데 도움이 되는 좀 더 긴 설명 형식.
   (ADR 내에 ""고려했던 대안들"" , ""장점과 단점"" 등으로 표현 )

   당신에게는 간단한 것도, 동료들에게는 복잡할 수 있음.
   시간을 좀 내서, 결정을 내릴 때 생각한 과정을 적어두면 팀원들이 당신의 머리 속에 들어올 기회를 주게 됨.
   ADR을 작성하면 ""Decision Socialization(의사 결정의 사회화)""가 가능해짐.
   이렇게 하면, 개별적으로 결정을 내리는 대신 팀이 유지 관리에 대한 책임을 지는 결정을 내리게 함.

   풀 리퀘스트를 올리기전에 ADR을 작성하면 이를 검토하는 팀으로 부터 더 좋은 PR리뷰를 받을수 있음.

당신을 위한게 아니라, 미래의 동료를 위한 것

   ADR은 당신이 얼마나 똑똑한 지 보여 주거나, 사람들이 당신이 만든 아키텍쳐를 보고 어리둥절하게 하는 것이 아님.
   ADR은 새로운 팀원이 들어왔을 때 그들이 현재의 코드베이스와 코드베이스가 지난 시간동안 어떻게 발전해왔는 지를 이해하는데 도움이 됨.

   팀이 확장되고 성장하면서 팀원간의 커뮤니케이션 경로는 늘어남.
   이렇게 내린 결정을 적어두면 팀이 성장하면서 새로 합류하는 사람들과도 의사소통 하는데 도움이 됨.

   최상의 시나리오는, 당신의 팀원이 새 ADR을 작성해서 당신이 예전에 내렸던 결정을 대체하고, 미래엔 당신의 동료로부터 배울 수 있게 되는 것.

     ""더 많은 ADR을 작성하세요. 우리 팀이 커지고 코드베이스가 복잡해질 때마다 ADR은 미래의 우리와 현재 팀원과 미래의 팀원을 도울 수 있는 좋은 방법 입니다.""

   전자정부 사례중에 유명한 Gov.UK 가 자신들의 AWS 클라우드 아키텍쳐 관련 ADR을 정리한 Repository 도 있습니다.
   https://github.com/alphagov/govuk-aws/…

   좋은 참고가 됐습니다.

   ADR 사례들
   CSS 프레임워크 결정
   https://github.com/joelparkerhenderson/architecture_decision_record/…
   - 이슈 : 웹앱을 위한 CSS프레임워크 결정이 필요. 유명 브라우저 및 화면 사이즈 상관없이 빠르고 안정적이어야 함. 디자인/레이아웃/UI/UX 에서 빠른 이터레이션. 반응형 디자인
   * 결정 : Bulma 를 사용하기로 결정
   - 전제 : 모던하고 빠르고 반응형인 웹앱을 만들고 싶으니, jQuery는 안쓰고 싶음
   - 제약 : jQuery는 쓰지 않아도 되는 프레임워크
   - 고려 : 아무것도 안쓰거나, Bootstrap/Bulma/Foundation/Materialize/Semantic UI 중에서 Bulma 와 Semantic UI를 깊게 고민
   Monorepo vs Multirepo
   https://github.com/joelparkerhenderson/architecture_decision_record/…
   - 이슈 : 우리 프로젝트는 세개의 메인 카테고리 - 프론트엔드 UI,미들웨어,백엔드 서버
   ㅤ→ SCM으로 git을 사용중인데, monorepo vs polyrepo vs hybrid 를 결정해야함
   * 결정 :
   ㅤ→ 조직/팀/프로젝트가 작고 빠른 이터레이션일 때는 Monorepo
   ㅤ→ 조직/팀/프로젝트가 크고 안정적인게 중요할때는 Polyrepo
   - 전제 : 우리가 만드는 코드는 조직을 위한것이고 외부(공공)을 위한것이 아님
   프로그래밍 언어 결정
   https://github.com/joelparkerhenderson/architecture_decision_record/…
   - 이슈 : 소프트웨어 개발용 언어를 결정해야함. 웹 프론트와 백엔드
   * 결정 :
   ㅤ→ 프론트엔드는 TypeScript
   ㅤ→ 백엔드는 Rust
   - 전제 :
   ㅤ→ 프론트는 일반적이지만 빠르게 개발,배포,반복이 되어야함. 레거시 호환 필요없음
   ㅤ→ 백엔드는 일반적인것보다는 약간 높음. 품질,안정성,보안에 대한 고려. 거의 실시간 수준이 필요(GC에 의해서 멈추는것은 없어야함). 함수형 프로그래밍 / 병렬처리 및 멀티코어 프로세싱, 메모리 안전성도 중요함
   - 제한 : 메이저 클라우드서비스의 서버리스(Amazon Lamba)에서 꼭 실행가능 해야함
   - 고려 : C/C++/Clojure/Elixir/Erlang/Elm/Flow/Go/Haskell/Java/Javascript/Kotlin/Python/Ruby/Rust/TypeScript
   - 논쟁 :
   ㅤ→ C : 낮은 안전성으로 제외; Rust가 대부분의 것들을 더 잘할 수 있음
   ㅤ→ C++ : 난잡(mess)해서 제외; Rust가 대부분의 것들을 더 잘할 수 있음
   ㅤ→ Clojure : 뛰어난 모델링; Lisp 과 가장 비슷; JVM상의 훌륭한 런타임
   ㅤ→ Elixir : 배포 및 동시성이 뛰어난 런타임; 훌륭한 개발자 경험; 상대적으로 작은 에코시스템
   ㅤ→ Erlang : 배포 및 동시성이 뛰어난 런타임; 다소 도전적인 개발자 경험; 상대적으로 작은 에코시스템
   ㅤ→ Elm : 전도유망; IBM이 좋은 사례들을 공유중; 작은 에코시스템
   ㅤ→ Flow : JS의 흥미로운 개선; 하지만 개발자들이 멀어지는 중
   ㅤ→ Go : 뛰어난 개발자 경험; 뛰어난 동시성; 언어를 이상하게 만드는 나쁜결정들이 있었음
   ㅤ→ Haskell : 최고의 함수형 언어; 작은 개발자 커뮤니티; 프로덕션 성공 사례가 많지 않음
   ㅤ→ Java : 최고의 런타임; 뛰어난 에코시스템; 그저그런 개발자 경험
   ㅤ→ JavaScript : 가장 인기있는 언어; 가장 넓은 에코시스템
   ㅤ→ Kotlin : Java의 많은 것을 개선; JetBrains의 훌륭한 후원; Java to Kotlin 한 다양한 성공사례
   ㅤ→ Python : 시스템 관리쪽에서 가장 인기있는 언어; 좋은 분석 도구; 좋은 웹 프레임워크; Google이 Go를 선택하면서 버려짐
   ㅤ→ Ruby : 최고의 개발자 경험; 최고의 웹 프레임워크; 훌륭한 커뮤니티; 엄청 느림; 패키징 하기 어려움
   ㅤ→ Rust : 최고의 새 언어;Zero-cost abstractions(추상화해도 속도가 느려지지 않음) 강조; 동시성 강조; 상대적으로 작은 에코시스템; 몇몇 컴파일러 최적화에서는 한계가 있음 (메모리 직접접근은 unsafe여야 하는등)
   ㅤ→ TypeScript: JavaScript에 Type을 추가; 뛰어난 Transpiler; 개발자들이 점점 JS 에서 TS로 넘어가는 중; Microsoft 의 강력한 후원
   - VM기반은 선택하지 않기로함 (복잡성이 증가하기 때문에)
   - 가장 빠른 런타임을 위해서는 JS 와 C를 선택
   - 최고와 거의 비슷하게 빠른 런타임을 위해서는 TypeScript 와 Rust를 선택
   - 만약 VM과 웹프레임워크 선택했다면
   ㅤ→ Closer 와 Luminous
   ㅤ→ Java 와 Spring
   ㅤ→ Elixir 와 Phoenix
"
"https://news.hada.io/topic?id=2668","그림으로 비교한 Apple vs. Google ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       그림으로 비교한 Apple vs. Google

   1. 의사결정
   Google: create what users think they want
   Apple: create what they think users want
   2. 연구 개발
   Google: development over research
   Apple: research over development
   3. 일관성
   Google: consistency focused on visual consistency
   Apple: consistency focused on user experience
   4. 제품 사전 공개
   Google: press releases and teasers
   Apple: none
   5. 디자인 진화
   Google: redesigns and new trends
   Apple: evergreen, long-lasting design
   6. 개인 정보 보호
   Google: simulated privacy
   Apple: true privacy
   7. 사용자 층
   Google: extensive coverage
   Apple: limited coverage
   8. 리더쉽
   Google: flat structure with distributed power
   Apple: hierarchical structure with centralized power
   9. 에코시스템
   Google: open-source
   Apple: proprietary
   10. Go-To-Market 전략(UI)
   Google: spotlight and promotions
   Apple: retain existing structure
"
"https://news.hada.io/topic?id=2625","Dropbox가 Nginx에서 Envoy로 전환한 이유와 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Dropbox가 Nginx에서 Envoy로 전환한 이유와 방법

   수천만 동시 커넥션, 초당 수백만 리퀘스트, 테라단위 대역폭을 사용중인 드랍박스가 Nginx 대비 Envoy의 장점을 잘 설명한 글
   기존 : nginx(오픈소스 버전) + python2 + Jinja2 + YAML
   ㅤ→ 하나만 바뀌어도 전체 재배포 필요
   ㅤ→ 동적인 부분은 Lua로 개발
   ㅤ→ 복잡한 로직은 Go 기반 프록시인 Bandaid 에서 처리
   근 10년간 잘 동작했지만, 현재 환경에는 잘 맞지 않음
   ㅤ→ 내부 및 외부(비공개) API들은 점차 REST에서 gRPC로 전환중이어서 프록시의 트랜스코딩 기능을 필요로 함
   ㅤ→ Protocol Buffers 가 내부 서비스 정의 표준으로
   ㅤ→ 모든 소프트웨어들은 언어 상관없이 Bazel 로 빌드 및 테스트
   ㅤ→ 주요 인프라 프로젝트들의 오픈소스 커뮤니티에 직원들이 꽤 헤비하게 참여 중
   Nginx는 운영적인 면에서도 유지하기에 비쌈
   ㅤ→ Config 생성 로직이 너무 유연하고 YAML, Jinja2, Python에 나눠져 있음
   ㅤ→ 모니터링이 Lua / Log 파싱 / 시스템 기반 모니터링 의 믹스
   ㅤ→ 써드파티 모듈에 의존성이 높아지면서, 안정성/성능에 영향을 미치고 잦은 업그레이드에 의한 비용 발생
   ㅤ→ nginx 자체의 배포 및 프로세스 관리는 다른 서비스와 많이 다름. syslog, logrotate 등 기본 시스템과 전혀 다른것에 많이 의존
   그래서 10년만에 처음으로 Nginx 를 대체할 것을 찾기로 함
   * 왜 Bandaid(드롭박스가 자체 개발한 Go 기반 프록시)로 안가고 ?
   ㅤ→ Go 는 C/C++ 보다 리소스를 많이 먹음.
   ㅤ→ GO 의 TLS 스택은 FIPS 지원 안함 ( 미국의 연방 정보 처리 표준 )
   ㅤ→ 내부 도구여서 외부 커뮤니티의 지원이 불가
   현재 : Envoy 기반 트래픽 인프라로 전환
   ----- Nginx 보다 Envoy 가 더 나았던 점 ------
   * 성능 *
   Nginx 의 아키텍처는 이벤트 드리븐 / 멀티프로세스. SO_REUSEPORT & EPOLLEXCLUSIVE 지원
   이벤트 루프 기반이지만 완전한 넌블로킹은 아님. 파일 오픈/로깅 시엔 이벤트 루프가 중단될 수 있음. (aio, aio_write 및 Threadpool 을 활성화 하더라도)
   이를 통해서 테일 지연이 발생하고 몇초단위 딜레이가 생기기도
   Envoy 도 비슷하게 이벤트 드리븐 아키텍쳐 이지만, 프로세스가 아닌 쓰레드 기반
   SO_REUSEPORT 지원(BPF 필터 지원), libevent 를 통한 이벤트 루프 지원
   이벤트 루프에서 블로킹 IO 없음. 이벤트 로깅도 넌블로킹 방식으로 구현.
   이론적으로는 비슷한 성능 특징을 보일 것 같이 보였고 실제 대부분 워크로드 테스트에서도 비슷.
   다만, Nginx가 롱테일에서 지연시간이 더 컸음. I/O많을때 이벤트루프가 중단되었기 때문.
   통계수집 없이는 Nginx가 Envoy와 비슷한 성능을 보이지만, 내부에서 사용중인 Lua 통계 수집도구가 high-RPS 테스트에서 Nginx를 3배 느리게 만듬. (이건 뮤텍스로 동기화되는 lua_shared_dict 때문 ). 드랍박스의 통계수집 방식에 문제가 있긴 하지만 이걸 효율적으로 재개발하는 건 포기했음. (Nginx 내부에 인스트루멘테이션 하면 나중에 업그레이드가 어려울것이라고 예상했기 때문)
   하여튼 이런 이슈들이 Envoy 에서는 없었기 때문에, 이전하고 나서 기존 Nginx 가 사용중이던 서버의 최대 60%를 릴리즈 할 수 있었음.
   * Observability *
   무료버전 Nginx 는 stub status 모듈에 7가지 stat만 제공
   이걸로는 당연히 부족했으므로, log_by_lua 핸들러를 붙여서 더 많은 stat을 제공하고 있었음.
   또한 error.log 파서를 통해서 에러정보를 내보내고, nginx 내부 상태값을 내보내기 위한 별도 exporter 도 존재.
   기본적인 Envoy 셋업은 프로메테우스 포맷으로 수천가지 다른 메트릭들을 제공
   프록시 트래픽 정보부터 서버의 내부 상태 정보,
   클러스터별/업스트림별/가상호스트별 통계값과 리스너별 TCP/HTTP/TLS 다운스트림 통계 정보 등등
   이런 다양한 통계와 함께, Envoy 는 Tracing Provider를 플러그인 가능.
   트래픽 팀 뿐만 아니라 어플리케이션 개발자들에게도 유용함.
   마지막으로 Envoy는 gRPC를 통해 액세스 로그를 스트리밍 가능.
   이러면 트래픽 팀의 syslog-to-hive 브리지를 지원하는 부담이 줄어듬.
   커스텀 TCP/UDP 리스너를 붙이는 것보다 일반적인 gRPC서비스를 실행하는 것이 훨씬 쉽고 안전.
   * Integration *
   Nginx 의 통합은 매우 유닉스 스러움. Configuration이 매우 정적.
   config 파일이나 TLS 인증서, allowlist/blocklist 등을 파일에 의존.
   간단하고 하위호환이 되기 때문에 몇개의 쉘스크립트로 자동화는 가능하지만,
   시스템이 커짐에 따라서 테스트가능여부 및 표준화가 점점 더 중요해짐.
   Envoy는 이런 통합에 대해 자신만의 방법을 가지고 있음.
   xDS라고 부르는 API를 제공해서 protobuf 와 gRPC 사용을 장려.
   Envoy는 이런 xDS에 쿼리를 통해서 동적 리소스를 찾음.
   - 이 xDS는 이제 Envoy 를 넘어서 Universal Data Place API(UDPA) 라는 이름으로 L4/L7 로드밸런서의 de facto 표준이 되려고 진화하고 있으며, 우리 경험으로는 이게 잘 되어가고 있음. Envoy께 아닌 Katran eBPF/XDP L4 로드밸런서에도 UDPA를 사용하려고 하는 중.
   드랍박스는 내부적으로 gRPC를 통해서 서비스들이 연동하고 있기때문에 훨씬 좋음.
   * Configuration *
   Nginx 는 사람이 읽기 쉽다는 설정파일이라는 큰 장점을 가지고 있음.
   하지만 이 장점은 점점 설정이 복잡해 지고 자동 생성되면서 그 장점을 잃어버림.
   드랍박스는 Python2,Jinja2,YAML 등을 통해서 생성되다 보니 그러다보니 데이터 모델도 꼬이고 복잡.
   Envoy는 설정에 대한 통합된 데이터 모델을 가지고 있음. 모든 설정값은 Protocol Buffer에 정의됨. 데이터 모델링 문제가 해결되며, 설정값에 타입 정보가 추가됨.
   드랍박스 내부에서 protobuf 가 많이 쓰이기 때문에 통합을 쉽게함
   * Extensibility *
   Nginx 의 확장성을 위해서는 C모듈 작성이 필요함. 안전한 모듈 작성을 위해서는 시니어 개발자가 필요. 좀더 가벼운 모듈 개발을 위해서 Perl / JS 인터페이스도 제공하긴 하지만 매우 제한적임. 그래서 가장 일반적으로 쓰이는 방법이 lua-nginx-module 을 통한 것.
   Envoy 의 주 확장 메커니즘은 C++ 플러그인을 통해서인데 문서화는 nginx 처럼 잘 되어있지는 않지만 매우 간단함. 이건 깔끔하게 잘 코멘트된 인터페이스, C++14 언어와 표준 라이브러리 등 덕분
   Envoy 가 다른 웹서버와의 큰 차별점은 바로 WebAssembly(WASM)의 지원 여부.
   이를 통해 Rust 같은 다양한 언어들을 통해서 확장 개발 하는걸 지원 가능.
   아직 드랍박스에서 WASM을 안쓰지만, 언젠가 Go SDK for proxy-wasm 지원이 된다면 변경될 수도 있음
   * Building and Testing *
   Nginx는 기본적으로 커스텀 쉘 기반 설정 과 make 기반 빌드를 사용. 간단하고 훌륭하지만 이걸 Bazel로 빌드되는 모노레포에 연동하기엔 꽤 많은 노력이 들어감
   Nginx 는 펄기반 integration 테스트가 있지만 유닛테스트는 없음.
   Envoy 는 이미 빌드시스템이 Bazel 기반이고 간단하게 우리 모노레포에 연동했음.
   gtest/gmock 기반 유닛테스트와 integration test framework 를 지원
   * Security *
   Nginx 코드는 매우 작고 외부 의존성도 작아서 보안상 취약점이 많지 않음.
   Envoy 는 코드가 많아서 아무래도 공격할 지점이 많아 보임. 이를 위해서 Envoy 는 현대적인 보안 프랙티스에 많의 의존. AddressSanitizer, ThreadSanitizer, , MemorySanitizer 등을 사용.
   * Features *
   이 부분은 주관적인 의견이 많으므로 참고 할 것
   Nginx는 처음에 아주 적은 리소스로 스태틱 파일을 서비스 하는 웹서버로 시작.
   즉 static serving, caching, range caching 이 주 기능
   프록시 관점에선 Nginx는 요즘 인프라에서 요구하는 기능들이 많이 부족.
   백엔드와의 HTTP/2접속도 안되고, 멀티연결되는 gRPC 프록시도 안됨. gRPC 트랜스코딩도 불가 등.
   오픈코어 방식의 라이센스 모델이라 몇몇 주요한 기능들이 ""커뮤니티 버전""엔 빠져있음
   Envoy 는 에초에 ingress/egress proxy로 시작했고, gRPC 로드가 많은 환경에서 많이 사용.
   웹서비스 기능은 매우 초보적인 수준. 파일 서빙도 불가, 캐슁도 아직 만드는중이고 brotli 도 미지원 등
   이런 환경을 위해서는 Envoy를 업스트림 클러스터로 쓰는 Nginx 셋업도 사용중
   Envoy 가 HTTP 캐쉬 가능해지면 이런 스태틱 서빙 환경도 옮길 수 있을 것으로 예상
   Envoy는 gRPC 관련 기능을 많이 지원
   - gRPC proxying
   - HTTP/2 to backends
   - gRPC → HTTP bridge (+ reverse.)
   - gRPC-WEB
   - gRPC JSON transcoder
   또한 Envoy는 outbound proxy 로도 사용 가능
   - Egress Proxy
   - Third-party software service discovery with Courier gRPC 라이브러리
   * Community *
   Nginx 개발은 중앙방식이고 대부분 숨겨져 있음.
   Envoy 개발은 열려있고 탈중앙화. GitHub 이슈/PR로 진행되며 메일링/슬랙등을 통해서도 활발

   ----- 드롭박스의 현재 Migration 상태 -----
   Nginx 와 Envoy 를 같이 반년째 운영하며 DNS를 통해 점진적으로 트래픽 이관중
   아무 문제도 없이 이관 된 것은 아니며 작은 이슈는 있었지만, 심각한 장애는 없었음.
   ""unusual"" 하거나 ""non-RFC"" 적인 행동들 때문에 겪었던 문제들에 대한 해결책도 정리(본문에 상세 내용이 있으니 참고하세요)
   ** 앞으로 할 일들 **
   - HTTP/3 : Envoy 도 실험적으로 지원하기 시작. UDP 가속을 위해 리눅스 커널을 업그레이드 하면 실험해 볼 예정
   - 내부 xDS 기반 로드밸런서와 Outlier Detection
   - WASM 기반 Envoy 확장
   - Bandaid (Go 기반 프록시) 를 Envoy로 교체
   - Envoy Mobile 로 모바일 앱에도 Envoy 적용

   좋은내용 간단하게
   정리 해주셔서
   감사합니다.

   감사합니다. :)

   상세한 정리와 친절한 의견까지 달아주셔서 이해에 큰 도움이 되었습니다. 감사합니다 :)
"
"https://news.hada.io/topic?id=2663","ct.js - 오픈소스 2D 게임 엔진 & 에디터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ct.js - 오픈소스 2D 게임 엔진 & 에디터

   - pixi.js (WebGL) 를 이용하여 초보자도 쉽게 게임을 개발하게 해주는 게임 프레임워크/에디터/라이브러리
   - 슈팅/아케이드/어드벤처/퍼즐/비쥬얼노벨 등 어떤 장르든 제작 가능
   게임 개발에 필요한 대부분 도구 내장
   - 룸/레벨 에디터 (타일 지원)
   - 통합 코드 에디터
   - 충돌 감지 및 제어 라이브러리
   - Framed & Skeletal 애니메이션
   - 음악 & 사운드 관리자
   - 커스텀 JS 사용 가능
   - 쉬운 배포
   - 훌륭한 도움말
"
"https://news.hada.io/topic?id=2644","Scribd가 MS로부터 Slideshare 를 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Scribd가 MS로부터 Slideshare 를 인수

   저도 회원이라 메일을 받았는데 9월부터 Scribd가 슬라이드쉐어를 운영한다고 합니다.
   슬라이드쉐어와 Linked in 을 마이크로소프트가 인수했는데 슬라이드쉐어만 따로 매각을 하나보네요

   구글에서 검색하면 가끔 슬라이드의 텍스트가 검색되는 경우가 있는데요.
   막상 클릭해서 들어가서 보면 해당 슬라이드 찾기도 힘들고 해서 그닥 매력적인 서비스는 아닌 거 같아요.

   링크드인이 슬라이드쉐어를 살때는 원대한 포부가 있었는데, 그뒤로는 큰 발전이 없었던거 같아요
   저도 예전엔 슬라이드쉐어 쓰다가 요즘은 잘 안쓰고 있네요.
   요즘 보니 개발자 분들은 https://speakerdeck.com/ 이나 구글 슬라이드에 올리는걸 선호하시는 듯
"
"https://news.hada.io/topic?id=2655","오라클, Autonomous JSON DB 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       오라클, Autonomous JSON DB 공개

   - SQL/JSON 이나 간단한 NoSQL API(SODA*)로 사용할수 있는 비용효율적인 JSON 데이터베이스
   ㅤ* DBA가 필요 없는 Autonomous DB(자율 운영) 기반으로 동작되어 관리부담이 거의 없음
   - 내부적으로 트리기반 바이너리 형태로 JSON을 저장. 빠른 읽기와 부분 업데이트 가능하며 ACID 보장
   - 기존 NoSQL DB대비 좋은 점들
   ㅤ→ 머신러닝 알고리즘 내장, 공간 쿼리
   ㅤ→ 상세 접근 권한 제어같은 향상된 보안 기능
   ㅤ→ 서버사이드 프로시져럴 언어 지원
   ㅤ→ Low-Code 개발 환경
   ㅤ→ ACID 트랜잭션(시간/크기 제한 없음)
   ㅤ→ 간단하고 빠른 교차 컬렉션 조인
   ㅤ→ 전제 JSON에 대한 똘똘한 검색 인덱싱
   - MongoDB Atlas 대비 30%정도 저렴
   * SODA ( Simple Oracle Document Access ) - Java,Python,JS,C 등에서 간단히 사용할수 있는 NoSQL 스타일 API
   * Autonomous ( 자율 운영 ) DB 는 몇년전 부터 오라클이 계속 내세우는 관리 자동화된 DB 솔루션 입니다.
   기존에 DBA 들이 하던 많은 영역들을 AI와 머신러닝 기술을 이용하여 프로비저닝, 보안, 업데이트, 백업 및 튜닝, 변경관리등의 기능을 자동화 해주는 것을 의미합니다. 기존의 클라우드 DB도 스케일링이 쉬워졌을뿐, DBA가 관리해줘야 할 부분이 있었는데 이걸 최대한 자동화 시켜서 개발자가 비즈니스 로직만 신경쓰도록 만드는 것이라고 보면 됩니다.

   그럼 이제 DBA 없어도 되는거야? 라고 생각할 수도 있는데, DB도 점점 데이터의 종류 및 사용처가 계속 복잡해지고 있어서, 오라클은 DBA 는 DB만을 관리하는게 아닌, 기업의 전체 데이터를 아우르는 Data Dachitect 가 되어야 한다고 주장합니다. 아래 기사를 참고하세요.
   ""자율운영 데이터베이스, DBA 대체 아니다"" https://zdnet.co.kr/view/?no=20180814122734
"
"https://news.hada.io/topic?id=2627","P2 - 워드프레스가 만든 팀 협업 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         P2 - 워드프레스가 만든 팀 협업 도구

   - 2005년부터 리모트로 일해왔던 Automattic이 내부에서 사용하던 도구를 공개한 것
   - 팀 협업을 위한 문서편집/프로젝트/대화를 하나로 묶은 도구
   ㅤ→ 실시간 문서 동시 편집 및 메시징, 멘션 기능
   ㅤ→ Private / Public 설정 및 사용자 접근 관리
   - 무료. 3GB 저장 공간
   - 워드프레스/블로거/Medium/Wix/Ghost/Tumblr 등에서 임포트 가능
   - 커스텀 도메인 및 셀프호스팅 지원예정 ( Wordpress와 마찬가지 )

   워드프레스닷컴 계정이 있으면 바로 만들 수 있어서 써 봤는데, 개념이 좀 복잡하긴 합니다.
   P2 사이트 하나를 만들면 워드프레스 블로그처럼 생긴 사이트가 생기고 거기에 팀 멤버를 초대가능합니다.
   초대된 멤버는 같이 편집도 되고, @를 이용해서 멘션도 되고, 서로가 편집한 내용을 계속 업데이트 받을수 있습니다.
   워드프레스 처럼 Pages / Posts 두가지 타입의 문서 생성이 가능합니다.
   Posts 에 글을 쓰면 블로그처럼 타임라인에 추가가 됩니다.
   워드프레스 팀블로그랑 개념이 비슷한듯 하면서도 좀 더 협업에 특화된 기능을 지원하는거라 보면 될듯.
"
"https://news.hada.io/topic?id=2712","Unity, IPO 서류(S-1) 제출. NYSE 상장 노린다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Unity, IPO 서류(S-1) 제출. NYSE 상장 노린다

   - 190개국 150만명의 제작자가 사용하는 게임 엔진 및 콘텐츠 제작도구
   - 2019년 월 30억회 이상, 15억대의 기기에서 다운로드
   - 앱스토어/구글플레이 상위 1000개 및 PC/콘솔게임의 50% 이상이 Unity로 개발
   - NASDAQ 대신 NYSE에 'U' 라는 티커로 상장 계획

   애플과 싸우고 있는 EPIC 과는 대조적인 모습이네요.
   EPIC은 이번주 금요일까지 기한인데, 그거에 따라서 언리얼과 유니티가 서로 다른 길을 가게 되려나요.

   상장 타이밍이 좀 절묘하긴 한데, 두 회사는 게임 엔진 말고는 별 다른 접점이 없을 정도로 이미 다른 길을 걸어왔다고 봅니다.
   단적으로 봐도 언리얼은 포트나이트를 위시한 게임개발사이자 플랫폼 사업자이지만 유니티는 그냥 엔진에만 집중하고 있죠. 언리얼의 엔진 매출 비용이 얼마 되지 않을거고, iOS/macOS 용 언리얼엔진 매출 비중은 더더욱 적을겁니다.

   대형 게임사는 언리얼을 선호하고, 중소인디 게임사는 유니티를 선호하는 분위기던데요.
   실제 벌어들이는 돈은 큰 차이 안 날 것 같습니다.
"
"https://news.hada.io/topic?id=2606","Node 모듈은 전쟁중 : CommonJS vs ESM","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Node 모듈은 전쟁중 : CommonJS vs ESM

   CJS와 ESM은 구현체가 전혀 다름. 서로 호출은 가능하지만 귀찮음.
   - CJS : require() 와 module.exports
   - ESM : import 와 export
   둘을 상세히 비교하고, 왜 다르고 연동이 귀찮은지 내부까지 설명한 글
   작성자가 노드 라이브러리 개발자에게 권하는 가이드라인
   1. CJS 버전을 제공하고
   2. CJS 위에 thin ESM Wrapper를 제공한뒤
   3. package.json 에 exports 추가
   물론 ESM이 더 최신 방법이지만, 변경사항이 많고 CJS 위에 ESM 래퍼를 제공하는게 더 쉬우니 이게 현재로선 가장 나은 방법인거 같다고.
"
"https://news.hada.io/topic?id=2626","Notion, 한국어 지원 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Notion, 한국어 지원 시작

   - 한국어를 시작으로 다양한 언어 지원할 예정
   - 도움말 페이지에서 100개 이상의 한국어 가이드 제공
   - 노션 한국 커뮤니티가 만든 한국어 템플릿들 제공
   ㅤ→ 나만의 도서관 만들기 : 위키형식 템플릿 11종
   ㅤ→ 계획을 세우는 모든이를 위해 : 플래너 형태의 템플릿 8종
   ㅤ→ 선생님도 학생도 활용 가능한 : 학교에서 쓰기 좋은 템플릿 7종
   - 로그인 후 설정과 멤버 -> 언어와 지역 에서 주 사용언어 변경 가능

   개인적인 메모, 아카이빙 용도로는 적절한데, 업무용으로 쓰려니 오프라인 모드, 백업, API 지원 등이 아쉽더라구요.

   잠깐 한국어로 바꿔서 써봤는데...
   명령어도 한글로 쳐야하내요. `/제목1`, `/인용`, `/사용자 멘션하기`
   대체적으로 번역은 잘된 것 같은데, 세세한 부분에서 이상한게 좀 있내요. (Empty page -> 페이지 비우기, 빈 페이지가 맞는 의미)
   한동안은 그냥 영어로 쓰는게 나을 것 같습니다.

   한국어 템플릿 갤러리 : https://www.notion.so/1639712845e5473083442d3ff3be023c
   노션 한국 커뮤니티 : https://notion.so/Notion-Community-in-Korea-61220f5077824ae681644cdd01…
   https://www.notion.so 메인페이지도 다 로컬라이제이션 되어있는데 한국어 페이지로 가는 직접 링크가 없네요.
   메인 페이지 맨 아래 좌측에 언어 선택 콤보로 한국어를 선택하면 setlocale API를 통해서 언어를 변경하는 방식입니다.
   영어외에 지원되는 첫번째 언어가 한국어라니, 한국 사용자가 많기는 한가 봅니다.
   오전에 이메일로 한국어 지원 시작 공지를 메일로 받았는데, CEO 이름으로 보낸 해당 메일의 마지막 문구가 인상적입니다.
   ""이 이메일을 읽고 계신다면 아마 이전에 Notion을 사용해 보신 적이 있을 겁니다. Notion 팀을 대표하여 여러분의 지지에 대한 큰 감사의 말씀을 전하고 싶습니다.
   개인적으로 말씀드리자면, 영어는 저의 모국어가 아닙니다. 그래서 외국어로 된 소프트웨어를 사용하는 것이 얼마나 답답한 일인지 잘 알고 있습니다. 이번 한국어 버전 출시를 통해 Notion이 나만의 맞춤형 도구가 되기를 바랍니다. 여러분도 Notion으로 문제를 해결하고 일상과 업무를 정리해 생산성을 향상시켜 보세요.""
"
"https://news.hada.io/topic?id=2692","TypeScript 4.0 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           TypeScript 4.0 발표

   - Variadic* Tuple Type 지원
   ㅤ→ Generic 타입 스프레드 가능
   ㅤ→ `...` 연산자가 중간에도 올수 있음.
   - Tuple 에 Label 지원
   - &&=, ||=, ??= 연산자 추가
   - catch의 타입을 unknown 또는 any 로 지정 가능
   ㅤ→ unknown 으로 하면 처리전에 typeof/instanceof 등으로 타입체크를 꼭 해야 한다는 것을 명시 하는 것
   - JSX 사용시 jsxFragmentFactory 로 사용자 정의 가능
   - 생성자로부터 속성 타입 추론 가능
   - --noEmitOnError 옵션 사용시에도 이전 컴파일 결과 캐시하여 빌드 속도 개선
   - -incremental 과 --noEmit 옵션 함께 사용 가능
   에디터 개선 (Visual Studio Code)
   - Optional Chaining & Nullish Coalescing 자동 변환 기능
   - /** @deprecated */ 지원
   - 시작시 Partial Semantic Mode 지원 - 큰 프로젝트 로딩시 걸리는 시간을 줄이기 위해 열려있는 일부 코드파일에만 적용되는 가벼운 서버를 실행하는 것
   - 더 똑똑한 Auto-Import 기능
   Breaking Changes
   - lib.d.ts 의 DOM 관련 타입들 변경
   ㅤ→ document.origin 제거하고 self.origin 사용 권고
   - 부모 클래스의 getter/setter 를 Override하면 항상 오류 표시
   - strictNullChecks 상태일 때 delete 의 피연산자는 any, unknown, never 또는 optional 이어야 함
   * Variadic : 고정되지 않은 갯수의 인자를 받는 것을 의미. 예) printf 의 인자들

   3.0때 만큼의 큰 변화는 없음
   ㅤ→ 그래서 TypeScript 안써봤다면 지금이 바로 적기! 라고 글 앞쪽에 홍보문구가 적혀 있네요.
   스택오버플로우의 개발자 설문조사에서도 선호 언어에서 Rust 에 이어서 2위입니다.
"
"https://news.hada.io/topic?id=2630","퀄컴 스냅드래곤칩 보안 결함으로 10억대 이상 안드로이드 기기의 데이터 유출 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             퀄컴 스냅드래곤칩 보안 결함으로 10억대 이상 안드로이드 기기의 데이터 유출 가능

   - Achilles 라고 불리며, 400개 이상의 취약점이 발견
   - 스냅드래곤 내부 DSP 기능의 허점을 통해서
   ㅤ→ 사용자 인터랙션 없이 스파이 도구로 활용 가능
   ㅤ→ 폰 사용 불가능 하게 할 수 있고
   ㅤ→ 멀웨어가 자신들을 숨기고 삭제 불가능하게 활동 가능
   - 퀄컴에 알려서 픽스가 나왔지만, 아직 안드로이드 기기용 적절한 업데이트/또는 패치는 나오지 않음
   - 아직 이를 활용한 공격은 보고된 바 없음
"
"https://news.hada.io/topic?id=2615","Pysa - 파이썬 코드의 보안을 점검해주는 정적 분석 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Pysa - 파이썬 코드의 보안을 점검해주는 정적 분석 도구

   페이스북이 공개한 오픈소스. 타입체커인 Pyre에 함께 배포.
   파이썬 코드를 정적 분석해서 잘못된 데이터 접근, XSS 와 SQL 인젝션 같은 문제들을 감지.
   페북내에서는 인스타그램 서버가 가장 큰 파이썬 코드여서, 거기서 모든 코드변경마다 체크한다고.
   기본에 Hack 코드를 정적 분석하던 Zoncolan 과 같은 알고리즘을 사용

   수백만 라인정도 되는 인스타그램 코드에 대한 분석은 평균 약 65분 정도 걸린다고 하네요
   기본적으로 페이스북은 파이썬 3.6+ 이상이지만 Pyre & Pysa 는 파이썬 2도 지원한다고.
"
"https://news.hada.io/topic?id=2676","페이스북, 인스타그램 DM을 페이스북 메신저로 통합 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    페이스북, 인스타그램 DM을 페이스북 메신저로 통합 시작

   - iOS/Android 모두 Update 스크린 팝업되고 업데이트 하면 DM아이콘이 페이스북 메신저 로고로 변경
   - Emoji 기능 추가 및 페이스북 사용자와 대화 가능(아직은 대화 안됨)
   - 궁극적으로는 메신저,인스타그램,WhatsApp 을 통합할 계획
   ㅤ→ 셋중의 하나만 있어도 다른 두앱의 사용자와 대화 가능하도록 할 것
   - 일부사용자 대상 테스트 중이며, 다른 국가를 포함해서 늘려 나갈 것
"
"https://news.hada.io/topic?id=2642","Bevy - Rust 기반 오픈소스 2D/3D 게임엔진 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Bevy - Rust 기반 오픈소스 2D/3D 게임엔진

   - Entity Component System(ECS) 기반 데이터 중심 설계
   - Flex box 모델 기반 Bevy UI 엔진 제공
   - 크로스 플랫폼 : 윈/맥/리눅스 (모바일/웹 지원예정)
   - 3D : Lights, meshes, textures, MSAA 및 GLTF 로딩
   - Sprites , Assets, Scenes 등 기본 기능들
   - 멀티 렌더러 백엔드 : Vulkan, DirectX 12, Metal
   - Hot Asset Reloading 지원
"
"https://news.hada.io/topic?id=2687","소셜미디어 이미지 사이즈 2020 인포그래픽","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        소셜미디어 이미지 사이즈 2020 인포그래픽

   - 페이스북/인스타그램/트위터/유튜브/링크드인/핀터레스트/스냅챗
   ㅤ→ 각 서비스에서 사용되는 이미지 사이즈를 각각 하나로 정리한 인포그래픽
   - 업로드 권장/최소 사이즈 및 용량과 스케일되어 표시되는 실제 사이즈까지 모두 정리
"
"https://news.hada.io/topic?id=2594","트럼프, 틱톡 인수에 수수료 요구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           트럼프, 틱톡 인수에 수수료 요구

   - 트럼프, 만약 마이크로소프트의 틱톡 인수가 성사된다면 미국 정부가 인수를 가능하게 했으므로 인수 금액의 많은 부분을 미국 정부에게 주어야 한다고 주장.
   - 코넬 대학교의 경제학 교수인 Eswar Prassad교수는 이러한 것에 법적 근거가 없으며, 국가 안보와 경제에 위험한 전례를 만들것 임을 경고
   - 백악관 대변인인 케일리 맥게너는 답변을 회피

   진짜 대단하다...ㄷㄷ

   맛탱이가 갔내요.

   와.. 트럼프는 도대체 뭐죠!?

   중매수수료 받는거도 아니고..

   트위터는 인생의 낭비이고 트럼프는 미국의 낭비라는 말이 들어맞는 상황이군요.
"
"https://news.hada.io/topic?id=2672","트럼프, 에드워드 스노든 사면 검토","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          트럼프, 에드워드 스노든 사면 검토

   NSA 내부폭로자 에드워드 스노든에 대한 사면검토에 대한 뉴스입니다.
   에드워드 스노든은 지난 2013년 NSA의 프리즘 프로젝트에 대해 폭로한바 있습니다.

   스노든이 던진 PRISM[1] 에 대한 폭로는 사실 그럴꺼라고 예상만 했던게 공개된 셈이라, 그 사건 이후 많은 사람들이 정보보호에 좀 더 관심을 가지게 되는 계기가 되었던거 같아요. 미국 입장에서는 정말 밉겠지만.
   다른 한편으로는, 냉전시대 끝나고 별로 만들게 없었던 첩보영화에 큰 아이템을 준 것이라고도 생각이..
   아 물론 본인 이름의 영화[2]는 망했어요 ㅡ.ㅡ;
   [1] 프리즘(감시 체계) https://ko.wikipedia.org/wiki/%ED%94%84%EB%A6%AC%EC%A6%98_(%EA%B0%90%EC%8B%9C_%EC%B2%B4%EA%B3%84)
   [2] 영화 스노든
   https://www.youtube.com/watch?v=okceZB6YiwE
"
"https://news.hada.io/topic?id=2653","애플, 구독 번들 Apple One 런칭 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       애플, 구독 번들 Apple One 런칭 예정

   차기 아이폰 발표와 함께 애플의 기존 구독서비스를 묶어서 더 저렴한 요금제를 선보일 듯
   여러 레벨의 패키지가 될 것
   -1. Basic : 애플 뮤직, 애플 TV+
   -2. #1 + 애플 아케이드
   -3. #2 + 애플 뉴스+
   -4. #3 + iCloud 저장공간
   또한 최상위 번들에는 펠로톤/나이키가 하는 가상 피트니스 클래스와 비슷한 구독모델도 포함될 예정
   가족 대상 번들이 될 것이며 6명까지 같이 쓸 수 있을 것으로 예상
"
"https://news.hada.io/topic?id=2686","그냥 우클릭 하면 안 되나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            그냥 우클릭 하면 안 되나요?

   예전에 올린 글 중, '카탈리나에서 실행되는 모든 어플리케이션은 애플이 확인합니다. 그래서 앱 실행속도가 느려졌습니다.' 라는 글을 올렸는데요. 이번 글은 왜 애플이 그랬는지를 알 수 있는 글입니다.
   https://news.hada.io/topic?id=2145 ( Mac OS, Slow By Design )
   현재 에플은 카탈리나 이후부터 모든 앱을 실행시 애플에 보내 데이터베이스에 해당 앱이 올라왔는지 확인하고. 없다면 '멀웨어 경고'를 띄우며 실행을 봉쇄하였는데요. 이 과정에서 '해당 앱을 데이터 베이스에 올리는 것'을 공증이라고 합니다. 즉. 공증을 받지 않으면 이제 신규 사용자들은 해당 앱을 실행하는 게 불가능합니다.
   몇몇 사람들은 '그냥 우클릭하면 안 되나요?' 라는 의견을 제시하고 있는데요. 이 글은 왜 그럴 수 없는지. 신규 사용자가 조그마한 버튼을 누르고 웹 페이지 두개를 가로 질러 애플이 고의적으로 노출하는 멀웨어 경고도 무시하고 들어갈 수 없다고 과정을 통해 말하는 글입니다.

   중간 링크 ^^ https://news.hada.io/topic?id=2145

   감사합니다! 어쩌다보니 애플 까는 뉴스 두 개를 모두 들고 왔네요 'ㅇ'
"
"https://news.hada.io/topic?id=2614","FAST - MS가 만든 현대적인 웹을 위한 인터페이스 시스템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   FAST - MS가 만든 현대적인 웹을 위한 인터페이스 시스템

   엔터프라이즈 레벨의 웹사이트,어플리케이션,컴포넌트,디자인 시스템 등을 만들기 위한 도구들을 묶은 통합스위트
   - fast-elements : Web Components 호환 컴포넌트를 만들수 있도록 도와주는 라이브러리
   - fast-foundation : Web Components 로 만든 컴포넌트를 묶어서 룩앤필/브랜딩을 관리. 자신만의 디자인 시스템을 만드는데 사용
   현재는 이 두가지를 사용해서 만든 두개의 디자인 시스템이 있음
   - fast-components (FAST frame)
   ㅤ→ Web Components 기반의 다양한 컴포넌트를 제공하는 실험적인 디자인 시스템
   ㅤ→ Angular,Vue,React,Blazor등과 같이 사용 가능
   - fast-components-msft (Fluent UI)
   ㅤ→ Fluent 는 MS의 통합 디자인시스템
   ㅤ→ FluentUI 라는 별도의 페이지로 분리 되었음
   ㅤ→ 차후에는 Fluent 디자인 시스템 기반으로 합쳐질 것

   원 사이트보다 HN에 FAST 의 아키텍쳐 리드가 FAST를 소개한 글이 훨씬 이해가 편합니다. ( 위의 내용도 이에 기반해서 적었습니다.)
   https://news.ycombinator.com/item?id=24086245
   Fluent Design System : https://www.microsoft.com/design/fluent/
"
"https://news.hada.io/topic?id=2616","주기적(Periodic) 신호 데이터를 시각화 하는 법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     주기적(Periodic) 신호 데이터를 시각화 하는 법

   - Observable 을 이용해서 브라우저내에서 시각화 코드를 직접 보고 편집해가며 테스트 가능
   - Dot revolution / Color animation / Blink count / Earth Rotating / Clock period / Loading Circle / Pendulum / Concentric Circles
"
"https://news.hada.io/topic?id=2607","Rando.js - 쓰기 편한 랜덤 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Rando.js - 쓰기 편한 랜덤 라이브러리

   rando() : 난수 생성
   randoSequence() : 난수를 겹치지 않게 차례로 생성
   rando
   () : 0~1 float
   (5) : 0~5 정수
   (5,10) : 5~10 정수
   (5,""float"") : 0~5사이 float
   (true, false) : 참/거짓
   ([""a"", ""b""]) : 배열중 하나
   ({a: 1, b: 2}) : 객체중 하나
   ($(""div"")) : 해당 jQuery객체중 하나
   (""gee willikers!"") : 문자열중 한글자
   randoSequence(5) : 0~5 까지의 정수를 랜덤 순서대로 겹치지 않게 [3, 0, 4, 1, 5, 2]
   - 위 rando() 예제중 float 를 제외한 모든 방식에 적용 가능
"
"https://news.hada.io/topic?id=2596","Snippet Shot - 코드 이미지 캡쳐 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Snippet Shot - 코드 이미지 캡쳐 도구

   - GitHub Gist 또는 코드를 직접 복사해서 JPG/PNG로 만들어 주는 도구
   ㅤ→ 발표용 슬라이드에 넣는 용도
   - 대부분의 프로그래밍 언어 와 SQL/JSON/XML/마크다운 등 신택스 컬러링 지원 ( 156가지 )
   - 배경에 Gradient 처리
   - 하단에 Attribution 텍스트 추가 (사이트/제품명 등)
   - 코드창 Resize 가능
"
"https://news.hada.io/topic?id=2588","미국의 여행사 CWT가 랜섬웨어에 걸려서 약 53억원을 지불한 대화내역이 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              미국의 여행사 CWT가 랜섬웨어에 걸려서 약 53억원을 지불한 대화내역이 공개

   - Ragnar Locker 랜섬웨어에 걸려서 비트코인으로 $4.5M을 주고 해결
   - 해커랑 마치 비즈니스 관계의 대화 처럼 협상이 진행되는게 눈길을 끔
   1. 3만대의 기기가 감염되었으니, 암호 해제와 자신들이 다운로드한 데이터를 자신들의 서버에서 다 지우는 조건으로 $10M를 요구
   2. 천만달러면 우리가 이 자료를 공개했을때 니네가 입게될 법적 소송이나 평판하락 같은거에 비하면 싼거야~
   3. 랜덤으로 몇개의 파일을 ""무료""로 풀어줘서 자신들이 해제할 수 있다는 걸 보여줌
   4. 2일내에 연락하면 특별가로 할인해 준다면서 $10M은 비싼거 아니야? 라고 물어봄
   5. (화면에 없지만 아마도 20%할인한 $8M을 제시한듯)
   6. $8M은 우리 매출을 두배로 늘리지 않는한 어려워. 오늘 당장 마련해서 줄 수 있는 현금이 $3.7M 밖에 없어
   7. 20%도 크게 할인해준거고 5%정도까지는 추가로 가능한데 그 가격은 힘들어.. $4M 정도면 암호해독기 먼저 받고, 나머지를 나중에 주면 우리가 가진 니네 데이터를 지우거나 하는건 어때?
   8. 돈 지불후, ""앞으로 이런 일 안 생기게 하려면 이렇게 하는걸 추천해"" 하면서 보안 어드바이스를 던져줌
   - 로컬 암호는 꺼.
   - 관리자 세션은 강제 종료시켜.
   - 그룹 정책에서 WDigest 값을 0으로 설정해. UseLogonCredential 값이 0 이면 메모리에 저장 안하거든
   - 매달 암호는 바꿔.
   - 사용자에게 준 권한을 확인해서 최소화 하고 자신들이 딱 필요한 앱에서만 접근하게 해
   - 대부분의 경우 Applocker 정도면 다 지킬수 있어
   - 꼭 필요한 어플리케이션만 실행하도록 승인해
   - 안티바이러스만 믿지마. 장기적인 감염이나 공격에는 도움될지 몰라도, 대부분이 도움 안됨
   - EDR(Endpoint Detection and Response Security)을 설치하고 IT 관리자들한테 그거 사용하라고 해
   - 큰 회사들은 적어도 3명의 시스템 관리자가 24시간 일하는걸 추천하고, 4명의 관리자가 하루에 8시간씩 3교대 하는 정도면 충분할꺼야
   * CWT는 회사들의 출장/회의/인센티브/전시회 등을 관리해주는 B2B 대상 전문 여행관리 회사로, 1994년에 창업해서 145개국을 커버하는 직원수 18000명의 회사입니다. 년 매출은 1.8조원쯤 됩니다.

   누군 호구처럼 일해서벌고
   누군 뺏어서 돈벌고ㅋㅋㅋ

   깨알 edr홍보야머야ㅋㅋㅋㅋ

   아주 비싼 보안 컨설팅이내요.

   Windows에 해당하는 보안 조언으로 보이네요...

   대부분의 랜섬웨어는 윈도우즈 타겟이니까요 ㅎ

   얼마전 Garmin도 랜섬웨어에 걸려서 시스템이 몇일동안 셧다운되어서 난리였다가 몇백만불 주고 해결했는데요. 큰 회사일수록 더더욱 보안에 신경써야 할듯.
   https://engadget.com/garmin-cyber-attack-ransomware-payment-180211805.…
"
"https://news.hada.io/topic?id=2636","어도비가 PhoneGap에서 손땐다. ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          어도비가 PhoneGap에서 손땐다.

   어도비가 PhoneGap 과 PhoneGap Build 개발과 지원을 10월 1일자로 멈춘다고 하네요.
   이제 아파치 코르도바만 남는 형태가 되겠네요.
"
"https://news.hada.io/topic?id=2619","Firefox Voice","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Firefox Voice

   파이어폭스에서 음성 명령이 가능함 (애플의 시리나 구글의 OK Google 이 브라우저 확장으로 깔린 느낌)
   현재 베타 서비스 중
"
"https://news.hada.io/topic?id=2656","PayPay, 아마존 Aurora 에서 TiDB로 이관","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     PayPay, 아마존 Aurora 에서 TiDB로 이관

   - PayPay는 일본 최대 모바일 결제사업자 (사용자 3천만명)
   - 쓰기가 많은 Payment DB에 병목이 생겨서 Aurora 에서 오픈소스 HTAP( Hybrid Transactional/Analytical Processing) DB인 TiDB로 이관한 이유들을 정리
   - TiDB: 오픈소스, 클라우드 네이티브, 분산 SQL DB
   ㅤ→ MySQL과 호환
   ㅤ→ Horizonal 스케일링 가능. 추가적으로 TiDB 클러스터는 여러개 인스턴스로 되어있어서 HA 가능
   ㅤ→ 개발자 단에서 샤딩 처리할게 없어서 어플리케이션이 간단해 짐
   - Aurora 는 Write Primary 와 Read-Only Secondary 가 기본으로 둘간의 복제 레이턴시는 매우 작긴 하지만, Write 요청이 많아지면 binlog 복제가 병목이 되기 시작.
   - 내부에서 테스트 했을때 TiDB가 Aurora 보다 3배의 트랜잭션을 처리 할수 있었음

   GeekNews 읽다보니 오픈소스 DBMS 들이 어마어마하게 많이 존재하고 있었다는 사실을 새삼 알게 되네요.

   TiDB 개발사인 PingCap 사이트에 올라온 글이니, 다 믿을 필요는 없지만 한번 읽어볼만 합니다
"
"https://news.hada.io/topic?id=2677","umami - 셀프호스팅 가능한 Google Analytics 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 umami - 셀프호스팅 가능한 Google Analytics 대체제

   - JS + MySQL/Postgres 로 된 MIT 라이센스 오픈소스
   - 1 Page로 구성된 간단한 분석 페이지 : PV/방문자/Bounce Rate,레퍼러,브라우저/OS,사용자 위치
   - 다수 웹사이트 트래킹 가능
   - 6kb로 작은 트래킹 스크립트 사용

   오픈소스 GA 대체제 중에서 가장 유명한건
   ㅤ→ Matomo - 직접 호스트하는 Google Analytics 대체제 https://news.hada.io/topic?id=2295
   그보다는 작지만 많이 쓰는 것중의 하나
   ㅤ→ Fathom https://usefathom.com/
"
"https://news.hada.io/topic?id=2707","구글, 새 경력 인증서 프로그램 시작 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        구글, 새 경력 인증서 프로그램 시작 예정

   - Program Manager, Data Analyst, UX Designer 등 3개 분야
   - 6개월 과정으로 실무에 바로 투입가능하게 직무 교육
   - 구글 내부 채용시 ""4년제 대학 과정과 동일하게 대우""
   - 이전 경험 필요없음
   - 비용은 미공개이지만 현재 운영중인 ""구글 IT 서포트 전문가"" 프로그램이 월 $49로 6개월 정도(전체 약 $300)
   - 보조금 및 장학금도 지원 예정
   - Coursera 플랫폼을 이용

   Google Career Certificates 공식 사이트 https://grow.google/certificates/
   이미 운영중인 IT 서포트쪽 은 두개의 과정으로 운영중인데요
   아래와 같은 것들을 배운다고 합니다.
   Google IT Support Professional Certificates
   ㅤ→ 고객 지원
   ㅤ→ 트러블슈팅
   ㅤ→ 네트웍 프로토콜
   ㅤ→ 클라우드 컴퓨팅
   ㅤ→ 윈도우 운영체제
   ㅤ→ 리눅스 커맨드 라인
   ㅤ→ 시스템 관리
   ㅤ→ 암호화 알고리즘과 기술
   Google IT Automation with Python Professional Certificate
   ㅤ→ 파이썬 프로그래밍
   ㅤ→ 기본 프로그래밍 개념
   ㅤ→ 기본 파이썬 구문과 자료구조
   ㅤ→ 파이썬에서 테스팅하기
   ㅤ→ 자동화
   ㅤ→ 트러블슈팅 과 디버깅
   ㅤ→ 버전 컨트롤 사용법
   ㅤ→ 형상관리
   ㅤ→ 객체 지향 프로그래밍
   ㅤ→ 개발 환경 설정하기
   ㅤ→ 정규식

   메인 개발보다는 운영이나 QA 관련 과정이내요.

   아무래도 개발자를 6개월 교육해서 뽑는다는 건 무리인데 반해, IT Support 군은 구글외에 일반적인 모든 회사에서 수요가 많은 직군이라 이쪽을 먼저 만든거 같아요. 나름 괜찮은 시도라고 봅니다.

   한국의 수많은 6개월 국비교육과정에 대해 생각해보게 됩니다.
   구글과 같은 방향으로 가는 것이 장기적으로는 더 좋지 않을까 싶어요.

   그래서 원문 제목이 ""대학 학위를 파괴하려는 구글의 계획""이라고 ㅎㅎ
"
"https://news.hada.io/topic?id=2706","Pinduoduo로 살펴본 인터랙티브 이커머스 백서 [53p Slide]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Pinduoduo로 살펴본 인터랙티브 이커머스 백서 [53p Slide]

   나스닥에 상장된, 사용자/주문수 기준 중국 2위인 전자상거래 플랫폼 핀뚜어뚜어(PDD)의 독특한 모델을 이해 하기 쉬운 그래픽으로 깊게 살펴본 재미난 슬라이드 [영문]
   * 인터랙티브 이커머스 = 추천 + 커뮤니티 + 엔터테인먼트
   전통적 검색기반 커머스 와의 비교
   [추천]
   - 검색기반 커머스 → 레스토랑의 메뉴판 : 뭘 먹을까?
   - 인터랙티브 커머스 → 회전 초밥 : 다음엔 뭐가 나올까?
   [엔터테인먼트]
   - 검색기반 커머스 → 창고형 할인 매장. 편하고 안전하지만 재미없음
   - 인터랙티브 커머스 → 활기찬 야시장. 여기저기 풍선터트리기 게임도 하는 젊은 분위기
   [커뮤니티]
   - 검색기반 커머스 → 부모들이 작성하는 주단위 필수 물건 구매 리스트. 의무적으로 가야하고, 외롭고 지치고 끝나지 않는.
   - 인터랙티브 커머스 → Girl's Day Out. 오늘은 친구들과 손잡고 즐겁게 쇼핑 가는날.

   Consumer to Manufacturer 모델
   ㅤ→ 기존 유통 채널을 사용하지 않고, 소비자가 먼저 주문하는 방식으로 더 정확한 생산 예측이 가능

   ""Together, More Savings, More Fun"" : 공동 구매(Team Purchases) 기능의 독특한 적용
   1. 소비자는 기본적으로 두가지 가격을 제시받음.
   ㅤa. 혼자 살때의 가격
   ㅤb. 팀으로 같이 살때의 할인된 가격
   2. 소비자는 기존 팀에 들어가거나, 새로운 팀을 만들수 있음
   3. 24시간내로 친구나 가족을 SNS(위챗,QQ등)로 초대
   4. 팀이 완성되면 제품 구매 및 발송.

   쇼핑 Feed - 추천
   - 검색기반 커머스 → Pull Model : 사람들이 물건을 찾음
   - 인터랙티브 커머스 → Push Model : 물건들이 사람을 찾음
   쇼핑도 즐겁게 - Gamification
   - Duo Duo Orchard (과수원) : 플랫폼의 여러 기능을 사용할때 마다 자신의 과수원/나무에 물주고 씨뿌리는게 가능. 나무가 다 자라서 완성되면, 실제 과일이 사용자 주소로 배송됨.
   - Duo Duo Live : 스트리머 방송을 시청하고, 채팅하고, 할인도 받고.
   * PDD 의 AARRR ( Pirate Metrics )
   ㅤ→ Acquisition : '커뮤니티'에 의한 초대
   ㅤ→ Activation : '엔터테인먼트'를 통해서 즐기면서 시작
   ㅤ→ Retention : AI와 함께 '엔터테인먼트'를 통해서 지속적으로 사용하게 만듬 (과수원에 씨뿌리고 나무 키우러)
   ㅤ→ Referral : '커뮤니티'에 의해서 낮은 가격을 위해서 계속 초대
   ㅤ→ Revenue : AI로 사용자 가치 분석을 통해 매출 증대
   * 2020년 1~5월 기준. DAU/MDAU 가 Taobao, JD.com 보다 높음
"
"https://news.hada.io/topic?id=2673","isoflow - Isometric 클라우드 다이어그램 그리기 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 isoflow - Isometric 클라우드 다이어그램 그리기 도구

   - 브라우저에서 간단히 그리는 클라우드 아키텍처 다이어그램
   - isometric(등축 투영) 3D 형태
   - Server/Database/Laptop/User/Mail/Mobile Device 아이콘
   - Label 과 바닥 색상 변경 가능

   클라우드 아키텍처 그리는 비슷한 도구들
   CloudSkew - 클라우드 아키텍처 다이어그램 그리는 도구 https://news.hada.io/topic?id=1709
   draw.io - 무료 온라인 다이어그램 소프트웨어 https://news.hada.io/topic?id=673
   Diagrams - 파이썬 코드로 클라우드 아키텍쳐 그리기 https://news.hada.io/topic?id=1781

   브라우저에서 isometric 을 구현할 때 사용가능한 엔진들
   sheetengine - Isometric HTML5 JavaScript Display Engine https://archive.codeplex.com/?p=sheetengine
   Isomer – an isometric graphics library for HTML5 canvas https://jdan.github.io/isomer/
   Traviso - Isometric Javascript Engine http://www.travisojs.com/
"
"https://news.hada.io/topic?id=2586","테슬라 엔지니어가 초코칩 쿠키를 재설계하다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        테슬라 엔지니어가 초코칩 쿠키를 재설계하다

   대부분의 초코칩 쿠키에 들어간 초콜렛은 TearDrop(눈물방울) 형태로 만들어진지 80년이나 되었지만 기능상 적절하게 디자인 된것이 아님. 산업적으로 제조하기 위해서 그렇게 만들어진 것일 뿐.
   테슬라에서 태양광지붕 및 차량악세서리를 디자인하는 Remy Labesque는 초콜렛이 쿠키에 들어가서도 모양을 유지하고, 향과 맛을 극대화 및 입에서 사르르 녹게 만들기 위해 사각형의 얇은 피라미드 형태의 초콜렛을 만듬. 가열되어도 모양을 유지하면서 부드러운 질감을 유지한다고
   * 이 초코칩쿠키를 만드는 Dandelion Chocolate 의 창업자들은 2002년에 Plaxo라는 온라인 주소록 서비스를 만들었다가 Comcast에 2008년에 회사를 팔았죠. Comcast는 이 서비스를 어찌저찌 유지하다가 2017년에 서비스를 접긴 했습니다만, 창업자 둘은 매각비용을 가지고 2010년에 초콜릿 회사를 차립니다. IT회사 하다가 갑자기 왠 초콜릿? 하겠지만 집에서도 카카오를 키울만큼 초콜릿을 좋아했던 둘은 굉장히 까다롭게 카카오빈을 선별하고 로스팅부터 초콜릿을 만들어내는 마지막 과정(bean-to-bar)까지 수작업으로 전통적인 제조법을 지키는 브랜드로 유명합니다.

   먹는 초코칩 쿠키지만 IT와 이래저래 굉장히 연관있는 브랜드여서 공유해봅니다 ^^;
"
"https://news.hada.io/topic?id=2681","구글 지도, 자연지형을 쉽게 구별하도록 변경중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       구글 지도, 자연지형을 쉽게 구별하도록 변경중

   - 산,만년설,사막,해변,울창한 숲등의 자연 지형이 기본적으로 지도에 구분되어 표시
   - 인공위성 이미지를 기본으로 한 색상 매핑 알고리즘을 사용
   - 220개 국가 및 지역의 대도시부터 시골마을까지 지원 예정
   - 뉴욕/SF/런던 등 일부 도시는 더 자세하게 : 도로/인도/횡단보도/보행자 섬 등의 거리 지형지물을 구분
   - 이번주 부터 차차 글로벌에 적용 예정
"
"https://news.hada.io/topic?id=2700","Android 용 Firefox 의 새 버전 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Android 용 Firefox 의 새 버전 공개

   - 툴바(주소창)을 상단이나 하단에 배치가능
   - 열려있던 탭들을 컬렉션으로 저장 가능
   - 향상된 추적방지 기능 사용 가능
   - 페이지 로드 속도 개선
   - uBlock, Privacy Possum 등 부가 기능 사용 가능
   기존 Firefox Nightly(구 Preview)에 적용되었던 사항이 적용됨

   나이틀리 계속 써왔던 입장에서 말씀드리자면...
   파폭은 UI나 자잘한 부분 (카카오페이가 안열린다던가) 이 정돈되지 않아서 다른사람에게 권하기 좀 힘들더라고요. 저야 이념적인(?) 문제때문에 파폭써주고 있지만...
   그래도 최근 애드온들이 추가되면서 강점이 생겨서 다행입니다.
"
"https://news.hada.io/topic?id=2691","Squoosh! - Google이 만든 이미지 최적화 웹앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Squoosh! - Google이 만든 이미지 최적화 웹앱

   구글 크롬 팀에서 만든 이미지 최적화 웹앱인 Squoosh!입니다. (영어) 압축하려는 이미지를 외부 웹 서버로 보내지 않고 로컬 웹 브라우저에서 바로 처리하며, 구글로 전송되는 정보는 오직 구글 애널리틱스를 통한 사용 관련 정보뿐입니다. 또한 최적화 전후의 결과를 화면에서 바로 비교할 수 있으며, 원한다면 자세한 최적화 옵션을 줄 수도 있습니다. 아파치 2.0 라이센스로 소스코드가 공개되어 있으므로, 원한다면 로컬에 서버를 띄울 수도 있습니다.
   Github 주소:
   https://github.com/GoogleChromeLabs/squoosh

   참고 - 예전에 올렸던 jpg/png 이미지 크기 최적화를 위한 무료 온라인 도구:
   https://news.hada.io/topic?id=1785
"
"https://news.hada.io/topic?id=2709","코로나19가 바꿀 사무실과 집의 미래","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          코로나19가 바꿀 사무실과 집의 미래

   BBC가 그려본 '재택근무가 일상화된 2025년의 모습'
   일주일에 하루 출근하고 4일을 재택하는 직장인의 일과를 그래픽 애니메이션과 함께 설명
   - 물론 모든 것이 바뀌는 것은 아니다
   - 재무적 변화의 필요성
   - 도시를 떠나는 사람들
   - 집의 변화
   - 언택트 시대가 온다
   - 개방형 사무실의 미래
   - 미래는 어떤 모습일까

   일주일에 하루를 쓰기 위해 사무실을 유지해야할까요?

   BBC 한국어판은 한국인 기자가 쓰긴 할텐데... 언택트같은 콩글리시를 쓰다니 의외내요.

   기사는 재미나게 읽었는데, 중간에 사용된 저 언택트라는 단어는 많이 거슬리네요. 어디서 나온지도 모르겠는 단어에요.
   원문엔 ""touchless tech"" 라고 되어 있습니다.

   매년 트랜드를 소개하는 ‘트렌드 코리아 2018’(김난도 교수 외)에서 제시된 신조어입니다. 컨택트라는 기존 단어의 발음과 유사하면서도 뭔가 의미 전달에 어울리다는 인식 때문인지, 대중적으로 활용되네요. (해당 서적이 베스트셀러이기도 하고요.)

   이거 무의식적으로 쓰다가는 외국인과 대화할 때 이상하게 들릴 수도 있을거 같아요.

   uncontact → untact 라는 한국식 조어라고 하네요

   모든걸 줄여쓰기 좋아하는 요즘 세대형 단어네요. ㅠ
"
"https://news.hada.io/topic?id=2608","크롬85 부터 지원되는 content-visiblity 로 페이지 성능개선하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              크롬85 부터 지원되는 content-visiblity 로 페이지 성능개선하기

   content-visibility: auto 적용만으로 화면에 안보이는 개체는 렌더링 하지 않게 해서 속도 개선
   개체에 auto 지정시 CSS Containment 스펙중 layout,style,paint 가 적용되고, 해당 개체가 화면을 벗어나면 size도 적용
   ㅤ→ 화면을 벗어나면 해당개체의 자손들은 전혀 안 그림
   ㅤ→ 다시 화면근처에 오면 size 는 빠지고 hit-test 시작
   contain-intrinsic-size 로 기본으로 그려야할 크기 지정 가능. 미지정시 0
   content-visibility: hidden 지정시 화면 벗어난 것 처럼 전혀 렌더링 안함.
   ㅤ→ 개체를 숨기고 렌더링도 유지하지만, 변경이 일어났다면 다시 보이게 될때 렌더링이 적용됨.
   ㅤ→ display:none - 개체를 숨기고 렌더링 상태를 파괴. 즉 다시 보일때 새로 그리는거랑 마찬가지
   ㅤ→ visibility:hidden - 개체를 숨기고 렌더링 상태를 유지. 실제로 문서에서 제거되지 않고 개체는 자리를 차지하며 클릭도 가능. 숨겨져 있지만 렌더링은 계속 되는 상태
"
"https://news.hada.io/topic?id=2640","사업 아이디어가 필요하다면 Unbundling을 주목하세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    사업 아이디어가 필요하다면 Unbundling을 주목하세요

   기존 대기업을 언번들링한 사례대신, 커뮤니티/특정 기술의 언번들링을 예로 들어 설명한 글
   Unix, Craiglist, Spreadsheet, Hippie Culture, Reddit, Universites, Wordpress, Webhosting
   - Unix 언번들링
   grep → Google
   rsync → Dropbox
   man → Stack Overflow
   cron → IFTTT
   finger → Social Media
   - Reddit 언번들링
   r/startups → IndieHackers
   r/medicine → Doximity
   r/Beauty -> Supergreat
   r/funny → 9gag
   r/sports → StadiumLive
   r/Streamers → Pipeline.gg
   r/insert city → Nextdoor
   r/books → Goodreads
   r/digitalnomad → Nomadlist
   r/fitness → Fitocracy
   r/design → Designer News
   r/GrowthHacking → GrowthHackers.com
   - Universities
   Community → PhysicsForums, Discord Servers,
   Content → Udemy, Masterclass
   Credentials → Coursera, edX
   Network → Twitter, Clubhouse, LinkedIn
   Support → StackExchange
   Access to Books → Scribd, Libgen
   Learning Spaces → https://www.focusmate.com/
   Accountability → ???
   - Wordpress
   Publishing → Medium, Ghost
   Ecommerce Plugins → Shopify
   Buddypress → Tribe.so
   Membership Plugins → Mighty Networks, Ghost
   Contact Form Plugins → Typeform
   Comments → Disqus
   - Webhosting
   Database → Cloud Firestore, FaunaDB
   Authentication → Auth0
   Content Delivery → Cloudflare, Netlify
   Version Control → Github, Gitlab, Bitbucket
   Email → Mailchimp, ConvertKit

   기존 기업/산업의 언번들링 설명과 사례는 아래 글을 참고 하세요
   - 스타트업에 의해 해체되는 대기업: Unbundling 현상 https://estimastory.com/2015/04/21/unbundling/
   ㅤ→ 미국은행(웰스파고), 유럽은행(HSBC), P&G , Honeywell(IoT), Fedex
   - 자동차 산업 언번들링 : https://cbinsights.com/research/…
   - 호텔 산업 언번들링 : https://www.cbinsights.com/research/unbundling-the-hotel/
"
"https://news.hada.io/topic?id=2639","SurveyJS - 무료 설문조사 라이브러리 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        SurveyJS - 무료 설문조사 라이브러리

   - Angular2+,jQuery,React,Vue,knockout 과 사용 가능
   - 다양한 질문 형식 제공
   - 멀티 페이지 설문 가능
   - 동적 설문조사 로직 변경(논리식,함수,필터 등 이용)
   - 한국어 포함 20개 이상 언어 지원 (커뮤니티가 제공한 번역)
   - 커스텀 테마 및 Bootstrap 지원
   - MIT 라이센스
   - Survey Creator / PDF Export / Analytics Pack 은 유료

   좋은 정보 감사합니다. 분석 기능만 제외한 버전은 $699 네요
"
"https://news.hada.io/topic?id=2590","애플, 27인치 iMac 대대적 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         애플, 27인치 iMac 대대적 업데이트

   - 6/8/10코어 10세대 인텔 프로세서 및 최대 128GB 램
   - AMD Radeon 5300/5500/5700 GPU
   - 전 모델 SSD 및 T2 보안칩 탑재
   - 트루톤 5K 디스플레이. 나노텍스쳐 옵션 가능
   - 1080P 페이스타임 카메라
   - 가변이퀄라이저 스피커
   - 스튜디오급 마이크 어레이
   - iMac Pro는 10코어 Xeon 탑재 ( 최대 18코어, 256GB 램 등 )

   어쩌면 마지막 인텔 아이맥

   ARM 전환을 발표해서 사기가 좀 .. 그렇네요

   이게 마지막 불꽃처럼 모든 옵션을 다 넣어준 기분이라.. 이거 사고 대미를 장식하라는 의미로 보입니다만.. ㅎㅎㅎ

   나노텍스쳐 글래스 선택옵션이 67.5만원이군요. 정말 그리 좋은지 비교를 안해봐서..
"
"https://news.hada.io/topic?id=2585","nuTab - 크롬의 빈 탭을 마크다운 노트로 사용하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     nuTab - 크롬의 빈 탭을 마크다운 노트로 사용하기

   - 새 탭 열기 하면 보이는 빈 탭을 로컬 노트 작성도구로 변경하는 확장
   - 마크다운 포매팅 지원 (B/I/U/List/Link/H1/체크박스)
   - 키보드 단축키 및 Inline 툴바
   - 상단에 즐겨찾는 사이트들 추가 가능
   - 까먹지 말아야 할 것들을 적어두는 용도로 사용 가능

   와우 firefox 용 빨리 나왔으면 좋겠어요!
"
"https://news.hada.io/topic?id=2671","IBM, 7nm 공정 POWER10 프로세서 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      IBM, 7nm 공정 POWER10 프로세서 공개

   - IBM의 첫번째 7나노 프로세서. 삼성의 극자외선(EUV) 7나노 공정으로 생산 예정
   - 기존 파워9 대비 3배의 에너지 효율
   - RedHat OpenShift 에 최적화 되어, Hybrid Cloud 용으로 적합
   ㅤ→ 하드웨어 메모리 암호화로 더 나은 보안, 페타바이트 메모리 클러스터링 지원
   ㅤ→ Matrix Math Accelerator 내장으로 AI 추론 속도를 개선

   오호 좋은 소식이네요 :)
   그런데 저거 IBM 에서만 사용하지 않나요..?
   LinuxOne 할때 저걸로 봤던것같은데.ㅡ.ㅡ;;

   예전엔 애플도 쓰고 소니 플스도 쓰고 그랬는데 요즘은 소비자 시장에선 접할 일이 없는 듯하네요. (이제 안 만드는 줄...)

   Power9 는 IBM 말고도 쓰는데가 있긴 한데.. 그냥 IBM 서버전용이라고 보는게 맞을거 같네요.
   Talos™ II is Raptor Computing Systems' next-generation POWER9 platform
   https://wiki.raptorcs.com/wiki/Talos_II

   POWER10 의 기술적인 내용은 이 슬라이드에서 자세히 보실수 있습니다.
   https://regmedia.co.uk/2020/08/17/ibm_power10_summary.pdf
   - PCIe v5 and DDR5
   - 1 TB/s memory bandwidth
   현재 파운드리 절대 1등은 TSMC (51.5%)이고 삼성이 2등(18.8%)인데, 현재 7나노 이하 공정이 가능한게 이 둘뿐 입니다. (올해 2분기 기준 마켓셰어)
   인텔은 7나노는 GG쳤는데 그러면 TSMC일꺼고, 애플 A13은 7나노, A14는 5나노 라서 계속 TSMC가 제조할꺼긴 한데요.
   TSMC가 9월 중순부터는 화웨이꺼 안 만들기로 했는데, 중국의 파운드리인 SMIC 는 아직 14나노에서 머물러 있어서..
   ( 화웨이가 만든 기린990 칩등이 7나노 입니다.)
   그러면 IBM과도 손잡은 삼성쪽 7나노 공정이 아무래도 더더욱 빛을 발하게 될꺼 같네요.
"
"https://news.hada.io/topic?id=2638","지하철에서 바이러스 입자에 일어나는 일","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         지하철에서 바이러스 입자에 일어나는 일

   NYT가 잘하는 영역중 하나인 인터랙티브 기사 (Snowfall*)
   - 지하철 열차내부에서의 환기 시스템 과 필터에 대한 상세 설명
   - 바이러스의 이동을 마스크 쓴 사람과 안 쓴 사람이 재채기 할때의 비교를 통해서 설명
   * Snowfall 은 인터랙티브 기사의 시초라고 할 수 있는 기획보도

   Snowfall : http://nytimes.com/projects/2012/…
"
"https://news.hada.io/topic?id=2637","웹 개발자가 iOS/iPadOS 14에서 고려해야할 점","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     웹 개발자가 iOS/iPadOS 14에서 고려해야할 점

   현재 Safari 14 베타4 기준이며 계속 업데이트중
   - 주요 변경점들 : WebAuth, PiP, WebP & HDR, HTTP/3 등
   - App Gallery : WebClips(바로가기 및 PWA들) 들은 앱갤러리에 표시 안됨
   - PWAs : 13과 차이없음
   - News+ 웹링크 : 애플뉴스+ 지원 웹링크가 사파리대신 News+앱에서 열림
   - App Clips : 사파리 앱 배너가 앱클립용으로 사용 가능
   - Geolocation : 지도권한 요청시 precise on/off 가능
   - 웹뷰 with ITP(Intelligent Tracking Prevention) : 웹뷰는 기본적으로 ITP 활성화. 설정에서 끌수 있지만, API로 끄는 방법은 없음
   - Service Workers : 웹뷰에서 지원. App Bounds Domains 가 info.plist 에 추가되고 웹뷰에서 해당 도메인만 브라우징 가능.
   - App Bound domains per app : 10개로 제한
"
"https://news.hada.io/topic?id=2587","왜 MS는 틱톡을 원할까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             왜 MS는 틱톡을 원할까?

   MS의 틱톡 인수 협상을 다룬 버지 기사 중 흥미로운 부분만 발췌했습니다.
   - MS는 틱톡이 가진 일반(특히 십 대 청소년) 소비자 데이터를 원함, 비즈니스 사용자가 아닌 일반 소비자가 어떻게 서비스를 이용하는지 알 수 있을 것으로 기대
   - MS는 엑스박스 라이브 서비스에서 얻은 데이터로 키넥트, 홀로렌즈 등 여러 하드웨어 연구에 도움을 얻은 경험이 있음
   - 미국 십 대는 구글과 애플이 제공하는 제품과 서비스를 더 많이 사용하는 환경에서 자랐기 때문에 MS는 이들에 대해 잘 모르고 있음, 이는 미래의 비즈니스 사용자 니즈를 모른다는 말과 같음
   - 사티아 나델라의 첫 성공적인 인수는 마인크래프트였고, 링크드인과 깃헙 인수도 성공적이란 평가를 받고 있음, 틱톡이 또 다른 사례가 될 지 관심
   - 틱톡을 독립적으로 운영하면서 데이터를 활용하고 다른 서비스와 시너지를 이룬다면 MS가 항상 원했던 유튜브와 페이스북과 어깨를 나란히 할 수 있는 위치에 올라갈 것으로 기대

   네이버 테크플러스 블로그에 버지 기사 전문 번역이 실렸네요. https://blog.naver.com/tech-plus/222050770256

   트럼프 대통령이 중국 태생(?)인 틱톡을 자꾸 위협(사용 금지 등)하니까 틱톡이 MS 한테 인수해달라고 요청했다는 시나리오였던가요?

   이게 하도 여기저기서 떠드느라 복잡한 이슈인데 시작은 말씀하신게 맞는거 같습니다.
   지금은 런던으로 본사 옮긴다는 애기와 중국 정부가 미국에 안줄건데? 하고 있어서 어디로 갈지 모르겠네요.

   MS입장에서는 대통령과 담판 지을법 하네요.
   소송들어간 미 국방부 JEDI 클라우드 건도 그렇고, 트럼프한테 밉보인 아마존보다 MS가 이런 딜을 잘 끌어내는듯 합니다. (아마존과 틱톡은 상관없지만, 트럼프가 JEDI 이후로 MS를 이쁘게 보는거 아닌가 하는.. )
"
"https://news.hada.io/topic?id=2602","Kindle 개발 초기에 Jeff Bezos에게 배운 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Kindle 개발 초기에 Jeff Bezos에게 배운 것

   킨들팀의 첫번째 멤버였던 Dan Rose의 트윗 쓰레드
   1. 배우고 적응하기 : 아마존의 CD판매는, 애플이 음악을 디지털화 했을때 거의 소멸. 베조스는 iPod/iTunes에서 얻은 교훈을 킨들에 적용
   2. Ignore the ""Institutional No"" : 2004년은 닷컴붕괴로 아마존의 핵심 소매사업이 움츠러 들었다가 겨우 벗어나기 시작한 시점(그해에 AWS도 같이 시작). 모두 다 베조스에게 딴데 신경쓰지 말고 집중하라고 했지만, 무시했음.
   3. Cannibalize Yourself : Steve Kessel 이 그 당시 아마존의 책/음악/DVD 등 미디어 비즈니스를 이끌고 있었고, 책이 아마존 현금흐름의 50%를 담당. 베조스는 스티브 케셀을 킨들에 배치하고 새로운 미션을 줌. ""예전에 니가 맡았던 사업을 부숴라""
   4. 다른 사람이 시도하고 실패했다고, 불가능하다고 가정하지 말 것 : 2개의 스타트업이 e북리더를 이미 실패했고, Sony도 시장에 있지만 관심을 끌지 못함. 그들의 실패는 베조스의 결정에 더 용기를 줬음.
   5. 문제가 없다고, 더 좋게 만들지 못하는 것은 아님 : 베조스는 ""인쇄된 책은 지금까지 가장 위대한 발명품중 하나고, 아무 문제도 없습니다. 우리는 어떻게 독서 경험을 향상 시킬수 있을까요?"" 우리의 대답 : ""더 가볍고, 휴대 가능하고, 동기화가 쉬울 것""
   6. Invent! : 실패한 E북리더들은 LED스크린을 사용했고, 우린 e-ink를 처음으로 상용화. iPod은 케이블로 동기화 하지만, 우린 Wifi와 셀룰러로. 검색용 키보드를 추가(실패했지만 시도해볼 가치는 있었음). 우린 책을 디지털화 하는 새로운 방법을 발명했음.
   7. 비현실적인 기대치를 설정할 것 : 베조스는 출시 시점에 $9.99 짜리 책 10만권이 스토어에 있길 바랬음. 이게 내 일이었고 불가능해 보였음. 출판사들은 두려움과 무관심 사이에서 결정을 못 내리고 있었음. 하지만, 베조스는 ""No""를 듣기 싫어했음. 내 경력상에서 가장 힘든 미팅들이었음.
   8. Make Magic : WiFi동기화는 혁신적이었고 우리팀은 자랑스러웠음. 하지만 베조스는 그게 매지컬하기엔 부족하다고 생각. 이동통신망을 통해서 동기화 하기를 주장했고, 고객에게 데이터요금은 청구하고 싶지 않았음. 우리는 불가능하다고 얘기 했지만, 어쨌든 그렇게 했음 (나중에 Kindle 페이퍼화이트와 오아시스에 도입)
   9. 하드웨어는 어려움 : 모든 소프트웨어/인터넷 플랫폼은 결국에 하드웨어를 만들고, 매번 같은 교훈을 얻음. 소프트웨어를 만드는 것보다 훨씬 어려움. 느린 반복 주기, Atoms vs Bits 등. 유일하게 배울수 있는 방법은 출시해보는 것. Kindle v1 을 출시하는데 3.5년이 걸렸음.
   10. Be Inspired : 전문경영인이 2004년의 아마존에서 킨들이나 AWS를 만드는 것을 불가능 했을 것. 그 당시 많은 미팅에서 핵심 비즈니스가 턴어라운드 하는 시기에 왜 우리가 이것을 하는지 사람들이 계속 물었던 것을 기억함. 저는 (베조스에게서) 영감을 받았습니다
"
"https://news.hada.io/topic?id=2699","BootBot - 페이스북 메신저 챗봇 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      BootBot - 페이스북 메신저 챗봇 프레임워크

   - 메신저 챗봇을 쉽게 만드는 Node.js 용 라이브러리
   - 페이스북이 지원하는 모든 메시지 타입 전송
   - 특정 타입 메시지,키워드, Received/Read 이벤트에 대해서 Subscribe 가능
   - 자동/수동 Typing Indicator 지정
   - 메뉴, 인사말 등 봇 속성 및 Call-to-Action 설정 가능
"
"https://news.hada.io/topic?id=2689","QA Wolf- 브라우저 동작을 Playwright/Jest 기반 코드로 자동 생성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             QA Wolf- 브라우저 동작을 Playwright/Jest 기반 코드로 자동 생성

   - 브라우저에서 원하는 액션을 진행하면 이에 해당하는 코드가 자동 생성
   - Playwright 버전 Puppeteer Recorder

   Playwright는 과거에 한번 다뤘었네요. https://news.hada.io/topic?id=1374
   최근에 퍼페티어 레코더(https://news.hada.io/topic?id=2682)가 올라오길래, Playwright 쪽으로 하나 소개해봤어요.

   오 감사합니다. 동작방식은 크롬확장 대신 Non-Headless 로 띄워서 기록하는 Puppeteer팀의 Recorder와 같은거 같네요.

   정확합니다. :-)
"
"https://news.hada.io/topic?id=2620","Windows 10 ARM용 OpenJDK 공개 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Windows 10 ARM용 OpenJDK 공개 예정

   - MS는 Surface Pro X 와 Azure 클라우드 환경에 ARM 도입을 계속 시도 해왔음
   - MS 개발자들이 기여해서 ARM용 OpenJDK(AArch64) 포팅을 진행
   ㅤ(Linux 용 ARM64 OpenJDK는 Red Hat이 주도하여 포팅)
   - 곧 프로덕션에서도 쓸 수 있도록 TCK 테스트 & AdoptOpenJDK QA까지 할 예정
   - 애플을 비롯해서 AWS등이 ARM에 적극적으로 뛰어드는 것은 저전력이고 클라우드에 적합한 Neoverse N1 코어(ARM 8.2 ISA)등이 서버에도 적합하기 때문
   ㅤ→ 아직 Azure 에는 선택가능한 ARM서버들이 없지만, MS도 조심스럽게 살펴보고 있음 (애져 내부에서는 Marvell ThunderX2 프로세서를 사용중)

   OpenJDK AArch64 공식 레포 : https://github.com/microsoft/openjdk-aarch64
"
"https://news.hada.io/topic?id=2601","구글에 접속하는 사용자의 1/3 이 IPv6 이용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글에 접속하는 사용자의 1/3 이 IPv6 이용

   - 매년 1월 기준 : 2015년 5%, 2016년 10%, 2017년 15%, 2018년 20%, 2019년 25% 등으로 매년 5%씩 상승
   - 2020년 7월말 33.7%
   - 국가별로는 독일 48%, 인도 47%, 미국 42%, 프랑스 40%, 일본/브라질 34%, 영국 30%, 호주 21%, 한국은 9.7%
   - 아시아는 인도/말레이지아/베트남/대만 등이 모두 40% 이상

   아아? 벌써 IPv6 로 인터넷을 사용하는 곳이 저렇게 많나요? 우물안 개구리였군요... 정말 몰랐어요.
   한국은 너무 네트워크 장비가 많이 빨리 깔려서 바꾸는게 오래 걸린다고 핑계를 대 봅니다....

   예상외로 IPv6 도입률이 높다는게 놀랍고, 한국이 엄청 낮다는데서 한번 더 놀라게 되는군요.

   한국 통신사가 매월 비싼 요금 받아가면서 IPv6에 투자를 안한다고 해석할 수 있을 것 같습니다.
"
"https://news.hada.io/topic?id=2664","소프트웨어 학습 태도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              소프트웨어 학습 태도

   소프트웨어를 학습할때 적어도 일곱가지는 시도해보자
   1. 내가 걷는 속력과 방향을 인지하자.
   2. 익숙한 것을 내려놓고, 낯선 방식으로 해결하자.
   3. 개구리를 해부하지 말고, 직접 만들어봐라.
   4. 자존심을 버리고, 자존감을 키우자.
   5. 결과만 보기보다는 과정을 보자.
   6. 실수를 반복하면서 적어도 하나씩 개선하라.
   7. 스스로 여러 가지 답을 찾고, 남에게 공유하라.

   2번과 관련해서
   http://egloos.zum.com/agile/v/5749946
   이 글이 생각났어요. 비슷한 맥락도 보이네요.

   소프트웨어 학습할 때 지나치기 쉬운 부분을 알려주는 글이네요. 꼭 소프트웨어가 아니라 다른 것을 배울때 도 갖추면 좋은 마인드셋 목록입니다.
"
"https://news.hada.io/topic?id=2695","2020 네이버 테크 콘서트 온라인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          2020 네이버 테크 콘서트 온라인

   네이버가 대학생/주니어 개발자 대상으로 앱 개발, 웹 개발 분야의 기술 경험과 기술, 개발 문화 등을 공유한 행사
   * 전체 발표영상 공개
   - 100만 달러짜리 빠른 앱을 만드는 비법 전수
   - 안드로이드의 '안'자도 몰랐던 나는 어떻게 안드로이드 개발자가 되었을까?
   - 화려한 코루틴이 내 앱을 감싸네! 코루틴으로 작성해보는 깔끔한 비동기 코드
   - NDK로 안드로이드에 C++ 끼얹기
   - 모르면 손해보는 Android 디버깅/분석 꿀팁 대방출
   - 놓치기 쉬운 안드로이드 UI 디테일 살펴보기
   - 신입 iOS 개발자 개발업무 적응기
   - 성능을 고민하는 슬기로운 개발자 생활
   - Case.xcodeproj - 좋은 동료로 거듭나기 위한 노하우
   - 맥북에서도 아이맥프로에서 빌드하는 것처럼 빌드 속도 빠르게 하기
   - 빠르게 성장하는 슈퍼루키로 거듭나기
   - 상반기 네이버 인턴을 돌아보며
   - 네이버에서 오픈 소스 개발을 통해 성장하는 방법
   - 야 너두 할 수 있어. 비전공자, COBOL 개발자를 거쳐 네이버에서 FE 개발하게 된 이야기
   - Code Review is Horse(코드리뷰는 말이야)(feat.Latte)
   - 알잘딱깔센 개발자 이야기 (추후 업로드 예정)
"
"https://news.hada.io/topic?id=2599","StoryCreator - 온라인 비디오 편집기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       StoryCreator - 온라인 비디오 편집기

   - After Effect 와 비슷한 기능을 웹브라우저에서 구현한 서비스
   - 사진/비디오/텍스트/모션그래픽/사운드를 다양한 효과로 묶어서 만들기
   - 팟캐스트/유튜브/이커머스등 소셜미디어용 동영상 편집에 적합
   - 다양한 템플릿 지원

   https://news.ycombinator.com/item?id=24054382
   HN에 다들 극찬이길래 들어가서 잠깐 써봤는데 1명 개발자가 만든거라고 하기엔 엄청 훌륭하네요.
   작년에 일 그만두고 1년쯤 개발했다고
"
"https://news.hada.io/topic?id=2609","삼성, 갤럭시 노트20/Z 폴드2/탭 S7/워치3/버즈 라이브 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 삼성, 갤럭시 노트20/Z 폴드2/탭 S7/워치3/버즈 라이브 공개

   노트20: 6.7인치, 192g, FHD+ 슈퍼 AMOLED+ 2400x1080, 7nm 스냅드래곤865+ , 후면 트리플 카메라(64MP 망원 F2.0, 12MP 광각 F1.8, 초광각 F2.2), 전면 1000만(F2.2), 8GB, 256GB, 4300mAh 25W 초고속 충전, 5G
   노트20 울트라: 6.9인치, 208g, WQHD+ 다이내믹 AMOLED 2X 3088x1440, 후면 트리플 카메라(12MP 망원 F3.0, 108MP 광각 F1.8, 초광각 F2.2), 전면 1000만(F2.2), 12GB, 256GB, 4500mAh 25W 초고속 충전, 5G
   탭 S7: WiFi 498g, LTE 500g, 11인치 WQXGA TFT, 2560x1600, 6GB/128GB 8GB/256GB, MicroSD, 7nm 옥타코어, 카메라 후면 1300만/500만, 전면 800만, 8000mAh, 45W 고속충전
   탭 S7+ : 575g (WiFi/LTE/5G), 12.4인치 WQXGA+ AMOLED, 2800x1752, 8GB/256GB, MicroSD, 7nm 옥타코어, 카메라 후면 1300만/500만, 전면 800만, 10090mAh, 45W 고속충전
   워치 3 : 원형 베젤 45mm/41mm, 티타늄소재 출시예정, 혈압/심전도/혈중 산소포화도 측정 , LTE와 블루투스
   버즈 라이브 : 오픈형 무선 이어폰, 3개의 마이크와 가속도 센서, 액티브 노이즈 캔슬링, 버즈 투게더
   Z 폴드2 : 6.2인치 커버 디스플레이, 7.6인치 메인 디스플레이
"
"https://news.hada.io/topic?id=2678","Embla Carousel - 유연한 캐러셀 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Embla Carousel - 유연한 캐러셀 라이브러리

   - 의존성 없고 IE11을 포함한 대부분의 브라우저 지원
   - 루프 / 슬라이딩 / 드래깅 / 얼라인 등 이동 기능
   - 가변 길이 및 Y축 지원
   - 화살표, 도트, 프로그레스바 표시
   - 썸네일 보이기 지원
   - Lazy 로딩, Parallax, AutoPlay 지원

   가장 정확도를 가진 캐러셀 이라고 홍보하긴 합니다만 기존 것들과 차이점은 잘 모르겠네요.
   기능은 거의 비슷비슷 합니다.
   Carousel 라이브러리는 정말 많긴 한데, 유명도 순(깃헙 ☆ 순) 으로 보면
   - Slick (26k) http://kenwheeler.github.io/slick/
   - Swiper (24k) https://swiperjs.com/
   - Flickity (6k) https://flickity.metafizzy.co/
   조금 다른 현대적인 느낌으로는
   - Keen-Slider - 부드러운 HTML 터치 슬라이더 : https://news.hada.io/topic?id=2299
   이 정도 중에서 그냥 맞는거 쓰면 될듯.
"
"https://news.hada.io/topic?id=2612","No Hello - 채팅에서 그냥 "안녕하세요"라고 말하지 마세요.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 No Hello - 채팅에서 그냥 ""안녕하세요""라고 말하지 마세요.

   - 채팅에서 안부를 묻는 행위가 어떻게 생산성을 낮추는가
   - 안부를 묻고 응답을 기다리는 대신, 바로 질문을 함으로써 효율적인 비동기대화가 가능함

   https://ko.lmgtfy.com/ 처럼 다국어 버전 페이지로 만들어주면 좋겠네요

   번역: https://www.notion.so/sduck4/No-Hello-d16d6868a6d940d2a8a1d43ab2e24cf3
"
"https://news.hada.io/topic?id=2604","유니코드 Whitespace(공백) 문자 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       유니코드 Whitespace(공백) 문자 모음

   온라인에서 쓰이는 다양한 공백문자를 각각에 대한 설명과 함께 Copy & Paste 할 수 있는 페이지
   아래 """" 사이에는 공백이 들어 있음
   - Zero-width Space ""​""
   - Hair Space "" ""
   - Six-per-em space "" ""
   - thin space "" ""
   - puctuation space "" ""
   - four-per-em space "" ""
   - three-per-em space "" ""
   - figure space "" ""
   - en space "" ""
   - em space "" ""
   - braille blank ""⠀""

   가나다라마사

   a
     * Six-per-em space "" ""
     * thin space "" ""
     * puctuation space "" ""
     * four-per-em space "" ""
     * three-per-em space "" ""
     * figure space "" ""
     * en space "" ""
     * em space "" ""
     * braille blank ""⠀""

    

   위에 """" 사이를 자세히 보시면 오묘하게 넓이가 다릅니다.
   저도 뉴스 올릴때 앞에 띄어쓰기 용도로 ""ㅤ"" 를 많이 쓰긴 하는데, 이렇게 종류가 많은 줄은 몰랐네요.
"
"https://news.hada.io/topic?id=2648","Jupyter Book 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Jupyter Book 발표

   계산식 콘텐츠가 포함된 출판물 수준의 책/웹사이트/문서를 구축하기 위한 오픈소스 프로젝트
   - 출판 수준의 마크다운 확장 지원
   ㅤ→ MyST 마크다운 : Directive & Roles(함수 for 마크다운), 인용 및 상호참조, 수학 및 방정식, Figures
   - 쥬피터 노트북으로 콘텐츠 작성 또는 마크다운으로 작성 가능
   - 실행후 결과 콘텐츠를 책에 삽입 가능. 캐슁도 가능
   - 인터랙티브 기능 : 쥬피터 세션 실행, Binder/Google Colab 등과 연결
   - 콘텐츠+결과를 묶어서 HTML 또는 PDF로 책 만들기 가능
   - Sphinx 문서화 엔진 사용 (기존 Jekyll 대신)
"
"https://news.hada.io/topic?id=2658","StarLink 베타사용자들 속도가 11~65Mbps 정도라고 밝혀","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 StarLink 베타사용자들 속도가 11~65Mbps 정도라고 밝혀

   - SpaceX 의 저궤도 인공위성을 이용한 인터넷 프로젝트인 StarLink
   - 베타사용자들이 공개한 속도 정보에 의하면 다운로드 11~65Mbps, 업로드 5~18Mbps 정도이며 응답속도는 31~94ms
   - 몇몇 사용자는 20ms 정도의 응답속도를 보이기도
   - 스타링크의 목표는 지구상공 540~570km의 저궤도 구간에 12,000개의 인공위성을 띄워서 전세계 사용자에게 1Gbps 에 20ms 이하의 인터넷을 제공하는 것
   - 현재는 600기 정도의 인공위성을 발사했고, 한달에 120기씩 인공위성을 제작중

   위성을 띄울 시스템도 들고 있고, 네트워크 시스템도 들고 있어서 강력한 가격 정책을 펼칠 수 있어보이네요. 기존 위성 인터넷 서비스하던 회사들은 상대가 안 될 것 같은 느낌이..

   저정도만 되도 속도는 꽤 괜찮네요. 미국 일부에서만 베타테스트 하고는 있는데 확대되면 인터넷 기반이 없는 나라들한테는 엄청난 기회가 될수도 있고, SpaceX 의 미래 자금줄이 될지도.
"
"https://news.hada.io/topic?id=2708","Waitlist API - 대기자 관리 무료 API","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Waitlist API - 대기자 관리 무료 API

   - 신규 서비스를 출시할 때 이메일 주소로 등록한 대기자를 관리하는 API
   - 5줄정도 코드로 사용 가능
   - 대기자가 다른 사람을 추천해서 등록시키면 순위를 앞으로 조정해 주는 Gamification 기능
   - 보기 쉬운 간편한 상태창 : 전체 등록자 & 추천 등록자 수
"
"https://news.hada.io/topic?id=2704","DeGoogle - 내 삶에서 구글 제거하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        DeGoogle - 내 삶에서 구글 제거하기

   - 구글 의존적인 삶에서 구글 제품들을 제거하기 위한 대체제들을 정리
   - 주로 개인정보/보안관련
   - 특별한 이유가 없다면 MS/애플/야후/아마존 등의 대기업 제품들은 제외
   - 해당 제품을 만드는 회사가 5-eyes, 9-eyes, 14-eyes 에 포함되는지 여부도 기재

   5-Eyes, 다섯 개의 눈 : 상호 첩보 동맹을 맺고 있는 미국, 영국, 캐나다, 오스트레일리아, 뉴질랜드 5개국을 이르는 말
   https://ko.wikipedia.org/wiki/…
   What are 5-eyes, 9-eyes, and 14-eyes? https://www.privacytools.io/providers/#ukusa
   해외 특히나 해커뉴스에서는 이 degoogle 이라는게 하나의 밈처럼 소비되는거 같기도 합니다만,
   대체하는 오픈소스들에 대해서 이렇게 한번에 정리해두고 찾아보는 정보성으로는 괜찮은거 같아서 올려봅니다.
"
"https://news.hada.io/topic?id=2711","Foursquare, 첫번째로 MRC 위치데이터 인증을 획득한 회사가 되다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Foursquare, 첫번째로 MRC 위치데이터 인증을 획득한 회사가 되다

   - 3자쿠키 제한 이슈로 마케터를 위한 새로운 데이터로 사용 가능한 것중의 하나가 위치 정보
   - MRC(Media Rating Council)가 위치 데이터 정확도등의 표준화를 위해 ""위치 기반 광고 측정 지침""을 제안(2017년)
   - 이 지침하에 포스퀘어의 Visits 서비스가 첫번째로 MRC 인증받은 회사/제품이 된 것
   ㅤ→ 정확한 위치정보를 제공하는 것으로 검증 받았다는 얘기

   포스퀘어 진짜 오랜만이네요. 거의 7년만에 다시 들어보는 듯

   오래전 장소에 체크인 이라는 개념을 인식시켰던 Foursquare 는 Pivoting을 통해서
   개인 B2C는 Swarm 이라는 앱만 남기고, B2B 회사로 전환을 해서 Location Technology Platform 회사가 되었습니다.
   위치정보가 필요한 많은 회사들에게 솔루션을 제공하는 여러 프로덕트를 만들고 있구요.
   그중 Visits 서비스는 사용자가 특정 위치에 실제로 갔는지등을 알려주는 데이터를 제공합니다.
"
"https://news.hada.io/topic?id=2693","Chromium이 Root DNS에 끼치는 영향","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Chromium이 Root DNS에 끼치는 영향

   크로미움 초기부터 나온 Omnibox 기능은 사용자가 URL 바에 입력하는 문자열을 검색어인지, 웹사이트 이름인지, URL인지 등에 따라 기능을 수행.
   NXDomain Hijacking 때문에 크로미움은 존재하지 않는 3개의 랜덤문자열 도메인을 DNS에 물어보고, 만약 주소가 같다면 그 주소를 Redirect Origin 으로 기록해 둠.
   ㅤ→ 사용자가 잘못친 문자열에 대해서 인트라넷에서 ""did you mean?"" 같은 페이지를 통해서 다른 가능한 옵션들을 보여 주는 곳이란 의미
   이 세개의 랜덤쿼리는 브라우저 실행/IP변경/DNS 변경시 마다 호출됨.
   실제로 크로미움 마켓셰어가 늘어나면서 루트 DNS서버 트래픽의 50%가 이 호출이라는 사실 (즉, 하루에 600억번 호출됨)
   비록 루트 DNS 시스템이 대용량 트래픽을 위해서 만들어지긴 했지만, 일반적이지 않은 이 예외적인 호출을 처리하는 것은 정상적이지 않음.
   크로미움이 3개가 아니라 1개 또는 2개만 호출하게 한다거나,
   Firefox 가 Captive Portal Test에서 하는 것처럼 별도의 namespace 쿼리를 사용해서 루트서버에 오지 않게 하는 것등이 필요하다는 것.
   * 이 코드의 원 작성자가 댓글을 달았네요.
   ""크로미움 개발자들이 이거에 대해서 알고 있고, 관리중이다. 이를 위해서 몇가지 수정 제안을 했다.""
   * 실제로 대부분은 크롬 사용자로 인한 것이겠지만, 크롬/Edge/Brave/Opera 등 꽤 많은 브라우저가 Chromium 기반이고 글에서도 크로미움이라고 계속 표현해서 그대로 사용했습니다.
"
"https://news.hada.io/topic?id=2649","Docker ToS 변경 : 무료계정엔 Image 저장 제한 기간 생겨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Docker ToS 변경 : 무료계정엔 Image 저장 제한 기간 생겨

   - Docker Hub에 저장된 도커이미지에 기간 제한이 생김
   - 무료계정의 경우 6개월간 Push/Pull되지 않으면 inactive가 되고 삭제 스케줄링됨
   - 2020년 11월 1일부터 적용
   - 유료인 Pro 나 Team 계정은 제한없음
   - 현재 Docker Hub가 15PB의 데이터를 사용중이며, 분석결과 4.5PB의 데이터가 지난 6개월 또는 그 이상동안 전혀 push/pull 되지 않았음

   어느 정도 도커이미지를 쓰는 경우 라면 Docker Hub 보단 레지스트리를 셀프호스팅 하는 걸 추천
   - Harbor https://goharbor.io/
   - Quay https://quay.io/
"
"https://news.hada.io/topic?id=2701","Dark - 서버리스 백엔드를 개발하는 새로운 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Dark - 서버리스 백엔드를 개발하는 새로운 방법

   - 프로그래밍 언어(Dark 자체가 새 언어),IDE,인프라를 통합한 개발도구
   - API,CRUD 앱,내부 도구,봇 등 다양한 백엔드를 인프라/프레임워크/배포 고민없이 만들기
   ㅤ→ 5개의 메이저 컴포넌트를 쉽게 개발 : REST API, 비동기 백그라운드 워커, 잡 스케줄링, 데이터 저장소(키밸류/해쉬맵), REPL
   - Trace Driven Development : 코드 작성전에 먼저 HTTP 요청을 하면 404 에러가 나고, 그 404 에러가 IDE에 표시되며, 그 에러를 처리하기 위한 핸들러를 생성하는 방식
   - Dark 프로그래밍 언어는 정적 타입, 함수형/명령형 하이브리드 언어. OCaml 이나 Elm과 비슷하고, Rust 나 Haskell 과도 유사. 그 외 Clojure,Ruby,Python,CoffeeScript 등에서 영향을 받았음.
   - 언어자체가 에디터와 인프라에 연결
   ㅤ→ Play & Replay 버튼을 통해 단위 실행 가능
   ㅤ→ v1,v2 등이 붙으면서 자동 함수 버져닝
   - 패키지 매니저가 있지만 현재는 베타라 Dark 직원들만 패키지에 함수 추가 가능
   ㅤ→ Slack, Asana, Mailchimp, Stripe, Trello 패키지등이 있어서 편하게 사용 가능
   - 만들어진 백엔드는 canvas명.builtwithdark.com 으로 접근 가능하며 자신의 커스텀 도메인으로도 연결 가능(CNAME)
   - 소스는 깃헙에 공개되어 있지만 오픈소스는 아님

   라이센스는 참 이기적이네요 버그 수정 등의 참여는 할 수 있지만 그 외에는 어떤 권한도 없다...

   클로즈드로 해도 될법한걸 함 보기라도 하세요~ 하고 풀어준 수준이라 ㅎㅎ
   정작 OCaml 이나 Elm 커뮤니티에서는 환영하기도 한다는 댓글을 본거 같아요.

   우와 너무 신기해요.

   흑마법인가요 이건... 멋지네요.
   근데 유료 서버리스 플랫폼이 되는 게 목표일 것 같긴 한데 아직 드러나 있는건 Dark 언어/플랫폼 뿐이라 목표점을 잘 모르겠네요.

   꽤 독특한 개발환경이라 동영상등을 보시는게 이해가 편한데요.
   기본으로 전반적인 개발 환경을 이해하는데에는 CEO인 Elen Chisa가 직접 설명하는 9분짜리 ""Office Sign-In 앱 만들기"" 동영상을 보시면 됩니다.
   - https://www.youtube.com/watch?v=orRn2kTtRXQ
   ( 위 동영상의 블로그 설명 버전 : https://medium.com/darklang/… )
   짧으니 전체화면으로 꼭 한번 보시면 좋겠네요. 재미난 개발환경 입니다.
   가입하고 Hello World 사이트 만들어보니, 외부에서 접속 가능한 내 사이트 만드는데 10초도 안걸리네요.
   그리고 주요 개념인 Trace Driven Development 소개하는 1분 동영상도 재미납니다.
   - https://www.youtube.com/watch?v=LcQyAfKLLT0
"
"https://news.hada.io/topic?id=2623","애플, 레시피 앱 Prepear를 로고가 유사하다고 고소 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    애플, 레시피 앱 Prepear를 로고가 유사하다고 고소

   요리 레시피 앱 Prepear 의 배(과일) 모양 로고가 애플의 사과 로고와 유사하다고 법적조치가 들어와서 이를 도와달라는 청원이 올라옴
   자신들은 겨우 5인 팀이며, 이 소송 비용을 감당할수 없다고 밝혀.
   * Prepear 는 레시피를 공유하고 해당 레시피를 만들수 있는 요리재료를 주문할 수 있게 해서 준비(Prepare) 해주는 앱

   애플은 애플II 시절 자신들의 클론이었던 Pearcom Pear II 때문에 아마도 모든 Pear를 싫어하는 걸지도
   https://www.apple2history.org/wp-content/uploads/2020/04/pear2.jpg
   Prepear 웹사이트 : https://www.prepear.com/

   ""Now Apple Inc. is literally com-pear-ing Apples to Pears.""

   한입 베어문 배라도 되는줄 알았는데 어디서 유사성을 찾아야 할지 모르겠네요 :thonk:
"
"https://news.hada.io/topic?id=2667","AWS Kinesis vs. Kafka 성능비교","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       AWS Kinesis vs. Kafka 성능비교

   - Akka Streams 기반으로 기본설정/Latency/Throughput 기준 3가지 벤치마크(양쪽 다 지원하는 Alpakka 이용)
   - 카프카 클러스터 기준 같은 비용을 지불하는 설정으로 키네시스를 세팅
   ㅤ→ 카프카 9파티션 = 키네시스 9샤드 & 24시간 리텐션, 4파티션 = 4샤드 & 7일 리텐션
   - 결론적으로, 모든 테스트케이스에서 Kafka가 뛰어남. 레이턴시/처리량 조정하는데도 훨씬 유연
   - Kinesis 는 레이턴시/처리량 사이 조절은 샤드카운트를 조절하는 것 밖에 방법이 없음(훨씬 비쌈)

   해당글 댓글에 보면 처리량 비교를 샤드 vs 파티션으로 하는건 맞지 않다는 얘기도 있긴 합니다.
"
"https://news.hada.io/topic?id=2631","Unsplash, 2백만개 이미지 오픈 데이터셋 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Unsplash, 2백만개 이미지 오픈 데이터셋 공개

   온라인 이미지 서비스인 Unsplash가 20만명 이상의 사진가들이 참여한 이미지들을 무료로 공개
   - Lite : 550MB, 2.5만개 이미지, 키워드 2.5만개, 상용에도 무료 사용가능
   - Full : 16GB, 200만개 이미지, 키워드 500만개, 검색어 2억5천만개, 비상용에만 무료 사용가능
   - 다양한 메타데이터 포함 : 키워드-이미지 변환, 커뮤니티 및 AI가 생성한 키워드, EXIF(카메라 모델/렌즈/심도 등), 위치정보 및 랜드마크, 이미지 카테고리, 사용자가 만든 컬렉션 정보, 다운로드 통계

   깃헙 레포 : https://github.com/unsplash/datasets
   Unsplash 는 무료 이미지 사이트중 최고입니다. 깔끔한 API로 뭔가 이미지를 가져다 사용할 때도 좋지만
   https://source.unsplash.com/ 를 통해서 API연동없이 랜덤 이미지를 가져다 쓰는 기능이 정말 편합니다.
   여기서도 API처럼 이미지 크기 조절도 가능하고 카테고리 지정도 가능.
"
"https://news.hada.io/topic?id=2654","Unified Gatsby","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Unified Gatsby

   - React + GraphQL 기반의 정적 웹 페이지 프레임워크 Gatsby가 기존 .org 와 .com 사이트를 통합해서 하나의 사이트를 오픈하고 모든 리소스를 한 곳에 모으기로
   - 오픈소스 버전의 Gatsby는 계속 발전시킬 것
   ㅤ→ Gatsby Recipes : 워드프레스처럼 5분안에 설치 가능하도록
   ㅤ→ Gatsby Admin : 새로운 UI의 관리도구로 플러그인/테마/메타데이터등을 관리
   ㅤ→ Gatsby Desktop : CLI 대신 사용가능한 네이티브 관리도구 앱
   ㅤ→ 파일 시스템 기반 라우팅
   ㅤ→ 그외 : 새 Route 관리 UI, 더 쉬운 GraphQL 툴킷 등
   - Gatsby Cloud (무료+유료) 의 새 기능들
   ㅤ→ GitLab & Bitbucket 지원
   ㅤ→ Incremental Build GA
   ㅤ→ PR코멘트에 라이트하우스 점수 및 Deploy Preview 링크 제공
   ㅤ→ Gatsby Hosting : 더 쉽고 더 빠른 자체 호스팅
   ㅤ→ 개인용 Free 버전부터 Individual / Team / Enterprise 요금제로 세분
"
"https://news.hada.io/topic?id=2632","simdjson - JSON을 GB/초 단위로 파싱하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     simdjson - JSON을 GB/초 단위로 파싱하기

   - SIMD 명령어셋을 이용해서 기존 파서들보다 2.5배 빠르게 파싱
   - 런타임에 CPU별 최적화된 파서 자동 선택 : 하스웰(AVX2)/웨스트미어(SSE4.2)/ARM64/기타64
   - Full JSON & UTF-8 validation 지원
   - 한개의 .h + .cpp 파일
   - RapidJSON 대비 25%, sajson 대비 50%의 명령어 셋만 사용

   다양한 바인딩 / 포트가 있네요
   - ZippyJSON: Swift bindings for the simdjson project.
   - libpy_simdjson: high-speed Python bindings for simdjson using libpy.
   - pysimdjson: Python bindings for the simdjson project.
   - simdjson-rs: Rust port.
   - simdjson-rust: Rust wrapper (bindings).
   - SimdJsonSharp: C# version for .NET Core (bindings and full port).
   - simdjson_nodejs: Node.js bindings for the simdjson project.
   - simdjson_php: PHP bindings for the simdjson project.
   - simdjson_ruby: Ruby bindings for the simdjson project.
   - fast_jsonparser: Ruby bindings for the simdjson project.
   - simdjson-go: Go port using Golang assembly.
   rcppsimdjson: R bindings.

   Rust 버전 - https://github.com/simd-lite/simd-json
   QCon 에서 개발자의 발표 내용 ""Parsing JSON Really Quickly: Lessons Learned""
   https://www.youtube.com/watch?v=wlvKAT7SZIQ

   링크된 강연 동영상의 녹취록:
   https://www.infoq.com/presentations/simdjson-parser/
   어떻게 이렇게 빠른 속도를 낼 수 있는지 궁금해서 읽어봤는데, 가히 온갖 흑마술의 결정체라 할 수 있을 것 같습니다. 요점을 대강 정리하면 다음과 같습니다.
   ----
   [서론]
   # 대부분의 JSON 파싱 라이브러리는 드라이브의 순차 읽기 속도보다 느리다
   - 나(강연자 Daniel Lemire)의 시스템 드라이브에서 큰 텍스트 파일을 순차적으로 읽어들이는 속도는 2.2 GB/s인데, 주요 JSON 라이브러리의 파싱 속도는 이를 못 따라가더라.
   - 파싱 속도가 1 GB/s를 넘기는 라이브러리가 드물길래, 우리가 작접 만들어보기로 했다.
   - 그 결과, 드라이브 대역폭을 전부 쓸 수 있는 처리 속도를 달성했다. 계산해보면 입력 1바이트당 CPU를 1.5사이클밖에 쓰지 않았다. 어떻게 이를 달성했는가?
   [각종 원칙들]
   # 분기문을 최대한 피한다
   - 예를 들어 랜덤 숫자를 배열에 집어넣는 간단한 코드에 숫자가 홀수인지 판별하는 if문 하나만 넣어도 5배로 느려진다. 이는 CPU 분기 예측이 실패할 때의 비용이 크기 때문이다.
   - 위에서 제시된 코드에서 비트 연산으로 if문을 제거하면 속도가 거의 원상복구된다.
   - 코드를 반복 실행하면 분기 예측의 정확도가 올라가서 성능 저하가 감소할 수 있긴 하지만, 이건 결국 비결정론적인 동작이므로 분기 예측이 작용할 때면 성능을 예측하거나 측정하기가 어려워진다.
   # 더 넓은 워드를 쓰기 위해 SIMD를 적극 사용한다
   - SIMD 명령을 쓰면 64비트보다 더 넓은 워드의 레지스터를 사용할 수 있어, 1사이클에 더 많은 데이터를 처리할 수 있다. (예를 들면 SSE나 NEON은 128비트, AVX는 256비트) 따라서 가능하면 SIMD를 적극적으로 사용했다. 이는 입력 데이터 1바이트에 불과 1.5사이클만 사용할 수 있었던 비결이다.
   - SIMD를 쓰기 위해 특정 프로세서에 의존적인 내장 함수(Intrinsic function)를 사용했다. 어셈블리어를 직접 사용하는 것은 권장하지 않는다.
   # 메모리/객체의 할당을 피한다
   - simdjson에서는 JSON 데이터를 하나의 긴 테이프처럼 취급하고, 데이터를 재활용한다. 다시 말해, 문자열이나 숫자에 메모리를 따로 할당하지 않고 모든 것을 일렬로 처리한다. 이는 흔한 트릭이다.
   # 성능을 계속 측정한다
   - 벤치마크 주도적으로(Benchmark-driven) 개발하였다. 우리 CI에는 성능 벤치마크가 포함되어 있다.
   - 참고로 뭔가 CPU 집중적인 작업을 할 때는 CPU의 작동 주파수가 계속 변한다는 점을 명심해야 한다.
   [실제 사례들]
   # 예시 1: 올바른 UTF-8인지 검증하기
   - 입력된 임의의 데이터가 올바른 UTF-8 코드포인트인지 검증하는 작업은 일반적으로 여러 분기문이 들어가는 작업이다.
   - 우리는 SIMD로 32바이트 데이터를 최대 20번의 사이클만에 분기문 없이 올바른 UTF-8인지 검증하는 방법을 만들었다.
   - UTF-8의 바이트는 정수값으로 최대 244를 넘을 수 없으므로, SIMD 명령으로 데이터를 256비트 레지스터에 넣고 각 바이트마다 정수 244를 포화 연산(Saturation arithmetic: 결과값의 범위를 제한하는 연산)으로 뺀 다음 0이 아닌 값이 없는지만 확인하면 된다.
   - 이 방법은 분기문을 사용하는 방법보다 20배 이상 빠르다!
   # 예시 2: 글자 종류 분류하기
   - JSON을 파싱하려면 콤마, 콜론, 괄호, 공백 등 각종 문자를 종류별로 분류해야 한다.
   - x86-64 및 ARM NEON에는 16바이트 크기의 룩업 테이블을 단번에 찾는 명령어가 있다.
   - 1바이트를 상위 4비트와 하위 4비트로 나누어, 미리 준비한 2개의 룩업 테이블을 각각 적용한 다음 그 결과를 AND 연산한다.
   - 코드가 더러워 보이긴 하지만, 5개의 명령만으로 분기문 없이 16개의 글자를 분류할 수 있다.
   # 예시 3: 이스케이프 문자 감지하기
   - 백스페이스(\) 문자를 앞에 붙여서 표현하는 이스케이프 문자를 분기문 없이 감지할 수 있을까? 특히 백스페이스 자체를 이스케이프 처리하기 위해 백스페이스가 연달아 나오는 경우도 처리해야 한다.
   - 이런 경우, 홀수번째 백스페이스만 보면 된다는 트릭이 있다.
   - 짝수번째 위치와 홀수번째 위치를 나타내는 비트마스크를 상수로 두고, 복잡한 비트 연산을 거치면 분기 없이 이스케이프 문자를 걸러낼 수 있다.
   - 이스케이프된 따옴표를 걸러내고 나면 남는 것은 문자열을 나타내기 위한 따옴표이다.
   - 이렇게 구한 따옴표의 위치를 비트마스크로 두고 xor 비트 연산을 거듭하면 문자열의 위치를 나타내는 비트마스크를 구할 수 있다. 이 부분은 대부분의 프로세서에서 명령어 하나로 처리할 수 있다.
   - 비트 집합과 문자열 위치를 대응하는 방법에도 트릭이 있지만, 시간 관계상 넘어가겠다.
   # 예시 4: 숫자 파싱하기
   - 숫자를 파싱하는 것은 대단히 비싼 작업이다. 잘 최적화한 C 함수로 부동소수점을 파싱하는 벤치마크를 했더니 0.09 GB/s라는 환장하는 속도가 나왔다. 명백한 병목 지점이었다.
   - 숫자를 파싱하는 대부분의 코드는 한번에 바이트 단위로 작업하는 것이 보통이다. 이는 결코 빠르지 않다.
   - 문자 8개를 가져와서 64비트 정수 하나로 만들고 강연자가 토요일 밤늦게 고안해낸 특정 공식에 대입하면 이 8개의 문자가 연속된 8자리 숫자인지 알 수 있다. 이는 특히 자릿수가 많은 숫자일수록 파싱하는 데 시간이 오래 걸리기 때문에 중요하다.
   - 스택 오버플로우에 보니까 8자리 정수를 빠르게 파싱하는 코드 스니펫도 있더라. SIMD를 쓰면 좀 더 개선할 수 있긴 한데, 중요한 것은 이렇게 한 번에 데이터를 많이 처리하는 전략에 관한 아이디어를 얻는 것이다.
   [그 외]
   # 런타임 디스패치
   - 하드웨어 의존적인 코드가 많이 들어가다 보니 각 프로세서별로 최적화된 함수가 나오는데, 실행할 때 프로세서 종류에 맞는 함수를 실행하게끔 하는 것이 상당히 어려웠다.
   - 그게 뭐가 어려운지 이해를 못할 수도 있겠는데, 문제는 컴파일러 종류를 가리지 않는 이식성 있는 코드로 이런 것을 구현하는 것이었다. 어떤 컴파일러에는 버그가 있기도 했고, 또 언어 차원에서 이런 것을 지원하는 것도 아니다.
   - 이 점은 simdjson이 다른 프로젝트에 쉽게 통합할 수 있는 단일 헤더파일 오픈소스 라이브러리라서 중요했다.
   # 기타
   - 여러 언어에서 쓸 수 있도록 각각 wrapper가 있다.
   - Rust 포팅 버전이 있고 Go와 C# 포팅도 준비중이지만, Java 포팅은 없다.
   - 이 프로젝트에서 사용된 여러 수학 공식들은 공동 저자인 Geoff Langdale과 고안한 것으로, VLDB Journal에 관련 논문을 출판하였다. ( https://doi.org/10.1007/s00778-019-00578-5 )

   우오 잘 읽었습니다. 고맙습니다!
"
"https://news.hada.io/topic?id=2702","Papercups - 오픈소스 실시간 고객 채팅 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Papercups - 오픈소스 실시간 고객 채팅 도구

   - Intercom/Drift 의 주요 기능을 구현한 오픈코어* 모델 오픈소스
   - 웹페이지에 대화 기능 팝업 ↔ 슬랙을 통해서 고객과 대화
   - 커스터마이징 가능한 채팅 위젯
   - HTML 스니펫 or React 컴포넌트
   - 마크다운 과 이모지 지원
   - Elixir 로 개발 : 얼랭(Erlang) 가상 머신(BEAM) 위에서 동작하는 함수형, 동시성 프로그래밍 언어
   * 오픈코어(Open Core) - 핵심 기능은 오픈소스로 공개하고, 그 외의 독점적인 추가기능은 별도로 비용을 지불해야 하는 방식의 비즈니스 모델
   예 ) GitLab CE & EE, Kafka (Confluent), Cassandra (DataStax) 등
"
"https://news.hada.io/topic?id=2597","애플, IPv6 / HTTP2 / TLS 1.3 / Multipath TCP 사용 권장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            애플, IPv6 / HTTP2 / TLS 1.3 / Multipath TCP 사용 권장

   - IPv6의 연결셋업은 IPv4에 비해 1.4배 빠름 : NAT 사용이 줄고, 라우팅이 개선되기 때문
   - HTTP/2 는 HTTP/1.1에 비해 1.8배 빠름
   ㅤ→ macOS11 과 iOS14 에선 HTTP/3, e-DNS, DNS-over-HTTPS & TLS 지원 예정
   - TLS 1.3은 TLS 1.2에 비해서 1.3배 빠름
   - Multipath TCP 사용시 스트리밍 멈춤 현상이 13% 감소하고, 멈추는 시간도 22% 감소
   * IPv6 와 HTTP/2 사용은 URLSession , Network.framework 같은 최신버전의 표준 네트워킹 API를 사용하면 자동으로 적용

   HTTP/3 는 아직 표준이 확정이 안난걸로 알고있는데 macOS 11에 들어온다니 머릿속에 물음표를 띄우게 되네요

   사실상 확정이라고 봐도 상관없죠. 사파리 빼고 다른 브라우저들은 지원한지 반년이 넘었고, 이미 적지않은 메이저 웹사이트들이 http3 지원하고 있으니깐요.
"
"https://news.hada.io/topic?id=2618","중국, TLS 1.3과 ESNI를 사용하는 모든 HTTPS 트래픽 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                중국, TLS 1.3과 ESNI를 사용하는 모든 HTTPS 트래픽 차단

   중국의 Great Firewall(GFW) 업데이트로 암호화된 HTTPS 접속을 차단 하기 시작.
   TLS 1.1 과 1.2 및 SNI 같은 예전 버전은 가능. SNI를 통해서 어디로 접속하는지 알 수 있기 때문인듯
   하지만, TLS 1.3과 ESNI를 사용한 접속시 서버정보를 알 수 없어서 중국정부가 필터링 하기 어렵기 때문에 해당 트래픽을 원천 차단한뒤 해당 IP까지 임시적으로 2-3분간 차단

   이제 중국인을 막으려면 TLS 1.3만 쓰면 됩니다!

   대륙의 빅브라더 야망은 계속된다
"
"https://news.hada.io/topic?id=2698","Ventoy - 새로운 USB 부팅 솔루션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Ventoy - 새로운 USB 부팅 솔루션

   - USB내의 여러 ISO/WIM/IMG/EFI 파일 중 선택해서 부팅할 수 있게 해주는 오픈소스
   ㅤ→ OS설치할 때마다 새로 USB 포맷할 필요없이 파일 복사로 끝
   - 윈도우즈 및 대부분의 리눅스 배포본, VMWare ESXi/Citrix XenServer 지원 (470+)
   - Legacy BIOS / UEFI / MBR / GPT 지원
   - 자동설치 가능
   - 4GB 이상의 ISO 지원

   이거 좋습니다. ISO 파일만 복사해 넣고 부팅하면 자동으로 찾아서 선택할 수 있습니다.

   국내 블로그에도 상세히 소개해 놓은 글들이 몇개 있네요.
   Ventoy를 이용한 Windows 10 설치 USB 만들기 - iodd를 위협하는 Ventoy
   : https://kimsungjin.tistory.com/398
   Ventoy - USB 부팅 도구 : https://venusgirls.tistory.com/entry/Ventoy-1006

   EFI가 되면 Windows To Go로 부팅도 되려나요?
   기능 보니 다중 설치 USB가 메인 기능인 것 같긴 란데..

   Windows To Go 는 단종되지 않았나요?

   제어판에선 없어졌는데, Rufus같은 툴을 이용하거나 ImageX로 Apply하면 아직도 잘 됩니다

   기본 메뉴가 ISO만 선택해서 하는거 같아서 파티션으로 부팅은 안될거 같기는 하네요. 사용자 파티션 만드는거는 지원하던데
"
"https://news.hada.io/topic?id=2694","MS Flight Simulator의 지도 오류로 호주에 212층 건물 탄생","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               MS Flight Simulator의 지도 오류로 호주에 212층 건물 탄생

   - Open Street Map 의 입력 오류로 멜버른에 212층짜리 건물이 있다고 입력되면서, 게임내에서 놀라운 건축물을 구경할 수 있게 됨
   - 심지어 옥상에 착륙도 가능(38번 시도했다고)
   - 위치는 37°42'57.1""S 144°57'54.4""E

   링크된 원문에는 212층이라고 나옵니다.

   으억 2020년하고 뭔가 혼동했나 봅니다 ㅠ 수정해두겠습니다.

   착륙하는 동영상 : https://www.youtube.com/watch?v=GhrGEdO88kE
   아쉽지만 현재는 고쳐져서 더이상 볼 수 없다고..
   마인크래프트 할때 집 찾아가려고 타워 쌓았던게 생각나네요.
"
"https://news.hada.io/topic?id=2651","Best of JS : 2006 ~ 2020","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Best of JS : 2006 ~ 2020

   JS 뉴스레터인 JavaScript Weekly 가 500호 기념으로, 지난 15년간의 중요한 자바스크립트 프로젝트 20개를 선정.
   각 프로젝트에 대한 간단한 소개와 배경 설명
   #1 jQuery
   #2 Node.js
   #3 Express
   #4 D3
   #5 Angular 1
   #6 Ember
   #7 Bootstrap
   #8 Webpack
   #9 TypeScript
   #10 Electron
   #11 React
   #12 Vue.js
   #13 Babel
   #14 VS Code
   #15 React Native
   #16 Next.js
   #17 Puppeteer
   #18 Deno
   #19 Snowpack
   #20 Rome
   그외 프로젝트들 : Three.js, Meteor, Jest, Redux, Gatsby, Storybook

   오... Deno 도 들어갔군요. 역시 node.js 창시자의 영향력!

   앞의 것들은 뭐 오래전이니 그렇다 치고, Puppeteer 이후의 것들은 긱뉴스에서 소개하려고 노력했던거 같네요.
   국내 개발자분들이 긱뉴스 헤드라인들만 챙겨봐도 이런 프로젝트들은 놓치지 않게 하고 싶습니다.
   Deno - Rust로 개발된 Javascript/Typescript 런타임 https://news.hada.io/topic?id=1348
   Deno, JavaScript와 TypeScript를 위한 Secure Runtime https://news.hada.io/topic?id=2339
   Snowpack - 웹앱을 번들러 없이 빠르게 빌드해주는 도구 https://news.hada.io/topic?id=1267
   Snowpack 2.0 릴리즈 https://news.hada.io/topic?id=2174
   Rome - 실험적인 자바스크립트 툴체인 https://news.hada.io/topic?id=1609
   Rome - JavaScript / TypeScript Linter 베타 릴리즈 https://news.hada.io/topic?id=2621

   약간 결이 다르지만 이 뉴스도 생각나요.
   deno 첫 외주 후기 https://news.hada.io/topic?id=2574
   deno 가 사용하는 typescript 컴파일러(?)가 구성요소 중 느린 부분이라 rust 로 재작성을 해야된다는게 로드맵에 들어 있던데 그거랑 관련이 있다고 생각했어요.
"
"https://news.hada.io/topic?id=2629","OneLook - 와일드카드로 사전 검색하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        OneLook - 와일드카드로 사전 검색하기

   - 1061개 사전의 1895만단어를 인덱싱
   blue* → blue로 시작하는 모든 단어
   *bird → bird로 끝나는 모든 단어
   bl????rd → bl로 시작해서 rd 로 끝나는데, 중간에 4글자가 있는 단어들
   bl*:snow → bl로 시작하는데 단어의 뜻이 snow와 관련된 단어들
   *:snow → snow와 관련된 단어들
   *:winter sport → winter sports 라는 컨셉에 맞는 단어들
   **winter** → winter 단어가 중간에 들어간 모든 문구들
   expand:nasa → n.a.s.a 라는 약어를 사용하는 모든 문구들

   이거 보고 한글은 안되나 해서 네이버 사전에서 해보니 와일드카드쪽은 비슷하게 동작하네요
   *레비* : https://dict.naver.com/search.nhn/…=
   *바라* : https://dict.naver.com/search.nhn/…=
   다음 사전은 안되는데 네이버 사전은 뭔가 기능을 많이 넣은듯 합니다.
"
"https://news.hada.io/topic?id=2592","2020년과 이후 JavaScript(ECMAScript)의 동향","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  2020년과 이후 JavaScript(ECMAScript)의 동향

   JavaScript의 역사적 순간에 따라 구분될 수 있는 큰 주기들을 살펴보고, TC39의 변화 그리고 최신 ECMAScript 명세들인 2020, 2021과 아직 완료되지 않았지만 흥미로운 새로운 명세에 대한 내용을 살펴보는 글.
   - 2020년, 새로운 전환점의 시작
   - 웹 엔진의 다양성은 도전받고 있나?
   - 모듈 지원
   - Node.js 모듈 로딩
   - ESM 지원이 확장되면 번들러를 사용하지 않아도 될까?
   - TC39: 누구나 표준에 참여할 수 있다.
   - ECMAScript 명세 문서의 이해
   - ECMAScript 2020
   - ECMAScript 2021
   - 새로운 또는 완료되지 않은 제안들
   - TypeScript
   - Transpiler(Babel)는 계속 필요할까?

   글에도 나온 ""JavaScript의 세번째 시대"" 글의 간단 요약 https://news.hada.io/topic?id=2149
"
"https://news.hada.io/topic?id=2628","음악을 만들어봅시다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               음악을 만들어봅시다

   경험이나 장비 필요없이 브라우저위에서 배우는 음악 제작의 기초 [한국어]
   음악 소프트웨어와 장비를 만드는 Ableton이 음악을 모르는 사람도 따라할 수 있도록 쉽게 정리한 가이드
   - 비트 :
   ㅤ→ 비트 만들기
   ㅤ→ 사운드에 관하여
   ㅤ→ 비트와 템포
   ㅤ→ 템포와 장르
   ㅤ→ 백 비트
   ㅤ→ 마디
   ㅤ→ 록과 하우스
   ㅤ→ “We Will Rock You”
   ㅤ→ 비트를 연주해봅시다
   - 노트와 스케일
   ㅤ→ 피치에 대하여
   ㅤ→ 피치를 사용해 패턴을 만들기
   ㅤ→ 키와 스케일
   ㅤ→ 마이너 스케일
   ㅤ→ 노트를 더 추가하기
   ㅤ→ 노트와 스케일을 연주해봅시다
   - 코드
   ㅤ→ 코드 구성하기
   ㅤ→ 장3화음
   ㅤ→ 단3화음
   ㅤ→ ""떴다 떴다 비행기""
   ㅤ→ 1-5-6-4
   ㅤ→ 코드를 연주해봅시다
   - 베이스라인
   ㅤ→ 베이스라인 만들기
   ㅤ→ 베이스라인을 연주해봅시다
   - 멜로디
   ㅤ→ 멜로디 만들기
   ㅤ→ “Love Will Tear Us Apart”
   ㅤ→ “Ride”
   ㅤ→ “Ride”의 변주
   ㅤ→ 멜로디를 연주해봅시다
   - 곡의 구조
   ㅤ→ 곡을 구성해봅시다
   ㅤ→ “Bury It”
   - 자유 연주 공간
   - 상급 주제
   - 레슨을 마치며
"
"https://news.hada.io/topic?id=2622","git switch / restore","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          git switch / restore

   혼합되어 사용되던 checkout 의 기능을 브랜치 변경용 switch , 파일 복원용 restore로 분리한 것
   1년 전에 출시된 git 2.23 버전 부터 실험적으로 추가된 기능으로 2.28 인 현재도 마찬가지 ( 차후에 변경 가능 )
   git switch : 브랜치를 변경
   ㅤ-c 브랜치 생성
   git restore : 작업중인 파일을 복원

   restore 는 간간히 쓰긴 하는데 switch 는 아직 적응안되서 걍 checkout... -0-

   앗 하긴 체크아웃으로 파일 복원하는 게 뭔가 어색하긴 하네요~

   이 기능이 트위터에서 얘기가 되길래 공유해봅니다.
   git --help 메인 도움말에서는 이미 checkout 명령은 안보이게 변경되었습니다. ( sparse-checkout 만 남아있습니다. )
"
"https://news.hada.io/topic?id=2621","Rome - JavaScript / TypeScript Linter 베타 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Rome - JavaScript / TypeScript Linter 베타 릴리즈

   컴파일러,린터,포매터,번들러,테스팅 프레임워크를 별도 의존성없이 다 TypeScript로 통합 개발하려는 프로젝트인 Rome의 첫 베타
   현재 JS/TS Linter 만 개발했고, 나머지도 지속적으로 개발 예정.
   Babel/Yarn 개발자가 새로 시작한 프로젝트인 Rome 은 Babel의 정신적인 계승자
   Babel, ESLint, Webpack, Prettier, Jest 등을 대체할 통합 도구로 개발하는 것이 목표

   Rome - 실험적인 자바스크립트 툴체인 https://news.hada.io/topic?id=1609
   이런 제목으로 5개월전에 공유한적이 있는데, 이제 첫번째 베타가 나왔네요.
   로고도 스파르타 헬멧 모양이었는데 로마 건축의 아치 형태로 바꾼거 같구요.
"
"https://news.hada.io/topic?id=2679","Layout Shift GIF Generator","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Layout Shift GIF Generator

   - 모바일/데스크탑 웹페이지의 CLS(Cumulative Layout Shift)를 시각화해서 보여주는 도구
   - 구글이 검색결과 랭킹값에도 점점 더 강조 하기 시작한 Core Web Vitals 의 CLS 점수를 체크하기 위함
   - 변화를 강조 표시한 Animated GIF로 생성
   - Puppeteer를 이용한 JS 오픈소스로 CLI 도구로도 실행 가능

   Cumulative Layout Shift (CLS) https://news.hada.io/topic?id=1697
   구글, 검색결과 순위에 페이지 경험(Page Experience) 지표 도입 https://news.hada.io/topic?id=2197
"
"https://news.hada.io/topic?id=2680","QRPicture - 사진처럼 보이는 QR코드 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     QRPicture - 사진처럼 보이는 QR코드 만들기

   - 랜덤한 점들이 아닌 그림처럼 보이는 93x93 픽셀 QR 생성기
   - 로고/글자/패턴등을 QR코드에 담을수 있음
   - 사이즈 클리핑후 블러 및 디더링된 컬러이미지 생성
   - C + PHP(GD) 로 된 오픈소스
   - 4가지 아웃라인 : 원,사각,상하,좌우
   - 텍스트(적을수록 고품질),VCard,VEvent,Geo 입력
   - 흑백, 컬러드로잉, 컬러픽쳐 포맷 지원
   - 애니메이션도 지원 예정

   갤럭시는 인식이 안돼요.. ㅋㅋ 인식이 안되는 리더기들이 좀 있을것 같네요

   로고가 있는 매장등에서는 사용하기 좋을듯.
   제가 프로필로 쓰는 사진과 블로그 주소를 넣어서 만든후 아이폰에서 인식해보니 잘 되네요.

   샘플로 만들어본 GeekNews QR코드
   https://pbs.twimg.com/media/Ef1jdF4UcAAxp6k?format=png&name=240x240
"
"https://news.hada.io/topic?id=2643","Mozilla Lifeboat ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Mozilla Lifeboat

   구조조정 된 Mozillian 들을 위해, Mozilla Alumni/컨트리뷰터/팬들이 자기 회사의 구인정보를 등록하는 사이트
   - 회사소개 / 구인하는 분야 / 구인글 링크
   - 그 회사에 근무하는 Mozillian 연락처가 포함된게 독특
   - 하단엔 Mozilla Talent Directory도 같이

   airbnb가 5월 5일에 했던 구조조정이 생각나내요.
   한국어: https://airbnb.co.kr/resources/hosting-homes/…
   영어: https://airbnb.com/resources/hosting-homes/…

   Mozilla Talent Directory : Please meet some talented people who’ve worked at Mozilla.
   https://talentdirectory.mozilla.org/
"
"https://news.hada.io/topic?id=2593","카카오, 다음 웹마스터도구 베타 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          카카오, 다음 웹마스터도구 베타 공개

   Daum 검색이 나의 웹사이트를 어떻게 분석하고 있는지, Daum 검색 엔진에 최적화(SEO) 되어 있는지를 확인하는 도구
   - 수집정보 : Daum 검색 크롤러가 수집한 정보를 기간별 통계 차트로 제공
   - 색인정보 : Daum 검색엔진이 색인한 정보를 기간별 통계 차트로 제공
   - 검색정보 : Daum 웹검색 결과가 해당 사이트 문서 노출 및 클릭 정보를 기간별 통계 차트로 제공
   - 문서분석 : 문서 분석을 이용하여 타이틀, 내용, 날짜가 잘못 나오고 있다면, Daum 검색에 올바른 구조로 개선할 수 있도록 가이드
   - 웹사이트 수집요청 수행

   https://www.bloter.net/archives/399136
   그나마 이 기사가 있군요.

   보도자료는 나왔는데, 정작 해당 페이지에는 설명이 별로 없네요.
   사이트 인증(소유권 확인)하는 키를 robots.txt에 넣는 방식을 취해서 조금 특이하긴 합니다.
   구글이나 Bing 은
   - DNS에 레코드(TXT,CNAME)를 등록
   - HTML 태그를 페이지에 삽입
   - 특정 HTML / XML 파일을 업로드
   등의 방식들중에서 선택이 가능하거든요.
   robots.txt 는 다른 로봇들도 보는 파일인지라 특정값을 넣는게 좀 부담스럽습니다.
   게다가 후발주자인 Bing 은 Google Search Console 에서 기존 사이트 정보를 임포트 하는 방식을 지원해서 편한데, 이런거는 베타기간 중에 따라서 도입하면 좋겠네요.
   Bing, 새 Webmaster 도구 릴리즈 https://news.hada.io/topic?id=2577

   그러고보니 모든 언론사에 보도자료는 떴는데 어떤 보도자료에도 다음 웹마스터도구 로 가는 링크 하나가 없다는 불편한 진실...
   다음에서 웹마스터도구 검색하면 광고가 더 상위에 나오네요 ^^;
   https://search.daum.net/search/…
"
"https://news.hada.io/topic?id=2600","팬데믹은 왜 우한에서 발생했을까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           팬데믹은 왜 우한에서 발생했을까?

   정황 증거를 모아서 제시한 가설이지만, 개연성인 낮아 보이지 않습니다. 사이언스 라이프에 실린 기사에서 문장들을 발췌하고 일부 수정했습니다.
   - 온라인 독립 과학 저널의 두 기고가가 이번 판데믹의 진원지가 우한 바이러스 연구소일 가능성을 제기
   - 이번 바이러스가 이미 2012년도에 중국 남부의 한 광산에서 시작된 것으로 보임
   - 이 샘플을 보관해 오던 우한 바이러스학 연구소가 2019년에 실수로 (혹은 관리 미숙으로) 지역에 유출했을 개연성이 매우 높다는 가설을 제시
   - 가설을 제시한 근거는 중국어로 쓰인 한 석사 논문
   - 논문을 쓴 학생은 2012년도에 광산 사고 현장에서 가까운 쿤민 의과 대학병원에서 공부했고 당시 자신이 소속된 병원에 실려 온 이 여섯 명의 환자의 증세와 치료 과정을 자신의 석사 졸업 논문의 소재로 삼음
   - 여섯 명 환자들의 CT 사진을 비롯하여 이들에게 내려진 처방과 예후를 아주 꼼꼼하게 기록
   : 환자들에게서는 마른 기침, 객담, 고열, 특히 사망 직전에 매우 높은 고열, 호흡 곤란, 근육통 등이 거의 공통적으로 나타났음
   : 환자의 나이와 중증도가 밀접한 관계가 있음
   : 여섯명의 환자들 중 사망한 2명과 살아남은 1명은 이 광산에서 일을 시작한 지 14일 만에 발병
   - 기록된 내용은 2012년 당시에는 연결 지을 수 있는 알려진 질환이 없어서 미스터리로 여겨졌지만, 2020년을 사는 우리는 어떤 질병의 증세와 낯익음
"
"https://news.hada.io/topic?id=2603","AVATARZ - 멋진 3D 아바타 라이브러리멋진 3D 아바타 라이브러리

   옷, 머리, 피부, 성별 등의 소스 이미지(PNG)를 조합해서 2000개 이상의 아바타를 만들어낼 수 있는 유료 라이브러리네요.
   Photoshop, Sketch, Figma, Studio, Illustrator 등 아무 디자인 소프트웨어에서 사용 가능.

   어이쿠 요약 내용이 없으니 클릭이 힘들군요
"
"https://news.hada.io/topic?id=2682","Puppeteer Recorder - 브라우저 동작을 퍼펫티어 스크립트로 녹화하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Puppeteer Recorder - 브라우저 동작을 퍼펫티어 스크립트로 녹화하기

   - 브라우저 동작 (마우스 클릭, 타이핑, 폼 입력 ) 등을 퍼펫티어 스크립트로 녹화해주는 크롬 확장
   - 어떤 이벤트가 녹화되는지 화면에 표시해 줌
   ㅤ→ waitForNavigation, setViewPort 등도 지원
   ㅤ→ 스크린샷 ( 페이지 및 클립된 영역 ) 가능
   - 녹화후 생성된 코드를 클립보드로 카피해서 바로 사용 가능

   이 코드는 사이트&API 모니터링 도구인 Checkly 를 만드는 팀이 개발중인 오픈소스이고,
   Puppeteer 팀이 직접 만드는 Recorder 프로젝트도 있습니다.
   https://github.com/puppeteer/recorder
   이 퍼펫티어 팀의 Recorder 는 크롬 확장을 쓰는게 아니라 Puppeteer 를 헤드리스 아닌 상태(non-headless)로 새로 띄워서 그 내용을 녹화 하는 방식 입니다.
"
"https://news.hada.io/topic?id=2635","변하는 세상,  변하는 모질라. ( 모질라의 구조조정 소식. )","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   변하는 세상, 변하는 모질라. ( 모질라의 구조조정 소식. )

   모질라가 250명을 해고하는 구조조정을 단행했습니다. COVID-19로 매출에 큰 타격을 입은게 주요 원인입니다. 봄 이후로 직원들과 해고 가능성과 변화의 필요성에 대해 이야기 하였고. 그럼에도 이런 결정을 내린 건 힘들었다고 전했습니다.
   모질라는 이전 구조로는 브라우저를 넘어 새로운 제품과 기술을 제공하는데 적절하지 않았다고 하며. 앞으로 조직을 더 작고, 민첩하고, 빠르게 조정하는 조직이 되겠다고 하였습니다. 또한 앞으로 제품을 만들 떄, 5가지 핵심 가치를 소개하였습니다.
   - 제품에 관한 새로운 초점. -> 세계적이고, 현대적인 다중 제품 인터넷 조직이 되도록.
   - 새로운 사고 방식 -> 인터넷은 플렛폼화 되었기에. 기존에 인터넷에서만 머물던 사고 방식을, 더 새로운 것을 만들 수 있는 곳으로 옮길 수 있도록.
   - 기술에 대한 새로운 초점 -> 리더쉽을 제공하고, 제품을 테스트하고, 기존 웹 기술이 아닌 영역으로 비지니스를 유도할 수 있도록.
   - 커뮤니티에 대한 새로운 초점 -> 지금까지 오픈 소스를 기여하던 사람뿐만 아니라, 새로운 사람들에게도 열린 커뮤니티가 되도록.
   - 경제에 대한 새로운 초점 -> 모든 게 무료였던 것 구형 모델의 결과를 되짚어 보고, 다양한 비지니스 기회와 대체할 수 있는 가치로 교환할 수 있는지 탐색.

   계속 관련글들이 나오고 있는데, 정리해고된 팀이 좀 충격적이네요.
   - devtools 팀 과 Threat managment 팀 : 개발자들이 가장 선호하던게 개발도구인데 왜 이걸?!
   - MDN 팀 전체 : 요즘 웹 개발문서 중에서는 가장 볼만한 곳이었는데?!
   - Servo 개발팀 : Rust로 만들어진 임베딩 적합 최신 브라우저 엔진. 이거 미래 먹거리 수준이라고 생각했는데요.

   Rust 팀과 WASMTime 팀도 (WebAssembly 스탠드얼론 런타임) 도 포함이군요.
   요즘 모질라에서 개발쪽에서 제일 잘나가는 부분들만 골라서 다 쳐낸 느낌..
   이러다 보니 수뇌부가 무슨 생각을 하는지 모르겠다는 얘기가 나오는 거 같아요.

   Servo 팀을 정리해고했다고요?! 이건 파이어폭스의 미래를 포기하는 것이나 다름없는 것 같은데?!

   HN의 반응은 대체로 부정적입니다. 댓글로 읽을 만한 가치가 있는 듯 하여 공유합니다. 왜 모질라는 이런 상황이 되었는가.. 에 대해 많은 이야기가 오갑니다.
   https://news.ycombinator.com/item?id=24120336

   엄청 뜨거운 반응들인데... 읽을 수가 없네요 하하... 이런 논의들은 자동 번역으로 보면 뭔 말인지 알 수가 없어서요. 원문으로 보려면 하루종일 읽어야 할 듯 하고요 ;;;
   크로스플랫폼 firefox 브라우저 개발에만 집중하는 비영리 재단 형태여서는 유지가 힘든가? 상업적 모델로 가서 여러 수익용 서비스를 런칭하는 바람에 회사는 불안정해지고 브라우저 개발도 집중이 안되는 것 아닌가? 하는 부분은 두고두고 논란거리가 될 듯 하네요. (현재 브라우저를 개발하는 곳은 재단이 아니라 코퍼레이션 쪽이라는 얘기도 보이고.. 그러네요)
   저도 파이어폭스를 메인으로 사용하고 있는 사람이라서... (포켓도 프리미엄 구독 중) 잘 되었으면 좋겠어요.

   저도 파폭을 메인으로 사용하고, 모질라를 좋아하는 입장이지만... 많은 고민이 필요한 시점인 것 같아요. 지난 10년 간 모질라가 파이어폭스 말고 제품이 될만한 걸 했는가라고 물으면.. 부정적인 답변이 들릴 수 밖에 없을 것 같습니다.
   댓글 중에 '모질라는 아예 오픈 웹에만 초점을 맞춘 비영리 재단의 위치를 잡았어야 했고 Firefox OS, 음성인식, AI, Pocket과 통합 같은 자잘한 것들을 쳤야 한다고 생각함.' 이라는 댓글이 있는데. 회사로써의 모질라인가, 재단으로써의 모질라인가 확실히 결정해야할 때가 오고 있는 것 같네요.

   연초에 있던 구조조정에 이어서 추가 조치내요.
   https://blog.mozilla.org/blog/2020/…

   Hacker News의 제목은 직설적으로 '모질라가 상업용 모델에 초점을 맞추는 동안, 250명을 해고하였습니다.' 이여서 제목을 선정하는데 꽤 고민했습니다. 일단 대안으로는 원문 제목과 어떤 소식인지 옆에 달았습니다 ( 원문만 보면 단순한 비전 공유인줄 알았는데, 좀 더 살벌한 이야기인게 걸렸습니다. )

   고맙습니다. 저도 이 링크를 올렸다면 제목을 고민했을꺼 같아요. 모질라를 응원합니다만, 정리해고와 비젼공유를 한개의 글로 공유할 필요가 있었을까 싶기는 합니다.

   그런 부분의 지적이 많이 들리더라고요. 인종차별에 반대한다는 키워드는 굳이 넣었어야 했는가부터.. 구조조정 이슈를 덮으려는 의도로 보일 수도 있겠다라는 생각이 들었습니다.
"
"https://news.hada.io/topic?id=2674","Kinesis 키보드 3년 사용 후기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Kinesis 키보드 3년 사용 후기

   마틴 파울러옹이 $349짜리 Kinesis Advantage 2 (Ergonomic) 키보드를 3년동안 써보고 적은 후기
   - 스페이스바 없음 : 엄지손가락 자리에 리턴/백스페이스/스페이스/델리트 및 기타 키들(리맵 가능)
   - 발 위치에 페달 추가 가능($109) : Ctrl,⌘,Alt 매핑해서 사용
   - Emacs를 80년대에 배워서 Esc키를 메타키로 쓰기에 엄지손가락 키중에 하나를 Esc로 매핑
   - 큰 스페이스바가 없어서 줌에서 빠르게 음소거 하는 거 같은게 불편하다는거 빼고는 대 만족
   - 높은 가격을 할만한 가치가 있다고 생각

   오 페달...

   페달이라니 덜덜덜...

   근데 페달 가격도 싸지 않네요 하하

   > Emacs를 80년대에 배워서
   멋-짐

   Kinesis Advantage 2 : https://kinesis-ergo.com/shop/advantage2/
   Advantage Triple Pedal : https://kinesis-ergo.com/shop/advantage-triple-pedal/
"
"https://news.hada.io/topic?id=2661","eBPF 공식 사이트 오픈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             eBPF 공식 사이트 오픈

   eBPF : 리눅스 커널에서 소스변경이나 커널 모듈 로딩할 필요없이 샌드박싱된 프로그램을 실행할수 있게 해주는 기술
   이를 통해서 보안/네트워킹/트레이싱 & 프로파일링/모니터링 & Observability 등의 기능을 커널에 쉽게 추가할 수 있게됨.
   eBPF에 대한 소개와 관련 프로젝트, 3000명이 넘는 개발자들이 모인 Slack채널, 기여방법 등을 정리한 신규 사이트 오픈

   eBPF rethinking the Linux Kernel - https://news.hada.io/topic?id=1958
   BPF : 새로운 타입의 소프트웨어 - https://news.hada.io/topic?id=1011
   bpf를 이용한 성능분석 - https://news.hada.io/topic?id=88
"
"https://news.hada.io/topic?id=2683","파이썬 Data API 표준을 위한 콘소시엄 결성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      파이썬 Data API 표준을 위한 콘소시엄 결성

   데이터 사이언스/머신러닝의 인기에 힘입어 파이썬 인기가 폭발하고, 그로 인해 수많은 라이브러리들이 나왔지만 각자 발전하면서 파편화 됨.
   Array(Tensor) 와 DataFrame 등의 표준을 제정하여 서로간에 연동하고 공통의 에코시스템을 만들기 위한 첫 걸음
   QuanSight가 주관하고 인텔,MS,텐서플로우 등이 스폰서로 참여
   * QuanSight의 대표인 Travis Oliphant는 NumPy,SciPy,Conda 등을 만든 사람

   아직 데이터쪽 인기 프로젝트들이 참여한다는 얘기가 많이 없어서, 표준으로 정착할 수 있을지에 대해서는 의구심이 들기도 합니다만
   NumPy가 거의 De facto가 되었으니 그래도 한번 해볼만 하지 않을까? 하는 시각도 있는듯 합니다.
"
"https://news.hada.io/topic?id=2634","Kowl - 오픈소스 Kafka Web UI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Kowl - 오픈소스 Kafka Web UI

   - Apache Kafka 클러스터의 메시지를 확인하고 내부를 살펴보기 위한 UI도구 (예전 Kafka Owl)
   - 메시지 뷰어 : JS로 필터링 가능. JSON/XML/Text 보기, Avro는 지원예정
   - 컨슈머 그룹 보기 , 토픽/클러스터 오버뷰
   - Business 버전에서는 구글/GitHub OAuth 및 RBAC 지원

   Kafka 는 비슷한 도구가 많은데 계속 나오고 있네요.
   CMAK - https://github.com/yahoo/CMAK
   akhq - https://github.com/tchiotludo/akhq
   kafdrop - https://github.com/obsidiandynamics/kafdrop (AVRO 및 PROTOBUF 지원)
   kafkactl - https://github.com/deviceinsight/kafkactl (커맨드라인 도구)
   Kafka Tool - https://www.kafkatool.com/ ( 데스크탑 클라이언트, 개인은 무료, 유료버전 별도)
   Conduktor - https://www.conduktor.io/ ( 데스크탑 클라이언트, 유료 )
"
"https://news.hada.io/topic?id=2657","구글, 크롬 86에서 다시 주소창에서 URL 전체를 숨기려는 시도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  구글, 크롬 86에서 다시 주소창에서 URL 전체를 숨기려는 시도

   - 브라우저 주소창에서 URL이 다 안보이고 도메인만 보이게 변경시도
   - 예전부터 시도했다가 이슈되자 다시 껏다가 켜고를 반복중
   - 이번엔 서브도메인까지는 보이고 마우스 호버시 애니메이션으로 나타나도록 변경
   - 마우스 우클릭 메뉴에 ""항상 전체 URL 보이기"" 옵션도 제공
"
"https://news.hada.io/topic?id=2611","인텔 해킹당하다 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                인텔 해킹당하다

   20기가의 자료가 비번 Intel123 로 풀렸다네요......
   미 출시된 타이거 레이크 설계도가 포함되어 있다고 합니다.

   아니.. 도대체 어디까지 ㅜㅜ

   아 인텔 정말 요즘 악재가 겹치네요
"
"https://news.hada.io/topic?id=2641","구글, 안드로이드 폰을 지진감지 및 알림 네트웍으로 활용 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    구글, 안드로이드 폰을 지진감지 및 알림 네트웍으로 활용

   - 스마트폰의 가속도계를 활용하여 작은 지진계로 동작
   - 지진과 비슷한 진동 감지시 서버에 위치정보를 보내고, 서버가 해당 정보들을 모아서 지진이 일어나는지를 감지
   - 이는 바로 구글 검색 결과에 반영
   - 캘리포니아에서는 이미 700개의 지진계와 함께 동작하는 ShakeAlert 시스템이 있고 이 시스템을 통해서 안드로이드는 바로 알림을 받을수 있음.
   - 캘리포니아를 시작으로 전세계로 확대할 예정
   * 이 시스템의 이름은 Android Earthquake Alerts System
"
"https://news.hada.io/topic?id=2613","1Keys - JS1024 우승작 개발기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         1Keys - JS1024 우승작 개발기

   JavaScript 1K로 구동되는 피아노의 전체 코드 설명
   WebAudio API 활용 및 사이즈를 줄이기 위한 노력들
   - 한글자 변수명 : 전역-대문자 / 로컬-소문자
   - document.getElementById() 대신 eval()
   - 모든 문자열은 ” 대신 ` 으로 선언 ( body onload에 넣을때 별도 처리하지 않기 위해 )
   - Terser-online 으로 Minify
   - JSCrush로 JS 코드 압축

   JS1024 2020 우승자 발표 https://news.hada.io/topic?id=2575
"
"https://news.hada.io/topic?id=2595","페이스북이 접근성 개선을 위해 한 작업","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         페이스북이 접근성 개선을 위해 한 작업

   새 테크스택을 만들면서 초기부터 접근성에 대한 고려
   - Linting & Flow : ARIA 강제
   - 폰트 크기 조절 : rems 적용으로 가능하지만, 강제하기 쉽지 않아서 CSS pixel 값에서 자동변환 되도록
   - Contextual headings : React Context로 헤딩이 복잡한 페이지에서도 항상 올바른 단계로 보이도록
   - Contextual 단축키 : React Context로 단축키 등록을 하나의 API로 묶음
   - 런티임에도 접근성 문제를 감지하고 알리는 기능을 백그라운드에서 실행
   - Base 컴포넌트를 만들때 부터 접근성을 고려하도록 ARIA Practices Guide 를 적용
   - 스크린 리더 및 Sighted 키보드 사용자를 위해서, 컴포넌트간에 옮겨다니면서도 Focus가 유지되도록 구현
   - 스크린 리더용 피드백 Hook 제공

   Facebook의 테크스택 재구축 이야기 https://news.hada.io/topic?id=2049
"
"https://news.hada.io/topic?id=2685","Headless Dev - Puppeteer & Playwright 지식 창고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Headless Dev - Puppeteer & Playwright 지식 창고

   - 헤드리스 브라우저 개발자를 위한 통합 가이드 모음
   ㅤ→ Puppeteer : 크롬
   ㅤ→ Playwright : 크롬,웹킷,파이어폭스
   - 토픽별 정리
   ㅤ→ 기본 사용법, 스크린샷, 셀렉터, 설치하기
   ㅤ→ E2E 로그인(구글,MS Live),회원 가입, 계정 관리,검색,체크아웃등 상황별 처리 방법
   ㅤ→ 파일 업로드, 테스팅

   아직 전체적으로 내용들이 기초단계이긴 한데 차차 좀 더 추가되면 좋을 것 같네요. 아래 링크들도 참고하세요~
   Puppeteer Cluster - 퍼펫티어를 클러스터로 관리하는 도구 https://news.hada.io/topic?id=2312
   Puppeteer Recorder - 브라우저 동작을 퍼펫티어 스크립트로 녹화하기 https://news.hada.io/topic?id=2682
   Getting to Know Puppeteer Using Practical Examples (영문) https://news.hada.io/topic?id=161
"
