"https://news.hada.io/topic?id=3202","넷플릭스, TikTok 스타일의 짧은 비디오를 보이기 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    넷플릭스, TikTok 스타일의 짧은 비디오를 보이기 시작

   - Fast Laughs 라는 이름의 모바일용 버티컬 전체화면 비디오 피드 실험
   - 상하로 스크롤하면서 15~45초 짜리 재미난 클립/예고편 비디오를 볼수 있음
   - 목표는 시청자가 새로운 넷플릭스 작품을 찾을수 있도록 하는 것
   - 웃는 이모티콘으로 반응하거나, 소셜 미디어에 공유 가능
   - 영국/미국 및 일부 국가의 iOS 사용자 대상으로 A/B 테스트중
"
"https://news.hada.io/topic?id=3193","Funkwhale - 탈 중앙화 셀프호스팅 음악 서버 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Funkwhale - 탈 중앙화 셀프호스팅 음악 서버

   - 개인 음악 라이브러리를 관리해주고, 친구/가족들과 공유 할수 있는 오픈소스
   - Subsonic 프로토콜로 다양한 앱에서 접근해서 플레이 가능
   - 자신의 서버(Pod)를 만들고 사용자/채널 등 관리 지원
   - 음악가/팟캐스터들이 직접 자신의 콘텐츠를 호스팅 하는 용도로도 사용
   - Python + Nginx + PostgreSQL + Redis
   - 음악 메타데이터는 MusicBrainz 이용
   - 각 Pod들끼리 연동(Federation) 가능
   ㅤ→ ActivityPub 프토토콜을 지원해서 Fediverse 로 공유

   예전에 설치해서 잠깐 써봤는데요, 반드시 오디오 파일의 메타정보가 있어야 했고, 앨범 없이 곡을 업로드할 수 없었던 것 같습니다.
   SoundCloud 대용으로는 사용하기 어렵습니다.

   Fediverse 의 비밀무기 ActivityPub https://news.hada.io/topic?id=1528
"
"https://news.hada.io/topic?id=3149","Deno 1.5 Release Notes","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Deno 1.5 Release Notes

   - 새로운 번들 시스템, Rust 로 반들어진 SWC 를 기반으로 새로운 Typtescript 컴파일 인프라스트럭처를 포함한 번들 시스템을 재개발 하여 15배의 성능 향상 보임. SWC 작업은 SWC의 한국 메인테이너 분[1] 이 참여 한 것으로
   - alert, confirm, and prompt 추가
   - REPL 성능 향상, 탭 완성, 코드 하이라이팅, Top level await 추가

   메인테이너가 틀린 말은 아니지만 프로젝트 파운더라고 정정하면 좋을 것 같습니다.
   swc는 kdy1님의 개인 프로젝트로 시작됐고 kdy1님이 거의 모든 작업을 하셨습니다.

   - [1]: https://github.com/swc-project/swc, https://kdy1.github.io/post/works/freelance/deno/open-contract/
"
"https://news.hada.io/topic?id=3207","Pay Me or Fork This","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Pay Me or Fork This

   테스트용 가짜 데이터를 만들어주는 faker.js 오픈소스 개발자의 선언
   ""내 Free work에 대해서, 이제 더 이상 Fortune 500 및 그 보다 작은 회사들을 위한 공짜 지원 안함.
   년간 1억 이상(6 Figure) 의 계약을 하던가 아니면 Fork해서 다른 사람이 작업하게 하세요.""

   자기가 쓰고 있는 걸 오픈소스로 바꾸는 건 비용이 들지 않지만 ( 코드 퀄리티 올렸다고 치고 ), 지원부터는 비용이 들어서...
   요즘 새로 산 게임 엔진 블랙북, 울펜슈타인 3D라는 책에 나와있는 글이 떠오르네요. 존 카맥이 울펜슈타인 3D를 오픈소스로 뿌렸는데, README에 이렇게 적혀 있었습니다.
   ""다른 건 모르겠고 불랜더 C++ 3.0에서는 잘 돌았음. 버그 리폿이나 이거 안 된다고 메일 보내지 말것!""

   faker.js - Node 및 브라우저상에서 가짜 데이터 생성 https://news.hada.io/topic?id=3166
   꽤 사용자가 많은 라이브러리 일텐데, GitHub Sponsor 가 11명밖에 안되는 군요..
   게다가 얼마전에 아파트에 불이 나서 가진 것들이 다 타버렸다고..
   https://twitter.com/marak/status/1320465599319990272
   왜 이런 말을 했는지 어느 정도 이해가 됩니다.

   😱
"
"https://news.hada.io/topic?id=3206","애플이 정말로 실행하는 모든 앱을 다 서버에 기록할까 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    애플이 정말로 실행하는 모든 앱을 다 서버에 기록할까 ?

   - 이번에 이슈가 된 OCSP에 대한 기술적인 분석
   ㅤ→ 개발자 인증서가 유효한지를 확인하기 위해 앱 실행시에 애플서버에 접속해서 체크
   ㅤ→ 네트웍 연결이 불가능하면 그냥 실행함
   ㅤ→ 접속은 가능한데 서버가 느리면 이번처럼 애플이 만든것 외의 모든 앱이 안뜨는 이슈가 발생
   ㅤ→ 앱 실행시마다 애플서버로 앱의 해쉬를 보내고 있다는 주장이 있음 [1]
   ㅤ→ 문제는 HTTPS 가 아닌 HTTP를 사용한다는 것 (HTTPS 인증서를 확인하기 위해서 또 커넥션을 열어야 하는 상황이 나오므로)
   - 내부 들여다 보기
   ㅤ→ 중간에 HTTP Proxy 나 Wireshark 만 있으면 모두 캡쳐 가능
   ㅤ→ 한번 실행해서 OCSP 인증이 되면 특정 시간 동안은 다시 인증 안함
   ㅤ→ GET 으로 base64 인코딩 된 80바이트 문자열을 전송
   ㅤ→ 해당 값이 앱의 Hash 같지만 ""아님""
   ㅤ→ OpenSSSL로 그 바이너리 정보를 열어보면, 진짜로 인증서 Issuer 이름 & 키 해쉬값과 시리얼번호가 들어있음
   ㅤ→ 그래도 인증서가 앱마다 다르면 어차피 그게 앱에 대한 해쉬값이랑 같은거 아닌가 ? 하는 의심
   - 개발자 인증서
   ㅤ→ 이 인증서 정보는 어디서 오는 것일까?
   ㅤ→ codesign 으로 맥앱의 인증서를 추출해봄(여기선 Firefox)
   ㅤ→ 시리얼 번호가 위에 캡쳐한 것과 일치함
   ㅤ→ 그럼 다시 Thunderbird 의 인증서를 뽑아보니 역시 시리얼번호가 같음(당연하겠지만)
   ㅤ→ 즉 [1]에서 얘기한 대로 모든 앱을 알수 있는 해쉬 정보를 보낸다는 것은 틀린 정보임
   ㅤ→ 물론 언제 어떤 컴에서 ""어떤 개발자의"" 앱을 실행했다는 것 자체를 알 수 있다는 것은 사실
   - OCSP를 차단 하는 것에 대해서
   ㅤ→ Little Snitch 를 이용하거나 /etc/hosts 를 통해서 막을 수는 있음
   ㅤ→ 하지만 이건 중요한 보안 기능 자체를 막는 것이니까 하지 말기를 권함
   - TL;DR
   ㅤ→ macOS 가 앱을 실행할 때마다 애플로 앱의 해쉬를 보내지 않음
   ㅤ→ macOS 가 당신이 사용하는 앱의 개발자 인증서 정보를 보내고 있고, 이건 HTTP로 전송됨
   ㅤ→ 웬만하면 ocsp.apple.com 접속을 막지 마세요.

   참고로 영문 위키피디아에 따르면 구글 크롬은 이미 2012년부터 OCSP를 비활성화했습니다. “이득은 찾기 어려우면서 비용(딜레이 및 프라이버시 문제 발생)은 분명하다”는 것이 그 이유입니다.
   https://www.imperialviolet.org/2012/02/05/crlsets.html

   ocsp 는 원래 웹 브라우저도 SSL 인증서의 만료 여부 등을 확인하기 위해서 사용하는 방법이긴 할텐데요. 앱 인증을 SSL 인증서와 동일한 방식으로 하기 때문에 그런 것으로 추정할 수도 있겠네요.

   이게 iOS처럼 맥앱도 App Analytics 정보를 수집하기 위한게 아닐가 추측해봅니다.

   관련해서 읽어볼 이슈들
   [1] 당신의 컴퓨터는 당신만의 것이 아니다 https://news.hada.io/topic?id=3200
   [2] 맥 OS 카탈리나(10.15) : 디자인에 의해 느려지다 https://news.hada.io/topic?id=2145
"
"https://news.hada.io/topic?id=3187","$6k 광고비로 $200k 판매하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          $6k 광고비로 $200k 판매하기

   - 존 그루버의 블로그 Daring Fireball 에 광고해서 높은 수익을 낸 인도 Wifi 회사 이야기
   - 지역당 WiFi 장비를 설치하는 회사인데 대당 $20k 장비를 10대 판매
   - 일주일간의 홍보로 방문자 7200명, 이메일 45통, 화상통화 30통을 받았다고
   - DF의 광고는 $6500에 블로그 사이드바와 RSS피드 광고, 그리고 존그루버가 이 아이템에 대한 생각을 적는 포스트로 구성
   ㅤ→ DF의 일간 PV는 8만~10만, 월 PV 250만, RSS 피드 구독자 20만명, 트위터 팔로워 92000명
   - 실제 구매자는 구글,애플 등 기술회사들의 시니어 엔지니어들이었고, 통화한 후 48시간내에 구매를 결정

   아이템도 재미있고, DF의 광고모델에 대해서 자세히 알게 해주는 재미난 글이네요.
   HN에서는 이 글의 구성 자체가 아주 HN에 잘 어울리는 형태라고 칭찬하고 있습니다.
   - 결과 ( 짧게 설명 )
   - 회사와 목표에 대한 짧은 소개 : 여기까지만 읽어도 파악 가능
   - 제품에 대한 큰 폰트로 된 설명 ( 다 읽을 사람들은 스킵가능 )
   - 주요 내용
   - 다시 한번 제품을 판매하기 위한 위장된 훅(Hook) : 이 글의 독자 또한 마케팅의 대상이니 한번 더 꼬셔보는..
   - 제품을 더 자세히 설명하기 위한 링크
"
"https://news.hada.io/topic?id=3107","Grafana Tempo - 대규모 분산 추적 백엔드 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Grafana Tempo - 대규모 분산 추적 백엔드 공개

   - 큰 규모에도 운영이 쉽고 비용은 저렴하도록 만들어진 오픈 소스
   - S3/GCS 같은 객체 저장소만 있으면 되고, Trace ID 를 빠르게 조회가능하도록 설계.
   - Grafana, Prometheus, Loki 와 연동
   - Jaeger, Zipkin, OpenCensus, OpenTelemetry 프로토콜과 같이 사용가능
"
"https://news.hada.io/topic?id=3102","Dendron - 계층적 노트 작성 도구 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Dendron - 계층적 노트 작성 도구 오픈소스

   - VSCode 기반의 로컬위주,마크다운기반 노트툴
   - 확장 설치후 웍스페이스가 내 노트 저장소로 동작
   - 태깅,백링크,그래프보기 지원
   - 많은 노트가 있어도 쉽게 찾을수 있도록 지원 : 계층구조, 스키마, 경로기반 검색
   - Ad-Hoc으로 관리하거나, Zettelkasten 이나 PARA(Projects,Areas,Resources,Archives) 방식에도 적용 가능

   Zettelkasten 은 아래 링크를 참고하세요.
   Zettlr - 제텔카스텐을 위한 마크다운 편집기 https://news.hada.io/topic?id=2393
   기능 자체는 Foam 이랑 비슷하네요.
   Foam - VS Code 기반 개인 지식 관리 도구 https://news.hada.io/topic?id=2356
"
"https://news.hada.io/topic?id=3147","유연하고 테스트 가능한 Go 코드 작성하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        유연하고 테스트 가능한 Go 코드 작성하기

   - Go 언어는 개발자에게 코딩의 즐거움을 일깨워주는 언어로 서버 코드를 작성하는데 대단히 유용
   - Go의 인터페이스는 단순히 메서드의 집합일 뿐이라는 점이 특이하며 인터페이스가 어느 패키지에 존재하는지도 제약이 없음
   - 이를 이용하면 실제 클라이언트에 대한 아무런 의존성 없이 모킹을 사용하여 작성한 로직을 테스트할 수 있음
   - Go 언어의 독특한 인터페이스 시스템 덕분에, 복잡한 방법론을 사용하지 않더라도 보다 효율적으로 좋은 코드를 작성 가능
"
"https://news.hada.io/topic?id=3135","Travis-CI 요금 플랜 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Travis-CI 요금 플랜 변경

   - macOS : $15에 25K 크레딧. 1분당 50크레딧 = 500분
   - Trial시 100회 빌드를 10K 크레딧 제공으로 변경 (Linux 1000분)
   - 오픈소스용 공개 Repo도 10K 크레딧으로 변경
   ㅤ→ 다쓰면 건별 검토를 통해서 신청받고 추가 크레딧 제공
   - 10개이상 동시 빌드 플랜 추가

   Travis가 작년에 B2B 도구들을 여럿 소유한 Idera에 인수가 되었는데, 역시나 비용절감의 향기가..
   전 빌드도구의 분당 과금은 이해가 잘 안되는 모델이라고 생각합니다.
"
"https://news.hada.io/topic?id=3105","페이스북, 클라우드 스트리밍 게임 서비스 출시 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       페이스북, 클라우드 스트리밍 게임 서비스 출시

   - 콘솔과 PC게임을 대체하지 않는 클라우드 게이밍 자체로 성장할 것
   - 완전 무료 게임들에 집중하고 차후에 시스템 인프라를 개선하여 다양한/모든 유형의 게임을 제공할 것. 그때까지는 무료
   - 기존 HTML5 인스턴트 게임과 같은 방식으로 즐겨서 구별없이 플레이
   - iOS용은 출시계획 없음
   - 클라우드 스트리밍 게임은 두가지 무료포맷으로 출시
   ㅤ→ 새로운 Play 랜딩 페이지에 있는 완전히 무료인 풀버전의 모바일 게임
   ㅤ→ Facebook에서 게임을 즉시 플레이할 수 있는 클라우드 플레이어블 광고
   - 첫주 제공 게임
   ㅤ→ Gameloft의 Asphalt 9: Legends
   ㅤ→ Moonton의 Mobile Legends: Adventure
   ㅤ→ Concrete Software, Inc.의 PGA TOUR Golf Shootout
   ㅤ→ Qublix Games의 Solitaire: Arthur’s Tale
   ㅤ→ 앞으로 몇 주 이내에 Red Bull의 Dirt Bike Unchained 추가 제공
   - 미국부터 제공 시작 하고 확대 예정
"
"https://news.hada.io/topic?id=3175","오픈소스 Security Scorecard","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        오픈소스 Security Scorecard

   - 오픈소스 프로젝트를 공개할 때 기본적인 보안 체크를 해주는 도구
   - 구글 보안팀이 만들어서 OpenSSF를 통해서 공개
   - 깃헙 Repo를 지정하면 자동으로 체크해서 점수를 표시
   - 보안 정책 여부, 릴리즈 사이닝, CI 테스팅, 코드리뷰 여부, Fuzzing/SAST 사용 여부등
"
"https://news.hada.io/topic?id=3112","TimescaleDB 2.0 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           TimescaleDB 2.0 공개

   - Time-series 데이터를 위한 멀티노드, 페타바이트 지원 RDB (PostgreSQL 기반)
   - Timescale License로 완전히 Free
   ㅤ→ as-a-service 는 불가
   - Docker 또는 Ubuntu/Debian/Centos 용 설치 바이너리 제공
   - Time-series Data(시계열 데이터)란 ?
   A가 B에게 돈을 보낸다면 양쪽에서 숫자가 빠지고 늘어난 것만 기록하면 되지만,
   시계열 데이터는 데이터의 변경을 UPDATE가 아닌 INSERT로 추적하는 데이터 셋.
   이 변경 정보를 통해서 이 둘이 어떤 관계가 있거나 둘사이에 어떤 일이 벌어지고 있다는 것을 알수 있게 됨.
   시계열 데이터는 금융,제조,전력,유틸리티등 산업에 주로 적용되었지만
   지난 몇년간 모니터링, IoT, 암호화폐, 게임, 머신러닝 등의 성장으로 폭발적으로 쓰임새가 증가
   데이터 기반 의사결정을 위해서 변화를 추적할 수 있는 가장 정확한 데이터
   - TimescaleDB 는 PostgreSQL 기반에서 시계열 워크로드를 위해 특별히 설계됨
   - 94+% 이상의 기본압축을 지원하고, PostgreSQL/InfluxDB/Cassandra/MongoDB 보다 10~100배 빠른 쿼리 가능
   - 멀티노드 구현을 위해서 분산 Hypertable 이라는 가상 테이블 기법을 도입(여러노드에 자동으로 파티셔닝)

   아마도 TSL 라이센스가 아니었다면 Amazon Timestream 이 TimescaleDB를 가져다가 상용화 했을지도 모르겠네요.
   Timestream 과 TimescaleDB 가격비교(물론 TImescale쪽이 제공한거지만) 보면 아마존쪽이 9~72배까지 비싸다고 합니다.
   https://blog.timescale.com/blog/choose-timescale-vs-influx-timestream/

   Timescale, 멀티노드 TimescaleDB를 무료로 공개 https://news.hada.io/topic?id=2138
"
"https://news.hada.io/topic?id=3196","파이썬 창시자 귀도 반 로섬, Microsoft 에 조인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    파이썬 창시자 귀도 반 로섬, Microsoft 에 조인

   작년 10월에 6년반 근무했던 Dropbox 에서 퇴사하고 은퇴를 선언했으나, 은퇴가 지겹다고 MS의 개발자 부서에 조인.
   ""다양한 일을 하겠지만, 윈도우즈 뿐만이 아닌 여러 곳에서 Python 을 더 잘 사용하게 하는 일을 할 것이며 그 외에도 많은 오픈소스가 있으니 지켜봐 달라""는 트윗을 남김.

   엑셀에 Python!

   댓글에 있는 표현이 재미있네요.
   ""두가지 가능성이 있다.
   1) BDFL(Benevolent Dictator for Life, 자비로운 종신 독재자) 가 돈 때문에 다크사이드로 간 것이다.
   2) 다크사이드가 빛을 보았고, (점진적으로) 완벽한 결합을 위해 움직이고 있다.""
   2번에 한표 던집니다. MS가 다크사이드 였지만, 요즘 오픈소스에 선한 영향력을 많이 주고 있죠.
   오늘 올라온 긱뉴스 Podcast 13회의 첫번째 뉴스에서도 요즘 MS의 행보를 설명하고 있으니 들어보시면 좋을 것 같아요.
   https://news.hada.io/podcast/16

   ㅎㅎㅎㅎ 다크사이드 ㅎㅎㅎㅎㅎ
   요즘 VS code 만들면서 python에 대한 랭기지 서버도 만들고, 이것저것 지원을 많이하다보니 영입을 한거같네요.. ㅎㅎㅎ
"
"https://news.hada.io/topic?id=3162","책 쓰는게 가치가 있었을까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            책 쓰는게 가치가 있었을까?

   여기서 책쓰기는 소설이나 문학이 아닌 IT 전공 도서를 이야기 합니다.
   이 글의 저자는 'Designing Data-Intensive Applications' ( 한국어 판 : 데이터 중심 어플리케이션 설계 ) 라는 책을 썼는데, 약 10만권이 팔렸습니다.
   아래는 요약 번역본입니다. 로얄티 부분은 원문에 그래프가 있어서, 읽으신 후에 확인해주시면 좋을 것 같습니다.
   - 재정적으로 그만한 가치가 있었나?
   친구들과 밴드를 시작하고 락스타가 되길 원하는 거랑 비슷합니다. 어떤 게 히트할지, 실패할지 예측하기 어려우니 로열티는 0으로 잡는 게 좋습니다. 다만 제 경우에는 제정적으로 성공했다는 걸 알려서 기분이 좋네요.
   로열티의 경우에는 온라인 엑세스는 25퍼센트 수익을 가지게 되었고, 인쇄판의 판매 수익의 10퍼센트. 번역본에 대한 수입은 5퍼센트를 받았습니다. 총 합산하여 47만 달러를 받았습니다.
   다만 책 작업을 4년간 하였고, 2.5년은 풀타임과 동등한 시간을 투자한 걸 감안하세요.
   - 로열티 이외에도
   책의 성공에는 개인적인 홍보가 약간은 도움이 된 것 같습니다. 초반이 발표된 후에도 주요 컨포런스에서 50개 넘는 강연을 했고, 모든 강연에는 제 책에 대한 작은 광고가 포함되었었습니다. 마치 최신 엘범을 홍보하기 위해 투어를 떠나는 밴드처럼, 이런 일때문에 책이 널리 알려지게 된 계기가 되었다고 생각합니다.
   강연과 책의 조합으로 대중들의 입지와 명성을 얻을 수 있었습니다. 컨퍼런스에서도 훨씬 더 많이 부르고요. 이 자체로는 수입을 창출하지는 못하지만, 이런 평판은 컨설팅 자문을 얻기에는 도움이 됩니다.
   책 쓰기는 제정적으로 도전적이며, 제 성공도 비정형이라는 걸 다시 알려드리지만, 그래도 기술적인 글쓰기로 양질의 생활을 할 수 있다는 것은 고무적입니다. 확실하게 보장을 못하지만, 가능은 합니다.
   - 책은 접근성이 뛰어난 교육이다
   재정적인 면을 제외하더라도 책을 쓰는 건 좋은 점이 많이 있습니다.
   전 세계 어디에서나 책은 접근할 수 있습니다. 한 사람이 평생동안 강연을 하더라도 10만명을 가르칠 수는 없고, 만약 1:1 교육이나 소그룹 교육이면 격차가 훨씬 더 크겠지만. 책은 수많은 사람들에게 쉽고 다가갈 수 있습니다.
   - 보이는 것보다 훨씬 더 많은 가치를 만들어 낸다
   즉, 독자가 책에 지불한 가격보다 이점이 더 많다는 점입니다. 한번 추정해봅시다.
   지금까지 제 책을 산 10만 명중 2/3는 읽지 않았고, 읽은 1/3중 몇몇은 이 책에 있는 아이디어 중 일부를 실제로 적용할 수 있었고. 2/3은 그냥 흥미롭게 읽었다고 가정해봅시다. 즉. 10%, 만 명만 이 책을 유용하게 사용했다고 가정하는겁니다.
   그럼 유용한 사용이 뭘까요? 제 책은 데이터 저장에 대한 아키텍쳐 결정을 내리는 것에 대한 책이고. 제대로 이해한다면 놀라운 시스템을 구축할 수 있습니다. ( 물론 잘못 이해하면 엉망이 된 시스템에서 고통스럽게 자기 자신을 돌아봐야하지만요. )
   이걸 정량화하기는 어렵습니다만 책의 아이디어를 적용한 사람들이, 만약 안 읽었으면 한 달의 시간을 날렸을 결정을 피했을 거라고 가정하겠습니다. ( 실제로는 더 절약된다고 말하고 싶지만, 보수적으로 잡았습ㅂ니다. ) 즉, 이 아이디어를 적용한 만명의 독자는 약 만 개월, 혹은 833년의 시간을 절약할 수 있었습니다.
   책을 쓰는 데 2.5년인데, 다른 사람들이 833년의 시간을 절약한다면 이득이 300배가 넘습니다. 평균 연봉을 10만 달러라고 가정하면 이는 8천만 달러의 가치 창출입니다. 독자들이 10만 권의 책을 사는데 약 400만 달러를 지출했으니, 창출된 가치는 소모된 가치보다 약 20배 더 큽니다. 게다가 이건 굉장히 보수적인 추정치입니다.
   게다가 많은 독자들이 제 책을 읽어 면접에서 좋은 성적을 얻었고, 꿈에 그리던 직업을 얻었고, 가족에게 재정적 안정을 제공한다고 이메일과 트윗을 보냈습니다. 이런 가치는 어떻게 측정해야할지 조차 모르겠지만. 엄청나네요.
   - 결론
   기술 서적은 쓰기는 쉽지 않지만..
   - 귀중하고 ( 사람들이 일을 더 잘할 수 있도록 도와줄 수 있습니다. )
   - 확장 가능 ( 많은 사람들이 혜택을 누릴 수 있습니다 )
   - 접근 가능성 ( 책을 사기만 하면 됩니다. )
   - 제정적으로도 실행 가능함 ( 적당한 수준의 수입을 벌 수 있습니다. )

   DDIA 한글판과 영문판을 대조하면서 정리해봤는데, 시간은 꽤 걸렸지만 아주 많은 도움이 되었습니다. ㅎㅎ

   마틴 클레프만 톡 영상을 즐겨보고 있는데, 정말 뛰어난 발표자 중 한분입니다.
   30~40분 가량 발표에서 전달하려는 주제만 최대한 전달하고, 유머도 있고, 억양도 영국 발음인데도 알아듣기 쉬워서 영어 공부에도 도움이 됩니다 ㅎㅎ

   저도 저 책 한번 읽어보고 싶더군요. 지금 하는 일은 대규모 백엔드와는 거리가 멀지만, 저런 건 로-망 아니겠습니까 ㅎㅎㅎ

   로-망이죵 ㅋㅋㅋㅋ 저걸 읽고 도대체 보수적으로 잡았는데도 1달을 아껴준다니, 뭐하는 책이야? 라는 생각이 들더라고여

   URL주소부터 익숙해서 누군가 했더니..
   제가 틀렸었어요. CRDT가 미래입니다 https://news.hada.io/topic?id=2962
   위 글에서 거론되는 동영상의 주인공이자, CRDT 라이브러리 Automerge 의 개발자 마틴 클렙만 이군요..

   ...초 네임드 개발자셨군여;;;

   - 보이는 것보다 훨씬 더 많은 가치를 만들어 낸다
   개인적으로 이 문단은 글을 쓰는 것에도 적용이 된다고 생각합니다. GeekNews가 없었으면 몇십년의 시간을 낭비했을 것 같은 느낌이...

   어이쿠! 고맙습니다 ㅎㅎ 저도 올려주시는 글들 덕에 시야를 넓히고 있습니다.
"
"https://news.hada.io/topic?id=3161","리눅스 실행파일에는 무엇이 들어 있을까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        리눅스 실행파일에는 무엇이 들어 있을까요?

   '우리들의 실행 파일 패키지를 만들어 봐요' 라는 강좌의 첫 장, '리눅스 실행 파일에는 무엇이 들어있을까요?' 라는 글입니다.
   이 글을 쓰게 된 계기는 어릴 적에 .exe 파일을 메모장으로 열어봤었는데 알 수 없는 글자들이 적힌 것들을 보고. '도대체 이게 뭘까?' 라고 고민하던 자신을 위해 썼다고 합니다.

   어셈블리도 적혀 있고, C 코드도 몇 개 있지만 건너띄는 건 없이 모두 차근차근 설명해주셔서, 재미있게 읽을 수 있었습니다. 다만 분량이 꽤 많다보니 아직도 읽고 있네요 ;ㅁ;
"
"https://news.hada.io/topic?id=3168","AI 전문가 로드맵","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               AI 전문가 로드맵

   #0 필수 논문,기술
   #1 Data Science
   #2 Machine Learning
   #3 Deep Learning
   #4 Data Engineer
   #5 Big Data Engineer
   5개의 트랙으로 나누고, 각 분야로 가는 필수/옵션 단계들을 로드맵으로 정리.
   각 항목은 클릭해서 상세/추가 정보 링크로 이동 가능
"
"https://news.hada.io/topic?id=3226","Browsh - 텍스트 기반 웹 브라우저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Browsh - 텍스트 기반 웹 브라우저

   - SSH/TTY 환경에서 HTML5,CSS3,JS,Video,WebGL 등을 지원
   - 비디오/이미지 등은 UTF-8 하프블록을 써서 터미널에서 최대한 그래픽을 재현
   - 마우스 지원으로 링크 클릭, 라인그리기 등까지 지원
   - 헤드리스로 Firefox를 실행, 웹서버에 접속 후 확장을 통해 웹페이지를 터미널에 맞게 변환
   ㅤ→ 웹페이지를 하나의 HTML/Text로 전송하여 터미널로 전송되는 웹 트래픽은 최소화
   - Go로 작성된 싱글바이너리, Firefox 57이상 필요
   - 각종 리눅스,맥,윈도우 지원

   이게 변환을 하다보니 속도는 그다지 빠르지 않습니다만,
   웹서버 브라우징은 서버에서 한 다음 그 웹페이지를 변환해서 엄청 작은 트래픽으로 쉘에서 볼 수 있기 때문에
   네트웍 환경이 엄청 안 좋은 곳에서는 나름 쓸만한 상황이 될수도 있을 것 같습니다.
   HN의 한 사용자가 알라스카 에선 한달에 14만원씩 내는 인터넷도 최대 속도가 512k 라서 이런 방식이 유용하다는 댓글이 있네요.
   - https://news.ycombinator.com/item?id=25131396
   저 이미지 렌더링에 UTF-8 하프블록을 쓰는건 imgcat 에서 봤었는데, 여기서도 활용하는군요.
   - imgcat 이미지 해상도 향상 https://news.hada.io/topic?id=3088
"
"https://news.hada.io/topic?id=3182","Firstirst 1000

   - 초기 사용자는 서비스가 오래 갈 수 있도록 하는 원동력
   - 각 서비스들이 처음 1000명의 사용자를 어떻게 모았는지 알려주는 이메일 뉴스레터
   - 한달에 1~3개 정도 메일 발송
   - Product Hunt, Morning Brew, Etsy, Doordash, Stitch Fix, Roam, Tara, Sketch, Tinder, Zapier 등
"
"https://news.hada.io/topic?id=3213","GitHub, youtube-dl 저장소 복원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GitHub, youtube-dl 저장소 복원

   EFF가 GitHub에 보낸 공식 서한을 통해서 youtube-dl 이 기술적으로 DMCA 및 TPM 을 위반하지 않았다는 것을 설명하고,
   GitHub가 이를 받아들여 저장소를 복원하고, 이번 게시중단건과 DMCA 관련된 내용을 정리
   - 왜 애초에 게시중단(Takedown)이 일어났나?
   플랫폼으로서 법률을 준수해야함. TPM(Technical Protection Measure, 기술적 보호 조치 = 복사방지 )을 우회하게 설계헀다는 경우 코드를 제거해야함. 하지만 이런일은 매우 드뭄.
   DMCA 게시중단 사례중 TPM 관련은 2% 미만인데, 그중에서도 이 건은 특히나 이례적인 사례였음.
   - DMCA에 따른 우회(Circumvention) 주장
   RIAA의 주장은 youtube-dl의 코드가 TPM을 우회하여 저작권이 있는 자료의 액세스 또는 복사를 제어하는 코드를 가지고 있으니, DMCA 섹션 1201을 위반했다는 것.
   이 DMCA 섹션 1201은 1990년대 후반에 논의된 것이라 현재 소프트웨어의 다양한 것들을 예상하지 못하고 작성된 것.
   결과적으로 기술이 저작권 침해가 아닌 방식으로 사용되었다고 하더라도, 저작물의 액세스 또는 복사를 할수 있게 TPM을 우회한 것만으로도 불법으로 규정함.
   이 우회가 youtube-dl 게시중단의 핵심 주장.
   - DMCA에 대한 GitHub의 개발자 중심 접근 방법
   GitHub 은 개발자 보호를 극대화 하기 위해 DMCA를 처리하고, 게시중단 정책을 설계했음.
   UGC(사용자 제작 콘텐츠)가 있는 거의 모든 플랫폼은 법을 준수하기 위해 DMCA 게시중단 요청을 처리함.
   GitHub의 경우 이러한 요청든 대부분은 오픈소스 라이선스 준수를 강제하기 위한 것들이 많음.
   개발자를 보호하기 위해 GitHub 는 이런 요청에 대해서 개발자에게 사전에 알리고, 이의 제기할수 있게하고, 커뮤니티에 투명하게 공개함
   - youtube-dl
   위에서 설명한 대로 youtube-dl 게시중단의 핵심 주장은 ""우회"" 였음.
   비록 처음에는 프로젝트를 게시중단 했지만, 단지 코드가 저작권을 가진 콘텐츠에 접근할수 있다는 것 만으로, 저작권을 침해하지 않는 방식으로 저작물에 접근하는데 사용할수 없다는 것을 의미하지는 않는 다는 것을 이해함.
   ( 이게 번역이 넘 복잡한데.. 풀어서 얘기하면 저작권 가진 콘텐츠에 접근해도 저작권침해 없이도 충분히 사용할 수 있다는 얘기라는 거죠 )
   또한 이 프로젝트의 코드가 접근성을 위한 재생 속도 변경, 인권투쟁에서의 증거 보존, 사실 확인을 위한 언론인 지원, Creative Commons 라이선스 및 Public Domain 동영상 다운로드등 많은 정당한 목적을 가지고 있음도 이해함.
   새로운 정보(EFF가 보낸)를 통해서 법을 위반하지 않는 다는 것을 알았고, Maintainer가 테스트코드에서 저작권이 있는 비디오를 사용하지 않도록 패치를 제출(저스틴 비버 뮤직 비디오를 다운로드하는 테스트가 있었죠)
   이를 통해서 Youtube-dl 프로젝트를 복원하고 모든 Fork들에도 복원 옵션을 제공할 것
   - 앞으로 바꿔갈 것
   섹션 1201에 대해서 검토 프로세스를 개편할 예정
   1. 모든 1201 위반 주장은 기술전문가가 리뷰하겠음.
   2. 법률 전문가가 면밀히 검토하여 DMCA의 범위를 넘어가는 요청은 거부할 것임.
   3. 클레임이 모호한경우, 개발자 편에 서서 확실한 우회 증거가 없는한 저장소를 그대로 둘 것임.
   4. 전문가가 확인해서 클레임이 완전하고 합법적이고 기술적으로 정당하다고 판명된경우, 저장소 소유자에게 연락해서 클레임에 응답하거나 게시중단을 피하기 위해 저장소를 변경할수 있는 기회를 제공. 응답이 없어도 추가 조치를 취하기 전에 다시 저장소 소유자에게 연락을 시도.
   5. 이 모든 단계가 진행된다음에야 저장소를 삭제
   6. 유효한 1201 클레임으로 저장소가 삭제되더라도, 해당 클레임을 해결하기 위해서, 그때까지 저장소 소유자가 아직 응답안한 경우에는 계속 연락을 시도할 것임.
   7. 유효한 1201 클레임으로 저장소가 삭제된 다음에도, 저장소 소유자가 법적으로 가능한 경우, 해당 문제와 PR및 의심되는 우회코드가 포함되지 않는 다른 저장소 데이터를 Export 할수 있도록 보장함.
   8. Trust and Safety 팀을 최전선에 배치, 이런것에 대해 개발자 티켓을 최우선으로 대응하여 클레임이 신속하게 해결되고, 저장소가 즉시 복원되도록 지원할 것.
   이 모든 비용은 GitHub 을 사용하는 개발자에게 무료로 제공. 우리는 이게 ""Developer-First 1201 클레임 처리""의 표준이라고 믿음.
   코드나 패키지를 호스팅하는 다른 회사에서도 이런 프로세스를 구축할 수 있도록 이 프로세스를 문서화 하고 오픈소스함.
   경험이 증가함에 따라 계속 개선할 것.
   - 개발자 방어 펀드 Developer defense fund
   게시중단 요청 및 기타 법적인 청구로 인해서 개인적으로 영향받는 개발자들은 Software Freedom Law Center(SFLC) 나 the Electronic Frontier Foundation (EFF) 같은 비영리 단체에 의존해서 법적 조원과 지원을 받을수 있음.
   그럼에도 불구하고, 부당한 게시중단 과 싸우는 개발자는 개인적 책임과 법적 방어비용을 부담할 위험이 생길수 있음. 이를 돕기위해 GitHub 는 부당한 ""DMCA 섹션 1201 게시 중단 요청"" 으로 부터 오픈소스 개발자를 보호할수 있도록 100만 달러(11억원)을 기부하여 개발자 방어 펀드를 조성. 이를 통해서 개발자를 보호하고, 개발자 협업을 보호하기 위한 조치들을 진행할 것.
   이런 개발자들을 도우려면 SFLC 나 EFF 에 직접 후원하는 것도 고려해 보세요.
   - 법을 개선하기 위해 깃헙이 하는 일
   현재 DMCA의 경계는 개발자에게 피해를 주고 있음. 이 문제를 해결하는 한가지 방법은 법률자체를 개선하고 더 나쁜 법률이 세계적으로 제정되는 것을 방지 하는 것.
   우리는 EU 저작권 지침이 소프트웨어 개발을 업로드 필터를 의무화 하는 것을 막기위한 다년간의 성공적인 노력을 했고, 이를 통해서 미국내에서 광범위한 DMCA 재논의가 될수 있도록 하고 있음.
   특히 youtube-dl 과 같은 사회적으로 유익한 도구를 구축할 수 있는 개발자의 자유를 증진하기 위해, DMCA의 우회 방지 조항을 특별히 지지함.
   현재 미국 저작권 사무소는 섹션 1201의 우회 방지 조항에 대한 예외 사항에 대해 리뷰를 수행하고 있음.
   곧 개발자 친화적인 저작권법을 만들기 위한 싸움에 여러분이 동참할수 있또록 더 많은 것을 얘기할수 있을 것. 기대해 주시기 바람.

   IRC 통해서 github ceo가 youtube-dl에 컨택한 얘길 살짝 살폈는데, 코드에는 문제가 없지만 저장소에 든 문서에 일부 문제가 있어서 수정해야 했다고 하고요. 연락을 위해 노력했지만 youtube-dl 메인테이너가 연락을 받지 않아 계속 지연되어서 irc까지 찾으러 왔다고 합니다

   반가운 소식이네요

   일처리가 정말 잘 됐네요. 문제 초반부터 Github CEO와 CTO들이 복원을 위해 노력중이라는 기사가 많았는데, 그런 적극적인 자세가 개발자들에게 신뢰를 주는 것 같습니다. 게다가 MS 산하인데도!

   와.. 아주 깔끔하게 정리 되었네요.
   앞으로 바꿔갈 것들과 개발자 방어 펀드, 법률 개선까지.. 깃헙이 정말로 일을 잘 처리한 것 같습니다.
   Youtube-dl - Youtube 및 각종 비디오사이트에서 동영상 저장하기 https://news.hada.io/topic?id=1629
   Youtube-dl, DMCA때문에 깃헙에서 삭제 https://news.hada.io/topic?id=3081
   기자들이 Youtube-dl 을 사용하는 방식 https://news.hada.io/topic?id=3100
"
"https://news.hada.io/topic?id=3127","Microsoft Lobe - 머신러닝 모델을 쉽게 만드는 앱 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Microsoft Lobe - 머신러닝 모델을 쉽게 만드는 앱

   - 사진 등록 또는 카메라로 찍고 라벨링하면 로컬에서 머신러닝용 모델을 생성해주는 무료 맥/윈도우용 도구
   - 속사모드 촬영으로 살짝 변화하는 여러장을 하나의 라벨로 등록
   - 자동 생성된 모델로 바로 테스트
   - CoreML, TensorFlow, TensorFlow Lite 용으로 Export 지원. 또는 Lobe 자체가 Local REST API를 지원
   - 자동으로 적합한 아키텍처를 선택 : 현재는 Image Classification만 지원. Object Detection 과 Data Classification 지원 예정
   - iOS(CoreML) , Android(TensorFlow Lite), Web(React + Tensorflow.js), Raspberry Pi 샘플 제공

   10분짜리 투어 동영상을 보시면 이해가 쉽습니다. 설명 재미나게 잘 찍었네요.
   https://www.youtube.com/watch?v=Mdcw3Sb98DA
"
"https://news.hada.io/topic?id=3185","아난드텍 M1 - A14 칩셋 리뷰 번역","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         아난드텍 M1 - A14 칩셋 리뷰 번역

   아난드텍의 M1 - A14 칩셋 상세 리뷰를 소개합니다.
   애플 실리콘을 선택할 수 밖에 없는 이유를 설명해줍니다.
   원본글 https://www.anandtech.com/show/16226/apple-silicon-m1-a14-deep-dive/2

   핵심 문장은 이거네요
   ""지난 5년간 인텔은 자사의 최고 싱글 스레드 성능을 28% 향상시킨 반면
   애플은 2015년 A9의 성능을 198% (3배) 향상시켰습니다.""
   실제 사용후기를 보고 판단해야겠지만,
   M 시리즈 칩셋들이 더 개선되면.. 데스크탑 시장이 또 변화할 수도 있겠네요.
"
"https://news.hada.io/topic?id=3130","Deno 1.5 릴리즈 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Deno 1.5 릴리즈

   - bundle 개선 : 속도 3~15배. tree shaking 추가(필요없는 코드 제거로 크기 줄임)
   - 웹플랫폼 API alert / confirm / prompt 추가
   - REPL 개선 : 탭 자동완성, 코드 구문강조, 탑레벨 await 가능
   - 그외 안정화 작업
"
"https://news.hada.io/topic?id=3204","How to protect Source Code from being stolen by Remote Developers","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   How to protect Source Code from being stolen by Remote Developers

   -Modularity / Access Control
   -Source Control
   -NDA / Legal
   -Collaboration / Trust
   -Is all this even worth it?
"
"https://news.hada.io/topic?id=3106","Wikimedia, GitLab 으로 전환","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Wikimedia, GitLab 으로 전환

   - 기존 Gerrit 에서 셀프호스트하는 GitLab Community Edition 으로 변경
   - 코드리뷰 시스템인 Gerrit에 대한 불만족 : 새 Repo생성 어렵고, CI연동 불편, Pull-Request 기반 워크플로우로가 아님
   - GitHub 은 요구사항에 잘 맞지 않았음 : 메타데이타, 개인정보 보호정책, 데이터보존, 백업, 데이터 무결성 검사들에 대한 통제권이 거의 없음

   Self Hosting은 Github보단 GitLab이 더 강세인 것 같네용.

   KDE,Xfce,Gnome,FreeDesktop,Devian 등등 많은 Free Software 쪽 그룹들이 다 GitLab 으로 옮겨가는 중
   Xfce가 GitLab 으로 전환 https://news.hada.io/topic?id=2009
   KDE 가 GitLab 을 채택 https://news.hada.io/topic?id=629

   Haskell GHC도 있습니다. (https://gitlab.haskell.org/ghc/ghc)

   오호 debian 도 넘어갔었군요 :)
"
"https://news.hada.io/topic?id=3186","구글 포토, 고화질 무제한 저장 종료","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          구글 포토, 고화질 무제한 저장 종료

   - 2021년 6월부터 새로 업로드되는 사진/비디오가 무료 용량 15GB 제한에 반영
   - 그 이전에 업로드된 사진/비디오들의 용량은 구글 계정 용량에 반영되지 않음
   - Google One 서비스를 통해서 용량 확장 가능
   - Pixel 기기에서 업로드 하는 사진/비디오는 무료 혜택 계속 제공

   학습 데이터셋 구축이 끝났나봅니다.

   20년치 사진을 올려놨었는데 ^^;;;
   많이 아쉽네요.
   머신러닝으로 테스트 많이 한듯..
   사람얼굴 잘 찾더군요.

   저도 제 어릴때 사진 올렸는데, 지금 제 사진이랑 묶어놓은거 보고 깜짝 ㅎㅎ

   잘 쓰고 있었는데 아쉽네요^^;
"
"https://news.hada.io/topic?id=3144","GLab - GitLab CLI 도구 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          GLab - GitLab CLI 도구

   - Go로 작성된 GitLab CLI 오픈소스
   - 터미널에서 이슈 처리, 리퀘스트 생성/보기/머지, 릴리즈, CI 파이프라인 관리 등을 지원
   - GitHub CLI 도구인 gh에서 영향 받음
   - 윈도우/맥/리눅스
"
"https://news.hada.io/topic?id=3218","Electron 11.0.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Electron 11.0.0 릴리즈

   Electron 11.0.0 버전이 릴리즈 되었습니다.
   - Chromium 87.0.4280.47, Node.js 12.18.3, V8 8.7 로 스택업데이트
   - Apple Silicon Macs M1 을 지원합니다. Electron for Intel Macs (x64) 와 Apple Silicon Macs (arm64) 두개의 플랫폼으로 빌드가 가능합니다.
   - crashReport 에 V8 에러메시지와 위치정보를 추가했습니다.
   - Context bridge 를 통해 큰 객체를 보내는 성능이 향상 되었습니다.
   [1]: [Apple Silicon Support | Electron Blog](https://www.electronjs.org/blog/apple-silicon)
   [2]: [New in Chrome 87 | Web | Google Developers](https://developers.google.com/web/updates/2020/11/nic87)
   [3]: [Node v12.17.0 (LTS) | Node.js](https://nodejs.org/en/blog/release/v12.17.0/)
   [4]: [V8 release v8.7 · V8](https://v8.dev/blog/v8-release-87)
"
"https://news.hada.io/topic?id=3109","ThoughtWorks Radar 23호 발간","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ThoughtWorks Radar 23호 발간

   테크닉/도구/플랫폼/개발언어 및 프레임워크 분야의
   최신 트렌드들을 Hold/Assess/Trial/Adopt 4단계로 시각화 및 설명하는게 특징
   이번호 테마
   - GraphQL Grandiosity : 번성중이지만 주의 필요
   - The Struggle with the Browser Continues : 성능과 호환성을 위한 수많은 노력들
   - Visualize All the Things : 혁신적인 시각화 도구들
   - Adolescence of Infrastructure as Code : IaC의 급성장
   - Democratizing Programming : NoCode/LowCode 도구가 좀 더 프로덕션 환경으로

   ThoughtWorks가 6개월마다 발행하는 기술뉴스 - Radar Vol.21 https://news.hada.io/topic?id=974
   ThoughtWorks Radar 22호 발간 [32p PDF] https://news.hada.io/topic?id=2133
"
"https://news.hada.io/topic?id=3116","Adobe Stock, 무료 사진/벡터/일러스트 7만개 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Adobe Stock, 무료 사진/벡터/일러스트 7만개 공개

   - 고해상도의 사진, 벡터, 일러스트, 템플릿, 3D 애셋, 비디오를 포함
   - 유료 라이센스 구매한 것과 마찬가지로 개인/사업/유료등 어떤 것에도 무료로 사용가능
   - Adobe가 직접 작가들에게 비용을 지불하고 구매한 것

   Adobe Stock 무료 콜렉션 바로가기 : https://stock.adobe.com/kr/free
   전 이미지 필요할때마다 https://unsplash.com/ 를 쓰기는 하는데,
   어도비에는 벡터 및 일러스트들도 꽤 많아서 유용합니다.
   무료 이미지만 검색도 잘되고, 주요 단어들로 검색해보니 전문작가들 작품이라 느낌도 괜찮습니다.
"
"https://news.hada.io/topic?id=3214","푸리에 변환(Fourier Transform)을 반응형으로 배우기 [한국어]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               푸리에 변환(Fourier Transform)을 반응형으로 배우기 [한국어]

   - 푸리에 변환이란 무엇인가
   - 푸리에 변환의 실용적 활용
   - 푸리에 변환의 무의미하긴 한데 엄청 신기한 활용
   결론
   - 푸리에 변환은 무언가를 넣으면 여러 주파수로 나눠주는 것이다.
   - 이 주파수들로부터 데이터의 근본적인 성질을 알 수 있다.
   - 중요한 주파수만 저장함으로써 데이터를 압축할 수도 있다.
   - 여러 개의 원을 사용해서 엄청 신기한 애니메이션을 만들 수도 있다.

   뭐야...무서워...엄마....

   오..
   신기하네요.^^

   복소사인파와, JPEG(이미지 압축)에서 활용하는 부분이 너무 신기하네요.

   제가 가끔 수업할 때 이야기하던 내용인데 훨씬 쉽게 되어 있네요. 참고자료로 좋겠네요
"
"https://news.hada.io/topic?id=3176","RSSHub - 오픈소스 RSS 피드 생성기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        RSSHub - 오픈소스 RSS 피드 생성기

   - RSS미지원 인터넷 서비스의 RSS피드를 만들어주는 툴
   - 무료 데모 서버를 사용하거나, 자신이 직접 서버 호스팅해서 사용가능
   - 페이스북,트위터,유튜브,Pixv,NYT,WSJ,HN,Kaggle,LWN,GitHub,SoundCloud 등 많은 사이트 지원
   ㅤ→ PR로 개발자들이 계속 추가중

   영문 문서 : https://docs.rsshub.app/en/
"
"https://news.hada.io/topic?id=3228","cosha - 이미지에 컬러 쉐도우 입히기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        cosha - 이미지에 컬러 쉐도우 입히기

   - CSS Filter 를 사용해서 이미지의 색상에 맞는 쉐도우를 입혀주는 라이브러리
   - blur/brightness/saturation/x/y 조절 가능
   - IE제외한 모든 브라우저 지원
   nice vibes
"
"https://news.hada.io/topic?id=3167","QUIC으로 수십억 트래픽을 대응하는 법 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      QUIC으로 수십억 트래픽을 대응하는 법 [번역]

   방신우라는 분이 페이스북 엔지니어링 블로그에 올라온 QUIC+HTTP/3 프로토콜 적용 경험을 한국어로 번역하여 올리셨습니다. (원문 영어) 다들 잘 아시다시피 QUIC은 기존의 TCP를 대체하기 위해 UDP 기반으로 TCP의 기능을 새롭게 구현한 프로토콜이고, HTTP/3는 QUIC에 맞게끔 새롭게 업데이트된 HTTP입니다. 이는 모두 현 시점에서 가장 최신 프로토콜이며, 네트워크 연결 상태가 좋지 않을 때에도 좋은 성능을 발휘하는 것으로 알려져 있습니다. IETF는 2021년경 QUIC의 RFC 작성을 완료할 예정입니다.
   내용을 요약하면 다음과 같습니다. 현재 페이스북 트래픽 중 4분의 3 이상에 이미 HTTP/3가 적용된 상태라고 합니다. 이를 위해 QUIC 구현체인 mvfst와 혼잡 제어(Congestion Control) 구현체인 BBR, 그리고 성능 측정 도구 등을 직접 구현하고 알고리즘과 자료 구조를 최적화하였습니다. 그리고 기존에 TCP 사용을 암묵적으로 가정하던 휴리스틱 설정이 QUIC에서 문제를 일으키는 것을 식별하였고, 각종 파라미터도 몇 번의 실험을 통해 수정해야 했습니다. 이러한 과정을 거쳐 페이스북 앱 내의 동적 컨텐츠부터 시작하여 정적 컨텐츠를 비롯한 모든 컨텐츠에 순차적으로 QUIC+HTTP/3가 적용되었습니다. 이 과정에서 페이스북 내 여러 분야의 관계자와 협업하였습니다. 결과적으로 각 컨텐츠에서 요청 오류나 레이턴시, 버퍼링 등의 지표가 개선된 것을 확인하였습니다. 이제는
   페이스북과 인스타그램의 앱과 웹 모두에 QUIC+HTTP/3가 적용된 상태이며, 앞으로는 혼잡 제어와 손실 복구를 더욱 개선하고 QUIC의 신기능을 활용할 것이라 합니다.
   영어 원문:
   https://engineering.fb.com/2020/10/…

   참고 - 클라우드플레어 기술 블로그의 HTTP/3 소개(한국어):
   https://blog.cloudflare.com/ko/http3-the-past-present-and-future-ko/

   오오. 감사합니다. HTTP 지식이 거의 없는 상태에서 봐도 술술 익히네요.
"
"https://news.hada.io/topic?id=3124","Visual Studio Code의 시대","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Visual Studio Code의 시대

   Visual Studio Code는 2019년 기준 텍스트 에디터 점유율 50퍼센트를 넘었습니다. 그 어떤 텍스트 에디터도 도달하지 못한 점유율인데요. 이제 Visual Studio Code는 Excel, Photoshop과 같은 단계에 이동할 것이라고 말하며 더 진화할 곳이 없다고 말한 글입니다.
   저자가 든 이유는 총 4가지입니다.
   1. 압도적인 점유율 - Visual Studio Code는 유일하게 50퍼센트 점유율을 돌파한 텍스트 에디터입니다.
   2. 안정적인 버전 릴리즈와 커밋 그래프. - 다른 텍스트 에디터들이 몇년에 한번씩, 한번에 몰아서 수정하는 것과 다르게 VS Code는 꾸준하고 안정적인 버전 릴리즈를 보여줬습니다.
   3. 텍스트 에디터가 플렛폼 - VS Code는 강력한 플러그인을 지원하여 마치 플러그인이 하나의 앱처럼, 모든 걸 수정할 수 있도록 만들었습니다.
   4. 강력한 기술 기업이 만듬 - MS는 강력한 기술 회사며, 매우 공격적으로 개발중입니다.

   JetBrains 힘내라 힘

   공식 vim 플러그인이 나오길 기대하면 너무 큰 거 같긴 한데... 기대하게 되네요 ㅋㅋ

   ㅋㅋㅋㅋㅋ vim팀이 만든 vs-code-vim 플러그인.. 멋지네요. 그게 나오면 그 날이 'vs-code가 완벽하게 플렛폼으로 자리잡은 날'이 될지도..

   거대 기업 MS의 후원이 있는 오픈소스 라는 강점이 가장 명확하게 드러나는 거 같습니다.
   구글이 크롬 브라우저 만든것과 비슷한 수준의 결정 이었던거 같아요.
   이제 구글이 VSCode 를 포크해서 자신만의 에디터 GCode를 만들면..
   구글 크롬 - MS Edge , VSCode - GCode 의 물고 물리는 관계 완성!

   MS : ""우리는 포크는 안 했는데!""
   G : "" ㅎㅎ ㅋㅋ ㅈㅅ; ""
   MS가 크로미움에 열심히 기여중이라 인지상정(?)으로 구글도 'Visual-Google-Code'를 만들고 VS-Code에 기여를..

   이제 Visual Studio 에디터 좀 고쳐줬으면 하는 마음도..
"
"https://news.hada.io/topic?id=3121","NotionMetrics - 노션에서 실시간 지표보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     NotionMetrics - 노션에서 실시간 지표보기

   - Google Analytics 등의 지표를 Notion 에서 실시간 확인가능하도록 임베딩 해주는 도구
   ㅤ→ ConvertKit, Stripe, MailChimp, Plaid, RescueTime 지원하며 확대 예정
   - 한개 Integration 까지는 무료
   ㅤ→ 국내에선 GA 말고는 별로 안쓰이니 괜찮을듯..
"
"https://news.hada.io/topic?id=3212","Nativescript","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Nativescript

   Angular, Vue.js 등의 자바스크립트 라이브러리를 이용하면 네이티브 모바일 앱을 만들수 있는 프레임워크.
   Vue.js를 이용해서 모바일 앱을 개발해 보려고 하다가 발견했습니다. React native와 비슷한 시기에 나온것 같은데 처음 발견해서 공유합니다.
   혹시 사용해보신 분이 계시려나요?

   공유 감사합니다.
   Vue & Angular 개발자를 위한 ReactNative 라고 보면 될 것 같네요.
   찾아보니 두개를 비교한 최근 글이 있어서 읽어보니 재미나네요.
   NativeScript vs React Native in 2020 - Which One to Choose?
   https://www.monterail.com/blog/nativescript-vs-react-native-2020
   가장 중요한 차이는 Native API 연동부분인데
   - ReactNative 는 기본으로 지원하지 않는 특정 API를 쓸려면 써드파티 모듈을 찾거나, 직접 자신이 Bridge를 만들어야 함
   - NativeScript 는 기본적으로 모든 iOS/Android API를 내부의 JavaScript VirtualMachine 에 먼저 다 넣어놓는 방식을 취해서 그냥 가져다 쓰면 됨
   요즘은 거의 ReactNative 용으로 모듈이 빠르게 나오니 큰 문제는 없겠지만, 기능이 많아지면 달라지긴 하겠네요.
   NativeScript엔 잘 구성된 플러그인 마켓플레이스가 있다는것도 장점이구요. https://market.nativescript.org/
   속도의 차이는 거의 없다는 걸로 보이고,
   React 사용자라면 RN을, Vue 나 Angular 개발자라면 NativeScript 를 선택하게 되지 않을까 생각이 드는데요.
   일단 ReactNative 가 훨씬 사용자층이 많긴 해서 약간 밀리는 감이 없잖아 있네요 ^^;
"
"https://news.hada.io/topic?id=3143","GitHub Game Off 2020 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        GitHub Game Off 2020 시작

   - 매년 실시하는 게임 해커톤으로 한달동안 제출 받음
   - 올해의 주제는 MoonShot
   ㅤ→ 단어 뜻 : 야심차고 혁신적인 프로젝트, 달에 우주선 쏘는 것..
   ㅤ→ Moonshot Thinking : 일반적으로 불가능하다고 여겨지는 무언가를 성취하기 위한 일종의 사고
   - ""Moonshot Thinking"" 을 테마로 맘대로 해석하여 게임 만들기
   - 공개 GitHub Repo 에 코드 올리고 응모
   - 언어, 게임 엔진, 라이브러리는 맘대로 사용가능
"
"https://news.hada.io/topic?id=3120","KDE 웹사이트, PHP 에서 Hugo로 이전 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       KDE 웹사이트, PHP 에서 Hugo로 이전

   - Hugo 는 Go 기반의 빠르고 현대적인 Static Site Generator
   - 원래 PHP가 간단해서 속도 향상은 거의 없으나
   ㅤ→ HTML 대신 마크다운
   ㅤ→ 다국어 버전이 별도 URL로 구분
   ㅤ→ RSS 제공
   ㅤ→ 웹개발자들이 로컬에서 아파치 및 PHP 기반 프레임워크 없이 Hugo 만 있으면 바로 개발 가능

   HN에서 이글이 올라오고 나서 댓글로 Hugo 에 대한 경험들이 많이 공유 되었는데, 실제로는 실망한 사람들도 많습니다.
   https://news.ycombinator.com/item?id=24944537
   그래서 댓글에서는 Hugo 보다는 Zola 가 더 좋다는 얘기가 많네요.
   Zola - 정적 웹사이트 엔진 https://news.hada.io/topic?id=3119
   jekyll 이 나온지 오래되어서 그런지 요즘 SSG(Static Site Generator) 들은 아래 3개가 경쟁하는 느낌이긴 합니다.
   Zola(Rust) vs Hugo(Go) vs Pelican(Python)

   헙.. 셋 다 처음 들어보는 느낌인데, 저는 Gatsby 기반의 것을 사용하고 있네요. ( gatsby-starter-lumen )
"
"https://news.hada.io/topic?id=3139","Kiro - 터미널용 UTF-8 지원 텍스트 에디터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Kiro - 터미널용 UTF-8 지원 텍스트 에디터

   - Rust로 개발된 Mode-less 미니멀 에디터
   ㅤ→ 1K LoC 에디터였던 Kilo를 확장 재개발한 것
   - 간단한 Syntax Highlighting / Incremental Text Search 지원
   - Undo/Redo, UTF-8 지원
   - 멀티 파일 편집 ( Ctrl-X/Alt-X로 버퍼 전환 )
   - Ctrl, Alt 키를 활용한 단축키
   - 맥/리눅스/윈도우(WSL)
"
"https://news.hada.io/topic?id=3154","JetBrains Compose - 코틀린용 데스크탑 UI 툴킷","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  JetBrains Compose - 코틀린용 데스크탑 UI 툴킷

   - 데스크탑 UI를 Declarative & Reactive 방식으로 개발
   - Jetpack Compose 안드로이드용 코드를 공유 가능(Kotlin Multiplatform 이용)
   - JVM기반 윈도우/리눅스/맥OS지원
   - Skia 그래픽 라이브러리로 하드웨어 가속 렌더링

   Flutter 이후로 Skia 주가가 점점 더 오르는 것 같군요...

   Flutter랑 Skia랑 관련이 있나요?

   Flutter 는 하부에서 Skia 를 이용해서 그래픽 처리를 하고 있습니다.
   https://github.com/flutter/flutter/wiki/The-Engine-architecture

   어랏? 아까 닷넷 Uno ( https://news.hada.io/topic?id=3153 ) 도 Skia 를 사용한다더니 여기도 Skia네요.

   요즘 멀티플랫폼 지원환경중에서 그래픽가속이 필요한 부분들은 대부분 Skia 기반으로 가는거 같아요.
   2005년에 구글이 인수했는데.. 안 죽이고 나름 잘 키운듯 합니다 ㅎㅎ
"
"https://news.hada.io/topic?id=3164","Super Tiny Icons - 유명 웹사이트/앱 로고의 SVG 버전","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Super Tiny Icons - 유명 웹사이트/앱 로고의 SVG 버전

   - 512x512 Viewbox로 맘대로 확대/축소 가능
   - PNG등에 비해서 10분의 1크기인 1KB 이하 SVG 아이콘들
   - 소셜 : 페이스북,트위터,인스타..
   - 미디어 : 유튜브,스포티파이..
   - 구글 : 지메일, 지도, 드라이브..
   - 메신저: 왓츠앱,스냅챗,위챗,라인,시그널,텔레그램..
   - 웹 : 깃헙, 워드프레스,해커뉴스,스택오버플로우,위키피디어..
   - 인터넷 : RSS,HTML5,Mail,Unicode,W3C..
   - 브라우저 : 크롬, FF, Edge, 사파리, 삼성 인터넷..
   - Logo : Apple, npm, Docker, IBM, MS,Git,Adobe,Samsung
   - 결제 : PayPal, Bitcoin, Ethereum, Venmo,..
   - 프로그래밍 : Python, Julia, PHP, React, Angular, Yarn, Java, Rust, JS, CoffeScript, Vue, Kotlin, Ruby..
   - OS : Android, Linux, Ubuntu, Linux, macOS, Debian..
   - Gaming : Steam, GOG, Ubisoft, EA, Minecraft
   - 그외 : SlideShare, PDF, Dropbox, Uber, S3, Alexa, Finder, Andible..
"
"https://news.hada.io/topic?id=3174","호텔예약 시스템 여러 곳에서 대규모 개인정보 유출","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      호텔예약 시스템 여러 곳에서 대규모 개인정보 유출

   Website Planet에 의하면 유명 호텔/여행 예약 시스템에서 유출된 대량의 개인정보가 AWS의 한 계정에서 발견되었다고 합니다.
   대상 서비스
   * Agoda
   * Amadeus
   * Booking.com
   * Expedia
   * Hotels.com
   * Hotelbeds
   * Omnibees
   * Sabre
   * and many others
   유출정보
   * PII data: Full names, email addresses, national ID numbers, and phone numbers of hotel guests
   * Credit card details: card number, cardholder’s name, CVV, and expiration date
   * Payment details: total cost of hotel reservations
   * Reservation details: Reservation number, dates of a stay, the price paid per night, any additional requests made by guests, number of people, guest names, and much more.

   온라인 호텔을 연결하는 중간 채널메니저인 Cloud Hospitality 에서 유출된거라서.. 실제로는 저 사이트들 말고도 더 많은 사이트가 있을수도 있겠네요. 카드정보가 가장 문제일듯
"
"https://news.hada.io/topic?id=3114","Cloakist - SaaS의 커스텀도메인을 지원해주는 도구 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Cloakist - SaaS의 커스텀도메인을 지원해주는 도구

   - Medium,Notion,Substack,HubSpot 등 커스텀 도메인을 지원 안하는 서비스에 자신의 도메인으로 연결해주는 SaaS
   - Pro 버전은 커스텀 브랜딩(회사 로고)를 마음대로 추가가능하고, 커스텀 스타일과 스크립트도 추가 가능. SEO도 지원
   - 지원서비스 : Adobe Spark, Airtable, Substack, ClickUp, Trello, Confluence, Calendly, JotForm 등

   커스텀 도메인을 지원 안하는 사이트를 크롤링(아마도)해다가 변환해서 호스팅해주는 서비스네요.
   살짝 문제가 될 수도 있는 서비스 같은데.. 아이디어가 신기해서 올려봅니다.
"
"https://news.hada.io/topic?id=3222","Cutter - 오픈소스 리버스 엔지니어링 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Cutter - 오픈소스 리버스 엔지니어링 플랫폼

   - 리버스 엔지니어링(RE) 프레임워크인 radare2 를 GUI / 터미널로 사용
   - Ghidra 디컴파일러 네이티브 연동
   - 멀티플랫폼 디버거 & 리모트 디버깅, 에뮬레이션 모드 지원
   - Hex Editor, Syntax Highlighting, Graph View
   - 파이썬 스크립팅 엔진으로 자동화 가능
   - Binary Searching & Patching
   - Qt + C++ 으로 작성, 윈도우/맥/리눅스 지원

   초보자를 위한 리버스 엔지니어링 [PDF] https://news.hada.io/topic?id=982
   Reverse Engineering Course https://news.hada.io/topic?id=1312
   Radare2 Framework을 이용한 리버스 엔지니어링 PART-1 (번역) https://cpuu.postype.com/post/838572
   Radare2를 이용한 리버스 엔지니어링 [Radare2 사용법 및 동적분석 예제] by N0Named http://blog.no-named.kr/how-2-use-radare2/
   기드라(Ghidra) 디버깅 툴 설치 및 기본 사용 방법 https://ndb796.tistory.com/323
   NSA의 오픈소스 리버스 엔지니어링 도구 Ghidra, 안드로이드 ELF 바이너리 지원 https://news.hada.io/topic?id=280
"
"https://news.hada.io/topic?id=3128","YC의 미래 창업자를 위한 Startup School","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     YC의 미래 창업자를 위한 Startup School

   - Y Combinator가 2017년부터 온라인으로 운영하는 프로그램. 현재까지 수강자 14만명
   - 11월 9일부터 '미래 창업자'를 위한 커리큘럼이 새로 개설
   - 아직 뭘 할지 결정하지 못한 사람들을 위한 32개의 글/동영상 코스
"
"https://news.hada.io/topic?id=3181",".NET 5.0 공개공개

   - 닷넷 통합 프로젝트의 첫번째 릴리즈
   - 가장 큰 변화는 성능 개선 및 플랫폼 확장/통합
   ㅤ→ 윈도우/맥/리눅스, x86/x64/Arm32/Arm64 및 WebAssembly
   - C# 9, F# 5, ASP .NET Core , EF Core 도 같이 공개
   - VB도 포함은 되었지만 언어변경은 없고 .NET Core 지원만

   릴리즈 글 자체가 너무 길군요..
   하여튼 중요한건 복잡했던 .NET 버전들을 합치는 작업중이라는 것
   아래 글과 함께 보시면 됩니다.
   .NET Standard 의 미래 https://news.hada.io/topic?id=2860
"
"https://news.hada.io/topic?id=3132","넷플릭스 Android/iOS 앱, 이제 Kotlin Multiplatform 기반 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             넷플릭스 Android/iOS 앱, 이제 Kotlin Multiplatform 기반

   - 코틀린으로 작성한 비즈니스 로직을 Kotlin/Native로 컴파일해서 두 플랫폼 간에 공유
   - 약 50%의 코드가 플랫폼하고 디커플링 되어있고, Android JetPack Compose 나 Swift UI 등 최신 기술적용에도 문제 없음
   - 코틀린 멀티플랫폼은 Android Studio는 기본 지원하고, XCode는 xcode-kotlin 플러그인 사용
   - 이렇게 코드 공유가 완성되어서, Kotlin/JS 트랜스파일러도 고려해보면 미래엔 더 유용할 것으로 예상

   초기에 C++ 을 이용해서 코드를 공유시도했던 드롭박스의 사례도 같이 참고하면 좋을것 같아요.
   (끝내 Swift 와 Kotlin 을 이용하는 것으로 바꾼 실패 사례이긴 하지만)
   iOS와 Android 간에 코드를 공유하는데 드는 비용 https://news.hada.io/topic?id=323

   힝... 플러터 쉽지 않넹...

   오 코틀린 멀티플랫폼 성공케이스가 되면 좋겠네요. 언젠가 ui도.. ㅋ
"
"https://news.hada.io/topic?id=3159","gron - JSON을 grep하기 좋게 만드는 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     gron - JSON을 grep하기 좋게 만드는 도구

   - JSON 데이터를 경로구조로 바꿔서 grep 했을때 위치를 쉽게 알 수 있음
   - 추출한 경로구조 데이터만 다시 JSON으로 바꾸는 것도 지원
   - 배열의 경우 인덱스도 표시
   ▶ gron ""https://api.github.com/repos/tomnomnom/gron/commits?per_page=1"" | fgrep ""commit.author""
   json[0].commit.author = {};
   json[0].commit.author.date = ""2016-07-02T10:51:21Z"";
   json[0].commit.author.email = ""mail@tomnomnom.com"";
   json[0].commit.author.name = ""Tom Hudson"";
   ▶ gron ""https://api.github.com/repos/tomnomnom/gron/commits?per_page=1"" | fgrep ""commit.author"" | gron --ungron
   [
   ㅤ{
   ㅤㅤ""commit"": {
   ㅤㅤㅤ""author"": {
   ㅤㅤㅤㅤ""date"": ""2016-07-02T10:51:21Z"",
   ㅤㅤㅤㅤ""email"": ""mail@tomnomnom.com"",
   ㅤㅤㅤㅤ""name"": ""Tom Hudson""
   ㅤㅤㅤ}
   ㅤㅤ}
   ㅤ}
   ]
   ▶ gron testdata/two.json
   json = {};
   json.contact = {};
   json.contact.email = ""mail@tomnomnom.com"";
   json.contact.twitter = ""@TomNomNom"";
   json.github = ""https://github.com/tomnomnom/"";
   json.likes = [];
   json.likes[0] = ""code"";
   json.likes[1] = ""cheese"";
   json.likes[2] = ""meat"";
   json.name = ""Tom"";
   - Go 로 작성된 윈도우/맥/리눅스 바이너리. 의존성 없음.
"
"https://news.hada.io/topic?id=3230","유튜브, 창작자가 원치 않아도 광고가 보이게 약관 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     유튜브, 창작자가 원치 않아도 광고가 보이게 약관 변경

   - YPP(유튜브 파트너 프로그램)에 가입하지 않은 채널의 영상에도 광고가 노출
   - 해당 채널은 YPP 계약이 안되어 있으니 창작자가 광고 수익을 받지 못함
   - 이 광고는 창작자가 원치 않아도 노출됨
   - YPP 가입을 위해서는 1000명 구독자 + 지난 1년간 4000시간 재생시간 필요
   - 미국은 즉시 적용, 미국외 국가는 2021년부터 적용

   요즘 영상이 조금만 길면 자동으로 들어가는 중간 광고가 거의 5분단위로 들어갑니다.
   보는 사람 입장에서도 점점 광고가 더 많아지겠군요. 프리미엄하라는 건가

   일부러 광고가 안 보이게 지정하는 계정들도 있을텐데, 반발이 심하긴 하겠네요.
   구글 입장에서는 광고도 안보이고 네트웍 트래픽만 소모하는 계정은 자신들한테 도움 안되니 문제였을테구요.
"
"https://news.hada.io/topic?id=3180","Apple, 차세대 맥북 에어 / 맥북 프로 13인치 / 맥미니 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Apple, 차세대 맥북 에어 / 맥북 프로 13인치 / 맥미니 공개

   M1칩 기반의 차세대 맥
   MacBook Air
   - M1칩, Fan-less, Wi-Fi 6, P3컬러, 터치ID, 720p 내장카메라
   - 2560x1600 레티나, 13.3인치
   - 1.29kg, 두께 0.41cm~1.61cm
   - 램 8/16GB, SSD 256/1TB/2TB
   - 썬더볼트 & USB 4 포트 * 2개
   - 웹브라우징 15시간, 비디오 재생 18시간
   - 30W USB-C 전원 어댑터
   MacBook Pro 13
   - M1칩, Wi-Fi 6, P3컬러, 터치바 & 터치ID, 720p 내장카메라
   - 2560x1600 레티나, 13.3인치
   - 1.4kg, 두께 1.56cm
   - 램 8/16GB, SSD 256/1TB/2TB
   - 썬더볼트 & USB 4 포트 * 2개
   - 지향성 빔포밍 스튜디오급 3마이크 어레이
   - 웹브라우징 17시간, 비디오 재생 20시간
   - 61W USB-C 전원 어댑터
   Mac Mini
   - M1칩, Wifi 6, 내장스피커
   - 디스플레이 2대 동시 지원 : Thunderbolt 6K & HDMI 2.0 60HZ 4K
   - 램 8/16GB, SSD 256/1TB/2TB
   - 1.2kg, 19.7 x 19.7 x 3.6cm
   - Thunderbolt USB-C * 2개 , USB-A * 2개, 이더넷 포트, 3.5mm 헤드폰 잭
   - 전원 코드

   CPU, GPU, RAM, SSD 다 동일하게 설정가능하다면 에어쪽이 매우 땡기네요.
   개인적으로 터치바가 불필요하다고 생각하고, 팬이 없다는게 매력적이네요. (대신 너무 뜨거우려나요?)

   발표 동영상 보다보니, 사용자가 말하는 부분에서 발열은 거의 없다고 얘기하는거 봐서는..
   성능만 제한될뿐 온도는 별로 안올라갈것도 같아요. 그래서 저도 에어쪽이 땡깁니다!

   에어와 프로13인치의 차이가 명확하지 않네요. CPU가 정말 차이가 없다면..
   외형크기는 같고, 무게도 100그람 차이. 터치바 유무
   화면 조금 더 밝고, 스피커랑 마이크가 조금 더 좋고, 배터리 20%쯤 더 큰게 다네요.
   USB-C 포트라도 4개 넣어주지..
   맥북프로 13 (1,690,000만원 부터) https://www.apple.com/kr/macbook-pro-13/
   맥북에어 13 (1,290,000만원 부터) https://www.apple.com/kr/macbook-air/
   맥미니 (890,000만원 부터) https://www.apple.com/kr/mac-mini/

   기본모델 기준 GPU 코어수가 차이나는걸로 알고 있습니다~

   MBA가 팬리스 인걸 생각하면, 같은 CPU에서 클럭이나 스로틀링 차이로 차별화를 두지 않았을까요?

   네 팬리스를 생각하면 아마도 그럴거 같긴 한데요.
   전 지금 쓰는 맥북프로가 하도 비행기가 많이 떠서 그냥 좀 느려도 조용한게 더 땡깁니다 ㅎㅎ
"
"https://news.hada.io/topic?id=3171","Root Cause - 퍼펫티어 단계별 캡쳐도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Root Cause - 퍼펫티어 단계별 캡쳐도구

   - Puppeteer/Playwright 를 이용한 자동 테스트시 트러블슈팅을 도와주는 오픈소스
   - Jest / Mocha 와 연동
   - 각 단계별 스크린샷, 네트웍 HAR 파일, 콘솔로그등을 모두 캡쳐해서 로컬 또는 클라우드에 저장
   ㅤ→ UI를 통해서 각 단계에서 어떤 행동을 하고 결과가 왜 그렇게 나왔는지 확인 가능
   ㅤ→ 실제 행동을 진행한 JS 코드와 연결해서 트레이싱 가능

   소스 : https://github.com/testimio/root-cause
"
"https://news.hada.io/topic?id=3157","Dear ImGui : C++로 작성된 의존성 없는 사용자 그래픽 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Dear ImGui : C++로 작성된 의존성 없는 사용자 그래픽 라이브러리

   Dear ImGui는 적은 코드로도 많은 걸 할 수 있는 GUI 라이브러리입니다. WinAPI의 MsgProc이나, WinForm의 Xaml.cs 같은 것도 필요 없이 함수의 return 값으로 모든 이벤트를 처리합니다. 즉.
   if (ImGui::Button(""버튼"") ) { /*버튼 클릭 이벤트*/ }
   ㅤ{ std::cout 〈〈 ""Hello, Imgui!"" 〈〈 std::endl; }
   이런 식으로 처리합니다. Button 함수를 호출하면 버튼을 그리는 것과 동시에 사용자 입력이 return으로 반환해줍니다. 또한 미리 만들어진 Widget이 아닌, 사용자가 ImGui에서 사용하는 인터페이스를 통해 직접 Widget과 입력을 받아올 수도 있어서 확장성이 좋습니다.
   ImGui는 매 프레임 그려줘야 하기에 게임이나 그래픽 라이브러리에 많이 사용하고 있지만, 일반 사용자용 GUI는 개발 목표는 아닌 것 같습니다.
   사용 예들을 보고 싶으시다면, 아래 링크를 참고해주세요.
   https://github.com/ocornut/imgui/issues/3075
   그리고 해당 GUI를 사용하고 있는 게임 회사들을 보고 싶으시다면, 아래 링크를 참고해주세요.
   https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui
"
"https://news.hada.io/topic?id=3118","Babylon.js - 오픈소스 실시간 3D 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Babylon.js - 오픈소스 실시간 3D 엔진

   - 웹기술로 3D 게임개발 가능한 고성능 렌더링 엔진
   - WebGL 1.0/2.0, WebGPU 지원
   - 물리,충돌 체크엔진
   - Babylon Native : 네이티브 컴파일 가능 (윈/DirectX, iOS&Mac/Metal, Android/OpenGL, Vulkan지원예정)
   - Node Material Editor : 코딩없이 커스텀 쉐이더 적용한 매터리얼을 만드는 편집기
   - Navigation Mesh : AI를 이용한 경로기반 객체 이동
   - WebXR (AR/VR) 지원
   - 8th Wall, Blender, Unity, 3DS Max, Maya, Clara.io 연동

   전에 프로젝트때문에 잠깐 사용했었는데, ThreeJS랑 비교해보다 넘어갔습니다.
   1. 플레이그라운드 제공
   2. 열정적인 커뮤니티
   3. 마이크로소프트가 후원
   4. 기술문서가 깔끔함
   5. (확인해보진 않았지만) 내부 코드가 더 깔끔하다고

   공간 테트리스 : https://codepen.io/hiteshsahu/full/LYZbjGq
   Underwater : https://playground.babylonjs.com/#LPTLZM
"
"https://news.hada.io/topic?id=3160","고객 Live Chat 도구 비교 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           고객 Live Chat 도구 비교

   - 웹 사이트 방문자와 실시간 대화를 하게 해주는 도구들 비교
   - Chatwoot, Intercom, Drift, Olark, Freshchat, LiveChat, Crisp
   - 실제로 몇달간 A/B테스트를 통해서 고객과 대화해본 결과
   - 추천은 Chatwoot : 깔끔한 디자인, 편리성, 훌륭한 API, 기능 제한없는 풀 오픈소스(유료 호스팅버전도 제공)
   - Intercom : 훌륭하지만 너무 비쌈
   - Drift : 인터컴만큼 유명하지만, 기술적 이슈들이 있음
   - Olark : 디자인이 너무 올드
   - Freshchat : 현대적이고 직관적인 UI를 가졌지만, Freshworks 라는 큰 제품군의 일부여서 생기는 문제들이 있음
   - LiveChat.com : 스타트업에는 잘 어울리지 않음
   - Crisp : 최신 서비스이고, 2명 에이전트까지는 무료. 일관성이 없고 느린 부분이 있어서 고객 경험을 해치는 경우 발생
   - Tawk.to : 비교한 서비스중 최악. 방문객에게 사이트가 아마추어 처럼 보일수 있음

   저는 Olark 한동안 블로그에서 달아뒀었는데, JABBER/XMPP 지원해서 괜찮더군요. 지금은 제거하긴 했습니다만 😄😄

   비슷한 오픈소스로 Papercups 도 많이 추천하더군요.
   오픈소스를 선택한다면 Papercups 와 Chatwoot 중에 고르면 될듯 합니다.
   Papercups - 오픈소스 실시간 고객 채팅 도구 https://news.hada.io/topic?id=2702
"
"https://news.hada.io/topic?id=3146","DeepNote - 협업을 위한 데이터 사이언스 노트북","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     DeepNote - 협업을 위한 데이터 사이언스 노트북

   - Jupyter 기반이지만 클라우드상에서 실시간 협업가능(URL로 즉시 공유)
   - 코드 자동완성/변수 탐색기/단축키/코맨드 팔렛트 등의 개선된 UI
   - GitHub, S3/GCS, Spark, Postgres, BigQuery 등과 연동
   - Versioning / 코드리뷰 지원예정
   - 개인(3명 협업자 가능) 무료 (월 750시간)

   2분짜리 데모 https://www.loom.com/share/b7e05ecca78047c2a2f687d77be8ecea
"
"https://news.hada.io/topic?id=3111","Lisp 구문에 대한 직관","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Lisp 구문에 대한 직관

   Lisp의 명령 구조는 특이한데요. 여타 언어들은
   `func ( param1 , param2 )`
   이런 명령 구조를 가지지만. Lisp는
   `( func1 param1 param2 )`
   라는 명령 구조를 가집니다.
   이런 명령 구조를 단순한 스타일이구나. 정도로만 생각했었는데요. 위 글은 해당 명령 구조를 유용하게 사용하여 실용적인 구조를 만들 수 있는지 소개합니다.

   이글을 보시고 Lisp에 끌리셨다면, 겸사 겸사 Lisp와 프로그래밍을 같이 배울 수 있는 SICP ( 컴퓨터 프로그램의 구조와 해석, 한국어 번역이 되어있습니다. ) 를 추천드립니다. 연습문제 퀄리티는 확실히 좋더라고요.

   재밌네요 👏

   와 이글 재미나네요. 소개 고맙습니다!

   감사합니당 'ㅁ'/ 이런 류 글들은 혼자 보기만 아깝더라고요 ㅋㅋㅋㅋ
"
"https://news.hada.io/topic?id=3126","축구 경기용 AI카메라가 심판의 대머리를 공으로 착각","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     축구 경기용 AI카메라가 심판의 대머리를 공으로 착각

   - 스코틀랜드 축구 클럽에서 사람 대신 AI에 의해 조종되는 Pixellot 카메라를 도입
   - 실제 경기에서 대머리 심판이 등장하자 축구공 대신 심판의 머리만 따라가며 촬영한 동영상이 공개
   - 코로나19 때문에 무관중으로 경기를 진행했는데 팬들은 실제로 심판 근처만 보게 되는 결과가..

   https://bepro11.com 이라는 서비스에서 근무중인 개발자입니다. 유사한 서비스를 제공하고 있으며 국내를 포함한 다양한 국가에서 사용 중에 있습니다! :)

   와 국내에도 같은 서비스가 있었군요. 소개 동영상 보니 재미나네요
   ( 홈페이지에는 영상이 임베드 안되어 있길래 다른분들 보시기 편하게 링크를 올려봅니다 )
   https://www.youtube.com/watch?v=lJjRF5k--60

   감사합니다!

   해당 유튜브 영상 : https://www.youtube.com/watch?v=9zoJP2FkpgU
   유머소재로 쓰여서 기사에는 이름만 언급이 되었는데, 이 카메라는 Pixellot https://www.pixellot.tv/ 장비입니다.
   4개의 카메라가 달린 장비로 자동으로 피사체를 추적하는 스포츠게임 중개용 카메라인데 요렇게 생겼습니다.
   https://omegabroadcast.com/pixellot-s1-fully-automated-4-camera-sports…
   2018년에 아마존 Re:Invent 갔을 때 우연히 Pixellot 개발담당 VP랑 식사테이블에 앉은적이 있어서, 너무 궁금해서 이거저거 물었던 기억이 납니다.
   카메라 설치만으로는 수익이 안날듯한데, 당신들의 비즈니스 모델이 뭐냐고 물었더니 여러가지가 있는데 '구독모델'이라고 얘기를 하더군요.
   프로경기가 아닌 아마추어 경기나 초/중/고/대학교 경기들에는 카메라맨이 없는 경우가 많은데요.
   Pixellot 카메라 하나만 경기장에 설치해두면 알아서 다 찍고, 마치 카메라맨이 찍은것처럼 경기영상을 클라우드에서 생성해주는데
   4개의 카메라가 다양한 화각으로 바꿔가면서, 공을 쫒아다니며 찍고 (축구는 저런 일이 생기기도 하겠습니다만..)
   심지어 화면 하단에 스코어 및 경기 시간 표시까지 실제 경기영상처럼 삽입해서 자동으로 만들어줍니다.
   그러면 초/중/고/대학교 선수 학부모들의 경우는 거의 대부분 구독을 하지 않을까요? 팬들도 마찬가지구요.
   이게 농구경기를 중계하는 영상인데요. 카메라맨 없이 AI가 이렇게 만들어줍니다.
   https://player.vimeo.com/video/434681366
   그리고 이렇게 만들어진 스트림 자체를 구단이 직접 팬들에게 서비스 가능하도록 솔루션으로도 제공합니다.
   국내 직장인야구/축구/풋살 쪽으로 도입하면 괜찮을까해서.. 아시아 디스트리뷰터 있냐고 물었던 기억이 나네요. ^^;
"
"https://news.hada.io/topic?id=3184","레일즈로 40분 만에 유튜브 개발 라이브코딩하기 (한국어)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    레일즈로 40분 만에 유튜브 개발 라이브코딩하기 (한국어)

   해당 영상에는 회원가입/동영상업로드/댓글/검색/AJAX/부트스트랩 구현 등이 포함되어 있습니다.
   2005년에도 이미 DHH가 '15분만에 블로그 만들기' 영상을 공개하면서 레일즈를 선보인 적이 있습니다. https://www.youtube.com/watch?v=Gzj723LkRJY
   Rails를 이용한 프로젝트들이 GeekNews에도 소개되어 있습니다. GitLab, forem, Lobsters(프로그래머를 위한 해커뉴스)도 역시 Rails 기반으로 구축되어 있습니다.
   * chatwood 오픈소스 고객 지원 도구 - https://news.hada.io/topic?id=928
   * frab 웹 기반 컨퍼런스 관리 시스템 오픈소스 - https://news.hada.io/topic?id=842

   ruby 죠습니다... 엄청 퍼져버린 JS와 다르게 Ruby On Rails 이후로 킬러 라이브러리같은 게 없는 것 같아 아쉬울 따름이네요 ;ㅁ ;
"
"https://news.hada.io/topic?id=3229","City as a Service - Helsinki Relocation Package (90일)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         City as a Service - Helsinki Relocation Package (90일)

   핀란드의 수도 헬싱키에서 재미난 것들 하네요.
   City as a Service라고 90일 동안 가족을 핀란드로 초대하는 프로그램을 진행합니다.
   북유럽에 속한 나라 중 하나인 핀란드는 러시아, 스웨덴을 끼고 있고 발트해와 맞닿아 있습니다.
   링크에 보시면 Why Helsinki? 라는 부분이 있는데, 과연..? ㅎㅎ
   가장 큰 스타트업 축제 중 하나인 Slush도 헬싱키에서 진행되기도 하고요.
   개인사정만 아니면 지원해보고 싶을 정도로 흥미로운 프로그램이네요 :)

   Tired of lockdowns, wildfires, social injustices and political turmoil?
   봉쇄와, 산불과, 사회적 혼란에 지치셨나요?
   이 문구가 인상깊네요. 타겟층을 명백히 알려주는 듯한..

   와 좋네요. 슬러시도 가보고 싶은데!!
"
"https://news.hada.io/topic?id=3141","Vasai - 웹 브라우저 화면 녹화하는 크롬 확장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Vasai - 웹 브라우저 화면 녹화하는 크롬 확장

   - 클릭한번으로 현재 웹브라우저의 동작을 다 녹화해주는 크롬 확장
   - 회원가입/로그인 필요없음
   - 녹화시간 무제한
   - 녹화된 동영상은 자체 URL이 나와서 공유가능 (공유기간 무제한)

   녹화후 링크 나온걸 받아보니 webm 비디오를 아마존S3에다 올리는거 같은데 무제한에다 무료인게 신기하네요.
   코드를 열어봐도 그냥 서버쪽으로 업로드만 하는거 같아서요.
   개발사가 자체 호스팅 하는 것 같은데, 용량이 무제한이라면 뭔가 트릭이 있을듯 한데 어떤식으로 처리하는지 잘 모르겠습니다.
   소스 : https://github.com/sambarrowclough/vasai-extention
"
"https://news.hada.io/topic?id=3190","ImageMaps 에디터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ImageMaps 에디터

   - HTML 이미지 맵을 쉽게 만들수 있는 웹 편집기
   - 사각형 / 폴리곤 이미지 영역 생성 가능
   - 영역 이름 / href / 채움색상 변경
   - JSON으로 저장/로드 가능
   - HTML / React 코드로 Export 지원

   이제는 잊혀진 기술(?)인가 싶지만, 이미지맵을 잘 사용하면 인터랙티브한 화면을 만들수 있어서 유용합니다.
   제가 좋아하는 사이트중에 이미지맵 느낌을 잘 활용하는 사이트로 https://everydaycarry.com 가 있는데요.
   매일 들고 다니는 물품들을 EDC(EveryDay Carry) 라고 부르는데 그거 하나하나를 클릭할 수 있게 만들어 놨습니다.
   (여긴 실제 구현은 이미지맵으로 하지는 않았습니다. 기능이 복잡하다 보니 자체 구현한듯 )
"
"https://news.hada.io/topic?id=3215","True Size of - 나라들 실제 크기로 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      True Size of - 나라들 실제 크기로 보기

   - 메르카토르 도법때문에 발생한 지도의 왜곡을 보정해서 보여주는 사이트
   ㅤ→ 둥그런 지구를 평면에 투영하면서 극지방은 면적이 크게 보이고, 적도 부근은 작게 보이는 왜곡 현상
   - 국가를 검색해서 마우스로 움직이면 상대 크기 비교가 가능
   ㅤ→ 여러 국가 추가도 가능, 각 나라는 우클릭으로 제거

   콩고 민주 공화국을 유럽에 갖다놓는 슈가월드 영상 보고 소름 돋았어요 ㅎㅎ

   페이지 자체는 훌륭한데, 아래쪽에 광고가 오버레이 형식으로 붙여놓았네요.
   저는 처음 접속했을 때 하필 ""Start Now""라는 버튼 형태의 광고여서, 클릭하고 들어갔는데, 뭔가 이상한 기분이 들어서 보니 광고더군요. 크롬 플러그인을 설치하라고 해서, 딱 멈췄는데, 아무생각없이 지도 구경하려다가 불필요한 프로그램이 설치될뻔 했네요.
   구경하실 분들이 조심하셔얄 것 같습니다.

   내용 자체는 매우 좋습니다. 그 큰 러시아도 끌어서 가져다보면, 미국보다 조금 더 큰 정도이고, 미국, 캐나다 두 나라를 합쳐도 아프리카 대륙보다 작다는 게 놀랍습니다.

   West Wing 에 나왔던 Gall-Peters Projection https://www.youtube.com/watch?v=eLqC3FNNOaI ,
   True Size of Africa http://kai.sub.blue/images/True-Size-of-Africa-kk-v3.pdf
   에서 영감 받아서 만들었다고 합니다.
   꽤 오래전에 나온 사이트인데, HN에 다시 올라왔길래 함 공유해봅니다.
"
"https://news.hada.io/topic?id=3173","NoisePage : Self-driving DBMS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     NoisePage : Self-driving DBMS

   - 자동으로 운영 및 최적화 되는 오픈소스 RDBMS
   - 머신러닝 컴포넌트를 통해서 시스템의 동작을 예측 & 모델링하고 계획
   - 관리자가 사망한 후에도, 사람의 손길없이 자동 운영되는 DB를 만드는 것을 목표로 CMU 에서 개발중
   - Postgres 호환 Wire-protocol, SQL, Catallog
   - Apache Arrow 호환 인메모리 Columnar Storage
   - LLVM을 이용한 JIT 쿼리 컴파일
   - Lock-Free multi-version concurrency control
   - Ubuntu 및 MacOS 만 지원
"
"https://news.hada.io/topic?id=3220","Firefox 83, HTTPS 전용 모드 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Firefox 83, HTTPS 전용 모드 추가

   - 접속하는 모든 사이트에 HTTPS를 강제하고, 지원하지 않는 사이트의 경우에는 사용자에게 접속할 건지 물어보는 HTTPS-Only 모드
   - 사이트 접속은 HTTPS로 하면서도 이미지/비디오는 HTTP로 가져오는 사이트의 경우엔 주소창에서 임시로 해제가능

   기존에 비슷(?)한 동작을 해주는 EFF의 HTTPS Everywhere 플러그인도 있습니다.
   경고를 하는 것은 같은데, HTTP/HTTPS 를 둘다 지원하는 경우 HTTPS로 전환도 시켜줍니다.
   https://www.eff.org/https-everywhere
"
"https://news.hada.io/topic?id=3119","Zola - 정적 웹사이트 엔진 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Zola - 정적 웹사이트 엔진

   - Rust로 만들어진 빠르고 의존성없는 실행파일 하나로 SaaS, 구문강조등 모든 기능을 처리
   - 강화된 마크다운
   ㅤ→ Shortcodes : 워드프레스의 기능
   ㅤ→ 내부링크 및 딥링킹 지원
   - Netlify의 Tera 템플릿 엔진 사용
   ㅤ→ Jinja2 및 Djago와 비슷
   - 이미지 리사이징 기능 내장
   - Table of Contents, Alias, Pagination, Taxonomies, Breadcrumbs
   - 검색을 위한 인덱스 생성(Elasticlunr.js 등을 이용한 검색 기능 구현시 사용)
   - Netlify , Vercel 등 스태틱 호스팅 서비스 지원

   이름이 한국 한정으로 빨라보이네요.. ㅎ

   http://www.arewewebyet.org/
   다른 Rust 웹 프레임워크도 여기서 찾아볼 수 있습니다. 'Rails / Django / Flask를 대채할 수 있을까요?' 라는 질문에 패기있게 '물론이죠!' 라고 말하는 게 인상적이네요.
"
"https://news.hada.io/topic?id=3140","Stories for VS Code","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Stories for VS Code

   - 인스타그램의 스토리 기능을 VS Code 개발자용으로 만든 확장
   - 자신의 코딩화면 / 코드 스니펫을 30초까지 녹화해서 다른 개발자들과 공유
   - 다른 개발자들 스토리를 보고 해당 화면에서 코드를 복사하는 것도 가능

   그냥 이런게 있다면 어떨까? 해서 개인 개발자가 만든건데 재미난 시도인듯 합니다.
   개발자가 직접 소개하는 영상을 참고하세요
   https://www.youtube.com/watch?v=ApR-kNXxLUs
"
"https://news.hada.io/topic?id=3152","TIOBE 순위에서 Python이 처음으로 Java를 이기고 2등에 올라","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                TIOBE 순위에서 Python이 처음으로 Java를 이기고 2등에 올라

   - 2020.11 기준. 지난달 C > Java > Python 에서 순위 역전
   - C > Python > Java > C++ > C# > VB > JS > PHP > R > SQL
   - R / Perl / Go / T-SQL 이 순위 대폭 상승
   - Rust 는 25위

   Rust.. Rust 붐은.. 옵니다..

   배우고 싶은 언어의 만년 1위 ㅋㅋㅋㅋ

   ㅋㅋㅋㅋ 어서 빨리 왔으면 좋겠습니다.

   +1 저도 충분히 10위권에는 갈수 있을거라 봅니다
"
"https://news.hada.io/topic?id=3224","애플, 중소개발사 앱스토어 수수료 15%로 인하","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       애플, 중소개발사 앱스토어 수수료 15%로 인하

   - 2021년 1월 1일부터 시작, 2020년 연간 수익금 100만달러(11억원) 이하의 개발사는 수수료 15%
   - 100만달러 초과시, 해당년도의 남은 기간 동안엔 기본 수수료율 30% 적용
   - 향후 어느해에 100만달러 이하 일경우, 다음해 부터 15% 수수료 대상 자격을 얻음

   관련해서 읽어볼 예전 글
   - 요즘 개발자들은 앱스토어가 제공하는 것들을 원하지 않는다 https://news.hada.io/topic?id=2314

   에픽이 쏘아올린 작은 공이 개인/중소개발사에게 큰 도움을 줬군요.
   구글은 내년부터 인엡 결제 정책을 강화한다는데, 이 행보에 대해 구글은 어떻게 대응할까요? ㅎㅎ
   애플 앱스토어와 구글 플레이에서 Epic Fortnite 삭제 https://news.hada.io/topic?id=2645
   구글 플레이, 인앱 결제 정책 업데이트 https://news.hada.io/topic?id=2926

   개인 개발자로서 기대치 않은 행운이 넝쿨째 굴러들어왔습니다.
   구글도 앞으로 중소개발사들에 대해서는 더 너그럽게 대해주지 않을까 생각합니다.
"
"https://news.hada.io/topic?id=3172","(실패하지 않는) 뉴욕타임스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            (실패하지 않는) 뉴욕타임스

   신문 비즈니스의 몰락과 뉴욕타임스의 재도약을 설명한 글과 슬라이드(167P)
   올드한 회사가 어떻게 디지털화 했나를 살펴볼수 있는 훌륭한 자료
   NYT는 어떻게 자신을 재발명 했나
   - 재무상태표 정리 : 건물팔고, 비핵심 자산 매각으로 부채 Zero
   - 콘텐츠에 투자 : 더 많은 기자를 고용하고 연봉을 인상(업계평균 3~4배)해서 업계 최고들을 끌어모음
   ㅤ""→ 최고의 인재 → 더 나은 저널리즘 → 더 많은 독자 → 더 많은 수익 → 더 좋은 인재"" 으로 선순환 만들기
   - 기술에 투자 :
   ㅤ→ 2014년 디지털 보고서 작성해서 철저하게 내부를 분석
   ㅤㅤ✓ 고객(Audience) 개발이 필요함 : 사람들이 NYT콘텐츠는 소비하지만, 내부가 아니라 허핑턴포스트 처럼 어그리게이션 하는 곳에서 더 많이 트래픽을 만듬
   ㅤㅤ✓ 구조화된 데이터가 없음 : 검색엔진이 없음. 내부 스토리나 사진도 찾을수 없고, 요리방식 이나 재료로 레시피를 검색하거나 카테고리 찾기도 안됨
   ㅤㅤ✓ 뉴스룸이 다른 비즈니스와 고립되어 있음 : 엔지니어링,제품,분석,연구개발,기술에 사람을 많이 뽑아도 뉴스룸과 동떨어져 있음
   ㅤㅤ✓ 소셜 미디어가 후순위임 : NYT의 페이스북/트위터 페이지는 잘 활용되지 않고, 일부 기자들이 자기 기사를 트위터에 홍보하는 정도
   ㅤㅤ✓ 퍼블리싱 스케줄이 디지털에 맞지 않음 : 많은 기사가 저녁에 나오는데 디지털 트래픽은 대부분 아침에 제일 많음. 가장 야심찬 글은 일요일에 올리는데, 그날이 가장 트래픽이 적은 날임
   ㅤㅤ✓ 예전 콘텐츠도 리패키지 가능 : 170년된 NYT의 예전 기사들은 충분히 재사용 가능한데 내부에선 못쓰고, 다른 미디어들이 가져다가 성공적으로 재사용하는 경우가 많음
   ㅤ→ 페이스북, 구글, 스포티파이, 버즈피드 등으로부터 훌륭한 엔지니어들을 수급
   ㅤ→ 이사회에 디지털 경험자들을 배치
   ㅤ→ 2012년 광고부서에 400명이 있었는데 2015년에는 그 중의 85%를 데이터 & 디지털 스킬 보유자로 교체
   ㅤ→ 소셜미디어 사용방식 변경, 고객 개발, SEO도 튼튼히, 기자와 직원들에게 소셜미디어 참여를 독려
   ㅤ→ 고객용 웹/앱 뿐만 아니라 내부도 디지털화 : 세계에서 가장 기술적으로 진보된 언론사가 되다
   ㅤㅤ✓ Google Cloud Platform 으로 이관
   ㅤㅤ✓ ElasticSearch 도입하고 Kafka로 퍼블리싱 파이프라인 구축
   ㅤㅤ✓ 전사에 Slack 과 Google Docs 도입
   ㅤㅤ✓ 커스텀 CMS를 재작성
   ㅤㅤ✓ 모든 기자들에게 Data 로 일하는 법을 교육
   ㅤㅤ✓ 웹사이트는 React 로 iOS App은 Swift로 개발
   ㅤㅤ✓ API 레이어는 GraphQL 로 작성
   - 새로운 수익모델 시작
   ㅤ→ The Daily 팟캐스트 시작
   ㅤㅤ✓ 예전 NYT 재직기자였던 Michael Barbaro 가 진행해서 스타가 됨
   ㅤㅤ✓ NYT 기사에 기반한 에피소드. 그 기사를 쓴 기자와의 인터뷰
   ㅤㅤ✓ 에피소드당 다운로드 4백만이 넘어서, 매주 신문 구독자 40만보다도 더 많음
   ㅤㅤ✓ 젊은 세대를 위한 콘텐츠 : 30세 이하가 절반이 넘고 전체 75% 이상이 40세 이하
   ㅤㅤㅤㅤ⇨ 깊게 참여하는 젊은 고객들이 많게 하는 건 '광고주의 꿈'
   ㅤㅤ✓ 블루칩 광고주들을 끌어들이게 됨 (BMW,Delta,Google,IBM 등)
   ㅤㅤ✓ 공식적으로 공개는 안되었지만 거의 900억원($73M)대의 매출이 날 것으로 예상
   ㅤ→ 십자말풀이(Crossword) 와 요리(Cooking)을 스탠드얼론 제품으로 분리
   ㅤㅤ✓ NYT 구독과 상관없이 별도 구독 가능
   ㅤㅤ✓ 디지털화하고 훌륭한 앱을 통해서, 70+년된 콘텐츠에 새로운 숨을 불어넣음
   ㅤㅤ✓ 130만명이 요리+십자말에 년 $40 를 내고 있음
   ㅤㅤ✓ 요리앱과 십자말 앱이 카테고리 순위에서도 좋은 성적을 냄
   ㅤㅤ✓ 이 앱들은 다시 젊은 세대를 NYT에 끌어들이는 효과
   ㅤ→ 2016년에 360억원($30M)을 들여서 Wirecutter 를 인수
   ㅤㅤ✓ 제품 추천 사이트로, 이를 통해서 추천 수수료인 Affiliate(어필리에이트) Fee를 버는 모델
   ㅤㅤ✓ 매년 매출이 늘어서, 요즘은 년 600억원정도의 매출이 발생
   ㅤㅤ✓ 충성적이고 영향력이 있는 고객들을 보유하고 있음
   ㅤㅤ✓ Wirecutter 는 각 카테고리당 Top 1~2개만 추천하기 때문에 품질이 좋다고 알려져있고, NYT 브랜드와도 얼라인
   ㅤ→ 라이센스 계약으로 페이스북이 직접 NYT에 돈을 냄
   ㅤ→ FX+Hulu 와 계약을 맺어서 ""New York Times Presents"" 라는 월간 비디오 다큐멘터리 시리즈를 시작
   - Ad-Supported 모델에서 Subscription-First 모델로 비지니스를 변경
   ㅤ→ 2000년에는 광고수익이 68%, 구독이 25%
   ㅤ→ 2020년에는 광고수익이 17%, 구독이 73%
   ㅤ→ 트래픽만 중요시 하는건 구글과 페이스북의 비즈니스를 키워주는 것 일뿐
   ㅤㅤ✓ ""광고는 좋은 품질의 저널리즘 비용을 지불하기엔 절대로 충분하지 못할것이다.""
   ㅤ→ 2011년에 만든 Paywall 이 제대로 Working 했음
   ㅤㅤ✓ 현재 650만명의 가입자, 그중 570만명은 디지털 온리
   ㅤㅤ✓ 출판물 시대 최대치의 4배
   ㅤㅤ✓ 그리고 매년 20% 이상의 견조한 증가세를 보이고 있음. 2020년 기준 신규 구독자 120만명
   ㅤ→ 단순히 Paywall 을 만들었다고 가능한 것이 아님 : 이를 위한 Infra 를 구축해야함
   ㅤㅤ✓ 고객이 제품에 engaging 하는 방식을 알고
   ㅤㅤ✓ Churn / Retention 을 분석하고
   ㅤㅤ✓ 서로 다른 코호트로 고객들을 세분화
   ㅤㅤ✓ 뉴스레터, 소셜미디어, 푸시 알림들을 통해서 사용자를 Re-engage
   ㅤㅤ✓ 제품 및 가격의 변동을 통해서 실험
   ㅤ→ 이 모든건 기술에 투자했기 때문에 가능했던 것
   ㅤ→ Netflix, Spotify, Tinder, Hulu 등의 전략과 디지털 노하우를 적용함으로써 성공적인 Subscription-First 회사로 자신들을 리메이크→ 더 나은 저널리즘 → 더 많은 구독자 → 더 많은 수익 → 더 나은 제품 → 더 나은 저널리즘
   - NYT 의 콘텐츠는 Netflix,Spotify 의 콘텐츠보다도 비용은 적고 매출은 더 많이 나는 저비용 구조
   - 하지만 NYT 는 Netflix,Spotify 와 달리 뚜렷한 경쟁자가 없음. (2위 WSJ , 3위 워싱턴 포스트 및 하위 250개 로컬 신문의 모든 구독자 합보다도 많음 )
   - 2019년에 세운 NYT의 목표는 2025년 1000만 구독자인데 올해 벌써 2/3를 달성
   ㅤ→ 이는 NYT가 생각하는 대상고객 1억명(영어를 하는 대학교 이상의 학력 소유자)의 10% 수준
   ㅤ→ 하지만 점점 해외판을 만들어서 이를 확장 중
   ㅤ→ 그러면 3천만 구독자 까지도 가능할 것
   ㅤ→ 디지털 콘텐츠의 특성상 수익률은 더 올라갈 것

   이 슬라이드의 내용을 설명하는 유튜브 영상을 찍어봤습니다.
   167페이지를 48분동안 빠르게 읽으면서 설명하고, 추가 내용들을 담아봤습니다.
   https://www.youtube.com/watch?v=K2qiAFTzDLU

   언론사 언저리에 있는 근로자로써 .. 매우 공감되는 내용입니다.
   (읽으면서 현타 옴)
   감사합니다.

   종이를 모니터로 옮겼을 뿐인 국내외 레거시 미디어들과 비교되내요.

   그냥 옮기기만 했으면 차라리 나았을지도 모르겠습니다. 쓰래기 같은 음란성 낚시 광고랑 온갖 레거시들을 보다보면 한숨 이상으로 나오지도 않더라고요.
   거기에 지쳐서 아예 Plain Text인 페이지들도 좋아하게 되었습니다.

   이 기사 생각나는군요. 근데 이 기사 조차도 뉴욕타임스군요
   Why the Success of The New York Times May Be Bad News for Journalism - The New York Times https://nyti.ms/36jT60G

   참 멋진 회사네요. 우리나라에도 이런 게 가능하면 좋겠지만...

   노혜령 <가짜뉴스 경제학> 추천합니다. 뉴스 비즈니스가 겪어온 과정을 알 수 있고 뉴욕타임즈의 노력과 성과 이야기도 들어있습니다. https://book.naver.com/bookdb/book_detail.nhn?bid=16394823

   추천 감사합니다! 잘 볼게요.

   뉴욕타임즈 CTO의 4년 회고 https://news.hada.io/topic?id=2016
   뉴욕타임즈가 뉴스룸 워크플로우를 개선하기위해 CMS를 설계한 방법 https://news.hada.io/topic?id=973
   뉴욕타임즈, 광고용 써드파티 데이터를 사용하지 않기로 https://news.hada.io/topic?id=2147

   관련 기사 추천 감사합니다! 4년 회고가 교차해서 보기에 좋네요.
   그런데 혹시 Upvote 버튼을 더 크게 하거나, 좀더 누르고 싶게(clickable). 만들 계획은 없으신가요? 댓글 자체가 아직 적긴 하지만, 동시에 Upvote 버튼이 너무 작기도 하고 클릭될 거라는 생각이 거의 안들어 보여서요.
   더불어 관련 링크를 추천하는 기능은 넣을 생각이 없으신가요?

   아 보트는 함 키워보겠습니다 ㅎㅎ
   관련 기사 추천은 여기에 맞게 도입하려고 합니다. 조금 기다려주세요!

   믿고 보는 xguru 봇(사실은 사람)의 연관 기사 추천인데 말이지용... ^^;
"
"https://news.hada.io/topic?id=3201","링크드인, 지난 2년간 광고금액을 잘못 받아왔다고 밝혀","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     링크드인, 지난 2년간 광고금액을 잘못 받아왔다고 밝혀

   - 기술팀이 비디오 광고 노출 및 조회 관련해서 2개의 지표 측정 오류를 찾음
   - 40만명의 광고주들에게 2년간 발생. 이중 90% 이상이 약 $25 이하의 금액을 더 냈다고.
   - 각 계정에 해당 금액만큼 크레딧을 다시 넣어 주는 작업중이라고 공식 발표

   여러가지 생각이 드는 발표네요. 과연 국내에서 이런 일이 발생했다면... ?
   국내에선 그냥 모른체 넘어가는 일이 많았을꺼 라고 생각이 드는데요.
   미국은 저게 혹시나 밝혀지면 역풍이 훨씬 크니 공개했을꺼라고 생각이 듭니다.
   집단 소송제와 징벌적 손해배상 관련해서 두들겨 맞은 사례가 많으니까요.
   이 측정 오류의 정확한 내용은
   ""iOS 기기에서 비디오 광고 도중에 사용자가 핸드폰을 옆으로 돌렸을 경우, 조회수가 추가로 잡히는 것"" 이라고 하네요.
   https://twitter.com/MattNavarra/status/1326808219143073796

   그러게요. 알게된 직원들도 있는데 내부 고발이 있을 수도 있고하니 영원히 없던 일로 하긴 힘들겠네요.
"
"https://news.hada.io/topic?id=3170","Lando - 로컬 개발환경 및 DevOps 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Lando - 로컬 개발환경 및 DevOps 도구

   - Docker 기반으로 윈/맥/리눅스 로컬에 개발환경을 편하게 셋업하고 어디든 배포가능
   - Docker-Compose 와 비슷하지만 슈퍼셋
   ㅤ→ 다양한 Recipe/Service 와 기본 설정값등을 제공, 좀 더 쓰기 쉬움
   ㅤ→ 프록시 설정, SSL, SSH키, 컨테이너간 네트워킹, CI, 파일 공유 등을 알아서 처리
   ㅤ→ 도커 콤포즈와 비슷한 레벨로 커스터마이징 가능
   - Recipes : Wordpress, LAMP, MEAN, Laravel, Joomla, Drupal, Backdrop 등
   - Services : Apache, DotNet, ElasticSearch, MariaDB/MySQL , Memcached, MongoDB, MSSQL, nginx, Node, PHP, Postgres, Python, Redis, Solr, Tomcat, Varnish 등

   사실 Docker-compose 가 거의 De facto 이긴 합니다만,
   어찌 보면 더 간단하게 개발환경 셋업이 가능하다는 점에서 알아두시면 좋을 것 같습니다.
   Lando 와 Docker Compose 비교
   https://docs.lando.dev/basics/#what-is-it-good-for
"
"https://news.hada.io/topic?id=3223","k0s - 설정이 거의 필요없는 초 간단 쿠버네티스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      k0s - 설정이 거의 필요없는 초 간단 쿠버네티스

   - OS 의존성 없는 싱글 바이너리 패키지
   - Self hosted, isolated control plane
   - 커스텀 컨테이너 런타임 지원(기본은 containerd)
   - 커스텀 Container Network Interface(CNI) 플러그인 지원(기본은 calico)
   - x86_64, arm64 지원
   > curl -sSLf get.k0s.sh | sh
   > k0s server --enable-worker
   두개 명령 만으로 실행 가능

   pivotal kubernetes 에 앱을 배포해본적은 있지만 쿠버네티스 잘 알지는 못하는데요, minikube 도 있고 우분투-캐노니컬에서 하는 쿠버네티스 배포판도 있는 것 같고 여러 가지 쿠버네티스 배포판이 나오는 듯 하네요.
   이게 다 같은 쿠버네티스라고 할 수 있는 건가요? (너무 모르고 막 던지는 질문 같기도 하네요 흐흐)

   Alpine Linux 배포본을 만든 Natanael Copa 도 주요 참여자 여서 기대해 볼만하다는 의견이 있네요.
"
"https://news.hada.io/topic?id=3210","일 잘 하는 개발자는 왜 비즈니스까지 신경쓸까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       일 잘 하는 개발자는 왜 비즈니스까지 신경쓸까?

   - 우리는 고용되었다
   - 왜 개발자들은 좋은 설계를 하려고 하는걸까?
   - 우리는 방망이 깎던 노인이 아니다
   - 비즈니스와 좋은 설계의 균형을 찾아보자
   - 이게 정말 설계를 고민할 가치가 있을까?
   - 튼튼한 설계보다 빠른 개발 속도가 중요할 때
   - 지워야 하는 기능을 만들 때도 있다
   ""개발자가 좋은 설계와 기술 부채 청산을 중요하게 생각하는 만큼 디자이너는 UI/UX를 중요하게 생각하며 CEO는 경영을 중요하게 생각한다. 그리고 결정적으로 유저는 자신이 이 서비스를 사용하며 느끼는 경험들만 중요하게 생각한다.
   이렇게 모두 다 각자 중요하게 생각하는 가치가 다르기 때문에 개발자로써 어플리케이션만 생각하는 좁은 시야를 가지면 안 된다는 것을 이 포스팅을 통해 이야기하고 싶었다.""

   좋은 글 감사합니다~
"
"https://news.hada.io/topic?id=3189","InfluxDB IOx 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            InfluxDB IOx 공개

   - IOx(Iron Oxide, 산화철 → 녹 → Rust)
   - Rust 와 Apache Arrow, Columnar DB 기반 차세대 시계열 데이터 저장소
   - 기존에 Go로 작성된 InfluxDB 2.x 는 그대로 개발 진행하며, IOx 를 저장소로 선택 가능
   - IOx 는 SQL, InfluxQL, 및 Flux 지원
   - MIT & Apache 2 라이센스
   결과적으로는, InfluxDB 가 좀 더 일반적인 분석작업에도 적합하게 확장하여 Snowflake 나 RedShift 등과도 기능이 겹쳐지게 되는 것

   TimescaleDB 2.0 공개 https://news.hada.io/topic?id=3112
   TimescaleDB 와 함께 오픈소스 시계열 DB중에서는 가장 많이 얘기되는 프로젝트인데
   뒷단이긴 하지만 Go 에서 Rust 로 옮겨 가는 군요.
   TimescaleDB vs. InfluxDB
   https://blog.timescale.com/blog/…

   이렇게 유사한 토픽이랑 연결해주시는 거 너무 좋네요. 인간지능을 기반으로 한 추천 시스템 덕분에 많이 배웁니다.

   우왕 고맙습니다 ㅎㅎ

   +1
"
"https://news.hada.io/topic?id=3216","GitHub Pages URL Shortener","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GitHub Pages URL Shortener

   - 깃헙 페이지와 이슈를 이용한 단축 URL 생성기
   1. 단축 URL을 생성하려면 URL을 제목으로 이슈를 생성
   2. 이슈 번호가 단축 URL이 됨
   - CNAME으로 gh-pages 에 자신의 도메인 연결
   - 실제로는 404.html 이 모든 redirection을 처리

   아이디어 좋네요.

   음 이거 GitHub Issues 를 어뷰징 하는 느낌이긴 한데, 이런식으로 처리할 수 있다는 시도가 재미나네요.
   비슷하게 GitHub Actions 를 이용한 URL Shortener 도 있습니다.
   https://github.com/wesleytodd/short
"
"https://news.hada.io/topic?id=3145","Presenta Lib - 웹 프리젠테이션 JS 라이브러리 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Presenta Lib - 웹 프리젠테이션 JS 라이브러리

   - 훌륭한 웹용 슬라이드를 만들어주는 라이브러리
   - 사용하기 쉬운 설정 객체, 자동화
   - Scene 단위로 내부의 블록들을 편집
   ㅤ→ 블록 : 마크다운, 이미지, 비디오, 임베딩(프레임), 그룹(블록을 여러개 합치기) 등
   - 마크다운 to 슬라이드 에디터로 실시간 편집 지원
   - 트랜지션 : hSlide,vSlide,fadeIn,SlideOver
   - 플러그인 : 유튜브, ChartJS, HighlightJS(코드 구문 강조), Swiper(터치 제스쳐), Console Notes(발표자 노트)
"
"https://news.hada.io/topic?id=3108","Vespa vs. ElasticSearch ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Vespa vs. ElasticSearch

   - OkCupid가 오픈소스 검색엔진으로 Vespa를 선택한 이유
   - 데이팅 추천상대를 실시간 랭킹에 따라 바꿔야 하는데, 기존의 매칭시스템은 계속 바뀌는 사용자의 상태를 빠르게 반영이 어려움
   - ElasticSearch는 인메모리 부분 업데이트에 대한 지원이 없음
   ㅤ→ 문서는 대부분 정적이지만, 사용자의 정보(좋아요,사람과의 연결/패스,메시징)은 동적으로 계속 바뀜
   - Vespa : 빅데이타를 위한 오픈소스 검색엔진 ( 데이터 분석보다는 서빙하는 목적으로 최적화 )
   ㅤ→ 전체 문서를 재인덱싱할 필요없이 인메모리 부분 업데이트 지원 (노드당 1초에 40~50K 업데이트 가능 )
   ㅤ→ 유연한 랭킹 프레임워크를 재공해서 질의할때 처리가능
   ㅤ→ TensorFlow 등의 머신러닝 모델과 직접 연동
   ㅤ→ REST 호출시 YQL(Yahoo Query Language) 를 사용한 질의 가능
   ㅤ→ Java 컴포넌트를 이용해서 로직 커스터마이즈 가능
   ㅤ→ 확장성에 있어서는 샤드에 대한 생각을 할 필요가 없음. 노드를 추가/제거할때마다 데이터가 자동으로 복구되고 복제본에서 재배포됨
   - Vespa가 OkCupid 의 내부에 더 잘맞음
   ㅤ→ OkCupid 는 사용자에 대한 다양한 정보를 통합해서 사람을 매칭
   ㅤ→ 필터와 정렬기준이 각각 100개가 넘으며 계속 추가므로 이런 워크플로우 지원에 Vespa가 적합
   ㅤ→ 데이터 쓰기 및 쿼리도 기존 매칭시스템과 유사
   ㅤ→ 랭킹 프렘임워크가 훨씬 유연하고 직관적임
   ㅤ→ ElasticSearch 의 이상한 쿼리구조 보다, YQL의 표현능력이 더 우수
   ㅤ→ 자동 데이터 배포 기능이 작은 팀에 적합

   Vespa 의 역사 및 가치에 대한 한국어 소개 글

   오픈소스 Yahoo Vespa https://web.archive.org/web/20210922122357/…
   ( 2023년 현재, 블로그가 사라져서 웨이백머신 링크로 교체해 둡니다 )

   ""Vespa는 오토바이 브랜드명이기도 하지만 Vertical Search Plaform의 약어""
   ""Yahoo가 가진 핵심 기술 중에 절대로 공개하지 않을 것만 같은 것 중에 항상 언급이 되는 것 중에 다섯손가락 안에 꼽히는 것이 Vespa""
   ""Vespa는 검색엔진을 중심으로 둔 통합 콘텐츠 처리 플랫폼의 콤포넌트 셋입니다. 간단히 생각하면 검색엔진이라고 보면 되지만 일반적인 Solr이나 Elastic과 같은 검색엔진 보다는 주변에 가진 부속 컴포넌트들이 훨씬 더 많습니다.""

   글이 굉장히 긴데, 뒤쪽은 실제로 Vespa를 적용한 OkCupid의 시스템 구조부터 검색쿼리(YQL) 등을 보여주고 있으니 원글을 참고하세요.
   글 마지막에도 내용이 있지만 ElasticSearch가 훨씬 더 많이 쓰이고 있고, Vespa는 아직 커뮤니키가 크지 않은게 단점이구요.
   근데 여기서 보이는 것처럼 계속적으로 바뀌어야 하는 검색에 있어서는 Vespa도 훌륭한 대안이 될 수 있을듯 합니다.
   데이트 상대 매칭을 예로 들었지만, 이커머스 검색들도 요즘은 실시간으로 바뀌어야 좋은 결과를 줄 수 있을테니까요.
"
"https://news.hada.io/topic?id=3188","22120 - 인터넷 오프라인 아카이빙 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        22120 - 인터넷 오프라인 아카이빙 도구

   - 크롬 브라우저가 방문한 모든 웹페이지를 오프라인에 저장해주는 도구
   - localhost:22120 으로 들어가서 브라우징 가능
   - 윈도우/맥/리눅스 지원
   - 크롬의 DevTools 프로토콜을 이용해서 전송되는 웹페이지 내용을 캡쳐
   ㅤ→ WARC/MHTML 같은게 아닌 거의 원본 형태로 JSON으로 묶어서 하드에 모두 저장
   ㅤ→ 오디오/비디오/웹소켓 데이터는 저장 안됨
   ㅤ→ 특정 도메인 저장 차단 가능
   - 전문 검색 기능 및 아카이브를 외부에 공유하는 라이브러리 서버 추가 개발 예정

   저는 SingleFile ( https://news.hada.io/topic?id=390 ) 많이 사용하고 있는데 자동으로 저장해준다면 싱글파일을 대체할 수 있으려나요... 요새는 이미지가 많이 들어가는 경우가 많아서인지 저장된 파일 크기가 그리 작지는 않던데 어떨런지 모르겠네요.

   Memex( https://news.hada.io/topic?id=762 )보다 더 많은 데이터를 저장하는 모양이군요.
"
"https://news.hada.io/topic?id=3169","공개 Repo에 시크릿Key를 업로드하면 생기는 일","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      공개 Repo에 시크릿Key를 업로드하면 생기는 일

   GitHub과 GitLab에 실제로 실험해본 결과를 시간 순 정리
   1. AWS 키를 깃헙에 커밋
   2. 7분후, GitGuardian 으로부터 유출 경보
   3. 11분후, 토큰 손상(compromised, 유출되어 더 이상 안전하지 않음)
   4. 2시간동안 독일/네덜란드/영국/우크라이나 등에서 5개의 접근 알림
   5. GitHub가 취약 종속성(Vulnerable Dependencies) 알림 경고메일을 보내줌
   1. 깃랩에 커밋
   2. 62분후 처음이자 마지막으로 토큰이 프랑스에서 사용됨
   3. GitLab 에서는 아무런 보안경고를 받지 않음( Gold/Ultimate 사용자에게만 보안알림 제공)
   교훈들
   0. GitLab 보다 GitHub 을 스캔하는 곳이 더 많다
   1. GitHub 을 사용중이라면 GitGuardian 서비스를 한번 살펴 볼 것
   2. GitLab 을 사용중이라면 Gold/Ultimate 업그레이드를 고려
   3. 유출을 사전에 막으려면 Talisman (Pre-Commit Hook)을 이용할 것
   4. 유출되었는지 사후에 확인하는건 GitLeaks 를 도입 고려

   부끄럽지만 저도 키를 깃헙 저장소에 올린 적이 있는데, AWS 에서 연락이 오더라고요. 정해진 기한 내에 조치하지 않으면 키를 비활성화 시킬거니까 빨리 키를 변경하고, 해당 계정의 비번도 변경하는 등의 조치를 안내하더라고요.

   그거 다 한번쯤은 겪어 보는거 아닌가요... ㅎㅎㅎ

   GitGuardian : https://www.gitguardian.com/
   Talisman : https://github.com/thoughtworks/talisman/
   GitLeaks : https://github.com/zricethezav/gitleaks
"
"https://news.hada.io/topic?id=3123","notion-py, python으로 된 notion의 비공식 API.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 notion-py, python으로 된 notion의 비공식 API.

   Python으로 되어있는 Notion의 비공식 API 라이브러리입니다. 기본적인 Page부터 Collection까지 다룰 수 있으며, 다만 비공식 API이기 때문에 인증 토큰은 사용자가 Notion 웹 접속을 통해 들어간 후, 쿠키에 있는 token_v2를 가져와서 직접 넣어줘야 합니다.
   CRDT가 모두 지원되기에 통계를 내거나, 주기적으로 문서를 갱신하거나 혹은 아예 새로운 클라이언트를 만들 때 유용할 것 같습니다.

   11월 중으로 Notion 공식 API 비공개 베타를 진행한다는 소식도 있습니다.
   https://twitter.com/NotionHQ/status/1322257662386401280

   오오오. 기대되네요 . 지금 하루에 한번씩 만드는 문서도 좀 있고, 한 달마다 자동으로 추가하면 편할 법한 문서들도 몇개 있는데. Notion API와 연동한 다음 라즈베리 파이에서 간단하게 Cron이나 다른 것들로 자동 관리가 될 것 같습니다.
   공개 API면 언어의 폭도 조금 더 넓어지겠네요. 재미있는 것들이 많이 나올 것 같아요.

   공개 -> 공식

   https://github.com/ffdd270/notion_tag_statistics
   제가 하나 만들어봤는데, Notion에 태그가 몇개 있는지 알려주는 기능이 없어서 간단하게 짜봤습니다. 이런 단순한 기능은 python으로 70줄 내외로 짤 수 있어서 도움이 많이 될 것 같네요.
   notion-go도 있는데, golang으로 되어있습니다. golang은.. brace를 강제로 맞춰줘야해서 제 스타일은 아니라 패스했습니다. python은 이번에 처음 써보는 데 맥가이버 칼 같네요.
"
"https://news.hada.io/topic?id=3183","삶을 편하게 해주는 Git 팁 들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           삶을 편하게 해주는 Git 팁 들

   오타 자동 교정 $ git config --global help.autocorrect 1
   커밋 세기 $ git rev-list --count
   Repo 최적화 $ git gc --prune=now --aggressive
   추적제외 파일 백업하기 $ git ls-files --others --exclude-standard -z | xargs -0 tar rvf ~/backup-untracked.zip
   다른 브랜치 파일 보기 $ git show main:README.md
   Git 검색하기 $ git rev-list --all | xargs git grep -F ‘’
   .git 폴더 이해하기
   ㅤ$ cat .git/HEAD
   ㅤ$ cat .git/description
"
"https://news.hada.io/topic?id=3165","유튜브를 '읽는' 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              유튜브를 '읽는' 방법

   - Youtube에서 자막을 추출해서 읽기 좋은 텍스트로 만드는 팁
   > youtube-dl --output ""captions.%(ext)s"" --write-auto-sub --skip-download [비디오링크]
   > sed '/-->/d' captions.en.vtt | sed '//d' | sed '/^[[:space:]]*$/d' | uniq > captions.txt
"
"https://news.hada.io/topic?id=3198","macOS Big Sur 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            macOS Big Sur 출시

   - M1 칩을 위한 설계
   - 새로운 디자인
   - 애플실리콘 전환을 위한 개발자 도구
   ㅤ→ 유니버설 2 앱 바이너리
   ㅤ→ Rosetta 2
   ㅤ→ iPhone/iPad 앱이 추가작업없이 실행 가능
   - Safari / Mac App Store 개인 정보 보호 강화
   - 메시지 앱 : 즐겨찾기,미모티콘,그룹메시징
   - 재설계된 지도앱

   맥의 사파리가 많이 개선되어서
   - 크롬보다 배터리 효율이 훨씬 좋고
   - 탭 정렬이 크롬처럼 바뀜
   - 개발자 도구가 쓸만해짐
   - WebExtensions 표준 지원
   등이 좋아졌다고 하네요.
   저도 그냥 관성때문에 크롬을 쓰는데.. 맥에서는 사파리로 바꿔야 할거 같다는 생각이 듭니다.
"
"https://news.hada.io/topic?id=3134","Raspberry Pi 400 : $70 짜리 데스크탑 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Raspberry Pi 400 : $70 짜리 데스크탑 공개

   - 79-Key 키보드에 Pi 4를 장착한 키보드 사이즈 데스크탑
   - 쿼드코어 ARM v8 64bit, 4GB LPDDR4
   - 듀얼 디스플레이(micro HDMI X 2)
   - 기가빗 이더넷,802.11b/g/n/ac, 블루투스5
   - USB 3.0 2개 , USB 2.0 1개
   - 40-pin GPIO, MicroSD
   - $100 키트 : 16GB microSD, 공식 마우스 와 USB-C 전원어댑터, micro-HDMI to HDMI 케이블, 라즈베리파이 초보자용 책 포함

   프리뷰 한 사용자의 상세 분해 및 벤치마크 글
   https://jeffgeerling.com/blog/2020/…
"
"https://news.hada.io/topic?id=3125","minimap.vim - 미니맵 기능을 제공하는 Vim/Neovim 플러그인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               minimap.vim - 미니맵 기능을 제공하는 Vim/Neovim 플러그인

   * Vim v8.2+나 Neovim v0.5+ (현재 Nightly)를 지원
   * 유니코드 점자문자를 활용
   * 미니맵 렌더링은 Rust로 작성한 프로그램 code-minimap ( https://github.com/wfxr/code-minimap )이 담당
   Sublime Text나 VSCode 등 요즘 코드에디터에 있는 미니맵 기능을 Vim이나 Neovim에서 쓸 수 있도록 한 플러그인입니다. 이전에 다른사람이 파이썬을 활용하여 작성한게 있는데, 이건 러스트를 도입하여 더 나은 성능을 보여줍니다.
"
"https://news.hada.io/topic?id=3133","Microsoft Clarity, 무료 사용자 행동 분석 도구 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Microsoft Clarity, 무료 사용자 행동 분석 도구 공개

   빠른 로딩에, 트래픽 제한도 없는 무료 도구. GDPR 준수
   - Heatmap : 클릭/스크롤을 추적해서 페이지위에 시각화
   - Session Playback : 방문을 단계별로 추적해서 스크롤,클릭까지 모두 재생가능
   - Insight Dashboard : 사용자 행동에 대한 다양한 통계를 제공
   ㅤ→ Dead Click : 사용자들이 클릭 가능한거 같아서 클릭하지만 동작하지 않는 부분들
   ㅤ→ Excessive Scrolling : 원하는 자료를 찾기위해 위아래로 스크롤한 숫자

   GA 같은 무료 서비스인거죠? 갑자기 무슨 바람이 불어서 MS 가 이런 걸 하는걸까요...

   구글 GA와 비슷한 목적일것 같습니다.
   빙 검색엔진을 통한 광고 비즈니스 강화가 이어질거 같아요.

   기능은 꽤 좋네요. 웹사이트에 Google Analytics 랑 같이 거의 필수 설치해야하는 분석도구로 자리잡을지도.

   Clarity 설치해봤는데, GA 와 연동하는 옵션도 가지고 있습니다.
   연동하면 ""Clarity Playback URI"" 라는 커스텀디멘젼이 생기고 Clarity가 GA쪽으로 데이터를 넣어줍니다.
"
"https://news.hada.io/topic?id=3104","Google Appsheet, 구글 Workspace의 공식 No-Code 개발도구로 포함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Google Appsheet, 구글 Workspace의 공식 No-Code 개발도구로 포함

   - 올해초 인수한 AppSheet은 코드 작성없이 모바일 대응 앱을 개발하는 플랫폼
   - 구글 Sheets/Docs/Forms, Drive, Meet, 캘린더, 지도등과 통합하여 프로세스를 자동화
   - 구글/Office365/Salesforce 등의 인증 연동 가능
   - 다양한 액션,워크플로우,보고서 및 이메일/SMS/푸쉬 알림 지원
   - 사진캡쳐,위치기록,바코드스캔,사인받기 등의 기능도 제공
   - 산업분야/용도별 다양한 샘플 앱 제공(약 88+개)

   구글 클라우드의 소개글 링크는 https://blog.google/products/google-cloud/…
   비슷하지만 다른 Tables 도 있습니다. 얘는 구글 Suite 제품군은 또 아니어서..
   구글, 워크 트래킹 도구 Tables 발표 https://news.hada.io/topic?id=2894
"
"https://news.hada.io/topic?id=3158","wtfjs - 재미나고 이상한 JS예제 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        wtfjs - 재미나고 이상한 JS예제 모음

   JavaScript 언어 특성에 기초한 설명까지 같이 봐야 이해가 되는 것들 55개
   [] == ![]; 참
   true == []; 거짓
   true == ![]; 거짓
   false == []; 참
   false == ![]; 참
   !!""false"" == !!""true""; 참
   !!""false"" === !!""true""; 참
   ""b"" + ""a"" + +""a"" + ""a""; // -> 'baNaNa'
   NaN === NaN; 거짓
   !![] 참
   [] == true 거짓
   !!null; 거짓
   null == false; 거짓
"
"https://news.hada.io/topic?id=3142","Adobe XD for VS Code","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Adobe XD for VS Code

   - 어도비가 직접 만든 VSCode용 XD 확장
   - Design System Package(DSP)를 VSCode에 프리뷰 & 사용 가능
   - DSP를 VSCode내에서 바로 생성 가능
   ㅤ→ 문서,디자인토큰,컴포넌트 생성 및 편집 지원
   ㅤ→ Creative Cloud Library 를 통해서 컴포넌트들은 임포트 가능

   Design System 은 개발자와의 협업이 정말 중요한데, 이걸 정확히 캐치한 확장이네요.
   경쟁제품인 Figma 의 VSCode 확장은 개인이 만들어서 1년넘게 업데이트가 없는데, Adobe 는 직접 만드니 좀 더 지원이 강력할듯 합니다.
   Figma x VS Code https://marketplace.visualstudio.com/items?itemName=idered.figma
"
"https://news.hada.io/topic?id=3129","좋은 PM을 위한 MVP 프라이머 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           좋은 PM을 위한 MVP 프라이머

   1. Minimum Viable Product의 목적 : 고객과 시장을 빨리 이해하자
   2. MVP의 핵심 개념
   - 'Miminum-최소한'의 기능세트가 아닌 '핵심가치'
   - 학습목적으로만 'viable-실행가능, 생존가능'
   - 'Product-제품/서비스' 가 아니라 '실험/경험'
   3. 좋은 MVP를 만드는 방법
   - 정확한 개념에 집중
   - 핵심가치 전달이 최우선
"
"https://news.hada.io/topic?id=3208","MS 윈도우 터미널 프리뷰 1.5 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         MS 윈도우 터미널 프리뷰 1.5 릴리즈

   - Ctrl + Click 으로 하이퍼 링크 열기 지원
   - BEL 문자 지원
   - Profile Icon Emoji 지원
   - 탭스위처 mru | inOrder 설정 추가
   - 데스크탑 바탕화면 이미지를 터미널 배경화면으로 설정 가능
   - 포커스 모드 추가 : 탭/타이틀바 없이 터미널 실행
   명령 팔레트 개선
   - VS Code처럼 "">"" 액션모드 지원
   - 중첩 메뉴에서 Back 버튼 추가
   - 검색결과 굵은 글씨로 강조

   VS Code 터미널처럼 Windows Terminal에서도 font fallback 기능이 빨리 지원되었으면 좋겠네요. 아직 구현은 안 된 모양이던데…

   일단 제가 설치해 보았습니다!
"
"https://news.hada.io/topic?id=3131","Create-React-App 4.0 릴리즈 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Create-React-App 4.0 릴리즈

   - Fast Refresh : 핫 리로딩용 react-hot-loader 를 대체하는 react-refresh 지원
   - React 17 지원 (New JSX transform)
   - TypeScript 4 지원
   - ESLint 7
   - Jest 26
   - PWS/workbox 향상
   - Web Vitals 지원
"
"https://news.hada.io/topic?id=3192","자동 업데이트 되는 NYT 첫페이지를 벽에 걸기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       자동 업데이트 되는 NYT 첫페이지를 벽에 걸기

   - Visionect의 32인치 E-Ink 디스플레이를 벽에 설치
   - 매일 공개되는 뉴욕타임스의 프론트페이지 PDF 버전을 JPG로 변환해서 HTML에 삽입 (PHP코드 포함)
   - 기기에서 클라우드 기반 CMS를 제공하여 아무 웹페이지나 로딩 가능
   - 하루에 한번씩 업데이트 하는 경우 약 1년정도 배터리로 동작 가능

   해리포터 예언자 일보가 생각나내요.

   대형 E-ink 스크린이 생긴게 넘 이뻐서 우와! 했는데.. 가격보니 으어! 하게 되는군요. (2300유로, 300만원)
   https://www.visionect.com/shop/place-play-32/

   근데 CSS Grid: Newspaper Layout https://codepen.io/oliviale/full/BaoXOOP
   이런거로 긱뉴스 원페이지 에디션을 만들어서 벽에 걸어보고 싶다는 생각이 드네요..

   너무 예뻐서 300만원 가격은 하는 것 같습니다 ㅋㅋㅋㅋㅋㅋㅋㅋ 우와.. 자동으로 바뀌는 신문같은 느낌이라서 정말 마법같을 것 같아요.

   우와.. 예쁘긴 진짜 예쁘네요.
"
"https://news.hada.io/topic?id=3110","Pyston v2 - 20% 빠른 파이썬","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Pyston v2 - 20% 빠른 파이썬

   - Python 3.8 대비 20% 정도 빠른 파이썬 호환 구현체
   ㅤ→ DynASM을 이용한 아주 적은 오버헤드 JIT 및 여러 최적화 적용
   ㅤ→ django 및 flask 등을 이용해서 벤치마크
   - 원래 드롭박스에서 개발했던 v1 은 오픈소스지만, 아예 새로 구현한 v2는 아직 클로즈드(차후에 오픈예정)
   - Ubuntu 18/20 용 패키지 제공
"
"https://news.hada.io/topic?id=3113","teler - 실시간 HTTP 침입 탐지 오픈소스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      teler - 실시간 HTTP 침입 탐지 오픈소스

   - 웹서버등의 로그 분석을 통해서 위협을 탐지하는 터미널 도구
   - Apache,Nginx,S3,ELB,CloudFront 로그등에 적용 가능
   - 기본 탐지
   ㅤ→ 일반 Web Attack
   ㅤ→ Bad IP Address / Referer / Crawler
   ㅤ→ Directory Bruteforce
   - 알림 기능
   ㅤ→ Slack / Telegram / Discord(예정)
"
"https://news.hada.io/topic?id=3115","Insider가 Morning Brew 뉴스레터를 850억원에 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Insider가 Morning Brew 뉴스레터를 850억원에 인수

   - 공동창업자 및 60명의 직원과 서비스는 그대로 유지
   - 연매출 240억원, 70억원정도의 수익이 나는 회사로 2018년 이후로 계속 흑자
   - 5개의 이메일 뉴스레터를 서비스하며 총 300만명의 구독자를 보유
   ㅤ→ Morning Brew : 일반 비즈니스 관련 250만명 구독자
   ㅤ→ Retail, Emerging Tech, Marketing 및 Essentials(라이프 스타일)
   ㅤ→ 주 2~3회 발행, 구독자들 평균 연령은 29세
   - 공동창업자들은 27/26세로 2017년에 서비스를 시작

   이 뉴스레터 초창기에 가입해서 보는 중이었는데, 사용자나 매출이 이 정도일 줄은 몰랐네요. 직원 수도 60명이었다니... 긱뉴스도 언젠가는?

   ㅎㅎ 고맙습니다. 그러기엔 긱뉴스는 너무 긱해서 ^^;

   Insider 는 Business Insider 의 모회사 입니다.
   이메일 뉴스레터가 이정도 가치를 가진다는건 요즘 뜨고 있는 이메일구독 서비스의 미래가 밝다는 의미인듯
   국내에도 점점 이메일 뉴스레터들이 많아 지던데, 이런 사례들이 충분히 나올만 한듯 합니다.
"
"https://news.hada.io/topic?id=3117","eBPF Summit Recap","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           eBPF Summit Recap

   - 2일간 온라인 진행된 eBPF 서밋의 모든 발표 정리
   - 약 3시간 분량짜리 비디오 2개
   - 키노트 : A Beginner’s Guide to eBPF Programming
   - 5분짜리 라이트닝 토크가 27개인데 Adobe,MS,Arm,Facebook,Cloudflare,Cisco,Gitlab,Line 등 꽤 많은 회사들에서 발표를 하고 있어서 기업들이 eBPF를 어떤 용도로 실무에 적용하고 있는지를 살펴보기 좋습니다.

   Day 2 Recap https://cilium.io/blog/2020/10/29/ebpf-summit-day-2
   발표 동영상
   - Day 1 : https://www.youtube.com/watch?v=1GSgyvn4N7E
   - Day 2 : https://www.youtube.com/watch?v=jw8tEPP6jwQ
"
"https://news.hada.io/topic?id=3227","트위터, 24시간후 사라지는 메시지 Fleets 정식 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    트위터, 24시간후 사라지는 메시지 Fleets 정식 공개

   - 트윗, 사진, GIF, 비디오를 Fleets에 올릴 수 있음
   ㅤ→ 24시간후 사라짐
   ㅤ→ 리트윗/마음/공개답글 불가
   ㅤ→ 쪽지보내기 및 이모티콘으로 리액션
   ㅤ→ 누가 내 Fleet을 보았는지 확인 가능
   ㅤ→ 배경과 글자 옵션으로 꾸미기 지원
   ㅤ→ Tweet을 Fleet으로 공유할 수 있음
   - 생방송 과 스티커 기능 추가 예정
   - 팔로워들은 홈 타임라인 상단에서 Fleets를 볼수 있음
"
"https://news.hada.io/topic?id=3150","GitHub 소스코드 유출","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             GitHub 소스코드 유출

   - GitHub의 공식 DMCA Repo에 누군가가 GitHub CEO 이름으로 GitHub의 소스코드를 업로드
   ㅤ→ 오픈소스의 핵심이지만 GitHub 자체는 오픈소스가 아닌 것으로 오랫동안 비판 받아왔음
   - 현재는 해당 커밋과 Wayback Machine의 저장본까지 모두 삭제된 상태
   - GitHub CEO가 직접 HN의 이 뉴스 댓글에 상황을 설명
   ㅤ→ 몇달전에 GitHub Enterprise Server 소스코드가 실수로 일부 고객에게 전송되었음
   ㅤ→ github.com 과 코드를 공유함. GitHub 의 대부분 코드는 Ruby
   ㅤ→ 서명되지 않은 커밋은 꼭 확인하시고, repo impersonation 은 곧 더 잘 알아볼수 있게 변경할 예정
   ㅤ→ 현재는 모든 것이 정상임

   GitHub CEO가 직접 작성한 댓글
   https://news.ycombinator.com/item?id=24995121
   물론 사람들은 왜 RIAA 와 DMCA 문제를 해결 안하냐고 비난 댓글을 다는 중.
"
"https://news.hada.io/topic?id=3153","Uno - 싱글 코드로 모든 OS를 지원하는 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Uno - 싱글 코드로 모든 OS를 지원하는 플랫폼

   - .NET, C#과 WinUI 기반의 싱글 코드베이스로 모든 OS 지원
   ㅤ→ iOS/Android/macOS 는 Xamarin Native
   ㅤ→ WebAssembly 는 Mono-WASM
   ㅤ→ Linux 는 Skia
   - Uno 가 WinUI/UWP 앱을 윈도우외의 OS에서 실행하는 브릿지가 되는 구조
   - Pixel-Perfect 한 UI 제공 (모든 플랫폼에서 픽셀단위로 UI가 일치)

   uwp 앱을 다른 플랫폼에서 원래 사용할 수가 있나요?!

   MS 가 자마린도 인수하고, Mono 프로젝트도 흡수(?)해서 크로스플랫폼 지원을 본격적으로 추진한지가 꽤 되었는데, 그에 비하면 C# 언어의 사용율도 그닥 높아지지가 않고...
   사용이 되지 않는 것은 아닌데 그렇다고 인기있는 것도 아닌 애매한 수준이라 아쉽네요.
   써본 개발 환경중에 C#/닷넷이 저는 언어든 환경이든 경험이 제일 좋았거든요. nuget 나온 후 초창기에는 패키지 생태계가 조금 별로이긴 했지만 지금은 나쁘지 않고요.

   Uno platform 쪽에서 오픈소스로 공개되었던 윈도 10 계산기 (C++/CX) 를 C# Uno platform 으로 포팅, 여러 플랫폼에 공개한 바 있습니다.
   Uno calculator라고 검색하면 나올겁니다. (android, iOS, 리눅스 snap store)
   궁금해서 써봤었는데 안드로이드는 좀 느리고, 리눅스는 한글이 안 나옵니다. iOS는 빠르더라구요.

   아직 WASM쪽은 너무 느리고, 용량이 커서 실험적인 수준이라고 하네요.
   오래전에 윈도우개발을 손뗀 입장에서는 .NET 으로 이런걸 생각해본다는게 재미난 시도인듯..
"
"https://news.hada.io/topic?id=3178","ui-devtools - React + TailwindCSS UI 개발툴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ui-devtools - React + TailwindCSS UI 개발툴

   - React + TailwindCSS 환경의 컴포넌트 비주얼 에디터
   - 에디터의 변경사항이 소스코드에 바로 반영됨
   - 후원자에게 우선 공개되는 스폰서웨어 방식으로 배포
   - 후원 목표 달성 시, 오픈소스로 공개

   실시간으로 바뀌는거 좋네요. 저같이 대충 CSS 코딩하는 사람을 위한 도구인듯.
   그런데.. 크롬 개발자 도구가 저렇게 바뀌면 더 좋겠다는 생각이.. ^^;

   지속가능한 오픈소스를 만들기위해 스폰서웨어 방식을 선택한 점이 눈길을 끕니다.
   관련 개발자 트위터 스레드 - https://twitter.com/siddharthkp/status/1324402646762086407
"
"https://news.hada.io/topic?id=3221","Mozilla Servo, Linux Foundation 소속으로 이관","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Mozilla Servo, Linux Foundation 소속으로 이관

   - 모질라 구조조정시 Servo 개발팀도 포함되어 미래가 불투명 했으나, 리눅스재단(LF) 소속으로 모든걸 이관
   - Servo 의 목표는 변화 없음 : 다른 어플리케이션에 임베드 가능한 고성능의 안전한 웹 렌더링 엔진 제공 (Rust 기반)
   - 거버넌스 변화로 기여가 더 쉬워짐. LF의 크라우드펀딩 사이트를 통해서 Servo에 직접 후원 가능
   - 실시간 대화와 토론을 위한 Servo Zulip 오픈

   리눅스재단 화이팅!

   변하는 세상, 변하는 모질라. ( 모질라의 구조조정 소식. ) https://news.hada.io/topic?id=2635
   Mozilla의 불확실한 미래 https://news.hada.io/topic?id=2660
   Rust의 미래를 위한 재단의 토대 마련 https://news.hada.io/topic?id=2675
   Unity 용 Servo 브라우저 플러그인 공개 https://news.hada.io/topic?id=2530
"
"https://news.hada.io/topic?id=3166","faker.js - Node 및 브라우저상에서 가짜 데이터 생성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  faker.js - Node 및 브라우저상에서 가짜 데이터 생성

   - 다양한 가짜 데이터를 서버/브라우저에서 생성해주는 라이브러리
   - 다국어 지원 (ko 포함)
   - 주소, 상품, 회사, 데이터베이스(컬럼,타입), 날짜, 재무, 이미지, 이름, 음악, 자동차, 시스템파일 등
   ㅤ→ 각각 세부 필드별로 상세하게 생성 가능

   생각외로 쓰기 어려운 라이브러리.
   의도한대로 faker js 가 100% 내보낼거라고 가정하지마시고
   쓰시려는 기능의 코드를 뜯어서
   어떻게 돌아가는지 확인하시고 - 깃헙 해당 레퍼지 안에서 검색을
   활용하세요. 로직에 대한 코드는 대부분
   한두줄 밖에 안해서 이해하기 쉽습니다 - 사전에 충분한 테스트를 권장합니다

   만약 node 환경 안써도 되고 단순한 가짜 데이터 생성이 필요하시다면
   faker.js 가 inspire 받았다는 원본 faker-ruby 를 강략히 추천합니다.
   https://github.com/faker-ruby/faker

   https://github.com/marak/Faker.js
   꽤 오래전에 만들어진 프로젝트이군요.
   머신러닝 소스나, DB 부하용 데이터로 사용하기에 좋아보이네요
"
"https://news.hada.io/topic?id=3163","FFmpeg.wasm, a pure WebAssembly","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    FFmpeg.wasm, a pure WebAssembly

   FFmpeg 이 WASM 으로 포팅되었습니다. 지속적으로 개발 되어 오던 버전을 메인테이너 블로그에 소개했습니다. 아직까지는 다른 플랫폼의 FFmpeg 만큼 동작하지 않지만 WASM 을 통해서 웹 환경에서도 동영상 인코딩 등이 가능합니다. 데모는 오피셜 사이트에[1]서 확인 가능 합니다.
   [1]: https://ffmpegwasm.github.io/#demo

   이거 덕분에 이제 브라우저 만으로 편집가능한 영상편집기들이 더 많이 나오게 될거 같아요.
"
"https://news.hada.io/topic?id=3137","예전 ARM 엔지니어의 RISC-V 비판 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         예전 ARM 엔지니어의 RISC-V 비판

   ""RISC-V 는 좀 더 잘 설계될 수 있다""
   - RISC-V ISA Spec v2.0 기준이며 v2.2 으로 약간 업데이트
   - 미니멀리즘을 잘못 추구함
   - 제한없는 확장성이 RISC-V의 목표이지만 이는 단편화되고 호환되지 않는 생태계를 만들수도 있음
   - 나쁜 점들과 안좋게 설계된 점들을 나열
   ㅤ→ 조건 코드 가 없고 비교 및 분기명령만 있다

   데이비드 패터슨(David A. Patterson) 교수는 이 글에 대해 어떤 반응일지 궁금하네요.

   The Bad, The Ugly 에 굉장히 많은 내용이 있는데.. 제가 이쪽이 아니라 이해가 어렵더군요.
   영국의 ARM이 미국 NVidia에 인수되고, 미국의 중국제재가 심해지면서,
   중국이 스위스로 옮겨간 RISC-V 쪽으로 기운다는 얘기가 있는데..
   어떻게 진행될지 유심히 보기는 해야할 듯 합니다.
"
"https://news.hada.io/topic?id=3122","Panic의 맥용 Native IDE, Nova 사용 후기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Panic의 맥용 Native IDE, Nova 사용 후기

   ""48시간 쓰고나니 VS Code는 잊어버렸음""
   - 모든 부분에서 빠름. 파일열기/검색/큰 파일/여러개의 창
   - 멀티라인 편집, 직관적인 자동완성, 코드 힌트
   - Touch Bar 에서 npm script 실행 가능
   - TypeScript, Prettier, ESLint 확장 및 Git 연동
   - 내부 Terminal 과 개발서버
   - S3, Azure, Rackspace 서버 연결 ( SSH,FTP,WebDAV,HTTPS)
   - 서버설정 동기화 가능

   Code가 모든 플렛폼에서 어떤 상황이던 준수한 성능을 뽑아내주는 에디터에, 게다가 오픈 소스 커뮤니티로 유지 보수되고 있는데도 주간 커밋수 자체가 다른 에디터에 비해서 압도적이라. 이런 식으로 부분적인 곳에서 우위를 잡지 않으면 이제 에디터 시장에서 Code를 이기기 힘들지 않을까.. 생각합니다.

   Coda에서 업그레이드 하려고 보니 업데이트 유지 하려면 1년 후 연간 비용이 또 들어가는 군요. 결제 하려다 바로 주저하게 되네요.

   흠.. 전에 출시때도 올렸지만 정작 제가 아주 큰 소스?파일을 여는 일이 없어서 잘 모르겠네요.
   VSCode 가 성능으로 그렇게 문제가 되는거 같지는 않거든요.
   Nova - 맥용 코드 에디터 https://news.hada.io/topic?id=2868

   그렇죠 다른 electron 기반의 제품들을 생각해보면 vscode 는 진짜 최적화를 미친듯이 한 듯한 느낌을 주거든요. 다른 텍스트 에디터들도 백메가 단위의 큰 로그 파일을 못 여는데 vscode 는 멀쩡히 열어주는 걸 보면 대단하지요.
   근데 개발용으로 쓴다면 어떤 플러그인을 쓰느냐가 속도에 영향을 많이 주기는 합니다.
   제가 쓰는 것중엔 vim 플러그인이 제일 무거운 것 같아요.
"
"https://news.hada.io/topic?id=3211","애플 M1칩, x86 에뮬레이션해도 기존 맥보다 빠름 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     애플 M1칩, x86 에뮬레이션해도 기존 맥보다 빠름

   - 새 맥북에어에서 긱벤치를 Rosetta 2로 x86 에뮬레이트 해서 실행
   - 싱글코어 스코어 1313 으로 네이티브 일때 1687 의 78% 성능을 냄
   - 이것만으로도 인텔 i9 iMac(1251), i7 맥북프로13인치 (1240)보다 더 빠른 성능을 보이는 것으로 기록됨

   이렇게 세대가 바뀌는군요.
   데스크탑 라인에서 x86식구들이 진짜 물러나는 날이 오다니...

   Rosetta 2가 정말 훌륭하다는 것이기도 하고, M1칩 성능이 정말 뛰어나다는 얘기네요.
   정말 중요한건 저렇게 더 높은 성능을 보이면서도, 전력은 절반도 안쓴다는 건데(인텔 니네 뭐했니?)
   각종 어플리케이션들이 M1칩에 맞게 컴파일되서 나오면 어찌 될까요.
   거기다 내년에 맥북프로 16인치와 iMac 용으로 M1X(아마도) 칩이 나오면 또 얼마나 빨라질지 기대가 됩니다.
"
"https://news.hada.io/topic?id=3231","RAFT - REST API Fuzz Testinguzz Testing

   - MS가 공개한 Azure 기반의 오픈소스/셀프호스트 테스트 플랫폼
   - FAAS (Fuzzing-As-A-Service)
   ㅤ→ Fuzzing : 자동으로 여러가지 이상한 입력값을 넣어서 블랙박스 테스팅 하는 기법
   ㅤ→ MSR의 RESTler를 연동, Swagger스펙을 통해 API를 테스트
   ㅤ→ OWASP의 ZAP(Zed Attack Proxy, 웹앱 스캐너) 지원
   ㅤ→ RESTler 외의 다양한 Fuzzer를 지원 가능
   - 싱글 커맨드라인으로 CI/CD 와 연동해서 사용가능

   RAFT: How It Works 에 보면 꽤 여러가지 Azure 서비스를 내부에서 사용하고 있어서
   10개의 REST API를 매일 테스트 돌린다면, 월 사용금액은 약 $100 정도 된다고 합니다.
   https://github.com/microsoft/rest-api-fuzz-testing/…
"
"https://news.hada.io/topic?id=3151","무료 Profile Pic Maker","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          무료 Profile Pic Maker

   상반신 사진을 업로드 하면 AI로 인물 뒤의 배경을 지우고,
   몇가지 기본 필터와 자동으로 생성된 수십개의 배경을 입혀서 프로필 사진을 만들어 주는 도구
   - 수십개의 사진중 선택해서 다운로드
   - 사진은 처리후 자동으로 삭제
   - App 도 곧 제공예정
"
"https://news.hada.io/topic?id=3197","구글 웹 마스터 도구, Google Search Central 로 이름 변경 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               구글 웹 마스터 도구, Google Search Central 로 이름 변경

   - 구글 검색에서 웹사이트가 잘 보이게 하도록 도와주는 도구
   - 사용법 문서 들만 서치콘솔 도움말에 남겨두고, 기술적인 내용들은 개발자 사이트로 이관
   ㅤ→ 초급~고급 SEO 내용들 정리
   ㅤ→ SEO 성공 사례 모음
   - 구글봇 마스코트 업그레이드 : 로봇의 친구로 깡충거미(Phidippus종, 점프 하는 거미, 닉네임 미정) 가 추가

   웹마스터라는 단어가 쓰인게 1993년부터였다고 하니 조금 올드해보이긴 했네요.
   개발자들을 위한 문서 사이트로 만들어서 훨씬 보기 좋은듯 합니다. https://developers.google.com/search
"
"https://news.hada.io/topic?id=3205","크롬, 새창 열기시 보안 이슈 해결","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          크롬, 새창 열기시 보안 이슈 해결

   - target=""_blank"" 로 새창 열었을 때, 원본 페이지에 접근 가능한 보안문제 회피를 위해 강제로 rel=""noopener"" 가 적용된 것처럼 동작하게 변경
   - 사파리는 이미 2018년에 적용
   - MS Edge 개발자가 이 기능을 Chromium에 추가해서 Edge/Chrome/Brave 등 모든 브라우저에 적용됨
   - 크롬 Canary 에는 추가되었고 2021년 1월에 나올 크롬 88에서 공식 배포 예정

   기존처럼 새 창에서 부모창에 액세스하려면 a태그에 rel=""opener"" 속성을 추가해야 하는군요.
   유지보수가 안되는 사이트들에서는 해당 기능을 사용하면 문제가 좀 되겠내요.

   개인적으로 부모창과 자식창 간 연동을 위해서 저는 아래와 같이 팝업을 오픈하고 있습니다.
   var childWin = window.open("""", ""childWin"");
   childWin.location.href = ""https://news.hada.io"";
   이렇게 하면 부모창, 자식창 모두 페이지가 바뀌어도 서로 컨트롤이 가능하거든요.
   플레이어를 팝업으로 띄울 때 이렇게 사용하곤 합니다.

   이 이슈는 새 창을 열었을 때 그 새 URL의 자바스크립트가 나쁜맘을 먹으면 오리지널 페이지를 다른 곳(피싱사이트 등)으로 보내버릴수 있는 것입니다.
   사용자가 본문/코멘트 등으로 URL을 등록할 수 있는 사이트에서 발생할 수 있구요.
   이걸 막으려면 지금부터라도 target 사용시 rel=""noopener""를 추가해 주는게 좋습니다.
   * 긱뉴스는 새 창 열기가 아예 없어서 적용하지 않았습니다. ^^;
"
"https://news.hada.io/topic?id=3232","Gumroad, Membership 서비스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Gumroad, Membership 서비스 공개

   - 정기 결제 및 유료 멤버쉽을 지원
   ㅤ→ 뉴스레터, 콘텐츠 라이브러리 구독, 소프트웨어 구독, 유료 커뮤니티 등
   - 멤버쉽 Tier를 하나의 상품처럼 관리 : 가격, 콘텐츠, 워크플로우를 Tier별로 다르게 설정 가능
   ㅤ→ 검로드의 특징중 하나인 Pay-What-You-Want (원하는 만큼만 결제) 기능도 Tier안에서 지원

   Gumroad 는 창작자를 위한 이커머스 솔루션 입니다.
   - 디지털 콘텐츠 판매에 특화되어서 e북(PDF,ePub),아이콘,사진,비디오,온라인 강의,소프트웨어 등을 팔때 쉽게 판매페이지를 만들수 있게 지원
   - 물론 피지컬 굿즈들(티셔츠,핸드메이드,그림) 등의 창작물들 파는 것도 가능
   - 기본은 무료 : 제품 갯수는 제한없지만, 올릴수 있는 글/Workflow(자동화)/스트리밍은 SD까지만 지원하고 수수료가 비쌉니다. 기본 5% + 결제 건당 (3.5% + 30센트)
   - 고급은 고객수 별로 달라서, 1000명 이하는 월 $10, 2천명 이하 $25, 만명 이하 $75 등으로 올라갑니다. 최대 월 $250
   ㅤ→ Gumroad 브랜딩 제거가능, 커스텀 CSS, 자신의 도메인 지원, 글/Workflow 무제한, HD 스트리밍
   ㅤ→ 3.5% + 건당 수수료 30센트
   아래 Gumroad 창업자의 이야기는 제가 긱뉴스를 만들고 싶게한 글이기도 합니다.
   ( 그래서인지 Gumroad 서비스에는 이상한? 애정을 가지고 있습니다 )
   ㅤ→ 1조 회사를 만들다 실패한 경험 이야기 https://news.hada.io/topic?id=2
   iOS14 용 아이콘을 팔았던 디자이너도 Gumroad를 썼고
   ㅤ→ Six Figures in 6 days - 6일만에 1억 벌기 https://news.hada.io/topic?id=2947
   유튜브의 1년 트렌딩 데이터를 크롤링해서 데이터셋으로 파는 사람도 Gumroad를 씁니다.
   ㅤ→ 1년 간의 유튜브 트렌딩 비디오 분석 (US) https://news.hada.io/topic?id=2407

   이쪽은 잘 몰르면서도 왠지 수수료가 비싸다는 느낌이 드네요. 너무 싼 물건을 팔기에는 기본 수수료가 큰건가 싶은 느낌...
   그래서 검색을 해보니 네이버 페이 같은 경우가 신용카드 결제에 대해서는 3% 수수료를 받고 2는 네이버가 1은 신용카드사가 갖는 식인가보네요.
   https://imweb.me/faq?mode=view&category=29&category2=39&idx=28203
   https://biz.chosun.com/site/data/…

   근데 국내에서는 이렇게 디지털콘텐츠 파는 이커머스 솔루션은 잘 없고, 간편결제들도 분쟁이슈가 많아서 잘 안해줘서요. 큰 전자책/웹툰 회사들도 네이버페이 연결 하는데 고생좀 했었던 걸로 알아요.
   게다가 정기결제 같은거는 국내에선 아마 큰 회사 아닌 소규모 사업자나 여기서 말하는 개인 창작자들은 붙이기도 어려울거 같습니다

   Gumroad 창업자 이야기 몰랐는데 알려주셔서 고맙습니다.
"
"https://news.hada.io/topic?id=3217","애플 M1, GeForce GTX 1050 Ti 와 Radeon RX 560 보다 빨라 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            애플 M1, GeForce GTX 1050 Ti 와 Radeon RX 560 보다 빨라

   - M1의 내장 GPU는 2.6 TFLOPS 로 GTX 1650 의 2.9보다 약간 아래
   - GFXBench 5.0(Metal 이용) 테스트 결과, 대부분의 테스트에서 GTX 1050 과 RX 560 두 ""데스크탑"" GPU들보다 더 높은 FPS가 나옴
   - GFXBench 자체가 모바일 기기 테스트용인데다, 1050 과 560이 오래된 GPU긴 하지만
   ㅤ→ 내장 그래픽인 M1칩이 75W짜리 데스크탑 그래픽 카드를 이긴다는 것은 놀라운 결과

   이거 뭔가요 ㅎㅎ 곧 실제 사용기들 올라오면 어떤 반응일지 기대됩니다.
   애플 M1칩, x86 에뮬레이션해도 기존 맥보다 빠름 https://news.hada.io/topic?id=3211
"
"https://news.hada.io/topic?id=3191","애플 M1칩 맥북, 16인치 맥북프로 보다 빨라","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       애플 M1칩 맥북, 16인치 맥북프로 보다 빨라

   긱벤치에 올라온 결과에서
   ㅤ→ 맥북에어(M1) : 싱글코어 1687 , 멀티코어 7433
   ㅤ→ 맥북프로(M1) : 싱글코어 1714 , 멀티코어 6802
   싱글코어는 모든 기존 iOS/맥 기기보다 훌륭 : iMac(i9) 1252 , 맥북프로 16(i7) 1239
   멀티코어에선
   ㅤ→ 맥프로(2013, Xeon) 7015 , 맥북프로 16(i9) 6870 보다 훌륭하거나 비슷
   ㅤ→ 맥프로(2019, Xeon) 7989 , iMac Pro(2017, Xeon) 7994, iMac(2020, i7) 8019 보다는 떨어짐
   M1칩이 들어간 맥북에어,맥북프로는 쿨링시스템이 다르기 때문에 성능차이가 있을 수 있음.
   ㅤ→ 맥북에어는 Fan-less

   오호...
   개발에 사용할때 괜찮을지가.. 궁금하네요..

   Docker for Mac에 이슈가 좀 있어서 좀 고민해봐야 할 것 같습니다.
   https://github.com/docker/for-mac/issues/4733

   초반 댓글에 칩에 가상화 기능이 없다고 해서 헉 했는데, DTK 는 A12Z 기반이라 그런거고 M1칩에는 있나 보군요. 조금 기다려보긴 해야겠네요.

   그러게요 댓글 보니 아이폰 A14 칩에도 가상화 지원이 있다는 얘기가...

   VS Code 의 M1용 빌드가 곧 나온다고 하니.. 당장 웹개발자들에게는 즉시 넘어갈 수 있을듯 합니다.

   To our Mac users 🍎 We've been working on bringing VS Code to devices powered by
   @Apple Silicon, and we're targeting a release for the Insiders channel by the end of November 🔖
   https://twitter.com/code/status/1326237772860981249

   실제로 현재 5개 정도의 벤치가 등록되었는데, 맥북에어가 가장 잘나온건 싱글 1732, 멀티 7545 까지도 나오네요.
   왜 맥북프로가 맥북에어보다 멀티코어가 더 작게 나오는지는 의문입니다.
   https://browser.geekbench.com/v5/cpu/…
   가장 빠른 싱글코어라고 하더니, 정말인가 보네요.
   내년에 나올 16인치 버전이나 아이맥 장비들이 더욱 기대됩니다.
"
"https://news.hada.io/topic?id=3103","Next.js 10 릴리즈 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Next.js 10 릴리즈

   - 자체 이미지 컴포넌트 및 자동 최적화 기능 추가
   - Routing의 i18n 지원 : 서브패스 및 도메인
   - Next.js Analytics 추가 : 지속적인 자체 성능 측정 가능
   - Next.js Commerce : 이커머스 사이트를 위한 All-in-one 스타터 킷
   - React 17 지원
   - getStaticProps, getServerSideProps 편집시 빠른 리프레쉬 지원
   - MDX 콘텐츠 편집시도 빠른 리프레쉬 지원
   - 써드파티 React 컴포넌트의 CSS 임포트 지원
   - href 자동 Resolving
   - @next/codemod CLI 지원
   - getStaticPaths 에 대한 blocking fallback 지원
"
"https://news.hada.io/topic?id=3179","Apple, M1칩 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Apple, M1칩 공개

   맥을 위해 설계된 5나노 SoC
   - 8코어 CPU : 4 고성능 코어, 4 고효율 코어
   - 8코어 GPU : 2.6 TeraFLOPS
   - 16코어 뉴럴엔진
   - Thunderbolt + USB 4
   - ISP,AES,Secure Enclave 등 내장
   - Unified Memory Architecture 로 DRAM 자체를 SoC에 내장
   ㅤ→ High Bandwidth, Low Latency
   ㅤ→ 메모리 풀 간에 복사하지 않아도 되므로 성능과 효율을 개선
   - 전력 소모당 CPU 성능(CPU performance per watt) 극대화
   ㅤ→ 기존 세대 맥보다 최대 3.5배의 CPU성능, 6배의 GPU성능, 15배의 머신러닝 성능을 보이지만 배터리시간은 2배 향상
   - macOS Big Sur 를 M1에 최적화
   ㅤ→ 아이폰/아이패드처럼 슬립모드에서 즉시 깨어남
   ㅤ→ Universal App 및 Rosetta 2 로 기존 앱 실행
   ㅤ→ 아이폰/아이패드 앱이 이제 맥에서 직접 실행됨
   - 앞으로 2년동안 차세대 맥으로 Transition 시작하는 첫 걸음

   애플 한국 페이지 뉴스룸에는 아직 올라오지를 않아서 미국 뉴스룸 링크를 겁니다.
   보통 같이 올라오는데.. 맥은 찬밥인걸까요..

   https://www.apple.com/kr/newsroom/2020/11/apple-unleashes-m1/
   한국 뉴스룸에서도 올라왔어요!

   앗 고맙습니다. 링크 수정해두었습니다!
"
"https://news.hada.io/topic?id=3199","Qwant - 개인 정보를 존중하는 검색엔진 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Qwant - 개인 정보를 존중하는 검색엔진

   - EU(프랑스)에서 만든 검색 엔진
   - 개인정보 보호를 최우선
   - 상업/정치 등에 영향받지 않는 공정한 검색 결과(순위)
   - 모든 결과가 한페이지에 보이는 Panoramic 검색
   - Qwant Junior : 어린이용 검색엔진
   - Qwant Maps : OpenStreetMap 에 기초한 지도 서비스
   - Qwant Music : 음악 검색 엔진

   그런데 이런 검색엔진들은 거의 대부분은 검색 결과를 Bing에 의존하고 있어서 어차피 얘네들도 MS가 개인정보를 수집해서 얻은 정보로 검색 결과를 개선시키면서 개인정보 보호를 그렇게 Feature로 내세울만 한가? 에 대해서 의문이 들긴 합니다.

   한국어 검색도 나름 괜찮습니다.
   /e/ - 구글을 걷어내고 개인정보 보호에 주력한 안드로이드 기반의 OS https://news.hada.io/topic?id=605
   ㅤ→ 기본 검색엔진으로 Qwant 를 이용합니다.
   EU에서 안드로이드 설치시 검색엔진 노출순서, DuckDuckGo가 1위를 차지 https://news.hada.io/topic?id=1289
   ㅤ→ 구글의 검색엔진 순위 경매에도 참여 해서, 몇몇 국가에서는 3위 정도의 자리를 차지하기도 했습니다.
"
"https://news.hada.io/topic?id=3225","Skija - 자바를 위한 Skia 바인딩","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Skija - 자바를 위한 Skia 바인딩

   - 멀티플랫폼 2D 그래픽 라이브러리인 Skia를 Java에서 사용 가능하게 만들어주는 오픈소스
   ㅤ→ Jetbrains가 개발
   - Skia가 성능상 기존 모든 Java 2D 툴킷 보다 훌륭
   ㅤ→ GPU 가속 및 최적화, 오픈타입, 색공간 지원 등
   - 기존 javacpp 등을 이용한 바인딩과 달리 Java-Native API로 손수 개발
   ㅤ→ 자동 메모리 관리
   ㅤ→ 자바 클래스/인터페이스/상속/싱글톤 등을 제대로 활용
   ㅤ→ Getter/Setter 등을 포함, 자바 컨벤션을 지킴
   ㅤ→ Typed Enums
   ㅤ→ Skia/C++ 의 자료형이 아닌 네이티브 자바(Strings, arrays, Streams, Files, Byte Buffers, AutoCloseable)
   - 윈도우/리눅스/맥, Bitmap/OpenGL/Metal/Vulkan(예정)
   - JetBrains Compose가 Skija를 활용중

   JetBrains Compose 가 Skia 를 쓴다고 하더니, 내부에 이런걸 만들어서 쓰는 거였군요.
   - ""JetBrains Compose - 코틀린용 데스크탑 UI 툴킷"" https://news.hada.io/topic?id=3154
   이제 자바로 만든 도구들에도 좀 빠른 그래픽 화면을 볼 수 있게 되려나요 ㅎ

   태깅 기능이 있으면 링크 수동으로 안걸어도 되지 않을까요?

   개발 해주시면 제가 잘 붙여드리겠습니다...?
"
"https://news.hada.io/topic?id=3136","D3 시각화로 만든 Git 컨셉 배우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         D3 시각화로 만든 Git 컨셉 배우기

   - Git 기본 명령들이 어떻게 동작하는지를 D3와 SVG를 이용한 애니메이션으로 설명
   - commit / branch / checkout / reset / revert / merge / rebase / fetch / pull / push / tag
   ㅤ→ 파일을 추가/스테이징 하는 부분은 생략
   - 특정 실제 시나리오 몇개
   ㅤ→ 로컬 브랜치를 오리진으로 리스토어 하기
   ㅤ→ 프라이빗 로컬 브랜치를 오리진 최신본으로 업데이트 : git fetch & rebase
   ㅤ→ 로컬 브랜치 삭제하기
"
"https://news.hada.io/topic?id=3195",".NET 5 의 놀라운 속도의 놀라운 속도

   EF Core 5 랑 ASP.NET Core 를 사용하는 제품에서 .NET 5 로 업그레이드 했더니
   일반 앱에서는 20% 정도의 속도 향상이 있고, ASP.NET Core API 의 경우는 100% 이상 속도가 빨라지는 결과가 나왔다고 합니다.

   추가 글이 올라왔습니다.
   https://medium.com/swlh/…

   .NET 5.0 공개 https://news.hada.io/topic?id=3181
   위 글에서 가장 큰 변화가 ""성능 개선 및 플랫폼 확장/통합"" 이라고만 하더니 속도개선이 엄청 되었나 봅니다.
   HN에서는 Go 보다 .NET이 빠르다는 댓글로 싸우고 있더군요. https://news.ycombinator.com/item?id=25069663
   In many benchmarks .NET/ASP.NET is faster than GO, a low level language:
   https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/…
   But unlike GO, you will need to write 50x less lines of code to achieve the same result.
"
"https://news.hada.io/topic?id=3200","당신의 컴퓨터는 당신만의 것이 아니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          당신의 컴퓨터는 당신만의 것이 아니다

   - 최신 버전의 macOS에서는 활동 로그가 전송 및 저장되지 않으면 컴퓨터 전원을 켜고 텍스트 편집기 또는 eBook 리더를 실행하고 글을 쓰거나 읽을 수 없음.
   - 현재 버전의 macOS에서 OS는 실행시 실행하는 모든 프로그램의 해시 (고유 식별자)를 Apple에 보냄
   - Apple은 우리가 어디에서 뭘 하는지 알 수 있음
   - 이러한 정보 전송은 암호화되지 않음
   - 애플은 미국이 영장 없이 데이터에 엑세스를 가능하게 하는 PRISM 프로그램의 파트너
   - 이 데이터는 당신의 삶과 습관에 대한 엄청난 양의 데이터에 해당하며, 모든 것을 소유 한 누군가가 당신의 움직임과 활동 패턴을 식별 할 수 있을 정도
   - 이전까지는 이러한 전송을 'Little Snitch' 라는 프로그램을 사용하여 막을 수 있었지만 Big Sur 부터는 방해하는 API가 탑재됨
   - M1 을 탑재한 맥북들은 애플이 사인한 Big Sur 이외에는 실행할 수 없기에 정보를 보내는 것을 막을 수 없음
   - +) 애플은 iCloud 백업을 E2E 암호화하지 않음

   https://news.hada.io/topic?id=2145
   Design By Slow... 카탈리나에서 더 나빠진 듯한 데요 =ㅁ=..

   Slow by Design인데 OTL 아무튼 해시값을 보내던건 카탈리나부터 였던 것 같습니다.

   인터넷 연결 없으면 맥 사용 불가능한건가요???

   어제 애플서버가 다운되어서 많은 맥들에 문제가 생겼었는데.. 그거랑도 관련있는거네요.

   아예 오프라인이면 상관없지만 온라인인데도 불구하고 로그가 전송되지 않으면 문제가 생긴다고 하네요

   그러면 네트워크망에 이상이 있는 상태로는 오프라인 작업에서도 정상적인 작업이 불가능 할 수 있겠군요

   아 그렇군요
"
"https://news.hada.io/topic?id=3138","AWS, Public Container Image Regsitry 공개 예정 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               AWS, Public Container Image Regsitry 공개 예정

   - Docker Hub 의 무료계정에 대한 이미지 제한이 적용되기 시작
   - 관련 문제를 피하기 위해 몇 주내로 새로운 공개 이미지 저장소를 오픈할 것
   - 퍼블릭 이미지 저장시 매월 50GB 무료 저장공간
   - 익명으로 이미지 풀 할경우 월 500GB 전송량 제공, AWS 계정 인증하면 월 5TB
   - AWS내에서는 다른 AWS내에 호스팅된 이미지는 무제한으로 풀 가능

   도커 사의 존립 문제는 나온지 좀 오래된 얘기인 것 같은데 aws 나 큰 클라우드 회사에서 인수해야 하는 거 아닐까요...

   Docker의 삽질에 경쟁자들이 노 젓기 시작했내요.
   GitHub도 얼마전에 Container Registry 오픈했죠.

   너무 오래 완전 무제한 무료로 운영한 것 같긴 해요.
   새로 생겼다는 컨테이너 레지스트리 서비스들도 다 무제한 무료는 없는 것 같거든요.

   Docker ToS 변경 : 무료계정엔 Image 저장 제한 기간 생겨 https://news.hada.io/topic?id=2649
"
"https://news.hada.io/topic?id=3209","010 Editor - 전문가용 Text + Hex Editor","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  010 Editor - 전문가용 Text + Hex Editor

   - 윈도우/맥/리눅스 지원
   - Binary Template 기능으로 이진 파일을 구조화해서 볼수 있는 기능을 지원
   ㅤ→ 7zip,gzip,zip,mp3,wav,ogg,pdf,exe,elf,ttf,bmp,gif,jpg,ico,torrent,pcap,bson,dex,class(java),pyc,avi,flv,mp4 등 160+개 포맷
   - C/C++ 과 비슷한 언어로 스크립팅 지원
   ㅤ→ Binary Template과 연동 가능(변수 접근 등)
   ㅤ→ UI없이 커맨드라인에서 실행 가능
   - 컬럼 모드 지원
   - 하드 드라이브 직접 편집 (Binary Template 지원)
   ㅤ→ NTFS, FAT16, FAT32, exFAT, HFS 직접 수정 가능
   ㅤ→ MBR / EFI 파티션 편집도 가능
   - 체크섬/해쉬 계산 지원 : CRC-16, CRC-32, Adler32, MD2, MD4, MD5, RIPEMD160, SHA-1, SHA-256, TIGER
   - 대용량 파일 지원 : 50+GB Text 파일, 8EB(ExaByte) Hex 파일
   - USB에 넣고 다닐수 있는 포터블 버전도 제공
   - $129.95 US (Commercial Use) / $49.95 US (Home/Academic Use)

   50+GB Text 파일에 8EB Hex 파일을 열수 있다니 대단하네요.. ㄷㄷ

   와 엄청난 도구네요 (가격도 ^^;)
   저는 늘 xvi32 쓰고 있었어요. http://www.chmaas.handshake.de/delphi/freeware/xvi32/xvi32.htm

   덜덜 엄청난 도구군요!

   첫 버전이 나온지 17년이나 된 툴이구요. 현재 버전은 v11 입니다.
   에디터로서는 가격이 조금 나간다고도 볼수 있는데, 디지털 포렌식 / 리버스 엔지니어링 시 가장 유용한 도구입니다.
   바이너리 템플릿 기능 때문에 특정 포맷의 파일을 분석해야할 필요가 있을 때 뛰어난 기능을 발휘합니다.
   템플릿 리파지토리를 보시면 정말 많은 템플릿들이 있습니다.
   https://www.sweetscape.com/010editor/repository/templates/
"
"https://news.hada.io/topic?id=3203","Git-User-Switch : git 사용자 쉽게 변경하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Git-User-Switch : git 사용자 쉽게 변경하기

   - 여러명의 사용자(개인/회사 등) 프로필간에 쉽게 변경하도록 하는 CLI 툴
   ㅤ→ git-user 실행후 사용자 리스트에서 선택하면 바로 변경
   - 글로벌/로컬 사용자 별도로 지원(로컬이 기본 값)
   ㅤ→ ~/.gitconfig 또는 project/.git/config
   - 사용자 추가/삭제 및 전체 리셋 지원

   여러 사람이 같은 계정으로 같은 폴더를 작업하는 경우 커밋 전에 사용자 확인하고 변경을 하게 하는 건 어떻게 할 수 있을까요? 조언 부탁드립니다

   좋은 툴 공유해주셔서 감사합니다.
   그외의 의견으로 path 에 따라서 gitconfig file 이 선택되도록 하는 것도 괜찮은 방법인 것 같습니다.
   https://gist.github.com/bgauduch/06a8c4ec2fec8fef6354afe94358c89e

   와!! 제가 보기엔 이거가 더 좋네요. 고맙습니다.
   보통 회사 작업과 개인 작업은 폴더를 별도로 쓰기도 하니까, 한번 회사/개인 최상위 폴더만 작업해 두면 신경안쓰고 작업이 가능할 거 같아요.
   .gitconfig 에서 IncludeIF 를 써서 폴더별로 다른 사용자 정보를 로딩하는 방식
   [includeIf ""gitdir:~/code/personal/""]
   path = .gitconfig-personal
   [includeIf ""gitdir:~/code/professional/""]
   path = .gitconfig-professional
"
"https://news.hada.io/topic?id=3194","Notion-Clone : 노션 에디터의 오픈소스 클론","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Notion-Clone : 노션 에디터의 오픈소스 클론

   - 노션의 몇몇 기능을 Next.js + React.js + Express.js 등으로 구현
   에디터
   - 블록단위 편집
   - 슬래시 커맨드 ( / 입력해서 블럭 종류 변경 )
   - HTML 태그 입력 지원
   - 이미지 업로드 ( /image )
   - 드래그 앤 드롭으로 블럭 순서 변경
   서버
   - Guest 편집 지원
   - 사용자 관리 기능
   - 잡 스케줄링 (안쓰는 계정 및 페이지 삭제)

   웹 WYSIWYG 에디터는 정말 많이 나오는데.. 딱 맘에 드는거는 찾기가 힘들긴 하더군요.
   예전에 관련 에디터 오픈소스 들을 다 정리해둔게 있어서 가져왔습니다.
   SummerNote: https://summernote.org - Super Simple WYSIWYG Editor on Bootstrap. 홍영택님이 만들고, 많은 한국분들이 참여중인 오픈소스 에디터
   Quill: https://quilljs.com - An API Driven Rich Text Editor
   Slate: https://www.slatejs.org - A completely customizable framework for building rich text editors
   Trumbowyg: https://alex-d.github.io/Trumbowyg - A lightweight WYSIWYG editor
   ContentTools: http://getcontenttools.com - A beautiful & small content editor
   Squire: https://github.com/neilj/Squire - HTML5 rich text editor
   Editor.js: https://codex.so/editor - Next generation block styled edito. JSON 으로 결과물 저장
   ProseMirror: https://prosemirror.net/ - A toolkit for building rich-text editors on the web, 공동 편집가능 에디터
   Gutenberg : https://wordpress.org/gutenberg/ - 워드프레스의 편집기
   webiny : https://www.webiny.com/ - CMS for Serverless Web Development
   GrapesJS : https://grapesjs.com/ - Web Builder Framework
   Craft.js : https://github.com/prevwong/craft.js - A React Framework for building extensible drag and drop page editors
   Draft.js : https://draftjs.org/ - Rich Text Editor Framework for React
   Outline Rich MarkDown : https://github.com/outline/rich-markdown-editor
   Edtr.io : https://edtr.io/ - React로 작성된 오픈소스 WYSIWYG에디터 https://news.hada.io/topic?id=1625

   감사합니다
"
"https://news.hada.io/topic?id=3177","복잡한 커밋 로그를 정리해줄 구원자, gitmoji","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      복잡한 커밋 로그를 정리해줄 구원자, gitmoji

   개발 문화를 만드는 일은 정말 재밌지만, 때론 머리 아픈 경우도 많습니다.
   오늘은 가장 인상 깊었던 개발 문화 중 하나인 gitmoji를 소개해 드리겠습니다.

   커밋 늘어날수록 한 눈에 분류 시킬 수 있어서 좋아보이네요

   커밋 Label을 emoji로 작성하는 방법이군요. 재밌내요.
"
"https://news.hada.io/topic?id=3219","SQL.js - JS로 컴파일된 SQLite","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        SQL.js - JS로 컴파일된 SQLite

   - 브라우저에서 JS로 실행되는 SQL DB
   - 메모리에 가상 DB파일을 만들어서 사용하므로 변경은 유지되지 않음
   ㅤ→ DB를 Typed Array로 만들어서 Export 가능
   ㅤ→ 기존 SQLite 파일 Import 가능
   ㅤ→ 온라인 SQL 데모 기능등에 적합
   - emscripten 으로 SQLite를 WASM으로 컴파일
   - SQLite 는 Public Domain 이지만, SQL.js 는 MIT 라이센스
"
