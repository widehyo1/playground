"https://news.hada.io/topic?id=7724","온 디맨드 이코노미는 죽었는가 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           온 디맨드 이코노미는 죽었는가 ?

     * 배달 스타트업이 망해간다고 하지만, On-Demand는 Endemic (urban) Social Behavior가 되었고 더 널리 퍼질 것
     * (최근에 많은 정리해고를 한) GoPuff의 불행은 그들이 자초한 것(잘못된 확장과 무의미한 성장)
     * DoorDash, Uber, Lyft의 수익은 증가 중. 다만 수익성이 없는데, 이것은 경영진과 그들의 무능력 때문임
     * 경제 상황에도 불구하고 미국 소비자들은 온디맨드를 포기하지 않았음
     * 우리는 편의성에 중독되었고 팬데믹은 더 가혹한 현실에 대한 베타테스트임
     * 배달과 온디맨드는 미래의 일부임. 다만, 적합한 경제 모델을 찾지 못했을 뿐

   GigaOm을 창업했던 Om Malik이 쓴 글인데요.
   글 처음에 On-Demand를 Endemic (urban) Social Behavior 라고 적은게 번역하기가 참 애매해서 그냥 원글 그대로 옮겼는데..
   ""온디맨드는 (팬데믹과 대비해서) 엔데믹(풍토병)같은 사회적 행동이 되어서 도시에 계속 남아있을 것이다"" 정도가 될것 같네요.
   저도 온디맨드가 너무 편해서 이게 과연 없어질 수 있을까 라고 생각은 했는데, 이런 방식으로 표현한 것이 흥미로웠습니다.

   온디맨드의 편리함에는 충분히 공감합니다. 다만 비지니스 모델을 수익성 없게 설계한 업체들이 무너지고 있다고 생각합니다.
   매 건별로 손해를 보는데 사용자가 늘어나면 금방이라도 회복할 것처럼 거창하게 이야기했다가 몸집을 불리니 손해가 더 커지는 상황이 벌어지고 말았죠. 애초에 말이 안되는 서비스가 무너지고 있는 것 뿐이라고 생각합니다.

   온디맨드가 풍토병처럼 남는다는 표현은 살짝 무섭네요 ㅎㅎ 주기적으로 유행하는건가요
"
"https://news.hada.io/topic?id=7809","웹 자동화는 Selenium 대신 Playwright를 쓰자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   웹 자동화는 Selenium 대신 Playwright를 쓰자

     * 웹 자동화/테스트는 Selenium이 사실상 표준이었음
          + 시작하기 쉽고, 거의 모든 프로그래밍 언어를 지원
          + 충분하지만, 딱 거기까지임
          + 최신 자바스크립트 프레임워크 사이트에선 잘 동작안함(Angular,React,..)
            → 동작 안 한다는게 아님. 잘 되지 않는다는 것
          + 문서화가 잘 되어 있다고 하지만, 실제로 조금만 메인 경로에서 벗어난 일을 하려고 하면 예제를 찾기 어려움
     * Chai, Mocha, Cypress 같은걸 써보려고 했지만, 완전히 설정히 다르고 파이썬 개발자에게는 쉽지 않음
     * 수십가지의 Selenium 대체제가 만들어졌지만, 대부분 몇년만에 사라짐

Enter Playwright

     * 훌륭하고, 게다가 마이크로소프트가 만들고 있다는게 중요. 오래 지원될 것
     * Playwright의 킬러 피쳐는 ""테스트 자동 생성""
          + 브라우저를 열고 단계별로 실행하면 그걸 녹화해서 파이썬 스크립트로 만들어줌
          + Selenium에서 XPath같은 걸 찾는 수고를 덜어줌
          + 이렇게 저장된 단계는 거의 수정없이 바로 수행 가능
     * 또 다른 장점은 실행과정을 비디오로 저장해서 볼수 있다는 것
     * 유일한 단점은 아직 새롭다는 것. 버그도 많고 문서가 좋지 않음
     * 하지만 전반적으로 봐서, 모든 새 프로젝트에는 난 Playwright를 선택할 듯

   puppeteer를 쓰다가 완전히 playwright으로 온보딩에 성공한 입장에서 playwright의 코드젠 기능만으로도 옮길 가치가 크다고 봅니다

   Puppeteer만 오래쓰고 node만 쓰는 입장에서는. Playwright로 옮기는거는 선듯 쉽지가 않네요.

   기존 프로젝트를 옮기는 것부터 생각할 게 아니라, 먼저 신규 프로젝트를 시작할 때 Playwright를 새로 도입하는 걸 적극 검토하면 어떨까요? 아니면 토이 프로젝트를 시작해보는 것도 좋을 것 같습니다.

   Playwright 가 언어간 (JS, Python) API 가 일관성 있고 좀 더 깔끔한거 같아요.
   특히 Python의 경우 async 지원이 아주 잘 되고요 ㅎ
"
"https://news.hada.io/topic?id=7810","Keep `Em Coming: 첫번째 아이디어가 최고가 아닌 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Keep `Em Coming: 첫번째 아이디어가 최고가 아닌 이유

     * 좋은 아이디어를 내는 비결은 최대한 많이 생각해 내는 것
     * 종종 나쁜 아이디어가 먼저 나오고, 좋은 아이디어가 따라 나오기 때문
     * 모든 Good/Bad/Ugly 아이디어들은 모두 혁신(Innovation)을 위한 필수 Input
     * 인간의 두뇌는 가장 먼저 떠오른 해결책에 집착하는 경향이 있음. 그러나 시간과 품질에 영향이 있다는 연구는 거의 없음. 즉, 최고의 아이디어는 처음에 나오지 않는 다는 것
     * 시간이 지나면서 창의성이 실제로 증가하는 사람은 ""계속 좋은 아이디어를 낼 것이라고 기대하는 사람""
     * 일일 아이디어 할당량(Daily Idea Quota) 를 지정한 뒤, 특정 문제에 대해서 올바른 답을 계속 찾으려고 노력할 것
          + 문제를 해결하든 안하든, 첫번째 아이디어에 집착하는 경향을 재훈련 해야함
          + 문제를 해결하면 좋고, 아니면 (아이디어를 생각하는) 근육을 생성하는 것
"
"https://news.hada.io/topic?id=7765","Meta, 이번 주에 대량 정리해고 준비 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Meta, 이번 주에 대량 정리해고 준비 중

   수천명이 대상자가 될 것. 현재 메타의 직원은 8만7천명
"
"https://news.hada.io/topic?id=7813","일런 머스크와 트위터 직원들과의 첫번째 미팅 내용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      일런 머스크와 트위터 직원들과의 첫번째 미팅 내용

     * 지난 목요일 20분전에 공지하고, 트위터 직원들과 약 한시간 반의 Q&A 세션을 진행
     * 일런 머스크는 트위터를 결제용 앱으로 이용 / 뱅킹 서비스를 제공하는 것에 대해 이야기
     * 원격근무에 있어서는 소통의 어려움을 극복할 수 있을 정도로 기여가 뛰어나다면 가능하겠지만 그 기준은 매우 높을 것
          + Tesla 와 SpaceX에도 원격근무자가 많이 있지만 그들은 특별히 뛰어난 사람들임
          + 일부에게는 이게 맞지 않는 다는걸 이해하지만, 이게 트위터의 새로운 철학임
          + 즉 사무실에 돌아오지 않는다면 회사에 남아있을 수 없음
     * 숏폼 비디오 플랫폼으로서 트위터는 잠재력이 있다고 생각함
          + 콘텐츠 크리에이터가 원하는 길이의 비디오를 포스팅할 수 없고, 수익화 할수가 없다면, 그들은 청구서를 지불할 수가 없음(pay the bill)
          + 유튜브를 망하게 하자는게 아님. 우리가 유튜브에 무료 트래픽을 몰아줘야 할 이유가 있을까? 아님
          + 적어도, 크리에이터들이 비디오를 트위터에 올리고 비슷한 수익 또는 더 나은 수익을 내게 해줘야 함
     * 전체 대화 내용은 원글에 포함

   저번에 트윗에서 'Vine'을 언급하더니 숏폼 비디오 플랫폼과 관련해서 이런 구상이 있었군요..! 내용 공유 감사합니다!

   전체 리포에 대한 프리즈가 된 상태라... 심지어는 머지 뿐 아니라 브랜치 생성 조차 안 되는 상태라 작성한 코드를 리뷰할 수 조차 없는 상황 입니다. 계약직들은 일단 diff파일 만들어서 티켓에 첨부하는 전통적 방식으로 업무를 진행 중 입니다...
"
"https://news.hada.io/topic?id=7804","Arduino, IoT를 위한 첫번째 "Micro PLC" 인 Opta 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Arduino, IoT를 위한 첫번째 ""Micro PLC"" 인 Opta 공개

     * PLC(Programmable Logic Controller) 엔지니어를 위해 설계
     * IEC 61131-3 표준 언어인 LD (Ladder Logic Diagram), FBD (Function Block Diagram) 를 지원
     * 산업/빌딩 자동화 프로젝트등으로 확장 이용 가능
     * 3가지 모델
          + Opta Lite : 이더넷, USB-C
          + Opta RS485 : RS485 half-duplex 지원
          + Opta WiFi : WiFi 와 BLE 지원
     * 모든 모델이 OTA(Over-The-Air) 업데이트 지원, 클라우드 디바이스 관리 가능
     * 고전력 릴레이 스위칭 (4 x 2.3 kW)
     * DIN rail 호환
"
"https://news.hada.io/topic?id=7768","Show GN: Pyswit: Swit API의 파이썬 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Show GN: Pyswit: Swit API의 파이썬 라이브러리

   Swit.io API를 편리하게 사용하기 위한 파이썬 라이브러리를 만들었습니다.
     * 스윗은 메신저와 태스크 관리를 한 곳에서 할 수 있어 여러개의 툴을 사용하는것보다 효율적입니다.
     * 그러나 다른 메신저 툴들에 비해 openAPI 사용하기가 아쉬웠습니다.
     * 툴을 좀 더 효율적으로 활용하기 위해 Pyswit 라이브러리를 만들었습니다.
     * (free/standard요금제의) openAPI에서 제공하는 모든 기능을 구현했습니다.
     * 웹훅을 지원합니다.
     * 공식 문서에서 제공하는 엔드포인트와 동일한 형태로 구현했습니다.
     * pip로 설치 가능합니다.

   처음 만들어본 라이브러리입니다. 개선할 부분 피드백 남겨주시면 많은 도움이 될 것 같습니다. 사내메신저로 swit을 사용하는 분들에게 조금이나마 유용하게 쓰였으면 합니다. 감사합니다.

   오 덕분에 Swit도 웹훅을 지원하는걸 알게되었네요. 긱뉴스 봇도 만들어봐야 겠어요. 감사합니다!

   긱뉴스봇 있으면 당장 설치하겠습니다🫡 감사합니다!
"
"https://news.hada.io/topic?id=7787","가트너가 선정한 2027년까지 Sales에 영향을 미칠 7가지 기술 혁신들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               가트너가 선정한 2027년까지 Sales에 영향을 미칠 7가지 기술 혁신들

     * Machine Customers : 돈을 내고 상품/서비스를 사는게 사람이 아닌 기계 고객. 2030년이 되면 매출의 1/5이 기계 고객에게서 나올 것
     * Generative AI : 2025년까지 큰 조직에서 보내는 아웃바운드 메시지의 30%가 AI에 의해 생성될 것
     * Digital Twin of the Customer : 고객의 동적인 가상 모델. 페르소나에서 데이터를 입력받아 어떤 것이 고객에게 동작 하고, 동작 안 하는지를 테스트 가능
     * AR/VR : 2025년까지 B2B 판매의 80%가 디지털 채널에서 발생할 것. 이는 고객과 인게이지 하기 위한 새로운 방법을 열심히 찾아봐야한다는 것을 의미. AR/VR은 필수요소가 될 것
     * Digital Humans : 인간의 특성, 성격, 지식, 마인드셋을 표현하는 인터랙티브한 AI. 2026년까지 B2B 구매자의 절반이 구매 사이클안에서 디지털 인간과 상호작용 하게 될 것
     * Emotion AI : 판매자의 공감 능력을 Disrupt해서 고객의 인게이지에 도움을 줌. 사용자의 감정을 분석, 처리, 반응하는 시스템
     * Multimodality : 판매자가 활동을 기록하는 여러 모드가 있어서 세일즈 리더들이 데이터 문제를 해결할 수 있게 도와줌. 2025년까지 B2B의 판매/구매 활동은 AI, ML, NLP를 통해서 주요 거래나 시장에 대한 인사이트를 추출하게 될 것
"
"https://news.hada.io/topic?id=7737","Prometheus : The Documentary","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Prometheus : The Documentary

   Honeypot이 시리즈로 만들고 있는 개발자 대상의 오픈소스 다큐멘터리

   유럽의 개발자 구인구직 사이트 Honeypot은 약 10~30 분 가량의 개발자 대상 다큐멘터리를 계속 만드는 중입니다.
   플레이리스트로 보시면 됩니다. Documentaries for Developers

   예전에 쿠버네티스랑 Vue.js 다큐멘터리는 살짝 요약해서 올린적이 있습니다.
   Kubernetes 공식 다큐멘터리 [영상 1&2,총55분]
   Vue.js: The Documentary [video,34분]
"
"https://news.hada.io/topic?id=7814","React 렌더링 동작에 대한 (거의) 완벽한 가이드 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   React 렌더링 동작에 대한 (거의) 완벽한 가이드 [번역]

     * 렌더링이 뭘까요?
          + 렌더링 프로세스 개요
          + 렌더 및 커밋 단계
     * 리액트는 어떤 방식으로 렌더링할까요?
          + 렌더링 큐에 렌더링 등록하기
          + 일반적인 렌더링 동작
          + 리액트 렌더링 규칙
          + 컴포넌트 메타데이터와 파이버(Fibers)
          + 컴포넌트 타입(Component Types)과 재조정(Reconciliation)
          + Key와 재조정
          + 렌더링 일괄 처리(Render Batching)와 타이밍
          + 비동기 렌더링, 클로저 그리고 상태 스냅샷
          + 렌더링 동작 엣지 케이스
     * 렌더링 성능 개선
          + 컴포넌트 렌더링 최적화 기법
          + Props 참조가 렌더링 최적화에 미치는 영향
          + Props 참조 최적화
          + 전부 메모이제이션할까요?
          + 불변성(Immutability)과 리렌더링
          + 리액트 컴포넌트 렌더링 성능 측정
     * 컨텍스트(Context)와 렌더링 동작
          + 컨텍스트 기초
          + 컨텍스트 값 업데이트
          + 상태 업데이트, 컨텍스트 그리고 리렌더링
          + 컨텍스트 업데이트와 렌더링 최적화
          + 컨텍스트와 렌더러 경계(Renderer Boundaries)
     * React-Redux와 렌더링 동작
          + React-Redux 구독(Subscriptions)
          + connect와 useSelector의 차이
     * 리액트의 향후 개선 사항
          + ""React Forget"" 메모이징 컴파일러
          + Context Selectors
     * 요약
     * 결론
     * 추가정보
"
"https://news.hada.io/topic?id=7726","Meta Myths - 메타에 관한 오해들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Meta Myths - 메타에 관한 오해들

오해1 : 사용자가 페이스북을 떠나고 있다

     * 사용자는 계속 늘고 있음
     * DAU 29억명 으로 5천만명 늘었고, MAU 37억명으로 6천만명 늘어났음.
     * 늘어난게 이게 인스타그램과 왓츠앱때문은 아님. 페이스북도 DAU 19.8억 명으로 1600만명 늘었으며, MAU도 29.6억명으로 2400만명 늘었음
     * 모든 성장은 아시아와 그외 지역에서 일어났으며, 미국과 유럽에선 플랫했음, 즉 줄어들지 않음. 오래전에 이미 이 시장에서는 포화되었으며, Churn이 없다는 것이 의미가 있음
     * 페이스북은 사람들을 연결하며 그 연결은 아직 사람들이 서비스를 사용하기에 충분한 의미가 있음. 그 연결이 사라지거나 다른 앱으로 이동하려는 욕구의 징후는 없음

오해 2 : 인스타그램의 참여도가 급감하고 있다

     * 사람들이 심심할 때 Meta의 앱들을 열어볼수는 있지만, 대부분 TikTok과 같은 다른앱에서 시간을 보내고 있어서 인스타그램이 희생자라고 얘기함
     * 물론 틱톡이 인스타그램과 페이스북에 큰영향을 미치고는 있음
     * 이번 실적발표에서 마크는 Reels가 엄청 성장하고 있다고 했고, 시간이 늘고 있음
     * 틱톡의 사용행태가 메타가 자신의 플랫폼에서 생겼으면 하는 것이긴 하지만, 분명한 것은 숏폼 비디오가 UGC의 전체 시장을 키우고 있다는 것
     * 다시 말하면, 틱톡이 Meta의 사용량을 먹는 것이 아니라 전체 파이를 늘리는 것(물론 최근까지는 메타보다 더 많은 파이를 가짐)

오해 3 : TikTok이 시장을 지배하고 있다

     * 이 새로운 파이가 얼마나 큰지, 메타의 점유율이 틱톡에 비해 얼마 규모인지를 모르는 것은 조금 실망스러움
     * 하지만 지난 분기의 자료에서 메타가 틱톡의 위협을 포함하고 있음을 알수 있음
     * 첫째, 모건스탠리의 Sensor Tower자료에 의하면 틱톡의 사용량은 정체중
          + 미국에서의 성장률은 4% 이며, 인스타그램 보급률의 절반 정도임
     * 둘째, Reels 사용이 여전히 증가중 (페이스북/인스타에서 매일 1400억회 이상의 Reels가 재생. 6개월보다 50% 증가)
          + 물론 인스타/페북에서 자동 재생되는 Reels가 있어서 저 숫자는 약간 회의적이지만, 의미있는 것은 Reels가 년 $3b의 매출을 낸다는 것(다른 페북 광고 포맷만큼 수익성이 좋지는 않지만)
          + 틱톡은 2021년에 $4b 매출을 기록했고, 올해 $12b 매출이 목표지만 아마도 시장환경상 달성은 어려울 것. 물론 그래도 좋은 숫자임
          + 메타는 틱톡보다 더 많은 수익을 창출하는 광고 제품들을 보유하고 있음
          + 요점은 Reels가 TikTok을 곧 추월한다는게 아니라, 빠르게 성장하는 실제 제품이라는 것
          + 인스타그램이 스냅챗에 대해 Stories로 한 것들을 보면, 사용자를 다시 데려온 것은 아니지만 추가 이동을 막았고, 궁극적으로는 더 많은 사용을 이끌어냄
     * 셋째, Reels 사용이 메타 앱들에서 소비된 시간에 따라 증가한 다는 사실은, 숏폼 비디오가 UGC 파이를 키운다는 주장을 뒷받침함
          + 확실히 틱톡 사용량을 가져올 수만 있다면 메타는 거기서 수백억달라의 수익을 낼 수 있을 것
          + 다시 한번 증거에 기반해서 얘기하면, 메타에게 틱톡은 기회비용이지, 회사의 비즈니스에 대한 침해가 아님

오해 4 : 광고가 죽어가고 있다

     * 이 모든 오해가 진실이라고 만드는 건 이 항목
          + 메타의 하락 원인이 애플의 ATT(App Tracking Tansparency) 때문이라는 것
     * ATT 전에는 모든 디지털 광고들(앱설치 및 전자상거래판매)들이 모두 측정 되었음
     * 메타는 픽셀등을 통해서 어떤 광고가 어떤 결과를 내었는지에 대해서 아주 높은 확률로 정확히 알고 있었음
     * 그래서 광고주들이 단순히 비용이 아니라 얼마나 많은 수익을 창출할수 있는지 기대를 하며 광고를 진행 가능했음
     * ATT는 메타 광고를 3자 데이터로 취급하여 추적을 끊음으로써 전환 추적을 할 수 없게 만들었음
     * 이는 페이스북의 광고를 덜 가치있게 만들었을 뿐 아니라, 불확실하게 만들었음
     * 업계 전체에 큰 문제 였지만, 지난 9개월간 살펴본 흥미로운 점은 이에 대해서 얘기하는 회사가 거의 없다는 것
     * 메타의 주가 슬라이드가 왜 그런지를 알려줌
          + ATT는 디지털 광고 마켓에 큰 영향을 주었고, 년간 $10b가 넘는 매출을 감소 시킬수 있다고 얘기함
          + 이는 시간에 지남에 따라 누적될 손실이기 때문에, 회사의 최종가치를 감소시키며, 즉 주식은 하락해야함
     * 그러나 ATT는 디지털 광고를 죽이지 않았음
     * 아직 페이스북에는 많은 광고가 있음. 지난 15년간 전체 산업이 온라인으로 발전했으며, 판매자가 고객을 찾을 수 있는 공간이 되었음
     * 페이스북은 여전히 이런 퍼널 광고에서 가장 좋은 옵션이며, 이게 지난 분기에 여전히 $27b를 벌어들인 이유임
     * 더욱이, 그 숫자가 YOY로 거의 감소하지 않았다는 사실은 디지털 광고가 여전히 강력하게 성장하고 있다는 사실을 말해줌
       -Yes, ATT는 많은 수익을 깍기는 했지만, 실제로 Meta수익이 년 $10b 감소한 것은 아님
     * 메타도 가만히 있지는 않음. SKAdNetwork 4 에서는 애플이 극단적인 포지션에서 살짝 물러나 대규모 광고주에게 도움이 될 API를 공개했음
          + 그리고, 더 많은 전환을 자신의 플랫폼으로 옮기려는 노력을 하고 있음
          + Click-To-Message 광고가 $9b 의 매출을 내고 있으며 빠르게 성장하는 것도 주목할 만

오해 5 : Meta의 지출은 낭비다

     * 투자자들이 겁을 먹은 것은 페이스북의 자본적 지출(CapEx)증가이지, 메타버스 때문은 아님
     * 메타는 2022년에 $32~$33b, 2023년에는 $34b~$39b 를 자본적 지출에 쓸 것으로 예상. 장기적 수익성이 점점 더 나빠질 수 있음
     * 페이스북의 총 마진은 지난분기 79%로 2013년 이후 최저치를 지록했으며, 수익 성장이 회복되지 않으면 이 마진은 더 떨어질 것
     * 이 추론방식의 문제는 메타의 자본적 지출이 TikTok과 ATT 에 집중되어 있다는 것. 이 두개 과제에 대한 답은 더 많은 AI 이고, AI역량을 구축하려면 더 많은 자본 투자가 필요함
     * 메타 CFO는 ""AI 역량을 대폭 확대중이며, 이 투자가 2023년 CapEx의 상당부분을 차지. 더 많은 인프라를 AI로 이전하면서 자본 집약도가 증가""
     * 메타는 이미 거대한 데이터 센터가 있지만, 이는 주로 CPU컴퓨팅에 관한것이며 기존 메타의 서비스를 구동하는데 필요한 것
          + 하지만 ATT에 대한 장기적인 해결책은 타겟이 누구인지 파악하는 것만 아니라, 전환된/되지 않은 광고를 이래하는 확률 모델을 구축하는 것
          + 이 확률모델은 대규모의 GPU를 이용하여 구축되며, Nvidia의 A100 카드는 천만원이 넘어감
          + 예전의 확정적인 광고에서는 이런 장비 비용이 비쌌겠지만, 메타는 이제 그 세계에 있지 않음. 타케팅과 측정에 투자하지 않는 것은 바보같은 짓
     * 또한 이런 접근방식이 Reels의 지속적인 성장에도 필수적
          + 특히 메타가 비디오 뿐만 아니라 모든 미이더를 추천할 계획이기 때문에 친구/가족만이 아니라 전체 네트워크에서 콘텐츠를 추천하는 것이 점점 어려워 질 것
          + 여기도 AI모델이 핵심이 될것이며, 이런 모델을 구축하는 장비에는 많은 비용이 듬
     * 그러나 장기적으로 이 투자는 결실을 맺어야함.
          + 첫째, 더 나은 타케팅과 추천을 통해서 매출 성장을 다시 시작해야함
          + 둘째, AI 데이터 센터가 구축되면 유지 관리및 업그레이드 비용이 초기비용 보다 훨씬 낮아야함
          + 셋째, 이런 대규모 투자는 Google을 제외하고는 다른 어떤 회사도 할 수 없는 투자(우연이 아니라 구글의 자본 지출도 증가할 예정)
     * 마지막 요점이 가장 중요한데, ATT는 가장 정교한 광고사업을 하고 있는 Meta에 가장 큰 타격을 주었지만, 장기적으로 볼때 메타는 해자를 심화하게 될 것
          + 이 수준의 투자는 Snap, Twitter 및 다른 디지털 광고 회사에서는 실행이 가능하지 않음
          + 메타의 광고 타게팅이 필드(구글 외부)에서 멀어지기 시작할 가능성이 높다는 사실과 Reels에서 제공되는 엄청난 인벤토리 증가(광고 가격 인하)는 광고주들이 다른데 갈 이유를 찾지 못하게 될 것
     * 이 행복한 이야기에 대한 한가지 주의사항은 틱톡이 단순히 성장을 훔치는 것이 아니라, 실제로 사용자와 시간을 훔치는 위협이 있다는 것
          + 하지만 다시 한번 대답은 더 나은 추천 알고리듬과 AI문제로 귀결 됨. 다시 말해서, 이는 메타가 쓸 수 있는 가장 중요한 돈임

아마도 사실일 수 있다 : 메타버스는 돈과 시간의 낭비

     * 이 글은 메타버스에 대한게 아님. 메타에 좋지 않은 비즈니스가 될 수도 있지만 실제 제품이 될 수도 있음
     * 존 카맥이 메타의 접근에 대해 비판한 것 처럼, 메타는 소셜 네트워크에 더 적합한 저비용 / 경량 디바이스에 집중해야할 수도 있음
     * 메타버스에 대한 비용은 올해 $10b가 넘어가고 내년엔 더 많을 예정이지면, 메타의 전체 비즈니스에 비하면 매우 작음
     * 이 투자가 수익에 전혀 기여하지 않을 것이라고 생각하면, 메타의 사업에 대한 평가를 낮추는 것은 정당함
     * 저커버그는 이 인식에 대해 비난받을 만함. 그가 회사이름을 변경하고, 이 돈을 지출하기로 결정했고, 값비싼 하드웨어에 집중하라고 지시한 것이 그의 비전이기 때문
     * 그리고 그가 교체가 될수 없다는 사실은 회사 가치를 디스카운트하게 함
     * 리브랜딩은 꽤 성공적인 것 처럼 느껴지지만..
          + Meta the metaverse company 는 Speculative Boondoggle(위험한 쓸데없는 짓) 같을 수 있지만,
            그게 페이스북이 훨씬 더 많은 지표들이 우상향 하고 있는 여전히 거대한 비즈니스라는 사실을 바꾸지는 않았음

   아, 이 뉴스를 지금 다시 보게 되었는데,, 이 뉴스 송고 시점에 메타 주식을 샀으면 되는거로군요..

   Meta layoffs hit an entire ML research team focused on infrastructure
   글쓴이의 예상과 전혀 반대로.. ML 인프라 팀을 대부분 날렸다고 하네요...

   myth(신화)가 될지 miss(실책)가 될지는 좀더 시간을 두고 지켜봐야 할 것 같습니다...

   펀치라인 오...

   이 글 관련 HN의 토론(이런 저런 말이 많습니다..) : https://news.ycombinator.com/item?id=33407857

   음.. 뭐 이런 글도 이해는 되지만 너무 많은 주가가 빠지고 기대가 사라지고 있어서,
   과연 10년후에도 페이스북이 지금 그대로 남아있을지는 잘 모르겠네요.
   저커버그가 생각하는 그 VR/AR이 합쳐진 메타버스 환경이 오긴 하겠지만, 그때까지 페이스북이 잘 버틸수 있을까요?
   너무 이른 전환이 아니었나 싶기도 하고, 아니면 선구자로 더 큰 회사가 될수도 있겠지만요.
   정작 저 시장에서 돈 버는건 나중에 구매력을 가진 좋은 장비로 우리앞에 툭 던질 애플 아닐까 싶기도 합니다.
"
"https://news.hada.io/topic?id=7759","웹의 창시자 팀 버너스리 "Web3는 무시하세요"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      웹의 창시자 팀 버너스리 ""Web3는 무시하세요""

     * ""블록체인은 차세대 인터넷을 만들기 위한 viable한 솔루션이라고 보지 않으며, 사실 Web3는 전혀 웹이 아니다""
     * 사람들이 너무 자주 Web3를 ""인터넷을 재구성하기 위한 자신의 제안인 Web3.0과 혼동한다""고 말함
     * 그는 Solid 라는 자신의 웹 탈 중앙화 프로젝트를 진행중
          + 블록체인 프로토콜은 어떤 면에서는 좋일지 모르지만, Solid에는 좋지 않음
          + 너무 느리고, 너무 비싸고, 너무 퍼블릭함
          + 개인 데이터 저장소는 빠르고, 싸고, 프라이빗 해야함
     * 그의 새 스타트업인 Inrupt는 사용자가 자신의 데이터에 대한 접근 및 저장을 직접 제어하는 것을 목표로 함
          + 작년 12월에 $30m 펀딩받음
          + 세가지 방법으로 문제를 해결
               o 글로벌 SSO
               o 사용자가 자신의 데이터를 남들과 공유가능한 Login ID
               o 어떤 소스에서든 앱들이 데이터를 가져갈수 있게 하는 ""Common Universal API""
     * 리스본에서 열린 Web Summit 컨퍼런스에서 발표한 내용

   참고로 팀 버너스리의 Solid 프로젝트에 관하여 다음과 같이 전자통신동향분석 최신호에 간략히 소개된 내용이 있습니다.
     * 데이터 경제를 위한 개인 데이터 저장 기술 동향

  1. Pod

     팀 버너스리는 자신이 만든 웹이 정치적으로 또는 대규모 인터넷 기업들에 의해서 악용되고 있는 현실을 비판하고 이에 대한 기술적 해결 방안으로 Solid 프로젝트를 시작하였다[6]. Solid는 오픈소스 프로젝트의 일환으로 모든 사람이 자신의 데이터에 대한 완전한 제어권을 확보할 수 있도록 보장한다는 웹의 최초 설계 목표를 달성하기 위해 개발되었다. 즉 Solid는 어떤 사용자나 그룹이 그 데이터에 접근 가능하며, 어떤 응용을 사용할 것인지에 대한 선택권을 구조적으로 사용자에게 제공하도록 설계되었다.

     Solid 프로젝트는 개인에 대한 데이터 주권 제공을 위해 Pod(Personal online database)라고 불리는 분산형 개인 데이터 저장소를 제공하며, 사용자들은 자신의 데이터를 Pod에 안전하게 저장할 수 있다. Pod는 데이터를 위한 안전한 개인 웹 서버와 같은 기능을 수행한다. 사용자는 자신의 데이터에 대한 Pod에 저장하며, 어떤 사람들과 애플리케이션이 자신의 Pod에 접근할 수 있는지를 통제한다. 구조화된 데이터에서 공용 클라우드 폴더에 저장할 수 있는 일반 파일에 이르기까지 모든 종류의 데이터가 Pod에 저장 가능하다.

     Pod의 모든 데이터는 상호 운용 가능한 표준 데이터 형식과 프로토콜을 사용하여 저장 및 액세스된다. Pod의 데이터에 액세스하는 모든 사용자는 OpenID Connect 기반으로 인증되는 고유한 ID를 사용한다. Solid의 액세스 제어 시스템은 이 ID에 기반하여 사용자 또는 응용프로그램이 Pod의 자원에 액세스할 수 있는지 여부를 확인한다.

     그림 1은 사용자들 간의 Solid-Pod의 구성을 보여준다. 그림에서와 같이 각 사용자는 하나 이상의 Pod로 자신의 Pod를 구성할 수 있으며 사용자들 간의 Pod는 Solid 표준 프로토콜을 통해 액세스된다. 개인이 Pod를 확보하기 위해서는 Pod 서비스 공급자로부터 제공받거나 또는 사용자가 Pod를 자체적으로 호스팅할 수도 있다.

     [IMG] 그림 1 사용자들 간의 Solid-Pod의 구성

     현재 인터넷 서비스는 현실적으로 기존 중앙집중형 웹 기반으로 대부분 구축되어 있다. 따라서 이를 분산 구조의 Solid 기반으로 다시 구축하는 것은 기술적인 부분뿐만 아니라 Solid 기반의 새로운 생태계 구축을 필요로 한다. 팀 버너스리는 이를 위해 Inrupt라는 스타트업을 만들고 Solid 활성화를 위한 인프라 구축을 지원하고 있다[7]. Inrupt는 Solid 기반 응용 개발에 대한 지원과 상업적인 활용 및 생태계 구축을 주 목표로 한다.

   무시하기엔 이미 너무 커버려서...

   커뮤니티만 커진 것 같은데... 혹시 Web3가 널리 사용중인 플랫폼이 있을까요?
"
"https://news.hada.io/topic?id=7811","세계 인구가 80억에 도달했지만, 다음 세기에는 절대 돌아올 수 없는 하락을 보게될 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            세계 인구가 80억에 도달했지만, 다음 세기에는 절대 돌아올 수 없는 하락을 보게될 것

   인구가 빠르게 증가중이지만 출산율 감소로 성장률이 둔화되기 시작, 사회는 곧 축소될 것

     ""우리는 이제 정점에 도달했습니다. 지구상에 지금보다 더 많은 어린이가 살아 있는 일은 없을 것입니다.""

     * 2080년대에 104억에 달할 것으로 예상되며, 22세기로 접어들 때까지는 안정기
     * 2050년까지 세계 인구증가의 절반은 8개국이 차지 : 인도, 파키스탄, 필리핀외에는 모두 아프리카 국가들 나이지리아, 탄자니아, 에티오피아, 콩고 민주 공화국, 이집트
"
"https://news.hada.io/topic?id=7752","웹어셈블리(Wasm)가 클라우드 컴퓨팅의 미래인 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     웹어셈블리(Wasm)가 클라우드 컴퓨팅의 미래인 이유

     * Wasm은 크로스 플랫폼이다 : 클라우드 구성요소를 안전하고 간단하게 결합한다
     * Wasm은 안전하다 : 코드 실행 및 기능 표현 방식이 위험을 줄임
     * Wasm은 빠르다 : 불필요한 것을 제거하고 속도와 효율성을 향상
     * Wasm은 항상 개선되고 있다 : 표준을 만들면 더 강력해진다
     * Wasm은 미래다 : 더 빠르고, 더 안전하며, 더 효율적인 통합 방법을 제공한다

   한국기사인게 놀랍네요.

   ITWorld는 해외 기사중 괜찮은 것들을 번역해서 올려주는게 많아서 참고하기 좋은듯 합니다. (제 수고를 덜어주기도 해서..)

   WebAssembly에 주목해야 할 이유
   Ryan Dahl의 JavaScript Containers에 대한 생각
   WebAssembly가 W3C 권고안으로 공식 발표
   2020년과 이후 JavaScript의 동향 - WebAssembly
   JavaScript의 세번째 시대
"
"https://news.hada.io/topic?id=7750","Robb Oat - 로봇 소프트웨어 엔지니어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Robb Oat - 로봇 소프트웨어 엔지니어

     * GitHub 이슈를 읽어서 이해한 뒤, 문제를 해결한 PR을 자동 발행하는 깃헙 앱
     * 서버는 파이썬 오픈소스로 공개되어 있어서 직접 실행 및 설치 가능
     * Open AI의 Codex API 키 필요
     * Robb Oat 이라는 이름은 DALL-E에게 ""a minimalist logo of a robot software engineer""를 그려달라고 부탁해서 나온 로고에 있는 단어

   저 PR을 리뷰하는 포지션은 한 동안 남겠군요.

   퇴직을 준비해야 하나요.. -_-
"
"https://news.hada.io/topic?id=7795","깃허브에서 오픈소스 글꼴인 Mona, Hubot Sans를 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  깃허브에서 오픈소스 글꼴인 Mona, Hubot Sans를 출시

     * 제품, 웹, 인쇄물 등을 위한 Mona Sans와, 헤더, 인용구 등을 위한 Hubot Sans 출시.
     * 가변 글꼴이므로 글꼴의 굵기, 넓이, 기울기를 원하는 대로 상세하게 조절 가능.
     * SIL Open Font License (OFL) 라이선스 사용.
     * Degarism과 함께 디자인.

   본문 링크가 작동 안하네요

   그리고 글꼴을 대표하는 귀여운 캐릭터가 있습니다....

   글꼴 소개 페이지에 들어가면, 가변 글꼴임을 보여주는 것인지 마우스 위치에 따라 글꼴의 굵기와 넓이가 실시간으로 바뀝니다. 눈이 아프긴 하지만, 재미있네요.
"
"https://news.hada.io/topic?id=7781","우리가 CSS-in-JS와 헤어지는 이유 (번역)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      우리가 CSS-in-JS와 헤어지는 이유 (번역)

     * CSS-in-JS가 뭔가요?
     * CSS-in-JS의 좋은 점, 나쁜 점, 못난 점
     * 성능 심층 분석
          + 렌더링 내부와 외부의 직렬화
          + 멤버 브라우저 화면 벤치마킹
          + 프레임 그래프(Flamegraph) 분석하기
          + Emotion 없이 작성된 멤버 브라우저 벤치마킹
     * 우리의 새로운 스타일링 시스템
          + 유틸리티 클래스
     * 컴파일 타임 CSS-in-JS에 대한 참고 사항
     * 결론

   이러나 저러나, 훌륭한 DX만으로도 CSS-in-JS는 많은 가치를 갖고 있습니다.
   팀원이 모두가 똑똑하다면 사실 CSS-in-JS나 심지어는 React도 쓸 필요가 없죠.

   모든 도구는 성능도 중요하지만 개발자의 실수를 잘 막아주느냐, 생산성을 높여주느냐도 정말 중요하다고 생각합니다.

   제가 내린 결론과 비슷하네요 ㅎㅎ

   소개해주셔서 감사합니다 ㅎㅎ
"
"https://news.hada.io/topic?id=7802","FTX 파산 보호 신청, CEO는 사임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         FTX 파산 보호 신청, CEO는 사임

   미국에서 파산 절차를 개시할 것. 알라메다 리서치 역시 파산보호의 일부

   음 FTX 관련한 얘기는 많은데.. 제가 따로 팔로우업 하지는 않아서 그냥 공식 보도 글만 올려봅니다.
"
"https://news.hada.io/topic?id=7805","새로운 스마트홈 표준 ‘매터(Matter)’의 모든 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     새로운 스마트홈 표준 ‘매터(Matter)’의 모든 것

     * 스마트홈 대통합을 위한 오픈소스 프로토콜, 매터
     * 스마트홈 생태계에 자유를
     * 연결의 핵심, 쓰레드
     * 매터 지원 기업은 200곳 이상
     * 기존 기기의 매터 지원 여부

   하지만 matter를 지원하는 회사들이 제각기 다른 동상이몽을 꿈꾸고 있음.
   유저들은 ‘matter로 통합’ 을 생각하게 되지만 실제로 기업들은 ‘matter 로 내 서비스에 통합‘을 꿈꾸고 있음.
   그래서 각 서비스에서 matter 를 추가 할 수 있게 해주고 있지만 반대로 matter에 자사 제품 및 서비스 추가는 안됨.
   이 부분은 추후 더 지켜봐야겠지만 Matter ver.1 에서는 아직까지 ‘분열된 통합’ 으로 보임.

   Smart Home IOT 연결 표준 Matter v1.0 스펙 릴리즈
"
"https://news.hada.io/topic?id=7735","Agreper - JS없는 미니멀한 웹 포럼 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Agreper - JS없는 미니멀한 웹 포럼 오픈소스

     * 설치 및 관리가 쉬운 것을 목표로 만든 포럼 게시판
     * Python + Flask + Jinja2 + sqlite3
     * 포럼, 사용자, 쓰레드, 댓글(다단계) 지원

   많이 미니멀하네요 ^^;
"
"https://news.hada.io/topic?id=7757","Linked List에 대한 디펜스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Linked List에 대한 디펜스

     * 사람들이 Linked List를 우습게 생각하는 것에 대해 Antirez(Redis 개발자)가 자신이 좋아하는 이유를 적은 글
     * ""LinkedList 는 교육적이고, 확장 가능하고, 유용하고, 간단하고, 개념적 입니다""

   20년쯤전에 C로 링크드리스트를 직접 만들어서 제품에 적용해본게 아마 마지막 구현이었던것 같네요.
   그때 만들던 제품이 비지오와 비슷하게 생긴 음성 ARS 시나리오 편집기였는데, 각 컴포넌트간 연결을 하면 그걸 링크드리스트에 저장하고 앞뒤로 움직였던거로 기억합니다. 이 구조에는 더블 링크드리스트 말고는 별로 대안이 없어서..

   하여튼 Antirez의 말처럼 확장가능하고 유용하다는데에 한표를 던져봅니다.

   이 글의 발단이 된 트위터 글 링크를 걸어주지는 않아서 정확히 어떤 것인지는 모르겠는데, 아마도 이 글과 비슷한 내용이지 않을까 싶네요.
   Why Writing a Linked List in (safe) Rust is So Damned Hard

   Rust에서 linked list를 제대로 구현하는 것이 힘든 문제는 아래 튜토리얼에서도 확인하실 수 있습니다.
   https://rust-unofficial.github.io/too-many-lists/
"
"https://news.hada.io/topic?id=7713","Microsoft Dev Kit 2023에서 리눅스 실행하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Microsoft Dev Kit 2023에서 리눅스 실행하기

   결론적으로는 실패. 마소가 DTB를 릴리즈 해줘야 가능

   Windows Dev Kit 2023 (프로젝트 Volterra) 공개
"
"https://news.hada.io/topic?id=7779","연구자들이 WiFi를 이용해 벽을 투시할수 있는 해커 드론을 제작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  연구자들이 WiFi를 이용해 벽을 투시할수 있는 해커 드론을 제작

     * ""Wi-Peep"" 이라고 이름붙인 이 장치는 $20 짜리 일반 드론을 이용해서, 집안의 WiFi에 연결된 모든 기기의 위치를 삼각측량
     * IEEE 802.11의 보안결함을 이용해서, ""Time-of-Flight(ToF)""라고 알려진 기술을 적용
     * 암호화된 네트워크와 상관없이 모든 네트워크 장치들은 ToF 시그날에 응답하는 것을 이용
     * 이를 이용하면 도둑이 집안에 있는 노트북이나 스마트폰 위치 추적이 가능하고, 은행 같은 곳의 경비원 휴대폰이나 스마트 워치를 통해서 움직임도 추적가능

   wisee 같은 제스쳐 감지까지 합쳐지면... 사실상 도시내에서 모든 움직임이 감지 가능하겠네요.

   와

   배트맨 다크나이트에 나온 기술 아닌가요? ㅎㄷㄷ
   실제 사용하기에는 드론 소음이 문제겠지만,
   특정 공간에 WiFi 모듈 3 개를 나눠 고정해 놓으면 그안의 WiFi 기기 움직임 파악이 가능하겠네요.

   다크나이트에서는 모든 휴대폰을 도청하여 소리로 감지하는것이라면(박쥐처럼)
   이건 wifi로 송수신 하는 디바이스에 대하여 해당 디바이스의 위치를 추적 하는것으로 보이네요
"
"https://news.hada.io/topic?id=7745","Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2022년 11월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2022년 11월)

   현재 근무중인 스타트업에서 같이 일할 멤버를 찾고 계시다면
   회사 소개 / JD / 위치 / 리모트 가능 여부 / 연락방법(이메일,웹사이트) 등을 적어주세요.
   ""멤버가 직접 1개의 댓글로 홍보를 작성""하시면 됩니다. (서치펌 등은 불가)

   이 글은 매월 첫번째 월요일에 등록됩니다.
   해당 회사의 공고에 관심있으시면 기재된 메일등으로 연락하시기 바랍니다.

   작성 예)

   하다 | 프론트엔드 개발자, 디자이너 | 서울 역삼 | Remote 가능 | https://hada.io | jobs@hada.io
   하다는 긱뉴스를 개발 및 운영하는 스타트업 입니다. 저희는 이러 저러 해서 엄청 좋은 회사입니다~~
   [1] 프론트엔드 개발자 JD : 내용 또는 URL
   [2] 디자이너 JD : 내용 또는 URL

   메조미디어 | 데이터 엔지니어 - MLOps를 추구하는 | 서울시 중구 (CJ제일제당센터) | 혼합 | http://www.mezzomedia.co.kr/ | 접수: https://www.wanted.co.kr/wd/131284 상담: https://www.facebook.com/Sihyoung.Jurn/ (페이스북 메신저) 혹은 sihyoung.jurn앳cj.net
   국내 최초 디지털 미디어렙사인 메조미디어가 AI를 폭넓게 사용하고자 MLOps를 추구하는 데이터 엔지니어를 모집합니다.
   구글, 네이버, 카카오, 메타를 비롯하여 아프리카TV, 광고 리워드를 사용하는 각종 앱에 보이는 광고 사업을 하는 기업입니다. 사용자에게 유용하고 광고주에게 유익한 광고 매칭을 위해 보통 이야기하는 인공지능과 빅데이터를 활용하는 데이터테크팀에서 일하게 됩니다.
   원티드 공고(https://www.wanted.co.kr/wd/131284)를 보시면 아시겠지만, 저희가 쓰는 주요 기술에 경험이 풍부하지 않아도 관심을 가지고 팀과 성장할 인재를 찾습니다. 궁금하신 점은 위 연락처를 통해 문의 주시길 바랍니다.

   아보엠디 | 3-6년차 파이썬 장고 백엔드 개발자 | 서울 역삼 | 리모트 가능 Hybrid | kr@avomd.io

   AvoMD는 의료진이 임상에 필요한 가이드라인, 의료계산기 등을 개발자나 디자이너의 도움 없이 노코드 프로그래밍 툴인 ‘AvoBuilder’를 이용하여 사용자가 직접 맞춤 서비스를 제작할 수 있습니다.
   AvoMD는 의료 관련에 초점을 맞춘 글로벌 스타트업으로 미국과 한국의 의료기관/학회/제약사 등과 협업하며 의료시장에 빠르게 진출하고 있으며, 주 시장은 미국이나 디자인을 포함한 R&D는 주로 한국에서 이루어지고 있습니다.
   현재 클라이언트/파트너로는 미국의협 (AMA), 전세계 신장협회 (KDIGO), 컬럼비아 대학병원 등 의료기관이나 아스트라제네카, 로슈 등 제약회사들이 있습니다. 전세계 모든 IT 회사들이 다운사이징을 하는 가운데 AvoMD는 뉴욕 최대 헬스케어 VC 중 하나 인 AlleyCorp 을 비롯한 미국의 VC들로부터 올해 11월에 450만달러를 유치했습니다.
   https://avomd.notion.site/AvoMD-94e46f4822554dc5967207d0572e244e

   페어리 / 1-4년차 Node.js 백엔드 개발자 / 리모트 가능 (근무 시간 및 장소 자율) / hello@salesclue.io

   SalesClue는 개발자, 데이터분석가 없는 비즈니스도 더 많은 고객과 미팅을 성사시키고 계약할 수 있도록
   B2B 구매 과정에서 고객의 행동을 분석하고, 더 나은 영업 전략을 도출하는 솔루션이에요.

   SalesClue는 11월 부터 Beta를 시작해, 벌써 20개가 넘는 고객사들이 사용하는 소프트웨어가 되었어요.

   팀의 역량과 비즈니스 비전에 공감해준 스프링캠프라는 투자사에서 시드 투자를 유치함은 물론,
   내년 TIPS 지원 및 Series A 투자 유치를 예정하고 있어 든든한 지원 속에서 더욱 빠르게 달려나갈 예정이에요.

   또한, 이번 채용을 마무리짓고 개발자가 성장할 수 있는 개발 문화를 함께 만들어가고자 합니다.
   스타트업에서 개발 조직의 문화를 처음부터 세팅해볼 수 있는 재미있고 흔치 않은 기회예요.

   공고 더 자세히 보기: https://www.pairy.co/5a4e44bf-9622-437c-a8c8-5f54d102651b
   지원: hello@salesclue.io

   유하 | Jr.Front-end | 서울 강남 | 사무실 근무( 업무 상황에 따라 Remote 근무 신청 가능) | https://careers.youha.info/ | recruit@youha.info

   유하(youha.info)는 국내 최초, 국내 최대 규모의 유튜브 크리에이터 광고 중개 플랫폼입니다.
     * 1만명의 광고주 회원 보유
     * 2만명의 광고대행사 실무진 가입
     * 1천명의 MCN 실무진 가입
     * 10만개의 유튜브 채널 등록
     * 4천명의 크리에이터 광고 집행

   유하를 통한 월 평균 유튜브 광고 제안수 1,000건+ (월 평균 제안액 100억 +)
     * Jr. Front-end engineer( YOUHA Boost ): https://careers.youha.info/574e5712-2591-4734-97f4-ab6a6e6166fd

   개발 외의 공고들도 있으니 https://careers.youha.info/ 를 참고 바랍니다.

   🎮 오피지지 | 프론트엔드 개발자, 백엔드 개발자, 모바일 개발자, PM | 서울 삼성 | Remote 가능 | ⭐ https://www.opgg.team | ⭐ https://log.op.gg | recruit@op.gg

   🚀 오피지지(OP.GG)는 전세계 유저들에게 전에 없던 최고의 게임 플레이 경험을 제공하는 글로벌 No.1 게임 데이터 플랫폼 스타트업입니다.
   5,900만 글로벌 MAU를 기반으로 함께 성장하는 즐거움을 누려보아요!

   우리는 온라인을 통한 진정성 있는 인간적 가치를 경험한 사람들이 모여, 세상에 그 가치를 증명해 나갑니다. 게이머들의 일상을 점령하는 것을 비전으로 하여, 게이머들이 언제 어디서나 가장 먼저 떠올리는 서비스를 만들어나가고 있습니다.

   ✔️Electron Engineer(Desktop App) : https://apply.opgg.team/o/32600

   ✔️Front-end Engineer(Desktop App) : https://apply.opgg.team/o/32663
   ✔️Front-end Engineer(OGT Cell) : https://apply.opgg.team/o/32599

   ✔️Back-end Engineer(Peep Cell) : https://apply.opgg.team/o/32660

   ✔️Senior Product Manager (LoL Web) : https://apply.opgg.team/o/27702

   ✔️Android Engineer : https://apply.opgg.team/o/10964
   ✔️iOS Engineer: https://apply.opgg.team/o/10972

   🎧 소리하는 회사! 가우디오랩에서 소중한 가우딘을 모십니다!
   🎧 강남구 삼성역 인근 / 자율근무 / careers@gaudiolab.com
   🎧 채용페이지는 여기 [ https://gaudiolab.com/ko/careers/ ]
   🎧 어서오세요!

   Audio Scientist
   AI Scientist
   C++ 소프트웨어 엔지니어
   모바일 SDK 소프트웨어 엔지니어
   빅데이터 엔지니어

   🎧 가우디오랩을 소개해요
   가우디오랩은 세계적으로 손꼽히는 오디오 기술을 통해, 여러분께서 전혀 경험해 보지 못했던 새로운 차원의 소리 경험을 제공하는 회사입니다. 메타버스의 완성을 담당하는 스페이셜 오디오(공간음향)와 AI 오디오 기술의 가장 첨단, 그 이상의 경지에서 비교 불가한 오디오 기술의 초격차를 구현해내고 있습니다.

   가우디오랩에서 매일 창조되는 새로운 소리들은 네이버, 플로, 벅스뮤직 등 국내외 유수의 서비스에 적용되어, 여러분의 귀에 가닿고 있습니다. 이미 매일 약 2천만명의 사용자가 가우디오랩의 소리기술을 경험하고 있다는 사실! 가우디오랩과 함께 폭발적으로 성장하며 스케일업을 만들어나갈 미래 가우딘을 정중히 모시고자 합니다.

   💎 AB180(에이비일팔공) | 소프트웨어 엔지니어 | 서울 서초(강남역 1분) | Remote 가능(부분) | https://hiring.abrge.app/geeknews | hr@ab180.co

  하루 10억 건의 트래픽 처리.

  1억대의 디바이스. 100만 RPM. 월 300억 이벤트 수집 및 분석.

  실시간 수집되는 대규모 데이터. 성과 극대화를 위한 머신러닝.

   AB180은 Airbridge라는,웹과 앱의 행동 및 마케팅 성과를 측정, 분석해서 더 좋은 마케팅 결과를 낼 수 있도록 돕는 B2B SaaS를 만들고 있어요.
   ...

      ✨ Highlight

   '일하기 좋은 기업' 중견·중소기업 부문 종합 1위! (잡플래닛, 2022년 상반기)
   함께 일하는 팀원들에게 서로 배우며 빠르게 성장할 수 있어요. 기술 블로그, 코드 리뷰, 기술 세션 등 탄탄한 지식 공유 문화 역시 갖춰져 있어요.

   업계 최초 Meta(Facebook) MMP & MTA 비즈니스 파트너 2개 부문 동시 선정
   모바일 측정(MMP)과 멀티터치 기여도분석(MTA) 분야의 비즈니스 파트너로 동시에 선정되었어요. 이를 바탕으로 다양한 대규모 데이터 분석, 머신러닝 및 기능 개발을 하고 있어요.

   글로벌로 나아가는 B2B SaaS 비즈니스 경험
   오늘의집, GS SHOP, 삼성증권 등 다양한 기업이 Airbridge를 쓰고 있어요. PMF 검증을 마치고 GTM(Go-to Market) 단계에 진입했어요. 미국 지사를 세웠고 다양한 국가의 고객이 매일 들어오고 있어요.
   ...

      🚀 We're Hiring!

   전직군 인재 영입중. 아래에 나와있지 않은 직군들도 모두 인재 영입중에 있어요.
   저희에 대해 궁금하시다면 아래의 공고를 확인해주세요 :)

   [1] Backend Engineer / Data Pipeline →
   [2] Backend Engineer / Data Serving API →
   [3] Backend Engineer / Platform API →
   [4] Backend Engineer / Query Engine →
   [5] DevOps Engineer →
   [6] Data Engineer →
   [7] Data Scientist →
   [8] Frontend Engineer →
   [9] Web SDK Engineer →
   [10] Solutions Architect →

   [🍋 레몬베이스(Lemonbase) - 회사와 구성원의 건강한 성장을 기술로 실현하는 SaaS 스타트업]

   사람은 깨어 있는 시간의 70%를 일터에서 보냅니다. 그 시간이 돈을 벌기 위한 수동적인 시간이 아니라, '나와 조직의 성장과 성공을 위해 주도적으로 활용하는 시간'이 될 수 있도록 레몬베이스는 성장하고 성과를 내는 방식을 기술을 통해 혁신하고 있습니다.

   레몬베이스 팀은 이 문제를 지속적인 성과관리(Continuous Performance Management)로 해결할 수 있다고 믿습니다. 레몬베이스를 통해 일 년에 한두 번이 아니라 일 년 내내 목표를 스스로 설정하고, 그 과정을 실시간으로 공유하고, 또 1:1 미팅을 통해 코칭을 주고받으며, 더 자주 동료들로부터 칭찬과 피드백을 받을 수 있습니다.

   2021년, 국내 SEED 라운드로는 매우 드물게 62억 원의 대규모 투자를 유치한 레몬베이스는 롯데푸드, 카카오모빌리티, 쏘카, 위메프, 버킷플레이스, 지그재그 등, 시대를 선도하는 수많은 기업과 함께 성과관리를 혁신하고 있습니다.

   ""회사와 구성원의 건강한 성장""이라는 미션을 가진 레몬베이스와 함께 성장할 미래의 크루를 찾고 있습니다.
   레몬베이스 팀의 여정에 동참해 주실 분들을 기다립니다 :)

   [JD]
   ✔️ 프론트엔드 엔지니어: https://www.lemonbase.team/recruit/fe
   ✔️ 백엔드 엔지니어: https://www.lemonbase.team/recruit/be

   ▶ 위치 : 서울 성수 (서울숲역/뚝섬역 인근)
   ▶ 근무형태 : Remote 가능

   ▶ 채용페이지 : https://www.lemonbase.team
   ▶ 팀블로그 : https://medium.com/lemonbase
   ▶ 크루 인터뷰 : https://www.lemonbase.team/interview
"
"https://news.hada.io/topic?id=7714","OpenSSL, CVE-2022-3786 / CVE-2022-3602 패치한 3.07 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          OpenSSL, CVE-2022-3786 / CVE-2022-3602 패치한 3.07 릴리즈

   X.509 Email Address Overflow 관련 중요 보안 패치

   https://github.com/openssl/openssl/…

   1바이트가..ㅠㅠ
"
"https://news.hada.io/topic?id=7786","AI를 즐겨라! 래블업 개발자 컨퍼런스 "lab | up > /conf/2"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               AI를 즐겨라! 래블업 개발자 컨퍼런스 ""lab | up > /conf/2""

   AI 이외에도 오픈 소스 기여 경험, 파이썬 비동기 프로그래밍, 로우 레벨 프로그래밍 등 꽤 다양한 주제에 대해 다루는 모양입니다.

   개인적으로는 세션 1, 2, 7이 재미 있을 것 같네요.

   혹시 위 주제들에 관심 있으신 분들은 등록 해 보시는 것도 좋을 것 같습니다 :)
"
"https://news.hada.io/topic?id=7772","Mathics - 오픈소스 Mathematica 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Mathics - 오픈소스 Mathematica 대체제

     * General-Purpose Computer Algebra System (CAS)
     * Mathematica®와 호환되는 문법및 함수 제공
     * 도커이미지로 제공되며, PyPi에서 파이썬 패키지로 로컬 설치도 지원
     * mathicsscript CLI 제공 : 세션 히스토리, 자동완성, 구문강조 지원
     * Mathics-Django : 웹 프론트엔드. MathML
"
"https://news.hada.io/topic?id=7777","Rome v10 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Rome v10 소개

     * Rome 의 첫번째 스테이블 릴리즈
     * Rome 은 babel.js, yarn 을 개발한 Sebastian McKenzie1 이 VC 펀딩을 받아 시작한 JS 툴링 프로젝트. 최근 요새 주류 흐름에 맞게 Rust 로 재작성 됨
     * Rome 은 하나의 툴로 모든 JS 툴링을 커버하는 올인원 패키지, 불필요한 추가 작업을 줄이고, 다양한 툴을 개별적으로 학습하지 않아도 됨, 따라서 기존에 요구되는 스택구성의 비용이 낮아지게 됨
     * 이번 릴리즈에는 linter, formatter 가 포함 됨 이 후 compilation, bundling, testing 등이 추가 될 예정
     * Lint 는 ~300ms 에 6,000 개 파일을 처리할 수 있으며 코드에 오류가 있더라도 항상 Lint 에러를 보여줄 수 있는 구조이며 에러에 대해서 이해하기 쉬운 설명도 같이 보여줌.

   아직 린터랑 포매터 밖에 없네요..
   좀 더 기다려 볼랍니다.

   그러네요. 여기로 가세요 https://rome.tools/blog/2022/11/08/rome-10.htm

   링크 마지막에 ㅁ이 있어서 404가 뜨네요

   링크 수정해두었습니다. 감사합니다.
"
"https://news.hada.io/topic?id=7769","조직이 커가면서도 엔지니어링 속도를 유지하는 법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       조직이 커가면서도 엔지니어링 속도를 유지하는 법

[속도 유지를 위한 4가지 기본원칙]

  1. 최고의 엔지니어를 고용하기

     * 핵심 기술의 전문가들
     * 고객에게 가치를 주는데 중점
     * GRIT(그릿)

  2. 첫날부터 견고한 장기 기반 구축

     * 데이터 드리븐이 되기
     * 잘 아는 프로그래밍 언어와 DB를 선택
     * 첫날부터 테스트 작성하기
     * 코드리뷰 하기

  3. 의사 결정을 가이딩하는 지표 측정하기

     * KPI 스코어카드로 지표관리

  4. 팀들을 작고 독립적으로 유지하기

     * Pod 구조를 적용
          + 각자 스타트업처럼 운영
          + 각 Pod는 8~10명 이하
          + 각 Pod는 분명한 리더가 있을 것
          + 사람들이 여러개의 Pod 멤버가 될 수 있음
          + 한개의 프로덕트만 있다면, Pod를 프로덕트의 잘 정의된 각 부분에 할당
          + 기능팀(Functional Team) 내에서 보고 라인 및 성과 관리 유지
     * 리소스 할당을 지속적으로 유지하는 방법 : Census 와 Horsepower
          + 조직의 구조를 실시간 시각화 해서 보여주는 Census라는 도구를 자체 개발
          + ATS(Applicant Tracking System) 와 HR 에서 데이터를 자동 업데이트

   와우 제 이상과 부합합니다

   정말 좋습니다.

   꼭 읽고 제걸로 만들고 싶은 주제네요

   저도 이런 모습의 조직에 있었을 때 가장 생산성이 좋았던 것 같네요

   분명한 리더가 있을것 - 의 중요성을 깨닫고있는 요즘입니다
"
"https://news.hada.io/topic?id=7763","Mastodon, MAU 1백만명 돌파","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Mastodon, MAU 1백만명 돌파

   10/27 이후로 1124의 새로운 마스토돈 서버가 만들어졌고, 신규 사용자 48만명

   Mastodon is a Free and Open Source federated social network, made with a focus on personal interaction.

   일런 머스크와 트위터 효과 군요. 마스토돈에 역대 최대의 관심이 쏟아지는 듯
"
"https://news.hada.io/topic?id=7821","Upbase - 올인원 업무 관리 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Upbase - 올인원 업무 관리 플랫폼

     * all-in-one 프로젝트 관리 도구
     * 개인 생산성 향상에 중점을 뒀지만 소형 팀부터 큰 기업을 위한 기능도 모두 지원
          + 타임 블록킹, 뽀모도로 타이머, 데일리 저널 & 플래너
          + 태스크, 스케쥴, 메시징, 문서, 파일, 채팅
     * iOS/Android 모바일 앱 지원
     * 무료 버전에서도 사용자는 무제한

   웹사이트 들어가보니까 $49 평생권 프로모션을 하고 있군요.

   개인 할일 관리로 Things를 쓰고, 업무 관리 보조 수단으로 Height 무료 플랜을 써 보고 있는데 둘을 합친데다 플러스 알파가 될 것으로 보이네요.

   google calendar 2 way sync도 지원되면 좋을 것 같은데, 문의하려고 보니 contact 가 없네요.

   저도 관심이 많은데 댓글로 달아도 될지 모르겠지만
   이 서비스도 있습니다
   https://mattermost.com/

   오픈소스에 셀프 호스팅도 가능합니다
   슬랙 사용하다 저장된 데이터를 가져올 수 없다고 해서 만들었다고 합니다
   몇년 전 부터 사용 했는데 안정화도 많이 되었고 무엇보다 셀프 호스팅이 되어서 사용하고 있습니다

   올리신 서비스도 찬찬히 보겠습니다

   Mattermost는 슬랙 대체 프로젝트 정도로 생각하고 있었는데 보드 등 다양한 기능이 있었군요.
   개인적으로는 어떻게 활용하고 계신지 궁금합니다.

   저희 회사 IT 분야 직원들은 이 채널에서만 소통합니다.
   플레이북은 몇번 시도는 했는데 좀더 큰 단위 프로젝트에 맞는것 같고
   보드는 진행중인 프로젝트가 러프하게 기획되면 카드로 올리고 개발자들은 필요하다면 별도의 카드 등록해서 지금 진행중 작업을 관리 하고 있습니다
   보드를 채널에 언급하고 이슈들이 추가되거나 하면 적절한 곳에 링크를 연결해도 됩니다
   젠킨스 깃헙 연결 하고 구글 캘린더 연결중 입니다
   서버는 제pc에 가상서버 하나에 설치 했는데 쾌적합니다
   개인적으로 카톡으로 안하니 좋고 이력관리 되서 좋고 무엇보다 하나에서 관리가 되어 좋습니다
   저희는 전체 기능의 60%사용하는 느낌입니다.

   아하 회사 단위에서 온프레미스로 쓰시는거였군요.

   Upbase가 개인의 생산성을 향상시킨다는 부분을 강조하고 있길래 개인 생산성 관리 용도로는 어떻게 쓰고 계시는지 궁금했습니다.

   개인 할일 플러그인등 여러 플러그인이 있고 개인적으로는 피그자에서 플러그인 만들어서 웹훅 연결도 진행중입니다

   해커뉴스에 올라온 소개를 본건데..
   기존에 Trello, Anana 등을 사용하다가 맘에 안들어서 2년간 직접 만들었다고 하네요.
   I built my own PM tool after trying Trello, Asana, ClickUp, etc.
"
"https://news.hada.io/topic?id=7790","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   보드게임을 돌렸습니다..! 2연승을 해서 기분이 매우 좋았죠

   싱글인 대학동기 집들이 합니다.
   진작에 잡았지만 코로나 때문에 여러번 미뤄졌고 거의 반년만에 하게되군요.
   간만에 친구들 만날 생각에 즐겁네요.

   주중에 허리를 삐끗해서 모든 일정을 다 취소했네요.
   이번 주말은 그냥 푹 쉬어야할듯 ㅠ 다들 건강관리 조심하세요!
"
"https://news.hada.io/topic?id=7743","OpenSSL의 Punycode 취약점이 발생한 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     OpenSSL의 Punycode 취약점이 발생한 이유

     * 3.07 릴리즈가 수정한 취약점에 대한 이야기
     * Punycode는 Unicode를 ASCII로 인코딩 하는 방법으로 DNS에서 사용
     * 이걸 처리하는 ossl_punycode_decode 함수에서 오버플로우가 발생해서 패치한 것
     * 이 함수는 실제로는 X.509 체인 기능에서 이메일 주소에 Name Constraints를 적용할 때만 사용

   전 세계 보안 위기, 오픈SSL 치명적 취약점 발견
   OpenSSL 3.0 - CVE-2022-3602, CVE-2022-3786 취약점 및 조치 방안 정리
"
"https://news.hada.io/topic?id=7721","Arm 비즈니스 모델 변경 - OEM 파트너들도 Arm에서 직접 라이센스 받아야함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Arm 비즈니스 모델 변경 - OEM 파트너들도 Arm에서 직접 라이센스 받아야함

     * Arm과 퀄컴 사이의 법적 분쟁에서 나온 자료에 의하면,
          + 2024년 이후엔 Arm은 더이상 TLA에 따라 퀄컴과 같은 반도체 회사에는 CPU 라이센스를 주지 않고, 기기 제조사에만 라이센스를 줄 것
          + 또한 Arm 기반의 SOC에서 더 이상 외부 GPU, NPU, ISP는 허용되지 않음
     * 이게 사실이라면, Arm은 퀄컴과 OEM에 대한 위협으로 매우 안좋게 행동하고 있는 것
          + Mediatek 및 Samsung 같은 파트너들은 두려워 해야함
     * 이는 RISC-V 로드맵을 더 가속시킬 것
     * Nvidia는 20년 Arm 라이센스를 맺어놔서 괜찮을거고, Apple 역시 Arm 설립부터 관련된 역사때문에 좋은 라이센스 조건을 가지고 있음. Broadcom 도 매우 유리한 조건을 가지고 있다고 들었음.

   둘중 하나 인건가..

   arm 을 인수하거나.. RISC-V로 이동을 하거나..
"
"https://news.hada.io/topic?id=7767","자바 동시성에 대한 새로운 접근 ‘가상 쓰레드’","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       자바 동시성에 대한 새로운 접근 ‘가상 쓰레드’

   자바 19에서 가장 눈에 띄는 변화는 가상 쓰레드, 19부터 프리뷰 형태로 공개
"
"https://news.hada.io/topic?id=7712","페이스북/트위터가 미국 정부를 위해서 콘텐츠 게시중단을 쉽게 요청하는 포털을 만들었음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            페이스북/트위터가 미국 정부를 위해서 콘텐츠 게시중단을 쉽게 요청하는 포털을 만들었음

     * 유출된 미국 국토 안보부(DHS) 문서에 따르면, ""거짓 정보""를 감시하기 위해서 FBI 쪽에서 ""책임을 지는 미디어 인프라""가 필요하다고 요청
     * 페이스북/트위터가 미국 정부를 위해서 콘텐츠 게시중단용 포털을 만들었고, 이 포털은 NGO 파트너와 함께 패러디 계정 및 정부의 팬데믹 정책에 동의하지 않는 콘텐츠를 포함하여 광범위한 콘텐츠를 검열하는데 사용되었음
     * 지난주에 일런 머스크가 해고한 트위터의 Vijaya Gadde는 DHS와 매월 만나서 센서쉽 계획을 논의했음

   국내와는 상관없는 이야기일것도 같아서 본문에 적지않고 댓글에 요약을 옮겨둡니다.
   긱뉴스 본문에 내용이 없는 기사는 슬랙/페이스북/트위터 등으로 공유되지 않습니다.
"
"https://news.hada.io/topic?id=7720","Mozilla Ventures: 책임 있는 기술에 대한 투자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Mozilla Ventures: 책임 있는 기술에 대한 투자

   내년초 신생기업에 투자하기 위한 펀드인 Mozilla Ventures를 출시예정입니다.

   동기
     * Mozilla, ProtonMail, Hugging Face, Kickstarter와 같이 이윤보다 사람을 우선시하는 성공적인 회사와 제품을 만들수 있음이 증명되어왔음
     * 이와 같은 회사를 만드는 설립자가 훨씬 더 많다면 인터넷과 기술 산업을 더 나은 방향으로 나아갈 수 있는 기회
     * Mozilla가 몇 년 전에 스타트업 지원 프로그램을 시범 운영할 때 수백 명의 젊은 창업자와 팀이 Mozilla와 같은 아이디어를 가지고 있었지만, 사명에 맞는 투자자, 멘토, 인큐베이터(사무실이나 설비 지원자)를 찾기가 어려워했음
     * Mozilla는 수십 개의 회사에 멘토링과 소규모 사전 초기 투자를 진행했지만 보다 체계적인 관리가 필요!!

   설립
     * 모질라 선언문을[사생활, 포용, 투명성, 접근성, 인간 존엄성] 만족하는 신생 기업을 위해 최소 3,500만 달러로 펀드를 출시할 계획
     * 이 펀드는 Mohamed Nanabhay가 이끌것이며 민주주의와 언론의 자유를 발전시키기 위해 고안된 디지털 미디어 비즈니스에 투자한 10년의 경험을 가지고 있음
     * 이미 Secure AI Labs , Block Party 및 heylogin 처럼 믿음을 입증하는 세 개의 회사를 찾음
     * 그러나 기존 기술 독점, 벤처 자금에 대한 모든 자금 , 대중의 냉소와 같은 거대한 도전 과제를 가지고 있음
"
"https://news.hada.io/topic?id=7753","인공 일반 지능(Artificial General Intelligence, AGI)으로 가는 길 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         인공 일반 지능(Artificial General Intelligence, AGI)으로 가는 길

나의 설계원칙

     * 심플! 영감을 주는 도전을 목표로
     * 연구나 구현 세부가 아닌 특정 기능에 중점을 둔 리스트
     * 명확한 정의보다 재미있고 동기부여가 되도록
     * 복잡도 증가에 따른 마일스톤 순서

[로드맵 v0.1]

  Toy-level intelligence

     * AI가 틱택토(1972), 체스(1997), 바둑(2016), 스타크래프트/포커(2019) 등에서 사람을 이기는 것은 이미 완성
     * 남은 것은 AI가 드론 경주 및 자동차 경주(F1)에서 사람을 이기는 것

  Physical intelligence

     * AI 로봇이 도시환경에서 일주일 살아남기
     * AI 로봇이 사람의 머리를 깎거나, 맞는 옷을 입거나, 브러시로 페인트를 그리거나, 특별한 커피를 만들거나,
     * AI 로봇이 두개의 손으로 피아노, 기타등을 연주하기

  Athlete level intelligence

     * AI가 일반 자동차를 운전해서 F1/NASCAR 등의 경주에서 이기기
     * AI가 골프, 테니스, 당구에서 사람을 이기기
     * AI 로봇팀이 충구, 아이스하키에서 사람을 이기기

  Storytelling intelligence

     * AI가 주요 잡지에 실릴만한 단편 글 쓰기
     * AI가 주요 상을 수상할만한 단편 글 쓰기
     * AI가 메이저 출판사에서 출판되는 소설 쓰기
     * AI가 주요 상을 수상할만한 소설 쓰기
     * AI가 주요 극장에서 공연할 만한 연극 극본 쓰기
     * AI가 주요 상을 수상할만한 극본 쓰기

  Artistic intelligence

     * AI가 그린 그림으로 예술대회에서 상 타기 (2022년 MidJourney로 탐)
     * AI가 그린 그림이 1억 넘는 돈으로 팔리기 (2021년에 NFT로 이미 성공)
     * AI가 생성한 음악이 Spotify 같은 플랫폼에서 월 1백만 청취자 넘기
     * AI가 조각한 조각이 박물관에 전시
     * AI 또는 로봇이 1명의 사람과 능숙하게 협연(Jam)
     * AI 또는 로봇이 여러명의 사람들과 능숙하게 협연
     * AI 또는 로봇이 여러명의 사람들과 재즈 스탠더드를 협연

  Social intelligence

     * 1만명 이상의 사람들이 엔터테인먼트용 챗봇과 지속적인 관계(매주 상호작용)를 맺음
     * AI 또는 로봇이 훈련되지 않는 강아지에게 ""앉아""를 훈련 시킴
     * AI 또는 로봇이 5분짜리 스탠딩 코메디를 사람들 앞에서 하고, 몇명을 여러번 웃게 만듦
     * 로봇이 사람의 동작을 모방하여 새로운 물리적 움직임을 따라하기(계란을 깨는 방법을 배우기 등)
     * 로봇이 사람의 예술적인 동작을 모방(춤 동작등)
       (중략)

  Economic intelligence

     * 로봇이 Goertzel College Student Test를 통과
     * 로봇이 주유소에서 직원으로 일하며 주유해주고, 고객의 요구에 응대
     * 로봇이 주유소 캐쉬 레지스터에서 일하기
     * 로봇이 Nilsson Employment Test를 통과
     * AI가 6개월 이상 USD $1M+ 시총을 넘는 암호화폐를 생성하기 ($10M+, $100M+, $1B+ 까지)
     * AI가 사람 또는 팀과 부가 가치에 대해서 전략을 논의
       (중략)

  Intimate intelligence

     * 로봇이 아기를 재움
     * 로봇이 부모가 저녁식사 나간동안 애기를 봐주는 유모가 될수 있음
     * 로봇이 유아, 5세, 8세, 2명의 아이에 대한 유모가 되기
     * 인간과 친구가 될수 있는 AI(2년이상 AI와 한달에 한번은 얘기를 나눔)
     * AI가 사람과 철학에 대해서 의미있는 대화를 진행
     * 인간 아이를 낳을 수 있는 로봇(!)

  Meta-intelligence

     * 심심해 하고 새로운 도전을 찾는 AI
     * AI가 웹브라우징 또는 비슷한 것을 통해서 자신의 새로운 관심사를 찾음
     * 자신만의 독특한 개성을 지닌 AI
     * AI 또는 로봇이 자연으로부터 자체 에너지원을 생성
     * AI 또는 로봇이 자신의 하드웨어/소프트웨어를 직접 수리 및 업그레이드
     * AI 또는 로봇이 세상이 어떻게 돌아가는지에 대한 새로운 설명을 작성하여 인간과 공유(과학자 마인드셋)
     * 다른 사람 또는 AI에게 자신의 새 아이디어를 확신시킬수 있는 AI
     * 엄청난 수의 (어쩌면 모두?) 인간을 조정할수 있는 AI(새로운 세계 질서로서의 AGI)

   생각하던 미래들을 여기에 모아놓았네요ㅎ 감사합니다!

   이렇게 로드맵으로 정리해서 보니까 아직 갈길이 멀구나/재미있는데? 라는 생각이 동시에 들어서 흥미로운 글이었습니다.

   존 카맥의 새로운 AGI회사 Keen Technologies, 260억 투자 받아
"
"https://news.hada.io/topic?id=7729","Mastodon, 머스크의 트위터 인수 후 사용자 7만명 증가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Mastodon, 머스크의 트위터 인수 후 사용자 7만명 증가

   마스토돈은 인스턴스(서버)들의 Federated 네트웍 → Fediverse 의 일부

   https://mastodon.social/@Gargron/109254422325596095
   수치의 출처는 아마 메인테이너이신 Gargron (Eugen Rochko) 님이신가봅니다.
   어느 서버들의 사용자수 증가를 취합하셨는지는 따로 명시되어있지 않은 것 같네요

   글에서도 얘기하지만 4.5억명 DAU라는 트위터에 비해서, 7만명이라는 숫자가 의미 있는 것인지는 잘 모르겠..
   Fediverse 의 비밀무기 ActivityPub
   데비안이 Fediverse 인스턴스를 런칭
"
"https://news.hada.io/topic?id=7722","EnCodec - 페이스북의 AI를 이용한 오디오 압축 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   EnCodec - 페이스북의 AI를 이용한 오디오 압축 기술

     * ""High Fidelity Neural Audio Compression"" 논문과 함께 코드 공개
     * 인터넷에서 오디오를 쉽게 공유할수 있도록 신경망을 이용하여 전송량을 최소화
          + 64Kbps에서 MP3에 비해 약 10배의 압축률 달성
          + 이 정도 기술은 음성에 대해서는 이미 개발된 바 있지만, 음악 배포의 표준인 48kHz(CD품질)에 대해서는 최초
     * 아직 비디오는 지원하지 않지만 화상회의, 영화스트리밍, VR등을 위한 이니셔티브의 시작

   아니 오디오 압축에서 까지 AI 가.....
"
"https://news.hada.io/topic?id=7826","SpaceX가 트위터에서 Starlink용 대규모 광고 캠페인 패키지를 구매","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               SpaceX가 트위터에서 Starlink용 대규모 광고 캠페인 패키지를 구매

     * Starlink 인터넷 서비스를 호주와 스페인에서 광고하기 위한 것
     * 이 takeover 캠페인의 규모는 보통 $250k 이상

   트위터가 광고 효과가 있던가요. 타게팅만 봐도 당황스럽던데...

   트위터 광고주 떠난걸 메우려는게 아닌가 싶네요.
"
"https://news.hada.io/topic?id=7740","jc - CLI 도구의 출력을 JSON화 하는 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      jc - CLI 도구의 출력을 JSON화 하는 도구

     * 많이 사용하는 CLI 도구, 파일타입, 스트링을 파싱해서 JSON/YAML/Dictionary 로 변환
          + dig, crontab, df, dir, du, git log, history, ifconfig, iptables, ls, ping, ps, rsync, systemctl, top, vmstat, wc, who,..
     * jq 등의 JSON 도구로 Piping 가능
     * 파이썬 라이브러리로 사용해서 결과물을 파이썬 딕셔너리로도 이용가능
"
"https://news.hada.io/topic?id=7780","Google, 자신을 프로그램할 수 있는 로봇을 테스트 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Google, 자신을 프로그램할 수 있는 로봇을 테스트 중

     * 조작자가 자연어로 ""노란 블럭을 집어""라고 명령하면 나머지는 로봇이 코드를 직접 작성해서 처리
     * 구글의 Pathways Language Model(PaLM) 기반으로 개발된 ""Code as Policies(CaP)"" 언어 모델
          + 자연어 명령을 실행가능한 코드로 변환
          + 런타임에 새로운 동작을 추가하기 위해 API 호출을 재구성하고, 새로운 함수를 만들고, 피드백 루프를 표현
     * CaP 논문과 코드를 공개

   와우.....

   아... 이게 발전 하면 이제 정말 인공지능 로봇 비서가 나오겠네요.. -_-
"
"https://news.hada.io/topic?id=7717","아이폰 15는 기계식 볼륨/전원 버튼대신 햅틱 피드백을 쓰는 버튼으로 교체할 수도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             아이폰 15는 기계식 볼륨/전원 버튼대신 햅틱 피드백을 쓰는 버튼으로 교체할 수도

   아이폰8 이후의 홈 버튼이나 맥북의 포스터치패드가 그랬던 것처럼

   모든 버튼은 터치+햅틱으로 하고,
   충전은 무선으로만,
   다이나믹 아일랜드까지 없어지면, 완성형 되는거지요.
"
"https://news.hada.io/topic?id=7741","SILE - 현대적으로 재작성한 Te현대적으로 재작성한 TeX

     * 아름다운 출력물을 만들기 위한 오픈소스 조판(Typesetting) 시스템
     * TeX에서 쓰이던 것을 최신 표준들로 대체
          + METAFONTs(xetex) → TrueType
          + DVI → PDF
          + 7bit ASCII → Unicode
          + 매크로 언어 → 마크업 및 임베디드 프로그래밍 언어

   오호.. 무엇보다 최신 표준으로 바뀐 것들이 좋네요.

   아, 댓글에서 간단한 <strong>강조</strong> 같은 태그가 작동할까요?

   안하는군요 ;ㅁ;

   오! 아니면 혹시 markdown?!
   Hello
   죄송합니다 자꾸 테스트해서... 어디 확인할 수 있는 곳이 없어서 ;ㅁ;

   아 마크다운 지원 기능을 추가하고 이용법에 추가해두지를 않았네요.. 추가해 두겠습니다 ㅠ

   이쪽도 굉장히 뭔가 복잡하더라고요..
   https://reddit.com/r/LaTeX/…

   음.. 저는 TeX랑도 친하지 않긴한데.. 그렇다고 이렇게 만들어야 하나 싶기도.. 출력은 참 어려운것 같아요.
"
"https://news.hada.io/topic?id=7711","Turbopack이 정말 Vite 보다 10배 빠른가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Turbopack이 정말 Vite 보다 10배 빠른가요?

     * Vue.js/Vite 개발자 Evan You의 글
     * Turbopack을 공개하면서 ""Vite보다 10배 빠름""을 강조하고 많은 곳에서 사용되었음
          + Next 13 + Turbopack 이 React HMR을 0.01초 걸린데 반해, Vite는 0.09초 걸렸다는 벤치마크
          + 다른 성능에서는 10배 빠른 것은 없고 오직 HMR에서만 그렇게 나옴
     * Vercel이 처음엔 실제 HMR 벤치마크 자료를 첨부하지 않아서 직접 Next 13과 Vite 3.2를 비교해 봤음 (코드와 방법 모두 공개)
          + 실제 비교결과는 Next HMR이 2배 정도 빠르게 나옴
          + 하지만 이건 Vite가 Babel을 이용하기 때문에 약간 다르게 나올수 있음
          + 똑같이 Rust로 코딩된 SWC를 이용하면 속도가 거의 비슷하게 나옴
            (Vite가 SWC를 사용하지 않은 것은 SWC의 크기 문제 때문. Vite가 19MB인데, SWC가 58MB)
          + 흥미로운 것은 임포트 하는 컴포넌트가 많아지면 Next/Turbo는 4배 느려지는데 반해 Vite는 2.4배만 느려짐
     * 에반이 벤치마크를 공개하고 나서, Vercel도 블로그에 벤치마크 방법을 공개
          + 결과적으로 Turbopack이 10배 빠르려면, SWC를 사용하지 않아야 하고, 30k가 넘는 모듈을 포함해야 하며, 핫업데이트된 모듈이 평가되는 시간만 측정해야 그렇게 나온다는 것

   nextjs 가 nextjs 했네영

   Turbopack: rust로 작성된 webpack의 후계자

   벤치마크에 ""누구보다 얼마 빠름"" 적을 때는 애초에 평가 방법과 데이터를 자세히 공개해야..
"
"https://news.hada.io/topic?id=7760","Step CI - Pingdom & Checkly의 경량 대체제 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Step CI - Pingdom & Checkly의 경량 대체제 오픈소스

     * API 테스팅 과 모니터링 자동화 오픈소스
     * 언어 무관(Agnostic) - YAML로 쉽게 설정 가능
     * REST, GraphQL, gRPC - 여러 API타입을 한번에 테스트
     * 셀프호스팅 해서 로컬 네트웍 테스트도 지원
     * 다양한 연동 : Docker, Github Actions, GitLab CI/CD, Circle CI, Azure Pipelines, Google CloudBuild, TeamCity, Jest, Ava, Mocha
"
"https://news.hada.io/topic?id=7794","Thunderbird Supernova 프리뷰 - 새로운 캘린더 디자인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Thunderbird Supernova 프리뷰 - 새로운 캘린더 디자인

   2023년 릴리즈 목표로 최신 인터페이스 및 기능 탑재 중
"
"https://news.hada.io/topic?id=7774","전세계 음악 저작권료, 2021년에 $39.6b(54조원)로 최고치 경신","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                전세계 음악 저작권료, 2021년에 $39.6b(54조원)로 최고치 경신

   2020년 $33.6b에서 18% 증가
"
"https://news.hada.io/topic?id=7746","Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2022년 11월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2022년 11월)

   일할 곳을 찾고 계시다면, 간단히 정보를 남겨 주세요.

     지역 :
     리모트 필요 :
     기술 :
     이력서 :
     이메일 :

   위 정보는 구인을 위해서만 이용해 주세요

   ~~

   혹시나 봇들이 이메일 주소를 크롤링하는 경우가 있을 수 있으니 '[at]' 이나 '[앳]' 등을 써서 이메일 주소를 난독화 해주셔도 좋습니다.
   가능하면 자신의 깃헙/링크드인 URL을 남겨 주세요.
   HN의 Who wants to be hired 를 참고 했습니다.
"
"https://news.hada.io/topic?id=7723","구글 시트에서 동작하는 =GPT3() 함수 데모","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       구글 시트에서 동작하는 =GPT3() 함수 데모

     * 구글 시트의 복잡한 함수들을 사용하지 않고, 특정 데이터에 대해서 문장으로 질의하면 GPT3가 데이터를 뽑아주는 함수
     * 데이터 정제, 제품 리뷰 요약, 데이터 기반 자동 문구 작성(감사 편지), 피드백 분류 등에 사용 가능
     * 사용 신청 받는 중
     * 함수는 2가지
          + =GPT3(prompt, temperature, model, max_tokens)
          + =GPT3_RANGE(입력 예제들, 출력 예제들, 입력값, temperature, model, max_tokens)
"
"https://news.hada.io/topic?id=7773","The State of Frontend in 2022","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     The State of Frontend in 2022

     * 125개국 3700명이 설문 응답
     * 근무 형태 : 원격 근무 56%, 하이브리드 39%, 사무실에서만 근무 5%
     * 회사 크기 : 501+ 30%, 51~200 20.4%, 11~50 19.9%, 2~10 10.5%, 201~500 10.2, 1인기업 8.8%
     * CI 사용 79.7%
     * 1년간 TypeScript 사용여부 : Yes 84.1%
     * 선호 에디터 : VSCode 74.4%, JetBrains 18.8%, Vim 3.3%, Sublime 1.4%
     * 1년간 사용한 도구들 : Eslint 83.4%, Prettier 79.8%, Webpack 76.8%, TSLint 38.5%, Vite 25%, Esbuild 24.3%, Rollup 22.1%, Parcel 14%
     * 벤더 : AWS 45%, 자체 서버 36%, Vercel 25%(작년 5%에서 급성장), Netlify 25%, GCP 13%, Azure 12%

   Vercel 이 Netlify 와 덩치가 같아졌네요. 원격근무 56%!

   최근에 공격적으로 확장하던게 성과가 있는듯 합니다. 여러모로 훌륭하네요.

   Azure가 시장 점유율에 비해 생각보다 낮네요

   azure는 게임 서버 시장에서 점유율 높은걸로 알고 있습니다

   Esbuilt -> Esbuild
"
"https://news.hada.io/topic?id=7705","2023년 데이터에 대한 9가지 예측 (32p 슬라이드)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    2023년 데이터에 대한 9가지 예측 (32p 슬라이드)

     * 2024년엔 데이터 워크로드의 75%가 클라우드에서 처리
     * 데이터 워크로드가 용도에 따라 분화 및 특화 (인메모리, DW, DL)
     * Metrics 레이어가 데이터 아키텍처를 통합
     * LLM(대규모 언어 모델)이 데이터 엔지니어의 롤을 변경
     * WASM이 데이터에서 필수요소가 됨
     * Notebook이 데이터 앱으로 20%의 엑셀 사용자를 흡수
     * Cloud-Prem이 표준이 됨
     * Data-Observability는 필수
     * 데이터의 시대가 계속
"
"https://news.hada.io/topic?id=7744","RStudio, Posit으로 이름 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         RStudio, Posit으로 이름 변경

     * RStudio IDE, Shiny, tidyverse 같은 오픈소스를 개발하는 B Corp 회사
     * 사명 변경을 통해서, 이제 R과 Python 커뮤니티 까지 포함하게 확장하여 ""R과 Python 기반의 데이터 사이언스용 도구""를 만드는 회사가 되겠다는 것

   Posits, AI의 수학을 향상시키는 새로운 종류의 숫자

   단어가 기존에 쓰이는 단어여서 혼동이 있을 수도 있는데 왜 이걸로 했냐라고 얘기하는 사람도 있네요.
   나름 의도한게 아닐까 하는 생각도 듭니다만..

   B Corp 설명은 RStudio가 Public Benefit Corporation으로 전환 글에서 보시면 됩니다.
"
"https://news.hada.io/topic?id=7820","가정용 e-Ink 날씨 디스플레이 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         가정용 e-Ink 날씨 디스플레이 만들기

     * Waveshare 10.3"" e-Ink 디스플레이 (1872x1404)
     * Raspberry PI Zero W + PiJuice Zero + 12000mAh battery
     * IKEA Hovsta Frame
     * GCP 에서 API로 날씨 가져와서 PNG로 생성

   MagInkCal - 벽에 걸어두는 E-Ink 구글 달력 만들기
   킨들을 저전력 대쉬보드로 사용하기
   자동 업데이트 되는 NYT 첫페이지를 벽에 걸기
"
"https://news.hada.io/topic?id=7707","Replit, AI 코딩 도우미 Ghostwriter 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Replit, AI 코딩 도우미 Ghostwriter 공개

     * GitHub CoPilot과 비슷한 방식으로, Replit의 온라인 개발환경에서 코딩시에 AI로 코드를 추천
     * JavaScript, Python에서 가장 잘 동작. 16개의 언어 지원(C, Java, Perl, Ruby, HTML, CSS, SQL,..)
     * 4개의 컴포넌트로 구성
          + Complete Code : 기존 코드를 분석하여 코드 자동 완성
          + Generate Code : 새로운 코드를 생성
          + Transform Code : 리팩토링 및 표준에 맞게 현대화
          + Explain Code : 기존 코드를 분석하여 자연어로 함수를 설명
     * 월 $10(1000 Cycles)
"
"https://news.hada.io/topic?id=7775","Layoffs.fyi - 정리해고 트래커","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Layoffs.fyi - 정리해고 트래커

     * COVID-19 이후 모든 테크 스타트업들의 정리해고 상황을 트래킹 하는 웹사이트
     * 2022년 기준 763개의 스타트업이 106046명 정리해고
     * COVID-19 이후 총 1303개의 스타트업이 202037명을 정리해고
     * 가장 많은 분야는 Food & Transportation
     * 2020년에는 Travel & Transportation이 많았으나 2022년 와서는 Food가 많음
"
"https://news.hada.io/topic?id=7731","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   토요일에 코엑스 메가박스가서 영화를 보고, 코엑스 전시관 몇개 둘러보려고 합니다. 그리고 밤에는 영국 친구 만나서 영어 연습 할 겸 같이 운동 하려고 해요.

   일요일은 아침은 그토록 기다리던 롤드컵 결승전이 열리는 날입니다. 우승 후보로 전혀 거론되지 않던 언더독팀이 결승까지 올랐기에, 스토리도 한껏 풍부합니다. 집에 친구 초대해서 삼겹살 구워먹으면서 시청하려고 해요. 경기가 끝나면 늦은 점심쯤 될텐데 관악산 등산을 가려고 합니다. 등산 갔다가 목욕하고 개운하게 잠에 들면 다시 또 월요일일겁니다ㅎㅎㅠ

   최근에 새로운 유튜브 채널들을 발견해서 이 채널의 영상들을 볼 예정이에요.

   다나옷(다시 보는 나의 옷장) 이라는 채널인데요. 패션에 대해서 굉장히 재미난 방식으로 얘기를 해줘서 즐겁게 보고 있습니다. 그냥 옷 브랜드 소개보다, 옷을 만드는 기본에 대한 이야기인 원단이나 직조 방식 등에 대해서 설명을 해줘서 흥미롭습니다.

   패션 채널을 보다보니 다른 패션 채널도 추천에 뜨던데, 론나 Ronna 채널의 론 님이 체형이 친숙해서.. 여기도 같이 보고 있습니다.

   그리고 간만에 오버워치2 를 조금 하는중입니다. 1하고 뭐 틀린게 별로 없는데.. 재미있네요? ㅎㅎ
"
"https://news.hada.io/topic?id=7755","Ask GN: 현재 가장 열정을 가진 것이 뭔가요? 댓글로 알려주세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Ask GN: 현재 가장 열정을 가진 것이 뭔가요? 댓글로 알려주세요

   인터넷이 좋은 이유중 하나는 남들이 어떤 것에 열정을 가지고 있는지를 예전 보다 쉽게 알 수 있다는 것인데요. 이걸 통해서 뭔가 새로운 것을 발견하기도 하고, 흥미로운 것들에 대해서 알수 있으며, 언젠가 나도 저거 한번 해봐야지 하는 생각이 들게 합니다.

   아주 사소한 것도, 남들이 전혀 몰라주는 것도 좋으니 한번 적어주시면 좋겠습니다.

   알고리즘 문제풀이 유튜브 열씸히 하고 있어요.
   https://www.youtube.com/@codapul

   카카오 기출문제를 풀고 있어요. 예전에는 삼성전자 기출문제를 풀었었구요.

   저는 이제 나이가 40이 넘어가는 개발자입니다. 주로 개발하는 언어는 PHP 이지만, 중간에 보직이 서버쪽으로 변경이 되면서 주로 백엔드 개발 위주로 하고 있습니다.
   그러다 보니, 실력이 좋은것도 아닌데, 회사에서는 기술고문(?) 역활을 하게 되었네요. -0-a
   그래서 그런지 저는 안정성과 지속가능성을 가장 중요시하게 봅니다.
   온라인 학습 서비스를 제공하고 있어서, 가장 중요한건 서비스의 활성 상태를 유지하는 지속 가능성과 그 지속 가능성을 있게 하는 안정성에 초점을 두고 가게 됩니다.
   아직 클라우드로 가지 않고, 서버를 직접 운영하고 있는 상태지만, 여러가지 가능성을 두고 클라우드 이전을 검토중에 있긴 합니다.
   (클라우드가 직접 관리보다는 좋기는 하지만, 오류가 터졌을때 손가락만 빨고 있어야 하는게 맘에 제일 걸리더군요.;;; 2018년 11월달 발생한 aws 국내 서비스 불가 사건만 보더라도요. ㅠ)

   전 러닝이죠.
   결혼을 기념하는 날에 아내와 한라산에 오르기로 해서 준비운동겸 하고 있어요.
   런데이 라는 앱을 이용하여 한번에 30분을 뛰기 위한 프로그램을 2~3일에 한번씩 진행하고 있는데,
   운동을 하고 나선 상쾌한 기분을 느낄 수 있어서 좋아요. 무언가 했다 라는 느낌도 들고, 잘 살고 있다는 느낌도 ㅎㅎ

   앗 저도 근처 공원트랙을 뛰는데 그냥 아무런 도구없이 애플워치로 러닝만 켜고 팟캐스트 들으며 뛰거든요. 런데이 앱 한번 살펴보겠습니다. 고맙습니다!

   Vim 입니다. 쓰면 쓸수록 더 재미있게 느껴집니다.

   근력운동을 시작한지는 꽤 오래 되었는데(거진 10년) 체계적이게 해본것은 올해가 처음인 것 같습니다. 점점 무게도 붙고 자신감도 붙으면서 취미이지만 더 열심히 해보아야겠다는 생각이 드네요.
   내년엔 노비스( 2년 이내 3위 입상 기록 (타 대회 포함)이 없는 경우) 로 출전해보려고 합니다! 건강이 최우선이라 몸을 헤치지 않으면서 준비해보려구요 ^^

   아주 중요한데,
   남들이 전혀 몰라주는 것이 있습니다.
   우리 인간의 삶이 어디서와서 어디로 가는가?
   어떻게 사는게 행복한 삶인가?

   무엇을 해야 내가 행복한가?
   나는 지금 어디즈음 와있는가?
   질문만 많지요?

   결국 우리네 삶은 무엇을 찾고 보고 하는 것이 아니라
   어디를 바라보고 살아야 하는 것이 중요한게 아닐까 싶습니다.

   궁극의 행복의 길이 있다면
   내 모든 것을 걸고 그 길로 가야 겠지요.

   운영자님께서 종교가 있으시다면
   종교가 없더라도 절대적 존재에 대한 믿음이 있으시다면
   조심스럽게 다음책을 추천 드립니다.

   저는 이 책을 읽으면서
   어렵고 복잡한 내용을 이렇게 간결하고 이해하기 쉽게
   설명을 할수 있을까 하면서 감탄을 하며 읽었습니다.

   이것은 저자의 오랜동안의 체험에서 우러러 난 것들을
   적은 것이기에...

   우리는 행복을 밖에서 찾습니다. 저 멀리 하늘나라와
   내가 가지지 못한 것들에서, 남들이 얼마나 나보다 더 많이 가졌고
   남들이 나보다 얼마나 더 인정받고 살고 있으며
   이런것들을 부러워하며 그것을 소유하게 되면 행복해질거라는
   착각을 합니다.

   ""관상과 식별"" 이란 책입니다.
   https://paolo.kr/goods/view?no=2456

   3개월차 신입 개발자인데 유~~명한 대기업이 가고 싶어서 하나씩 준비 중 입니다.

   현직장이 중소기업이지만 처우가 정말 좋아서 왔는데 주변 친구들 대기업간거 보면 '나도 할 수 있을 것 같은데.. 좀 더 준비 해 볼걸 그랬나?' 라는 생각이 떠나질 않더라구요.
   자격지심이 아니라 몸값을 올리기 위한 열정으로 치환해서 생각하고 있습니다 ㅎ ...!!

   그런 의미에서 이거 준비하면 좋다! 싶은거 추천 해주실 분 있나요?

   뜨끔하게 만드는 좋은 질문이네요.

   요즘은 사이드나 블로그에 힘을 잘 쓰지 못하고 게임만하고있습니다. 사실 게임말고 다른것들을 좀 하고싶은데 업무강도가 올라가고 나니 사이드를 할만한 힘이 잘 생기지가 않네요. 게임은 사실 내 행동이 바로 결과로 나오기 때문에 계속 하는건 아닐까 하는 생각을 하곤 합니다. 사이드 프로젝트는 바로바로 사용자의 반응이 잘 나오지 않으니 처음 시작할때의 흥미가 금방 떨어지는 것 같습니다. 나 혼자만 재밌게 만드는건 생각보다 오래 유지되기 어려운 것 같아요. 같이 공감하고 즐길 수 있는 것이 오래 유지되는 즐거움 같다는 생각을 해봅니다.

   만드신 사이드 프로젝트를 Show GN에 올려주시면.. 많은 분들이 반응해주실꺼에요! ㅎㅎ

   오래 다니던 회사를 그만두고 IT 분야로 새로운 커리어를 시작하게 되었습니다. 모르는 것이 많지만 조금씩 조금씩 새로운걸 배워가는게 너무 재밌더라구요. 많이 경험 쌓고 공부도 많이 해서 제 가치를 올리는데 집중하고 있습니다.
   취미 분야에 있어서는 보드게임으로 보드게임 만화를 개인 블로그 / 여러 보드게임 커뮤니티에서 연재하고 있습니다. 다행히 좋은 기회가 있어 협찬도 간간히 받고 있는데, 앞으로 더 많은 기회가 있으면 좋을 것 같아 흥미를 가지고 열심히 하고 있어요!
   개인 블로그나 인스타 등등 채널을 키우고 싶은데 아직은 지지부진하네요. 꾸준히 하는게 답일 것 같아서 조금씩 계속 하고 있어요!

   네메시스 만화 잘봤습니다(?!)

   (뜨끔)

   안그래도 나이들면서 젊을때의 열정이 그립다는 생각이 문득문득 들곤하는데
   한번 생각해봐야겠네요..

   여기 긱뉴스는 알게된지 몇달 안되었는데 너무 재미나고 유용한 정보들이 많아서
   매일 몇번이고 새로운소식 없나 찾곤합니다.
   만드신분들의 열정에 다시한번 감사드립니다.

   고맙습니다! 제 열정을 유지하는데 큰 도움이 됩니다.

   음.. 제 자신을 돌아보니 본업(?)에 가장 열정이 많은 듯해요. 늘 '아자아자!'하는 마음은 아니고 어떨 때는 지루하고 싫을 때도 있고, 지치고 싫증날 때도 흥미를 잃을 때도 있는데요. 주어진 업무를 마무리할 때는 그런 마음을 회복할 수 있어서 완성이 주는 쾌감 때문에 힘을 얻고. '가장 잘하고 싶은 일은 이거'란 생각을 하게 돼요.

   건강하고, 건전하게 사는 데에도 전보다 더 열정을 갖고 있어요. 영양제 챙겨 먹고, 아침에도 건강식 먹고, 끼니 제때 챙겨먹고, 햇볕보고, 스마트폰 덜 보는 식으로 열정(?)을 발휘하고 있어요.

   또 시간을 잘 쪼개서 쓰도록 의식하거나, 일이 계획대로 안 되고, 뻘짓으로 시간을 허비한 일이 있어도 자책을 너무 오래하지 않고 그 다음에 어떻게 대처할지 궁리하는 데 더 열정을 쏟고 있습니다.

   말씀하신 행동들이 흔히 얘기하는 Sustainable 의 핵심 아닐까 합니다. 훌륭하시네요!

   저는 긱뉴스를 만들고 운영하는게 3년째 1순위 인듯 합니다. 매일 수백개의 기사를 보고, 그중에 흥미롭고 남들이 관심 가질만한 뉴스를 골라서 읽기쉽게 정리해서 올리고 있습니다. YC가 운영하는 HackerNews의 분위기가 너무 부러웠어요. 수많은 개발자/창업자/VC/CEO/CTO 가 새로운 기사를 보러 들어오고, 거기서 자신들의 의견을 적고, 남들에게 도움이 되는 글들을 남겨주는 실리콘 밸리의 문화가 국내에도 있었으면 좋겠다는 생각으로 시작했는데요. 한 10년쯤 열정을 가지고 하다 보면, 사람들이 많이 알게 되지 않을까하는 생각으로 운영하고 있습니다.

   슬랙/잔디/구글챗/팀스/디스코드 봇 설치수가 거의 2000개쯤 되어가는데요. 이 숫자가 1만개쯤 되면 좋겠네요. 읽기 쉽도록 요약해서 적는 것 때문에 뉴스 올리기를 어려워 하시는 것 같아서, 해커뉴스 처럼 뉴스 제목과 링크만 올리는 것도 점차 늘려보려고 합니다. 그냥 헤드라인만 주루룩 읽어도 IT관련 소식들을 다 알수 있을정도로 뉴스가 많이 올라오는게 또 다른 목표중 하나입니다.

   개인적으로는 보드게임 취미를 열심히 키워나가고 있습니다. 인간의 기대수명이 계속 늘어나고 있어서, 늙어서 까지 재미나게 할 수 있는 것들이 뭐 있을까 고민해 봤는데 보드게임 만한게 없더군요. 다들 좋아하는 골프는 나이가 많아지고 근력이 줄어들면 사실 힘들고, 인원에도 제한이 있고요. 악기 연주나 미술도 좋지만 혼자서만 즐기는건 왠지 심심하고요.

   하지만 보드게임은 혼자서 즐기는 것부터, 2인 전용, 3~6인용 전략게임, 6~8인용 파티게임, 10명 넘게 까지 사람수에 맞는 게임들이 다양하게 있어서 어떤 숫자로 모이든 웃고 떠들면서 게임이 가능합니다. 지속적으로 두뇌에 자극을 주고, 승부욕을 자극하며, 랜덤한 주사위나 카드로 인해서 재미난 상황이 생기고, 원하는 카드를 기다리며 쪼는 긴장감과, 사람들과 얘기하며 친해지는 상황들이 즐겁습니다. 근데 주위에 보드게임에 대해서 물어보면 약간의 거부감과 오해들이 있습니다. ""애들이나 하는거 아냐?"" ""도박 아니에요?"" ""젠가/부루마불 같은게 무슨 재미가 있어요?"" 보드게임은 평생 즐길수 있고, 돈내기 걸지 않아도 충분히 재미나고, 쉬운 것부터 머리터지게 복잡한 것까지 다양한 게임들이 있습니다.

   그래서 보드게임 모임을 정기/비정기로 만들어서, IT업계에서 아는 분들을 초대해서 즐기고 있습니다. 보드게임 매뉴얼 한번 읽어본 사람들은 알겠지만, 솔직히 읽어서는 이해가 잘 안되는 것도 사실이거든요. 누군가 게임을 해본 사람이 말로 잘 설명해주면 더 편하게 게임을 할 수 있고요. 주변에 이런 보드게임 취미를 가지신 분이 있으면 그냥 가서 배우는걸 추천합니다. 그런 사람들은 보드게임이 하고 싶어서 안달나 있으니 누가 와서 배우려고만 해도 감지덕지하거든요. (네 그게 바로 저에요)

   고기도 먹어본 사람이 먹는다고 지금부터 조금씩 즐겨둬야 나중에 이런 게임 모임에 부담없이 참여가 가능합니다. 보드게임 룰이라는게 몇몇 종류만 익숙해지면 그 다음부터는 새로운 게임도 즐기기 편해지니까 겁먹지 말고 도전해 보시는걸 추천드립니다.

   그 보드게임 모임 혹시 강남 근처에서 하신다면~ ㅎㅎ
   새로운 사람도 받으시나요?!

   아 주로 하는 위치는 마포구입니다. 아직은 제가 오프라인에서 아는 분들 대상으로 하고 있어요. 같이 즐기는 사람이 좀 많아지면 더 확장하려고 합니다!

   긱뉴스 덕분에 뷰도 넓어지고 진짜 도움 많이 받고 있습니다 항상 감사합니다~

   헉 보드게임 하시나요! 보드게임의 매력 모두가 알았으면 좋겠어요 저도..
"
"https://news.hada.io/topic?id=7823","Pixelfed - 사진 공유 플랫폼 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Pixelfed - 사진 공유 플랫폼 오픈소스

     * 초기의 인스타그램과 비슷한 기능 구현
       → 시간순 정렬, 필터 적용, 포토 앨범 기능, 콘텐츠 디스커버리
     * 2FA, 계정블록, 콘텐츠 워닝, 댓글 비활성화, 계정 Mute 등 기능 지원
     * 직접 운영하거나 Fediverse에 연동된 서버 하나 선택해서 사용 가능
     * PHP + Blade + Vue 오픈소스

   마스토돈에서 Pixelfed의 탄생을 처음부터 지켜보다가 어느 정도 완성 된 후에 번역에 참가했는데 번역은 도저히 못 할 정도로 문장 구성을 해 놓았던 기억이 있어 pixelfed는 아직 손 놓고 있는 기억이 개인적으로는 강하게 남아 있습니다.
   %s도 없이 is ~~ 같은 문장투성이더라구요
"
"https://news.hada.io/topic?id=7797","DeviantArt, AI 이미지 생성기 DreamUp 서비스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 DeviantArt, AI 이미지 생성기 DreamUp 서비스 공개

     * Stable Diffusion 기반으로 만들어진 생성기
     * AI 모델 & 데이터셋에게 콘텐츠 사용여부를 허용 가능
     * 나의 스타일이 창작 이미지에 사용되었다면 크레딧을 받을수 있음
     * 창작되어 DeviantArt에게 업로드 되는 메시지는 #AIart 태그가 표시됨
     * 모든 이미지는 최고의 해상도로 업스케일됨
     * DeviantArt 멤버에게 5개의 무료 프롬프트 제공
          + Core/Core+/Pro/Pro+ 멤버십 : 월 $3.95 ~$14.95

   일러스트레이터들에게 AI 이미지가 굉장히 뜨거운 감자인데, DeviantArt에서 그런 서비스를 시작했다는 게 약간 신선하네요. 반발이 좀 있지 않을까 싶어요. 코파일럿이 나올 당시 내 코드로 AI를 학습시킨다고?하는 반응이나 개인정보 이슈, 기업들의 소송이 있었던 부분을 생각하면요.
"
"https://news.hada.io/topic?id=7762","영국 의료진, 실험실 배양 혈액을 인체에 주입하는 임상시험 실시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  영국 의료진, 실험실 배양 혈액을 인체에 주입하는 임상시험 실시

   시험의 궁극적인 목표는 생명 유지에 필수적이면서 매우 희귀하고 구하기 어려운 혈액을 제조하는 것
"
"https://news.hada.io/topic?id=7704","CSS로 표현한 포켓몬 홀로그램 카드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          CSS로 표현한 포켓몬 홀로그램 카드

     * 수집용 포켓몬 카드의 홀로그램 효과를 실제처럼 보이게 만드는 다양한 CSS 효과들을 적용
       → 3d transforms, filters, blend modes, css gradients
     * 마우스 위치에서 flare/glare 이펙트 처리
     * Holofoil 카드들을 표현하기 위해 Vertical Beam 효과 주기
     * Galaxy Holofoil / Radiant Holofoil 효과등

   CSS만 잘하면 뭐... 최고죠

   어우 저게 가능하군요 ㄷㄷㄷ

   와아...

   와 감탄만 나오네요

   제가 프론트를 포기한 이유가.. 바로 CSS죠. ㅎ

   CSS 효과로 저렇게 되는게 정말 신기하군요. CSS의 세계는 넓습니다...
"
"https://news.hada.io/topic?id=7734","디자인 패턴들 [한국어]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             디자인 패턴들 [한국어]

     * 디자인 패턴이란 ?
          + 패턴의 역사
          + 왜 패턴을 배워야 하나요?
          + 패턴에 대한 비판
     * 패턴의 분류 (22가지)
          + 생성 패턴 : 팩토리 메서드, 추상 팩토리, 빌더, 프로토타입, 싱글턴
          + 구조 패턴 : 어댑터, 브리지, 복합체, 데코레이터, 퍼사드, 플라이웨이트, 프록시
          + 행동 패턴 : 책임 연쇄, 커맨드, 반복자, 중재자, 메멘토, 옵서버, 상태, 전략, 템플릿 메서드, 비지터

   Hello from the author! I can confirm that this is an official translation. We are still polishing it, so if you find any issues, please let me know so that we can fix it. Thanks for your interest, folks!

   헉 드디어 한국어 사이트가 생겼군요!
   여기 책을 구매할 당시 한국어가 아직 작업중이었는데 드디어 완료되었나 봅니다. 공유해주셔서 감사합니다.ㅎㅎ

   감사합니다!

   엄청 잘되어 있네요
   북마크했습니다

   오 공식 번역인가요?
   누가 기여해주셨는지는 모르겠지만 감사합니다.

   https://feedback.refactoring.guru/communities/3/…

   요런 얘기가 있더라고요. 아마도 책 때문에 번역가를 따로 구하시고, 피드백만 받으신듯 합니다.

   오 그렇네요.
   https://refactoring.guru/ko/design-patterns/book
   책도 이미 한국어 번역이 되어 있네요.

   이 자료 정말 좋아서 한동안 스터디 그룹으로 함께 공부를 했었습니다.
   저도 번역 기여를 이야기했는데 워낙 분량이 되어서 정식으로 번역을 하려 하신다 하더라구요. 수익이 있는 콘텐츠이기도 해서 원저자분이 정확히 하려 하시는 느낌이었습니다.
"
"https://news.hada.io/topic?id=7800","WeWork, 4분기 매출 저조 예상 및 실적이 낮은 미국내 40개 지점 철수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              WeWork, 4분기 매출 저조 예상 및 실적이 낮은 미국내 40개 지점 철수

   주가는 7.6% 반등

   국내에선 다른 공유 오피스들도 잘 나가던데.. 미국은 너무 많이 확장했던 것 같네요.
"
"https://news.hada.io/topic?id=7709","구글 크롬, 110버전 부터 JPEG-XL 지원을 중단할 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   구글 크롬, 110버전 부터 JPEG-XL 지원을 중단할 예정

     * JPEG-XL은 로열티가 없는 차세대 손실/무손실 압축 포맷
     * ISO/IEC 18181로 표준화 되었으며, 크롬 91부터 피쳐플래그로 적용 가능하게 도입됨
     * 하지만 110 버전부터 지원 중단 예정
     * 이유는 ""에코 시스템에서 충분한 관심을 받지 못했으며, 기본 기능이 될 정도로 기존 형식에 비해 충분한 이점을 제공하지 않음""
     * 구글은 아마도 차세대 이미지 포맷으로 WebP 와 AVIF 를 밀려고 하는 듯

   프로그레시브 디코딩 기능이 좋아보였는데 아쉽네요

   JPEG을 대체할 차세대 코덱들
   Show GN: J40: JPEG XL 디코더
"
"https://news.hada.io/topic?id=7700","만화로 보는 X-Window와 Wayland","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        만화로 보는 X-Window와 Wayland

     * 실리콘 그래픽스는 3D 그래픽에 특화된 워크스테이션 제조사로서 3D API인 OpenGL 제안하고 X-Window용 GLX 확장을 오픈소스화함.
     * GLX는 기존 X-Window의 아키텍처에 안에서 구현되다 보니, 모든 OpenGL 명령어가 IPC를 통해 OpenGL 프로그램에서 X 서버로 전송되는 문제가 있음.
     * 2004년 노벨은 리눅스용 윈도 컴포지터인 컴피즈 개발하면서 바로 OpenGL을 사용할 수 있는 XGL 개발. 이후 DRI 사용.
     * GPU가속 지원을 위해 X 윈도우가 네트워크 투명성(Network Transparency)를 포기하면서 많은 기능들이 사용되지 않게 됨.
     * 하지만, X윈도 시스템은 X 서버, 윈도 관리자, 윈도 컴포지터 등 여러 프로세스로 나누지고, 이 모든 부분은 복잡한 비동기 프로토콜로 연결되고, 결과적으로 성능이 저하.
     * 직접 하드웨어에 접근하므로 루트 권한으로 실행되어야 하므로 보안 문제도 있음.
     * 레드헷에서 X-Window개발자로 일하고 있던 Kristian Høgsberg은 Wayland라는 윈도 컴포지터 프로토콜을 정의하고 Weston이라는 실제 구현체를 공개.
     * X-Server가 갖고 있는 event handling, memory management, command scheduling, mode setting 기능을 Linux Kernel로 이동하여 evdev, KMS(Kernel Module Setting) 와 GEM 커널 모듈이 됨.
     * painting은 client가 다 하고, Window compositor는 커널에 집적 접근하고 창 관리와 컴포지팅 기능만 제공.
     * ChromeOS와 GNOME, KDE Desktop에 모두에 적용되어 X-Window없이도 데스크탑 구현이 가능.
"
"https://news.hada.io/topic?id=7749","JPEG XL의 장점의 장점

     * 크롬이 JPEG XL 지원을 버리기로 한 결정에 대해 재고해 달라는 글
     * JPEG XL의 장점
          + 기존 JPEG 이미지를 무손실 재압축 가능(평균 20% 작게)
          + 프로그레시브 디코딩 지원
          + 무손실 압축 성능이 PNG보다 뛰어남
          + 손실 압축 성능도 훌륭
          + Deployable한 인코더
          + 다양한 워크플로에 적용 가능

   구글 크롬, 110버전 부터 JPEG-XL 지원을 중단할 예정
"
"https://news.hada.io/topic?id=7788","The Future Perfect - 완벽한 미래를 만드는 50인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  The Future Perfect - 완벽한 미래를 만드는 50인

     * Vox가 록펠러 재단과 함께 4년 전에 시작한 프로젝트
     * 올해는 ""더 완벽한 미래를 만드는 과학자, 사상가, 학자, 작가 및 활동가 50인""을 선정

미래를 상상하는

     * Jason Crawford : 비영리 단체인 The Roots of Progress 창립자
     * Jennifer Doudna : 유전자 가위 CRISPR로 노벨상 수상
     * Hilary Greaves : 미래 철학자
     * Demis Hassabis : DeepMind 창업자이자 구글의 인공지능 부문 부사장
     * Sophie Howe : 세계 최초의 미래 세대 위원장. 아직 태어나지 않은 세대의 '목소리'를 듣고 정책에 반영. 영국 웨일즈
     * Will MacAskill : 효율적 이타주의(한국어판 제목 - ""냉정한 이타주의자 : 세상을 바꾸는 건 열정이 아닌 냉정이다"" )
     * Kim Stanley Robinson : 소설가. 화성 3부작(붉은 화성, 녹색 화성, 푸른 화성)
     * Max Tegmark : 물리학자. 저서 ""Life 3.0 - 인공지능이 열어갈 인류와 생명의 미래"" (오바마가 2018년에 가장 좋아한다고 추천했던 책)

전 세계의 빈곤과 불의에 맞서 싸우는

     * Skanda Amarnath
     * Rayhan Asat
     * Kanika Bahl
     * Chris Blattman
     * Leah Boustan
     * Rachel Glennerster
     * Seema Jayachandran
     * Jamila Michener
     * Ahmed Mushfiq Mobarak
     * Michael Tubbs

인류의 가장 큰 위협에 맞서는

     * Joy Buolamwini
     * Ajeya Cotra
     * Kevin Esvelt
     * Liu Hongqiao
     * Jason Matheny
     * Ted Nordhaus
     * Caitlin Rivers
     * Setsuko Thurlow
     * Renee Wegrzyn

더 건강한 세상을 위해 노력하는

     * Fred Aboagye-Antwi, Mamadou Coulibaly, Abdoulaye Diabate, and Jonathan Kayondo
     * Lucia Coulter and Jack Rafferty
     * Michael Eddleston and Leah Utyasheva
     * Richard Fuller
     * Joshua Morrison

동물의 권리를 확대하는

     * Isha Datar
     * Carolina Galvani
     * Leah Garcés
     * Olga Kikou
     * Lynne Sneddon
     * Liz Specht
     * Ryan Xue

우리가 더 나은 생각을 할 수 있도록 도와주는

     * Saloni Dattani
     * Philipp Dettmer
     * Jennifer Doleac
     * Julia Galef
     * Max Roser
     * Zeynep Tufekci

   미래쪽만 간단히 요약해봤는데, 원 사이트에서 한명씩 이름을 클릭해보시면 조금 자세한 내용을 보실 수 있습니다.
"
"https://news.hada.io/topic?id=7782","NVIDIA PhysX SDK 5.0 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        NVIDIA PhysX SDK 5.0 공개

     * 실시간 그래픽 협업 플랫폼인 NVIDIA Omniverse 의 물리 엔진
     * Flow 라이브러리는 같이 번들되었고, Blast도 추가될 예정
     * BSD-3 라이센스 오픈소스
"
"https://news.hada.io/topic?id=7784","Twitch, 12월 13일부터 한국에서 VOD 기능 지원 중단 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Twitch, 12월 13일부터 한국에서 VOD 기능 지원 중단 예정

     * 2022년 12월 13일부터 한국 내 시청자는 더 이상 VOD 콘텐츠(클립, 이전 방송, 하이라이트, 업로드된 콘텐츠 포함) 시청 불가
     * 2023년 초부터는 새로운 VOD 콘텐츠 생성 불가
     * 한국에서 요구되는 규제 요건을 충족하기 위한 서비스 개발 노력의 일환으로 지원을 중단한다고 발표
     * 네트워크 요금 및 시장의 비용 증가와는 관련이 없다고 밝힘

   'n번방 방지법'에 따르면 국내에서 사업을 하는 연 매출 10억원 이상 또는 일평균 이용자 10만명 이상 인터넷 사업자에 해당 조치 의무가 부여된다. 구글·메타(페이스북)·트위터 등 8개 해외 인터넷 사업자와 국내 포털, 소셜네트워크서비스(SNS), 인터넷개인방송 등 90여개 사업자가 여기에 포함된다.

   원문: https://www.hankyung.com/it/article/202112109361g

   트위치가 ""인터넷 개인방송"" 에 해당되어 그런것 같습니다.

   빨리 트위치 에서 빠져나가는 국내 유저들 BJ들 대려올 플랫폼 나오면 이때가 기회 아닐까요?

   이번엔 또 뭐가 문제인지 궁금해지는군요. 화질도 제한하고, VOD도 아예 차단하면 그냥 다른 플랫폼 사용하라는 의미인지.... 방송 즐겨보는 입장에서 조금 많이 아쉽습니다.

   한국에서 트위치가 실제 얻는 수익이 연간 18억정도로 추정되는걸로 아는데,
   망사용료도 그렇고, 이번 n번방 방지법에 따른 VOD이용 제한도 그렇고, 트위치 입장에서는 시간이나 돈까지 들여가면서 해줄 필요성을 못 느끼는 쪽에 가깝지 않나 싶습니다.
   돈도 안되는 시장인데 굳이? 우리가? 너네 법 지키려고 시간 돈 써야해?

   한국에서 처음으로 망사용료에대해 정부가 뭐라고 하니까,
   다른 나라들도 망사용료 요구하기전에, 미리 대처하는게 아닐까요?

   트위치 입장에서 오히려 한국 하나 버리고, 다른 나라들에게 이런 결과를 내보일 수 있다는걸 보여주는 건 괜찮은 거래같아요

   Twitch, 한국에서 P2P 기술 테스트 시작. - https://news.hada.io/topic?id=7121
   Twitch, 한국에서 원본(고화질) 스트리밍 서비스 중단. - https://news.hada.io/topic?id=7508
"
"https://news.hada.io/topic?id=7699","전 세계 보안 위기, 오픈SSL 치명적 취약점 발견","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      전 세계 보안 위기, 오픈SSL 치명적 취약점 발견

     * openssl 3.0.0 ~ 3.0.6에 영향을 미치는 취약점
     * 2014년 하트블리드 취약점 이후 첫 크리티컬.
     * openssl 3.0.7은 11월 1일 릴리즈 예정으로 가능한 빨리 패치 준비해야 함.
     * 참고 트윗
"
"https://news.hada.io/topic?id=7710","일런 머스크, 숏폼 비디오 Vine을 되살릴 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       일런 머스크, 숏폼 비디오 Vine을 되살릴 것

     * 일런이 트위터 엔지니어들한테 올해 안에 수정된 Vine을 런치하라고 요청함
     * TikTok보다 빨리 나왔던 숏폼 비디오 앱으로 2012년에 트위터가 인수
     * 6초 간의 반복되는 비디오 클립을 올릴수 있었음. 사용자가 별로 없어서 2016년에 중단
     * 이미 트위터 엔지니어들이 예전 코드를 들여다 보고 있는데, 셧다운 된지 오래되어서 코드를 재사용하기엔 많은 작업이 필요할 것이라고
     * 일런은 트위터 인수전에 이미 몇달간 Vine에 관해 논의를 진행했으며, 트위터에서 ""Vine을 되살릴까요?"" 투표를 진행했는데 490만명중 69.6%가 찬성한다고 답변함

   결과는 아직 어떻게 될지는 모르겠지만, 그냥 사고치는게 아닌, 나름의 철학과 비전이 있었나 봅니다.

   실제로 들어가서 조직 내부를 들여다보니 개발자보다 관리자가 많았다는 등의 얘기들이 들리는 거 보면..
   나름 자신의 조직 운영철학과 비즈니스 모델에 대한 의견이 있기는 한것 같습니다.(잘될 것인지와는 별개로)

   투표 트윗 https://twitter.com/elonmusk/status/1586918804780630016
"
"https://news.hada.io/topic?id=7816","아마존, 차세대 배송 드론 'MK30' 발표 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        아마존, 차세대 배송 드론 'MK30' 발표

     * 2024년에 실제 투입 계획
     * 기존 MK27-2보다 가볍고 작음
     * 향상된 항속거리, 온도 내구성 향상, 안전성 강화 및 가벼운 빗속에서도 비행 가능
     * 소음을 줄이는데 중점을 뒀음
          + 사람 및 구조물보다 수백피트 상공에서 비행하며, 소포 배달을 위해 하강할때도 일반적인 이웃 소음보다 조용
          + 소음을 25% 줄이는 프로펠러를 개발해 적용
     * 업계 최고의 감지 및 회피시스템을 개발하여 다른 항공기, 사람, 애완동물, 장애물을 안정적으로 피하면서 더 먼거리에서 동작
"
"https://news.hada.io/topic?id=7770","Nhost - GraphQL 기반의 오픈소스 Firebase 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Nhost - GraphQL 기반의 오픈소스 Firebase 대체제

     * 쉽게 설치하고 바로 사용가능한 백엔드
     * 지원 기능들
          + 실시간 GraphQL API
          + 사용자 인증(이메일,매직링크,SMS,소셜)
          + 서버리스 함수(JavaScript+TypeScript)
          + 스토리지(CDN)
     * 사용기술 : PostgreSQL + Hasura + Hasura Auth/Storage + Node.js + CLI
     * 모든 프론트엔트 프레임워크와 잘 연동 : React, Next.js, Vue.js, Svelte, Flutter
     * Vercel, Netlity, Cloudflare Pages 등의 프론트엔드 호스팅 플랫폼과도 잘 연동

   Firebase 대체제는 Supabase가 꽤 유명하긴 합니다만..
   Supabase는 경량 GraphQL 솔루션인 pg_graphql을 직접 만들어서 쓰고, Nhost는 Hasura를 그냥 썼네요.
   오픈소스 끼리도 경쟁은 좋은거니까요!
   Supabase 공개 베타 시작 - 오픈소스 Firebase 대체제
   pg_graphql - PostgreSQL용 GraphQL 확장
   우리가 Firebase에서 Supabase로 변경한 이유
"
"https://news.hada.io/topic?id=7803","Amazon Time Sync, 공개 NTP서비스로 이용 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Amazon Time Sync, 공개 NTP서비스로 이용 가능

     * 아마존 리전에 퍼져 있는 위성 연결 & 원자 시계들의 집합을 이용하여 UTC 표준 시간을 제공
     * 예전엔 EC2 인스턴스를 통해서만 제공 되었음
     * 이제는 추가로 time.aws.com 을 통해서 공개 NTP 서비스로 이용 가능
     * AWS 외부에 있는 IoT 장비 및 온프레미스 인프라에서도 이용 가능해짐
     * 윤초 발생시 UTC 정오부터 24시간 선형 스미어(smear)를 사용하여 추가/제거하여 자동으로 처리

   페이스북, 새로운 시간 서비스를 공개
   이제 '윤초'는 과거로 남겨둘 때가 되었다
"
"https://news.hada.io/topic?id=7822","오픈소스 비즈니스 모델들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             오픈소스 비즈니스 모델들

어떻게 동작하는가

     * 오픈코어 : 메인 제품은 오픈소스. 추가 기업용 기능들(서비스/확장/성능..)은 유료
     * 서비스 제공(Active 수익화)
          + SaaS 제공
          + 서포트 기반(SLA)
          + 배포 모델
          + 전문 서비스 제공
     * Passive 수익화
          + 광고
          + 유료 개발(누군가 특정 기능 개발을 위해 돈을 내는 것을 기다림)
          + 도네이션 기반(머천다이즈 포함)
     * Legal
          + Re-licensing : 구매자가 소스를 공개할 필요없이 재배포 허용
          + Dual-license : 구매자가 소프트웨어를 대규모로 배포할 때. 일반적으로 ""커뮤니티 버전"" 과 ""엔터프라이즈 버전"" 등으로 판매
          + Certificates & Trademark : 이름 또는 상표를 사용가능하게 해줌
     * Marketing Asset
          + 오픈소스로 돈을 버는게 아니고, 마케팅 및 크라우드 소싱 용도로 활용

누구에게 이게 필요할까 ?

     * 개발자 대상의 회사와 제품들

왜 필요할까 ?

     * 마케팅 : 성공적인 오픈소스는 오가닉 트래픽 및 커뮤니티 참여를 유도 가능
     * Adoption : 개발자들은 오픈소스에 좀 더 열려있음
          + 온프레미스 고객을 지원
          + 락인에 대한 두려움을 없앰
          + 구매자가 특정 기능이 없거나 버그가 있을 때, 자신이 확장 또는 해결 가능
          + 표준화가 가능해짐(Docker가 왜 컨테이너 표준이 되었는지를 생각해볼 것)
     * 무료 배포 : 셀프서비스/SaaS 대시보드 등을 설정할 필요가 없음
     * 고용 : 채용할 수 있는 최고의 기회는 컨트리뷰터에게 직접 연락하는 것
     * 무제한의 피드백 : 어떤 기능이 동작 안하거나, 뭔가를 필요로 할때 커뮤니티가 알려줄 것

왜 하지 말아야 할까?

     * 무료/유료의 구분으로 인해 컨트리뷰터 들에게 실망을 줄 수 있음
     * 법적으로 회색인 영역 : 많은 오픈소스 비즈니스 모델이 특정한 라이센스를 필요로 하고, 이것은 무시되거나 또다른 불편한 법적 다툼으로 갈 수 있음
     * 당신의 IP를 포기하는 것 : 제품을 오픈소싱 하는 것은 당신의 잠재적 경쟁자에게 모든 것을 줄수도 있다는 것
     * Distractions : 커뮤니티 일부는 전혀 필요없거나 당신에게 도움이 안되는 기능들을 요구할 수 있음
     * 오버헤드 : 커뮤니티를 관리하고, 이슈를 핸들링하고 CLA(Contributor License Agreement)등을 관리하는 것은 부담
     * Conflict of Interest : 특정 비즈니스 모델(오픈코어 같은)은 다른 오픈 소스들과 경쟁하게 될수도
     * Bad Press : 제공하는 오픈소스가 구체적인 가치를 주지 못할 경우, 진실되지 않은 것으로 같주되어 부정적인 마케팅을 유발할 수 도 있음

도구와 플레이어들 (원문 참고)

비즈니스 모델 별 예제 (원문 참고)

   오픈소스를 비즈니스화 하는 법
   오픈소스를 수익화 하는 법 - Awesome OSS Monetization
   오픈 소스 비즈니스 모델의 죽음
"
"https://news.hada.io/topic?id=7806","Xcode 14가 의도치 않게 앱 크기를 늘리는 이유와 줄이는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Xcode 14가 의도치 않게 앱 크기를 늘리는 이유와 줄이는 방법

     * 9/12에 릴리즈된 Xcode 14는 빨라지고 30% 작아졌음
     * 병렬처리 증가로 프로젝트 빌드 속도가 최대 25% 빨라짐
     * 출시직후 많은 iOS앱의 크기가 크게 증가
          + Nike 182MB → 322MB, AA 182MB → 389.1MB, Chime 162MB → 212MB
     * Xcode 14는 기본적으로 bitcode 를 비활성화 했음. 미래 Xcode 릴리즈에서는 아예 제거될 예정
          + bitcode는 앱 패키징 방법으로, 빌드 프로세스의 일부를 남겨두어서 애플이 앱스토어 제출 받고나서 처리하도록 하는 것
          + 이때 애플이 하는 것중 하나가 Binary Symbol을 제거하는 것
          + 비트코드가 켜져있지 않다면, Xcode 빌드세팅에서 Binary Symbol을 제거하도록 세팅해야함

Bitcode 없이 Binary Symbol을 제거하는 법

     * 세팅 값 변경
          + ""Deployment Postprocessing"" = ""Yes""
          + ""Strip Linked Product"" to ""Yes""
          + ""Additional Strip Flags"" to -rSTx
          + 다른 모든 제거 세팅은 기본 값
          + 모든 타겟에 같도록 세팅해야 함
          + Cocoapods와 같은 패키지 매니저를 사용한다면 문제가 있을 수 있음
     * 추천하는 것은 쉘스크립트를 사용하는 것
          + 빌드 마지막에 Signing 전에 스크립트를 실행(원문 참조)
"
"https://news.hada.io/topic?id=7785","Show GN: k8s config 파일 병합기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Show GN: k8s config 파일 병합기

   쿠버네티스 설정파일을 병합시킬 때 편하게 drag & drop을 통해
   간단하게 합쳐서 내려받을 수 있는 웹페이지를 만들었습니다.

   실무를 하면서도 여러 개의 쿠버네티스 클러스터를 사용해야 했는데
   config 파일에 한줄한줄(clusters, contexts, users 등등..) 추가하면서 불편함을 느꼈고 필요를 느껴서 만들게 되었습니다~

   저도 같은 불편함을 느꼈습니다. 지금은 konfig랑 다른 툴을 조합해서 사용하고있는데, 얘도 마이너한 버그가 조금씩 있어서 (이름이 겹치는 경우 충돌처리를 안함) 만들어주신것도 사용해보겠습니다!
     * https://github.com/corneliusweig/konfig

   사용해보시고 피드백 주시면 정말 감사하겠습니다!!!
     * https://github.com/mumoshu/config-registry
"
"https://news.hada.io/topic?id=7748","JetBrains Aqua - 테스트 자동화를 위한 IDE","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    JetBrains Aqua - 테스트 자동화를 위한 IDE

     * IntelliJ IDEA, PyCharm, WebStorm의 언어별 기능도 함께 제공
     * 모든 종류의 자동화 테스트 개발 가능
          + UI 테스트 : 웹 인스펙터 내장, 인기 프레임워크를 위한 구문강조, 탐색, 자동 완성
          + Web API 테스트 : 코드 기반 HTTP 클라이언트, OpenAPI(Swaggger) 지원
          + Unit 테스트 : 소스코드 ↔ 테스트 간 탐색, 테스트 통계 및 다중 테스트 동시 실행, 코드 커버리지 분석
     * 지원 언어 : Java, Kotlin, Python, JavaScript, TypeScript
"
"https://news.hada.io/topic?id=7776","LG디스플레이, 고해상도 스트레처블 디스플레이 세계 최초 개발","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   LG디스플레이, 고해상도 스트레처블 디스플레이 세계 최초 개발

   늘리기/접기/비틀기 가능. 12인치가 14인치로 20%확장. 고해상도(100ppi) 및 풀컬러 구현
"
"https://news.hada.io/topic?id=7718","OpenSSL 3.0 - CVE-2022-3602, CVE-2022-3786 취약점 및 조치 방안 정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OpenSSL 3.0 - CVE-2022-3602, CVE-2022-3786 취약점 및 조치 방안 정리

     * 이번에 발표된 취약점은 X.509 Email Address Buffer Overflow 와 관련됨
     * 인증서에 버퍼 오버플로우을 트리거하도록 설계된 특수하게 조작된 퓨니코드(Punycode)로 인코딩된 이메일 주소가 포함되어 있을 때 발생할 수 있음
     * 처음 발표되었을 때에는 Critical 로 발표되었으나, 11월 1일 High로 낮춰짐
          + RCE(Remote Command Execution, 원격 실행)보다는 DoS(서비스 거부) 취약점에 가까운 것으로 확인되어 위험도 조정됨

   AWS services are not affected, and no customer action is required.

   https://aws.amazon.com/security/security-bulletins/AWS-2022-008/

   요약 감사합니다!
   4번째 줄 중, 원격 실행에 대한 약자가 RCE인데, REC로 오타가 들어있네요

   OpenSSL, CVE-2022-3786 / CVE-2022-3602 패치한 3.07 릴리즈
"
"https://news.hada.io/topic?id=7751","웨어러블과 AI를 접목한 뇌-컴퓨터 인터페이스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       웨어러블과 AI를 접목한 뇌-컴퓨터 인터페이스

   뇌-컴퓨터 인터페이스(Brain Computer Interface, BCI)는 재활 분야 외에도 집중력 관리, 스트레스 측정, AR/VR 헤드셋, IoT 장치 제어 등을 수행함. 이는 웨어러블 형태로 구현됨. AI는 BCI 작동과정에서 뇌 신호를 해독하고, 이를 명령어로 전환하는 데 주효한 역할을 하고 있음.

   1.미국 BCI 기업 뉴로시티의 웨어러블 ‘크라운’
     * EEG와 AI로 집중력을 파악함
     * 사용자가 머리에 크라운을 쓰면 이는 뇌파를 읽고, ‘사용자가 몰입하고 있을 때’를 감지함
     * 이 제품의 EEG 센서들은 뇌에서 나오는 감마파를 감지함
     * 사용자의 집중력이 높아지면 EEG 센서는 더 많은 감마파를 감지함
     * 집중력이 떨어지면 이 센서는 감마파를 더 적게 감지함
     * 크라운은 이를 토대로 사용자의 집중력을 판단함
     * 크라운은 ‘사용자가 몰입 상태에 들어가도록 돕기 위해 ‘어떤 음악이 가장 효과적인지’ 인지해 그 음악을 들려줌

   2.미국 BCI 기업 이모티브의 이어버드 ‘이모티브 MN8’
     * EEG와 자체 머신러닝 알고리즘으로 스트레스 수준과 주의력 변화를 측정하고, 분석함
     * MN8에는 뇌 센서, 기준 전극, 다축 모션 센서들이 탑재됨
     * 사용자가 귀에 이어버드를 끼면 이는 실시간으로 뇌 패턴을 추적 관찰함
     * MN8은 사용자가 정신적으로 지칠 때, 집중력을 잃을 때, 몰입할 때를 발견함
     * 이는 뇌 활동 데이터를 제공해 사용자가 ‘언제, 어디서, 어떻게 가장 잘 일하는지’ 이해하도록 도움
     * ‘사용자의 뇌가 인지 부하에서 인지 과부하로 문턱을 넘는 상황’을 정량화하게 해줌
     * MN8은 ‘사용자의 관심이 하루종일 어떻게 바뀌는지’도 알 수 있음

   3.프랑스 BCI 기업 넥스트마인드의 웨어러블 센서
     * EEG와 머신러닝 알고리즘으로 뇌 활동을 감지하고, 이를 해독해 디지털 명령어로 전환함
     * 이로써 사용자가 컴퓨터, 증강현실(AR)/가상현실(VR) 헤드셋, 사물인터넷(IoT) 장치를 생각으로 쉽게 다루게 해줌
     * 센서는 헤드밴드, 모자, AR/VR 헤드셋 등에 장착할 수 있음
     * 작동방식 : 사용자가 뒤통수에 센서를 장착한 채 화면을 봄->눈은 화면 안에 나온 특정 이미지를 시각 피질에 투영함->이때 센서에 탑재된 EEG 전극이 시각 피질에서 뇌 활동을 감지함->머신러닝 알고리즘은 뇌 활동을 해독하고, 사용자의 시각 초점을 인식함->이 정보를 실시간으로 컴퓨터에 돌려보냄->그 결과, 화면에 영상을 재생하거나 음량을 높이는 등 사용자의 생각대로 디지털 기기가 작동함
"
"https://news.hada.io/topic?id=7791","Podman Desktop - Docker Desktop의 오픈소스 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Podman Desktop - Docker Desktop의 오픈소스 대체제

     * Podman 엔진 기반으로 로컬 환경에서 컨테이너 작업을 쉽게 도와주는 도구
          + Build : Containerfile / Dockerfile 에서 이미지 생성
          + Run : 원격 레지스트리에서 이미지 가져오기, Start/Stop/Restart
          + Inspect : 컨테이너 터미널 열기. 로그 보기
          + Push : OCI 레지스트리에 푸시. K8s에 배포 & 테스트
          + Pods & K8s 지원 : Create and ""Podify""
          + Podman Desktop Plug-in 및 Docker Desktop Extensions로 확장 가능
     * 윈도우/맥/리눅스에서 같은 UI 제공

   Fedora 를 사용하며 자연스레 podman으로 넘어왔습니다. 몇가지 알아두면 좋은것들은,
     * Podman 은 docker와 달리 데몬을 실행하지 않습니다.
     * 따라서 podman container 는 docker 처럼 그룹이 아니라 실행한 유저의 권한을 가집니다.
     * volume mount 시에 버그가 있는거같습니다. 대체로 docker image 들은 root 로 프로세스를 실행하는데, 그렇지 않은 이미지에 volume 을 연결하면 자동으로 연결된 디렉터리에 root 권한을 부여합니다..
     * 위 현상은 podman unshare 명령어로 퍼미션을 변경하면 해결되는데 영 귀찮습니다..

   podman-compose 도 있어서 대체로 큰 문제없이 사용가능한데, 쓰다보면 뭔가 잘 안되는 부분들이 있어서.. 생각보다 쉽게 전환이 되지는 않았습니다.

   맥북 m1 pro 에서 Rancher Desktop 사용중이었는데, 요게 더 나은 선택지일까요??

   Podman Desktop Companion
   Rancher Desktop - Docker Desktop 대체제

   Docker에서 Podman으로 전환하기 (리눅스)
   Docker에서 Podman으로 전환하기 (맥/윈)
   Docker Desktop 이제 250+명 회사에서 사용시엔 유료
"
"https://news.hada.io/topic?id=7783","AI와 픽셀 아트의 미래","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             AI와 픽셀 아트의 미래

     * 창작 산업은 ""0 to 1"" 순간을 겪고 있는 중
     * 모든 분야는 항상 더 쉬워지고 더 많은 사람들이 창작행위에 더 쉽게 접근 할 수 있게 됨
     * 원래 픽셀아트는 모눈종이에 그려서 수동으로 코드로 변환되던 것이고, 클래식 음악은 왕실의 후원자를 둔 Savant들에 의해서 창작되었음. 하지만 이제 이 두가지는 싸구려 컴퓨터로도 접근이 가능해짐. 우리가 이 분야에 들어오기 전에 만들어진 지름길과 혁신에는 익숙하지만, 우린 현재의 작업흐름을 훼손하는 최근의 개발에 대해서는 두려워하고 화를 냄.
     * 문제는 디지털 방식의 생산성 증가가 너무 크고, 이전 시대의 어려움을 겪어보지 못한 사람들은 예전 방식에 대한 향수가 없음. 아마도 몇년 후에는 현재와 같은 방식으로 픽셀 아트를 만드는 사람들을 많이 보지 못하게 될 것
     * 10/25 ~ 11/7일 사이에 (트위터에 올린) 픽셀 아트 이미지는 모두 AI로 만든 것임
     * Lexica의 Stable Diffusion 생성기를 활용. 시장에서 가장 뛰어난 것은 아니지만, 이런 도구가 얼마나 강력한지를 보여줌

픽셀 아트 이미지를 생성한 방법

    1. 내가 평소에 만드는 아트 스타일과 비슷한 것을 찾을때까지 Lexica를 검색
    2. 영감을 주는 이미지에서 프롬프트를 복사해서, 유용한 것이 생성될 때까지 프롬프트를 조작
    3. 이상적인 해상도와 크롭을 결정 : 200x200
    4. 이미지 크기를 스케일 다운한 후에 픽셀로 변환. 포토샵에서 ""Save for Web and Devices"" 을 사용하면 팔레트화 속도를 빠르게 할 수 있음.
    5. 손으로 작품 마무리
    6. 작품에 창작 스탬프 붙이기. 배경을 조정하고 텍스터에 디더링 패턴 추가

     * 이 과정은 총 6시간이 걸렸음. 처음부터 이걸 만드는데 필요한 시간보다 훨씬 적음. 좀 더 높은 해상도로 했으면 좋았을 것
     * 각각의 이미지들을 별도로 작업하고 배경과 합성
     * isometric 이미지를 만드는 것은 가장 복잡했지만, 생성된 이미지가 아니었다면 같은 방식으로 접근하지 못했을 부분들이 많음. 워크플로우도 간소화

뷰티 필터를 이용하면 더 많은 사람들이 아름답게 보일 수 있음

     * 모든 분야에는 혁신가와 기술자 간에 격차가 있음
     * 혁신가는 어떻게 해야 하는지를 알아내고, 기술자는 소비자의 증가하는 요구사항을 충족시키기 위해 프로세스를 복제함
     * 생산하는 것과 즐기는 것 모두가 AI가 할수 있는 것과 잘하는 것에 맞춰서 이동하게 될 것
     * 사람들이 AI가 생성한 아트를 좋아하게 될수록, AI가 잘 만들지 못하는 것들에 대한 수요는 여전히 있을 것
     * 이것은 AI가 마스터하지 못하는 몇가지 기술이 계속해서 가치를 부여받을 것이란 것을 의미
       → 현재는 픽셀아트가 그렇지만, 얼마나 갈지는 모름
     * 사람들이 픽셀 아트를 위한 모델을 만들고 있으며, 거의 훌륭하고 잘 동작함
     * 우리가 개인적으로 통제할 수 없는 것을 두려워 하는 것은 의미가 없지만, 성장과 변화의 기회로 사물을 인식하고 선택하는 것은 가치가 있음
     * 고급 예술과 저급 예술 사이에는 항상 구별이 있으며, 사람들이 패스트패션 공장에서 만든 스웨터보다 손으로 짠 스웨터에 훨씬 더 많은 돈을 기꺼이 지불하는 것처럼 손으로 무언가를 만드는 그 행위를 가치 있게 여기는 사람들이 항상 있을 것
     * 포기하지 마세요(아직.)

   여담으로, 20세기에 하던 픽셀아트와 21세기에 말하는 픽셀아트가 다릅니다.
     * 고전게임 실제 그래픽이라면서 올라오던 짤

   이번에 복원 완료된 백남준의 다다익선이 원본 소스는 같지만 디스플레이 차이로 원본과 달라진 것처럼요. 우리가 좋아하는 픽셀아트라 전자인지, 후자인지 잘 모르겠지만, 세상이 변하는 걸 막을 수 있는 방법은 없는 것 같아 보입니다. 백남준 아저씨도 못했으니ㅠ
"
"https://news.hada.io/topic?id=7733","미국 소비자의 절반은 미디어 Paywall을 바이패스하려고 시도함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  미국 소비자의 절반은 미디어 Paywall을 바이패스하려고 시도함

     * 53%의 소비자들이 돈내지 않고 쓰는 방법을 시도함
     * 69%는 페이월 및 사용자등록이 필요한 웹사이트 클릭하는 것을 피함
     * 53%는 이메일 주소 및 다른 정보를 요청하는 웹사이트를 그냥 떠난다고
     * 70%의 구독자들이 무료 평가판을 사용하지만, 만료시에 지불할 의사는 없다고
     * 2500명의 구독자를 조사한 결과

   본문 내용 확실하네요... 링크 눌러서 들어가니 페이월까진 아니지만 Sign up to continue reading 이걸 보고 바로 뒤로 가기를 누르게 됩니다? (...)

   저 조사 결과를 믿게 만드는 장치라고 생각이 듭니다...
   긱뉴스에 올릴 기사들 찾다보면 페이월/레지스터월이 너무 너무 많아요 ㅋㅋ
"
"https://news.hada.io/topic?id=7812","애플, Mixed-Reality 헤드셋용 3D 월드 및 비디오 서비스 계획중 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               애플, Mixed-Reality 헤드셋용 3D 월드 및 비디오 서비스 계획중

     * 최근 애플의 구인공고에 의하면 MR 헤드셋 계획을 엿볼 수 있음
     * MR헤드셋은 M2칩기반의 $2000~3000 사이가 될 것이며, 10개 이상의 카메라와 역대 최고의 해상도를 가지게 될 것
     * realityOS 라고 불리는 새로운 OS 기반에서 실행
     * 애플의 상표출원 내역에 따르면 ""Reality Pro"" 또는 ""Reality One"" 사이에서 고민하는 듯
     * 최근 채용공고에 의하면 이 헤드셋 개발팀의 이름은 ""Technology Development Group(TDG)""
     * 관련 콘텐츠를 만들고 있는 것으로 보임. AR/VR 환경에서의 디지털 콘텐츠 생성 경험이 있는 프로듀서를 구인중
     * 또한 VR에서 재생 가능한 3D 콘텐츠 기반의 비디오 서비스를 구축하려고 하는 것을 암시 (2020년에 인수한 NextVR도 같은 선상)
     * 애플은 AR/VR용 개발도구를 만드는 엔지니어도 구인 중
          + App Intents 프레임워크 기반의 도구
     * 가장 흥미로운 채용 공고는 3D Mixed-Reality 개발자
          + 애플이 메타버스와 유사한 가상환경을 만들고 있는 것은 암시함(애플이 이 단어를 쓰지는 않겠지만)
          + ""3D 혼합 현실 세계용 경험을 만들어 줄수 있는 도구와 프레임워크를 구축""

   아.. 오큘러스 중고 노리고 있었는데.. 이걸 기다려야 하나.. -_-;

   영화관 같이 거대한 모니터에서 코딩하는 기쁨을 누려보고 싶었는데 총알을 더 모아야 하겠군요.

   오큘러스 퀘스트2에서 피코4로 넘어갈까 했었는데 소프트웨어 생태계가 아직 부족해서 기다리던차에 애플에서 가상현실 제품이 나온다면 내년까지 기다려야겠네요.
   게임은 오큘러스로 생상성은 애플MR로..?
"
"https://news.hada.io/topic?id=7758","Microsoft, GitHub Copilot을 통한 오픈소스 불법복제로 고소 당함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Microsoft, GitHub Copilot을 통한 오픈소스 불법복제로 고소 당함

     * 개발자이자 변호사인 매튜 버터릭이 Microsoft, GitHub, OpenAI를 고소
     * 오픈소스 라이센스 위반 및 프로그래머의 권리를 침해 했다고
     * GPL, Apache, MIT 라이센스등은 저작자의 이름을 표시해야하는데, Copilot은 이를 무시함
       심지어 150자 이상의 코드 스니펫이 그대로 복사됨에도 불구
     * 일부 프로그래머는 이름 ""오픈소스 세탁(laundering)""이라고 지적
     * 소송을 대변하는 로펌에선 ""Microsoft가 오픈소스 라이선스 및 기타 법적 요구사항의 조건을 무시하여, 다른 사람의 작업에서 이익을 얻고 있는 것으로 보입니다"" 라고 얘기함
     * 라이센스 위반과 별도로, 버터릭은 이 기능이 몇가지 다른 것들도 위반한다고 주장
          + GitHub의 Terms of Service 와 Privacy Policies
          + 저작권 관리 정보 삭제를 금지하는 DMCA 1202
          + California Consumer Privacy Act

   결국엔 open source license를 나눠서 학습데이터를 이용하고 copilot의 option에서 선택가능하게 하는 방식으로 해결되면 될듯하네요? - 라이센스 표기도 그에따라 정확하게생성하구요 이미그렇게 하고있나요? 제가 copilot을 언써봐서...

   큰 이슈이긴 하지만, 해결 방법도 명확한것 같습니다.

   이게 사람이 코딩할때도 문제가 많이 되잖아요? 가끔 회사에서 XXX 스펙에 대해서 open source 구현체 (예를 들어 Linux) 코드를 읽어보지 않은 사람 찾게될때가 있어요. (cleanroom 구현을 위해서) 가끔은 일하면서 무심코 리눅스코드 링크를 주면 뭐라고 할때도 있죠 - ""나 그코드 읽으면 안되!"". 때로는 내가 그 코드를 읽었었는지 기억이 안날때도 난감하죠.

   이런, 사람이 겪는 문제보다 더 명확하게 해결될것 같습니다.

   Copilot 발표 되었을때..
   처음에 우와~ 하다가 몇일 뒤에 이런 라이센스 관련 이슈가 있어서.
   잘못쓰다가 의도치 않게 회사 제품 코드 개발하는데 GPL 라이센스 코드가 뭉터기로 들어가면 큰 문제가 될 수 있다라는 의견을 봤는데...현실이 되었네요.

   그대로 복사되는 것은 좀.. 그렇네요..
   이래서 Explainable AI 쪽이 활발하게 논의가 되죠.. 왜 이런 결과가 나왔는지에 대한 설명을 할 수 있는 AI.

   코파일럿이 이게 된다면 결과에 관여한 오픈소스코드를 주석으로 추가하는것으로 상당부분 논란을 피할 수 있을 것 같은데 말이죠..
"
"https://news.hada.io/topic?id=7815","네이버 검색에서 HTTP/3 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           네이버 검색에서 HTTP/3 도입

     * 네이버 검색에서 HTTP/3 적용
     * HTTP/3를 3G 네트워크 환경에서 테스트를 거친 결과 TTFB은 2.3초에서 1.8초로, FCP는 3.4초에서 2.4초로 각각 약 23%, 29%씩 단축
     * 네이버는 지난 2015년 국내 플랫폼 사업자 중 최초로 HTTP/2를 도입한 데 이어 HTTP/3도 국내 사업자 중 가장 빠르게 서비스에 접목

   최초라니.. 굉장한 자신감이군요 ㅎㅎ
"
"https://news.hada.io/topic?id=7719","11월에 몰려있는 SW 개발자 행사들 정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        11월에 몰려있는 SW 개발자 행사들 정리

     * 한국의 소프트웨어 개발자를 대상으로 하는 행사는 주로 하반기/연말에 몰려있음
       어느정도 분산되어있던 기술 행사가 2020년 코로나로 인해서 연말로 몰리게 됨
     * 글로벌 플랫폼 행사들은 주로 그 기술플랫폼을 활용하는 엔지니어들을 위한 프로그램
       한국의 기술행사는 기술회사들이 채용과 브랜딩 그리고 커뮤니티 기여를 목적으로 하는 행사가 많음
       소프트웨어 업계가 성장하면서 좋은 개발자 커뮤니티 주관 행사도 늘어나고 있음

  한국의 11월 기술 행사들

     * OpenInfra & Cloud Native Days Korea 11월 1일
     * EOST 2022 11월 8일
     * SK Tech Summit 11월 8일~9일
     * Microsoft Ignite Spotlight on Korea 11월 15일
     * SSDC 삼성 소프트웨어 개발자 콘퍼런스 11월 15일~17일
     * HMG 현대차그룹 개발자 콘퍼런스 11월 16일~17일
     * 라인 개발자 콘퍼런스 Tech-Verse 11월 17일~18일
     * NHN FORWARD 11월 24일
     * Agile 코리아 콘퍼런스 11월 25일
     * Ubucon Asia 2022 11월 26-27일
     * Let’Swift 11월 30일
     * 네이버 DEVIEW는 내년 2월말, 카카오 if kakao도 내년

   본문의 글이, 기본폰트인것 같은데도 묘하게 가독성이 좋다는 느낌이 듭니다. 저만 그런가요?

   webkit antialiased 옵션 넣어두어서 그런거 아닐까용? ㅎㅎ

   오호!
"
"https://news.hada.io/topic?id=7730","Stripe, 직원 14% 정리해고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Stripe, 직원 14% 정리해고

   요약 정보가 없네요?

   제목만으로 알수있거나 한 기사링크는 그냥 요약없이 올려도 됩니다 ;) 해커뉴스 원래 스타일 ㅎㅎ
"
"https://news.hada.io/topic?id=7739","넷플릭스가 FreeBSD에서 비디오를 800Gb/s로 서빙한 최적화 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                넷플릭스가 FreeBSD에서 비디오를 800Gb/s로 서빙한 최적화 방법

     * 넷플릭스는 2021년부터 싱글서버에서 TLS암호화된 비디오를 800Gb/s로 서빙함
     * 이를 위한 최적화 방법들. 대부분은 넷플릭스 직원이 아닌 FreeBSD 커뮤니티 멤버들에 의해서 행해짐
     * Asynchronous sendfile + ISA-L (Intel Intelligent Storage Acceleration Library)
     * Disable VM Batch Queues, Disable SF_NOCACHE
     * Disable LRO (Large Receive Offload) & TSO (TCP Large Send Offload)
     * Disk Centric Siloing

   오우 저거면 4U로 될려나.. 2.5로 풀베이 하면 될 거 같기도 하고 그러네요.

   아마도 이 장비로 서빙하지 않았나 싶습니다. 장비 교체하면서 공개된 스펙은,
     * 수퍼마이크로 메인보드
     * Xeon E5 2650L v2 x1
     * DDR3 RAM 64GB
     * 10Gb 이더넷
     * 7.2TB 7200RPM x36
     * 500GB Micron SSD x6

   출처 : https://vice.com/en/article/…

   제목이 어디서 본거 같은데? 싶었는데, 2021년 넷플릭스가 FreeBSD에서 비디오를 400Gb/s로 서빙한 방법 이라고 발표했던거를 1년만에 업그레이드한거네요
   EuroBSDCon 2021 에서 했고, 이번것도 EuroBSDCon 2022 에서 발표했습니다.

   발표자료 PDF : https://people.freebsd.org/~gallatin/talks/euro2022.pdf
"
"https://news.hada.io/topic?id=7701","Pixel 7은 첫번째 64bit-only 안드로이드 폰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Pixel 7은 첫번째 64bit-only 안드로이드 폰

     * Pixel 7 과 Pixel 7 Pro는 64비트 앱만을 지원하는 첫번째 안드로이드 폰
     * 32비트 코드 지원을 제거하여 메모리 사용량을 줄이고 성능을 개선하며, 보안을 향상
     * 64비트 전용으로 옮기는 것은 플랫폼 / 툴 / 구글 플레이 등에 전반적인 변화가 필요
     * 추가 레지스터 및 명령을 사용하게 되므로 최신 CPU에서 25%의 성능이 향상됨
     * 32비트 코드를 제거하면 150MB 정도의 램을 절약
"
"https://news.hada.io/topic?id=7703","홈 네트워크를 광케이블(Fiber)로 구축한 후기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      홈 네트워크를 광케이블(Fiber)로 구축한 후기

     * 집으로 인입되는 25gbit 인터넷을 최대한 활용해서, PC당 10gbits 를 구축하기 위한 셋업
     * 싱글모드 vs. 멀티모드 케이블 : 싱글모드 + LC 커넥터 사용
     * 이미 종단 처리된 케이블은 집의 관을 통과하지 못해서 Fiber Fusion Splicer를 별도로 구입(약 100만원)
     * Intel SFP+ PCIe 카드 + BiDi + Mikrotic SFP 스위치
     * 하드웨어 SPF28 라우터는 비싸고 시끄러우므로, Proxmox + Opnsense 를 이용해서 PC로 SFP28 라우터 구축
     * 들어간 전체 비용은 약 2866CHF(410만원) : 라우터/서버 와 스플라이서가 약 2000CHF

   https://tech.ssut.me/going-10-gigabit-networking-at-home/

   국내에서도 홈네트워크를 10G로 구성하신 분의 글도 재미있게 읽었습니다.
   미국은 집 크기가 달라서 그런지 공사 규모도 훨씬 커지네요

   제 글이네요 ㅎㅎ 지금은 포트가 부족해 Ubiquiti UniFi Switch Aggregation (10G SFP+ x8) 스위치를 사용하고 있고 사용 중인 NAS(DS1821+)에도 Mellanox MCX311A-XCAT ConnectX-3EN 10기가 어댑터 붙여서 모든 기기 전부 10기가로 잘 사용하고 있습니다.

   HN의 댓글도 참고하세요 https://news.ycombinator.com/item?id=33393540

   전 집에선 그냥 WiFi 6 메쉬로 묶어서 구성하고 말았습니다만..
   엄청난 열정이네요. 글 마지막에 이거 다시 하라고 해도 또 할꺼라고 적었네요.
"
"https://news.hada.io/topic?id=7706","고급 프로그래머들은 인성 문제있어?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          고급 프로그래머들은 인성 문제있어?

   기술 업계의 독성 말투 문제가 발생한 원인에 대해 고찰한 글입니다.

   기술적으로 높은 레벨에 도달하면 얻게 되는 특성과 이로 인해 고급 프로그래머가 흑화하는 과정을 잘 설명하고 있습니다.

   본문에서 직접 인용하진 않았지만, 『기술 업계의 독성 말투 문제, 고칩시다!』 링크를 첨부합니다.

   저는 매우 흥미롭게 읽었던 글 입니다.
   실력은 노력해서 키울 수 있지만 그 사람의 인성은 바꾸기 어렵다 생각해요.

   저희도 특히 채용시 업무 관점의 에티튜드를 중요하게 생각합니다.

   사실 별로 동감이 안갑니다. 제 경험상 실제로는 아직 멀었는데 자신이 실력 좋다고 생각하는 개발자들이 까칠하다고 생각합니다.

   국내 중소기업, 스타트업, 네카라, 해외 빅테크 (MAGA) 다 다녀봤는데 국내외를 통틀어 정말 존경할 만하고 실력좋은 개발자들 중에 까칠한 사람은 거의 본적이 없습니다. 오히려 굉장히 겸손하고, 항상 배우려고 하고 경청도 너무 잘해서 놀랐던 적이 많습니다.

   오히려 경력은 오래 되었지만, 물경력이 의심되는 사람들이 까칠했던 경우가 훨~씬 많았습니다. 이것도 제 주관적 경험이긴 하지만, 어쨌든 해당 글은 정말 전혀 객관적인 근거가 없는 글 같아 보이네요.

   더닝크루거 곡선과 비슷한거같습니다. 알아갈수록 오히려 자신이 모른다는걸 깨닫는.

   위 글은 온라인상에서 발생하는 일을 예로 들은 것 같은데, 그렇게 적절한 예는 아닌것 같습니다. 실제 회사에서 일어는 상황을 가정하다면,
   여러분이 3년차 개발자인데, 1년차 개발자 3명을 데리고 일을 한다면 어쩌면 위 글에서 언급한 고급 프로프로머가 될 수 있습니다. 누군가 주니어중 한 사람이 git push --force로 작성한 코드를 날려버렸다고 생각해보세요.
   실제 이와 비슷한 어처구니 없는 실수가 많이 발생합니다. 그러다 보면 상당수 시니어 개발자는 빨간약 먹고 흑화될 수 밖에 없습니다. 실제 서비스를 운영하는 경우는 어떤 실수도 용납하기가 어렵겠죠. 참고로, 개발자 직군은 이런면서 양호한 편이라고 생각합니다. 생명을 다루는 의사나 간호사 직군이 더 심하지 않을까요?

   인성 안좋은 사람이 AAA인 경우를 보편적인 것 처럼 확대 해석 한 글이라고 생각함

   사...사랑합니다

   구글 디스커버에서 뜬거 보고 왔는데 여기에 이렇게 적어도 되나 모르겠네요.
   독성 말투라는 표현이 제가 생각하던 무언가 불편했던 상호작용을 잘 표현한 단어라는 생각이 들긴 합니다. 그런데...

   원문에서 표현하는 내용과 달리 이런 독성 말투라는 것이 꼭 AAA의 특성인 것은 아니라고 생각합니다. 물론 AAA들이 독성 말투를 발휘하는 경우가 많은 것 같은 느낌을 받는 것은 사실이지만... 독성 말투 자체는 AAA와 전혀 관련없이 여러가지 이유로 드러날 때가 있습니다.

   그냥 인성이 좋지 못해서 그런 경우도 있는가 하면,
   단순히 사이가 좋지 않은 인간관계에 한해서만 주고받는 경우도 있고,
   평소에는 친절하다가도 업무나 기타 압박감으로부터 오는 스트레스가 독성 말투를 끄집어 내기도 합니다.
   토론중에 논쟁이 격렬해지면서 갑자기 나타나기도 하고요...

   심지어 AAA가 아님에도 불구하고(애시당초 AAA의 기준이 명확하게 무엇인지는 모르겠지만) 스스로가 AAA라고 생각하여 해당 분야에 대해 상대적으로 잘 모르는 사람에게 독성 말투를 구사하는 경우도 있겠습니다.

   이건 그냥 어떤 사람의 성격이나 상태, 상황, 분위기에 따라서 나타나는, 일시적일 수도 있고 영구적일 수도 있는 커뮤니케이션 문제라고 봅니다.

   원문을 쓰신 분의 의도와 상관없이 자칫하면 그냥 '내가 곰곰히 생각해보니 이러이러한 이유로 AAA들은 원래 이러니까 알아서 참아라'라는 식으로 읽힐 수도 있겠다는 생각이 듭니다. 현실적인 이유로 독성 말투가 나오는 것은 어쩔 수 없는 문제라는 것은 이해합니다. 누구든 어느 시점엔가 인내심에 한계가 오면 그렇게 행동할 수 있으니까요.

   당연히 하지 말아야 할 행동이면서도 현실적으로 누구나 저지를 수 있는 실수입니다. 오랜 시간 일하면서 아직 한 번도 해 본적이 없다면 그냥 존경스러울 따름이죠. 단지, 다른분이 이미 말씀하신 것처럼 이런 저런 이유를 댄다고 해서 원래 그러니 참아라 하고 정당화되는 건 아니라고 봅니다. 누구든 독성 말투를 쓸만한 상황이라면 쓰게 됩니다. 그 대신 그로인해 발생하는 결과(인간관계, 의사소통의 단절, 증오, 분쟁 등)도 당사자가 짊어지고 가야겠죠.

   다들 이미 그렇게 하고 계시겠지만 알아서 상황에 따라서 잘 하면 될거라고 봅니다. 물론 안쓰면 더욱 좋구요.

   다만... 흑화하는 과정에 대해서는 공감하긴 합니다. 독성 말투라는게 쓰는 사람만 나쁜게 아니라 상황에 따라서는 쓰지 않으면 내 멘탈이 버티지 못하는 경우도 있다는걸 많이 느낍니다. 일하다 잠깐 시간이 비어서 뭔가 시간때울 것이 필요했는데 좋은 생각할 거리가 있었네요. 감사합니다.

   뭔가 댓글을 열심히 작성했는데 주장이 하나로 합쳐지지 않아서 지우게 되네요. (아까운 내 한시간이...)
   주장은 존중합니다만, 여러명 이 건설적인 대화를 유지하기에는 어려움이 있는 글 같습니다.

   링크글의 주장이 터무니없고 편견이 한두가지가 아니어서 그런 걸까요,
   『기술 업계의 독성 말투 문제, 고칩시다!』 링크도 편견과 허구와 비하가 섞인 과거의 흔적들이고
   무엇보다 우리나라엔 적용이 어려운 것 같습니다.

   IT에서 유명한 회사를 대부분 다녀봤지만 실력과 경험과 인성은 대체적으로 비례했습니다. (한, 두명은 좀 힘들긴 했어요..)

   주변에 AAA가 많다는 분들이 상담을 해올 때가 종종 있습니다. (주로 스타트업 직원이에요)
   저는 그런 환경을 벗어나야 즐거운 삶을 살 수 있고, 나오지 않으면 불행한 삶만 남아있다고 조언합니다.
   상처는 평생 남고 좋은 회사는 많기 때문입니다.

   독성 말투는 너무 확대 해석하는 것 아닌지요?
   단지 인간보다 컴퓨터와의 관계가 익숙할 뿐입니다만..

   프로그래머의 독성 말투가 유독 문제되는 이유는 뭘까? 라는 생각을 해봅니다. 해외 사례는 됐고 우리의 사례를 이야기해야 하지 않을까 싶고요. 문화가 많이 다르니까요.
   일단 저는 직급이 올라갈/나이가 들 수록 독선적이고 자기 확신이 강하고 거기에 독성 표현을 장착한 사람의 비율이 높은 것 같다는 느낌을 갖고 있습니다.
   직종 무관하게요. 사회적 지위를 객관적으로 인정 받은 직종일 수록 더 심하다고 느끼기도 합니다.
   블라인드나 리멤버 같은 곳엔 상사 욕이 많습니다.
   여기서 그냥 성급하게 끝맺어야할 것 같은데요,
   그냥 온라인에서 IT 직종 사람들끼리 찻잔 속에서 지지고 볶고 있는 중은 아닐까 하는 생각을 합니다.

   주장은 있지만 근거는 없고, 그럴듯한 주제를 다뤘지만 본문은 지나치게 빈약합니다. 동의하고 말고 판단할만한 글이 아니네요.

   일부 고급 프로그래머가 좋지 않은 인성이나 날카로운 태도를 가질 수는 있지만...
   좋지 않은 인성과 날카로운 태도를 가져서 고급 프로그래머가 된다는 식의 논조는 글쎄요...?
   글의 인과관계가 좀 이상한 부분이 있다고 생각합니다.

   아닌 것은 아니라고 말하는 것과, 잘못된 것을 지적하는 것은 날카로운 태도에 해당하지 않습니다. 근데 일부는 그것을 동일시하는 경향이 있어요. 논쟁의 시작은 '안 해도 의사 전달에 전혀 지장 없는 말'을 '굳이' 덧붙여서 일어나는 게 대부분이라고 생각합니다.
   결국엔 ""고급 프로그래머가 비아냥대도 감사해라""는 논조인데.. 산업과 학계를 멍들게 하는 말이지 않나 생각이 듭니다.

   인성의 문제는 고급 프로그래머들에게서 보편적으로 관찰되는 공통의 특성이라고 보기 힘듭니다. 너무 주관적으로 쓴 글이 아닌가 싶습니다.
   이런 글이 많이 읽히게 되면 윗 댓글에서도 지적하신 것처럼 태도에 문제가 있는 고급 프로그래머들을 묵인하게 되는 부정적인 사회적 효과가 생길까 우려가 살짝 생기네요.

   페이스북에 올렸던 글에서도 많이 비판을 받았던걸로 기억하는데 별로 반영되지는 않은 것 같네요. 다른 글이랑 착각했을 수도 있습니다만..

   몇 가지 감상을 드리고 싶네요.

   우선 생활코딩은 글로벌 기준, 혹은 한국 기준으로 보아도, de-facto Q&A 소통 창구가 아닙니다. 따라서 생활코딩을 베이스로 사고를 전개하면 당연히 특수한 결론에 도달하기 쉽습니다. 이 칼럼은 그렇게 도달해버린 듯 하고요.

   그리고 파란약을 먹은 AAA의 예시는 솔직히 재밌었습니다. 매트릭스의 내용을 생각해보면 파란약의 본래 의미와는 좀 안맞는 것 같긴 합니다만... 별로 중요한건 아니죠.

   그리고 전반적인 내용에 대해선... 이렇게 생각해보면 어떨까요. 초보 개발자들에게 진실을 알려주기로 다짐한 (글의 비유를 따르자면 빨간약을 먹은) AAA는 약을 하나 더 고르게 됩니다. 노란색 약은 모든 사실을 가감없이, 여과없이 그대로 쏟아붓습니다. 그 진실을 마주한 신입개발자의 심정에는 별로 관심이 없죠. 버티냐 못버티냐는 그 신입이 알아서 할 바입니다. 바솔로뮤 쿠마가 조로에게 루피의 고통을 그냥 툭 던졌듯이요.

   반면에 어떤 AAA는, 노란색 약 대신 초록색 약을 먹기로 합니다. 초록색 약은, 신입의 심정을 고려합니다. 탐캣 최대 스레드가 디폴트 값인 200개로 제한되어있다면, SpringMvc 프레임워크에서 최대 동시 커넥션이 200일까요? 최신 버전 톰캣을 쓰고 있다면 (즉 SpringMvc 라이브러리를 최신 상태로 유지한다면) 그 가정이 깨집니다 (ref). ""그러나 그게 지금 이 신입개발자가 알아야 할 사실인가?"" 초록색 약을 먹은 AAA는 이것을 항상 생각합니다.

   제 생각엔 이 노란색 약과 초록색 약을 추가한다면, 여기에 댓글 다신분들도 대체로 납득하시지 않을까 싶습니다. ㅎㅎ

   글의 신뢰도나 호감도와 무관하게, 만약 이 글이 @heal9179 님 본인의 글이라면, 자신의 생각을 피드백받기 위해 이곳에 공유해주신 부분에 대단히 감사합니다. 제겐 그게 긱뉴스가 지향하는 방향이 아닐까 싶어요

   제 글은 아니에요!
   개인적으로 찬성하는 글은 아니지만, 그래도 나름 분석하려고 한 시도가 재미있어 보여서 공유드리는 목적으로..

   재미있었습니다 ㅋㅋ

   동의하기 어려운 글입니다. 추측성 글 같네요. 글쓴이도 이를 인지하고 ""물론 통계적으로 연구해본 것은 아니지만"" 따위를 덧붙이는 걸 보면요ㅋㅋ 긱 뉴스엔 더 좋은 글이 올라왔으면 좋겠습니다!

   아무리 글에 적힌 추측처럼 많은 고급 프로그래머들이 경로 의존적으로, 혹은 생존 편향에 의해 대체로 태도에 문제가 있다는 경향을 인정하더라도 (저는 이 추측에도 동의가 안 되지만), 그런 프로그래머들의 태도를 상당히 긍정하고 정당화 해주는 듯한 글로 읽히네요. 이런 글은 사회적으로 좋지 않은 영향을 준다고 생각합니다.

   저소득층 자녀들이 여러 요인으로 상대적으로 청소년 범죄에 더 쉽게 빠진다는 현상을 사회학적으로 인정한다고 해서, 그런 범죄는 뭐 어쩔 수 없으니 받아들이자라는 뉘앙스로 얘기하지는 않습니다. 그런 유인을 억제해서 범죄에 빠지지 않도록 도와야 한다든가 하는 대책을 얘기하지요.

   마찬가지로 현재 고급 프로그래머들 사이에 태도에 문제가 있다는 경향을 인정하더라도, 그러면 우리가 그런 태도를 어떻게 잘 관리하고 억제해서 더 나은 일터와 업계를 일굴 것인가를 반드시 함께 얘기해야 한다고 생각합니다.

     """"새로운 아이디어가 어떻게 동작 가능할지 상상하는 일보다 이들은 본능적으로 왜 안 되는가에 대한 온갖 이유를 생각합니다. 이 사람들은 이런 태도가, 나쁘거나 멍청한 아이디어에 쓰는 모든 사람의 시간을 아낀다고 굳게 믿고 있습니다. 하지만 이 사람들이 실제로 하는 일은 자유로운 생각에서 수확할 수 있는 창의력을 침식하는 일입니다.""""

   다른 건 몰라도 이 글은 참 많은 것을 설명해주는군요. 위 댓글의 비관적 태도를 포함해서 말이예요. :)

   저도 설사 그러한 경향이 있다고 하더라도 그들의 입장을 이해하고 배려하는데 쓰여야하지
   합리화 수단이 되어서는 안된다는 점에 동의합니다.

   +1

   막상 본문에서 예시로 든 리누스 토발즈도 얼마 전에 자신의 과거 태도에 대해 사과를 했습니다;;
   https://arstechnica.com/gadgets/2018/…

   동의하기 어렵네요. 별다른 근거 없이 인상과 짐작만으로 틀린 결론을 이끌어낸 글이라고 생각합니다.

   파란약 먹은 분들이 많긴 한 듯 ㅋㅋ 페북에 맨날 음식 사진만 올리는 분들이 있긴 하죠.

   저희 회사에서 상호 평가할 때 보는 행동 강령 중 하나입니다.
   저희는 특히 토론 시간이 많아서 독성 말투가 있으면 일이 진행이 안되거든요.

   착한 말로 풀어 내는 것도 중요한 능력 중 하나이고, 면접에서도 중요하게 보고 있습니다.

   하지만, 케바케라고 생각은 듭니다..
   빨간약 먹고도 친절한 사람도 있습니다 ㅎㅎ ( 긱뉴스에 그런 분들이 많아지길 바래봅니다 )
"
"https://news.hada.io/topic?id=7727","Show GN: Rayst Gradient - 다양한 곳에 사용할 수 있는 아름다운 AI 생성 그라데이션 이미지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Show GN: Rayst Gradient - 다양한 곳에 사용할 수 있는 아름다운 AI 생성 그라데이션 이미지

   Rayst Gradient
     * 다양한 곳에 사용할 수 있는 아름다운 AI 생성 그라데이션 이미지

   그라데이션 이미지 라이센스
     * 모든 그라데이션 다운로드 무료
     * 상업 / 비상업 목적 모두 사용 가능
     * 허락 / 허가 불필요 (그렇지만 언급해주시면 더 좋습니다.)

   홈페이지 라이센스
     * 오픈소스 MIT License

   홈페이지 기술스택
     * Next JS, React JS
     * @vercel/og

   보자마자 너무 마음에 들어서 휴대폰 배경화면 바꿨습니다. 감사합니다!

   저도 이런게 필요했는데 캔버스로 구현하신건가요? 대단하시네요!

   요즘 홈페이지 디자인 에셋이나 블로그 포스트 썸네일 등에 그라데이션 그래픽을 많이 사용하시나요! 메이커 Chris님의 아이디어로 AI가 생성한 아름다운 그라데이션 그래픽을 무료로 배포하는 웹사이트를 사이드프로젝트로 하룻밤동안 만들었습니다.

   사용해보시고 괜찮으시면 업보트 부탁드려요!ㅎㅎㅎ

   감사합니다 :)
"
"https://news.hada.io/topic?id=7818","Rewind - 당신의 삶을 위한 검색엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Rewind - 당신의 삶을 위한 검색엔진

     * 내가 ""보고, 말하고, 들은 것""을 검색하는 엔진
          + 맥OS에 일어난 모든 작업을 로컬에 녹화하고 검색 가능하게 인덱싱
          + 압축 및 OCR(문자인식)/ASR(음성인식)도 모두 로컬에서 처리해서 개인정보 보호(외부 API 사용 안함)
     * 놀라운 효율의 압축 성능(3750x 압축)으로 레코딩을 저장
          + 평균적으로 1달에 14GB 용량을 사용. 적은 경우 월 1GB, 많으면 39GB
     * 화상회의 내역도 모두 저장하고 검색 가능
     * 특정 앱은 녹화 제외 가능
     * 애플 실리콘의 모든 부분을 활용해서, 시스템 자원을 거의 쓰지 않음(애플 M1 & M2)
     * a16z 로 부터 $10m 투자 받음

   이거 진짜 엄청나네요

   저도 1분에 1 frame씩 캡쳐해서 매일 8초짜리 타임랩스 기록 남기는 걸 종종 하는데요. 몇번 하다보니까 화면에 시크릿 키가 표시되는 경우가 있어서, 화면을 엄청 작게 만들 수 밖에 없더라고요. 개발자 입장에서는 쉽게 쓰긴 어려울 거 같아요. 개발이 아니면, 쓸 수 있을거 같긴한데.

   블랙미러의 이 에피소드가 생각났습니다.

   https://blog.naver.com/livewell_365/221420580775
"
"https://news.hada.io/topic?id=7771","데이터 사이언티스트는 시계열 예측을 위해 어떤 라이브러리를 쓰나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 데이터 사이언티스트는 시계열 예측을 위해 어떤 라이브러리를 쓰나요?

   ""저는 주로 Prophet(FBProphet)을 쓰는데 다른 분들은 뭐 쓰는지 궁긍합니다."" 라는 질문에 대한 HN의 답변들
     * Darts in Python
     * R의 Forecast 패키지가 유용
     * XGboost, LGBM, pmdarima, stanpy
     * statsmodels
     * Prophet, ARIMA, Exponential Moving Average, Kalman/Satespace Model
     * tsfresh, Sktime
     * 라이브러리 보다 모델에 대해 먼저 고민해보는건 어떨까?
          + 시계열 모델에 관한책 추천 링크 Books for self-studying time series analysis?
"
"https://news.hada.io/topic?id=7793","Draw Things - 아이폰에서 2GiB로 Stable Diffusion을 실행하는 앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Draw Things - 아이폰에서 2GiB로 Stable Diffusion을 실행하는 앱

     * 실제로 아이폰은 램이 6GiB지만, 2.8GiB 이상을 쓰면 앱을 죽여버림
     * SD는 8GiB 넘게 필요로 하므로 아이폰에서 실행이 불가능
     * 그래서 아이폰에 맞게 모델을 조정해서 2GiB 이하로 줄이고 전체 메모리 사용량을 2.5GiB로 낮춤
     * Draw Things 라는 이름의 iOS 무료 앱으로 만들었음
     * iPhone 14 Pro에서 한장 생성에 약 1분정도 걸림

   아이폰 12 프로 기본 설정으로 2분 정도 걸리네요.
   이것 때문에 폰 바꿀까 생각이...

   이 글도 같이 보시면 좋을꺼 같습니다. 다른 개발팀이 Stable Diffusion을 아이폰 앱으로 만들고 스토어에 올려었지만 배포하지 않기로 결정한 이유를 설명합니다. https://cephalopod.studio/blog/…

   앗..아 m1 패드로 해보려고 했더니 only iPhone 이라고 되어있네요.. 아쉽습니다..

   개발자가 어떤 방식으로 줄여나갔는지를 상세하게 적어주었네요. (너무 상세해서 옮기기엔 부담..)
   일단 제 폰은 아이폰 14 프로 맥스인데, 512x512는 잘 만들어지고, 512x768은 생성하다 앱이 죽네요.
   만들어진 사진의 품질은 꽤 훌륭합니다. 가지고 놀기 좋네요.

   앱스토어 링크 : https://apps.apple.com/us/app/draw-things-ai-generation/id6444050820
"
"https://news.hada.io/topic?id=7732","Explain Paper - GPT-3로 논문을 쉽게 읽기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Explain Paper - GPT-3로 논문을 쉽게 읽기

     * 논문 PDF를 업로드한 후,
       화면에서 모르는 단어 또는 공식, 문장등을 마우스로 하이라이트하면 GPT-3가 쉬운 문장으로 설명을 생성해서 보여줌
     * 팔로우업 질문 입력해서 추가 설명 보기 가능
     * 영어 및 중국어, 일본어, 스페인어, 프랑스어 등에도 동작

   궁금한 점이 있는데요, 우리나라가 IT 문화력에 있어서 중국이나 일본에 많이 뒤쳐지나요? 일단 중국의 경우는 기본 인구수가 워낙 많으니까 중국어로 된 IT 담론도 더 활발할 것이라 이해는 가는데, 일본은 대한민국에 비해서 인구수는 2배이지만, IT 기술력과 포용력에 있어서는 우리나라의 반의 반절도 안된다고 알고 있거든요.

   유명한 오픈소스 기여자 중에 일본인들 많습니다.

   흔한 말로 노벨상 수상여부가 그 나라의 전체 수준으로 볼 수는 없다고 하지만 분명한건 기반이 되었으니 가능할 일이겠지요.

   제 개인적인 의견으로는, 중국에는 당연히 많이 뒤쳐지는 것 같구요, 일본이랑은 결이 좀 다른 것 같습니다. 우리나라가 개발 커뮤니티가 관심있어하는 분야랑 일본쪽 커뮤니티의 관심 분야가 겹치는게 많지 않아서 서로 잘 모르는 것 같아요.

   전에 유럽쪽 개발자와 비슷한 주제로 짧게 얘기한 적이 있었는데, 일본은 갈라파고스화 되어 있긴 하지만 기술 문서를 생산하는 양이 많고, 서적 출판에 대한 양이 많기 때문에 한국과 일본을 둘 다 잘 모르는 입장에서 검색을 통해 얻는 자료나 수치화된 자료만을 통해서 생각하면 그런 오해가 있을 수 있겠다고 하더라구요.

   이런거 초기 구현에 일본어 중국어 있는거 항상 부럽네요

   대충 한국어 논문도 하나 넣어서 테스트 해봤는데, 얼추 영어로된 설명이 나오네요..?
"
"https://news.hada.io/topic?id=7807","할아버지 창고에서 찾은 전설적인 1956년도 컴퓨터 LGP-30","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  할아버지 창고에서 찾은 전설적인 1956년도 컴퓨터 LGP-30

     * 한 독일인이 할아버지 창고에서 66년된 Librascope LGP-30 컴퓨터를 발견(다수의 1970년도 DEC PDP-8/e 들과 함께)
     * 1956년에 발매된 LGP-30은 유럽에서 딱 45대만 제조되었고, 유명한 ""The Story of Mel""*에서 Mel이 사용한 컴퓨터
     * 그 당시 가격은 $47000(현재 가격으로 조정해보면 $512866 - 6억7천만원) 에 362kg
     * 사람들은 소형 컴퓨터로 인식했음 (111cm x 83cm x 66cm 정도의 작은 책상 크기)
     * 113개의 진공관, 1450개의 Solid-state 다이오드, 회전 자기드럼 메모리(3700RPM으로 회전하는 16cm 직경의 17.8cm 튜브)
     * 4069개의 31비트 워드 저장 가능(요즘의 15.8KB에 해당)
     * 그의 할아버지는 60년대에 토목 공학 계산을 위해 그걸 사용했고, 그걸 개인적으로 소유한 소수의 사람 중 한명
     * 다시 동작하게 하려면 작업이 필요할 것으로 보여, 동작하는 LGP-30이 있는 박물관을 찾아서 연락할 예정이라고

   이런 이야기는 언제나 쫄깃하게 재미납니다.

   The Story of Mel
     * 1983년도에 USENET에 올라왔던 유명한 글
     * 초기 해커에 대한 영웅담 처럼 기록되어 종종 인용됨
     * LGP-30 위에서 포트란 같은거 쓰지 않고, 기계어로 직접 코딩을 하던 Mel 에 대한 이야기
     * 그가 손으로 기계어와 어드레스를 이용해 짠 코드는 최적화된 어셈블러들보다 훨씬 더 빨랐음
     * 컴퓨터쇼의 부스에서 사용할 블랙잭 프로그램을 기계어로 짜고 수정하던 그가 회사를 떠난 뒤, 그의 코드를 분석하며 놀랐던 사람이 적은 글

   The Story of Mel on Wikipedia
"
"https://news.hada.io/topic?id=7825","아마존, 이번주부터 약 1만명의 직원 정리해고 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      아마존, 이번주부터 약 1만명의 직원 정리해고 예정

   역사상 가장 큰 규모. 기기/리테일/HR. 아마존 전 세계 인력의 1%, 회사 직원의 3% 미만
"
"https://news.hada.io/topic?id=7728","왜 테슬라는 레이더와 초음파 센서를 제거했을까? [인터뷰 영상]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  왜 테슬라는 레이더와 초음파 센서를 제거했을까? [인터뷰 영상]

   테슬라의 AI 총괄이었던 Andrej Karpathy 인터뷰 영상

   센서로 인한 차이가 미미하다지만 기존에 작동하던 기능 일부가 현재 미지원 상태입니다. (https://www.tesla.com/ko_KR/support/transitioning-tesla-vision)

   카메라 위치로 인한 Blind Spot도 이슈가 될 수 있을것 같구요.
   (https://www.youtube.com/watch?v=ZXvL6f6tZmY)

   아.. 음.. 무슨 얘기인지 뉘앙스는 알겠는데.. 정확히 받아적기가 참 애매하네요.
     * 센서가 많으면 각각의 추가 정보를 조정하고 결합하느라 엔트로피가 증가하고 비용도 증가
     * 실제로 그 추가 센서들이 주는 정보의 차이값이 미미했음
     * 비전 센서만 이용하도록 하면 더 많은 데이터를 집중하여 처리 가능
"
"https://news.hada.io/topic?id=7817","테슬라, 자사의 충전 표준 규약 NACS를 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       테슬라, 자사의 충전 표준 규약 NACS를 공개

     * ""North American Charging Standard""
     * 북미에서 가장 많이 사용되는 테슬라의 충전 표준은 10년이 넘게 200억 마일 이상을 충전해왔음
     * CCS에 비해서 크기는 절반이고 두배 강력
     * 충전 사업자와 자동차 회사들이 이 사양을 도입할 것을 요청
     * 이를 통해서 타사 자동차들이 테슬라의 슈퍼차저/데스티네이션 차저 네트웍을 활용하는 것도 가능
     * 기술 스펙 자료와 커넥터 도면(CAD), 커넥터 데이터시트 등을 공개
"
"https://news.hada.io/topic?id=7756","애플, 시리 호출단어를 "Hey Siri" 에서 "Siri" 로 교체할 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               애플, 시리 호출단어를 ""Hey Siri"" 에서 ""Siri"" 로 교체할 것

   AI훈련 및 엔지니어링 작업을 진행중이며, 내년 또는 2024년에 적용 예정

   한국어는 그냥 ""시리야"" 인데, 가끔 엄한 얘기해도 호출되는 현상이 좀 줄어들려나요.
"
"https://news.hada.io/topic?id=7736","Meta가 안드로이드 개발을 Java에서 Kotlin으로 전환한 이유와 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Meta가 안드로이드 개발을 Java에서 Kotlin으로 전환한 이유와 방법

     * Meta의 안드로이드 Repo는 페이스북,인스타그램,메신저,Quest 등이 들어 있는 거대 저장소
     * 현재 약 1000만 라인이 넘는 Kotlin 코드를 포함하고 있음

Kotlin으로 전환한 이유

     * 인기도외에 주요 장점들
          + Nullability : NPE는 Meta에서 공통적인 문제였어서 다양한 대응을 했지만, Kotlin의 내장 Nullability 처리가 훨씬 강력하고 작업이 쉬움
          + 함수형 프로그래밍 : Kotlin의 인라인 함수와 람다 표현식이 실행속도 저하없이 FP 스타일을 적용하게 해줌
          + 더 짧은 코드
          + DSL / Type-safe Builder
     * 물론 무시할 수 없는 약간의 단점도 있음
          + 또 다른 언어를 도입함에 따른 혼합 코드베이스를 꽤 오래 유지해야한다는 점
          + Kotlin이 인기있긴 하지만, 그 인기도 면에서 Java와는 갭이 있긴 함. 그래서 도구들이 더 적으며, 많은 Kotlin 도구가 Kotlin & Java 상호 운용성을 고려해야 해서 구현이 복잡함
     * 가장 큰 걱정 거리는 빌드 시간이었음. 처음부터 Kotlin 빌드시간이 Java보다 느릴수 있다는 것은 알고 있었음. 느린 빌드시간은 개발자 경험에 좋지 않음

마이그레이션에 접근한 방법

     * Kotlin으로의 이관은 놀랍도록 쉬우면서도, 매우 복잡했음
     * J2K(Java To Kotlin Converter)가 있어서 편하긴 하지만, 그래도 복잡합
          + J2K가 항상 정확한 것은 아니고, Java와 Kotlin의 상호 운용성이 몇가지 극단적인 경우를 만듦
     * 마이그레이션에 두가지 옵션이 있었음
          + 새로운 코드만 Kotlin으로 작성하고 대부분의 코드는 Java 그대로 둔다
               o 장점은 일이 적지만, 두언어 혼용때문에 Kotlin 에서 플랫폼 타입을 쓰게 되면서 널포인터 역참조가 발생하여 크래시가 발생하기도 함.
                 또 Java에서 타입 파라미터를 Nullable로 태그할수 없다거나(최근까지), Kotlin의 오버로딩 규칙은 Null 허용 여부를 고려하지만 Java의 오버로딩 규칙은 고려하지 않는 다는 이슈도 있음
          + 모든 인하우스 코드를 Kotlin으로 변환 시도한다

마이그레이션 한 방법

     * 두 옵션을 모두 고려했고, 모든 코드를 Kotlin으로 변환하는 것을 목표로 결정
          + 처음엔 좀 느렸지만, 몇몇 블록커를 해결하고 나서는 대량으로 변환이 가능해졌음
          + 현재는 페이스북, 메신저, 인스타그램 각각의 안드로이드 앱들이 1백만 라인의 Kotlin 코드를 포함하고 있으며 점차 변환율이 올라가는 중
          + 현재 전체 안드로이드 코드베이스에는 1천만 라인의 Kotlin 코드가 있음

Unblocking

     * 처음 변환 시작하고 몇몇 이슈가 발생
          + 바이트 코드 패턴 때문에 Redex를 업데이트 필요
          + 일부 내부 라이브러리가 성능때문에 바이트코드 트랜스포밍을 하고 있어서 이게 Kotlin에서 동작을 안했음
          + 내부에서 최적화를 많이 해뒀다면 비슷한 이슈들이 생길 것
     * 기존 도구들에도 문제가 발생
          + 코드리뷰/위키 등에서 Kotlin 구문 강조가 안되어서 Pygments를 업데이트 했음
          + Kotlin 포매터인 Ktfmt를 별도로 개발 했음

마이그레이션 가속화 하기

     * 도구가 준비되어서 코드를 코틀린으로 변환할 준비가 되었음
     * 하지만 각 마이그레이션은 수작업으로 진행해야할 보일러 플레이트 코드가 많았음
     * J2K는 일반적인 도구이므로, 코드에 대한 이해도는 없음. 이때문에 많은 수작업이 필요
          + 예를 들어 JUnit 테스팅 규칙 같은 것
     * 그래서 J2K를 3단계 파이프라인의 중간에 두었음
          + 첫번째로 Java 패키지 한개를 가져다 Kotlin으로 변환할 준비를 함. 버그 수정 및 내부 도구에 필요한 컨버전
          + 두번째로 스크립트를 통한 J2K 자동 실행
          + 세번째로 새 Kotlin 파일을 후 처리. 가장 중요함. 자동 리팩토링/린터등을 헤드리스 모드로 수행
     * 자동화가 모든 문제를 해결해주지는 못하지만, 공통적인 것들을 우선순위화 했음

Kotlin 마이그레이션에서 배운 것

     * 코드 길이가 줄었음
     * 실행 속도는 유지
     * 빌드 크기는 문제가 아님
     * 더 길어진 빌드 시간 문제 해결 : KSP(Kotlin Symbol Processing API) 사용

   좋은 글 공유 감사합니다. 개인적으로 kotlin을 처음 쓸 때 java보다 편리한 점이 많아서 좋기도 하고 앞으로는 kotlin이 대세가 되지 않을까 싶었는데, 좀 쓰다보니 아직은 java더 좋다고 생각되는 부분도 많더군요.
     * 언어 자체는 kotlin이 확실히 편리하다고 생각
     * java의 ecosystem이나 troubleshooting 자료가 많은 것에 비해 kotlin은 좀 부족한 부분이 있음.
     * jdk 버전이나 kotlin 버전에 따라서 Java만 쓴다면 겪지 않아도 될 버그나 이슈들이 꽤 있음.
       Android는 kotlin으로 가도 괜찮다고 생각하지만 다른 환경 (Spring 이라던지..) 에서는 안정성이 중요하다면 아직은 Java가 더 나은 선택인 것 같습니다.

   안정성의 사례 하나만 알려주실 수 있으실까요? 내공이 적어 아직 그런 사례를 만나보지 못했는데 몹시 궁금합니다

   Jetbrains가 마구마구 릴리즈를 찍고있어서 그런지 모르겠지만, 의외로 컴파일러 버그 픽스가 많습니다.
   https://github.com/JetBrains/kotlin/releases/tag/v1.7.20

   컴파일러 자체가 터지는 경우도 종종 있고(이건 그나마 배포전이니깐 괜찮습니다만), 산출물에도 종종 버그가 포함됩니다.

   더군다나 android의 경우에는 R8 bytecode optimiser 도 kotlin 버젼을 가립니다.
   왜나면, kotlin 코드 전용 최적화 기능이 있는데 이것에 대한 공식적인 호환성 테이블 문서(Android Gradle Plugin : Kotlin Version)가 없습니다..
   그래서 Android 프로젝트에서 코틀린 버젼을 변경할 때 주의해야 합니다;;;

   관련 버그 리포트 : https://issuetracker.google.com/issues/207397158

   감사합니다. 깊고 넓은 세계가 있군요..
"
"https://news.hada.io/topic?id=7715","Remix 웹 프레임워크를 Shopify가 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Remix 웹 프레임워크를 Shopify가 인수

   Shopify의 지원으로 더 빠르게 성장하고, Shopify의 많은 내부 프로젝트에서 Remix를 사용할 예정

   Remix vs. Next.js
"
"https://news.hada.io/topic?id=7764","Bike: 혁신적인 리치 텍스트 편집","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Bike: 혁신적인 리치 텍스트 편집

     * 맥용 Outliner 앱인 Bike가 지원하는 서식 편집 기능
     * Link Button : 링크의 쉬운 편집 및 동작
     * Typing Affinity : 포맷 경계에서 커서가 앞/뒤 꼬리를 보여줘서 정확히 편집 가능
     * Formatting Popover : 버튼 하나로 포맷 팝업하고 단축키로 선택
     * Visible Typing Attributes : 현재 포맷을 커서 위에 표시 (B/I 등)

   역시 젠스타일 에디터의 장인이라고 여겨집니다. 뭔가 싱크(클라우드) 기능과 모바일 지원만 된다면 역대급일 텐데요. 저는 row 를 다양하게 쓸 수 있어서 좋아요.

   경계에서 커서 위치 표시 및 커서 위쪽에 포맷을 보여주는게 정말 좋네요. 리치 텍스트 편집에는 다 지원하면 좋겠어요
"
"https://news.hada.io/topic?id=7742","OpenAI DALL·E, 이제 API로 이용 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      OpenAI DALL·E, 이제 API로 이용 가능

     * 서비스로만 이용 가능했다가 이제 기존 Text/Code Completion 처럼 API로 자신의 앱내에서 이용 가능
     * 세가지로 사용 가능 : n은 생성될 이미지 갯수
          + 프롬프트로 이미지 생성 : create(prompt, n, size)
          + 프롬프트로 기존 이미지 수정 : create_edit(image, mask, prompt, n, size)
          + 기존 이미지의 Variation 생성 : create_variation(image, n, size)
     * Terms of Use 도 개정되어, DALL·E 로 생성한 이미지에 대한 완전한 소유권을 가지게 됨(콘텐츠 안전 시스템 개선으로 인해 가능해짐)
     * 생성된 작품들을 모아서 공개 또는 비공개 콜렉션으로 관리 가능
"
"https://news.hada.io/topic?id=7708","트위터, 인증 마크에 월 $20를 부과하는걸 계획중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      트위터, 인증 마크에 월 $20를 부과하는걸 계획중

     * 지금의 월 $4.99 짜리 Twitter Blue 구독을 더 비싼 요금제로 변경하는 것
     * 현재 인증된 사용자도 90일내에 구독하지 않으면 파란색 체크 형태의 인증마크를 제거할 예정
     * 프로젝트 참여자에 의하면 일론 머스크가 11월 7일까지 구현하지 않으면 해고하겠다고 했다고

   아니 뭐 가격 바꾸는거야 간단하니 그러려니 하는데

   11월 7일까지 구현....하지 않으면 해고하겠다라니 ㄷ ㄷ ㄷ ㄷ 무섭네요.

   어라 기사만 봤는데, 몇시간전 일런의 트윗에 의하면 월 $8 로 계획중이라고 하네요
   https://twitter.com/elonmusk/status/1587505731611262976
     * 가격은 국가별로 조정될수 있음
     * 리플라이, 멘션, 검색에 우선권 부여
     * 긴 비디오&오디오 포스트 가능
     * 절반의 광고
"
"https://news.hada.io/topic?id=7754","트위터가 해고한 일부 직원들에게 돌아와달라고 요청하고 있다고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   트위터가 해고한 일부 직원들에게 돌아와달라고 요청하고 있다고

   여러 소스와 트위터 Blind/Slack을 통해서 관련 내용이 전파중

   이걸 트윗으로 보고 있으니 뭔가 기분이 묘하네요

   아마 담당자가 엑셀 시트 작업할 때 뭔가 실수를 한듯 보입니다.
   실제로 performance로 sorting해서 그냥 기계적으로 하위 몇% 이렇게 정리해고 대상을 선정한다고 들었습니다. 그런데, 이와중에 핵심 엔지니어가 포함되기도 하는 경우가 있을 겁니다.

   아.. 정말 역대 최악급 해고 사태네요..
"
"https://news.hada.io/topic?id=7716","GNU Make 4.4 릴리즈ake 4.4 릴리즈
"
"https://news.hada.io/topic?id=7702","Charts.css - CSS 데이터 시각화 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Charts.css - CSS 데이터 시각화 프레임워크

     * <table> 같은 HTML 엘리먼트들을 이용하여 차트를 표현해주는 CSS 유틸리티 클래스
     * 미디어쿼리 이용한 반응형
     * 마크업 내에 직접 데이터가 있어서 접근성 지원
     * JS를 사용하지 않으며, 의존성 없음
     * 다양한 차트 타입 지원 : Area, Bar, Column(Percentage, Stacked), Line, 3D Bars/Tilt, Multi-Dataset(Area, Line, Bar, Column),..
"
"https://news.hada.io/topic?id=7792","왜 스타트업은 Java를 피합니까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          왜 스타트업은 Java를 피합니까?

   왜 스타트업은 Java를 피하는가? HN에 올라온 질문에 대한 답변
     * 가장 큰 이유는 Java 생태계가 망가져서, Maven/Gradle 등 끔찍함.
     * Spring을 추종하는 개발자들 때문에 피함.
     * Java를 hibernate/springboot와 혼동하기 때문.
     * Java는 지루한 기업 코딩, Rust와 같은 최신 핫시트가 아님.
     * JVM 사용해야 하는 경우 Kotlin 또는 Clojure와 같은 다른 언어를 사용하는 것이 좋다.
     * 2022년에 당신의 새로운 스타트업이 Java를 사용하고 있다고 말하는 것은 Cobol을 사용하고 있다고 말하는 것과 같다.
     * 한때는 힙하고 트렌디했지만 Oracle이 등장했다.

   마지막에 한표. 오라클이 먹은 이후 퇴행하기 시작

   비용이랑 인력 감당할 수준이 안되는 거 다 뻔히 아는데 뭔 소리를...

   Maven/Gradle 등 끔찍함
   이거보고 작성자의 수준이 보임을 암시하네요

   선배님들 말씀 잘듣고갑니다

   구인이 쉽다는 장점은 정말 아무나 지원한다 라는 단점이 될수도 있겠네요.
   코틀린 스칼라까지 다떼고 JVM을 마스터한 베테랑도 있을것이고, SI업계에서 자바 경력은 10년넘었지만 기술향상의지가 없어 스트림 API도 모르고 그때 그 문법에계속 머므르는 사람도 있을것이고. golang이나 rust를 채용하게 되면 후자의 비율은 상당히 줄어들것 같긴 합니다. 파이썬은 모르겠지만요...

   java에서 kotlin으로 넘어가는것 어렵지 않으며 jsp에서 thymeleaf로 넘어가는것도 어렵지 않아요. 단지 레퍼런스라는 불편함이 있을뿐이죠. 뭐가 됐던간에 객체와 상속, 구조적 설계부터 해보세요. 라이브러리나 사이드 툴등에 종속하는건 자신이 초보라는것밖에 증명이 안됩니다.

   개인적으론 Java 는 역사가 오래 된 만큼 정보 불균형이 심한 듯 합니다.
   아무래도 한 시대를 풍미했던 언어였으니 그 시대의 정보 산물이 아직도 많이 남아있고, 수 많은 버전업이 된 지금까지도 그 산물이 마치 아직 유효한 듯 재 생산되는 경우도 매우 많았던 것 같습니다.
   새 버전에 맞는 새 접근방법을 찾아가는 데에 어려움이 많았던 기억이 있습니다.
   다른 언어라고 안그런 것은 아니지만, 파편화가 심한언어를 뽑자면 파이썬, 자바가 딱 뽑힐 것 같습니다.
   하지만 파이썬은 생산속도면에서 뛰어나다는 평가를 받기때문에 여전히 스타트업에서 종종 채용하는 것 같고요.
   하지만 스타트업에서 자바를 피하는거랑은 다른이유인 듯 합니다.

   [스타트업에서 자바를 피하는 이유]
     * 핫한 언어가 아니라서
     * 스타트업은 대체로 새로운 트랜드를 이끈다는 생각을 가진 사람들을 뽑고싶기때문에, 핫한 언어를 쓰고싶어하는듯.
       [그렇지만 스타트업에서 자바를 선택해야 하는 이유]
     * 구인이 쉽다.
       [하지만 제고해 봐야하는 이유]
     * 구인이 쉽다고 해서 좋은 사람을 뽑기 쉬운것은 아니다.

   자바가 좋냐 안 좋냐를 떠나서 피부로 느끼는 건 자바가 해외 스타트업의 주류는 아닌 것 같습니다

   해외 업체 인수를 위해서 기술 분석 업무를 수행핬었는 데 1군데도 자바가 없었습니다. 특이한 건 의외로 .NET이 많았죠.

   벌써 2~3년 전에도 그런 경험을 해서 그런 지 공감이 가는 내용입니다.

   maven은 너무 장황해서 저도 별로지만
   gradle도 끔찍한거였군요
   저는 npm이 더 무섭던데요;

   그리고 cobol은 좀 선 넘은 것 아닌가 싶네요
   대기업 개발자 위주로 써서 그런가 ㅎㅎ

   아무튼 자바가 맹목적으로 비난받는 그림은 볼때마다 재밌습니다. 사례를 보다보면 각자의 어두운 경험들이 보이더라구요.

   자바는 너무 게을렀었어요.
   욕먹을 만 합니다.
   요새 좀 힘쓰는 것 같으나 욕은 더 먹어야한다고 생각합니다.

   어차피 세대가 흐르면 또 다른 언어가 주류가 될겁니다. 스타트업은 새로운 흐름을 도입하기 위한 의사결정 구간이 간단하고 본인들이 쓰는 언어가 주류가 되야 스타트업을 벗어나는 거고, 규모가 큰 기업들은 의사결정 구간이 복잡하고 이해관계가 있다보니 안정성이 확보되야 도입하는 차이가 아닐까요. 1959년에 등장한 코볼이 금융권에서 21세기가 되어서야 사라졌습니다. 참고로 여러분들이 별로라고 하는 자바도 오픈소스로 출발했고 한때 소호 에서 가장 인기있는 언어였습니다. 그리고, 자바가 대기업 이미지가 더해진건 오라클이 인수하고 한국에서는 정부주도의 전자정부프레임워크가 등장하면서입니다.

   '자바는 한국에서만 인기있다'는 미신은 어디에서 시작되었는지 궁금하네요. 국내 it 대기업이래봐야 네카라 두군데인데 두 군데 다 자바를 쓰니까 그런걸까요?

   물론 미국에서는 엔지니어링 풀이 훨씬 넓으니까 다른 언어로 팀을 꾸리기 유리한 부분이 있긴 하지만 faang 포함 모든 미국 it 기업에서도 자바는 지극히 일반적인 기술 스택입니다.

   워낙에 큰 회사들이라 팀바팀이 매우 심하지만 아마존은 아예 사내 표준 프레임워크가 자바구요(버전 2에서 스프링 썼다가 이제 guice로 바꿨다고 들었습니다) 구글은 C++ / 자바 반반정도에 파이썬 쓰는 팀도 일부 있는 정도라고 알고 있습니다 애플도 제가 알기로 대부분의 웹 서비스가 자바에서 돌아가는 걸로 알고 있구요

   넷플릭스는 말할 것도 없죠 hystrix, zuul, eureka 다 넷플릭스에서 만들었으니 아마 세상에서 가장 스프링을 잘 쓰는 회사가 아닐까 싶습니다

   페이스북도 대부분 C++ 아니면 hack이지만 일부 자바를 쓰는 팀이 있는 것으로 알고 있습니다

   트위터도 처음에 루비로 썼다가 jvm 언어인 스칼라로 옮겨간 것으로 알고 있고 그 외에도 아틀라시안, vmware, 레드햇 등등 대기업에서 오히려 자바를 안쓰는 곳을 찾기가 더 힘들겁니다

   카프카, 하둡 등이 다 jvm에서 돌아가기 때문에 직접적인 서비스에 자바를 안쓰더라도 진짜로 자바가 필요없는 회사는 아마 없지 않을까 싶네요

   기존에 자바를 많이 사용했다는 점에 대해서 부정하는 사람은 아무도 없습니다. 이 글의 요지와는 거리가 먼 것 같네요.

   네 글 자체는 국가 상관없이 일반적인 대기업을 논하고 있는데요 댓글에서 유달리 ""한국에선 그렇다"" ""한국 한정으로 그렇다""는 언급이 유독 많이 보여서요

   한국에서만 Java를 많이 쓰는 건 아니지만, 한국에서 특히 Java를 많이 쓰는 건 사실인 것 같습니다. 예를 들면 JetBrains의 작년 설문조사 결과에서는 “Java는 한국, 중국 및 독일에서 가장 많이 사용되는 언어입니다. 한국의 Java 점유율은 53%, 중국은 47%, 독일은 33%입니다.”라고 하더군요. 이러한 현상에는 다른 분들도 댓글에서 많이 언급하신 전자정부프레임워크의 존재 및 국비지원 코딩교육의 커리큘럼 등이 분명 영향을 주지 않았을까 합니다.

   몇몇 댓글들을 보니 예전에 올라왔던 C++관련 글이 떠오르네요. 한국 개발 커뮤니티에서 C++과 자바는 거의 성역의 반열에 올라간게 분명하군요 ㅋㅋ 까는 순간 무수히 많은 사람들의 발작 버튼이 눌려지는걸 보니..

   자바도 국내 시장을 휩쓴 이유가 물론 있지만 C++이 자바와 같이 묶이기엔 조금..ㅎㅎ

   발작버튼은 그다지 좋은 표현은 아닌 것 같습니다. 상대방을 나쁘게 표현하기 때문입니다.

   조금 더 서로를 존중하는 커뮤니티가 돼면 좋다는 마음에 감히 말씀드려봅니다. 죄송해요.

   동감합니다. 죄송할 필요 없는 것 같습니다.

   스타트업이 자바를 피한다기 보다 다른 언어/프레임워크의 장점이 더 크기 때문이라고 생각하긴 하지만 자바/스프링 생태계가 생각보다 별로라는것에는 동의합니다. 솔직히 스프링 개발자지만 스프링을 딱히 좋아하지 않네요. 웹 어플리케이션 개발을 자바(사실상 스프링과 동의어) 말고 다른 환경에서 진행해본 개발자들이 별로 없기에 더 심한느낌..

   Spring
     * 성숙한 프로젝트인데도 문서화가 제대로 안되어있고 파편화가 심함. 구글링 해보면 Baeldung 이 공식 문서급..
     * XML 은 제일 끔찍하지만 Annotaion 베이스로 구현된 기능들도 끔찍하다. 모양은 같지만 python decorator 같은 것과는 근본적으로 다르기에.
     * 국내한정 별다른 고민없이 스프링의 확장 에코시스템을 관성적으로 채용하는 개발 문화. 프로젝트가 불필요하게 비대해지고 버전 의존성이 심하다. Hibernate (data-jpa) 에 대한 믿음은 종교 수준

   Java
     * 자바 자체가 오래되면서 초기부터 설계가 잘못된 기능들을 하위호환성을 유지하면서 안고가려다보니 새로운 기능을 도입하기가 어렵다.
     * 도입하더라도 우회적이거나 제한적 방식을 통해 제공되는 경우가 많음. 대표적인 것이 모듈 시스템이나 비동기 프로그래밍 (C# 에 비교하면.. 처참한수준)

   JVM 생태계의 잇점은 분명 있으니 새 프로젝트에서 코틀린은 거의 필수고 스프링을 가져가야할 명확한 이유가 없다면 ktor 같은 경량 프레임워크로 시작하는게 바람직하다 봅니다. 지적한 단점에 대해서는 설계가 잘못되고 스프링 철학을 제대로 이해를 못하고 개발했느니 하는 사람들이 많지만 OOP 는 다른 언어로도 할수 있는것..

   댓글창이 굉장히 지저분하고 공격적인 와중에 공감이 가는 댓글이네요

   새로운 언어와 프레임워크를 좀 더 적극적으로 도입해야 한다는 점에 공감합니다만, 솔직히 지금 신규 프로젝트를 막 새로 시작하는데도 무슨 합리적인 이유 없이 최신 LTS 버전인 Java 17 대신 관성적으로 Java 8을 선택하는 사람이 넘쳐나는 것이 국내의 현실이지요. 티스토리 블로그 같은 곳을 보면 “Java 1.8 다운로드 방법” 이런 글들이 2022년 올해 날짜로 올라오는 경우를 정말 쉽게 찾을 수 있습니다. 그런 걸 보면 괜히 여기 계신 다른 많은 분들이 Java를 극혐하는 태도를 보이시는 게 아닌 것 같다 싶습니다.

   그렇지만 이러한 문제점이 Java라는 언어 자체에서 기인한 문제점만은 아닌 것 같습니다. 그보다는 특히 국내에서 심한 것으로 보이는 변화에 적대적인 문화와 발전 없는 복사-붙여넣기 코드의 범람이 더 큰 문제가 아닐까 생각합니다. 실제로 저는 C#으로 개발된 비슷한 프로그램 여러 종류를 유지보수하는 작업을 하고 있는데, 언어 자체는 Java보다 낫다고 생각하지만 아무리 언어가 좋아도 전임자가 대충 예전 프로젝트 코드를 복사-붙여넣기로 때우기만 한 코드의 끔찍함을 막을 도리는 없더라고요. 심지어 지금은 외부 환경의 변화로 인해 그렇게 반복되는 코드의 상당수를 연말까지 무조건 교체해야 하는 상황이 닥치니 더욱 끔찍합니다.

   국내한정 발작버튼이네요
   예전부터 많이 써오던 자바를 버리긴 어려울 것 같고 사람이 계속 필요하니 국비학원에서 똑같은 커리큘럼으로 스프링뗄감 찍어내는데..

   이런 순환고리가 끊어지긴 어려울것같다는 생각이 드네요.
   코프링을 사용하려하는 시도들은 좋게보고있습니다.

   도커 쓰다보면...
   도커이미지 사이즈도 쓸데없이 커지고.
   실행되는데 시간도 오래걸리도 등등...

   요즘 다들 docker 쓰다보니 비선호가 된거 같기도 합니다..

   Java 의 생태계는 절대 한번도 망가진적이 없다.
   무수히 많은 오픈소스 프로젝트도 있고 버전업을 하면서 현제의 개발 트렌드를 다른 언어보다 빠르게 반영하고 있다고 본다.

   gradle/maven 은 빌드툴은 선택일 뿐이지 필수가 아니다.
   다른 빌드툴도 많이 있고 원하는걸 사용하면 된다.
   노드에서 npm을 왜 사용하는가? 편하기 때문에 사용하는거다. gradle/maven역시 편하니깐 많이 사용하는거다.

   Java 에도 많은 프레임워크가 있음에도 spring 을 사용하는 이유는 유연한 확장성, 프로젝트 관리의 편리함과 안정적인 퍼포먼스를 보여주기 때문에 인기가 지금까지 이어지고 있다고 본다.

   왜 스타트업에서 사업규모가 커지면서 Java로 전환하는지 보면 대부분 안정적인 프로젝트 관리때문에 전환을 결정하고 있다.
   지금까지 소규모로 파이썬이나 노드로 개발을 진행할땐 문제가 없지만, 사업이 성공하여 개발자가 100명 이되고 1000명이 되어 같은 프로젝트를 진행한다고 볼때 더이상 파이썬이나 노드의 장점을 살리기 힘들고, 오히려 단점이 더 많아지기때문이다.
   대규모 프로젝트에 퀄리티 관리하면서 안정성까지 확보 된 Java로 전환하는 것이라고 생각한다.
   아마 Java 보다 더 좋은 대체 언어가 있었다면 누구보다 따르게 대체 언어 사용하지 않았을까??

   마지막으로 Java로 만든 서비스는 최초 진입장벽이 높고, 인프라 비용이 높다 그래서 스타트업 초기에 높은 비용과 많은 시간을 들여 세팅하지 않고 쉽고 빠르게 적용 할수 있는 언어를 주로 사용하는걸 볼수 있다.

   일단 국내 한정으로 자바개발자만 넘처남. 정확히는 자바개발자가 아닌 스프링 개발자만 있음. 전자정부 프레이웍이 스프링이니 죄다 양선형 개발자는 스프링만 배워서 나옴. 그런 애들이 경력차고 넘처나니 그런것임. 다양성도 없고 언어 생태계는 이미 망가졌음. 스프링없이 게시판도 못만드는 자바 개랄자라고 허는 사람들 많음

   이 질문의 포인트는 ""스타트업"", 중요한 건 ""안정성/확장성"" 보다 ""개발속도"".
   스타트업에게 시간은 돈!
   (나중에 시간과 돈이 생기면 자바로?)

   그리고 자바의 인기가 한국만의 특수성은 아닐 듯. 지금도 Popular program language top 3.

   그런 이유로 자바로 옮긴다는 이야기는 한국에서만 통하는 것 같아요.
   큰 회사는 자바로 되어있는게 많다보니 유지보수 목적이 가장 큽니다.

   오라클이 등장하고 말고는 사실 대부분의 일선 기업에서는 해당사항 없고...네카라쿠배도 메인 시스템은 전부 자바입니다. 넥슨 같은 게임회사들도 내부 백엔드망은 자바로 작성하구요.

   자바 생태계가 망가졌다, Gradle이 끔찍하다는건 전혀 동의가 안 되네요

   자바가 오래된 언어고 자바 개발자가 많다고 해서 그 사람들이 새로운걸 배우기 싫어한다거나 퀼리티가 떨어진다는 건 무슨 논리인지 모르겠네요.

   네카라쿠배가 전부 자바가 메인이고 최근에 코틀린이 조금씩 도입되는 수준인데요.
   설마 진짜 고수들은 스타트업에 있다 뭐 이런 소리인가요 ? ㅎㅎ

   핫시트('hotshit')는 더 적절한 번역이 있을 듯 합니다.

   ""2022년에 당신의 새로운 스타트업이 Java를 사용하고 있다고 말하는 것은 Cobol을 사용하고 있다고 말하는 것과 같다.""

   한국에선 자바 개발자 수급이 쉽다라는 논리를 이길 수가 없습니다. 그렇게 채용하는 개발자의 퀄리티는 글쎄요.

   Java생태계가 망가졌다니? Spring은 왜 안 된다는건지? 근거가 너무 빈약하다

   JVM이 암호화폐라면 Java는 비트코인입니다.

   ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ

   옛날에 괜히 자바 2명 타요 밈이 있는게 아니죠.. 게다 정부 표준 프레임워크라고 정부 공공 SI엔 뭐 거의 반강제로 JAVA를 쓰게 하니 ....

   자바쪽 툴체인이 별로라는건 좀 이해하기 어렵네요.
   Maven/Gradle의 관리 방식은 npm에 데였던거에 비하면 선녀였는데...

   저도 커리어를 자바로 시작하고 약 4년 정도 한 회사에서 자바 개발자로만 일하다가 회사를 이리저리 옮기면서 python, ruby, go 등과 같이 다양한 언어를 접해보다가 최근에는 Solidity 개발자로써 커리어를 이어나가고 있습니다.

   최근에는 많은 스타트업들이 어느 정도 성장을 마치고 안정궤도에 들어오면서 대부분 자바로 인프라를 변경하는 사례가 보이는데 왜 그렇게 바꾸나 곰곰히 생각해보니
   그냥 다들 관성때문에 그러는 것처럼 느껴지더군요.

   많은 리드급 개발자들이 자바에 익숙하고, 다른 언어를 배우기 꺼려하다보니 그냥 본인들에게 익숙한 자바를 사용하는 것이고 그런 사람들이 스타트업으로 몰리고나면 인프라가 다 자바 베이스로 바뀌는 것 같습니다.

   개인적으로 익숙함이라는 이유만으로 인프라를 뜯어고치는게 이해가 되지는 않습니다만, 사람이라는게 원래 새로운것을 배우는것을 꺼려하고 대한민국에 자바 생태계가 워낙 견고하다보니 이를 바꾸는것은 아주 어려울 것으로 보입니다.
    1.

   Java , Spring 은 대규모 서비스를 안정적으로 제공하기 좋은데,
   최초 스타트업의 서비스는 규모가 작아 자바의 장점을 발휘하기 쉽지않아서
    2.

   최초 스타트업은 적은 인원으로 Front, Back 을 해야하는 상황도 있는데, 이는 자바보다는
   Node.js 나 JS 로 한번에 짜기 편해서
    3.

   결국 스타트업 시리즈 투자 받으면 다 자바, 스프링으로 전환하던데

     Java , Spring 은 대규모 서비스를 안정적으로 제공하기 좋은데,

   1번은 전 가끔 잘 모르겠어요. 그렇다고 다른 언어들이 불안정 하냐면 그건 또 아니라서요. 어차피 대규모로 가면 자바도 튜닝해야할 테고 말이지요.

   보면 그저 익숙해서 본인들이 성능튜닝,트러블슈팅 하기 편한것을 “안정적” 이다라고 말하는 것 같은 느낌이 들 때가 있어요.

   다들 아시다시피 Java는 메모리 관리를 자동으로 해주는 등 지금은 너무도 당연하게 여겨지는 여러 가지 것들을 초기 버전에서부터 제공해주고 있습니다. 그리고 Java가 처음 등장했던 1990년대에는 C나 C++처럼 개발자의 사소한 실수가 메모리 누수를 일으키는 등 애플리케이션 전체의 신뢰성에 훨씬 큰 영향을 주기 쉬운 언어들이 지금보다 훨씬 많이 사용되고 있었지요. 그런 시대에 설령 일시적인 실행 중단(Stop-the-world)은 있을지언정 메모리 문제로 아예 서비스가 죽을 확률은 확 낮춘 언어의 등장은 상당한 센세이션이었다고 합니다. 그래서 Java는 등장 초기부터 다른 언어보다 훨씬 안정적이라는 이미지를 깔고 시작하였고, 그것이 지금까지 이어진 것이 아닌가 생각합니다.

   또한 현 시점에서 Java는 각종 서비스에서 오랫동안 널리 쓰이면서 쌓인 신뢰도와 축적된 경험이 있지요. 따라서 말씀하신 것처럼 성능 튜닝이나 트러블슈팅을 하기가 용이하기도 하고, 상용과 오픈소스를 막론하고 각종 도구와 솔루션도 많이 있습니다. 널리 쓰이는 제품의 생태계는 그 자체로 문제해결을 쉽게 만드는 효과가 있고, 장애 발생시 문제해결이 쉬워서 다운타임을 줄일 수 있다는 것은 안정성을 중시하는 입장에서는 큰 메리트일 것입니다.

   그리고 다른 댓글에서 많이 언급되는 Kotlin의 경우는, 여기 GeekNews에 달린 다른 분의 댓글에 의하면 의외로 아직까지도 컴파일러 버그나 호환성과 관련된 이슈가 많다고 합니다. 같은 JVM을 쓰는데다 공개된 지가 이제 10년이 다 되어가는 언어도 이러니, 판단 기준에서 안정성을 가장 중시한다면 웬만해서는 오랜 세월을 통해 충분히 검증된 것을 택하려는 것이 충분히 합리적이지 않나 싶습니다.

   참고로 현 시점에서는 굉장히 이상하게 느껴질지도 모르지만, Java가 처음 등장했을 때는 임백준님의 저서 『폴리글랏 프로그래밍』(2014)의 표현을 빌리자면 “참신하고 젊어서 섹시한 느낌마저 주었”다고 하는군요. 이와 관련하여, Java의 아버지인 제임스 고슬링이 1997년에 작성한 글의 번역문을 소개합니다.
     * (번역) The Feel of Java

   스프링으로 가는 이유는 한국 개발자 시장의 특수성에 있다고 봅니다.
   해외에서는 JVM 은 이 글처럼 대체로 코틀린으로 전환하고 있죠.

   저도 spring 추종자 때문에 java 이미지가 안 좋아짐.
   특히 한국은 java한다 그러면 그냥 죄다 spring boot라. java = spring boot 이런 식이 많아서.

   자바 할 줄 모르는 개발자인데 기분이 좋군요

   그래도 스타트업에서 사람 구할 때 제일 빠를거 같은데..

   하지만 한국에선...

   저도 한 때는 자바를 썼지만, 이제는 가능하면 자바를 안쓰고 싶네요.

   왜 슬프면서 웃음이 나죠..? ㅋㅋㅋ
   (예전 스타트업에선 자바를 썼지만, 지금은 안씀)
"
"https://news.hada.io/topic?id=7778","Meta, 직원의 13%인 11000명 정리해고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Meta, 직원의 13%인 11000명 정리해고

     * 마크 주커버그가 직원들에게 보낸 편지
     * 지출을 줄이고 고용 동결을 Q1까지 연장하여, 더 날렵하고 효율적인 회사가 되기 위해 여러가지 조치를 취하는 중
     * Covid와 함께 온라인으로 전환이 많아지면서 이게 영구적으로 가속될거라 생각해, 투자를 크게 늘렸지만 예상한대로 작동하지 않음
     * 온라인 상거래가 이전 추세로 돌아가고 거시 경제 침체, 경쟁 심화, 광고 손실로 인해서 수익이 훨씬 낮았음
     * ""내가 잘못했고, 그 책임은 내가 짐""
     * 해고 당사자는 곧 이메일을 받게 될 것
     * 미국에 있는 직원들의 경우
          + Severance : 16주 기본 급여 + (근무 년수 * 2주). 상한 없음
          + PTO : 남은 Paid Time Off는 모두 돈으로 보상
          + RSU vesting : 대상자는 모두 2022/11/15 일자의 베스팅을 받게 될 것
          + 건강보험 : 당사자 및 가족에 대해 6개월간 보험 비용 지원
          + 커리어 서비스 : 외부 벤더를 통해서 3개월간의 커리어 서비스 지원. 미공개 채용정보에 대한 얼리 억세스 포함
          + 이민 지원 : Visa로 온 경우에 대해서 통지 및 비자 유예 기간이 있음. 전담 전문가 지원
     * 오늘 바로 대부분의 Meta 시스템에 대한 액세스를 제거. 작별인사 할수 있게 하루동안은 이메일 활성상태로 유지

   그런데 본인이 책임을 어떻게 진다는 얘길까요. 주가 떨어진걸로?

     작별인사 할수 있게 하루동안은 이메일 활성상태로 유지
     트위터보다는 인간적이네요.

   코비드가 인류역사 발전에 부스터를 달았다고 하면서 급격한 디지털라이즈화가 되는 것으로 보였는데 훼이크였나요.

   그렇게 느껴지시던가요?
"
"https://news.hada.io/topic?id=7799","NSA, 메모리 안전문제로 C/C++ 대신 C#, Go, Rust 등의 언어를 권장하는 지침 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         NSA, 메모리 안전문제로 C/C++ 대신 C#, Go, Rust 등의 언어를 권장하는 지침 발표

     * 소프트웨어 취약점의 70% 이상은 메모리 안전 문제에서 발생
     * 많이 사용되는 C/C++ 같은 언어는 메모리 관리가 자유롭지만 프로그래머가 메모리 레퍼런스를 관리해야함
     * 이 문제를 해결하기 위한 권장사항
          + 메모리 안전 언어 이용 : C#, Go, Java®, Ruby™, Rust®, Swift®
          + Application security testing 도입 (DAST/SAST)
          + 취약점 차단 기능 도입 : Control Flow Guard (CFG), Address Space Layout Randomization (ASLR), Data Execution Prevention (DEP)
"
"https://news.hada.io/topic?id=7819","내 프로젝트가 Microsoft Flight Simulator의 이스터 에그가 되었어요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            내 프로젝트가 Microsoft Flight Simulator의 이스터 에그가 되었어요

   초기버전을 WASM/LLVM으로 실행한 오픈소스 프로젝트가 정식에 포함

   Flight Simulator 1982/84/88/89
   요기에 올라왔던 건데 진짜로 포함되었나 보네요
"
"https://news.hada.io/topic?id=7766","hiSHtory - 더 나은 Shell History","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     hiSHtory - 더 나은 Shell History

     * 쉘 히스토리를 컨텍스트별로 저장
          + 어떤 폴더에서 실행했는지, 성공/실패 여부, 실행 시간
          + 로컬로 저장되고 e2e암호화 되어 다른 컴퓨터에 동기화 가능
     * CLI로 쉽게 검색 가능
          + Ctrl + R 눌러서 검색하고 실행
          + hishtory query 통해서 기존 명령 보기 가능
     * Go로 작성된 오픈소스

   음.. 우분투에 설치해보고 싶은데 .. 설치 가이드가 충분치 않네요., 가이드 자료 있을까요?
"
"https://news.hada.io/topic?id=7725","함수형 프로그래밍이 소프트웨어 개발의 미래가 되어야 하는 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   함수형 프로그래밍이 소프트웨어 개발의 미래가 되어야 하는 이유

     * ""함수형 프로그래밍(FP)은 배우기 어렵지만 당신의 코드가 불쾌한 놀라움을 덜 만들게 될 것""
     * FP에서는 ""less is more""
     * (Maybe/Option 으로) Null Reference 문제를 해결
     * FP는 학습 곡선이 가파르다
     * FP의 미래
          + 적은 수의 개발자로 더 많은 개발을 하려면 가능한 모든 도구를 사용해야 하는데, FP는 이를 위한 티켓임
          + 우리 같이 화려하지 않은 회사들은 개발자 채용이 어려움. 하지만 FP 코드베이스에서 일하고 싶어하는 탑 티어 개발자를 채용하는게 가능해짐
          + FP를 채택하면 품질과 견고성이 향상되고, FP에서는 생기지 않는 버그에 들이는 시간이 줄어들 것
          + FP의 기능들이 주류 언어에서 점점 보이기 시작하는 것은 소프트웨어 업계가 패러다임 시프트를 준비하고 있다는 것.
          + 업계가 완벽히 전환하게 되기까지는 많은 작업이 필요하겠지만, 이렇게 하는 이점이 분명하기 때문에 어디로 가는 지에 대해서는 의심할 바 없음

   학습곡선이 높은게 맞는 것 같습니다 댓글에서도 진정 함수형 프로그래밍을 완전히 모르시는 내용이 있네요 물론 잘아시고 쓴 댓글도 있네요 함수형 힘듭니다 저도 아직도 공부중입니다 ㅜ ㅜ

   프로그래밍 언어가 더 이상 개발팀의 취향이 아니라 회사의 생존의 문제가 되는 케이스가 생길 때 비로소 우리는 FP의 필요성에 대해 다시 얘기해볼 수 있을겁니다.

   제가 정리하겠습니다. 메모리 관리와 일부 알고라즘에서 아직 객체지향을 뛰어넘지 못하고 있습니다. 상황과 비용에 따라 적절히 사용하면 됩니다.

   음.. 학습 곡선이 가파르다는 주장에는 동의하지 못하겠고

   일단 그냥 쉽고, 실수할 여지가 줄어들고, 따라서 생산성이 높아집니다.
   그거면 됐죠 뭐

   인간의 사고와 업무를 순수 함수형 프로그래밍 언어들처럼 완벽히 수식화하는게 어렵죠. free monad 이런거 보면 그냥 rxjs 정도까지가 최대 허용범위인듯
   . Fp도 배보다 배꼽이 커지는 순간이 옵니다.
   기존 fp 효과도 데이터와 메서드를 분리한 정도지,
   옵셔널이 생각보다 잘 안쓰이는것만봐도 타입 추상은 불필요한 추상화임(타입 맞추느라 생산성을 넘깎아먹음).
   클로저마냥 데이터와 연산을 더 추상화하는 방향이 아닌이상 기존언어를 활용하기엔 한계가있음

   물론 함수형 프로그래밍도 좋은 방법이라고 생각은 하지만, 그 장점을 설득력있게 전달 해주는 사람은 잘 없는것 같습니다. 그냥 좋다고 하면 잘 와닿지 않잖아요?

   이하 개인적인 의견으로, 그리고 현대의 모든 프로그램은 사실상 튜링 기계 기반으로 이뤄져 있기에, 추상적으로 크게 함수와 자료로 나눌 수 있고, 때문에 절차적 프로그래밍도 근원적으로는 함수형 이라고 생각합니다. 그럼 함수형의 절차형 대비 진짜 장점은 무엇인가하면, 그냥 '전역 혹은 그에 준하는 영역의 변수 안쓰기'라고 생각됩니다. 이 장점으로 인해 '함수와 함수간의 격리' 및 '멀티쓰레드 컴퓨팅'에도 효율적이죠.

   하지만 이건 함수형 프로그래밍으로만 얻을 수 있는 잇점이냐면 그건 아닙니다. 절차형 언어에서도 dependency injection 개념을 통해 클래스 및 함수 단위 격리가 권장되고 (이미 모던한 프레임워크는 모두 기본 차용하고 있죠), rust언어에서는 언어적인 제한으로 편리한 동시성 컴퓨팅을 추구 할 수 있게 해놓았죠.

   정리하면 함수형 언어는 좋은 언어이고 방법론이지만, '진화적 의미에서 우월'이라기 보다 그저 go나 rust 언어 처럼 '실패할 가능성을 언어 단위에서 배제하기 위해 노력했으면서, 사용하기 어려운 언어'라고 생각합니다.

   절차언어에서도 함수 합성 같은게 가능하다는 말씀이실까요?

   '합수 합성'의 정의를 좁게 보면 함수형 언어에서만 된다고 생각할 수 있겠지만, 가만 생각해보면 그 실행도 어차피 절차언어인 기계어나 어셈블리어 위에서 돌아가잖아요. 즉 '가능, 불가능'의 문제가 아니라, '언어의 관심사, 취향, 철학'의 문제입니다. '함수 합성'의 정의를 좁게 '특정 언어의 특정 기능'이 아닌 '논리적 기능 간 합성'으로 넓게보면 얼마든지 가능하죠. 그리고 분명히 함수형 언어의 장점은 존재하기에 이를 적극적으로 차용한게 rxjs나 spark 같은것들이구요.

   다들 컴과에서 배웠듯이 아래는 같은 결과지만, 단지 표현형이 다를 뿐입니다. 그리고 전위는 함수형이라고 부르는 경우가 많죠.

   전위표기법 : + 1 1
   중위표기법 : 1 + 1
   후위표기법 : 1 1 +
"
"https://news.hada.io/topic?id=7808","Map of the Internet - 인터넷 지도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Map of the Internet - 인터넷 지도

     * IP 주소 대역과 국가별로 보기
     * IP 및 도메인 명으로 검색 가능
     * 관리하는 회사/기관 표시

   재밌네요!!

   링크를 수정하는 게 좋을 것 같습니다. 현재 링크로 접속하면 까만 화면밖에 안 나옵니다.
   https://ipv4.dev.sarl/

   긱뉴스 서버를 확인해보니 미국의 아마존이 관리하는 한국 리전 대역이라고 나오네요.
"
"https://news.hada.io/topic?id=7801","CRISPR 유전자가위로 암 치료 가능성 열려, 미국 연구진 임상시험 성공","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               CRISPR 유전자가위로 암 치료 가능성 열려, 미국 연구진 임상시험 성공

   DNA 염기를 잘랐다 붙이는 유전자 편집 기술인 ‘크리스퍼(CRISPR) 유전자가위’로 면역세포를 편집해 암 세포를 파괴하는 임상시험에 성공

   Nature 원문 기사 CRISPR cancer trial success paves the way for personalized treatments - CRISPR 암 시험 성공으로 개인 맞춤형 치료의 길이 열림
"
"https://news.hada.io/topic?id=7747","DevOps Roadmap 2022","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          DevOps Roadmap 2022

     * DevOps 엔지니어가 되기 위해 단계별로 배워야 할 것들을 정리한 로드맵 자료
     * 각 단계별로 교육 자료 링크 포함(대부분 무료)
     * 로드맵
         1. GIT
         2. 프로그래밍 언어
         3. 리눅스
         4. 네트워킹 & 보안
         5. 서버관리
         6. 컨테이너
         7. 컨테이너 오케스트레이션
         8. IaaS
         9. CI/CD
        10. 모니터링 & Observability
        11. 클라우드 프로바이더
        12. DevOps

   여기 한 반정도는 나름 자신 있는데 ...갈길이 머네요..

   기존에 봤던 로드맵과는 다른 자료네요
   Frontend,Backend,DevOps 개발자를 위한 로드맵 [한국어]
   DevOps 는 어떤 일을 하나요?
"
"https://news.hada.io/topic?id=7761","Body Doubling","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Body Doubling

     * 생산성 향상을 위해 보디 더블링 상대를 찾는 플랫폼
     * 보디 더블링은 같은 공간에 함께 있는 것만으로 생산성을 향상 시켜줌
          + ADHD 및 쉽게 산만해지는 사람들이 과제에 계속 집중하는 걸 돕기 위해 고안
          + 온라인으로 같이 있는 것도 가능
     * 디스코드를 통해서 찾고 온라인 연결

   전 파티션 없는 곳이 더 집중이 잘 되더라구요. 아무래도 남의 시선을 무의식적으로 느끼는게 각성 효과를 주는것 같아요.

   한국인은 없네요 ㅠ

   모각코라는 용어를 들은적있는데 그런걸까요?

   네 맞는 것 같아요. 그냥 혼자 두면 산만한데, 누가 있으면 괜히 열심히 하는..? ㅎㅎ

   요즘 트럭들 뒤에 눈알 붙이고 다니는거 재밌던데 그것도 약간 이거랑 비슷한 효과라고 생각해볼수있을까요?

   아 그 ""잠 깨우는 왕눈이""(공식 이름입니다)는 반사지 스티커 라서 추돌 방지를 위해서 한국도로공사가 배포하는 것이긴 한데요.
   졸음운전과 전방주시를 해주는 효과를 주는데.. 생산성 보다는.. 감시자 효과라고 보는게.. ㅎㅎㅎ

   실제로 사무실에 혼자 있는 것 보다 누군가와 같이 있는게 정말로 훨씬 생산성이 높긴 합니다.
   HN에서 본 사이트인데 해당 단어를 검색해보니 번역된 기사가 있길래 같이 첨부합니다.
   업무 집중도 높이는 ‘보디 더블링’ 효과[Monday HBR/데보라 그레이슨 리겔]

   온라인도 가능하다고는 하는데, 아무래도 오프라인이 더 효과적이긴 할듯.
   코워킹 스페이스가 그래서 급속성장 했다고 봅니다.(위워크가 이상해진건 다른 얘기고..)

   위워크가 이상해졌다는건 뭔가요?

   위워크 재무상태가 개판이라 망하기 직전까지 간 이유가
   코워킹 스페이스가 효과가 없어서 그런게 아니라는 말 같네요

   아 네네 맞습니다. WeCrashed 마지막 장면의 흘러 넘치던 맥주가 인상적(?)이었어요..
"
"https://news.hada.io/topic?id=7798","Go 13주년o 13주년

     * 가장 의미심장한 이벤트는 지난 3월의 Go 1.18 출시
          + Go Workspace, Fuzzing, Generics 도입
     * VS Code Go 및 Gopls 랭귀지 서버 작업으로 개발 환경을 계속 개선중
     * ACM 에서 ""The Go Programming Language and Environment"" 출판

   Go 1.18 릴리즈 (제너릭 포함)
   Go 1.19 릴리즈
"
"https://news.hada.io/topic?id=7738","인터폴, 첫번째 Police Metaverse 런치","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      인터폴, 첫번째 Police Metaverse 런치

     * 전세계 법 집행을 위해 특별히 설계된 최초의 메타버스
     * ""경찰이 메타버스를 이해하려면, 우리가 경험해봐야 합니다""

   이에 대해 Benedict Evans는 ""Metaverse라는 단어가 얼마나 무용한지를 보여주는 완벽한 예제"" 라고 표현했네요.

   전 ""재미 없는"" 메타버스는 아무도 찾지 않는다고 생각합니다. 왜 정부/공공기관들이 자꾸 메타버스에 신경쓰는지 모르겠어요.
   게임하러도 잘 안들어가는 곳인데.. 공공 서비스를 받으려고 메타버스를 쓴다고요?

   상업 브랜드가 메타버스 안에 매장 만드는 것도 크게 공감이 안되는데, 공공기관이 메타버스를 만든다니...?
"
"https://news.hada.io/topic?id=7789","우연히 알게된 구글 픽셀 폰 잠금화면 바이패스로 9500만원($70k) 버그 보상금을 받음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           우연히 알게된 구글 픽셀 폰 잠금화면 바이패스로 9500만원($70k) 버그 보상금을 받음

     * SIM PIN번호를 3회 틀린 경우, PUK(Personal Unblocking Key)를 입력해야함
       → PUK는 보통 USIM이 끼워져 있는 플라스틱 카드에 적혀있음
     * 구글 픽셀 5/6폰에서 SIM PIN을 3회 강제로 틀리고 PUK를 입력하면 기존에 폰에 설정된 비밀번호/지문 잠금화면이 패스되는 것을 발견
       → 즉, 모르는 사람이 폰을 가져가 SIM을 교체한뒤 PIN을 강제로 틀린후 PUK로 해제하면 잠금화면을 넘어갈 수 있다는 것
     * 구글에 알렸지만 대응이 늦었고, 여러번 알린 후에야 패치가 나왔음
       → 락스크린 바이패스는 최대 $100k(1억4천만원)까지 받을 수 있지만, 기존에 제보된 버그여서 보상금은 $0
       → 하지만, 이 사람이 여러번 보고서를 올려서 빠르게 수정이 진행되었다고 예외로 인정, $70k를 주는 것으로 결정되었다고

   구글은 참… 많이 걸러서 봐야 되는 회사인거 같아요

   ""여러번 올려서 빠르게 수정이 되었다""라...

   여러번 알렸던 것 중에 직접 구글 엔지니어를 만나서 알린 것도 놀라웠고. 이런 심각한 버그를 몇 달 방치하다 12월에 고치려다 11월에 고쳤던 것도 놀라웠고, 어디 스타트업이 아니라 구글이라서 놀라웠습니다(... )
"
"https://news.hada.io/topic?id=7824","Classic HCI Demos - 1983~2002 기간의 UI 데모모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Classic HCI Demos - 1983~2002 기간의 UI 데모모음

   A curated collection of HCI demo videos produced during the golden age from 1983-2002
"
"https://news.hada.io/topic?id=7796","Hey, GitHub - 키보드 없이 코딩하기 [기술 프리뷰]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Hey, GitHub - 키보드 없이 코딩하기 [기술 프리뷰]

     * 마이크를 이용하여 자연어 문장으로 얘기하면 GitHub Copilot이 이를 인식하여 코드를 작성

     Hey,Github! Insert new line
     get titanic csv data from the web and assign it to variable titanic data
     clean records from titanic data where age is null
     * 코드 네비게이션도 가능 go to line 34 / go to method X
     * IDE 제어 지원 Toggle Zen Mode / Run the program
     * 코드에 대한 설명 듣기 explain lines 3-10
     * Waitlist 받는 중

   잘 풀리면 혼자 일하는 느낌이 안들어서 재밌을 것 같고 (body doubling같은?)
   인식이 안되거나 결과물이 항상 안좋다면 저성과+자괴감 패키지가 될 것 같네요

   저작권 이슈도 문제겠지만
   아무튼 결말이 기대됩니다.
"
