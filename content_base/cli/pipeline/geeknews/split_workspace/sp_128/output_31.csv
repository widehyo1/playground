"https://news.hada.io/topic?id=4068","DeepHN - 해커뉴스 3천만개 링크의 Full-Text 검색 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 DeepHN - 해커뉴스 3천만개 링크의 Full-Text 검색 도구

   - HN에 올라온 3천만개 포스트의 내용과 댓글, 외부 URL 내용을 통합해서 실시간 검색
   - 실시간 프리뷰
   - 검색어 자동 보정/제안
   - 키워드 하이라이팅
   - 불린 검색 : AND,NOT,PHRASE,Implicit PHRASE
   * 검색 SaaS인 SeekStorm 으로 개발

   SeekStorm ( https://seekstorm.com/ ) 이 자신들의 SaaS 홍보용으로 만든 거네요.
   HN의 기본 검색은 YC에서 투자한 (YC W14) 검색 SaaS인 Algolia ( https://www.algolia.com/ )를 이용중입니다.
   국내에서도 검색 SaaS가 나온다면 GeekNews 데이터를 함 이용해 보시면 어떨까 합니다 ㅎㅎ
   SeekStorm 이 쓰는 일부 기능은 오픈소스로 공개했네요.
   - 철자 교정 및 퍼지 검색 오픈소스 SymSpell : https://github.com/wolfgarbe/SymSpell
   - 1000배 빠른 Radix trie 및 자동 완성 오픈소스 PruningRadixTrie : https://github.com/wolfgarbe/PruningRadixTrie
   SaaS를 만들고, 자신들의 SaaS로 사람들이 쓰기에 좋은 뭔가를 샘플로 개발해주고, 그리고 일부는 오픈소스로 공개하고..
   이게 SaaS 서비스가 성장하는 기본 프로세스 인듯.
   TypeSense 도 비슷한 방식을 썼죠. 검색은 오픈소스이지만, 클라우드 버전 SaaS는 유료입니다.
   - typesense - 오픈소스 검색 엔진 https://news.hada.io/topic?id=3369
   - typesense로 만든 2백만개 음식 레시피 검색 엔진 https://news.hada.io/topic?id=3370
"
"https://news.hada.io/topic?id=4055","1인 기술 스타트업의 아키텍쳐 스택","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          1인 기술 스타트업의 아키텍쳐 스택

     * 스트레스 없이, 느릿하게 SaaS를 운영하는 1인 개발자의 아키텍쳐 설명
     * 여러개의 프로젝트를 동시에 운영하는 인프라를 구성했음
     * 자신이 최근에 만든 PanelBear 라는 SaaS를 기준으로 설명
       ㅤ→ 가장 작은 VPS에서 SQLite + Django로 시작
       ㅤ→ 6개월간의 이터레이션을 통해, EKS 위에서 Django 모노리스 + Postgres + ClickHouse(분석) + Redis(캐싱) + Celery(예약 작업)
       ㅤ→ 대부분 자동화 : 오토스케일링, ingress, TLS 인증서, failover, 로깅, 모니터링 등
       ㅤ→ 이 설정을 여러개의 프로젝트에서 사용하므로, 비용을 줄이고 실험들을 정말 쉽게 시작할 수 있음
       ㅤ→ 인프라 관리에는 거의 시간이 들지않음 (한달에 0~2시간).
       ㅤ→ 대부분의 시간은 기능 개발, 고객 지원, 비즈니스를 성장시키는데 사용
     * AWS에서 Kubernetes를 사용하지만 꼭 이게 필요한 건 아님. 다만, 본인은 익숙하기에 안정적으로 운영할 수 있다고 생각.
       ㅤ→ 참을성 있는 팀(에러를 같이 참고 막아줄)에서 이 도구를 몇년간 사용하며 배웠음
       ㅤ→ ""쿠버네티스는 단순한 걸 복잡하게 만들지만, 복잡한 것을 단순하게 만들기도 함""
     * 자동 DNS, SSL 및 로드밸런싱
       ㅤ→ CloudFlare Proxy 에서 AWS L4 NLB(Network Load Balancer) 로 모든 트래픽 전달
       ㅤ→ Request가 들어오면 LB가 k8s 클러스터 노드중 하나로 포워드
       ㅤ→ 이 노드들은 여러개의 AZ(Availability Zone) 에 걸쳐져 있는 프라이빗 서브넷에 있음
       ㅤ→ k8s 가 요청할 서비스를 알아내는 것은 ingress-nginx(Nginx 클러스터) 가 함
       ㅤ→ nginx가 트래픽 전달전에 RateLimiting 및 트래픽 쉐이핑 규칙을 적용
       ㅤ→ PanelBear의 경우 앱 컨테이너는 Uvicorn 에서 서빙되는 Django
       ㅤ→ Terraform/K8s 간에 몇개의 설정파일이 있고 그걸 대부분의 프로젝트가 공유
       ㅤ→ 새 프로젝트 배포 할때 20 라인 정도의 ingress 설정으로 가능
     * 자동 롤아웃 및 롤백
       ㅤ→ 마스터에 푸시할때마다 GitHub Actions 로 CI 파이프라인 실행
       ㅤ→ 코드베이스 검사, Docker-Compose로 완전환 환경을 만들어 E-to-E 테스트
       ㅤ→ 검사 통과시 ECR(AWS의 Docker Registry)로 푸시되는 새 Docker 이미지를 빌드
       ㅤ→ k8s 클러스터에 flux 컴포넌트 ( https://fluxcd.io/ ) 가 알아서 클러스터내의 이미지를 동기화
       ㅤ→ Flux 가 자동으로 Incremental Rollout 실행
     * Horizontal Autoscaling
       ㅤ→ CPU/메모리 사용량 기반으로 오토스케일링
       ㅤ→ 클러스터의 노드당 Pod가 너무 많은 경우 자동으로 더 많은 서버를 생성해서 클러스터 용량을 늘리고 부하를 줄임. 일이 없을때는 축소
       ㅤ→ Panelbear 의 경우 API Pod를 2개에서 8개까지 복제본을 자동 조정
     * CDN을 이용해서 Static Asset 캐슁
       ㅤ→ CloudFlare를 DNS에 설정해서, 모든 요청을 처리하고 DDoS 방지까지 처리
       ㅤ→ Static 파일 서빙에는 Whitenoise ( https://github.com/evansd/whitenoise ) 를 사용해서 NGinx/Cloudfront/S3에 파일 업로드할 필요가 없음
       ㅤ→ Panelbear 의 랜딩 같은 몇개의 정적 웹사이트에는 NextJS 를 사용
     * 어플리케이션 데이터 캐슁
       ㅤ→ 일정부분에서는 파이썬이 제공하는 인메모리 LRU 캐슁을 사용
       ㅤ→ 대부분의 엔드포인트는 인 클러스터 Redis를 사용
     * EndPoint 당 Rate Limiting
       ㅤ→ nginx-ingress 에서 글로벌 레이트 리밋을 하지만, 가끔 엔드포인트/메소드 당 특정 리밋을 줄 필요가 있음
       ㅤ→ Django Ratelimit 라이브러리를 사용해서 Django 뷰당 제한을 선언 가능
       ㅤ→ Redis 를 백엔드로 사용해서 각 엔드포인트에 요청하는 클라이언트를 추적하도록 구성(IP가 아닌 클라이언트 키 기반 해시)
     * App Administration
       ㅤ→ Django 의 Admin Panel 이 기본적으로 데이터를 보고 편집하는 기능들을 지원
       ㅤ→ 의심스러운 계정 접근 차단 / 공지 이메일 발송 / 계정 삭제 요청 처리등의 기능을 추가(처음엔 소프트 삭제후, 72시간내에 완전 삭제)
     * 예약된 작업 실행
       ㅤ→ SaaS에선 다양한 예약작업이 실행 : 고객에 대한 일일 보고서, 15분마다 사용 통계 계산, 직원들에게 보내는 지표 이메일 등
       ㅤ→ Celery 워커 몇개와 Celery beat 스케줄러를 클러스터내에서 실행중. Redis를 태스크 큐로 사용
       ㅤ→ 예약된 작업이 제대로 실행되지 않을때 SMS/Slack/Email 등으로 공지 받기 위해 HealthChecks.io 를 사용
     * App Configuration
       ㅤ→ 모든 설정은 환경변수를 이용. 구식이지만 이식 가능하고 잘 지원됨
     * Keeping Secrets
       ㅤ→ kubeseal 을 이용. 비대칭 암호화를 사용해서 Secret들을 암호화함. 암호 해독 키에 접근할 권한이 있는 클러스터만 암호 해독 가능
       ㅤ→ 클러스터내의 Secret 들을 보호하기 위해 AWS KMS의 암호화 키를 이용
     * 관계형 데이터 : Postgres
       ㅤ→ 실험들을 위해 클러스터내에서 바닐라 Postgres 컨테이너를 운영하고, K8s Cronjob 으로 S3에 매일 백업을 수행
       ㅤ→ 프로젝트가 성장하면 데이터베이스를 클러스터 내에서 RDS로 옮기고, AWS가 암호화된 백업 및 보안 업데이트등을 처리하게 함
       ㅤ→ 보안을 강화하기 위해, AWS의 DB는 Private Network 에서만 접근 가능
     * 컬럼 데이터 : ClickHouse
       ㅤ→ PanelBear의 분석데이터를 효율적으로 저장하고 실시간 쿼리하기 위해 ClickHouse 를 사용
       ㅤ→ 훌륭한 Columnar 데이터 베이스로, 엄청 빠르고 구조만 잘 잡으면 높은 압축률을 보임(스토리지 감소 = 수익 증가)
       ㅤ→ K8s 클러스터내에서 ClickHouse 인스턴스를 자체 호스팅
       ㅤ→ S3에 Columnar 데이터를 주기적으로 백업하는 CronJob 생성
       ㅤ→ 재해시 S3에서 데이터를 수동으로 백업하고 복원하는 몇개의 스크립트
     * DNS기반 서비스 디스커버리
       ㅤ→ K8s 가 클러스터내의 DNS 레코드를 자동으로 관리해서 트래픽을 해당 서비스로 라우팅
       ㅤ→ 오토스케일링중에도 건강한 pod 들과 연결되도록 자동으로 DNS 레코드를 동기화
     * Version-Controlled Infrastructure
       ㅤ→ Docker, Terraform, K8s manifest 를 단일 저장소(Infra Mono-Repo)에서 관리
       ㅤ→ 간단한 명령으로 인프라 생성 및 삭제가 가능하고 버전 관리를 통해 재현가능
     * Cloud Resource를 위한 Terraform
       ㅤ→ 대부분의 클라우드 리소스는 Terraform 으로 관리
       ㅤ→ 이를 통해 인프라 자원과 설정을 문서화 하고 추적이 가능
     * App 배포를 위한 K8s manifest
       ㅤ→ 인프라 모노 레포의 YAML 파일에 K8s Manifest 가 적혀있음
       ㅤ→ cluster 와 apps 두개의 폴더로 분할
       ㅤ→ cluster 에는 nginx-ingress, 암호화된 secret들, Prometheus 스크래퍼 처럼 클러스터 전체 서비스 관련 설정을 포함
       ㅤ→ apps 에는 프로젝트당 하나의 네임스페이스에 정보들 저장
     * 구독 및 결제
       ㅤ→ Stripe Checkout 을 이용해서 모든 결제 처리
       ㅤ→ 결제 정보 자체에 관여할 필요 없어서 제품에 집중 가능
       ㅤ→ 고객 세션 만들고 Stripe의 페이지로 리디렉션 한뒤 WebHook 으로 결과받으면 끝
     * Logging
       ㅤ→ 로깅 에이전트를 쓰지 않고 간단히 stdout 에 로그출력하면 k8s 가 자동으로 로그를 수집하고 rotate도 수행
       ㅤ→ FluentBit 등을 통해서 Elasticsearch/Kibana 등으로 보낼수 있겠지만, 간단히 유지하기 위해 아직은 하지 않음
       ㅤ→ 로그 검사를 위해서는 CLI 도구인 stern 사용
     * 모니터링 및 경고
       ㅤ→ 처음에는 Prometheus / Grafana 를 자체호스팅 했지만, 클러스터 문제 발생시 경고시스템도 같이 중단 되어서 불편
       ㅤ→ 그래서 New Relic 으로 변경
       ㅤ→ 모든 서비스에는 자동으로 지표를 수집하고 Datadog, New Relic, Grafana Cloud 등으로 보낼수 있는 Prometheus Integration 이 있어서, New Relic 으로 이관시 그들이 제공하는 Prometheus Docker 이미지를 사용하는 것만으로 가능
     * 오류 추적
       ㅤ→ Sentry 를 이용해서 애플리케이션 오류를 수집
       ㅤ→ Slack #alerts 채널을 이용해서 downtime, cron job failures, security alerts, performance regressions, application exceptions 등 모든 경고를 중앙 집중화
     * Profiling 및 다른 좋은 것들
       ㅤ→ 심층 분석이 필요할때는 cProfile 이나 snakeviz 같은 도구를 사용
       ㅤ→ 로컬 머신에서는 Django Debug Toolbar 이용

   감사합니다

   Sentry와 New Relic의 기능차이가 많이 날까요?
   비슷한 기능을 한다고 생각했었는데 아직 써본적이 없어서요.

   오 우리회사에서 k8s도입을 검토중인데 1인 스타트업이 아니여도 상당히 좋은 글이군요

   좋은글 감사합니다. 영감받고갑니다.

   굳이 1인 스타트업이 아니라도 좋은 글이네요

   사소한 오타가,,
   - 오류 추적
   ㅤ→ Sentry 를 이용해서 애플리케이션 오류를 집
   => 수집인 것 같습니당

   고맙습니다. 수정했습니다~!

   저는 국내에도 자기 서비스로 돈을 버는 1인 개발자 또는 소규모 팀들이 더 많이 나왔으면 합니다.
   여기 긱뉴스는 그런 서비스들이 자신을 알리고, 건전한 피드백을 받는 공간으로 성장했으면 좋겠어요.
   - 1인 SaaS 스타트업 6개월 운영 회고 https://news.hada.io/topic?id=2415
   - 최소한의 노력으로 소프트웨어 스타트업 운영하기 https://news.hada.io/topic?id=1534
   - 2021년 독립 SaaS의 현황 보고서 [63p 슬라이드] https://news.hada.io/topic?id=3728
   - 1조 회사를 만들다 실패한 경험 이야기 https://news.hada.io/topic?id=2
   - 저는 인터넷에서 양파를 팝니다 https://news.hada.io/topic?id=3
   - 삼성출신 스타트업 대표가 12억 날리며 깨달은 것 https://news.hada.io/topic?id=3015
   - 스타트업을 년6$로 운영하기 https://news.hada.io/topic?id=1621

   감사합니다

   동의합니다. 감사합니다 :)

   👍
"
"https://news.hada.io/topic?id=4024","OpenJDK의 Microsoft 빌드 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        OpenJDK의 Microsoft 빌드 발표

   OpenJDK의 Microsoft 빌드 버전으로 무료로 사용가능
   * LTS 배포판은 OpenJDK 11.0.10+9 기반의 Java 11로 macOS, Linux, Windows 지원
   * early access버전은 OpenJDK 16+36 기반의 Java 16
   Java 11 LTS는 MS에서 2024년까지 지원
   올해 말에 Java 17 버전로 릴리스 할 예정
   https://devblogs.microsoft.com/java/…
   MS OpenJDK 페이지: https://www.microsoft.com/openjdk
"
"https://news.hada.io/topic?id=4090","Flashlight - C++로 작성된 빠르고 유연한 머신러닝 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Flashlight - C++로 작성된 빠르고 유연한 머신러닝 라이브러리

   - 페이스북이 공개
   ㅤ→ FAIR(Facebook AI Research) : Torch 개발팀
   - 연구에 가장 기본적인 코어만 가지고 있어서 쉽고 빠르게 커스터마이징 가능
   - 싱글 코드베이스에서 가벼운 도메인 어플리케이션 제공 : 음성 인식, 이미지 분류, 언어 모델링
   - ArrayFire Tensor 라이브러리를 이용
   - JIT 커널 컴파일
"
"https://news.hada.io/topic?id=4139","헝가리 화성인들의 기원을 찾아서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           헝가리 화성인들의 기원을 찾아서

   맨해튼 프로젝트에는 유독 1880년~1920년 사이 출생인 부다페스트 사람이 많아서, 초지능 화성인이 지구에 내려와 지구인과의 아이를 가졌다는 말이 있습니다.
   맨해튼 프로젝트 창립자 Leo Szilard, 수소폭탄의 개발자 Edward Teller, 양자역학에 대한 기여로 노벨상을 탄 Eugene Wigner, 천재의 대명사 John von Neumann 등 20세기 중반의 걸출한 천재들이 헝가리 출신이죠.
   심지어 텔러와 위그너, 노이만은 같은 고등학교 출신이라 고등학교 과학박람회 프로젝트로 원자폭탄을 만들었다는 농담도 있습니다.
   글쓴이는 이런 '헝가리 화성인들' 이 나타나게된 원인을 다각도로 분석합니다.

   1. 위그너, 노이만, 텔러가 재학한 fasori 감나지움에는 Laszlo Rats 라는 유명한 수학교사가 있었다. 위그너는 그의 사진을 사무실에 걸어둘 정도로 큰 영감을 받았다.
   -> 에드워드 텔러는 그의 수업을 한번도 들어본적 없었다. 뿐만 아니라 fasori 감나지움은 당시 최고의 감나지움이 아니었고, 근방 다른 감나지움 출신 천재들도 많았다.

   2. 그럼 19세기 말~20세기 초, 헝가리의 전반적인 교육수준이 좋아서 그런건가?
   -> 천재들은 제대로된 교육이 시작되기 전인 10살 이전부터 천재였던 경우가 종종 있었다.

   3. 글에서 언급된 천재 헝가리인들은 전부 Ashkenazi Jews, 동유럽 유대인이다. Ashkenazi Jews 는 Gaucher’ Disease 에 걸릴 확률은 100배 높고, torsion dystonia 에 걸릴 확률은 10배 높은 등 몇가지 유전적 특성을 갖고 있다. Ashkenazi 유대인은 가장 IQ가 높은 인종그룹이며, 노벨 과학상의 25%를, 튜링상의 27%를 차지하고 있다.
   -> 유대인은 헝가리에만 있는게 아니다. 유대인의 숫자만 따지면 독일이나 폴란드가 더 많은데, 왜 헝가리 출신들이 유독 많나? 그리고 헝가리 천재들이 1880-1920년대 출신으로 집중된 것을 설명하지 못한다.
   -> 당시 헝가리 경제상황이 좋았기에 물리, 화학 등 비상업적인 분야의 진로를 선택할 여유가 있었다.
   그리고 1880-1920년대 똑똑한 유대인들은 나치의 탄압을 피해 미국으로 건너가 맨해튼 프로젝트에 합류하게 됐다.
   1920년대 이후 출생자들은 나치의 탄압에서 벗어나기엔 아직 어려서(...) 헝가리 천재들이 1880-1920년대에 집중된 것이다.

   결론적으로
   * 유전적 이점을 가진 그룹이
   * 순수학문에 매진할 수 있는 환경을 만나서
   * 나치에 쫓겨 미국에 모이다보니 헝가리 천재들 비율이 두드러진것
   이라고 하네요.

   논쟁의 여지가 많은 글이라 본문에 달린 코멘트의 양도 상당하네요.
   맨 첫번째 코멘트는 폴 그레이엄의 '도시와 야망'에 대한 글이군요
   http://www.paulgraham.com/cities.html

   이거 흥미롭네요. 요약 감사합니다.
"
"https://news.hada.io/topic?id=4118","미네소타 대학, 리눅스 기여 금지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           미네소타 대학, 리눅스 기여 금지

   1. 보안에 허점이 있는 패치를 고의로 제출
   2. 이를 논문으로 작성
   3. 화난 리눅스 관리자는 미네소타 대학의 기여를 금지하고, 모든 커밋을 되돌림
   미네소타 대학의 공지입니다.
   https://cse.umn.edu/cs/…

   https://github.com/QiushiWu/qiushiwu.github.io/issues/10
   짜증나도 저자 깃허브 들어가서 인종차별 발언은 하지 말아요.
   한국인들 욕먹을 행동입니당..

   아.. 제가 다 부끄럽네요
"
"https://news.hada.io/topic?id=4117","Framer, 새로운 데스크탑용 앱 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Framer, 새로운 데스크탑용 앱 공개

   - 멀티 플레이어 디자인 / 프로토타이핑 도구
   - 윈도우 / 맥 (인텔/M1) 지원
   - 실시간 협업 및 댓글 기능
   - 협업자 초대 가능
   - 기존 Framer Desktop앱을 대체하고 일부 기능 미지원
   ㅤ→ 오프라인 편집, HTML Export, 외부 코드 에디터 사용 등

   2020 디자인 툴 설문조사 https://news.hada.io/topic?id=3405
"
"https://news.hada.io/topic?id=4027","Kara Swisher의 Tim Cook 인터뷰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Kara Swisher의 Tim Cook 인터뷰

   - Sway 에서 진행한 35분 인터뷰 팟캐스트, 트랜스크립트 제공
   팀 쿡의 주요 발언 요약 번역
   - 프라이버시(Privacy)는 21세기의 주요 이슈 중 하나, 우리는 위기에 처해 있다고 생각함
   - 몇년전에는 기업이 스스로를 규제하고 나아질거라고 생각했지만, 난 이제 더 이상 그걸 믿지 않음
   - 내가 하는 모든 것들을 누군가 다 볼 수 있는, 그런 감시가 만연한 세상에서는 사람들은 점점 생각하고 표현하고 하는 것들을 줄일 수 밖에 없고, 난 그런 사회의 일부가 되고 싶지 않음.
   - 프라이버시는 기본적인 인권이고, 다른 권리들이 그 권리위에 만들어 지게됨. 핵심(core) 이고 기반(bedrock)
   - ATT(App Tracking Transparency)는 몇주 내에 출시 될 것
   ㅤ→ ""당신을 추적하는 것을 허용할까요?"" 라는 팝업이 뜨고 그 대답에 따라 트래킹이 켜지고 꺼지게 됨
   - 우리는 매년 프라이버시 기능을 추가해 왔고, 특정 회사를 겨냥한 것이 아님 원칙을 목표로 하는 것
   ㅤ→ 원칙 : ""데이터를 가진 개인이 추적 여부에 대한 통제권을 가져야 한다는 것""
   - 이 추적 여부 선택권에 대해서 논쟁/반발(Pushback)이 있다는 것에 적잖이 놀랐음
   ㅤ→ 추적되고 있다는 걸 모르는 사람들을 추적하지 않고도 디지털 광고를 하고, 그를 통해 수익을 올릴 수 있다고 생각함
   ㅤ→ 시간이 그것을 증명할 것
   - 앱스토어를 통한 결제 통제권을 가지는 이유는, 스토어에 대한 신뢰와 확신이 없으면 그곳에 와서 물건을 사지 않을것 이기 때문. 누군가는 큐레이팅을 해야함
   ㅤ→ 사이드 로딩을 하면 프라이버시와 보안모델을 깨뜨리게 됨
   - 미래에 대해 얘기하는 걸 금지하는 규칙이 있음. 하지만 AR 과 AI에 대해서는 매우 흥분됨(Excited)
   ㅤ→ 휴대폰을 이용한 AR이 이미 확산되고 있고, 미래에는 더 커질 것
   - Apple TV+에 대해서는 진지한 투자를 하고 있음
   ㅤ→ (넷플릭스와 왜 경쟁하는 가 하는 질문에 대해) 제로섬 게임이라고 생각하지 않음
   - 자율 주행 스타트업인 Drive AI를 인수하고, 자율 주행차를 테스트 하고 있냐는 질문에 대해
   ㅤ→ 엘론 머스크와 얘기해본 적은 없지만 그가 만든 회사에 대한 존경심을 가지고 있음
   ㅤ→ 테슬라는 선구자 로서 뿐만 아니라 전기차 분야에서 오랜시간 선두를 지키는 믿기 힘든 일을 해냈다고 생각
   ㅤ→ 우리가 그 분야에서 하는 일들은 그에 비하면 약간 수줍은 수준
   ㅤ→ 내 생각엔 자율성(Autonomy)이 핵심 기술임
   ㅤ→ 한발뒤로 물러나서 보면, 자동차는 여러면에서 Robot이고, 자율주행차는 로봇임.
   ㅤ→ 그러면 자율성으로 할수 있는 일이 많고, 여기서 애플이 하는 일을 보게 될 것.
   ㅤ→ 내부에서 많은 것을 조사하고, 그들중 많은 것들은 빛을 보지 못하기도 함. 하지 않겠다 얘기하는 것은 아님.
   ㅤ→ (자동차의 형태일까요? 아니면 자동차 내부의 기술일까요?) 라는 질문에는 답변하지 않음
   ""우리는 하드웨어,소프트웨어 및 서비스를 통합하고 그들의 교차점을 찾는 것을 좋아합니다. 그곳이 마법이 일어나는 곳이라고 생각하기 때문입니다. 이게 우리가 좋아하는 일이고, 우리는 그 주변의 주요 기술들을 소유하는 것을 좋아합니다.""

   '내가 하는 모든 것들을 누군가 다 볼 수 있는, 그런 감시가 만연한 세상'
   최근 논쟁이 된 사건들, 주로 홍콩과 민주주의에 관련된 사건들에서 애플이 취한 행보를 생각하면 조금 씁쓸하네요.

   +1

   돌려 말하긴 했지만, 자율 주행에 대해서 뭔가를 하고 있다는 건 확실하고..
   하드웨어와 소프트웨어 통합해서 언젠가는 애플의 전기차를 볼수 있을 것 같네요.
   아마도 처음으로 애플이 이에 대해서 의향을 내비친 인터뷰라고 봅니다.
   AR 역시도, 올 6월 WWDC에서 애플 글라스 발표가 있지 않을까 기대해 보게 되네요.
"
"https://news.hada.io/topic?id=4143","아마존, 판매자가 고객들에게 메일을 보낼 수 있는 기능 시험중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   아마존, 판매자가 고객들에게 메일을 보낼 수 있는 기능 시험중

   - Brand Registry 프로그램을 통해서 팔로우한 고객들에게 메일 보내는 도구를 공개
   - 아마존은 그동안 고객의 이메일을 숨겨서 판매자가 고객과 직접 소통하는걸 막아왔음
   ㅤ→ 자체 제공하는 메시징 서비스로만 가능
   - 고객의 연락처 정보는 계속 비공개로 유지되지만, 메일을 보내고 얼마나 봤는지등의 지표를 볼수 있게 제공 예정
   - 경쟁하고 있는 Shopify, Magento 등이 이런 기능을 제공하고 있으므로 어쩔수 없는 선택인 듯

   Shopify 의 고객 이메일 기능이 아마존 기반보다 좋은 점중 하나였는데, 아마존도 이제 어쩔수 없나 보군요.
   국내에선 네이버스마트 스토어도 현재는 아마 네이버톡톡으로만 가능할텐데, 따라 가려나요 ?
"
"https://news.hada.io/topic?id=4076","MS, Surface Laptop 4 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        MS, Surface Laptop 4 공개

   - 13.5인치 (1265g) / 15 인치 (1542g)
   - 3:2 PixelSense 터치 스크린
   - 인텔 11세대 i5/i7
   - AMD Ryzen 5 4680U/7 4980U - Zen 2 기반
   - 8/16/32GB 램, 256/512/1TB SSD
   - 1 USB-C, 1 USB-A, 3.5 헤드폰 잭, 서피스 커넥트
   - Wi-Fi 6
   - 720p 카메라
   - Dolby Atmos Omnisonic 스피커
   - $999 ~ $2399
   악세서리도 같이 발표
   - Surface Headphones 2+ : 노이즈 캔슬링, 18.5시간, $299
   - MS Modern USB & Wireless Headset
   - MS Modern USB-C Speaker : $99.99
   - MS Modern Webcam : 1080p, HDR, $69.99

   요즘 시대에 카메라는 1080p 넣어줘도 될거 같은데 꼭 720을 넣는군요. 별도 악세사리를 꼭 사라고 강요하는 느낌..
"
"https://news.hada.io/topic?id=4114","Vale - 글쓰기용 오픈소스 Linter","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Vale - 글쓰기용 오픈소스 Linter

   - 글 작가를 위한 도구
   - 코드 린팅과 비슷한 기능을 산문(Prose, 소설/일기 같은 형식 없는 글)에 적용해서 글 작성시 경고/어드바이스 제공
   - Syntax Aware : HTML/XML/마크다운 등의 문법을 인식
   - 확장 기능으로 다양한 글쓰기 스타일을 적용 가능(MS, Google, write-good, proselint, Joblint)
   - 크로스플랫폼 CLI 및 데스크탑용 Server (VS Code, Google Docs 등과 연동 가능)
   - 온라인에서 룰 편집 가능한 Vale Studio 제공

   오 영어 글쓰기가 너무 약해서 항상 고민인데 이게 도움이 되겠군요. 좋은 정보 감사합니다.

   기본적으로 영문 글쓰기에 적합한 도구이긴 한데, 확장 기능 및 스타일을 통해서 다른 언어 지원도 가능 하다고 합니다.
   오픈소스 개발자 분들이 영문 리드미/문서 및 주석 쓸 때 사용하기 좋지 않을까 하네요.

   - 구글 Word List - 단어 사용 및 대체 단어 가이드 https://news.hada.io/topic?id=4115
   - Vale 용 Google Developer Documentation Style Guide 구현체 https://github.com/errata-ai/Google
"
"https://news.hada.io/topic?id=4124","삼성, 갤럭시 업사이클링 at Home 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        삼성, 갤럭시 업사이클링 at Home 발표

   - 중고 갤럭시 폰을 사물 인터넷(IoT)기기로 활용하는 프로그램
   ㅤ→ SmartThings 앱을 실행해 센서로 사용 및 알람 제공
   - 소리센서 : AI로 주변 소리 및 아기/반려동물의 울음소리를 감지해 알람을 주고, 녹음된 소리를 다시 재생 가능
   - 조도센서 : 사전에 설정한 조도 기준 이하로 주변이 어두워지면, 연동해 놓은 조명이나 TV의 전원 켜고 끄기
   * 2018년 이후 출시된 안드로이드 9 이상 S/Note/Z 등에 적용(S9/Note9)
"
"https://news.hada.io/topic?id=4128","BASH Debuggerebugger

   - gdb 와 비슷한 커맨드 명령을 사용하는 쉘 스크립트 디버거
   - bash 스크립트로 구현
   - 라인 단위 실행, Breakpoint, Backtrace 지원
   - VSCode / JetBrains 플러그인 제공
   - zsh/ksh 버전도 있음

   bash debugger에서 우와!
   sourceforge.net에서 우-와?

   - ShellCheck를 만들면서 배운 것들 https://news.hada.io/topic?id=1486
   - 안전한 쉘 스크립트 작성하기 https://news.hada.io/topic?id=1434
"
"https://news.hada.io/topic?id=4091","Lofi Cafe - 서정적인 분위기와 함께 제공되는 로우-파이 플레이리스트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Lofi Cafe - 서정적인 분위기와 함께 제공되는 로우-파이 플레이리스트

   Low-fi만 집중적으로 들려주는 사이트입니다. 사이트가 정말 미려하기도 해서 YouTube로 듣는 것보다 더 분위기가 좋더라고요.
   단점이 있다면 사이트를 띄워놓고 있으면 CPU와 GPU를 퍼먹어서, 노트북으로 작업하시면 팬이 강하게 돌아가는 걸 느끼실 수 있으십니다. 이 문제는 개발자도 인지하고 있어서 정적 JPG나 동영상 재생을 고민하고 있다고 하니 개선을 기대해볼만 한 것 같습니다.

   https://news.ycombinator.com/item?id=26805702
   Show HN을 보고 퍼왔습니다. 'ㅁ '/ 개발자 분의 코멘트도 볼 수 있어요.
"
"https://news.hada.io/topic?id=4072","Porter - 쿠버네티스 기반 PaaS 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Porter - 쿠버네티스 기반 PaaS 오픈소스

   - Docker 이미지 배포 가능한 PaaS (K8s + Helm)
   - Heroku 와 비슷한 UI로 상태/로그/히스토리 확인
   - AWS/GCP/DO 의 K8s 클러스터에 쉽게 배포 가능
   - 기존 버전으로 롤백 지원
   - DevOps 없이 완전히 사용자 정의 가능한 인프라 구성 가능
   - 원클릭 설치가능한 애드온 마켓플레이스 (MongoDB, Redis, PostgreSQL 등)
"
"https://news.hada.io/topic?id=4048","HStreamDB - IoT용 실시간 스트리밍 데이터베이스 오픈소스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 HStreamDB - IoT용 실시간 스트리밍 데이터베이스 오픈소스

   - 앱에서 데이터 스트림에 구독해서 실시간 스트림 받기
   - SQL 을 이용한 스트림 프로세싱(필터링,트랜스폼,통계,어그리게이션)
   - MQTT, MySQL, Redis, ElasticSearch 등과의 커넥터
   - Compute 와 Storage 분리로 독립적으로 심리스 스케일 가능
   - Optimized Paxos 기반 컨센서스 알고리듬으로 노드간 안전 복제
   - Haskell 로 개발, BSD (3-Clause) License
"
"https://news.hada.io/topic?id=4056","n8n - 오픈소스 워크플로우 자동화 솔루션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        n8n - 오픈소스 워크플로우 자동화 솔루션

   - 150개 이상의 앱과 연동
   - Zapier, IFTTT처럼 No-Code 플로우 작성 및 운용
   - 조건부 로직, HTTP 리퀘스트, JS 함수를 사용하여 확장 가능
   - CLI 혹은 Docker로 빠른 시작 (npx n8n, Docker Hub: n8nio/n8n)
"
"https://news.hada.io/topic?id=4086","PHP inin 2021

   - PHP 8 이 출시되었고 계속 성능 개선중
   ㅤ→ JIT 도 추가됨
   - 올 연말쯤 8.1 출시 예정
   ㅤ→ enum 도입
   ㅤ→ Async PHP 를 위한 Fibers (Coroutine, 그린 쓰레드) 추가
   ㅤ→ never 타입 추가 : exit 등으로 프로그램 플로우가 종료되는 함수를 명확히 표시. 정적 분석 도구에 도움 될 것
   ㅤㅤPhpStorm 이 Psalm / PhpStan 같은 정적 분석도구를 추가
   - 2020/10 에 Composer 2.0 출시 : UX 및 성능을 엄청 개선
   - 최근 PHP 언어에 이미 추가되거나 될 것들
   ㅤ→ Enums
   ㅤ→ Fibers
   ㅤ→ Attributes
   ㅤ→ Named Arguments
   ㅤ→ Match
   ㅤ→ Constructor Property Promotion
   ㅤ→ Short closures
   ㅤ→ Null coalescing operator
   ㅤ→ Traits
   ㅤ→ Typed properties
   ㅤ→ Spread operator
   ㅤ→ The JIT
   ㅤ→ FFI
   ㅤ→ Return type declarations
   ㅤ→ Generators

   이 친구가 매년 한번씩 이 글을 쓰는데, 2019년엔 긱뉴스에 올리고, 2020은 빼먹었네요 ㅎㅎ
   - PHP in 2019 https://news.hada.io/topic?id=92
   - PHP in 2020 https://stitcher.io/blog/php-in-2020
"
"https://news.hada.io/topic?id=4126","GitHub Actions, 부정 행위자 대응 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GitHub Actions, 부정 행위자 대응 업데이트

   - 적법한 저장소를 포크한 뒤 암호화폐 채굴용 액션을 추가해서 PR을 제출하는 어뷰징에 대응
   ㅤ→ 악의적인 행위 발생시 원본 저장소 소유자가 아닌 포크를 만든 계정에 제한 적용
   ㅤ→ 처음 기여자들의 PR은 워크플로우 실행전에 소유자 또는 쓰기 권한 있는 작업자의 수동 승인이 필요하게 변경

   헐. 저런 일이 있네요.

   적절하네요

   GitHub, 암호화폐 채굴로 서버 인프라 악용하는 행위 조사 https://news.hada.io/topic?id=4005
"
"https://news.hada.io/topic?id=4137","Mongita - 임베드 가능한 MongoDB","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Mongita - 임베드 가능한 MongoDB

   - ""Mongita is to MongoDB as SQLite is to SQL""
   - 파이썬 라이브러리 형태로 임베드 가능
   - 유닛 테스트용으로도 적합
   - 다큐먼트 데이터를 디스크 또는 메모리에 저장
   - PyMongo API의 Subset 구현
   - 100% 테스트 커버리지
   - 10k 문서 벤치마크에서 MongoDB/SQlite 보다 훨씬 빠른 속도

   SQLite를 도큐먼트DB로 사용하기 https://news.hada.io/topic?id=3271
"
"https://news.hada.io/topic?id=4030","Clubhouse, 창작자 수익화 가능한 Payments 기능 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Clubhouse, 창작자 수익화 가능한 Payments 기능 공개

   - 다른 사람의 프로필 클릭해서 ""Send Money"" 가능
   - 처음 등록시 신용/직불 카드 등록 필요
   - 클럽하우스가 떼는 수수료 없이 100%가 창작자에게 전달 (Stripe에 전달되는 카드 처리 수수료 제외)
   - 일부에만 선 공개해서 튜닝 후 전체 공개 예정
"
"https://news.hada.io/topic?id=4142","SaaS Metrics","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              SaaS Metrics

   스타트업용 스프레드시트인 Causal이 중요 SaaS 지표들을 계산법과 함께 설명하고 템플릿으로 제공
   1. Customer Churn - 고객 이탈률
   2. Lifetime Value - 생애 가치
   3. Customer Acquisition Cost - 고객 획득 비용
   4. Retention Margin - 유지 마진, MRR의 어느정도가 실제 수익인가
   5. Months to Recover CAC - CAC비용 회수에 걸리는 개월수
   6. Net Revenue Retention - 매출 지속률

   * Causal - 스타트업/전략/마케팅을 위한 수치 모델링 도구 https://news.hada.io/topic?id=2008
   Causal 은 이런 다양한 수치/지표들을 템플릿으로 제공도 하고, 인터랙티브 대쉬보드를 만들어 주는 서비스 입니다.
   SaaS 지표를 설명한 글들은 국내에도 꽤 좋은글이 많으니 구글링해서 보는 것도 좋습니다.
   - 고객 생애 가치 이해하기 https://sungmooncho.com/2011/11/21/customer-lifetime-value/
   - MRR(Monthly Recurring Revenue) https://brunch.co.kr/@leedongins/69
   - PM이 알아야할 B2B SaaS 비즈니스 지표 https://mobintouch.oopy.io/12994b74-e064-42e0-b566-345f13a09edf
   - a16z 의 ""16 Startup Metrics"" https://aliahn.tistory.com/14
   - a16z 의 ""16 More Startup Metrics"" https://aliahn.tistory.com/61
"
"https://news.hada.io/topic?id=4057","Gradle 7.0 Release","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Gradle 7.0 Release

   - 증분 빌드 최적화
   - Java 16 지원
   - Apple M1 프로세서 지원
"
"https://news.hada.io/topic?id=4084","Deno 1.9 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Deno 1.9 릴리즈

   - Native HTTP/2 웹서버 내장 : Rust로 개발된 Hyper 이용
   - serde_v8로 바인딩 인프라를 재구축해서 호출 속도 개선
   - fetch 에 Blob URL 지원
   - LSP : import 시 자동완성 지원
   - --prompt 옵션으로 런타임시 퍼미션 여부 확인
"
"https://news.hada.io/topic?id=4134","한달 10만원으로 추천시스템 구축하기 [AWS Personalize 도입 후기]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              한달 10만원으로 추천시스템 구축하기 [AWS Personalize 도입 후기]

   0. 소규모 스타트업에서 추천시스템을 만드는 어려움
   1. AWS Personalize 외않써?
   2. 데이터 전처리 방법
   3. AWS Personalize 자동화 (Python SDK 이용)
   4. 가성비 좋게 서빙하는 방법 Batch inference
   5. 한계와 Future work
"
"https://news.hada.io/topic?id=4101","5년간 PostgreSQL 스케일링 하면서 배운 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      5년간 PostgreSQL 스케일링 하면서 배운 것

   푸시알림 서비스 OneSignal이 75TB 데이터를 40대의 DB서버에서 운영하며 배운 것들
   - 데이터 오버뷰 : subscribers, notifications 테이블이 가장 큼
   - Bloat : 더 많은 용량을 차지하고, 느려지고, 컴퓨팅 파워를 더 필요로 하게 되는 현상
   ㅤ→ Table bloat : VACUUM
   ㅤ→ Index bloat : Heap Only Tuple(HOT) optimization
   ㅤ→ autovacuum 켜기
   ㅤ→ pg_partman 확장으로 테이블 파티셔닝 자동화
   ㅤ→ pg_repack 과 pgcompacttable
   - Database Upgrades
   ㅤ→ pg_upgrdae 는 데이터베이스 오프라인을 필요로 하므로 선택 불가
   ㅤ→ 새 버전 PostgreSQL 서버를 따로 셋업하고 pglogical 확장으로 logical replication 사용
   - XID Wraparound
   ㅤ→ PostgreSQL 의 MVCC(Multi Version Concurrency Control) 기능은 32비트 트랜잭션 ID를 사용하므로 트랜잭션이 많으면 금방 넘어갈수 있음
   ㅤ→ 남은 XID 모니터링은 중요
   ㅤ→ autovacuum_freeze_max_age
   - Replica Promotion
   ㅤ→ 빠른 Replica 의 승격을 위해서 haproxy 뒤에 둠
   - Partitioning
   ㅤ→ 최근 버전 PostgreSQL은 테이블 파티셔닝 기능을 내장
   ㅤ→ 파티셔닝이 필요할때 가능하면 다수의 파티션으로 분할하는 것을 추천
   ㅤㅤㅤOneSignal 은 16 에서 256, 다시 4096으로 파티셔닝 할 예정
   - Sharding
   ㅤ→ 내장 지원은 없음
   ㅤ→ 원래는 v4 UUID 를 범위에 따라서 구분한 Tenant ID로 샤딩 했음
   ㅤ→ 현재는 파티션과 샤드를 인식하는 데이터 프록시를 만드는 중

   - PostgreSQL의 결함들 https://news.hada.io/topic?id=1829
   - PostgreSQL V12의 잘 안알려진 기능들 https://news.hada.io/topic?id=988
   - PostgreSQL DB 공간 절약하기 https://news.hada.io/topic?id=3674
"
"https://news.hada.io/topic?id=4087","FTP는 벌써 50년이 됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             FTP는 벌써 50년이 됨

   - 1971년 4월 16일 FTP의 릴리즈
   - 이후 16번의 리비전을 통해 다양한 기능들을 추가해옴
   - 여전히 많은 사람들이 FTP를 사용중
   - 가장 최근 리비전은 2014년 vhost 추가

   항상 GeekNews에서 좋은 글들을 보기만 하다가, 처음 GeekNews에 글을 올리게 되었습니다! GeekNews가 한국 최고의 플랫폼이 되면 좋겠습니다!!

   +1 고맙습니다 ㅎ
"
"https://news.hada.io/topic?id=4031","Kallithea - 오픈소스 GitHub 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Kallithea - 오픈소스 GitHub 대체제

   - Git 과 Mercurial 지원
   - 사용자/관리자용 쉬운 웹 인터페이스 제공
   - LDAP 및 JSON-RPC API 로 기존 시스템과 연동 가능
   - 원클릭 Fork 및 코드 리뷰, PR 시스템 내장
   - 웹 에디터로 온라인에서 코드 편집 및 커밋 가능
   - DAG 그래프를 이용한 체인지로그 시각화 지원
"
"https://news.hada.io/topic?id=4103","프론트엔드 툴킷","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                프론트엔드 툴킷

   프론트엔드 개발자를 위한 간편한 도구들 모음
   - SVG to TSX/JSX, CSS
   - SVG Optimizer
   - Image Optimizer
   - Format CSS, JS/TS, JSON
   - Colors Converter
   - CSS & SVG Symbols
   - npm Package Size 확인

   테스트 및 개발시에 유용한 툴킷 링크도 올립니다.
   https://codebeautify.org/

   - Tiny Helpers - 웹 개발자용 단일목적 간단한 도구들 모음 https://news.hada.io/topic?id=1306
   - DevUtil - 개발자용 도구 모음 for macOS https://news.hada.io/topic?id=2959
"
"https://news.hada.io/topic?id=4112","Pulumi 3.0 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Pulumi 3.0 공개

   - 설정파일 대신 JS/TS/파이썬/Go 같은 개발 언어로 클라우드 인프라를 관리하는 Infrastructure as Code 오픈소스
   - Automation API : 자신의 소프트웨어 안에 API로 Pulumi를 임베드해서 자동화 가능
   - 여러개의 언어로 된 컴포넌트(패키지)를 섞어서 사용 가능
   - Azure (1.0) 와 Google Cloud (Preview) 프로바이더 추가
   - Go / Python SDK 개선
   - GitHub Actions, Codefresh, Spinnaker, Okta, Auth0, Splunk 등 다양한 연동 추가

   1년전에 2.0 공개되었을 때 긱뉴스에 소개했는데 1년만에 버전업 되었네요.
   - Pulumi - Infrastructure as Code https://news.hada.io/topic?id=1894
"
"https://news.hada.io/topic?id=4078","웹 최적화 방식 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              웹 최적화 방식 모음

   CSS/JS 파일 위치같은 기초부터 낙관적 UI와 같은 UX트릭까지 다양한 방식을 다룹니다.
   풍부한 링크들로 된 레퍼런스도 특징
   - 0. 전반적 원칙과 원리
   - 1. 다운로드
   - 2. 파싱 및 렌더링 트리
   - 3. Layout 및 렌더링
   - 3.3 UX 트릭
   - 4. 로드 후

   Waterfaller - 웹사이트의 느린 부분 찾아서 빠르게 하기
   https://news.hada.io/topic?id=4075
   를 보고 생각나서 올립니다.
   읽다보면 프레임워크나 라이브러리들이 나오게된 배경과 동작도 어느정도 설명되어 있어요.
"
"https://news.hada.io/topic?id=4063","MS, AI/음성인식회사 Nuance를 22조원에 인수 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     MS, AI/음성인식회사 Nuance를 22조원에 인수

   - 상장회사인 Nuance주식에 23% 프리미엄을 주고 현금으로 인수($19.7B, 부채 포함)
   - 링크드인을 $26B에 인수한뒤 가장 큰 규모
   - 뉘앙스는 대화형 AI 및 음성인식 선구자로, 초기 애플 Siri에 사용
   ㅤ→ 헬스케어/의료 분야에서도 많이 사용되고 있고 이미 Azure 기반에서 제공
   ㅤ→ 현재 미국 의사의 55% 이상, 방사전 전문의 75%, 미국 병원의 77% 에서 사용중
   ㅤ→ 의료용 MS 클라우드를 강화할 예정
   - 의료외에도 기업들을 위한 IVR (Interactive Voice Response), 가상 비서, 디지털 및 생체 인식 솔루션을 제공
   ㅤ→ Azure, Teams 및 Dynamics 365등과 연계할 것
"
"https://news.hada.io/topic?id=4036","PM2 WebUI - PM2 Plus의 오픈소스 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     PM2 WebUI - PM2 Plus의 오픈소스 대체제

   - Node.js 용 프로세스 매니저 PM2의 유료 Tier인 PM2 Plus를 오픈소스로 구현해서 웹 UI를 제공
   ㅤ→ PM2 오픈소스는 웹 UI 없이 터미널 기반 모니터링만 제공
   - Secure Login, App Management, Log Viewer 및 반응형 UI 제공

   PM2 ( https://pm2.io/ ) 설명은 아래 글을 참고하세요
   - PM2를 활용한 Node.js 무중단 서비스하기 https://engineering.linecorp.com/ko/blog/pm2-nodejs/
"
"https://news.hada.io/topic?id=4062","요즘 프로그래머를 위한 코볼 배우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          요즘 프로그래머를 위한 코볼 배우기

   - COBOL을 익히기 어려운건 대부분의 자료가 레퍼런스 매뉴얼만 있기 때문
   ㅤ→ 기본 구조를 간단히 설명하고, 익히기 위한 자료들을 정리한 글
   - COmmon Business Oriented Language
   ㅤ→ 비즈니스용 DSL : 레코드 단위로 처리. 즉, Java 보다는 SQL 부류에 가까움
   ㅤ→ 읽기 쉬운 것을 목표로 만들어서 평범한 영단어를 사용. (예를 들어 국세청 직원이 새로운 세법을 구현할 수 있도록)
   ㅤ→ COBOL을 배우는 것은 단지 시작일 뿐임. 제대로 COBOL을 하려면 메인프레임 조작까지 배워야 함
   - 프로그램 구조
   ㅤ→ divisions, sections, paragraphs, sentences, statements 및 글자들로 구성
   ㅤ→ 컬럼에 대해서는 엄격한 룰이 있음
   ㅤㅤ· 1~6 : 라인넘버
   ㅤㅤ· 7 : ""*""는 코멘트, ""-""는 앞줄에 연결, ""/""는 Form Feed
   ㅤㅤ· 8~11 : COBOL divisions, sections, paragraphs 등을 지정
   ㅤㅤ· 12~72 : COBOL statements
   ㅤㅤ· 73~80 : 프로그래머 사용 가능 공간
   ㅤ→ 하지만, 요즘의 코볼은 Indentation 무시하고 프리 포맷도 잘 지원함
   ㅤ→ 또한 최신 코볼 IDE(OpenCobolIDE)에선 알아서 잘 지원하고 신택스 컬러링도 가능
   ㅤ→ 이게 필요했던 이유는 천공카드에서 코드를 읽어서 처리했기 때문
   - Hello World 실행하기 (GnuCOBOL)
   * 여기까지만 오면 기본적으로 다른 언어처럼 COBOL 배우기 가능
   ㅤ→ Derek Vanas의 2시간짜리 유튜브 강의가 가장 훌륭 : https://www.youtube.com/watch?v=TBs7HXI76yU
   - 코볼의 훌륭한 점
   ㅤ→ 복잡한 레코드 정의가 간편
   ㅤ→ 고정 소수점 연산
   - COBOL을 익히기 위한 개인 프로젝트로 ""개인 회계 시스템"" 개발을 추천
   ㅤ→ https://plaintextaccounting.org/
   ㅤ→ Rust Ledger : https://github.com/ebcrowder/rust_ledger/blob/main/src/ledger.rs
   - 그 외의 자료들
   ㅤ→ 기초 영상 및 가이드
   ㅤ→ 레퍼런스
   ㅤ→ Coursera 및 OpenMainframeProject의 COBOL 강의
   ㅤ→ 유튜브 채널과 비디오들

   - COBOL을 ""읽히기"" 위한 개인 프로젝트로 ""개인 회계 시스템"" 개발을 추천
   오타가 있는 것 같습니다

   앗 고맙습니다. 수정해두었습니다!
"
"https://news.hada.io/topic?id=4020","Have i been pwned? - 내 정보가 유출되었는지 확인해보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Have i been pwned? - 내 정보가 유출되었는지 확인해보기

   - 현재까지 유출된 모든 사례들을 묶어서, 내 이메일 정보 및 암호가 유출에 포함되었는지 확인해 보는 서비스
   ㅤ→ 521개 웹사이트, 106억개의 계정, 6억개의 암호, 2억개의 Pastes(Pastebin 같은 곳에 데이터가 게시되는 것)
   - API로 이용 가능하며, 이메일 주소 등록해서 유출시 알림 받을수 있음
   - 보안 전문가 Troy Hunt가 운영

   최근에 유출된 페이스북 계정들도 포함 되었습니다.
   - 페이스북 계정 5.3억개의 전화번호 및 개인정보 유출 https://news.hada.io/topic?id=4006
   유출 내용은 5.3억개지만, 이메일 주소가 있는 계정은 250만개 밖에 없어서 그것만 등록 되었습니다.

   페이스북 유출에 대한 Troy Hunt 의 내용 분석
   https://twitter.com/troyhunt/status/1378463581604220931
   - 총 108개의 파일로 국가별로 정리
   - 필드 : phone,uid,email,first_name,last_name,gender,date_registered,birthday,location,hometown,relationship_status,education_last_year,work,groups,pages,last_update,creation_time
"
"https://news.hada.io/topic?id=4079","Am I FloCed ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Am I FloCed ?

   - 구글 크롬이 써드파티 쿠키를 대체하기 위해 새로 테스트중인 FLoC 기능이 활성화 되었는지 체크 하는 사이트
   - 활성된 사용자는 FLoC ID를 보여줌
   ㅤ→ 현재 Origin Trial 중으로 0.5%의 일부 사용자에게만 열려있음
   - 사용자가 차단하려면 ""제3자 쿠키 비활성"" 필요
   - 웹사이트 소유자가 FLoC 계산에서 제외되려면 HTTP Header에 항목 추가
   ㅤ→ Permissions-Policy: interest-cohort=()
   * FLoC : Federated Learning of Cohorts

   EFF 의 글이 좋더군요. 일독 추천합니다.
   Google’s FLoC Is a Terrible Idea | Electronic Frontier Foundation https://bit.ly/32nubrm
   구글의 FLoC 사용자 추적 차단하려면 아래와 같은 방법 있습니다.
   1. 브레이브 브라우저 사용
   2. 비발디 브라우저 사용
   3. 크롬에서 duckduckgo 확장 프로그램 사용
   4. 크롬에서 nofloc 확장 프로그램 사용

   5. uBlock origin 에서도 구글의 FLoC 사용자 추적 차단 지원하는군요 👍👍
   Block Floc checks in Chrome/uBO · Issue #1553 · uBlockOrigin/uBlock-issues https://bit.ly/3djiZT8

   - FLoC, 관심기반 광고를 위한 써드파티 쿠키 대체제 https://news.hada.io/topic?id=3639
   - Brave 브라우저, 구글 FLoC 기능을 차단 https://news.hada.io/topic?id=4053
   - Google’s FLoC Is a Terrible Idea https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
"
"https://news.hada.io/topic?id=4127","애플 팟캐스트, 유료 구독 서비스 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         애플 팟캐스트, 유료 구독 서비스 추가

   - 5월부터 170개 국가에서 프리미엄 구독 서비스 시작
   ㅤ→ 광고 제거, 추가 콘텐츠, 얼리 억세스/독점 콘텐츠 등의 기능 제공
   ㅤ→ 기본 월단위 구독, 년단위 구독 제공 가능
   ㅤ→ 창작자는 Apple Podcaster 프로그램 가입 필요 (년 $19.99)
   - 팟캐스트 검색을 개선하고, 큐레이션된 채널을 제공
   - 새로운 Apple Podcasts for Creators 웹사이트 오픈
   ㅤ→ 팟캐스트 메타데이터 편집 기능 제공
   ㅤ→ 스케줄링
   ㅤ→ 프리미엄 구독 서비스 관리

   170개 국가라고 하는데, 이 뉴스가 애플의 한국 뉴스룸에만 안 올라 오는 것으로 봐선.. 한국에서는 사용이 불가능할지도 모르겠네요.
"
"https://news.hada.io/topic?id=4132","Sucrase - 초고속 Babel 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Sucrase - 초고속 Babel 대체제

   - Babel 대비 약 20x 빠른 속도
   ㅤ→ 최신 브라우저를 사용한다고 가정하고, JSX/TypeScript/Flow 등의 컴파일에만 집중
   ㅤ→ Jest 3 컴파일 테스트시 swc/esbuild 보다도 빠름
   ㅤ→ Babel의 Parser를 포크해서 일부만 사용
   - 일반적으로 사용 가능하지만, Babel만큼의 다용도는 아님
   ㅤ→ 프로덕션 보다는 개발시에 적합
   ㅤ→ 코드 에러 체크 안함, 플러그인 지원 없음
"
"https://news.hada.io/topic?id=4021","Cesium for Unreal 오픈소스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Cesium for Unreal 오픈소스 공개

   - 3D 공간 정보 플랫폼인 Cesium을 언리얼 엔진에서 사용하게 해주는 플러그인
   - 매우 정확한 WGS84 Globe (세계 지구 좌표시스템) 을 제공
   ㅤ→ 3차원 현실 세계를 언리얼에서 구현, 현실감 있는 메타버스 어플리케이션을 구현 가능
   - 고해상도 사진 측량, 지형, 3D 도시 타일 같은 정보를 스트리밍으로 제공 하는 런타임 3D 타일 엔진
   - Cesium ion 클라우드 와 연동 (유료)

   이제 레이싱 게임이나 어딘가 탐험을 하는 게임들이 더 실제와 같은 환경을 편하게 구현할 수 있겠네요
   CesiumJS 는 오픈소스로 공개되어, 구글 어스 같은 3D 글로브 화면 UI를 구현할 때 사용되고 있습니다.
   - CesiumJS : https://cesium.com/platform/cesiumjs/
   - Radio Garden - 전세계 라디오 듣기 https://news.hada.io/topic?id=1723
"
"https://news.hada.io/topic?id=4140","인터넷 검색 팁","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                인터넷 검색 팁

   - 인터넷에서 논문,웹페이지,책 등의 정보를 검색하는 기본부터 주요 팁들을 정리
   - 제 기준 개인 웹사이트 중 최고라고 생각하는 Gwern Branwen*이 작성한 글. 일부만 옮겼으므로 꼭 원문을 보시기 바랍니다
   [ 논문 검색 ]
   - 검색 문법 : 불린 연산자, 주요 구글 명령어들 (쌍따옴표는 정확한 일치, 하이픈은 부정/제외, Site: 는 특정 웹사이트 검색 )
   - 빠른 검색을 위한 핫키 설정하기 : AutoHotkey, Quicksilver, XMonad 등
   - 웹브라우저 단축키 : C-l, C-PgUp/C-PgDwn, C-w, C-t/C-T, M-[1–9]
   - Google Scholar 검색시에 HTML 보기
   - 논문 타이틀 검색 팁
   ㅤ→ 검색결과를 줄이기 위해 제목을 자르거나 AND/OR 및 - 등을 이용하기
   ㅤ→ Year 추가/삭제해보기..
   ㅤ→ 구글의 날짜 범위 이용하기
   ㅤ→ site:archive.org 넣어서 인터넷 아카이브 검색하기
   - 어려운 케이스들
   ㅤ→ 역 인용(Reverse Citations) : 구글스칼라의 ""related articles"" ""cited by"" 보기
   ㅤ→ 석/박사 학위 논문은 ProQuest
   ㅤ→ 역 이미지 검색 : 구글 이미지, TinEye, Yandex 를 이용
   - 도메인별 검색 팁
   ㅤ→ 트위터 : 구글에도 걸리긴 하지만, 추가 정보를 안다면 트위터 고급검색도 훌륭 (from:, to:, since:, until:, near:, url: ..)
   ㅤ→ 미국 연방 법원 : Pacer 가입 필요. 유료($0.1/페이지) 지만 총 $15이하에선 무료. Recap 이라는 공개미러도 있음. Recap 브라우저 확장도 제공
   ㅤ→ Wellcome 도서관 : 오래된 잡지/책들이 많음. SEO가 바보같아서 구글등에선 검색이 잘 되지 않지만 잘 살펴볼 것
   ㅤ→ 오래된 잡지 : site:pdf-giant.net , 교육관련 검색은 ERIC ( site:eric.ed.gov )
   - Paywall 대응하기
   ㅤ→ 책/논문의 경우는 Libgen / Sci-Hub 를 이용해서 우회 가능. Z-Library 통해서 전문검색 가능
   - 위의 모든 방법으로 구하는게 불가능할 때 다른 사람들한테 요청 가능한 곳
   ㅤ→ 서브레딧 : /r/scholar
   ㅤ→ 트위터 : #icanhazpdf
   ㅤ→ Wikipedia Resource Request
   ㅤ→ LessWrong HelpDesk
   - Full-Text Copy를 찾고나서 할 일
   ㅤ→ 신뢰할수 없는 호스트에는 링크 하지 말것 : Libgen/Sci-Hub, Nber, Scribed, ResearchGate..
   ㅤ→ 스캔본의 경우는 gscan2pdf 로 편집 & OCR
   ㅤ→ 메타데이터 추가 : ExifTool, pdftk
   ㅤ→ 가능하면 퍼블록 호스팅해주고, Wikipedia/Reddit에 링크 공유
   ㅤ→ PDF 링크 팁 : URL 뒤에 #page=N 붙여서 페이지 지정 가능
   - 고급
   ㅤ→ Archiver-Bot들을 이용해서 검색 히스토리를 자동 아카이브
   ㅤ→ GCSE(Google Custom Search Engine) 만들기
   [웹페이지]
   - 만약 제목을 안다면 제목만 검색
   - URL 검색시 불필요한 인자들 지우기
   - 구글 검색시 site: 이용해서 도메인 한정, 날짜 한정
   - 구글 외의 검색 사용
   ㅤ→ DuckDuckGo : Bangs 기능으로 외부 사이트 검색을 직접 사용 (현재 13000개가 넘는 외부 사이트 지원 )
   ㅤ→ Bing/Yandex 도 유용
   - 아카이브 확인하기 : Internet Archive 또는 Memento 메타아카이브
   ㅤ→ IA는 도메인 전체 URL확인기능을 제공. wayback_machine_downloader(루비)로 전체를 다운로드 가능
   ㅤ→ 구글리더가 종료전에 Archive Team이 구글리더의 꽤 많은 RSS들을 백업받아서 IA에 호스트 했음(WARC로도 가능, 마지막에 다운로드&검색팁 제공)
   ㅤ→ archive.today : IA와 비슷한 미러
   ㅤ→ 정 안될경우 Google Cache도 이용 가능
   [디지털 책]
   - 책은 Google Scholar에는 없음. Google 검색을 이용.
   - filetype:pdf 으로 먼저 검색해보고 그다음 Libgen 이용
   - IA에도 책은 많은데 SEO가 별로인지 검색이 잘 되지 않음. ""책 제목 site:archive.org""
   ㅤ→ IA에 있는 책이 DRM이 걸려 있다면 Calibre의 De-DRM 플러그인 사용 가능
   - HathiTrust 에도 많은 책 스캔이 있음
   ㅤ→ 전체 다운로드는 불가능 하지만 wget을 통한 우회방법 있음. 이 방법은 Wellcome Library에도 적용 가능
   [출판본 책]
   - 구글 북스 또는 find-more-books.com 으로 중고 서적 검색
   ㅤ→ eBay & Amazon 은 중고책 구입엔 좋지 않음. 정보만 볼 것
   ㅤ→ AbeBooks, Thrift Books, Better World Books, B&N 등이 구입에 좋음
   - 책 스캔하기 : 파괴 vs 비파괴 및 컷팅도고, 메타데이터 및 PDF 생성 팁들

   * Gwern Branwen 은 프리랜서 작가이자 연구자 입니다. 개인 웹사이트인 https://www.gwern.net/ 을 운영하는데 정말 독특해요
   ㅤ제 기준 개인 웹페이지/블로그 에선 탑 오브 탑. 특정 주제를 잡고 그걸 세밀하게 파고 정리해서 올리는게 주 특기입니다.
   ㅤ→ GoodReads로 알아본 ""사람들이 읽다 포기한 책 Top 5"" https://news.hada.io/topic?id=1231

   이전에 올라왔던 ""개발자를 위한 정보 검색 팁"" 같이 추천합니다. https://news.hada.io/topic?id=2932
"
"https://news.hada.io/topic?id=4099","웹 개발자 도구의 역사","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              웹 개발자 도구의 역사

   1. 넷스케이프에도 개발자 도구는 있었다
   2. Venkman Javascript Debugger
   3. DOM 시각화
   4. Web Developer for Firefox
   5. 개발자 도구의 시작, Firebug
   6. 개발자 도구의 반격, Internet Explorer
   7. Webkit, 개발자 도구로 대동단결
   8. 마무리
   ""웹 개발자 도구는, 절대 무시해선 안될 도구다. 특히 웹 개발자는 더.
   개발자 도구. 고맙게 쓰자.""

   firefox에서 예전에는 3d로 dom구조를 시각화 해주는게 있어서 보기 편했는데 사라져서 많이 아쉽네요.
   https://developer.mozilla.org/en-US/docs/Tools/3D_View
"
"https://news.hada.io/topic?id=4064","AWS, ElasticSearch와 Kibana의 포크버전 OpenSearch 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             AWS, ElasticSearch와 Kibana의 포크버전 OpenSearch 공개

   - Elastic의 라이센스 변경으로 기존 버전을 포크해서 APL v2 오픈소스로 공개
   ㅤ→ OpenSearch : Elasticsearch 7.10.2
   ㅤ→ OpenSearch Dashboard : Kibana 7.10.2
   - OpenSearch를 사용, 수정, 확장, 포함, 수익 화, 재판매, 제품 및 서비스의 일부로 제공 가능
   - 기존 Amazon Elasticsearch Service 의 이름을 Amazon OpenSearch Service 로 바꿀 계획

   AWS 는 칼라우드 시대의 오라클이 되려나요...

   아니 오타가! 칼라우드가 아니라 클라우드 입니다.
   재주는 ES가 넘고 돈은 AWS가 번다
   => AWS는 ES를 사용한 제품을 못만들게 ES측에서 라이센스 변경
   => AWS측에서 OSS인 ES 구버전을 포크해서 경쟁 프로젝트를 시작
   원조이고 하나에만 집중하는 ES 보다 AWS 의 것이 느리게 개선될 것 같긴 하지만... ES가 살아남을지...

   오픈소스를 이용해 돈 벌이를 한다고 욕 먹던 AWS가 이런거루공개할 줄이야?
   하지만 ""진짜""로 유지까지 잘 해 줄지는 좀 지켜봐야겠네요.

   - AWS가 Elasticsearch와 Kibana의 오픈소스 fork 발표 https://news.hada.io/topic?id=3620
   - Elastic, AWS가 사용 못하게 라이센스 변경 https://news.hada.io/topic?id=3606
   - ElasticSearch를 둘러싼 AWS와 Elastic의 대립 https://news.hada.io/topic?id=3628
"
"https://news.hada.io/topic?id=4073","Yamauchi No.10 Family Office","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Yamauchi No.10 Family Office

   - 독특한 Isometric 디자인 사이트
   - 현재의 닌텐도 신화를 만들어낸 제3대 닌텐도 대표이사 ""야마우치 히로시""의 가족들이 그의 정신을 이어받아 운영하는 패밀리 오피스
   ㅤ→ 의미나 목적이 없는 자산은 차갑고 생명이 없는 현금일 뿐. 선대가 만든 상당한 재산을 통해 이 자산을 활용하여
   ㅤㅤ새로운 아이디어와 기술, 다음 세대에 필요한 비즈니스에 투자하는게 목표
   ㅤ→ 자산의 출처를 절대 잊지 않음. 이 모든 자산들은 전세계 어린이,친구,가족들에게 몇시간의 엔터테인먼트를 제공한 제품들에서 나왔음.
   ㅤㅤ그 대가로 전세계 어린이들이 우리 사회를 물려받을 때 필요한 물질적 부와 지식과 지혜를 제공해야함
   ㅤ→ 투자를 통해 일본에 혁신을 추진하는데 사용. 다양한 투자 스타일을 이용해서 구조적 또는 재정적 문재로 고통받는 기업에 관리 및 금전적 지원을 제공

   성공한 사람이 만든 재단이나 패밀리 오피스*는 많겠지만, 닌텐도의 정신을 잘 이어받은 것 같은 홈페이지라 소개해봤습니다.
   - 닌텐도 신화 만든 야마우치 히로시 https://www.mk.co.kr/news/economy/view/2010/05/234177/
   - 닌텐도의 위대한 독불장군, 야마우치 히로시 https://it.donga.com/27335/
   그가 남긴 어록들이 꽤 유명합니다. (망언이라고도 볼 수 있지만, 현재의 닌텐도 모습을 보면..)
   ""시장조사? 그딴 걸 해서 뭘 하겠다는 겁니까?"" ""닌텐도는 시장을 창조해가고 있어요. 조사할 필요 따위 전혀 없죠""
   ""필수품이라면 두 번째라도 싼 쪽이 팔립니다. 하지만 오락은 두 번째여서는 안 됩니다. 제아무리 값이 싸더라도 팔리지 않아요""
   ""닌텐도가 강한 건 닌텐도가 세계 최강의 소프트웨어 메이커이기 때문이에요.""
   ""21세기에 게임 소프트는 대용량 따위 필요 없다. 그런 인해전술을 요구하는 일을 계속하다가는 게임소프트 회사는 모두 침몰할거다.""
   ""성능만을 추구하는 마이크로소프트는 게임이 소프트웨어를 즐기는 것이라는 본질을 이해하지 못하고 있다.""
   - 야마우치 회장 어록집 https://blog.daum.net/wowbeing/12793790
   * 해커뉴스 의 댓글도 참고하세요 https://news.ycombinator.com/item?id=26803201
   * Family Office 는 성공한 가족의 부를 관리하는 비상장 기업을 의미합니다 https://en.wikipedia.org/wiki/Family_office
   * 이 사이트는 총 274개의 모델 개체를 사용해서 애니메이션을 픽셀 바이 픽셀, 프레임 바이 프레임으로 설계했다고 하네요.
   ㅤ사이트 개발사는 일본의 웹 에이전시인 https://mount.jp/
"
"https://news.hada.io/topic?id=4141","텔레그램, 결제 2.0/음성 대화 예약/새로운 웹 앱 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    텔레그램, 결제 2.0/음성 대화 예약/새로운 웹 앱 공개

   - Stripe/Payme 등 8개사를 통해서 결제를 제공
   ㅤ→ 물품/서비스 결제, 팁 등에 사용
   ㅤ→ 텔레그램은 수수료를 받지 않고, 결제나 거래내역을 저장하지 않음
   ㅤ→ API로 누구나 즉시 사용 가능
   - 두개의 새로운 웹버전 앱 공개 : WebZ , WebK
   ㅤ→ 둘다 모바일, 애니메이션 스티커,다크모드, 대화폴더등의 기능 지원
   ㅤ→ WebZ 버전이 좀 더 여백이 없는 형태
   ㅤ→ 내부에서 두개의 웹앱이 경쟁하는 구조
   - 음성 대화(Voice Chats, 클럽하우스와 비슷)
   ㅤ→ 예약 기능 추가
   ㅤ→ 대화중 미니 프로필 보기 가능

   근데 내부 경쟁한다고 웹앱을 두개 공개하는 건.. 제 기준엔 이상하네요. ㅡ.ㅡ;
   - 텔레그램, 클럽하우스와 비슷한 Voice Chats 2.0 공개 https://news.hada.io/topic?id=3928

   예전에 블리자드인가,, 내부 개발팀끼리 각자 만들어서 경쟁 시켰다는 기억이 나네요 ㅎㅎ
"
"https://news.hada.io/topic?id=4133","무료/오픈소스/유료 쿠버네티스 모니터링 도구 비교","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      무료/오픈소스/유료 쿠버네티스 모니터링 도구 비교

   - Sematext
   - Kubernetes Dashboard
   - Prometheus
   - Grafana
   - Jaeger
   - Elastic Stack (ELK)
   - cAdvisor
   - Kubewatch
   - Kube-state-metrics
   - Datadog
   - New Relic
   - Sensu
   - Dynatrace
"
"https://news.hada.io/topic?id=4088","Firefox, QUIC 과 HTTP/3 지원 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Firefox, QUIC 과 HTTP/3 지원 시작

   - Nightly 및 Beta 버전부터 기본으로 활성화
   - 88 버전부터 배포 예정이며, 5월말이면 기본 활성화 될 것
   - 웹서버가 아래 방법중 하나를 이용해서 지원여부를 알려주면 자동으로 HTTP/3를 사용
   ㅤ→ Alt-Svc 헤더 이용
   ㅤ→ HTTPS DNS 레코드 이용

   - 구글 크롬, HTTP/3 와 IETF QUIC 지원 시작 https://news.hada.io/topic?id=2992
   - 이제 페이스북 트래픽의 75%가 QUIC 과 HTTP/3 사용 https://news.hada.io/topic?id=3076
   - HTTP/3의 현재상태 https://news.hada.io/topic?id=1296
"
"https://news.hada.io/topic?id=4061","nft_ptr - std::unique_ptr 의 이더리움 NFT기반 구현체","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               nft_ptr - std::unique_ptr 의 이더리움 NFT기반 구현체

   - C++ 의 스마트 포인터가 이더리움 블록체인 상의 NFT 객체를 처리하게 만든 코드
   ㅤ→ auto ptr1 = make_nft();
   ㅤ→ nft_ptr ptr2;
   ㅤ→ ptr2 = std::move(ptr1);
   - NFT와 unique_ptr은 정확히 같은 Semantic을 가짐
   ㅤ→ 각 토큰/객체는 유일하고, 다른 토큰/개체와 대체 불가
   ㅤ→ 각 토큰/객체는 한개의 owner/unique_ptr이 소유
   ㅤ→ 다른 사람은 NFT를 보거나/객체를 사용하거나 할수 있지만, owner 만이 NFT/객체를 전송/파괴 할수 있음
   ㅤ→ NFT로 표시된 이미지를 불법 복제하거나, unique_ptr에서 포인터를 복사하는 것에 대한 보호가 전혀 없음
   - 힙스터를 위해 Rust로 개발
   - 성능비교
   ㅤ→ std_unique_ptr : 0.0005초
   ㅤ→ nft_ptr : 3분

   너무 진지해서 이게 뭔가 했는데.. Whitepaper 에서 빵터졌네요
   - https://github.com/zhuowei/nft_ptr/blob/main/white_paper.pdf

   ㅋㅋㅋ 아... 말그대로 ㅋㅋㅋㅋ
"
"https://news.hada.io/topic?id=4039","Python 패키지를 만드는 법 2021","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Python 패키지를 만드는 법 2021

   - 간단한 파이썬 유틸리티를 만들어서 공유할 때 패키지로 만드는 법을 차근 차근 설명
   1. 기능 작성
   2. flit 을 이용해 기본 패키지 형태를 작성하고 TestPyPI 에 등록해서 테스트
   3. flit 로 PyPI 에 실제 등록
   4. README 와 CHANGELOG 추가
   5. tox 로 포매팅(black), 테스트 커버리지(coverage), 코드 퀄리티(flake8, pylint, mccabe), 정적 분석(mypy), 등 적용하기
   6. GitHub Actions 로 자동 빌드 설정하고, 커밋할 때 마다 Codecov로 커버리지 & Clode Climate 로 코드 품질 테스트
   7. make 로 pylint, coverage 등만 빠르게 실행하게 만들기
   8. GitHub Actions 에 flit 로 자동 publish 적용

   https://news.ycombinator.com/item?id=26733423
   HN에서는 더 간단히 하려면 setup.py 작성하고 twine 패키지 이용하라는 댓글이 1등이더군요.
"
"https://news.hada.io/topic?id=4066","SLASH 21 - Toss 개발자 컨퍼런스oss 개발자 컨퍼런스

   - 4.28(수)~30(금) 매일 오후 7시
   Day 1
   - 토스의 서버 인프라 모니터링
   - 토스 서비스를 구성하는 서버 기술
   - SRE 사례 소개
   - 실수 없이 안전하게 쿠버네티스 운영하기
   - 테스트 커버리지 100%
   - 결제 시스템의 SDK와 API 디자인
   Day 2
   - 토스 데이터의 흐름과 활용
   - 빠르게 성장하는 스타트업의 DW
   - MYSQL HA & DR Topology
   - 토스뱅크(가칭) 데이터 설계사상
   - Micro-frontend React, 점진적으로 도입하기
   - 토스팀을 위한 슬랙봇 설계
   Day 3
   - 프론트엔드 웹 서비스에서 우아하게 비동기 처리하기
   - JavaScript Bundle Diet
   - 실무에서 바로 쓰는 Frontend Clean Code
   - TDS로 UI 쌓기: 그 많던 코드는 누가 다 치웠을까?
   - Build, Harder Better Faster Stronger
   - 메모리에 남지 않는 문자열

   세상에 테스트.커버리지 100%라니...

   드디어 테스트 커버리지 100% 를 외치는 곳이 생긴건가 커버리지 100% 는 진짜 필수인뎅

   정말 알차보입니다.
"
"https://news.hada.io/topic?id=4146","메타버스 비긴즈(BEGINS) : 5대 이슈와 전망 [35p PDF]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 메타버스 비긴즈(BEGINS) : 5대 이슈와 전망 [35p PDF]

   1. 게임을 넘어서 경제로 (Beyond Game, Toward Economy)
   2. 메타버스 기기의 확대 (Expanding Metaverse Device)
   3. 디지털 휴먼의 성장(Growing Digital Human)
   4. 다양한 IP와 협력하는 메타버스(IP × Metaverse)
   5. NFT와 결합하는 메타버스(NFT × Metaverse)
   5대 이슈의 시사점은 다음과 같다. ‘놀라운 미래(Surprising Future)’를 대비한 메타버스 전환(Metaverse Transformation)전략이 필요하다. 메타버스가 가져올 변화의 폭과 깊이가 매우 크고 메타버스 안에서 보내는 시간이 증대될 전망이다. 이에 메타버스 시대, 새로운 기회 발굴을 위해 경제주체의 다각적인 노력이 필요하다. 개인들은 메타버스 시대에 부상하는 새로운 직업, 창업, ‘부캐’ 인생에서 새로운 기회를 발굴하고 활용할 수 있을 것이다. 기업들은 메타버스 시대의 생산성 혁신방안을 모색하고, 협력 사업모델을 발굴해야 한다. 메타버스 업무 플랫폼을 활용한 일하는 방식의 혁신, 전 산업과 가치사슬별 메타버스 환경을 활용한 생산성 혁신방안을 탐색해야 한다. 정부는 메타버스를 활용한 공공·사회혁신 방안을 검토하고, 다가올 메타버스 시대의 위험
   요소를 점검할 필요가 있다.
"
"https://news.hada.io/topic?id=4059","월요일이 즐거운 PM,PO,기획자 [브런치북]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       월요일이 즐거운 PM,PO,기획자 [브런치북]

   SAP에서 개발자 및 프로그램/프로덕트 매니저를 오래하신 김영욱님의 글 모음
   챕터1 - 그동안 헷갈리셨던 것, 오늘로 끝내 드릴게요.
   01. 프로덕트, 프로그램, 프로젝트 매니저? 뭐가 다른가요?
   02. POC,Prototype, MVP를 구별하여 사용해요!
   03. 애자일-디자인씽킹-린 스타트업, 이거 정말 좋은건가요?
   04. 평가방법 OKR, KPI, MBO 뭐가 다른거에요?
   챕터2 - 좋은PM의 수첩을 살짝 보여 드릴게요.
   05. <프로덕트 리더십> 팀의 역할은 무엇인가?
   06. <프로덕트 매니저>의 '생각의 틀'과 '방법의 툴'
   07. 코로나 시대의 프로덕트 매니지먼트는 어떻게 달라지는가?
   챕터3 - 좋은 PM이 되어봐요. 어렵지 않아요!
   08. 좋은 PM을 위한 MVP 프라이머
   09. 좋은PM은 '허세 지표/메트릭'을 사용하지 않습니다.
   10. PM수첩: 꼭 알아야 할 4가지 우선 순위 정하기 기법
   11. 좋은 PM이라면 늘 주의해야 할 4가지 의사결정 편향
   챕터4 - 좋은 PM은 자상한 엄마 역할도 해요.
   12. 개발자와 PM이 (매우) 사이좋게 잘 지내는 방법
   13. 개발자와 디자이너가 (매우) 사이좋게 잘 지내는 방법
   14. 현재 <개발자>인데 ""프로덕트매니저""가 되고 싶다구요?
   챕터5 - 좋은 PM은 매일 매일 발전해요!
   15. 좋은PM에게 '영혼의 닭고기 수프'와 같은 10권의 책
   16. 좋은 PM은 ""현재 진행 학습형""이다.
"
"https://news.hada.io/topic?id=4044","앱 아이디어 트윗 탐색기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             앱 아이디어 트윗 탐색기

   - 사람들이 ""이런 앱이 있으면 좋겠어(I wish there was an app~)"" 라고 말하는 트윗만 검색해서 보여주는 사이트
   예)
   - 노래말고 자동차가 뭔지 알려주는 Shazam이 있었으면 좋겠어
   - 시간을 지정하면 랜덤으로 드라이브 코스를 정확히 짜서 현재 위치에 정확한 시간에 돌려놔 주는 앱이 있었으면 좋겠어
   - 내가 어떤 웹사이트에 몇분씩 쓰는지만 기록해 보여주는 앱은 없나?
"
"https://news.hada.io/topic?id=4120","개발자들이 StackOverflow에서 얼마나 Copy & Paste 할까 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              개발자들이 StackOverflow에서 얼마나 Copy & Paste 할까 ?

   - 스택오버플로우가 2주동안 사용자들의 Cmd-C 입력을 트래킹
   ㅤ→ 2주간 730만개 글에서 4062만번의 복사가 일어남
   - 4명중 1명은 방문 후 5분이내에 뭔가를 복사
   - 코멘트보다 답변에서 35배 이상 많이 복사
   - 놀랍게도 채택된 답변보다, 채택되지 않은 답변에서 더 많은 복사가 일어남 (52.44% > 47.56%)
   - 대부분의 복사는 주중 근무시간에 발생
   - 아시아 33%, 유럽 30%, 북미 26%
   - 복사한 86%의 사용자가 가입하지 않은 익명 사용자(0 Rep, SO의 평판점수)
   - 가장 복사가 많이 일어난 Tag들
   ㅤ→ html|css > javascript > python > python|pandas > javascript|jquery > python|pandas|dataframe > python|matplotlib > git > php > jquery
   - 가장 많이 복사가 일어난 글
   ㅤ→ 코드블럭이 있는 답변 : How to iterate over rows in a DataFrame in Pandas
   ㅤ→ 평문 답변 : TypeError: this.getOptions is not a function [closed]
   ㅤ→ 질문 코드블럭 : How to create an HTML button that acts like a link?

   만우절에 유료화 이벤트(?) 하면서 모은 데이터인 것 같네요.
   https://stackoverflow.blog/2021/03/31/the-key-copy-paste/

   ㅎㅎ 재밌는 데이터네요

   채택되지 않은 답변에서 복사가 더 일어나는 경우에 대한 분석이 궁금하네요.
   음... 저도 그랬던 것 같기는 합니다.

   제생각에 한 질문에 채택은 하나인 반면 채택되지 않은 답변은 여러개가 있을 수 있기 때문이 아닐까 싶기도 합니다.

   저도 생각해보니.. 초기에 달린 답변보다 뒤에 달린 답변들이 더 훌륭?하거나 더 최신인 것들이 많아서 그랬던 거 같아요.

   그럴수 있겠네요.
   새로운 버젼이 올라오면 새로운 방법으로 해결할 수 있는 답변이...

   맞아요. 의외로 outdated가 많죠.

   글의 초반부 헤딩이 심금을 울리네요 ""You are not alone~""
"
"https://news.hada.io/topic?id=4093","중국 정전으로 인한 비트코인 해쉬레이트 급락","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        중국 정전으로 인한 비트코인 해쉬레이트 급락

   신장 지역 일대 정전으로 인해 비트코인 해쉬레이트가 20~30%가량 급락했던 사건이 있습니다.
   비트코인 해쉬레이트의 65%는 중국이 차지하고 있고, 특히 신장지역이 차지하고 있는 비율은 35%가량이라 정전같은 사태에 취약할 수 있음을 지적합니다.

   https://cbeci.org/mining_map
   캠브릿지가 제공하는 마이닝 맵을 보면, 신장지역과 쓰촨 지역의 해쉬레이트를 합하면 약 45%가 나오네요.
   비트코인 가격은 하늘로 치솟지만, 이상적인 탈중앙화 철학과는 점점 멀어지는 것 같네요.

   또 다른 기울어진 운동장을 만든 셈이군요.
"
"https://news.hada.io/topic?id=4026","MapLibre GL - MapboxGL JS의 오픈소스 포크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   MapLibre GL - MapboxGL JS의 오픈소스 포크

   - 2.0버전부터 BSD 라이센스를 버린 mapbox-gl-js 을 무료/오픈소스로 사용할 수 있게 포크한 버전
   - mapbox-gl 을 직접 사용중인 경우 package.json 에서 대체하는 것 만으로 바로 적용 가능
   ㅤ→ React, Vue 등의 바인딩을 이용하는 경우, 쉬운 마이그레이션이 나올때까지 조금 기다려야 함
   - 지속적으로 일관성,하위 호환성 유지 및 버그 수정/유지보수를 목표로 함
   - mapbox-gl 을 사용중인 다른 오픈소스들에게도 참여를 독려

   그나마 포크가 나와서 다행이네요 크게 발전하길..

   - mapbox-gl-js는 더이상 3조항 BSD 라이센스가 아닙니다 https://news.hada.io/topic?id=3377
   - 오픈 소스 비즈니스 모델의 죽음 https://news.hada.io/topic?id=3378
"
"https://news.hada.io/topic?id=4045","구글의 First Party Sets에 대해 W3C TAG가 반대함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 구글의 First Party Sets에 대해 W3C TAG가 반대함

   - First Party Sets : 여러개의 도메인 그룹을 Same Origin 으로 보도록 하는 기술 제안
   ㅤ→ 3자 쿠키 차단에 대한 다른 대응책
   - 2019년에 구글 엔지니어가 FPS 제안을 TAG에 리뷰 요청함
   - W3C TAG(Techincal Architecture Group)는 2021년 4/6일 피드백에서
   ㅤ→ 이 FPS 제안은 웹 보안의 기본 모델인 ""Origin""의 컨셉을 약하게 하는 것에 대한 우려가 있음
   ㅤ→ 또한 브라우저 벤더가 리스트를 관리해야 하는 것때문에, 웹앱 들이 특정 브라우저에서만 동작하도록 하는 현상이 더 생길수 있음
   ㅤ→ 웹에 복잡한 설정레이어를 추가하게 되는 방식도 반대
   ㅤ→ 결론적으로 FPS의 현재 형태로는 웹에 위험하다고 판단
   - 구글은 현재 버전인 크롬 89에 이미 FPS를 ""Origin Trial""로 추가해둠
   ㅤ→ 기본은 꺼져있지만, 사용자가 테스트를 위해 켤 수 있음
"
"https://news.hada.io/topic?id=4035","Cheetah-Grid - 초고속 데이터 테이블 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Cheetah-Grid - 초고속 데이터 테이블 오픈소스

   - 백만개의 레코드 생성에 30ms 이하 (M1 맥북 기준)
   - Vanilla JS / Vue.js 용 API 지원
   - 멀티 헤더
   - 컬럼 타입 : 숫자, 체크, 메뉴, 버튼, 이미지, 퍼센트바, 아이콘, 멀티라인, 브랜치 그래프, 라디오
   - 컬럼 액션 : 버튼, 체크, 대화창 입력, 인라인 입력, 인라인 메뉴..
   - 데이터 입력 : Array 또는 DataSource, Promise 지원, 데이터 필터링 가능
   - 테마 지원

   빠르긴 진짜 빨라 보이네요.. 그런데 UI 컴포넌트인데 브라우저 지원 범위를 잘 보이는 곳에 두지 않아서 조금 실망이에요. (저는 아직 못찾았어요.)

   세계에서 가장 빠른 데이터 테이블 오픈소스라고 주장 하네요. 데모 보면 빨라보이긴 합니다.
   - 데모 페이지 https://future-architect.github.io/cheetah-grid/#/
"
"https://news.hada.io/topic?id=4115","구글 Word List - 단어 사용 및 대체 단어 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    구글 Word List - 단어 사용 및 대체 단어 가이드

   - 구글의 개발자 문서화 가이드 중 일부
   - 무례하거나 모욕적이라고 생각되는 영어 단어들, 잘못된 사용 형태를 정리하고 대체 단어들을 제시
   - 영어 문서를 작성할 때 참고하면 좋으나, 꽤 항목이 많아서 찾아서 보는 게 어려울 수 있으니 먼저 한번 훑어보는 걸 추천
   - 자동화 가능 : Vale용 Style을 이용해서 Travis CI / Cucumber / yamllint 등에도 적용 가능

   - Vale - 글쓰기용 오픈소스 Linter https://news.hada.io/topic?id=4114
   ㅤ→ 코드 린팅과 비슷한 기능을 산문(Prose, 소설/일기 같은 형식 없는 글)에 적용해서 글 작성시 경고/어드바이스 제공
   - Vale 용 Google Developer Documentation Style Guide 구현체 https://github.com/errata-ai/Google
"
"https://news.hada.io/topic?id=4047","[동영상] 45분만에 보는 현대 CPU 아키텍쳐 정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     [동영상] 45분만에 보는 현대 CPU 아키텍쳐 정리

   인텔에서 현대 CPU 아키텍쳐의 각종 요소와 개념에 대해 간략히 짚어주는 2부작 영상을 유튜브에 올렸습니다. (영어) 2부를 모두 합쳐 대략 45분 정도의 분량으로, 컴퓨터공학과 대학생이 듣는 전공 강의의 오리엔테이션 수준이 아닐까 합니다.
   1부: https://www.youtube.com/watch?v=vgPFzblBh7w
   1부에서는 다음과 같은 내용을 다룹니다.
   * CPU란 무엇인가?
   * 간략한 CPU의 역사(인텔 중심으로)
   * 컴퓨터의 추상화 계층
   * ISA(명령어 집합 아키텍쳐)의 개념
   2부: https://www.youtube.com/watch?v=o_WXTRS2qTY
   2부에서는 다음과 같은 내용을 다룹니다. ISA의 구현체인 마이크로아키텍쳐에 관한 내용으로, 1부보다 조금 더 심화된 내용이 나옵니다.
   * 마이크로아키텍쳐의 개념
   * [인출 ▶ 해독 ▶ 실행 ▶ 기록]의 4단계 명령 주기와 CPU에서의 프론트엔드/백엔드 구분
   * 파이프라인 및 CPU 클럭 속도
   * 분기 예측에 의한 추측 실행
   * 메모리와의 속도 차이를 줄이기 위한 캐시
   * CPU 내부에서 사용하는 μops(Micro-operations)의 개념
   * 슈퍼스칼라(Superscalar)에 의한 ILP(명령어 수준 병렬성) 구현
   * 비순차적 실행(Out-of-Order Execution)과 그 구현을 위한 여러 구성요소
   * 이 모든 요소들의 결합에 의한 현대 CPU의 작동 과정

   방금 1부 봤는데 깔끔하네요. 지금까지 다른 곳들에서 조각 조각 접했던 정보들이 머릿속 잘 정리되는데에 도움이 많이 되네요. 👍🏼

   파트2도 훌륭하네요

   방금 1부 봤는데 깔끔하네요. 지금까지 조각 조각 접했던 정보들이 정리 되는 느낌입니다.

   그나저나 이 댓글은 수정하고 싶었는데 몰라서 지웠다고 생각했는데 어떻게 지우는지도 모르겠네요 -0-
"
"https://news.hada.io/topic?id=4108","애플, AirTag 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             애플, AirTag 공개

   - U1칩 기반 정밀 탐색 기능을 제공 (아이폰 11이상)
   - 나의 찾기 네트워크를 통해 핸드백,열쇠 등 물건의 위치를 파악해서 분실 방지
   - 스테인레스 스틸, IP67 생활방수 및 방진
   - 스피커 내장
   - 탈착식 커버로 배터리 교체(CR2032, 매일 사용시 1년이상 지속)
   - 아이폰 옆에 두면 자동으로 연결(AirPod 연결처럼)
   - 무료 각인 및 가죽 루프/키링
   ㅤ→ Hermès 버전 전용 각인 및 가죽 액세서리
   - 1개 39,000 4개팩 129,000

   두께가 궁금하네요.

   있으면 좋을 것 같긴한데 가격이 ㅠ

   이미 예전에 나온 Tile ( https://www.thetileapp.com/ ) 이 있지만
   AirTag 소개 보니.. 거의 사형선고인듯 해요.

   다른 곳에서도 또 나오겠죠...ㅜㅜ
   좀 더 저렴하게.

   - Apple, ""나의 찾기"" 앱에서 서드파티 기기 지원 시작 https://news.hada.io/topic?id=4040
"
"https://news.hada.io/topic?id=4100","아마존, 세계 책의 날 기념 킨들 e북 10권 무료 배포 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    아마존, 세계 책의 날 기념 킨들 e북 10권 무료 배포

   4월 24일까지 다운로드 가능
   국가별로 한권씩 선별하여 영어판으로 제공
   - At the End of the Matinee [일본]
   - A Single Swallow [중국]
   - The Broken Circle: A Memoir of Escaping Afghanistan [아프가니스탄]
   - Amora: Stories [브라질]
   - The King of Warsaw: A Novel [폴란드]
   - The Strange Journey of Alice Pendelbury [프랑스]
   - The Son and Heir: A Memoir [네덜란드]
   - You, Me, and the Colors of Life [독일]
   - Return to the Enchanted Island: A Novel [마다가스카르]
   - Some Days [아르헨티나]

   한국어판이 나온건 일본작가의 책인 ""마티네의 끝에서 - 히라노 게이치히로"" 한권 밖에 없네요
"
"https://news.hada.io/topic?id=4051","무료 포토샵 Photopea 개발자의 AMA","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        무료 포토샵 Photopea 개발자의 AMA

   - PSD를 웹에서 편집 가능한 툴
   - 1.8M 짜리 오프라인 도구. 년 $50 짜리 파일 호스팅 이용
   - 수익은 광고 : 1시간 사용하는 사람당 약 5센트 수익
   ㅤ→ 2019년 기준 5백만시간이라서 약 $25만불(2.8억원) 수익이 났고, 2020년에는 2~4배 예상
   - 체코 프라하에 사는 29살 개발자 혼자 개발중
   - 2012년부터 취미로 개발 시작, 2017년에 광고 붙인후 월 $400씩 수익 발생, 매년 사용자가 두배씩 늘어 나는 중
   * AMA : Ask Me Anything
   * 이 글이 올라온 IAmA는 2천만명의 멤버를 가진 엄청 큰 서브레딧

   Q. 월 트래픽이 12tb인데 어떻게 비용이 50달러밖에 안나와?
   A. 나도 잘 모르겠네. 호스팅 회사에 물어볼게.
   ㅋㅋ

   I am using www.hostingsolutions.cz . They repied to me and said that they are ok with it. I should have an unlimited traffic at my webhosting.
   호스팅 업체가 말도 안되게 편의를 바주고 있었네요.

   Photopea - 웹 기반 PSD 이미지 에디터 https://news.hada.io/topic?id=534
   ㅤ→ PSD/XCF/Sketch/CDR 등 유명 이미지 에디터의 파일 오픈 가능
   ㅤ→ 레이어/레이어 마스크/블렌딩/브러쉬 등을 지원
   실행해보시면 우측에 광고가 4개 뜹니다. 그거 광고만으로 년 3억씩 벌고 있군요.
"
"https://news.hada.io/topic?id=4058","리눅스 사용에 도움주는 한국어 커뮤니티 사이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       리눅스 사용에 도움주는 한국어 커뮤니티 사이트

   국내 리눅스 커뮤니티를 잘 정리한 페이지 공유합니다.
   글쓴이가 만든 모바일 앱도 마지막에 소개하네요.
   * 한국 리눅스 문서화 프로젝트 (커뮤니티)
   * https://kldp.org/
   * 하모니카OS
   * http://hamonikr.org/Free_Board
   * 우분투 코리아 (커뮤니티)
   * https://www.ubuntu-kr.org/
   * 리눅스민트 코리아 (커뮤니티)
   * http://linuxmint.kr/
   * 넘버원 리눅스 (데스크탑 배포판)
   * http://www.no1linux.org/
   * 안녕 리눅스 (서버 배포판)
   * https://annyung.oops.org/
   * 수리눅스 (서버 배포판)
   * https://www.sulinux.net/web/
   * 한국 데비안 사용자 모임
   * https://debianusers.or.kr/
   * 리눅스포털
   * http://linux.co.kr/home2/board/…
   * 리눅스 Q&A
   * http://board.theko.co.kr/bbs/group.php?gr_id=G01
   * 클리앙 리눅스당
   * http://www.clien.net/service/board/cm_linux
"
"https://news.hada.io/topic?id=4121","Ubuntu 21.04 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Ubuntu 21.04 릴리즈

   - Native MS Active Directory 연동
   - Wayland 기본 적용
   - Flutter SDK를 이용한 개발 (Snap 연동)
   - MS SQL Server for Ubuntu 성능 향상
   - 새로운 다크 테마 Yaru

   AD 기본 지원때문에 엔터프라이즈 시장에서 더 폭넓게 사용될 듯
"
"https://news.hada.io/topic?id=4022","똘똘한 검색 알고리즘을 만들기 위한 평가 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       똘똘한 검색 알고리즘을 만들기 위한 평가 방법

   - Shopify가 상품검색에 이용했던 알고리즘을 전환하면서 정말 검색 결과가 좋아졌는지를 평가한 방법
   ㅤ→ 기존 Vanilla PageRank : 검색에 기반한 PV로 순위 계산
   ㅤ→ 신규 Query-specific PageRank : 검색어에 대한 클릭 히스토리 기반으로 가중치 계산
   - 3단계로 평가
   ㅤ1. 데이터 수집 : Kafka 이벤트와 Annotated 데이터 셋
   ㅤ2. 오프라인 지표 평가 : 기존 검색 쿼리를 가지고 새 알고리즘을 평가
   ㅤㅤ→ Mean Average Precision(MAP) : 쿼리가 반환하는 상위 N개의 결과에 관련없는 문서들이 포함될 경우 페널티를 부여
   ㅤㅤ→ Normalized Discounted Cumulative Gain(NDCG) : MAP 계산을 위한 컷오프 점수를 계산, 좋은 점수(Great/Good) 아이템의 순서가 낮을경우 페널티를 부여
   ㅤ3. 온라인 지표 평가 : 서치 로그를 이용해서 실제 검색이 어떻게 동작하는지 평가
   ㅤㅤ→ 성공을 결정하는 지표 : 사용자가 얼마나 자주 검색을 하고, 원하는 결과를 찾기위해 얼나마 스크롤하고, 문제 해결을 위해 지원팀에 연락하는지 등
   ㅤㅤㅤ→ Click-through rate (CTR): 검색결과 클릭율. 높아야 좋음
   ㅤㅤㅤ→ Average rank: 클릭한 결과의 평균 순위. 낮아야 좋음
   ㅤㅤㅤ→ Abandonment: 원하는 결과를 찾지 못한 포기율, 물론 봇/스팸 등의 영향도 있긴 하지만, 적당히 낮으면 좋음
   ㅤㅤ→ Kafka 를 이용해서 수집
   ㅤㅤ→ 기존 방식과 A/B 테스트 진행
   - 결과적으로 새 검색 알고리즘이 기존 방식을 상회해서 대체를 진행
   - 키포인트
   ㅤ→ 고품질의 신뢰할수 있는 레이블된 데이터셋이 평가의 핵심
   ㅤ→ 온라인 지표들은 사용자 행동에 대한 훌륭한 인사이트를 제공
   ㅤ→ 오프라인 지표들은 새로운 알고리즘을 빠르게 반복 테스트하고 위험을 줄이는 걸 도와줌
"
"https://news.hada.io/topic?id=4092","이코노미스트에게 배운 글쓰기 비법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           이코노미스트에게 배운 글쓰기 비법

   이 글은 'The Economist' 라는 잡지로 배운, 글을 명확하게 쓰는데 도움이 될만한 내용을 소개하는 글인데요. 전문을 읽어보시는 걸 추천드리지만, 어떤 글인지 파악하실 때 도움이 될 것 같아 간단히 요약해봤습니다.
   1. 시작때 결론을 내리고 시작하세요. → 이러면 사람들이 이걸 더 볼지, 아니면 흥미 없는 주제라 넘길 수 있을지 글을 끝까지 안 봐도 정할 수 있습니다.
   2. 증거가 연속되게 증거를 붙이세요. → 증거 1을 가져오고, 확장하다가 증거 2를 가져오고, 또 확장하다가 증거 3을 가져오면 넓은 방에 흩어진 증거들을 찾느냐 뭔말하는 지 모를겁니다.
   3. 첫 문장은 요약하고, 나머지 문장은 설명하세요 → 1번을 일반적인 방법으로 확장한 것입니다.
   4. 적절한 단어 사용 → 좋고 나쁨으로 모든 걸 표현하지 말고, '컴파일러가 개발자를 나쁘게 다룬다' 보단 '컴파일러가 개발자를 채찍질한다', '컴파일러는 개발자를 혹사시킨다' 등 이미지가 떠오르는 단어를 고르는 게 상상이 더 구체화됩니다.
   5. 과거부터 시작하기 → 모든 사건은 맥락이 있으므로 역사를 알아야 할 때가 있는데, 이 때는 연대기적으로 과거부터 지금까지. 순차적으로 설명하는 게 좋습니다. 갑자기 과거가 나타나면 혼란스러워요.
   6. 비트를 넣기 → 말하면서 운율이 느껴지면 좋습니다.
   예문이나 예시, 왜 그래야 하는지에 대한 자세한 설명을 보고 싶으시면 전문을 확인해보세요. 'ㅁ '

   영어 기사는 Vox(https://www.vox.com/)도 애용해주세요~ 좋은 글들 많이 올라옵니다.

   오오. 감사합니다. 저는 요즘은 주로 MIT 테크놀로지 뉴스나. 주요 해외 IT 뉴스를 종합해서 보여주는 곳(https://readspike.com/)에서 종합적으로 살펴보고 있습니다.

   이 글은 이코노미스트 영문판 구독을 채찍질합니다. 좋은 글 공유 고맙습니다.

   감사합니다. (_ _)/ 잘만든 영문 뉴스들은 대다수가 저런 구조였는데, 무의식적으로 꺠닫고 있는 걸 의식적으로 확인해보니 굉장히 합리적인 구조인 것 같습니다. 저런 구조인 글은 쏙쏙 익히더라고요.
"
"https://news.hada.io/topic?id=4130","DOOM3 BFG 분석분석

   존 카맥이 개발한 DOOM 시리즈들은 모두 소스코드가 공개되어있는데요. 다만 공개가 되어있어도 DOOM3부터는 코드가 꽤 복잡해졌기 때문에 아무런 기반 없이 보기에는 너무 복잡한 시스템입니다. 특히 리마스터된 BFG는 지연 렌더링, 워커 기반의 멀티스레드등 현대적인 아키텍쳐가 추가로 들어가서. 더 복잡해졌죠.
   그래서 DOOM3 BFG의 구조에 대해 간략하게 설명한 글이 있습니다. 이 저자는 최근 한국에도 정발한 울펜슈타인 게임 엔진 블랙북, 둠 게임 엔진 블랙북을 적으신 분인데요. 소스코드를 하나하나 까보지는 않지만 큰 틀에서 어떻게 설계되었는지 자세히 알려줍니다.

   PS : 제가 암내시아 적으면서 댓글로 달았었군여(...) OTL.

   제가 게임엔진 공부할 때 보면서 큰 도움이 많이 됐는데요. 가장 큰 도움은 기술이 아닌... 다른 사람 소스코드를 이해하고, 고칠 수 있는 능력을 얻는 데 큰 도움이 되었습니다.
"
"https://news.hada.io/topic?id=4104","B2B SaaS Onboarding 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        B2B SaaS Onboarding 가이드

   온보딩 체크리스트 서비스인 Arrows가 자신들의 제품을 만들면서 100+개의 온보딩 성공 사례를 분석하여 알게된 것들을 정리
   #1 모든 회사는 자신만의 '온보딩'이 뭔지 정의해야함
   - Arrows는 ""온보딩은 제품을 구매함으로써 얻게 될 가치를 고객이 경험하는 순간"" 이라고 설정
   ㅤ→ ""Aha Moment""
   - 이걸 명확히 정의함으로써 제품과 회사의 모두에게 게임체인저가 될 수 있음
   - 온보딩 된 상태에 대해서 조직이 모두 동일하게 이해하면, 같은 목표에 집중할 수 있게 됨
   ㅤ→ 세일즈 팀은 고객에서 ""Aha Moment""를 팔고
   ㅤ→ 고객성공 팀은 고객들이 ""Aha Moment""에 도달하도록 하고
   ㅤ→ 제품 팀은 ""Aha Moment""를 활성화 및 강화
   - 이 ""Aha Moment""는 고객들이 좋은 결정을 내렸다고 믿게 만들고, 온보딩 프로세스에 참여하도록 동기를 부여
   #2 새로운 온보딩 프로세스로 변경하는건 어려움
   - 첫번째 CSM(Customer Success Manager, 고객 성공 관리자)를 고용하고 담당자가 늘어나지만..
   - 고객이 이탈하기 시작하는데 이유를 알지 못하고, 유지하기 힘들다는 생각이 들기 시작하면서 한계점에 도달
   - 하이터치(고객과 매우 긴밀한 관계를 가지는) 온보딩 프로세스에 필요한 것들
   ㅤ→ Sales Hand-off : 영업팀에서 고객성공팀으로의 이관
   ㅤ→ Kick-off Call : 온보딩 프로세스 기대치 설정, 기한, 양쪽에서 할 업무들, 연락처
   ㅤ→ Implementation : 데이터/프로세스 임포팅, 하드웨어 설정, 소프트웨어 설치, 시스템 테스팅
   ㅤ→ Training : 고객들이 자신의 직원을 교육하도록 돕기, 모두가 제품사용을 이해하도록 만들기, 런칭 준비
   ㅤ→ Launch/Rollout : 고객이 제품을 실시간으로 사용하기 시작하고, 실제 문제를 해결 하기 시작
   ㅤ→ Review : 런칭이 어떻게 진행되었는지, 어떻게 사용하는지, 향후 사용계획에 대한 고객 피드백 받기
   #3 영업팀과 고객 성공팀 간에 부드러운 이관하기
   - 고객이 팀간에 이관될 때의 방식이 회사에 대한 경험의 분위기(tone)을 결정
   - 종종 이 이관이 울타리 너머로 던져지는 것 처럼 느껴지는데, 고객은 이걸 바로 알 수 있음.
   - 성공적으로 이관되려면 고객은 새로운 담당자가 누군지 알게 되고 하는 과정이 연속성 있게 느껴져야함
   ㅤ→ 영업팀은 기존 관계와 정보들을 제대로 전달해서 고객이 처음부터 다시 시작하는 것 처럼 느끼지 않게 해야함
   - 연속성을 제공하는 두가지 방법
   ㅤ→ 이관 미팅에서 영업 대표가 초기 5분간 참여해서, 고객을 성공팀에 소개하고, 고객의 목표에 대해서 간략히 공유하고 빠짐
   ㅤ→ 고객이 구매를 하기 전에 성공팀 멤버를 미리 지정. 차후 미팅에 초기부터 참여시킴. 자연스럽게 이관이 가능
   - 일반적으로 두번째 옵션을 권장
   - 영업팀이 빠지기 전에 고객이 온보딩에 성공하면 보상하는 제도가 있는 것도 좋음.
   #4 마감 및 타임라인을 이용해서 계속 움직이게 할 것
   - 좋은 고객 성공 계획은 온보딩 절차의 모든 단계를 설명하고 일정 또는 기한을 설정
   성공계획의 예) CPA회사용 SaaS
   - Kickoff (구매후 몇일 또는 일주일 후)
   ㅤ→ 계정 생성 (15 분)
   ㅤ→ KPI 결정 및 문서화 (30 분)
   ㅤ→ 첫번째 클라이언트 롤아웃 후보자 결정 (30 분)
   - 시스템 셋업 (킥오프 날 시작해서 1~4주간)
   ㅤ→ 커스텀 데이터 연결 설정 (2 시간)
   ㅤ→ 기존 데이터 임포트 (1 시간)
   - 롤아웃 (시스템 셋업후 바로)
   ㅤ→ On Call시 롤아웃 클라이언트와 포털 공유 (60 분)
   ㅤ→ 롤아웃 클라이언트한테 FAQ 전달 (15 분)
   - 체크인 (롤아웃 하고 2-4주후)
   ㅤ→ 내부 사용자 및 롤아웃 클라이언트로 부터 피드백 수집 (60 분)
   ㅤ→ SaaS 회사와 체크인 통화 스케줄링 (15 분)
   ㅤ→ 진행 상황 및 KPI 리뷰를 위한 체크인 통화 실행 (30 분)
   #5 여러 이해관계자를 조율할 담당자 지정
   - 온보딩 중에 단일 연락 창구가 될 고객측 담당자 지정이 중요 ""Point Person""
   - ""Point Person""은 프로젝트에 대한 오너십을 가지고, 이 제품을 실행하기 위해 드라이브 할수 있는 사람
   #6 고객 온보딩 시에 이메일은 사용하지 말 것
   - 이메일은 계속 참조해야할 정보를 공유하기 위해 만들어 진 것이 아님
   ㅤ→ 구글 문서, Trello 보드, Arrow의 고객 성공 플랜 같은 웹페이지 등이 좋음
   - 통화/회의중 나온 내용을 메모 가능하면 좋음
   - CSM 이 작업과 마감일등을 할당하면 미리 알림이 가도록 할 것
   #7 모든 고객에 대한 고수준 시각화 유지(High-level Visibility)
   - 여러명의 고객을 동시에 온보딩 할때 각각을 빠르게 평가할 수 있어야 함
   - 각 고객의 상태를 실시간으로 파악
   #8 복잡한 온보딩 중에도 고객의 업무 수행은 유지
   - 고객들이 온보딩중에 이탈하는 주요 이유 : 모멘텀을 잃거나 온보딩이 너무 복잡
   - 새로운 프로세스를 배우는 것에 자연스럽게 저항을 하게 됨
   ㅤ→ 고객이 이 제품에 투자한 '이유'를 전면에 두는게 좋음
   ㅤ→ 온보딩 프로세스의 최종 목표에 대한 시각적 알림을 포함시키는 방법을 이용
   - 여러 고객이 온보딩 프로세스의 같은 위치에 머물러 있다면 복잡하다고 생각할수 있음
   ㅤ→ 사기성을 확보하고 단순화
   ㅤ→ 또는 너무 많은 것을 너무 일찍 요청하는 걸수도 있음
   ㅤ→ 단계별로 Aha Moment를 가질수 있도록 할 것
   #9 최고의 온보딩 경험을 줄 수 있도록 고객들을 세그먼트로 나눌 것
   - 고객이 다양해 질수록, 세그먼트별로 온보딩 프로세스를 만들 필요가 있음
   - 처음엔 포괄적인 온보딩 템플릿으로 시작하고, 각 고객별로 필요없는 작업을 제거하거나 누락된 항목을 추가
   - 이렇게 템플릿 편집이 계속 될 때, 각 고객들의 공통점을 찾아 보는 것을 통해서 세그먼트 구분에 대한 데이터를 갖게 됨

   국내에선 성공한 SaaS 서비스들이 많지 않다 보니까, 이런 경험 공유 자체가 좀 생소할 수 있을텐데요.
   SaaS 들은 대부분 고객들이 그 제품의 가치를 인식하게 만들고, 그 이후 구매가 이뤄지면 다시 그걸 직접 적용해보는 온보딩 절차를 거치게 됩니다.
   이 온보딩 절차를 어떻게 하면 효율적으로 만들수 있을까를 정리한 문서라고 보시면 될 듯합니다.
"
"https://news.hada.io/topic?id=4041","아이폰에서 갤럭시 경험하기 - iTest","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         아이폰에서 갤럭시 경험하기 - iTest

   - 아이폰에서 삼성 갤럭시의 UI를 경험할 수 있는 PWA 공개
   - Safari에서 접속 후 홈 화면에 추가해서 사용
   - 전화, 메시지, 카메라 등 기본 앱과 삼성 앱 체험 기능
   - 네비게이션 바, 알림 센터, 알림음 등을 재현

   와 잘만들었네요. 갤럭시 실제 사용할때보다 보다 더 빠른 것 같이 느껴지네요.
   (나름 기변을 뽐뿌 하기 위한? ㅎㅎ)

   목업에 가깝긴 하지만 뭔가 맥에서 윈도우 돌리는 게 생각나기도 하고 그러내요.
"
"https://news.hada.io/topic?id=4136","MarkShow - 마크다운으로 슬라이드쇼 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      MarkShow - 마크다운으로 슬라이드쇼 만들기

   - 브라우저에서 편집(""E"")하고 바로 슬라이드쇼 실행
   - 로컬/외부URL 의 MD파일 읽어오기 가능
   - 별도 발표자 창 보기(""S"")
   - 기본 테마 10개 및 커스텀 스타일(CSS) 지원
   - 테이블 / 이미지 / 헤딩 / 리스트(OL/UL) / 코드 구문 강조 / Latex / 애니메이션 지원
   - 트랜지션 효과 : cube, page, concave, zoom, linear, fade
   - 하단 프로그레스바 보이기
   - 키보드 단축키 지원(""?"")
   - Reveal.js + Highlight.js

   와, 좋네요!

   - Reveal.js - 오픈소스 HTML 프리젠테이션 프레임워크 https://news.hada.io/topic?id=2137
   - Backslide - HTML 발표자료 쉽게 만들기 https://news.hada.io/topic?id=3577
   - Presenta Lib - 웹 프리젠테이션 JS 라이브러리 https://news.hada.io/topic?id=3145
"
"https://news.hada.io/topic?id=4082","NFT가 도대체 뭐야가 도대체 뭐야?

   - ‘non-fungible token’의 약자로, ‘대체불가토큰’ 혹은 ‘대체불가능토큰’
   ㅤ→ 기존 암호화폐, 귀금속, 채권등은 대체가능(fungible)
   ㅤ→ 암호화된 거래내역을 블록체인에 영구적으로 남김으로써 고유성을 보장
   ㅤ→ NFT 발행에 현재 가장 널리 사용되는 블록체인 플랫폼은 이더리움
   - 왜 화제인가?
   - NFT에 대한 우려들
   - 단·장기 전망

   이쯤에서 보는 NFT(대체불가능토큰)의 약점
   https://www.coindeskkorea.com/news/articleView.html?idxno=73064
"
"https://news.hada.io/topic?id=4138","Coolify - 오픈소스 Heroku & Netlify 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Coolify - 오픈소스 Heroku & Netlify 대체제

   - Git에 푸시해서 Node.js 및 Static 사이트 배포
   - 원클릭 MongoDB, MySQL, PostgreSQL, CouchDB 설치
   - 전체 인프라를 한개의 커맨드로 설치 가능
   - Cron/백업/모니터링/사용자 분석 도구 추가 예정
"
"https://news.hada.io/topic?id=4106","애플, M1칩 iMac 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            애플, M1칩 iMac 공개

   - M1 (8코어 CPU, 7/8코어 GPU, 16코어 뉴럴엔진)
   - 11.5mm 두께의 24인치 4.5K 레티나 디스플레이 (4480x2520)
   - 그린,옐로,오렌지,핑크,퍼플,블루,실버 색상 (전면은 밝고, 후면은 진한 색상)
   - 1080p Facetime HD 카메라 (ISP 적용)
   - 스튜디오 퀄리티 빔포밍 3 마이크 어레이
   - 6 스피커 시스템(공간 오디오 지원)
   - 2개의 썬더볼트/USB 4
   - 2개의 USB 3 포트(8코어 GPU 모델)
   - Touch ID 내장 키보드(8코어 GPU 모델)
   ㅤ→ 매직 키보드/트랙패드/마우스 색상을 본체와 일치
   - 기본 8GB 메모리(16GB 확장 가능)
   - 자석으로 부착되는 우븐 케이블 전원 커넥터(랜선이 어댑터에 연결되고 본체로는 전원 케이블만 연결)
   - 169만원(7코어 GPU, 256GB), 194만원(8코어 GPU, 256GB), 221만원(8코어 GPU, 512GB)

   M1 맥북에어 / 맥북프로 에서 7/8코어 GPU 차이를 두더니, 아이맥에도 등급 차이를 뒀네요.
   7코어 모델은 터치ID, USB3포트 2개, 기가빗 이더넷이 없고, 노란색/오렌지색/보라색 선택이 불가능합니다.
"
"https://news.hada.io/topic?id=4028","Facebook Analytics 제품 종료 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Facebook Analytics 제품 종료 예정

   - 2021년 6월 30일까지만 사용 가능. 그전에 차트/테이블 Export 해야
   - 대신 Facebook Business Suite, 광고 관리자, 이벤트 관리자를 사용을 권장
   - 크로스 디바이스 측정용 분석 솔루션이 되기를 희망했지만, 사용자는 많지 않았음
   ㅤ→ 실제로는 Amplitude 나 Mixpanel 같은 도구를 더 선호
   - 아마도 iOS 14 의 프라이버시 변경 때문일 것
"
"https://news.hada.io/topic?id=4060","인류는 왜 화성에 가려 하는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           인류는 왜 화성에 가려 하는가?

   - 우주로 가겠다는 야망
   - 야망이 가져다 준 것들
   - 화성에 가기 위한 노력의 역사
   - 그리고 ‘인내’
   - 여전히 현재 진행형
   ""우리는 저 광활한 우주에 우리 말고도 누군가가 살아 있음을 믿고, 그들을 찾고 있기 때문""
   ""우리는 어디에서 왔고, 어디로 가고 있나요?""

   우주탐사 얘기는 읽을때마다 두근두근하네요.
   - 우주탐사의 실용적인 면을 찾자면, 나사의 민간기술이전 홈페이지에 여러 사례가 나와있습니다.
   https://technology.nasa.gov
   익히 알려진 나사 믹서기 외에도, 화성 토지 연구를 접목시킨 식물재배 키트를 킥스타터에서 판매한 사례 같은 것도 있네요.
   - 보통 대기권 진입의 발열을 마찰이란 단어로 표현하지만, 엄밀히 따지면 마찰의 영향은 크지 않습니다. 대부분의 열은 마찰이 아니라 발사체 정면과 공기의 충돌로 인한 압축열에서 오는 것으로, missile temperature distribution 자료들을 보면 정면은 뜨거운데 반해 측면의 온도 상승은 미미합니다.

   로버트 주브린(Robert Zubrin) 박사가 “왜 화성으로 가야 하는가?”라는 질문에 답변하는 내용도 들어보면 좋습니다.
   https://www.youtube.com/watch?v=j2Mu8qfVb5I
   https://firenzedt.com/14980 (한국어 번역)

   저도 화성 가는 것에 회의적이었는데 이거보고 많이 바뀌었습니다. 스타트업들도 당장 BEP만 보는게 저렇게도 할 수 있겠구나? 혹은 저렇게 해야만 하는 것도 있겠구나 하는 생각도 들었구요

   오, 정말 멋있는 답변이네요. 잠시나마 칼 세이건이 다른 모습으로 나타나 우리가 코스모스에 왜 있어야 하는 존재인지 물어보는 듯한 인상을 받았습니다.

   이쯤에서 다시 감상하는 칼 세이건의 [창백한 푸른 점]:
   https://www.youtube.com/watch?v=c83V1ilN2NQ
   http://www.hani.co.kr/arti/science/science_general/928073.html
   그러고 보니 최근 KBS 다큐멘터리 유튜브 채널에 보이저 탐사선에 관한 다큐가 올라왔습니다. 그 다큐의 2부 제목이 바로 “창백한 푸른 점”이더군요.
   《KBS》 우주, 지구 그리고 나 1부 - “보이저” (2020-01-03)
   https://www.youtube.com/watch?v=huvfD023MJs
   《KBS》 우주, 지구 그리고 나 2부 - “창백한 푸른 점” (2020-01-10)
   https://www.youtube.com/watch?v=_p5jYerEt5s

   와 이 영상 너무 좋네요. 링크 감사합니다.
"
"https://news.hada.io/topic?id=4102","Spaceli - 구글 닥스를 Knowledge Base로 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Spaceli - 구글 닥스를 Knowledge Base로 사용하기

   - 구글 닥스를 개인 또는 팀의 정보 저장소로 활용하게 해주는 무료 도구
   - 컨플루언스 처럼 Space를 생성하고, 그 안에 여러 정보들을 트리 구조로 정리하는걸 지원
   - 모든 내용은 Google Drive에 저장, Shared Drive에서도 동작
   - 통합 검색 가능
   - 직접 첨부 가능 서비스 : Google Docs/Sheets/Slides/Forms/Maps, Figma, Youtube, Airtable, Invision, CodePen, Loom, Miro, Whimsical 등
   - 외부 서비스를 Embed 하거나 링크 연결도 가능
   - 현재 기능들은 무료. 차후에 커스텀 도메인 등은 프리미엄으로 제공 예정

   위키처럼 구글 문서들을 트리 구조로 정리해서 볼 수 있으니 아주 좋네요.
   그런데 기존 문서들을 일괄 import 할 수 없고 하나씩 해야하는 점은 아쉽네요.

   아틀라시안 컨플루언스에 익숙하신 분들은 스페이스 개념이 이해하기 쉬울듯 합니다.
   내부에서 구글 닥스 문서는 iFrame 으로 다 불러오니까 마치 Spaceli 가 하나의 위키 서비스처럼 잘 동작하네요.
"
"https://news.hada.io/topic?id=4077","크롬 90 변경사항","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               크롬 90 변경사항

   - CSS overflow:clip 및 overflow-clip-margin 추가
   - Feature Policy API 가 Permissions Policy 로 이름(헤더) 변경
   - HTML만으로도 Shadow DOM 생성 가능 :
"
"https://news.hada.io/topic?id=4037","MS, 서버를 냉각하기 위해 액체에 담그기 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       MS, 서버를 냉각하기 위해 액체에 담그기 시작

   - 특수한 비전도성 액체를 사용하여 욕조 같이 생긴 곳에 서버랙을 담그는 방식
   ㅤ→ 불화 탄소(탄화 플루오르, fluorocarbon)
   ㅤ→ 직접 닿아서 냉각하며, 끓는점이 섭씨 50도여서 끓어오른뒤 다시 비오듯이 욕조에 떨어지는 폐쇄루프 냉각 시스템
   - 대부분의 데이터센터는 외부공기를 증발시켜서 사용하는 공냉식이지만, 그 과정에서 물을 많이 사용
   ㅤ→ 물 사용량을 줄이기 위해 개발되었으며, 물 사용량을 제로화 하는 것이 목표 ㅤ→ 암호화폐 채굴자들한테 배웠다고..

   하드웨어 자체를 유지보수 하는 것은 점점 힘든일이 되어가겠군요... ;; 왠지 사람 몸에 유해하지 않을까 하는 걱정도 되고요.

   3M의 냉각 액체를 사용한다고 나와있는데, 아마 Fluorinert나 Novec이 아닐까싶습니다.
   https://3m.com/3M/en_US/…

   몇 년 전에 MS가 서버를 바다에 넣는다는 얘기를 들은 것 같은데 여러가지로 시도를 많이 하네요 ㅎㅎ
"
"https://news.hada.io/topic?id=4070","MAD (ML,AI,Data) Index - MAD 주가 지수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   MAD (ML,AI,Data) Index - MAD 주가 지수

   - 매출의 50% 이상이 ML/AI/Data 기반인 상장된 SaaS/IaaS 회사만 선별해서 뽑은 주가 지수
   - 총 13개 회사 : Snowflake, Palantir, Datadog, Splunk, MongoDB, Elastic, C3.ai, Alteryx, Teradata, Cloudera, Talend, Domo, Veritone
   ㅤ→ 대부분 모든 회사가 5년내에 상장, 평균/중간값은 2017년
   ㅤ→ 가장 오래된 회사는 Teradata(2007), Splunk(2012)
   - 3개의 그룹
   ㅤ→ 고성장 : 35% YoY, LTM 기업가치/매출이 15배 이하 (C3, Datadog, Palantir, MongoDB, Elastic, Snowflake)
   ㅤ→ 중성장 : 10~25% YoY, 매츌 $1B 이하 (Alteryx, Talend, Cloudera, Domo, Veritone)
   ㅤ→ Contracting : 연매출 $1.5B 이상, 전년 대비 YoY성장이 느리거나 축소 (Teradata, Splunk)
   - 2020년 1월1일을 100으로 봤을때
   ㅤ→ 2020/04/01 - 81.56
   ㅤ→ 2020/07/01 - 164.63
   ㅤ→ 2020/10/01 - 167.24
   ㅤ→ 2021/01/01 - 200.03
   ㅤ→ 2021/04/01 - 167.56
   * MAD Index 에서 제외 : 클라우드/하드웨어 벤더, 버티컬 AI/DATA 회사, AI를 많이 쓰지만 내부/제품에만 쓰는 회사들(Netflix,Facebook등)
"
"https://news.hada.io/topic?id=4052","클럽하우스, 130만명 사용자 정보 유출","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         클럽하우스, 130만명 사용자 정보 유출

   - 사용자 정보를 담은 SQL 파일이 공개
   ㅤ→ 비밀번호 및 이메일 계정등 민감한 정보는 없음
   ㅤ→ User ID, 이름, Photo URL, Username, 트위터/인스타그램 ID, 팔로워 숫자, 팔로잉 숫자, 계정 생성 날짜, 초대한 사람
   * 클럽하우스 측에서는 해킹당한게 아니고, API를 통해서 접근 가능한 공개 정보라고 공식 답변
   - 그러나, 아마도 소셜 엔지니어링 공격등에 사용가능할 것이니 주의 요망

   🤦‍♀️

   https://news.ycombinator.com/item?id=26768299
   해당 이슈에 대해서 2월에 클럽하우스에 리포트한 유저가 아무 답변도 받지 못했다고.
   - MITM으로 알아낸 토큰만 있으면 전체 퍼블릭 사용자 프로필을 무제한 쿼리 할 수 있음
   - 검색 결과의 갯수 제한 및 Rate Limiting 정도라도 해주면 막을수 있는데 전혀 안하고 있는듯
"
"https://news.hada.io/topic?id=4043","애플 M1 지원 코드의 초기 버전이 Linux SoC 트리에 머지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  애플 M1 지원 코드의 초기 버전이 Linux SoC 트리에 머지

   - for-next 브랜치에 머지
   - M1 칩, Apple Interrupt Controller 등 지원을 위한 기초 코드들
   - M1용 Asahi Linux 프로젝트를 진행하는 marcan의 코드(PS4 Linux 개발자)

   Asahi Linux : 애플 실리콘용 리눅스 프로젝트 https://news.hada.io/topic?id=3538
   Asahi Linux 의 최근 개발 현황
   - Progress Report: January / February 2021 https://asahilinux.org/2021/03/progress-report-january-february-2021/
"
"https://news.hada.io/topic?id=4089","유명 웹사이트들이 WebGL로 핑거프린팅 하는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      유명 웹사이트들이 WebGL로 핑거프린팅 하는가?

   Alexa 기준 미국 상위 사이트들이 WebGL을 이용한 핑거프린팅을 하는지 여부를 코드와 함께 정리
   - Yes : Google, Youtube, Amazon, Yahoo, Facebook, Reddit, Ebay, Chase, Isntagram, Twitch, Intuitt
   - No : Zoom, Wikipedia, Bing, Live, MS, Netflix, Zillow, Linkedin, Espn..
   * 실재로 핑거프린팅을 하는지 여부에 대해서는 정확도에 이견이 있으니 참고해서 보세요

   - Supercookie - favicon으로 핑거프린팅하기 https://news.hada.io/topic?id=3701
   - EFF, Cover Your Tracks 새 버전 공개 https://news.hada.io/topic?id=3240
   - 애플, 개인 정보 보호 문제로 Safari 에서 16개 Web API 구현 거부 https://news.hada.io/topic?id=2360
"
"https://news.hada.io/topic?id=4110","Visual Studio 2022 프리뷰, 이번 여름에 공개 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Visual Studio 2022 프리뷰, 이번 여름에 공개 예정

   - 4Gb 메모리 제한 없는 64Bit 어플리케이션이 될 것
   ㅤ→ 32Bit 앱 개발은 계속 지원
   - 더 나은 가독성/선명도를 가지는 아이콘으로 변경
   - 새 고정폭 폰트인 Cacadia Code 적용
   - 실시간 협업 기능 Live Share 에 텍스트 채팅 추가
   - AI 기반 IntelliCode가 작업을 예측해서 코딩을 더 빠르게
   - Git/GitHub 지원 확장
   - Visual Studio for Mac을 네이티브 macOS UI로 변경

   Cacadia Code 이뻐서 한동안 썼는데, 적어도 Windows 에서는 한글 글꼴 매칭이 맑은고딕으로 되면서 고정폭을 사용하는 의미가 없어지더라고요(한영 글자폭이 달라서)
   여전히 D2Coding 이 최고...

   왜 2021이 안나오나 했는데 2022를 준비하고 있었네요 ㅋㅋ 기대됩니다.

   VS의 현재 버전은 2019 https://visualstudio.microsoft.com/ko/downloads/
   왜 지금껏 64비트버전 VS가 없었는지에 대한 글
   - https://ricomariani.medium.com/visual-studio-why-is-there-no-64-bit-ve…
"
"https://news.hada.io/topic?id=4097","ThoughtWorks Radar 24호 발간","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ThoughtWorks Radar 24호 발간

   테크닉/도구/플랫폼/개발언어 및 프레임워크 분야의 최신 트렌드들을
   Hold/Assess/Trial/Adopt 4단계로 시각화 및 설명하는게 특징
   [ 이번호 테마 ]
   - Platform Teams Drive Speed to Market
   ㅤ→ 점점 많은 회사들이 ""플랫폼 팀"" 컨셉을 도입중
   ㅤ→ 내부 플랫폼 을 만들고 지원하는 독립된 그룹을 셋업해서
   ㅤㅤ어플리케이션 개발 속도 향상, 운영 복잡성 감소, Time To Market을 개선
   ㅤ→ 플랫폼 능력(Capabilities) : 클라우드 네이티브, 지속 배포, 최신 Observablity, AuthZ/N 패턴, 서비스 메쉬등
   - Consolidated Convenience over Best in Class
   ㅤ→ 개발자 대상 도구들이 동급 최강 제품을 선택하는게 아닌 여러 도구들의 연동으로 구성
   ㅤ→ Artifact repositories, source control, CI/CD pipelines, wiki 등
   ㅤ→ 물론 Azure DevOps, GitHub 같이 많은걸 포함한 '원스톱 상점'의 매력은 부인할 수 없음
   ㅤ→ 이런 통합 툴 스택이 더 편의성을 높이고 이탈을 줄일 수 있지만, 세트로 묶은게 최고의 선택은 아닐 수 있음
   - Perennially “Too Complex to Blip”
   ㅤ→ 많은 주제들이 몇년째 TCTB 상태 : 너무 복잡해서 눈에 띄지 않음
   ㅤ→ 장단점 및 적용 가능성 등 때문에 정확한 의견을 내기 어려운 주제들
   ㅤ→ Monorepo, 분산 아키텍처 및 브랜칭 모델에 대한 오케스트레션 가이드 라인 같은..
   - Discerning the Context for Architectural Coupling
   ㅤ→ 아키텍처 커플링 컨텍스트 파악
   ㅤ→ 소프트웨어 아키텍처, 마이크로 서비스, 컴포넌트, API 게이트웨이, 통합 허브, 프론트엔드 등의 적절한 결합 수준이 계속 논의 되지만 정답이 없음
   ㅤ→ 이런 결정은 하나의 답 보다는 케이스 바이 케이스로 이루어져야 함

   각 레벨이 어떤 성격인가 PDF를 보니, PDF 에서는 Adopt 레벨이라도 뭔가 이미 유행하고 있다는 정도는 아니고 적절한 필드에는 이제 써도 된다? 뭐 그런 느낌으로 설명을 해 두었네요.

   PDF 바로가기 : https://assets.thoughtworks.com/assets/technology-radar-vol-24-en.pdf
   - ThoughtWorks가 6개월마다 발행하는 기술뉴스 - Radar Vol.21 https://news.hada.io/topic?id=974
   - ThoughtWorks Radar 22호 발간 https://news.hada.io/topic?id=2133
   - ThoughtWorks Radar 23호 발간 https://news.hada.io/topic?id=3109

   이번 104개 아이템중 긱뉴스에서 다뤘던 뉴스들을 찾아봤습니다. 총 29개네요.
   [ Techniques ]
   Adopt
   1. API expand-contract
   2. Continuous delivery for machine learning (CD4ML)
   3. Design systems : 디자인 가이드라인 / 디자인 시스템은 왜 필요한가 https://news.hada.io/topic?id=2552
   4. Platform engineering product teams
   5. Service account rotation approach
   Trial
   6. Cloud sandboxes
   7. Contextual bandits
   8. Distroless Docker images
   9. Ethical Explorer
   10. Hypothesis-driven legacy renovation
   11. Lightweight approach to RFCs
   12. Simplest possible ML
   13. SPA injection
   14. Team cognitive load
   15. Tool-managed Xcodeproj
   16. UI/BFF shared types
   Assess
   17. Bounded low-code platforms
   18. Decentralized identity
   19. Deployment drift radiator
   20. Homomorphic encryption : IBM, macOS 및 iOS용 FHE(Fully Homomorphic Encryption) 툴킷 출시 https://news.hada.io/topic?id=2219
   21. Hotwire : HTML Over The Wire https://news.hada.io/topic?id=3479
   22. Import maps for micro frontends
   23. Open Application Model (OAM) : Microsoft, OAM (Open Application Model) 공개 https://news.hada.io/topic?id=740
   24. Privacy-focused web analytics : Plausible - 셀프호스트 가능한 Google Analytics 대체제 https://news.hada.io/topic?id=2977
   25. Remote mob programming
   26. Secure multiparty computing
   Hold
   27. GitOps : GitOps 의 3가지 문제점 https://news.hada.io/topic?id=1835
   28. Layered platform teams
   29. Naive password complexity requirements
   30. Peer review equals pull request
   31. SAFe™
   32. Separate code and pipeline ownership
   33. Ticket-driven platform operating models
   [ Platforms ]
   Trial
   34. AWS Cloud Development Kit
   35. Backstage : Backstage - Spotify가 공개한 통합 개발자 포털 오픈소스 https://news.hada.io/topic?id=1746
   36. Delta Lake : 최신 데이터 인프라를 위한 새로운 아키텍처 https://news.hada.io/topic?id=3055
   37. Materialize
   38. Snowflake : Snowflake IPO S-1 분석 https://news.hada.io/topic?id=2713
   39. Variable fonts : 배리어블 폰트 https://news.hada.io/topic?id=1664 , 가변 글꼴 입문서 https://news.hada.io/topic?id=1673
   Assess
   40. Apache Pinot
   41. Bit.dev
   42. DataHub : Data Discovery Platform(DDP)의 모든 것 https://news.hada.io/topic?id=3247
   43. Feature Store
   44. JuiceFS : Redis와 S3를 이용한 분산 POSIX 파일시스템 https://news.hada.io/topic?id=3579
   45. Kafka API without Kafka : RedPanda - Kafka랑 동일한 인터페이스, 빠르고 데이터 손실없고 wasm으로 다양한 언어 지원 https://news.hada.io/topic?id=3936
   46. NATS : Liftbridge - 가볍고 Fault-Tolerant한 메시지 서버 https://news.hada.io/topic?id=2013
   47. Opstrace : SigNoz - 오픈소스 Observability 플랫폼 https://news.hada.io/topic?id=3714
   48. Pulumi : Pulumi - Infrastructure as Code https://news.hada.io/topic?id=1894
   49. Redpanda : https://news.hada.io/topic?id=3936
   Hold
   50. Azure Machine Learning
   51. Homemade infrastructure-as-code (IaC) products
   [ Tools ]
   Adopt
   52. Sentry
   Trial
   53. axe-core
   54. dbt : 데이터 모델링과 워크플로우 매니저(dbt,Airflow,Dagster,Prefect) https://news.hada.io/podcast/data_infra_4_dbt_airflow_dagster_prefect
   55. esbuild : ESBuild - Go로 만든 엄청 빠른 JS 번들러 https://news.hada.io/topic?id=1529
   56. Flipper
   57. Great Expectations
   58. k6 : 현대적인 로드 테스팅 도구 https://news.hada.io/topic?id=3279
   59. MLflow
   60. OR-Tools
   61. Playwright : microsoft/playwright 릴리즈 - 원격 브라우저 컨트롤 https://news.hada.io/topic?id=1374
   62. Prowler
   63. Pyright
   64. Redash
   65. Terratest
   66. Tuple
   67. Why Did You Render
   Assess
   68. Buildah and Podman : Docker에서 Podman으로 전환하기 https://news.hada.io/topic?id=3241
   69. GitHub Actions : GitHub Actions, 이제 CI/CD를 지원하며 공개 저장소에는 무료 https://news.hada.io/topic?id=270
   70. Graal Native Image
   71. HashiCorp Boundary
   72. imgcook
   73. Longhorn
   74. Operator Framework
   75. Recommender
   76. Remote - WSL
   77. Spectral
   78. Yelp detect-secrets
   79. Zally
   Hold
   80. AWS CodePipeline
   [ Languages & Frameworks ]
   Adopt
   81. Combine
   82. LeakCanary
   Trial
   83. Angular Testing Library
   84. AWS Data Wrangler
   85. Blazor
   86. FastAPI : API 개발용 고성능 웹 프레임워크 https://news.hada.io/topic?id=3686
   87. io-ts
   88. Kotlin Flow
   89. LitElement
   90. Next.js : Next.js 10 릴리즈 https://news.hada.io/topic?id=3103
   91. On-demand modules
   92. Streamlit : 파이썬 코드를 커스텀ML도구로 쉽게 만들기 https://news.hada.io/topic?id=1498
   93. SWR
   94. TrustKit
   Assess
   95. .NET 5 : .NET 5.0 공개 https://news.hada.io/topic?id=3181 , .NET Standard 의 미래 https://news.hada.io/topic?id=2860
   96. bUnit
   97. Dagster : 데이터 모델링과 워크플로우 매니저(dbt,Airflow,Dagster,Prefect) https://news.hada.io/podcast/data_infra_4_dbt_airflow_dagster_prefect
   98. Flutter for Web : Flutter 2.0 공개 https://news.hada.io/topic?id=3834
   99. Jotai and Zustand
   100.Kotlin Multiplatform Mobile
   101.LVGL
   102.React Hook Form
   103.River
   104.Webpack 5 Module Federation
"
"https://news.hada.io/topic?id=4032","구글 Wuffs - 안전하게 파일포맷을 다루기 위한 개발언어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   구글 Wuffs - 안전하게 파일포맷을 다루기 위한 개발언어

   - 신뢰할수 없는 파일포맷등을 다룰때 사용하는 memory-safe한 프로그래밍 언어이면서 표준 라이브러리
   - Wrangling Untrusted File Formats Safely
   ㅤ→ Wrangling은 파싱, 디코딩, 인코딩등을 포함
   - 이미지, 오디오, 비디오, 폰트 및 압축 파일 포맷 지원
   - C만큼 빠르지만, Go/Rust 수준의 안전한 소프트웨어 라이브러리를 만드는 것이 목표
   - C로 트랜스파일된 코드를 제공해서, 기존 C/C++ 프로젝트에 그대로 사용 가능
   - 범용 프로그래밍 언어는 아니며, 프로그램이 아닌 라이브러리를 개발하기 위한 언어
   ㅤ→ 즉 프로그램 전체 보다는 성능/보안이 중요한 부분만 Wuffs 로 작성
   - GIF 디코딩 벤치마크에서 gitlib(C) 보다 2배, image/gif(Go) 보다 3배, gif(Rust) 보다 7배 빠름

   zig처럼 C로 컴파일되나 보군요.
   메모리 Safe가 목적이라면 Rust에 확장 형식으로 제공해도 좋았지 않을까 싶네요.
"
"https://news.hada.io/topic?id=4065","NVidia, 고성능 ARM 서버 CPU "Grace" 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   NVidia, 고성능 ARM 서버 CPU ""Grace"" 발표

   - 차세대 Arm Neoverse 아키텍쳐 기반
   - 대규모 AI시스템용
   - 기존 NVIDIA GPU도 딥러닝에 적합하지만, 모든 작업이 GPU로만 처리는 불가능
   ㅤ→ 그중 CPU가 필요한 부분을 현재는 AMD EPYC이 채우지만, 그 부분을 대체하기 위한 용도
   ㅤ→ CPU-GPU 간 연결을 NVLink 4(900GB/sec)로 구성해서 병목현상 없이 빠르게
   ㅤ→ CPU / GPU 를 하나의 보드에서 제공 예정
   - 2023년 출시예정
   * 미국의 컴퓨터 과학자인 Grace Hopper 이름에서 따옴. 최초의 컴파일러를 개발했고, ""Bug"" 라는 개념을 만든 분. COBOL의 개발자이기도 함

   오호 호버 제독님의 이름을 따다니!!

   와우~ Grace Hopper라는 분... COBOL 개발자가 아니라 COBOL의 개발자이시군요.
   그 옛날 여성이면서 대단한 이력을 가지고 계시네요. 멋진분~ ^^b

   유나박에서 컴파일러(A-0, B-0)를 개발했고 그 이후 코볼을 완성시켰습니다. 이론적인 기반이 없을 때 그 모든 것을 해낸 것입니다. 그녀가 버그란 이름을 처음으로 명명한 것은 아니지만 마크 2에 나방이 끼어서 오작동하는 것을 보고하며 ""버그""란 개념이 유명해졌습니다.

   애플이 하고 있는대로 CPU/GPU를 묶는건 어쩔수 없는 대세인가 보네요
   - Apple M1칩은 왜 그렇게 빠를까? https://news.hada.io/topic?id=3315
   ㅤ→ 유튜브로 설명 듣기 : https://youtu.be/71LlixEBK0o
   - M1은 RISC-V의 상승을 예고한다 https://news.hada.io/topic?id=3447
   ㅤ→ 유튜브로 설명 듣기 : https://youtu.be/F5sIQZvlJc8
"
"https://news.hada.io/topic?id=4131","GTA 온라인 로딩 시간 문제, 당신에게도 발생할 수 있습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  GTA 온라인 로딩 시간 문제, 당신에게도 발생할 수 있습니다.

   https://nee.lv/2021/02/28/How-I-cut-GTA-Online-loading-times-by-70/
   한 때 커뮤니티를 달궜던 글, GTA 온라인 로딩시간 70퍼센트 감축글은 많은 화제를 불러 모았었는데요.
   요약하자면 JSON 파서에 sscanf를 쓰고 있었고, 그걸로 인해서 굉장히 비효율적으로 돌아갔기에 그거 하나 고쳐서 로딩 시간 70퍼센트를 줄였다는 글입니다. Hacker News에서는 사용자들이 '이건 웹 프로그래머가 많아서 (....) 생긴 일이다', 'C언어가 그냥 쓰래기임! ', '자본주의 탓이다..' 이라고 논쟁을 거쳤습니다. 굉장히 바보같은 코드라고 하면서요.
   그 사건 이후 한 프로그래머가 엄청 빠른, 3D 뷰어 앱을 쓰다가 이상한 점을 느끼고 위 글을 작성했습니다.

   JSON 파싱에 sscanf를 쓰는게 더 대단(?)해 보이네요...

   불가능한 건 없기 때문에(....) ㅋㅋ...
"
"https://news.hada.io/topic?id=4042","Docker Without Docker - Fly.io의 기반 기술 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Docker Without Docker - Fly.io의 기반 기술 소개

   - Fly 서비스의 기반 기술 소개
   ㅤ→ 앱서버를 사용자 근처의 피지컬 서버에 두어서 속도를 빠르게 하는 anti-클라우드 스타일의 서비스
   ㅤ→ Docker 이미지를 가져와서 Firecracker micro-VM으로 변환(transmogrify) 해서 베어메탈에서 실행
   ㅤ→ 도커이미지만 준비하면 사용자 근처의 Edge서버에서 실행해서 빠른 속도를 보장
   - OCI 이미지(실제론 그냥 tarball)와 manifest를 직접 다운
   - 자신들의 Docker Registry 를 호스팅 : 사용자가 OCI이미지를 업로드(flyctl)
   Fly를 만든 두가지 아이디어
   - Docker 이미지를 엣지서버에서 실행
   - BGP4 Anycast 를 이용한 CDN (이 부분은 차후 공개한다고)

   Fly.io 는 Y Combinator W20 배치 스타트업입니다.
   https://www.ycombinator.com/companies/fly-io

   BGP는 안전한가요? https://news.hada.io/topic?id=1932
"
"https://news.hada.io/topic?id=4081","Calendso - 오픈소스 Calendly 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Calendso - 오픈소스 Calendly 대체제

   - 팀을 위한 쉽고 투명한 회의/미팅 일정 스케줄링 도구
   - Next.js + React + Tailwind + PostgreSQL
   - 자유로운 Customization 가능 : Open API, WebHook, 테마 등
   - 구글 캘린더 기본 연동
   ㅤ→ 다른 캘린더들 연동 예정(아웃룩, 줌, Teams, Zapier, GoToMeeting)

   뭔가 미팅이 많은 비즈니스 쪽에서는 Calendly 기능이 참 좋긴 한데,
   제공하는 기능 대비 비싼 가격(사용자당 월 $8/$12)이 조금 부담스러웠는데요
   이런 오픈소스 출현은 반가운 듯 합니다.
"
"https://news.hada.io/topic?id=4019","LG전자, 휴대폰 사업 종료","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LG전자, 휴대폰 사업 종료

   - 글로벌하게 완전히 휴대폰 사업 분야에서 철수하고, 새로운 사업에 집중
   - 기존 재고 소진(7월 예상) 및 국가별 기준/법령에 의거해서 사후 서비스 제공 할 것

   휴대폰 사업을 종료할꺼면 하드웨어/소프트웨어를 모두 오픈소스로 공개하라는 청원이 올라왔군요
   https://change.org/p/…

   다른 휴대폰 회사에 매각하지도 않고 그대로 서비스만 종료하는 걸로 보이는데, 그렇다고 하면 다른 사업부에서 인력과 기술을 사용할 것 같아요. 자동차 관련 사업을 주력으로 육성하겠다는 얘기도 다른 데서 들은 적 있는 것 같거든요.
   그 와중에 굳이 오픈소스로 풀려고 하지는 않을 것 같네요.

   애증이긴 하지만, 솔직히 잘한 결정이라고 봅니다. 잘하는 것에 집중해야죠.
"
"https://news.hada.io/topic?id=4067","Awesome Web Effect - 웹페이지 효과 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Awesome Web Effect - 웹페이지 효과 모음

   - 배경 꾸미기
   - 마우스 효과
   - CSS 3D 효과
   - 이미지 효과
   - 입력 효과
   - 트랜지션 효과
   - Rain & Snow
   - 버튼 효과
   - 로딩 효과
   - 오디오 효과
   - WebCam 효과
   - SVG Animation
   - 불꽃놀이
   - 그외
"
"https://news.hada.io/topic?id=4113","Tetris-OS : 테트리스 전용 OS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Tetris-OS : 테트리스 전용 OS

   - C + Assembly 오픈소스(MIT)
   - 32-bit (x86)
   - 커스텀 부트로더
   - 사운드 블래스터 16 드라이버
   - 커스텀 음악 실행기
   - 하드코딩된 테트리스 테마
   - 320x200 픽셀, 60fps 더블버퍼링

   HN에선 이게 과연 OS인가? 그냥 OS없이 실행되는 테트리스 / 부팅 가능한 테트리스 아닌가? 하는 얘기로 싸우고는 있던데..
   - https://news.ycombinator.com/item?id=26883645
   뭐 재미난 시도인듯 합니다. 그래서 글 제목은 제작자의 단어 표현을 그대로 가져왔습니다.
   개발자의 설명 영상
   - I made an entire OS that only runs Tetris https://www.youtube.com/watch?v=FaILnmUYS_U
"
"https://news.hada.io/topic?id=4098","퇴사 부검퇴사 부검

   - 배달의민족 개발자 분이 퇴사하시면서 넷플릭스의 '부검 메일(Postmortem email)' 과 같은 형식으로 남긴 글 및 영상
   1. 왜 떠나는지
   2. 회사에서 배운 것
   3. 회사에서 아쉬운 점
   4. 앞으로의 계획
   (원래 5번엔 직원을 떠나보내는 넷플릭스의 입장을 적은 메시지가 있지만 여기선 생략 )

   3번이 없어서 좀 아쉬운 글이군요. 요즘 맛집 찾을 때도 별점 낮은 순으로 봐서 맛집인지 판단하는데. (ex. 1점. 맛은 있는데 서비스가 구려요. == 맛집)

   인프런으로 가시는군요
   https://jojoldu.tistory.com/564

   좋은 글 잘 읽었습니다.
   아마 5번엔 영화 Taken의 명대사가 들어있지 않을까요? :D
   ""I don't know who you are, but....""
"
"https://news.hada.io/topic?id=4049","uBlock Origin이 Firefox에서 가장 잘 동작하는 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 uBlock Origin이 Firefox에서 가장 잘 동작하는 이유

   - CNAME-uncloacking 지원
   - 브라우저가 파싱 하기전 부터 HTML 필터링 가능
   - 브라우저 시작시 FF는 이미 열린 탭에서 네트워크 요청 시작되기전에 uBO가 동작하는 걸 기다림
   - 기본으로 비활성화되는 Pre-fetching이 안정적으로 방지됨(크롬은 비활성화 여부 결정시 웹사이트에 우선권을 부여)
   - FF버전 uBO는 핵심 필터링 코드에 WebAssembly 를 사용. 이경우 크롬은 확장 manifest에 추가권한이 필요
   - uBO는 저장할 때 IndexedDB 와 LZ4 압축을 이용하는데, 크롬의 Incognito 모드에서는 IndexedDB가 문제 있음
"
"https://news.hada.io/topic?id=4096","7년간의 오픈소스 DB 개발에서 배운 것 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         7년간의 오픈소스 DB 개발에서 배운 것

   - SQLite 기반의 가벼운 분산 데이터베이스인 rqlite 개발자의 회고
   ㅤ→ 처음엔 재미 삼아 RAFT로 SQLite를 분산 복제하려는 시도에서 출발
   - 가능하면 작게, 기능 하나씩 개발 할 것
   - 명확한 중간 산출물 없이 큰 코드 재작성은 피할 것
   - 창의성은 불규칙하고 예측할 수 없음
   - 코드의 품질을 높인 건 광범위한 테스트 커버리지
   ㅤ→ 실제 코드에 최대한 가깝게 테스트 케이스를 작성할 것
   ㅤ→ 스모크 테스트에 대한 통합 테스트를 반드시 유지할 것
   ㅤ→ 유닛 테스트가 핵심. 유닛 테스트 수준에서 훌륭한 커버리지가 없다면 소프트웨어는 결코 고품질이 될 수 없음
   - Go 는 7년 동안 충분히 생산적이었고 계속 즐기고 있음.
   - 홍보는 어려움. GitHub에서 8000개의 Star를 얻는데 7년이 걸렸음.
   - 프로그래밍은 치유(therapeutic)
   ㅤ→ 내 직업은 프로그래머를 관리하는 것(구글의 엔지니어링 매니저)이고, 흥미롭지만 직접 코딩 하는 것과는 다름
   ㅤ→ 팀 활동으로서의 프로그래밍은 코딩 스타일, 버그 해결 정책, 코드 리뷰, 기능 우선순위 결정 등의 활동을 필요로 함. 팀 단위의 소프트웨어 구축에는 많은 비코딩 활동이 필요.
   ㅤ→ 내 프로젝트에서는 자유로움. 코딩 스타일을 내가 정하고, 기능도 내가 정함. 어떤 버그를 고칠지 내가 결정하고, 미팅에도 갈 필요 없음.
   - 7년을 개발했지만 아직도 할 일은 많음
   ㅤ→ ""it's done"" 까지는 절대 가지 못할 것이라고 생각
   ㅤ→ 노병들이 그랬던 것처럼, ""다만 사라질 뿐"" ( ""Old soldiers never die, they simply fade away"" 에서 )

   rqlite - SQLite 기반의 가벼운 분산 데이터베이스 https://news.hada.io/topic?id=3636
"
"https://news.hada.io/topic?id=4116","Figma, 온라인 화이트보드 FigJam 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Figma, 온라인 화이트보드 FigJam 공개

   - 온라인 협업이 가능한 실시간 칠판
   ㅤ→ 노트 작성 및 Emoji 리액션 : 아이디어 브레인 스토밍
   ㅤ→ 다이어그램 실시간 편집 : 사용자 플로우, 조직도, 프로세스 디자인
   ㅤ→ 스탠드업 미팅, 회고 등의 피드백 수집
   - Figma 디자인과 바로 연결 및 붙여넣기 가능
   - 경쟁 제품인 Miro 와 비슷
   - 올해는 무료 베타, 2022년부터는 유료화 예정(에디터만, 뷰어는 무료)

   Figma 는 곧 클럽하우스가 사용하는 Agora 를 이용해서 음성대화 기능도 추가 예정이라고
   - https://twitter.com/figmadesign/status/1384905795947618305
"
"https://news.hada.io/topic?id=4050","streaming API를 사용한 네이버페이의 대형 XLSX 파일 다운로드 구현","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              streaming API를 사용한 네이버페이의 대형 XLSX 파일 다운로드 구현

   - JavaScript로 XLSX 파일 생성하기
   ㅤ→ ExcelJS 를 선택 : XLSX 스트리밍 지원, 서식 제공, row 한개씩 메모리에서 flush 가능
   - Java POI vs. ExcelJS
   - Tomcat에서 Node.js로 데이터 주기 : spring-webflux 를 이용, Node.js로 row 한 개씩 streaming
   - POI를 ExcelJS로 교체하며 발생했던 이슈

   아니, 원문의 댓글에 mysql 기준으로 설명해주신 분이 있네요!! (등잔밑이 어둡다... ㅠㅠ)

   양을 알 수 없는 큰 데이터인데 db에서는 그냥 페이징(offset과 limit 같은 거겠죠?) 없이 select * 해버리고 프로듀서 쓰레드를 재웠다 깨웠다 하면서 데이터를 읽는다는 게 멋져보이면서도 그게 되나? 하는 생각이...
   이 부분을 잘 알고 싶은데 대량 데이터를 읽으려면 대부분 페이징을 하라는 자료만... ^^;

   관리도구에서 엑셀파일 내려받기 기능은 종종 이용하는 기능인데, ExcelJS 를 이용한 예처럼 누르자마자 다운로드가 시작되는건 사용자 경험에 정말 중요할 듯
"
"https://news.hada.io/topic?id=4135","Protomaps - OpenStreetMap 으로 나만의 지도시스템 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Protomaps - OpenStreetMap 으로 나만의 지도시스템 만들기

   - OSM 지도를 커스텀해서 직접 S3등을 이용해 서버리스 호스팅
   - Protomaps + PMTiles + OSM Express
   ㅤ→ Protomaps.js : 2D Canvas 기반 오픈소스 벡터 지도 렌더러
   ㅤ→ PMTiles : 지도 타일의 서버리스용 포맷 (S3 및 CDN에 적합)
   ㅤ→ OSM Express : 빠른 OSM 저장 포맷
   - 특정지역의 OSM 지도 데이터를 PMTiles 포맷으로 다운로드 가능
   - Leaflet.js 연동

   지도 서비스가 특정 단계 이상에서는 비용이 많이 들어서 OSM도입을 많이 하긴 하는데요.
   백엔드 구성자체가 복잡해서 그걸 더 쉽게 개선한거네요. 흥미로운 시도인듯 합니다.
   - Geospatial 웹서비스를 만들때 추천하는 도구들 모음 https://news.hada.io/topic?id=674
   - Switch2OSM - OpenStreetMap 전환 가이드 https://news.hada.io/topic?id=1066
"
"https://news.hada.io/topic?id=4074","구글 Logica, 오픈소스 로직 프로그래밍 언어 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     구글 Logica, 오픈소스 로직 프로그래밍 언어 발표

   - Logic + Aggregation
   - 데이터 처리를 위한 선언형 로직 언어 (Datalog 와 비슷)
   - 엔지니어/데이터 사이언티스트들이 쿼리 작성시 로직 프로그래밍 문법을 적용가능
   - SQL로 컴파일되고, Google BigQuery에서 실행됨
   ㅤ→ Postgres 와 SQLite도 실험적으로 지원
   - Yedalog의 후계자
"
"https://news.hada.io/topic?id=4122","Semgrep - 오픈소스 정적 코드 분석 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Semgrep - 오픈소스 정적 코드 분석 도구

   - 런타임 에러,로직 버그,보안 취약점 등의 분석 및 코딩 스탠다드 적용 도구
   ㅤ→ 오픈소스 커뮤니티가 만든 1000개 이상의 룰을 이용
   - Go, Java, JavaScript, TypeScript, JSON, Python, Ruby 공식 지원
   ㅤ→ C, PHP, C#, Kotlin, Lua, R, Rust 등은 알파/실험 단계
   - CLI로 로컬에서 실행
   - CI 연동 지원(GitHub,CircleCI,Jenkins..)
   ㅤ→ 브라우저에서 확인 가능한 Playground 제공
   * 페이스북이 2009년에 만들었던 정적 분석 도구인 pfff 를 발전 시킨 것
"
"https://news.hada.io/topic?id=4145","데이터센터는 어떻게 돈을 벌까 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           데이터센터는 어떻게 돈을 벌까 ?

   - 자가용 데이터센터와 코로케이션 데이터센터
   - 코로케이션 데이터센터의 핵심은 '상호연결'
   ㅤ→ 세계 1위 에퀴닉스(리테일)와 2위 디지털리얼티(홀세일)
   ㅤ→ 네이버,아마존,구글도 모두 에퀴닉스의 고객
   ㅤ→ 공간 임대 매출 80%, 상호연결 매출 20% : 궁극적으로는 상호연결을 위한 공간제공이 되는 것
   - 글로벌 데이터센터 시장규모는 2021~25년에 5139억달러 성장 예상 (연평균 성장률 21%)
"
"https://news.hada.io/topic?id=4119","WSL2에서 초기 미리 보기 단계의 GUI 앱 지원이 사용 가능합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                WSL2에서 초기 미리 보기 단계의 GUI 앱 지원이 사용 가능합니다.

   WSL2에서 이제 미리보기 버전의 GUI 앱 지원이 사용가능해졌습니다. 'ㅁ '
   지원 팀은 아래와 같은 사용예를 제시했습니다.
   - 리눅스 프로젝트들을 개발할 IDE 사용
   - 리눅스만 지원하는 에플리케이션이나, 리눅스에만 등장하는 사용예에 대한 테스트
   - 오디오나 마이크를 사용하는 어플리케이션을 빌드, 테스트, 사용하기
   - 보너스 : WSL의 GPU 엑세스를 활용해 3D 가속 기능을 갖춘 Linux 응용 프로그램 실행.
   아직 위 기능은 Windows 10, 참가자 미리보기 빌드 21364 이상에서만 실행 가능합니다.

   와....

   저거 떄문에 Windows Insider까지 기웃거리고 있습니다. ㅋㅋㅋㅋ

   Windows가 데스크톱 개발에선 최고의 개발 플렛폼이 되어가고 있네요. 모바일은 iOS 빌드 때문에.. 옆동네에 들러야 한다는 게 단점이지만... OTL
   Driven by Develop! MS의 개발자에 대한 행보는 정말 보기 좋은 것 같아요. 'ㅁ ' 앞으로도 힘냈으면 좋겠습니다.

   모바일 빌드는 클라우드 CI가 잘 해주지 않을까요 ㅎㅎ
   저도 MS 응원합니다.
"
"https://news.hada.io/topic?id=4054","vgpu_unlock - NVIDIA 일반 그래픽 카드에 vGPU 기능 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              vgpu_unlock - NVIDIA 일반 그래픽 카드에 vGPU 기능 사용하기

   - NVIDIA Tesla GPU 에서만 지원되는 vGPU 기능을 Geforce 및 Quadro GPU에서 지원하도록 열어주는 코드
   ㅤ→ 실제로는 같은 칩이지만, 소프트웨어 제한만 되어있는데 이걸 해제
   ㅤ→ PCI Vendor ID를 바꿔서 속이는 방식
   - Python3 + frida + dkms + NVidia GRID vGPU 드라이버 필요
   - 지원하는 그래픽 카드와 대체되는 Tesla 카드 모델
   ㅤ→ TITAN X/XP, GTX 1080 Ti, Quadro P6000 = Tesla P40
   ㅤ→ GTX 1080/1070/1070 Ti/1060 6GB/1060 3GB , Quadro P5000 = Tesla P4
   ㅤ→ TITAN RTX, RTX 2080 Ti, Quadro RTX 6000
   ㅤ→ RTX 2080 Super/2080/2070 Super/2080 Rev. A/2060, Quadro RTX 5000/4000 = Tesla T4
   ㅤ→ RTX 3090/3080 Ti/3080, RTX A40
   ㅤ→ 해당 코드 : https://github.com/DualCoder/vgpu_unlock/…

   오 재미있네요.
   약관 위반이긴하겠지만 ㅎ
"
"https://news.hada.io/topic?id=4095","Microsoft의 Rust 기초 가이드 [한국어]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Microsoft의 Rust 기초 가이드 [한국어]

   - 약 5시간 분량의 러스트 언어 초급 학습 가이드
   #1 Rust 시작 : 필요한 도구 설치
   #2 기본 개념
   #3 오류 처리 방법
   #4 메모리 관리 방식 이해
   #5 제네릭 형식 및 특성(Traits) 구현하기
   #6 모듈, 패키지, 제3자 Crate 탐색
   #7 자동화된 테스트 작성
   #8 CLI로 To-Do 프로그램 작성하기

   - Rust 프로그래밍 언어 [한국어판] https://news.hada.io/topic?id=1152
   - Rust - 높은 성능와 신뢰를 확보하기 위한 언어 '러스트의 멋짐을 모르는 당신은 불쌍해요' https://news.hada.io/topic?id=991
   - Python을 Rust로 변환하며 Rust배우기 https://news.hada.io/topic?id=2563
   - 자바 개발자를 위한 Rust https://news.hada.io/topic?id=2865
   - Node 개발자를 위한 Rust 가이드 https://news.hada.io/topic?id=2338
   - 30분만에 Rust 배우기 https://news.hada.io/topic?id=1620
   - Tour of Rust - 단계별로 배우는 Rust 가이드 https://news.hada.io/topic?id=2439
   - Rustlings - 버그 수정하며 Rust 언어 배우기 https://news.hada.io/topic?id=3739
   - 위험한 방법으로 Rust 배우기 https://news.hada.io/topic?id=1138
   - 소형 마크다운 컴파일러 제작하며 Rust배우기 https://news.hada.io/topic?id=2102

   MS가 이런걸 만들다니??

   러스트가 뜨긴 뜨려나봐요.

   이번 년도에는 과연 Move Loved 언어 뿐만 아니라 사용권도 가시적인 범위로 들어올 수 있을지... 🙏

   다양한 가이드 들이 있어서 한번씩 보면 재밋을 내용이 많이 있네요! 😀

   오 hello world 찍어 봐야겠네요 ㅋ

   이 First steps with 시리즈는 Go 랑 C#도 있습니다
   - Go : https://docs.microsoft.com/ko-kr/learn/paths/go-first-steps/
   - C# : https://docs.microsoft.com/ko-kr/learn/paths/csharp-first-steps/
"
"https://news.hada.io/topic?id=4085","구글 FLoC에서 내 웹사이트 제외 시키기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        구글 FLoC에서 내 웹사이트 제외 시키기

   - 서버측에서 FLoC 기능을 막는 헤더를 추가하는 설정들
   ㅤ→ Permissions-Policy: interest-cohort=()
   - NGINX, Apache, Caddy, Traefik, Lighttpd
   - Netlify, GitHub Pages, GitLab Pages, Cloudflare Workers
   - WordPress

   - FLoC, 관심기반 광고를 위한 써드파티 쿠키 대체제 https://news.hada.io/topic?id=3639
   - Brave 브라우저, 구글 FLoC 기능을 차단 https://news.hada.io/topic?id=4053
   - Am I FloCed ? https://news.hada.io/topic?id=4079
   - Google’s FLoC Is a Terrible Idea https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
"
"https://news.hada.io/topic?id=4129","고양이와 함께 쓰는 무드 다이어리 무드냥","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         고양이와 함께 쓰는 무드 다이어리 무드냥

   안녕하세요!
   고양이와 함께 쓰는 무드 다이어리라는 컨셉의 어플리케이션인 무드냥을 앱 스토어에 출시했습니다.
   https://apps.apple.com/us/app/무드냥/id1540489041
   무드냥은 간단한 감정 기록으로 일기 작성이 가능하고, 앱을 켤 때마다 귀여운 고양이가 시간대에 맞게 인사를 건냅니다.
   다크모드를 지원하며, 기본 제공되는 단색 배경이나 디자이너분이 직접 찍은 필름 사진을 배경으로 사용하실 수도 있습니다.
   사용해보시고 over.the.ocean.apps@gmail.com으로 피드백 주시면 최대한 반영하도록 노력하겠습니다.
   감사합니다.
   -----
   프로모션 코드는 사용 후 댓글 남겨주시기 바랍니다.
   사용해보시고 좋았다면 앱 스토어 별점 5개 부탁드립니다 :)
   XMN499YPWMRR
   LXMFRAWPWEA7
   FFTA7A94TY6Y
   HWT44KHEKKYW
   9ME3ARLHTPFE
   H4JA33KL4X4F
   4E37RN79YYH7
   F9PLMA3PNJJ3
   MRWR39MNEPJR
   YKX3TP9MF7J4
   3NA7FLMFEAYR
   7TYEMJKHLM9L
   4AE6YAXKA3PL
   RRE9MEH9YN7J
   6HHJRFHYFTE3
   KMHTTLPM6KAP
   7X3FKYRMP4XE
   RKJELHJJ3YLF
   RRE6P4RMM6RN
   4K3W94KJ79NT

   4AE6YAXKA3PL 사용했습니다.
   감사합니다.

   6HHJRFHYFTE3 사용했습니다 감사합니다!

   https://disquiet.io/
   여기에도 무드냥 공유해보세요~

   추천 감사합니다 ㅎㅎ

   RKJELHJJ3YLF 사용했습니다! 감사히 쓰겠습니다!

   H4JA33KL4X4F 사용하려다 실패하고 (이미 사용된 코드)
   4E37RN79YYH7 사용하였습니다.
   감사합니다~

   귀엽네요! 아, 저는 안드로이드라 웁니다ㅠㅠ

   ㅠㅠ 감사합니다!

   우아 인디개발자세요?? 개발 후기도 좀 올려주세요

   직장인 개발잔데 취미로 앱을 만들고 있습니다 ㅎㅎ 공유할만한 내용이 있다면 올리도록 하겠습니다

   RRE6P4RMM6RN 사용하였습니다. 감사합니다.

   고양이가 짱 귀엽네여. 'ㅁ '👍

   감사합니다 ㅎㅎ
"
"https://news.hada.io/topic?id=4105","지속 성장 가능한 소프트웨어를 만들어가는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       지속 성장 가능한 소프트웨어를 만들어가는 방법

   - 많은 회사와 시스템이 차세대라는 명목의 개발을 수없이 진행
   ㅤ→ 이것이 많은 낭비를 일으킨다 생각
   - 지속 성장 가능한 소프트웨어를 위해 얘기해볼 핵심 주제 3가지
   ㅤ→ #1 비즈니스 로직의 의미와 코드로 어떻게 표현하는지
   ㅤ→ #2 소프트웨어의 레이어를 어떻게 관리하고 만들어나가고 있는지
   ㅤ→ #3 어떤 관점으로 모듈화를 진행하고 어떤 방식으로 모듈을 확장시켜나가는지

   좋은 글 감사합니다.

   우와.. 제 글이 긱뉴스에 걸리다니!!🤭

   감사합니다 ㅎ

   읽어 주셔서 감사합니다~

   좋은글 감사합니다! 👍

   읽어 주셔서 감사합니다~
"
"https://news.hada.io/topic?id=4075","Waterfaller - 웹사이트의 느린 부분 찾아서 빠르게 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Waterfaller - 웹사이트의 느린 부분 찾아서 빠르게 하기

   - 구글 Pagespeed Insights와 비슷
   ㅤ→ 같은 정보를 사용하지만, 가장 중요한 문제를 확인하기 위한 전문가 분석 알고리즘을 추가
   - 전체 페이지 로딩을 시각화
   ㅤ→ Core Web Vitals 확인하고 빠르게 만드는 것을 목표
   ㅤ→ 각 항목당 정보 및 느린 속도에 대한 해결책들을 제시

   심플하니 좋아요
"
"https://news.hada.io/topic?id=4029","구글, 재무시스템을 Oracle에서 SAP으로 대체 할 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    구글, 재무시스템을 Oracle에서 SAP으로 대체 할 것

   - 구글의 모회사인 알파벳이 다음 몇주에 걸쳐서 오라클에서 SAP S/4HANA로 이전할 예정
   - 두 회사는 클라우드 시장에서 경쟁이 거세지고 있고, 몇년간 구글 클라우드에서 사용할 DB 인증을 오라클이 거부했음
   ㅤ→ 래리 엘리슨 회장이 2018년에 ""우리는 구글과 경쟁할 것이기 때문에 구글과 협력하지 않음"" 이라고 말한바 있음
   ㅤ→ 2020년에 구글은 오라클DB를 베어메탈 에서 돌릴수 있는 방식을 제공
   - 구글이 승소한 Java API 관련 소송과는 관련이 없어 보임
   - 발표후 오라클 주가는 살짝 떨어지고, SAP 주가는 4.8% 상승
"
"https://news.hada.io/topic?id=4107","애플, M1칩 iPad Pro 발표 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          애플, M1칩 iPad Pro 발표

   - M1 (8코어 CPU/GPU, 16코어 뉴럴엔진)
   - 120hz 11/12.9인치(XDR) 미니LED,
   - 5G 셀룰러 : Nano-SIM & eSIM, mmWave(미국 모델)
   - 후면 카메라 : 12MP ƒ/1.8 와이드, 10MP ƒ/2.4 울트라 와이드, LiDAR
   - 전면 카메라 : 12MP ƒ/2.4 TrueDepth, FaceID
   - Thunderbolt 및 USB 4 지원
   - Wi-Fi 6
   - 최대 16G 메모리, 2TB 용량
   - 스튜디오급 5마이크 어레이
   - 4 스피커 (Dolby Atmos)
   - 애플펜슬 2세대
"
"https://news.hada.io/topic?id=4038","Ory - 오픈소스 Identity 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Ory - 오픈소스 Identity 플랫폼

   여러개의 오픈소스 프로젝트로 계정/권한/로그인 등을 통합 관리 가능
   - Hydra : OAuth 2.0 과 OpenID Connect 서버
   - Keto : 롤,권한,퍼미션 관리, 구글 글로벌 권한 시스템인 Zanzibar의 오픈소스 구현체
   - Kratos : 클라우드 기반 사용자 관리 시스템. 사용자 등록/로그인/MFA 등을 몇줄의 코드로 구현
   - Oathkeeper : BeyondCorp/Zero Trust Identity and Access Proxy(IAP), 모든 HTTP Request에 대한 인증/권한 관리
   * 모두 Go 기반 오픈소스

   Zanzibar - 구글의 Consistent 글로벌 권한 시스템 https://news.hada.io/topic?id=171
"
"https://news.hada.io/topic?id=4123","DbGate - 오픈소스 크로스플랫폼 (no)SQL DB 클라이언트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 DbGate - 오픈소스 크로스플랫폼 (no)SQL DB 클라이언트

   - Svelte + Electron
   - 윈/리눅스/맥 및 웹브라우저 에서 동작
   - MySQL/PostgreSQL/SQL Server/MongoDB 연결
   ㅤ→ 동시 다중 연결, SSH 터널 지원
   - 그리드 형태의 데이터 브라우저 & 에디터
   ㅤ→ FK 마스터/디테일 뷰, FK 룩업
   ㅤ→ 원클릭 Group By
   ㅤ→ 배치 편집 가능(매크로)
   - 쿼리 에디터 & SQL 생성기
   ㅤ→ 문법 강조 및 코드 자동완성
   ㅤ→ Join 마법사
   ㅤ→ 현재 DB에서 SQL 자동 생성 (Create/Drop/Insert/Truncate..)
   - CSV/Excel/JSON Export & Import
   ㅤ→ 플러그인으로 포맷 확장 가능
   ㅤ→ JavaScript 로 스크립팅 지원
   ㅤ→ DB간 테이블 복사 지원
   - native MongoDB 드라이버 지원
   ㅤ→ 컬렉션 데이터, JSON 보기..
   ㅤ→ MongoDB API 를 이용한 쿼리 지원
   - NPM 형태의 플러그인 아키텍쳐

   저는 DBeaver + Mongodb Compass 를 사용하는데요,
   DbGate 도 오라클이 안된다는 것을 제외하면 MySQL, PostgreSQL, MongoDB 까지 되니 좋아보이네요.
   MongoDB 사용 UX 도 괜찮아 보이고...
   일단 여러가지 오픈소스 도구 써본 것 중에 최근에는 DBeaver 가 가장 느낌이 좋았는데, DbGate 도 한 번 써보겠습니다.

   mongodb compass 에 비하면 반응 속도가 빨라서 좋고 bastion 서버 설정도 가능해서 편하네요.
   다만 인증 디비 지정 옵션이 빠져있는게 살짝 아쉽고
   상세 데이터 보기 시에 줄바꿈이 자동으로 안되는게 아쉽네요 (몽고디비만 써봤습니다)
"
"https://news.hada.io/topic?id=4144","Opyrator - 파이썬 함수를 Microservice로 쉽게 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Opyrator - 파이썬 함수를 Microservice로 쉽게 만들기

   - 파이썬 함수 코드를 프로덕션에서 사용 가능한 마이크로서비스로 만들어주는 오픈소스
   - FastAPI + Streamlit + Pydantic
   ㅤ→ FastAPI 로 HTTP API 자동 생성
   ㅤ→ StreamLit 로 인터랙티브 Web UI 자동 생성
   ㅤ→ 포터블/공유 가능한 실행파일 또는 도커이미지로 변환
   ㅤ→ 기존 컴포넌트 재사용 및 다른 Opyrator와 통합 가능
   - Pre-defined 컴포넌트들 (코드 및 UI 재사용 가능)
   ㅤ→ Text Generation
   ㅤ→ Question Answering
   ㅤ→ Image Super Resolution
   ㅤ→ Text Preprocessing
   ㅤ→ Language Detection
   ㅤ→ Audio separation
   ㅤ→ Word Vectors Training
   ㅤ→ Named Entity Recognition

   FastAPI 와 Streamlit 둘 다 소개했던 오픈소스들인데 이걸 묶어서 쓸만한 도구를 만들었네요.
   - FastAPI - API 개발용 고성능 웹 프레임워크 https://news.hada.io/topic?id=3686
   - Streamlit - 파이썬 코드를 커스텀ML도구로 쉽게 만들기 https://news.hada.io/topic?id=1498
"
"https://news.hada.io/topic?id=4069","1Password Secrets Automation 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    1Password Secrets Automation 발표

   - 회사내 인프라에 대한 Secret들을 보안/관리/자동화 하는 솔루션
   ㅤ→ 암호, 토큰, 키..
   - 1Password에 저장하고 앱/클라우드 서버 등에서 REST API로 접근
   ㅤ→ 1Password Connect Server 가 중간 API를 제공 (Docker/k8s로 자신의 인프라에 설치)
   ㅤ→ HashiCorp Vault, Terraform, Kubernetes, Ansible 과 연동
   ㅤ→ Go/Node.JS/Python 등에서 접근하기 위한 코드 제공
   ㅤ→ 접근 권한을 세밀하게 제어
"
"https://news.hada.io/topic?id=4040","Apple, "나의 찾기" 앱에서 서드파티 기기 지원 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Apple, ""나의 찾기"" 앱에서 서드파티 기기 지원 시작

   - 애플의 나의 찾기 네트워크 를 활용해서, 다른 회사의 기기들도 찾고 추적하는 것을 지원
   ㅤ→ Belkin의 SOUNDFORM 무선 이어폰
   ㅤ→ VanMoof의 S3 및 X3 전기 자전거
   ㅤ→ Chipolo의 ONE Spot 태그 (열쇠고리 가방에 붙이는)
   - MFi(Made for iPhone)에도 나의 찾기 네트워크 악세사리 프로그램 추가
   - 스펙 초안을 공개해서 U1 장착 Apple 기기에서 지원되는 UWB(Ultra Wideband) 기술 활용 가능
"
"https://news.hada.io/topic?id=4033","C++20의 주요 기능들 - 예제와 함께 정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       C++20의 주요 기능들 - 예제와 함께 정리

   - Concepts
   - Modules
   - Coroutines
   - Three-way comparison
   - Lambda expressions
   - Constant expressions
   - Aggregates
   - Non-type template parameters
   - Structured bindings
   - Range-based for loop
   - Attributes : [[likely]] , [[unlikely]] , [[no_unique_address]] , [[nodiscard]]
   - Character encoding : char8_t
   - Sugar
   - constinit
   - Signed integers are two’s complement
   - __VA_OPT__ for variadic macros
   - Explicitly defaulted functions with different exception specifications
   - Destroying operator delete
   - Conditionally explicit constructors
   - Feature-test macros
   - Known-to-unknown bound array conversions
   - Implicit move for more local objects and rvalue references
   - Conversion from T* to bool is narrowing
   - Deprecate some uses of volatile
   - Deprecate comma operator in subscripts

   C++11, 14, 17, 20... 3년마다 정말 꾸준히 나오고 있네요. 특히 이번에 들어간 모듈 시스템이 부디 널리 퍼져 링킹 스트레스를 엄청 줄여줬으면 하는 마음이...

   Concepts / Contracts / Ranges/ Module, Coroutines 등의 주요 기능들은 C++20 Key Features Summary [한글 발표자료] 를 참고하세요
   - https://www.slideshare.net/utilforever/c20-key-features-summary
"
"https://news.hada.io/topic?id=4034","AWS의 ARM칩 Graviton2 사용 1주년 회고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     AWS의 ARM칩 Graviton2 사용 1주년 회고

   - Honeycomb이 도입하고 바로 가격-성능비 30% 증가
   - Go 코드베이스여서 코드 변경 거의 없이 CI 파이프라인 변경만으로 가능했음
   - m6g 와 c6g 인스턴스가 출시되면서 c5 대비 40% 이상 비용을 절감
   - 현재 92%의 vCPU가 ARM64 기반
   - 프로덕션이 ARM64로 배포되었기 때문에 개발팀 로컬테스트에 M1 맥으로 전환도 쉬웠음
   - Graviton2를 꼭 써보길 추천

   Graviton2를 써보라는 건 어떻게 받아들이면 되려나요? 가상머신 선택옵션에서 이걸 선택해보라는 말이려나요?

   코드베이스가 이쪽으로 갈수 있는 경우라면 한번 시도해보라는듯 합니다.

   아~ 감이 옵니다. 감사합니다.
"
"https://news.hada.io/topic?id=4071","Facebook은 중소기업에 적합합니까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Facebook은 중소기업에 적합합니까?

   Facebook 광고가 중소기업의 성과를 향상 시켰다는 증거가 있습니까?
"
"https://news.hada.io/topic?id=4025","구글, 가을에 나올 Pixel 6에 자체 칩 사용할 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     구글, 가을에 나올 Pixel 6에 자체 칩 사용할 것

   - 코드명 Whitechapel(GS101, Google Silicon?)로 알려진 자체 SoC(System on Chip)을 올 가을에 공개할 예정
   - Pixel 6 스마트폰 및 크롬북용으로 사용하게 될 것
   - 9to5가 본 문서상으로는, 삼성 Exynos와 연관되어 있어서 아마도 삼성 SLSI 부서와 같이 개발중인 것으로 추측됨
   ㅤ→ Exynos 와 소프트웨어 컴포넌트 포함해서 일부를 공유할 것 같음
   - Whitechapel 을 이용한 ""Slider"" 플랫폼 기반으로 ""Raven"" 과 ""Oriole"" 폰이 개발중
"
"https://news.hada.io/topic?id=4109","Node.js v16 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Node.js v16 릴리즈

   - Apple Silicon 지원
   ㅤ→ 인텔/ARM을 다 포함한 멀티 아키텍처 바이너리로 배포
   - Stable Timers Promises API
   - Web Crypto API 실험적 구현
   - V8 9.0 적용
   ㅤ→ RegExp Match Indices 이용 가능
   ㅤ→ super의 property들 접근 속도 개선
   ㅤ→ JS-to-wasm 속도 개선

   - Node.js v15 릴리즈 https://news.hada.io/topic?id=3079
"
"https://news.hada.io/topic?id=4046","참을성 없는 개발자를 위한 JavaScript [e북] 2021 에디션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                참을성 없는 개발자를 위한 JavaScript [e북] 2021 에디션

   - ES6 이후의 새로운 JS 기능들 소개 챕터 추가
   - ES2021 피쳐 추가
   ㅤ→ String.prototype.replaceAll()
   ㅤ→ Promise.any()
   ㅤ→ Logical assignment operators
   ㅤ→ Underscores (_)
   - 모든 실습들이 Node.js 에서 Native ESM 모듈로 실행(이전엔 esm 패키지 이용)

   참을성 없는 개발자를 위한 JavaScript [영문 무료 e북] - https://news.hada.io/topic?id=2380
"
"https://news.hada.io/topic?id=4053","Brave 브라우저, 구글 FLoC 기능을 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Brave 브라우저, 구글 FLoC 기능을 차단

   - FLoC : 로컬에서 관심사 기반 코호트를 생성하여, 광고 회사들이 각 코호트에 맞는 광고를 보여주는 방법
   - 크롬에서 Orgin Trial로 제공중인 FLoC기능들을 원천 차단
   ㅤ→ 클라이언트단에서의 Cohort 판별 서비스 비활성화
   ㅤ→ 구글 또는 다른 서버들에 FLoC 코호트 결정값 전송 차단
   ㅤ→ FLoC 관련 JS 메소드들 차단 (document.interestCohort 등)
   ㅤ→ FLoC 퍼미션 UI 차단 (interest-cohort)

   FLoC 는 보통 광고의 뒤쪽 서버단에서 하던 사용자 클러스터링을 로컬에서 브라우징 액티비티 기반으로 하는 기법입니다.
   그걸 숫자로 구분된 코호트 값으로 만들고 나서, 웹사이트에서 그 코호트 값을 읽어낸 뒤 방문한 사용자에게 코호트에 맞는 광고를 보여주게 됩니다.
   완전 개인화 된다기 보다는 어떤 사이트들을 주로 방문하는 지에 따라서 그룹화 되기 때문에 개인정보 보호에 더 효과적이라고 (구글은) 홍보 하고 있습니다.
   - FLoC, 관심기반 광고를 위한 써드파티 쿠키 대체제 https://news.hada.io/topic?id=3639
   - What is Federated Learning of Cohorts (FLoC)? https://web.dev/floc/
"
"https://news.hada.io/topic?id=4023","GitHub 프라이빗 페이지 버그 바운티로 35,000달러 벌기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  GitHub 프라이빗 페이지 버그 바운티로 35,000달러 벌기

   고3 학생이 Covid로 시간이 남자 버그 바운티 사냥을 해서 GitHub의 pirvate 페이지의 버그바운티로 35,000달러는 받은 이야기.

   GitHub의 pirvate 페이지의 버그 바운티로 보고했고 두가지 CTF 보너스가 있었다.
   * 10,000달러: 사용자 인터랙션 없이 `flag.private-org.github.io` 에서 플래그를 읽는다. `private-org` 조직 밖에 있는 계정에서 이 플래그를 읽을 수 있으면 5천 달러의 추가 버너스가 있다.
   * 5,000달러: 사용자 인터랙션을 통해 `flag.private-org.github.io`에서 플래그를 읽는다.
   # 인증 흐름
   GitHub pages는 별도의 도메인 `github.io`으로 호스팅되므로 `github.com`의 인증 쿠키는 private pages 서버로 보내지지 않는다. 그러므로 private 페이지 인증은 `github.com`과 추가적인 통합 없이는 사용자의 신원을 알아낼 수 없다. 그러므로 GitHub은 커스텀 인증 흐름을 만들었다.
   * private 페이지에 방문했을 때 서버는 `__Host-gh_pages_token` 쿠키의 존재를 검사한다.
   * 쿠키가 없거나 올바르지 않으면 private page 서버는 `https://github.com/login`으로 리다이렉트 할 것이다.
   * 이 다이렉트는 `__Host-gh_pages_session` 쿠키에 nonce도 설정한다.
   * 이 쿠키는 __Host- 쿠키 접두사를 사용하므로 호스트 도메인이 아닌 곳에서 JavaScript로 설정하는 것을 막는다.
   * `/login` 은 `/pages/auth?nonce=&page_id=&path=`로 리다이렉트한다.
   * 여기서는 `token` 파라미터에서 `https://pages-auth.github.com/redirect`로 전달하는 임시 인증 쿠키를 생성한다.
   * `/redirect`는 `https://repo.org.github.io/__/auth`로 포워드한다.
   * 이 최종 엔드포인트는 `repo.org.github.io` 도메인에서 인증 쿠키인 `__Host-gh_pages_token`와 `__Host-gh_pages_id`를 설정한다.
   * 여기서 이전에 설정한 `__Host-gh_pages_session`의 `nonce`도 검사한다.
   오리지널 요청 경로와 페이지 ID는 쿼리 파라미터 `path`, `page_id`에 각각 저장되고 nonce도 `nonce` 파라미터에 저장된다.
   # 악용
   ## CRLF 반환
   * 첫 취약점은 `https://repo.org.github.io/__/auth`의 `page_id` 파라미터에서 CRLF 주입이었다.
   * `page_id` 파싱이 공백문자를 무시하고 이 값이 `Set-Cookie` 헤더로 바로 설정된다는 것을 알게 되었다.
   * 전통적인 CRLF 주입으로 파싱을 깨뜨릴 수는 있지만 다른 영향은 없다.
   * `Location:` 헤더가 `Set-Cookie` 헤더 뒤에 붙기 때문에 302 리다이렉트 임에도 Location 헤더가 무시되고 본문이 렌더링된다.
   ## 공격
   * GitHub 엔터프라이즈 코드를 보고 private page 서버가 openresty nginx로 구현되었다는 것을 알게 되었다.
   * null 바이트를 추가해서 XSS를 성공했다. 이 null byte는 바디의 시작에 와야하므로 header 주입 공격은 할 수 없다.
   * 여기서 private page 도메인에서 임의의 JavaScript 코드를 실행할 수 있게 되었다.
   * 이제 남은건 nonce를 건너뛸 방법을 방법을 찾아야 한다.
   ## nonce 건너뛰기
   * 관찰결과 같은 조직의 sibling private 페이지는 서로간에 쿠키를 설정할 수 있다는 것을 발견함.
   * `private-org.github.io`에서 설정된 쿠키는 `private-page.private-org.github.io`로 전달된다.
   * `__Host-` 접두사 보호를 피할 수 있으면 nonce를 쉽게 건너띌 수 있다.
   * 모든 브라우저가 이를 지원하는 건 아니고 IE는 `__Host-` 접두사를 지원하지 않는다.
   * 하지만 더 좋은 방법을 찾아보다가 재밌는 아이디어가 생각났다.
   * 쿠키가 대소문자를 어떻게 처리하는지 확인해 본 결과 `__HOST`와 `__Host`를 다르게 다루는 것을 알게 되었고 GitHub private pages는 쿠키를 파싱할 때 대문자를 무시한다는 것을 알게 되었다.
   * JavaScript로 nonce를 지정할 수 있게 되었다.
   * 5천 달러의 보너스를 받게 되었다.
   ## 캐시 오염
   * `/__/auth?` 엔드포인트의 응답은 피싱된 `page_id`의 정수 값으로 캐시된다.
   * 이를 통해 XSS 페이로드를 통해서 캐시 오염에 성공하면 상호작용하지 않은 사용자도 영향을 받는다.
   * 공격자가 `unprivileged.org.github.io`를 공격해서 인증을 오염시키면 XSS 페이로드가 캐시된다.
   * 쿠키가 부모 도메인인 `org.github.io`에서 공유되므로 공격자는 `privileged.org.github.io`도 공격할 수 있다.
   ## 퍼블릭 private 페이지
   * 15,000 달러의 보너스를 받고자 조직에 속하지 않는 사용자가 이 공격을 하도록 해야 했다.
   * public 저장소에서 private 페이지를 설정하는 잘못된 설정으로 이 공격을 할 수 있었다.
   * private 레포에서 페이지를 마든 뒤에 저장소를 public으로 바꾸는 것을 말한다.
   * 이 잘못된 설정의 private 페이지는 모든 사용자에게 인증 흐름을 타게되고 조직 밖의 사용자가 읽기 권한을 갖게 한다.
"
"https://news.hada.io/topic?id=4080","리눅스 커널에서의 Rust 지원을 위한 RFC","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       리눅스 커널에서의 Rust 지원을 위한 RFC

   - 커널의 두 번째 언어로 Rust를 사용해야 하는 이유를 정리
   - 코어나 주요 커널 하위시스템을 다시 작성하는게 아닌, 드라이버 및 그와 비슷한 ""Leaf"" 모듈들을 Rust로 작성할 수 있도록 하기 위함
   Rust를 리눅스 커널에서 사용하면
   - 언어적 속성 때문에 메모리 세이프티 버그, 데이터 경합 및 논리 버그의 위험이 줄어듬
   - 메인테이너가 Rust의 안전함 때문에 모듈을 리팩토링하고 패치하는데 더 자신있게 할 수 있음
   - 최신 언어 기능 및 상세한 문서화 덕분에 새 드라이버와 모듈을 쉽게 작성 가능
   - 더 많은 사람들이 최신 언어를 사용하여 커널개발에 전반적으로 참여 가능
   ""Why Rust?""
   - Linux 커널의 컨텍스트상, C에 비해 몇가지 주요 이점을 제공
   ㅤ→ (언어적 장점은 생략..)
   ""Why not?""
   - Linux 커널의 컨텍스트상, C에 비해 이런 단점이 있음
   ㅤ→ 컴파일러 플러그인, Sanitizer 등을 포함한 C 기반 툴링에 노력을 기울여왔음. 이건 시간이 지나면서 Rust 사용이 증가하면 개선 될 것
   ㅤ→ LLVM 기반의 단일 구현체. GCC 프론트엔드, Cranelift 기반의 'ructc' 백엔드, 부트스트래핑 체인을 줄이기 위한 'mrustc' 와 같은 노력이 진행중
   ㅤ→ 아직 표준화 되지 않음. 표준화가 커널에 도움이 될지는 확실하진 않지만..
   ㅤ→ 현재 컴파일러의 복잡한 기능과 제한으로 인해서 컴파일 속도가 느림
   ㅤ→ 현재로서는 Nightly 빌드에 있는 기능이 필요. 안정 버전을 사용 불가. 1년 내에 이 제한을 없애는걸 목표
   ㅤ→ 'core' 및 'alloc' Rust 표준 라이브러리에 있는 기능이 다 사용되지 않아서 현재 필요한 부분보다 큼
   - 이러한 단점의 대부분은 Rust 가 아직 젊고 덜 사용되는 언어라는 사실에서 발생
   - 지난 수십년 동안 C가 그랬던 것처럼 Rust 가 시스템 프로그래밍의 중요한 부분이 될 것이라고 믿고 있음

   https://lkml.org/lkml/2021/4/14/1099
   ""So I replied with my reactions to a couple of the individual patches, but on the whole I don't hate it.""
   와 함께 HOWEVER 뒤에 딸려오는 글을 보면
   실제로 추가 되는데에는 꽤 시간이 걸릴지도 모르겠네요

   이 RFC에 대해서 Linus Torvalds옹이 답변을 달았습니다 https://lkml.org/lkml/2021/4/14/1099
   ""So I replied with my reactions to a couple of the individual patches, but on the whole I don't hate it.""
   전반적으로는 싫어하지 않는다고 하셔서 잘 흘러가지 않을까 기대해봅니다.
   검색해 보니 긱뉴스에 Rust 관련 뉴스가 정말 많이 올라왔었네요. 이젠 정말 시대의 대세라고 봅니다.
   - https://news.hada.io/search?q=Rust
   - Rust 프로그래밍 언어 [한국어판] https://news.hada.io/topic?id=1152
   - Rust - 높은 성능와 신뢰를 확보하기 위한 언어 '러스트의 멋짐을 모르는 당신은 불쌍해요' https://news.hada.io/topic?id=991

   점진적으로 C와 공존하다가, 어느순간 대체되어있지 않을까... 라는 생각을 품어봅니다. 오히려 모질라로부터 독립한 게 더 좋은 선택이었던 것 같기도 해요.
"
"https://news.hada.io/topic?id=4111","SaaS Onboarding의 현재 (2021)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       SaaS Onboarding의 현재 (2021)

   1200+개 SaaS 회사들의 ""온보딩"" 프로세스를 조사한 통계
   - 회원 가입시 1개 이상의 인앱 온보딩 사용자 경험 제공하는 서비스가 96%
   - 마찰* 없는 가입 플로우 제공 74%
   - 온보딩 비디오 활용 46%(B2B), 37%(B2C)
   - 웰컴 화면 제공 79%
   - 개인화된 온보딩 71%
   - 온보딩 프로세스 제공 안하는 회사는 8%(B2B), 12%(B2C)
   - OAuth 사용하는 회사 18%(B2B), 30%(B2C)
   - 이메일 인증 필수인 회사 62%
   - 가입시 입력해야할 필드가 4개 이하인 회사 45%
   - 온보딩 체크리스트 사용 36%(B2B), 33%(B2C)
   - Emtpy State 활용 23%(B2B), 16%(B2C)
   ㅤ→ 처음 가입하고 아무 것도 안보이는 화면에서 뭔가 템플릿으로 경험을 제공하는 것
   ㅤ→ ""To Do가 비었네요. 이런 걸 만들어보시면 어때요?""
   - 온보딩시 목표(Goals) 제공 35%(B2B,B2C)
   - 2차 온보딩 제공 회사 29%(B2B), 16%(B2C)
   ㅤ→ 특정 온보딩 목표 달성시 축하와 함께 더 고급 기능을 익히게 제공 하는 것
   - Product Tour (15%) 나 Interactive Workthroughs(9%) 를 제공하는 회사가 많지 않은데, 개발에 꽤 많은 자원이 들어간다고 생각하기 때문
   ㅤ실제로는 그렇게 큰 노력없이도 만들수 있고, 워크쓰루를 하고나면 참여도가 급격히 상승하는 것을 볼수 있음.
   ㅤ프로덕트 투어를 만든다면 주요 기능 하나에만 집중해서 빠르게 만들 것.
   ㅤ많은 회사들이 도입하는 것을 추천
   - 90% 의 SaaS가 Analytics 도구를 사용하지만, 22%의 회사만 User Recording 도구(HotJar, FullStory 같은)를 사용함
   - User 행동에 따라 발송되는 이메일 사용 13%(B2B), 9%(B2C)
   * 마찰 없는 (Frictionless) 가입 : 가입율을 높이기 위해 쉬운 프로세스를 구성하고, 쓸모 없는 정보를 묻지 않음. 제품 사용까지 4개 정도의 단계를 거치는지 여부

   PDF 링크 : https://drive.google.com/file/d/…
   B2B SaaS Onboarding 가이드 https://news.hada.io/topic?id=4104 와 함께 보세요
   긱뉴스도 간단하지만 회원가입후 보이는 Welcome 화면이 있습니다.
   - https://news.hada.io/welcome ( 회원 가입 및 로그인 된 상태에서만 보입니다. 가입하고 보세요! )
   웰컴페이지에선 기본적인 사이트에 대한 소개/사용법 및 트위터/ 페이스북 / Slackbot / Weekly 링크 등을 노출하고,
   Google Analytics 의 User Signup 목표 페이지로 활용합니다.
   실제로 가입 후에 보여줄 화면이 없더라도, 이렇게 URL을 구성하고 포워딩 하는 형태라도 잠깐 지나갈 수 있게 만들어는 놓아야
   GA 나 기타 분석도구들이 회원 가입 이벤트를 처리하는데 유용합니다.
"
"https://news.hada.io/topic?id=4094","JS로 Content-Aware 이미지 리사이징 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     JS로 Content-Aware 이미지 리사이징 하기

   - Seam Carving 알고리듬 : 이미지 내의 중요하지 않은 반복되는 부분(Seam)만 찾아서 줄이거나 확장
   ㅤ→ 중요 부분 크기는 그대로 두고, 배경만 지우는 방식의 이미지 크기 조절 방법
   - 마스크를 이용하여 특정 개체만 지우는데도 사용 가능
   - JS IMAGE CARVER 웹앱 을 오픈소스로 공개 (TypeScript로 구현)
   - 알고리듬 기본 동작 방식을 설명하고, 구현체 코드를 상세한 주석과 함께 공유한 글

   대박이네요
   감사합니다
"
"https://news.hada.io/topic?id=4083","새로운 HTTP SEARCH 메소드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          새로운 HTTP SEARCH 메소드

   - IETF에 새 Draft로 추가된 SEARCH 메소드 소개
   - 복잡한 데이터를 가져오기 위해선 기존 GET/POST 만으로는 비효율적
   SEARCH /customers HTTP/1.1
   Host: example.com
   Content-Type: application/sql
   SELECT username, email
   WHERE DATEDIFF(DAY, GETDATE(), signup_date) > 7
   - 실제로 SQL문장이 표준으로 사용되는 건 아니고, 리퀘스트 바디에 검색을 위한 이런 컨텐츠가 가능하다는 것
   - 이를 통해서 한개의 URL에 대해서 GET,POST,SEARCH 가 모두 가능해짐
   - Accept-Search 헤더를 통해서, 검색에 사용하는 포맷들을 지정 가능 :
   ㅤ→ Accept-Search: application/sql, application/graphql
   - WebDAV 에 있었던 SEARCH 메소드 표준에 기반 (rfc5323)

   OData가 거의 비슷하게 이런 방식으로 쿼리하는 규약입니다. 하지만 application/sql과 application/graphql을 같은 endpoint에서 사용할 수도 있다니.. 좀 상상이 안가는군요

   용도자체는 SQL을 직접 때리는건 문제가 있고 elasticsearch처럼 semantic하게는 get이지만 HTTP Body를 넣어서 조회하고 싶은 경우에 쓰게 되지 않을까 싶습니다.

   글 초입 부분에 ""it was recently adopted as an IETF draft standard""라고 하는데 여기서 말하는 recently가 2015년이 맞나요? 제가 본 드래프트는 https://tools.ietf.org/html/draft-snell-search-method-00 이건데, 혹시 더 최신 변경사항이 있나 해서요.

   https://datatracker.ietf.org/doc/… 입니다.
   최근 2021-03-31 에 업로드 되었네요.

   body에 정보를 실어 보내려면 PUT이나 POST를 써야할텐데.
   얘네들은 cache를 사용할 수 없으니
   SEARCH 라는갈 쓸 수도 있겠네요.
   아차피 accept한 경우에만 보내면 되니.

   get,post 의 불편함을 개선하고자 하는 방향에서 graphql 이 생각나네요

   쿼리를 리퀘스트 바디로 넘기기 시작하다 보면 언젠가 (별 생각 없이 만든 사이트라면) SQL Injection 같은 문제가 생길것 같은 느낌이 오네요..

   body가 있는 GET 정도로 이해하면 될 것 같네요. 어차피 body를 validation은 해줘야 할꺼고...

   그러게요..
"
"https://news.hada.io/topic?id=4147","Script Kit","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Script Kit

   개발자를 위한 Alfred workflow 같은 툴.
   손쉽게 Javascript를 이용해서 자동화 스크립트를 만들고 실행가능하며 공유 가능.
   현재 Beta.
"
