"https://news.hada.io/topic?id=5403","애플, 2025년 목표로 완전 자율주행차 개발중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       애플, 2025년 목표로 완전 자율주행차 개발중

   - 관계자에 의하면, 지난 몇 년간 두가지 옵션을 연구했음
   ㅤ1. 스티어링과 가속에 초점을 둔 제한된 자율주행 모델 (사람의 개입이 필요한 요즘의 자율 주행차들)
   ㅤ2. 완전 자율주행 자동차 (핸들&페달 없는)
   - 애플워치 SW담당 임원이었던 케빈 린치가 리드해서 2번 완전 자율주행 쪽으로 갈 예정
   ㅤ→ 기존 3년간 헤드였던 Doug Field는 포드로 이직
   - 이 소식 후 애플 주가는 2.4% 상승해서 157달러를 기록
   - 애플의 Ideal Car는 핸들과 페달이 없고, 내부 인테리어 역시 드라이빙시에 손을 쓸 필요 없는 방향으로 설계 될 것
   ㅤ→ 신생 전기차 브랜드인 Canoo 의 것과 비슷
   ㅤ→ 아이패드와 같은 대형 터치스크린 인포테인먼트 시스템이 차량 중앙에 위치
   ㅤ→ 기본 자율주행 시스템을 개발하는데 중요한 마일스톤에 도달했으며,
   ㅤ→ 1세대 자동차에 들어갈 프로세서 핵심작업의 대부분을 완료(아이폰/맥에 들어가는 애플 실리콘과 같은 팀에서 설계)
   ㅤ→ DMV에 의하면 애플은 자율주행을 시험중인 69대의 렉서스 SUV를 보유중
   - 2025년은 매우 공격적인 일정. 프로젝트 타이탄 멤버 중 일부는 이 타임라인에 대해 회의적
   - 점점 더 많은 자율주행/자동차 하드웨어 엔지니어를 영입중
   ㅤ→ 테슬라의 자율주행 소프트웨어 임원이었던 CJ Moore 포함
   - 하지만 애플의 자동차 프로젝트 헤드는 7년만에 5번 변경될 정도로 좋지 않았음
   ㅤ→ 애플워치를 성공적으로 제품화한 Lynch의 능력을 낙관적으로 보기도 함
"
"https://news.hada.io/topic?id=5374","Google Analytics 대체 오픈소스가 $500k ARR까지 성장한 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Google Analytics 대체 오픈소스가 $500k ARR까지 성장한 방법

   첫 구독자 발생 시점부터 MRR $400까지 324일이 소요
   * $400MRR에서 $10K MRR까지는 9달
   * $10K MRR 이후 10달 후에는 $500,000 ARR 달성
   2020 4월에 무슨 일이 일어났는가?
   * 2020 4월 8일에 작성한 블로그 포스트가 Hacker News에서 주목을 받으며 50,000의 사람들이 읽음
   * 이후 166건 트라이얼 사용자 발생, 블로그 포스트 작성전 4개월 총합보다 많은 수치
   * 제목은 "" Why you should stop using Google Analytics on your website “였고 이 블로그 포스트로 성장세가 변함
   * 이 블로그 포스트가 아니었다면 이렇게 성장하지 못했을것.
   * 월급 없이 2명의 공동 창업자들이 투자받지 않고 성장시킴
   * 투자 없이 성장시키는 과정 (bootstrapping)의 장점.
   * 투자자에 신경쏟을 필요없이 고객에 집중할 수 있음.
   * Tech media에 노출되지 못하는 것은 아쉽지만, 고객에 집중할 수 있는 것은 보다 큰 장점임.
   * 효율적으로 일하는 것에 집중하게 됨
   * 직접 고객과 소통하고 인플루언서의 도움없이 직접 마케팅을 진행
   * 오픈소스, 그리고 투명성이 큰 장점으로 작용
   * 핵심 기능을 오픈소스화하고 사이트 방문자와 트래픽을 전부 공개함. 이로 인해 투명성을 확보. Privacy-first를 지향하는데 있어서 굉장히 큰 작용함.
   * 첫 방문자와 고객을 모은 과정
   * Indie Hacker에서 시작.
   * 첫 고객을 모으기 위한 커뮤니티로서 적격.
   * 마일스톤은 중요하지만 마일스톤이 큰 변화를 만드는 것이 아님.
   * 페이드 마케팅에 대한 에산은 배정하지 않고 affiliate 프로그램 또한 없음.
   * 하지만 마케팅과 광고는 동일한것이 아님. 페이드 광고를 집행하지 않고도 마케팅을 진행할 수 있음.
   * 작년에 여러 블로그 글을 올렸고 여러 콘텐츠가 방향을 바꿈.
   * 여러 스타트업들이 콘텐츠 마케팅에 대해 실험해볼 것을 추천
   * $1M ARR에 어떻게 도달할 것인가?
   * 성장하기 위해서 전략을 바꿔야 하고 보다 적극적이어야 한다는 조언이 많음.
   * $10k를 달성할때에도 동일한 조언을 들었으나 현재 전략으로 $500K ARR에 도달하였고 앞으로도 이 전략을 유지할 계획.
   * 오가닉하게 성장하는 것이 목표.
   * GA로 인해 겪는 문제를 해결하는 제품에 집중할것
"
"https://news.hada.io/topic?id=5428","IDE의 미래의 미래

   - Web IDE의 경험과 이야기
   - iPad에서 브라우져로 pyCharm 띄우고 ML 돌렸는데 환상적이었다. (셋업에 1시간이 걸렸지만)
   - JetBrains의 Code With Me 또는 Visual Studio의 Live Share는 쓰면 온라인 협업도 가능하다
   - 더군다나 AI/ML을 위한 자원은 애당초 로컬에 없고, 실제로 뒷단에 머신에 접속해서 사용하고 있다
   - 그러나 크롬북은 아니다 (하드웨어가 너무 별로였다)

   본문보다 댓글들도 재밌어서 Hacker News 링크로 공유 했습니다. 회사에사 추적하는 걸 걱정하는 댓글이 많아서 좀 놀랐네요. 그리고 새로온 사람들을 On-boarding 시키기에 Web IDE가 좋다는 댓글을 보고 여러가지 기회나 아이디어들도 생각이 좀 났구요 : )

   클라우드기반 웹 IDE인 구름IDE도 있습니다..!
   많은 피드백 부탁드립니다!
   서비스 측면으로 자문주실 분 찾습니다..!
   많은 관심 부탁드립니다.

   ""그러나 크롬북은 아니다 (하드웨어가 너무 별로였다)""
   이거 완전 공감하네요..
   레노버 크롬북 듀엣... 저렴해서 하나 사서 다른 서버에 띄워둔 code-server에 접속해서 VSCode 써볼려고 했는데.. 영 별로 더라구요.

   VSCode Remote로 SSH 연결해서 코딩하는 중인데, 네트워크 환경에 따라, 클라이언트 종류에 따라, 혹은 서버가 클라우드 기반이면 크래시가 나는 치명적인 문제가 있습니다. 경험으로 최대한 그런 상황 피해가며 쓰고 있긴 하지만 개인적으로 가야 할 것들이 좀 있긴 한 것 같습니다.

   Github codespace가 VSCode 기반으로 만든거 같은데, 여기는 사용자 경험이 좋더라고요.

   저도 서버에 pycharm, rubymine을 띄워놓고 Projector.app으로 붙어서 개발하고 있습니다. 인터페이스 반응속도가 로컬과 거의 차이가 없고, 요즘 노트북 사양이 좋아졌다 하더라도 서버만큼은 아닌데 서버에서 바로 작업할 수 있으니 작업환경이 엄청나게 쾌적해졌습니다. 재미삼아 시도해봤다가 서버에서 개발하는 걸로 정착했습니다. 추천할만합니다.
"
"https://news.hada.io/topic?id=5401","tldraw - 오픈소스 벡터 그림 편집기 React 컴포넌트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   tldraw - 오픈소스 벡터 그림 편집기 React 컴포넌트

   - 자신의 앱에 쉽게 추가 가능
   ㅤ→ 자연스러운 선 그리기, 도형(사각/원), 화살표, 텍스트, 노트
   ㅤ→ 멀티 플레이어 협업 그리기 지원
   - 세가지 앱으로 제공
   ㅤ→ 웹사이트
   ㅤ→ VSCode 내부에서 바로 사용 가능한 확장
   ㅤ→ Electron 앱

   https://www.tldraw.com/ 에서 바로 사용 가능합니다.
   프리핸드 드로잉에서 굉장히 부드러운 선을 만들어 주네요.
   앱내에 간단한 화이트보드 기능 내장이 필요할 때 쓸만할 듯
"
"https://news.hada.io/topic?id=5402","OpenAI의 API, 이제 누구나 바로 바로 사용 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    OpenAI의 API, 이제 누구나 바로 바로 사용 가능

   - GPT-3 의 Waitlist를 제거
   - 지난 1년간 공개된 Instruct Series, Question-Answering, Content Filter, Codex 등 모두 포함
   - API 이용한 앱을 공개 하기 전 ""사전 리뷰"" 단계 도입
   ㅤ→ 잘못된 사용, 사용량에 따른 확장, 도입 결과에 대한 위험 분석 및 이해하기 위해
   - 사용 불가 : Hate, Harassment, Violence, Self-harm, Adult, Political, Spam, Deception, Malware
"
"https://news.hada.io/topic?id=5449","맥도널드 아이스크림 기계를 더 똑똑하게 만든 회사 Kytch","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   맥도널드 아이스크림 기계를 더 똑똑하게 만든 회사 Kytch

   맥도널드의 아이스크림 기계는 Taylor 사의 C602 모델로 전세계 14000개 매장에 설치되어 있다. 테일러는 1926년에 설립된 회사로, 1956년부터 맥도널드에 밀크쉐이크 머신 납품을 시작했고, 현재는 이 기계를 통해 밀크쉐이크/소프트 아이스크림/선데/맥플러리 등을 즉시 만들어 팔고 있다. 굉장히 복잡한 기능을 가지고 있어서 그런지 한대에 이천만원($18000) 정도 한다.
   문제는 이게 고장이 아주 잘난다. 수리비용 또한 비싸고, 엔지니어가 올때까지 못 파니까 또한 손해다. 2017년 기준 맥도널드가 테일러사에 지불한 수리비용이 약 100억원($80M) 쯤 된다. 평균적으로 미국내 맥도널드 매장중 11% 이상이 고장나 있다고 한다. 이런 수치를 어떻게 실시간으로 알 수 있을까? 이 기계의 인터널 API를 해킹해서 미국내 기계중 몇대가 부서졌는지를 보여주는 사이트인 McBroken[1] 이 있다. 물론, ""고장 났음"" 이라고 알려주는 건 아니고, 실제로는 모든 기기에다가 아이스크림 제조 명령을 보내서, 동작 안된다는 응답이 오는지를 확인한다. 컨버전율 계산이 완전히 꼬이니까.. ""맥도널드의 데이터 어낼리스트 분들 죄송해요!"" 라고 개발자가 말한 바 있다.
   여기에 Kytch[2] 라는 회사가 있다. 아이스크림 기계용 IOT 디바이스와 플랫폼을 만드는 회사다. 테일러 머신을 비롯한 다양한 아이스크림 기계에 동글을 붙여 놓으면 원격 조종이 가능하고, 실시간 데이터 분석 및 AI를 이용한 유지보수 예상 기능을 제공한다. 어떤 문제들이 발생했는지 실시간 알림, 매장에서 많이 사용하는 시간에 따라 동작을 조절해줘서 전기를 세이브하고, 자동 세척 스케줄링도 해준다. 어떤게 문제인지 상세하게 알려줘서 수리비용도 세이브 해준다. 라즈베리 파이로 만든 작은 머신으로 쉽게 설치가능하다.
   Kytch가 Taylor를 업무방해 등으로 고소했는데, 이 과정에서 Taylor 내부 문건에서 Kytch를 구매해서 분석하고, UI를 따라하라고 지시한 내용이 나왔다. 맥도널드는 내부 공문을 통해서 Kytch 를 쓰지 말고, 실제로 ""Taylor Shake Sundae Connectivty"" 라는 기계를 쓰라고 공지 했는데 실제로는 아직 출시도 안되었다. 하여튼 그래서 법정 공방이 지루하게 이어질듯 하다.
   이 Kytch 는 기존 수많은 기계들을 똑똑하게 만들어주는 솔루션이라는 걸 인정받아서, 작년에 약 600억원($50M)의 가치로 120억원($10M) 펀딩을 받았다. 일년에 맥도널드가 테일러에 내는 수리비용과 비슷한 수준이다.
   [1] https://mcbroken.com/
   [2] https://kytch.com/

   이 머신이 자주 고장나는게 Taylor와 mcdonald와 유착관계 때문이라는 다큐멘터리도 있습니다. https://youtu.be/SrDEtSlqJC4

   한 8개월 전에 레딧 1등했던 영상이네요. 길지만 강추합니다

   오 재미나네요. 이 영상은 못본건데, 조회수가 900만이 넘는군요. McBroken/Kytch 다 나오네요.
   이 영상 내용도 글에 추가해 둬야 겠어요. 고맙습니다.
"
"https://news.hada.io/topic?id=5351","croc - 두개의 컴퓨터간 파일 전송 CLI 유틸리티","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     croc - 두개의 컴퓨터간 파일 전송 CLI 유틸리티

   - 윈/리눅스/맥 어떤 컴퓨터 끼리든 데이터 전송 지원 (Relay 이용)
   - E2E 암호화(PAKE)
   - 멀티 파일/폴더 전송 지원
   - 전송 중단시 Resume 지원
   - ipv6-first 후 ipv4 폴백
   - Tor 프록시 이용 가능
   - Go 오픈소스
   [PC1] $ croc send [file(s)-or-folder]
   Sending 'file-or-folder' (X MB)
   Code is: code-phrase
   [PC2] $ croc code-phrase

   비슷한 것으로 magic-wormhole 이라는 것도 있습니다: https://github.com/magic-wormhole/magic-wormhole

   [PC1] $ wormhole send README.md
   [PC2] $ wormhole receive
   Enter receive wormhole code: 7-crossover-clockwork
"
"https://news.hada.io/topic?id=5454","대규모로 웹 스크래핑하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             대규모로 웹 스크래핑하기

   - 만약 구글검색을 수백만건씩 실행하는 서비스를 만든다면 차단 당하지 않을 대안이 필요함
   - 가장 쉬운 것은 유료 프록시를 사용하는 것이지만 상당히 비싼편
   ㅤ→ 그래서 필자가 시도해본 것들을 상세히 설명한 재미난 글
   - 처음엔 AWS Lambda + Puppeteer를 사용
   ㅤ→ AWS가 전세계 16개 리전을 제공하고, 3번 Lambda를 실행하면 새 IP가 지정됨
   ㅤ→ 동시에 1000개의 람다를 실행하면 약 250개의 퍼블릭 IP를 사용하게 됨
   ㅤ→ 16개 리전 * 250 이면 4000개의 IP주소이고, 이정도면 주간 백만단위의 구글 검색을 수행하는데 충분
   ㅤ→ GCP에서도 써봤는데, 웃긴게 구글이 자신의 클라우드 IP를 더 공격적으로 차단함 (AWS와 비교해서)
   ㅤ→ 2019~2020년 사이 얘기고 변했을 수 있음
   - 이 방법은 구글/빙/아마존 등을 스크래핑 하는데는 사용 가능 하지만 한계가 있음
   ㅤ→ DataDome, Akamai, Imperva 같은 안티 봇 회사를 이용한다면 적용 불가
   ㅤ→ 굉장히 다양한 방식으로 브라우저 핑거프린팅을 통해서 봇인지를 식별해 냄
   ㅤ→ 구글 Picasso, Font/TLS/WebGL Fingerprinting..
   ㅤ→ 사실 대부분의 대규모 Scraping 서비스는 클라우드 + 도커 컨테이너들 을 사용하기에 식별하기에 쉬움
   - 감지하기 어렵고 확장 가능한 스크래핑 인프라
   ㅤ→ 성공적으로 스크래핑 하기 위한 두가지 법칙
   ㅤㅤ1. 브라우저 설정을 속이지 않기
   ㅤㅤ2. 가장 중요한 것은 ""아무도 눈치 채지 못할 경우에만"" 브라우저 설정을 속일 것
   ㅤ→ 이를 위해서는 그냥 ""실제 디바이스를 사용""하는게 가장 좋다는 결론
   ㅤㅤ⇨ 500대의 싼 안드로이드 기기를 제조사 여러곳에서 구입하고, 저렴한 데이터 플랜을 가입
   ㅤㅤ⇨ 여러 도시에 분산 (안테나 가까운 곳에)
   ㅤㅤ⇨ DeviceFarmer/stf 같은 오픈소스를 활용해서 기기를 동시에 컨트롤
   ㅤㅤ⇨ Android Go 같은 경량OS를 설치하고, 5분마다 에어플레인모드로 들어가게 해서 계속 새로운 IP주소를 획득
   ㅤㅤ⇨ ""4G carrier grade NAT"" : 4G 캐리어급 NAT는 IPv4 주소 고갈을 막기 위해 고안된 방식으로 IP를 수십만이 공유하기 때문에 차단이 불가능
   ㅤ→ 500대의 안드로이드 기기를 사야 하고, 설치 장소가 필요하고, 하드웨어 유지보수 해야 하는 등 귀찮은 점이 많음
   - 개선 : 안드로이드를 Emulate
   ㅤ→ 안드로이드 기기를 사는 대신, Android-X8, Bluestacks, Android Studio Emulator 등을 이용하면 ?
   ㅤ→ Proxidize 는 4G 모바일 프록시를 만들 수 있게 함
   ㅤ→ 서버 한대에 50개의 4G 동글을 설치
   ㅤ→ 각 서버에서 50~100개의 안드로이드 기기를 에뮬레이트
   ㅤ→ 이 스테이션을 5개 도시에 설치
   ㅤ→ 단단한 코맨드로 이 스테이션들을 관리

   - 봇 감지 우회하기 : 차단당하지 않고 웹 스크레핑 하는 법 https://news.hada.io/topic?id=5304
   프록시, 스크래핑 서비스, 안티봇 소프트웨어 등은 위 글에 잘 정리되어 있습니다.

   멋진 해킹이네요!

   https://www.diffbot.com/products/crawl/
   crawling해서 webpage scraping 해주는 서비스도 있습니다. scraping한 데이터는 불필요한 정보는 제외하고 json으로 저장하고 있습니다.

   입이 쩍...

   전혀 다른 얘기지만..
   구글 검색을 API화 해서 파는 https://serpapi.com/ 같은 데도.. 있습니다.
   근데 여기는 네이버 검색도 API 화 해서 같이 팔아요 ㅎㅎ
   https://serpapi.com/naver-search-api
   월 3만번 검색에 $250 이라는 놀라운? 가격

   너무 비싸서 놀라운건가요? 감이 안와서요

   네 엄청 비싼 거죠. 유료 프록시 쓰는등에 비해서는요.
   api라 차단 우려없이 편하긴 합니다만

   국내 기준으로는 데이터가 어느 정도 제공되는 0원 알뜰폰 요금제들이 생각나긴 하는데...
   대량 가입이 어렵다 보니 요것도 힘들겠군요.

   Google Fi의 경우는 회선 하나에 추가 데이터심 4개까지 가능하니 이런 것도 방법이긴 할 듯 합니다

   예전에 naver 의 무언가를 스크래핑할 때
   AWS lambda 에서는 안되고 GCP functions 에서는 되었던 기억이 있는데,
   IP range 가 오픈되어있어서 그럴 것이라고 생각했는데 그렇지도 않은가보네요.

   1번 방식으로 이미 하고 있어서 다른 방법들은 뭐가 있나 하고 봤는데.. 생각지도 못 했네요.

   사실 1번의 Lambda+Puppeteer 도 저 방식으로 하면 괜찮긴 할거 같은데
   맨뒤의 Proxidize 방법과 비교했을때는 아마도 스크래핑 규모에 따라 비용 차이가 날듯합니다.
   더 대용량이 필요할수록 Proxidize가 안정적일 테지만, 간단히 하기엔 1번도 나쁘지 않을것 같아요.
   마지막에 소개한 https://proxidize.com/ 이 재미나네요.
   직접 4G 모바일 프록시를 만들어서 관리하게 해주는 하드웨어+소프트웨어 솔루션 입니다.
   5개 동글 버전이 $399 네요. 사용자들 국가리스트에 한국도 있는거 봐서는 사용은 가능할듯 ?
   CGNAT 까지는 아니자만, 소프트웨어 프록시를 풀로 관리하는 Scrapoxy 같은 솔루션도 있습니다.
   - Scrapoxy - 웹크롤러용 프록시 풀 관리도구 https://news.hada.io/topic?id=2308
"
"https://news.hada.io/topic?id=5413","개발자들을 위한 테크니컬 라이팅 10계명","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         개발자들을 위한 테크니컬 라이팅 10계명

   - 필수 문장 성분 생략하지 않기
   - 문장 성분의 호응 지키기
   - 조사 올바르게 사용하기
   - 피동형/사동형 지양하기
   - 이중 부정 지양하기
   - 명확한 표현 사용하기
   - 순서와 목록 구분하기
   - 개조식 활용
   - 맞춤법/띄어쓰기 체크하기
   - 외래어 표기 체크하기

   - 테크니컬 라이팅 4대 원칙 https://news.hada.io/topic?id=5409
   - 퇴고의 기술 - 개발자의 기술문서 작성법 https://news.hada.io/topic?id=5446

   프로그래머의 경우 외래어 표기법은 사실상 영어만 신경쓰면 되는데, 한국어 외래어 표기법은 철자법이 아니라 실제 발음을 기준으로 삼는다는 점, 그리고 영어는 철자법이 발음을 제대로 반영하지 않으므로 단어의 스펠링이 아닌 발음 기호를 보고 옮긴다는 점을 유념하시면 실수가 적습니다.
   잘 모르겠으면 1) 국어 사전에 해당 영단어를 그냥 찾아서 나오면 그걸 쓰고 2) 안 나오면 영어 사전에 해당 단어 찾아서 국제 음성 기호(IPA)를 보고 표기를 유추하면 됩니다. 단, 외래어 표기법 규정은 영어에 대해서는 영국식 발음을 본으로 삼기 때문에 의외의 표기가 나올 때도 종종 있습니다.
   영어가 아니면 한글라이즈(https://hangulize.org/) 같은 걸 쓰면 편한데, 영어가 철자법이 엉망이라 저렇게 기계적으로 하기가 어렵고, 꼭 사전이 필요하다고 합니다. (신조어 같은 경우에는 사전에 등재되어 있지 않아서 유튜브 같은 곳에서 해당 단어를 사람들이 어떻게 발음하고 있는지 확인해야 하는 경우도 있습니다.)
"
"https://news.hada.io/topic?id=5356","초보자를 위한 게임 해킹 테크닉 [511p PDF]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      초보자를 위한 게임 해킹 테크닉 [511p PDF]

   Game Hacking Academy 에 올라왔던 글을 모아서 만든 이북
   1. 컴퓨터,게임,해킹의 기본
   2. 디버깅과 리버싱
   3. 프로그래밍 : 외부 메모리 Hack, DLL 메모리 Hack
   4. RTS Hack : Stathack, Map Hack, Macro bot
   5. FPS Hack : 3D 기초, Wallhack (메모리,OpenGL), Triggerbot, Aimbot, Radar Hack, ESP, Multihack
   6. Multiplayer : 패킷 분석, 패킷 리버싱, TCP 트래픽 프록시
   7. 툴 개발 : DLL Injector, Pattern Scanner, Memory Scanner, Disassembler, Debugger, Call Loger
   8. 부록 : 다양한 Hack 예제들
"
"https://news.hada.io/topic?id=5447","Lorem Faces - AI로 자동 생성된 아바타용 얼굴들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Lorem Faces - AI로 자동 생성된 아바타용 얼굴들

   ""Lorem Ipsum for Faces""
   - 썸네일 : 사각, 둥근 테두리, 원
   - 필터 : 그레이스케일, 세피아
   - 1024 x 1024 크기 JPG 로 다운로드 가능

   ""Get the free UI pictures of people faces for your designs, themes, avatars etc.."" 라고 되어 있는 것을 보면 생성된 이미지는 자유롭게 (상용 포함) 사용할 수 있는 거겠죠...? Terms 를 봐도 분명하지가 않네요.

   https://loremfaces.com/about 에 보면
   Download AI generated faces and just use the images into your project absolutely for free.
   이렇게 되어있어서요. 상관없는듯 합니다.
"
"https://news.hada.io/topic?id=5407","KoGPT - 한국어 AI언어모델 오픈소스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       KoGPT - 한국어 AI언어모델 오픈소스 공개

   - 카카오브레인이 만든 GPT-3 모델의 한국어 특화 버전
   ㅤ→ 60억개의 매개변수와 2000억개 토큰의 한국어 데이터를 바탕으로 구축
   - 주어진 문장의 긍정과 부정 판단, 긴 문장 한줄 요약, 문장 추론해 결론 예측, 질문 문맥 이해하여 답변하기 등 모든 종류의 언어 과제 수행
   - 한국어 시작으로 영어, 일본어, 베트남어, 말레이시아어 모델 오픈소스화 예정
   - 오픈소스로 개방해 접근성 보장, 국내 IT 기술 발전과 연구 활성화에 기여 목표

   데모 사이트: https://huggingface.co/spaces/akhaliq/kogpt
   여기에 샘플로 들어가 있던 다음 문장을 그대로 입력했더니, 큐 대기까지 약 2분이 걸려서 이런 결과가 나오는군요. 실제 처리에 사용한 시간은 약 16.9초 정도인 모양입니다.
   input:
   “인간처럼 생각하고, 행동하는 '지능'을 통해 인류가 이제까지 풀지 못했던”
   output:
   “인간처럼 생각하고, 행동하는 '지능'을 통해 인류가 이제까지 풀지 못했던 무수한 질문에 답을 해야 하는 시대가 왔다. c Pixabay 우리 인류가 지난 수만 년을 지나오면서 인간다운 삶을 살기 위해 해결해야 했던 가장 중요한”

   멋지네요

   GPT-J-6B, Cedille, KoGPT 모두 60억개(6B) 파라미터 군요.
   - GPT-3는 이제 시장에서 유일하지 않음 https://news.hada.io/topic?id=5349
   - GPT-Neo : GPT-3 규모의 모델을 오픈소스/무료로 만드는 프로젝트 https://news.hada.io/topic?id=3599
   - Cedille - 6B규모의 프랑스어 모델을 오픈소스로 공개 https://news.hada.io/topic?id=5372
"
"https://news.hada.io/topic?id=5453","Kubernetes Cluster API 1.0 프로덕션 레디","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Kubernetes Cluster API 1.0 프로덕션 레디

   - 기존 쿠버네티스 스타일의 API를 이용해서 쿠버네티스 클러스터를 생성/설정/갱신 등 선언적 관리가 가능
   - VMWare/MS/Google/IBM 등 다양한 회사들 과 초기부터 협업해서 이미 대부분의 인프라에서 지원
   - 향후 여러개의 클러스터를 동시에 관리/운영하는 ClusterClass 및 클러스터 오토스케일러와의 연동, 플러그인 가능한 로드밸런서 및 런타임 확장등을 추가 예정
"
"https://news.hada.io/topic?id=5414","Cmder - 윈도우용 포터블 콘솔 에뮬레이터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Cmder - 윈도우용 포터블 콘솔 에뮬레이터

   - 윈도우에서 ls,vi,cat등을 치는 사람들을 위한 콘솔 패키지
   - 포터블 : USB에 prompt,alias 등 모든 콘솔 설정 넣는게 가능
   - ConEmu + Clink + Git for Win
   ㅤ→ ConEmu : 강력한 콘솔 윈도우 관리자
   ㅤ→ Clink : GNU Readline 처럼 같은 줄 편집 기능, 강력한 자동완성, 단축키 지원
   - VS Code, IntelliJ 등 IDE의 내부 쉘로 설정 가능
   - Hyper, Windows Terminal 등에서도 사용 가능
   - 탭별로 다른 쉘 지정 가능 : cmd, PowerShell, bash(Cmder 풀버전에 포함되어 있음)..

   2018년까지는 최선의 선택이었을 수 있겠지만,
   현시점에서는 WSL2과 Windows Terminal을 쓰는 게 제일 강력하죠.
"
"https://news.hada.io/topic?id=5441","Electron Fiddle - 일렉트론을 빠르고 쉽게","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Electron Fiddle - 일렉트론을 빠르고 쉽게

   - Electron 환경을 즉시 이용 가능, JS기반 데스크탑 웹앱 개발을 빠르게 시작
   - 퀵스타트 템플릿을 통해서 간단한 수정 및 실행 가능
   - 모든 Electron API에 대한 예제를 포함
   - Monaco 편집기(VSCode) 내장으로 Electron API 자동완성 지원
   - Fiddle에서 만든 결과물을
   ㅤ→ 윈/맥/리눅스 앱으로 즉시 패키징 지원(Electron-Forge 이용)
   ㅤ→ GitHub Gist 또는 폴더로 Export 하여 에디터 등에서 추가 개발 가능
"
"https://news.hada.io/topic?id=5354","Ask GN: 입사 할 때 어떤 장비를 받으셨나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Ask GN: 입사 할 때 어떤 장비를 받으셨나요?

   새로 입사하는 분이나, 기존에 있던 분들이 받는 장비에 대한 회사 규정을 정하려고 하는데요.
   지금 다니시는 회사나, 다니셨던 회사에서 보통 어떤 식으로 장비를 받거나, 어떤 Spec의 장비를 지급 받으셨나요?
   저의 예전 경험으로는 첫 회사에서는 개발자건, 일반 사무직이건, 성능 구린 윈도우 노트북을 동일하게 줘서 크게 실망했었고,
   두번째 회사에서는 3가지 선택지를 입사 전에 메일로 줬는데 그 중에 맥북 프로도 있어서 첫 출근 할 때 설랬던 기억이 납니다.
   다니고 계신 회사나? 괜찮은 규정을 가진 회사를 아시는게 있으실까요?

   저희는 금액을 정해두고 그 한도내에 원하는데로 구입이 가능한걸로 알고 있습니다.
   해외 회사이고 100% 재택근무 회사입니다.
   컴퓨터는 대부분 애플 컴퓨터를 선호해서 회사 공식 계정이 있습니다.
   기본적으로 처음에 입사하면 무조건 랩탑을 선택해야 합니다.
   맥북프로 같은 경우는 특별한 경우가 아니면 i7, 32GB 램, 1TB SSD를 기본으로 하고 필요한 경우 스펙 업그레이드가 가능합니다. 만약 윈도우나 리눅스를 원한다면 맥북프로와 비슷한 가격대로 구입 가능합니다.
   모니터: $1000 -- LG 5K를 선택할시 $1000이 넘어도 회사 계정으로 애플에서 구입가능.
   마우스: $100
   키보드: $300
   의자: $1000
   책상: $1000
   그 외 IDE나 필요한 소프트웨어도 따로 구입 가능합니다. 이 부분은 딱히 금액의 한도를 명시하지 않았습니다.
   제 개인적으로 아주 만족하고 있습니다. 어느 회사를 가던지 컴퓨터/랩탑은 괜찮은걸 줬는데 의자나 책상을 저렇게 넉넉하게 줬던 경우는 첨인거 같습니다.

   아..그리고 18개월이 지나면 기존의 랩탑은 그대로 사용하고 애플에서 아이맥이나 맥미니 따로 구입 가능합니다.
   3년 뒤에는 반납 안해도 상관없는 랩탑을 선물로 줍니다.
   개인적으로 참 맘에 들고 회사에서 당연히 세금 처리를 하겠지만
   돈이 꽤 많이 나간다는 생각이 들기는 합니다.

   카카오 계열사입니다. 맥북 최신형 받았습니다.
   맥북프로 16인치 i9, 32GB램, 1TB SSD
   M1은 내부 보안프로그램과 충돌이 나서 지급이 안되다가 최근엔 해소되어서 지급 중입니다

   입사할 때 제품 목록 리스트를 지급 받았으며. 제가 선택한 건 DELL Ultrasharp 34인치 4k 두 개와, 데스크톱은 i7, 램은 16기가에서 확장 요청을 하여 32기가로 올렸고. 키보드는 30만원 한도로 정할 수 있었습니다. 노트북은 요청시 공용 노트북을 받았을 수 있고, 테스트 디바이스도 요청시 대여할 수 있습니다.
   또한 지금은 Steelcase Leap 체어로 업그레이드 중입니다. 매년 장비가 업그레이드 되는 기분이 괜찮더라고요.
   크레딧 제도에 비해서 유연성은 조금 떨어지지만 선택에 대하여 생각을 안 해도 되서(... ) 좋긴 합니다.

   제품 목록도 괜찮은 리스트만 있으면, 좋은 제도가 될거 같네요! 혹시 받으신 장비들도 주기적으로(2~3년?) 새로 목록 받고 바꾸고 하시나요~?

   입사하고 1년쯤에 원래 쓰던 중소기업 모니터에서, DELL 모니터 리스트를 받았었고요, 선택한 게 4k 34인치 2개였습니다. 그리고 한 6개월 쯤 더 지난 후에는 키보드 마우스 교체 리스트를 받았었습니다. 1년간 써보다가 마음에 안 들어서 교체를 요청드렸고. 요청드리고 7일 이내에 제가 원하는 키보드와 마우스로 바꿀 수 있었습니다.

   그리고 Bring-Own-My-Device에 아무런 재한이 없어서(그냥 의자 끌고 왔습니다(...)) 저는 제돈으로(.. ) 의자를 사서 쓰고 있습니다.

   제가 일하는 회사는 다음(Daum) 에서 시작한 제도를 도입했습니다.
   - 개발자 크레딧 제도 : 연 200만원의 개발자 크레딧을 연봉과 별도로 추가 부여합니다.
   * 이 크레딧을 이용해 개발에 필요한 장비(PC, 모니터, 랩탑, 태블릿, 트랙패드 등)를 원하는 대로 구매하여 사용할 수 있습니다.
   ** 입사와 동시에 3년의 크레딧(600만원)을 당겨 사용할 수도 있습니다.
   입사 초에 신나서 인텔 맥북 16인치를 질렀는데 다음해에 M1 이 나오더라구요. 그래도 또 살 수 있었습니다.
   이렇게 하면 개발 환경 구축 자체를 본인이 하기 때문에 좋은 것 같습니다. @xguru 님이 말하신 것과 동일한 제도인 것 같습니다.
   최근에는 재택을 많이들 해서 책상과 의자도 구매 허용 품목으로 등록이 되었습니다.

   기존 장비는 Discounted Inventory/Market으로 등재하면 되지않을까요? 새 장비를 살 경우 배송이 조금 걸리지만 비싸게, 기존 장비를 살 경우, 사내에서 바로 배송 및 싸게!

   이것도 괜찮아보이네요! 크레딧으로 산 장비는 퇴사시에는 반납하게 되는 걸까요? 샀던 장비가 구형이 되고 새 장비를 사는 경우, 기존 장비는 보통 어떻게 처리 되셨나요?

   아마 저와 같은 회사를 다니시는 분께서 작성해주신것 같아서 제가 답변드리겠습니다 :)
   장비는 36개월간 감가상각을 적용하여 이 기간이 지나기 전 퇴사시엔 남은 비용만큼을 퇴직금에서 차감하고, 그렇지 않은 경우 개인 소유로 전환됩니다.

   제가 현재 일하는 회사(SI 중소기업)에서 받아서 지금까지 쓰고 있는 개발용 PC는 2017년인가 2018년에 나온 ASUS VivoMini 시리즈 미니 PC인데, 인텔 i5 프로세서에 16GB 메모리, 128GB SSD 정도의 스펙으로 기억하고 있네요. 델의 23인치 LCD 모니터를 듀얼로 쓰고 있고, 키보드와 마우스는 회사 지급품을 써야 하는데 대개 PC방에서 흔히 볼 수 있는 기계식 키보드(예를 들면 스카이디지털의 106키 제품) 및 마우스(로지텍 G102IC 같은…) 정도입니다. 집에서 들고 온 입력장치를 쓸 수 있으면 좋겠는데, 허락을 안 해주네요. SSD는 좀 답답한 감이 있어, 최근 날 잡고 정리를 하여 여유 공간을 확보하였습니다만 적어도 256GB는 되었으면 좋겠습니다.
   최근 팀원 중 한 분이 업무용 PC를 HP의 최신 워크스테이션으로 교체받았습니다. 제 것이 아니라 자세한 스펙은 모르지만, 그동안 저와 비슷한 개발용 PC를 쓰셨는데 Node.js 관련하여 빌드 속도가 느리다고 적극 어필을 하신 끝에 성사가 된 모양이더군요. 근래에 개발팀용 PC 교체에 관한 이야기가 나오고 있어서, 시범 케이스로 교체받은 모양입니다. 저는 C# 빌드가 체감상 크게 느리지는 않은 편이라 PC 본체 교체가 그렇게까지 절실한 편은 아니지만, 키보드나 마우스는 제 돈을 쓰는 한이 있더라도 제가 원하는 걸 쓸 수 있었으면 좋겠습니다.

   지금 확인해보니 SSD는 128GB가 아니라 256GB 용량이었습니다. 하지만 용량이 살짝 답답한 건 매한가지네요.

   답변 감사 드립니다! 본인 돈으로 장비를 더 좋게 하고 싶은데, 그것조차 허락 안해주면 많이 답답하시긴 하겠네요ㅠㅠ

   스타트업 초기에는 어느정도 캡을 정하고 원하는 장비를 고르게 해주는게 편했던 것 같습니다. 개발자들에게 맥 장비를 주는게 아무래도 좋긴 하죠. 다만 요즘은 M1 때문에 꼭 최신을 선택 못하는 경우도 있어서, 직무가 어떤것이냐에 영향을 받을듯 합니다.
   규모가 조금 커지면 관리 및 A/S, 퇴사시 처리등의 이슈도 있어서 보통은 윈/맥 하나씩 모델을 정하고 둘중에 고르라고 했습니다.
   제가 요즘 봐서는 가성비 때문이라도 M1 장비들이 훌륭한 것 같긴 해요.
   그리고 꼭 컴퓨터 말고도 원하는 모니터1-2개, 키보드, 마우스 등 다양한 선택지가 있을수 있어서, 주변장치를 포함한 통합포인트제도 운영은 어떨까 생각도 듭니다.

   저희도 이 규칙을 사용하고 있는데...
   약간의 문제점도 발견되기 시작했습니다.
   1. 컴퓨터 잘 모르는 사람들은 스펙정으를 못한다는것..
   2. 자기가 잘못골라놓고 스펙안좋다고 불만을표한다는것
   3. 맥을 쓰는사람은 단가맞추기가 힘들다는거......(윈도우에 비해 너무 비싸죠;;)
   4. 퇴사시 비품처리가 어렵다는것.. 호환이 안되서 신입주기도 그렇고...그렇더군요;;;

   저도 마음 속으로는 xguru님이 말해주신 방식으로 하면 좋을 것 같았는데, 4번은 어떻게 할지 좀 어렵더라고요. 그리고 구형 장비가 되는 경우, 새걸 살텐데 그러면 구형 장비는 어쩌지...? 하는 생각도ㅠㅠ (당근 가야하나...)
"
"https://news.hada.io/topic?id=5398","원가절감의 정석: 제품 디자인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            원가절감의 정석: 제품 디자인

   - ""Elon & Sandy: Design Philosophy Parallels"" 유튜브 영상을 캡쳐와 함께 주요 부분 번역 & 정리
   - 각 부품의 비용을 따로 절감하면 문제가 발생
   ㅤ→ 총 비용 절감 및 제품 디자인의 변경
   ㅤ→ 이러면 공장 설비, 면적, 재고, 인건비까지 변화가 필요
   엘런 머스크의 디자인 철학
   1. 요구사항을 덜 멍청하게 만들어라
   2. 과정이나 부품을 없애기 위해 매우 노력해라
   3. 디자인의 최적화, 단순화 작업
   4. 1, 2, 3까지의 사이클을 빠르게 반복할 수 있도록 회사 구조를 개선해라.
   5. 자동화
"
"https://news.hada.io/topic?id=5334","pdfsandwich - 이미지와 OCR을 샌드위치한 PDF 파일 만드는 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              pdfsandwich - 이미지와 OCR을 샌드위치한 PDF 파일 만드는 도구

   - ""sandwich"" PDF : 이미지 만 있는 PDF파일을 OCR하여 텍스트를 각 페이지의 이미지 뒤에 안 보이게 삽입한 파일
   ㅤ→ 글 검색 및 선택해서 복사 가능
   - 커맨드 라인 도구로 스캔한 책이나 잡지를 OCR하는데 사용
   ㅤ→ 멀티컬럼 텍스트도 지원
   - tesseract + unpaper + convert + ghostscript
   ㅤ→ tesseract 가 지원하는 언어들 다 지원(한국어 포함)
   - 리눅스/맥. 멀티프로세서 시스템에서 병렬처리 지원
"
"https://news.hada.io/topic?id=5412","fonoster - Twilio의 오픈소스 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      fonoster - Twilio의 오픈소스 대체제

   - 클라우드용 프로그래머블 텔레커뮤니케이션 스택
   ㅤ→ 음성 전화를 걸거나 받는 프로그래머블 보이스 앱 작성 가능
   - 멀티 테넌시 지원
   - PBX(교환기)기능을 쉽게 배포 가능
   - NodeJS & Web SDK
   - OAuth2 / JWT / RBAC 지원
   - 구글 Speech API 지원
   - Answer, Hangup, Play, Say, Gather(DTMF), Dial, Record, Mute, Unmute

   Twilio 가 제공하는 기능에 비해선 턱없이 부족합니다만, 아직 0.2 버전이니 좀 더 발전하기를 기대해 봅니다.
"
"https://news.hada.io/topic?id=5450","AWS 외부로의 데이터 전송 요금 인하","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         AWS 외부로의 데이터 전송 요금 인하

   1. 매월 CloudFront 에서 처음으로 전송되는 1TB, 1천만건의 HTTP/S 리퀘스트, 2백만건의 CloudFunctions 호출 무료
   2. 모든 AWS 리전(중국 및 GovCloud 제외)에서 매월 첫 100GB 데이터 전송 무료
   - 두가지 다 처음 12개월로 제한되지 않고 매월 반복 적용됨
   - 2021/12/1부터
   - CloudFront 무료 티어를 대체 (현재 월 무료인 데이터 전송량의 20배를 1년제한 없이 무제한 제공)
   ㅤ→ 모든 CloudFront 기능에 다 적용 됨
   - 수백만명이 데이터 전송 요금을 내지 않게 될 것

   EC2 데이타 전송(송신)도 할인되면 좋겠네요

   클라우드플레어 와 오라클에서 AWS 데이터 전송 비용 저격하고 나서의 변화일까요 ? ㅎㅎ
   CloudFront 쪽 가격 인하는 확실히 CloudFlare와 경쟁하려고 하는 것 같네요.
   - AWS의 어처구니 없는(Egregious) Egress 비용 https://news.hada.io/topic?id=4693
"
"https://news.hada.io/topic?id=5358","Pyjion - 파이썬 JIT 컴파일러","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Pyjion - 파이썬 JIT 컴파일러

   - pip 로 설치가능한 Python 3.10 용 drop-in JIT 컴파일러
   ㅤ→ 맥/윈/리눅스
   ㅤ→ CPython bytecode를 머신코드로 컴파일
   - 코드 변경없이 Python 코드를 빠르게 실행
   ㅤ→ Profile Guided JIT Compiler
   ㅤ→ 네티이브 64bit float & integer 지원
   ㅤ→ Intel/ARM CPU 지원
   ㅤ→ IL/ASM desassembler 내장
   ㅤ→ 네이티브 디버깅/프로파일링 도구 지원

   .net core를 설치하는게 좀 단점이네요.

   https://github.com/microsoft/Pyjion
   github 프로젝트를 보니 MS 에서 진행하는 거군요... 비슷한 역할을 하는 PyPy, Pyston 과의 비교도 Readme 에서 간단히 설명하고 있습니다.
   JIT 를 지원하면서도 기존의 C 로 개발된 파이썬 모듈도 그대로 사용할 수 있도록 하는게 차이점으로 보입니다.

   닷넷 CLI(Common language infra.) 가 여기서 나오다니 놀랍네요 ^^;
"
"https://news.hada.io/topic?id=5387","AppFlowy - 오픈소스 Notion 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       AppFlowy - 오픈소스 Notion 대체제

   - 개인용 + 네이티브 + 모바일 이용에 더 집중한 Flutter + Rust 기반 오픈소스
   ㅤ→ 협업 서버/플러그인 등의 기능은 로드맵 상에 있음
   - 0.0.1 버전 : 기본 기능만 공개
   ㅤ→ 페이지 관리 , 텍스트 포매팅, 리스트, 블록..

   저는 개인적으로 Microsoft Loop를 기대하고 있습니다.

   저희는 구글 워크스페이스를 이용중이라 구글내에서도 비슷한 상품이 나오길 기대하는데...맘에 드는게 없네요. ㅠ.ㅠ .

   Notion을 오픈소스로 대체하려는 시도는 계속 나오네요
   - Focalboard - 오픈소스 Trello/Asana/Notion 대체제 https://news.hada.io/topic?id=3914
   - Outline - 팀을 위한 오픈소스 Wiki 엔진 https://news.hada.io/topic?id=1205
   근데 솔직히 이 AppFlowy 는 HN에 올라와서 보긴 했는데, 공개 타이밍이 너무 성급하지 않았나 생각이 듭니다.
   ""Notion 의 오픈소스 대체제 다"" 라는 헤딩 만으로 이용자/컨트리뷰터가 생기긴 어렵고,
   어느 정도 쓸만한 기능이 있는 상태까지는 만들고 공개 하는게 좋을 것 같은데, 일단 먼저 공개하면 뭔가 되겠지하고 생각한 것 같아요.
   오픈 소스를 키우는 것도 서비스 성장 전략을 수립하는 것처럼 심도 깊게 고려해야 한다고 생각합니다.
   저 페이지에 클릭해서 오는 사람들에게 어느 정도 인상을 심어줘야 하는데.. 전혀 그렇지 못했어요 ㅡ.ㅡ;
   어제 올린 아래 글이 생각나네요.
   - 인기 있는 오픈소스 프로젝트 만드는 팁 https://news.hada.io/topic?id=5379
"
"https://news.hada.io/topic?id=5442","DevLake - DevOps를 위한 오픈소스 Data Lake ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  DevLake - DevOps를 위한 오픈소스 Data Lake

   - 개발 도구들로부터 데이터를 취합해서 보여주는 통합 대쉬보드용 오픈소스 데이터 레이크
   ㅤ→ Jira, GitHut, GitLab, Jenkins
   - SDLC, 개발 워크 플로우, 이터레이션 퍼포먼스 등을 한눈에
   - 시각화는 Grafana 이용
   - Go + MySQL 오픈소스. Docker로 설치
"
"https://news.hada.io/topic?id=5406","Zellij - 개발자 & Ops를 위한 터미널","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Zellij - 개발자 & Ops를 위한 터미널

   - 터미널 멀티플렉서(tmux/screen과 유사)
   - 레이아웃 시스템 : YAML로 터미널 창들의 레이아웃 설정 및 자동 로딩
   - 플러그인 시스템 : WASM기반으로 다양한 언어로 된 플러그인 지원
   ㅤ→ Strider : Ranger와 비슷한 콘솔 파일 매니저
   ㅤ→ Tab-Bar / Status-Bar
   - 리눅스/맥 지원

   다른 건 잘 모르겠고, UI에 단축키가 바로 표시되어 있어서 사용법을 외우고 있거나 별도로 찾아보지 않아도 기본적인 사용이 가능하다는 게 좋았습니다.

   Tmux복잡했는데 해봐야겠군요
"
"https://news.hada.io/topic?id=5396","독일의 슐레스비히홀슈타인주에서 2만5천대의 PC에 리브레오피스(LibreOffice)로 교체할 계획 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        독일의 슐레스비히홀슈타인주에서 2만5천대의 PC에 리브레오피스(LibreOffice)로 교체할 계획

   원문: German state planning to switch 25,000 PCs to LibreOffice
   독일의 슐레스비히홀슈타인주에서 2만5천대의 PC에 리브레오피스(LibreOffice)로 교체할 계획입니다.
   독일 북부에 위치한 슐레스비히홀슈타인주에서 주정부와 학교서 리브레오피스를 포함한 오픈소스 소프트웨어로 전환할 계획입니다.
   주 정부는 독점 소프트웨어에 대한 의존성을 줄이다 점차적으로 의존성을 완전히 끝내기를 원합니다.
   2026년말까지, 공무원 및 주정부에 일하는 사람(교사 포함)이 사용하는 모든 2만5천대의 컴퓨터에 마이크로소프트 오피스는 리브레오피스로 대체될 예정입니다. 또한 윈도우OS도 GNU/Linux로 대체될 예정입니다.
   이를 위해 필요한 단계는 슐레스비히홀슈타인주의 의회 계획에 명시되어 있습니다.
   독일어) https://landtag.ltsh.de/infothek/wahl19/…
   슐레스비히홀슈타인주의 디지털장관 Jan Philipp Albrecht씨는 c't의 인터뷰에서 해당 내용을 설명하고 있습니다.
   독일어) https://heise.de/news/…
   구글 영어 번역) https://www-heise-de.translate.goog/news/…
   리브레오피스를 지원 비영리단체, 도큐먼트재단(The Document Foundation)의 Lothar Becker님과 Thorsten Behrens님은 책임자회의에 초대 받았습니다.
   여기서 클라우드 솔루션, 리브레오피스 및 기타여러시스템간의 통합, 비디오 컨퍼런스 도구에 초점을 두었습니다.
   도큐먼트재단(The Document Foundation)은 리브레오피스(LibreOffice)가 공공기관에서 사용되고 있다는 것을 기쁘게 생각하며, 전세계의 더 많은 연방주, 정부, 여러 조직들이 이런 전환에 참여하길 기대합니다.

   다음은 저의 의견입니다.
   현재, 한국에서 HWP를 대체 및 리브레오피스(LibreOffice)를 도입을 하려고 과학기술정보통신부 및 NIPA가 리브레오피스 및 ODF전문가를 찾고 있습니다. 그러나, 독점 소프트웨어이자 바이너리형식의 HWP파일이 많이 사용하다 보니, 정부부처에서 HWP소프트웨어를 울며겨자먹기로 구입하여 사용하고 있습니다. 덤으로 바이너리파일 HWP파일은 상호운용성(Interoperability )이 매우 부족하여 여러 기기에서 사용하기 어렵습니다. (ODF, MS워드에서 사용하는 OOXML은 zip파일안에 텍스트인 xml파일 형식으로 저장되며 xml파일을 불려들어서 사용하여 쉽게 개발 및 유지보수가 가능합니다)
   일본도 일부 지방자치단체에서 리브레오피스(LibreOffice)를 도입하여 사용하고 있고, 커뮤니티 활동이 활발한 것에 놀라고, 대만도 정부차원에서 리브레오피스(LibreOffice)를 도입하여 여러 지방자치단체 및 대학에서 사용하고 있습니다.
   대한민국 정부는 이미 ODF를 정부 표준으로 지정하였고, 과학기술정보통신부에서는 보도자료를 ODT로도 공개하고 있습니다.
   HWP파일을 먼저 적용 후에 ODF(ODT파일)로 변환을 하는 것 같은데, HWP에서 ODT를 제대로 지원하지 않아 HWP도 ODF관련 호환성 이슈가 있습니다.
   참고자료
   The Interoperability of Documents (was: A War of File Format) in OpenSUSE Asia 2017 (LibreOffice mini Conference Japan 2017), talking about the interoperability of documents.
   https://speakerdeck.com/fweng322/…
   문서 접근성을 앞장서서 가로막는 정부 https://brunch.co.kr/@nightwhale/1
   정부, 공공기관 ODF 도입 강제 움직임...“HWP 독점 문제 있다” http://m.ddaily.co.kr/m/m_article/?no=63678
   저는 HWP의 독점 문제를 해결하기 위해서 노력을 하고 싶습니다.

   좋네요. 멋집니다.
"
"https://news.hada.io/topic?id=5418","1인 SaaS 개발자를 위한 도구 추천","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         1인 SaaS 개발자를 위한 도구 추천

   Ask HN에 올라온 질문. 답변들이 좋아서 추려서 옮겨봅니다
   * 호스팅 : AWS and Cloudflare
   * 이메일 수신 : Rackspace
   * 이메일 전송 및 트랜잭션 : Sendgrid
   * 도메인 : Namecheap
   * 결제 : Spreedly 와 판매자 계정 / Stripe / Paddle
   * 어필리에이트 및 커미션 : ShareASale
   * 광고 : Facebook 과 Google
   * 이메일 캠페인과 채팅 : Crisp
   * 파일 업로딩/처리 및 전달 : Uploadcare
   * 분석 : Amplitude / UxWizz
   → SendGrid 는 추천하지 않는 다는 얘기가 많네요. 대신 SparkPost, PostMark 등을 추천
   → 호스팅에는 Digital Ocean도 좋지만, UI가 별로라고
   그 외에도 좋은 답변들이 많으니 원 링크를 꼭 참고해주세요

   안녕하세요. 동시편집 앱 개발을 위한 문서 저장소 Yorkie(https://yorkie.dev)를 개발하고 있는 홍영택입니다.
   얼마 전 CodePair(https://codepair.yorkie.dev)의 뒷 단을 구성했는데,
   GeekNews에 올라온 소규모 SaaS 시리즈 글이 매우 도움이 되었어요.
   감사합니다. ( _ _)

   우왓 제가 기분이 좋네요! 고맙습니다

   긱뉴스에도 다양한 1인/소규모 SaaS/스타트업 관련 링크들이 많습니다. 아래 링크들을 참고하세요
   - 최소한의 노력으로 소프트웨어 스타트업 운영하기 https://news.hada.io/topic?id=1534
   - 스타트업을 년6$로 운영하기 https://news.hada.io/topic?id=1621
   - 1인 SaaS 스타트업 6개월 운영 회고 https://news.hada.io/topic?id=2415
   - 1인 기술 스타트업의 아키텍쳐 스택 https://news.hada.io/topic?id=4055
   - 성장을 위한 스타트업 Toolstack https://news.hada.io/topic?id=138
   - 2021년 독립 SaaS의 현황 보고서 [63p 슬라이드] https://news.hada.io/topic?id=3728
   - 1조 회사를 만들다 실패한 경험 이야기 https://news.hada.io/topic?id=2
   - 저는 인터넷에서 양파를 팝니다 https://news.hada.io/topic?id=3
   - 삼성출신 스타트업 대표가 12억 날리며 깨달은 것 https://news.hada.io/topic?id=3015
   - 2년만에 8조원 가치가 된 스타트업에서 배운 것 https://news.hada.io/topic?id=5087
"
"https://news.hada.io/topic?id=5378","유용한 sed 스크립트와 패턴들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           유용한 sed 스크립트와 패턴들

   - 1줄만 출력
   ㅤ→ sed -n '10p' file.txt
   - 5번줄만 빼고 모든 라인에서 문자 치환
   ㅤ→ sed '5!/s/foo/bar/' file.txt
   - 특정문자로 시작하는 모든 라인에서 정규식 치환
   ㅤ→ sed '/^hello/ s/h/H/' file.txt
   - 5번줄부터 마지막 라인까지만 치환
   ㅤ→ sed '5,$ s/foo/bar/' file.txt
   - 빈파일 삭제
   ㅤ→ sed '/^$/d' file
   - 두 정규식 사이의 모든 라인 출력
   ㅤ→ sed -nE '/^foo/,/^bar/p' file.txt
   - 슬래시 포함 문자를 쉽게 찾기 위해 커스텀 딜리미터 사용
   ㅤ→ sed 's_/bin/bash_/bin/sh_' file.txt
   - 공백으로 나눠진 중복 문자열 제거(세번 중복된거는 제외)
   ㅤ→ sed -E 's_([a-zA-Z0-9_]+) \1_\1_ig' f1
   - 특정 패턴을 찾아서 변경후, 수정된 것만 다른 파일로 저장
   ㅤ→ sed 's_foo_bar_w replaced.txt' file.txt
   - 여러개 동시에 치환
   ㅤ→ sed -e 's_foo_bar_' -e 's_hello_HELLO_' file.txt
   - 두개 키워드 사이의 모든 코멘트 제거하고 빈줄 넣기
   ㅤ→ sed -E '/start/,/end/ s/#.*//' file.txt
   - #로 시작하는 모든 주석 지우기
   ㅤ→ sed -E '/^#/d' f1
   - 특정 패턴이 나타날때까지만 출력하기
   ㅤ→ sed '/start/q' file.txt
   - 특정 라인 이후에 파일을 삽입
   ㅤ→ sed '5 r newfile.txt' file.txt
   - 특정 정규식 매칭부분 이후의 라인에 텍스트 추가
   ㅤ→ sed '/foo/a\AFTER FOO' file.txt
   - 특정 정규식 매칭된 라인을 교체
   ㅤ→ sed '/foo/c\FOO IS CHANGED' file.txt
   - #으로 시작하는 모든 코멘트를 다른 파일에 저장
   ㅤ→ sed -E '/^#/w comments.txt' file.txt
   - 모든 두번째 줄만 출력(한줄건너 한줄, 3/4 등으로 변경 가능)
   ㅤ→ sed -n '1~2p' file.txt
   - 파일을 직접 수정하지만 백업을 생성
   ㅤ→ sed -i.bak 's/hello/HELLO/' file.txt
   - 정규식 매칭 이후에 두개의 빈줄 추가
   ㅤ→ sed -E '/^#/G G' file.txt

   슬래시 이외의 다른 문자도 구분자로 사용할 수 있다는 건 정말 필수 팁입니다.
   apt 저장소 URL 바꿀 때라든가 꽤 자주 슬래시를 포함할 일이 있거든요
"
"https://news.hada.io/topic?id=5456","Fleet - JetBrains의 차세대 IDE 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Fleet - JetBrains의 차세대 IDE 공개

   - 빠르게 실행되는 가벼운 에디터 이면서 IDE
   ㅤ→ IntelliJ 코드처리 엔진은 별도로 실행해서 스마트 IDE로 전환
   - 분산 아키텍처
   ㅤ→ 코드 처리 기능등 일부 기능만 도커/클라우드에서 실행가능
   ㅤ→ Space / 원격시스템 연동
   - 협업 지원
   ㅤ→ 터미널과 디버그 세션 공유, 코드 리뷰 및 탐색
   ㅤ→ 내 시스템에 연결하거나 공유된 환경에 모두가 접속
   - LSP를 이용한 다중 언어 지원
   - 터미널 & Git 내장
   - 멀티 플랫폼 : 리눅스/맥/윈도우
   - 플러그인 지원
   - 포트 포워딩을 통한 애플리케이션 테스트

   Native 한 gitpod이네요

   작동 해보신 분 있으신가요?
   '조기 테스트 참여하기' 누르고 했는데 뭐가 안 오네요ㅠ Space에서는 실행 되는 것처럼 보이고 실제 비용도 나가고 있던데ㅇㅁㅇ

   기능적으로는 기존 IDE에서 어떤 부분들이 깎여나가는걸까요?

   충성 충성 ^^ㄱ

   무튼 공식적으로 LSP지원하니까 더욱 각종언어의 오픈소스 LSP가 풍부해지는게 기대되네요.

   vscode랑 비교 많이 하시는데, 저는 vscode의 remote plugin방식은 도저히 동의하기가 힘들던데요..
   Jetbrain처럼 코드 원격실행하는게 더 좋지 않나요?

   SSH Remote요? 저는 그거 하나때문에 Jetbrain버리고 VSCode로 왔습니다.
   특히 판데믹 때문에 Jetbrain이 지분을 많이 빼앗겼죠. 지금 저 Fleet 도 VSCode의 remote를 구현하기 위해 만들어진 느낌도 나네요.
   그런데 혹시 동의하시기 힘든 부분이 무엇인가요?

   https://blog.jetbrains.com/ko/blog/2021/11/29/welcome-to-fleet/

   JB에서 쓴 Fleet 소개글도 올려봅니다. 'ㅁ' /

   VS Code 느낌의 InteillJ가 개인적으로는 수요층이 확실하다고 생각해서, 기존 고객층의 VS Code로의 이탈만 막아도 성공적이지 않을까 싶습니다.

   JetBrains 툴들이 많이 무겁다보니 사 놓고 잘 안 쓰게 되던데.
   Fleet 이 VSCode 만큼 가벼워 지고 메인 IDE가 되면
   충성 고객층이 있는 JetBrains에 경쟁력이 생기겠네요.

   VS Code 와 경쟁모드로 가는군요. 조금 늦지 않았나 싶긴 한데..
"
"https://news.hada.io/topic?id=5392","넷플릭스 Top 10 사이트 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           넷플릭스 Top 10 사이트 공개

   - 매주 전 세계와 각 국가의 넷플릭스 서비스에서 가장 인기 있는 콘텐츠를 발표하는 별도의 웹사이트
   - 매주 화요일에 전주 월요일부터 일요일까지의 작품별 시청 시간을 기준으로 공개
   - TOP 10 영화(영어), TV(영어), 영화(비영어), TV(비영어) 및 90여 개국의 국가별 리스트
   - 현재는 영어/스페인어로만 지원, 내년에 언어 확대 예정
   - 역대 인기작 리스트도 합께 공개. 최초 공개된 날로부터 28일간의 통합 시청 시간 기준

   그냥 서비스 변경이라고 하기엔.. 넷플릭스의 한 세대가 끝난 것 같다는 느낌이 드는 발표네요.
   ""사용자 취향에 맞는 추천"" 을 잘 한다고 포지셔닝 하면서 추천 알고리듬에 신경쓰던 넷플릭스가
   이제 2억명이 넘는 글로벌 사용자를 가진 좀 더 대중적인 서비스로 옮겨 가는 것 같아요.
   * 오늘부터 넷플릭스 가격도 올랐네요. 프리미엄은 14500원에서 17000원으로 17% 인상..
   https://help.netflix.com/ko/node/24926
"
"https://news.hada.io/topic?id=5355","Niantic, 리얼월드 메타버스 제작용 플랫폼 Lightship 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Niantic, 리얼월드 메타버스 제작용 플랫폼 Lightship 공개

   - Lightship ARDK(증강현실 개발자 킷트)를 제공
   ㅤ→ 모바일 앱들이 카메라가 하늘/물등 어디를 가르키고 있는지 인식하고, 가상 객체를 실제 표면에 올릴 수 있게 함
   ㅤ→ 포켓몬고 등에서 사용하던 기술
   - 자신들의 VPS(Visual Positioning System)을 이용하여 세계의 3D 맵을 제작 중
   ㅤ→ ""Planet-scale"" AR 앱들을 구현할 수 있게 지원하고 AR 글래스등에서 사용 가능하게 될 것
   - 개발한 AR/MR 게임을 Publishing 지원 및 $20M 투자 예정
   - 개발한지는 몇년 되었지만, 이제 누구나 사용할 수 있게 공개한 것
   ㅤ→ PGA, 슈에이샤(집영사, 소년점프), 워너뮤직, 코첼라 등이 이미 플랫폼을 이용중

   와, 이걸 공개할 줄은 몰랐는데요. 아래 영상에 사용된 기술같은데, 정말 기대가 많이 됩니다!!
   https://www.youtube.com/watch?v=7ZrmPTPgY3I
"
"https://news.hada.io/topic?id=5346","OCRmyPDF - 스캔된 PDF파일에 OCR 텍스트 레이어 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  OCRmyPDF - 스캔된 PDF파일에 OCR 텍스트 레이어 추가

   - 일반 PDF로 부터 검색가능한 PDF/A 파일 생성
   - OCR한 문자열을 이미지 아래에 삽입해서 Copy/Paste 지원
   - 기존 임베드된 이미지의 해상도는 그대로 유지
   - 파일을 훼손하지 않고 OCR정보를 삽입
   - PDF 이미지는 최적화해서 파일 크기를 줄임
   - CPU코어 모두 활용해서 분산 처리
   - Tesseract OCR 이용해서 100개 이상의 언어 그대로 지원 (한국어 포함)
   - 수천 페이지 분량의 파일도 잘 스케일링해서 처리
   - 수백만개의 파일로 테스트 완료
   - 리눅스/맥/윈도우(WSL)

   멋지네요.

   몇일 전에 올라온 pdfsandwich 보다 훨씬 더 기능이 많다고 하네요.
   - pdfsandwich - 이미지와 OCR을 샌드위치한 PDF 파일 만드는 도구 https://news.hada.io/topic?id=5334
"
"https://news.hada.io/topic?id=5338","Jitsu - Segment의 오픈소스 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Jitsu - Segment의 오픈소스 대체제

   - 데이터팀을 위한 고성능 데이터 컬렉션 서비스
   ㅤ→ 앱/웹의 모든 이벤트를 캡쳐해서 DW로 전송
   ㅤ→ API에서 데이터를 꺼내어 DW로 전송
   - 스크립팅 가능한 실시간 Data Ingestion 엔진
   ㅤ→ IDE에서 Javascript로 데이터 변환 로직 생성 및 디버깅 가능
   - 140개 이상의 데이터 소스 지원
   ㅤ→ DW : Snowflake, Clickhouse, BigQuery, S3, Redshift, Postgres..
   ㅤ→ Amplitude, Hubspot, Google Analytics, Facebook Pixel
   ㅤ→ SendGrid, Slack, Stripe, Trello, Twilio, Appsflyer, Autopilot..
   - Segment 의 가격 모델과 데이터 지연을 해결하고 싶어서 개발
   ㅤ→ Segment 와 100% 호환
   - Data Replay 기능 지원 : 이벤트를 저장해 뒀다가 새로운 서비스에 예전 데이터를 덤프 가능
   - Multiplexing 지원 : GA/Pixel등에 동시 전송

   Data Replay 가능한 오픈소스 도구가 시장에 하나 더 나왔네요.
   이팀도 YC에서 투자 했습니다. YC가 요즘 유명 제품의 오픈소스 만드는 회사들에 많이 투자하는 것 같아요.
   - RudderStack - Segment의 오픈소스 대체제 https://news.hada.io/topic?id=1759
   - Twilio, Segment를 3.6조원($3.2B)에 인수 https://news.hada.io/topic?id=3005
"
"https://news.hada.io/topic?id=5404","MS Power Fx - 로우코드 프로그래밍 언어 오픈소스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  MS Power Fx - 로우코드 프로그래밍 언어 오픈소스 공개

   - Excel과 비슷한 Low-Code 프로그래밍 언어를 자신의 프로젝트에 연동 가능
   - 다목적, Strong-Typed, 선언형, 함수형 개발언어
   - C# 오픈소스
   ㅤ→ 간단한 REPL 샘플 제공
   - MS의 Power 플랫폼 전반에 도입 : Apps, Automate, Virtual Agents

   올해 Ignite 에서 오픈소스로 공개하겠다고 얘기했는데, 8개월만에 실제 코드를 공개했네요.
   - MS Power Fx - 오픈소스 Low-Code 개발 언어 공개 https://news.hada.io/topic?id=3829
   언어 까진 아니지만, 엑셀과 비슷한 계산엔진을 구현한다면 HyperFormula 같은 것도 있습니다.
   - HyperFormula - 엑셀과 비슷한 계산엔진 오픈소스 https://news.hada.io/topic?id=4843
"
"https://news.hada.io/topic?id=5366","DBCore - DB기반으로 빠르게 프로토타입 앱 생성하는 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 DBCore - DB기반으로 빠르게 프로토타입 앱 생성하는 오픈소스

   - PostgreSQL, MySQL, SQLite3 지원
   - DB를 읽어서 Go로 작성 된 REST API 및 TypeScript/React UI 자동 생성
   ㅤ→ List, Add, Edit, Delete
   ㅤ→ Filter, Paginate, Sort
   ㅤ→ JWT 토큰 인증
   ㅤ→ 엔드포인트당 SQL필터를 이용한 메소드 인증
   ㅤ→ timestamp 생성/변경/삭제 자동화

   가벼운 단발성 페이지 만들때 써먹기좋아보이는 기능들이네요
   비슷한거 운영툴로 제공하기위해 만들었던 기억이 나네요

   흥미로워보이긴 하는데 작년 이후로 업데이트가 없네요, 알파버전이라 그냥 참고 정도 하면 될듯 합니다.
"
"https://news.hada.io/topic?id=5342","oclif - Open CLI 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         oclif - Open CLI 프레임워크

   - Heroku가 만든 Node.jS용 CLI 작성 도구 오픈소스
   - git / heroku 처럼 다양한 서브커맨드를 가진 CLI 작성 가능
   - 직접 만든 Flag / Arg Parser
   - 빠른 속도
   - CLI 생성기
   - 테스팅 헬퍼 내장: 자동으로 scaffolded test 생성
   - CLI 사용자가 플러그인으로 확장 가능하게 지원
   - 자동 업데이트 가능한 인스톨러 생성 가능
   - 커맨드라인 자동완성 지원
"
"https://news.hada.io/topic?id=5458","미국 저작권법에 Disney가 끼친 영향","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         미국 저작권법에 Disney가 끼친 영향

   - 1790년에 미국 헌법에 저작권 조항이 처음 추가
   ㅤ→ 저자들이 책을 출판/재판할 수 있는 권리를 14년간 보장하며, 추가로 14년 갱신 가능
   ㅤ→ 현재는 100년이상 지속되며, 1998년에는 대부분의 저작물에 대한 저작권 보호를 제작자의 수명 + 사후 70년으로 연장
   - 디즈니는 미국 저작권법 발전에 중요한 역할을 함
   - 1976년 저작권법
   ㅤ→ 1928년 디즈니가 Steamboat Willie를 출시하며 ""미키 마우스""가 처음 등장
   ㅤ→ 그 당시 저작권법에 따라 28년+28년 해서 56년간 보호되어 1984년에 만료될 예정이었음
   ㅤ→ 이 날짜가 다가오면서 로비를 통해서 저작권법을 개정
   ㅤ→ 작가의 평생 동안 보호 받을 수 있으며, 기업 소유의 저작물은 50년 또는 75년간 보호
   ㅤ→ 이걸로 2003년으로 보호를 연장
   - 1998년 저작권 기간 연장법
   ㅤ→ 2003년이 다가오자 디즈니는 그동안 계속 로비 활동을 진행
   ㅤ→ 1998년초 세상을 떠난 Sonny Bono(가수/배우 이자 하원의원)의 이름을 딴 저작권 기간 연장법이 채택됨 (반대자들은 미키마우스 보호법 이라고 부름)
   ㅤ→ 저작권이 저자의 평생 동안 및 사후 70년 동안 지속 되도록 허용
   ㅤ→ 기업의 경우는 최초 발행일로부터 95년 또는 창작일로부터 120년간 보호(둘중 먼저 만료되는 날짜 기준)
   ㅤ→ 이걸로 스팀보트 윌리의 저작권이 2023년까지 연장
   - 이제 디즈니는 어떻게 할까 ?
   ㅤ→ 스팀보트 윌리의 저작권은 2024년 1월 1일에 만료되어, 퍼블릭 도메인이 될 예정
   ㅤ→ 아마도 로비활동을 더 활발하게 할 것으로 추측
"
"https://news.hada.io/topic?id=5408","Oil - 새로운 Unix 쉘","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Oil - 새로운 Unix 쉘

   - bash 를 더 나은 언어와 런타임으로 업그레이드
   - 쉘은 UI이자 언어 ⇨ OSH 와 Oil 두 개의 언어로 구성
   ㅤ→ OSH : POSIX & bash 호환 쉘 구현체. 기존 쉘 스크립트를 실행
   ㅤ→ Oil : 배우고 작성하기 쉬운 새로운 쉘 언어. 파이썬/JS등에 익숙한 개발자를 위한 설계. 동적 타입 및 구조화된 데이터 지원
   - 오픈소스 Python으로 작성한 후 C++로 변환해서 작고 빠르게 만듬. 최종 실행파일은 파이썬 의존성 없음

   Oil 이 Oils 로 이름이 변경되고 주소가 https://oils.pub/ 로 변경 되었습니다.
"
"https://news.hada.io/topic?id=5440","goormIDE - 지금, AI 코드 자동 완성을 경험해 볼 때","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  goormIDE - 지금, AI 코드 자동 완성을 경험해 볼 때

   - 클라우드 기반 구름IDE에서 AI 코드 자동 완성 기능(기능명 : 코드바이저)을 베타 출시
   - GPT-2 모델을 기반으로 학습 데이터를 Fine-tuning 함
   - 베타 기간 내에 모든 유저가 무료로 사용할 수 있음
   - 추론 가능한 개발 언어는 Java, Javascript, Python을 제공함

   좋네요
   어제 올라온 "" IDE의 미래 https://news.hada.io/topic?id=5428 "" 글과도 연결 되는 듯

   답변과 관심 감사드립니다!
   저희 구름도 '모두가 개발자가 된다'라는 비전으로 노력중에 있습니다.
   기회가 된다면 xguru님을 회사로 초대드려 이야기를 나눠보고 싶습니다.
   괜찮으시다면 메일부탁드립니다!
   제 이메일 주소 남겨드립니다. (nick.cha@goorm.io)
   감사합니다.
"
"https://news.hada.io/topic?id=5384","The Information이 뽑은 2021년 가장 유망한 스타트업 50","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                The Information이 뽑은 2021년 가장 유망한 스타트업 50

   Enterprise AI
   1 Hugging Face : 머신러닝을 위한 Github
   2 AppZen : 재무팀을 위한 자동화 도구
   3 OctoML : 아파치 TVM기반으로 머신러닝 모델 최적화를 통해 비용 절감
   4 Focal Systems : 상점 선반을 비디오 카메라로 감시하고 재고 충전 필요시 알려주는 서비스
   5 Hypersonix : 머신러닝 모델을 이용하여 레스토랑/리테일 매장의 수익을 증대
   6 Streamlit : 머신러닝 엔지니어/데이터 사이언티스트들이 데이터기반 웹앱을 만들수 있게 도와주는 도구
   Fintech
   1 Unit : Banking as a Service. 은행 기능을 자신의 서비스에 임베드 가능하게
   2 Altruist : 디지털 투자 소프트웨어
   3 Routable : 회사를 위한 청구서, 지불, 인보이스 관리 서비스
   4 Jeeves : 글로벌 스타트업을 위한 기업용 신용카드, 로컬 페이먼트, 크로스 보더 트랜잭션
   5 Selfbook : 호텔들을 위한 예약용 결제 시스템(애플페이, 구글페이, Paypal등을 직접 지원)
   Media
   1 Virtually Human Studio : NFT 기반의 경마 게임 Zed Run 개발사
   2 Mirror : NFT기반 크라우드펀딩으로 뉴스레터 및 에세이 퍼블리싱
   3 Superplastic : 자체 IP 기반의 엔터테인먼트 회사. 캐릭터를 만들고, SNS로 홍보하고, TV/영화/게임을 만들고 수집용 장난감 판매
   4 Pietra : 인플루언서/창작자들이 자신의 브랜드를 시작하고 상품을 팔게 도와주는 회사. 제품 디자이너와 공급자를 창작자와 연결
   5 Stir : 창작자들을 위한 수입 관리 및 분배 https://news.hada.io/topic?id=3718
   6 Recurrent : 자동차/군사/요리/과학/아웃도어등 니치 마켓용 미디어(잡지/웹사이트 등)들을 사들여서 고객과 연결하고 관리 및 성장시키는 디지털 미디어 회사
   7 Brat : Gen Z용 오리지널 시리즈 영상을 만들어 유튜브 및 광고 플랫폼에서 유통하는 디지털 비디오 스튜디오
   B2B
   1 Turing : 원격 근무 가능한 개발자를 찾고 프리랜서 및 시간 단위로 고용하고 관리하도록 도와주는 서비스
   2 Seekout : AI 기반의 리크루팅 플랫폼. 원하는 분야의 지원차를 찾아주는 검색엔진. 깃헙 활동/논문/특허 등으로 랭크를 적용
   3 Productiv : CIO들이 자신들의 SaaS 이용 현황 및 비용을 트래킹하는 걸 도와주는 도구
   4 Vendr : 기업을 위한 SaaS 구매 및 관리 솔루션. 어떤 SaaS가 필요한지 회사에 맞게 추천하고 가격 협상 및 구매를 관리
   5 Privacera : 클라우드 서버와 DB에 저장된 민감한 데이터를 찾고 암호화하고 접근 관리
   6 Teleport : 회사의 컴퓨팅 자산 접근 권한을 통합 관리 및 어디에서나 접속 가능하게(SSH,쿠버네티스,웹,DB)
   7 Temporal : Uber의 Cadence 오픈소스 기반 마이크로서비스 오케스트레이션 플랫폼. 마이크로서비스간에 더 안정적인 연결을 지원
   Crypto
   1 Chia Network : 에너지를 많이 소비하지 않는 Proof of Space & Time 기반 환경 친화적인 암호화폐
   2 Audius : 블록체인 및 암호토큰 기반 탈중앙화 음악 스트리밍 서비스. 팬과 아티스트를 직접 연결
   3 TRM Labs : 불법 활동(자금세탁 등)를 확인할 수 있도록 컴플라이언스 및 리스크 관리 서비스를 제공하는 블록체인 정보 회사
   4 Zerion : 디지털 지갑 및 DeFi 통합 투자 서비스
   5 QuickNode : 개발자, 결제 회사, 암호화폐 거래소 등이 손쉽게 블록체인 기반 어플리케이션을 개발할 수 있도록 지원
   6 Mojito : 회사들이 NFT 마켓플레이스를 만들 수 있게 지원하는 개발 플랫폼
   Consumer
   1 TrueBill : 자신의 소비 현황를 분석 및 개선할 수 있게 도와주는 개인 재무 앱
   2 Headway : Therapist와 환자를 연결해주는 정신 건강 관리(Mental Healthcare) 앱
   3 DoNotPay : 대신 싸워주는 로봇 변호사(자동화 서비스). 잘못 발부된 주차위반 티켓, 보험 청구, 항공사 불편 청구, 구독 취소, 이웃 소음, 스팸 처리 등
   4 Italic : 고급 브랜드에 납품하는 제조사들의 브랜드 없는 상품을 싸게 파는 사이트 (버버리,막스마라,프라다,리츠칼튼 등의 옷,화장품,집안용품 납품공장)
   5 Lunchclub : 비슷한 직업적 관심사들을 가진 사람들끼리 가상 또는 실제로 미팅을 가지게 해주는 AI기반 소셜 네트워킹 앱
   6 FitXR : 오큘러스 퀘스트에서 실행하는 가상현실 피트니스 앱
   China
   1 NeoX Biotech : 머신러닝을 이용한 신약 개발 회사. 단백질 간의 상호작용에 중점을 두고, 하루에 10만개의 화합물을 테스트
   2 XYZ Robotics : 공장과 창고에 사용하는 로봇 팔 & 소프트웨어를 만드는 회사
   3 Cyclone Robotics : 기업 고객을 위한 Robotic Process Automation 소프트웨어 개발. 고객 지원 채팅, 신입 직원 등록, 인벤토리 추적 등
   4 Taichi Graphics : 파이썬으로 고성능 애니메이션을 만드는 오픈소스 컴파일러를 만드는 개발사
   5 Accunome Sciences : 인플루엔자,COVID-19 및 기타 전염병에 대한 분자 진단 기기 및 테스트 개발사
   6 Hand Hitech : 트럭을 위한 센서와 모니터링 도구를 만드는 회사
   7 Yahaha : 클라우드 기반의 게임을 지원하는 플랫폼 개발사
   Commerce
   1 MikMak : 컨슈머 제품 제조사들이 자신의 상품을 아마존/타겟/월마트 등을 통해서 팔수 있게 도와주는 멀티채널 이커머스 서비스
   2 Chord Commerce : 판매자들이 자신의 사이트에서 직접 물건을 팔고 배송할 수 있도록 지원. 호스팅해주는 Shopify 등과 달리 판매자가 직접 고객의 데이터를 취득하고 분석할 수 있음
   3 The Yes : 고객의 취향에 따라 물건을 추천해주는 웹사이트. StitchFix + Netflix
   4 Zapp : 영국/네덜란드/프랑스에서 음식과 술을 20분내에 배달하는 서비스. 대도시에서 다소 비싼 음식들을 타겟으로 해서 차별화하고 수익을 내는 중
   5 Drop Party : 온라인 팬덤을 가진 브랜드/개인들이 스페셜 세일 이벤트를 하도록 도와줌
   6 Taxdoo : SMB와 이커머스 판매자들을 위한 세금 도우미

   DoNotPay는 제가 블로그로 썼을 정도로 관심이 있었던 회사인데요. https://estimastory.com/2016/07/26/robotlawyer/ 이렇게까지 성장하다니 대단합니다.
   정말 소중한 정보를 올려주셔서 감사합니다!

   저는 가장 재미났던거는 DoNotPay 네요
   원래 캘리포니아에서 잘못 발부된 주차위반 티켓을 대신 싸워서 돈을 안내게 해주는 서비스로 시작
   이제는 직접 싸우기 귀찮은 작은 일들을 대신 싸워주는 ""로봇 변호사"" 서비스로 확장
   ""항공사 잘못으로 비행기가 연착되어서 내 휴가일정이 망가졌어요""
   ""환불받고 싶은데 처리를 안해줘요""
   ""인스타그램에서 내 사진을 도용한 계정이 있어요""
   이런거 내용을 적어서 보내면 알아서 대신 싸워주고 처리해주는 서비스 입니다.

   링크가 너무 많아서 각 회사의 URL만 별도로 링크합니다.
   Enterprise AI
   1 Hugging Face https://huggingface.co
   2 AppZen https://appzen.com
   3 OctoML https://octoml.ai
   4 Focal Systems https://focal.systems
   5 Hypersonix https://hypersonix.ai
   6 Streamlit https://streamlit.io
   Fintech
   1 Unit https://www.unit.co
   2 Altruist https://altruist.com
   3 Routable https://routable.com
   4 Jeeves https://www.tryjeeves.com
   5 Selfbook https://selfbook.com
   Media
   1 Virtually Human Studio https://vhslab.com
   2 Mirror https://mirror.xyz
   3 Superplastic https://superplastic.co
   4 Pietra https://pietrastudio.com
   5 Stir https://usestir.com
   6 Recurrent https://recurrent.io
   7 Brat https://brat.tv
   B2B
   1 Turing https://turing.com
   2 Seekout https://seekout.io
   3 Productiv https://productiv.com
   4 Vendr https://vendr.com
   5 Privacera https://privacera.com
   6 Teleport https://goteleport.com
   7 Temporal https://temporal.io
   Crypto
   1 Chia Network https://chia.net
   2 Audius https://audius.co/
   3 TRM Labs https://trmlabs.com
   4 Zerion https://zerion.io
   5 QuickNode https://quicknode.com
   6 Mojito https://mojito.xyz
   Consumer
   1 TrueBill https://truebill.com
   2 Headway https://headway.co
   3 DoNotPay https://donotpay.com
   4 Italic https://italic.com
   5 Lunchclub https://lunchclub.ai
   6 FitXR https://fitxr.com
   China
   1 NeoX Biotech https://neoxbiotech.com
   2 XYZ Robotics https://xyzrobotics.ai
   3 Cyclone Robotics https://cyclone-robotics.com
   4 Taichi Graphics https://taichi.graphics
   5 Accunome Sciences http://accunome.com.cn
   6 Hand Hitech http://hand-hitech.com
   7 Yahaha https://yahaha.com
   Commerce
   1 MikMak https://mikmak.com
   2 Chord Commerce https://chord.co
   3 The Yes https://theyes.com
   4 Zapp https://tryzapp.com
   5 Drop Party https://drop.party
   6 Taxdoo https://taxdoo.com

   감사합니다.
"
"https://news.hada.io/topic?id=5419","SliTaz - 50MB 초경량 GNU/Linux 배포본","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    SliTaz - 50MB 초경량 GNU/Linux 배포본

   - 빠른 부팅, 고성능, 초고속 설치
   - 50MB 설치파일로 풀 데스크탑 포함. 256MB램에서도 잘 실행
   - i386, x86_64, ARM 지원
   - 자동 하드웨어 감지
   - LiveCD 로 설치 지원
   - 자체 패키지매니저 Tazpkg로 5000 이상의 소프트웨어 추가 설치 가능

   작은 리눅스 배포본들은 이 외에도 여럿있습니다.
   - https://puppylinux.com/
   - https://lubuntu.net/
   - https://xubuntu.org/
   SliTaz는 개발된지 꽤 오래 되었지만 활동이 활발한 편은 아니었는데,
   5.0 버전이 무려 7년만에 정식 릴리즈 되었길래 올려봅니다.
"
"https://news.hada.io/topic?id=5353","잘 알려지지 않은 PostgreSQL 기능들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        잘 알려지지 않은 PostgreSQL 기능들

   - Insert on Conflict(Upsert) 시 수정/추가된 Row 수 알기 : xmax
   - 특정 컬럼에 권한 부여하기
   - 멀티 패턴 매칭 : SIMILAR TO 또는 ~ 정규식
   - 현재 시퀀스값 증가시키지 않고 알아내기 : pg_sequence_last_value()
   - 멀티라인 SQL과 \COPY 같이 사용하려면 : TEMPORARY VIEW 또는 COPY와 \g 이용
   - 자동 생성 키에 값 설정 막기 : 테이블 생성시 GENERATED ALWAYS 지정 (GENERATED BY DEFAULT 대신)
   - Pivot 테이블 만들기 : pandas.pivot_table, \crosstabview 또는 tablefunc 확장 사용
   - Dollar Quoting
   ㅤ→ $$ 와 $$ 사이의 모든 글자는 문자열로 인식
   ㅤ→ $JSON$ / $function$ 처럼 안에 Tag이용 가능
   ㅤ→ ::jsonb 를 붙이면 빠르게 jsonb객체 생성
   - DB객체에 코멘트 달기 : COMMENT ON TABLE/COLUMN, Dollar Quoting 이용해서 긴 문자열 설명 추가도 가능
   ㅤ→ 작성 : COMMENT ON TABLE sale IS 'Sales made in the system';
   ㅤ→ 보기 : \d+ sale
   - DB 별 History 별도로 기록하기
   ㅤ→ \set HISTFILE ~/.psql_history- :DBNAME
   - 자동완성을 대문자로 하기 : \set COMP_KEYWORD_CASE upper
   - 슬립 주기 : pg_sleep(초), pg_sleep_for('4 minutes 14 seconds')
   - 서브 쿼리 없이 그룹의 첫/마지막 줄 가져오기 : DISTINCT ON (그룹 컬럼)
   - uuid-ossp 확장없이 UUID 생성하기 : gen_random_uuid() version 4 UUID를 생성
   - 재현 가능한 랜덤 데이터 생성 : setseed() 로 시드를 같게
   - 기존 데이터를 즉시 검증하지 않고 조건 추가하기 : ALTER 할때 NOT VALID 로 조건만 먼저 추가하고, ALTER VALIDATE로 기존 데이터 검증은 따로 실행
   - 오라클의 Synonym 같은 기능을 이용하기 : search_path 변경 (Zero Downtime Migration시 유용)
   - 겹치는 Range 찾기 : OVERLAPS 연산자

   GeekNews 에는 너무 postgres 소식만 올라오는 거아닌가요! (농담입니다.)
   저희 제품도 pg 를 주로 사용하고 있어, 감사할 따름입니다. :)

   요즘 postgres가 대세라서 그런겁니다..!?

   postgres 가 최고시다

   동감합니다.
"
"https://news.hada.io/topic?id=5443","Amazon Linux 2022(AL2022) 평가판 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Amazon Linux 2022(AL2022) 평가판 공개

   - AWS를 위한 차세대 아마존 리눅스
   - AL2022부터는 이제 메이저 버전이 2년 주기로 릴리즈 되며, 각 버전은 5년간 지원
   - Fedora를 업스트림으로 사용
   - SELinux 기본 활성화 및 적용
   - 재부팅/다운타임 없는 커널 라이브 패치 기능 포함(프리뷰에는 포함 안됨)
"
"https://news.hada.io/topic?id=5409","테크니컬 라이팅 4대 원칙","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             테크니컬 라이팅 4대 원칙

   ""짧게 써라, 명료하게 써라, 그림같이 써라, 무엇보다 정확하게 써라 - 조셉 퓰리처""
   ① 명확성 (Clarity) : 핵심어나 핵심 문장이 모호하게 사용되지 않고, 기술문서를 읽을 때 내용의 모호함이나 혼란 없이 한 번에 이해하도록
   ② 간결성 (Conciseness) : 기술적인 내용을 신속하고 정확하게 이해할 수 있도록 미사여구나 감탄사 등을 사용하지 않고, 간단하고 쉬운 단어와 간결한 문장을 사용
   ③ 정확성 (Accuracy) : 독자가 필요로 하는 정보를 기술적 오류 없이 정확하게 제공하는 것
   ④ 일관성 (Coherence) : 문서에 용어, 표현, 그리고 어조 등을 일관성 있게 사용하는 것

   감사합니다

   - 구글 테크니컬 라이팅 for 엔지니어 [영문] https://news.hada.io/topic?id=1642
"
"https://news.hada.io/topic?id=5373","hop - tar 보다 10배 빠른 아카이브 포맷","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      hop - tar 보다 10배 빠른 아카이브 포맷

   - 전체 아카이브를 풀지않고 랜덤으로 빠르게 특정 파일만 읽어내는 아카이브 포맷
   ㅤ→ 압축 안함, 랜덤 억세스, 빠른 추출 및 아카이빙 지원
   ㅤ→ unzip보다 25배, tar보다 10배 빠름
   - tar보다 단점은 append가 불가능하다는 것
   - 파일 경로의 해시배열을 저장하고, 파일을 사전순으로 정렬해서 저장해서 빠르게 처리
   - 제작자가 개발중인 빠른 번들러 bun 에서 사용 예정

   개발이 이제 중단되었나보네요 ㅜㅜ

   저는 데이터 처리용으로 압축안하고(store) zip 만들고 이걸 mount해서 사용하고 있는데, 근데 읽다보니 컨셉이 이해가 안가네요. zip도 전체 아카이브 안풀고 파일 읽을 수 있는데 왜 unzip과 비교를 하는거죠

   생각보다 별로 범용적인 것 같지는 않은데… 하고 생각했는데, 개발 목적이 확실하군요. 번들러에서 쓸 것이니 최대 파일 크기가 4GB 이상일 필요가 없고, 기본적으로 읽기 전용이며, 대신 개별 파일에 대한 랜덤 액세스 속도는 빠르게 하여 자잘한 파일이 많은 node_modules 폴더 처리를 개선하겠다는 그런 식이로군요.

   zig 언어는 처음 보네요
"
"https://news.hada.io/topic?id=5332","GPD Pocket 3 - 초소형 핸드헬드 PC","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GPD Pocket 3 - 초소형 핸드헬드 PC

   - 8인치, 1920x1200 IPS, 0.7kg
   - 인텔 Core i7-1195G7/Pentium Silver N6000 2개 모델
   - 16GB/8GB
   - 1TB/512GB SSD
   - RS232 포트로 다양한 디바이스 연결 가능
   - KVM 모듈로 HDMI/USB IN을 제공, 시스템 관리자에게 최적
   ㅤ→ GPD의 키보드/마우스/화면을 다른 장비에서 외장모니터/입력장치로 사용 가능
   - 180도 꺽이고 180도 회전하는 디스플레이로 타블렛처럼 평평하게 사용 가능
   - 4096단계 필압 감지 스타일러스 내장 (Surface Pen 호환)
   - QWERTY 풀 키보드 + 백라이트
   - 알루미늄 유니바디
   - 키보드 상단에 터치패드 + 3개의 마우스버튼 내장해서 양손 엄지로 조작 가능
   - 전면 1080P 카메라 내장
   - TPM2.0 지원해서 윈도우 11 호환
   - 3개의 USB 3.2 포트
   - 1개의 HDMI 와 1개의 USB-C/썬더볼트4 포트로 2개의 디스플레이 지원 : 4K/60Hz ~ 8K/60Hz
   - 10000mAh 배터리, 45W PD 충전, 비디오 재생 8.5시간
   - 윈도우 10 Home 버전 기본 내장

   인디고고 에서 펀딩중이네요. GPD는 항상 새버전은 인디고고에서 펀딩 받고 그 이후에는 알리등 다른 채널에서 파는 듯
   https://indiegogo.com/projects/…
   가격 (DHL배송비 포함)
   - Pocket 3 - 1195G7: 117.9만원
   - Pocket 3 - 1195G7 + module(KVM/RS232/USB-A): 127.4만원
   - Pocket 3 - N6000: 76.7만원
   - Pocket 3 - N6000 + module: 86.2만원
"
"https://news.hada.io/topic?id=5425","Caffeine - Minimum Viable Backend 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Caffeine - Minimum Viable Backend 오픈소스

   - 프로토타이핑 및 MVP를 위한 JSON 데이터 REST 서비스
   - DB필요없이 자동으로 관리(Postgres 이용도 가능)
   - 멀티 객체/네임스페이스에 대한 REST 기반 CRUD 제공
   - 스키마 검증
   - jq 와 비슷한 검색 기능
   - CORS 지원
   - 컨테이너로 디플로이 가능
   - Go 오픈소스
"
"https://news.hada.io/topic?id=5429","Substack 유료 구독자 1백만명 돌파","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Substack 유료 구독자 1백만명 돌파

   - 오픈한지 4년만
   - 상위 10개 콘텐츠는 연수익 $20M 이상 (237억원)
   - 향후 계획
   ㅤ→ 오디오, 비디오 및 커뮤니티 구축기능에 대한 지원을 확대하고 퍼블리싱 도구 개선
   ㅤ→ 서브스택 이코노미를 키워서 작가들이 필요로 하는 서비스와 연결 (편집/디자인/보험/파이낸싱 등)
   ㅤ→ 작가들과 함께 크로스 프로모션, 협업, 독자와 연결 등 도움이 되는 네트워크를 만들기
"
"https://news.hada.io/topic?id=5393","RegEX Learn - 처음부터 단계별로 배우는 정규식","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    RegEX Learn - 처음부터 단계별로 배우는 정규식

   - 총 55 단계별 인터랙티브 학습
   ㅤ→ 완전 기초부터 간단한 설명과 함께 정규식 문제를 풀면서 진행
   ㅤ→ 실시간으로 실행 결과가 보여서 확인 가능
   ㅤ→ 키보드 만으로 진행 가능
   - Playground 및 Practice 추가 예정
   - JavaScript 오픈소스
"
"https://news.hada.io/topic?id=5437","TSMC의 "애플 우선" 정책 때문에 AMD와 퀄컴이 반기를 들다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  TSMC의 ""애플 우선"" 정책 때문에 AMD와 퀄컴이 반기를 들다

   - 대만 언론에 도는 TSMC와 Apple의 밀월 관계에 대한 루머
   ㅤ→ AMD와 퀄컴이 TSMC의 애플 우대 정책 때문에 3나노 공정을 ""삼성 파운드리"" 쪽으로 이전하기로 결정했다는 것
   - 삼성은 내년 상반기에 1세대 3나노 공정이 가능할 것으로 예상되지만 2023년까지는 주력 프로세서 생산은 힘들 것
   - 애플은 자체 설계한 5G 모뎀칩 때문에 더더욱 TSMC의 기술이 필요. 2022년에는 이 모뎀들을 TSMC N4(4나노) 공정에서 생산하지만, 2023년에는 N3(3나노) 공정으로 전환할 예정 (니케이가 별도 보도)

   근데 삼성의 3나노는 트랜지스터 집적도가 TSMC 것보다는 엄청 떨어진다고 알려져 있어서 그냥 나노 공정 싸움이라고 보기는 좀 힘들듯 합니다.
   https://www.digitimes.com/news/a20210713VL201.html
   기사에 포함된 도표를 보면 삼성의 3나노는 인텔/TSMC의 7나노 공정보다도 집적도가 떨어진다고..

   디지타임스는 대만 매체인데다가, RTX 30 출시 초기때 물량 부족이 엔비디아가 삼성 파운드리에게 발주한 8nm 공정의 수율 문제 때문이라고 주장하는 등 여러번 친 TSMC 시각에서 삼성 상대로 언플을 해왔기에 객관적인 자료라고 평가하기에는 조금 부족하지 않나 싶습니다.

   저도 대만 매체라서 약간 께름칙 했는데 그런 일이 있었군요.
   정작 이거 3나노 까지 제대로 비교한 자료가 디지타임즈 말고는 잘 없더라구요.
   https://semiwiki.com/semiconductor-manufacturers/samsung-foundry/…
   7nm/5nm 관련 공개된 자료들로 정리 된 것으로 보면 저 도표의 앞부분 숫자들은 확실해보이긴 합니다.
   삼성이 2nm 공정을 2025년 대량생산 목표라고 했으니, 더 지켜봐야 할 듯
   https://anandtech.com/show/16995/…
"
"https://news.hada.io/topic?id=5395","Netlify Drop 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Netlify Drop 공개

   - HTML/CSS/JS를 Drag&Drop 하면 바로 퍼블리시 해서 Live 해주는 기능
   ㅤ→ 즉시 Unique URL 생성해서 타인에게 공유 가능
   ㅤ→ 압축 파일 또는 폴더를 업로드
   - 계정 없이 바로 사용 가능
   ㅤ→ 비 로그인시 24시간 동안만 유지
   ㅤ→ 영구적으로 운영하려면 Netlify 무료 계정 필요
   ㅤ→ 새 버전을 다시 드롭하면 즉시 반영
   - 커스텀 도메인 지원
   - HTTPS 무료로 자동 지원
   - Versioning 및 원클릭 롤백 가능

   https://netlify.com/press/…
   Netlify 는 오늘 2.3조원 가치로 1230억원 펀딩을 받았습니다.
   동시에 GraphQL 플랫폼인 OneGraph 인수도 발표했네요.
   110억을 들여서 Netlify Jamstack Innovation Fund 를 만들고 Jamstack 회사들에게 투자하겠다는 발표도 포함
"
"https://news.hada.io/topic?id=5422","YARP - MS의 리버스 프록시 개발 툴킷의 리버스 프록시 개발 툴킷

   ""Yet Another Reverse Proxy""
   - MS내부에서 여러팀이 각각 리버스 프록시를 개발하고 있어서, 이에 대한 공통 솔루션으로 만든 .NET 기반 오픈소스
   - 튼튼하고 성능좋고 쉽게 커스터마이징 가능한 프록시 개발을 목표
   - 대부분의 리버스 프록시가 필요로 하는 기능들을 내장
   - Conf파일 또는 API를 통해서 설정 가능

   호오… 몇년전에 리버스 프록시 검토하다가 본 적 있었는데 아직 계속 개발하고 있네요! 리버스 프록시가 많은데 또 개발해야할 이유는 사실 잘 모르겠어요 ^^;
"
"https://news.hada.io/topic?id=5388","Java Virtual Threads 프리뷰 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Java Virtual Threads 프리뷰 공개

   - 비싼 OS 스레드 대신 사용 가능한 ""경량 사용자-모드 스레드"" 구현체
   ㅤ→ java.lang.Thread 에 구현을 추가
   - 기존 스레드와 거의 동일한 동작을 하는 수백만개의 인스턴스를 생성 가능
   ㅤ→ 기존 JDK 도구 들을 그대로 이용해서 가상 스레드의 디버깅 및 프로파일링 가능
   ㅤ→ 기존 OS 스레드의 구현을 바꾸거나, 자동으로 전환하지 않음
   - Thread thread = Thread.ofVirtual().name(""duke"").unstarted(runnable);
   - Thread.startVirtualThread(Runnable)
   - Thread::isVirtual 로 확인 가능

   오호 Actor model 과 어떤 차이가 있을지
"
"https://news.hada.io/topic?id=5364","Grafana OnCall 공개 - 쉬운 온콜 관리 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Grafana OnCall 공개 - 쉬운 온콜 관리 도구

   - DevOps 와 SRE 팀이 효율적으로 협업할 수 있도록, 온콜 로테이션을 셋업하고 관리해주는 도구
   ㅤ→ iCal 기반 온콜 스케줄 관리
   ㅤ→ 문제 발생시 대처를 위한 Escalation 경로 생성
   ㅤ→ Incident를 한눈에 조망 가능한 대시보드를 Grafana UI 안에서 지원
   ㅤ→ 자동 그룹핑을 통해서 Slack 알림을 최적화
   ㅤ→ Datadog, New Reric, AWS SNS 등과의 연동 지원
   - Grafana가 인수한 Amixr의 제품
   - Grafana Cloud 무료/유료 사용자 대상 베타 프리뷰 진행 시작

   Grafana, OnCall 오픈소스 공개
"
"https://news.hada.io/topic?id=5375","파일시스템 업그레이드로 SSD비용 수백만불 절약한 후기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     파일시스템 업그레이드로 SSD비용 수백만불 절약한 후기

   - Heap은 분석용 멀티 페타바이트 Postgres를 운영중
   - 빠르게 성장하면서 노드 사용률이 80%를 넘어 수집 파이프라인에서 성능문제가 발생
   - 문제의 원인은 SSD는 사용률이 100%에 가까워 지면 성능이 저하되는 경향이 있다는 것
   - CoW(Copy-on-Write)인 ZFS를 사용하는 것 때문에 문제가 악화됨
   ㅤ→ 블록이 업데이트 될때마다 새로운 복사본을 작성
   - 물론, CoW는 여러가지 장점이 있음
   ㅤ→ 파일시스템 단위의 압축이 다른 파일시스템 대비 편해서 4-5x 압축하여 공간을 절약
   ㅤ→ 더 높은 내구성을 가져서 Postgrest의 full_page_writes를 비활성화 가능하고, 이로써 성능도 향상되고 전체 IO가 감소
   ㅤ→ 일관성을 보장해 주는 Point-in-time 스냅샷 - 페이지가 실제 변경 불가능하므로 스냅샷 중에도 예전 페이지를 유지
   - 하지만 ZFS 같은 CoW 파일시스템은 용량이 차면서 성능이 떨어짐
   ㅤ→ 페이지 업데이트 할 때마다 블록 얼로케이터가 빈 블락을 찾아야 하므로 사용률이 높아지면 성능 저하가 심각해짐
   ㅤ→ 이전에 언링크된 블록을 삭제하고 기존 블록들과 섞어야함
   ㅤ→ 더 높은 압축률을 얻기 위해 블록 크기를 64kb로 크게 설정해서 더 악화 되었음
   ㅤ→ 이런 이유로 인해서 ZFS의 사용률은 80%를 넘지 않는 것이 좋음
   - ZFS 2.x로 업그레이드 해서 lz4 압축에서 Zstandard 압축으로 변경하는 것을 시도
   ㅤ→ lz4는 엄청 빠르고 ~4.4x 정도의 압축률을 보임
   ㅤ→ Zstandard는 ~5.5x 까지의 압축률을 보여줘서 20%를 개선
   ㅤ→ 하지만 많은 벤치마크에서 Zstandard가 lz4보다 속도가 느리다고 나옴
   ㅤ→ 그래서 실제 상황에서 엄격한 테스트를 해보기로 함
   ㅤ→ 테스트 결과 쿼리 성능은 변하지 않고 스토리지 사용도가 ~20% 감소하고, 쓰기 쿼리 시간이 절반으로 감소
   - Heap의 DB클러스터는 5개의 노드로 나뉘어져서 각각의 ASG에 속함
   ㅤ→ 노드 변경은 간단히 ASG에서 분리하기만 하면, ASG 새로운 노드를 만들고 최종 백업본에서 리스토어하고 웜 스탠바이 모드에 들어감
   ㅤ→ 새로운 설정의 AMI를 만들고 각 노드를 하나씩 진행
   ㅤ→ 전체 사용량은 ~21% 줄었고, 쓰기시간이 50% 감소했고, 쿼리 성능은 별반 차이 없었음

   - Arch Linux 가 패키지 압축 도구를 xz에서 Zstandard로 교체 https://news.hada.io/topic?id=1227
   - 압축 알고리즘 르네상스 https://news.hada.io/topic?id=1228
   글에서는 CPU사용률 얘기가 없는데 HN에서 원저자의 댓글을 보니 ~40% 에서 ~50%로 증가했다고는 합니다.(Zstd가 CPU는 더 쓴다는 얘기)
   - https://news.ycombinator.com/item?id=29164727
"
"https://news.hada.io/topic?id=5344","Telegram Ad Platform","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Telegram Ad Platform

   - 1:N 채널에 있는 사용자에게 ""Sponsored Message""를 발송 가능
   ㅤ→ 사용자 정보를 취득/분석하지 않고 채널 사용자에게 똑같은 메시지 전송
   - 광고주는 메시지를 전송할 언어 및 대략적인 채널 토픽을 선택 가능
   ㅤ→ 특정 채널 선택/제외 가능
   - 메시지에 외부 링크는 포함 불가
   - 채널 소유주와 수익 공유(Revenue Sharing)
   - 관리자 도구에 텔레그램 계정으로 로그인 후 개인/조직 계정으로 광고 생성하여 발송 지원

   텔레그램으로 다수가 모인 채팅방 등에 광고하는 기능인데..
   외부 링크를 지원 안 하면.. 광고주가 이걸 얼마나 선호할 지는 잘 모르겠네요.
"
"https://news.hada.io/topic?id=5359","jog - 현재 폴더에서 실행한 최근 10개의 명령만 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    jog - 현재 폴더에서 실행한 최근 10개의 명령만 보기

   - 간단한 스크립트로 각 폴더별 zsh_history 를 생성
   ㅤ→ 나중에 ""현재 폴더""에서 실행한 최근 10개의 명령만 보여줌
   - .zshrc 에 아래 함수만 넣으면 설치는 끝
   function zshaddhistory() {
   echo ""${1%%$'\n'}|${PWD} "" >> ~/.zsh_history_ext
   }
   - zog 스크립트 실행해서 보기
   grep -v ""jog"" ~/.zsh_history_ext | grep -a --color=never ""${PWD} "" | cut -f1 -d""|"" | tail

   잘 동작합니다. 이게 필요했습니다 ^^
"
"https://news.hada.io/topic?id=5348","리브레오피스(LibreOffice) 7.3 알파1 버전 출시(테스트용) ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                리브레오피스(LibreOffice) 7.3 알파1 버전 출시(테스트용)

   리브레오피스(LibreOffice) 7.3 버전은 2022년 2월초에 출시될 예정입니다.
   참고로, 출시 계획은 다음의 링크에서 확인 하면 됩니다 https://wiki.documentfoundation.org/ReleasePlan/7.3
   LibreOffice 7.3 알파1(Alpha1) 버전은 2021년 6월 중순부터 개발하기 시작한 7.3버전의 개발에 대해 미리 출시되는 첫번째 버전입니다.
   2021년 6월 중순부터 지금까지 4764개의 커밋이 소스코드 저장소에 제출되었고, 760개이상의 버그
   가 버그질라에서 수정된 상태로 적용되었습니다.
   이 버전의 새로운 기능을 보여면 출시 정보를 확인하시기 바랍니다.
   리브레오피스(LibreOffice) 7.3 알파1(Alpha1)은 리눅스용, MacOS용 및 윈도우용을 다음의 링크에서 받을 수 있습니다.
   https://www.libreoffice.org/download/download/?version=7.3.0
   이 버전은 다른 출시 버전과 함께 설치할 수 있습니다.
   만약, 미리 출시된 알파1 버전에서 버그 및 문제를 찾았으면, 버그질라에 보고 부탁드립니다. (새로운 계정을 만들려면 합법적인 이메일 계정이 필요합니다)
   만약에 도움이 필요하면 QA IRC채널로 직접들어가서 문의할 수 있습니다.
   https://irc.documentfoundation.org/?settings=#libreoffice-qa
   리브레오피스(LibreOffice)는 자원봉사자 주도의 커뮤니티 프로젝트입니다.
   테스트를 도와주세요 - 감사합니다!
   참고
   760개이상의 수정된 버그 확인 https://bugs.documentfoundation.org/buglist.cgi/…
   출시 정보(ReleaseNotes)
   https://wiki.documentfoundation.org/ReleaseNotes/7.3
   버그질라(Bugzilla)
   https://bugs.documentfoundation.org/enter_bug.cgi/…
"
"https://news.hada.io/topic?id=5390","if(kakaoif(kakao) 2021

   - 더 나은 세상으로 나아가기 위한 카카오의 컨퍼런스
   - 11/16 ~ 11/18 온라인 진행
   120개의 세션들
   - 이용자의 소중한 일상을 지키는 카카오톡
   - 카카오와 사회혁신가가 만나면: 카카오임팩트 펠로우십 1년의 스토리
   - 기술과 혁신으로 금융과 고객의 만남을 더 이롭게
   - NFT, 크리에이터와 팬을 연결하다
   - 카카오엔터프라이즈가 그려가고 있는 Enterprise IT
   - 함께 성장하는 카카오 비즈니스
   - 카카오브레인, Unthinkable Question
   - 자신만의 시선을 큐레이션 하는 카카오 뷰 에디터의 하루
   - 소셜 오디오 플랫폼을 통한 새로운 경험과 기회
   - 쇼핑몰, 지그재그와 함께 성장하기 (with 오도어, 하비언니)
   - 모두를 위한 서비스, 카카오가 만들어가는 세상
   - 증오발언 근절을 위한 카카오의 원칙, 전문가들과 나누는 후일담
   - 카카오임팩트 펠로우십을 통해 본 사회 혁신가의 성장 요인
   - 카카오워크가 그리는 일하는 방식의 미래: 카카오워크 안에서 이뤄지는 업무의 완결
   - 카카오 광고와 솔루션 활용을 통한 파트너 비즈니스 성장 사례
   - 파트너와 함께 만드는 연결의 가치, 카카오 클래스
   - 필요한 물건이 알아서 배송된다~ 카카오 구독ON 서비스
   - 카카오지갑: 지갑서비스의 현황과 미래
   - 한정판 디지털 아트 플랫폼 Klip Drops
   - 커뮤니케이션, 선물하기
   - 서비스의 목소리를 찾아주는 글쓰기
   - 카카오와 함께하는 환경보호, 그린 디지털(Green Digital)을 위한 노력
   - 어린이를 위한 개인 정보 보호 콘텐츠
   - 카카오 구독ON 구독으로 비즈니스의 시야를 넓히다
   - 비즈니스를 더욱 쉽게: 카카오비즈니스 플랫폼
   - 카카오톡채널과 함께하는 비즈니스의 시작
   - 톡채널 채팅상담의 내일
   - 카카오 애자일 상담소 (1일차)
   - 기술로 꿈꾸는 새로운 세상
   - 모빌리티 데이터로 그리는 기술 생태계
   - 카카오뱅크, 은행을 엔지니어링 하다.
   - 카카오엔터프라이즈가 AI를 풀어내는 방법
   - 세상의 모든 금융을 카카오페이로 마음 놓고 할 수 있다면?
   - 카카오브레인, AI 공동연구 이렇게 한다
   - if(kakao)2021, Developers Recap
   - 클라우드텔레메트리 신입 개발자 이야기
   - 카카오모빌리티 자율주행의 현재와 미래
   - 카카오모빌리티 iOS 토크쇼
   - 스마트 메시지 서비스 개발기
   - 300GB 데이터로 어떻게 학습을 할 수 있을까?
   - ClickHouse - analytical database (2)
   - 실시간 로그 처리를 위한 Flink on k8s 구축 사례
   - ML로 기프트권 받을 유저 정하기
   - BERT보다 10배 빠른 BERT 모델 구축
   - TensorFlow Serving보다 10배 빠르게 서빙하기
   - 추천 시스템 airflow 2.0 도입기
   - 카카오 오픈소스팀 이야기 : 오픈소스 관리 OLIVE Platform 개발 사례 공유
   - 지라 쓰는게 애자일 아니라고 했어 안했어?!
   - 카카오맵 자전거 내비게이션을 만드는 과정
   - Kubernetes Live Upgrade API
   - Thing for Post Cloud-Native
   - Hadoop Data Migration
   - 자동화된 클라우드를 위하여 2.0
   - Event 기반 클라우드를 향해 킵(KEAP) Going
   - Kakao Cloud Portal_카카오 클라우드 포털 개발 여정
   - 이게 진짜 일 리 없어 : 초보 리더가 프로젝트에서 마주치는 어려운 상황들
   - Next.js와 Typescript를 이용한 프론트엔드 개발기
   - 톡패스워드 크롬 익스텐션 개발기
   - 6억 건의 광고데이터 마이그레이션
   - UI 테스트 경험기_좋은 코드 그 이상
   - Daum Mail Terraforming: 다음 메일 백엔드 레거시 개편기
   - 카카오톡 서버의 스프링 공화국 탈출기
   - 쿠버네티스 레디스 클러스터 구축기
   - 대량의 스트림 데이터를 실시간으로 분류하기 : Elasticsearch Percolator를 이용한 콘텐츠 분류
   - 아랑고야 피드를 부탁해! (RDB도 모르는 개발자의 아랑고DB 삽질기)
   - 티스토리에서 airflow활용기
   - 테스트 코드 한 줄을 작성하기까지의 고난
   - 티스토리 컴포즈 적용기
   - 다음카페 쿠버네티스 이관기
   - PostgreSQL ecosystem
   - 카카오 공용 하둡 운영 사례
   - Druid@Kakao
   - 카카오엔터프라이즈 딥러닝 음성 합성 기술
   - OCR 모델 개편 진행기
   - Tips for transfer learning
   - Knowledge Graph for Enterprise
   - AI on Knowledge Graph
   - 혼자서 퍼블릭 클라우드 전체를 배포하는 방법
   - 카카오엔터프라이즈가 만드는 지식그래프 플랫폼
   - DFerence, 클라우드 기반 AI 서빙 플랫폼
   - KiC에서 10분 만에 서비스 가능한 Gitlab 만들기
   - Multitenancy L2DSR Loadbalancer
   - 멀티 클러스터 환경을 위한 Kubernetes Operator 패턴
   - How to Provision Kubernetes Local Volume Dynamically
   - 이 멋진 코드에 컨벤션을! : 2달간의 컨벤션 구축 여정
   - functional css와 figma를 이용한 디자이너와의 웹프론트 협업이야기 (feat. AdorableCSS)
   - 한 줄로 구현하는 블록체인 어플리케이션
   - 블록체인도 영수증이 있다니! Receipt로 TX 결과를 확인해 보자
   - Klip Drops Smart Contract - 수억 원 작품을 거래하는 플랫폼을 블록체인 컨트랙트로 간단하게 구현해보자
   - 고성능 블록체인 지갑 서비스 Klip 개발기
   - Distributed tracing 도입기 - Microservice architecture에서의 debugging
   - Klaytn을 이용하여 NFT 활용하기: 발행부터 판매까지
   - 블록체인 비호환 변경 a.k.a 하드 포크
   - Traffic Time/Speed Prediction of Kakao Mobility
   - Klaytn Blockchain API의 수평적 확장
   - 카카오 T 바이크 신규 모델 런칭 스토리
   - 모빌리티 서비스를 위한 ML Lifecycle 자동화
   - KakaoGame SDK의 Robustness 키우기
   - 카카오모빌리티의 MLOps 도입기
   - 안드로이드 기반 키오스크 개발 시작하기
   - Open Water Diver? OpenSource Diver!
   - Angular의 Dependency Injection 왜 필요한가요?
   - Commerce Query data Rebuild Success 했을까
   - Webflux로 막힘없는 프로젝트 만들기
   - DREAM BIG: large-scale로 문제 해결하기
   - 은행 전체계좌조회 API Renewal. 오슬로
   - 이미지 검색 및 질의응답을 위한 의미 기반 그래프 학습 알고리즘
   - Generative Adversarial Networks을 이용한 Nickface 개발
   - 레이블 없이 똑똑한 인식 모델 만들기
   - 실시간으로 관계 파악하기
   - AI 장면 분석을 통한 비디오 인코딩 최적화
   - 딥 러닝으로 그려내는 디지털 휴먼
   - 카카오웹툰 작품 추천 목록 재구성
   - 카카오웹툰 서비스 포스트모템
   - 카카오페이 프론트엔드 개발자들이 React Query를 선택한 이유
   - Kubernetes Cluster 확장 어디까지 알아보고 오셨어요?
   - 비대면 계좌개설을 위한 딥러닝 기술 적용기
   - Klaytn 블록체인 데이터 추출하기

   세션정보가 JSON이길래.. 가져다가 JQ로 타이틀만 추출했습니다.
"
"https://news.hada.io/topic?id=5424","elfshaker - 바이너리에 최적화된 고성능 버전 관리 시스템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  elfshaker - 바이너리에 최적화된 고성능 버전 관리 시스템

   - Rust로 작성된 CLI 오픈소스
   - 현재 폴더의 스냅샷을 고도로 압축된 팩 파일에 저장한 뒤, 내부 파일들에 빠른 접근 가능
   ㅤ→ 인크리멘털 빌드의 obj 파일들 처럼 유사한 파일을 많이 저장하는데 유용
   - 수천개의 LLVM빌드를 가진 clang 빌드에 적용시 400 Gib → 100 Mib 로 용량을 압축하고, 어떤 커밋에든 4초안에 접근해서 바로 사용 가능
   ㅤ→ manyclangs 라는 별도 프로젝트로 제공
   - 리눅스/맥/윈도우 모두 지원을 목표
"
"https://news.hada.io/topic?id=5376","Odyssey - 스케일러블 PostgreSQL 커넥션 풀러","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Odyssey - 스케일러블 PostgreSQL 커넥션 풀러

   - 멀티쓰레드 처리
   ㅤ→ 워커 쓰레드 갯수를 지정해서 처리 성능을 확장 가능
   ㅤ→ 각 쓰레드별로 인증과 Client-to-Server/Server-to-Client 요청을 프록시 처리
   ㅤ→ 모든 워커 쓰레드는 글로벌 서버 커넥션 풀을 공유
   ㅤ→ 멀티쓰레딩 설계가 SSL/TLS 성능에 중요한 역할을 함
   - 고급 트랜잭션 풀링
   ㅤ→ 현재 트랜잭션 상태를 추적하여 의도치 않은 클라이언트 끊김 발생시 자동으로 커넥션 Cancel 및 중단된 트랜잭션 Rollback 후 커넥션을 풀로 되돌림
   ㅤ→ 마지막 커넥션 오너를 기억하고 있어서, Client-To-Server 할당시 다시 클라이언트 옵션 설정할 필요 없음
   - 더 나은 풀링 관리
   ㅤ→ Database 와 User 페어로 커넥션 풀 정의 가능
   ㅤ→ 각 풀이 별도의 인증/풀링모드/제한 설정을 가질수 있음
   - 인증
   ㅤ→ SSL/TLS 모든 기능 지원
   ㅤ→ MD5, clear text, PAM, LDAP 인증 지원
   - 로깅
   ㅤ→ 각 커넥션당 UUID 생성
   ㅤ→ 모든 로그당 ID를 기록해서 트래킹 가능
   ㅤ→ 로그파일/시스템 로거로 이벤트 로깅 지원
"
"https://news.hada.io/topic?id=5394","Cloudflare Pages, 풀스택 지원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Cloudflare Pages, 풀스택 지원

   - Cloudflare Workers를 Backend로 이용 가능하게 확장
   ㅤ→ 기존에도 연동은 가능 했지만 이제 서버리스 함수를 Pages 프로젝트에서 같이 개발 및 배포 가능
   ㅤ→ ./functions 폴더에 hello.js 를 넣으면 /hello 로 호출 가능
   ㅤ→ 커밋시에 자동으로 Worker를 배포하고, URL 매핑을 진행
   - Workers에서 사용하던 바인딩 그대로 제공
   ㅤ→ KV namespace
   ㅤ→ Durable Object namespace
   ㅤ→ R2 (S3호환) 지원 예정
   ㅤ→ 환경 변수
   ㅤ→ Secret 지원 예정 : 암호화된 환경 변수
   - SvelteKit 연동 지원
   - Server-Side Rendering 사용 가능
   - 기존에 개발한 Worker 는 ES 모듈로 생성해서 바로 첨부 가능

   - Cloudflare, 빠른 시간 안에 빠른 사이트를 빌드할 수 있게 해주는 Cloudflare Pages 공개 https://news.hada.io/topic?id=3418
   - CloudFlare R2 Object Storage 공개 https://news.hada.io/topic?id=5100
   - CloudFlare, Durable Objects 베타 공개 https://news.hada.io/topic?id=2930
   - CloudFlare, Workers Unbound 서버리스 베타 시작 https://news.hada.io/topic?id=2543
   - CloudFlare가 Workers의 콜드 스타트 시간을 0으로 만든 방법 https://news.hada.io/topic?id=2567
   - Cloudflare Workers, Native Rust 지원 시작 https://news.hada.io/topic?id=4986
   - Show GN: edge-yacht - Cloudflare Workers에서 동작하는 멀티플레이어 게임 https://news.hada.io/topic?id=5305
"
"https://news.hada.io/topic?id=5345","Denoflare - Cloudflare Workers를 Deno로 개발하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Denoflare - Cloudflare Workers를 Deno로 개발하기

   - Cloudflare Workers를 Deno 기반으로 더 개발하기 편하게 만드는 싱글 CLI 도구
   ㅤ→ Wrangler/Node/npm/webpack 등 필요 없음
   - ESM-based Workers 개발 지원
   - 로컬에서 개발 및 실행 가능 (serve)
   - JS/TS 파일을 로컬 또는 https URL에서 디플로이 가능 (push)
   - CLI에서 Worker 모니터링 지원 (tail)
   - 정적 문서 사이트 자동 생성 (site)

   Miniflare 가 가지고 있는 로컬 개발 기능을 Deno로 구현했다고 보면 되네요.
   실제로는 Miniflare 공개 이전부터 개발했다고 합니다.
   - Miniflare - CloudFlare Workers 로컬 시뮬레이터 https://news.hada.io/topic?id=4577
"
"https://news.hada.io/topic?id=5444","구글 Filament - 멀티플랫폼용 실시간 물리 렌더링 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   구글 Filament - 멀티플랫폼용 실시간 물리 렌더링 엔진

   - Physically Based Rendering (PBR) 엔진
   - 안드로이드,iOS,윈도우,리눅스,macOS,WebGL2 지원
   - 최대한 작고 효율적으로 설계된 C++ 오픈소스
   - 고품질의 2D/3D 렌더링을 쉽게 할 수 있는 도구와 API 제공
   ㅤ→ 안드로이드 개발자를 위해 만들었지만, 어디든 사용 가능
"
"https://news.hada.io/topic?id=5438","Blueboat - Cloudflare Workers의 오픈소스 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Blueboat - Cloudflare Workers의 오픈소스 대체제

   - 서버리스 웹앱을 위한 개발자 친화적, 멀티 테넌트 플랫폼
   - 네이티브 Node 애드온들을 Rust 기반으로 교체해서 성능 개선 및 중복코드 최소화
   - Docker + S3호환 버킷에 앱 코드 저장 + MySQL(메타 데이터 저장) + 로그 스트리밍용 Kafka(옵셔널)
   - 지원 기능
   ㅤ→ V8에 의해 지원되는 표준 JavaScript 기능들
   ㅤ→ Web Platform API 서브셋
   ㅤㅤ⇨ fetch(), Request/Response 객체
   ㅤㅤ⇨ TextEncoder, TextDecoder
   ㅤㅤ⇨ URL, URLSearchParams
   ㅤㅤ⇨ crypto.getRandomValues
   ㅤ→ Router
   ㅤ→ Cryptography
   ㅤ→ Graphics API : Graphics.Canvas, Graphics.Layout
   ㅤ→ Template API
   ㅤ→ Background Tasks
   ㅤ→ 외부 Native API : MySQL Client, APNS Client
   - Shared-Process 기반인 Workers 와 달리, 프로세스 기반 Isolation 시스템
"
"https://news.hada.io/topic?id=5385","SaaS를 위한 "Alternative Page" 콘텐츠 전략","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   SaaS를 위한 ""Alternative Page"" 콘텐츠 전략

   - 경쟁자로 부터 고객을 뺏어오기 위한 필수 전략
   ㅤ→ 경쟁제품과 1:1 또는 여러 솔루션의 장/단점 비교 페이지를 만들어서 홍보
   - 브랜드 키워드 하이재킹
   ㅤ→ ""가장 뛰어난 경쟁제품 + Alternative""를 검색했을 때 나오도록
   ㅤ→ 가격/사용성/고객서비스등 더 뛰어난 것을 보여줄 것(절대 경쟁제품이 나쁘다는 투로 얘기 하지 말 것)
   - 이 사람들은 이미 자신들의 문제를 해결할 제품이 있다는 걸 알고 찾아온 것이고, 더 나은 제품을 찾고 있는 것
   ㅤ→ 그들의 결정에 도움을 주거나 또는 다른 시도할 제품을 소개할 것
   ㅤ→ 키워드 별로 여러개의 Alternative 페이지를 만드는 것도 좋음
   - Alternativ Page 템플릿
   ㅤ→ 경쟁자의 소개 : 100~200단어 정도로 간단히 소개
   ㅤ→ 비교 테이블 : 중요 기능들을 눈에 확 들어오게 테이블로 비교(가격 비교 테이블 처럼)
   ㅤ→ 경쟁자별 설명 섹션 : 설명과 장/단점 등을 나열
   ㅤ→ 당신의 제품 소개 섹션 : 왜 더 나은지를 정리할 것(위치는 경쟁자 하나 또는 여러개 뒤. A/B 테스트 해볼 것)
   ㅤ→ 결론 : CTA를 통해 당신의 제품 페이지로 가게 할 것. 결정을 위한 정보를 더 줄 수 있도록
   - 이렇게 만든 페이지를 PPC광고에 활용
   ㅤ→ 잘 알려진 키워드에 대해서 유료 검색 광고 실행
   ㅤ→ 고객의 검색 의도를 잘 파악할 것
   - 꼭 고려할 것
   ㅤ→ 누가 최대의 경쟁자인가 : 그들이 사용하는 키워드를 타겟
   ㅤ→ 가장 큰 셀링 포인트는 뭔가 : 고객이 당신의 SaaS를 선택해야 하는 이유를 줄 것
   ㅤ→ 고객의 페인 포인트는 뭔가 : 그들에게 적합한 솔루션을 줄 수 있게

   * SaaS 웹페이지에 꼭 넣어야 할 정보들 https://news.hada.io/topic?id=2927
   위 링크에도 잘 정리되어 있는데요. XXX + Alternatives 는 정말 많이 검색되는 검색 키워드 입니다.
   요즘에 와선 문제를 해결하는 솔루션이 하나만 있는 경우는 거의 없기에, 적절한 비교를 통해서 선택되도록 하는게 중요합니다.
   Jira Software Alternatives https://www.atlassian.com/software/jira/comparison
   위 페이지에 보시면 Trello, Asana, Pivotal Tracker, Bugzilla, Basecamp, Redmine, Azure DevOps, Github Issues 등과 다 비교해 놨습니다.
   긱뉴스에도 https://news.hada.io/search?q=대체제 로 검색해보시면 엄청 많은 것들이 올라와 있는걸 보실 수 있습니다.
   (저는 Alternative 의 번역을 ""대신하여 사용할수 있는 제품"" 이란 의미로 ""대체제"" 로 주로 사용합니다. ""대체재"" 는 재화의 느낌이어서요.)
"
"https://news.hada.io/topic?id=5381","ICON의 역사의 역사

   - 80년대: 흑백, 그리드, 데스크탑 메타포, 아웃라인..
   1981 Xerox 8010 Star
   1983 Apple Lisa, 애플의 첫번째 GUI PC
   1984 Macintosh 1, 디자이너 Susan Kare를 고용 (휴지통,I빔 커서,모서리 접힌 문서를 만든 사람)
   1985 Windows 1.0
   1985 Atari TOS
   1985 Amiga Workbench, 사용자 커스터마이징 가능 (아이콘 수정, 4개의 색상)
   1986 GEOS for Commodore 64
   1988 Apple GS/OS, 15컬러
   1989 NeXTSTEP, 쉐이딩과 높은 디테일의 아이콘. Skeuomorphic 의 등장
   - 90년대: 컬러, 간단한 3D, 그림자와 쉐이드, 다른 각도의 파일/컴퓨터/연필/쓰레기통 들
   1990 Windows 3.0과 OS/2, 16컬러
   1991 Macintosh System 7, Isometric, Shades of Grey
   1993 Geoworks Ensemble 2, 독특한 Indigo Edge
   1997 BeOS, 독특한 스타일을 자랑
   1998 IRIX, 살짝 띄운 아이콘, Vector의 도입
   1999 Rhapsody, 투명 마스크의 도입
   1999 Amiga OS 3.5
   - 2000년대: 실제와 같은 모습, 반짝이고, 깜빡이고, 광택나고, 투명, 멀티레이어, 멀티쉐이드..
   2001 Mac OS X, 포토-일러스트 아이콘, 엄청 커지고, 알파채널과 8비트 투명 마스크의 사용
   2001 Windows XP, 다양한 효과
   2007 Windows Vista, 아이콘 Rococo 스타일
   2007 IPhone OS, 실제 세계와 같은 모습의 아이콘들
   2008 Android, 역시 Life-mimicking 아이콘들
   - 2010년대: 현실적인 것을 벗어나 원점으로의 회귀, Less is More
   2010 Windows Phone 7, 파란색, 플랫/하얀색의 아이콘, 모두 같은 배경
   2013 APPS & WEB, 평평한 아이콘이 대세, 그라디언트와 쉐도우가 아직 사용되긴 하지만 아주 드러나지 않게

   제 취향을 저격했던건 BeOS 이긴 합니다.
   아직도 16x16 , 32x32 아이콘이 더 사랑스러워요.
"
"https://news.hada.io/topic?id=5370","NFT 사업을 한다면 해야 하는 첫 질문","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         NFT 사업을 한다면 해야 하는 첫 질문

   다양한 NFT사업을 진행했던 그라운드X 한재선 대표님의 글
   핵심질문은 ""우리가 가진 것을 어떻게 NFT로 만들 수 있느냐?""가 아니라
   ""고객은 왜 NFT를 구매해야 하느냐?""
   - 최근 디지털 아트의 성장과 함께 폭발한 구매동기의 기저에는 ""커뮤니티"" 개념이 깔려 있음
   ㅤ→ NFT 발행자와 구매자가 형성하는 커뮤니티
   ㅤ→ 현재 NFT가 작동하는 이유는 커뮤니티가 존재하기 때문
   - 기존에 팬 커뮤니티가 있는 엔터업계에 NFT를 발행한다고 NFT의 효과가 발생할 지는 의문

   술 마시고 써서 좀 까칠햇을지도 모르겠네요ㅠ 결론은 아직 NFT를 왜 사는지, 잘 모르겠습니다. 예술품도 평생 잘 모르겠구요. (구입하고 모아서 나중에 미술관을 만들겠다는 꿈을 가진 분들을 제외하면)

   단순히 ""커뮤니티""라고 말했지만, 디지털 아트가 아닌 기존의 아트, 즉 미술계에서도 작품에 대한 평가는 예술가, 갤러리, 컬렉터 이 셋의 커뮤니티에 의해 만들어지고 있어서 너무 뭉뚱그려서 표현한 글 같습니다.
   그래서 ""고객은 왜 예술품(혹는 NFT)을 구매하는가?""라는 질문의 답도, 그 질문을 반복하다보면 따라오게 되는 ""그러면 사람들은 왜 예술품을 구매하지 않는가?""라는 질문의 답도 아직까지는 모르겠습니다.

   저도 NFT에대해 완전히 이해는 하지 못했지만 본문 글을 읽으니 대략적으로 이런 느낌이겠구나 라는 생각은 드네요.
   ""사람들이 NFT 작품을 구매하는 이유는 커뮤니티 내에서 플렉스를 위함""이라는 것이 핵심인 것 같습니다.
   만약 카카오톡에서 NFT 프로필 사진을 등록할 수 있는 기능을 업데이트했다고 예를 들어보겠습니다. NFT 프로필 사진을 등록하게 되면 카카오톡 프로필 이미지 보는 공간에서 NFT 인증마크 까지 붙여준다고 생각해보죠
   BTS의 한 팬이 BTS의 NFT 포토 카드를 구매한 뒤 그 포토 카드를 카톡 프로필에 등록한다고 가정해보죠 그리고 카톡은 등록한 프로필이 BTS의 NFT 원본 포토라고 인증 마크를 붙여줍니다.
   BTS 팬들 사이에서는 이 사실이 엄청난 플렉스행위가 될 꺼에요. 다른 팬들도 그걸 보고 자신도 오리지널 NFT BTS 포토 카드를 사고 싶어하게 되는 것이구요.
   이게 사람들이 NFT를 구매하는 이유라는 것이 핵심인것 같습니다.

   뭐 약간은 다르지만.. 역시나 ""커뮤니티""!
   - 커뮤니티 주도 성장을 막는 오해들과 극복 전략 https://news.hada.io/topic?id=5341
   - 다음 스타트업의 대세는 커뮤니티 주도형이 될 것 https://news.hada.io/topic?id=4696
"
"https://news.hada.io/topic?id=5455","마케터를 위한 2022년용 새로운 콘텐츠 타입들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       마케터를 위한 2022년용 새로운 콘텐츠 타입들

   1. Guestographics : 게스트 인포그래픽. 다른 사이트 게시용으로 만들거나 타 브랜드와의 협업용
   2. Instructographics : 어려운 데이터를 읽기 쉽게
   3. Storyboards : 비쥬얼 시퀀스로 설명하기
   4. Carousel Posts : 한장짜리보다 더 참여율이 높음
   5. Whiteboard Videos : 교육용 부터 다양한 용도로 사용 가능
   6. Screencast Videos : 문제 해결 이나 질문 답변, 튜토리얼 등
   7. AR-Powered Storytelling : 지루하지 않은 완전히 새로운 콘텐츠, 스토리, 게임플레이 등
   8. Ephemeral Posts : 시간 제한 두고 짧게 보여주는 콘텐츠
"
"https://news.hada.io/topic?id=5352","Medusa - 헤드리스 이커머스 엔진, 오픈소스 Shopify 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Medusa - 헤드리스 이커머스 엔진, 오픈소스 Shopify 대체제

   - 주문/재고/고객정보 관리, 배송연동, 체크아웃/결제 관리기능을 포함한 API 기반 E2E 커머스 엔진
   - 관리자 대시보드 제공 : 주문 정보, 고객 프로필, 결제/배송 방법, 제품 관리, 할인 및 기프트 카드 관리
   - Node.js + Postgres + Redis
   - 프론트는 기존 사이트에 연동하거나 또는 Gatsby/Next.js 스타터 제공
   - Orders, Carts, Products, Swaps(상품교환), Claims, Returns(환불), Fulfillment, Payments, Notification(Email,Chatbot, Slack..)
"
"https://news.hada.io/topic?id=5368","YouTube 싫어요 숫자 표시 안하게 변경 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        YouTube 싫어요 숫자 표시 안하게 변경

   - 연초에 싫어요 숫자를 표시안하는게 창작자들을 보호하는지 실험한 결과
   ㅤ→ 실제로 공격 행동이 줄어들었음
   ㅤ→ 초기/작은 채널에서 더 많이 나타남
   - 그래서 유튜브 전체에 싫어요(dislike) 숫자를 표시 안하게 변경
   ㅤ→ 싫어요 버튼은 존재하지만, 비디오 페이지에서 숫자 보이지 않게
   ㅤ→ 창작자는 유튜브 스튜디오에서 정확한 싫어요 숫자를 볼 수 있음
   ㅤ→ API 사용시에도 정보는 볼수 없게 됨

   싫어요 개수가 표기되서 동영상이 왜곡된 평가를 받는 부작용이 있다면 좋아요 개수 표기는 그런 부작용이 없는걸까요?
   분노는 전염력이 있는 감정이라고 들었습니디. 이게 왜곡된 평가의 원인이 되는 걸까 생각이 드네요.

   페이스북에 싫어요 버튼이 없는 것과 비슷한 이유인듯 합니다. 무행동에서 좋아요로 전염되는건, 무행동에서 싫어요로 전염되는 것보다는 덜 해로울테니까요
"
"https://news.hada.io/topic?id=5371","GitHut Readme Stats - 동적으로 자동 생성되는 통계 넣기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                GitHut Readme Stats - 동적으로 자동 생성되는 통계 넣기

   다양한 통계 그래프/모듈을 깃헙 리드미에 추가 가능
   - 깃헙 Stats
   ㅤ→ 랭크 계산 : 커밋 수, 기여도, 이슈 갯수, 즐겨찾기, PR, 팔로워..
   - 깃헙 Extra Pin : 다른 Repo 연결
   - 많이 쓰는 개발 언어
   - Wakatime 주간 통계
   - 테마 지원 : dark, radical, merko, gruvbox, tokyonight, onedark, cobalt, synthwave, highcontrast, dracula
   - 모든 색상 커스터마이징 가능
   - 자신의 Vercel 인스턴스에 Deploy 가능
"
"https://news.hada.io/topic?id=5365","Apple Business Essentials 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Apple Business Essentials 공개

   - 애플이 직접 호스팅하는 Device Management 구독 서비스
   ㅤ→ 최대 500명까지의 SMB 대상
   ㅤ→ 온보딩 부터 셋업/보안/수리까지 모든 기기 관리
   ㅤ→ 스토리지 제공 : iCloud 백업
   ㅤ→ 24/7 애플케어+ 서포트(앱 사용 설명부터 A/S까지) 포함
   - 사용자, 그룹 관리 : 사용자/그룹당 각각의 플랜 지정 가능
   ㅤ→ 사용 기기수, 백업 공간 등을 지정
   - 컬렉션 기능으로 로그인 한번에 모든 Wifi/VPN/프린터 설정 및 앱등을 지정 가능
   - 잃어버린 모바일 기기의 위치 찾기 및 Remote Erase 지원
   - 애플케어+ 로 4시간내에 온사이트(테크니션이 직접 찾아감) 수리 지원
   - 다양한 플랜 제공
   ㅤ→ 싱글 디바이스 기기당 $2.99/월
   ㅤ→ 멀티 디바이스 사용자당 $6.99/월 (200GB)
   ㅤ→ 멀티 디바이스 사용자당 $12.99/월 (2GB)
   - 미국부터 무료 베타 서비스 시작하며 2022년 초 정식 공개 예정

   애플이 MDM 쪽은 써드파티한테 맡겨두더니 직접 서비스하기 시작하네요.
   SMB대상이라고는 하는데, 기존의 대형 MDM 서비스 업체들은 고민이 많아 지겠어요.
   - https://www.jamf.com/
   - https://simplemdm.com/
   - https://www.kandji.io/
"
"https://news.hada.io/topic?id=5367","Svelte 개발자 Rich Harris, Vercel에 조인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Svelte 개발자 Rich Harris, Vercel에 조인

   - Svelte는 2021년 스택오버플로우 설문조사에서 가장 사랑받는 웹 프레임워크로 선택(71.47%의 선호도)
   - Vercel은 스태틱 사이트와 프론트엔드 프레임워크를 위한 플랫폼
   - Rich는 Vercel 에서 풀타임으로 Svelte 개발 예정
   ㅤ→ Svelte 오픈소스는 변경없이 유지
   - Svelte 의 미래
   ㅤ→ Edge-First : 함수를 엣지에서 실행해서 스태틱 사이트를 빠르면서도 다이나믹하게
   ㅤ→ Transitional Apps : 빠른 로딩을 위해서 SSR을 사용하지만 SPA처럼 싱글 코드베이스, 빠른 네비게이션, 클라이언트에서 상태 관리등을 진행
   - Vercel 은 Next.js 를 만들고, Svelte/Nuxt/Astro 등 프레임워크를 후원중

   swc 개발하신 강동윤님도 Vercel로 가셨는데.. 요즘 Vercel이 인재를 다 끌어들이는 중인가 봅니다.
"
"https://news.hada.io/topic?id=5448","닌텐도64용 젤다의 전설 풀 디컴파일 완료","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        닌텐도64용 젤다의 전설 풀 디컴파일 완료

   - ZRET*팀이 2년간에 걸친 노력끝에 N64용 ""젤다의 전설 : 시간의 오카리나"" 를 읽기 가능한 C코드로 리버스 엔지니어링
   ㅤ→ PC 버전 포팅 및 모딩이 가능해짐 (작년에 Super Mario 64도 이렇게 진행되었음)
   - 닌텐도의 유출 콘텐츠나 저작권 있는 그래픽/사운드 자료들은 전혀 사용하지 않음
   ㅤ→ 바닥부터 함수를 하나 하나 만들어서 작업
   - 아직 문서화 작업 및 이름 및 구조 변경 작업은 남아있음
   - 닌텐도 GameCube 마스터 퀘스트 버전을 이용했으며, 다른 버전의 ""시간의 오카리나"" 도 작업 예정
   * ZRET : Zelda Reverse Engineering Team
"
"https://news.hada.io/topic?id=5451","Peritext - Rich Text를 위한 CRDT","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Peritext - Rich Text를 위한 CRDT

   - 리치 텍스트 문서의 협업을 위한 CRDT 알고리듬
   - 비동기 방식으로 동작도 가능해서 로컬에서 편집 후 머징하는 방법 지원
   ㅤ→ 마치 Git과 PR처럼
   - 작성자의 의도를 보존
   ㅤ→ 서식 편집과 텍스트 삽입이 동시 일어날 때, 새로 삽입된 글자에도 서식 적용
   ㅤ→ 동시 서식 편집의 컨플릭 처리
   - Peritext 알고리듬
   ㅤ→ 기존 플레인 텍스트용 CRDT를 이용해서 리치 텍스트 문서를 표현
   ㅤ→ 포맷 변경을 표현하는 CRDT 오퍼레이션 생성
   ㅤ→ 이 오퍼레이션을 적용하여 내부 문서 상태(State)를 생성
   ㅤ→ 내부 상태를 기반으로 텍스트 편집기에 적합한 문서를 만들기
   - Automerge CRDT 라이브러리의 심플 버전을 확장한 TypeScript 오픈소스
   ㅤ→ 나중에 Automerge 에 알고리듬을 넣는 것을 기대
   ㅤ→ 에디터는 ProseMirror 이용

   - 제가 틀렸었어요. CRDT가 미래입니다. https://news.hada.io/topic?id=2962
   - 더 빠른 CRDT를 위해 최적화 하기 https://news.hada.io/topic?id=4744
"
"https://news.hada.io/topic?id=5360","Lag 없는 실시간 데이터 파이프라인을 위한 아키텍처 개선기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Lag 없는 실시간 데이터 파이프라인을 위한 아키텍처 개선기

   Kafka consumer group과 partition 수의 관계, 그리고 이로 인해 생기는 auto scaling의 어려움, 이를 해결하기 위한 새로운 아키텍처 도입기 입니다.
   - Airbridge 서비스와 Workload 소개
   - 기존 아키텍처의 문제점
   - 새로운 아키텍처 제안
   - 1안: Spark streaming과 같은 driver, executor model
   - 2안: Kafka consumer와 application server decouple model
   - 2안을 선택한 이유
   - Kafka consumer와 application server decouple model 아키텍처
   - 새로운 아키텍처에서의 고려 사항
   - 경험한 어려움
   - 새 아키텍처 적용 후 결과
   - 앞으로 더 시도해봐야 할 것

   와... 저도 ecs 사용하지만 이정도로 고민해보진 않았는데 좋네요.

   envoy를 쓰면서 az간 트래픽을 줄이기 위한 요청이 홀딩상태였네요.
   https://github.com/aws/aws-app-mesh-roadmap/issues/94
"
"https://news.hada.io/topic?id=5349","GPT-3는 이제 시장에서 유일하지 않음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         GPT-3는 이제 시장에서 유일하지 않음

   - GPT-3가 AI시장에 큰 충격을 준 건 맞음 : ""text-in text-out"" 에 강한 초대규모 AI 모델
   - 유료 였기 때문에 많은 조직들이 각자 버전의 GPT-3 비슷한 모델을 만들기 시작
   ㅤ→ 필요한 컴퓨팅 파워때문에 쉽지는 않음. 175B 파라미터짜리 OpenAI는 MS와 협업해서 1만개의 GPU와 45테라 텍스트 데이터를 이용
   ㅤ→ 계산해보면 GPT-3를 훈련하는데 100~200억원 정도가 소요
   - 다양한 시도들이 나옴
   ㅤ→ EleutherAI, CPM, PanGu-α, HyperCLOVA, Jurassic-1, Megatron-Turing NLG
   - 놀랍게도 GPT-3와 비슷한 걸 만드는 첫번째 노력은 오픈소스 참여자들이 만든 ""EleutherAI""
   ㅤ→ GPT-3와 비슷한 데이터 셋인 ""The Pile""을 공개
   ㅤ→ 그 이후 GPT-Neo 1.3B, 2.7B 같은 작은 버전부터 최근 6B 파라미터짜리 GPT-J-6B 를 공개했음
   - GPT-3 발표 6개월 뒤에 중국 칭화대의 연구자들과 BAAI(베이징 AI 아카데미)가 함께 CPM(Chinese Pre-trained Language Model) 을 공개
   ㅤ→ 100GB 중국어 텍스트에서 2.6B 파라미터 모델을 생성. GPT-3에는 못 미치지만 중국어 텍스트로 했다는 것에서 주목
   - 그 얼마 후 Huawei가 200B 파라미터셋의 PanGu-α(1.1TB의 중국어 텍스트 사용) 공개
   - Naver가 204B 파라미터 짜리 HyperCLOVA 발표
   - 이스라엘의 AI21 Labs가 178B 짜리 Jurassic-1 공개
   - NVIDIA 와 MS가 530B 파라미터 모델의 Megatron-Turing NLG 공개
   - 본질적으로 GPT-3와 유사한 점점 더 거대한 모델이 생성되고 있으며 몇년 동안 더 커질 것
   - 이런 대규모 모델을 교육하는데 수십억 달러의 투자가 필요한 추세는 당분간 유지 될 것
   ㅤ→ 자금 지원이 풍부한 기업들만이 이런 모델을 만들수 있다는 것은 염려스러움
   - 얼마나 이런 트렌드가 유지될 지, GPT-3 이상의 주요한 발견이 이뤄질 지 등은 예측하기 어려움
   - 현재 우리는 이런 여정의 한가운데에 있으며, 앞으로 몇 년 동안 어떤 일이 일어나는지 지켜보는 것이 흥미로울 것

   - GPT-Neo : GPT-3 규모의 모델을 오픈소스/무료로 만드는 프로젝트 https://news.hada.io/topic?id=3599
   - MS와 Nvidia가 세계 최대규모 언어 모델 MT-NLG 530B를 발표 https://news.hada.io/topic?id=5187
"
"https://news.hada.io/topic?id=5405","TensorFlow Graph Neural Networks(GNNs) 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               TensorFlow Graph Neural Networks(GNNs) 공개

   - 텐서플로를 사용하여 구조화된 그래프 데이터를 쉽게 작업할 수 있게 설계된 라이브러리
   - 초기버전을 구글 내부에서 스팸 및 이상감지, 유튜브 콘텐츠 레이블링 등에 사용해 왔음
   - 포함 컴포넌트
   ㅤ→ 다른 모델과 쉽게 연동가능한 GNN 모델을 생성하는 Keras 스타일 API
   ㅤ→ 이기종(Heterogeneous) 그래프를 위한 GNN API
   ㅤ→ 그래프의 토폴로지 선언용 잘 정의된 스키마와 검증 도구
   ㅤ→ 그래프 데이터를 저장하는 GraphTensor 컴포지트 텐서 타입
   ㅤ→ GraphTensor 구조에 대한 작업 라이브러리
   ㅤ→ 대규모 그래프에서 그래프 데이터셋 및 샘플을 변환하는데 사용하는 도구 세트
"
"https://news.hada.io/topic?id=5446","퇴고의 기술 - 개발자의 기술문서 작성법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         퇴고의 기술 - 개발자의 기술문서 작성법

   - 퇴고(推敲) : 글을 지을 때 여러 번 생각하여 고치고 다듬음. 또는 그런 일
   - 퇴고가 필요한 이유
   - 퇴고 Tips
   ㅤ→ 내 글 낯설게 하기 : 소리 내어 읽기, 얼마 후에 읽기, 종이에 출력해서 읽기
   ㅤ→ 피어 리뷰
   ㅤ→ 체크리스트 활용
   ㅤ→ 가독성을 높이는 문장 수정 Tip
   ㅤㅤ① 단문으로 정리하여 수정하기
   ㅤㅤ② 불필요한 표현 삭제하기
   ㅤㅤ③ 논리적인 글로 탈바꿈하기

   스티븐킹의 글쓰기 원칙이 생각나네요. 소설이라 테크니컬 라이팅과는 다른점도 있겠지만, 생각나는대로 적어보면
   - 짧고 간단한 문장을 사용한다.
   - 나는 초고를 쓴 뒤 초고를 서랍에 넣어놓고 6개월 뒤에 꺼내 다시 읽어본다.
   - 수정본은 초고에서 10%를 덜어낸다.
   - 글을 낭독해보면 문장의 어색한 부분을 잡아낼 수 있다.
   - 글을 읽을 대상을 구체적으로 정해놓고 글을 쓴다. 나의 경우는 내 아내다.

   요즘 카카오엔터프라이즈 테크니컬 라이팅 분들이 좋은 글을 많이 써주시네요. 블로그 구독을 추천!
"
"https://news.hada.io/topic?id=5389","Mako - C로 작성된 완전한 비트코인 구현체","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Mako - C로 작성된 완전한 비트코인 구현체

   - 거의 C89로 작성
   ㅤ→ LMDB 외에는 종속성 없음
   ㅤ→ C 표준 라이브러리도 최소로 사용
   ㅤ→ POSIX.1-2001 기반의 모든 OS에서 컴파일 가능
   - 재사용 가능한 아키텍처
   ㅤ→ libmako : 코어 라이브러리, IO 없이 비트코인 관련 기능을 모두 포함
   ㅤ→ libnode : 최종 실행 파일이 링크되는 별도 풀노드 라이브러리

   가장 유명한 비트코인 구현체 https://github.com/bitcoin/bitcoin 이 63만 라인인데 비해
   Mako는 26만 라인이라고 하네요. 혼자서 26만 라인을 다 짠거군요.
   이 친구는 이게 두번째 비트코인 구현체인데, 처음엔 Node.js 로 짰다고 하네요.
   https://github.com/bcoin-org/bcoin
   만약에 소스코드로 비트코인을 배우겠다면 BCoin 0.8.0 버전 정도를 추천한다고 합니다.
   https://github.com/bcoin-org/bcoin/tree/v0.8.0
"
"https://news.hada.io/topic?id=5335","Show GN: 오늘부터 전공면접 IT - 객관식 문제 제공 서비스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Show GN: 오늘부터 전공면접 IT - 객관식 문제 제공 서비스

   몰아서 하기에는 힘들고 부담스러운 전공 공부
   매일 조금씩 공부해 보시는건 어떤가요?
   이론부터 보기에는 지겹고,
   처음부터 주관식으로 풀기에는 막막하고 부담스러운 분들을 위한
   분류별 객관식 문제 제공.
   반복해서 풀어도 자주 틀리는 문제를 체크하여 약점을 보완해보세요.
   - iOS: https://apps.apple.com/kr/app/id1526993862
   - Android: https://play.google.com/store/apps/…
   - Web: https://hexoul.github.io/prepare-interview-data

   문제와 해설은 지속적으로 갱신됩니다.
   현재는 운영체제, 네트워크, 자료구조의 기초이론 세 과목 뿐이라 고연차분들은 보실 내용이 없을 수도 있지만,
   앞으로는 Kubernetes 등 플랫폼에 대한 내용도 추가하여 많은 분들이 보실만한 내용을 담고자 합니다.
   피드백은 언제나 환영합니다.
   감사합니다.

   좋은 앱이네요!
   다만 배너를 google_mobile_ads로 다신 듯 한데요, 현재 안드로이드에서 퍼포먼스 문제가 있어서 화면이 많이 버벅이는 감이 있습니다.
   native_admob_flutter로 연동해보시면 어떨까요?

   감사합니다! 안드로이드는 실제 기기로 테스트해보지 못했고 지금까지 버벅인다는 레포트는 없었어서 말씀해주신 이슈가 있었는지 몰랐네요.
   native_admob_flutter를 제안주신 것 보고 찾아보니 아래와 같은 이슈가 있군요. 혹여 댓글을 보는 다른 분이 계시다면 도움이 되실 거 같아 링크를 첨부해둡니다. https://github.com/googleads/googleads-mobile-flutter/issues/80
   최대한 빠른 시일 내에 반영해보겠습니다 (_ _)

   PC에서 메인페이지의 문제링크에 커서를 가져다대면 커서가 텍스트 속성처럼 나서 일반 텍스트랑 헷갈렸네요.
   pointer 속성이 적용되면 좋을 것 같습니다.

   디테일한 의견 감사드립니다. 바로 반영해보겠습니다.

   재미있는 서비스네요. 응원합니다!
   - 랜덤으로 문제 풀기 기능 같은 것도 있으면 좋을 것 같아요.
   - 사용자가 문제를 등록할 수 있게 해주면 어떨까 싶네요. 사람들의 평가를 통해서 추가 여부를 결정하구요. 그러면 문제 풀을 넓힐 수 있지 않을까요 ?

   응원과 좋은 의견 감사합니다!
   - 동의합니다. 기존에도 같은 의견주신 분들이 계셔서 랜딩에서 랜덤으로 풀 수 있게 준비하고 있습니다. 꽤 변경이 필요해 임시방편으로 문제목록 화면에서 목록 셔플하는 버튼이 먼저 나가 있습니다 :)
   - 맞습니다. 현재도 문제는 깃헙에 공개되어 있어 PR로 추가 요청주시는 분 계시다면 누구나 추가 가능한데 참여 유도를 어떻게 해야할지가 고민이네요. 앱 안에서 투표만으로 하기에는 검증되지 않은 내용들이 포함될 수 있어, 퀴즈렛(Quizlet)처럼 개인이 각자 문제 풀을 만들어 공유할 수 있는 공간이 있으면 좋을까도 고려했었습니다. 다만 그럼 굳이 이 서비스를 사용하기보다 기존에 사용자가 많은 서비스를 쓰려 할테니 서비스 방향에 맞는 걸까 등등 질문의 꼬리가 끊이지 않는군요~

   모든 글에 진지하게 같이 고민하고 답변주시는 점 항상 대단하시다 생각하고 있습니다. 다시 한 번 감사드립니다.

   긱뉴스는 Karma 를 통해서 비슷한 문제를 해결하고 있습니다.
   뉴스를 등록하고 투표를 어느 정도 받으면 Karma가 올라가고, 그게 높으면 그 사람이 올린 뉴스는 자동으로 SNS/슬랙등에 공유되는 식으로요.
   그래서 생각해보면, 신규 등록 문제들은 다 임시 스테이지 풀에 넣어두고 그걸 어느 선을 넘었을 때 정식 문제로 승격시키면 될 것 같아요.
   - 문제를 어느 정도 풀면 Karma Up
   - 문제 등록시에도 Karma Up
   - 풀어보거나 등록해본 Karma 기반으로 특정 점수 이상 높아지면, 그 사람은 신뢰도가 쌓인거니 그 사람이 등록한 문제나 혹은 보팅한 문제는 좋은거다 라고 판단해서 자동으로 등록
   서비스를 많이 쓰는 사용자들을 앰버서더로 활용하는 형태를 고려해보시면 좋을 것 같습니다!!

   상세한 설명 감사합니다! Karma를 포함하여 어떻게 구체화시킬지 고민해보겠습니다. :)
"
"https://news.hada.io/topic?id=5386","GitHub의 Octoverse 2021 리포트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GitHub의 Octoverse 2021 리포트

   - 개발자 7300만명 (2021년 신규사용자 1600만)
   - 포춘100 회사중 84%가 깃헙엔터프라이즈 사용
   - 작년에 6100만개의 새 Repo 생성
   - 1.7억개의 PR이 머지됨
   - 사용자 분포 : 북미 43.2%, 유럽 33.5%, 아시아 15.7%, 오세아니아 3.5%, 남미 3.1%, 아프리카 1%
   - 언어 : JS > Python > Java > TypeScript > C# > PHP > C++ > Shell > C > Ruby
   ㅤ→ 작년과 거의 변화없고 C 와 Shell 만 서로 위치 변경
   - 판데믹 이후의 변화
   ㅤ→ 사무실 근무는 41% 에서 10.7%로
   ㅤ→ 일부 재택인 하이브리드가 28.1% 에서 47.6%로
   ㅤ→ 완전 리모트가 26.5% 에서 38.8%로
   - 자동화를 통한 지속가능성 향상
   ㅤ→ 반복적인 작업 제거를 통해 오픈소스 에서 27%, 회사에서는 43% 더 좋은 성과를 보임
   - README를 통한 정보 공유는 정말 중요
   ㅤ→ 새로운 기여자를 찾고 55% 더 생산성있게 만듬
   ㅤ→ 오픈소스들은 85.9%가 README가 있지만, 회사의 Repo들은 84%가 없음
   ㅤ→ 즉 회사들은 문서화 작업도 하나의 프로젝트가 될 수 있다는 것
   - 쿠버네티스 문서화 SIG가 시도한 ""PR Wrangling"" 제도
   ㅤ→ 잘 정리된 R&R을 통해 ""Approver"" 상태에 도달한 컨트리뷰터는 일주일 단위의 PR Wrangler에 자원 가능
   ㅤ→ 깃헙 이슈를 분류하고, 태그를 지정하고, PR들에 대해 품질 및 지침을 준수하는지 리뷰하고, 피드백 제공 및 머지를 승인
   ㅤ→ 이를 통해서 쿠버네티스 커뮤니티는 문서의 정확도를 유지하고, 새로운 문서들이 잘 동기화고 로컬 번역이 가능하게 함
   상세 테마 리포트 3가지
   - Writing and Shipping code faster
   ㅤ→ 개발자 생산성 증가 방법
   ㅤ→ 자동화를 통한 확장
   ㅤ→ 코드 재사용
   ㅤ→ 검색이 개발 생산성을 향상
   ㅤ→ 적합한 협업도구가 중요
   ㅤ→ PR은 개발팀이 어떻게 협업하는지를 보여줌
   ㅤ→ 팀웍은 중요하지만, 코디네이션은 어려움
   ㅤ→ 신규 기여자들이 첫번째 PR에 걸리는 시간
   ㅤ→ PR을 더 빠르게 처리하는 법 : 리뷰어 수와 자동화
   - Creating documentation to support developers
   ㅤ→ 형식과 상관없이 문서는 정말 중요함. 하지만 이에 대한 투자를 많이 안 함
   ㅤ→ 컨트리뷰터 가이드라인이 있으면 모호함과 마찰을 줄여 더 쉽게 참여 가능
   ㅤ→ README는 정말 중요
   ㅤ→ GitHub Issue도 문서임
   ㅤ→ Good First Issuese 가이드가 있으면 새 멤버들이 첫 컨트리뷰션을 쉽게 함
   ㅤ→ 문서는 생산성과 개발 문화에 좋음. win-win
   - Supporting stusainable communites
   ㅤ→ 멘토쉽은 오픈소스 나 회사 모두에서 커뮤니티 자산임
   ㅤ→ 신뢰와 존중이 더 훌륭한 문화를 만듬
   ㅤ→ 안전하고 환영하는 분위기의 커뮤니티들이 신규 참여자를 끌어댕기고 참여를 독려함 (참여가이드라인, Good First Issues 등)
   ㅤ→ 재미와 학습이 신규 참여자들에게 매력을 유발함

   - GitHub의 Octoverse 2020 리포트 https://news.hada.io/topic?id=3328
   - GitHub의 Octoverse 2019 리포트 https://news.hada.io/topic?id=884
"
"https://news.hada.io/topic?id=5350","motrix - 크로스 플랫폼 다운로드 매니저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       motrix - 크로스 플랫폼 다운로드 매니저

   - HTTP, FTP, BitTorrent, Magnet 다운로드 지원
   - 윈/맥/리눅스 (일렉트론 + Vue + Aria2 기반 오픈소스)
   - 깔끔한 인터페이스
   - 10개까지 동시 다운로드
   ㅤ→ 1개 태스크당 64개 쓰레드까지 가능
   - i18n (한국어포함)
   - 빗토렌트
   ㅤ→ 내부 파일 선택 다운로드
   ㅤ→ 매일 자동으로 트래커 리스트 업데이트
   ㅤ→ UPnP & NAT-PMP 포트 매핑
   - 맥 터치바 지원
   - 크롬 다운로드를 자동으로 Motrix가 해주는 확장 제공
"
"https://news.hada.io/topic?id=5423","지문은 쉽게 해킹 가능하다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             지문은 쉽게 해킹 가능하다

   - 지문은 손잡이, 스크린, 와인잔 등에 쉽게 남음
   - 노트북/폰 화면에 남은 지문을 사진 찍어서 포토샵 처리만으로 네거티브 사진을 얻을 수 있음
   - 사진을 레이터 프린터로 아스테이지(투명필름)에 인쇄하면 토너가 지문의 3D구조를 만들어 냄
   - 목공풀을 위에다 바르고 말린뒤 떼어내면 가짜 지문 완성
   * 즉, 지문은 절대 비밀번호 대체제로 사용해선 안됨. 적어도 2FA를 사용하는 것을 고려할 것

   판데믹 때문에 페이스아이디보다 터치아이디가 더 편한데 찜찜한 이야기군용…

   생체정보를 그래서 비밀번호가 아닌 아이디로 사용해야 한다는 말을 많이 들었습니다.

   생체정보는 아이디로 사용해야지 비밀번호로 사용해선 안된다는 이야기를 어디서 들었는데 백번 공감합니다.

   OTP 앱을 이용한 2FA 를 쓰는데, 그 앱을 열기위해 지문을 쓴다는게 아이러니하군요

   비밀번호는 유출되면 바꿀 수 라도 있지만 지문은 바꿀 수 도 없는 거라
   늘어나는 지문인증 시스템으로 편리하게 살면서도 참 불안하죠

   Mr. Robot이라는 드라마의 은행을 터는 장면에서 즉석으로 지문을 추출하고 그것을 이용하는 것을 볼 수 있습니다.
   전체적으로 연출이 굉장히 멋있어서, 이 장면만은 한번 보시는 걸 추천 드립니다.
   https://www.youtube.com/watch?v=HCM0RI6UGM4

   오 저 이거 시즌 1인가만 보고 하차한듯 한데 이 씬 재미나네요.

   홍채도 일정부분 SNS에서의 사진에서마저 추출이 가능한 것 같습니다. count-measure, 즉 실제 사람인지를 확인하는 추가적인 기능이 들어가야 하는 듯.
   이런 부분에서 아마존의 손바닥 생체정보가 의미를 가진다 싶습니다.

   어째 이 글이 지문해킹 방법을 상세히 알려주는 것 같긴 하지만..
"
"https://news.hada.io/topic?id=5337","ARR $0에서 $100M까지 키운 스타트업 마케팅 회고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ARR $0에서 $100M까지 키운 스타트업 마케팅 회고

   - $0 ~ $10M : 가장 가파른 언덕
   ㅤ→ 카테고리 생성 : 어렵고 비용이 많이 들고 시간이 걸림. 꼭 할 필요 없지만, 한다면 올인 할 것
   ㅤ→ 첫번째 채용 : 비즈니스 계속 바뀌는 시기. 문제 해결에 뛰어난 제네럴리스트 vs. 스페셜리스트 찾기
   ㅤ→ 초기 커뮤니티 : 콜드 콜하고, 영업 콜도 들어보고, 사용자/고객/분석가/부모님과도 대화해 볼 것. 초기 에반젤리스트 찾기. 가족 대상으로 관련성과 이해 가능한지 등을 테스트 해볼 것
   ㅤ→ 첫번째 피치 : 마치 끝나지 않을 일 처럼 자료 만들고 정제하고 반복. CEO/설립자와 함께 마케팅이 해야 할 일임
   - $10M ~ $25M : 가장 긴 언덕
   ㅤ→ GTM : 마케팅을 넘어 생각해야할 때. 영업, 제품 및 엔지니어링 전반에 걸쳐서 총체적인 GTM 만드는데 참여하기. PLG(Product Led Growth)가 전략의 일부인가? 1에서 10, 그리고 100명까지 어떻게 고객을 얻을수 있을까? 지금 주시하고 타켓하는 세그먼트는 ?
   ㅤ→ 커뮤니티 2.0 : 커뮤니티 만들기 - 개발자, 고객, 파트너. 그들이 오길 바라지 말고, 그들에게 찾아가기
   ㅤ→ 다음 채용들 : 수요 창출, 성장 마케팅, 제품 마케팅등의 전문가들을 찾기
   ㅤ→ 피치 2.0 : 메시지가 사용자들과 연관되도록 얼라인되어야 함. 피치 덱 및 마케팅 자료에도 고객 평가 및 인정받은 증거 요소들을 넣을 것
   - $25M ~ $100M : 가장 오르기 힘든 언덕
   ㅤ→ 성장 효율성 : 성장 효율성 레버(바늘을 움직이는 것)가 뭔지 알고, 데이터를 사용하여 성장을 위한 다음 베팅 하기
   ㅤ→ 다음, 그 다음 채용 : 강한 피플 매니저를 뽑을 것. 팀 내에서 앞의 두 언덕을 같이 했던 사람들을 승진시키고 성장시킬 것
   ㅤ→ 대규모 커뮤니티 : 커뮤니티에 더 많은 모멘텀을 불어넣고 규모를 확장하는데 뭐가 필요할까 ? 다른 기존 커뮤니티들에서 챔피온을 찾을 것
   ㅤ→ 피치 3.0+ : 당신의 플랫폼, 멀티 프로덕트, 멀티 유스케이스의 이야기는 뭘까? 어떤 것이 성장을 견인하는 뒷바람(순풍,Tailwind)일까 ?
"
"https://news.hada.io/topic?id=5339","웹 성능 지표 Cheatsheet","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           웹 성능 지표 Cheatsheet

   - 사용자 중심 성능 지표를 4가지로 구성해서 설명하고, 목표해야 하는 점수를 나열
   ㅤ→ 진행여부 : TTFB, FP, FCP
   ㅤ→ 유용성 : LCP, VC, SI
   ㅤ→ 사용 가능 여부 : FID, mFID, TBT, TTI
   ㅤ→ 쾌적함 : CLS, Frame Rate
   - Cheatsheet
   ㅤ→ Time to First Byte (TTFB) <600ms
   ㅤ→ First Paint (FP) <1.8s
   ㅤ→ First Contentful Paint (FCP) <1.8s
   ㅤ→ Largest Contentful Paint (LCP) <2.5s
   ㅤ→ Visually Complete (VC) <3.4s
   ㅤ→ Speed Index (SI) <3.4s
   ㅤ→ First Input Delay (FID) <100ms
   ㅤ→ Max Potential First Input Delay (mFID) <130ms
   ㅤ→ Total Blocking Time (TBT) <200ms
   ㅤ→ Time to Interactive (TTI) <3.8s
   ㅤ→ Cumulative Layout Shift (CLS) <0.1
   ㅤ→ Frame Rate (FR) 60 FPS
"
"https://news.hada.io/topic?id=5436","OpenLGTV - LG TV 펌웨어의 오픈소스 프로젝트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    OpenLGTV - LG TV 펌웨어의 오픈소스 프로젝트

   - 일부만 오픈소스로 공개된 LG TV의 펌웨어를 리버스 엔지니어링 및 연구 하는 집단 프로젝트
   ㅤ→ 스마트 TV 부터 구형 TV 포함
   - 여러개의 Repo로 구성
   ㅤ→ WebOS brew 및 인스톨러
   ㅤ→ RootMyTV - 원클릭 WebOS 루팅 도구
   ㅤ→ MStar Saturn S6/S7 칩셋 기반용 rootfs
   ㅤ→ Broadcom TV용 rootfs(2010~11 모델)

   - WebOS brew https://github.com/webosbrew
   - RootMyTV https://github.com/RootMyTV/RootMyTV.github.io
   ㅤ→ WebOS 가능 LGTV 에서 https://rootmy.tv/ 접속해서 리모콘 5 버튼 한번이면 루팅 된다는 군요.
"
"https://news.hada.io/topic?id=5362","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   출근해서 일합니다. ㅠㅜ

   ㅠㅠ

   저도 디즈니+ 볼 예정이에요.

   저도 디즈니+ 를 볼예정입니다!

   지난 주에 주말마다 있었던 파이썬 멘토링을 마쳤습니다.
   학생 친구와 친해지기도 했지만, 코딩을 재밌어했고, 개발에 관심도 더 커진 듯 해서 뿌듯하네요. ^^
   이제 멘토링 시간만큼 더 여유가 생겼으니, 이제는 제가 잘 못하는 프론트엔드 공부를 다시 해보려고 해요.

   - 저번 주는 완전히 깡통찼습니다! (... )
   - 디즈니+ 에 해밀턴 뮤지컬이 올라와있다면 꼭 보고 싶어요. 제 최애 뮤지컬인데 음악만 들어가지고 ... ;ㅁ ;
   - Godot 게임잼이 드디어 적들만 구현이 끝나면 일단 플레이 해볼 수 있는 PoC 빌드가 나옵니다! Godot이 나름 매력적이더라고요.
   - V8 엔진 바인딩을 해야합니다.

   해밀턴 뮤지컬이 인기라는 이야기는 들었는데 그냥 줄거리만 들으면 어떤점이 재미날까 궁금하더군요.

   참 잘 만들었어요. 랩을 좋아하는 편은 아니었던 저도 참 빠져들었습니다. 과거의 이야기를 현대식으로 해석해서, 뭔 고리타분한 아저씨들이 니가 옳니 너가 옳니 왈부갈부하는 역사가 아닌. 당장 세상을 바꾸고 싶어하고, 열성적으로 논쟁하고 떠드는 그 분위기가 너무 좋았어요. 그 떄의 위인들도 젊었을 적에는 세상을 바꾸고 싶어했던 패기 넘치던 젊은이라는 걸 참 팍팍 들어나게 도와준, 뮤지컬 넘버들이 진짜 미쳤습니다(... ) 가사 하나하나가 유식함이 철철...

   감사합니다. 말씀 들으니 정말 보고 싶어지네요.
   댓글을 보니 뮤지컬, 영상, 책 등등 다 챙겨보고 싶어지네요

   디즈니+ 검색해봤는데 해밀턴 있네요 :D

   그래서 기뻐하며 보려고했습니다만... 한글 자막이 없더군요. (... ) 로고만 한글화였어요.... 크흑...

   오랜만에 친구들 만나서 회포를 풀 예정입니다
   일요일에는 주말마다 조금씩 진행하는 토이프로젝트 계속하려구요

   디즈니+ 오픈했으니 미뤄뒀던 마블 드라마들을 볼 예정이에요
"
"https://news.hada.io/topic?id=5431","Tabby - 크로스 플랫폼 터미널","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Tabby - 크로스 플랫폼 터미널

   - 윈/맥/리눅스
   - 로컬 쉘/SSH/텔넷/시리얼 터미널 지원
   - PowerShell, WSL, Git-Bash, Cygwin 등 지원
   - SFTP 와 Zmodem을 이용하여 SSH 세션에서 파일 전송 지원
   - 재설정 가능한 단축키
   - 자동완성
   - 탭 및 다중 창 분할
   - SSH2 클라이언트 내장(커넥션 매니저 포함)
   - 여러개의 쉘 동시에 실행 가능
   - CSS로 커스터마이징 가능한 테마
   - JS 플러그인
   - URL 클릭 가능

   아직은 버벅이고 느린 감이 있습니다.
"
"https://news.hada.io/topic?id=5435","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   라마다 남대문에서 36시간 stay 하고 왔습니다.
   호캉스라는 것이 집에서 빈둥거리는 것과 다름이 없다지만,
   집이라는 곳은 편안한 쉼터 이면서도 항상 무언가를 해야만 하는 공간이기도 합니다.
   평일에 쌓여있는 집안 일들을 뒤로하고 편히 누워만 있기에는 마음이 그리 편하지 않았는데,
   호텔은 정갈하게 정리되어있는 그 부자연스러운 완벽함과, 서비스 봉사료에 포함된 이부자리 정리까지, 완벽하게 쉬다 올 수 있었습니다.
   36시간은 반쪽의 부산행 기차 시간을 맞추기 위해 예약하였지만, 1박2일치고는 길고, 2박3일치고는 짧은 모호한 경계의 시간을 보낼수 있었습니다.

   집에서 이케아 침대 조립했습니다. 허리가 나갈 것 같습니다.

   경주 여행 다녀왔습니다.
   불국사, 경주박물관, 석굴암, 첨성대같은 전통적인 관광지는 제외하고..
   황리단길 좋네요.
   골목 사이로 단층 건물들에 예쁜 까페와 식당들이 많은데,
   능뷰(?) 돌담길이 이색적이라 걷기에 좋았어요.
   젊은 사람의 활기가 느껴져서 더 좋았어요! (늙은이라..ㅠㅠ)
   강추합니다.

   경기도 양평 전원주택에 살고 있어서 이번 주말은 월동준비를 해야하네요.. ㅠㅠ
   마당에 있는 수도에 물도 빼고 동파방지용으로 꽁꽁 싸매주고 시골잡종 개 두마리도 옷 입혀주고 창문에 뽁뽁이도 붙여야 하고 ㅠㅠ

   지난주엔 팔콘&윈터솔져, 로키 까지 밀린 숙제를 했네요.
   보고나니까 이 드라마들 안보면 다음에 나올 마블 영화들 이해하기가 좀 애매하겠다는 생각이 들더군요.
   디즈니+ 구독자를 늘리려는 디즈니와 마블의 치밀한 계획인 것 같습니다.
   제가 긱뉴스에 올리는 뉴스들과는 조금(?) 성향이 안 맞거나, 한개의 링크가 아니라 여러개를 모아서 설명해야 하는 것들은 페북/트위터에만 공유를 하는데요.
   이것도 모아보면 나름 괜찮을 것 같아서 슬슬 블로그에 먼지를 털어보려고 합니다.
   그래서 주말엔 개인 블로그에 지금까지 모아뒀던? 것들 정리를 할까 해요.
"
"https://news.hada.io/topic?id=5341","커뮤니티 주도 성장을 막는 오해들과 극복 전략","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       커뮤니티 주도 성장을 막는 오해들과 극복 전략

   - ""커뮤니티""가 기술 분야의 최신 Buzzword
   - GTC(Go-To-Community) 전략은 단순히 Discord/Slack 채널을 시작하는 것 이상임
   ㅤ→ 누구를 위한 커뮤니티 인가
   ㅤ→ 커뮤니티의 비전이 조직 목표와 어떻게 일치하는가
   ㅤ→ 회원을 위해 어떤 가치를 창출할 것인가
   ㅤ→ 참여한 멤버들이 할수 있는 것들 정의
   ㅤ→ 커뮤니티의 대화들을 조직에 다시 인사이트로 불어 넣는 법
   ㅤ→ 참여에 대해 어떻게 인센티브와 리워드를 줄 것인가
   - 5가지 오해와 극복하는 법 : Femstreet가 해온 방법들
   ㅤ#오해1. 매일 참여를 유도하고 콘텐츠를 공유해야 한다
   ㅤ→ 회사가 너무 야심차게 ""커뮤니티가 원하는 것과 얼라인 되지 않은 것""들을 할 수 있음
   ㅤ→ 멤버들은 당신이 추진하는 링크, 자료, 이벤트 및 활동등에 쉽게 압도될 수 있음
   ㅤ→ 참여는 지속적인 실험이고, 중요한 기여자가 활성화 되는데에는 시간이 걸림
   ㅤ→ 몇몇 활동들이 반향을 일으키지 못하더라도 실망하지 말 것. 동작하지 않으면 일부만 골라내고 계속 진행해보기
   ㅤ⇨ 전술 : 절정의 순간(Peak Moments) 만들기
   ㅤㅤ→ ""무료 팝시클(아이스크림 바)의 힘"" : 비벌리힐스의 Magic Castle Hotel은 고급호텔에 비해 1/3 가격이지만 좋은 평점을 유지. 호텔 수영장에서 벽에 걸린 빨간 전화기를 통해 원하는 맛의 무료 팝시클을 주문 가능한 ""팝시클 핫라인""을 운영하는 것이 그 이유중 하나.
   ㅤㅤ→ 회원이 진정한 커뮤니티 경험을 하기 위해서는 ""단 한번의 임팩트 있는 순간""만 있으면 되며 모든 것을 잘 할 필요는 없음
   ㅤㅤ→ 몇몇 femstreet 멤버는 2019년 NYC의 루프탑에서 진행한 파티를 통해서 의미있는 연결이 그 순간이었다고 얘기함.
   ㅤㅤ→ 사람들을 하나로 모으는 방법에 대해 계속 혁신하고, 효과가 있으면 그걸 두배로 늘릴 것. Less is More
   ㅤ#오해2. 커뮤니티는 당신이 성장함에 따라 스스로 운영될 것이다
   ㅤ→ 어느 시점에 가면, 멤버들을 스케일러블한 팀으로 구성하고 그들이 리더가 될수 있도록 권한을 부여해야 함
   ㅤ→ Femstreet가 유료회원 300명을 넘었을때, 알아서 운영될 수 있을만큼 사람이 충분하다고 생각되고 당분간은 그렇게 움직일것 같았음
   ㅤ→ 커뮤니티에는 지속적인 리더십이 필요함
   ㅤ→ 많은 회사들이 초기 커뮤니티에서 대규모로 전환하는 시점에서 막힘. Femstreeet 도 마찬가지 였음
   ㅤ⇨ 전술 : 대규모 커뮤니티 운영을 계획하고 검토하기
   ㅤㅤ→ 규모가 커지면 커뮤니티를 성장시키는 방법은 직접적인 관계 구축보다는 ""커뮤니티 운영""에 관한 것이 됨
   ㅤㅤ→ 커뮤니티 구축을 ""공동으로 작업하는 점진적인 활동""으로 접근하고, 회원 피드백 기반으로 검토할 것
   ㅤㅤ→ 규모가 커짐에 따라서, 수백명의 챕터 리더들을 온보딩 시키고 매달 호스팅되는 수많은 이벤트에서 데이터 추출가능하게 하는 ""반복가능한 프로세스""를 만드는 것이 중요함
   ㅤ#오해3. 새 커뮤니티 멤버들은 알아서 자신의 길을 찾을 것이다
   ㅤ→ 많은 회사들이 새 멤버들을 커뮤니티에 의미있게 온보딩 하는 방법에 대해 고려하지 않음
   ㅤ→ 종종 간과되고 더 어려워지는 것중 하나는, 커뮤니티에서 파편화된 학습을 해결 하는 것
   ㅤ→ 당신이 커뮤니티 멤버에게 제공하는 많은 혜택들은 회원이 알지 못하거나 따라 갈 수 없기 때문에 제대로 활용되지 못할 수 있음
   ㅤ→ 커뮤니티에 가입하는 것은 종종 그 자체로 ""압도(Overwhelming)""될수 있고, 파편화 된 학습은 정말 고통 스러움
   ㅤ⇨ 전술 : 온보딩 가이드와 문서를 작성해서 학습 단편화를 초기부터 해결 할 것
   ㅤㅤ→ 자료와 자원을 통합하고 학습 경험을 단일화 하는 것이 필수
   ㅤㅤ→ 새 멤버가 커뮤니티를 탐색하고, 검증된 리소스나 문서 이벤트를 찾고, 관련된 사람들과 연결 되게 해야함
   ㅤㅤ→ Femstreet의 경우
   ㅤㅤㅤ✓ 많은 자료를 만들었지만 Slack에서 계속 같은 질문을 함
   ㅤㅤㅤ✓ Operator Ocean 이라는 Notion 페이지를 만들어서 250개 이상의 검증된 리소스를 모음
   ㅤㅤㅤ✓ 새 멤버를 위한 ""One-Pager"" 를 만들어서 커뮤니티를 최대한 활용 가능하게 하는 체크리스트를 제공
   ㅤㅤ→ 개인화된 환영 이메일을 보내고, 새 멤버를 위한 입문 이벤트에 초대하는 것등도 가능
   ㅤㅤ→ 새 멤버에게 친구나 멘토를 지정하고, 이 과정을 재미나게 만들 것. 마치 친구를 파티에 초대하는 것 처럼
   ㅤ#오해4. 푸시 활동이다
   ㅤ→ 고객들은 이미 제품과 서비스에 대해 잘 알고 있음
   ㅤ→ 고객들인 자기 주도적임
   ㅤ→ 모든 기기와 채널과 자원을 이용하여 서비스에 대한 인상을 만들게 되고 그것으로 결론을 내림
   ㅤ→ 커뮤니티는 사람들을 Binary Endpoint(Yes/No 같은 끝단)으로 모는게 아니라, 자연적으로 더 많은 사람들을 이끌어 들일 수 있는 경쟁력있는 공간을 만드는 것
   ㅤ⇨ 전술 : 높은 중력(High Gravity)에 집중할 것
   ㅤㅤ→ 커뮤니티는 회원들이 경험하는 의식과 기억에서 형성되는 강력한 유대의 그물(Web of Bonds)
   ㅤㅤ→ 잘 되면, 커뮤니티 멤버들 간의 유익한 토론을 가능하게 하고, 가치를 만들고, 이런 활동들이 비즈니스에 끼치는 2차적 영향을 이해하게 됨
   ㅤㅤ→ 사람들이 필요할때 필요한 것을 끌어내도록 격려하는 관계와 환경을 만들어야 함
   ㅤㅤ→ 이런 커뮤니티 관계를 구축하는 데에는 시간이 필요
   ㅤㅤ→ 사용자가 계속 재방문할 수 있도록 명확하고 가치있는 인센티브를 제공하고, 재방문 하는 사용자를 기쁘게 하고, 전 세계에 제품에 대한 명확하고 진정성 있는 메시지를 전달할 수 있도록 그들과 협력할 것
   ㅤㅤ→ 커뮤니티는 끌어당기는 힘과 높은 중력이 전부임. 똑똑하게 새로운 멤버를 끌어들이고 유지할 것.
   ㅤㅤ→ 멤버들이 더 많이 참여할 수록 중력이 올라가고, 일부가 나가거나 참여가 줄어들면 중력이 낮아지는 것을 느낄수 있음
   ㅤㅤ→ Orbit Model 같은 것을 활용하면 측정도 가능 https://github.com/orbit-love/orbit-model
   ㅤ#오해5. 마케팅 이니셔티브 = 커뮤니티 이니셔티브
   ㅤ→ 커뮤니티를 구축하는 것은 수작업 프로세스이며, 많은 사람의 시간과 관심이 필요함
   ㅤ→ 당신이 오늘 하는 노력중 일부가 영향을 주는데는 몇달 또는 몇년이 걸릴수 있음
   ㅤ→ 회사들은 종종 커뮤니티를 Go-To-Market(GTM) 작업의 일부로 생각하고 Nice-To-Have라 간주하는 경우가 많음
   ㅤ→ 마케팅침에서 커뮤니티 리더를 고용해서 그 팀의 다른 사람들의 목표 기반으로 성공을 측정하기도 함
   ㅤ→ 하지만 커뮤니티와 마케팅은 전혀 다른 Input 과 Output 을 가짐
   ㅤ⇨ 전술 : 커뮤티니를 자체적인 평가/예산/사람이 있는 별도의 조직으로 다룰 것. GTC계획이 GTM에 미치는 영향에 대한 가설을 정의하고 테스트 할 것. CQL 모델을 설정할 것
   ㅤㅤ→ GTC 결과는 커뮤니티의 자체의 성장/리텐션에 의해 평가되어야 함. 새로운 관계의 숫자나 신뢰의 정도 같은 것 말고
   ㅤㅤ→ GTM과 달리 GTC는 비즈니스 관계와 무관하게 개인별 가치 창출, 교육, 엔터테이닝 등에 중점을 둠
   ㅤㅤ→ Community Qualified Leads(CQL)을 파악하고 추적할 것

   - 다음 스타트업의 대세는 커뮤니티 주도형이 될 것 https://news.hada.io/topic?id=4696
   제가 긱뉴스를 만드는 기반에는 바로 이 커뮤니티가 중심이었고, 이 글도 윗 글도 바로 이런게 시대의 대세구나 라고 생각이 들게 합니다.
   물론 아직 이만큼 잘 하진 못하고 있지만, 시간을 들여서 천천히 해보려고 합니다 ^^;
"
"https://news.hada.io/topic?id=5361","에픽 vs 애플, 판사가 외부 결제 옵션을 12/9까지 허용하라고 명령","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                에픽 vs 애플, 판사가 외부 결제 옵션을 12/9까지 허용하라고 명령

   - 개발자가 ""외부 결제 옵션 링크와 버튼을 추가하는 것""을 애플은 준수해야 하며, 애플이 낸 보류 요청을 기각
   ㅤ→ 판사 : ""애플의 요청은 이 법원의 판결문을 선별적으로 읽고 있어서, 금지 명령을 뒷받침 하는 판결문을 무시하고 있음""
   - 청문회에서 애플은 다른 결제 수단을 허용하기 위해 ""정책을 다시 쓰는데 더 많은 시간이 필요하다""고 요청한 바 있음. 이를 거부한 것
   ㅤ→ 애플의 변호사는 어린이/개발자/소비자/애플을 보호하기 위해서 새로운 정책 지침이 작성되는데 몇달이 걸린다고 얘기함

   애플이 미적대니까 판사가 무조건 12/9까지 허용하라고 한거네요.
   애플은 제9순회 항소법원(Ninth Circuit, 캘리포니아 포함 미서부의 연방 항소법원)에 다시 요청할거라고는 하는데.. 어찌 되려나요.
"
"https://news.hada.io/topic?id=5391","Apple, 셀프 서비스 수리 프로그램 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Apple, 셀프 서비스 수리 프로그램 발표

   - 기기의 직접 수리를 원하는 고객들이 Apple의 정품 부품과 도구를 이용하여 수리 가능
   - 아이폰 12/13부터 시작으로 M1 칩 맥까지 확대 예정
   ㅤ→ 처음엔 iPhone 디스플레이, 배터리, 카메라에 집중
   - Apple 셀프 서비스 수리 온라인 스토어를 통해 정품 부품과 도구를 주문 가능
   - 수리 후에 사용된 부품을 반납하면 새 제품 구입시 사용가능한 크레딧 제공
   - 내년초 미국부터 시작해서 다른 국가로 확대

   저는 이용안해봤지만, 국내 사설수리업체들이 욕설논란등 서비스 불친절이 종종있었는데 그런 꼴사나운 상황이 좀 적어지는게 기대되네요.

   근래 미국에서 이슈였던 ""right to repair"" 에 대한 대응 같기도 한데..
   판매량 성장세가 떨어지니까 기존 사용자를 더 잡아두기 위한 방편이기도 할 듯 하네요.
   물론, 애플스러운 가격의 수리 도구 판매해서 수익도 내고요 ㅡ.ㅡ;
   ""애플 전동 드라이버 키트"" 이런거 나오면 안 사고 버틸 수 있을까요..
"
"https://news.hada.io/topic?id=5415","사용자 Offboarding 체크리스트 (PDF)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      사용자 Offboarding 체크리스트 (PDF)

   우리 서비스를 떠나는 사용자 대응을 어떻게 하고 있는지 확인하는 점수표
   - 투명도
   ㅤ→ 오프보딩 프로세스를 명확히 보여주는가
   ㅤ→ 취소 하는 방법이 숨겨져 있지 않은지 확인
   ㅤ→ 오프보딩을 최대한 길게 만들려고 시도하지 말기
   ㅤ→ ""좀비 매출"" (까먹은 구독등으로 생기는 낙전수입)에 최적화 하지 말 것
   - 피드백
   ㅤ→ 왜 떠나는지 묻기
   ㅤ→ 취소하기 위해 꼭 설문조사에 응답해야만 하게 만들지 말기
   - 오퍼
   ㅤ→ 적절한 다른 오퍼를 제공하는지
   ㅤ→ 유연성을 둬서, 취소대신 잠시멈춤 기능등을 제공
   - 교육
   ㅤ→ 취소후 일어나는 일을 명확히 설명
   ㅤ→ 사용자 데이터가 있다면, 사용자가 가장 많이 썼던 기능을 보여주기
   ㅤ→ 잃어버릴 기능이 줬던 장점들을 명확히 보여주기
   ㅤ→ ""도움을 주려고 하지 말기"" 이 단계까지 오면 이미 그들을 잡기는 어려움
   ㅤ→ 이 시점에서 고객을 남도록 설득하려면, Churn 피드백을 기반으로 정말 그들이 남는게 최선인 경우에만 수행해야 함
   - Reversibility
   ㅤ→ 가능하다면 특정 기간동안 취소를 원복할수 있게 하기
   ㅤ→ 취소의 원복이 불가능하고, 그로 인해 생기는 일들이 많다면, 고객이 분명히 알게 해야함 (웹 사이트를 지워야 한다면 이름을 타이핑하게 만들기)
   - 확인하기
   ㅤ→ 분명한 취소/삭제 확인 페이지를 마지막에
   ㅤ→ 가능하다면 이 마지막 확인 페이지에 원복 옵션을 제공
   ㅤ→ 사람들이 죄책감이 들도록 해서 취소하는 것에 대해 기분이 좋지 않게 만들지 말기
   ㅤ→ 명확하고, 간결하고, 예의바르게
   ㅤ→ Follow-up 이메일을 통해서 고객의 계정이 닫혔다는 것을 알려주고, 나중에 뭔가 필요하면 연락하라고 알려주기
   - 연구와 개선
   ㅤ→ 고객의 Churn 피드백, 데이터, 남겼던 서포트 티켓 등을 통해서 제품 개선에 사용할 것
   ㅤ→ 매 1-2개월마다 이걸 확인해서, 같은 피드백이 계속 나오지 않게 할 것

   온보딩 만큼 오프보딩도 중요한데, 깔끔한 오프보딩 플로우에 대해서는 기억이 남는게 별로 없긴 합니다.
   SaaS중 에서는 https://gusto.com/ 같은 Payroll(급여관리) & HR 서비스의 경우 사용자가 이용을 중단해도, 기존 기록에 대해서는 계속 접근 가능하게 해줘서 좋았다는 얘기가 있더군요.
   이 PDF는 Growth Design 의 ""Adobe: The Psychology of User Offboarding"" 과 함께 제공되는 문서입니다.
   Adobe CC의 멤버쉽 구독 갱신 메일 및 구독 플랜등에 대해서 잘 살펴보고 있으니 함께 보시면 좋습니다.
   https://growth.design/case-studies/adobe-cancel-subscription
   온보딩 글도 같이 참고하세요.
   - SaaS Onboarding의 현재 (2021) https://news.hada.io/topic?id=4111
   - B2B SaaS Onboarding 가이드 https://news.hada.io/topic?id=4104
"
"https://news.hada.io/topic?id=5434","PHP 8.1 릴리즈릴리즈

   PHP 8.1이 릴리즈 되었네요.
   enum, readonly property, first-class callable syntax, never return type, fibers, intersection 등이 추가되었고 성능 향상도 있었다고 합니다.
   8.0 버전 대비 데모 앱 리퀘스트 시간이 23% 정도 감소했다고 하네요.
"
"https://news.hada.io/topic?id=5331","크롬 97의 새 기능 - 사용자 플로우 녹화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        크롬 97의 새 기능 - 사용자 플로우 녹화

   - 프리뷰 기능으로 97버전부터 추가될 예정
   - 개발자 도구에 Recorder 패널이 추가 됨
   ㅤ→ 사용자 플로우를 녹화(Record)/재생(Replay)/측정(Measure)
   ㅤ→ 재생할때 세팅에서 네트웍 속도 설정 가능(Slow 3G, Fast 3G)
   ㅤ→ Measure Performance 버튼으로 성능 측정 가능
   ㅤ→ 단계별로 상세히 동작을 확인하고 마음대로 편집 가능
"
"https://news.hada.io/topic?id=5379","인기 있는 오픈소스 프로젝트 만드는 팁","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         인기 있는 오픈소스 프로젝트 만드는 팁

   ""네트워크 효과 : 사람들이 더 많이 찾게 될수록, 사용자가 더 많아지고, 더 많이 참여하고, 기능이 좋아져서 더 유명해지게 됨""
   인기를 끌려면 어떻게 해야할까 ?
   #1. 잘 설계된 README
   - 맨 처음에 간결하게 설명할 것
   ㅤ→ 뭘 하는 것인가?
   ㅤ→ 내 문제를 해결하나 ?
   ㅤ→ 내 문제를 경쟁자들보다 더 잘 해결하나 ?
   ㅤ→ 어떻게 설치하지 ?
   ㅤ→ 내가 알아야할 기본 명령들은 ?
   ㅤ→ 도움 받으려면 어디로 가야하지 ?
   1.1 프로젝트를 요약 설명하는 헤더 만들기
   ㅤ→ 로고 : 로고는 Canva 같은 데서 GIF Logo 만들기
   ㅤ→ 슬로건 : 한줄로 프로젝트를 설명. 깃헙의 Desc에 적용할 것
   ㅤㅤ⇨ 눈에 확 들어오게
   ㅤㅤ⇨ 왜 사용자가 이걸 필요로 하는지
   ㅤㅤ⇨ 왜 다른 것들보다 이게 좋은지
   ㅤㅤ⇨ 이해하기 쉽게
   ㅤㅤ⇨ 예) hugo : The world’s fastest framework for building websites
   ㅤ→ 뱃지 : 작은 이미지/링크인 것들로 프로젝트를 설명
   ㅤㅤ⇨ 최근 활동 횟수, 다운로드수, 채팅방에 몇명이나, 사용하는 버전들, 라이센스.. 등
   ㅤ→ 빠른 설치 : 쉽고 빠르게 설치하는 코맨드를 바로 보이게 표시
   ㅤㅤ⇨ 이미 알고온 사람들은 빨리 사용해 볼수 있게
   ㅤㅤ⇨ 도커/PIP 한줄로 설치 가능하다 같은 걸 최대한 초반에 표시
   ㅤㅤ⇨ docker run -it --rm remnux/ciphey
   ㅤ→ 퀵 링크들(필수 아님)
   ㅤㅤ⇨ 웹사이트, 포럼, 문서, 설치가이드, 컨트리뷰션 가이드, 트위터 등
   1.2 ""What is This?"" 프로젝트를 간결하게 설명하기
   ㅤ→ 짧은 설명 + 프로젝트 동작을 보여주는 GIF + 사람들이 보고 싶어할 필수 기능
   ㅤ→ 예) Starship : 두개의 컬럼으로 왼쪽에는 필수 기능 소개, 오른쪽에는 동작 GIF
   ㅤ→ 모든 기능을 보여줄 필요 없음. 사용자들이 보고 싶어할 것만 리스트하고 이해하기 쉽게 설명할 것
   1.3 ""X vs Y"" 경쟁자 들과 비교하기
   ㅤ→ 왜 경쟁자들 대신 이 프로젝트를 선택해야 하는지 보여줘야 함
   ㅤ→ 장점을 쉽게 볼수 있도록 할 것
   ㅤ→ 린스타트업에서 ""평균적인 사용자""보다 ""얼리어답터""를 먼저 찾아야 하는 것과 같음
   ㅤㅤ⇨ 더 좋은 기능을 가지고 있다면, 새로운 도구로 바꾸는 것을 꺼려하지 않는 사람들
   ㅤ→ 경쟁자가 전혀 없거나 현재 솔루션들이 당신 것에 비해 엄청 복잡할때만 ""평균적인 사용자""를 대상으로 하는게 맞음
   ㅤ→ 가장 쉬운 방법은 주요 기능 비교 테이블을 만드는 것
   ㅤㅤ⇨ 말보다는 숫자로 표시할 것
   ㅤㅤ⇨ 동작을 GIF로 비교해서 보여주는 것도 좋음
   1.4 훌륭한 문서 만들기
   ㅤ→ 모든 문서를 README에 넣을 필요는 없음. 업데이트 및 검색이 어렵고 README를 보기 힘들게 만듬
   ㅤ→ 위에서 설치 방법은 적었으니 추가로 보여줄 것은
   ㅤㅤ⇨ 어떻게 실행하는 지
   ㅤㅤ⇨ 어디서 문서를 찾을 수 있는지
   ㅤㅤ⇨ 어떻게 지원을 받을 수 있는지
   ㅤ→ 실행방법은 GIF로 보여주는 것도 좋음
   1.5 기여 하는 방법과, 기여자들에게 감사를 보내고 및 환영하기
   ㅤ→ 프로젝트에 기여하는 법
   ㅤ→ 예전 기여자들에게 감사하기
   ㅤ→ all-contributors 같은 봇을 사용하기
   #2. 사람들이 원하는 것을 만들기
   ㅤ→ 좋은 README는 사람들의 관심을 끌고, 그들의 ""문제를 해결""하는 프로젝트는 사람들의 이야기를 이끌어 냄
   2.1 문제가 먼저고, 제품이 그 다음
   ㅤ→ 뭔가 제품을 만들기 위한 것이 아닌, 문제를 해결할 것
   ㅤ→ ""발전은 큰 도약뿐만 아니라 수백개의 작은 단계들에서도 옵니다""
   2.2 문제와 함께 살기
   ㅤ→ 문제가 없다면 효과적으로 문제를 해결할 수 없음
   ㅤ→ 무작위 아이디어 생성보다, 자신의 삶에 존재하는 문제를 관찰하는 것이 훨씬 쉬움
   ㅤ→ 문제가 있다는 걸 알게되면 두가지를 알게 되는 것. 실제로 문제가 있고, 다른 사람들도 가지고 있다는 것.
   2.3 커뮤니티에서 문제 찾기
   ㅤ→ 커뮤니티를 들여다 보면, 사람들이 자신들에게 주어진 문제를 노출하기도 함
   ㅤ→ 사람이 많을수록, 더 많이 들을 수록 직접 생각하는 것보다 많은 아이디어들을 만들어 낼 수 있음
   ㅤ→ 커뮤니티가 가지고 있는 문제를 해결하는 MVP(Minimum Viable Product)를 만들어 볼 것
   ㅤ→ 커뮤니티와 공유하고 효과를 측정하고 더 좋게 만드는 것을 배우고 다시 만들거나 추가해서 개선할 것
   #3. 입밖으로 꺼내기
   ㅤ→ 잘 만들어도 공개하지 않으면 아무도 보지 않음
   ㅤ→ 앞에서 커뮤니티를 이용했다면 다행히 그들은 이미 알고 사용할 것
   ㅤ→ GitHub Star가 0에서 1이 되는 것은 어렵지만 10에서 100은 쉬움
   3.1 커뮤니티에 공유
   ㅤ→ Build, Measure, Learn 루프
   ㅤ→ 첫번째 실제 릴리즈 때는 커뮤니티가 꼭 알게 할 것. 그들이 친구들에게 공유해 줄 것임
   3.2 News Aggregators
   ㅤ→ 원하는 Subreddit
   ㅤ→ HackerNews ( 역주 : GeekNews 도! )
   ㅤ→ Lobste.rs
   3.3 Awesome List
   ㅤ→ 토픽과 관련있는 리스트를 찾아서 PR 보내기

   하루만에 깃허브 스타 500개 모은 이야기
   https://black7375.tumblr.com/post/653140399088631808/
   예전에 제가 쓴 글입니다.
   홍보 전략을 중점으로 작성 했었어요.
   홍보글 올리는 방식이나 시기, 개발방향과 마감시기를 정했던 방법등을 써놨습니다.

   당연한 얘기이긴 합니다만.. 오픈소스의 README는 정말 중요합니다.
   아무도 해결 못 하는/안 하는 문제를 해결하거나, 경쟁자를 뛰어넘는 놀라운 기능의 프로젝트라고 해도 README에 어떻게 적는 지에 따라 결과가 달라질 수 있어요.
   국내뿐만 아니라 해외에도 알려지는 오픈 소스들이 많아졌으면 좋겠습니다.
   요즘 가장 유명한 국내 개발자분들이 만든 오픈소스의 GitHub About 과 README 도 참고해 보세요.
   swc : ""Make the web (development) faster."" swc is a super-fast compiler written in rust; producing widely-supported javascript from modern standards and typescript.
   - https://github.com/swc-project/swc
   fzf : fzf is a general-purpose command-line fuzzy finder.
   - https://github.com/junegunn/fzf
"
"https://news.hada.io/topic?id=5420","메타버스 핵심 읽기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               메타버스 핵심 읽기

   - 메타버스의 정의
   ㅤ→ VR/AR에 기반하여 상호작용이 많이 이루어지는 다음 단계 인터넷의 집합체
   ㅤ→ 현실세계와 가상세계의 간격을 줄이는 것
   ㅤ→ VR로 더 효율적으로 경험할 수 있는 인터넷
   - 메타버스를 이끄는 트렌드
   - 메타버스와 크리에이터 이코노미
   - 메타버스 테크놀로지
   - 메타노믹스(Meta-nomics)
   - 메타버스와 NFT
   - 미래의 메타버스
   Q&A
   - 뉴스, 언론, 저널리즘과 메타버스
   - 메타버스로 인해 생길 수 있는 문제와 대응책은?
   - 메타버스에 대해서 참고할 만한 도서나 자료는?
   - 브랜드의 입장에서 아직 메타버스는 ROI가 낮아보이는데?
   - NFT에서 브랜드 파워가 중요하다면 레거시 미디어 말고 새로운 미디어에게도 기회가 될까?
   - 메타버스에서의 커머스는 어떻게 변화할 것인가?
   * 일단 메타버스를 체험해 볼 필요가 있다
   * 메타버스 시장을 열어가는 두 집단
   * NFT의 활성화
   * 메타버스 속에서 진화되는 산업의 모습

   메타버스에 대한 개념을 정리하는 것과 관련해서, 아래 논문도 괜찮았습니다:
   https://scienceon.kisti.re.kr/srch/selectPORSrchArticle.do/…

   - 메타버스 비긴즈(BEGINS) : 5대 이슈와 전망 [35p PDF] https://news.hada.io/topic?id=4146
   - XIA, 2040년까지의 미래 (208p PDF) https://news.hada.io/topic?id=5300
   - 소셜미디어 너머의 미래로 향하는 페이스북 [번역] https://news.hada.io/topic?id=4787
   - Meta: 메타버스 진화 방향과 기업 페이스북/기업 메타의 미래 https://news.hada.io/topic?id=5301
   - Niantic, 리얼월드 메타버스 제작용 플랫폼 Lightship 공개 https://news.hada.io/topic?id=5355
   - WorkAdventure - 오픈소스 메타버스 플랫폼 소프트웨어 https://news.hada.io/topic?id=4823
"
"https://news.hada.io/topic?id=5410","구글 스프레드시트를 이용한 주식 포트폴리오 관리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       구글 스프레드시트를 이용한 주식 포트폴리오 관리

   - 자산 배분과 리밸런싱을 도와주는 구글 스프레드 시트
   - 포트폴리오 현황을 정해진 시간대에 이메일로 발송
   - 다수 증권사의 국내/해외주식 계정에 산재된 종목들의 현황을 한 곳에서 확인
   ㅤ→ 보유수량과 평균 매입가만 입력하면 현재가와 환율을 자동으로 가져와 손익을 계산
   - 자산유형(주식/채권/원자재/금/리츠 등) 및 투자지역(미국/한국/중국/선진국/신흥국 등)으로 구분된 자산배분 목표 지정
   - 당초 자산배분 목표를 벗어난 경우, 또는 향후 경제전망을 고려해 자산배분 목표를 변경하는 경우 리밸런싱을 해야하는데, 각 자산별로 목표 대비 얼마씩 조정해야 하는지 계산해 리밸런싱을 도와줌
"
"https://news.hada.io/topic?id=5333","사진작가를 위한 맥북 프로 M1 Max 리뷰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        사진작가를 위한 맥북 프로 M1 Max 리뷰

   - 전원 관리가 차원이 달라서 모두에게 좋음
   - 훌륭한 140W MagSafe : 0% → 50% 충전되는데 28분
   - HDMI/SD슬롯의 귀환으로 사진가에게는 훨씬 좋아짐
   - 100장의 150MB 짜리 TIFF 별사진 스태킹(합치기)/Gap Filling + Cinebench 해도 배터리가 100%에서 거의 안 달음. 팬소리도 안들림
   ㅤ→ 기존 MBP에선 이거만 해도 팬소음과 함께 배터리가 71%로 줄어들었음.
   - 새로운 Extreme Dynamic Range(XDR) 디스플레이도 훌륭
   ㅤ→ Vibrant but not oversaturated
   ㅤ→ Pixelmator Pro의 EDR 모드에서 RAW 사진의 디테일을 잘 보여줌
   ㅤ→ 포토샵도 XDR 지원을 최근 Adobe Max에서 공개했음
   - macOS Monterey 의 Display 설정에서 다양한 프리셋을 선택 가능
   ㅤ→ HDR, Diginal Cinema, Photograph(P3-D65), sRGB 등
   ㅤ→ 프리셋 선택시 자동으로 트루톤/나이트 시프트 기능이 비활성화 되고 밝기도 수동으로 변경 안되게 세팅됨
   - 좀 더 바란다면
   ㅤ→ 소니 A1 처럼 SD/CF Express 동시 지원 하는 슬롯이 되면 좋겠음
   ㅤ→ Matte/Non-Glare 스크린 옵션이 있었으면 좋겠음
   - 몇몇 추가로 살펴본 것들
   ㅤ→ 로그인 스크린이 열자마자 보임. 지연 전혀 없음
   ㅤ→ Pro Display XDR 연결이 엄청 빠름
   ㅤ→ 진정한 Lap-Top : 다리위에 올리고 써도 안 뜨거움
   ㅤ→ 터치ID 한번 누르면 화면이 보이고, 한번 더 누르면 언락
   ㅤ→ 상단의 ""노치""는 상당히 눈에 띔. 언젠가는 있는지도 까먹게 되겠지만.. 현재는 바탕화면을 검정색 단색으로 설정해서 안보임
   ㅤ→ USB-C로도 잘 충전 됨
   ㅤ→ 새 스피커들은 정말로 눈에 띄게 좋음. 영화볼 때 베이스에 즐겁게 놀라게 됨
   - 사진가에게 추천은 16"" MacBook Pro M1 Max, 64GB RAM, 8TB SSD
   ㅤ→ 성능, 포트 면에서 14""보다 나음
   ㅤ→ 가능하면 내장 SSD는 큰게 좋음. 작업하는데 훨씬 편하고 빠름
   - 집/스튜디오에서는 Apple Pro Display XDR 연결하는게 가장 좋긴 한데, LG의 UltraFine 5K 도 가성비 좋음
"
"https://news.hada.io/topic?id=5343",".NET 6 발표 - 가장 빠른발표 - 가장 빠른 .NET

   - 브라우저/클라우드/데스크탑/IoT/모바일 앱 전체에서 같은 .NET 라이브러리를 사용하는 Unified 플랫폼
   - 대폭 성능 개선 : Dynamic PGO, File I/O..
   - 애플 실리콘(Arm64) 지원
   - C# 10 과 F# 6 에 새 언어 기능들 추가
   - C# 과 VB에서 Hot Reload 지원 (VS 2022 와 .NET CLI 에서 사용가능)
   - Blazor 컴포넌트가 JavaScript 에서 렌더링 가능
   - WebAssembly AOT(Ahead-Of-Time) 컴파일 지원
   - HTTP/3 지원 추가
   - OpenSSL 3 지원
   - Single-file Apps 가 리눅스/맥/윈도우 지원(이전엔 리눅스만 지원)
"
"https://news.hada.io/topic?id=5416","쉽게 설명한 NFT 따라하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            쉽게 설명한 NFT 따라하기

   - 대체불가능토큰 또는 ERC-721 토큰이라고 불리는 NFT(Non-Fungible Token)
   - NFT는 등기권리증과 같아서 다른 사람의 NFT와 맞교환하는 것이 불가능
   - NFT의 구조
   ㅤ→ NFT 미디어 데이터(NFT Media Data) : 원본 디지털 콘텐츠 자체. 주로 외부 저장매체에 보관(IPFS/Warm)
   ㅤ→ NFT 메타데이터(NFT Metadata) : 미디어 데이터의 제목과 이에 대한 간략한 설명, 생성자에 대한 정보, 그리고 실제 미디어 데이터가 저장돼 있는 곳의 인터넷 주소. IPFS등에 보관
   ㅤ→ NFT 스마트계약(NFT Smart Contract) : 소유권 확인, 소유권 양도, 로얄티 지급 등의 기능 및 NFT 메타데이터가 보관돼 있는 곳의 인터넷 주소가 코딩돼 있는 컴퓨터 프로그램으로 블록체인에 직접 저장
   - 2021년 3월 크리스티(Christie) 경매에서 6930만달러에 낙찰돼 화제가 된 비플(Beeple, 본명은 마이크 윙켈만)의 '매일: 첫 번째 5000일(Everydays: The First 5000 Day)' 사례로 알아보기
   - NFT 거래시 주의할 것
   ㅤ→ NFT 메타데이터에 표시된 디지털 콘텐츠 원본 여부를 확인
   ㅤ→ 거래 당사자가 디지털 콘텐츠 원본의 소유주임을 반드시 확인
   ㅤ→ 저작권과 관련한 분쟁이 발생할 수 있다는 점에 유의
   ㅤ→ NFT가 원본과 복사본을 구별 가능하게 해주는 것은 사실이나, 원본에 대한 무단 복제 자체를 막아주지는 못함
"
"https://news.hada.io/topic?id=5380","SearX - 프라이버시를 존중하는 오픈소스 메타서치 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    SearX - 프라이버시를 존중하는 오픈소스 메타서치 엔진

   - 70개 이상의 검색 서비스 결과를 통합
   ㅤ→ 구글,빙,유튜브,네이버,위키피디어,덕덕고,깃헙,깃랩,imdb,npm,레딧..
   - 사용자 정보 트래킹/프로파일링 하지 않음
   - 검색 API 제공
   - 플러그인 기능으로 Hook을 통해 확장 가능 : Pre-search/Post-Search/Result Hook
   - 익명성을 위해 Tor를 통해서도 사용 가능
   - 공개 인스턴스를 사용하거나 직접 호스팅해서 사용
   ㅤ→ 디렉토리 : https://searx.space/
   ㅤ→ 도커이미지 searx/searx
"
"https://news.hada.io/topic?id=5432","Jovo - 보이스 & 채팅을 위한 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Jovo - 보이스 & 채팅을 위한 프레임워크

   ""The React for Voice and Chat""
   - 웹, 음성 (알렉사/구글 어시스턴트), 채팅(메신저, 인스타그램, 구글 비즈니스 메시지) 등을 위한 대화형/멀티모달 앱 생성 지원
   - TypeScript 오픈소스
   - CLI 및 로컬 개발 지원, 브라우저 기반 디버깅
   - 컴포넌트 기반
   - 멀티모달 : Output Template 엔진으로 콘텐츠를 음성, 텍스트, 비쥬얼 응답으로 번역 가능
   - 플러그인 지원 (프레임워크 / CLI)
   - NLU(Natural Language Understanding) 서비스 연동 : Rasa NLU, Snips NLU, NLP.js
   - CMS 연동 : Google Sheets, Airtable
   - 테스트를 위한 Staging 및 유닛테스팅 스위트 제공
"
"https://news.hada.io/topic?id=5452","Micronaut - JVM기반의 MSA/서버리스 개발용 풀스택 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Micronaut - JVM기반의 MSA/서버리스 개발용 풀스택 프레임워크

   - Grails 개발자들이 만든 클라우드 네이티브 프레임워크
   - MSA에 적합
   ㅤ→ Reactive Streams 표준 지원
   ㅤ→ 다양한 메시징 시스템 지원 : Kafka, RabbitMQ, MQTT, JMS
   ㅤ→ 서버리스 개발/테스트/배포 지원 : AWS Lambda, Google, Azure, Oracle
   ㅤ→ OpenAPI 와 Swagger 지원
   - Polyglot : Java, Groovy, Kotlin, Scala(예정)
   - 빠른 Data-access 설정 과 쉬운 유닛테스팅
   - Aspect-Oriented API
   - GraalVM 지원

   이번에 새로 나온 프레임워크는 아닌데, 어떤 의도로 글을 추가하신건지 궁금합니다! ㅎㅎ

   제가 자바쪽은 잘 보지 않아서 이제서야 알았어요 ㅎㅎㅎ

   아하! ㅎㅎㅎㅎ
"
"https://news.hada.io/topic?id=5421","kamazon 11번가 아마존 가격 하락 알리미 아키텍쳐","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    kamazon 11번가 아마존 가격 하락 알리미 아키텍쳐

   kamazon 은 11번가 아마존의 상품 가격 하락 알림을 받아볼 수 있는 텔레그램 기반의 챗봇.
   - 언어 : Kotlin
   - 크롤러 : Kotlin + Spring + Redis
   - 차트 사이트 : Kotlin + Spring ( pricegrep.com )
   - 인프라 / 환경
   ㅤ= 오라클 클라우드 : 무료
   ㅤ= Vultr MySQL (Google Firestore 사용하다가 이관)
   ㅤ= GitLab : Docker Registry 무료 제공
   ㅤ= Docker

   어젯밤에 클리앙에서 봤었는데 요거 큐리오님이 만드신거에요? ㅎㅎ

   오잉 아니에요. ㅎㅎ
"
"https://news.hada.io/topic?id=5336","LibreOffice 7.1.7 Community 버전 출시 발표 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  LibreOffice 7.1.7 Community 버전 출시 발표

   2021년 11월 4일
   도큐먼트 재단(The Document Foundation)은 일반적인 사용자를 대상으로 한 리브레오피스(LibreOffice) 7.1 제품군의 7번째 마이너 출시 버전인 리브레오피스 7.1.7 커뮤니티(LibreOffice 7.1.7 Community)를 발표하였습니다.
   출시된 버전은 다음의 링크 https://www.libreoffice.org/download/ 에서 다운로드가 가능합니다.
   리브레오피스의 최종 사용자 지원은 자원봉사자들이 이메일과 온라인 리소스(링크: https://www.libreoffice.org/get-help/community-support/ )를 통해 지원합니다.
   웹사이트와 위키에서는 안내서, 매뉴얼, 튜토리얼, 사용법등이 있습니다. 기부는 이러한 리소스를 추가 및 유지 해주는 좋은 방법입니다.
   LibreOffice 7.1.7 변경 로그 내용은 도큐먼트재단(The Document Foundation) 위키에서 찾아 볼 수 있습니다.
   * https://wiki.documentfoundation.org/Releases/7.1.7/RC1 (RC1에서의 변경점)
   * https://wiki.documentfoundation.org/Releases/7.1.7/RC2 (RC2에서의 변경점)
   리브레오피스(LibreOffice) 사용자, 자유 소프트웨어 옹호자, 커뮤니티의 회원은 도큐먼트재단(The Document Foundation)의 금융지원을 제공받을 수 있습니다. 이러한 금융지원은 다음의 링크(https://www.libreoffice.org/donate)를 통해 Paypal, 신용카드등 여러가지 지불수단의 기부로 지원됩니다.
"
"https://news.hada.io/topic?id=5439","Alpine Linux 3.15.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Alpine Linux 3.15.0 릴리즈

   - 리눅스 커널 5.15
   - LLVM 12, nodejs 16.13, postgresql 14, ruby 3.0, rust 1.56, openjdk 17
   - 커널 모듈들이 이제 gzip으로 압축
   - sudo 대신 doas
   - x86_64 에 UEFI Secure Boot 지원
   - 인스톨러가 디스크 암호화 지원
   - Framebuffer 드라이버 비활성화 및 simpledrm 으로 교체

   sudo 를 doas 로 교체한다는게 제일 흥미롭네요.
   제가 OpenBSD 유저가 아니라 doas 는 한번도 안써봤는데..
   맥용 포트도 있군요 https://github.com/slicer69/doas
"
"https://news.hada.io/topic?id=5427","Winamp - 완전히 새로 개발 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Winamp - 완전히 새로 개발 중

   - 기존 버전 업데이트가 아닌 완전한 리마스터
   - 베타 테스터 모집중
   - 아티스트 와 크리에이터를 위한 음악 릴리즈 기능 포함 예정

   Nullsoft → AOL → Radionomy(벨기에회사, 지금은 Shoutcast) 로 인수 되었는데,
   이제 회사도 따로 설립하고 뭔가 새로 만드는가 봅니다.
   근데 이 페이지가 엄청나게 CPU를 많이 먹어서..
   윈앰프 의 느낌과 정 반대라고 욕을 먹고 있네요. 너무 힘을 많이 준듯..
   https://news.ycombinator.com/item?id=29314962
"
"https://news.hada.io/topic?id=5340","micro - 직관적인 터미널 기반 텍스트 에디터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      micro - 직관적인 터미널 기반 텍스트 에디터

   - 스태틱 바이너리로 쉬운 설치(Go 오픈소스) : 맥/윈/리눅스..
   - JSON 설정 파일로 옵션/키바인딩 조정
   ㅤ→ 더 복잡한 세팅은 Lua로 가능
   - 75개 언어 구문강조 지원. 7개의 컬러스킴 내장
   ㅤ→ 16/256/트루컬러 지원
   - Sublime 스타일 멀티 커서 지원
   - Lua기반 플러그인 시스템
   - 마우스 지원 - 클릭/드래그/더블클릭(워드 선택)/트리플클릭(라인 선택)
   - 터미널 에뮬레이터 내장
"
"https://news.hada.io/topic?id=5400","Lighthouse 9.0 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Lighthouse 9.0 공개

   - User-Flow 성능 측정용 API 추가
   ㅤ→ Puppeteer를 이용해서 사용자 인터랙션을 진행하고 성능을 측정
   ㅤ→ Snapshot : 특정 시점에서 페이지 리프레시 없이 Audit 실행
   ㅤ→ Timespan : 일정 시간 동안 Audit 실행
   - 보고서 양식 더 명확하게 변경
   - 크롬 개발자 도구, npm, 크롬/FF의 브라우저 확장으로도 제공
"
"https://news.hada.io/topic?id=5399","RedisJSON 퍼블릭 프리뷰 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          RedisJSON 퍼블릭 프리뷰 공개

   - Redis에 JSON 데이터를 저장/갱신/읽기 지원하는 모듈
   ㅤ→ 계층구조로 된 JSON 문서 모델
   ㅤ→ 바이너리 형식으로 트리구조에 저장, 빠른 접근 지원
   - JSON 표준을 전체 지원하며, JSONPath 와 비슷한 문법으로 내부 엘리먼트 선택 가능
   - 읽기/쓰기/변경시에 MongoDB/ElasticSearch 보다 훨씬 빠름
   - Rust 오픈소스
   - RediSearch 기반으로 2차 인덱스 지원
"
"https://news.hada.io/topic?id=5382","Mani - 여러개의 Repo 관리용 CLI ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Mani - 여러개의 Repo 관리용 CLI

   - MicroService, Multi-Project, 많은 라이브러리를 가진 프로젝트를 통합 관리
   - 설정파일에 각 Repo를 지정한뒤, 명령을 모든 Repo에 실행
   ㅤ→ 여러개의 Repo 한번에 Clone
   ㅤ→ 유연한 필터링 제공
   ㅤ→ 커스텀/Ad-hoc 커맨드 실행
   ㅤ→ 자동 완성 지원(bash/zsh/fish/powerhell)
   - 리눅스/맥 기본 지원. 윈도우는 일부만
"
"https://news.hada.io/topic?id=5411","구글 워크스페이스로 간단한 회사 결재서비스 구현하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글 워크스페이스로 간단한 회사 결재서비스 구현하기

   - 구글 문서(닥스,시트,슬라이드)에 포함된 ""승인"" 기능을 이용하여 전자 결재 서비스 대용으로 사용하기
   ㅤ→ 원래 법률/계약을 위한 기능인데 결재에 활용
   - 상위자에게 승인 요청 가능(다단계는 불가)
   ㅤ→ 기한 지정 및 승인자가 수정하도록 세팅 가능
   ㅤ→ 수정보다는 댓글 기능을 이용하는걸 추천
   ㅤ→ 승인 되면 문서 수정이 불가능 ⇨ 공유 드라이브로 이동해서 보관 및 관리
   - 검색을 통해서 ""승인할 항목"" ""요청한 항목"" 들만 검색 가능

   보고 라인이 짧은 회사에서는 간단하게 쓸만하겠네요.
"
"https://news.hada.io/topic?id=5383","macOS Monterey에 포함된 networkQuality 도구의 비밀","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               macOS Monterey에 포함된 networkQuality 도구의 비밀

   - 장비의 인터넷 품질을 측정할수 있는 도구로 아래 테스트를 수행
   ㅤ→ 업/다운 capacity : 일반 인터넷 속도 측정 도구와 같음
   ㅤ→ 업/다운 flows, 반응성 테스트를 위한 테스트 패킷 수
   ㅤ→ RPM(Roundtrips Per Minute)로 측정한 반응도 : Low/Medium/High
   - 일반적인 측정도구와 달리 업/다운을 ""동시에 측정"" 하는게 기본 값이라서 실제 상황과 비슷 (화상/음성 통화 처럼)
   ㅤ→ -s 옵션으로 업/다운 각각 측정도 가능
"
"https://news.hada.io/topic?id=5397","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.
   * 지난 주말에 계획하셨던 일의 회고도 한번 남겨보면 좋을 것 같아요

   출근을 했어요(... )

   아앗...

   2021 보드게임콘에 다녀왔습니다. 새로 구입한 보드게임들을 뜯어볼 예정이에요 :)

   앗 부럽습니다 ;ㅁ ;

   시간대별 인원 제한이 생겨서, 체험부스들도 쾌적하고 좋았던 것 같습니다! 굵직한 신작이 없었던 것이 좀 아쉽네요...ㅠㅠ

   앗 부럽네요. 전 사전 예약은 했었는데 못갔어요 ㅠ

   아이고 그러셨군요ㅠㅠㅠ 점점 행사 구성 면에서 좋아지고 있는 것 같아요 :D 내년에는 꼭 함께 하시죠...!!

   피아노 건반을 구매해서 피아노 연습하려고요~

   지난주 목표였던 디즈니+ 완다비젼을 봤습니다. 처음엔 이게 뭔가 했는데 뒤로 갈수록 흥미진진!
   마블이 드라마에도 돈을 많이 들인 것 같아요. 팔콘&윈터솔져, 로키까지 계속 달려야 할듯
   근 몇 달간 주말에 뭔가 일이 많았어서 그런지.. 생산적인 일은 계속 안 하게 되네요.
   이것도 주기가 있는 듯 하여, 그냥 손놓고 쉬어보려고 합니다.
"
"https://news.hada.io/topic?id=5363","Unity, Weta Digital을 1.9조원에 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Unity, Weta Digital을 1.9조원에 인수

   - 피터잭슨 감독이 만든 비쥬얼 이펙트 전문 회사
   ㅤ→ 반지의 제왕, 아바다, 샹치 등의 특수효과를 담당 했음
   - Weta는 시각 효과 아티스트와 그들이 사용하는 도구를 만드는 엔지니어들이 많은 회사
   ㅤ→ Unity는 이중에서 275+명의 엔지니어링 팀을 인수
   ㅤ→ 시각 효과팀은 별도 조직인 Weta FX로 분할하고 계속 피터 잭슨이 대부분을 소유할 예정
   - Unity가 Weta의 도구를 가져와 발전 시킬 것
   ㅤ→ City Builder : 킹콩에서 보았던 3D 도시 생성 도구
   ㅤ→ Manuka : 물리 시뮬레이션 렌더러
   ㅤ→ Gazebo : 실시간 렌더러 (아티스트 들이 빠르게 확인 가능한)
   - 또한 Weta 가 몇년간 만들어 놓은 수많은 디지털 애셋들도 가지게 됨
   ㅤ→ 도시, 자동차, 사람들의 3D 모델
   ㅤ→ 연기, 불, 비 를 표현하는 알고리듬
   ㅤ→ 동물떼가 어떻게 나무사이를 이동하는 지등을 표현한 시뮬레이션 등

   엔지니어링 파트만 파는걸 봐선 이제 CG엔지니어링으로 해볼건 다 해봤다는 얘기일까요. 이제 질이 아니라 양만 늘리면 된다는 느낌ㅎㅎ
"
"https://news.hada.io/topic?id=5377","2022년 이메일 디자인 트렌드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           2022년 이메일 디자인 트렌드

   - 초-개인화된 경험
   ㅤ→ 단순 이름 뿐만 아니라, 완전히 개인화된 콘텐츠와 구독자와의 연결을 만들고 가치 있게
   ㅤ→ 이메일, 랜딩, 체크아웃 등 모든 연결 페이지도 다 개인화 및 고객 데이터로 미리 채워두기
   ㅤ→ 세그먼트, 시간, 제목, 내용, 오퍼, 시그니쳐 등을 모두 최적으로 설정
   ㅤ→ 예) Grammarly, Butter
   - 인공지능
   ㅤ→ AI를 이용하는 도구들이 점점 많이 사용됨
   ㅤ→ 예) Everest(Return Path), Zeta Global, Phrasee
   - 소셜 증거들 : 피드백과 리뷰
   ㅤ→ 90%의 고객들이 구매전 리뷰를 확인. 50%이상이 구매시 ""피드백""을 주요 결정요소로 고려
   ㅤ→ 아바타/사진, 고개의 이름과 Bio, 별점, 리뷰, Call-To-Action 버튼
   ㅤ→ 예) Italic, Mack Weldon, Thinx
   - 인터랙티브 경험
   ㅤ→ 많은 이메일 클라이언트들이 인터랙티브 기능을 향상
   ㅤ→ 애니 GIF, 동적 효과, 퀴즈, 슬라이더, 갤러리 등
   ㅤ→ 예) Caribbean International, Protest Sportwear, Output, Amass
   - 프라이버시 보호 및 존중
   ㅤ→ SPF, DMARC는 기본
   ㅤ→ 구독 해지 링크과 설정 관리 링크는 필수로 추가
   - 일러스트 아이콘, 네온 컬러, 애니메이션 콜라주 : 이메일 디자인 트렌드
   ㅤ→ 디지털 뉴스레터는 점점 많은 기능과 스토리로 다양한 디자인을 추구
   ㅤ→ 멀티레이어드 형태의 뉴스 매거진, 아이콘, 애니메이션, 다크모드..
   ㅤ→ 예) Apple, Foxtrot, Salomon
   - 이메일 접근성
   ㅤ→ 접근성을 트렌드라고 부르면 안되지만, 이메일에서도 접근성은 누구나 고려해야함
   ㅤ→ 예) Litmus, Procreate

   원글은 실제 이메일 예제 이미지가 많으므로 꼭 참고하시기 바랍니다.
"
"https://news.hada.io/topic?id=5417","테크 기업은 주주서한에서 무엇을 말하는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         테크 기업은 주주서한에서 무엇을 말하는가

   아틀라시안의 주주서한을 통해 어떤 지표로 비전을 알리는지 알아보기
   - 회사의 미션 : 클라우드
   - 세가지 시장
   ㅤ→ 애자일 개발
   ㅤ→ IT 서비스 관리
   ㅤ→ 모두를 위한 업무 관리
   - 고객 지표
   - 재무제표 : 구독/클라우드/데이터 센터 수익, 신규 멤버, 순이익, 대차 대조표, 잉여 현금 흐름
   - 2022 회계연도 전망
   - 아사나/슬랙의 주주서한과의 비교
   * 호주회사. 회계연도 7/1 ~ 다음해 6/30
"
"https://news.hada.io/topic?id=5430","유용한 1줄 CSS 레이아웃","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            유용한 1줄 CSS 레이아웃

   - Super Centered { place-items: center }
   - The Deconstructed Pancake { flex: 0 1 }
   - Sidebar Says { grid-template-columns: minmax(, ) ... }
   - Pancake Stack { grid-template-rows: auto 1fr auto }
   - Classic Holy Grail Layout { grid-template: auto 1fr auto / auto 1fr auto }
   - 12-Span Grid { grid-template-columns: repeat(12, 1fr) }
   - RAM (Repeat, Auto, Minmax) { grid-template-columns: repeat(auto-fit, minmax(
   , 1fr)) }
   - Line Up { justify-content: space-between }
   - Clamping My Style { clamp(, , ) }
   - Respect for Aspect { aspect-ratio: / }

   딱 1줄이라고 하긴 뭐하지만.. 유용해 보이네요.
"
"https://news.hada.io/topic?id=5372","Cedille - 6B규모의 프랑스어 모델을 오픈소스로 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Cedille - 6B규모의 프랑스어 모델을 오픈소스로 공개

   - AI시스템을 위한 60억개의 파라미터로 된 프랑스어 모델
   ㅤ→ 텍스트 요약, 번역, 아이디어 생성 등에 사용 가능
   - GPT-3와 비슷하지만 좀 더 작고, 프랑스어에 더 잘 맞게 타겟하며, MIT라이센스로 공개
   - 광범위하게 데이터 세트를 필터링 하여 유해하거나/선정적인 것들을 제외시킴
   - 오픈소스로 공개된 GPT-J 모델 기반, 구글의 TPU Research Cloud를 이용

   GPT-3는 이제 시장에서 유일하지 않음 https://news.hada.io/topic?id=5349
   여기에 또 하나의 모델이 추가 되었네요.
"
"https://news.hada.io/topic?id=5347","hwatch - 커맨드의 아웃풋 변화를 기록하는 watch 대체 유틸리티","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                hwatch - 커맨드의 아웃풋 변화를 기록하는 watch 대체 유틸리티

   - 커맨드를 주기적으로 실행하며 마지막 아웃풋을 보여주는 것은 watch와 동일
   - 아웃풋이 변화된 시점과 내용을 기록하고 이를 커서키로 간단히 돌아가볼 수 있음
   ㅤ→ 상태 모니터링에 watch를 사용하지 않는 가장 중요한 문제를 어느 정도 해소
   - rust로 개발
"
"https://news.hada.io/topic?id=5357","라즈베리 Pi로 오래된 프린터를 AirPrint 지원하게 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  라즈베리 Pi로 오래된 프린터를 AirPrint 지원하게 만들기

   1 Raspbian 을 SD카드에 설치
   2 ssh 및 wpa_sullicant.conf로 WiFi 접근 추가
   3 sudo rasp-config 로 암호 변경
   4 프린터를 USB케이블로 연결
   5 CUPS 설정하고 네트웍 연결가능하게 만들기
   ㅤsudo apt-get update
   ㅤsudo apt-get full-upgrade
   ㅤsudo apt-get install cups
   ㅤsudo usermod -a -G lpadmin pi
   ㅤsudo cupsctl --remote-any
   ㅤsudo systemctl restart cups
   6 http://raspberrypi:631/admin 접근해서 로컬 프린터 추가하고, ""Sharing"" 되어 있는지 확인
   7 AirPrint 설정
   ㅤsudo apt-get install avahi-daemon
   ㅤsudo reboot
"
"https://news.hada.io/topic?id=5445","Clojure 매크로 소개글","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Clojure 매크로 소개글

   Clojure 매크로의 소개글입니다.
   C언어의 매크로와 차이점을 설명하고, Clojure(LISP)의 매크로로 여러가지 트릭을 소개하며 마지막에는 Clojure에는 없는 패턴매칭을 매크로로 구현하며 마칩니다.

   클로져 쓰는 국내회사가 있었군호

   ""그 이름에서도 짐작할 수 있듯이, 연결 리스트(linked list)가 리스트의 핵심 자료구조입니다.""이라는 글에서 리스트를 리스프로 적어야 합니다. 오타인 거 같습니다.
"
"https://news.hada.io/topic?id=5369","Google Summer of Code 2022, 학생 아니어도 참가 가능하게 확장 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Google Summer of Code 2022, 학생 아니어도 참가 가능하게 확장

   - GSoC는 17년간 새로운 오픈소스 컨트리뷰터를 만드는 걸 도왔음
   ㅤ→ 112개국 18,000명의 대학생. 746개의 오픈소스 조직에서 17K의 멘토들
   - 대학생 및 최근 졸업자가 아닌, ""18세 이상의 모두""를 대상으로 확장
   ㅤ→ 오픈소스에 참여하고 싶은 누구든 환영
   - ~175시간 의 중간규모, ~350시간의 대규모 프로젝트를 지원하게 변경
   - 6월에서 8월사이의 12주가 아니라, 누구나 12주차를 끝내면 되는 식으로 변경하고, 필요한 경우 멘토와 의논하여 22주까지 연장 가능
"
"https://news.hada.io/topic?id=5426","빌게이츠의 2021년 추천서적 5권","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          빌게이츠의 2021년 추천서적 5권

   - A Thousand Brains: A New Theory of Intelligence, by Jeff Hawkins
   - The Code Breaker: Jennifer Doudna, Gene Editing, and the Future of the Human Race, by Walter Isaacson
   - Klara and the Sun, by Kazuo Ishiguro [클라라와 태양]
   - Hamnet, by Maggie O’Farrell
   - Project Hail Mary, by Andy Weir [프로젝트 헤일메리]

   혹시나해서 찾아보니 번역서 있네요. 두 권 다 2022년에 번역됐습니다. 빌게이츠 영향?
     * A Thousand Brains: A New Theory of Intelligence, by Jeff Hawkins - 천 개의 뇌 9791189143282
     * The Code Breaker: Jennifer Doudna, Gene Editing, and the Future of the Human Race, by Walter Isaacson - 코드 브레이커 9788901256603

   빌게이츠가 쓴 서평을 저기서 다 볼 수 있는 거군요! 와 쩐다..!

   프로젝트 헤일메리는 너무 재미있게 보았습니다.
   생명의 물리학이라는 책이 또 외계 생명체와 관련한 이야기(결국 생명이 존재하기 위한 물리적인 조건 한계를 생각하면 지구 생명체와 다르기 힘들거라는 이야기)를 다루는데 프로젝트 헤일메리도 이 책, 혹은 이 책에서 언급한 정보들을 많이 참고 하지 않았을까 싶더군요

   2012년부터 2019년까지의 빌게이츠 추천 도서 정리 https://blog.naver.com/dmx777/221829484745
"
"https://news.hada.io/topic?id=5433","QOI - O(n) 무손실 이미지 압축n) 무손실 이미지 압축

   ""Quite OK Image""
   - PNG와 비슷한 크기로 RGB/RGBA 압축을 실행
   ㅤ→ 압축은 20x-50x 빠르고, 해제는 3~4x 빠름
   ㅤ→ 300 라인짜리 싱글 헤더 파일 C 코드 오픈소스
   ㅤ→ SIMD 사용하지 않는 심플한 싱글쓰레드 구현체
   - 기술 세부
   ㅤ→ 단일 패스로 이미지 인코드/디코드
   ㅤ→ 모든 픽셀을 한번만 건드리며, 각 픽셀은 4가지 방법중 하나로 인코딩
   ㅤㅤ⇨ 바로 앞의 픽셀과 같다면 앞 픽셀의 run-length를 증가, 다르다면 새 픽셀을 뒤의 3가지 방법중 하나로 패킹
   ㅤㅤ⇨ 기존에 처리했던 픽셀과 같다면 그 픽셀의 인덱스. 이를 위해 최근 64개 픽셀에 대한 배열을 가지고 있음
   ㅤㅤ⇨ 이전 픽셀과 많이 차이가 없다면 그 RGBA 차이값을 저장
   ㅤㅤ⇨ 앞의 3가지 방법이 실패하면 픽셀의 RGBA값을 저장. 단 앞의 픽셀과 다른 부분만 저장

   약간 과장해서 표현하면 QOI는 PNG에서 zlib을 떼어내고 필터링만 남긴 뒤 개선한 것입니다.
   PNG도 사용하는 zlib/gzip/DEFLATE 압축 알고리즘이 널리 쓰이긴 하지만 너무 오래 되어서 효율이 떨어지는 것도 있는데다, zlib을 비롯한 LZ77 류의 알고리즘은 ""최근 바이트 중에 연속된 바이트가 똑같은 경우가 여럿 나온다""는 기본 가정을 가지고 있습니다(예: 입력이 ""to be or not to be""일 때 ""to be"" 부분이 두 번 나온다는 걸 사용하는 것). 그런데 이미지는 이런 가정이 잘 먹히지 않는 데이터이기 때문에, PNG는 zlib을 사실상 엔트로피 코딩(다른 추가 맥락 없이 다음 바이트가 나올 확률을 토대로 압축하는 접근)용으로만 쓰고, 전처리 단계로 간단한 필터링을 써서 zlib에 들어갈 데이터를 가정에 최대한 맞추려고 합니다만 사실 그렇게 효율적이라 할 수는 없습니다.
   현대적인 비손실 이미지 포맷에서는 크게 두 가지 방법으로 이를 개선하는데, PNG의 필터링에 대응하는 픽셀 예측을 개선하는 접근이 있고(필터링 종류를 크게 늘린다거나, 이미지의 다른 부분에 서로 다른 필터링을 적용한다거나), PNG의 zlib에 대응하는 엔트로피 코딩을 개선하는 접근이 있습니다. QOI의 접근도 유사하지만 단순성을 위해 픽셀 예측에 현재 위치 윗쪽에 있는 픽셀을 전혀 사용하지 않는다는 점과, 엔트로피 코딩을 포기하고 경험에 기반한 차이(delta) 코딩을 여러 개 마련했다는 점이 특징입니다. 특히 첫번째 특징 때문에 압축/해제 성능과는 별개로 PNG보다도 압축률이 떨어지는 편인데 이는 단순성을 조금 희생해서 개선이 가능할 것으로 보입니다.

   오 추가 설명 고맙습니다. 재미나네요.

   다른 포맷을 대체할 용도로 쓰이긴 어렵겠지만, 코드가 심플하고 구현도 잘 설명해놔서 읽기 재미난 코드 인듯 합니다.
   https://github.com/phoboslab/qoi/blob/master/qoi.h
"
"https://news.hada.io/topic?id=5457","Tiny - 당신의 '훌륭한' 비즈니스를 삽니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Tiny - 당신의 '훌륭한' 비즈니스를 삽니다

   - 비즈니스를 사서 키우는 회사 : Dribbble(2017), Meteor(2019) 등 약 30개
   - 48시간내 답변, 7일안에 오퍼, 30일안에 딜 클로즈
   - 전체 또는 일부를 현금으로 지급
   - 창업자는 남거나 떠나거나 선택 가능
   - 현재의 회사 문화는 변경 없이 그대로 운영 가능
   - 이렇게 산 회사들을 오래 유지하면서 키움
   - 이런 비즈니스를 삽니다
   ㅤ→ 마진이 높고 유지 가능한
   ㅤ→ 유니크한 (브랜드/커뮤니티를 가지거나, 니치 타켓..)
   ㅤ→ 간단한 BM을 가진
   ㅤ→ $500K ~ $30MM 까지의 수익을 내는
   ㅤ→ 3년 이상 성공적으로 운영된
   ㅤ→ 좋은 문화를 가진 훌륭한 팀이 운영하는
   ㅤ→ 긍정적이고 윤리적인 접근을 하는
   - 좋은 스타트업을 추천하는 사람에게도 $25K ~ 200K 까지 보상

   연 50만 달러 수익이라는 게 작아 보이기도 하지만 진짜 소규모 기업에게는 큰 목표이기도 하네요. 일단은 계속 잘 살아온 작은 기업을 사는 개념인 거네요.

   최신 트렌드 : 초소형 사모펀드(Micro PE) https://news.hada.io/topic?id=5135
   위의 내용과도 연결 되는 회사인데요.
   HN에 올라온 댓글들을 보니 평도 괜찮습니다. https://news.ycombinator.com/item?id=29376588
   빠르게 Yes/No 를 줘서 좋고, No 받아본 경험도 나쁘지 않다고 하네요.
"
