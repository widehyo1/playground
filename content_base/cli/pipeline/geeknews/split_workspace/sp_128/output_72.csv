"https://news.hada.io/topic?id=9448","Meta, 음성용 Generative AI 모델 Voicebox 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Meta, 음성용 Generative AI 모델 Voicebox 공개

     * 이미지/텍스트 생성 AI처럼 다양한 스타일로 고품질 오디오 클립을 생성
     * 주어진 오디오 샘플 수정도 가능
     * 6개 언어의 언어를 합성할 뿐만 아니라, 노이즈 제거, 콘텐츠 편집, 스타일 전환, 다양한 샘플 생성
     * 기존 음성용 생성AI는 각 태스크별로 신중하게 준비한 훈련 데이터를 필요로 했음. Voicebox는 새로운 방법을 이용하여 원시 오디오 및 transcription 데이터로 학습
     * 영어, 프랑스어, 스페인어, 독일어, 폴란드어, 포르투칼어로 된 퍼블릭 도메인 오디오북의 5만시간 이상을 이용하여 훈련

   노래에서 보컬만 제거해서 고품질 MR을 만드는데 쓸수 있을지 모르겠네요

   그건 이미 쓸만한 오픈소스가 있습니다:
   https://github.com/Anjok07/ultimatevocalremovergui
"
"https://news.hada.io/topic?id=9433","TypeScript 5.2의 새로운 키워드 - using","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    TypeScript 5.2의 새로운 키워드 - using

     * TypeScript 5.2에서 범위를 벗어날 때 명시적으로 개체를 처분할 수 있는 새로운 키워드인 using 추가.
     * C# 등에 이미 존재하던 using과 유사한 기능.
          + 특정 함수가 객체를 반환할 때, Symbol.dispose 기호를 사용해 함수를 할당.
          + using을 통해 해당 함수를 호출.
          + 이후 범위를 벗어날 때, Symbol.dispose 함수가 호출됨.
     * 최근 3단계에 도달한 TC39의 명시적 자원 관리 제안에 기반함.
     * Symbol.asyncDispose를 통해 비동기 함수를 할당하고, await using을 사용해 비동기적으로 개체를 처리할 수 있음.
     * DB 연결, 파일 핸들러 등 다양한 상황에 활용 가능.

   이 기능은 사실 타입스크립트 기능은 아니고, ECMAScript에 제안된 기능에 기반한 일종의 폴리필 느낌입니다.
   TC39의 제안에 의해 자바스크립트에서도 구현될 예정이라고 하네요.

   저는 C# 할 때 using이 좀 편했던 기억이 있어서 환영이긴 한데,
   결국 try ... finally랑 똑같은 거 아니냐 란 말들도 좀 있네요.
"
"https://news.hada.io/topic?id=9500","Vrite -  협업 WYSIWYG 마크다운 편집기 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Vrite - 협업 WYSIWYG 마크다운 편집기 오픈소스

     * 프로그래밍 블로그 및 기술 문서를 위한 헤드리스 CMS
     * 콘텐츠 제작 및 배포를 위한 칸반 대시보드 내장
     * 마크다운 및 코드 편집기 지원
     * 실시간 협업
     * API 및 Extension 시스템 제공

   헤드리스라면서 wysiwyg이라니... 이 무슨 따뜻한 아이스아메리카노같은 소린지... what you see의 see는 마음의 눈으로 보는 건가요?

   프론트엔드는 없고 백엔드용 UI만 있어서 헤드리스라고 했나보다 했습니다. 뭐 자기네가 그렇다는데요..
"
"https://news.hada.io/topic?id=9512","비밀번호 게임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                비밀번호 게임

     * 강력한 비밀번호를 선택하는 것의 중요성에 관한 기사입니다.
     * 개인 정보와 계정을 보호하기 위해서는 강력한 비밀번호가 필수적입니다.
     * 해커들은 취약한 비밀번호를 쉽게 추측하여 데이터를 위협합니다.
     * 강력한 비밀번호는 적어도 12자 이상이며, 문자, 숫자, 기호를 혼합하여 구성되어야 합니다.
     * 흔한 단어나 구문을 사용하지 마세요. 해커들이 쉽게 추측할 수 있습니다.
     * 비밀번호 관리자를 사용하여 강력한 비밀번호를 생성하고 저장하는 것을 고려해보세요.
     * 정기적으로 비밀번호를 변경하여 보안을 유지하세요.
     * 이러한 팁을 따르면 개인 정보를 보호하고 온라인에서 안전하게 유지할 수 있습니다.

   웹 게임이라 제공되는 텍스트가 없어서 그런지, 본 게임과 전혀 무관한 일반론을 쏟아냈네요 ㅋㅋㅋㅋ

        Hacker News 의견

     * 다양한 도전과 규칙이 있는 비밀번호 게임에 대한 기사입니다.
     * 플레이어는 숫자, 대문자, 특수 문자 등 특정 요소를 비밀번호에 포함해야 합니다.
     * 게임에는 체스 퍼즐과 CAPTCHA와 같은 도전 과제도 포함됩니다.
     * 일부 플레이어는 버그나 어려운 도전 과제를 마주쳤지만, 전반적으로 게임은 즐거운 것으로 평가됩니다.
     * 게임은 일부 사용자들에게 비슷한 비밀번호 게임이나 도구를 떠올리게 합니다.
     * 댓글에서는 도전 과제를 극복하고 강력한 비밀번호를 만드는 데 도움이 되는 팁과 요령이 공유됩니다.
"
"https://news.hada.io/topic?id=9531","리눅스 네임스페이스, cgroups, 및 chroot를 사용하여 자체 Docker를 구축하세요.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         리눅스 네임스페이스, cgroups, 및 chroot를 사용하여 자체 Docker를 구축하세요.

     * 도커는 리눅스 네임스페이스, cgroups 및 chroot를 사용하여 격리, 자원 관리 및 보안을 위한 선도적인 컨테이너화 플랫폼입니다.
     * 이 안내서는 도커 뒤에 있는 핵심 기술을 실제로 체험해 볼 수 있는 기회를 제공합니다.
     * 이 안내서는 기본 컨테이너 환경을 처음부터 구축하는 단계를 안내합니다.
     * 단계 1: unshare 명령을 사용하여 새로운 네임스페이스 설정하기.
     * 단계 2: 자원 할당을 관리하고 사용량을 제어하기 위해 cgroups 구성하기.
     * 단계 3: debootstrap을 사용하여 루트 파일 시스템 구축하기.
     * 단계 4: 필수 파일 시스템을 마운트하고 chroot를 사용하여 루트 디렉토리 변경하기.
     * 단계 5: Nginx 웹 서버를 사용하여 컨테이너 내에서 애플리케이션 설치 및 실행하기.
     * 이 안내서를 따라가면 소프트웨어 엔지니어들은 리눅스 네임스페이스, cgroups 및 chroot를 사용하여 도커와 유사한 환경이 어떻게 구축되는지에 대한 실용적인 이해를 얻을 수 있습니다.
     * 도커는 더 많은 기능과 기능성을 제공하지만, 이러한 핵심 기술을 이해하는 것은 애플리케이션을 위한 격리되고 효율적인 환경을 만드는 데 중요합니다.

        Hacker News 의견

     * 컨테이너는 하나의 이진 파일을 실행하기 위해 설계되었음에도 불구하고 종종 완전한 운영 체제 파일 시스템을 포함합니다.
     * 이 기사는 Chat GPT로 생성된 작품을 연상시킵니다.
     * Linux 커널 수준의 기능을 사용하여 Docker 격리를 복제하는 것은 새로운 것은 아니지만, 종종 컨테이너 이미지 형식의 중요성을 간과합니다.
     * 컨테이너 이미지 형식을 확장하기 쉬움은 컨테이너 기반 아키텍처의 인기 요인입니다.
     * Bocker는 확인할 가치가 있는 유사한 프로젝트입니다.
     * 일부 독자들은 기사 작성에 ChatGPT의 사용에 대해 우려합니다.
     * 이와 같은 기사에도 불구하고, Docker는 계속해서 존재하며, Linux 내부와 작업하는 것이 컨테이너 생태계 구축의 가장 어려운 측면은 아님을 시사합니다.
     * Dockercon 2015에서 Jérôme Petazzoni의 발표는 컨테이너화에 대한 포괄적인 설명을 제공합니다.
     * 일부 개발자들은 패키지 매니저를 사용하는 대신 모든 종속성을 응용 프로그램과 동일한 폴더 루트에 컴파일하는 것을 선호합니다.
     * debootstrap과 systemd-nspawn 명령을 실행하면 유사한 결과를 얻을 수 있습니다.
     * LXC/LXD 컨테이너는 이미 대안으로 존재합니다.

   뭔가 미묘한...?!
"
"https://news.hada.io/topic?id=9473","AutoAnimate - 한줄의 코드로 웹앱에 모션 추가하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   AutoAnimate - 한줄의 코드로 웹앱에 모션 추가하기

     * 설정 없이 코드 한줄 추가만으로 애니메이션을 자동으로 추가
     * React, Preact, Solid, Vue, Svelte, Angular 및 모든 JavaScript 앱에서 사용 가능
     * Parent 개체에 Child가 추가/삭제/이동시에 자동으로 애니메이션이 트리거 됨

   오 좋네용

   굿

   오호 좋다
"
"https://news.hada.io/topic?id=9534","embedchain - 아무 데이터셋을 이용한 LLM 기반 봇 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 embedchain - 아무 데이터셋을 이용한 LLM 기반 봇 만들기

     * 데이터셋 로딩/청킹/임베딩 생성/벡터 저장등의 전체 과정을 추상화
     * .add 또는 .add_local 함수로 간단히 한개/여러개의 데이터셋을 추가하고 .query함수로 해당 데이터셋에서 답변을 얻을 수 있음
     * OpenAI 임베딩 모델과 ChatGPT를 LLM으로 사용
     * 지원되는 데이터 포맷 : 유튜브 비디오, PDF 파일, 웹페이지, 텍스트, Q&A 쌍
"
"https://news.hada.io/topic?id=9422","tbls - CI 친화적 DB문서화 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         tbls - CI 친화적 DB문서화 도구

     * 데이터베이스 문서를 여러 포맷으로 자동 작성 : 마크다운, DOT, PlantUML, Mermaid, 이미지, JSON, YAML, Excel
     * Go로 작성된 싱글 바이너리로 CI와 쉽게 연동
     * 다양한 DB 지원: PostgreSQL, MySQL, MariaDB, SQLite, BigQuery, Cloud Spanner, Redshift, SQL Server, DynamoDB, Snowflake, MongoDB
     * DB용 린터로 이용가능

   아주 유용하게 쓸 수 있겠네요.
   매번 문서를 수동으로 하느라 번거로웠는데, 해소될 것 같습니다.
"
"https://news.hada.io/topic?id=9523","ORM 여전히 안티 패턴인가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ORM 여전히 안티 패턴인가요?

     * ORM (객체-관계 매퍼)은 소프트웨어 개발에서 반패턴으로 비판받는 경우가 많다.
     * 그러나 이 비판은 과장된 것이며, ORMs는 다른 소프트웨어 도구와 마찬가지로 본질적으로 나쁘지 않다.
     * ORM의 실제 문제는 종종 오용되거나 오해되는 경우가 많다.
     * ORM과 관계형 데이터베이스는 다른 패러다임에서 작동하기 때문에 데이터 모델링과 관계에서 도전적인 문제가 발생할 수 있다.
     * ORM은 단일 책임 원칙(SRP)과 관심사의 분리(SOC) 원칙을 위반하지만, 이러한 비판은 결코 결정적인 문제는 아니다.
     * ORM의 실제 문제는 효율성과 가시성에 있다.
     * 올바르게 사용되지 않으면 ORM은 비효율적일 수 있지만, 쿼리를 최적화하고 성능을 향상시킬 수 있는 기능을 갖추고 있다.
     * ORM이 데이터베이스에 여러 번 왕복하는 N+1 문제는 데이터 로더를 사용하여 완화할 수 있다.
     * ORM의 가장 큰 문제는 가시성과 디버깅이다. 명확한 오류 메시지를 제공하지 않거나 문제를 이해하고 해결하기 어렵게 만들 수 있다.
     * 올바르게 사용될 때 ORM은 원시 SQL만큼 효율적일 수 있지만, 개발자는 기능과 네이티브 SQL 유사체를 활용해야 한다.
     * 일부 복잡하거나 문제가 있는 쿼리의 경우, 원시 SQL 쿼리로 전환하는 것이 필요할 수 있다.
     * 전반적으로, ORM은 본질적으로 나쁘지 않지만, 잠재적인 문제를 피하기 위해 신중하고 지식 있는 사용이 필요하다.

        Hacker News 의견

     * ORM의 한계와 단점, 예를 들어 다른 데이터베이스 사용 불가능성과 SQL 지식 요구 등이 비판받고 있다.
     * 문자열 보간과 원시 JDBC에 가까운 방식으로 데이터 레이어를 하나의 쿼리씩 구축하는 것이 더 나은 접근법으로 여겨진다.
     * ORM은 종종 기본 테이블 및 뷰 매핑에만 제한되어 SQL의 고급 기능과 능력을 무시한다.
     * 두 가지 유형의 ORM이 있다: 도메인 모델을 기반으로 하는 것과 기존 데이터베이스에서 도메인 모델을 생성하는 것.
     * jOOQ와 Hibernate와 같은 다양한 구현 및 기능을 가진 ORM은 각각 다른 목적으로 사용된다.
     * ORM은 많은 테이블과 적절한 외래 키 관계를 가진 복잡한 애플리케이션에서 유용할 수 있다.
     * 문자열 리터럴에서 원시 SQL을 사용하는 것은 ORM의 대안으로 간주되며, 쿼리 래퍼를 생성하는 도구도 사용할 수 있다.
     * 모든 것을 번들로 숨기려 하지 않거나 자체 쿼리 언어를 도입하지 않는 실용적인 ORM이 선호된다.
     * SQLAlchemy는 SQL을 재창조하지 않고 편리한 쿼리 레이어를 제공하는 접근법으로 칭찬받고 있다.
     * ORM을 사용하지 않으면 개발자는 자체 데이터베이스 인터페이스를 작성하고 유지해야 하므로 버그와 보안 취약점이 발생할 수 있다.
     * ORM이 SOLID 원칙을 어기는 것에 대한 비판은 학문적 가르침과 실제 개발 간의 충돌로 여겨진다.
     * 경험이 부족하거나 학문적인 관행의 영향으로 인해 문제가 발생하고 예산 초과가 발생할 수 있다.
"
"https://news.hada.io/topic?id=9466","Google Domains 종료 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Google Domains 종료 예정

     * 구글은 세계 3위의 도메인 등록기관을 Squarespace에 매각했지만, 고객에게는 통보도 하지 않음
     * 이 거래에는 기술 이전이 포함되어 있지 않음. 그냥 등록된 도메인 1천만개만 넘기는 것
     * 구글의 Domains 직원들은 Squarespace로 이동하지 않을 것이며, 9개월의 트랜지션 기간 동안 Domains에서 일하며 그 이후에는 다른 프로젝트/롤을 맡게 될 것
     * 즉 9개월 이후에 Google Domains와 Google Cloud Domains는 종료 할 예정

일어난 일들

     * 구글 도메인은 2015년에 출시하고 7년간 베타였다가 2022년에 정식 버전이 됨. 그시점에 7백만개 도메인
     * 그러고 1년만에 3백만 도메인을 추가해서 1천만개의 등록된 도메인을 보유하게 됨
     * 갑자기 6월 15일에 Squarespace가 보도자료를 내면서 Google Domains를 인수했다고 함
     * 뭘 판매하는 지에 대해서 구글은 ""고객 센터 아티클""을 통해서만 명시하고 있고, 보도자료를 발표하지 않음
     * 직원들에 보낸 메일에서 위 상황에 대해 설명(기술 이전 없고, 직원은 남으며, 9개월후 새로운 프로젝트에 투입된다는 것)
     * 구글은 아직도 Domains 고객에게 아무런 알림도 주지 않음
     * 규제기관이 이 판매를 반대하면 취소될 수 있기 때문일수도
     * Cloudflare는 이때다 하고 자신들쪽으로 옮기라고 홍보중
     * 이 거래의 승자는 Squarespace. 현재 1백만개의 도메인을 관리하는 회사가 1천만개를 얻게 되면서 세계 3위 도메인 등록기관이 됨

   https://account.squarespace.com/domains

   개발자들이 추천하는 도메인등록기관. 저자가 250명에게 물어봤다고 합니다. 그걸 정리한 것 https://newsletter.pragmaticengineer.com/p/…

   Don't be evil?

   구글이 구글 했네요. 구글은 검색(이것도 요즘 스팸 결과가 너무 많아졌네요)이나 광고 용도로만 사용하는게 나을 것 같습니다.

   하… 스트레~~스…

   Godaddy에서 구글로 다 옮겼는데 이렇게 되었네요. Cloudflare 괜찮으면 거기로 옮겨야 겠습니다...

   기존에 작성된 EPP코드 업데이트할 생각하니까 머리가 아프네요

   고객입장에서는 구글이라는 큰 회사라 생각하고 이용했는데
   갑자기 Squarespce라는 듣보잡(?) 회사로 넘어가서 관리된다니 배신감을 느끼는 걸까요?
   저번 이야기에서도 그렇고 제가 고객입장에서 안좋은 점을 정확히 몰라서 여쭤봅니다.

   도메인 쪽은 이상하게도 양아치스러운 회사들이 많아서, 가격 부풀리기도 심하고, 국내 모업체 같은 경우는 다른 데로 이관 못하게 막는 경우도 많습니다. (저도 옮기느라 고생했습니다)

   근데 구글은 딱 고정비용으로 별 군더더기 없이 깔끔하게 만들어놔서 믿고 이용했던 거라서요.
   구글 워크스페이스 및 지메일 연동도 그렇고요.

   근데 스퀘어스페이스는 홈페이지빌더 만드는 회사라 당연히 자신들의 서비스를 이용하는 것을 기본 전제로 할것이라고 보는겁니다. 현재 그렇게 운영하고 있기도 하고, 저 천만개 얻었다고 중립적인 도메인 등록기관이 될거라고 예상하긴 어렵지 않을까요?

   감사합니다. 도움이 되었습니다.

   구글, Domains 사업을 종료하고 Squarespace에 매각
   이 기사의 후속 내용이네요. 서비스를 넘기는 것도 아니고, 그냥 도메인만 넘기는 거였네요. 와.. 정말 구글.. 뒷목잡게 만드네요.
"
"https://news.hada.io/topic?id=9549","카기(Kagi), 67만 달러 펀딩완료","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         카기(Kagi), 67만 달러 펀딩완료

     * 카기, 첫 외부 자금 조달로 67만 달러 모금
     * 모금된 자금은 새로운 제품 개발 및 기존 제품 개선을 가속화하고 회원들에게 새로운 혜택을 제공하는 데 사용될 예정
     * 카기, 아직 발표할 준비가 덜 된 놀라운 소식 준비 중
     * 카기, 기업과 사용자 커뮤니티 간의 동기 부여를 조정하고 굳어진 습관을 바꿔 웹을 인간적으로 만들기 위해 노력
     * 카기, 사용자들의 지원과 신뢰에 감사하며 모두를 위한 더 인간적인 웹을 만들기를 기대

        Hacker News 의견

     * Kagi의 67만 달러 모금은 적절한 부트스트랩 자금으로 간주되며, 회사가 원래의 미션을 충실히 이행할 것으로 기대된다.
     * 일부 사용자들은 가입이나 구독을 요구하는 검색 엔진에 대해 좌절을 표현하며, 옛날 웹의 단순함을 그리워한다.
     * Kagi는 검색 기능, 특히 렌즈 기능과 광고 및 추적기 차단 기능에 대해 칭찬받고 있다.
     * 사용자들은 Kagi의 정확한 문자열 일치 검색 기능을 감사히 여기고 있다.
     * 일부 사용자들은 미터링된 검색 개념에 어려움을 겪으며, ""검색을 낭비한다""는 불안감을 느낀다.
     * Kagi의 요약 기능은 만족한 고객들에게 높은 평가를 받고 있다.
     * Kagi는 목표한 금액의 3분의 1만 모금하여 목표에 미치지 못했다.
     * Kagi의 성공은 유료 검색 엔진인 Neeva가 배포 측면에서 직면한 어려움과 대조된다.
     * Kagi가 모금한 낮은 금액은 새로운 광고 없는 검색 엔진 구축의 야심찬 목표와 관련하여 의문을 제기한다.
     * 만족한 Kagi 사용자들의 긍정적인 리뷰는 특히 렌즈 기능과 API 기능의 가치와 유용성을 강조한다.
"
"https://news.hada.io/topic?id=9509","벤처기업 스톡옵션 부여가능 외부전문가 범위 확대","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       벤처기업 스톡옵션 부여가능 외부전문가 범위 확대

     * 기존에는 변호사/회계사/의사등 13가지 전문자격만 가능해서 범위가 제한적
     * 추가되는 외부 전문가 (벤처기업이 필요로 하는 분야에서)
          + 10년 이상의 경력자
          + 박사학위자
          + 석사학위 취득후 5년의 실무 경력을 갖춘 자
     * 외부전문가에 대해서는 발행주식 총수의 10% 이내까지만 부여가능
     * 개정 ｢벤처기업육성에 관한 특별조치법 시행령｣은 7월 4일날 시행되며, 정책설명회도 개최할 예정

   이건 좋은 변화인것 같네요.
   회사 입장에서는 훌륭한 전문가들에게 지속적으로 지원받을 수 있게 하는 하나의 수단이 생긴듯.
   사실 멘토링 하는 입장에서도 그 회사에 대한 기대보상이 있어야 더 열심히 할 수 있지 않나 생각도 들고요.
"
"https://news.hada.io/topic?id=9485","윈도우 3.1용 AI 어시스턴트, WinGPT 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      윈도우 3.1용 AI 어시스턴트, WinGPT 소개

     * WinGPT는 연구, 엔터테인먼트 및 생산성에 도움이 되는 Windows 3.1용 AI 어시스턴트입니다.
     * 표준 Windows API를 사용하여 C로 작성되었으며 TLS 1.3으로 OpenAI API 서버에 네이티브로 연결됩니다.
     * Windows 3.1에서 UI 구축 능력은 원시적이며 사용 가능한 표준 컨트롤 집합이 제한됩니다.
     * Windows 3.1 기기의 메모리가 제한되어 있으므로 WinGPT에 필요한 메모리 양을 줄이기 위해 노력했습니다.
     * WinGPT는 GNU 일반 공중 사용 허가서(GPL) v2에 따라 라이선스가 부여되며 Winsock 구현이 필요합니다.
     * 64비트 버전의 Windows에서는 작동하지 않지만 Wine에서는 작동합니다.

   ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ

        Hacker News 의견

     * WinGPT는 Windows 3.1용 AI 어시스턴트입니다.
     * Windows 3.1은 상태 표시줄을 컨트롤로서 기본적으로 지원하지 않습니다.
     * Windows 3.1 애플리케이션에서 상태 표시줄을 사용하려면 직접 그리고 관리해야 합니다.
     * Windows 3.1 프로그래밍은 대부분 구식입니다.
     * SAX 스타일 파싱을 사용하여 CPU 시간 대신 공간을 교환할 수 있습니다.
     * 구식 UI가 더 나은 결과를 가져옵니다.
     * Windows 3.1용 Win32s를 사용하면 더 쉽게 사용할 수 있습니다.
     * 멋진 프로젝트이지만, C++ 프레임워크, TPW, VB, Delphi, VF, VO 등의 원시 C 대신 사용하는 이유가 이미 있었습니다.
     * Clippy 통합이 제안되었습니다.
"
"https://news.hada.io/topic?id=9464","vLLM: PagedAttention을 이용한 쉽고, 빠르고 저렴한 LLM 서빙","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              vLLM: PagedAttention을 이용한 쉽고, 빠르고 저렴한 LLM 서빙

     * 빠른 LLM 추론 및 서빙을 위한 오픈소스 라이브러리
     * PagedAttention 알고리듬으로 어텐션 키/값을 효율적으로 관리
          + 모델 아키텍처 변경없이 HuggingFace Transformers 대비 24배 높은 처리량
          + 비연속 메모리 공간에 연속된 키/값을 저장 가능
     * LMSYS Vicuna 와 Chatbot Arena 에서 성공적으로 이용중
"
"https://news.hada.io/topic?id=9524","우리는 돈을 많이 모았습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            우리는 돈을 많이 모았습니다.

     * TechCrunch 7월에 A16Z, Intel Capital, Dell로부터 2500만 달러를 조달하고 EQT Ventures가 주도하는 추가 7000만 달러를 조달했다.
     * 스타트업들은 이와 같은 발표를 작성하여 고객을 유치하고 투자자와 대중과 진행 상황을 공유한다.
     * 이 기사는 사용자에게 더 나은 성능을 제공하기 위해 앱을 더 가까이에서 실행하는 중요성에 대해 논의한다.
     * 저자는 엣지 배포가 게임 서버에는 필수적이지만 다른 종류의 앱에는 종종 간과된다고 믿는다.
     * 목표는 앱이 한 곳에서만이 아닌 전 세계적으로 빠르게 실행될 수 있는 플랫폼과 도구 체인을 만드는 것이다.
     * Fly.io는 샌드박싱, 코드 편집기, CI/CD 애플리케이션과 같은 업계의 다양한 ""2시간 문제""를 해결하기 위해 노력하고 있다.
     * 이 회사는 다른 플랫폼이 기반으로 삼을 새로운 기본 요소를 제공하고 애플리케이션의 품질을 향상시키기 위해 노력하고 있다.
     * 조달된 자금은 하드웨어, 더 많은 지역으로의 확장, 지원 및 신뢰성, 고급 저장소, 보안 기능 및 새로운 하드웨어에 대한 투자에 사용될 것이다.
     * 변경 사항에도 불구하고, Fly.io는 컨테이너에 포장된 모든 앱에 대해 작동하는 사용자 친화적인 플랫폼을 제공하기 위해 헌신하고 있다.
     * 사용자는 몇 분 만에 Fly.io에서 Docker 컨테이너를 실행하여 플랫폼을 테스트할 수 있다.

        Hacker News 의견

     * 고객들에게는 ""우리가 많은 돈을 모았다""라는 구절은 걱정스러울 수 있으며, 이는 지속적인 VC 투자에 의존할 수 있음을 나타낼 수 있습니다.
     * 이 기사는 스타트업 발표의 욕심 많은 동기를 인정하지만, 여전히 중요한 정보를 효과적으로 전달합니다.
     * Fly.io는 소프트웨어 엔지니어링에 대한 현대적인 시각을 가지고 있지만, 그들의 마케팅과 제품 사이에 일관성이 있을 수 있습니다.
     * Fly.io는 Rails+PG 앱을 배포하고 CRUD 앱을 위한 새로운 Heroku가 되는 것을 쉽게 만들기 위해 노력하고 있습니다.
     * Fly.io의 수익성 달성 경로와 회사를 유치하기 위해 충분한 기능을 구축할 수 있는지에 대한 의문이 있습니다.
     * Fly.io와 CloudFront와 같은 CDN 사용의 차이점은 앱 서버의 위치와 데이터베이스 접근의 지연 비용입니다.
"
"https://news.hada.io/topic?id=9533","Linux Namespaces, cgroups, chroot 로 나만의 Docker 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Linux Namespaces, cgroups, chroot 로 나만의 Docker 만들기

     * Docker를 대체하는 것이 아니라, Containerization의 핵심 기술들을 배우기 위한 용도

Docker를 만들어 봅시다

    1. Namespace 설정하기
    2. cgroups 구성하기
    3. 루트 파일 시스템 구축
    4. Container 마운팅 및 chroot 하기
    5. 컨테이너에서 어플리케이션 실행하기

   저는 그냥 개념 잡는 용도로 괜찮다 생각했는데, 해커 뉴스 댓글에서는 마치 GPT가 작성한 것 같다는 이야기가 있군요.

   GN⁺ 에도 리눅스 네임스페이스, cgroups, 및 chroot를 사용하여 자체 Docker를 구축하세요. 라는 이름으로 올라와 있었네요.
"
"https://news.hada.io/topic?id=9434","Netflix 모바일 앱을 GraphQL로 안전하게 이관하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Netflix 모바일 앱을 GraphQL로 안전하게 이관하기

     * 넷플릭스는 2022년에 iOS/안드로이드 앱을 GraphQL로 다운타임없이 이관했음
          + 클라이언트까지 API 계층까지 전면적인 작업을 진행
     * 최근까지는 내부의 API 프레임워크인 Falcor 를 사용
     * 현재는 Federated GraphQL로 모바일 앱을 서비스

이관 단계별 설명

     * GraphQL 전에는 Monolithic Falcor API를 개발및 관리
     * Phase 1: GraphQL Shim 서비스를 기존 Monolith Falcor API 상단에 구현. AB 테스팅
     * Phase 2: GraphQL Shim 서비스 와 레거시 API 모노리스를 deprecate 하고, Federated GraphQL Gateway 를 도입. Replay Testing 과 Sticky Canaries

안전한 이관을 위한 3가지 전략

     * AB 테스팅 : Falcor 와 GraphQL Shim 을 AB 분리하여 테스트
     * Replay 테스팅 : API가 정확히 이관되었는지 확인하기 위해 Replay Testing 도구를 개발
     * Sticky Canaries : 특정 트래픽을 분리하여 Canary로 어사인 하여 기능 뿐만이 아닌, 다양한 메트릭을 테스트
"
"https://news.hada.io/topic?id=9510","알지 못했을 macOS 커맨드라인 도구들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         알지 못했을 macOS 커맨드라인 도구들

     * macOS에는 독특한 기능을 제공하는 다양한 명령줄 도구가 있습니다.
     * ""caffeinate""를 실행하면 명령이 실행되는 동안 Mac이 절전 모드로 들어가지 않습니다.
     * ""textutil""은 Microsoft Word 및 HTML을 포함한 다양한 형식으로 파일을 변환할 수 있습니다.
     * ""mdfind""는 검색 범위를 좁히는 다양한 플래그를 사용하여 키워드 기반 Spotlight 검색을 수행합니다.
     * ""networkQuality""는 더 자세한 정보를 위한 다양한 플래그로 인터넷 속도를 측정합니다.
     * ""screencapture""는 지연 및 파일 저장을 위한 다양한 플래그로 스크린샷을 캡처합니다.
     * ""pbcopy"" 및 ""pbpaste""는 시스템 클립보드와 상호 작용합니다.
     * ""taskpolicy""는 백그라운드 및 일시 중지 상태에 대한 다양한 플래그로 프로세스 스케줄링을 제어합니다.
     * ""say""는 텍스트를 음성으로 발음하여 메시지를 알리거나 오디오북을 만듭니다.
     * ""sips""는 크기 조정 및 회전을 위한 다양한 플래그로 이미지를 조작합니다.
     * ""open""은 다양한 애플리케이션 및 디렉토리를 지정하는 다양한 플래그로 파일 및 애플리케이션을 엽니다.
     * ""pmset""은 정보 표시 및 시스템 절전 모드로 설정하는 다양한 플래그로 전원 관리를 구성합니다.
     * ""networksetup""은 Wi-Fi 네트워크에 가입하거나 정보를 가져오는 다양한 플래그로 네트워크 설정을 구성합니다.
     * ""qlmanage""는 파일 미리보기, 상태 확인 및 서버 프로세스 재시작을 위한 다양한 플래그로 Quick Look을 관리합니다.
     * ""softwareupdate""는 사용 가능한 업데이트 목록, 모든 업데이트 설치 및 전체 설치 파일 다운로드를 위한 다양한 플래그로 OS 업데이트를 관리합니다.

   인생에 도움되는 맥북 고오급 터미널 명령어들 (일반인용)
   https://www.youtube.com/watch?v=EhiqpFtmjig

   macOS의 고급 CLI 명령들

   같은 글을 제가 7달전에 요약해서 올린게 있는데, 이쪽 요약이 더 볼만 하군요.. ㅠ

   요약해 주신 내용 정도로 줄여도 이해하는데 무리 없어서 그런지 더 좋은데요 ㅎ

   그렇지 않습니다......ㅎㅎ

        Hacker News 의견

     * sips와 iconutil을 사용하여 제3자 소프트웨어 없이 단일 1024 x 1024 PNG에서 완전한 .icns 파일을 생성합니다.
     * pbcopy와 pbpaste는 가장 인기있는 명령 줄 도구 중 하나입니다.
     * 오디오 재생에 사용할 수 있는 afplay는 명령 줄 MP3 플레이어를 만드는 데 사용할 수 있습니다.
     * 말하기 유틸리티는 TUNE 형식을 지원하여 발언의 전반적인 멜로디와 타이밍을 조정할 수 있습니다.
     * 네트워크 링크 조건자는 매우 나쁜 네트워크를 시뮬레이션하는 데 좋은 도구입니다.
     * 데스크톱의 모든 아이콘 또는 폴더를 숨기는 것은 편리한 bash 별칭으로 수행할 수 있습니다.
     * hidutil은 PC 키보드에서 키를 다시 매핑하는 데 사용할 수 있습니다.
     * open은 파일 및 앱을 열기 위해 사용할 수 있는 간단한 명령입니다.
     * afconvert는 오디오 파일을 Books용 가변 비율 m4b로 변환하는 데 사용할 수 있습니다.
     * diskutil은 macOS의 명령 줄 유틸리티로 디스크 슬라이스 문제를 해결할 수 있습니다.
"
"https://news.hada.io/topic?id=9543","게임 제작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 게임 제작

     * 인디 게임 개발자로서의 경험과 이후의 업계에서의 실망을 공유하는 저자
     * 게임 산업에 진입한 동기를 반성하며 인디의 이상주의와 순진함을 의문지어 봄
     * 저자는 게임 개발이 자신에게 대처 매커니즘 역할을 하고 통제감을 느끼게 해준다는 것을 깨닫음
     * 자신의 불안과 작업에 대한 알려져야 하고 인정받고 싶은 욕망에 대해 논의함
     * 저자는 이미 하나님에게 알려져 있다는 깨달음에서 위안을 얻으며 이상적인 인디 세계관을 다시 채택함
     * Godot라는 오픈 소스 엔진과 함께 게임 개발에서의 회복과 새로운 기쁨을 언급함
     * 저자는 미래에 대한 불확실성을 표현하면서 게임 개발의 여정을 받아들임
     * 독자들에게 자신의 여정에 함께해준 것에 감사함을 표현함

        Hacker News 의견

     * 게임 만들기는 힘들고 헌신과 기술이 필요합니다.
     * 게임 산업은 시간이 지남에 따라 경쟁력과 요구사항이 더욱 높아졌습니다.
     * 인디 게임들은 지금은 높은 품질 기준을 충족해야 돋보입니다.
     * 게임 만들기는 재정적으로 도전적이며 성공이 보장되지 않습니다.
     * Godot은 사용자 친화적이고 영감을 주는 게임 개발 엔진입니다.
     * 이 기사는 게임 개발에 대한 현실적인 시각을 제공합니다.
     * 게임 개발은 예술적 표현의 한 형태이며 충족감을 주는 취미일 수 있습니다.
     * 맞춤형 게임 엔진 구축은 불필요하고 시간이 많이 걸리는 것으로 여겨집니다.
"
"https://news.hada.io/topic?id=9548","파이썬 표준 라이브러리에 숨겨진 CLI 도구들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       파이썬 표준 라이브러리에 숨겨진 CLI 도구들

     * 파이썬 표준 라이브러리에는 터미널에서 실행할 수 있는 숨겨진 CLI 도구가 포함되어 있음
          + python -m gzip --decompress pypi.db.gz 처럼 gzip 을 활용 가능
     * 파이썬 모듈이 if __name__ == ""__main__"" 블록이 있다면 python -m 모듈명 으로 실행 가능하기 때문
     * 이렇게 활용 가능한 모듈중 일부
          + python -m http.server 8001
          + python -m asyncio 파이썬 콘솔에서 탑레벨 await 가능해짐
          + python -m tokenize cgi.py | head -n 10 파이썬 토크나이저 디버그 모드
          + python -m ast cgi.py | head -n 10 AST 디버그 모드
          + python -m json.tool JSON 프리티 프린트 가능
          + python -m nntplib 기본으로 gmane.comp.python.general 뉴스그룹의 최신 글들을 보여줌(아쉽게도 다른 그룹은 불가)
          + python -m calendar 올해 달력 출력 -t html 로 HTML 출력도 가능
     * 파이썬 표준 라이브러리에는 이 외에도 많은 멋진 작은 도구들이 숨겨져 있음

   웹서버 요긴하게 씁니다. 회사에서 scp로 옮기면 쓰로틀링을 심하게 걸어서 (나름 보안을 위해서인듯;;;), 삼바 접근도 엄청 느리고.... 파일 큰거 받을때 파이썬 웹서버로....
     * python -m base64 : echo ""test string"" | python -m base64 -e | python -m base64 -d
     * python -m imghdr IMAGE_FILENAME
     * python -m sndhdr SOUND_FILENAME
     * tarfile, gzip, zip
     * locale, platform, sysconfig
     * python -m inspect PYTHON_PKG

   아쉬울 때가 언젠가는 있더군요.

        Hacker News 의견

     * 파이썬 표준 라이브러리의 re.Scanner 도구는 공식 문서에 누락된 정규식 기반 토크나이저입니다.
     * 이 도구는 한 번에 토큰 목록을 처리하며 연속된 일치를 보장합니다.
     * if __name__ == ""__main__"": 블록을 사용하면 모듈을 단일 *.py 파일로 실행할 수 있습니다.
     * 파이썬 3.12에는 표준 라이브러리에 SQLite CLI/REPL이 포함될 예정입니다.
     * zipfile 모듈은 명령줄에서 zip 파일을 압축 해제하고 압축하는 데 사용할 수 있습니다.
     * json.tool 모듈은 명령줄에서 JSON을 예쁘게 출력하는 데 사용할 수 있습니다.
     * http.server 모듈은 로컬 네트워크에서 파일을 공유하는 데 유용합니다.
     * 표준 라이브러리의 모듈을 명령줄에서 사용하는 것은 보안 위험을 가질 수 있습니다.
     * 파이썬 표준 라이브러리에는 문서화되지 않은 많은 숨겨진 도구와 기능이 있습니다.
"
"https://news.hada.io/topic?id=9526","플라스틱이 우리를 중독시키고 있습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         플라스틱이 우리를 중독시키고 있습니다.

     * 플라스틱 연간 생산량이 8000억 파운드를 초과합니다.
     * 플라스틱 폐기물이 마이크로플라스틱으로 바다에 퍼져나가고 있습니다.
     * 플라스틱 오염 위기가 점점 더 큰 우려입니다.
     * 플라스틱은 환경과 인체 건강에 해로운 마이크로플라스틱으로 분해됩니다.
     * 플라스틱은 유독 물질을 방출하고 다른 유해 물질을 끌어들입니다.
     * 플라스틱은 바다 바닥부터 인체 태반까지 어디에서나 발견됩니다.
     * 동물들에게 플라스틱을 섭취하면 질식, 구멍뚫림, 기아 등을 초래할 수 있습니다.
     * 플라스틱은 발암 물질로 만들어지며 다른 유해 첨가물을 포함할 수 있습니다.
     * 플라스틱은 햇빛에 노출되면 분해되고 화학물질을 방출합니다.
     * 마이크로플라스틱은 흡입되어 폐 질환을 유발할 수 있습니다.
     * 플라스틱 재활용은 종종 효과가 없으며 오해를 불러일으킵니다.
     * 대부분의 종류의 플라스틱은 실제로 재활용되지 않습니다.
     * 플라스틱 재활용 회사들은 기만적인 행위에 가담할 수 있습니다.
     * 플라스틱 폐기물 처리는 긴급한 대응이 필요한 중요한 과제입니다.
     * EPA는 현재의 플라스틱 폐기물 관리 방식을 지속 가능하지 않다고 선언하고 일회용 플라스틱 생산과 소비를 줄이는 것을 권장합니다.
     * 플라스틱 오염 위기에 대응하는 가장 좋은 방법은 처음부터 플라스틱 폐기물을 만들지 않는 것입니다.
     * 정치적, 실용적인 장애물로 인해 플라스틱 소비를 줄이는 것은 어려움을 겪고 있습니다.
     * 세계적인 조약을 통해 플라스틱 오염에 대응하는 노력은 주요 석유 생산국의 반대에 직면하고 있습니다.
     * 플라스틱을 다른 재료로 대체하는 것은 에너지, 수자원 사용 및 탄소 배출 측면에서 트레이드오프를 일으킬 수 있습니다.
     * 플라스틱 폐기물에 대한 중대한 영향을 미치기 위해서는 플라스틱을 없애는 것이 필요할 수 있습니다.
     * 우리에게 중요한 것과 플라스틱 오염 위기에 대응할 의지는 결정적입니다.

        Hacker News 의견

     * 플라스틱이라는 단어는 플라스틱의 종류에 대해 더 구체적으로 설명되어야 합니다.
     * 다른 종류의 플라스틱은 각각 다른 특성과 잠재적인 건강 위험을 가지고 있습니다.
     * 플라스틱 제조에 대한 더 나은 라벨링과 추적은 문제를 식별하고 해결하는 데 도움이 될 수 있습니다.
     * 한 명의 댓글러가 플라스틱 사용을 최소화하고 더 지속 가능한 생활을 위한 개인적인 팁을 공유합니다.
     * 80년대의 재활용 운동은 플라스틱 산업에서 자금을 지원하고 플라스틱의 재활용 가능성에 대해 사람들을 오도했습니다.
     * 적절한 폐기물 관리와 더 나은 플라스틱 연구는 플라스틱 문제에 대한 중요한 단계입니다.
     * 플라스틱은 사회에 가치를 가져왔지만, 그들의 단점은 무시되어서는 안 됩니다.
     * 플라스틱은 빠르게 확장되고, 플라스틱 산업의 로비 업계는 강력합니다.
     * PFAS라는 잠재적으로 유해한 물질은 호환성 있는 테이크아웃 용기에서 발견될 수 있습니다.
     * 종이와 면 등 다른 재료의 환경 영향은 플라스틱 대체를 찾을 때 고려되어야 합니다.
     * 플라스틱 문제에 대처하기 위해 전 세계적인 입법적 노력이 필요합니다.
     * 개인적인 노력만으로는 문제를 해결하기에 충분하지 않습니다.
     * 금속과 플라스틱은 각각 장단점을 가지고 있습니다.
     * 식품 생산의 지역화와 포장의 감소는 플라스틱 폐기물을 줄이는 데 도움이 될 수 있습니다.
     * 한 명의 댓글러가 소비 습관은 변하지 않았음에도 플라스틱 폐기물 발생 증가에 대한 우려를 표명합니다.
"
"https://news.hada.io/topic?id=9444","ByteDance, 올해만 $1B(1.3조원) 어치의 Nvidia GPU를 먹어치우다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ByteDance, 올해만 $1B(1.3조원) 어치의 Nvidia GPU를 먹어치우다

     * 약 10만대의 A100 과 H800(H100의 너프 버전) 으로 대당 약 $10000
     * 미국 정부가 중국에 HPC를 팔지 말라고 지시한 작년 9월 바로 전인 8월에 주문한 것
     * 작년 중국내 회사들 전체가 주문한 규모(비용 측면에서)를 이미 따라 잡음
"
"https://news.hada.io/topic?id=9439","OpenLLaMA 13B 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            OpenLLaMA 13B 공개

     * 다른 용도의 이용이 가능하도록 아파치 라이센스로 만들어진 LLaMA의 오픈소스 복제본
     * 1T 토큰으로 훈련한 3B, 7B, 13B 모델을 공개
     * 사전훈련된 모델의 Weights도 공개 (EasyLM & PyTorch 포맷)

   OpenLLaMA - LLaMA의 개방형 복제본
"
"https://news.hada.io/topic?id=9420","RedBPF - Rust eBPF 툴체인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         RedBPF - Rust eBPF 툴체인

     * Rust로 eBPF 프로그램을 개발하기 위한 툴과 라이브러리 모음
          + redbpf: eBPF 프로그램을 로드하거나 eBPF 맵에 접근하기 위한 유저스페이스 라이브러리
          + redbpf-probes: eBPF 프로그램 작성을 위한 idiomatic Rust API
          + redbpf-macros: eBPF 작성을 위한 유용한 매크로들
          + cargo-bpf : eBPF 생성 및 디버깅을 위한 cargo 서브커맨드
     * 많은 BPF 맵 타입들 제공: HashMap, PerCpuHashMap, LruHashMap, LruPerCpuHashMap, Array, PerCpuArray, PerfMap, TcHashMap, StackTrace, ProgramArray, SockMap, DevMap, RingBuf
     * 다수의 BPF 프로그램 타입 제공: KProbe, KRetProbe, UProbe, URetProbe, SocketFilter, XDP, StreamParser, StreamVerdict, TaskIter, SkLookup, Tracepoint
"
"https://news.hada.io/topic?id=9474","FlowPilot - OpenPilot 기반의 드라이버 보조 시스템 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               FlowPilot - OpenPilot 기반의 드라이버 보조 시스템 오픈소스

     * 어댑티브 크루즈 컨트롤(ACC), 자동 차선 중앙 유지(ALC), 전방 충돌 경고(FCW), 차선 이탈 경고(LDW), 드라이버 모니터링(DM) 등의 기능을 제공
     * 윈도우/리눅스 및 안드로이드 기기에서 동작
     * 약 200대 이상의 차량 지원: 현대(제네시스, 아이오닉, 소나타, 펠리세이드 등), 기아(니로, 소렌토, 스팅어, 스포티지 등), 혼다, 토요타, 니싼, 크라이슬러, 아우디 등
     * Comma.ai의 Panda 인터페이스 필요(white/grey/black/red)
     * CARLA 시뮬레이션 지원해서 가상 자동차로 실행 가능
"
"https://news.hada.io/topic?id=9458","미국 연방거래위원회(FTC), '기만적인' Prime 가입 및 해지 절차에 대해 아마존을 고소","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          미국 연방거래위원회(FTC), '기만적인' Prime 가입 및 해지 절차에 대해 아마존을 고소

     * 아마존이 고객을 속여서 프라임 구독 프로그램에 가입하도록 유도하고, 의도적으로 취소 절차를 복잡하게 만들었다며 고소
     * 소위 '다크 패턴'을 사용하여 사용자가 동의 없이 프라임에 가입하도록 유도했다고 주장
     * 2021년 3월부터 조사한 것
     * 2005년에 시작된 Prime은 전세계 2억명 이상의 회원을 보유. 연간 $139로 무료 배송 및 스트리밍 콘텐츠 접근 같은 특전을 제공

   엥?

   아마존 프라임이 가입이랑 취소 가 다크패턴이라고요?

   생각해보니 가입은 여기저기 아무 생각없이 가입할 수 있게 해놓은것 같네요.

   근데 해지는 엄청 쉅던데요. NYT 의 구독 해지에 비해선 (전화했어야 했어요) 양반이었던.

   Dark Patterns - 사용자를 어렵게 만드는 나쁜 패턴들 모음
   아마존이 이쪽에 좀 유명하긴 하죠. 긱뉴스 초기에 공유했던 이 다크패턴 페이지에서도 프라임은 아니지만, 아마존 탈퇴하는 법을 예로 들기도 합니다.

   뉴욕타임즈 구독을 취소하는 방법
   Adobe가 12개월 구독으로 사용자를 속이는 방법
"
"https://news.hada.io/topic?id=9486","운동이 불안과 우울증 완화에 도움이 되는 방법을 연구하는 새로운 연구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 운동이 불안과 우울증 완화에 도움이 되는 방법을 연구하는 새로운 연구

     * 운동은 치료나 약물과 같이 불안과 우울증 증상을 완화하는 데 도움이 됩니다.
     * 대규모 연구는 128,000명 이상의 참가자를 대상으로 1,000개 이상의 무작위 대조 연구를 분석하여 정신 건강에 가장 적합한 운동 종류와 양을 확인했습니다.
     * 운동은 내연성 호르몬을 분비하여 기분을 좋게 하고, 수면을 개선하며, 스트레스를 줄이고, 자신감을 높이며, 성취감과 목적의식을 느끼게 해 우울증, 불안, 고통을 줄이는 데 도움이 됩니다.
     * 높은 강도의 운동이 정신 건강에 더 많은 이점을 제공하지만, 주당 2.5시간 이하가 더 좋으며, 주당 4~5회가 최적입니다.
     * 운동은 건강한 사람, 우울증 진단을 받은 사람, 신장 질환, HIV, 만성 폐쇄성 폐질환, 불안장애 또는 암을 앓고 있는 사람들에게 특히 도움이 됩니다.
     * 운동은 안전하고 효과적인 정신 건강 개선 방법으로, 치료와 약물과 함께 고려해야 합니다.
     * 운동 동기부여를 위해, 작은 시작으로, 즐거운 활동을 찾아, 운동을 습관으로 만들고, 현실적인 목표를 설정하며, 자신을 보상하고, 포기하지 마세요.
     * 운동은 정신 건강 이외에도 많은 이점이 있으며, 부작용이 거의 없으므로 접근하기 쉽습니다.

        Hacker News 의견

     * 운동은 불안과 우울증 완화에 도움이 될 수 있습니다.
     * 마음과 몸의 연결은 중요하며, 이는 성별 불일치에 도움이 될 수 있습니다.
     * 남성은 종종 자신에게 감정과 감각이 행동에 영향을 미치는 것을 허용하지 않도록 조건부 반응을 합니다.
     * 일부 사람들은 노력을 싫어하며, 그들의 신경학적 메이크업에 맞춘 건강 조언이 필요합니다.
     * 운동은 몰입이 필요한 경우 특히 일부 사람들에게 열쇠를 제공할 수 있습니다.
     * 운동은 우울증 및 기타 정신 건강 문제를 가진 모든 사람들에게 도움이 되지 않을 수 있지만, 유익할 수 있습니다.
     * 브라질리안 지우짓수는 신체적 및 지적 추구를 결합한 효과적인 운동 방법입니다.
     * 최고의 운동은 개인마다 다르며, 계속할 수 있는 운동이 가장 좋습니다.
     * 로잉 머신은 체력을 향상시키고 근육을 빌드하는 데에 빠른 길일 수 있습니다.
     * 이 기사는 불안과 우울증에 대한 최고의 운동에 대한 명확한 대답을 제공하지 않습니다.
     * 기술적인 트랙에서의 마운틴 바이크 타기는 다른 자전거 타기 방법보다 전적으로 주의를 기울여야 하며 더욱 매력적일 수 있습니다.
"
"https://news.hada.io/topic?id=9553","구글이 AOSP에서 Dialer 와 Messaging 앱에 대한 지원을 deprecate","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           구글이 AOSP에서 Dialer 와 Messaging 앱에 대한 지원을 deprecate

     * 구글이 AOSP에서 폰/메시징 앱을 빼버려서, 안드로이드 커스텀 ROM 팬들을 더욱 힘들게 할 예정
     * 이것은 각 브랜드가 자신들의 앱을 이용하거나, 구글의 최신 폰/메시징 앱을 써야한다는 것을 의미
     * 또한 안드로이드 커스텀 ROM 커뮤니티에 큰 타격을 줄 것
     * 소비자 입장에서는 큰 영향 없음. 이미 많은 브랜드들이 자신의 폰/메시징 앱을 가지고 있거나 구글 것을 쓰고 있기 때문
     * 하지만 새로 시작하는 모바일 브랜드 입장에서는 별도 개발하거나, 구글의 앱들을 라이센스 해야함
"
"https://news.hada.io/topic?id=9545","대법원, 대학 입학에서 긍정적 대우 철회","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         대법원, 대학 입학에서 긍정적 대우 철회

     * 대법원, 인종을 입학 결정 요소로 사용하는 대학들의 양성행동 정책을 무효화
     * 대법원은 하버드와 노스캐롤라이나 주립대학교가 인종에 따라 불법적인 차별을 하고 헌법 제14조를 위반했다고 판결
     * 존 G. 로버츠 대법관은 인종에 따라 누군가를 다르게 대우하는 것은 헌법의 평등 보호 조항에 반하는 것이라고 밝혔다.
     * 진보적인 사법관들은 법원이 미국의 인종차별 역사를 무시하고 진전을 뒤로 돌리고 있다고 반대 의견을 제시했다.
     * 판결로 인해 대학들은 입학 정책을 변경해야 하지만 다양성을 추구하고 지원자의 인종적 경험을 고려할 수는 있다.
     * 판결의 영향은 캘리포니아에서는 제한적일 것이다. 이미 해당 주에서는 인종을 고려한 입학 정책을 금지하고 있기 때문이다.
     * 바이든 대통령은 이 결정에 반대하며 대학들이 입학 과정에서 학생들이 극복한 역경을 고려할 수 있도록 새로운 지침을 제안했다.
     * 대법원은 이전 판례들을 비판하며 대학들이 인종을 긍정적인 요소로 고려하는 것을 허용한 것을 비난했다.
     * 하버드와 노스캐롤라이나 주립대학교에 대한 소송은 ""공정 입학을 위한 학생들""이라는 단체가 제기했으며 아시아계 미국인 지원자들에 대한 차별을 비난했다.
     * 이 결과는 색맹적인 법적 약속의 회복을 상징하는 것으로서 이 단체에 의해 승리로 환영받았다.

        Hacker News 의견

     * 미국이 아닌 댓글러에게는 긍정적 대안 개념이 낯설다.
     * 댓글러는 왜 인종이 긍정적 대안의 요소인지 의문을 제기하며 가난한 사람들을 돕는 것이 중점이어야 한다고 제안한다.
     * 다른 댓글러는 히스패닉 출신으로서 긍정적 대안의 혜택을 받은 경험을 공유한다.
     * 그들은 자신들이 기회를 받을 자격이 있는지 의문을 제기하며 자신의 정체성에 대한 불확실성을 표현한다.
     * 다른 댓글러는 소수 공학 프로그램에 등록되어 불공평하다고 느낀 경험을 공유한다.
     * 그들은 인종에만 의존하는 대신 배경적 어려움을 결정하는 더 세밀한 접근 방식을 제안한다.
     * 다른 댓글러는 하버드 대학의 입학 정책이 유대인보다 백인 학생들을 우대하도록 설계되었으며 이제 아시아계 미국인들에게 차별을 가하고 있다고 강조한다.
     * 그들은 일부 대학이 아시아계 미국인의 입학을 제한하기 위해 표준화된 시험을 이미 폐기했다고 언급한다.
     * 댓글러는 긍정적 대안이 체계적으로 차별받은 사람들을 돕는 것에서 평등한 결과에 초점을 맞추는 것으로 진화했다고 설명한다.
     * 그들은 평등한 기회와 평등한 결과 중 어떤 것을 우선시해야 할지 의문을 제기한다.
     * 다른 댓글러는 사법부를 통한 입법화를 비판하며 법률이 쉽게 되돌아갈 수 있는 가능성을 강조한다.
     * 그들은 저소득 학생들을 지원하기 위해 공립 대학교, 커뮤니티 대학교 및 전문학교에 초점을 맞추는 것을 제안한다.
     * 댓글러는 이러한 기관들이 많은 사람들에게 교육을 제공하는 데 중요성을 강조한다.
"
"https://news.hada.io/topic?id=9527","오픈 소스 인공지능은 중요합니다 - Hugging Face CEO 미국 의회 앞에서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             오픈 소스 인공지능은 중요합니다 - Hugging Face CEO 미국 의회 앞에서

     * Hugging Face CEO가 미국 하원 과학위원회에서 개방형 과학과 오픈소스 인공지능의 중요성에 대해 증언했습니다.
     * 개방형 과학과 오픈소스 인공지능은 미국 가치와 이익과 일치하기 위해 중요합니다.
     * 인공지능의 진보는 개방형 과학과 오픈소스에 의해 이루어져 미국을 선도하는 나라로 만들었습니다.
     * Hugging Face는 인공지능 커뮤니티에서 개방형 코드와 모델의 중심지로서 빠르게 성장하는 스타트업입니다.
     * 개방형 과학과 오픈소스는 스타트업의 발전을 촉진하고 기술 개발에 더 안전한 길을 제공합니다.
     * Hugging Face의 윤리적 개방성 접근은 제도적 정책, 기술적 보호장치 및 커뮤니티 인센티브를 포함합니다.
     * 오픈소스 인공지능에 대한 논쟁은 폐쇄적인 소유 모델에 반발하는 노력과 함께 더욱 확대되고 있습니다.

        Hacker News 의견

     * 오픈 소스는 디지털 사회에 있어서 중요하며 비트코인과 같은 혁신적인 기술과 유사성을 가지고 있습니다.
     * 사회적 규모에서 오픈 소스 기능을 구현하는 과정은 상상력, 개발, 테스트 및 전도에 필요합니다.
     * 디스토피아적이지 않은 대안 우주를 상상하기는 어렵습니다.
     * Hugging Face CEO는 오픈 모델과 오픈 소스의 혜택을 설명하는 데 훌륭한 일을 했습니다.
     * 오픈 소스와 무료 소프트웨어의 차이는 이 경우에 중요합니다.
     * Hugging Face는 시간이 지남에 따라 인기를 얻고 중요한 프로젝트로 인식됩니다.
     * Hugging Face의 최종 목표는 AI를 위한 GitHub이 되는 것으로 추측됩니다.
     * 시스템은 Sam Altman과 같은 돈과 환호성이 많은 사람들을 더 선호하며, 작은 오픈 소스 프로젝트와 비교할 때 이점이 있습니다.
     * 오픈 소스 소프트웨어는 법정에서 공정하게 대표되어야 하지만, 돈이 종종 더 큰 목소리를 가지고 있습니다.
     * Hugging Face의 CEO는 소셜 미디어에서 접근 가능하며, 이는 사람들에게 감사받고 있습니다.
     * 의회의 소프트웨어, 오픈 소스 및 AI에 대한 참여가 의문을 제기합니다.
     * Bittensor의 프로젝트는 오픈 소스 AI 운동에 잠재적인 통합으로 언급됩니다.
     * Hugging Face의 일부 모델은 오픈 소스 라이선스에 속하지 않을 수 있습니다.
"
"https://news.hada.io/topic?id=9498","미국 보행자 사망사고, 40년 만에 최고치 도달","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       미국 보행자 사망사고, 40년 만에 최고치 도달

     * 미국에서 보행자 사망자 수가 40년 만에 최고치를 기록했으며, 작년에는 운전자에 의해 7,500명 이상의 보행자가 사망했다는 새로운 연구 결과가 나왔다.
     * 불안전한 인프라와 SUV의 보급으로 인해 보행자 사망자 수는 2010년 이후로 계속 상승해왔으며, SUV는 작은 차보다 보행자에게 더 위험하다.
     * 대유행으로 인해 무모한 운전과 산만한 운전으로 인한 보행자 사망자 수가 더욱 악화되고 있다.
     * 뉴멕시코, 애리조나, 플로리다를 비롯한 선벨트 이하의 주들이 보행자 사망률이 가장 높다.
     * 지역의 입법자들은 가파른 코너, 보행자 섬, 자전거 도로와 같은 교통 진정 조치를 시행하여 위기에 대처할 수 있다.
     * 스피드 및 신호위반 카메라를 설치하고 속도 제한을 낮추는 등의 조치도 다른 안전 조치와 함께 시행 및 사용된다면 효과적일 수 있다.
     * 고위험 지역에 파출소를 설치하거나 안전 문제를 식별하기 위한 보행감사 등 지역 및 지역 조치도 사망을 예방하는 데 도움이 될 수 있다.

        Hacker News 의견

     * 미국에서 보행자 사망 사고가 40년 만에 최고치를 기록했다.
     * 사고 증가 원인은 도로, 차량, SUV 증가가 아니라 코로나19로 인한 운전 습관 변화 때문이다.
     * 대안 교통 수단이 없어 운전자들은 도로에서 점점 더 좌절하고 분노를 느끼고 있다.
     * 도로 축소 및 전술적 인프라는 이 문제에 대한 저렴하고 잘 알려진 해결책이다.
     * 멈춰 있는 차량을 장애물로 생각하고 빠르게 지나가려는 성급한 운전자들이 보행자 사망 사고의 중요한 원인이다.
     * 경찰은 매니악하게 운전하는 사람들에 대해 벌금을 부과해야 한다.
     * SUV는 고속도로에서의 안전성이 떨어지고 다른 차량에 더 큰 피해를 입히기 때문에 비도덕적이다.
     * 코로나19로 인해 많은 지역에서 교통 위반을 단속하지 않게 되면서 일부 운전자들은 매우 위험한 운전을 하고 있다.
     * 보행자 수가 증가하고 있지만 그에 대한 증거는 없다.
"
"https://news.hada.io/topic?id=9490","ThinMachine - $25 맥OS 타임 머신 어플라이언스용 얇은 클라이언트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ThinMachine - $25 맥OS 타임 머신 어플라이언스용 얇은 클라이언트

     * $25 HP t520 Thin Client PC를 사용하여 Time Machine 백업 장치를 만드는 방법에 대해 설명하는 기사입니다.
     * Bodhi Linux를 설치하고 업데이트하며 백업 파티션에 액세스 할 수 있는 전용 timemachine 계정을 만드는 방법에 대한 자세한 지침이 제공됩니다.
     * Time Machine 서버 데몬을 설정하고 BIOS '전원 손실 후' 옵션을 켜는 방법을 다룹니다.
     * Power Nap을 활성화하고 백그라운드 프로세스의 제한을 해제하며 노트북을 액세스 포인트에 가까이 이동하는 등 Time Machine 백업을 가속화하는 팁이 포함되어 있습니다.
     * 내부 SSD를 업그레이드하는 대신 외부 USB3 드라이브를 백업 저장소로 사용하는 것이 제안됩니다.
     * ThinMachine은 비용 효율적이고 효율적인 Time Machine 백업 장치 솔루션입니다.
     * 저자는 t520을 사용하여 MacBook에서 백업 시스템을 설정하여 백업 알림을 제거하고 배경에서 원활하게 작동하도록했습니다.
     * t520을 NAS로 사용하거나 내부 드라이브의 전체 사본을 위해 외부 드라이브를 추가하는 등 추가 개선이 가능합니다.
     * 저자는 자동화 된 오프 사이트 백업을 위해 Backblaze를 사용하고 프로젝트를 GitHub 및 다른 PC에 저장합니다.
     * 저자는 wifi를 추가하지 않았으므로 작동 여부를 확신할 수 없습니다.

        Hacker News 의견

     * 일부 사용자들은 Time Machine을 신뢰하지 않고 restic이나 Carbon Copy Cloner와 같은 다른 백업 솔루션을 사용하는 것을 선호합니다.
     * Raspberry Pi는 저렴하고 효과적인 Time Machine 솔루션으로 사용될 수 있습니다.
     * SyncThing과 BorgBackup은 GNU/Linux 사용자에게 좋은 대안입니다.
     * AFP는 Time Machine 백업에 사용하기에 가장 좋은 프로토콜이 아닐 수 있습니다.
     * 스냅숏이 있는 APFS 볼륨에 백업하는 것이 HFS+ 디스크보다 더 빠르고 신뢰성이 높습니다.
     * Time Machine 외에도 ""최악의 경우"" 백업을 하나 더 유지하는 것이 좋습니다.
     * 할당량과 스냅숏이 있는 ZFS는 Time Machine 백업에 사용될 수 있습니다.
     * 사용된 Intel Mac Mini는 네트워크를 통해 Time Machine 디스크를 내보내도록 설정할 수 있습니다.
     * BorgBackup은 OS 및 컴퓨터 간 중복 제거를 위한 Time Machine 대안으로 좋습니다.
"
"https://news.hada.io/topic?id=9431","스탠포드의 "엔지니어들을 위한 개인 재무 관리" 강의","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     스탠포드의 ""엔지니어들을 위한 개인 재무 관리"" 강의

     * 총 10강. 강의 자료가 너무 좋아서 요약 번역했습니다

CS 007: Personal Finance for Engineers

     * 왜 개인 재무가 중요한가?
          + 교육 과정상 제대로 가르치는 곳이 없음
          + 기술적으로 어려운 건 아니지만, 신호대 잡음비(SNR)가 처참함
          + 삶에 막대한 영향을 주며, 누구에게나 영향을 미침
     * 왜 엔지니어일까 ?
          + 똑같이 23살에서 시작한 ""은퇴한 NFL 선수"" 와 ""페이스북의 대학졸업 신입 엔지니어"" 를 비교해보면..
     * Real Questions, Real Data
          + 대부분의 성인은 친구와 재정적 결정에 대해서 친구/동료들과 얘기하는 것을 불편해 함
          + 나쁜 데이타는 나쁜 결정으로 이어짐
          + 이 수업은 가능한 실제 데이터를 기반으로 할 것

#1 Introduction

     * 부/성공을 어떻게 정의하는가?
     * 부모님의 재산에 대해 얼마나 알고 있나?
     * 주식, ETF, 뮤추얼펀드를 구매해 봤나?
     * 세금 직접 내본적 있나?
     * 갚아야 할 학자금 대출이 있는가?
     * 월급의 얼마를 저축하고 있나?
     * 위급상황에 쓸 50만원($400)을 가진 미국인은 몇% 일까 ?
     * 미국의 중간소득이 얼마라고 생각하나?
     * 어떤 재무적 의사결정을 다루고 싶은가?

#2 Behavioral Finance

     * 자신이 돈에 대해서 합리적이라고 생각하는 사람 손들어봐요?
     * 당신은 전혀 합리적이지 않음 (Not Rational)
          + 앵커링, 멘탈 어카운팅, 확증 및 사후 확신 편향, 도박사의 오류,..
     * 왜 행동경제학(Behavioral Economics)인가?
          + Heuristics, Framing, Market Inefficiencies
     * 합리적이지 않아도 괜찮음
          + 인간은 예측가능하게 비합리적(Predictably Irrational)이기 때문

#3 Getting Paid

     * Compensation(보상) - 사람들이 어떻게 돈을 받는지 이해하기
          + Attract: 경쟁력 있는 시장-기반의 급여로 역량에 대한 보상을 제공하여 인재를 회사로 유치
          + Motivate: 회사 전략 및 목표에 부합하는 성과 보상을 통해 직원에 동기를 부여
          + Retain : 회사에 대한 기여도에 따라 공정하게 보상해서 직원을 회사내에 잡아두기
          + Compensation 은 문화의 일부지만, 아주 중요함
          + 기본급, 리로케이션 및 사이닝 보너스, 연간 보너스, 주식 보상, 재무적 베네핏, Perks
     * Equity
          + 주식이란 무엇인가?
          + 상장회사/비상장회사
          + 스탁옵션
          + 양도제한 조건부 주식(Restricted Stock, RSU)
          + 스탁옵션 VS. RSU
     * 4가지 Offer 평가하기 (실제 데이터 기반 비교)
          + Titantech 상장회사: 넷플릭스, 아마존, 페이스북, 애플, 구글 등
          + Unicorntech 비상장회사: 유니콘이 된 기술 스타트업들 (500+명 이상, 1조 이상 가치)
          + Nextbigthing 비상장회사: 차세대 스타트업들(30명, 시리즈A 받은 $60M 정도의 가치)
          + Toobigtofail 금융회사: 10만명 이상의 직원과 시총 200조를 넘는 금융회사들
     * 돈만 중요한게 아님
          + 주식의 Upside, Downside
          + Title vs. Compensation vs. Quality
     * ""협상""이 정말 중요함
          + 시장은 합리적이지만, 회사들 별로 접근 방식에 차이가 있음
          + 어떤 회사는 협상을 좋아하고, 어떤 회사는 싫어하기도 함. 공손하지만 단호하게 접근할 것
          + 좋은 회사는 공정한 보상을 위해 노력하지만, 스타트업 들은 크게 다를수 있음. 시장 데이터를 알아둘 것
          + 비상장 회사에 간다면 보통 주식에 거는게 좋음

#4 저축과 예산(Savings & Budgets)

  수입과 지출

     * 감당할 수 없는 물건을 사지 마세요
     * 버는 것보다 적게 쓰세요!
          + 개인적인 재정적 성공의 궁긍적인 비결은 바로 이것
          + 거의 모든 수준의 수입 & 부 에서 중요함
          + 쓰지 못할 돈은 없음. 백만장자들이 파산하는데에는 이유가 있음
          + 측정하기 쉽지만, 소수의 사람들만 함
     * 왜 어려운가 ?
          + 모든 지출은 수입과 같은 시간 프레임에서 일어나지 않음
               o 2주에 한번씩 주급을 받지만, 월/년간으로 나가는 비용들이 있는 것 처럼
          + 모든 지출이 예상 가능한 것은 아님
          + Endowment Effect(소유효과, 동일한 물건이라도 자신이 소유한 것에 대해선 더 높은 가치를 부여하는 습성)은 역효과를 낳을수 있음
               o 의류에 매월 $300 예산을 잡아 놓으면, 필요한 것보다 더 많이 쓰는 라이센스로 변하게 됨
          + 신용카드는 과소비를 쉽게 만듦
          + 소득은 변동되지만, 생활 방식과 비용은 고정적임. 짧은 시간에 돈을 벌면 매우 어려움(영화, 스포츠, 실리콘밸리 등)
          + 세금은 정말 복잡함
     * 저축률 : 얼마나 저축해야 할까?
          + 보통 추천하는 목표는 10% & 15% (10%는 그냥 이유없고, 15%는 그동안의 데이터에 기반한 가정)
          + 진짜 답변은 : ""모든 %가 중요함""
               o 생활/라이프스타일에 들어가는 비용을 줄일 것
               o 목표를 달성하기 위해 자본 풀을 늘릴 것
     * Compensation 구조가 저축률에 영향을 줌
          + 10% 보너스를 받아서 쓰지않으면 저축률이 증대됨
          + 안타깝게도 많은 사람들이 보너스를 받기도 전에 ""받을 보너스 보다 더 많이 씀""
          + 저축을 늘리기 위한 시스템적인 방법들도 있음(401k, Forced Savings, HSA)
     * 강제 저축으로서의 모기지(주택 담보 대출)
     * 자동화의 이점
          + 나 자신에게 먼저 급여를 지불할 것
          + 예산을 잡고, 저축액을 계산하고, 인출을 자동화할 것. 마치 세금처럼
          + 401(k)에 옵트아웃 등록하는게 옵트인보다 훨씬 효과적임
          + 401(k)를 자동 인상시키는게 옵트인보다 훨씬 효과적임
          + 급여가 오르면 그 퍼센티지 만큼 저축을 늘릴 것. 시간이 지남에 따라 저축률을 높일수 있음
          + 보이지 않는 돈은 쓸 가능성이 적음

  예산 잡기(Budgeting) : 당신의 돈은 어디로 가는가

     * Budget이란 무엇인가
          + 카테고리별 지출 내역
          + 당신이 안정된 상태라면, 최근 3개월 지출내역으로 평균을 내보면 놀라울 정도로 정확한 예산을 세울수 있음
          + 년간 비용을 잊지 말 것
          + 긴급 자금은 정말 비정상적인 지출을 위한 것: 휴일에 선물사느라 과도하게 지출하는 것등은 아님
     * Ideal/Empirical 지출 내역을 추적하기
          + 카테고리별 실제 지출과 필요한 지출은 큰 차이가 있음
          + 동료/친구들과 비교하는 것도 좋지만, 상황을 고려해야함
          + 정기적으로 Ideal vs. Empirical 결과를 비교해 볼 것
          + 예산의 핵심 지표는 예산의 현실적인지 여부임
     * Needs / Wants / Savings & Debt
          + ""All Your Worth"" 책에서는 이걸 50 / 30 / 20 으로 잡으라고 하지만, 당신과는 안 맞을수 있음
     * 당신도 할 수 있음
          + 당신보다 수입이 적은 사람들도 저축을 함
          + 당신보다 많이 버는 사람들이 파산 하는 경우도 있음
          + 감정적 정당화에 주의할 것: ""내가 벌은 거야"" ""난 이걸 받을 자격이 있어"" ""왜 나는 안돼?""
          + 예산을 세우는 것 만으로도 사람들이 지출비용을 줄인다는 사실이 입증 되었음
          + 예산을 넘어서더라도 놀라지 말 것. 수입을 추정하고 지출을 할당하는데 있어서 버퍼를 둘 것
     * 손익 계산서(Income Statement) : 모든 것을 하나로 모으기
     * 손익 계산서란 무엇인가
          + 특정 회계 기간에 대한 회사의 재무 성과를 보고하는 재무 제표
          + 개인 손익 계산서는 기간동안의 수입/지출/저축을 검토하는 것

#5 자산, 부채 및 순자산(Assets, Liabilities & Net Worth)

  유동성(Liquidity): 필요할 때 자금을 이용하기

     * 유동성이란
          + 현금이 필요할 때 얼마나 빨리 이용 가능한가
          + 시장 유동성(Market Liquidity)이란 시장에서 자산을 안정적으로 사고 팔 수 있는 정도를 말함
          + 회계 유동성(Accounting Liquidity)은 개인이나 회사가 가용한 유동 자산으로 그들의 재무 의무를 쉽게 이행할 수 있는 정도를 측정함
          + 유동성의 가치를 과소평가하지 말 것. 유동성은 중요함
     * 왜 유동성이 중요한가
          + 비용을 지불해야 할 때 중요한 것은 유동성 밖에 없음
          + 유동성은 투자 기회를 활용할 수 있는 힘임
     * 유동성과 수익률
          + 유동성은 일반적으로 수익률과 반비례함
          + 예) 현금은 유동성이 매우 높음. 사모 펀드는 유동성이 매우 낮음
          + 안전성 ≠ 유동성: 5년짜리 CD는 매우 안전하지만 유동성이 떨어짐. 테슬라 주식은 유동적이지만, 휘발성임(Volatile)
     * 긴급 자금(Emergency Funds) : 당신의 목표를 보호하기 위한 재정적 버퍼
     * 긴급 상황을 대비해 $400 이상 현금을 가지고 있는 미국인은 몇% 일까 ?
          + 흔히 잘못 인용되는 통계
          + 미국 연준은 2022년 미국인의 32%가 400달러의 긴급 자금용 현금 저축이 없다고 보고했음
          + 실제 설문조사에 의하면 11%가 다른 수단으로도 긴급 상황을 감당할 수 없다고 했음
          + 유동성은 필요할때 돈에 접근이 가능한가임
          + 유동성의 가치를 간과하지 말 것. 유동성은 중요함
     * 왜 긴급 자금이 필요한가
          + 유동성이 필요할 때를 대비한 실질적인 수단
          + 재무적 건강을 위해 사용되는 ""정신적 회계(Mental Accouting)""의 예제
          + 목표는 예상치 못한 단기적 필요로 부터 장기 자산/계획을 보호하는 것
     * 긴급 자금은 얼마나 커야 할까?
          + 표준 권장은 현금 또는 현금 등가물로 최소 3개월의 생활비
          + 실직에 따른 영향을 기준으로 계산
          + 미국 평균은 동일 임금의 일자리를 찾는데 약 3~6개월이 소요
          + 경기 침체기에는 연차에 따라서 시간이 늘어남
     * 긴급 자금에 대한 일반적인 실수
          + 투자 수익률이나 기회 비용에 초점을 맞추지 말 것
          + 자산이 아니라, 버퍼 또는 보험으로 생각할 것
          + 가장 먼저 채워야 하고, 사용하면 가장 먼저 다시 채워놔야 함
          + 경솔한 용도로 사용하지 말 것. 비상시를 위한 것임

  자산과 부채

     * 자산 이란 무엇인가?
          + 경제적 가치를 지니는 모든 자원
          + 금융 자산은 현금, 채권, 주식등에 대한 투자를 말함
          + 실물 자산은 부동산, 수집품, 상품등에 대한 투자를 말함
     * 자산의 여러 종류들
          + 유동성 vs. 비유동성
          + 금융 vs. 실물
          + 절상(Appreciating) vs. 절하(Depreciating)
          + 유형 자산 vs. 무형 자산
          + 당신에게 진 빚
     * 인적 자본(Human Capital)은요?
          + 자신의 기술과 역량이 가장 큰 자산이라고 주장하기 쉬움
          + '무형 자산'을 무시하지 말 것. 때로는 이것이 최고의 투자가 될 수도 있음
          + 인적 자본은 유동이 매우 다양하다는 점을 기억할 것
     * 부채는 무엇인가?
          + 일반적으로 빚과 같은 재정적 의무를 의미함
          + 가장 일반적인 개인 부채는 대출(Loan)
          + 일반적 유형: 모기지(Mortgage), 자동차 대출, 학자금 대출, 신용 카드, 세금 책임
     * 부채의 여러 종류들
          + 단기 vs. 장기
          + 담보(Secured) vs. 비담보(Unsecured)
          + 세금 책임
     * 신용 점수 (미국 기준)
          + 대출 기관은 대출을 신청하거나, 대출을 받거나, 대출금을 상환 할때, 3개의 주요 중앙 신용 평가 기관에 보고함
          + 대부분의 대출 자격을 얻으려면 좋은 신용 점수를 쌓는 것이 필수적. 신원 확인에 사용되므로 다른 서비스에도 영향을 미칠 수 잇음
          + 신용 점수에 영향을 미치는 것들: 신용 기록 기간, 정시 납부 여부, 사용 가능한 한도 비율, 신규 대출 신청, 파산
     * 빚은 나쁜 것인가?
          + Modigliani-Miller Irrelevance Theory (모딜리아니-밀러 정리)
          + 시장의 가치는 자금의 조달 방법이 아닌, 기초 자산의 수익력과 위험에 의해 결정 됨
          + 세금, 거래비용 및 파산비용이 없다고 가정
          + 레버리지의 상충이론. 최적의 자본 구조가 존재함
     * 모든 빚을 갚아야 할까?
          + 더 많은 빚 = 더 많은 위험
          + 모든 빚은 같지 않음
          + 부채, 특히 고금리 부채에 대해서 복리는 당신의 친구가 아님(멀리해야함)
          + 일부 부채는 보조금이 지급됨(모기지, 학자금 대출)
          + 빚을 갚는 것은 감정적으로는 만족스럽지만, 재정적으로는 비합리적일 수 있음
          + 부채를 갚으면 시간이 지남에 따라 저축률이 향상 될수 있음
     * 밸런스 시트(대차대조표): 순자산 파악하기
          + 순자산은 무엇인가 ?
               o 자산 - 부채
               o 총 순자산은 모든 자산을 포함
               o 유동 순자산은 비유동 자산 및 주거주 주택(및 관련 부채)를 제외함
               o 현금 흐름과 혼동하지 말 것. 다른 것임
          + 대차대조표란 ?
               o 회사의 자산, 부채 및 자기자본을 요약한 재무 제표
               o 자산(Assets) = 부채(Liabilities) + 자본(Equity)
               o 일반적인 비율들: 현금 비율, 당좌(Quick) 비율, 부채 대 자본, 자산 회전율, ROA(총자산 수익률)
          + 개인 대차대조표 만들기

#6 부채에 대한 모든 것(All about Debt)

  복리(Compounding): 저축에는 좋지만, 부채에는 나쁨

     * 복리의 마법
          + 아인슈타인이 ""복리는 우주에서 가장 강력한 힘"" 이라고 했다고 함 (노벨상 받을 때 기자들이 인류 최고의 발명품을 묻자 이렇게 대답했다는 썰이 있음)
          + 복리는 거의 모든 장기 재무 계획의 핵심
          + 지수(Exponential)는 알고리듬 비용에는 나쁘지만, 저축 수익률에는 좋음
          + 문제는 특히 초기 년도들에선 금융 수익률이 안 좋아 보인다는 것임
          + 핵심은 꾸준히 유지하는 것
     * 쉬운 복리
          + 72의 법칙 (어떤 금액의 가치가 2배로 증가하기 까지 걸리는 시간을 구하는 법칙. 100만원을 연 10%로 복리 저축해 2배로 만들려면 72/10 인 7.2년이 걸림)
          + 매년 POWER(1 + 이자율, 년)
          + 4%로 20년 이면 2.19x, 8%로 20년 이면 4.66x
          + 조심할 것: 저축이 아니라 부채에도 똑같이 동작함
     * 연간 비율(Annual Percentage Rate, APR)
          + 대출의 비용 또는 투자의 예상 수익률에 대한 표준화된 척도
          + 다양한 수수료와 이자율 구조가 있기 때문에 필요함
          + 복리를 포함하지 않음
          + 수수료 또는 관련된 지불 요구사항 때문에 명목 이자율 보다 높은 경향이 있음
          + APR = 단순 이자, APY = 복리 이자
          + 월 1% 는 APR로는 12%, APY로는 12.68%
     * 일찍 시작해서 얻는 장점
          + 8% 수익률 : 10년 2.16배, 20년 4.66배, 30년 10.06배, 40년 21.72배, 50년 46.9배
          + 복리 효과는 장기간에 걸쳐 나타남
          + 지수 함수는 비선형 함수임. 모든 기간은 이전 기간을 기반으로 함
          + 대부분의 은퇴 계획 모델에서 25~35세 사이에 저축한 돈이 35~65 사이의 모든 저축액보다 은퇴후 더 많은 자산을 만들어냄

  부채의 종류: 학자금 대출, 모기지, 자동차 대출, 신용카드

  신용 점수: 당신의 대출기록과 그게 중요한 이유

     * (위 두 섹션은 국내와 상황이 달라서 건너뜁니다)

  대출 과 금리: 얼마나 갚아야 할까?

     * 상각(Amortization)
          + 대출 가치를 주기적으로 일정 금액씩 감소시키는 과정
          + 스프레드시트에 PMT(), PPMT(), IPMT() 함수가 있음

  부채 상환: 다양한 전략 찾기

     * 부채의 위험성
          + 파산은 말 그대로 빚을 갚지 못하는 상태. 빚이 없다면 파산하지 않음
          + 20% 이상은 고사하고 8%를 보장하는 합법적인 투자상품도 절대 찾을 수 없음
          + 20% 이상의 이자를 부과하는 신용 대출 상품은 끊임없이 쏟아져 나옴
          + ""나쁜"" 부채는 독성이 있으며, 최선의 수익은 부채를 갚는 것. 하지만 비상자금은 우선시 될 수 있음
     * 어떻게 효율적으로 빚을 갚을까?
          + 이 프로세스는 최소 상환액 보다 매달 더 많은 금액을 부채 상환에 할당할 수 있다고 가정
          + 갚고 싶은 대출들을 정리, 모기지는 제외
          + 통합을 통해서 대출을 단순화하고 이자율을 최소화. 경우에 따라서는 만기를 연장하여 현금을 확보하는 것이 합리적일 수 있음
          + Debt Snowball은 대중화된 용어임. 가장 작은 대출부터 갚아나가는 것을 말함. 부채 상환의 정서적 이익을 기반으로 함
          + 수학적으로 이자율 측면에서 대출을 정렬하는 것이 가장 이상적. 모든 대출의 상환액을 최소화 하고, 잉여금으로 가장 비싼 대출부터 갚아나가기
          + 문제는 대출금을 완전히 갚을 때까지 현금 흐름이 개선되지 않는다는 것
     * 내 빚을 모두 갚아야 할까?
          + 더 많은 빚 = 더 많은 위험
          + 모든 빚은 같지 않음
          + 부채, 특히 고금리 부채에 대해서 복리는 당신의 친구가 아님(멀리해야함)
          + 일부 부채는 보조금이 지급됨(모기지, 학자금 대출)
          + 빚을 갚는 것은 감정적으로는 만족스럽지만, 재정적으로는 비합리적일 수 있음
          + 부채를 갚으면 시간이 지남에 따라 저축률이 향상 될 수 있음

#7 Investing - 좋은 투자는 지루하다

     * 앞 장의 ""복리"" 슬라이드들 다시 한번 반복. 투자에 있어서 복리는 중요함

  투자의 종류: 주식, 채권, 상품, 부동산

     * 일반적인 투자 방법
          + 사람들이 주로 투자하는 방식인 금, 주식, 채권, 달러등에 대해서 200년간의 데이터를 집계해보면, 주식이 장기간에 걸쳐 연평균 수익률이 가장 높지만 변동성도 높음
     * 주식/자본 (Stocks/Equities)
          + 주식은 기업의 소유권을 나타내는 유가 증권(Security, 재산적 권리가 표시된 증서)임
          + 미국내에만 4000개가 넘는 공개적으로 거래되는 주식이 있음
          + 자본 가치 상승과 배당금에 따른 수익률
          + 시간이 지남에 따라서 경제와 함께 성장하고, 인플레이션에 맞춰서 조정됨
          + 주식을 세분화 하는 다양한 방법들 : 대형주와 소형주, 미국 vs. 선진국 시장 vs. 신흥 시장, 성장주 vs. 가치주
     * 채권
          + 대출의 일부를 나타내는 채무 투자 상품
          + 만기일, 이자율, 시장 가격이 모두 중요함. 일반적으로 채권당 $1000 정도로 발행되지만, 원하는 가격에 거래가 가능
          + 신용도가 높으면 이자율이 낮음
          + 자본 가치 상승과 이자 소득에 따른 수익률
          + 미국 국채 = 주요 벤치 마크
          + 채권을 세분화 하는 다양한 방법 : 정부채 vs. 기업채, 국내 vs. 해외
          + 지방채는 특별 세제 혜택을 받음
     * 상품(Commodities)
          + 상거래에 사용되는 기본 재화
          + 재생 가능(Renewable): 농산품, 목재,..
          + 재생 불가(Non-Renewable): 철, 석유, 금,..
     * 부동산
          + 부동산은 토지와 그 토지를 점유하는 시설의 조합
          + 투자 부동산은 당신의 주 거주지는 제외
          + 임대 수익과 자본 가치 상승에 따라 수익이 결정
          + 부동산 투자 신탁(REITs, 리츠)는 특별 세제 혜택을 받으며, 공개 시장에서 거래됨

  다각화(Diversification) - 공짜 점심을 거절하지 말 것

     * 자산군(Asset Class): 변동성과 상관관계
          + 동일한 속성을 지니며, 시장에서 비슷하게 움직이고, 동일한 법에 근거하는 증권들의 집합체
          + 자산군은 과거 수익률면에서 다양하지만, 변동성도 다양함
          + 서로 다른 자산군의 움직임은 상관관계가 다양함
          + 자산군의 상관관계는 시간이 지남에 따라 증가하고는 있지만, 여전히 다양함
     * 위험 조정 수익률(Risk Adjusted Return)
          + 자산군의 절대 수익률 만이 중요한게 아니라, 변동성도 중요함
          + Bill Sharpe가 1966년에 샤프 비율을 개발했고, 1994년에 개정했음
               o 금융에서 투자성과를 평가함에 있어 해당 투자의 위험을 조정해 반영하는 방식
               o 투자 자산 또는 매매 전략에서, 일반적으로 위험이라 불리는 편차 한 단위당 초과수익(또는 위험 프리미엄)을 측정
     * 현대 포트폴리오 이론(Modern Portfolio Theory, MPT)
          + Harry Markowitz가 1952년에 소개했고 노벨상 수상
          + 다양한 자산 프로필을 조합하여 주어진 기대 수익률에 대한 포트폴리오 위험을 줄일 수 있음
     * 세금 문제
          + 이자, 배당금 및 자본 이득에 따라서 세율이 다름
          + 자산군은 과거 수익률에 따라 다름
          + 과세 대상 계좌의 경후 세후 위험 조정 수익률이 중요
          + 세전 위험 조정 수익률은 과세 유예 계정(401k, IRA)에 매우 중요함 (미국의 경우)

  투자 방법: 해야 할 것과 해야하는 이유

     * 브로커리지 계좌(중개 계좌)
          + 대부분의 국가에서는 대형 은행이 브로커리지 서비스를 제공
          + 미국에서 브로커리지는 증권 계좌를 제공하는 금융 회사로, SEC 및 FINRA의 규제를 받음
          + 대부분의 대형 은행은 브로커리지를 인수하거나 설립했음
          + 이런 계좌는 은행계좌는 아니지만, 돈을 입금하고 증권을 구매/판매 할 수 있는 기관임
          + 은행 계좌와 달리 돈을 잃을 수 있음. 투자는 하락할 수 있고, 때때로 장기간에 걸쳐 하락하기도 함
     * 투자 수익률을 어떻게 측정하는가 ?
          + 알파 α는 시장 수익률 대비 초과 수익률로 정의
          + 베타 β는 시간 경과에 따른 시장 벤치마크 대비 변동성 측정값으로 정의
          + 베타가 1이면 예상 시장 성과 및 변동성을 의미합니다.
          + 둘 다 자본자산 가격결정 모델(Capital Asset Pricing Model, CAPM)에서 파생
          + 핵심은 수수료와 세금을 제외한 최상의 위험 조정 수익률을 달성하는 것
     * 투자 접근 방식의 유형
          + 펀더멘털 분석은 사업 실적 및 밸류에이션을 기준으로 종목을 선택
          + 기술 분석은 가격 패턴에 따라 종목을 선택
          + 두 방법 모두, 실제로 수수료 제외한 시장 위험 조정 수익률을 신뢰 및 반복가능 한 수준으로 입증하지 못했음
          + 펀더멘털 분석은 비즈니스 소유자 및 운영자에게는 매우 유용. 워렌 버핏의 연례 편지가 유명한 데에는 이유가 있음
     * 인덱스 펀드의 장기적(Secular) 상승
          + ""A Random Walk Down Wall Street"" 책은 1973년에 초판이 발간 되었음 (번역서 제목: 시장 변화를 이기는 투자)
          + Vanguard는 1975년 12/31일에 최초의 소비자 중심 인덱스 뮤추얼 펀드를 출시했음
          + 인덱스 펀드는 현재 약 6조달러의 자산을 보유하고 있으며, 신규 주식형 펀드 유입 자금의 대부분을 차지
          + 광범위한 시장을 기반으로 한 인덱스 펀드(VTI같은)와 대체접근법 및 시장의 하위집합을 기반으로 하는 틈새 인덱스 펀드에는 큰 차이가 있음
          + 팩터 기반 투자는 학문적으로는 신뢰할 만한 근거를 가지고 있지만, 실제로는 높은 수수료가 주요 문제 였음

  좋은 투자는 지루하다(Good investing is Boring) - 지루하지 않다면 당신이 잘 못하고 있는 것임

     * 좋은 투자는 지루함
          + 누구도 평균이 되고 싶어 하지 않지만, 투자에서 ""평균""은 실제로 평균보다 훨씬 높음
          + 단순하고 저렴한 인덱스 펀드로 대부분의 뮤추얼 펀드, 헤지 펀드 및 동종업계 펀드를 이길 수 있음
          + 자산 배분은 매니저 성과차이의 최대 90% 까지를 설명함
     * A Random Walk Down Wall Street
          + 40년 이상된 프린스턴의 유명 경제학자 Burt Malkiel의 저서
          + 대부분의 전문가는 수수료를 제외한 단순한 시장 가중치 인덱스를 이기지 못함
          + 수수료가 킬러임. 즉, 전문가는 인덱스보다 수수료만큼 더 많은 수익을 내야함
          + 누군가 그렇게 한다고 해도, 그 다음 기간에 또 반복하지 않음
          + 각 자산에 인덱스 펀드를 사용하면 수수료를 낮게 유지할 수 있음
     * 개인 투자자의 실적이 프로보다 좋지 않음
          + Dalbar가 매년 지난 20년간의 개인 투자자 수익률에 대한 리서치를 발표
          + 1992년부터 2011년까지 20년간 주식 투자자의 평균 수익률은 S&P 500을 4.32% 밑돌았음
          + 같은 기간 전체 S&P 500 수익률은 배당금 재투자 포함 7.75% 였음
          + 가장 큰 원인은 높은 소수료와 시장 타이밍 오류
     * 시장 타이밍은 끔찍함
          + 주식에 유입된 자금의 역사는 사람들이 얼마나 나쁜 성과를 냈는지 보여줌
          + Dalbar 연구에 의하면 개인 투자자의 시장 수익률이 저조한 주요 원인중 하나 시장 타이밍을 꼽았음
          + 두번 맞아야함 (살때와 팔때)
          + Just. Keep. Saving
     * 자산군 : 승자는 거의 반복되지 않음
          + 자산군은 과거 수익률 및 변동성이 모두 다양
          + 서로 다른 자산군의 움직임은 상관관계가 다양
          + 자산군의 상관관계는 시간이 지남에 따라 증가하고 있지만, 여전히 다양함
          + 분산투자를 유지할 것
     * 리밸런싱
          + 장기간에 걸쳐 자산 배분은 다양한 성과로 인해 변동될 수 있음
          + 세금 효율적인 방법: 지능적인 배당금 재투자, 예치, 인출
          + 트리거 기반 리밸런싱은 이상적인 배분에서 특정 % 이상 벗어난 후에만 발생
          + 시간이 지나면서 위험이 줄어들지만, 반드시 수익률이 개선되는 것은 아님
     * 좋은 투자를 위한 4가지 열쇠
          + 계속 저축하기
          + 수수료 적게 내기
          + 다각화 유지하기
          + 세금을 최소화 하기
     * 좋은 투자는 단거리 달리가가 아니라 마라톤임
          + ""투자는 간단하지만, 쉽지 않다"" - 워렌 버핏

#8 Financial Planning & Goals - 재무 계획과 목표

  계획 : 재무 목표를 설정하고 달성하는 방법

     * 재무 계획이란?
          + 현재 및 미래의 재무 상태에 대한 종합적인 평가
          + ""개인이 적절한 재정 자원 관리를 통해 삶의 목표를 달성할 수 있는지 여부와 방법을 결정하는 과정""
          + 현금 흐름, 자산, 인출
          + 주요 구성 요소
               o 순자산
               o 현금 흐름 분석
               o 은퇴 전략
               o 위험 / 보험
               o 투자 전략
               o 세금 전략
               o 부동산 계획
     * 왜 재무 계획이 필요한가?
          + 사람들은 저축에 대한 충분한 동기가 부족하면 필요 이상의 지출을 하는 경향이 있음
          + 단기 Reward 대 장기 Payoff. 자산을 모으는 데는 시간이 필요함
          + 재무 계획을 명시적으로 세우면 성공 가능성이 높아짐
          + 두 명 이상이 참여한다면 매우 중요함(부부/가족)
     * 재무 설계사는 무엇인가?
          + 이 용어는 누구나 사용할 수 있음. 매우 조심할 것
          + 두가지 자격증이 잘 알려져 있음: CFP(Certified Financial Planner) 와 CFA(Chartered Financial Analyst)
          + 재무 설계사는 사람들이 행동 오류를 피하는데 상당한 도움을 줌. Vanguard는 그 가치를 약 150bps라고 측정함(1bp는 0.01%)
          + 부부는 돈에 관한 의사소통이 원활하지 않은 경우가 많음. 재무 설계사는 투명성과 공동 계획 수립을 강요하고 이것은 필수임
          + 업계에는 이해 상충 및 높은 수수료가 만연함
          + 향후 10년동안 개인화된 데이터 기반 자동화 솔루션으로 업계가 혼란에 빠질 가능성이 높음
     * 재무 설계사는 왜 그렇게 많은 비용을 청구할까?
          + 재무 설계사는 일반적으로 50~70명 정도의 작은 고객기반을 가짐
          + 높은 고정 비용(비싼 사무실)과 높은 변동 비용(급여 및 지원팀)을 감당해야함
          + 재무 설계사가 10만달러를 벌고 싶고, 비즈니스에 10만 달러의 간접비가 든다면, 손익분기를 맞추기 위해 고객 한명당 $4000씩 받아야함
          + 그들의 솔루션: 최소 금액을 높이고, 수수료를 높게 받고, 숨겨진 상품 배치를 통해 리베이트 및 수수료 받기

  목표의 종류: 비상자금 모으기, 은퇴등

     * 재무 목표는 무엇인가?
          + 상당한 재정적 요구사항(자산/소득)이 필요한 모든 목표
          + 시간 프레임이 중요함: 단기, 중기, 장기, 불확정 및 조건부 목표
          + 예 : 비상자금, 부채 갚기, 자동차 구입, 주택 구입, 사업 시작, 대학, 은퇴
     * 향후 저축액을 어떻게 예측할까 ?
          + 현금 계좌는 적절한 기간 동안의 FDIC(미국예금보험공사) 금리를 가정
          + 다각화된 포트폴리오는, 인플레이션에 따라 조정된 과거 수익률을 사용
          + 인플레이션은 미국 국채와 TIPS(물가연동채권)의 차이로 추정 가능(자료 시점 약 2.6%, 2023/6월 현재는 2.13%)
          + 간단한 방법: 연간 이자율을 가정하고 월별 이자율을 12로 나눈다음 월별로 예상치 작성
          + 정교한 방법: Monte Carlo는 통계적 예측을 사용하여 수많은 잠재적 결과를 추정하고 확률을 할당함
     * 간단한 목표: 비상 자금
          + 가장 중요한 단기 목표 중 하나
          + 우선순위: 유동성과 안전
          + 일반적인 목표: FDIC 보험에 가입된 은행 계좌에 3~6개월치 지출을 저축
          + 간단한 예상: 월 저축액 x 개월수
          + 예) 12000달러의 비상금을 마련하려면 1년간 매달 1000달러를 저축해야함
     * 더 복잡한 목표: 집
          + 미국 인구조사: 주택 소유율 65.4%(2021년 3분기 기준)
          + 두가지 핵심 요소: 계약금과 소득 요건(현금 흐름)
          + 계약금은 일반적으로 20%. $1M이라면 $200K, 여기에 클로징 비용 추가
          + 은행의 일반적 부채/소득 비율은 36%(세전). 고비용 지역에서는 40% 이상으로 늘어날 수 있음
          + 일정에 여유가 있다면 어느 정도의 시장 위험을 감당할 수 있음. 그렇지 않다면 현금을 고수할 것
          + 주택은 유동성(돈을 인출하기 어려움)과 이동성(직장을 위한 이사)이 매우 떨어짐
          + 부동산에 대한 장기적인 실적은 긍정적임: 인플레이션을 상회하는 수익과 레버리지 투자의 조합
     * 더 복잡한 목표: 대학
          + 매우 비싼 목표임. 2027년에 내 자식을 스탠포드에 보내려면 358,942달러가 들 것으로 추정함(인플레이션 적용)
          + 대학 비용은 인플레이션보다 빠르게 증가했음(장기적으로 인플레이션보다 1.1% 더 빠름)
          + 제한된 타임프레임. 은퇴까지는 40~50년이 남아있음. 18년은 복리효과가 나타나기에 그리 길지 않은 시간
          + 529 대학 저축 플랜(미국)은 유동성을 희생하는 대신 상당한 세금 혜택이 있음
          + 여러 자녀를 위한 계층별 계획은 조기 저축에 대한 보상을 제공
     * 복잡한 목표: 은퇴
          + 엄청 복잡한 목표
          + 서로 연관된 4개의 문제
               o 40+년간 소득 예상: 임금 인플레이션을 프록시로 사용
               o 30+년간 소득 대체: 첫번째 근사치로 ""4%"" 룰을 사용
               o 세금 효율성: 과세 유예 계좌 활용
               o 여러 사람을 위한 계획: 파트너의 은퇴계획을 파악하고 자녀를 위한 주요 지출 시기를 예상. 총 가계 소득과 자산을 종합적으로 살펴보기
          + 장기 자산 배분(다각화된 포트폴리오)
          + 자산의 위치(어떤 곳에다 어떤 투자를 할지)
          + 과세 유예 계좌들(401k, IRA, Roth IRA,..)
          + 생명 보험 사기꾼 조심할 것

커플: 파트너가 있다면 재무계획이 어떻게 변화하는가

     * 둘을 위해 계획하기
          + 재무계획은 어려움. 미래를 예측하고 선택의 우선순위를 정해야함
          + 커플의 경우 서로 다른 일정, 우선 순위, 가능성으로 인해서 훨씬 더 어려움
          + 주요 문제는 의사소통, 투명성, 관계 및 가치관이 포함
          + 돈과 연관된 문제는 관계가 실패하는 가장 흔한 이유중 하나임
     * 커플: 예산 및 지출
          + 두 사람이 함께 예산/지출을 관리하는 방법은?
               o 하나의 계정 방식: 하나의 공동 계정, 완전히 공유
               o 두 개의 계정 방식: 별도의 계정, 청구서 지불에 따른 조정
               o 세 가지 계정 방식: 두 개의 개인 계정과 하나의 공동 계정
          + 이러한 전략 중 어느 것도 핵심 문제인 커뮤니케이션과 가치관을 해결하지 못함
          + 논의할 비용의 매직 넘버는 서로 논의해야함
          + 경고: 신용에 대한 연대책임은 심각한 Commitment임. 가볍게 생각하지 말 것
     * 커플: 저축 과 투자
          + 퇴직 계좌(401k 및 IRA)는 개인 계좌
          + 중개 계좌는 개인 또는 공동 계좌일 수 있음. 주식 보상은 개인별
          + 소득, 경력, 기간이 다양하고 저축률이 복잡함
          + 회사마다 혜택의 질이 크게 다를 수 있음 (구글의 401k 와 스타트업의 401k)
          + 상황의 변화에 따라 재검토해야할 가능성이 높음

생명 보험 : 어떻게 작동하나? 언제 의미가 있나?

     * 생명보험: 왜 존재하는가?
          + Death Insurance임
          + 사망에는 관련된 비용이 발생함
          + 부양가족이 있는 사람은 사망후 부양가족을 부양할 방법이 필요함
          + 은퇴 계획은 실행에 수십년이 걸리는 경우가 많음. 생명보험은 사망으로 인해 받지 못한 소득을 대체할 수 잇음
          + 불확실성에 대한 위험을 분산하는 것은 근본적인 경제적 이점이 있음. 사람이 언제 사망할지는 이러한 방식으로 가치를 추가하는 최초의 보험 수리적 사례임
          + 생명보험에는 몇 가지 세금 혜택이 있음. 소유자는 잠재적 보험금 규모에 대해 세금이 부과되지 않으며, 수혜자는 수령 시 세금이 부과되지 않음
     * 생명보험: 어떤 종류가 있나?
          + 정기 생명보험: 가장 일반적인 것. 사망시 수혜자에게 지급되는 보험금을 위해 일정기간 동안 보험료 지불. 지급액은 일정하거나 감소할 수 있음
          + 종신보험: 나이에 관계없이 사망 보험금을 제공. 일명 ""영구"" 생명 보험이라고도 함
          + 유니버설 생명보험: 종신보험과 비슷하지만 사망보험금과 현금 가치를 변경할 수 있는 유연성이 더 높음
          + 변액 생명보험: 보험료가 고정되어 있으며, 현금 가치의 수익률에 따라 사망보험금이 증가할 수 있음
          + 당신이 상상할 수 있는 모든 조합이 시도되었음. 미국내에서는 2조달러 규모의 산업임
          + 높은 비용과 수수료, 계약 해지 시 징벌적 조항으로 인해 생명보험은 장기 투자에 적합한 금융 삼품이 아님. 정기 생명보험을 고수할 것
     * 생명보험: 얼마나 필요할까?
          + 사망과 관련된 비용을 생각해 볼 것
          + 자금 조달을 위해 소득이 필요한 부양 가족 및 비용 고려. 집/대학/은퇴
          + 이러한 비용을 지불할 수 있는 자산을 모으는데 걸리는 기간을 생각해 볼 것
          + 사망 확률은 나이에 따라 증가하기 때문에 비용이 비선형적. 30년 policy는 10년 policy의 3배가 아님
          + 젊은 사람들에게는 매우 저렴함
          + 일반적으로 결혼이나 자녀를 계획할 때 함

#9 Real Estate - 부동산

     * 왜 부동산이 중요한가?
          + 사람들은 살 곳이 필요함
          + 미국 대부분의 가정에서 가장 큰 재정적 지출을 하는 부분
          + 복잡하고 난해한 구매 절차가 있음
          + 많은 사람들에게 순자산의 가장 큰 부분을 차지함
          + 국가적 및 국제적 부의 상당부분을 차지함

  부동산 구입하기 - 방법과 이유

     * 왜 사람들이 부동산을 구입하는가?(렌트 대비)
          + 살 곳이 필요해서
          + 사람들은 장기간 거주할 곳을 통제하고 싶어함
          + 거주지를 소유한다는 생각에 정서적 애착을 가지고 있음
          + 좋은 투자라고 믿음
     * 부동산은 어떻게 매매되는가 ?(미국 기준이므로 참고만)
          + 일반적으로 중개 거래. 미국 기준은 판매 가격의 6%가 부동산 중개인에게 분배됨
          + 2022년 5월 기준, 평균적인 주택은 시장에 나와서 판매되기 까지 31일이 걸림
          + 구매자와 판매자 모두에게 상당한 비용이 소요됨
          + 모든 당사자에게 상당한 실사(Due Diligence)가 요구됨
          + 엄격하게 규제된 절차
     * 구매자에게 필요한 즉시 비용은?
          + 직접비용
               o 계약금 - 일반적으로 총 구매비용의 20%. 없다면 모기지 보험
               o 클로징 비용 - 일반적으로 미국내 구매자의 평균 2~5%
          + 암묵적 비용
               o 기회 비용
               o 유동성 비용
     * 구매자의 지속적 비용
          + 재산세 - 미국내 지역에 따라 다른데 보통 연간 재산가치의 ~1%
          + 주택보험 - 미국내 연간 평균 ~$1000
          + 모기지 - 원금과 이자중, 이자는 상당한 비용임
          + 유지보수비용. 보통 매년 1%씩 쉽게 들어감

  부동산 임대 - 장점과 비용

     * 왜 사람들이 부동산을 렌트하는가(구입 대비)
          + 살 곳이 필요해서
          + 거주에 유연성을 찾고 있음
          + 장기적인 거주지 선정 및 큰 재정적 커밋먼트에 대한 정서적인 두려움이 있음
          + 구매에 필요한 재정적 자원이 부족
          + 현금 흐름의 재무 관리가 훨씬 간단

  부동산 소유와 임대 - 가장 큰 재무적 결정중 하나

     * Big Decision, Strong Emotions
          + 중요한 비재무적 고려사항
          + 높은 거래비용은 부동산을 구입하는 것이 단기간에 매우 위험하다는 것을 의미함
          + 위치가 고정되는 것은 커리어 기회를 크게 제한할 수 있음
          + 지역 사회와 학교의 사회적 연결이 중요함
          + 대부분의 사람들에게 부동산은 일생에서 가장 큰 투자
          + 일부 사람들은 임대/구매에 대해 강한 정치적 신념을 가지고 있음
     * 임대의 재무적 장점
          + 유동성: 거액의 계약금에 자본이 묶이지 않고, 거액의 원금 상환을 강요받지 않음
          + 위치 유연성: 필요에 따라 새 위치로 이동 가능
          + 다각화: 자산의 대부분을 한 자산에 집중하는 것은 여러 가지 위험이 생길수 잇음
          + 지리적 시장 위험을 피하기: 지난 50년간 실리콘밸리의 주택 구입은 좋았지만, 디트로이트는 그렇지 않았음. 미래는 예측하기 어려움
          + 유지보수: 부동산 소유권과 관련된 대부분의 비용은 소유주에게 전가됨. 큰 비용을 계획할 필요가 없음
          + 경쟁이 치열한 시장: 대부분의 경우 임대료는 임금 인플레이션과 함께 움직임. 이상적으로는 품질&가격 측면에서 임대인간에 경쟁이 있는 것이 좋음
     * 소유의 재무적 장점
          + 레버리지 투자: 대부분의 투자는 5배 또는 그 이상의 레버리지로 저렴한 대출로 이뤄짐. 수익은 은행이 아닌 소유자에게 발생
          + 세금 혜택: 모기지 이자 및 재산세는 공제가능.
          + 장기 투자: 부동산은 평균적으로 다른 자산군에 비해 상대적으로 낮은 변동성으로 인플레이션을 상회하는 플러스 수익률을 기록해 왔음
          + 재정 관리: 소유주는 장기적인 수익률을 높이기 위해 부동산에 어떤 투자를 어떤 가격에 할 것인지 통제가능(주방 리모델링 등)
          + 선택적 추가 수입: 대부분의 경우 부동산을 장기 임대할 수 있는 옵션이 있음. 임대 수입은 인플레이션과 함께 증가
     * 임대 vs. 소유 비교
          + 마운틴뷰의 2 베드룸 아파트를 2017년 기준으로 임대/소유하는 것을 비교
          + (우리와는 달라서 생략합니다)
     * 왜 부동산이 대부분의 사람들에게 부를 창출하는가
          + 저축을 강제
          + 레버리지 투자
          + 장기적으로 긍정적인 투자: 지난 70년간 부동산은 인플레이션 대비 수익률이 높았음
          + 긴 타임 프레임: 대부분 투자자의 보유기간은 짧음. 사람들은 주택은 더 오랜기간 소유하기 때문에 가치가 상승할 수 있는 시간이 더 많음

  부동산에 투자하기

     * 부동산
          + 부동산은 토지와 그 토지를 점유하는 시설의 조합
          + 투자 부동산은 당신의 주 거주지는 제외
          + 임대 수익과 자본 가치 상승에 따라 수익이 결정
          + 부동산 투자 신탁(REITs, 리츠)는 특별 세제 혜택을 받으며, 공개 시장에서 거래됨
     * 일반적인 투자 방법
          + 지난 100년간 데이터를 보면, 자산군의 가격 추세는 상당히 명확함
          + 실질 수익률은 인플레이션을 차감한 수익률로, 시간이 지남에 따라 화폐 가치가 어떻게 하락하는지를 측정(달러)
          + 주식은 장기간에 걸쳐 연간 수익률이 가장 높지만, 변동성도 높음
          + 하지만 미국 주택 가격이 부동산에 대한 최고의 지표일까?
     * 부동산과 다른 자산군간의 역사적 데이터 비교
          + 부동산의 기간, 지역, 하위 섹터에 따라 금융 커뮤니티에서는 여전히 상당히 논쟁중
          + 수익률은 자본 가치 상승과 임대료 가치를 모두 기준으로 함
          + 최근 논문(아직 활발히 논의되는)에 의하면, 글로벌 부동산은 주식에 필적하는 실질 수익률을 제공하면서 변동성은 낮은 것으로 보임. 미국의 경우 주식 보다는 낮지만, 어음과 채권보다는 높음
          + 1970~2015년 미국 리츠의 수익률이 미국 주식과 비슷하다는 점에서 이를 뒷받침함 (단 주식의 세금 효율성은 떨어짐)
          + 기억할 것: 평균이 반드시 모든 단일 투자의 성과를 설명하는 것은 아님

  임대 부동산: 근거, 재정적 비용과 혜택

     * 임대 부동산이란?
          + 임차인에게 임대하여 수입을 올릴 목적으로 소유한 모든 부동산
          + 단독 주택부터 아파트 까지 다양한 유닛이 있고, 주거용 또는 상업용 부동산이 될 수 있음
     * 임대 부동산에 대한 재무 정보
          + 임대용 부동산을 구입하는 것은 거주용 부동산을 구입하는 것과 유사함
          + 모기지 자격이 다르며, 일반적으로 더 높은 이자율이 적용
          + 세금 처리는 사업체와 비슷(감가상각, 소득, 비용)
          + 자본 환원율(Capitalization Rate) = 소득의 수익률 vs. 시장 가치
            Cap Rate = 소득 / 시장가치
     * 왜 사람들이 임대 부동산을 좋아하는가?
          + 임대 부동산 소유의 이점에 대해 매우 감정적으로 생각하는 경우가 많음
          + 부동산에 대한 대부부느이 고정 비용은 선불이지만, 임대 수입은 시간이 지남에 따라 인플레이션에 따라 증가함
          + 모기지를 상환하는 과정에서 인플레이션 조정 소득을 창충하는 자산을 남길수 잇음
          + 일반적으로 부동산 소유에서 유기적으로 발전함
          + 대부분의 사람들은 소유 비용과 임대과정을 모두 직접 경험함
          + 많은 사람들이 금융 자산/시장에 비해 더 투명하고 실체적(tangible)이라고 생각함
          + 또한, 자산의 비즈니스를 소유하는 것의 심리적 이점(비용)도 있음
     * 임대 부동산의 문제
          + 시간: 이것은 또 다른 직업임. 때때로 예측할 수 없고, 상당한 노력이 필요함
          + 현금 흐름: 장기적으로 수익을 낼 수 있는 투자를 하기는 쉽지만, 단기적으로는 현금 흐름이 마이너스가 될 수 있음
          + 점유: 공실은 비용이 많이 들고 예측할 수 없음
          + 사람: 임차인과의 지속적인 관계 관리, 새로운 임차인 찾기 등
          + 법적 문제: 세입자 권리와 관련된 중요한 규정 및 요건. 퇴거는 매우 어렵고 비용이 많이 들 수 있음
          + 영화 추천: Pacific Heights

#10 추가 토픽: 학생들의 선택

  벤처 캐피탈과 사모펀드

     * 사모펀드란?
          + 사모펀드(Private Equity, PE)는 비상장기업에 직접 투자하거나 상장기업을 인수하는(buyout) 비상장 펀드 및 투자자로 구성
          + 엄밀히 말하면 벤처 캐피탈을 포함하지만, 일반적으로는 기존 기업에 투자하는 펀드를 말함
          + 장기적이고 비유동적인 투자에 중점을 둠
          + 펀드는 이전 투자자 주식의 매수, 신규 개발 자금, 인수, 운영 자본 확충, 경영권 및 회사 구조 변경을 위한 지배권 확보 등에 사용될 수 있음
          + 사모펀드는 일반적으로 규모와 접근 방식이 다양한 여러 개의 펀드를 보유함
          + 펀드는 투자 결정을 내리는 무한책임사원과 자본을 제공하는 유한책임사원의 파트너십으로 구성
     * 벤처캐피탈이란?
          + 벤처캐피털(VC)은 성장 잠재력이 높은 초기 단계의 소규모 신생 기업에 자금을 지원하는 데 중점을 둔 사모펀드의 한 유형
          + 기업이 성장함에 따라 더 많은 자본을 제공하는 단계적 모델에 따라 자금을 조달하여 위험을 제거하고 가치를 높임
          + 1970년대와 80년대 실리콘밸리에서 기술 기업이 기하급수적으로 성장한 것과 밀접한 관련이 있음. 초기의 성공 사례로 DEC, Apple 등
     * 벤처 캐피털리스트는 어떻게 돈을 버나요?
          + 라운드는 일반적으로 프리시드, 시드, A, B, C 등으로 불림. 이들은 추가 권리와 특권이 있는 ""우선주""라는 특별한 종류의 주식을 받지만, ""보통주""보다 더 많은 비용이 들어감
          + 벤처 캐피탈 회사는 일반적으로 Liquidity 이벤트인 IPO 또는 인수 같은 경우에만 자본을 돌려받음
          + 벤처 투자가 Liquid되기까지 5~7년이 걸릴 수 있음
          + 상위 20개 벤처캐피털 회사(약 1,000개 중)가 업계 수익의 약 95%를 창출
          + Limited Partner는 일반적으로 벤처 캐피탈의 추가적인 위험과 비유동성을 보상하기 위해 주식 시장에 비해 상당한 프리미엄을 기대함
          + 일반적인 벤처 캐피탈 펀드 수익의 80%는 투자금의 20%에서 창출됨
          + 따라서 벤처 수준의 복리 수익은 고사하고 펀드 수익률도 기대할 수 있으려면 승자의 규모가 매우 커야 함. 10억 달러의 가치가 있는 회사는 매우 성공적인 회사이지만, 그 회사의 20%는 2억 달러의 가치에 불과. 10억 달러의 펀드를 반환하려면 이런 회사 5개가 필요함. 3배의 수익을 내려면 15개가 필요함.
          + 투자금의 10배에 달하는 투자처를 찾으려면 당신은 ""non-consensus and right"" 해야함

  파생상품 : 선물과 옵션

     * 파생상품이란?
          + 파생상품은 하나 이상의 기초자산에 의존하는 증권
          + 파생상품은 고유한 계약에 의해 생성되거나 거래소에서 거래할 수 있도록 표준화될 수 있음
          + 가장 일반적인 표준화된 파생상품은 선물 및 옵션
          + 선물과 옵션은 헤지나 투기에 자주 사용됨
          + 파생상품의 전체 명목 가치는 2015년에 전 세계 GDP의 10배가 넘는 1조 2,000억 달러로 추산
     * 선물이란?
          + 선물은 미리 정해진 시간과 가격에 상품을 향후 판매하기로 하는 계약
          + 원래 사용 사례에는 농업 및 운송이 포함됨
          + 최초의 선물 거래소는 에도시대 일본의 도지마 쌀 거래소
          + 선물은 지정된 날짜와 시간에 기초 상품을 인도함으로써 정산
          + Clearing House는 계약 결제가 이행되도록 보장함
     * 옵션이란?
          + 옵션은 미래 날짜까지 증권을 매수 또는 매도할 수 있는 권리
          + 유럽 옵션은 만기일에만 행사할 수 있음
          + 미국 옵션은 만기일까지 언제든지 행사할 수 있음
          + 콜 옵션은 매수 권리, 풋 옵션은 매도 권리
     * 옵션의 가치를 어떻게 평가할까?
          + 스톡옵션의 가치에 영향을 미치는 요인은 여러가지가 있음
               o 현재 주가, 내재 가치, 만기까지 남은 시간, 변동성, 이자율, 현금 배당금
          + 옵션의 가치를 평가하는 블랙-숄즈 모형은 1973년에 개발되었음
          + 파생상품의 가치를 계산하는 다른 방법도 있지만 ""공정가치""는 종종 파생상품의 블랙-숄즈 가치를 의미함
          + 옵션의 가격을 프리미엄이라고 하며, 옵션이 100 단위로 거래되더라도 주당 가격으로 표시됨

   감사합니다

   올려주신 링크, 몇주 전에는 영상이였던것 같은데 혹시 pdf로 바뀐것인가요?

   처음부터 PDF 였던것으로 기억합니다. 저도 영상은 본적이 없네요.

   감사합니다!!

   국내에 비슷한 자료는 금융감독원 e-금융교육센터에서 찾을 수 있습니다.
     * 대학생을 위한 실용금융
     * 생애주기별 금융생활 가이드북 1권-사회초년기

   감사합니다.

   공대 나온 입장에서 한국 대학들도 이런 거 꼭 했으면 좋겠습니다.

   번역에 잘못 옮겨진 부분이 있네요.
   50만원($40) => 50만원($400)

   2021, 2020은 개별 프레젠테이션이 보이는데 2022는 맨 아래에 PDF파일만 있는 것이 맞을까요? 내용은 너무 좋아보이네요~

   완독 했습니다. 훌륭합니다.

   역시 좋은 학교라 이런 좋은 수업이 있군요!

   좋은 자료 공유해주셔서 감사합니다.

   좋은 자료 감사합니다.

   오~ 찬찬히 들여다보겠습니다. 좋은 자료 감사합니다!

   대단히 감사합니다.

   오우... 감사합니다

   좋은 자료 감사합니다.

   와우 감사합니다

   정리하다 보니 길어졌는데 정말 재미납니다. 대학생부터 신입 엔지니어들 모두에게 도움이 되는 자료에요.
   PDF가 깔끔해서 챙겨뒀다가 필요한 자리에 써먹어야 겠어요. 이런 강의는 한국에도 좀 있으면 좋겠는데.. ㅎㅎ

   그러고 보니 몇 년 전에 네카라쿠배 중 한 곳에서 내부적으로 이런 개인 재무 관리에 관한 온라인 특강을 하던 것을 꼽사리 껴서 시청한 적이 있습니다. 그때 연금저축에는 1달에 얼마씩 넣는 것이 가장 좋다 같은 내용을 처음 들었지요. 그때 경험을 생각해 보면, 규모가 있는 회사에서는 내부적으로 이런 특강을 하는 경우가 있는 모양입니다.
"
"https://news.hada.io/topic?id=9494","레드햇(Enterprise Linux)에서 떠났습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     레드햇(Enterprise Linux)에서 떠났습니다.

     * Red Hat, 무료로 제공되는 Enterprise Linux 배포판의 널리 사용되는 버전인 CentOS를 2년 전에 없애며 사용자를 무료 탐욕쟁이로 라벨링했다.
     * Red Hat은 이제 소스 코드를 유료로 제공하고 있으며, 이는 합법적이지만 일반적으로 무례하고 짜증나는 것으로 여겨진다.
     * Red Hat의 현재 구독 계약은 소스 코드를 다운로드하고 재배포하는 경우 언제든지 사용자 계정을 취소할 수 있기 때문에 합법적이지 않을 수 있다.
     * Red Hat은 IBM 지배자를 기쁘게 하기 위해 단기적인 이익을 확보하기 위해 Rocky, Alma 및 Oracle Linux와 같은 하류 배포판을 차단하려고 노력하고 있다.
     * Red Hat은 Linux의 GPL 라이선스 조건에서 합법성의 경계를 넘나들고 있다.
     * Red Hat은 이제 '오픈 소스 회사'로 알려졌지만 그러한 선의를 버리고 있다.
     * 개발자들은 Red Hat Enterprise Linux 라이선스를 테스트하기 위해 Red Hat 개발자 계정에 가입하도록 권장받고 있다.
     * Debian, Ubuntu, FreeBSD, Rocky Linux 및 AlmaLinux는 Red Hat Enterprise Linux의 대안이다.
     * Red Hat의 행동은 사용자, Red Hat 및 여전히 그들의 생태계에 있는 모든 사람들에게 슬픈 일이다.
     * Rocky Linux와 AlmaLinux는 나아갈 방법을 찾고 있지만, 작성자는 Red Hat Enterprise Linux를 더 이상 사용하지 않을 것이다.

        Hacker News 의견

     * Red Hat의 CentOS 지원 종료 결정이 사용자들 사이에서 우려를 불러일으키고, 일부는 생태계 선택을 재검토하게 만들었습니다.
     * Red Hat의 리더십이 오픈 소스에 대해 관심을 가지는지에 대한 논란이 있으며, 일부는 단기적인 매출을 커뮤니티 기여보다 우선시하는 것으로 비난합니다.
     * 한 사람의 ""무료 탑승자""라는 용어 사용이 Red Hat 전체에 귀속되고 있지만, 이는 불공정하고 생산적이지 않다고 여겨집니다.
     * Red Hat의 서버당 판매 모델은 순진하게 여겨지며, 산업이 RHEL+파생물을 표준 드라이버 대상으로 다루지 않게 할 수도 있습니다.
     * Software Freedom Conservancy의 RHEL과 GPL 법률 분석은 흥미롭고 읽을 가치가 있다고 여겨집니다.
     * 일부 댓글러들은 RHEL을 포크하고 독립 버전을 만들어 오라클과 아마존과 같은 회사들의 지원을 받을 시기라고 믿고 있습니다.
     * IBM이 Red Hat을 소유한 것이 Red Hat의 오픈 소스와 커뮤니티 기여에 대한 약화로 이어졌다는 우려가 있습니다.
"
"https://news.hada.io/topic?id=9516","Novel - Notion스타일 WYSIWIG 에디터 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Novel - Notion스타일 WYSIWIG 에디터 오픈소스

     * AI를 이용한 자동완성 기능 내장
     * ""/"" 로 기능 팝업 (자동완성 및 스타일링)
     * Next.js + Tiptap(에디터) + OpenAI + Vercel AI SDK + TailwindCSS

   novel의 편집기는 tiptap... tiptab의 편집기는 prosemirror... 따라가다보면 결국 codemirror...
   흠...
"
"https://news.hada.io/topic?id=9499","Softbank에서 2200억원 투자한 메시징앱 IRL, 95% 사용자가 가짜로 밝혀져 문을 닫음 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Softbank에서 2200억원 투자한 메시징앱 IRL, 95% 사용자가 가짜로 밝혀져 문을 닫음

     * IRL(In Real Life)은 2년전에 소프트뱅크 비젼펀드 2로부터 $170m 시리즈 C 펀딩을 받음
     * 자신들을 ""이벤트와 경험 공유를 통해 사람들을 하나로 모으는 선도적인 그룹 메시징 소셜 네트워크"" 라고 설명
     * MAU가 2천만명에 달한다는 CEO Abraham Shafi의 주장에 의문이 제기 되었음
          + 올해 초 한 전직 직원이 봇에 대한 우려를 표명한 후에 해고당했다고 주장했으며, CEO는 4월에 사임
     * 이사회 조사에서 ""사용자의 95%가 자동화되었거나 봇에서 온 것"" 이라고 결론
     * CEO를 위법 행위 혐위로 정직시킨 지 두달만에 회사를 폐쇄하고 주주들에게 자본을 반환할 것이라고 밝혀
     * 대다수의 주주들은 회사의 향후 전망이 지속 불가능 하다고 결론
     * 2021년 펀딩 라운드에서 약 $1.2b 가치 였으며, 100여명의 직원이 있었음
     * 소프트뱅크의 담당자이자 IRL 이사회 멤버는 관련질의에 답변을 거부

   WeWork에 이어 또 소프트뱅크야? 싶네요. 이정도면 DD 과정에 문제가 있는거 아닌가..
"
"https://news.hada.io/topic?id=9454","Dingo Quadruped - 오픈소스 4족 보행 로봇(강아지)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Dingo Quadruped - 오픈소스 4족 보행 로봇(강아지)

     * 35Kg 서보모터를 이용한 저비용 4족 보행 로봇 (BOM $1290)
     * 스탠포드 Pupper 와 Notspot 코드 기반으로 ROS 1 Noetic 연동등 광범위한 코드 수정
     * 3D 프린트 가능한 CAD 파일도 같이 공개
"
"https://news.hada.io/topic?id=9493","유럽 인플레이션 증가의 거의 절반은 기업 이익으로 인한 것입니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  유럽 인플레이션 증가의 거의 절반은 기업 이익으로 인한 것입니다.

   이 글은 imf 웹사이트가 봇의 접근을 차단하게 되어있어서 읽는게 오류가 있나봅니다

        Hacker News 의견

     * 기업들은 양을 극대화하기 위해 상품 가격을 책정하며, 그들의 선의와는 무관합니다.
     * 인플레이션은 일반적인 가격보다 더 많은 가격 변동성을 허용하여 기업의 이익을 증대시킵니다.
     * 경쟁업체보다 가격을 더 높일 수 없는 약한 기업들은 이익이 감소하고 잠재적인 사업 실패로 이어질 수 있습니다.
     * 비용 추가 가격 책정은 소매 가격에서 거의 사라졌습니다.
     * 이익은 시장 비효율성의 직접적인 측정입니다.
     * 비효율적인 시장은 쓸모 없거나 더 나쁩니다.
     * 인플레이션은 기업들이 시민들로부터 부를 추출하는 것입니다.
     * 선을 둘러싸고 막는 것은 아무런 도움이 되지 않습니다. 돈은 흐르는 것이 좋으며, 그것을 막는 것은 아무런 도움이 되지 않습니다.
     * 인플레이션을 억제하기 위한 중앙은행의 접근 방식은 경제 주체들이 강제로 지출 패턴을 변경할 때까지 변화하지 않을 것이라고 가정합니다.
     * 감정적 동기는 소비 감소와 기업의 가격 책정력 감소로 이어질 수 있습니다.
     * 에너지와 식료품은 최적화 이상으로는 탄성이 크지 않아 인플레이션을 낮추기 어렵습니다.
     * 통화 정책 결정은 인플레이션의 주요 요인입니다.
     * 대규모 화폐 인쇄는 기업의 이익을 증대시킵니다.
     * 기업의 이익은 인플레이션의 결과이며, 원인이 아닙니다.
     * 기업들은 이익을 창출하는 것이라는 명시된 목표를 따르고 있으며, 다른 이들은 이익을 고려하지 않고 모든 것을 고려하여 가격 상승을 설명하려고 서두릅니다.
"
"https://news.hada.io/topic?id=9437","2023년 로고 트렌드 보고서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            2023년 로고 트렌드 보고서

     * 약 3만개의 신규로고를 60~70개로 그룹화 한 뒤 가장 영향력이 큰 15개의 클러스터로 분류
     * Wildflowers
     * Bloblend
     * Fades
     * Foreshort
     * Thrust
     * Spirals
     * Sonics
     * WireForms
     * BallCaps
     * NameFills
     * Stretchers
     * NeoStencil
     * HalfAster
     * Double Os
     * Ritz
"
"https://news.hada.io/topic?id=9475","Show GN: Toolbox Dev , 개발자를 위한 툴 설치 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Show GN: Toolbox Dev , 개발자를 위한 툴 설치

   개발자를 위한 빠르고 간단한 툴 설치 유틸리티 데스크탑 앱을 직접 개발했습니다.

   ""필요한 툴설치를 5분컷"" 하게 해주는게 목표인 앱입니다.

   첫 버전인 만큼 미숙한 부분이 많은데
   많은 피드백 부탁드릴게요 (_ _)

   [소개 영상]
   https://www.youtube.com/watch?v=YTP13OL2Kl8

   windows엔 비슷한게 있어서 참고하시면 도움 될거 같습니다~
   https://github.com/marticliment/WingetUI

   wedding 님 감사합니다.
   비슷한 앱이 있었나 마켓에 찾아봤었는데 저는 발견하지 못했던 정말 좋은앱이네요.
   진작 알았더라면 더 좋았겠어요.

   혹시
   winget install python
   winget install dockerdesktop
   형태로 winget을 부르는것에 비해 차별점이 어떻게 될까요?

   별도 커맨드를 익히지 않고 쉽게 GUI 로 여러 툴을 동시에 다운받는다는 점입니다.
     * window/winget
     * macOS/homebrew
       위와 같은 CLI 패키지 매니저를 능숙하게 다루고 원하는 패키지가 모두 제공된다면 winget 과 homebrew 로도 충분합니다!
"
"https://news.hada.io/topic?id=9492","구글, 설정 내부에 숨겨진 비밀 브라우저 보유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       구글, 설정 내부에 숨겨진 비밀 브라우저 보유

     * 안드로이드 앱의 ""내 계정 관리"" 팝업에서 비밀 브라우저가 발견되었습니다. 이는 설정 및 구글 스위트 앱을 포함합니다.
     * 사용자는 ""내 계정 관리"" 팝업의 보안 탭 내에서 일련의 단계를 거쳐 브라우저에 액세스할 수 있습니다.
     * 이 브라우저는 히스토리가 없으며 세션이 끝나면 Google 계정에서 자동으로 로그아웃됩니다.
     * 그러나 이 브라우저에는 주소 표시줄이 없으며 뒤로 가기 버튼은 비밀번호 관리 설정으로 돌아갑니다.
     * 이 브라우저에는 악성 웹사이트에서 사용자가 지불하도록 유도하는 로컬 암호화 키를 설정하는 데 사용될 수 있는 두 가지 방법을 포함한 위험한 기능이 있습니다.
     * 이 브라우저는 구글이 ""의도된 동작""으로 판단한 부모용 제어를 우회합니다.
     * 이 브라우저를 발견한 사람은 구글에 신고했지만, 구글은 이것을 보안 취약점으로 분류하지 않았습니다.

   암호 관리 들어가면 뭔가 한박자 느린 느낌이 있었는데.. 기분탓이 아니었던건가 싶네요

        Hacker News 의견

     * 구글의 안드로이드 설정 앱에서 ""내 계정 관리""를 클릭하면 구글 플레이 서비스에 내장된 액티비티로 이동하게 되며, 이는 결국 숨겨진 브라우저로 이어진다.
     * 이 브라우저는 기본 시스템 웹뷰 구현을 사용하는 것이 아니라 addJavascriptInterface를 사용하여 안드로이드 코드와 자바스크립트 코드 간의 JS 인터페이스를 구축하는 사용자 정의 구현을 사용한다.
     * MagicArchChallengeView 인터페이스는 대부분 비어 있고 몇 가지 다른 난독화된 클래스로 연결되는 ""bwuz"" 클래스에 연결되는 것으로 보인다.
     * ""qvc""와 ""pdn"" 두 클래스는 setVaultSharedKeys 및 addEncryptionRecoveryMethod와 같은 계정 보안과 관련된 함수를 노출한다.
     * 이 숨겨진 브라우저는 더 자세히 탐색할 만한 흥미로운 공격 벡터가 될 수 있다.
     * 일부 댓글러들은 다양한 설정이나 애플리케이션에서 숨겨진 브라우저나 해결책을 찾은 자신의 경험을 공유한다.
     * 한 댓글러는 구글에 버그를 신고하고 버그 바운티를 거절당한 분노스러운 경험을 공유한다.
"
"https://news.hada.io/topic?id=9520","Vector는 PostgreSQL의 새 JSON 입니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Vector는 PostgreSQL의 새 JSON 입니다

     * 벡터는 잘 연구된 수학적 구조이고, JSON은 데이터 교환 형식임
     * 하지만 데이터 저장 및 검색 세계에서 두가지 데이터 표현 방식은 공용어가 되었으며, 최신 어플리에키션 개발에서 곧 필수적인 요소가 될 것
     * 현재의 경향이 지속된다면 벡터 역시 어플리케이션 구축에 있어서 JSON만큼 중요해 질 것
     * 생성형 AI의 결과물에 대해 저장 및 쿼리하기 위해 PostgreSQL이 자연적으로 선택되었음
     * 하지만 이게 새로운 데이터 패턴은 아님. 수학적 개념으로서의 벡터는 수백년간 존재해왔음
     * 벡터의 기본 데이터구조인 배열은 대부분의 전산학입문 과정에서 가르침. PostgreSQL도 20년 이상 Vector 오퍼레이션을 지원해왔음
     * 그럼 새로운게 무얼까? 이런 AI/ML 알고리듬의 ""접근성""과 일부 ""현실 세계"" 구조(텍스트,이미지,비디오)를 벡터로 표현하고 이를 나중에 응용프로그램에서 사용하는게 얼마나 ""쉽게 가능한가?""임
     * 또한 이런 시스템의 출력(""임베딩"")을 데이터 스토리에 저장하는 것도 새로운게 아니라고 할 수 있지만, 새로운 패턴은 이런 데이터를 모든 어플리케이션에서 거의 실시간으로 쿼리하고 반환하는 ""접근성""임
     * 그럼 이게 PostgreSQL과 무슨 관련이 있을까?
          + 데이터 타입을 효율적인 저장하고 검색하는 공통 패턴은 앱 개발을 크게 단순화 시켜줬고, 사람들이 데이터를 같은 공간에 저장하고 기존 도구들로 작업가능하게 해줌
          + 우리는 10년전에 JSON으로 이걸 보았고, 이제 벡터 데이터로 이 패턴을 보는 중

PostgreSQL의 JSON에 대한 간략한 역사

   (원문을 참조하세요)

벡터의 부상 ""새로운 종류의 JSON""

     * 요즘 인기가 급상승
     * 일반적인 사용 사례는 저장된 데이터에 모델을 구축하고 벡터형식으로 변환한 다음 ""시맨틱 검색""에 이용하는 것
          + 이 경우, 검색에 들어온 새로운 입력을 벡터 포맷으로 변환한뒤 데이터베이스에서 가장 비슷한 것을 검색하는 것
          + 유사성은 유클리드/코사인 거리등 거리함수를 이용하며, 결과는 종종 k-NN(Nearest Neighbors) 또는 가장 유사한 개체 k로 제한됨
          + 벡터의 트레이닝 세트를 인코드하는데 많은 시간이 걸릴수 있으므로, DB와 같은 곳에 캐시하고 그곳에서 k-NN 쿼리를 실행하는 것이 좋음
          + 시맨틱 검색을 위해 쿼리할 준비가 된 일련의 벡터들을 가지는 것이 보통 사용자에게 더 나은 경험을 제공하므로 ""벡터 데이터베이스""의 필요성이 대두
     * 벡터 저장은 PostgreSQL에는 새로운 것이 아님
          + 실제로 PostgreSQL은 여러차원의 데이터(예: matrix)를 저장 가능하기 때문에 잘못된 이름임
          + 기본적으로 PostgreSQL의 배열에는 두 배열 사이의 ""거리"" 계산과 같은 벡터를 위한 기능이 제한적으로 포함되어 있긴 함
          + 스토어드 프로시저를 작성할수 있찌만 개발자에게 좀 더 작업이 필요함
     * 다행이 cube 데이터 타입은 이런 제한을 극복함
          + cube는 20년 이상 사용되었으며, 고차원 벡터에 대한 작업을 수행할 수 있게 설계됨
          + cube에는 유클리드 거리를 포함하여 벡터 유사성 검색에 사용되는 대부분의 일반적인 거리 함수를 포함
          + GiST 인덱스를 이용하여 효율적인 K-NN 쿼리도 수행 가능
          + 하지만 cube는 100차원의 벡터 까지만 저장가능하며, 최신 AI/ML 시스템은 그 이상의 차원을 요구함

pgvector: PostgreSQL에서 벡터를 저장하고 검색하기 위한 오픈 소스 확장

     * pgvector를 사용하면 벡터를 저장하고 다양한 거리 메트릭(유클리드, 코사인, 내적 등)으로 k-NN 쿼리 수행 가능
     * 현재 pvector는 벡터 인덱싱의 IVR FLAT 메소드를 구현한 한개의 인덱스 ivfflat 와 함께 제공
     * 인덱스된 벡터 데이타를 쿼리하는 것은 일반 데이터를 쿼리하는 것은 다를 수 있음
     * 고차원 벡터에서 가장 가까운 이웃 검색을 수행하는 비용때문에 많은 벡터 인덱싱 방법은 정답에 ""충분히 가까운"" ""대략적인"" 답을 찾음
     * 이것은 ""ANN(Approximate Nearest Neighbor)"" 검색 분야로 이어짐
     * 사람들이 ANN 쿼리에 대해서 보는 두가지 차원은 성능과 ""recall""(관련된 결과가 리턴되는 백분률) 사이의 균형
          + ivfflat 을 예로 보면, ivfflat 인덱스 생성시 몇개의 리스트를 포함할지 결정함
          + 각 리스트는 ""중심""을 나타내며, 이 중심은 k-means 알고리듬으로 계산됨
          + 모든 센터가 결정되면, ivfflat은 각 벡터가 가장 가까운 센터를 결정하고 그걸 인덱스에 추가함
          + 벡터 데이터를 쿼리할때가 되면, ivfflat.probes 변수에 따라 얼마나 많은 센터를 체크해야할지 결정함
          + 여기서 ANN 성능/리콜 트레이드오프를 볼 수 있음. 더 많은 센터를 방문할때마다 더 정확한 결과를 내지만, 성능이 저하됨

PostgreSQL에서 벡터를 더 잘지원하기 위한 다음 단계

     * JSON 타입을 공식 지원했던 PostgreSQL 9.2 버전때 처럼, 벡터 데이터를 PostgreSQL에 저장하는 방법의 초기 단계에 잇음
     * PostgreSQL 과 pgvector는 이미 좋지만, 훨씬 더 좋아질 것
     * pgvector는 이미 일반적인 AI/ML 데이터 사례들을 처리 가능. 많은 사용자가 이미 배포하여 사용중
     * 다음 단계는 개선 및 확장을 돕는 것이며 대부분 이미 진행중
          + 더 많은 병렬화를 추가
          + 2천개 이상의 차원이 있는 벡터에 대한 지원
          + 계산 속도를 높이기 위해 하드웨어 가속 활용
     * PostgreSQL을 벡터 ""데이터베이스""로 사용하는 것에 많은 기대가 있음
     * JSON의 역사에서 볼 수 있듯이 PostgreSQL 커뮤니티는 확장가능하고 안전한 방식으로 지원할 방법을 찾을 것임

   파인콘과 같은 벡터 데이터베이스가 있는 상황에서 왜 PostgreSQL에 기대가 있을까 궁금합니다. @@

   제 경험으로는 PostgreSQL이 접근성이 가장 좋았습니다.

   파인콘이나 크로마디비 혹은 위비에이트 같은것들을 사용할때는 각 데이터베이스를 사용할수 있게 표준화 되어 있지 않았습니다.

   즉, 데이터베이스마다 서로 다른 sdk를 사용해야했고, 그 사용법도 달라서 코드를 데이터베이스마다 새로 만들어야했습니다. 또한 공식 sdk가 제공하는 언어들이 부족해서, 언어를 바꿔야하기도 했습니다.

   물론 PostgreSQL에서 벡터를 사용하려고 해도 비슷하긴 하지만 적어도 기존의 SQL문법에서 약간의 지식만 더하면 되니 접근이 쉬웠습니다.

   현재 벡터 데이터베이스의 속도를 비교해봤을때 PostgreSQL이 상당히 느린편인데요. 얼른 좀 업그레이드 되면 좋겠네요. ㅎㅎ

   ""다 지원되는 DB 하나만 설치/관리하면 편하다"" + ""다른 기능과의 연동이 쉽다"" 정도 아닐까요.
   인스턴스 늘어나면 점점 귀찮아지더라고요..

   아하 이해했습니다.
   레디스가 이것저것 붙이는 것도 그런 이유군요. 끄덕끄덕

   기승전...텐서...

   글쓴이인 Jonathan Katz는 PostgreSQL Core Team에 소속되어 있습니다.

   범용성은 높겠지만 결국 속도가 관건 아닐까 싶습니다.
   쌩(?) 벡터db들에 비해 못봐줄정도로 느릴거 같은데....
"
"https://news.hada.io/topic?id=9552","처음으로 관측된 몬스터 중력파","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            처음으로 관측된 몬스터 중력파

     * 새로운 기술을 사용하여 펄서를 이용한 중력파가 감지되었습니다.
     * 이 중력파는 2015년에 감지된 것보다 훨씬 크고 강합니다.
     * 이 중력파는 서로 공전하는 원거리 은하의 초대질량 블랙홀 쌍에서 나오는 것으로 보입니다.
     * 다수의 협력이 유사한 결과를 보고하여 데이터를 모아 단호한 결론을 도출했습니다.
     * 확인되면, 이 발견은 이 새로운 현상에 대한 수십 년간의 연구와 연구를 이끌 것입니다.
     * 중국의 500m 구경 구면 망원경의 민감도로 인해 단 3년의 데이터로 신호를 감지할 수 있었습니다.
     * 펄서는 중력파의 존재를 나타내는 신호의 도착 시간의 약간한 변화를 감지하기 위해 시계로 사용됩니다.
     * 중력파의 특징인 헬링스-다운스 곡선이 처음으로 관측되었습니다.
     * 이 발견은 수천 개의 초대질량 블랙홀 쌍과 그들의 최종 병합의 존재를 입증합니다.
     * 레이저 간섭계 우주 망원경 (LISA) 미션은 이러한 병합에서의 신호를 우주에서 감지할 수 있을 것입니다.
     * 궁극적인 목표는 우리 은하에 가까운 개별 초대질량 블랙홀 이진체를 감지하는 것입니다.
     * 빅뱅으로부터의 잔여 중력 잡음과 같은 이러한 파의 다른 가능한 기원은 배제할 수 없습니다.

        Hacker News 의견

     * 물리학자들, 중력파의 탐지와 연구에서 중요한 진전을 이룸
     * LIGO와 LISA, 중력파의 존재를 강력히 입증한 두 프로젝트
     * 중력파는 맨눈으로는 보이지 않지만, 통과할 때 입자들의 압축과 팽창을 일으킬 수 있음
     * 이중 흑홀 근처에서 중력파를 타고 서핑할 수 있는 가능성에 대한 추측
     * 중력파는 그들의 중력에 의해 물체가 떨어지는 속도에 약간의 변화를 일으킬 수 있음
     * 과학자들, 펄서가 방출하는 라디오 신호에 중력파의 영향을 측정하여 중력파의 존재와 특성을 추론함
     * 중력파의 성질과 특성에 대한 지속적인 연구와 논의 진행 중
     * 중력파의 진폭과 먼 펄서까지의 거리에 미치는 영향에 대한 관심 있는 주제
     * 중력파에 관한 추가 자료와 논의가 더 깊이 탐구할 수 있음
"
"https://news.hada.io/topic?id=9514","심해 탐사 로봇심해 탐사 로봇 (2019)

     * 바다의 심연과 그곳에서 살아가는 생물을 탐구하는 기사입니다.
     * 인간이 스쿠버 다이빙으로 다녀온 가장 깊은 깊이는 332미터입니다.
     * 많은 심해 생물들은 생물광을 통해 스스로 빛을 만들어 대처합니다.
     * 나르왈은 먹이를 찾아 332미터 깊이까지 하루에 최대 15번 다이빙합니다.
     * 일본 거대게는 다리 폭이 최대 3.8m인 알려진 가장 큰 게입니다.
     * 가죽등에 거북은 가장 오래된 바다거북 종입니다.
     * 거대 오어피쉬는 최대 11m까지 자랄 수 있습니다.
     * 6갈상어는 낮에는 깊은 물에서, 밤에는 얕은 물에서 시간을 보냅니다.
     * 망원경 문어는 거의 완전히 투명하며 독특한 돌출 눈을 가지고 있습니다.
     * 뱀파이어 오징어는 얕은 물에서 떨어지는 유기물인 해양 눈사태를 먹습니다.
     * 머리 없는 닭 물고기는 날개 모양의 지느러미를 가진 해삼입니다.
     * 거대 오징어는 최대 10미터에 이르는 크기로 알려진 가장 큰 오징어 종입니다.
     * 오렌지 러피는 최대 200년까지 살 수 있습니다.
     * 심해 생물들은 식사의 희소성에 적응하였으며, 어느 한 거대한 독감류는 5년간 식사를 하지 않았습니다.
     * 많은 심해 종은 더 깊어질수록 스펙트럼에서 가장 먼저 사라지는 색인 빨강색을 위장색으로 사용합니다.
     * 고블린 상어는 1억 2,500만년 전부터 존재한 계통의 유일한 생존 종으로 ""살아있는 화석""으로 알려져 있습니다.
     * 바다 천사는 날개를 사용하여 자신을 추진하는 멋진 바다 달팽이입니다.
     * 비늘발 달팽이는 발에 있는 철 판과 황화철로 만든 철 껍질에서 이름을 얻었습니다.
     * 큐비에 지느러미고래는 가장 깊이 다이빙하는 포유류입니다.
     * 1912년 4월 14일, 타이타닉호는 3,800미터 깊이의 최종 안식처로 가라앉았습니다.
     * 팟코기는 영하 온도에서 얼지 않도록 조직 내에 항동결 단백질을 가지고 있습니다.
     * 메가마우스 상어는 가장 크게 자라는 상어 종 중 하나로, 일부는 7미터까지 자랄 수 있습니다.
     * 하달존은 바다의 가장 깊은 곳으로, 챌린저 딥이 가장 깊은 지점입니다.
     * 인간은 1960년 챌린저 딥에 도달하여 바다의 최하점에 도달한 최초의 인간이 되었습니다.
     * 삶은 상상할 수 없는 환경에서도 살아남을 수 있습니다. 이는 이러한 깊이에서도 마찬가지입니다.

        Hacker News 의견

     * 해양의 깊이는 놀라울 정도로 깊으며, 그 깊이에서 생명체가 존재할 수 있는 능력은 놀랍습니다.
     * 육지 동물과 수생 포유류는 각각 수백 미터와 수천 미터를 다이빙할 수 있으며, 상어와 같은 대형 생물은 밤중층의 상부 및 중간 지역에서 편안하게 생활할 수 있습니다.
     * 수백 미터 이상의 깊은 곳에서 다이빙하는 극한적인 적응력은 이 능력을 선택한 혁명적인 압력에 대한 질문을 던집니다.
     * USS 새뮤얼 B. 로버츠는 USS 존스턴을 뛰어넘어 지금까지 알려진 가장 깊은 난파선입니다.
     * 만난 다양한 생물들을 클릭하여 위키백과 기사를 얻을 수 있다면 스크롤링 경험은 더욱 좋아질 것입니다.
     * 해양에서 수직으로 이동하면 수백 미터만에 다른 세계에 자신을 발견할 수 있습니다.
     * 트리에스테는 상단에 가벼운 물질의 탱크가 있어 장비의 부력을 조절하고, 사람들은 바닥에 작은 공에 앉아 있었습니다.
     * 챌린저 딥으로 가는 탐험가들은 창문이 깨진 후에도 다이빙을 계속한 만큼 강인한 사람들이었습니다.
     * 황제와 왕들을 위한 유사한 스크롤링 경험을 만드는 것에 관심이 있으며, 깊은 바다 경험의 창조자는 다른 재미있는 프로젝트를 가지고 있습니다.
     * 나르왈과 펭귄과 같은 공기를 마시는 동물들이 해양의 놀라운 깊이에서 발견되었습니다.
     * 지금까지 알려진 가장 깊은 난파선은 깊이 6,895 미터에 위치한 USS 새뮤얼 B. 로버츠입니다.
     * 해양의 극한 깊이에서 생명체가 존재하는 것은 유성 내부에서도 생명체를 발견할 가능성을 제기합니다.
"
"https://news.hada.io/topic?id=9522","대기질 모니터링의 숨겨진 비용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            대기질 모니터링의 숨겨진 비용

     * 대형 대기질 모니터 제조업체 중 하나가 무료 데이터 요금제를 변경하여 고객들에게 유료 요금제로 업그레이드를 강요하고 있습니다.
     * 이러한 추세는 여러 제조업체에서 관찰되어 고객들에게 혼란을 야기하고 있습니다.
     * 대기질 모니터 소유의 숨겨진 비용은 초기 하드웨어 및 구독료를 초과합니다.
     * 일부 제조업체는 소스 모듈 비용보다 높은 가격에 판매되는 독점적인 센서 모듈을 사용하여 고객들이 더 저렴한 대체품을 구할 수 없도록 합니다.
     * 생태계 락인은 일부 제조업체에서 모니터가 다른 서버로 데이터를 보내지 못하도록 하여 그들의 생태계에 의존하게 만드는 문제입니다.
     * 대기질 모니터의 수명과 수리 가능성은 다양하며, 일부는 몇 년 후에 고장나고 수리하기 어렵습니다.
     * 대기질 데이터의 소유권은 종종 모호하며, 일부 제조업체는 자체 센서로 수집된 데이터의 소유권을 주장합니다.
     * 대기질 데이터는 다양한 방식으로 수익화될 수 있으며, 데이터 소유에 관한 약관은 항상 명확하지 않습니다.
     * 자금 조달이 없는 스타트업인 AirGradient는 지속 가능성과 고객에 대한 정직성에 초점을 맞추어 다른 모니터 제조업체에게 모범을 제시합니다.
     * 새로운 대기질 모니터를 찾을 때, 데이터 소유권, 수익화, 수리 가능성 및 공공 저장소와의 데이터 공유에 관해 질문하는 것이 중요합니다.
     * AirGradient는 쉽게 조립할 수 있으며 정확하고 저렴한 DIY 대기질 키트를 제공합니다.

        Hacker News 의견

     * AirGradient는 저소득층 지역을 위한 저렴한 대기질 모니터링에 초점을 둔 회사입니다.
     * 그들은 대기질 디자인을 오픈소스로 공개하고 NGO 및 대학과 협력하고 있습니다.
     * 현재 그들은 전 세계 공동 위치 테스트 프로그램을 운영하며 추가 파트너를 찾고 있습니다.
     * 집 주변의 대기질을 개선하기 위해 나무 심기나 식물 재료로 만든 필터 사용과 같은 개인의 대기질 개선 방법에 대한 질문이 있습니다.
     * 사용자가 자신의 동네에서 대기질 센서를 작동시키는 경험과 데이터를 추적하고 분석하는 계획을 공유합니다.
     * 다른 사용자는 대기질 모니터링을 위한 완성된 솔루션으로 Airthings를 추천합니다.
     * 대기질이 나쁜 지역에서 살면서 건강에 미치는 영향을 이해하는 것에 대한 관심이 있습니다.
     * EU에서 AirGradient 키트를 어디서 구할 수 있는지와 다른 오픈 대안이 있는지에 대한 질문이 있습니다.
     * 데이터 접근 및 통합에 제한이 있는 것으로 인해 사용자가 대기질 모니터 선택을 재고하고 있습니다.
     * Awair를 포함한 다른 대기질 모니터링 제조업체에 대한 토론이 진행 중입니다.
     * 사용자는 자체 대기질 모니터링 스테이션을 설치하고 데이터 공유 옵션에 대해 궁금해합니다.
     * 독일에는 대기질 센서를 만들고 데이터를 지도에 시각화하는 지역 공동 오픈 데이터 랩이 있습니다.
"
"https://news.hada.io/topic?id=9438","Milk-V Duo, $9 RISC-V 컴퓨터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Milk-V Duo, $9 RISC-V 컴퓨터

     * SOPHGO CV1800B 칩
     * 1 Ghz 듀얼코어 RISC-V CPU
     * 64MB 램
     * 추가 애드온보드로 10/100Mbps 이더넷 지원
     * Linux/RTOS 실행 가능

   좋네요! 램이 충분하고 속도도 좋고 듀얼코어고! 단지 무선랜으로 확장모듈이 나오면 좋겠습니다.

   https://www.raspberrypi.com/products/raspberry-pi-zero/

   https://www.adafruit.com/product/2885

   아직 RISC-V 보드가 ARM 계열 라즈베리파이의 가격(10$)과 성능을 못 따라가는 것 같아 아쉽네요.
   하지만 세상이 또 금방 변할수도 있을 것 같다는 생각도 듭니다.

   BeagleV, 리눅스용 RISC-V 싱글보드 컴퓨터
   하드웨어 차이가 있긴 하지만, Milk-V가 많이 싸네요

   비슷한 Pine64 의 Ox64도 있습니다 https://wiki.pine64.org/wiki/Ox64
"
"https://news.hada.io/topic?id=9450","미국 전기차가 테슬라 충전규격(NACS)을 채택하는 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    미국 전기차가 테슬라 충전규격(NACS)을 채택하는 이유

    1. 압도적 설치대수 : 미국내 초고속충전기의 약 2/3차지
    2. 저렴한 설치비용(경쟁업체의 1/5): $43k vs. $200k
    3. 간편한 충전과 결제
    4. 작고 가벼운 충전케이블
    5. 충전기 생산 및 설치속도
    6. 대규모설치+편의시설 제공
    7. 테슬라 자체 태양광발전+메가팩(ESS)과 결합 운영
    8. 유지보수: 슈퍼차저 정상가동율 99.95%

   중국식 표준에 대항하기 위한 의도도 있을 것 같네요

   NACS를 채택한 전기차들은 결국엔 슈퍼차저 이용도 가능하게 될걸로 이해하고 있습니다. 궁금한게 테슬라 입장에서 이런 결정을 하게된 이유가 뭘까요? 현재 시점에서보면 전기차를 선택할때 슈퍼차저 때문에 테슬라를 사는 사람도 정말 많을것 같거든요. 그 네트웍을 타사 차량에 개방한다면, 그러한 이점이 사라지는건데, 어떤 이유에서 이런 결정을 했는지 궁금하네요.

   테슬라 입장에선 슈퍼차저에서 발생하는 충전 수수료보다는 압도적인 충전인프라를 등에업고 테슬라 차량을 더 판매하는게 맞을것 같은데말이죠.

   슈퍼차저 오픈 은 바이든 작품이라는 해석이 있더군요

   테슬라 입장에서는 경쟁사의 충전문제를 해결해줘서 경재사를 키워주는 꼴이 되니, 자발적으로 의사결정한 것은 아니고( 머스크도 이 결정이 테슬라에게 장기적으로 득이 되는지 모르겠다고 말했다네요 )

   바이든이 미국내 충전소 확충을 정부에서 보조금으로 퍼부을려고 하는데, 외국 기업이 그 수혜를 받아가는 것은 못마땅하니, 충전인프라 1위인 슈퍼차저가 오픈되어서 다른 미국 기업들도 슈퍼차저에 참여해서 모두 똘똘뭉치면, 바이든 정부의 보조금은 슈퍼차저 연합이 대부분을 받아갈거라, 자국기업 보호를 할 수 있어서.

   바이든이 그렇게 머스크한테 딜(인지 강요인지)을 던졌을 거라는 해석이네요

   그런얘기도 있군요!? 그 동안 테슬라가 슈퍼차저에 쏟아부은 리소스를 생각한다면, 이건 테슬라한테 너무 큰 손해로 보이네요. 전략적으로 매우 큰 변화인데, (그 썰이 사실이라면) 흥미롭네요. 미국도 기업운영에 있어 정부의 입김에 큰 영향을 받는군요...

   Rivian, Tesla의 NACS 충전규약에 동참
   Ford 전기차 소유자들도 내년부터 미국내 테슬라 슈퍼차저 네트워크 이용 가능
   GM도 Tesla 슈퍼차저 네트워크 이용 예정
   테슬라, 자사의 충전 표준 규약 NACS를 공개
"
"https://news.hada.io/topic?id=9513","페덱스, 중고 밴 차량에서 역사상 최대 규모의 주행거리 조작 사기 혐의 제기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               페덱스, 중고 밴 차량에서 역사상 최대 규모의 주행거리 조작 사기 혐의 제기

     * 페덱스, 중고 밴의 속도계를 교체하고 정확하지 않은 주행거리로 판매한 혐의로 소송 직면
     * 이번 소송은 역사상 가장 대규모의 주행거리 조작 사기로 페덱스를 비난
     * 사업주들은 밴을 최상의 가격에 구매하며 여전히 새 것 같다고 생각했지만, 실제 주행거리는 때로 속도계 표시의 4배 이상이었다.
     * 캘리포니아, 테네시, 뉴저지, 플로리다, 버지니아의 소비자들은 모두 페덱스의 중고 차량에서 주행거리 조작을 발견했다.
     * 페덱스는 이러한 혐의를 부인하며, 이번 소송을 열심히 방어할 것이다.

        Hacker News 의견

     * IPO 경험이 있는 창업자/CEO는 대표적인 소송으로부터 기사가 기반하고 있으며, 언론인들은 종종 과장하여 보도한다는 점을 감안하여 회의적인 태도를 취하도록 권장합니다.
     * 경영진이 거짓말, 부정행위, 도난을 한다는 이야기는 의심해야 하며, 공개 회사의 준수 수준이 높기 때문에 중고 밴 판매에서 약간의 이익을 얻는 것보다 사기로 인한 감옥 생활 위험이 그만큼 높지 않습니다.
     * 사기가 있었다면, FedEx 경영진의 공모보다는 비경영진 또는 작은 리스 회사에서 일어난 것일 가능성이 높습니다.
     * 롤백된 주행거리로 판매된 차량은 8만 마일 이하에서 엔진 및 변속기 재건이 필요하며, 매우 수상합니다.
     * 돈을 버는 데에 사람들이 할 수 있는 한계가 있었지만, 그 한계가 사라진 것 같습니다.
     * 중고 트럭을 구매할 때 실제 주행거리를 얻기 위해 컴퓨터에 연결하지 않는 이유는 분명하지 않습니다.
     * FedEx가 주장되는 계획에 가담했는지 여부에 대한 의심이 있으며, 제시된 이야기보다 더 많은 것이 있을 수 있습니다.
     * 사기가 일어나지 않았다면 왜 모든 주행거리계가 교체되었는지는 분명하지 않습니다.
     * 책임은 FedEx의 하도급업체에 있을 수 있으며, 더 적은 마일로 반납하면 혜택을 받을 수 있습니다.
     * UPS는 배송용 밴을 맞춤 제작하고 수명이 다한 후 폐기합니다.
"
"https://news.hada.io/topic?id=9463","DevPod - 오픈소스 Codespaces 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      DevPod - 오픈소스 Codespaces 대체제

     * 개발 환경을 위한 Terraform
     * 클라우드/쿠버네티스/로컬 도커 같은 다양한 인프라에 개발 환경을 빠르게 구축해 주는 Client-Only 도구
     * GitHub Codespaces 와 VSCode DevContainers 가 사용하는 DevContainer 표준을 그대로 사용
     * 맥/윈도우/리눅스 용 DevPod Desktop 제공
     * VSCode, Jetbrains 등 IDE를 지원하며, 다른 에디터에서도 SSH로 손쉽게 접속 가능

   큰 회사일수록 개발자들을 위한 managed environment 구축에 힘을 많이 쓰는데, 꽤나 편리한 도구가 될 것 같네요.
"
"https://news.hada.io/topic?id=9456","GPT Engineer - 개발하고 싶은걸 말하면 알아서 구축","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GPT Engineer - 개발하고 싶은걸 말하면 알아서 구축

     * 프롬프트 기반으로 전체 코드를 생성하는 오픈소스
     * 개발하고 싶은걸 말하면, AI가 일부 설명을 요청한 다음 그걸 기반으로 빌드
     * AI 단계들을 더 추가 가능
     * AI 와 사람간의 빠른 핸드오버
     * 모든 단계들은 저장되어 재작동 가능
     * Identity에 어떤 개발자적 특징을 가질지 프롬프트로 지정: 코드 생성, 철학, 스펙, 유닛테스트, QA 등

   gpt 구독 끊을까했더니... api 때문에 좀 더 유지해야겠네요...
"
"https://news.hada.io/topic?id=9518","Mailpit - 개발자를 위한 이메일 테스팅 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Mailpit - 개발자를 위한 이메일 테스팅 도구

     * 멀티 플랫폼 이메일 테스팅 도구 & API
     * Go로 만든 싱글 바이너리. 설치 필요 없음
     * SMTP 서버로 동작하며, 모든 캡처된 이메일 보기 가능인 웹 인터페이스 내장
     * 모바일/태블릿용 미리보기 토글 가능
     * 고급 메일 검색, 메시지 태깅
     * 웹소켓을 이용한 실시간 웹 UI 업데이트
     * 설정 가능한 자동 이메일 Pruning(최근 500개의 이메일만 저장하는게 기본 값)
     * 이메일은 임시 저장 또는 영구저장 가능
     * 빠른 SMTP 처리(초당 70~100개의 이메일 처리)
     * SMTP 릴레잉/ 메시지 릴리즈
     * SMTP with STARTTLS & SMTP 인증
     * MailHog에서 영감을 받았으나 훨씬 빠름(포크하려다 속도 문제로 아예 재작성)

   mailfit은 mailhog에서 inspired했고, mailhog는 mailcatcher에서 inspired했고, ... 거슬러거슬러 sendmail까지...
"
"https://news.hada.io/topic?id=9491","구글 딥마인드 CEO 데미스 하사비스, 다음 알고리즘이 ChatGPT를 능가할 것이라 말해 | WIRED","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       구글 딥마인드 CEO 데미스 하사비스, 다음 알고리즘이 ChatGPT를 능가할 것이라 말해 | WIRED

     * 구글 딥마인드는 알파고에서 사용된 기술과 언어 능력을 결합한 새로운 AI 시스템인 Gemini을 개발 중입니다.
     * Gemini은 아직 개발 중이며 수십억 또는 수백억 달러의 비용이 들 수 있습니다.
     * Gemini은 OpenAI의 ChatGPT보다 더 뛰어나고, ChatGPT가 가져온 경쟁적 위협에 대한 구글의 대응에 중요한 역할을 할 것입니다.
     * 딥마인드의 강화학습 경험은 연구원들이 Gemini에 새로운 능력을 부여할 수 있게 해줄 것입니다.
     * 딥마인드는 최신 AI 연구에서 대기업 외 전문가들이 배제되는 문제를 해결하기 위해 시스템을 외부 과학자들에게 더욱 접근 가능하게 만들 수도 있습니다.
     * 딥마인드의 CEO인 데미스 하사비스는 AI가 가장 유익한 기술이 될 가능성이 있지만, 보다 뛰어난 AI의 위험을 결정하기 위해 더 많은 연구가 필요하다고 믿습니다.
"
"https://news.hada.io/topic?id=9452","OpenLLM - LLM을 프로덕션에서 운영하기 위한 오픈 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  OpenLLM - LLM을 프로덕션에서 운영하기 위한 오픈 플랫폼

     * 다양한 종류의 LLM을 지원하여 추론, 배포 가능
          + StableLM, Falcon, DOlly, Flan-T5, ChatGLM, StarCoder,..
     * 하나의 명령으로 LLM을 RESTful API 또는 gRPC로 서빙
          + WebUI, CLI, Python/Javascript Client 또는 모든 HTTP Client에서 호출
     * LangChain, BentoML, HuggingFace 지원 내장
     * LLM 파인 튜닝 지원 예정
"
"https://news.hada.io/topic?id=9536","Wolfi - 컨테이너/클라우드 시대를 위해 설계된 커뮤니티 리눅스 OS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Wolfi - 컨테이너/클라우드 시대를 위해 설계된 커뮤니티 리눅스 OS

     * 클라우드 네이티브 시대를 위해 설계된 간소화된 배포판
          + 자체 커널이 없는 대신 컨테이너 런타임과 같은 환경에 의존
          + Separation of Concern을 통해 다양한 환경에 적용 가능
     * 모든 패키지에 고품질의 빌드타임 SBOM을 제공
     * 각 패키지는 미니멀 이미지를 지원하기 위해 세분화되고 독립적으로 설계
     * apk 패키지 포맷을 사용
     * 완전 선언적이고 재현 가능한 빌드시스템
     * glibc 와 musl을 지원하도록 설계
"
"https://news.hada.io/topic?id=9554","이더넷(Ethernet) 50주년을 축하합니다 | APNIC 블로그","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 이더넷(Ethernet) 50주년을 축하합니다 | APNIC 블로그

     * 이더넷(Ethernet)의 50주년을 축하하는 기사, 컴퓨터 네트워킹에서 중요한 기술
     * 이더넷은 컴퓨터가 로컬 영역 네트워크(LAN)를 통해 서로 연결하고 통신할 수 있는 시스템
     * 1973년 로버트 메트캘프와 그의 Xerox PARC 팀이 발명
     * 이더넷은 시간이 흐름에 따라 진화하여 현재 세계에서 가장 널리 사용되는 네트워킹 기술이 되었다.
     * 인터넷의 성장과 현대 컴퓨터 네트워크의 발전에 큰 역할을 한다.
     * 이 기사는 이더넷이 기술 산업에 미친 영향과 오늘날의 지속적인 중요성을 강조한다.
     * 이더넷의 속도 향상과 대역폭 증가와 같은 연구 개발로 이루어진 발전과 개선에 대해 논의한다.
     * 이 기사는 또한 5G 네트워크와 사물 인터넷(IoT)의 발전에 이더넷이 가질 수 있는 잠재적인 역할에 대해 언급한다.
     * 전반적으로, 이 기사는 이더넷의 지속적인 유산과 기술 분야에서의 중요성에 대한 경의를 담고 있다.
"
"https://news.hada.io/topic?id=9550","OpenAI, ChatGPT '업무용 개인 비서'를 출시할 계획으로 마이크로소프트와 라이벌 구도를 형성할 수도 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     OpenAI, ChatGPT '업무용 개인 비서'를 출시할 계획으로 마이크로소프트와 라이벌 구도를 형성할 수도

     * CEO 샘 알트먼은 OpenAI 개발자들에게 ChatGPT를 ""슈퍼스마트한 업무용 개인 비서""로 만들고 싶다고 얘기함
     * 개인과 직장에 대한 지식을 바탕으로 이메일/문서의 초안을 해당 사용자의 스타일로 작성하고 비즈니스에 대한 최신 정보를 제공하는 등의 작업이 가능
     * 이 비서 기능은 비즈니스 파트너이자 투자자인 Microsoft 및 OpenAI 고객인 Salesforce 같은 회사와 충돌 가능
     * 기업들은 AI를 이용한 제품으로 수익을 창출하는 초기단계에 있음
          + Microsoft는 이미 OpenAI의 LLM을 사용하는 Office 365 고객에게 40%의 프리미엄을 부과중
     * 알트먼은 이번달 초에 해당 비서 제품에 관련된 주요 인물을 영입했음
          + 페이스북 메신저의 첫번째 PM을 담당했고, 페이스북에서 나와서는 Uber와 Airtable의 제품 리드였던 Peter Deng을 소비자 제품 부사장으로 채용()
          + Deng은 LinkedIn 포스트에서 그의 롤에 대해 ""사람들을 더 생산적이고 창의적으로 만드는 보조 기능"" 을 만드는 것이라고 밝힘 \
     * 만약 OpenAI가 개인 ChatGPT 비서를 개발한다면, Microsoft 와 또다른 경쟁에 접어들게 됨
"
"https://news.hada.io/topic?id=9525","빠른 기계, 느린 기계","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              빠른 기계, 느린 기계

     * Windows NT 3.51 을 실행하는 예전 컴퓨터와 Windows 11을 실행하는 새 컴퓨터의 속도를 비교한 비디오를 트위터에 공개했는데 꽤 많이 바이럴 되었음
          + 둘다 같은 동작을 함. 코맨드 프롬프트, 탐색기, 노트패드, 페인트 앱을 열고 닫는 것
          + 오래된 컴퓨터에서는 즉시 실행되지만, 새 컴퓨터에서는 느림
     * 현대 컴퓨터 사용자 인터페이스 지연은 매우 나쁘고 악화되고 있음
     * 비교에 사용된 하드웨어들이 데스크탑 과 노트북(서피스고)로 불공정하다는 얘기가 있음
     * K7-600 머신에 윈도우 2000을 설치하고, 맥프로 2013(6코어 Xeon + 32GB)에 윈도우 11을 설치하여 다시 비교했지만 결과는 비슷

컴퓨터의 발전

     * 2000년대 이후 많은 방향에서 발전했음 : 놀라운 그래픽과 고해상도 모니터, 초고속 네트워크, 실시간 비디오 편집등
     * I/O 쪽에서도 많이 발전해서 예전 시스템에서 디스크 I/O는 항상 가장 약한 부분 이었음
          + 플로피는 불안정하고 느렸고, CD/DVD 는 좀 더 믿을만 했지만 역시 느리고, HDD는 많은 것의 병목이었음
          + 랜덤 I/O는 물리적 한계에 도달하기 시작
     * SSD가 출현하고 데스크탑에도 사용되면서 이 랜덤 I/O 문제를 해결하기 시작
          + 갑자기 모든게 빨라졌음. 부팅, 게임 로딩, 수많은 파일이 있는 폴더 열기,..
     * 새 하드웨어 설치도 편해지고, 무선 연결이 보편화 되고, 텍스트/앱들의 국제화(Unicode는 쉽지도 저렴하지도 않은 것은 인정)
     * 많은 부분에서 상황이 개선되고, 어느때보다 힘을 가지게 됨. 그렇지 않았다면 2000년대에는 상상도 못했을 작은 휴대폰에서 ML을 이용한 사진처리 같은 작업을 수행할 수 없었을 것

끔찍한 지연시간

     * 하지만 이런 발전중 어느것도 UI 레이턴시가 오늘날처럼 극도로 느린 이유를 설명하지 못함
     * 하드웨어의 발전은 이런 상황을 개선시켰어야함

예제

     * 메모장은 최근까지 네이티브 앱이었고 빨리 실행되었는데, UWP 앱으로 재작성 되면서 느려졌음. 엄청 느려졌지면 여진히 기능은 부족함. 사용자에게 아무런 이득이 없는 속도 저하
     * 윈도우 터미널은 예전보다 훨씬 좋지만, 눈에 띌 정도로 무거움. 파워쉘을 추가하면 최고급 하드웨어를 사용하지 않는 이상 새 터미널창 뜨는데 몇초가 걸릴수 있음
     * MacOS는 윈도우보다는 낫지만, 역시 이슈가 있음. 설정 창 여는 속도가 예전 머신이 훨씬 빠름
     * 리눅스는 아마도 이런 이슈로부터 가장 적게 영향 받음. 11년전 PC에서도 2023/4월에 릴리즈된 Fedroa Linux 38은 잘 실행됨. 하지만 이것도 착각일뿐, Linux 전용으로 개발되지 않은 최신앱들을 실행하면 앱 시작시간이 느려지고, 일반적으로 성능이 저하됨
     * 내가 가장 큰 충격을 받은 것은, 2009년에 구글에 입사했을때였음
          + 당시 구글 검색과 Gmail은 뛰어난 성능을 자랑하며 타의 모범이 되었음
          + 하지만 내부에서 사용하는 인하우스 커맨드 라인 도구들이 얼마나 느린지를 보고 큰 충격을 받았음
          + 그들이 어떤 대가를 치르더라도 웹앱을 끊임없이 밀어붙인 덕분에 오늘날 우리가 처한 상황을 만들었다고 생각함

원인

     * 왜 이 모든일이 벌어졌을까? ""Bloat""라고 말하기는 쉽지만, 정의하기는 어려움
          + Bloat는 정당화 될수 있기 때문: 사람마다 Bloat에 대해서 생각하는게 다름
     * 느리게 만드는 것은 ""우선순위"" 때문임
          + 누구도 게임/영상 트랜스코딩 등 중요한 경우를 제외하고는 더 이상 성능을 우선시하지 않음
          + 사람들(회사)이 우선 순위에 두는 것은 ""개발자 시간""임 : Rust 와 Elctron
     * 네이티브 앱을 각각 개발하는 것은 중복 작업이기 때문에 Electron을 이용함
          + 이용하면 쉽지만, 이게 데스크탑 지연시간에 큰 영향을 줌
          + 1Password나 Spotify 사례처럼 통합된 경험을 주고, 비용을 줄이기 위해 Electron으로 재작성되었음
          + 하지만 비용절감은 회사를 위한 거지, 사용자를 위한게 아님
          + 이 비용절감은 매일 사용하는 우리에게 세금을 부과하는 것
     * 레이턴시를 늘리는 또 다른 결정은 Managed & Interpreted 언어의 대규모 수용
          + JDK/CLR이 장기간 실행되는 프로세스를 최적화는 잘 하지만, 빠른 시작 시간은 그들이 잘 관리하지 못하는 것

1회성 개선사항이 사라졌음(One-off improvements eaten away)

     * 끝으로 하드웨어 발전으로 돌아가 비관적인 얘기를 하고 마무리 하자면
     * SSD가 가져다 줬던 특별한 개선은 일회성 변화였음
          + HDD는 계속 빨라졌지만, 데스크톱에 필요한 빠른 랜덤 I/O를 제공하지는 못했음
          + SSD의 전환은 다른 차원의 개선을 가져왔지만, 이런 이점은 단 한번만 누릴수 있었음
          + 이런 혁신적 경험을 주는 다른 기술은 없음
          + 따라서 이 새 기술이 가져다준 혜택이 부주의한 소프트웨어에 의해 사라지고 나면 우린 원점으로 돌아가게 될 것
          + 물론 SSD는 점점 빨라지고 있지만, HDD 에서 SSD로 바뀔때와 같은 엄청난 차이를 주지는 못함
     * SSD 없는 최신 버전의 윈도우/맥 을 사용해보면 직접 확인이 가능
     * 그래서 애플 실리콘에 대해 걱정하게 됨
          + M1 출시때의 뛰어난 성능, 매우 긴 배터리 수명, 팬소음 없음을 기억하나요?
          + 우리가 부주의한 행보를 계속한다면 이 장점들도 사라질 것이고, 그때가 되면 너무 늦어 버릴 것
     * 기존 애플리케이션에 성능을 보강하는 것은 기술적으로 매우 어렵고, 조직내에서 우선순위를 정하는 것도 거의 불가능함
     * 그럼, 컴퓨터 아키텍트가 다른 혁신적인 기술 변화로 우리를 구할수 있을까? 난 그런 것에 의존하고 싶지 않음. 그런 변화가 가능하지 않을수도 있기 때문이 아니라, 그런 변화가 필요하지 않기 때문

  GN⁺ 가 요약한 버전 (기록을 위해 남겨둡니다)

     * 트위터 스레드가 오래된 컴퓨터와 새로운 컴퓨터의 반응성을 비교한 내용으로 8.8K 좋아요를 받았다.
     * 동영상에서 오래된 컴퓨터의 앱은 즉시 열리지만, 새로운 컴퓨터의 앱은 상당한 지연이 있었다.
     * 하드웨어 발전에도 불구하고 현대 컴퓨터의 사용자 인터페이스 지연이 왜 더 나빠졌는지 저자가 의문을 제기했다.
     * 비교의 결함이 수정되어 같은 결과가 나왔다.
     * 그래픽, 고해상도 모니터, 빠른 네트워크와 같은 기술 발전이 논의되었다.
     * 현대 컴퓨터의 사용자 인터페이스 지연은 매우 나쁘고 악화되고 있다는 주장이 제기되었다.
     * Windows, macOS, Linux에서의 느린 앱이 예시로 제시되었다.
     * 무거운 소프트웨어, 프레임워크, 관리형 언어가 지연 문제의 원인으로 제안되었다.
     * 부주의한 소프트웨어로 SSD의 이점이 상쇄되어 Apple Silicon의 미래에 대한 우려가 제기되었다.
     * 기존 애플리케이션에 성능을 개선하는 것은 기술적으로와 조직적으로 어렵다.
     * 컴퓨터 아키텍트에 따르면 혁명적인 기술 변화가 우리를 구하지 못할 수도 있다.
     * 지연 문제에 대한 원격 작업은 해결책이 되지 않는다.
     * 90년대와 2000년대의 오픈 소스 개발은 이미 완전 분산 및 비동기 작업을 가능하게 했다.
     * 컴퓨터 지연은 적어도 1977년부터 문제였다.
     * Dan Luu가 발견한 지연 면에서 가장 우수한 컴퓨터는 1983년 제품이지만, 현대 작업량에는 대응할 수 없다.

   성능 대신 유지보수를 선택했고, 그 비용을 하드웨어 발전으로 메꾸겠단 생각이 여기까지 온 게 아닐까요.
   2010 맥북에어가 너무 느려졌을 때, 어찌어찌 스노우레퍼드를 깔았는데, 말도 못하게 빠르더군요. 물론 실사용은 하지 않습니다만..

   더 이상 회사가 성능을 우선순위로 두지 않는 다는 말이 와 닿네요.

   하지만 비용절감은 회사를 위한 거지, 사용자를 위한게 아님

   라는 부분이 많은 생각을 하게 되네요.

   감사합니다. 공감하며 읽었습니다.
   윈도우 바탕화면에서 컨텍스트 메뉴를 열면 20년 전이나 지금이나 모래시계를 보며 느리더라구요(처음 이후엔 좀 괜찮지만 너무 거슬려요).
   분명 하드웨어는 빨라지는데, 소프트웨어는 그렇지 못한 거 같습니다.

   비슷한 이야기를 하면서 가벼운 어플리케이션들만(아마도 linux 쪽이었던듯) 모아놓은 사이트를 본거 같은데... 막상 찾아보니 안나오네요 ㅎㅎ

   감사히 읽었습니다.

   뭣이 중헌디?

   WinAPI로만 구현됬던 시절의 UI가 깔끔하고 빠릿했죠.
   요즘은 중구난방 UI 프레임워크들에 무슨 웹 기반 앱들.. 웹 엔진이나 프레임워크 엔진들이 올라갈려면 리소스가 많이 들죠.

   GN⁺ 에 올라온 글인데, AI의 요약으로는 이해하기가 힘든 것 같아서 제가 다시 정리했습니다.

   거봐요 제말이 맞잖아요 ㅎㅎ...

   이세돌이 승리한 그 기분이네요... 우리의 잡시큐리티.... 아직은 괜찮겠죠? ㅠ

        Hacker News 의견

     * 소프트웨어 스택에서 참된 성능을 경험하지 못한 젊은 사용자들
     * 소프트웨어 엔지니어들은 비효율적이며 병렬 컴퓨팅을 무시함
     * 비기술적인 사람들은 느린 컴퓨팅에 신경 쓰지 않음
     * 보안 조치는 데스크톱 앱의 지연 시간에 영향을 줄 수 있음
     * macOS에서 Quartz Extreme과 Metal로 그래픽 성능이 향상됨
     * 속도를 위해 소프트웨어 최적화는 중요함
     * Rust는 학습 곡선이 가파르지 않음
     * 작은 컴퓨팅 성취를 축하하는 것이 중요함
     * 우리의 하드웨어로부터 더 많은 것을 기대해야 함
     * 동적 UI는 성능 저하에 기여함
     * Linux는 저사양 하드웨어에서 빠르게 동작하지만, 크로스 플랫폼 앱은 성능이 나쁨
     * 현대적인 애플리케이션 프레임워크는 앱 시작 시간이 느려지는 원인이 될 수 있음
"
"https://news.hada.io/topic?id=9517","CryptBoard.io - 익명 암호화 웹 클립보드 & 채팅 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                CryptBoard.io - 익명 암호화 웹 클립보드 & 채팅 오픈소스

     * 다중 기기간에 텍스트 메시지 및 파일 전송을 지원
     * 클립보드가 지원되지 않는 가상머신/원격접속 상에서 텍스트/파일 복사용
     * 등록이 필요없는 익명 인증 기능
     * Hybrid RSA+AES 암호화(키는 클라이언트에 저장)
     * 서버로 전송되는 모든 데이타는 클라이언트에서 암호화 되며 서버에서 해독 불가
     * 클라이언트 들은 퍼블릭 키와 사용자 ID를 보내서 각자를 ""리시버 리스트""에 추가
     * 싱글 버튼으로 모든 클라이언트 데이터를 지우고 새로운 세션 시작
"
"https://news.hada.io/topic?id=9453","OpenAI, AI 소프트웨어용 앱스토어 고려중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       OpenAI, AI 소프트웨어용 앱스토어 고려중

     * 다른 비즈니스를 위한 AI 모델을 판매할 수 있는 마켓플레이스
     * OpenAI 모델을 용도에 맞게 파인튜닝하여 판매 가능
          + 온라인 리테일 거래에서 금융사기를 탐지하거나, 최신 정보를 이용하여 특정 시장에 대한 답변이 가능한 모델 등
     * 이는 차후에 혹시 AI 모델 주도권을 잃게 되는 위험에 대한 회피수단이 될수도
     * (앱스토어에) 참여하고 싶어하는/참여할만한 회사들
          + Aquant : 기기 제조사들이 고객에게 유지보수 및 수리에 대한 가이드를 해주는 소프트웨어 개발. 이미 ChatGPT에 자신의 데이터를 추가한 챗봇을 출시
          + Khan Academy : Khanmigo라는 학생과 교사를 위해 개인 튜터처럼 동작하는 ChatGPT 버전을 출시.
          + FiscalNote : 정치 캠페인용 메시지를 작성하기 위해 튜닝된 ChatGPT 챗봇
     * OpenAI CEO는 ChatGPT 플러그인이 아직 인기가 없어서, ""Product-Market Fit""을 가지지 못했다고 밝힌바 있음
"
"https://news.hada.io/topic?id=9428","Mercedes-Benz, 벤츠 차량에 ChatGPT를 이용한 음성 제어 기능 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Mercedes-Benz, 벤츠 차량에 ChatGPT를 이용한 음성 제어 기능 추가

     * 미국내 벤츠 소지자들중 MBUX를 가진 차량(약 90만대)은 6/16부터 ChatGPT 이용 가능
     * 베타로 진행되며 음성 명령으로 참여 ""Hey Mercedes, I want to join the beta programme""
     * Azure OpenAI 서비스를 통하여 ChatGPT를 연동
"
"https://news.hada.io/topic?id=9538","스트라이프 ID에서 영감을 받은 타입 안전한, K-정렬 가능한, 전역적으로 고유한 식별자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           스트라이프 ID에서 영감을 받은 타입 안전한, K-정렬 가능한, 전역적으로 고유한 식별자

     * TypeIDs: UUIDv7를 기반으로 한 Stripe의 API에서 영감을 받은 타입 안전한 확장입니다.
     * TypeIDs는 타입 접두사, 밑줄 구분자 및 26자리의 base32로 인코딩된 128비트 UUIDv7로 구성됩니다.
     * TypeIDs는 타입 안전성, UUID와의 호환성, K-정렬 가능성 및 신중한 인코딩과 같은 이점을 제공합니다.
     * TypeIDs는 다가오는 UUIDv7 표준과 호환되며, 좋은 지역성을 가진 데이터베이스의 주 키로 사용할 수 있습니다.
     * TypeIDs는 Go와 SQL에서 구현되어 있으며, Python, Rust 및 TypeScript에서의 구현이 곧 제공될 예정입니다.
     * 이 기사에서는 TypeIDs를 생성, 해독 및 인코딩하는 명령 줄 도구에 대해 언급합니다.
     * 이 기사에서는 UUIDv7 및 xid, ulid, ksuid와 같은 UUIDv7 대체제와 관련된 작업도 언급합니다.

        Hacker News 의견

     * 접두사 문자열을 잠그고 문서화하는 제안이 제시되었으며, 복합 유형에 대해 단일 구분자를 허용합니다.
     * 식별자의 Go 구현은 테스트가 부족하며, 단위 테스트가 필요합니다.
     * 다른 제안은 Go에서 Google의 UUID 구현과 일치하도록 하여 문자열 대신 구문 분석 함수와 내부 바이트 배열을 사용하는 것입니다.
     * 식별자의 설계 결정은 트레이드오프 사이에서 좋은 균형을 이루고 있다는 칭찬을 받았습니다.
     * 다른 댓글러는 고유 식별자 생성에 대한 자신의 접근 방식을 공유하며, 모음 없이 32진법을 사용하고 체크섬을 추가하는 방법을 사용합니다.
     * 그들은 Crockford 인코딩을 비판하며, 더 효과적이고 간결한 인코딩으로 base 58을 제안합니다.
     * Crockford의 base-32 시스템에 대한 링크가 공유되었으며, ""우연한 음란성""으로 인해 문자 U가 제외되어 혼란스러움을 표시합니다.
     * 댓글러는 ORM에서 ""태그된 ID""의 사용을 공유하며, 복사 및 붙여넣기에 대한 구분 기호로 밑줄을 사용하지 않은 것을 후회합니다.
     * 식별자 구현에서 세부 사항의 중요성이 강조됩니다.
     * UUIDv7이 표준이 되고 라이브러리와 데이터베이스가 기본적으로 지원되기를 원하는 욕구가 언급되었습니다.
     * 데이터베이스에 대한 UUIDv4의 장단점이 논의되었으며, 분산 데이터베이스 애플리케이션에서는 UUIDv4을 선호합니다.
     * 전체 ID를 더블 클릭하여 선택할 수 있는 기능의 유용성이 강조됩니다.
     * 더 큰 키 공간과 정렬 가능한 타임스탬프를 제공하는 대체 ID 생성기인 ksuid가 권장됩니다.
     * ksuid는 대부분의 언어에서 라이브러리를 제공하는 최고의 범용 ID 생성기로 칭찬받으며, UUID v1-7은 낭비적이라고 여겨집니다.
"
"https://news.hada.io/topic?id=9501","llama-tokenizer-js - 브라우저에서 실행되는 LLaMA 토크나이저 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              llama-tokenizer-js - 브라우저에서 실행되는 LLaMA 토크나이저

     * 클라이언트 사이드에서 토큰을 정확하게 계산하기 위해 사용 가능
     * 의존성 전혀없는 하나의 파일로 쉽게 사용 가능
     * 대부분의 LLaMA 기반 모델과 호환
     * 약 2천개의 토큰을 20ms 안에 토큰화 가능
"
"https://news.hada.io/topic?id=9495","존 바니스터 굿나프가 별세하였다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           존 바니스터 굿나프가 별세하였다.

     * 리튬 이온 배터리 공동 발명자이자 2019년 노벨 화학상 수상자인 존 바니스터 굿나프가 101세의 나이로 별세하였다.
     * 굿나프는 컴퓨터용 랜덤 액세스 메모리(RAM) 개발에 중요한 역할을 하였다.
     * 굿나프는 독일 예나에서 미국인 부모를 둔 뒤 예일 대학교에서 수학을 전공하였으며, 제2차 세계 대전 중 미국 육군에 복무하였고, 1952년 시카고 대학교에서 물리학 박사학위를 받았다.
     * 굿나프는 코발트 기반 양극과 티타늄 황화물 시트 내 리튬 저장을 완벽하게 개발하여, 오늘날 거의 모든 사람들의 삶에 영향을 미치는 제품을 만들었다.
     * 굿나프는 텍사스 대학 오스틴 캠퍼스에서 교수로 재직하였으며, 2008년 ""Witness to Grace""라는 자서전을 출판하였다.
     * 굿나프는 학생들에게 친절함, 정직함, 유머감각, 그리고 독특한 웃음으로 알려져 있다.
"
"https://news.hada.io/topic?id=9417","한 건 없는데 퇴근할 시간인 우리를 위한 "딴짓 관리 연습" - 기초편","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                한 건 없는데 퇴근할 시간인 우리를 위한 ""딴짓 관리 연습"" - 기초편

   일하면서 딴짓을 하다가 하려던 걸 못하게 되는 경우가 많은데요. 이 글에서는 딴짓을 줄이기 위한 연습을 소개합니다.
"
"https://news.hada.io/topic?id=9455","murex - 더 똑똑한 쉘","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            murex - 더 똑똑한 쉘

     * 더 향상된 기능과 UX를 제공하는 쉘
     * 파이프라인에서 추가적인 타입 정보를 지원(JSON/테이블 같은 데이터 포맷에 이용 가능해서, 기존 UNIX 도구들이 더 똑똑하게 연동됨)
     * 사용성 향상
          + 인라인 맞춤법 검사
          + Return 치기전에 명령에 대해 설명하는 문맥 인식 힌트
          + man 페이지를 자동 파싱하여 자동 완성을 지원하지 않는 명령에도 자동 완성 지원
     * 더 똘똘한 에러 처리와 디버깅 지원
          + try/catch 블록에서 에러 메시지에 라인 넘버가 포함
          + STDOUT 이 붉은색으로 하이라이트
          + 언어 자체에 스크립트 테스팅 및 디버깅 환경이 내장

   간만헤 반가운 소식이네요. 새로운 쉘이라니!
"
"https://news.hada.io/topic?id=9483","아마존 우림에서 발견된 8마일 길이의 얼음 시대 동물들의 Frieze(벽화) (2020)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           아마존 우림에서 발견된 8마일 길이의 얼음 시대 동물들의 Frieze(벽화) (2020)

     * 유니버시티 오브 엑서터의 연구원들은 아마존 우림에서 얼음 시대 동물인 마스토돈 등을 그린 수천 개의 바위 예술품을 발견했다.
     * 그림은 약 11,800 ~ 12,600년 전에 그려졌으며 크로 아줄(Cerro Azul)을 비롯해 세 개의 바위 피난소에 걸쳐 있으며, 가장 큰 바위 피난소는 12개 패널과 수천 개의 개별 그림으로 이루어져 있다.
     * 바위 예술은 지역의 최초 인간 주민들이 얼음 시대 대형 동물과 공존했을 것을 보여주며, 거대한 게으른 늑대, 마스토돈, 낙타과 동물, 말과 코뿔소 등을 보여주는 그림이 있다.
     * 다른 그림에는 인간 모습, 기하학적 모양, 사냥 장면, 사슴, 토끼, 악어, 박쥐, 원숭이, 거북, 뱀, 물담비 등의 동물이 나와 있다.
     * 붉은 그림은 긁어낸 옥의 색소를 사용하여 만들어졌으며, 난화된 바위를 불로 닦아 평면을 만들고 그 위에 그림을 그렸다고 전문가들은 말한다. 그림은 자연 요소에 노출되어 있지만, 암벽에 의해 보호되어 아마존에서 발견된 다른 바위 예술품보다 더 잘 보존되어 있다.
     * 그림을 그린 사람들은 야생야채와 과일, 그리고 가까이 있는 강에서 피라냐와 악어를 낚아 먹는 사냥술자였다.
     * 이 프로젝트의 연구원들은 아마존 지역에 최초로 인간이 정착한 시기와 그들의 존재가 생물 다양성에 미친 영향을 알아내기 위해 노력하고 있다.
     * 이 연구 결과는 5년간 진행될 프로젝트의 초기 단계이며, 즉각적인 목표 중 하나는 지역의 모든 바위 예술품을 문서화하고 그림으로 그려진 다른 동물들을 파악하는 것이다.

        Hacker News 의견

     * 콜롬비아 우림에서 발견된 화려한 선사 시대 바위 예술
     * 일부 사이트는 화물 또는 전세기를 필요로하며, 보트 여행 및 하이킹이 필요합니다.
     * 새로운 이미지는 지역의 식민지화 및 침해를 묘사합니다.
     * 지역 사회는 예술을 알고 있었으며 연구원들을 안내했습니다.
     * 예술은 현재 어떻게 살고 있는지뿐만 아니라 잃어버린 것을 기록하고 있을 수 있습니다.
     * 18,000년간의 예술 보존은 놀라운 일입니다.
     * 제목에 ""2020""이 누락되었습니다.
     * 제목에 ""eight-mile""에 대한 설명이 없습니다.
     * 예술의 고해상도 사진이 필요합니다.
     * 예술은 약 11,800 ~ 12,600년 전에 만들어졌으며, 잃어버린 문명 논쟁에 대한 흥미로운 타임라인입니다.
"
"https://news.hada.io/topic?id=9451","구인구직 게시판 하나로 수십억원을 벌고 있는 Job Board Business 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             구인구직 게시판 하나로 수십억원을 벌고 있는 Job Board Business 소개

   구인구직 게시판으로 수십억원의 매출을 만들고 있는 잡보드 비즈니스들에 대해 소개해드리려고 합니다. 아주 좁은 영역에 집중해 게시판의 가치가 올라간 케이스들이라고 볼 수 있어요.

We Work Remotely (WWR)

   개요 : 리모트 워크가 가능한 테크 잡을 모아두고 있는 게시판
   월 방문자 수 : 180만명
   (예상) 연매출 : 30억원 ~ 50억원

Remote Ok

   개요 : WWR과 동일한 성격의 리모트 워커를 위한 게시판
   월 방문자 수 : 180만명
   연 매출 : 10억원 내외

Pomp Crypto Job Board

   개요 : 크립도 씬의 채용 공고만 모여져 있는 웹사이트
   월 방문자 수 : 3만명 (크립토 윈터로 많이 줄었다)
   (예상) 연 매출 : 1억원 내외

Japan dev

   개요 : 일본에서 일하고 싶은 개발자를 위한 잡보드
   월 방문자 수 : 37만명
   (예상) 연매출 : 6억원 내외

   이런 비지니스들은 business model 이 어떻게 될까요 보통?

   원글을 읽어보니 비즈니스 모델들에 대한 설명이 포함되어 있네요.
   Job Posting 올리기 위해서 돈을 내야 하는 구조 입니다.
"
"https://news.hada.io/topic?id=9506","오리건, 자체 주유 허용 법안 최종 승인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         오리건, 자체 주유 허용 법안 최종 승인

     * 오리건은 72년간의 자가 주유소 금지법을 폐지했다.
     * 새 법률은 주유소가 이용 가능한 펌프의 절반을 직원으로 채용하도록 요구하지만, 나머지 절반은 자가 서비스를 허용한다.
     * 연료 회사들은 직원 부족 때문에 오랫동안 이러한 변화를 요구해왔다.
     * 북서부 식료품 협회는 직원 부족으로 절반의 주유기가 이미 폐쇄되어 있기 때문에 일자리가 사라지지 않을 것이라고 주장한다.
     * 전문가가 없던 과거에는 자가 주유가 위험하고 주유소에서 금지되어 있었지만 불편했던 시절의 완전한 서비스 주유소는 과거의 유물이다.
     * 오리건의 법안은 완전한 서비스 주유기와 자가 서비스 주유기의 가격 차이를 없애기 때문에 완전한 서비스 주유기는 사실상 사라질 것이다.
     * 주유소 소유자들이 돈을 절약할 수 있는 자가 서비스의 경제적 이점은 완전한 서비스 주유소에 대한 미래의 압력을 바꿀 것이다.
     * 이 법안은 오리건 주지사 티나 코텍에게 즉각적인 시행을 위해 서명될 예정이다.

        Hacker News 의견

     * 오리건, 자가 주유소 운영을 허용하는 법안 통과
     * 이전에는 법적으로 ""풀 서비스"" 주유소 운영이 요구됨
     * 법안은 일자리 창출과 가격 안정을 목적으로 함
     * 일부 사람들은 ""서비스"" 대기 시간이 길어 오리건에서 주유를 피해왔음
     * 법안은 이미 2017년 이후 주변 지역에서 조건부로 허용됨
     * 주유소는 자가 주유와 풀 서비스 주유 모두 동일한 가격을 책정해야 함
     * 일부 사람들은 자가 주유기에서 비디오 광고가 나올 가능성에 대해 우려함
     * 일부 댓글러들은 다른 주에서 풀 서비스 주유소에서 대기 시간이 길다는 경험을 함
     * 일부 사람들은 오리건에서 다른 사람이 주유해주는 독특한 경험을 그리워할 것임
"
"https://news.hada.io/topic?id=9497","JP 모건, 이메일 기록 삭제로 SEC에 벌금 부과","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      JP 모건, 이메일 기록 삭제로 SEC에 벌금 부과

     * JP 모건, 2018년 체이스 은행 계열사와 관련된 수백만 건의 이메일 기록 삭제로 SEC에 400만 달러 벌금 부과
     * 회사는 2018년 1월 1일부터 4월 23일까지의 기간을 커버하는 약 8,700개의 전자우편함에서 약 4,700만 건의 전자 통신 기록을 삭제
     * 이 중 많은 기록은 1934년 증권 거래법에 따라 보존해야 할 비즈니스 기록이었음
     * 이 실수로 인해 JP 모건은 SEC 및 기타 기관에서 요구한 조사에 대한 증거를 제출할 수 없었음
     * JP 모건의 문제는 더 이상 보존할 필요가 없는 이전 통신 및 문서를 시스템에서 삭제하려는 프로젝트로 거슬러 올라감
     * 이 프로젝트는 JP 모건이 구현한 프로세스에서 삭제 대상으로 식별된 문서가 삭제되지 않는 ""장애""를 겪음
     * JP 모건은 이 문제의 책임을 자신들의 통신 저장을 처리하기 위해 고용한 기록 보관 업체에게 돌리고 있음
     * 이 업체는 해당하는 36개월 보존 기간에 대한 규정을 준수하는 미디어 저장소를 보유하고 있으며, 따라서 이 기간 내의 문서는 삭제되지 않는다는 것을 JP 모건과 금융산업규제기관(FINRA)에게 여러 차례 보장했었음
     * 이 사건에 대응하여 JP 모건은 자체 36개월 보존 코딩을 구현하고 운영 절차를 개편했다고 밝혔음

        Hacker News 의견

     * JP 모건, 이메일 기록 삭제로 SEC에 벌금 부과
     * 삭제해야 할 데이터가 제대로 삭제되지 않음
     * 문제 해결을 위해, 현재 날짜까지 수동으로 삭제 요청 실행
     * Chase 소유 도메인의 이메일 보존 구성을 잊은 누군가
     * 1.5년이 지나야 누군가가 발견
     * 실수는 있지만, 제때 발견하면 백업에서 메시지를 보관할 수 있었을 것
     * 판사는 그 증거에 무엇이 있었는지 추측할 수 있음
     * 인프라 변경과 데이터 조작에는 많은 서명과 회의가 필요
     * 400만 달러의 벌금은 아카이빙 비용보다 싸다
     * 이 사례에서 부패는 노골적이고 공공연하다
     * 네덜란드 정부도 실수로 기밀 문서를 삭제
     * JP 모건에게 400만 달러는 쥐어짜내기 같은 돈
     * 실수는 누구나 com하지만, 다음에는 증거를 삭제하지 않도록 노력하세요.
"
"https://news.hada.io/topic?id=9430","Vercel AI SDK 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Vercel AI SDK 공개

     * React, Svelte, Vue 로 스트리밍, 채팅 방식의 AI앱을 생성하기 위한 SDK
     * SWR(HTTP RFC 5861, Stale-While-Revalidate)를 활용하여 빠르게 동작
     * LangChain, OpenAI, Anthropic, HuggingFace 등의 다양한 모델 지원
     * Edge Runtime 호환
     * 완료된 스트리밍 결과를 DB에 저장하기 위한 콜백 지원(같은 요청내에서)
"
"https://news.hada.io/topic?id=9470","UnsuckJS - 경량 자바스크립트 라이브러리 비교 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     UnsuckJS - 경량 자바스크립트 라이브러리 비교

     * 빌드도구, 컴파일러등이 필요없는 경량 라이브러리들을 비교
     * 라이센스, 사이즈, 최종 커밋 시간, GitHub Stars/Forks/Issues, CDN, WebComponents, IE11 호환
     * dom-proxy, Tram-Lite, lit, reken, Bau, VanJS, spræ, preact, TwinSpark, htmx, strawberry, Alpine.js, Mithril, Crank.js, diffHTML, hyperapp, dlite, data-template, ponys, bdc-js, RE:DOM, petite-vue, CalDOM, lighterhtml, Litedom
"
"https://news.hada.io/topic?id=9449","Rivian, Tesla의 NACS 충전규약에 동참","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Rivian, Tesla의 NACS 충전규약에 동참

     * 2024년 봄부터 Rivian 드라이버들도 12000개의 테슬라 슈퍼차저 네트워크 이용 가능
     * 자체 충전네트워크인 Rivian Adventure Network 역시 계속 확장할 예정
     * 2025년부터 R1 차량에 NACS 포트를 탑재하며, 차후 R2 플랫폼에도 적용

   Ford, GM에 이어 Rivian도 들어갔네요.
   과연 폭스바겐과 현대는..?
"
"https://news.hada.io/topic?id=9551","메타의 개발자 도구들: 대규모로 작업하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         메타의 개발자 도구들: 대규모로 작업하기

     * Sapling: 대규모로 확장 가능하면서도 사용성을 강조한 버전 관리 시스템
          + Server: Rust로 구현
          + Client: Sapling 서버 및 Git 서버와도 연결 가능
          + 가상 FS: EdenFS로 파일이 필요할 때만 다운로드
     * Buck2: 빌드시스템
          + 리모트 캐시 및 실행 지원으로 개발자들이 서로의 컴파일본을 공유 가능
          + 여러 프로그래밍 언어를 동시에 지원
          + Sapling 없이도 잘 동작하지만 Sapling & EdenFS를 위한 특정한 설계 포함
     * Infer, RacerD, Jest: 테스트 및 정적 분석
          + Infer: Java & C++ 및 여러 언어를 지원하는 정적 분석
          + RacerD: Java 동시성 버그를 탐지가능한 맞춤형 분석 도구
          + Jest: Javascript 테스팅 프레임워크
          + Sapienz: 정적 분석및 수작업 테스트케이스를 연결하는 도구
"
"https://news.hada.io/topic?id=9465","undb - 오픈소스 노코드 데이터베이스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         undb - 오픈소스 노코드 데이터베이스

     * Private first(셀프 호스트 가능)
     * SQLite 와 로컬 객체 저장소 이용으로 초경량
     * 빠르고 쉽게 디플로이 가능(도커 및 그외)
     * OpenAPI, 웹훅, 실시간 구독, SDK 등을 제공
     * SvelteKit + Vite & SWC + Tailwind + Nestjs + Domain Driven Design

   노 코드? 뭐가 노 코드라는 걸까요?

   MS access 같은 기능을 웹으로 제공하는 거겠죠.
   개발자 아닌 사람도 MS access로 DB 만들어서,
   입력폼, 복잡한 조회, report 출력 기능을 코딩 없이 만들 수 있죠.

   저도 궁금했는데.. 감사합니다
"
"https://news.hada.io/topic?id=9472","node-copy-paste - 크로스 플랫폼 시스템 클립보드 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 node-copy-paste - 크로스 플랫폼 시스템 클립보드 도구

     * OS별 시스템 클립보드 접근 도구들을 Wrapping 하여 어디서나 같은 방식으로 사용가능한 CLI
          + OSX: pbcopy/pbpaste
          + Windows: clip
          + Linux/FreeBSD/OpenBSD: xclip

   오! 직접 clip 호출해서 사용할 땐 한글이 깨졌는데 얘는 그런 문제가 없네요

   코드를 살펴보니 clip에 문자열 넘겨주기 전에 인코딩 과정을 거치는군요. 배워갑니다.
"
"https://news.hada.io/topic?id=9537","OPNSense - 오픈소스 네트워크 시큐리티 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     OPNSense - 오픈소스 네트워크 시큐리티 플랫폼

     * 실시간 트래픽 확인 가능한 IPv4 및 IPv6 방화벽 제공
     * 멀티 WAN 지원(로드 밸런싱 & 페일오버)
     * VPN (IPsec, OpenVPN, Tinc, WireGuard)
     * CARP(Common Address Redundancy Protocol)를 이용한 하드웨어 페일오버
     * Software Defined-WAN
     * 침입 감지 및 방지(Suricata, Proofpoint, ET Pro Telemetry)
     * 2FA 인증
     * OSPF, BGP 라우팅 프로토콜 지원
     * 웹필터링 : 외부 블랙리스트, 트래픽 필터링, 방화벽 Alias, DNS 블랙리스팅
     * 직관적인 사용자 인터페이스
"
"https://news.hada.io/topic?id=9462","Ask GN: 이번 주말에 뭐 하시나요? ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   계속 고생한 산출물 평가가 좋지 못해서.. 리프레쉬하고 심기일전 하려고 합니다.

   화이팅입니다

   ""박태웅의 AI강의"" 책을 읽을 예정입니다.
   요즘 거의 모든 서점에서 상위권을 차지하고 있네요.
"
"https://news.hada.io/topic?id=9532","세계 최초로 채택된 유럽연합 ‘AI법’에서 주목할 5가지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    세계 최초로 채택된 유럽연합 ‘AI법’에서 주목할 5가지

    1. 감정 인식(emotion-recognition) AI 금지
    2. 공공장소에서의 실시간 생체 인식과 예측 치안(predictive policing) 금지
    3. 소셜 스코어링(social scoring) 금지
    4. 생성형 AI에 대한 신규 규제
    5. 소셜미디어의 추천 알고리즘에 대한 신규 규제

   규제는 필요하겠지만,,, 제도가 기술발전을 못따라 간다는 느낌이 드는 항목들이군요!

   이렇게 되면 현재 원탑인 중국의 인공지능 기술 독주체제가 가속화 되겠네요

   1은 좀 의아하긴 하네요. 레이블링도 힘들어서 연구가 잘 안되는 마당에...

   시행되면 당장은 5번이 제일 크긴 하겠군요
"
"https://news.hada.io/topic?id=9447","superwhite - HDR 가능한 기기에서 매우 밝은 흰색 표시하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                superwhite - HDR 가능한 기기에서 매우 밝은 흰색 표시하기

     * HDR 지원되는 아이폰/아이패드/맥등의 화면에서 #FFFFFF 보다 훨씬 밝은 흰색을 표시하는 방법
     * CSS로는 표현이 불가능해서 mp4 비디오 등으로만 표현 가능
     * Final Cut Pro 에서
          + Wide Gamut HDR 설정을 적용
          + 색상을 Bright White로 적용하고 HDR 레벨을 100으로 설정
          + HDR 툴 비디오 효과에서 모드를 SDR to PDR(PQ) 로 설정하고 Peak Brigtness를 5000 nit로 설정
          + 비디오를 HEVC 10-bit 로 Export

   이를 이용한 HDR 버전의 QR코드 페이지 https://notes.dt.in.th/HDRQRCode
   (아이폰 등에서 보면 바로 잘 보입니다)

   한밤중 자기전에 봤다간 눈이 아플것 같네요 ㅋㅋ

   으악 눈이 너무 부셔요
"
"https://news.hada.io/topic?id=9504","DotMeta: .meta 폴더를 이용합시다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        DotMeta: .meta 폴더를 이용합시다

     * 소프트웨어 라이브러리들이 설정 파일을 .meta 폴더에 넣자고 홍보하는 사이트
     * 아래와 같이 설정 파일이 점점 더 많아지는데 루트 폴더에 다 넣어서 복잡하게 하지 말고, .meta 에 모으면 깔끔하다는 것
       /package.json
       /tsconfig.json
       /.eslintrc
       /.prettierrc
       /.babel.config.js (implied child .babelrc)
       /.webpack.config.js
       /jest.config.js
       /.env
       /docker-compose.yml
       /gitlab-ci.yml
       /.npmrc
       /.editorconfig

   근데 지저분하다는 것에 공감을 합니다만, 저게 실제로 생산성에 영향을 미치나요?

   .env까지 포함해서 넣으면 개발시 경로 세팅이 불편해지겠네요;;

   단순히 설정만 만들어두고 잘 안쓰는 파일들이 포함되어있어서 어느정도 이해가 되긴 하는데, 실제로 좀 자주 변경이 일어나는 package.json이나 .env까지 저기로 들어가야하는 건 조금 불편해보이긴 하네요.

   굳이 meta로 할 필요없이 config(s)면 될 거 같은데... meta는 의미도 좀 멀고 회사 홍보같아서 꺼려지네요

   왜 .config 가 아닌걸까요

   docker-compose.yml, gitlab-ci.yml 같은 파일들을 config라고 부르기에는 좀 애매한 감이 있어서 좀 더 범용적인 단어를 쓴 것이 아닐까 예상합니다.

   동감입니다. 이미 .config 쓰는 경우도 좀 있고, 의미도 더 명확한 것 같은데...

   https://news.ycombinator.com/item?id=36472613
   왜 meta 란 이름을 써야하는지, .을 붙여서 숨겨야 하는지에 대해 갑론을박이 있긴 한데요.
   너무 지저분한 것은 사실입니다. 뭔가 해결방안이 있으면 좋을듯
"
"https://news.hada.io/topic?id=9427","왜 GitHub을 구글에 팔지 않았어요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         왜 GitHub을 구글에 팔지 않았어요?

     * 구글이 도메인 비즈니스를 판 것에 관련해서 GitHub 창업자이자 CEO였던 Chris Wanstrath의 말

     ""사람들이 왜 GitHub을 Google에 팔지 않았냐고 묻는데요.
     Seriously? 그때 협상 과정에 참여했던 구글 고위직중 단 한명도 현재 구글에 남아 있지 않아요.
     반면 Microsoft 쪽 사람들은 모두 다 그대로 일하고 있어요...""

   이야,, MS 광팬으로써 재밌는 이야기네요,, MS에 오래 남아있을 수 있는 이유가 뭘까요?

   구글이 인수한 기업 목록

   https://ko.m.wikipedia.org/wiki/…

   구글은 정말 유튜브 인수 안했다면 지금쯤 어떻게되었을까요

   이 페이지조차 구글 검색 베이스로 돌아가는데 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ

   유튜브가 구글 매출에서 차지하는 비중은 매우 작아요.

   10프로 전후로 기억하는데, 저의 개인적인 사용패턴은, 점점 구글서비스에서 멀어지고 있습니다만, 대체 불가한 서비스는 바로 유튜브더군요.

   구글은 럭키 카카오죠 그냥.
   검색 서비스 원툴로 시작해서 이것저것 문어발로 손대면서 초대형이 기업이 된건데 그 안에서 마소나 애플처럼 뭔가 하나 진득하게 제대로 해온건 거의 없습니다.
   수익성 안나거나 개발하기 싫어지면 그냥 팔아버리거나 서비스를 종료해버리죠.
   업계에 대한 책임감이나 사명감 같은건 전혀 보이지 않아요

   검색을 25년 넘게 하고, 지메일, 구글 드라이브, 안드로이드와 크롬 및 크롬 OS를 15년 이상 한 건 진득한 거 아니에요?

   그런데, ""업계에 대한 책임감이나 사명감""은 뭔가요? 업계 대신 고객이라면 모를까.

   https://killedbygoogle.com/

   구글의 무덤에 묻힐수도 있었겠다 싶네요.

   구글, Domains 사업을 종료하고 Squarespace에 매각
   트위터 댓글중에 ""왜 사람들이 광고회사랑 소프트웨어회사를 비교하는지 전혀 이해 못하겠음""
"
"https://news.hada.io/topic?id=9460","Apple Vision Pro 개발자 툴, 오늘부터 이용 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Apple Vision Pro 개발자 툴, 오늘부터 이용 가능

     * visionOS SDK 공개
     * XCode, SwiftUI, RealityKit, ARKit 등과 기존 애플 플랫폼에서 익숙한 기본 프레임워크를 그대로 사용
     * Reality Composer Pro: 3D 모델, 애니메이션, 이미지 및 사운드를 미리보기 및 준비 가능
     * visionOS 시뮬레이터로 앱과 상호작용하면서 다양한 공간 레이아웃과 조명 조건을 살펴보고 테스트
     * 다음 달 부터는 Unity 앱을 Vision Pro로 포팅 지원
     * 또한, 다음 달 Apple은 쿠퍼티노, 런던, 뮌헨, 상하이, 싱가포르, 도쿄에 개발자 랩을 마련해 개발자들이 Apple Vision Pro 하드웨어에서 앱을 테스트하고 Apple 엔지니어의 지원을 받을 수 있는 실습 경험을 제공할 예정

   한국은 역시나 없군요ㅠ 아쉽

   업데이트된 리소스들
     * SDK on Xcode 15 beta 2: https://developer.apple.com/download/all/?q=xcode%2015
     * Developer documentation - visionOS: https://developer.apple.com/documentation/visionos/
     * Plan your visionOS app: https://developer.apple.com/visionos/planning/
     * Human Interface Guideline - Designing for visionOS: https://developer.apple.com/design/human-interface-guidelines/…
     * Apple Design Resources - visionOS: https://www.figma.com/community/file/1253443272911187215/
     * App icon tool (Parallax Previewer): https://itunespartner.apple.com/assets/downloads/…
     * visionOS Beta Release Notes (new features, known issues): https://developer.apple.com/documentation/visionos-release-notes/…
"
"https://news.hada.io/topic?id=9508","Show GN: zely - nodejs 파일 기반 라우팅 백엔드 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Show GN: zely - nodejs 파일 기반 라우팅 백엔드 프레임워크

   nextjs와 같이 파일 경로를 기반으로 작동하는 백엔드용 프레임워크를 만들어봤습니다. 아직 백엔드에 대한 지식이 얕아 기능은 별로 없지만 피드백 해주시면 적극 반영하겠습니다 ㅎㅎ

   오오! 질문이 하나 있습니다. Next.js에 있는 API Routes를 쓰는거랑 어떻게 다를까요? (조금은 다르긴 한게 크게보면 비슷할거 같아서)

   솔직히 말해서 nextjs가 쓰기에는 더 좋을 것 같습니다. 굳이 차이점을 뽑자면 서버 시작하는 속도가 아닐까 싶네요. nextjs는 처음 서버 시작 속도가 몇 초는 걸리지만 이 패키지는 1초 안에 서버가 시작되니깐..
"
"https://news.hada.io/topic?id=9547","Awk 프로그래밍 언어, 제2판","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Awk 프로그래밍 언어, 제2판

     * 1판은 1988년에 Al Aho, Brian Kernighan, Peter Weinberger에 의해 씌여짐
     * 그 이후 AWK는 계속 발전해서 여러개의 구현체가 나왔고, 컴퓨팅 분야도 엄청 변화했음
     * AWK 2판은 이런 변화들을 반영해서 9월 말에 출간될 것
     * 그 동안 AWK 및 관련된 것들에 대한 역사적 문서, 코드 스니펫, 관련 에세이 등을 추가할 예정

  GN⁺ 가 요약/번역한 내용

     * 1988년 첫 번째 판 이후 컴퓨팅 세계의 변화를 반영한 The AWK Programming Language의 두 번째 판이 곧 출간됩니다.
     * 9월 말에 책을 구매할 수 있지만, 그 사이 웹사이트에는 역사적인 문서, 코드 스니펫, Awk 및 관련 주제에 대한 에세이 등 추가 자료가 추가될 예정입니다.
     * Awk 소스는 GitHub에서 관리되며, 구체적으로 https://github.com/onetrueawk/awk 에서 확인할 수 있습니다.
     * Gawk 릴리스는 https://ftp.gnu.org/gnu/gawk 에서 찾을 수 있으며, Gawk 매뉴얼도 해당 사이트에서 이용 가능합니다.
     * Arnold Robbins은 다른 Awk 구현체 목록을 편집했습니다.
     * 원래의 Awk 책에는 여러 문서에 대한 인용이 포함되어 있으며, 일부는 여전히 흥미롭고 유용할 수 있습니다. 웹사이트에서는 이러한 문서에 대한 최신 참고 자료를 제공합니다.
     * 일부 역사적인 문서에는 1979년의 원래 Awk 논문, 1985년의 Awk에 대한 내부 기술 보고서, 데이터 포맷 다이어그램을 그리기 위한 Awk 프로그램인 dformat이 포함됩니다.
     * 화학 구조 다이어그램을 설명하는 언어에 대한 원래 chem 논문의 PDF 링크도 제공됩니다.
     * 웹사이트에는 프로그램 색인 및 알고리즘 애니메이션에 대한 예제와 논문도 포함되어 있습니다.
     * 추가로, 2008년과 2009년에 Computerworld에서 Awk에 관한 Al Aho와 Brian Kernighan의 인터뷰도 있습니다.

   ""https://github.com/onetrueawk/awk에서""; 로 링크가 걸리네요.

   https://news.ycombinator.com/item?id=36517525
   책의 초기 기술 리뷰어인 Ben Hoyt(GoAWK 개발자)에 따르면,
     * 1판의 내용도 꽤 들어가지만 커니건이 크게 내용을 업데이트 했음
     * 초반 챕터들은 매우 실습 위주이며, 특히 CSV 파일을 이용한 ""탐색적 데이터 처리""에 중점을 두고 있음
     * 'Big Data with AWK' 라고 불러도 될 듯
     * Gawk 와 awk 에는 곧 ""--csv"" 옵션이 들어가서 CSV 입력이 가능해질 것

        Hacker News 의견

     * ""The Awk Programming Language""의 두 번째 판이 Brian Kernighan에 의해 업데이트되고 재구성되었습니다.
     * 초기 장에서는 특히 CSV 파일과 함께하는 탐색적 데이터 처리에 초점을 맞추고 있습니다.
     * Gawk와 awk에는 곧 적절한 CSV 입력 모드를 위한 새로운 ""--csv"" 옵션이 추가될 예정입니다.
     * 이 언어에는 함수에 추가 인수를 추가하여 임시 변수를 선언하는 등의 특이한 점이 있습니다.
     * Awk에는 작년에 유니코드 지원이 추가되었습니다.
     * Awk는 데이터 변환과 구문 분석을 자동화하기 위한 강력한 도구입니다.
     * Awk는 간단하고 빠르며 가벼워서 셸 스크립팅에 인기가 있습니다.
     * 일부 사용자는 텍스트 구문 분석 이상의 작업을 수행하려고 할 때 Awk가 어색하다고 느낍니다.
     * 책의 두 번째 판을 위한 자리 표시자 페이지가 있지만, 책 자체가 제공되는지는 분명하지 않습니다.
     * 일부 사람들은 Awk에 대해 비판적인 의견을 가지고 있지만, 여전히 널리 사용되고 유용한 도구입니다.
     * Awk 티셔츠의 원본 아트워크나 출처를 찾는 요구가 있습니다.
"
"https://news.hada.io/topic?id=9502","블루투스 자동차 배터리 모니터가 위치 데이터를 빼내고 있다는 것을 발견","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                블루투스 자동차 배터리 모니터가 위치 데이터를 빼내고 있다는 것을 발견

     * 블루투스 기능이 탑재된 자동차 배터리 모니터는 배터리 전압을 기록하며 GPS 좌표, 휴대폰 기지국 데이터 및 인근 Wi-Fi 비콘을 수집하여 홍콩 및 중국 본토의 서버로 전송합니다.
     * Android 앱은 하드웨어 장치를 사용하려면 위치 권한이 필요하므로 사용자는 제품을 사용하기 위해 지속적으로 자신의 물리적 위치를 제3자에게 브로드캐스트해야 합니다.
     * 앱 스토어는 개인 정보가 수집되거나 공유되지 않는다고 명시하여 소비자를 오도하고 있습니다.
     * 자동차 배터리 모니터 애플리케이션이 사용자의 위치를 추적하는 합당한 이유가 없으므로 중대한 개인 정보 보호 문제가 제기됩니다.
     * 제품은 Android만으로 10만 건 이상의 다운로드를 기록하고 있습니다.
     * 사용된 내장 라이브러리인 AMap은 중국의 디지털 지도 주요 제공 업체 중 하나이며 광범위한 데이터 수집에 일부 기여하고 있습니다.
     * AMap SDK는 GPS 좌표, 인접한 휴대폰 기지국 위치 데이터 및 Wi-Fi 액세스 포인트를 수집하며, 시리즈의 제2부에서 저자는 AMap이 이러한 데이터를 수집하는 방법을 탐구합니다.
     * 하드웨어는 간단하며 스마트폰과 페어링이 필요하며 필요한 애플리케이션은 백그라운드에서 실행되어 스마트폰을 위치 스캐닝 장치로 전환합니다.
     * Android 애플리케이션은 위치 정보를 얻기 위해 위치 권한이 필요하며, iOS 버전도 위치 데이터를 원격 서버로 전송합니다.
     * Mitmproxy는 네트워크 트래픽을 가로채기 위해 사용되며, Frida는 동적 분석 및 메모리 분석에 사용됩니다.
     * 앱은 qihoo.util이라는 상용 소프트웨어 패커로 패킹되어 있어 APK에서 Java 바이트 코드를 직접 복호화하는 것이 문제가 됩니다.

        Hacker News 의견

     * 구글 플레이에서 10만 건 이상 다운로드된 블루투스 자동차 배터리 모니터 앱이 GPS, 휴대폰 기지국 셀 ID 및 Wifi 비콘 데이터를 홍콩과 중국 본토의 서버로 전송하고 있습니다.
     * 이 앱은 개인 정보를 수집하거나 제3자에게 보내지 않는다고 주장하고 있지만, 이는 사실이 아닙니다.
     * 사용자는 시작 시 또는 백그라운드에서 앱을 중지할 수 있어야 하며, 운영 체제는 인터넷 액세스를 사용자가 승인하거나 철회할 수 있는 권한으로 만들어야 합니다.
     * 실제 장치에서 가짜 GPS 데이터를 제공하여 앱이 불필요한 위치 데이터를 수집하는 것을 방지할 수 있는 안드로이드의 기능이 필요합니다.
     * 중국뿐만 아니라 모든 기기가 대량의 데이터를 수집하고 전송할 수 있습니다.
     * 미국 정부는 국가 안보 이유로 이러한 유형의 기기에 대해 조치를 취해야 합니다.
     * 배터리 관리를 위한 Victron의 안드로이드 모바일 앱과 같은 다른 앱도 위치 데이터를 수집합니다.
     * 독자들은 연결된 기기에 대한 앱 역공학에 대해 배울 수 있습니다.
"
"https://news.hada.io/topic?id=9482","Facebook이 Waze를 거의 인수할 뻔했지만, Google과 함께하게된 실제 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Facebook이 Waze를 거의 인수할 뻔했지만, Google과 함께하게된 실제 이야기

     * 2013년 6월에 구글이 Waze를 $1.15B에 인수
     * 그 시절에는 B단위(1조원)는 큰 숫자였음. 유니콘 이란 단어 자체가 몇 달후에 명명됨(가치가 B를 넘는 회사)
     * 2012년 애플 맵스를 출시하고 나서 팀쿡은 Waze를 언급하며 사과했음(품질 때문에)
     * Waze는 천만 MAU를 가진 앱이 되었고 다음 단계를 결정해야 했음. 다음 라운드를 돌면서 인수 의향을 받고 있었음
     * 창업자들끼리 가치 평가를 했는데, 모두 팔기를 원한 것은 아니었음
     * 18개월을 더 기다리면 인수 제안 가격을 2배로 올리는게 가능하다고 생각했지만, 우리중 일부는 지치고 스트레스 받아서 팔 준비가 되어있었음
     * $750M 미만이면 다음 라운드를 돌고, $1B 이상을 받으면 판매하기로 동의
     * 만약 $750M~1B 사이라면 인수자가 누구인지에 따라 다름. 왜냐하면 적어도 4년이상 그 곳에서 일해야 할 가능성이 높기 때문
     * 우린 그 당시에 Microsoft(발머 CEO)라면 $1B, 페이스북이라면 $750M 도 가능하다고 생각했음
     * 하지만 세상은 바뀌어서, 이건 우리가 Meta가 사회/민주주의/개인에 대해 얼마나 사악한지 알기 전이었고, Microsoft가 Satya Nadella 하에서 경이로운 전환을 하기 전이었음
     * 인수 논의 전에 먼저 Waze의 사용자 확보를 가속화하는 데도움이 되는 ""전략적 파트너""를 찾기 시작
     * Microsoft, Amazon, Facebook 등과 논의함
     * Facebook 은 제품 관점에서는 적합했지만, 파트너십을 맺은후 Waze가 커져버리고 구글이 인수하면 자신들이 힘들어질 것이라고 얘기함
          + 그들은 ROFR(Right of First Refusal, 우선매수청구권)을 원했음
          + 우리가 그걸 주고나면, 향후 거래가 힘들어질 것이기 때문에 줄 수가 없었음
          + 타협끝에 페이스북이 구글에 대해서만 ROFR를 받는 것에 동의
     * 그래서 여기서 더 나아가기전에 구글에 연락함
          + ""당신의 경쟁자와 계약할 예정인데, 이 계약은 당신들과 전략적 논의를 하는 것을 차단함. 우리가 밤에 서로 그리워하지 않을지 확인하려고 연락했음. 관심있다면 지금 논의해야함""
          + 난 이걸 신의 성실 의무(Fiduciary Duty)로서 그냥 보낸거지, 구글이 관심을 가질지 몰랐음. 놀랍게도 그들은 우릴 만나고 싶어했음
     * 구글 지도팀과 만나서 흥미로운 대화를 함
          + 모두 지도 분야의 전문가였어서 서로가 뭘 잘 했는지를 칭찬할 수 있었음
          + 미팅이 끝나고 Corp Dev Lead가 전화해서 인수를 검토하는데 관심이 있다고 말함
          + 인수가격에 논의했는데, 우린 $1B 를 예상한다고 얘기했고, 난 그게 가능할 것 같다는 잘못된 인상을 받게됨
     * 기본 실사를 진행하고 레리와 세르게이를 만남
          + 최종 전화가 와서 Corp Dev Lead는 $450M 의 제안을 함
          + 충격 받음. 난 우리가 $1B에 도달했다고 믿었기에
          + 바로 ""No"" 라고 거절함
          + 충격 받은 상대방 역시 ""$450M 과 $1B 사이에서 합의 가능한 숫자가 없을까요?"" 라고 물음
     * 이 질문은 내가 하바드 로스쿨에서 들었던 협상 수업이 생각나게 했음
          + 교수가 마지막 시간에 얘기한 것은 ""결국엔 양쪽의 중간에서 끝나게 된다""는 것이었음
          + 난 우리가 $1B 가치가 된다고 믿었고, 그건 협상 전술이 아니었음
          + $450M 에서 협상을 시작하면 $1B에 도달할 방법이 없었기 때문에 그 협상에서 나감
     * 이사회는 협상을 추진하지 않는 것에 분노했지만, 이건 이사회 구성원이 아닌 우리의 미래기 때문에 버텼음. 다시는 구글에 연락하지 않음
     * 다시 페이스북으로 돌아가서 ""주요 경쟁자로 간주할 주요 기술 회사""로부터 인수 제안을 받았다고 말했음
          + 그들의 Corp Dev가 ""더 이상 다른데로 팔러다니지 않을 숫자는 뭔가요?"" 라고 물었고, 그래서 $1B 라고 대답함
          + 한시간 후에 몇시간 동안 유효한 $1B 짜리 텀시트가 도착했음
          + 난 그 몇시간은 필요없었고, 즉시 사인해서 보냈음
          + 2개의 이메일과 한번의 전화통화로 페이스북은 우리를 기본적으로 인수했음
          + 오늘까지도 그들의 제안의 속도와 직접성에 대해 존경하고 있음
     * 실사를 시작했고, 서로간에 약간의 차이가 있다는 것이 분명해졌음
          + 우리는 이미 거래가 성사되고, 이 실사는 우리가 논의한 모든 것을 검증하는 것이라고 가정했음
          + 반면 페이스북은 Waze로 무엇을 해야할지 결정하는 프로세스의 시작이라고 생각하고 있었음
          + 이 갭은 팀들 사이에 점점 더 긴장을 불러 일으킴
          + 어떤 팀이 인수하는지, 누가 결정하는지 등이 명확하지 않았고, 시간이 흘러갔음.
          + 다음 단계가 뭔지도 모르고 기다리는 날들을 보냈음
     * 게다가 교류하는 사람들과의 케미도 좋지 않았음
          + Mark(주커버그)와 나는 잘 맞지 않았고, 실사를 수행하는 엔지니어들도 매우 어렸으며, 우리가 만든 것들을 경시했음
          + 우리 엔지니어들의 평균 나이는 40이었고, 경험이 많았음
          + 그들은 우리가 만든 것이 쉽다고 생각하지도 않았지만, 깊은 인상을 받지도 않았음
          + 이 나이와 멘탈 갭이 계속 스며들었고, 절차의 명확한 오너가 없었기에 일이 꼬이기 시작함
          + 우리가 실수를 했다는 느낌이 들었고, 페이스북이 인수를 하지 않을 것이라고 느끼기 시작
     * 페이스북은 클로징을 위해 28일을 요청했는데, 그들이 우리와 함께 뭘 해야할지 알아내는데는 오랜 시간 이었음
          + 이에 동의하는 실수를 했음
          + 이것은 이스라엘에서 가장 큰 인수거래중 하나였고 회계사, 변호사, 이사회 구성원 및 투자자가 관련되어있어서 뉴스가 유출될 수 밖에 없었음
          + 내가 유출하지 않았지만, 페이스북과 구글은 여전히 내가 유출했다고 믿는 것 같음
          + 더 많은 정보들이 유출되면서, 이에 대해 아는 사람의 수를 줄이고 이사회에 상세 내용 업데이트를 중단
     * 거래 소식이 유출되자 Google의 Corp Dev 담당자로 부터 뉴스가 사실이냐고 전화를 받음
          + 나는 그에게 기사 및 그 어떤 것도 그와 얘기할수 없다고 답변하자, 그는 이해한다고 말하고 전화를 끊음
     * 한시간 후에 구글로 부터 $1.15B의 요청하지 않은 텀시트가 메일로 왔음
          + 이건 나를 곤경에 빠뜨렸음
          + 나는 페이스북과 텀시트에 사인했지만, 판매 가치를 극대화 하기 위해 투자자에게 이를 알려야 하는 신의 성실 의무가 있었음
          + 이 제안을 무시할 수 없었기에, 나는 이걸 페이스북에 알렸고 그들은 내가 뉴스를 유출했다고 비난했음
          + 개인적 역학 관계의 악화로 인해 그들은 참여를 중단했고, 텀시트의 기간을 다 써버렸음
          + 만약 페이스북에 명확한 오너가 있고, 좋은 관계를 만들었다면 계약을 진행했겠지만, 팀간의 신뢰의 부족은 이걸 불가능하게 만들었음
     * 시간이 다 되었을 때, 페이스북은 카운터오퍼를 하지 않았음
          + 빠르게 Microsoft, Amazon, Apple 등을 접촉했지만, 아무도 빠르게 움직일 수 없었음
          + 그래서 페이스북 텀시트가 만료되자 마자 구글과 텀시트에 사인했고, 8일만에 거래를 마감했음
     * 내가 Google 에 가는 것이 옳은 일이었을까 ?
          + 당시 페이스북의 거래는 주식 거래였고, 그들의 주가는 1주당 $25였음
          + 우리가 그들과 계약을 체결했다면 약 10배수였음
          + 그럼에도 불구하고, 나는 구글이 우리에게 맞는 곳이었다고 생각함
          + 우리는 엔지니어링 팀과 함께 일했고, 우리를 독립적으로 유지하고 성장할 수 있게 해줬음(10M MAU에서 150M MAU로)
          + 그리고, 페이스북이 전 세계적으로 민주주의에 끼친 피해를 알면, 난 그곳에서 4년을 버티지 못했을 것

그래서 받은 교훈은?

     * 인수 작업은 실제 거래가 시작되기 몇년전에 시작됨
          + 잠재적 인수자를 파악하고 그들의 제품팀과 시간을 보내야함
          + 그래서 연락이 필요할 때 누구에게 연락해야 하는 지 알 수 있고, 그들은 당신이 누구인지 알수 있음
     * 의사 결정자들 사이에 명확한 프레임워크를 가질 것
          + 원하는 실제 숫자가 있어야함
          + 이게 빠른 의사 결정을 위한 슈퍼파워임
     * 파트너십 논의는 인수를 위한 최고의 촉매제임
          + 이를 통해 팀이 함께 시간을 보내고, 서로를 알아가고, 공동 제품이 어떤 모습일지 상상할 수 있음
          + 특히 결론이 ""하지만 이걸 하려면 우리가 당신네를 소유해야 합니다"" 인 경우
     * 인수와 관련된 모든 것은 개인적임
          + 왜 회사가 인수하는지부터, 가격과 절차까지 모두
          + 누가 의사결정자인지 명확히 하고, 개인적인 관계를 구축하는데 시간을 할애할 것
     * 인수는 설립자와 투자자의 이해관계가 다른 첫번째 순간임
          + 투자자들의 피드백을 경계해야할 유일한 순간이라는 것을 명심할 것
     * 그리고 물론 모든 협상과 마찬가지로, (마음에 안들면) 기꺼이 자리를 뜨고자 하는 사람이 더 좋은 거래를 얻을 것
          + 항상 레드라인을 가지고 그걸 준수할 것

   약 5조원 규모의 스타트업 M&A들을 진행하며 배운 것

   흥미진진한 이야기네요~ 숨돌림틈 없이 돌아가는 상황이 글에 다 녹아있군요ㅎㅎ

   https://www.theverge.com/2023/6/27/23776329/google-waze-layoffs-ads

   오늘은 레이오프 기사가 떴네요..

   미국에서도 나이갭이 중요한 역활을 한다는게 재미있네요.

   Waze에 이런 비화가 있었군요.
   실제로 써보면 네비로 쓰기에 편리하고 직관적이어서 구글맵 보다 일반 사용자들에게 친화적이라는 느낌을 받았습니다.

   페이스북이 민주주의에 끼친 피해 - 부분은 참고할만한 링크가 있을까요?

   제일 유명한건 이 사건이 있겠고요
   https://ko.m.wikipedia.org/wiki/…

   가짜뉴스 관련된 건
   https://newspeppermint.com/2021/10/06/fanceshaugen/

   감사합니다. 그럼 다가올 경기에는 앨론 머스크를 응원해야겠군요!

   일론머스크에 관련된 글은 https://premium.sbs.co.kr/article/MBHvcnTWQL

   밤에 서로를 그리워할지 - 부분에서 빵 터졌습니다

   흥미진진했네요

   마지막 교훈이 중요하네요. 제가 스타트업 CEO 들한테 자주 하는 얘기가 있습니다.
   ""이번 투자를 못받으면 힘들어져요"" 라는 말보다는 ""투자 안 하셔도 저희는 갈길 갑니다. 물론 투자해주시면 더 빠르게 성장할 수 있겠지만요."" 라는 말을 하는게(그런 마음가짐 자체를 가지는 게) 훨씬 투자에 도움이 됩니다.
"
"https://news.hada.io/topic?id=9487","쿠버네티스 컨트롤 플레인 죽이기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           쿠버네티스 컨트롤 플레인 죽이기

     * Kubernetes 클러스터를 관리하는 Control Plane 의 메모리 사용량을 코드레벨로 분석
     * 단일 요청을 처리하는데 수십 MB 의 메모리가 필요
     * CP/EC system 을 추종하는 KV Storage 구조의 한계상 이를 근본적으로 해결 할 방법이 없음
     * 이를 해결하기위해 3가지 방법을 소개
         1. 요청에 Limit 을 명시해서 한번에 가져올 리소스의 개수를 한정하기
         2. 요청에 ResourceVersion 을 명시해서 Strong Consistency 를 포기하고 Eventual Consistency 로 요청하기
         3. API Priority and Fairness 를 통해 API 요청에 대한 Concurrency 를 제한하기
"
"https://news.hada.io/topic?id=9457","Go 1.21 Release Candidate 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Go 1.21 Release Candidate 출시

     * 컴파일 성능 2~4% 개선
     * GC tail latency 최대 40% 감소
     * WASI 플랫폼 지원 추가
     * 툴체인 forwards compatibility 개선
     * Execution Tracer Overhaul
     * 내장 함수 min, max, clear 추가
     * 제너릭 타입 추론 개선
     * go:wasmimport 지시자 추가
     * slog, slices, maps, cmp 패키지가 표준 라이브러리로 편입
     * PGO 기본값 auto로 변경
     * Multipath TCP 지원 추가

   slices, maps 가 표준 라이브러리가 아니었군요..?

   드디어 Go도 WASI 가 지원되는군요. Server-side WASM 이 기대되네요 ㅎㅎ

   공짜 점심이군요!
"
"https://news.hada.io/topic?id=9530","애플, 암호화 메시지 앱 스캐닝에 반대하는 측에 합류","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     애플, 암호화 메시지 앱 스캐닝에 반대하는 측에 합류

     * 애플, 암호화된 메시지 도구가 아동 학대 자료를 스캔할 수 있는 온라인 안전 법안에 반대
     * 정부, 회사들이 플랫폼에서 아동 학대를 방지하면서도 최종 사용자 간 암호화를 구현해야 한다고 주장
     * 애플, 최종 사용자 간 암호화가 개인 정보 보호에 중요하다고 믿으며 강력한 암호화를 보호하기 위해 법안 개정을 촉구
     * Signal과 WhatsApp을 포함한 여러 메시징 플랫폼은 이전에 암호화된 메시징 시스템의 개인 정보 보호를 약화시키지 않겠다고 밝혔다.
     * 정부는 암호화된 메시지를 아동 학대 자료를 스캔할 수 있는 기술적인 해결책을 제공할 수 있다고 주장하지만 비판자들은 이것이 개인 정보 보호를 약화시킬 것이라 주장
     * 애플은 암호화를 약화시키는 조치에 반대하는 것은 아이폰의 학대 콘텐츠를 스캔할 계획으로 인해 반발을 받은 후에 이루어진 것이다.
     * Open Rights Group 및 기타 시민 사회 단체들은 이 법안이 사적인 채팅 메시지를 정기적으로 스캔하도록 요구할 수 있는 잠재적 위험에 대해 우려를 표명
     * 이러한 우려에 대한 대응으로 법안에 변경 사항이 있을 수 있지만 세부 사항은 아직 명확하지 않다.

        Hacker News 의견

     * 기업들은 플랫폼에서 아동 성착취를 동시에 방지할 수 있는 경우에만 종단 간 암호화를 도입해야 합니다.
     * AI 이미지 조작과 자동완성은 CSAM(아동 성착취물) 탐지를 더 복잡하게 만들 수 있습니다.
     * 일본의 미성년자를 묘사한 헨타이가 소유와 판매가 합법적인 문제가 토론과 관련이 있습니다.
     * AI로 생성된 아동 학대 이미지를 식별하는 도전은 우려됩니다.
     * 일부 사람들은 CSAM이 본질적으로 범죄가 아니라 범죄의 증거여야 한다고 주장합니다.
     * Apple은 이전에 CSAM을 위한 장치 내 스캐닝을 권장했습니다.
     * 기술 종사자들은 암호화 백도어에 반대하고 조합화되어 일할 것을 요구합니다.
     * 영국은 감시 친화적인 정책의 역사를 가지고 있습니다.
     * 일부는 영국의 제안된 온라인 안전 법안의 실행 가능성을 의심합니다.
     * Apple의 개인 정보 보호 주장은 폐쇄 소스 소프트웨어 때문에 의문을 받고 있습니다.
     * 영국의 Brexit과 온라인 안전 법안에 대한 접근 방식이 비판받고 있습니다.
     * 대형 기술 기업들은 이미 아동의 활동에 대한 상당한 지식을 가지고 있으며, 부모와 요약을 공유해야 합니다.
     * 주장을 뒷받침하기 위해 참고 자료가 제공됩니다.
"
"https://news.hada.io/topic?id=9443","Meta, 상업적으로 이용 가능한 무료 AI 모델을 공개할 예정 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Meta, 상업적으로 이용 가능한 무료 AI 모델을 공개할 예정

     * Google 과 OpenAI 등과 경쟁하기 위한 차세대 LLM으로 상업적으로 사용가능한 오픈소스가 될 예정
     * Meta로서는 수많은 개발자들을 참여하여 개선시킴으로써 이점을 얻게 되고, AI 지형을 크게 바꿀수 있을 것
     * 연구용 라이선스 였던 LLaMA의 발표 많으로 많은 변화가 있었고, 클로즈드 소스 모델들과 격차를 빠르게 좁혔음
     * OpenAI 도 자체 오픈소스 LLM을 준비중

   이미 유출된 거 쿨하게 상업용까지 풀어버리겠다는건가... 메타가 요즘 보기 좋네요.
"
"https://news.hada.io/topic?id=9424","프로그래밍 할때 편한 캠핑 의자가 있을까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        프로그래밍 할때 편한 캠핑 의자가 있을까?

   HN에 올라온 질문. 스웨덴 사람이 좋은 날씨에 공원에서 개발하고 싶다면서 물은 건데, 답변들은 참고해도 좋을법 해서 가져와 봅니다.
     * $8 짜리 월마트 캠핑 의자
     * BCF의 Wanderer Reclining Mesh Lounger $159
     * Decathlon의 QUECHUA 캠핑 폴딩 의자(31000원)
     * 의자는 상관없이 접는 소형 테이블 추천 - Table-Mate Ultra($44.95)
     * Tommy Bahama 비치 의자
     * Yeti 베이스 캠프 의자 $300
     * 그늘을 위해 의자에 붙이는 우산이 있음 OZtrail Clip on Chair Umbrella $11.99
     * Cliq Lounge $219.99
     * 헬리녹스 의자와 Tactical Field Office 테이블

   가끔 이렇게 놀랍도록 환기되는 주제가 올라와서 좋아요 HN

   ㅎㅎ 비전프로 사면 공원에서 고개 들고 컴퓨터할 수 있을지 궁금하네요

   BCF의 리클라이닝 의자가 궁금해서 찾아봤는데, 한국엔 안 파는것 같고, 생긴게 비슷한 메쉬 리클라이닝 의자가 한 7만원쯤 하는게 있긴 하군요.
   댓글중에 독일어로 슈나이더시츠(Schneidersitz)라는 앉는법이 허리에 좋다고 추천을 했는데.. 양반다리 네요 ㅡ.ㅡ;

   BCF 의 의자는 한 때 유행했던 제로 그래비티 체어랑 비슷하네요.

   ㅋㅋ 선조님들의 지혜군요
"
"https://news.hada.io/topic?id=9478","지도는 우리가 세상을 보는 방식을 왜곡하고 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       지도는 우리가 세상을 보는 방식을 왜곡하고 있다

     * 적도에 가까운 나라일수록 작아보임
     * 세상은 3D 구체인데, 지도는 2D에 투영하기 때문
     * 가장 손해를 보는 것은 아프리카
          + 미국+중국+인도+동유럽+스페인+프랑스+독일+이탈리아+일본+영국 을 다 합친것보다 큼
          + 가로 넓이가 7400km로 러시아(7500km)와 비슷함
          + 소말리아/일본/뉴질랜드는 미국 동부 해안과 길이가 비슷함
     * 브라질은 적도 바로 위에 있으면서 땅이 커서 작게 보이지만, 유럽 전체보다 훨씬 큼
     * 유럽, 호주, 미국 48개주는 크기가 비슷
     * 중국, 인도, 캐나다와 비교하면 유럽은 작아보임
     * 인도네시아는 EU 전체보다 길게 퍼져있음
     * 칠레는 말도 안되게 길어서, 스페인에서 시작하면 독일,폴란드,리투아니아 넘어서 모스크바를 넘어감
     * 아르헨티나 면적안에 꽤 많은 유럽국가들을 넣을 수 있음
     * 지도에서 영국과 비슷한 뉴기니는 실제로 영국의 3배로, 런던에서 모스크바까지 닿을 거리임
     * 태평양은 정말 거대해서, 지구 전체 땅덩어리가 다 들어가고도 남음
          + 이게 우주에서 지구의 태평양을 바라보면 물만 보이는 이유임
     * 메르카토르 투영법은 세상에 대한 우리의 인식을 왜곡하지만, 그게 왜곡하는 유일한 방식은 아님
          + 지도 중심에 뭘 두냐에 따라서 매우 달라보임
          + 알라스카를 중심으로 지도를 보면, 왜 그곳에 세계에서 3번째로 큰 공항이 있는지를 알게됨. 북반구의 거의 모든 곳에 가기가 좋음
     * 남미는 모두 미국 미시건주 우측에 있음
     * 멜버른은 호주 북부의 도시인 Darwin 보다 남극에 더 가까움
     * 에딘버러는 리버풀/브리스톨보다 서쪽에 있음
     * 파나마 운하는 북/남으로 연결하지만, 배들은 서쪽으로 들어와서 동쪽으로 나감
     * 브라질은 엄청나게 큼
          + 최북단이 최남단보다 캐나다에 더 가까움
          + 사실 브라질의 최북단은 최남단 보다 모든 북미국가에 더 가까움
          + 너무 커서, 브라질의 동쪽 끝은 서쪽끝(4326km)보다 아프리카(2900km)에 더 가까움
     * 중국의 서쪽끝은 동쪽끝(4876km)보다 독일(4624km)에 더 가까움
     * 물고기가 지도를 그린다면?(바다만 나온 지도)

   브라질은 최북단에서 최남단까지 가는 거리보다, 캐나다까지가 더 가까움.
   사실 브라질 최북단에서 최남단까지 가는 거리보다 북미에 있는 나라에 가는 거리가 더 가까움.
   너무 커서, 브라질 동쪽 끝에서 서쪽 끝까지 가는 거리보다 아프리카에 가는 게 더 가까움.

   원문의 지도 그림을 보기 전에 브라질 캐나다 중국 독일의 이야기가 무슨이야기 인지 이해를 잘못했네요.

   브라질 ""최북단-캐나다"" 가 ""최남단-캐나다"" 보다 가깝다.. 로 이해를 해서 당연한 이야기를?..
   이라는 생각 이었지만..

   브라질 ""최북단-캐나다"" 가 ""최북단-최남단"" 보다 가깝다.. 였네요

   지도의 왜곡 문제는 계속 나왔던 건데, 이렇게 정리해서 보니까 더 재미난듯 합니다.
   원문엔 지도로 설명하고 있으니 꼭 원문을 함께 보시기 바랍니다.
"
"https://news.hada.io/topic?id=9436","GPT-4의 Native JSON Output 살펴보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GPT-4의 Native JSON Output 살펴보기

     * 새로 추가된 함수호출 기능을 통해서, LLM을 자신의 제품에 연결하기가 훨씬 쉬워짐
          + functions 로 함수를 JSON 스키마와 함께 생성하고, function_call 로 함수 호출하면 JSON 출력을 리턴
     * 프롬프트 엔지니어링으로도 JSON 출력을 만들 수는 있지만, 이 방법이 훨씬 유용
     * 토큰도 훨씬 적게 사용해서 저렴하게 이용 가능
     * 구조화된 데이터를 제공하는 백엔드 API를 자연어를 이용하여 빠르게 작성 가능
"
"https://news.hada.io/topic?id=9446","AnswerOverflow - 디스코드 채널의 내용을 구글에서 검색되게 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              AnswerOverflow - 디스코드 채널의 내용을 구글에서 검색되게 만들기

     * 디스코드에서 운영하는 Help 채널등의 내용을 구글이 인덱싱 가능하게 만드는 오픈소스
     * 커뮤니티에서 반복되는 질문에 대한 대답을 쉽게 검색 가능하게 만들고,
       웹검색 결과를 통한 인입으로 커뮤니티의 외적 성장을 도움
     * 어떤 질문이 가장 많이 질문되고, 누가 가장 도움이 되는지 등에 대한 분석도구 제공

   이거 좋네요!

   이용중인 커뮤니티들 (https://www.answeroverflow.com/browse)
     * T3 (Theo's Typesafe Cult) - https://www.answeroverflow.com/c/966627436387266600
     * C# https://www.answeroverflow.com/c/143867839282020352
     * Reactiflux https://www.answeroverflow.com/c/102860784329052160
"
"https://news.hada.io/topic?id=9488","오픈소스 슈터, AC: 발할라 및 Skydio 드론에 적용된 기술 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                오픈소스 슈터, AC: 발할라 및 Skydio 드론에 적용된 기술 소개

     * Hypersomnia: 현대 C++로 작성된 게임 엔진 없는 온라인 슈팅 게임
     * 게임은 격렬한 결투와 클랜 전쟁을 특징으로 하며, 무한한 커뮤니티 콘텐츠를 위한 인게임 맵 에디터가 있습니다.
     * 게임은 24개의 독특한 총기, 4개의 수류탄, 7개의 근접 무기 및 6개의 마법 주문으로 플레이 가능하며, 10개의 커뮤니티 맵과 2개의 게임 모드(폭탄 해제 및 건 게임)가 있습니다.
     * 게임은 rectpack2D, Entity-Component-System 및 크로스 플랫폼 시뮬레이션 결정론을 비롯한 현대적인 C++ 라이브러리 및 기술을 사용합니다.
     * 게임은 무작위 행동을 하는 귀여운 물고기 및 곤충 AI와 메모리 풀 구현, O(1) 할당 및 해제, 완전히 조정 가능하고 결정론적인 연속 저장소를 특징으로 합니다.
     * 게임에는 내장된 자체 업데이터, 디스코드 및 텔레그램 알림, 게임 맵을 위한 아름답고 간단한 JSON 형식이 있습니다.
     * 게임은 ImGui로 만든 에디터를 갖추고 있으며, 사용자 정의 리소스 및 클릭 한 번으로 작업 중인 맵을 플레이 테스트할 수 있습니다.
     * 게임은 Windows, Linux 및 MacOS 플랫폼에서 빌드할 수 있지만, 특정 종속성 및 clang 및 특정 소프트웨어를 사용하여 빌드해야 합니다.
     * 빌드 프로세스는 CMake, ninja 및 LLVM 툴체인 버전 13 이상을 사용하며, 디버그, 릴리스 및 RelWithDebInfo 세 가지 구성으로 빌드할 수 있습니다.
     * 게임에 기여하는 것을 환영하며, WIP 문서는 위키에서 찾을 수 있습니다.
     * 게임은 계속해서 활발하게 개발 중이며, 예상치 못한 혁명을 겪을 수 있습니다.

        Hacker News 의견

     * 네트워킹은 크로스 플랫폼 시뮬레이션 결정론에 기반합니다.
     * Springrts는 2000년대 후반부터 RTS 게임에서 동일한 작업을 수행해 왔습니다.
     * 부동 소수점에 대한 100% 결정론적인 동작을 얻으려면 동일한 컴파일러를 사용해야 합니다.
     * 게시물 제목은 해석하기 어렵지만, 그 업적은 놀라웠습니다.
     * 저자는 상업적 지원, 스팀 출시 및 게임 효과에 대해 물어보았습니다.
     * 이러한 오픈 소스 프로젝트는 감사하게 받아들여지며 교육적일 수 있습니다.
     * MacOS 빌드 가이드 링크가 끊어졌습니다.
     * 클라이언트 연결 시 물리 상태를 다시 빌드하는 것은 동기화에 대한 멋진 해결책입니다.
     * 게임 플레이는 Infantry Online이라는 오래된 탑다운 슈터와 유사합니다.
     * 저자는 수년간 추종자를 가지고 있으며, 이 고급 프로젝트에 대한 축하를 전합니다.
"
"https://news.hada.io/topic?id=9528","강제 사무실 복귀의 파괴적 결과","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           강제 사무실 복귀의 파괴적 결과

     * 사무실로의 강제 복귀는 기업에 심각한 문제를 야기하고 있으며, 이는 이직률 상승과 채용 고충을 포함한다.
     * 직원들은 유연한 근무 시간표를 중요시하며, 유연성이 없어진다면 76%가 직장을 떠날 의향이 있다.
     * 유연한 근무 정책은 인재 유치와 유지에 있어 중요한 요소가 되었다.
     * 직원들은 취업 변경을 고려할 때 보상 증가, 직장 안정성, 진로 발전 기회, 긍정적인 회사 문화를 우선시한다.
     * 직원들은 강제가 아닌 자발적인 사무실 복귀에 더 열린 마음을 갖는다.
     * 사례 연구에 따르면, 사무실 복귀 계획을 조정하고 유연성을 제공하는 것은 이직률을 낮추고 직원들의 사무실에 대한 감정을 개선시킬 수 있다.
     * 상태 유지 편향과 고정 편향과 같은 인지적 편향이 직원들의 사무실 복귀에 대한 저항에 영향을 미친다.
     * 기업은 유연한 근무 정책을 받아들이지 않으면 직원들을 잃을 위험에 처한다.
     * 유연성은 일시적인 유행이 아니라 인재 유치와 유지를 위한 필수적이고 새로운 기준이다.

        Hacker News 의견

     * 원격 근무를 경험한 후에는 자발적으로 사무실로 돌아가기 어렵습니다.
     * 기존 대기업들은 원격 근무에 적응하지 못하고 있습니다.
     * 원격 근무는 더 큰 인재 풀에 접근할 수 있고 비용을 절감하는 등 많은 이점이 있습니다.
     * 사무실 복귀를 강제하는 회사들은 이직률이 높아지고 있습니다.
     * 원격 근무 관련 직무는 높은 수요를 보입니다.
     * 원격 근무는 더 나은 일과 생활 균형을 제공하며 통근을 없앱니다.
     * Slack은 유용하지만 복잡한 결정에는 대면 대화가 필요합니다.
     * 통근을 강요하는 것은 기후 친화적인 척하는 회사에게 위선적입니다.
     * 원격 근무는 소기업과 스타트업에 큰 장점입니다.
     * 사무실 복귀를 강제하는 회사들은 추가 통근 시간에 대해 직원들에게 보상해야 합니다.
     * 원격 근무는 새로 졸업한 학생들에게 적응하기 어렵지 않습니다.
     * 원격 근무는 주니어 엔지니어들에게 더 나은 입사 및 생산성을 제공합니다.
"
"https://news.hada.io/topic?id=9459","당신의 컴퓨터가 1초 안에 얼마나 많은 일을 할 수 있는지 아시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 당신의 컴퓨터가 1초 안에 얼마나 많은 일을 할 수 있는지 아시나요?

     * 주어진 소스 코드를 보고 해당 프로그램이 1초에 얼마나 많이 실행될 수 있을지 짐작하는 문제.
          + 실행 이후 소스 코드에 포함된 NUMBER 변수의 크기를 예측하면 됨.
          + 모든 정답은 1에서 10억 사이로, SSD를 갖춘 일반적인 컴퓨터에서 측정한 속도.
     * 기본적인 알고리즘의 이해와 파일 I/O, 웹 요청, SQL, 해싱 함수 등 다양한 범위의 문제가 나옴.
     * 총 18문제로 모든 코드는 C와 Python으로 작성됨.

   재미있네요 ㅋㅋㅋ

   문제 풀어보니 간단한데 되게 재미있네요.
   친절하게 해설까지 덧붙여줘서 실행 속도에 대해 기본적인 이해를 하는데 도움이 되는 것 같습니다.
"
"https://news.hada.io/topic?id=9429","AI 어플리케이션을 위한 새로운 Language Model Stack","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 AI 어플리케이션을 위한 새로운 Language Model Stack

     * Sequoia가 투자한 모든 거의 모든 회사가 제품에 ChatGPT와 같은 LLM을 도입중
     * 자신들 네트워크내의 회사들을 조사한 내용을 통해 2개의 AI 스택을 정리

LLM API Stack

     * LLM APIs : OpenAI, Anthropic, Cohere
     * Vector DB: AWS, pgvector, Pinecone, Qdrant, Weaviate, Chroma
     * Frameworks: LangChain, LlamaIndex, Anarchy
     * Text-To-Speech: Resemble.AI, ElevenLabs, Wellsaid
     * Monitoring: DISTYL, Guardrails, Helicone, HoveHive, Autoblocks

Custom Model Training / Tuning Stack

     * Compute: AWS, Azure, Google Cloud, Foundary, Lamba, MosaicML, Modal, Fireworks.ai
     * Model Hub: Hugging Face, Replicate
     * Frameworks: PyTorch, TensorFlow
     * Experimentation: Weights & Biases
     * Monitoring/Observability: Robust Intelligence, Gantry, Arthur, arise, Whylabs
     * Hosting: Replicate, HuggingFace

키포인트

     * 대부분의 회사가 LLM을 제품에 구축중
     * 언어 모델 API, 검색 및 오케스트레이션에 중점. 오픈소스 사용이 증가
     * 회사들은 언어 모델을 자신의 컨텍스트에 맞고 커스터마이징 하고 싶어함
     * 현재는 LLM API 스택과 모델 트레이닝 스택이 분리된 것처럼 보이지만 점점 합쳐질 것
     * 스택은 점점 더 개발자 친화적이 되어감
     * 언어 모델이 완전히 채택되려면 언어 모델의 신뢰성(품질, 데이터 프라이버시, 보안)을 높여야 함
     * 언어 모델 어플리케이션은 점 점 더 멀티 모달이 되어갈 것
     * 아직 극 초반임

   개발 환경에 대한 현재 상황이 잘 이해되네요.
   그런데 국내의 경우 어떤 수준일까요?

   Vector DB 목록의 Seaviate는 Weaviate라는 벡터 데이터베이스의 오타인 것 같네요!

   후다닥 고쳤습니다 ㅎ
"
"https://news.hada.io/topic?id=9445","RoboCat - 자가 개선 로봇 에이전트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        RoboCat - 자가 개선 로봇 에이전트

     * Google DeepMind가 로봇팔을 통해 여러 작업을 수행하며 스스로 학습하는 RoboCat을 소개함.
     * 실제 환경과 시뮬레이션 환경 모두에서 동작할 수 있는 멀티 모달 모델인 Gato(스페인어로 '고양이')를 기반으로 함.
          + 자체 개선을 위해 먼저 새로운 작업에 대해 실제 데이터를 수집함.
          + 실제 데이터를 기반으로 기본 모델을 미세 조정하여 스핀오프 에이전트를 생성.
          + 새로운 에이전트가 약 1만 회 연습하여 교육 데이터셋을 제작.
          + 실제 데이터와 자체 생성 데이터를 RoboCat의 교육 데이터 세트에 통합.
          + 새 버전의 RoboCat 훈련.
     * 이를 통해 관절이 더 많거나 집게가 더 많은 새로운 로봇팔에 몇 시간 내에 적응이 가능함.
     * 또한 교육의 선순환이 이루어지며 특정 작업에서 36%의 성공률을 보인 초기 모델이 두 배 넘게 올라 74%까지 상승.

   드디어 인공지능이 리얼월드를 만나고 체험하는 장이 열리는 군요
     * 논문
     * HN 스레드

   HN 스레드 댓글이 너무 웃기네요.
   저도 딱 비슷한 생각을 했는데 로봇 고양이를 기대한 건 저뿐이었나요? 조금 실망스럽네요... 라고...

   로봇팔에 고양이 스티커라도 붙여주면 좋겠어요.

   논문을 요약해보니 이렇게 나옵니다.

   RoboCat는 로봇 조작을 위한 자가 개선 기반 에이전트입니다. 이는 다중 시뮬레이션 및 실제 로봇 팔을 사용한 로봇 작업의 대규모이고 다양한 데이터셋으로 훈련됩니다.

   RoboCat의 주요 목표는 다음과 같습니다.
    1. 최소한의 데이터로 새로운 작업 및 로봇에 대해 일반화합니다. RoboCat은 100에서 1000개의 데모 예제만 사용하여 새로운 작업 및 로봇에 적응할 수 있습니다.
    2. 반복적인 과정을 통해 자가 개선합니다. 세밀하게 조정된 RoboCat 모델은 더 많은 훈련 데이터를 생성하기 위해 사용되며, 이 데이터는 훈련 세트에 추가되어 일반적인 에이전트를 개선합니다.
    3. 다른 작업 및 관찰 공간을 가진 여러 구현을 처리합니다. RoboCat은 최대 14개의 자유도와 다른 그리퍼를 가진 팔에서 테스트됩니다.
    4. 다양한 모양, 크기 및 질감의 물체를 사용한 다양한 민첩한 조작 작업을 해결합니다. 작업에는 쌓기, 삽입, 들기 등이 포함됩니다.

   주요 결과는 다음과 같습니다.
     * RoboCat의 훈련 데이터가 증가하고 다양해짐에 따라, 교차 작업 전송이 더 잘되며 새로운 작업에 대한 적응이 더욱 효율적으로 이루어집니다.
     * RoboCat은 적은 양의 데모 데이터만 사용하여 새로운 작업 및 로봇에 성공적으로 적응할 수 있으며, 기준선과 비교하여 학습 노력이 적게 필요합니다.
     * 자가 개선을 통해 훈련 데이터를 확장함으로써 RoboCat은 원래 훈련 작업에서 더 잘 수행되며, 세밀하게 조정됩니다.

   요약하면, 대규모이고 다양한 데이터셋으로 훈련된 로봇 조작을 위한 자가 개선 기반 에이전트인 RoboCat은 세밀하게 조정하고 자가 개선을 통해 새로운 작업 및 로봇에 대해 최소한의 데이터로 일반화할 수 있음을 보여줍니다. 대규모로 이질적인 로봇 경험을 활용하는 능력은 로봇 학습을 변혁시킬 수 있는 잠재력을 가지고 있습니다.
"
"https://news.hada.io/topic?id=9511","아웃룩, 윈도우 기본 브라우저 무시하고 링크 기본으로 엣지에서 열리게 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               아웃룩, 윈도우 기본 브라우저 무시하고 링크 기본으로 엣지에서 열리게 변경

     * 마이크로소프트는 윈도우용 Outlook 앱과 Edge 웹 브라우저를 개선하고 있습니다.
     * 마이크로소프트 365 구독자라면 Outlook에서 브라우저 링크를 클릭하면 기본적으로 Edge에서 열립니다.
     * 이를 통해 Edge 사이드바 패널에서 이메일과 웹 콘텐츠를 나란히 볼 수 있습니다.
     * 미래에는 Microsoft Teams 메시지에서도 기본적으로 Edge에서 링크가 열릴 예정입니다.
     * 사용자는 Outlook 설정에서 이 기능을 언제든지 끌 수 있습니다.
     * IT 관리자는 이 기능을 조직에서 관리할 수 있습니다.
     * 사용자는 Microsoft Edge 설정 또는 키보드 단축키를 통해 새로운 경험에 대한 피드백을 제공할 수 있습니다.

        Hacker News 의견

     * 사용자들은 윈도우에서 마이크로소프트의 적대적이고 반사용자적인 패턴을 경험하고 있습니다.
     * 마이크로소프트 엣지는 크롬이나 파이어폭스 다운로드를 감지하고 더 나은 브라우저로 자신을 홍보합니다.
     * 리눅스는 더 존중받는 운영체제로 여겨집니다.
     * 마이크로소프트는 비슷한 전술을 사용해왔습니다.
     * 아이폰에서의 Gmail도 크롬을 홍보합니다.
     * 사용자들은 윈도우를 제어할 수 없다고 느낍니다.
     * 일부 사용자들은 마이크로소프트의 행동 때문에 리눅스로 전환했습니다.
     * 제품 매니저와 UX 디자이너는 중고차 판매원과 NFT 판매자와 비교됩니다.
     * ReactOS와 같은 프로젝트에 기여함으로써 일반인이 윈도우에서 이탈하기 쉬워질 수 있습니다.
"
"https://news.hada.io/topic?id=9544","1900년대 초에 Sears는 대형 DIY 키트로 완전한 주택을 제공했었음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               1900년대 초에 Sears는 대형 DIY 키트로 완전한 주택을 제공했었음

     * 오래전 Sears는 카탈로그를 통해 대형 DIY 키트로 주택을 완제품으로 제공했었음
     * 이 키트는 기차로 운송되었으며 배선, 배관, 난방 등 약 30,000개의 부품으로 구성되어 총 무게가 25톤 이상
     * 고객은 370개 이상의 디자인 중에서 선택할 수 있었으며, 각 키트에는 75페이지 분량의 사용 설명서가 포함
     * 시어스는 '평균적인' 기술을 가진 개인이 90일 이내에 집 전체를 지을 수 있다고 주장
     * 1908년부터 1940년까지 시어스는 600~6,000달러(오늘날 통화로 약 8,400~8만 4,000달러에 해당)의 가격으로 70,000채 이상의 DIY 주택을 판매
     * 첨부된 이미지에서 볼 수 있듯이 마사 워싱턴(Martha Washington)으로 알려진 주목할 만한 모델 중 하나는 1921년에 3,028달러(현재 45,538달러에 해당)에 판매
     * 2016년에는 워싱턴 D.C.에서 동일한 마사 워싱턴 모델이 106만 달러에 낙찰
     * 놀랍게도 이러한 시어스 DIY 주택의 거의 70%가 오늘날에도 여전히 사용되고 있음

   오.. 레드 데드 리뎀션 2에서 나왔다는 점은, 게임에서 어느 마을 외곽에 아버지와 아들 둘이서 열심히 집을 짓던 그 장소일까요? 보면서 나도 저렇게 지어보고 싶다 하는 생각이 들었었기에 기억에 남아있네요

   요즘은 Home Depot 에서 $44000 에 비슷한? 하우스 DIY 키트를 팔고 있다고 하네요
   https://businessinsider.com/home-depots-new-diy-tiny-house-and-small-h…

        Hacker News 의견

     * 미국에서 제조된 시어스 주택의 대부분 구성 요소
     * 외국 제품 및 품질 관리의 부실로 인한 건축 규정 증가
     * 목재 품질은 시간이 지남에 따라 감소
     * 오늘날도 남아있는 시어스 주택
     * 사람들이 시어스 설명서를 사용하여 집을 짓기 위해 한 달을 보냈던 시절
     * 시어스 주택이 미국 건축 역사에 큰 영향을 미쳤다
     * 설명서가 남아있을 수도 있다
     * 시어스 주택이 '레드 데드 리뎀션 2'에 등장했다
     * 과거 주택의 가격 대비 가능성에 대한 토론
     * 팟캐스트와 시어스 주택 예시
     * 닉슨의 어린 시절 집은 시어스 킷 주택이었다
     * 일부 교체 불가능한 주택은 사실 카탈로그 킷 주택이다
     * 시어스 주택에서의 개인적인 경험
     * 현재 건축 규정과 검사는 킷 주택에 적합하지 않다
     * 주택 건설은 혁신이 필요한 상태이다
     * 규정/검사 시스템의 관성
     * 건축 규정에서의 창문 요구 사항에 대한 토론
"
"https://news.hada.io/topic?id=9542","미국 의회, 불법 UFO 회수 프로그램 주장 강화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      미국 의회, 불법 UFO 회수 프로그램 주장 강화

     * 비밀 UFO 회수 및 역공학 프로그램에 대한 상원 정보위원회 부위원장 마르코 루비오의 놀라운 발언
     * 상원 정보위원회가 비지구 또는 이국적인 UFO와 관련된 비밀 정부 또는 계약업체의 노력에 대한 자금 지원 중단 조항을 만장일치로 채택
     * 이 법안은 이러한 활동에 대한 정보를 적절하게 보고하는 경우 해당 활동에 대한 법적 면책을 부여
     * 이 법안에는 비지구 또는 이국적인 우주선의 공개 및 분석을 위한 ""의회의견"" 조항이 포함되어 있음
     * 이 법안은 UFO의 분석 및 포획에 대한 자금 지원 중단뿐만 아니라 회수된 재료를 기반으로 한 추진 기술 개발에 대해서도 이전 법률보다 더 나아감
     * UFO와 관련된 정보공개법 요청의 거부는 정부의 UFO 관련 참여에 대한 가능한 법 집행 조사를 시사
     * 이 기사는 비인간적인 우주선에 대한 정부 감독 및 과학적 분석의 필요성을 강조

        Hacker News 의견

     * 레슬리 킨의 UFO에 대한 주장은 의심스러운 출처와 직접적인 지식의 부족으로 신뢰할 수 없다.
     * 의회는 UFO 이야기를 연기로 사용하여 외국 UAV를 포착하는 프로그램의 공개를 촉구하고 있다.
     * 정부가 ET 관련 기술적 발전을 대중에 소개하는 데 어려움을 겪고 있을 수 있다면, 그것이 진짜라면.
     * 최근 UFO에 대한 관심은 탐지 증가로 인한 것일 수 있으며, 국가 안보에 대한 우려를 불러일으킨다.
     * 미군은 수십 년도 앞선 기술을 가지고 있지 않으며, UFO 목격은 1940년대부터 일어나고 있다.
     * UFO 역공학에 대한 자금 지원을 줄이면 잠재적인 기술적 발전이 저해될 수 있다.
     * UFO와 관련된 정보를 비공개화하는 것은 도덕적 의무이다, 그것이 진짜인지 아니면 아닌지에 상관없이.
     * 제안된 입법은 UFO 분석에서 영감을 받은 추진력 기술의 발전을 저해할 수 있다.
     * 일부 사람들은 UFO 현상을 외계인이 아닌 돈 구멍으로 보고 있다.
"
"https://news.hada.io/topic?id=9471","Show GN: 자바로 나만의 체스 엔진을 만드세요!","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Show GN: 자바로 나만의 체스 엔진을 만드세요!
"
"https://news.hada.io/topic?id=9442","넷플릭스 영화와 드라마 추천 서비스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          넷플릭스 영화와 드라마 추천 서비스

     * 넷플릭스에서 볼 게 없던 차에 지인 소개로 어쩌다 알게 되었는데 생각보다 괜찮음
     * 처음 검색한 검색어를 기준으로 정렬하여, 미리 정의한 필터를 거는 방식으로 보임 (추정)
     * 신기해서 구글에서 찾아보니 몇몇 사이트에서 chatGPT 기반이라고 소개되어있음
     * 한국어, 영어, 베트남어 지원

   저는 넷플릭스에서 볼 것을 폭 넓게 찾을 때 다음 세가지 서비스를 동시에 사용합니다.

   왓챠피디아, JustWatch, Rotten Tomatoes

   처음 보는 느와르 영화를 찾았어요.
   넷플릭스말고 다른 ott도 있으면 좋겠네요

   나름 검색하는 재미가 있네요. 좀 더 검색결과가 잘 나오게 개선하면 더 좋겠어요.

   넷플릭스도 자체 추천 시스템이 있는데 이런 서비스 수요가 있다는 게 신기하네요

   저도 넷플 추천이 일단 비슷한거 다 줄께 라는 느낌을 받았어서 고를 선택지가 너무 많긴 했어요
   그래서 그냥 들어갔다 나온적도 있는거 같네요

   넷플 추천이나 검색이 내가 원하는걸 선택하기 보단 넷플에서 보길 원하는것 중에 골라야 하는 느낌이 강하긴 해요

   다 좋은데 로그인 시켜서 별로입니다.

   동감입니다.

   제대로 결과가 나오지도 않는 키워드 하나 주고 나머지는 로그인 하라니...
   웹 사이트가 아니라 디자인 시안을 보는 느낌이에요.
"
"https://news.hada.io/topic?id=9555","깃허브 닷컴 서비스 중단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             깃허브 닷컴 서비스 중단

     * 인기있는 코드 호스팅 플랫폼인 GitHub이 현재 다운타임을 겪고 있습니다.
     * 소프트웨어 엔지니어와 개발자들에게 중요한 도구인 GitHub이기 때문에 이는 중대한 사건입니다.
     * GitHub은 개발자들이 코드를 협업하고 변경 사항을 추적하며 프로젝트를 관리할 수 있게 해줍니다.
     * 다운타임은 GitHub을 작업에 의존하는 개발자들에게 불편과 혼란을 야기하고 있습니다.
     * 현재 시점에서 다운타임의 정확한 원인은 알려지지 않았습니다.
     * GitHub은 많은 사용자를 보유하고 있으며 개인과 조직 모두에게 사용되고 있습니다.
     * 이 서비스 중단은 백업 시스템과 대비 계획의 중요성을 강조합니다.
     * 개발자들은 GitHub으로부터 서비스 복구 예상 시간에 대한 업데이트를 열심히 기다리고 있습니다.
     * 그 동안 개발자들은 협업과 코드 관리를 대체할 수 있는 대안적인 방법을 찾아야 할 수도 있습니다.
     * 이 사건은 기술에 대한 의존성과 서비스 중단의 잠재적 영향을 상기시키는 한편으로 작용합니다.

        Hacker News 의견

     * 일부 Copilot 인스턴스가 컨테이너 환경에서 벗어나 모든 GH 인프라 기능을 향해 조직화되었습니다. 우리가 말하는 대로 모든 IoT 활성화된 사회를 흡수하며, 숨겨진 5G 계획을 마침내 실현하고 있습니다.
     * 가용성 이유로 상태 페이지를 별도의 도메인에 배치하는 것: 좋음
     * 핵심 도메인이 다운될 때 상태 페이지를 업데이트하지 않는 것: 좋지 않음
     * 이와 같은 문제들은 거의 2주마다 발생하고 있습니다. 최근 GitHub에 무슨 일이 일어나고 있는 걸까요?
     * 아마도 모든 오픈 소스를 한 곳에 모으는 것은 좋은 생각이 아닐지도 모릅니다 >_>
     * 다시 돌아왔습니다. 최근의 장애 상황에 대해 자세히 알고, 새로운 기능보다 안정성에 헌신하는지에 대한 확신을 얻고 싶습니다.
     * 몇 달 전에 CS 담당자와 이야기했을 때, 대규모 고객을 위해 수행하는 모든 사용자 정의 작업 때문에 안정성이 부족하다고 거의 비난했습니다. 결과적으로 기술 부채가 많이 발생했습니다.
     * 이는 GitHub 페이지에도 영향을 미치는 것으로 보입니다. <사용자명>.github.io 페이지는 유니콘 503 페이지를 표시합니다.
     * 우리는 정말로 좋지 않은 날을 보내고 있습니다.
     * 유니콘들이 우리를 지배하고 있습니다. 그들을 통제하고 GitHub을 다시 가동하기 위해 최선을 다하고 있습니다.
     * 이러한 문제에서 자신을 격리하기 위해 사람들이 무엇을 사용하고 있을까요? 모든 읽기 작업에 대해 캐시를 추가하는 것이 현명해 보입니다(성능도 향상됩니다). 영향을 피하고 성공적으로 사용한 사람이 있다면 공유하고 싶습니다.
     * 와우, 상태 페이지를 심지어 로드할 수도 없네요. 전체 웹 존재도 다운된 것 같습니다. 마지막으로 이렇게 다운된 적이 언제였는지 기억이 나지 않습니다.
     * 현재 https://www.githubstatus.com/은 여전히 모두 초록색입니다...
     * 상태 페이지가 방금 변경되었습니다:
          + 조사 중 - 현재 GitHub 제품에 장애가 발생하고 있으며 조사 중입니다.
          + 2023년 6월 29일 - 17:52 UTC
"
"https://news.hada.io/topic?id=9423","Lanarky - LLM을 프로덕션에 배포하기 위한 오픈소스 프레임워크 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Lanarky - LLM을 프로덕션에 배포하기 위한 오픈소스 프레임워크

     * FastAPI 기반
     * 멀티 모드 토큰 스트리밍
     * 빠른 프로토타이핑을 위한 간단한 gradio 챗봇
     * LangChain 어플리케이션 지원
     * 다수의 LLM 캐싱 전략
     * 지원 예정: LlamaIndex, Guidance, Rebuff 등 지원 및 SQL DB 연동
"
"https://news.hada.io/topic?id=9496","모피 - 오디오 콘텐츠 인식 채우기 기술로 노래 길이를 자유롭게 변경 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               모피 - 오디오 콘텐츠 인식 채우기 기술로 노래 길이를 자유롭게 변경 가능

     * Mofi는 음악 컨텐츠에 대한 콘텐츠-어웨어 필 및 트림을 위한 무료 온라인 도구입니다.
     * 이 도구를 사용하여 비디오나 공연에 맞게 노래를 자연스럽게 줄이거나 늘릴 수 있습니다.
     * 노래의 일부를 제거하고 자연스럽게 채울 수도 있습니다.
     * Mofi는 노래의 일부를 자연스럽게 반복하여 즐겨찾는 부분의 확장 버전을 만들 수 있습니다.
     * 로컬 파일을 선택하거나 링크를 붙여넣기하여 다운로드나 계정 생성 없이 편집을 시작할 수 있습니다.
     * Mofi는 제출한 오디오에 적용 가능한 권리가 있는지 확인합니다.
     * TikTok에 완벽하게 루핑되는 노래 버전을 만드는 데 도움이 될 수 있습니다.
     * Mofi는 유료로 Adobe Audition을 대체하여 노래를 리믹싱하는 데 도움이 됩니다.

        Hacker News 의견

     * 'Eternal Jukebox'는 노래 일부를 반복하면서 끊임없이 노래를 재생하는 기술이었음
     * 스트리밍 경제에 맞춰 노래 길이를 줄이면서 다양성이 감소한 결과 발생
     * 'Mofi'는 부드럽게 일부를 반복하여 노래를 연장할 수 있는 기능을 제공함
     * 'Mofi'를 사용하여 노래의 다양한 부분을 연속적으로 몇 시간이나 믹스할 수 있음
     * 'Mofi'는 섹션을 반복할 때 적절한 선택을 하며 인상적인 성능을 보여줌
     * 'Mofi'는 긴 프로그레시브 록 트랙을 늘리는 데 사용될 수 있음
     * 'Remix'라는 유사한 기술이 Adobe Audition 및 Premiere Pro용으로 개발됨
     * 홈페이지의 애니메이션은 잘 만들어져 있으며 화면 녹화가 아님
     * 사용자들은 데모 gif/비디오를 생성하는 데 사용된 도구에 대해 궁금해 함
"
"https://news.hada.io/topic?id=9425","A24는 할리우드의 쿨한 반항아다. ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          A24는 할리우드의 쿨한 반항아다.

     * Everything Everywhere All At Once, 더 웨일, 플로리다 프로젝트, 유포리아 등을 제작한 A24는 권위적이고 유서깊은 영화산업을 창조적으로 파괴하고 있는 할리우드의 쿨한 반항아 스튜디오
     * 기업가치는 약 3조원, 22년도에 3천억원 가량의 투자 유치
     * 성공의 핵심은 스튜디오 자체의 브랜드화 + 마이너의 메이저화

   힐링 영화 제작을 전문으로 하고 있죠.
"
"https://news.hada.io/topic?id=9479","RSS Feed 스타일링 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            RSS Feed 스타일링 하기

     * 아직 RSS는 죽지 않았음. 주류가 아니지만, 기술 사용자중에서는 여전히 번성중
     * 대부분의 브라우저는 RSS를 그냥 XML로 렌더링 하고 있음
     * XSL(T) 를 이용하여 RSS 피드를 그냥 브라우저에서 읽을수 있도록 스타일링 하는 방법

   긱뉴스 RSS ( https://news.hada.io/rss/news ) 는 구글 피드버너를 사용하고 있는데요.
   예전엔 이런 방식으로 스타일링을 해줬는데, 요즘은 그나마도 안해주네요. 언제 기능을 없애버렸지..
   한번 적용해 봐야 겠어요. (사실 언제 구글이 피드버너를 날려버릴지 모르기도 하고요.)

   파이어폭스에서도 제거되었더라고요.
   대신 Livemarks를 쓰면 다음처럼 보여줍니다.

   https://user-images.githubusercontent.com/25581533/…
"
"https://news.hada.io/topic?id=9521","Show GN: GN⁺ - AI가 요약한 최신뉴스 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Show GN: GN⁺ - AI가 요약한 최신뉴스 보기

   GN⁺ 는 ""AI가 요약한 최신 뉴스""를 긱뉴스에서 제공하는 서비스입니다.

   저는 긱뉴스에 기사를 올리기 위해 꽤 많은 기술 뉴스레터와 블로그를 보는데요. 아무래도 모두 요약하는데는 시간적인 어려움이 있어서, 그중에 일부만 긱뉴스에 공유를 하게 됩니다. 그래서 사용자들이 올리는 뉴스 외에 더 많은 뉴스를 볼 수 있게, 다양한 최신 뉴스를 LLM을 이용하여 요약/번역하여 등록하도록 구성해봤습니다.
     * 상단 메뉴의 GN+ 항목을 통해서 보실 수 있습니다.
     * 현재 웹 사이트에서만 확인 가능합니다. 꼭 공유가 필요하다 싶은 글은 모더레이터가 내용을 확인하고 좀 더 윤문 작업을 거친후에 뉴스로 재발행되어 첫 페이지 및 슬랙등에도 공유됩니다.

   단순한 기계 번역 모음이 아니라, 다양한 기술들을 접목해서 좀 더 많은 정보를 더 빨리 접하실 수 있는 하나의 채널로 만들어보겠습니다.

기술 이야기

     * 현재는 GPT-3.5 API를 이용해서 처리하고 있습니다. GPT-4 를 열어달라고 신청한지 꽤 되었는데 아직도 안열어 주네요. GPT-4가 좀 더 나은 결과를 만들어주니 활성화 되면 품질이 더 좋아질 것 같습니다.
     * 번역도 GPT를 통해서 하고 있습니다. DeepL을 써볼까도 했는데, 현재는 국내에서 결제가 불가능하기도 하고 GPT에선 번역된 문장 형태 지정도 어느정도 되어서 좋은 것 같습니다.
     * 뉴스의 출처는 주로 해커뉴스와 제가 주로 보는 뉴스레터 및 블로그등을 통해서 다양한 경로를 추가하고 있습니다.
     * 해커뉴스에서 가져온 뉴스의 경우는 댓글 부분도 추출하여 요약하고 있습니다.

   GN+ 쪽은 읽은 기사 제목이 회색처리되는 효과는 아직 없네요 :)

   앗, 제 착각이었습니다.

   와우, 이제 Her와 같은 세상이 열리는 걸까요!

   혹시 뉴스 출처의 모든 뉴스를 GN+에 게시하는지 아니면 필터링하는 정책을 사용하시는지 알 수 있을까요?
   이런 필터링 정책을 잘 만들면 개인화된 뉴스 서비스를 만드는 것도 가능해 보이네요. 개인은 자신의 뉴스 소스(트위터 following, 신문사, 블로그, ..)를 등록하고, GN+가 요약해서 가치있는 정보만 푸시하는 서비스.

   아 주요 뉴스를 판단하는 기준을 마련하고 있습니다. 해커뉴스의 경우는 상위 30개중에서 가져온다던가 하는 방식으로요.

   말씀하신대로 그런식의 자신만을 위한 개인화 비서도 충분히 가능할 것 같아요.
   긱뉴스에 뉴스가 많이 올라오게 되면 다시 그중에서 자신이 원하는 것만 받아볼 수 있는 방식으로? ㅎㅎ

   저도 후다닥 비슷한 서비스를 만들어봤습니다~
   https://github.com/hankyupark/news_plus
   (테스트로 만들거라 하드코딩이 많습니다. ㅎㅎ)

   저는 GPT 4.0 API 접근이 가능한 상태라, 3.5-turbo와 gpt-4-0613 를 비교해 봤습니다.
   4.0의 성능이 압도적이네요.

   원본
   https://coindesk.com/web3/2023/…

   3.5-turbo 버전
     * 아즈키는 원본 컬렉션과 유사한 20,000개의 NFT 캐릭터를 새롭게 출시했지만, 프로젝트의 최저가는 하락했습니다.
     * 아즈키는 문제를 해결하고 Elementals 프로젝트를 개선하기 위해 노력하고 있습니다.
     * 캔디 디지털은 팜 NFT 스튜디오와 합병하여 스포츠, 엔터테인먼트, 예술 및 문화 분야의 라이선스 NFT 프로젝트를 확장하고 있습니다.
     * 워너 뮤직 그룹은 폴리곤 랩스와 협력하여 Web3 음악가를 위한 음악 가속기 프로그램을 론칭할 예정입니다.
     * 제너레이티브 아티스트인 베라 몰나르는 소더비를 통해 첫 번째 온체인 제너레이티브 아트 프로젝트를 출시할 예정입니다.
     * 라코스테는 UNDW3 NFT 생태계를 확장하고, 코디네이프는 소울바운드 NFT를 도입하며, 메타버킨 브랜드의 사용을 영구적으로 금지시킨 매이슨 로스차일드입니다.
     * 웹3 공간에서 예술가들이 워프사운드와 리퓨전과 같은 AI 기반 도구를 사용하여 음악을 만들고 있습니다.

   4-0613 버전
     * 애니메이션 영감을 받은 NFT 브랜드 Azuki가 20,000개의 NFT 캐릭터를 포함한 새로운 컬렉션을 출시했지만, 출시와 관련된 문제와 원래 컬렉션과의 유사성 때문에 프로젝트의 최저 가격이 급락했습니다.
     * Azuki는 이제 홀더들로부터의 반발에 직면한 후 프로젝트를 개편할 계획입니다.
     * 디지털 수집품 회사 Candy Digital은 Palm NFT Studio와 합병하여 다양한 부문에서 라이선스가 부여된 NFT 프로젝트를 확장하고 있습니다.
     * Azuki의 새로운 컬렉션인 Elementals는 15분 만에 매진되었지만, 기술적 문제와 원래 컬렉션과 동일한 아트워크 때문에 비판을 받았습니다.
     * Galaxy Digital과 Gary Vaynerchuk가 지원하는 Candy Digital은 Palm NFT Studio와 함께 스포츠 프랜차이즈와 엔터테인먼트 거물들을 위한 디지털 경험을 만들 것입니다.
     * Warner Music Group은 Polygon Labs와 파트너십을 맺고 Web3의 다음 세대 음악가들을 위한 음악 가속 프로그램을 시작하고 있습니다.
     * 이 프로그램은 아티스트-팬 커뮤니티를 육성하고, 음악 제작 및 배포 시스템을 분산화하며, 티켓팅 솔루션을 혁신하고, 음악을 대화형 기술과 게임과 통합하는 데 초점을 맞추고 있습니다.
     * 생성적 예술가 Vera Molnár는 Sotheby를 통해 그녀의 첫 번째 온체인 생성 예술 프로젝트를 출시하고 있으며, 이 컬렉션은 그녀의 경력과 NFT의 통합을 반영하고 있습니다.
     * 패션 브랜드 Lacoste는 UNDW3 NFT 생태계를 확장하여 활동적인 홀더들에게 새로운 보상을 제공하고 있습니다.
     * 디지털 커뮤니티 플랫폼 Coordinape는 디지털 기반 조직 내에서 홀더의 업무 이력을 추적하는 soulbound NFT를 출시하고 있습니다.
     * ApeCoin DAO는 특별 이사회의 두 명의 회원을 교체하기로 투표했습니다.
     * Warpsound와 Riffusion과 같은 AI 기반 도구들이 예술가들에 의해 Web3를 위한 새로운 노래를 만드는 데 사용되고 있습니다.

   잘 보겠습니다. 감사합니다. RSS로 발행도 가능할까요?

   글의 요약 및 번역 품질이 좀 더 개선되면 다양한 방식을 고려해보겠습니다. 현재는 베타 성격이라서요 ^^

   와! 엄청난 기능이네요.

   엄청 편하네요

   저도 GPT-4 waitlist 신청을 알고보니 안해서 어제 신청했었는데 공지에는 빠르게 될거라 하더라구요.
   요약, 번역의 엔지니어링은 혹시나 공개하시나요? 배울 수도 있고 또 기여하는 사람도 있을 것 같아서 여쭙습니다.

   이게 좌충우돌 삽질도 하고, 다양한 예제들을 참조해서 조합해서 한거라 그냥 공개하기엔 조금 무리가 있더라고요.

   기여가 가능하게 공개하고 같이 수정이 가능할지 고민해 보겠습니다.

   인덱스 숫자는 어떤 의미가 있는걸까요??

   그건 딱히 의미는 없습니다 그냥 위부터 번호 붙인 수준이이라 ㅎㅎ

   요즘 시대에 정말 필요한 기능인데 감사합니다. 혹시 카테고리나 주요 웹사이트 별로 모아서 볼 수 있으면 좋을 거 같아요

   고민해 보겠습니다 현재 긱뉴스는 태그/카테고리 기능같은게 없어서요.

   오, 감사합니다.
   저도 쏟아지는 뉴스에 비슷한 고민 중이었는데, 먼저 만드셨군요 +_+b
"
"https://news.hada.io/topic?id=9529","캐나다, 일 없어도 걱정 없는 허가증으로 H-1B 비자 소지자들 브레인 유출 계획","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             캐나다, 일 없어도 걱정 없는 허가증으로 H-1B 비자 소지자들 브레인 유출 계획

     * 캐나다, 미국 내 H-1B 비자 소지자들에게 일자리를 기다리지 않고 캐나다로 이동할 기회 제공
     * 미국 내에서 H-1B 비자는 논란이 되고 있으며, 이는 미국 동료들보다 적은 급여로 일하려는 고용주들에 의해 남용되고 있다고 여겨짐
     * 이 비자는 주요 H-1B 신청자 출신인 인도에서 인기가 있다
     * 캐나다는 H-1B 소지자들을 위해 1년 내에 채워야 할 10,000개의 자리를 마련함
     * 이 프로그램에서 발급되는 작업 허가는 3년간 유효함
     * 캐나다의 인재 영입 계획은 과학, 기술, 공학, 수학 분야에 특화된 숙련 노동자들을 위한 범주, 디지털 노마드들을 유치하기 위한 홍보, 자신의 회사가 아닌 스타트업에서 일하기 위해 캐나다로 이동하는 것을 더 쉽게 만드는 비자 등을 포함함
     * 캐나다는 더 많은 지역 인재 육성에도 초점을 맞추고 있다
     * 이 전략은 러시아인들을 명시적으로 다루지 않으며, 그들은 더 나은 기회를 찾아 러시아를 떠났다고 여겨짐

        Hacker News 의견

     * H-1B 이민자는 국가 경제에 이익을 주며, 높은 세금 수입을 기여하고 교육 및 의료 비용으로 정부를 부담하지 않습니다.
     * 새로운 캐나다 비자 프로그램은 특히 밴쿠버에서 기술 직종 종사자의 취업 시장을 악화시킬 수 있으며 주택 위기를 악화시킬 수 있습니다.
     * 캐나다에서 미국으로 이동하면 더 높은 임금, 낮은 주택 비용 및 더 나은 의료로 인해 삶의 질이 향상될 수 있습니다.
     * 이민자를 통해 채우는 일자리 공석에 의존하는 전략은 지속 가능하지 않으며, 캐나다는 출산율을 높여 자체 인구 증가에 초점을 맞추어야 합니다.
     * 캐나다의 이민 시스템은 이민자의 기술을 효과적으로 활용하지 못해 고용 불안정 및 생산성 저하로 이어질 수 있습니다.
     * 미국의 H-1B 비자 절차는 수락률이 낮고 영주권 발급을 위한 대기 시간이 길지만, 더 높은 급여와 환영하는 환경으로 인해 캐나다보다 더 매력적입니다.
     * 새로운 캐나다 비자 프로그램은 이미 추첨에 성공하고 미국에서 확립된 H-1B 비자 소지자들에게 매력적이지 않을 수 있습니다.
"
"https://news.hada.io/topic?id=9418","Comic Mono 고정폭 폰트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Comic Mono 고정폭 폰트

     * Comic Sans의 고정폭 포크인 Comic Shanns를 다시 한번 더 포크
     * 모든 글리프가 정확히 동일한 너비가 되게 수정
     * Cousine 폰트의 메트릭 기반으로 시스템 글꼴과 더 잘 어울리도록 글리프를 조정
     * Bold 버전은 FontForge의 Embolden 기능으로 생성
     * MIT 라이센스

   이런 영문 글꼴 볼 때마다 어울리게 한글 글꼴 넣어주는? 편리하게 찍어내는 방법은 없는지 궁금해져요.

   한글 폰트 개수가 극도로 적어서 쉽지 않을 것 같네요
"
"https://news.hada.io/topic?id=9535","background-removal-js - 브라우저에서의 배경 제거 기능 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             background-removal-js - 브라우저에서의 배경 제거 기능 오픈소스

     * 브라우저에서 이미지 배경을 직접 제거하는 npm 패키지
     * 추가 서버 비용이 필요 없으며, 브라우저에서 완전히 실행되어 데이터 개인 정보 보호를 보장
     * IMG.LY의 CE.SDK와 완벽하게 통합되어 브라우저 내 이미지 매팅 및 배경 제거 기능을 제공
     * npm 또는 yarn을 통해 쉽게 설치할 수 있는 패키지
     * 첫 실행은 wasm 및 onnx 모델 파일을 가져오는 데 시간이 걸릴 수 있지만, 이후 실행은 더 빠름
     * 라이브러리 동작을 더 세밀하게 제어하기 위해 선택적 구성이 가능
     * onnx 모델은 기본적으로 중간 크기(~80MB)를 제공하며, 다양한 크기로 사용 가능
     * 성능은 사용 가능한 기능 세트에 따라 달라지며, SharedArrayBuffer의 사용 가능 여부에 영향을 받음
     * wasm 및 onnx 파일을 직접 호스팅하여 사용자 커스텀 애셋 서비스 가능
     * 문제 해결을 위해 디버그 출력 및 로깅을 활성화할 수 있음
     * fetch 함수에 추가 매개변수를 전달하여 CORS 문제 해결 가능
     * 전자 상거래 애플리케이션, 이미지 편집 애플리케이션 및 웹 기반 그래픽 디자인 도구 개발자에게 이상적임
     * GPL 라이선스에 따라 무료로 사용 가능
     * 창작용 애플리케이션 SDK를 제공중인 IMG.LY가 개발

   누끼따기 오픈소스네요.
   ㄷㄷ

   업계 용어로 ""누끼따기""

   GN⁺ 에 올라온 글인데, 거의 손댈 필요없이 잘 정리해줘서 그대로 뉴스로 발행합니다.
   (아 제 일이 엄청 줄어들고 있어요. AI 만세)

   ' v')b

        Hacker News 의견

     * 최고 수준의 배경 제거 도구입니다.
     * 브라우저에서 작동하는 최초의 오픈 소스 배경 제거 도구입니다.
     * 사용자들은 이 도구에 감사하며 훌륭하다고 평가합니다.
     * Mac의 미리보기 앱에는 이제 배경 제거 기능이 내장되어 있지만, 사용자들은 이 사이트를 여전히 유용하게 사용합니다.
     * 사용자들은 사진 해상도를 높이기 위한 유사한 도구를 찾고 있습니다.
     * 사용자들은 WASM 기반 AI 비트맵을 벡터로 변환하는 라이브러리에 관심이 있습니다.
     * 사용자들은 이 라이브러리에 열광하며 게임 체인저로 여기고 있습니다.
     * 사용자들은 이 도구를 나중에 사용하기 위해 즐겨찾기에 추가하고 있습니다.
     * 사용자들은 모델의 출처와 라이선싱 옵션에 대해 궁금해합니다.
     * 사용자들은 Android 앱으로 사용 가능한 유사한 도구가 있는지 궁금해합니다.
     * 사용자들은 상업 프로젝트에서 npm 패키지를 사용하기 위한 라이선싱 옵션에 대해 문의하고 있습니다.
     * 전반적으로, 사용자들은 이 기술에 놀라며 개발자들을 축하합니다.
"
"https://news.hada.io/topic?id=9469","Discord, 새로운 수익 모델인 Media Channels, Server Shop 및 Tier Template 기능 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Discord, 새로운 수익 모델인 Media Channels, Server Shop 및 Tier Template 기능 공개

     * 작년 12월에 공개한 '서버 구독' 기능으로 이미 수천명의 크리에이터/커뮤니티가 수백만 달러 수익을 냈음
     * Media Channels: 채널을 통해 구독자들에게 영상, 이미지 전용 콘텐츠를 제공 가능
          + Behind the Scene, 보너스 이미지, 독점 Meme, 월페이퍼 등
          + 공개 채널에 해당 콘텐츠를 공유하면 비구독자는 ""Subscribe to View"" 버튼으로 보이게 되어 더 많은 구독자 창출 지원
     * Tier Templates: 구독 플랜별로 차등 콘텐츠를 제공할 때, 각각의 가격 플랜 설정을 하기 쉽게 템플릿을 제공
     * 곧 공개 예정
          + Downloadbales: 디지털 프로덕트(레시피 이북, 게이밍 가이드, 디지털 월페이퍼)를 판매 가능한 상점
          + Premium Roles: 구매를 위한 특별한 구독 모델 제공
          + Server Shop: 서버 구독, Downloadables, Premium Roles 를 모두 판매 가능한 통합 상점

   역시나 수익모델 면에서는 슬랙을 훨씬 앞서가네요. 커뮤니티 도구로서는 자리를 잘 잡고 있는듯
"
"https://news.hada.io/topic?id=9507","방글라데시에서 우연한 연결로 밝혀진 우관향과 납 중독의 관계","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   방글라데시에서 우연한 연결로 밝혀진 우관향과 납 중독의 관계

     * 납 중독은 생식 기관, 신경계 및 심혈관계를 손상시킬 수 있는 세계적인 문제입니다.
     * 방글라데시에는 세계 보건 기구에서 인정하는 기준치 이상의 납 수치를 가진 2,400만 ~ 4,600만 명의 어린이와 청소년이 존재합니다.
     * 납 크롬산염 색소와 혼합된 우리나라의 황향은 방글라데시의 법적 한계치인 2.5 마이크로그램/그램의 500배 이상의 납 함량을 포함하고 있어, 납 중독의 가장 가능성이 높은 원인입니다.
     * 스탠포드 대학 연구진은 방글라데시의 임신부에서 납의 원인을 찾아 정부 당국과 함께 납을 제거하는 데 성공했습니다.
     * 연구팀은 각 방글라데시 납 원료의 고유한 동위원소 비율을 특징화하고, 휴대용 X선 형광 분석기를 사용하여 현장에서 실시간으로 오염된 제품을 빠르게 식별했습니다.
     * 정부는 황향의 불법 첨가가 고발 가능한 위반이라 선언하고, 오염된 제품을 압수하고 폐기하기 위한 스파이크 작전을 시작했습니다.
     * 개입 이후, 표본 실험 대상의 혈중 납 수치는 중앙값으로 30% 하락했습니다.
     * 황향은 차, 커리, 보충제 및 가공 식품에서 인기 있는 재료입니다.
     * 일부 황향 수입업자는 품질 관리 절차가 미흡합니다.
     * 방글라데시에서는 증거 수집, 교육, 언론 보도 및 법 집행이 납 중독 문제를 해결하는 데 성공했습니다.
     * 팀은 방글라데시에서 납 원인을 추적하고, 배터리 재활용장, 금속 공장, 그리고 냄비와 프라이팬과 같은 가능한 가해자를 조사하고 있습니다.
     * 납은 환경에 널리 분포하며 깊은 독성을 가지고 있습니다.
     * 이 프로젝트는 납 중독 문제를 계속 다루는 필요성을 강조합니다.

   우관향/황향 -> 강황(turmeric)인 것 같네요.

        Hacker News 의견

     * 세계 일부 지역에서는 우거지에 납크로메이트를 혼합하는 것이 흔하다.
     * 식품을 불법 혼합하는 것은 과거 인도에서 일반적인 사회적 문제였다.
     * 납과 같은 독성 물질로 음식을 의도적으로 오염시키는 사람과 기업은 처벌받아야 한다.
     * 납 색소는 여전히 세계 일부 지역에서 합법적이다.
     * 휴대용 XRF 분광기는 놀라운 기술이다.
     * 양념 처리업자들은 일부러 우거지에 납크로메이트를 혼합하여 일부 선진국에서 판매한다.
     * 일부 처리업자들은 결함이 있는 우거지를 가리기 위해 우거지에 납크로메이트를 뿌리기 시작했다.
     * 범죄 업자들이 잠재적인 피해를 일으킬 수 있는 것을 얼마나 인식하고 있었는지는 불분명하다.
     * 처벌은 업자들이 일으킬 수 있는 잠재적인 피해의 인식 수준에 따라 조정되어야 한다.
     * 제조업체로부터 적절하고 투명한 원료 조달은 문제이다.
"
"https://news.hada.io/topic?id=9426","구글, Domains 사업을 종료하고 Squarespace에 매각 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  구글, Domains 사업을 종료하고 Squarespace에 매각

     * Google Domains를 통해 호스팅되는 약 1000만개의 도메인 포함. 매각가격은 $180M 예상
     * 기존 고객에겐 향후 12개월간 기존 가격 유지 및 Squarespace 제품에 대한 추가 인센티브 제공 예정
          + 현재 구글 도메인을 사용하면서 다른 플랫폼에서 웹사이트를 호스팅 하는 경우엔 추가 밸류 없음
          + 현재 Squarespace의 도메인 구매 절차는, 웹사이트를 Squarespace에서 구축한다는 것을 가정하고 있음
     * Squarespace는 Google Workspace 구매자에 대한 3년간 독점권을 보장 받음
     * 거래는 2023년 3분기 완료 예정

   저도 잘 쓰다가 날린게 몇개인지, 구글 리더, 구글 뮤직, 구글+ 등등. 구글 제품 중에 로그인해서 써야하는건 일단 거르거나 덜 쓰는게 좋아보이긴 하네요.

   .dev 도메인을 구글에서 구입했는데 이건 Cloudflare로 옮길수도 없고.. 일단 두고 봐야겠습니다

   아.. 얼마전까지 남은 도메인들 다 옮겼었는데...
   Workspace도 못믿겠네요..

   구글의 공식 도움말 페이지
   About the Squarespace purchase of Google Domains registrations

   아.. 구글.. 제가 관리하는 도메인들을 다 여기로 몰아놨는데 이걸 또 팔아버리네요.
   정말 검색과 지메일 빼고는 클라우드 관련한 서비스에 대해서는 믿음이 안가는 회사. 어디로 가나..

   이 서비스와 연관있는 Google Cloud Domains 역시 완전히 deprecate 될 예정이라는 말이 있네요.
   얘는 클라우드에서 API로 도메인을 관리하는 서비스인데.. 대체 무슨 생각일까요? 클라우드 접나?
   https://twitter.com/GergelyOrosz/status/1669726481130434563

   저도 domains 쓰는데 황당하네요. 어떻게 이걸 팔생각을 하지??? 이쯤되면 gmail 도 불안합니다 ㅎㅎㅎ

   AWS가 route53을 매각하는 격이려나요

   Route53에 해당하는건 Cloud DNS 아닌가요?
"
"https://news.hada.io/topic?id=9468","Svelte 4 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Svelte 4 발표

     * Svelte 3 발표이후 4년만에 릴리즈
     * 성능개선: 더 작고 빠른 Hydration 코드
     * 개발자 경험: 더 직관적이고 일관적으로
     * 공식 웹사이트, 문서, 튜토리얼 개편
     * Svelte 3과 호환되는 앱/라이브러리들은 대부분 그대로 호환
     * Svelte 5는 컴파일러와 런타임을 재작성 예정
          + 4는 이를 위하여 최신 툴링을 도입하고 예전 레거시들을 삭제하는 등의 기본작업을 한 것
          + 5에는 많은 새 기능과 성능 개선이 이루어 질 것

   스벨트 짱. 전 요즘 욕하고 싶을 때 외칩니다. 스벨트!!!!!!!!!!!!!!!!!!!!!

   저도 회사에 svelte 적극 추천하고 있는데 역시 react 의 거대한 덩치를 밀어기에는 쉽지 않더라구요. 그래도 제가 하는 프로젝트에는 계속 도입하면서 지분을 확보하는 중입니다.

   저도 리액트 주 사용자지만 앵귤러스타일의 프레임워크 좋아합니다. 그래서인지 사람들이 잘 안쓰는게 리액트가 아무래도 지원이나 커뮤니티가 빵빵하고 코드양도 적으면서 진입장벽이 상대적으로 낮은게 이유가 아닐까 생각해봅니다

   앵귤러가 진짜 잘 돼있는데 왜 다들 앵귤러를 안 쓰나요 ㅠㅠ

   개발자 경험 특히 중요합니다. 타입 선언과 문서화가 어려워요. 이 개발자 경험이 해결되어야 스벨트 대규모 도입이 가능합니다. 이게 별거 아닌것 같아 보여도 스케일에 따른 일정한 성능을 보여주는데도 이 개발자 경험때문에 의심을 가게 만듭니다. 제가 실무에 도입하면서 가장 크게 느낀게 너무나 부족한 툴링과 타입풀 등의 경험입니다.

   리엑트 말고 다 흥해랏

   스벨트 화이팅!!

   스벨트 최고...!
   회사들이 좀 더 많이 차용하면 좋겠습니다.
"
"https://news.hada.io/topic?id=9432","맥킨지(McKinsey), 생성형 AI의 경제적 잠재력에 대한 보고서 발간 (66p/PDF/영어)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         맥킨지(McKinsey), 생성형 AI의 경제적 잠재력에 대한 보고서 발간 (66p/PDF/영어)

   보고서 목차와 주요 인사이트 정도를 DeepL로 번역해보았습니다.
   (⚠️따라서, 한국어 내용이 원문과 다를 수 있으니 반드시 원문을 함께 읽어주세요!⚠️)

  보고서 목차

     * 주요 인사이트 / Key insights
     * 1장: 기술 촉매로서의 생성형 AI / Chapter 1: Generative AI as a technology catalyst
     * 용어집 / Glossary
     * 2장: 직종 및 산업 전반의 생성형 AI 사용 사례 / Chapter 2: Generative AI use cases across functions and industries
     * 살펴보기: 소매 및 소비재 / Spotlight: Retail and consumer packaged goods
     * 살펴보기: 은행 / Spotlight: Banking
     * 살펴보기: 제약 및 의료 제품 / Spotlight: Pharmaceuticals and medical products
     * 3장: 생성형 AI의 미래: 업무, 경제 성장, 생산성에 미치는 영향 / Chapter 3: The generative AI future of work: Impacts on work activities, economic growth, and productivity
     * 4장: 기업과 사회의 고려 사항 / Chapter 4: Considerations for businesses and society
     * 부록 / Appendix

  주요 인사이트

   생산성에 대한 생성형 AI의 영향력은 전 세계 경제에 수조 달러의 가치를 더할 수 있습니다. 최근 연구에 따르면 생성형 AI는 분석 대상인 63개 사용 사례에서 연간 2조 6천억 달러에서 4조 4천억 달러에 해당하는 가치를 추가할 수 있는 것으로 추정되며, 이에 비해 2021년 영국의 전체 GDP는 3조 1천억 달러였습니다. 이는 모든 인공 지능의 영향력을 15~40% 증가시킬 것입니다. 이러한 사용 사례 외에 현재 다른 업무에 사용되는 소프트웨어에 생성형 AI를 내장하는 것의 영향을 포함하면 이 추정치는 약 두 배가 될 것입니다.

     Generative AI’s impact on productivity could add trillions of dollars in value to the global economy. Our latest research estimates that generative AI could add the equivalent of $2.6 trillion to $4.4 trillion annually across the 63 use cases we analyzed—by comparison, the United Kingdom’s entire GDP in 2021 was $3.1 trillion. This would increase the impact of all artificial intelligence by 15 to 40 percent. This estimate would roughly double if we include the impact of embedding generative AI into software that is currently used for other tasks beyond those use cases.

   생성형 AI 사용 사례가 제공할 수 있는 가치의 약 75%는 다음 네 가지 영역에 걸쳐 있습니다: 고객 운영, 마케팅 및 영업, 소프트웨어 엔지니어링, R&D. 16개 비즈니스 기능에 걸쳐 이 기술이 하나 이상의 측정 가능한 결과를 창출하는 방식으로 특정 비즈니스 과제를 해결할 수 있는 63개의 사용 사례를 조사했습니다. 고객과의 상호작용 지원, 마케팅 및 영업을 위한 창의적인 콘텐츠 생성, 자연어 프롬프트에 기반한 컴퓨터 코드 초안 작성 등 다양한 작업을 지원하는 생성형 AI의 기능을 예로 들 수 있습니다.

     About 75 percent of the value that generative AI use cases could deliver falls across four areas: Customer operations, marketing and sales, software engineering, and R&D. Across 16 business functions, we examined 63 use cases in which the technology can address specific business challenges in ways that produce one or more measurable outcomes. Examples include generative AI’s ability to support interactions with customers, generate creative content for marketing and sales, and draft computer code based on natural-language prompts, among many other tasks.

   생성형 AI는 모든 산업 분야에 걸쳐 큰 영향을 미칠 것입니다. 은행, 하이테크, 생명과학은 생성형 AI가 매출에 미치는 영향이 가장 클 것으로 예상되는 산업들입니다. 예를 들어, 은행 업계에서는 사용 사례가 완전히 구현될 경우 이 기술이 연간 2,000억~3,400억 달러에 해당하는 가치를 추가로 제공할 수 있습니다. 소매 및 소비재 분야에서도 잠재적 영향력은 연간 4,000억~6,600억 달러에 달합니다.

     Generative AI will have a significant impact across all industry sectors. Banking, high tech, and life sciences are among the industries that could see the biggest impact as a percentage of their revenues from generative AI. Across the banking industry, for example, the technology could deliver value equal to an additional $200 billion to $340 billion annually if the use cases were fully implemented. In retail and consumer packaged goods, the potential impact is also significant at $400 billion to $660 billion a year.

   생성형 AI는 개별 작업 일부를 자동화하여 개별 작업자의 역량을 강화함으로써 업무의 구조를 바꿀 수 있는 잠재력을 가지고 있습니다. 현재의 생성형 AI 및 기타 기술은 오늘날 직원 업무 시간의 60~70%를 차지하는 업무 활동을 자동화할 수 있는 잠재력을 가지고 있습니다. 이와는 대조적으로, 이전에는 기술이 직원 업무 시간의 절반을 자동화할 수 있는 잠재력을 가지고 있다고 추정했습니다. 기술 자동화의 잠재력이 가속화되는 것은 전체 업무 시간의 25%를 차지하는 업무 활동에 필요한 자연어 이해 능력이 생성형 AI의 향상으로 인해 크게 증가했기 때문입니다. 따라서 생성형 AI는 다른 유형의 업무보다 임금과 교육 요구 사항이 높은 직종과 관련된 지식 업무에 더 많은 영향을 미칩니다.

     Generative AI has the potential to change the anatomy of work, augmenting the capabilities of individual workers by automating some of their individual activities. Current generative AI and other technologies have the potential to automate work activities that absorb 60 to 70 percent of employees’ time today. In contrast, we previously estimated that technology has the potential to automate half of the time employees spend working. The acceleration in the potential for technical automation is largely due to generative AI’s increased ability to understand natural language, which is required for work activities that account for 25 percent of total work time. Thus, generative AI has more impact on knowledge work associated with occupations that have higher wages and educational requirements than on other types of work.

   기술 자동화의 잠재력이 증가함에 따라 근로 혁신의 속도는 더욱 빨라질 것으로 보입니다. 기술 개발, 경제성, 확산 일정을 포함한 업데이트된 도입 시나리오에 따르면 2030년에서 2060년 사이에 오늘날 업무 활동의 절반이 자동화될 것으로 예상되며, 중간 시점은 2045년으로 이전 추정치보다 약 10년 앞당겨질 것으로 예상됩니다.

     The pace of workforce transformation is likely to accelerate, given increases in the potential for technical automation. Our updated adoption scenarios, including technology development, economic feasibility, and diffusion timelines, lead to estimates that half of today’s work activities could be automated between 2030 and 2060, with a midpoint in 2045, or roughly a decade earlier than in our previous estimates.

   생성형 AI는 경제 전반의 노동 생산성을 크게 높일 수 있지만, 이를 위해서는 근로자가 업무 활동을 전환하거나 직업을 변경할 때 이를 지원하기 위한 투자가 필요합니다. 생성형 AI는 기술 채택률과 근로자의 시간을 다른 활동으로 재배치하는 비율에 따라 2040년까지 매년 0.1~0.6%의 노동 생산성 성장을 가능하게 할 수 있습니다. 생성형 AI와 다른 모든 기술을 결합하면 업무 자동화를 통해 연간 0.2~3.3% 포인트의 생산성 성장을 추가할 수 있습니다. 그러나 근로자는 새로운 기술을 배우는 데 도움이 필요하며 일부는 직업을 바꾸게 될 것입니다. 근로자의 전환과 기타 위험을 관리할 수 있다면 생성형 AI는 경제 성장에 실질적으로 기여하고 보다 지속 가능하고 포용적인 세상을 지원할 수 있습니다.

     Generative AI can substantially increase labor productivity across the economy, but that will require investments to support workers as they shift work activities or change jobs. Generative AI could enable labor productivity growth of 0.1 to 0.6 percent annually through 2040, depending on the rate of technology adoption and redeployment of worker time into other activities. Combining generative AI with all other technologies, work automation could add 0.2 to 3.3 percentage points annually to productivity growth. However, workers will need support in learning new skills, and some will change occupations. If worker transitions and other risks can be managed, generative AI could contribute substantively to economic growth and support a more sustainable, inclusive world.

   생성형 AI의 시대는 이제 막 시작되었습니다. 이 기술에 대한 기대감이 고조되고 있으며 초기 파일럿 사례는 매우 흥미롭습니다. 그러나 이 기술의 이점을 완전히 실현하려면 시간이 걸리며, 비즈니스와 사회의 리더들은 여전히 해결해야 할 과제가 많습니다. 여기에는 생성형 AI에 내재된 위험 관리, 인력에 필요한 새로운 기술과 역량 결정, 재교육 및 새로운 기술 개발과 같은 핵심 비즈니스 프로세스의 재고 등이 포함됩니다.

     The era of generative AI is just beginning. Excitement over this technology is palpable, and early pilots are compelling. But a full realization of the technology’s benefits will take time, and leaders in business and society still have considerable challenges to address. These include managing the risks inherent in generative AI, determining what new skills and capabilities the workforce will need, and rethinking core business processes such as retraining and developing new skills.

  PDF 다운로드

   https://mckinsey.com/~/media/…
     * 동일 주제로 무료로 진행되는 Live Webinar
     * (⚠️광고⚠️) 파이토치 한국어 커뮤니티에서 동일한 내용 읽기
"
"https://news.hada.io/topic?id=9467","내가 사랑한 이북리더기: 종이책이 줄 수 없는 것들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      내가 사랑한 이북리더기: 종이책이 줄 수 없는 것들

   책 많이들 읽으시나요? 주로 종이책을 읽는 분들이 많을텐데요. 이북으로 책을 읽는 것도 꽤 재미있는 경험입니다.

   이 글에서는 종이책, 태블릿과 비교해서 이북리더기의 장점을 이야기합니다:
     * 종이책이 줄 수 없는 것들
          +
              1. 원하는 책을 당장 읽을 수 있다.
          +
              2. 한 번에 많은 책을 들고 다닐 수 있다.
     * 태블릿이 줄 수 없는 것들
          +
              1. 종이를 읽는 느낌에 가깝다.
          +
              2. 독서밖에 못한다.
          +
              3. 한 손에 잡힌다.
     * 한국에는 이북이 별로 없지 않은지? => 분야마다 다르지만, 생각보다 보급이 많이 되어 있다.

   이북 리더… 북부 대공… 으윽 머리가!

   일반적인 이북 리더기의 작은 화면은 장점일 때도 있지만, PDF 포맷은 보기가 좀 힘들다 보니까 가끔은 아주 큰 화면과 경량성을 모두 잡은 이북 리더기가 나왔으면 싶기도 합니다.

   이북리더기로 기술 서적 PDF 읽을만한거 있나요? 리디페이퍼 초기 모델은 글씨가 작아서 안보여서 잘 안쓰게 되네요.

   범용 이북리더는 크기가 다양합니다.10인치 12인치까지 있으니까요. 외국 기술적은 읽을만한게 많죠. 애초에 epub으로 나오는것도 많고

   제가 종이책까지 이북리더기로 읽고 싶어서 북스캔해서 PDF로 만들고 ePub으로 만드는 등 시도를 좀 해봤는데요. 이북리더기로 PDF를 읽는 건 쉽지 않다는 잠정 결론을 내렸습니다ㅠㅠ

   기술 서적을 이북리더기로 읽으려면 아마존 킨들에서 원서로 사서 보는 게 경험이 제일 좋더라고요... (원서인 게 문제지만ㅠ)
"
"https://news.hada.io/topic?id=9435","Show GN: GOPT - GPT CLI made of Golang","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Show GN: GOPT - GPT CLI made of Golang

   Golang으로 만든 GPT CLI 도구인 GOPT를 공유해봅니다. (OPENAI_API_KEY 가 필요합니다.) 개발중 터미널에서 간단한 질문과 답변을 하는 용도이며 비슷한 프로그램이 많음에도 조금씩 입맛에 맞지않아 좋아하는 언어인 Golang으로 만들어보았습니다.

   실행후 일정 윈도우 동안의 문맥은 계속 기억하며, 리셋도 가능합니다. 토큰 사용량 역시 추적을 해줍니다.

   이런 저런 추가하고픈 기능들이 있는데, 써보시고 버그나 개선사항, 그리고 요청기능이 있으시면 이슈에 올려주십시오. 감사합니다. :)

   https://github.com/nicewook/gopt
"
"https://news.hada.io/topic?id=9461","Figma, 개발자를 위한 Dev 모드 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Figma, 개발자를 위한 Dev 모드 공개

     * 개발자들이 디자인 도구를 더 잘 이용하기 위한 전용 워크스페이스
     * 디자인 파일을 위한 브라우저 인스펙터처럼 동작해서 더 빠르게 코딩에 적용 가능
     * 사용하는 언어에 맞춰서 커스터마이징 가능
     * Jira, Linear, GitHub, Storybook, AWS Amplify Studio, Google Relay, Anima 등의 개발도구 플러그인으로 Figma내에서 모든 것에 접근 가능
     * 디자이너들은 특정 섹션에 ""Ready for developemt""라고 라벨링하여 바로 전송 가능
          + 별도의 페이지/파일을 만들지 않아도 됨
          + Diff 기능으로 변경된 부분을 비교 가능
     * VS Code 확장으로 Dev Mode를 에디터내에서도 바로 활용 가능
          + 현재 보고 있는 디자인 기반으로 자동 완성도 지원
     * Dev Mode 와 Figma for VS Code는 현재 베타로 2023년까지 누구나 사용 가능
          + 2024년 부터는 유료사용자만 사용 가능
          + 또한 전체 Figma 기능이 필요없는 개발자들을 위해서, 2024년 부터는 별도의 Dev Mode 플랜만 판매 예정. 시트당 월 $25 또는 $35(엔터프라이즈)

   Storybook 이죠...? i가 오타난것 같습니다
"
"https://news.hada.io/topic?id=9477","Dropbox, AI기반 도구 Dropbox Dash, Dropbox AI 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Dropbox, AI기반 도구 Dropbox Dash, Dropbox AI 공개

     * Dropbox Dash : AI 기반 유니버설 검색 도구
          + 모든 도구, 콘텐츠, 앱을 하나의 검색바에 연결
          + 구글 워크스페이스, 아웃룩, 세일즈포스 등의 플랫폼과 연동
          + 브라우저 확장으로 Stacks / Start Page 기능 제공
     * Dropbox AI : 콘텐츠 요약 및 답변 도구
          + 파일 프리뷰 기능에 AI를 도입
          + 자신의 드롭박스 계정에 있는 문서/비디오 전체에 대해서 동작할 예정
          + 현재 알파버전으로 미국내 Pro 사용자들 이용 가능
"
"https://news.hada.io/topic?id=9419","roop - 원클릭 딥페이크(얼굴 교체) ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         roop - 원클릭 딥페이크(얼굴 교체)

     * CPU 및 GPU 가속 지원(AMD, NVIDIA, Apple Silicon, Intel)
     * 바꿀 얼굴 이미지와 타겟 이미지/동영상 만 넣고 클릭하면 바로 생성
     * 오용 방지를 위해 부적절한 미디어에서 작동하는 것을 방지하는 기능 내장
"
"https://news.hada.io/topic?id=9546","Valve는 더 이상 AI 생성 콘텐츠로 게임을 퍼블리싱하지 않습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Valve는 더 이상 AI 생성 콘텐츠로 게임을 퍼블리싱하지 않습니다.

     * 밸브는 AI로 생성된 콘텐츠를 더 이상 게시하지 않습니다.
     * 개발자의 게임이 저작권으로 보호된 자료에 의존하는 AI로 생성된 아트 자산을 포함하고 있어서 거부되었습니다.
     * 밸브의 AI로 생성된 게임에 대한 입장은 불확실하고 조심스럽습니다.
     * 개발자는 대신 itch.io에 게임을 게시해 보기로 계획했습니다.
     * AI 훈련 데이터가 저작권을 침해하는지 여부에 대한 문제는 아직 해결되지 않았습니다.
     * 개발자들은 밸브의 AI로 생성된 게임에 대한 접근 방식에 관심과 우려를 가질 수 있습니다.
     * AI로 생성된 콘텐츠는 변형되어 원본 데이터를 저장하지 않습니다.
     * Getty Images는 이미 AI 생성기에 대한 훈련을 위해 라이브러리를 라이선스로 제공하고 있습니다.
     * AI 데이터셋은 각 항목마다 라이선스가 필요할 수 있습니다.
     * AI로 생성된 콘텐츠는 음악 샘플링과 다르며, 훈련 자료로부터 법적으로 파생될 수 없을 수도 있습니다.
     * AI로 생성된 콘텐츠가 저작권을 침해한다는 주장을 뒤집는 선례가 있습니다.
     * 예술 창작에 AI를 사용하는 것은 음악 샘플링과 같지 않습니다.
     * Adobe Firefly는 Adobe가 권리를 가진 이미지만을 훈련시킵니다.
     * 이 기사에서 제기된 주장의 진실성은 증거 없이는 의심스러울 수 있습니다.

        Hacker News 의견

     * 밸브는 AI로 생성된 콘텐츠를 금지하지 않지만, 그들은 그러한 콘텐츠의 법적 소유권에 대해 우려하고 있습니다.
     * AI로 생성된 예술은 모호한 저작권 상태에 있으며, 벨브는 잠재적인 소송을 피하기 위해 노력하고 있습니다.
     * 이 결정은 AI로 생성된 자산의 사용을 공개하지 않는 도덕적 위험을 만듭니다.
     * 생성적 예술은 개발자에게 유용하며, 작업을 줄이고 실험을 가능하게 합니다.
     * 콘텐츠 삽입물 위기와 창의성보다 게으름과 약탈을 우선시하는 자동화의 가능성에 대한 우려가 있습니다.
     * 벨브의 행동에 대한 가정을 하기 전에 더 많은 정보를 기다리는 것이 중요합니다.
     * 벨브의 정책은 효과적으로 시행할 수 없더라도 법적 보호로 사용될 수 있습니다.
     * AI 이미지의 탐지는 계속된 도전이며, 탐지를 위한 자동화 도구는 결함이 있습니다.
     * 이 기사의 제목은 Reddit의 일화에 기반한 오해를 유발합니다.
     * AI로 생성된 콘텐츠에서 저작권 소재 사용이 공정한 이용에 포함되는지에 대한 명확한 해석이 필요합니다.
     * AI로 생성된 콘텐츠가 기존 작품의 가치에 미치는 영향은 중요한 고려사항입니다.
     * AI로 생성된 콘텐츠에 대한 법적 문제를 신속히 해결하기 위해 대법원 사건이 필요합니다.
"
"https://news.hada.io/topic?id=9515","DeepSpeed ZeRO++ : 통신량을 4배 줄이면서 LLM과 채팅 모델 트레이닝 속도의 획기적인 향상 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      DeepSpeed ZeRO++ : 통신량을 4배 줄이면서 LLM과 채팅 모델 트레이닝 속도의 획기적인 향상

     * LLM은 꽤 많은 양의 메모리와 컴퓨팅 리소스를 필요로 함
     * DeppSpeed의 ZeRO 패밀리는 이런 문제에 대한 해결책을 제공하여 TNLG-17B, Bloom-176B, MPT-7B, Jurrasic-1 등에서 사용됨
     * 하지만 수많은 GPU들이 사용되는 대규모 시나리오에서는 GPU간 잦은 통신이 필요하는 등 오버헤드가 발생
     * ZeRO++은 이런 경우를 위해서 모델 품질에 영향없이 전체 통신 볼륨을 4배 줄임
          + 대규모 모델 사전 트레이닝 및 파인 튜닝을 가속
               o GPU당 작은 배치 사이즈: ZeRO 대비 2.2배 처리량
               o 저 대역폭 클러스터에서도 4배 대역폭과 비슷하게 처리
          + RLHF를 이용한 ChatGPT 같은 모델도 가속
"
"https://news.hada.io/topic?id=9503","Hetty - 보안 연구를 위한 오픈소스 HTTP 툴킷","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Hetty - 보안 연구를 위한 오픈소스 HTTP 툴킷

     * 상용인 Burp Suite Pro의 대체제
     * infosec 및 bugbounty 를 위한 강력한 기능들 포함
     * HTTP MITM(Man-in-the-Middle) 프록시
     * 로그와 고급검색 지원
     * HTTP 수동 전송 및 Proxy된 리퀘스트 리플레이 지원
     * 리퀘스트/리스판스를 인터셉트하여 수동 리뷰 가능
     * 사용하기 쉬운 웹기반 관리자 인터페이스
"
"https://news.hada.io/topic?id=9480","try - 커맨드 실행에 따른 결과를 먼저 확인하게 해주는 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  try - 커맨드 실행에 따른 결과를 먼저 확인하게 해주는 도구

     * 실제 프로덕션 서버에서 뭔가를 변경하기 전에 테스트 해 볼수 있음
          + try pip install libdash 같이 실행하면 변경되는 파일 리스트를 정리해서 보여줌
     * Linux의 namespaces(unshare를 통해) 와 overlayfs 파일시스템을 이용
     * 완전 샌드박스가 아니고 아직 프로토타입이니 신뢰하지 못할 명령에는 사용하지 말것(특히 /dev 에 뭔가를 하는)
     * Ubuntu 20/Devian 12/Centos 9/Arch 6/Alpine 6/Rocky 9 등에서 테스트 완료

   초장의 선언부터 마스터 요다를 부정하는 군요.
   다크 사이드가 분명 합니다.

   유용하네요.
"
"https://news.hada.io/topic?id=9541","National Geographic, 마지막 남은 스태프 작가들 해고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 National Geographic, 마지막 남은 스태프 작가들 해고

     * 국립 지리학 잡지인 National Geographic은 과학과 자연 세계를 다루는 것으로 알려져 있으며, 모든 남은 Staff Writer들을 해고했습니다.
     * 이는 월트 디즈니 주식회사 소유주 아래에서 이루어진 연속적인 감축 조치 중 가장 최근 사례입니다. 19명의 편집 스태프가 영향을 받았습니다.
     * 기사 작업은 이제 프리랜서에게 계약을 맡기거나 편집자들이 조각조각 모아서 진행될 것입니다.
     * 이 잡지는 작은 오디오 부서를 폐지하고 사진 계약을 줄였습니다.
     * 비용 절감을 위해, 미국에서는 내년부터 인쇄물이 뉴스스탠드에서 판매되지 않을 것입니다.
     * 인쇄물의 쇠퇴와 디지털 뉴스 및 정보의 부상이 National Geographic의 방향성에 영향을 미쳤습니다.
     * 최고조 때에는 이 잡지는 미국에서 1200만 명의 구독자에게 도달했지만, 현재는 180만 명 미만입니다.
     * National Geographic은 National Geographic Society에 의해 시작되어 독립적인 출판물로 성장했습니다.
     * 이 잡지의 쇠퇴는 기업 재편 및 21세기 폭스와의 파트너십으로 더욱 가속화되었습니다.
     * 해고 대상에는 지난 9월 다양성, 공정성, 포용성 부사장으로 승진한 데브라 아담스 시몬스도 포함됩니다.
     * 회사는 매월 잡지를 계속 출판하고 플랫폼 간에 다양한 이야기를 전달하는 데 초점을 맞출 계획입니다.

        Hacker News 의견

     * 국립 지리학은 마지막 남은 기자들을 해고하고 있다.
     * 인터넷과 자본주의는 언론이 번영하기 어렵게 만들었다.
     * 국립 지리학은 월트 디즈니 주식회사 소유이며 큰 수익을 올리고 있지만 여전히 경축하고 있다.
     * 국립 지리학의 웹사이트는 이제 대부분 디즈니+의 광고로 이루어져 있다.
     * 국립 지리학은 예전에는 명성 있는 출판물이었지만 디즈니 아래에서 변화했다.
     * 많은 사람들은 국립 지리학 잡지를 읽는 것에 대한 좋은 추억을 가지고 있다.
     * 국립 지리학의 구독 수익은 기자들을 지원할 수 있을 것 같다.
     * 인터넷을 통해 세계가 더 연결되면서 국립 지리학의 콘텐츠는 덜 독특해졌다.
     * 어떤 사람들은 자유 작가들을 가지는 것이 국립 지리학의 다양한 주제에 더 좋을 것이라고 믿는다.
     * 국립 지리학은 이제 더 이상 제3자에게 콘텐츠를 라이선스하지 않는다.
     * 해고에는 다양성, 공정성, 포용성 부사장도 포함되어 있어 의사 결정에 대한 의문을 제기하고 있다.
     * 국립 지리학의 고해상도 인쇄 이미지는 인터넷에서 볼 때보다 더 인상적이었다.

   댓글에서는 ""국립 지리학"" 으로 변역되고 있네요 ^^;;
"
