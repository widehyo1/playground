"https://news.hada.io/topic?id=10663","인공지능을 활용한 교육","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              인공지능을 활용한 교육

     * ""TechCrunch""가 ChatGPT를 교실에서 사용하는 교사들을 위한 안내서를 발표합니다.
     * 안내서에는 제안된 프롬프트, ChatGPT의 작동 방식과 한계, AI 감지기의 효과성 및 편향성에 대한 설명이 포함되어 있습니다.
     * 교육자들은 도전적인 대화 시뮬레이션, 퀴즈 및 수업 계획 작성, 영어를 모국어로 사용하지 않는 학생들을 위한 어려움 감소, 비판적 사고에 대한 학습 등 다양한 방식으로 ChatGPT를 활용하고 있습니다.
     * 이 기사에서는 교육자들이 ChatGPT를 시작하는 데 도움이 되는 예시 프롬프트를 제공합니다.
     * 프롬프트는 수업 계획 작성, 효과적인 설명, 학생들의 학습 지원, AI 튜터 생성 등과 같은 주제를 다룹니다.
     * 기사는 교육자들이 자신들이 전문가이며 ChatGPT를 참고 자료로 활용해야 한다는 점을 강조합니다.
     * 목표는 학생들이 더 세밀하고 다양한 시각과 관점을 가지고 자료를 이해하며, 영어 작문 및 대화 기술을 향상시키고, 비판적 사고와 문제 해결 능력을 발전시키는 데 도움을 주는 것입니다.
     * 기사는 또한 AI에 대한 교육 및 교육을 위한 새로운 FAQ에서 추가 자료도 언급합니다.

        Hacker News 의견

     * ChatGPT 학교에서의 주요 문제는 학생들이 과목을 통과하고 고등학교 졸업을 위해 점수를 획득해야 한다는 필요를 충족시키지 못한다는 것이다.
     * AI는 사후적으로 초안과 계획을 생성할 수 있어 ""작업을 보여주세요""라는 주장을 무의미하게 만든다.
     * 일부 사람들은 AI가 언어 학습과 면접 준비에 도움이 되었다고 생각한다.
     * Khanmigo는 튜터로 GPT-4를 사용하고 있지만 효과성 데이터가 부족하다.
     * 교육자들은 AI에 적응하기 어려워하며 교육과정에 통합하는 방법을 찾고 있다.
     * 교사들은 AI를 두려워하며 가르치는 방식을 완전히 바꾸어야 한다.
     * 플러그인인 Revision History는 교사들이 학생들의 초안 작성 과정을 볼 수 있도록 도와주며 AI 감지기의 대안으로 마케팅되고 있다.
     * 채팅 상호작용 중 학생들이 묻는 후속 질문을 평가하는 것이 이해도를 평가하는 더 나은 방법일 수 있다.
     * ChatGPT는 물리 문제에 대해서는 신뢰할 수 없지만, 비영어권 학습자들에게 시간을 절약하고 코딩 과제에서 안내를 제공할 수 있다.
     * AI는 계산기와 컴퓨터와 같이 기본 기술을 습득한 후에 유용하지만, 어린 학생들에게 주는 것은 학습을 방해할 수 있다.
"
"https://news.hada.io/topic?id=10751","영국, 빅테크와의 개인 메시징 관련 충돌에서 후퇴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      영국, 빅테크와의 개인 메시징 관련 충돌에서 후퇴

     * 영국 정부, 개인 메시징 문제로 주요 기술 회사와의 가능한 충돌에서 물러남
     * 이 결정은 디지털 통신에서의 개인 정보 보호와 보안 간의 균형에 대한 전 세계적인 논의 속에서 나옴
     * 이번 조치는 사용자 개인 정보 보호를 위해 종단간 암호화를 주장하는 기술 거인들과의 잠재적인 충돌을 피하는 것이 중요함
     * 영국의 입장은 그것의 글로벌 기술 규제에서의 두드러진 역할 때문에 다른 나라들의 유사한 문제에 대한 결정에 영향을 미칠 수 있음
     * 기사는 영국의 결정 뒤에 있는 구체적인 이유에 대해 제공하지 않지만, 디지털 통신에서 사용자 개인 정보의 중요성을 인식하는 것을 제안함
     * 이 개발은 디지털 개인 정보 보호와 보안의 미래에 대한 잠재적인 함의 때문에 기술에 능통한 독자들에게 관심이 있음

        Hacker News 의견

     * 영국 정부는 개인 메시징 규제 아이디어를 완전히 포기하지 않았지만, 현재로서는 실행 가능하지 않다고 판단했습니다.
     * 법은 메시징 제공업체에 대한 충분한 영향력을 얻거나 정치적 자본을 사용하기로 결정하면 개인 메시징을 규제할 권력을 유지합니다.
     * 영국 정부는 WhatsApp에 크게 의존하며, 서비스 중단 위협이 그들의 결정에 영향을 미쳤을 수 있습니다.
     * Signal, WhatsApp, Apple과 같은 메시징 플랫폼이 원칙을 지키고 현재 형태로 법안이 통과되면 영국 서비스를 중단할지에 대한 의구심이 있습니다.
     * 일부 사용자들은 실현이 불가능하더라도 가치를 표현함으로써 정부의 의도가 충족되었다고 믿습니다.
     * 개인 메시징에 ""일부 백도어를 도입""하는 정부의 접근 방식에 대한 비판이 있으며, 이는 재앙적인 결과를 초래할 수 있는 나쁜 아이디어라고 많은 사람들이 믿습니다.
     * 연령 확인 없이 대화형 서비스를 운영하는 것을 금지하는 법의 다른 부분에 대한 우려가 있습니다.
     * ""프라이버시가 범죄화되면 범죄자만이 프라이버시를 가질 것""이라는 감정은 이러한 규제가 프라이버시 권리에 미칠 수 있는 잠재적인 영향에 대한 우려를 반영합니다.
"
"https://news.hada.io/topic?id=10685","오프라인에서 수백만 페이지를 통한 'Wikipedia' 진동 검색","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  오프라인에서 수백만 페이지를 통한 'Wikipedia' 진동 검색

     * 새로운 브라우저 기반 위키백과 검색 엔진에 대한 기사, 오프라인 검색 가능
     * 검색 엔진의 실시간 위키백과 페이지 백만 개 검색 기능, 모바일 기기에서 10ms마다 결과 반환
     * 검색 엔진 데이터베이스의 작은 크기, 특별한 처리 없이 백만 개의 임베딩을 지원하는 캐주얼 사용 사례
     * 문장 변환기를 이용한 문서 임베딩, 제품 양자화를 통한 임베딩 압축, 그리고 브라우저에서 거리 계산을 실행하는 pq.js 사용하는 검색 엔진
     * 검색 엔진에서 쿼리를 위한 브라우저 내 문장 변환기 실행을 위해 transformers.js 사용
     * 압축된 페이지 크기에 따라 임베딩을 정렬하는 검색 엔진, 정보 밀도가 높은 페이지가 먼저 분석되고 상위 10개 순위에 반환
     * 고성능을 위해 JSON 대신 Arrow를 사용하는 검색 엔진, Arrow는 8비트 정수 제품 양자화 배열을 간결하게 저장 가능
     * 웹어셈블리에서 실행되는 ONNX 모델을 사용하는 검색 엔진, 아직 GPU 가속화 없음
     * 문장 변환기로 위키백과 전체를 임베딩하고, 제품 양자화로 임베딩을 압축하며, ONNX를 수동으로 작성하는 검색 엔진
     * 임베딩과 메타데이터를 저장하기 위해 numpy를 Arrow로 내보내는 검색 엔진, 메모리와 디스크에서 훨씬 간결
     * 제품 하위 카테고리에서 실시간 검색을 허용하는 다면 검색을 지원하는 검색 엔진
     * 저자는 피드백 및 개선 제안을 초대, 특히 다른 양자화 수준과 다른 임베딩 차원 지원에 대해

        Hacker News 의견

     * 위키백과를 오프라인에서 검색할 수 있는 새로운 도구에 대한 기사
     * 일부 사용자들은 이 도구가 ChatGPT와 같은 AI 서비스보다 정확도가 떨어진다고 보고
     * 텍스트 임베딩을 사용하여 검색 쿼리를 매칭하는 도구
     * ""추상적인 설명에 기반한 텍스트 검색""이라는 제목의 최근 논문이 더욱 추상적인 검색 쿼리를 가능하게 함
     * 일부 사용자들은 이 도구가 Google보다 기대한 결과를 반환하는 데 덜 효과적이라고 발견
     * 한 사용자는 위키백과 기사의 전체 문서가 아닌 정의하는 문장이나 단락만 임베딩하면 도구가 개선될 수 있을 것이라고 제안
     * 도구의 오프라인 기능과 구현에 대한 칭찬, 정확도에 대한 일부 비판에도 불구하고
     * 일부 사용자들은 도구와 관련된 기술적 문제, 예를 들어 느린 로딩 시간을 겪고 있음
     * SemanticFinder라는 비슷한 프로젝트 언급, 사용자가 텍스트의 어떤 길이든 복사하고 붙여넣을 수 있게 하고 가장 유사한 세그먼트를 반환
     * 한 사용자는 도구의 효과가 위키백과의 주제 표현의 품질에 제한될 수 있다고 지적
     * 일부 사용자들은 도구의 결과에 실망, 그러나 그것 뒤에 있는 인상적인 기술을 인정
     * 한 사용자는 전체 기사를 임베딩하는 도구의 접근 방식이 이러한 종류의 응용 프로그램에 최선이 아닐 수 있다고 제안
"
"https://news.hada.io/topic?id=10737","OpenTF 저장소가 이제 공개되었습니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         OpenTF 저장소가 이제 공개되었습니다

     * OpenTF 저장소가 공개되어 안전하고 효율적으로 인프라를 구축, 변경, 버전 관리하는 오픈소스 도구를 제공합니다.
     * OpenTF는 대중적인 서비스 제공자와 맞춤형 내부 솔루션을 모두 관리할 수 있습니다.
     * OpenTF의 주요 기능에는 Infrastructure as Code, Execution Plans, Resource Graph, Change Automation이 포함됩니다.
          + Infrastructure as Code는 고수준의 구성 구문을 사용하여 인프라를 설명하게 해주어, 버전 관리와 재사용을 가능하게 합니다.
          + Execution Plans는 apply를 호출할 때 OpenTF가 수행할 작업을 미리 보여주어 예기치 않은 변경을 방지합니다.
          + Resource Graph는 모든 리소스의 시각적 표현을 제공하며, 비의존적인 리소스의 생성과 수정을 병렬화하여 효율성을 높입니다.
          + Change Automation은 복잡한 변경 세트를 최소한의 인간 상호작용으로 인프라에 적용할 수 있게 합니다.
     * 저장소는 현재 진행 중인 작업으로, 첫 알파 릴리즈를 준비하고 커뮤니티 기여 프로세스를 미세 조정하고 있습니다.
     * 개발자들은 현재 상태에서 이 저장소를 구축하고 실행하는 것이 Terraform Registry 이용 약관을 위반할 수 있다는 점을 경고받았습니다. 이는 여러분이 공급자나 모듈을 가져오는 곳이 그곳이라면 해당됩니다.
     * 저장소에는 명령 줄 인터페이스와 주 그래프 엔진을 포함한 OpenTF Core가 포함되어 있습니다.
     * 기여에 관심이 있는 사람들은 OpenTF를 컴파일하고 변경을 제안하는 방법에 대한 지침을 참조하라는 안내를 받을 수 있습니다.
     * OpenTF 프로젝트는 Mozilla Public License v2.0에 따라 라이선스가 부여됩니다.

        Hacker News 의견

     * OpenTF 저장소가 이제 공개되었으며, 팀은 계속해서 공개적으로 개발을 진행할 예정입니다.
     * 팀은 기여에 대해 개발자 출처 인증서 (DCO)를 사용하기로 결정했습니다.
     * 저장소를 공개하는 과정이 소프트웨어 라이선싱의 사례 연구로 칭찬받았습니다.
     * ""TF""의 사용과 관련된 잠재적 문제로 인해 프로젝트의 최종 이름에 대한 법적 상담이 진행 중입니다.
     * 개선 제안 사항에는 모듈과 제공자를 위한 독립형 레지스트리 패키지 제공, 제공자 모듈의 쉬운 포킹 허용 등이 포함되어 있습니다.
     * 저장소의 문서화가 품질과 개발자에게 유용함에 대해 칭찬받았습니다.
     * 일부 사용자들은 특정 문제가 해결되기를 기다리고 있습니다.
     * 프로젝트의 시각적 측면에 대한 피드백이 있습니다, 예를 들어 로고의 색상과 어두운 배경에 대한 해상도 등입니다.
     * 이 코드베이스와 마지막으로 ""계속 사용해도 괜찮은"" Terraform 라이선스 커밋 사이의 차이점에 대한 문의가 있습니다.
     * Terraform이 Cloud Native Computing Foundation (CNCF) 프로젝트가 되는 것에 대한 제안이 있습니다.
"
"https://news.hada.io/topic?id=10668","애니메이션 노트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                애니메이션 노트

        Hacker News 의견

     * 애니메이션을 통해 매듭 묶기 기술을 가르치는 웹사이트에 대한 기사
     * 매듭이 특히 항해와 같은 활동에서 유용하게 만드는 특정한 특성을 가진 실용적인 도구로 설명됨
     * 웹사이트는 기억을 되살리고 매듭의 영어 이름을 배우는 데 도움을 주는 능력에 대해 칭찬받음
     * 보울린 매듭은 신뢰성과 부하를 견딜 수 있는 능력 때문에 초보자에게 추천됨
     * 매듭 묶기에서 지속적인 연습의 중요성이 강조됨, 능력은 사용하지 않으면 시간이 지남에 따라 줄어들 수 있음
     * 웹사이트는 보이 스카우트와 걸 스카우트에게 매듭 묶기를 가르치는 데 유용함으로 인정받음
     * 매듭 묶기는 가상의 과학적 시나리오에서 인류를 정의할 수 있는 독특한 기술로 재미있게 제안됨
     * 또 다른 웹사이트인 Notable Knot Index가 매듭에 대해 배우는 보완적인 자원으로 언급됨
     * 랜야드/우정 매듭, 중위의 히치, 콘스트릭터 매듭이 특히 유용한 매듭으로 강조됨
     * 매듭 묶기의 수학적 측면에 관심이 있는 사람들에게 수학적 매듭에 대한 비디오가 추천됨
     * Ian Knot이 신발끈을 묶는 빠르고 효율적인 방법으로 추천됨
     * 매듭 묶기는 편안하고 스트레스 해소 활동으로 설명됨
     * 웹사이트는 iPhone 사용자를 위한 앱, Grogg Knots로도 이용 가능함
     * Trucker's Hitch 매듭에 대한 비디오는 그 재미있는 제시 방식으로 추천됨
"
"https://news.hada.io/topic?id=10650","류진X - 닌텐도 스위치 에뮬레이터의 오픈 소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       류진X - 닌텐도 스위치 에뮬레이터의 오픈 소스

     * RyujinX: 오픈 소스 닌텐도 스위치 에뮬레이터, gdkchan이 만들고 C#로 작성됨
     * 높은 정확성과 성능, 사용자 친화적 인터페이스, 일관된 빌드를 제공하는 것을 목표로 함
     * Windows 10/11, macOS 및 Linux 기반 시스템에서 사용 가능
     * Ryujinx는 4,050개 이상의 타이틀에서 테스트되었으며, 약 3,400개가 플레이 가능한 것으로 간주됨
     * 사용자는 Ryujinx Discord 서버에 가입하여 지원을 받고 스위치 에뮬레이션 애호가 및 팀 개발자와 연결할 수 있음
     * ""RyujinX""라는 이름은 신화적인 해신/용인 Ryujin과 스위치 자체의 코드명을 기반으로 함
     * 프로젝트는 2017년에 단일 개발자로 시작되었으며, 현재는 유능한 핵심 팀과 많은 개발자의 기여를 가지고 있음
     * 팀은 계속해서 에뮬레이터를 개선하기 위해 노력하고 있음
     * 사용자는 Twitter 또는 Discord를 통해 프로젝트에 기여하거나 에뮬레이터 지원을 요청하거나 팀과 연락할 수 있음
     * Ryujinx는 14.9k개 이상의 GitHub 스타, 500명 이상의 Patreon 후원자 및 3.2k개 이상의 플레이 가능한 게임으로 인기를 얻었음.

        Hacker News 의견

     * 이러한 에뮬레이터를 개발하기 위한 진로는 불분명하지만, 독립적인 해킹과 학습이 많이 필요할 것으로 보인다.
     * 초기 에뮬레이터는 복잡한 하드웨어를 에뮬레이션해야 했지만, Nintendo Switch와 같은 현대 콘솔은 소비자용 컴퓨터와 더 유사하다.
     * 이 에뮬레이터는 API 에뮬레이션과 하드웨어 에뮬레이션의 조합을 사용할 수 있다.
     * 일부 사용자는 Macbook Pro M1에서 이 에뮬레이터를 사용하여 Breath of the Wild와 Mario Kart와 같은 게임을 성공적으로 플레이했다.
     * 이 에뮬레이터가 C#로 작성되었다는 것은 놀라운 일이지만, 잘 작동하는 것을 보는 것은 흥미롭다.
     * Denuvo DRM의 제작자들은 에뮬레이터를 대상으로 한 DRM을 만들었는데, 에뮬레이터는 합법임에도 불구하고 그렇게 했다.
     * Yuzu와 Ryujinx는 두 가지 훌륭한 에뮬레이터로, 그들의 빠른 개발은 인상이 빠르게 오래된다는 것을 의미한다.
     * Ryujinx는 Roslyn과 함께 가장 인상적인 C# 프로젝트 중 하나로 여겨진다.
     * 스위치나 웹 브라우저를 통해 게임을 구매하지 않고도 에뮬레이터에서 게임을 플레이할 합법적인 방법이 있는지는 불분명하다.
     * Yuzu와 Ryujinx는 기존 콘솔보다 우수한 경험을 제공하지만, Denuvo 때문에 미래는 불확실할 수 있다.
     * 이러한 에뮬레이터가 신뢰할 수 없는 코드를 실행할 수 있는지는 불분명하며, ROM의 정품성을 체크섬을 통해 확인하는 것에 대한 의문이 있다.
"
"https://news.hada.io/topic?id=10661","AWS 아이콘 퀴즈아이콘 퀴즈

     * AWS에 존재하는 수많은 서비스의 아이콘을 보고 서비스 이름을 맞추는 게임.
     * AWS 지식을 새로운 차원으로 끌어올리기 위해 고안된 스릴 넘치는 도전 과제.
          + 라고 설명함.

     * HN 스레드

   재미있긴 한데, 생각보다 제품이 너무 많아서 그런지 어려워요.

   아이콘을 보고 서비스 이름을 맞추는 거라고 쓰긴 했지만...
   서비스를 보고 아이콘을 맞추거나, 아이콘의 정확한 모양을 맞추거나, 아이콘을 묘사하거나... 은근 종류가 많습니다.

   스레드의 AI 요약
     * hbn: AWS 아이콘 퀴즈를 통과한 사람들은 고통 때문에 안락사해야 한다고 농담하고 있다.
     * gazarullz: 구글은 제품을 정리하기 위해 때때로 내부 버전의 퀴즈를 진행한다는 소문을 들었다.
     * baz00: 10년의 경험과 자격증이 있음에도 불구하고 AWS 아이콘과 제품 이름을 기억하는 데 어려움을 겪고 있다. 아이콘을 ""완전한 쓰레기""라고 비난한다.
     * giaour: 하나의 서비스를 주로 유지하는 사람임에도 불구하고 퀴즈에서 아이콘 문제를 틀렸다.
     * input_sh: AWS 경험이 없는 상태에서 큰 3개 클라우드 제공업체 중 아무거나 추측해서 3/20 점수를 받았다.
     * askiiart: baz00가 퀴즈에서 무작위로 추측한 것보다 3배나 못했다고 지적한다.
     * commandlinefan: 퀴즈에서 ""비슷한 것"" 제품들이 실제로 AWS 서비스를 다시 브랜드화한 것인지 궁금해진다.
     * morkalork: Azure가 Active Directory를 ""Entra""로 이름을 바꾸고 브랜드 인식을 잃는 것이 이상하다고 생각한다.
     * whatsthenews: 블로그 글을 웃기다고 생각하며, AWS 제품 이름이 제품과 관련이 없다는 것을 지적한다.
     * ktm5j: 합리적인 아이콘을 포함하면 유머가 사라지고 그것들을 제외해야 했을 것이라고 생각한다.
"
"https://news.hada.io/topic?id=10734","오픈 소스를 활용하면 하드웨어도 만들 수 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       오픈 소스를 활용하면 하드웨어도 만들 수 있다

     * 실제 하드웨어를 만드는 것은 어려워 보이지만, 요즘은 소프트웨어를 만드는 것만큼 쉬움.
     * 히트 펌프 컨트롤러를 직접 제작하여 자동화 시스템에 통합해 본 경험.
     __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

     * 아두이노 이후 오픈 소스 마이크로 컨트롤러 세계가 크게 성장해 다양한 컨트롤러를 쉽고 저렴하게 구할 수 있음.
          + 마이크로 컨트롤러가 있어도 회로를 짜는 것은 어려웠지만, 최근에는 여러 업체가 Stemma QT나 Qwiic Connect 같은 상호 호환되는 I2C 케이블 표준을 만들어 회로를 구성할 필요조차 없어짐.
     * 그리고 3D 프린터가 대중화됨에 따라 컨트롤러를 담을 케이스를 만들기 쉬워짐.
          + 오픈 소스 하드웨어 회사는 주로 각종 보드의 3D 모델을 제공하므로, 이를 활용하면 완벽하게 일치하는 3D 프린팅된 사례를 직접 제작할 수 있음.
     * ESP32 기반 마이크로 컨트롤러에 조도 센서, 온도/습도 센서 그리고 다이얼을 I2C로 연결함.
     * 오픈 소스 라이브러리를 통해 손쉽게 센서를 컨트롤하고, 3D 프린팅된 케이스에 넣어 실제로 벽에 설치.
     * 과거에 비해 하드웨어를 만드는 것이 아주 쉬워졌다고 느낌.

   제가 만든 것 중에 제일 호평이었던 것은, 3분에 한번씩 마우스를 2 픽셀씩 옮겨주는 동글이었네요. 회사 화면 공유기가 5분에 한번씩 켜지는게 너무 불편해서... (물론 특정 시간이 지나면 비활성화 하는 기능도 넣긴 했습니다만)

   동글로 접근하시다니! 천재적이네요

   아차... 화면 보호기...요 ㅎㅎ

   문체가 재밌네요. 글을 신기하게 쓰시는 듯!
     * HN 스레드

   그렇게 거창한 내용은 아니지만, 재미있어 보여서 들고왔습니다.
   I2C 케이블 표준?이 생긴 건 신기하네요.

   3D 프린터... 사고 싶긴 한데 그정도 돈을 쓸 가치가 있는지는 잘 모르겠어요...
   산다면 나스 케이스 같은 걸 출력해보고 싶긴 한데...

   https://www.printables.com/model/547866-raspberry-pi-nas-project/

   요즘 본 라즈베리파이 NAS 케이스 중에서는 가장 이쁘게 생긴게 있네요.

   https://3d-fab.kr/kor/main/ 같은데에서도 재료비만 내고 출력 가능합니다.

   오 감사합니다. 모델 공유 사이트도 좀 돌아다녀 봐야겠네요.
   지금은 타오나스 쓰고 있는데, 고생을 좀 했는지 약간 삐뚤빼뚤한 부분이 있어서 나스 교체 뽐뿌 + 케이스에 대한 고민이 생기더라고요.

   그런데 링크 주신 곳에서는 나스 케이스 넣으니 견적이 20만원이 넘게 나오는군요. @_@
   3D 프린팅 대신 해주는 업체도 더 있다고 들어서 한 번 알아봐야겠네요.

   저는 최근에 3D 프린터 사서 정말 잘 쓰고 있는데요
   출력할게 원체 많기도 해서.. 5월에 사서 거의 2천시간쯤 돌린듯 해요.

   혹시나 사신다면 꼭 BambuLab 제품을 사시는걸 추천합니다 ㅎ

   추천 감사합니다. 저번에 사셨다고 봤던 것 같은데 2천시간이라니...
   이 글에서는 Prusa 제품 추천하던데 혹시 이 회사도 아시나요?

   Bambu 나오기 전까지는 Prusa가 사실상 업계 탑이었는데요.
   Bambu 가 속도가 훨씬 빠르고 관리할게 많지 않아서 초보자한테도 훨씬 좋습니다.
   Bambu P1P 급이면 Prusa랑 가격이 거의 비슷하고요.

   지역 도서관에 3D 프린터가 비치되어있는 곳이 많다는 이야기를 들은적이 있는데 관심있게 찾아본적은 없네요. 저는 필요하면 공용으로 사용할 수 있는 곳에서 먼저 시도해 봐야겠다는 결심만 있는 상태입니다..ㅋㅋ

   https://nlcy.go.kr/NLCY/contents/…

   강남에 새로 생긴 국립어린이청소년도서관 1층에 본 적이 있어요.

   오... 근처 도서관에 있는지 한 번 봐야겠네요.

   HN 스레드의 AI 요약.
     * petsfed: 하드웨어를 만드는 것은 생각보다 어렵고 습도, 잦은 사용을 견딜 수 있는 커넥터, 와이어 하네스 길이와 같은 실제 조건을 고려해야 한다고 말합니다. 프로토타입 제작은 가능하지만 다른 사람들이 사용할 수 있을 만큼 견고한 제품을 만드는 것은 어려울 수 있습니다.
     * generj: 오픈 소스 하드웨어는 프로토타입 제작에 유용하지만 다른 사람이 복제할 수 있을 정도로 프로젝트를 완성하려면 상당한 노력이 필요합니다. 경험이 적은 사용자를 지원하는 것도 어려울 수 있습니다.
     * eternityforest: 하드웨어 설계를 완벽하게 문서화하는 것이 소프트웨어보다 훨씬 어렵고 실제 프로젝트를 구축할 사용자를 찾는 것이 어렵다는 데 동의합니다. 세련된 상용 오픈소스 하드웨어 제품을 생산할 수 있는 회사에서 일하고 싶습니다.
     * bsder: 소비자 하드웨어 제품의 경우 지원 문제가 큰 과제라고 지적하며 이 문제를 해결할 수 있는 방법이 있는지 궁금합니다.
     * kbaker: 하드웨어 설계에서 퓨즈, ESD 보호, 감시 타이머와 같은 안전 기능의 중요성을 강조하며, 이는 종종 간과되지만 실제 손상을 방지하는 데 매우 중요하다고 강조합니다.
     * munk-a: 손 떨림과 같은 신체적 제약으로 인해 납땜과 같은 하드웨어 작업에 참여하지 못하는 경우도 있지만, 여전히 다른 프로젝트에 펌웨어를 기여하는 것을 즐기고 있습니다.
     * fanf2: 돋보기나 현미경이 손과 눈의 피드백을 개선하여 납땜과 같은 섬세한 작업에서 손 떨림을 억제하는 데 도움이 될 수 있다고 제안합니다.
     * xnzakg: 대량 생산된 하드웨어라도 설계자가 대충 만들면 중요한 안전 기능이 누락될 수 있다고 경고하며, YouTube 채널 Big Clive를 통해 관련 문제를 알아볼 것을 추천합니다.
     * jacquesm: 하드웨어 기술은 소프트웨어에 비해 상대적으로 배우기 쉽고 장기적으로 적용할 수 있으며, 납땜을 피할 수 있는 접근 가능한 시작점으로 FPGA를 제안합니다.
     * z500: CPU를 구축하고 실제 실리콘에서 벤치마킹하는 데 관심이 있는 소프트웨어 엔지니어를 위해 하드웨어를 시작하는 데 조언이 있을까요? FPGA는 좋은 첫걸음인 것 같습니다.
"
"https://news.hada.io/topic?id=10670","Doug Lenat 사망","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Doug Lenat 사망

     * 인공지능(AI) 분야의 주요 인물인 더그 레나트의 사망을 알리는 기사
     * 레나트는 기계가 명확한 언어와 같은 표현을 조작하는 AI의 한 분야인 심볼릭 AI에 대한 연구로 알려져 있음
     * 그는 일생의 마지막 40년을 기계 해석 가능한 형태로 상식을 모두 코딩화하는 Cyc라는 프로젝트에 투자함
     * 상업적 성공을 거두지 못했음에도 불구하고, Cyc는 AI 산업에서 드문 경우로 40년 후에도 여전히 사업을 이어가고 있음
     * 저자인 게리 마커스는 Cyc를 완전히 성공하지 못한 혁신적인 실험으로 보지만, 인공 일반 지능으로의 진보가 이루어짐에 따라 점점 중요해질 것으로 보고 있음
     * 마커스는 모든 AI 연구자들이 Cyc와 그 목표를 인식하고 있어야 하며, 그 접근법에 동의하지 않더라도 그렇게 해야 한다고 강조함
     * 레나트의 작업은 기계가 상식을 표현하고 이해하는 능력을 갖추는 것을 목표로 하였으며, 이 목표는 오늘날에도 여전히 관련성이 있음
     * 기사는 레나트와 마커스가 함께 작업하고 있던 논문을 언급하며, 이 논문은 Cyc에서 얻은 교훈을 미래의 연구자들과 공유하려는 목표를 가지고 있음
     * 사망하기 전에 레나트는 ""Generative AI에서 Trustworthy AI로: LLMs가 Cyc에서 배울 수 있는 것""이라는 제목의 더 짧은 논문을 작성하여 arXiv에 게재함
     * 이 논문은 Cyc가 시도했던 것에 대한 검토, 진정한 인공지능이어야 할 것에 대한 요약, 그리고 깊은 심볼릭 전통과 현대의 Large Language Models 사이의 화해를 촉구하는 것으로 기능함
     * 저자는 독자들에게 레나트의 마지막 논문을 그의 명예를 기리기 위해 읽어보도록 권장함

        Hacker News 의견

     * 인공지능 분야의 선구자이자 Cycorp의 창립자인 Doug Lenat이 별세하였습니다.
     * Lenat은 그의 비전에 대한 헌신과 동료들에 대한 관대함으로 알려졌습니다.
     * 그는 Cycorp와 같은 야심찬 프로젝트를 수십 년 동안 추진하는 능력과 기술에 대한 깊은 이해로 존경받았습니다.
     * Cycorp는 일반 인공지능을 만들기 위한 대규모 상업적 노력으로, 첫 OpenAI로 종종 간주되지만 완전히 성공하지는 못했습니다.
     * Lenat의 작업은 컴퓨팅 분야의 많은 사람들에게 영향을 미치고 영감을 주었습니다.
     * 그는 보드 게임을 사랑하고 회사에서 Dungeons & Dragons 그룹에 참여하는 것으로도 알려져 있습니다.
     * Lenat의 작업, 특히 Cycorp와 관련된 것은 Russell과 Whitehead의 Principia와 비교되었습니다 - 야심차고 흥미롭지만, 독립적인 사용에는 적합하지 않은 접근법이었습니다.
     * 그럼에도 불구하고, 일부는 Cycorp가 신경망 모델의 테스트와 교육에 유용할 수 있다고 믿습니다.
     * Lenat의 작업에 대한 헌신은 다른 사람들이 그들의 아이디어를 출판하고 그들과 함께 사라지지 않게 하는 데 영감을 주었습니다.
     * 포괄적인 온톨로지와 지식베이스에 기반한 AI 프로젝트인 Cycorp는 기술 산업의 많은 사람들에게 매료시키는 원천이었습니다.
     * Lenat의 사망은 그의 유산과 그의 작업이 인공지능 분야에 미친 영향에 대한 성찰을 촉발시켰습니다.
"
"https://news.hada.io/topic?id=10640","ISP는 온라인 발언이 아무리 끔찍하더라도 이를 단속해서는 안 됩니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ISP는 온라인 발언이 아무리 끔찍하더라도 이를 단속해서는 안 됩니다.

     * 티어 1 ISP(인터넷 서비스 제공자)인 Hurricane Electric이 Kiwi Farms을 차단한 내용에 대한 EFF(전자 프론티어 재단)의 성명.
     * ISP는 콘텐츠를 평가하거나 검열하면 안 된다는 것.
          + 특히 티어 1 ISP는 인터넷에서 중요한 역할을 하며, 수많은 서비스가 티어 1 ISP의 네트워크에 의존하여 서비스를 제공함.
          + 티어 1 ISP에서 차단되면 정말 넓은 영역에서 서비스가 불가능해질 수 있으며, 이에 대한 대응책이 존재하지 않음.
     * Kiwi Farms는 세계적으로 유명한 악의적인 사이트이지만, 이러한 경우에도 ISP가 검열해서는 안 됨.
          + 이미 Kiwi Farms는 Cloudflare와 Internet Archive에서 차단되었지만, 이번에는 경우가 다름.
          + 이 검열이 선례가 되어 추후에 ISP가 더 많은 검열을 시도하게 될 수 있기 때문.
               o 선을 넘기는 어렵지만, 한 번 넘으면 두 번째는 훨씬 쉬움.
          + 콘텐츠 서비스 제공자인 Facebook 등이 하는 검열도 치명적이지만, ISP가 검열을 시작하면 걷잡을 수 없음.
     * 악의적인 사이트에 대한 모든 대응은 법 집행 기관이 할 일이며, ISP는 여기에 개입하려는 유혹을 뿌리쳐야 함.
     * ISP를 포함한 모든 인프라 제공 업체는 합법적인 의사소통에 대해 중립적인 입장을 취해야 할 것임.

   ISP는 공감하지만 모든 인프라 제공업체는 반대입니다..

   우리나라도 이미 수십년간 단속/차단을 행하고 있었죠. 양날의 검인 것 같습니다.
     * HN 스레드

   Kiwi Farms이 워낙 악독한 사이트라 크게 이슈가 되진 않은 것 같지만, ISP는 어떠한 검열을 해서도 안 된다는 부분에는 정말 동의합니다.
   특히 티어 1 ISP한테 차단당한 경우에는 취할 수 있는 행동이 거의 없다는 점이 중요한 것 같아요.

   지금까지 많은 검열과 차단이 있었지만, 티어 1 ISP가 실제로 불법은 아닌 사이트의 모든 트레픽을 차단하는 건 이야기가 다르다고 생각됩니다.

   HN 스레드의 AI 요약.
     * CM30: ISP는 온라인 언어를 감시해서는 안 되며, 기업들이 변덕으로 인해 언론의 자유를 검열하는 것에 대해 우려합니다.
     * gorwell: 권위주의적인 검열자들이 대기업 기술을 악용하고, 엔지니어들이 기술 회사가 이렇게 사용되기를 의도하지 않았다고 말합니다.
     * version_five: 정부가 자신들의 의견에 따라 대기업을 통해 검열할 수 있는 구멍을 찾았다고 말합니다.
     * moomin: 이 회사들이 사적인 기업인지 공공의 기관인지 결정해야 하며, 회사의 자유를 제한하는 것은 해답이 아니라고 말합니다.
     * tracker1: 인터넷 접속과 같은 필수 인프라는 합법적인 활동을 거부해서는 안 되며, 다른 사람의 권리를 침해하지 않으면서 개인의 자유를 극대화해야 한다고 믿습니다.
     * RHSeeger: 회사들은 인종이나 성적 취향과 같은 속성을 이유로 서비스를 거부할 수 없다는 점을 언급합니다.
     * wredue: 나치 프로파간다를 선전하는 것과 게이나 다른 속성을 가지는 것을 구별해야 한다고 말합니다.
     * pauldenton: 알렉스 존스에서 트럼프로 검열 범위가 빠르게 확대되었다는 점을 언급하고, 과도한 범위 확장에 대해 경고합니다.
     * kelseyfrog: 정부가 작을수록 사적 부문이 도덕적 검열에 취약해진다는 점을 시사합니다.
     * psychlops: 정부가 도덕적 검열에서 면제되는지, 또는 중앙 집중화된 시스템이 공격에 취약한지 의문을 제기합니다.
"
"https://news.hada.io/topic?id=10679","Google Cloud, Cloud TPU v5e 및 Nvidia H100 기반 A3 GPU VM 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Google Cloud, Cloud TPU v5e 및 Nvidia H100 기반 A3 GPU VM 공개

Cloud TPU v5e

     * 가장 비용 효율적이고 다양하며 확장 가능한 Cloud TPU로, Google Kubernetes Engine (GKE), Vertex AI, Pytorch, JAX, TensorFlow 등 주요 프레임워크와의 통합 제공
     * Cloud TPU v4에 비해 LLMs 및 gen AI 모델에 대해 달러당 최대 2배 높은 훈련 성능 및 최대 2.5배 높은 추론 성능 제공
     * 다양한 LLM 및 gen AI 모델 크기에 맞는 구성을 선택할 수 있도록 8가지 다른 가상 머신 (VM) 구성 지원
     * Multislice 기술 도입으로 사용자가 물리적인 TPU 팟의 경계를 넘어 AI 모델을 수만 개의 Cloud TPU v5e 또는 TPU v4 칩으로 확장 가능

A3 GPU VM

     * NVIDIA의 H100 Tensor Core GPU를 탑재. 특히 요구 사항이 높은 gen AI 작업 부하 및 LLMs를 훈련하고 서비스하기 위해 특별히 제작되었으며, 다음 달에 일반적으로 사용 가능할 예정
     * A3 VMs는 이전 세대에 비해 3배 빠른 훈련 및 10배 높은 네트워킹 대역폭을 제공하며, 대규모 규모와 성능을 제공
"
"https://news.hada.io/topic?id=10669","Microsoft에게 묻다: 우리의 개인 데이터를 AI 훈련에 사용하고 있나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Microsoft에게 묻다: 우리의 개인 데이터를 AI 훈련에 사용하고 있나요?

     * Mozilla가 Microsoft의 새로운 서비스 약관에 대해 제기한 우려에 대한 기사, 이 약관은 9월 30일부터 적용 예정입니다.
     * Mozilla는 네 명의 변호사, 세 명의 개인정보 보호 전문가, 두 명의 캠페인 진행자가 약관을 검토하였지만, Microsoft가 사용자의 개인 데이터를 AI 모델 학습에 사용할 계획인지 확실히 결정하지 못했습니다.
     * 문제가 되는 데이터는 Office, Skype, Teams, Xbox를 포함한 130개의 Microsoft 제품에서 오는 오디오, 비디오, 채팅, 첨부 파일을 포함합니다.
     * Mozilla는 현재 Microsoft에게 사용자의 개인 데이터를 AI 학습에 사용할 계획인지 명확히 밝히라고 공개적으로 요청하고 있습니다.
     * 이 기사는 개인정보 보호 약관의 복잡성과 일반인이 자신의 데이터가 어떻게 사용되는지 이해하는 데 어려움을 강조하고 있습니다.
     * Mozilla의 이번 행동은 사용자의 개인정보 보호를 목표로 하며, 기술 회사가 개인 데이터를 어떻게 다루는지에 대한 투명성을 촉진하려고 합니다.
"
"https://news.hada.io/topic?id=10732","손으로 PDF 텍스트를 수정하고자 하는 당신을 위한 (2020)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  손으로 PDF 텍스트를 수정하고자 하는 당신을 위한 (2020)

     * PDF 텍스트 내용 수정 가이드: Adobe Acrobat과 같은 상용 도구 없이
     * Mac 사용자를 위한 주요 가이드: 대부분의 Linux 배포판에서도 사용 가능한 도구 언급
     * PDF에서의 텍스트 데이터 압축 저장: qpdf라는 명령줄 도구를 사용한 압축 해제
     * 압축 해제 후 텍스트 데이터 확인: 텍스트 편집기에서 인코딩 및 특정 폰트에 연결된 상태로 확인
     * PDF 내 텍스트 인코딩의 복잡성: 파일 자체에 포함된 맞춤형 인코딩을 포함한 다양한 가능한 인코딩
     * 인코딩 정보 추출: pdffonts라는 명령줄 도구 사용
     * 임베디드 인코딩과 관련된 폰트 식별 및 해당 폰트의 임베디드 인코딩 테이블 찾는 방법 예시 제공
     * 인코딩 테이블: 맞춤형 인코딩 포인트를 유니코드 포인트에 매핑
     * Python을 사용한 테이블 변환: 사전으로 테이블 변환 및 인코딩 및 디코딩 함수 작성
     * 이러한 함수를 통한 원본 텍스트 교체: 맞춤형 인코딩된 교체 텍스트로 원본 텍스트 교체 가능

        Hacker News 의견

     * PDF 규격은 복잡하며 Photoshop의 레이어 블렌드 모드와 이전 내용을 수정하는 추가 내용을 포함한 다양한 기능을 지원합니다.
     * PDF는 다른 ""소유자""와 ""사용자"" 비밀번호를 가진 비밀번호 기반 암호화와 인쇄 또는 텍스트 복사를 방지하는 옵션을 포함합니다.
     * 복잡한 성격에도 불구하고 PDF는 불가침한 이진 형식이 아니라 공식 사양에서 잘 설명된 다양한 유형의 객체 그래프입니다.
     * mutool과 같은 도구는 PDF를 압축된 데이터가 없는 버전으로 변환하는 데 사용할 수 있어 이해하고 수정하기 쉽습니다.
     * PDF는 3D 객체, JavaScript, 내장된 플래시 객체의 영화, 보이지 않는 주석, XHTML과 CSS의 하위 집합을 사용하는 위젯과 같은 다양한 기능을 지원합니다.
     * 그러나 PDF는 주로 페이지 설명 형식이며 페이지의 표시를 나타내지 않고 문서 구조를 나타냅니다. 따라서 PDF가 생성된 문서를 편집하는 것이 권장됩니다.
     * PDF는 주로 내용을 완벽하게 표시하거나 인쇄하는 것이 목적이므로 실제 이미지보다 적은 바이트를 차지하는 이미지 형식에 가깝습니다.
     * qpdf와 RUPS와 같은 도구는 PDF의 구조를 파악하고 수정하는 데 사용할 수 있습니다.
     * Firefox는 PDF에 서명하는 쉬운 방법을 제공합니다.
     * PDF 규격은 방대하고 복잡하며, 수년 동안 공부한 후에도 겨우 표면을 긁은 것 같은 느낌을 받을 수 있습니다.
"
"https://news.hada.io/topic?id=10654","커피 제조 장비의 CT 스캔","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            커피 제조 장비의 CT 스캔

     * 커피의 역사는 커피 소비에 대한 독특한 ""파동""을 보았으며, 로스팅, 추출 방법 및 도구의 발전이 있었습니다.
     * 1933년에 발명된 Moka Express는 가정에서의 커피 추출을 혁신하고 상징적인 디자인이 되었습니다.
     * 2005년에 소개된 AeroPress는 공기 압력과 담그기 방식을 사용하여 빠르고 부드러운 커피를 추출합니다.
     * Fellow Stagg EKG와 같은 거위목 주전자는 항연 방식의 커피 추출을 위해 물의 흐름과 분배를 정밀하게 조절할 수 있습니다.
     * Porlex와 같은 버 그라인더는 블레이드 그라인더와 비교하여 더 일관된 정도와 정확한 분쇄 크기를 제공하여 커피의 향미와 향기를 보존합니다.
     * 커피 제조 기술의 이러한 발전은 감각적 경험을 향상시키고 커피를 과학적이고 미적인 실험으로 변화시킵니다.

        Hacker News 의견

     * 최신 비알레티 제품은 이전 모델에 비해 가격이 싸고 품질이 낮습니다.
     * CT 스캔은 모카 포트에 이상적인 영상 기술이 아닙니다.
     * 스캔 대상물의 선택은 꽤 간단하고 예측 가능합니다.
     * 커피 제조에 대한 4차 산업 혁명의 혁신은 집착적으로 여겨지지만 다각적인 감각 경험에 기여합니다.
     * Stagg EKG와 Corvo EKG 주전자에는 ""Wormy""라는 숨겨진 게임이 있습니다.
     * Stagg EKG 주전자의 출력은 유럽과 영국 주전자에 비해 낮습니다.
     * CT 스캔을 보여주는 웹사이트는 쿠키 팝업을 제외하고 시각적으로 매력적입니다.
     * ""Cut in Half: The Hidden World Inside Everyday Objects""라는 책은 이 주제에 관심 있는 사람들에게 추천됩니다.
     * 해당 웹사이트는 Blendtec의 ""Will It Blend"" 캠페인과 유사한 교묘한 광고로 여겨집니다.
     * 에어로프레스 커피 메이커에서 마이크로 플라스틱에 대한 우려가 있습니다.
     * 에어로프레스 스캔에서 가스켓 수명을 연장하는 지침이 잘못되었습니다.
"
"https://news.hada.io/topic?id=10639","내 타이핑의 1/2를 자동화했습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          내 타이핑의 1/2를 자동화했습니다.

     * CompressThis: 자동으로 당신의 글에서 타이핑 단축키를 생성하는 도구입니다.
     * 당신의 글에서 일반적인 구문을 기반으로 단축키를 제안하여 시간과 타이핑 횟수를 절약합니다.
     * 이 도구는 키보드 단축키를 구현하는 리눅스 프로그램인 Autokey를 위한 설정 파일을 생성합니다.
     * Slack 데이터 내보내기를 구문 분석하여 단축키 생성을 위한 말뭉치를 만들 수도 있습니다.
     * 제안은 문자 수와 구문의 빈도에 따라 순위가 매겨집니다.
     * 짧고 빈번한 단어들이 제안된 단축키 목록의 상위에 자주 위치합니다.
     * 이 도구는 사용자의 선호도와 휴리스틱에 기반하여 약어를 사용자 정의할 수 있습니다.
     * 설치 및 사용 방법에 대한 안내와 함께 Slack 기록을 말뭉치로 사용하는 방법도 제공합니다.
     * Autokey는 생성된 단축키를 사용하기 위해 권장되는 프로그램이지만 현재는 리눅스의 X11에서만 지원됩니다.
     * 생성된 설정 파일은 Chrome이 포커스되어 있을 때만 적용되도록 설정되어 다른 프로그램과의 충돌을 피합니다.
     * 이 도구는 사용자의 타이핑을 더 효율적으로 만들고 시간을 절약하기 위해 설계되었습니다.

        Hacker News 의견

     * 이 자동화 도구의 범용 버전은 더 흥미로울 것입니다.
     * 주어진 텍스트 말뭉치에 맞춰 세밀하게 조정된 자동 수정은 유용할 수 있습니다.
     * 단어를 완전하고 정확하게 입력하는 것은 보존할 가치가 있는 기술입니다.
     * Native iOS/macOS의 ""텍스트 치환""은 도움이 되는 도구입니다.
     * 텍스트 확장을 만드는 것은 도전적일 수 있습니다.
     * 첫 글자를 단축키로 사용하는 것은 대안적인 접근법일 수 있습니다.
     * 일반적인 구문을 학습하고 단축키를 제안하는 키로거는 확장 아이디어일 수 있습니다.
     * 이 도구를 효과적으로 사용하기 위해 단축키를 기억하는 것이 중요합니다.
     * 코드 편집기에서도 유사한 약어가 타이핑을 절약하기 위해 사용됩니다.
     * 특정 채팅 상호작용을 제외하고는 타이핑은 일반적으로 병목이 되지 않습니다.
"
"https://news.hada.io/topic?id=10680","내가 알고 있는 가장 최악의 프로그래머","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         내가 알고 있는 가장 최악의 프로그래머

     * 개발자 생산성 측정의 중요성에 대한 기사, 개인 성과 지표에 따라 비생산적으로 판단된 프로그래머 Tim Mackinnon에 초점을 맞춤
     * 회사는 비즈니스 가치를 대표하는 스토리 포인트를 기반으로 생산성을 측정하는 시스템을 사용함
     * Tim의 생산성 점수는 항상 0점이었음, 그는 스토리에 참여하지 않고 다양한 팀원과 페어링하며, 경험이 적은 개발자를 멘토링하고, 선배들과 공동 창작하는데 시간을 보냄
     * 저자는 Tim이 소프트웨어를 제공하지 않았지만, 소프트웨어를 제공하는 팀을 제공했다고 주장함. 그의 존재는 팀을 더 효과적이고 생산적이며, 일치시키고, 관용적이며, 재미있게 만듦
     * 저자는 매니저가 팀의 작업을 관찰하도록 초대하고, Tim이 사람들과 페어링할 때 작업의 품질과 가치 도달 시간이 훨씬 좋았음을 알아차림
     * 결국, 회사는 개인 생산성 지표를 폐지하고, 고성능 단위로서 조직에 제공하는 비즈니스 영향을 추적하고 축하하는 팀 책임을 선호함
     * 저자는 생산성을 복잡한 적응 시스템의 단위의 개별 기여를 측정하려는 시도보다는, 절약, 생성, 보호된 달러로 표현된 구체적인 비즈니스 영향으로 측정하는 것을 제안함
     * 기사는 Tim Mackinnon과 함께 일하는 것을 추천하며, 그의 팀워크와 생산성에 대한 접근 방식의 가치를 강조하며 마무리함

        Hacker News 의견

     * 팀원들의 가치를 인식하는 중요성에 대한 기사, 생산성에 직접 기여하지 않지만 전체 팀의 성능을 향상시키는 멤버들
     * ""Windows 전문가""로 고용되어 Mac에서 Windows로 전환하는 팀을 돕는 경험을 공유하는 한 사용자, 팀의 생산성을 향상시키지만 자신의 생산성 부족으로 평범한 리뷰를 받음
     * Bell Labs에서 가장 생산적인 직원들이 생산성을 높이는 데 도움이 되는 질문을 던지는 특정 개인과 자주 상호작용하는 이야기를 다른 사용자가 전달
     * 고정된 점수를 매주 만들어야 하는 회사에서 개발자들이 경험하는 스트레스와 번아웃에 대해 사용자가 논의, 시스템을 이용하는 팀들이 더 행복하고 스트레스가 적음
     * IT 전문가가 네트워크 재구축 프로젝트를 내부에서 수행하여 회사에 상당한 금액을 절약한 이야기를 공유하는 한 사용자, 하지만 비기술적인 상사들로부터 구두로 감사의 말만 받음
     * 더 많은 페어 프로그래밍을 원하는 여러 사용자들, 주니어 팀원들과 지식을 공유하고 그들의 성장을 돕는 것, 그러나 관리진들이 이 접근법을 과소평가한다고 지적
     * 우수한 코드와 끔찍한 코드를 모두 작성하는 개발자에 대한 이야기를 공유하는 한 사용자, 즉각적인 문제를 해결하기 위해 빠르게 코드를 작성하는 능력으로 가치를 인정받음
     * 자신의 업무를 수행하지 않고 오직 페어 프로그래밍만 하는 선임 엔지니어에 대해 의구심을 표현하는 일부 사용자들
     * ""패실리테이터"" 직원들의 중요성에 대해 사용자들이 논의, 자신들의 생산성이 낮아 보이더라도 다른 사람들의 생산성을 높임
     * 단일 생산성 지표에 의존하는 함정과 팀 내 다양한 기술과 습관을 이해하는 중요성을 강조하는 토론
     * 선임 팀원들이 주니어 멤버들이 처리할 수 없는 복잡한 작업에 집중하고 주니어들을 돕는 데 시간을 보내는 것보다 중요하다고 주장하는 일부 사용자들
     * 마지막 댓글에서는 기사 제목을 클릭베이트로 비난하며, 이야기는 나쁜 프로그래머가 아니라 결함 있는 생산성 지표와 관리 부실에 관한 것이라고 주장
"
"https://news.hada.io/topic?id=10754",""그녀가 너무 많은 번에 걸쳐 이별을 고한 것은 어떻게 라틴어로 표현하나요?"라는 질문","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ""그녀가 너무 많은 번에 걸쳐 이별을 고한 것은 어떻게 라틴어로 표현하나요?""라는 질문

     * ""She said goodbye too many times before""라는 영어 표현을 라틴어로 번역하는 데 대한 Latin Language Stack Exchange의 토론 기사
     * 이 표현은 Maroon 5의 노래 ""This Love""의 가사에서 가져온 것
     * 사용자의 첫 번째 번역 시도는 ""Ea dixit 'Vale!' plurimis temporibus abhinc.""
     * 한 사용자는 대명사를 제거하고 완료 시제 또는 과거완료를 사용하여 ""before now"" 또는 ""before then""을 나타내는 더 구어체적인 번역을 제안
     * ""say goodbye""에 대한 라틴어 동사 valedīcō가 제안되었으며, ""too many times""에 대한 두 가지 표현인 Totiēns(""so many times""의 의미)와 nimium(""too much""의 의미)도 함께 제안
     * 제안된 번역은 ""nimium valedīxit"" 또는 ""totiēns valedīxit""로, ""she bade farewell too much before"" 또는 ""she bade farewell so many times before""를 의미
     * 다른 사용자는 Cicero가 사용한 표현인 ""nimium saepe""를 ""too many times""에 사용하는 것을 제안
     * 주어 대명사 ""she""는 강조를 위해 ""illa""로 번역될 수 있으며, 이는 ""that woman""을 의미
     * 이러한 제안을 결합한 최종 제안된 번역은 ""Illa nimium saepe valedixit"".

        Hacker News 의견

     * ""그녀는 너무 많은 번 이별을 말했다""라는 영어 표현을 라틴어로 번역하는 논의.
     * 댓글러들은 글자 그대로의 번역이 가능하다고 지적하면서도, 문화적, 언어적 차이로 인해 이 표현의 관용적인 성격이 라틴어로 잘 번역되지 않을 수 있다고 주장.
     * Google 번역을 통한 라틴어로의 문장 번역이 제공되지만, 그 정확성에 대해 비판 받음.
     * 라틴어 문법의 복잡성에 대한 논의, 한 댓글러는 라틴어의 밀집된 문법 정보가 단어 순서에 더 많은 유연성을 허용한다고 지적.
     * 영국 문법 학교에서의 라틴어 교육의 역사적 맥락 언급.
     * 일부 댓글러들은 포르투갈어와 같은 다른 라틴어로의 대체 번역을 제안.
     * 사무엘 R. 델라니의 소설 ""Babel-17""에서의 과학 소설에서 언어 사용에 대한 논의도 다룸.
     * 일부 댓글러들은 원래의 질문의 이유에 대해 추측, 이것이 타투나 노래 가사를 위한 것일 수 있다고 제안.
     * 번역에서 올바른 시제 사용의 중요성이 강조, 일부 댓글러들은 원래의 영어 표현이 문법적으로 잘못되었을 수 있다고 제안.
"
"https://news.hada.io/topic?id=10735","Ask HN: 나는 FCC 커미셔너로서 IoT 보안 업데이트 규제 제안 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask HN: 나는 FCC 커미셔너로서 IoT 보안 업데이트 규제 제안 중

     *

     * IoT에서 심각한 취약점이 흔하며, 이러한 문제가 최종 사용자 장치에서 패치되는 데 너무 오래 걸립니다.
     * 제품의 보안 업데이트를 위해 제조업체가 장치를 지원하는 기간이 판매 시점에 통보되지 않는 경우가 많습니다.
     * FCC가 최근 연결된 장치에 대한 사이버 보안 라벨링 프로그램을 위한 제안 규칙 공고를 발행했습니다.
     * 제품이 보안 업데이트를 받을 기간을 공개하는 것이 이러한 기준 중 하나가 되도록 강력히 주장했습니다.
     * 많은 제조업체들이 보안 업데이트에 대한 어떠한 약속도 하기를 반대하고 있습니다.
     * FCC와 백악관은 장치 제조업체의 이야기만 듣는다면 강력한 입장을 취할 가능성이 낮습니다.
     * 당신이 불안전한 프로토콜, 노출된 개인 키 등의 끔찍한 보안을 경험했습니다.
     * '왜 이런 것들에 대한 규칙이 없는가?'라는 질문을 받았습니다.
     * 이것이 규칙이 어떻게 되어야 하는지에 대한 당신의 생각을 말하고 기록에 남기는 기회입니다.
     * 영향을 미치고 싶다면, 2023년 9월 25일 (ET 자정)까지 규칙 제정 절차에 의견을 제출해야 합니다.
     * FCC는 당신의 논거를 고려해야 합니다.
     * 저는 당신의 의견을 듣고 배우기 위해 여기에 있습니다.
     * 저의 법률 고문인 Marco Peraza도 질문에 답변할 것입니다.
     * FCC의 동료들도 당신의 아이디어를 수용하고, 심지어 저가 틀렸다는 것을 인정하는 데 열려 있기를 바랍니다. 감사합니다!```

        Hacker News 의견

     * FCC 위원이 IoT 보안 업데이트 규제를 제안하고 HackerNews 커뮤니티와 토론 및 피드백을 위해 소통하고 있다.
     * FCC는 이 제안에 대한 공식적인 의견을 9월 25일까지 온라인으로 제출 받고 있다. 모든 의견은 최종 규칙에 반영될 것이다.
     * 토론에는 펌웨어 엔지니어들의 견해를 포함한 다양한 관점이 포함되어 있으며, 이들은 보안 결함의 정의, 원격 업데이트의 잠재적 보안 위험, 그리고 취약한 장치에 대한 공격으로 인한 제조업체의 손해 책임에 대해 질문을 제기한다.
     * 일부 의견은 IoT 장치와 관련된 사이버 범죄의 증가, 특히 충돌 지역에서, 그리고 이러한 장치가 불법 감시 또는 공격 조정에 사용될 가능성을 강조한다.
     * 제조업체, 특히 소규모 팀이 취약점을 파악하고 보안을 유지하는 데 직면한 도전과, 그들이 사업을 폐업하거나 웹사이트가 침해당할 경우에 대한 우려가 있다.
     * IoT 장치가 중앙 서비스와의 연락 없이 작동할 수 있어야 하며, 내재된 보안 위험을 피하기 위해 분리된 또는 자체 관리 환경에서의 최소 기능을 요구하는 규칙이 있어야 한다는 제안이 있다.
     * 제조업체가 최소한의 기간 동안 그들의 장치를 지원하고 지원이 끝나면 전체 소스 코드를 공개해야 하며, 이를 통해 소비자가 펌웨어를 제어하고 장치가 사용 불능 상태가 되는 것을 방지할 수 있어야 한다는 요구가 있다.
     * 제안된 규제의 집행 가능성에 대한 우려, 특히 해외 제조업체에 대한 것, 그리고 강력한 IoT 플랫폼이 장치를 감사하고 기준을 충족하지 못하는 것들을 금지해야 할 것이라는 제안이 있다.
"
"https://news.hada.io/topic?id=10726","C++을 만든 Bjarne Stroustrup의 인생 조언","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    C++을 만든 Bjarne Stroustrup의 인생 조언

     * 지나치게 전문화하지 마세요(overspecialize)
          + 미래를 알고 있다고 너무 확신하지 마세요.
          + 융통성을 가지고, 커리어와 직업은 장기적인 것이라는 것을 기억하세요.
          + 너무 많은 젊은이들이 자신이 뭔가를 최적화 할 수 있다고 생각하고, Right Thing이 아닌 것에 전문화 하면서 몇년이상을 소비했다는 것을 깨닳습니다.
          + 그리고 그 과정에서 번아웃 됩니다. 우정을 쌓고 컴퓨팅 밖에서의 삶을 사는데 충분한 시간을 보내지 않았기 때문에요.
     * 나는 많은 종류의 사람을 만납니다. 뭐라고 부르는지 모르겠는데, ""Junior Geeks""?
          + 그들은 오직 프로그래밍, AI, 그래픽 등의 컴퓨터에 대한 전문성만이 중요하다고 생각합니다.
          + 그렇지 않아요. 만약 그들이 다른 일을 하지 않는다면.. 음 글쎄요
          + 아이디어를 소통하지 않는다면, (혼자 하는)스도쿠를 할 수 있습니다. 소통(Communication) 을 해야해요.
          + 많은 괴짜(Nerd)들이 이 사실을 잊고 있습니다.
          + 그들은 최고의 코드를 작성하기만 하면 세상을 바꿀 수 있다고 생각합니다.
          + 하지만 경청할줄 알아야 합니다. 사용자와 소통하고 그들로 부터 배울 수 있어야 합니다.
          + 그리고 자신의 아이디어를 사용자에게 전달할 수 있어야 합니다.
     * 그러니 코딩만 할 수는 없습니다.
          + 문화와 아이디어를 표현하는 방법에 대해 뭔가를 해야 합니다.
          + 내 말은, 나는 역사와 수학에 보낸 시간을 결코 후회하지 않는다는 것입니다.
          + 수학을 정신을 날카롭게 하고, 역사는 자신의 한계에 대한 아이디어와 세상에 무슨일이 일어나고 있는지를 알려줍니다.
          + 그러니 너무 확신하지 마세요. 균형잡힌 삶을 살기 위한 시간을 가져보세요.
     * 그리고 기회를 잡을 준비를 하세요.
          + 내 말은, 폭넓은 교육, 폭넓은 기술 세트(교육을 통해 기본적으로 기술 포트폴리오를 구축하는 것)는 기회가 왔을 때 이를 활용할 수 있다는 것을 의미합니다.
          + 가끔 기회를 알아차릴 수 있습니다. 우리에게는 많은 기회가 있습니다.
          + 하지만, 그 중 상당수는 우리가 활용하지 못하거나 알아차리지 못합니다.
          + 저는 표준 컴퓨터 과학, 컴파일러, 여러 언어를 공부하는 등 상당히 폭넓은 교육을 받았습니다.
          + 당시 제가 알고 있었던 언어는 약 20여가지 였던 것 같아요. 그리고 머신 아키텍처와 운영체제도 다뤄봤죠. 이 기술 세트는 유용했어요(skill set turned out to be useful)

   템플릿을 활용해서 다양한 분야에 적응하게 하고, 대신 지나친 템플릿전문화는 하지 마라...

   다음과 같은 인터뷰도 있네요. 물론 농담이라고 합니다.
   https://nanite.tistory.com/102

   코드 작성에만 집중하지 말라는 조언은 a.i가 발전하면서 더 와닿는 거 같아요. 그리고 특히 커리어 초반에 여기에 소비하게 되는 거 같습니다.

   어나더 레벨에 있는 Geek의 조언이라니... 마음 속에 담겠습니다.

   그래서... C++을 만든 건 실수였다는 걸... 인정하시나요? (응?)

   WHY, HOW, WHAT 의 동심원에서 많은 이들이 WHAT, 좀 나아가도 HOW 에까지만 관심을 기울입니다. 하지만 왜, 무엇을 위해, 누구를 위해 그것을 하는지가 가장 중요한 본질입니다.
   사용자, 문화, 아이디어, 역사, 소통이 그 본질을, 이유를 제공해 줍니다.
   그에 더해 교육과 학습을 통해 HOW 를 채운다면, WHAT 은 저절로 다가올 겁니다.
   이런 얘기를 guru 의 언어를 통해 다시 듣네요. :)

   요약하면.. ""폭넓게 교육을 받고, 친구를 만들고 사람들과 소통하라"" 네요
"
"https://news.hada.io/topic?id=10708","산업 로비의 영향으로 연하게 조정된 연어 농장의 농약 안전 한도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  산업 로비의 영향으로 연하게 조정된 연어 농장의 농약 안전 한도

        Hacker News 의견

     * 연어 농장의 농약 안전 한도가 감소하는 문제에 대한 기사, 이는 산업 로비 활동의 영향으로 보임
     * 이 문제는 빠르게 번식하는 갑각류가 케이지에서 야생어에 영향을 미치는 영국에서 특히 관련이 있음
     * 이 문제로 인해 해당 부문에서는 한 해에만 436백만 달러의 경제적 손실 발생
     * 일부 댓글에서는 세계 인구를 먹여살리기 위해 필요한 산업화와 지속 가능한 보존 사이의 균형을 강조
     * 농약 한도가 12에서 131 ng/kg로 처음 변경된 것이 과학적 증거에 기반한 것인지에 대한 논란 존재
     * 일부는 사용되는 화학물질의 양이 종종 새로운 한도를 초과하므로 한도 변경은 중요하지 않다고 주장
     * ""로비 활동""이라는 용어는 일부에게 부패에 대한 완곡한 표현으로 비판받음
     * 산업 오염이 인간 건강에 미치는 영향에 대한 우려, 한 댓글 작성자는 스시를 먹고 중금속 중독으로 킬레이션 치료를 받아야 했던 친구를 언급
     * 농업에서 농약 사용 문제도 논의되며, 한 댓글 작성자는 농약 없이는 작물 실패가 널리 퍼진 기아로 이어질 수 있다고 지적
     * 이 상황은 ""건강한"" 스코틀랜드 양식 연어의 국제 브랜드를 개선할 기회를 놓친 것으로 보임
     * 일부 댓글은 농약 안전 한도를 줄이기로 결정한 로비스트들에 대한 분노와 실망을 표현
"
"https://news.hada.io/topic?id=10688","이별의 EC2-Classic, 멋진 시간이었습니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      이별의 EC2-Classic, 멋진 시간이었습니다

     * AWS, 2023년 8월 15일을 기점으로 원래의 서비스 중 하나인 EC2-Classic을 공식적으로 퇴역시켰다.
     * EC2-Classic은 간단한 네트워크 구조로 알려져 있어, 컴퓨팅 자원 획득 과정을 간편하게 만들었다.
     * 이 서비스는 2006년에 출시되었으며, 하드웨어를 즉시 확장하거나 축소할 수 있는 프로그래밍 가능한 자원으로 바꾸는 것이 혁명적이었다.
     * EC2-Classic은 보안 그룹 및 공용 IP 주소와 같은 기능을 제공하며, 다른 고객과 공유하는 단일 평면 네트워크에서 실행되었다.
     * 2006년에 출시된 첫 번째 인스턴스인 m1.small은 1.7 GHz Xeon 프로세서에 상응하는 가상 CPU, 1.75 GB의 RAM, 160 GB의 로컬 디스크, 그리고 250 Mb/초의 네트워크 대역폭을 제공하며, 시간당 단지 $0.10의 비용이 들었다.
     * 시간이 지남에 따라 AWS는 고객의 피드백에 기반하여 EC2-Classic에 Elastic IP 주소, Auto Scaling, Load Balancing, CloudWatch, 그리고 다양한 새로운 인스턴스 유형과 같은 기능을 추가했다.
     * 2013년까지 AWS는 VPC를 활성화하여 각 고객이 자신만의 안전하고 고립된 클라우드 조각을 관리할 수 있게 하였고, 이것이 새로운 표준이 되었다.
     * AWS는 EC2가 발전하고 AWS가 새로운 가상화 플랫폼인 Nitro를 구현함에도 불구하고, 다음 10년 동안 계속해서 EC2-Classic을 지원하였다.
     * EC2-Classic의 퇴역은 AWS의 현재 및 미래의 작업 부하 지원에 대한 헌신과 고객 중심의 태도를 보여주는 증거이다.
     * EC2 팀은 퇴직 과정 동안 문서, 도구, 그리고 엔지니어링 및 계정 관리 팀의 지원을 제공하였다.
     * EC2-Classic에 대한 작별 인사는 AWS 서비스의 진화와 고객을 위한 지속적인 혁신을 상징한다.

        Hacker News 의견

     * EC2-Classic은 그 간단함과 네트워크 엔지니어링을 재미있고 쉽게 만드는 방식으로 인정받았다.
     * 새로운 ""VPC"" 메커니즘으로의 전환은 그 복잡성 때문에 비판을 받았다.
     * 더 나아지기보다는 악화시키는 것처럼 보이는 변화가 이루어질 때의 좌절감이 있다.
     * 인프라 관리, 새 하드웨어 구매, 소프트웨어 업그레이드, 고장난 디스크 교체 등의 복잡성은 AWS의 복잡성으로 대체되었다.
     * AWS는 인프라 관리의 복잡성을 추상화하려는 목표에도 불구하고 복잡한 시스템으로 여겨진다.
     * AWS에서 서비스의 퇴출은 드물지만, 일부 사용자들은 OpsWorks가 중단되기 전에 그들의 자료를 이전하고 있다.
     * AWS의 EC2는 출시 당시 혁명적인 기술로 여겨졌으며, 사용자들이 다른 위치에서 인스턴스를 쉽게 시작할 수 있게 해주었다.
     * EC2의 초기 날들은 다양한 종류의 저장소에 대해 배우고, 불안정한 인스턴스를 다루는 등의 도전이 있었다.
     * 이러한 도전에도 불구하고, EC2는 게임 체인저로 여겨졌으며, 활발한 인터넷 커뮤니티를 구축하는 데 도움이 되었다.
     * AWS가 Microsoft와 Google이 제공하는 기능인 고정 예산을 허용하여 신용카드 요금이 폭발적으로 증가하는 것을 방지하길 원하는 바람이 있다.
     * 일부 사용자들은 AWS가 IPv6와 함께 Classic을 계속 이용했으면 좋겠다고 바라며, 후기 Classic 인프라를 후퇴로 보고 있다.
     * 클래식 인스턴스에서 더 현대적인 유형으로의 이전이 어떻게 처리되었는지, 그리고 이것이 계정 소유자의 개입을 필요로 했는지에 대한 의문이 있다.
     * AWS의 지원 수준은 모든 소프트웨어 회사가 지향해야 할 것으로 여겨진다.
     * 2006년 이후 클라우드 컴퓨팅의 진화는 네트워크 처리량, vCPUs, 메모리, 저장소 등에서 상당한 개선을 이루며 놀라운 것으로 여겨진다.
"
"https://news.hada.io/topic?id=10719","조류 에너지는 재생 가능하지 않다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           조류 에너지는 재생 가능하지 않다

     * 이 기사는 1998년부터 Jerry Z. Liu가 저술한 다양한 과학 논문들의 모음입니다.
     * 초전도, 초유체, 전자 터널링, 열역학 등 다양한 주제를 다룹니다.
     * 그 중 한 논문은 조석 에너지가 재생 가능하다는 일반적인 믿음에 도전합니다.
     * 또 다른 논문은 빛 방사를 회전 운동으로 변환하는 장치인 크룩스 방사계의 작동 과정에 대한 통찰을 제공합니다.
     * 저자는 또한 액체나 가스에 떠 있는 입자가 무작위로 움직이는 현상인 브라운 운동의 원인을 탐구합니다.
     * Liu는 지구의 자기장의 기원에 대한 독특한 시각을 제시하며, 이를 초전도체에 귀속시킵니다.
     * 이 모음집에는 상대성 이론을 이해하는 가이드와 유명한 방정식 E = mc2의 간단한 도출이 포함되어 있습니다.
     * 논문들은 PDF 형식으로 제공되어, 이러한 과학적 주제에 관심이 있는 독자들이 쉽게 접근할 수 있습니다.
     * 이 기사는 일부 확립된 과학적 개념에 도전하고 다른 개념에 대해 새로운 시각을 제공함으로써 중요합니다.
     * 기술에 능통한 독자들은 복잡한 과학적 현상에 대한 깊이 있는 탐구 때문에 이 기사를 흥미롭게 생각할 수 있습니다.

        Hacker News 의견

     * 기사의 주요 가정은 에너지 소비가 매년 2% 증가하며, 이로 인해 미래의 조석 에너지 수요에 대한 높은 예측이 나올 것이라는 것입니다.
     * 이러한 가정은 인구와 경제 성장에서 에너지 소비가 분리되었다는 점을 고려하면 비현실적이라는 비판을 받고 있습니다.
     * 기사가 조석 에너지에 초점을 맞춘 것은 지수적 성장의 불가능성에 대한 해설로 보이며, 조석 에너지 자체의 지속 가능성보다는 그것에 대한 해설로 보입니다.
     * 비평가들은 에너지 소비가 현재의 속도로 계속 성장한다면, 500년 후에는 지구가 받는 모든 태양 에너지를 사용하게 되거나, 또는 매년 5백만 엑사줄의 에너지를 생산하기 위한 기술을 개발해야 할 것이라고 지적합니다.
     * 매년 2%씩 무제한 지수적 성장을 가정하는 것은 오류라는 견해가 있습니다.
     * 소비가 계속 증가한다면, 100% 깨끗한 에너지조차도 지구를 불안정하게 만들 수 있으며, 이는 온도를 높이거나 해류의 순환을 가속화할 수 있다는 우려가 있습니다.
     * 일부 댓글 작성자들은 가정에 동의하지 않더라도, 기사가 기본적인 과학 원리를 사용하여 장기적인 영향을 탐색하려는 시도를 치하합니다.
     * 조석 에너지가 실제로 낭비되고 있는지에 대한 의문이 제기되었으며, 파도가 해안에 부딪힐 때 자연스럽게 열로 소산되기 때문입니다.
     * 기사의 가정은 어린이의 성장률이 성인이 될 때까지 일정하게 유지될 것으로 기대하는 잘못된 논리와 비교됩니다.
     * 일부 댓글 작성자들은 연간 에너지 사용량이 현재의 5배로 안정화될 것이라는 더 합리적인 가정을 제안하며, 이 시나리오 하에서 1000년 후에 얼마나 많은 회전 감속이 발생할지 의문을 제기합니다.
"
"https://news.hada.io/topic?id=10722","SiFive의 P870, RISC-V를 한 단계 더 발전시키다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   SiFive의 P870, RISC-V를 한 단계 더 발전시키다

     * ARM Cortex X2 또는 AMD Zen 4c 정도에 해당하는 고성능 3세대 코어
     * OOO(Out-Of-Order) 실행을 갖춘 6폭(Six-Wide)코어
     * 대규모 리오더 버퍼와 강력한 명령 융합 기능 덕분에 재정렬 용량(Reordering Capacity)이 매우 큼
     * 8사이클 예측 오류 페널티를 가지며, ARM/AMD/Intel 의 최신 CPU에 비해서 상당히 짦음
          + Ex 단계에서 잘못된 예측이 발견되고 명령 캐시 조회 단계에서 다시 시작하는 경우 예측 페널치가 7 사이클에 불과함
          + 따라서 Micro-Op 캐시를 사용하지 않음에도 불구하고 파이프라인이 매우 짦음
          + 클럭속도는 약 3Ghz 범위에 들어갈 것이기 때문에, 경쟁사에 비해 짧은 파이프라인으로 적절한 클럭속도를 달성하는 매우 인상적인 작업을 해낸 것
     * (원글에서는 Branch Predictor, Intruction Fetch, Cache & Memory Access 등에 대해서 자세히 설명합니다만 너무 기술적인 내용이라.. 생략합니다)

결론

     * ARM은 마이크로컨트롤러를 넘어 고성능 시장에 진입하는 과정에서 느린 출발을 보였음
     * 2007년에야 최초의 OOO 코어인 Cortex A9를 만들었고, 2010년대에 걸쳐서 점차 더 크고, 더 높은 전력을 요구하는 고성능 코어를 만들어 냈음
     * 성능 경계를 밀어 붙이는 것은 쉽지 않지만, 오늘날 ARM 코어는 서버시장에서 Inte/AMD 제품에 대한 대안이 될 수 있게 됨
     * RISC-V 는 훨씬 늦게 시작했지만 더 빠른 성장을 보이고 있음
     * SiFive의 P870은 재정렬 용량, 코어 너비 및 실행 단위 측명에서 ARM의 Cortext X 시리즈와 매우 유사해 보임
       완벽하게 매칭되는 수준은 아니지만, P870을 통해서 SiFive의 야망은 분명해보임. 그들은 ""ARM의 파이(Pie) 한덩이를 원하고 있음""
     * SiFive의 가장 큰 과제는 소프트웨어 생태계가 될 것
     * RISC-V의 벡터 확장은 아직 초기 단계이고, RISC-V에 대해 잘 아는 사람은 많지 않음
     * 컴파일러들은 명령어 융합이 잘 일어나도록 조정 되어야 함
     * ARM은 소프트웨어 세계에서 힘든 시간을 보냈고, RISC-V도 같은 힘든 과정을 거쳐야 할 것

   알리바바에는 리스크v 랩탑도 팔더군요.

   확실히 멀었지만, 발전속도를 본다면 대단하네요

   https://news.hada.io/topic?id=10695 글에서 2030년에 ARM 기반 윈도우 머신이 x86 만큼 많아질거라고 예측하던데, 이 예측의 큰 변수가 RiscV가 될것 같습니다. (어떻게 되도 x86은 지못미;;;)

   아아 SiFive 주식 사고 싶어요.....

   OOO 는 Apple M1칩은 왜 그렇게 빠를까? 와 M1은 RISC-V의 상승을 예고한다 를 참고하세요
"
"https://news.hada.io/topic?id=10653","'GPU 부족'에게 장수하라 - 오픈소스 AI 보조금","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GPU 부족'에게 장수하라 - 오픈소스 AI 보조금

     * 오픈 소스 AI 모델들이 폐쇄 소스 대안들과 경쟁력을 갖추고 있습니다.
     * 많은 작은 팀과 개인들이 이러한 모델들을 개선하고 최적화하기 위해 노력하고 있습니다.
     * 그러나 이러한 프로젝트들은 종종 장기적으로 작업을 계속하거나 유지하기 위한 자원이 부족합니다.
     * 이를 해결하기 위해 a16z Open Source AI Grant 프로그램이 시작되었으며, 이 프로그램은 그랜트 자금을 통해 오픈 소스 개발자들을 지원합니다.
     * 이 프로그램은 개발자들에게 재정적인 이익을 창출할 필요 없이 작업을 계속할 수 있는 기회를 제공하기 위해 목표를 가지고 있습니다.
     * 첫 번째 그랜트 수혜자 및 지원 프로젝트들이 발표되었으며, 이 중에는 LLMs의 인스트럭션 튜닝, 검열되지 않은 LLMs의 파인튜닝, 그리고 모델 추론을 위한 새로운 도구 개발에 초점을 맞춘 프로젝트들이 포함되어 있습니다.
     * 이 프로그램은 AI 분야에서의 오픈 협업, 학습, 발전을 촉진하기 위한 목표를 가지고 있습니다.
     * 이 기사에서 표현된 의견은 인용된 개인들의 의견이며, 반드시 a16z나 그 계열사들의 의견을 반영하는 것은 아닙니다.
     * 이 콘텐츠는 정보 제공을 목적으로 제공되며, 법적, 비즈니스, 투자, 세금에 대한 조언으로 의존해서는 안 됩니다.

        Hacker News 의견

     * 인공지능 보조금 프로그램은 오픈 소스 인공지능 분야의 개인, 팀 및 해커를 지원합니다.
     * 이 프로그램은 상업 회사를 지원하지 않습니다.
     * 보조금 수혜자들은 지원에 감사하며 프로세스의 투명성과 공정성을 칭찬합니다.
     * 보조금은 AI 프로젝트를 지원하기 위한 GPU와 같은 하드웨어 구매를 포함합니다.
     * 이 프로그램은 오픈 소스 인공지능의 최신 기술을 발전시키고 기술에 대한 더 나은 이해에 기여하기 위해 노력합니다.
     * Oobabooga는 다양한 텍스트 생성 모델을 시도해볼 수 있는 훌륭한 포털로 칭찬받습니다.
     * 현재 보조금 수혜자들은 현명하게 선택된 영향력 있는 개인/팀으로 여겨집니다.
     * 누군가는 ""GPU 부족"" 노력을 지원하기 위해 자신의 GPU를 설정할 수 있는지 묻습니다.
     * 이 이니셔티브는 멋지게 여겨지며 관리 수수료의 훌륭한 활용으로 평가됩니다.
     * MLC LLM, ExLlama 및 텍스트 생성 추론의 오픈 소스 포크와 같은 미래의 보조금 수혜자를 위한 제안이 제시됩니다.
     * A16z는 실제 고통점 해결에 맞춰진 접근으로 칭찬받으며 다른 사고 리더/벤처 캐피탈리스트들이 이와 같은 방식을 따를 것을 기대합니다.
     * 첫 번째 보조금 수혜자들은 유기적인 실험을 위해 중요하고 견고하게 여겨집니다.
     * 이미지 인공지능 프로젝트가 보조금을 받지 못한 점에 대한 호기심이 표현됩니다.
"
"https://news.hada.io/topic?id=10673","X/Twitter, AI 훈련을 위한 게시물 사용을 허용하는 서비스 이용약관 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            X/Twitter, AI 훈련을 위한 게시물 사용을 허용하는 서비스 이용약관 업데이트

     * X/Twitter가 AI 훈련을 위한 게시물 사용을 허용하도록 서비스 약관을 업데이트했습니다.
     * 이번 조치는 Elon Musk가 X 주변에 요새를 구축하고, 가능한 한 외부 세계로부터 격리시키려는 대담한 단계로 보입니다.
     * 새로운 약관은 AI를 이용한 서비스 개선을 목표로, X를 독특한 데이터 소스로 사용합니다.
     * 업데이트된 약관은 AI가 정의한 기준에 따라 특정 콘텐츠에 대한 접근을 제한하거나 차단할 수 있습니다.
     * 이러한 변화는 Twitter에서 더욱 정교하고 포괄적인 형태의 그림자 금지를 초래할 수 있습니다.
     * 이 변화는 Twitter에만 국한되지 않고, 사용자가 다양한 플랫폼에서 볼 수 있는 콘텐츠에 영향을 미치며, 전체 인터넷에 확장될 가능성이 있습니다.
     * 이전에 Twitter 데이터를 AI 훈련에 사용하는 제3자 조직에 대해 우려를 표현한 Elon Musk는 이제 Twitter에서 동일한 작업을 수행하고 있습니다.
     * 인터넷 경험은 AI 알고리즘에 의해 더욱 개인화되고 정의되어, 매우 맞춤화되면서도 제한적인 인터넷 경험을 제공하고 있습니다.
     * 이 변화는 Twitter에만 국한되지 않고, 인터넷의 새로운 정상을 엿볼 수 있는 일조일 수 있습니다.

        Hacker News 의견

     * 트위터, 사용자 게시물을 AI 훈련에 사용할 수 있도록 서비스 이용 약관 업데이트.
     * 이전에 엘론 머스크, 트위터 데이터의 AI 훈련에 대한 관심 표현, 그 잠재적 가치를 제안.
     * 트위터의 서비스 이용 약관 변경, 인터넷 산업의 더 넓은 추세를 반영할 수 있음, 다른 플랫폼들이 이를 따를 가능성.
     * 업데이트된 약관에는 이제 집단 소송 면책 조항이 포함됨.
     * 트위터 데이터의 AI에 대한 가치와 잠재적 용도에 대한 추측, 챗봇 훈련을 포함.
     * 일부 사용자들, 트위터 데이터를 기반으로 한 AI 훈련의 영향에 대해 우려 표현, 그 품질과 잠재적 영향에 대해 의문 제기.
     * 사용자가 업데이트된 약관을 수락하지 않을 경우 새로운 약관이 이전 트윗에 어떻게 적용되는지에 대한 질문이 제기됨.
     * 일부에게서 보면, 이 업데이트는 엘론 머스크의 다른 회사인 xAI에 이익을 가져다주는 움직임으로 보임.
     * 새로운 약관은 일부에게서 보면, 기존의 관행의 연장으로 보임, 많은 서비스 이용 약관이 제품 개선을 위한 데이터 사용을 허용함.
     * 소비자 행동이 이러한 변화에 영향을 미칠 가능성은 최소로 보이며, 대신 지적 재산권 법에 초점을 맞춤.
"
"https://news.hada.io/topic?id=10759","Falcon 180B 모델 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Falcon 180B 모델 공개

     * 1800억개의 파라미터가 포함된 최대 규모의 공개 언어 모델
     * 공개 모델중에선 리더보드 1위에 랭크. Llama 2 70B 및 GPT-3.5를 능가하며 PaLM-2와 경쟁
     * TII의 RefinedWeb 데이터 세트(대부분 영어)를 이용하여 3.5T 토큰으로 훈련
          + Llama 2 보다 2.5배 더 크고 4배 이상의 컴퓨팅 파워로 훈련했음(Amazon SageMaker 로 4096개의 GPU 이용)
     * Falcon 180B 는 상업적으로 이용은 가능하지만, ""호스팅 사용""을 제외하고 매우 제한적인 조건에서만 사용 가능. 라이센스 확인 필수
     * 하드웨어 요구사항
          + 풀 파인튜닝: 메모리 5120GB, 8x 8x A100 80GB
          + LoRA with ZeRO-3: 1280GB, 2x 8x A100 80GB
          + QLoRA: 160GB, 2x A100 80GB
          + 추론 BF16/FP16 : 640GB, 8x A100 80GB
          + 추론 GPTQ/int4 : 320GB, 8x A100 40GB

   사이즈가 어마어마하네요. 하드웨어 요구사항도 그렇고...
"
"https://news.hada.io/topic?id=10667","Organic Maps: 오프라인 하이킹, 자전거, 트레일 및 네비게이션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Organic Maps: 오프라인 하이킹, 자전거, 트레일 및 네비게이션

     * Organic Maps는 여행자, 관광객, 등산객, 자전거 타는 사람들을 위해 설계된 안드로이드와 iOS용 무료 오프라인 지도 앱
     * 대중이 참여한 OpenStreetMap 데이터를 기반으로 하며, Maps.me 앱의 개방형 소스 분기로 개인 정보 보호에 중점을 둠
     * 활성화된 인터넷 연결 없이도 100%의 기능을 지원
     * 상세한 오프라인 지도, 자전거 루트, 등산로, 산책로, 등고선, 고도 프로필, 정상, 경사면, 음성 안내와 함께하는 단계별 내비게이션을 제공
     * 빠른 오프라인 검색, KML, KMZ, GPX 형식의 북마크와 트랙, 눈을 보호하기 위한 다크 모드 기능도 제공
     * 사용자의 개인 정보를 존중하며, 배터리 수명을 절약하고 예상치 못한 모바일 데이터 요금을 발생시키지 않으며, 광고, 추적, 데이터 수집, 그리고 기타 원치 않는 기능들로부터 자유로움
     * Exodus Privacy Project와 iOS용 TrackerControl에 의해 검증되었으며, 과도한 권한 요청을 하지 않음

        Hacker News 의견

     * Organic Maps는 사용자 친화적인 인터페이스와 오프라인 기능으로 인기를 얻고 있는 새로운 앱입니다.
     * 이 앱은 간단하고 명확한 UI를 제공하며 다양한 기능을 제공하여 Google Maps의 유력한 대안이 될 수 있습니다.
     * 주요 디자인 특징 중 하나는 오프라인 접근 방식으로, 사용자가 위치를 확대하면 앱이 다운로드를 시작하여 Google Maps의 오프라인 기능보다 더 간단하게 사용할 수 있습니다.
     * 이 앱은 강력한 IT 및 소프트웨어 문화로 알려진 에스토니아에서 개발되었습니다.
     * 사용자들은 Organic Maps의 도보 길찾기 기능을 칭찬하며, 흥미로운 경로를 선택하고 사용자가 방향을 바꾸면 자동으로 재매핑한다고 주장하였습니다.
     * 앱의 오프라인 기능은 다른 지도가 부정확하거나 사용할 수 없는 원격 위치의 사용자들에게 특히 유용하였습니다.
     * Organic Maps는 미니멀리스틱 디자인과 짧은 메뉴 경로로 인기를 얻었지만, 일부 사용자들은 버스 노선의 부재를 단점으로 지적하였습니다.
     * 앱은 포괄적인 트레일 데이터와 트레일을 조합할 수 있는 능력으로 등산객들 사이에서 인기가 있습니다.
     * 사용자들은 OpenStreetMap에서 데이터를 편집하여 Organic Maps의 데이터에 기여할 수 있습니다.
     * 일부 사용자들은 지역 경계를 넘을 때 라우팅 기능에 문제가 발생했다고 보고하였으며, 일부 지도 데이터가 오래되었을 수 있다고 경고하였습니다.
     * 일부 소소한 문제에도 불구하고, Organic Maps에 대한 전반적인 반응은 긍정적이며, 사용자들은 그 디자인, 기능, 그리고 오프라인 기능을 칭찬하였습니다.
"
"https://news.hada.io/topic?id=10721","Notepad++에서 임의 코드 실행이 가능한 취약점이 여러 개 발견됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Notepad++에서 임의 코드 실행이 가능한 취약점이 여러 개 발견됨

     * GitLab의 보안 연구원인 Jaroslav Lobačevski는 Notepad++에서 사용하는 일부 기능과 라이브러리에서 오버플로 취약점을 발견함.
     * Notepad++는 아직 취약점에 대한 패치를 제공하지 않았지만, 공개 정책에 따라 취약점을 먼저 공개함.
     * 취약점은 다음과 같으며, CVE 기준 5.5(보통)에서 7.8(높음) 정도의 심각도를 보임.
          + CVE-2023-40031 : Utf8_16_Read의 힙 버퍼 쓰기 오버플로
          + CVE-2023-40036 : CharDistributionAnalytic의 전역 버퍼 읽기 오버플로
          + CVE-2023-40164 : nsCodingStateMachine의 전역 버퍼 읽기 오버플로
          + CVE-2023-40166 : FileManager의 힙 버퍼 읽기 오버플로
     * 취약점에 대한 개념 증명과 예제 코드가 포함된 상세한 보고서도 같이 공개했음.

     * HN 스레드

   임의 코드 실행이 반드시 가능한 건 아니고, 가능성이 있다는 정도 같습니다.
   악용하기 어려울 것 같다는 의견이 있어 보여요.

   아무튼 업데이트가 없는 게 이상하네요.

   AI 요약
     * amiga386: 버그가 발견되었지만 악용하기는 어려워 보인다고 언급했습니다. 개발자가 이 문제를 파악하고 수정하기를 희망합니다.
     * boxed: 공개 날짜를 기준으로 수정 사항이 실제로 구현되지 않았다고 지적합니다.
     * esrauch: 악성 파일을 여는 것만으로도 익스플로잇을 유발할 수 있기 때문에 이 문제가 생각보다 심각하다고 주장합니다.
     * layer8: 이메일 첨부 파일을 통해 익스플로잇이 전달될 수 있기 때문에 악성 파일을 여는 것만으로도 충분하다고 주장합니다.
     * inferiorhuman: Windows API가 기본적으로 UTF-8이 아닌 UTF-16을 사용한다는 컨텍스트를 제공합니다.
     * Fulgen: 메모장 ++가 자체 구현 대신 Windows API를 사용하여 UTF-16을 UTF-8로 변환할 수 있음을 제안합니다.
     * PrimeMcFly: 이러한 문제를 고려하여 자체 기본 텍스트 편집기를 우선적으로 작성하는 것을 고려합니다.
     * nijave: 메모장 ++가 Visual Studio Code와 같은 가벼운 편집기에 비해 뒤처진 것에 대해 실망감을 표명합니다.
     * baal80spam: 인지된 가벼움에 따라 텍스트 편집기의 순위를 매겨 Notepad2와 VS Code 사이에 Notepad++를 배치합니다.
     * currysausage: Notepad2, Notepad2-mod, Notepad3와 같은 Notepad++의 대체 경량 편집기에 대해 논의합니다.
"
"https://news.hada.io/topic?id=10749","오픈 소스를 사용할 수 있다면 하드웨어를 구축할 수 있습니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   오픈 소스를 사용할 수 있다면 하드웨어를 구축할 수 있습니다

     * 기사는 오픈소스 소프트웨어가 하드웨어 개발에 미칠 수 있는 잠재력에 대해 논의한다.
     * 저자는 물리적 제약과 회로 설계의 복잡성으로 인한 하드웨어 개발의 복잡성을 강조한다.
     * 도전에도 불구하고, 저자는 오픈소스 코드와 마이크로컨트롤러 보드의 확산 덕분에 하드웨어를 만드는 것이 어느 때보다 쉬워졌다고 주장한다.
     * 마이크로컨트롤러는 복잡한 전자 신호를 발생시키고 수신하는 프로그래밍 가능한 구성 요소로, 하드웨어 개발의 기반이다.
     * 오픈소스 Arduino 코드는 네트워킹부터 버튼 처리까지 하드웨어 개발에서 다양한 문제를 해결하는 중요한 도구로 강조된다.
     * 저자는 I2C 두 선 직렬 데이터 표준을 언급하며, 이는 취미용 하드웨어 개발자들이 회로 설계를 단순화하는 데 도움이 된다.
     * 기사는 전자 프로젝트에서의 구성 접근법을 강조하며, 개발자들이 기존 프로젝트를 사용하고 그것들을 함께 배열하는 것이 현대 소프트웨어를 만드는 것과 유사하다.
     * 저자는 ESP32 기반 마이크로컨트롤러, 광 센서, 온도 및 습도 센서, 회전 인코더 보드를 사용하여 히트 펌프 컨트롤러를 만드는 개인적인 경험을 공유한다.
     * 기사는 하드웨어 프로젝트를 위한 맞춤형 케이스를 만드는 3D 프린팅의 잠재력에 대해서도 논의한다.
     * 저자는 오픈소스 자원의 가용성과 취미가들의 지원 커뮤니티와 같은 현재의 유리한 조건을 강조하며, 독자들에게 하드웨어 개발을 시도해 보도록 권장한다.

        Hacker News 의견

     * 오픈 소스를 사용할 수 있다면 하드웨어를 프로토타입 할 수 있지만, 견고성, 주변 환경, 재교정 필요성 등의 요소를 고려해야 한다는 기사 제안.
     * 일부 댓글러들은 하드웨어 프로토타이핑이 쉬워졌지만, 단순히 한 부품을 다른 부품으로 교체하는 것이 아니라 하드웨어의 수명과 환경에 대한 깊은 이해가 필요하다고 주장.
     * JLBPCB와 PCBWay와 같은 회사들이 3D 프린팅 및 CNC 서비스를 제공하므로, 하드웨어 프로토타이핑을 시작하려면 3D 프린터를 소유할 필요가 없다는 다른 사람들의 지적.
     * 오픈 소스 도구와 3D 프린팅을 사용하여 자신의 하드웨어, 예를 들어 우물 수위 센서를 만든 사람들의 이야기.
     * 일부 댓글러들은 3D 프린팅과 관련된 학습 곡선과 기술적 어려움에 대해 불만을 표시하며, 외부 제공 업체에 위탁하는 것이 더 신뢰할 수 있는 옵션이 될 수 있다고 제안.
     * 기사는 소프트웨어 개발자들에게 하드웨어 프로젝트를 고려하도록 권장하지만, 일부 댓글러들은 그들이 설득력 있는 사용 사례를 가지고 있지 않거나 상업 제품을 구매하는 것을 선호한다고 지적.
     * 3D 프린팅과 마이크로컨트롤러에 대한 대안적인 시작점들로, 준비된 케이스와 산업용 PLCs가 있다.
     * 일부 댓글러들은 Prusa 3D 프린터가 오래되고 느리다고 비판하며, Sovol SV06와 Bambu P1P와 같은 대안을 제안.
     * 일부 댓글러들은 기사의 유용성에 대해 회의적으로 보며, 그것의 추상적인 성격과 유행어의 사용을 인용.
     * 일부 댓글러들은 손재주 부족이나 칩 부족으로 인한 부품 조달 어려움으로 하드웨어 프로젝트에 어려움을 겪은 개인적인 경험을 공유.
"
"https://news.hada.io/topic?id=10658","Alexandria - 미니멀한 크로스플랫폼 전자책 리더 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Alexandria - 미니멀한 크로스플랫폼 전자책 리더 오픈소스

     * Tauri + Epub.js + Typescript 로 구축
     * 윈도우/리눅스 지원, 안드로이드/iOS/맥은 지원할 계획
     * EPUB(.epub,.epub3) 및 Kindle(.azw/.mobi) 지원
     * FictionBook(.fb2) 및 만화 파일(.cbr, .cbz, .cbt) 개발중
     * 커스텀 테마 및 편집기 지원
     * 커스텀 폰트 + 폰트 다운로더
     * 하이라이트, 노트, 북마크 가능
     * 1-컬럼, 2-컬럼 및 무한 스크롤링 레이아웃 지원
     * 자간, 줄간, 리더 마진 변경 가능
     * 화면 분할 레이아웃 가능
     * 오프라인 사전 및 크로스 플랫폼 동기화 지원 예정

   구버전 Edge에 달린 epub 리더가 진짜 좋았는데... 크로미움으로 넘어가면서 사라졌었죠.

   그것만 따로 때서 출시해주면 좋겠어요.

   최근 긱뉴스 기사에서 ms edge에 epub기능이 돌아왔다는 소식을 본 것 같기도 한데요…

   아 공감합니다 ㅋㅋ
"
"https://news.hada.io/topic?id=10677","Wavacity - Audacity의 웹용 포팅 버전 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Wavacity - Audacity의 웹용 포팅 버전

     * WASM + emscripten 을 이용하여 웹용으로 포팅
     * wavvy 라는 이름으로 릴리즈 했다가 트레이드 마크 문제로 이름을 변경
     * 빠른 로딩. 로컬에서 실행하는 Audacity와 거의 비슷한 사용성

   Wavvy - 웹기반 오디오 편집기 (Audacity 포팅)
"
"https://news.hada.io/topic?id=10684","Ask HN: 자녀를 위한 스마트폰 정책은 무엇인가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask HN: 자녀를 위한 스마트폰 정책은 무엇인가요?

     * 최근에는 스마트폰이 학습에 해를 끼친다는 연구가 점점 늘어나고 있으며, 그 반대 결과를 보여주는 연구는 단 하나도 없다. 그러나 아이에게 스마트폰을 사주지 않는 용기를 가진 부모는 매우 적다. HN 집단의 아이들은 어느 나이에 소유권이 있는 소프트웨어(개인 감독)와 검열되지 않은 접근(부모의 통제가 있는 혹은 없는 스마트폰)을 시작하는가? 아이들이 소유권이 있는 소프트웨어에 접근하기 전에 오직 FOSS만을 가진 컴퓨터에 접근하는 가족은 있는가?
     * 스마트폰이 학습에 해를 끼친다는 연구 증가
     * 반대 결과를 보여주는 연구 없음
     * 아이에게 스마트폰을 사주지 않는 부모 부족
     * HN 집단 아이들의 소유권 있는 소프트웨어 접근 나이
     * 검열되지 않은 스마트폰 접근 시작 시기
     * FOSS만을 가진 컴퓨터에 먼저 접근하는 가족 존재 여부

        Hacker News 의견

     * 부모들의 아이들에 대한 스마트폰 사용 정책에 대한 논의
     * 일부 부모들은 스마트폰 사용 관리에 가장 좋은 도구로서 개방적인 대화와 협상을 권장
     * 일부 댓글 작성자들은 어린 나이에 기술에 대한 무제한 접근에 대한 개인적인 경험, 긍정적이든 부정적이든,을 공유
     * 일부 부모들은 고등학교까지 스마트폰 사용을 미루고 소셜 미디어 앱을 제한하는 것을 제안
     * 일부 부모들은 아이들이 스마트폰이 필요한 이유를 정당화하게 하며, 종종 그 이유가 부족하다고 판단
     * 일부 댓글 작성자들은 개인적인 경험 또는 HackerNews의 경험을 일반화하는 것에 대해 경계를 당부, 이들이 대표적이지 않을 수 있음을 주장
     * 일부 부모들은 화면 시간을 제한하고 특정 앱을 제한하는 반면, 다른 부모들은 교육 앱에 대한 무제한 접근을 허용
     * 일부 댓글 작성자들은 스마트폰이 학습에 미치는 영향이 종종 제시되는 것보다 더 복잡하다고 주장, 잠재적인 이점과 단점 모두를 가지고 있음
     * 일부 부모들은 유치원이나 그 이후에 기기를 소개하고, 아이가 성장함에 따라 접근성과 자율성을 점차 늘림
     * 일부 부모들은 화이트리스트 프록시와 VPN과 같은 기술적인 해결책을 사용하여 아이들의 인터넷 접근을 관리
     * 일부 댓글 작성자들은 일부 부모들이 시행하는 제한 수준에 놀라움을 표현, 기술에 대한 무제한 접근이 호기심과 학습을 촉진할 수 있다고 주장
     * 일부 댓글 작성자들은 소셜 미디어와 비디오 시간을 제한하는 것이 유익할 수 있지만, 화면 시간을 일반적으로 제한하는 것은 아니라고 제안
"
"https://news.hada.io/topic?id=10637","메타 AI, 비디오 상의 모든 점(픽셀)을 추적하는 모델인 CoTracker를 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             메타 AI, 비디오 상의 모든 점(픽셀)을 추적하는 모델인 CoTracker를 발표

     * 메타 AI가 비디오의 포인트(픽셀)를 추적하기 위한 새로운 모델인 CoTracker를 발표
     * CoTracker는 포인트 간의 상관관계를 고려하여 전체 비디오에서 여러 포인트를 추적하는 것을 목표로 함
     * 아키텍처는 광학 흐름과 추적 문헌에서의 아이디어를 기반으로 하며, 전문화된 어텐션 레이어를 가진 트랜스포머 네트워크를 사용
     * 슬라이딩 윈도우 방식을 사용하여 긴 비디오에 적용할 수 있으며, 다른 포인트 추적 방법과 비교하여 효율적이고 정확성이 높은 것으로 입증
     * 이 모델은 특히 가려짐이 있는 경우에도 더 깨끗하고 선형적인 추적을 생성
     * CoTracker는 정확성 측면에서 TAPIR와 Multi-Flow Tracking과 같은 다른 연구들보다 우수한 성능을 보여줌
     * 소프트웨어 엔지니어들에게 비디오에서 포인트를 추적하기 위한 새로운 강력한 도구를 제공하여 성능과 정확성을 향상시키는 중요한 발전

   뭔가 데모가 예쁘네요. VR에서 필요한거 생각하면 비즈니스가 어느정도 일치하는게 있는 것 같기도 한데...

        Hacker News 의견

     * 메타의 연구부문의 비즈니스 각도는 명확하지 않으며, 핵심 비즈니스와의 관계가 이해되지 않습니다.
     * 페이스북의 추적 픽셀에 대한 경험이 메타의 CoTracker 모델의 성공에 기여할 것으로 보입니다.
     * 메타의 목표는 VR을 믿기 어렵게 만들고, 실시간으로 세계를 이해할 수 있는 AI 시스템을 만드는 데 초점을 맞추고 있는 것으로 보입니다.
     * CoTracker의 논문, GitHub 및 데모 링크가 제공됩니다.
     * 구글은 Apache-2.0 라이선스를 갖는 Tapir라는 자체적인 포인트 추적 버전을 보유하고 있습니다.
     * 제품 회사에서의 연구 과정은 엔지니어링 중심 회사와는 다릅니다.
     * CoTracker와 비디오 코덱의 모션 추정 알고리즘 간의 비교가 의문을 제기합니다.
     * CoTracker와 같은 오픈 소스 AI 모델은 스타트업에 낮은 마진을 가진 고도 경쟁력 있는 시장으로 이어질 수 있습니다.
     * 앤드류 지서먼, 하트리 및 포제라는 영향력 있는 인물들이 언급되었습니다.
     * CoTracker에는 향후 AR 응용 프로그램이 있을 수 있습니다.

   메타의 연구부문의 비즈니스 각도는 명확하지 않으며, 핵심 비즈니스와의 관계가 이해되지 않습니다.

   이게 핵심 댓글이네요. 연구는 좋지만 비즈니스와의 얼라인이 잘 이해가 안되는 부분도 많아요.
   마치 예전의 구글을 보는 듯한 느낌도 드는데..
"
"https://news.hada.io/topic?id=10636","수십만 명이 동남아시아에서 온라인 사기꾼으로 일하도록 인신매매되고 있다는 UN의 보고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            수십만 명이 동남아시아에서 온라인 사기꾼으로 일하도록 인신매매되고 있다는 UN의 보고

     * UN 보고서, 동남아시아에서 수십만 명의 사람들이 온라인 범죄 활동에 참여하도록 강제되고 있다고 밝혀졌다.
     * 온라인 사기 피해자들은 안전 위협, 고문, 강제 노동 등 심각한 침해와 학대를 겪고 있다.
     * 동남아시아에서의 온라인 사기 트래픽의 규모는 비밀스러운 성격과 공식적인 대응의 빈곤으로 인해 추정하기 어렵다.
     * COVID-19 팬데믹과 관련 대응 조치는 불법 활동에 엄청난 영향을 미쳐 온라인 사기 계획의 증가로 이어졌다.
     * 온라인 사기 작전의 대부분 피해자는 남성이지만, 여성과 청소년도 피해자 중에 포함된다.
     * 동남아시아의 일부 국가는 사기 퇴치를 위한 법적 및 정책적 구조를 마련했지만, 국제 기준에는 부족한 경우가 많다.
     * 트래픽 피해자와 인권 침해 피해자들은 종종 범죄자나 이민범죄자로 잘못 분류되어 보호와 재활 및 구제에 접근하지 못하는 경우가 많다.
     * 보고서는 피해자들을 보호하고 정의를 확보하기 위해 인권을 강화하고 통치를 개선하며 부패에 대처하는 종합적인 접근을 요구한다.

        Hacker News 의견

     * 다큐멘터리는 동남아시아에서 노동자들의 끔찍한 현실을 드러냅니다.
     * 희생자들은 창업 기회를 약속받지만 사기와 매춘에 빠지게 됩니다.
     * 현지 인신매매 조직은 교묘하게 연결되어 있으며 무장하고 있습니다.
     * 사기꾼들은 온라인 친구 관계를 구축하여 사기를 벌이려 합니다.
     * 사기꾼들은 교회를 겨냥하고 상세한 정보를 이용하여 피싱 공격을 수행합니다.
     * 미국 기업들은 이러한 사기를 용이하게 하고 있습니다.
     * 중국의 대성공 영화 ""더 이상 베팅하지 마""는 인신매매의 진실에 기반한 이야기입니다.
     * 인공지능의 발전은 더 정교한 사기를 야기할 수 있습니다.
     * 노예제도는 현대 세계에서 여전히 유례가 있는 문제로, 오늘날에는 이전보다 더 많은 노예가 존재합니다.
"
"https://news.hada.io/topic?id=10686","휴대폰 없이 캠퍼스에서 세탁하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          휴대폰 없이 캠퍼스에서 세탁하는 방법

     * 작가의 스마트폰 없이 캠퍼스에서 세탁하는 경험에 대한 기사
     * 작가의 기숙사인 'Sidney Pacific'는 'Washlava'라는 앱을 통해 작동하는 새로운 세탁기를 설치했다.
     * 이 앱은 사용자가 세탁비를 지불하고, 기계 상태를 모니터링하며, 동전이나 ID 카드를 가지고 다닐 필요를 없애준다.
     * 전화 사용을 제한하기로 결정한 작가는 앱 요구 사항 때문에 세탁기를 사용하는데 어려움을 겪었다.
     * 작가는 Washlava가 앱을 사용할 수 없는 사용자를 위해 iPod Touch를 제공한다는 것을 발견했다.
     * 작가는 배터리가 방전된 상태, 비밀번호로 보호된 화면, Washlava 앱에 로그인하는 어려움 등 iPod Touch를 사용하는데 여러 어려움을 겪었다.
     * 이러한 도전에도 불구하고 작가는 스마트폰 없이 성공적으로 세탁을 할 수 있었다.
     * 작가는 현대 세계에서 기술에 의존하는 세탁과 같은 단순한 작업의 복잡성에 대해 반성한다.
     * 작가는 기본적인 작업에 대한 기술 의존성이 증가하는 것이 인류가 추구하고자 하는 길인지 의문을 제기한다.

        Hacker News 의견

     * 기사는 세탁기와 같은 하드웨어가 모바일 앱에 기능적으로 의존하게 되는 문제점을 논의한다.
     * 가전 제품 회사들이 제품 전문 지식이 부족한 계약자에게 앱 개발을 외주하는 경우가 많아, 설계 및 유지 관리가 미흡한 앱이 생기는 문제가 있다.
     * 시스템 업데이트 중이거나 제품 라인이 중단될 때 사용자들은 앱이 작동을 멈추는 등의 어려움을 겪을 수 있으며, 이로 인해 새로운 가전제품을 구매해야 할 수도 있다.
     * 기사는 Lyft가 웹사이트에서의 탑승 예약을 중단하는 등, 서비스가 웹 기반에서 앱 기반 플랫폼으로 전환되는 불편함을 강조한다.
     * 저자는 ""Find My iPhone""을 서비스를 위해 끄는 등, 자주 사용되지 않지만 필수적인 사용 사례를 처리하지 못하는 현대 기술이 직면한 도전과제에 대한 개인적 경험을 공유한다.
     * 기사는 모바일 기기가 없는 경우 기본적인 편의를 누릴 수 없게 되는 사례, 예를 들어 앱을 시작하거나 전동 스쿠터를 대여하기 위해 필요한 세탁기를 사용하는 것을 언급한다.
     * 기사는 모든 것을 앱으로 만드는 추세를 비판하며, 사용자 동의 없이도 동일한 목적을 제공할 수 있는 웹페이지를 제안한다.
     * 저자는 스마트폰이 발명되기 전에 존재했던 활동에 스마트폰을 통합하는 것이 종종 과정을 복잡하게 만드는 것이라고 주장하며, 팟캐스트를 들으며 조깅하는 예를 들어 설명한다.
"
"https://news.hada.io/topic?id=10711","Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2023년 9월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2023년 9월)

   현재 근무중인 스타트업에서 같이 일할 멤버를 찾고 계시다면
   회사 소개 / JD / 위치 / 리모트 가능 여부 / 연락방법(이메일,웹사이트) 등을 적어주세요.
   ""멤버가 직접 1개의 댓글로 홍보를 작성""하시면 됩니다. (서치펌 등은 불가)

   이 글은 매월 첫번째 월요일에 등록됩니다.
   해당 회사의 공고에 관심있으시면 기재된 메일등으로 연락하시기 바랍니다.

   작성 예)

   하다 | 프론트엔드 개발자, 디자이너 | 서울 역삼 | Remote 가능 | https://hada.io | jobs@hada.io
   하다는 긱뉴스를 개발 및 운영하는 스타트업 입니다. 저희는 이러 저러 해서 엄청 좋은 회사입니다~~
   [1] 프론트엔드 개발자 JD : 내용 또는 URL
   [2] 디자이너 JD : 내용 또는 URL

   [ 모아이스(moais) - 스포츠 에듀테크 스타트업]

   [회사 소개]모아이스는 인공지능 기술과 데이터를 통해 스포츠 교육 및 연습의 방식을 혁신하는 서비스를 개발하는 회사입니다.

   기존에는 스포츠를 배우기 위해서는 2가지 방법이 있었습니다. 오프라인 레슨 혹은 유튜브 콘텐츠 등을 통한 독학이 그것들입니다.

   하지만 오프라인 레슨에서 자신과 맞는 코치를 만나기란 굉장히 어렵고, 위치/장소를 고려하면 거의 불가능한 경우도 많습니다. 독학은 나에게 맞는 문제점 진단과 솔루션을 찾는 것이 매우 어렵습니다.모아이스는 이를 개선하기 위해 인공지능 기술과 빅데이터 기술을 이용하여 기존 방식들의 장점들을 극대화하고 단점들을 최소화하는 새롭고 혁신적인 방법으로 스포츠를 배우거나, 즐거운 연습을 할 수 있게 하는 서비스를 개발하고 있습니다.현재는 첫 번째 타켓 스포츠인 골프에 집중하고 있고, 차후 다른 스포츠 분야로 확장할 것입니다.

   [근무형태] 위치: 서울 동작구(이수) / 자율 출퇴근 근무 / 리모트 불가능

   [JD]
     * AI Research Engineer[2D Pose Estimation]: https://notion.so/moais/…
     * 백엔드 개발자: https://www.notion.so/moais/60b0442cf5d344f69310fb7877cd73d7?pvs=4
     * C# .NET WPF 윈도우 어플리케이션 개발자: https://notion.so/moais/C-NET-WPF-95d4272fe0e64a45920d1497a68eb9a8/…

   [ 레몬베이스는 회사와 구성원의 건강한 성장을 기술로 실현하는 SaaS 스타트업입니다.]

   사람은 깨어 있는 시간의 70%를 일터에서 보냅니다. 그 시간이 돈을 벌기 위한 수동적인 시간이 아니라, '나와 조직의 성장과 성공을 위해 주도적으로 활용하는 시간'이 될 수 있도록 레몬베이스는 성장하고 성과를 내는 방식을 기술을 통해 혁신하고 있습니다.

   레몬베이스 팀은 이 문제를 지속적인 성과관리(Continuous Performance Management)로 해결할 수 있다고 믿습니다. 레몬베이스를 통해 일 년에 한두 번이 아니라 일 년 내내 목표를 스스로 설정하고, 그 과정을 실시간으로 공유하고, 또 1:1 미팅을 통해 코칭을 주고받으며, 더 자주 동료들로부터 칭찬과 피드백을 받을 수 있습니다.

   2023년, 70억원 규모의 시리즈A 투자를 유치해 누적 투자액이 140억원으로 늘어난 레몬베이스는 빠르게 성장하는 테크 기업부터 다양한 산업의 엔터프라이즈 기업까지, 시대를 선도하는 수많은 기업과 함께 성과관리를 혁신하고 있습니다.

   ""회사와 구성원의 건강한 성장""이라는 미션을 가진 레몬베이스와 함께 성장할 미래의 크루를 찾고 있습니다. 레몬베이스 팀의 여정에 동참해 주실 분들을 기다립니다 :)

   *팀 소개 / 채용페이지 : https://www.lemonbase.team/
   *엔지니어링 그룹 페이지 : https://www.lemonbase.team/group_engineering

   ✔️ Frontend Engineer : https://www.lemonbase.team/recruit/fe
   ✔️ Frontend Engineer (산업기능요원) : https://www.lemonbase.team/recruit/fe_sip
   ✔️ Data Engineer : https://www.lemonbase.team/recruit/de

   *서울 성동구, 자율적인 리모트 워킹 가능
"
"https://news.hada.io/topic?id=10642","DeepSpeed Ulysses: 긴 시퀀스 트랜스포머 모델 훈련을 위한 시스템 최적화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            DeepSpeed Ulysses: 긴 시퀀스 트랜스포머 모델 훈련을 위한 시스템 최적화

     * 기존 시스템보다 4배 더 긴 시퀀스 길이를 제공, 백만개 이상의 토큰이 포함된 시퀀스로 훈련 가능
     * 통신이 10배 이상 감소하여 처리량이 최대 2.5배 향상. 처리량이 175 TFlops/GPU 이상으로 유지
     * 완전히 general 하고 구현에 agnostic한 Attention (FlashAttention 2 같은 구현과도 동작)
     * 대규모 모델 훈련 지원: ZeRO-3 과 함께 작동하여 대규모 시퀀스/모델 크기를 지원
     * 사용하기 쉽고 이식성이 뛰어나 기존 프레임워크 변경 최소화
"
"https://news.hada.io/topic?id=10659","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   남산 산책하려고요~

   발더스 게이트1 둘락의 탑 도전 예정입니다. 예전에도 하다가 포기했던것 같은데 다시 한번 도전하네요.

   푹 낮잠자고 싶고, 연준과 관련된 경제 책 독서할 것 같습니다.

   성수동 튜링의 사과라는 코워킹스페이스에서 지금까지 밀린 개인프로젝트(오픈소스) 쪽 작업을 진행하려고 합니다.

   혹여나 마주치는 분 계신다면 Vim 스티커 나눠드릴 수도 있어요

   여름 휴가 이후로 운동을 못하고 있어서, 주말엔 운동을 좀 해볼까 합니다.
   확실히 체력이 떨어지니 노는 것도 힘들더라고요.

   아는 사람 컴퓨터 맞춰주러 떠납니다.
   원래 업체에 맡기려고 했는데 어쩌다 보니...

   A/S는 안된다고 해야겠어요.

   님아 그강을 건너지 마오..

   진짜 그냥 업체 연결만 해주려고 했는데......

   ㅠ_ㅠ

   가시밭길..

   겨울작물 수확을 위해 텃밭작업 마무리하고 아머드 코어 달릴예정입니다.

   저번 주말에 약 3시간 해딩해서 챕터1 보스 깼네요.. ㅠㅠ

   젤다 이후로 불감증이 들어서 게임을 못하고 있어요. 디아4는 하다 졸아서 ㅠ
   아머드 코어는 괜찮을라나 모르겠네요.

   프롬게임이 어려워서 힘들어 하실수도 있을거 같네요.. 전 어려운 게임을 좋아해서 도전하고 클리어했을때 성취감때문에 빠져서 하네요. 메카닉 뽕맛도 있구요..ㅋ

   혹시 안해보셨다면 발더스게이트3 추천드린다능
"
"https://news.hada.io/topic?id=10723","Curl 마스터하기: 인터랙티브 텍스트 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Curl 마스터하기: 인터랙티브 텍스트 가이드

     * Curl 개발자 Daniel Stenberg 의 3.5시간 짜리 ""Mastering the curl command line"" 워크샵 영상을 보고 텍스트로 짧게 정리한 가이드
     * 웹페이지에서 설명과 함께 다양한 Curl 옵션들을 즉시 실행해보기 가능
          + codapi(코드 플레이그라운드) 위젯을 이용
     * URL 관련 옵션, Download/Upload, Retry, HTTP GET/HEAD/POST, Multiform, Cookie,..
"
"https://news.hada.io/topic?id=10682","인스타그램, 이제 스토리를 광고로 홍보 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        인스타그램, 이제 스토리를 광고로 홍보 가능

     * 기존에는 스토리는 광고로 사용이 불가능 했음
     * 이제 Marketing API를 통해서 인스타그램 스토리에 등록된 이미지/영상을 광고로 홍보 가능해짐
          + 사진 한장, 비디오, 캐러셀(carousel), reel(태그된 사진 또는 비디오도 지원) 및 현재 액티브한 인스타그램 스토리
"
"https://news.hada.io/topic?id=10696","기후 변화 추적기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               기후 변화 추적기

     * 'Climate Change Tracker'에 대한 기사, 기후 변화, 지구 온난화, 그리고 온실가스 배출을 모니터링하는 도구
     * 기후 변화에 대한 최신 데이터와 통찰을 제공, 환경에 관심 있는 이들에게 귀중한 자원
     * 연간 IPCC AR6 방법에 기반한 정책 입안자를 위한 대시보드와 지표를 포함한 트래커
     * 지구 온난화 이해에 기여하는 지구의 상승하는 온도의 중요 지표 추적
     * 이산화탄소 (CO2), 메탄 (CH4), 그리고 이산화질소 (N2O)를 포함한 다양한 온실가스의 인간 배출과 흡수 모니터링 트래커
     * 정보의 넓은 확산을 위한 차트, 기사, 그리고 임베딩 옵션과 같은 추가 자원 제공
     * 사용자들이 정보를 공유하고 그들의 커뮤니티에서 영향을 미치도록 플랫폼이 장려
     * 지속적으로 업데이트되는 트래커, 최신 버전 (0.9.5)은 2023년 8월 30일에 출시
     * ClimateChangeTracker.org에 의해 개발되고 유지되는 도구, 그 신뢰성과 신뢰도를 보장

        Hacker News 의견

     * 일부 사용자들이 전기화 증가를 위한 탄소 배출량 감소의 전통적 지혜에 의문을 제기하며, 리튬 채굴의 환경적 영향과 전기 자동차의 무게에 대한 우려를 제기합니다.
     * CO2를 프로판과 같은 다른 물질로 변환하여 탄소 주기를 닫는 데 더 집중해야 한다는 제안이 있습니다.
     * 사용자가 연평균 관측 온도 이상치 데이터에 불일치를 지적하며, 나머지 데이터의 정확성에 의문을 제기합니다.
     * 탄소 오염의 해양에 대한 영향이 강조되며, 사용자는 증가된 산성도로 인해 단단한 몸체를 가진 생물들이 성장하는 것보다 빠르게 용해되고 있다고 지적합니다.
     * 기후 그룹에서 일하는 사용자가 그래프에 오차 막대가 특히 부문별 분석에 도움이 될 것이라고 제안합니다.
     * 해양 온도 시각화에 대한 링크가 공유되며, 2023년 시간 플롯에 특별한 것이 있다는 메모가 첨부됩니다.
     * 항공 여행, 특히 개인 비행기가 탄소 배출의 주요 원인으로 지목되며, 사용자는 불필요한 여행을 꺼리게 하는 것을 제안합니다.
     * 사용자가 평균 글로벌 온도 측정의 정확성에 의문을 제기하며, 미국 시골 지역에서의 예측과 실제 온도 사이의 차이를 인용합니다.
     * 사용자가 사회경제적 가능성과 파이프라인에 있는 국가들의 탄소 집중적 투자를 보여주는 사이트를 요청하며, 2030년, 2040년, 2050년에 무엇을 기대해야 하는지에 대한 현실적인 추정치를 찾고 있습니다.
     * 사용자가 1995년에 관련된 메탄에 대한 특정 이벤트에 대해 묻습니다.
     * ""기후 변화의 실제 원인""을 밝혀주는 사이트로의 링크가 공유됩니다.
"
"https://news.hada.io/topic?id=10635","프로프라이어리 모듈에 대한 삶을 (더욱) 어렵게 만드는 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    프로프라이어리 모듈에 대한 삶을 (더욱) 어렵게 만드는 것

     * 커널 커뮤니티, 프로프라이어터리 커널 모듈에 대한 제한 강화 중
     * 최근 패치로 symbol_get()의 동작이 변경되어 GPL 전용 심볼에 대한 접근이 제한됨
     * 이 변경으로 프로프라이어터리 모듈이 커널 내부에 접근하기 어려워짐
     * 프로프라이어터리 모듈 개발자들은 제한을 우회하기 위한 다른 방법을 찾을 수 있음
     * 커널 커뮤니티와 프로프라이어터리 모듈 간의 갈등은 계속되고 있음
     * CPU에서의 오픈 소스 코드는 보안과 감사성에 이점을 제공함
     * 오픈 소스 커널 드라이버는 Linux가 동작하는 어떤 CPU를 지원하기 위해 다시 컴파일될 수 있음
     * NVIDIA의 새로운 펌웨어는 Vulkan 지원을 포함한 완전히 오픈된 그래픽 스택을 제공함
     * 새로운 오픈 소스 드라이버는 이전의 프로프라이어터리 드라이버보다 큰 개선이 이루어짐
     * GPL에 위배되는 저작권 침해는 우려사항임
     * 다른 시각과 신념은 오해와 타인의 견해 수용 거부로 이어질 수 있음
     * ZFS 설치와 개발에 대한 영향에 대한 우려
     * 문제의 복잡성과 호환성에 대한 법적 명확화의 필요성
     * 이 기사는 ZFS의 복잡한 문제와 프로프라이어터리 모듈에 대한 잠재적 침해에 대해 논의함
     * Oracle이 ZFS 사용에 대해 Canonical에 법적 조치를 취하지 않은 이유에 대한 추측이 있음
     * OpenZFS를 Linux와 통합하기 위한 도전과 잠재적인 해결책이 강조됨
     * ZFS는 FreeBSD나 Illinois에서 Linux를 사용할 수 없는 경우에 사용할 수 있는 다중 플랫폼 파일 시스템임
     * Christoph Hellwig은 프로프라이어터리 모듈을 더 어렵게 만들기 위한 패치를 제출하였으며, 이는 메인라인 Linux에 통합되었음
     * DRM이 좋은 것인지 나쁜 것인지에 대한 논쟁이 있으며, DRM으로 보호된 자원과의 상호 운용성은 불법임
     * GPL은 명확하게 정의되지 않았으며, 파생 작품과 저작권 가능 대상에 대한 가정이 있음
     * 직접 이진 파일을 생성하고 실행하는 경우, 자체 커널 빌드는 GPL을 위반하지 않을 수 있음.

        Hacker News 의견

     * Linux 커널은 오픈 소스 소프트웨어에 대한 DMCA의 반회피법에 보호를 요구하고 있습니다.
     * Nvidia에 대한 저작권 보호 회피에 대한 법적 주장이 있습니다.
     * Nvidia의 소유권 드라이버는 불필요하다고 여겨지며 오픈 소스 커뮤니티와의 관계를 방해합니다.
     * Nvidia는 아직은 어떤 속임수를 갖고 있지만 지금은 숨기고 있습니다.
     * Linux은 자유 소프트웨어의 원칙에 반하는 커널 수준의 DRM을 구현하고 있습니다.
     * Nvidia가 모듈을 GPL로 만들지 않는다면 미래 버전의 Linux에서 Nvidia 카드 사용에 제한이 있을 수 있습니다.
     * 프로프라이어터리 드라이버가 GPL 전용 코드와 상호 작용하는 것에 대한 제한에 대한 우회 방법이 있습니다.
     * 프로프라이어터리 드라이버에 대한 제한으로 Linux에 적합한 드라이버를 얻는 데 더 많은 비용이 듭니다.
     * 이 상황의 결과는 Nvidia 드라이버의 Linux에서의 가용성에 영향을 미치며, 게임 및 AI에 영향을 줄 수 있습니다.
     * 커널 수준의 DRM 문제는 커널 수준의 ""비트의 색깔은 무엇인가"" 개념과 비교됩니다.
     * Nvidia는 일부 드라이버를 오픈 소스로 만들고 재배포 가능한 펌웨어 블롭을 제공하지만, 프로프라이어터리 드라이버의 중요성은 시간이 지남에 따라 감소할 수 있습니다.
"
"https://news.hada.io/topic?id=10725","Graphweaver - 여러 데이터소스를 하나의 GraphQL API로 묶기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Graphweaver - 여러 데이터소스를 하나의 GraphQL API로 묶기

     * Postgres, MySQL, SQLite, REST 등 다양한 데이터 소스에 연결
     * 자동 쿼리와 Mutation으로 GraphQL API를 손쉽게 구성하여 운영
     * 기존 데이터베이스를 CLI로 손쉽게 임포트
     * Typescript + Node.js
"
"https://news.hada.io/topic?id=10731","HiveQL을 Spark SQL로 이전 시 발생하는 문제 해결하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  HiveQL을 Spark SQL로 이전 시 발생하는 문제 해결하기

     * 라인 데이터 플랫폼 실, Hive 사용을 점진적으로 중단하고 Spark 환경으로 이전한다는 방향을 설정
     * 이전 방법 - 엔진 교체 후 문제가 있는 경우 쿼리 변경
     * 쿼리 변경 사례:
          + 임시 테이블을 사용한 경우(CREATE TEMPORARY TABLE)
          + ANSI 정책을 위반하는 묵시적 형 변환을 사용한 경우(Store Assignment Policy)
          + 사용하던 UDF에 문제가 있는 경우
          + 새로운 UDF를 도입한 경우
          + 맵 타입에 집합 연산을 사용한 경우
          + 여러 개의 파티션을 삭제해야 하는 경우
     * 이전 후 특정 데이터 누락되어 트러블 슈팅 진행
     * 다섯 가지 문제 현상 및 대응 방법:
          + 쿼리 실행 후 일부 결과 누락 현상
          + 파티션 디렉터리 밑에 서브 디렉터리가 존재할 때 데이터를 읽을 수 없는 현상
          + 잡이 실행될 때 파티션 디렉터리를 삭제해서 해당 파티션을 이용하는 쿼리가 실패하는 현상
          + 한 파티션에서 데이터를 읽어 같은 테이블의 다른 파티션에 쓸 때 AnaylsisException(""Cannot overwrite a path that is also being read from"") 발생
          + 결과가 중복돼 두 배로 적재되는 현상
     * 오픈챗 외에도 현재 담당하고 있는 여러 도메인의 수백 개에 달하는 모든 쿼리를 연내 전부 Spark로 이전할 계획
"
"https://news.hada.io/topic?id=10657","소셜미디어 감소: 사용자들은 메시징 앱과 그룹 채팅으로 이동","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   소셜미디어 감소: 사용자들은 메시징 앱과 그룹 채팅으로 이동

     * 인스타그램에서 선별된 전문 콘텐츠에 대한 사용자의 불만이 증가하고 있습니다.
     * 이로 인해 일반 사용자의 플랫폼 게시물이 감소하고, 개인 게시물 및 폐쇄 그룹으로의 이동이 이루어지고 있습니다.
     * 친한 친구 및 그룹 채팅과 같은 기능은 공유를 위한 안전하고 압박이 적은 공간을 제공합니다.
     * 우리가 알던 소셜 미디어는 죽었으며, 사용자들은 콘텐츠 소비에 더 많은 관심을 기울이고 있습니다.
     * 인스타그램은 신중하게 선택되고 편집된 사진이 있는 염원의 엔터테인먼트 앱이 되었습니다.
     * 새로운 앱들은 소셜 미디어 초기의 매력을 잡으려고 노력했지만, 아무도 성공하지 못했습니다.
     * 사용자들은 더 타이트한 연결과 커뮤니티로 퇴각하며, 직접 메시지와 폐쇄된 공간을 선호합니다.
     * Discord와 Geneva와 같은 앱을 통해 관심이 비슷한 사람들과 연결할 수 있는 독특한 커뮤니티가 인기를 끌고 있습니다.
     * 인스타그램은 유료 구독 서비스를 통해 독접 그룹 채팅 기능을 도입하여 이러한 트렌드를 활용하려고 합니다.
     * 폐쇄된 공간으로의 이동은 인플루언서와 브랜드에게 도전을 제시하며, 이러한 커뮤니티에 진입하기가 더 어려워집니다.
     * 사람들은 온라인 커뮤니티를 더욱 선택적으로 다루며, 옛날 방식의 상호작용으로 되돌아가고 있습니다.
     * 소셜 미디어 행동의 변화는 더 건강한 디지털 경험을 만들어낼 수 있지만, 또한 사람들을 비슷한 생각을 가진 반복적인 공간으로 더욱 분열시킬 위험도 있습니다.
     * 인스타그램 시대의 소셜 미디어는 끝나고, ""진정한"" 온라인 공유가 관객 없이 부상하고 있습니다.

        Hacker News 의견

     * 소셜 미디어 플랫폼에서 사용자들이 메시징 앱과 그룹 채팅으로 이동하고 있습니다.
     * 페이스북의 알고리즘은 채우기 콘텐츠와 광고를 우선시하여 사용자 참여율이 감소하고 있습니다.
     * 온라인 커뮤니티는 온라인 펍과 같은 느낌으로, 소속감과 좋은 행동을 가져야 합니다.
     * 인터넷은 사용자가 콘텐츠를 찾아가는 모델에서 콘텐츠가 사용자에게 오는 모델로 변화하고 있습니다.
     * 광고주와 전문가들이 소셜 미디어 플랫폼에서 일반 사용자들을 자주 앞섭니다.
     * 상호작용의 질이 팔로워의 수보다 중요합니다.
     * 알고리즘 기반의 소셜 미디어 플랫폼은 공연적인 행동을 벗어나기 어렵게 만듭니다.
     * 부모님과 선생님이 소셜 미디어에 참여하면서 표현의 자유가 줄어들었습니다.
     * 소셜 미디어에서의 ""콘텐츠""는 종종 이해나 탐구 없이 채우기로 여겨집니다.
     * 젊은 사람들은 디스코드와 그룹 텍스트와 같은 폐쇄된 커뮤니티를 전통적인 소셜 미디어보다 선호합니다.
     * 작은 안전한 커뮤니티를 가진 페디버스는 참여율과 다양한 인격을 높입니다.
"
"https://news.hada.io/topic?id=10747","Show GN: dalgona - GIF meme을 찾아주는 Desktop App (Tauri)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Show GN: dalgona - GIF meme을 찾아주는 Desktop App (Tauri)

   Tenor, Giphy API를 사용하여 만든 간단한 Desktop App 입니다.
   키워드, API key를 입력하면 GIF 이미지와 링크를 제공합니다.

   만든 이유
   회사 메신저에서 제공하는 GIF는 매일 똑같은 GIF만 나와서 지루했습니다.
   그래서 최대한 많은 GIF를 제공하는 아주 간단한 앱을 만들어보고 싶었습니다!
   별개로 Tauri도 써보고 싶었습니다 :)

   awesome-tauri에도 올려보았습니다 :)
   https://github.com/tauri-apps/awesome-tauri#productivity
     * 인증서 등록을 하지 않았습니다.
     * Tenor, Giphy 키를 발급 받아야 사용 가능합니다.
     * Windows, MacOS 에서 사용 가능합니다.

Get Tenor API key : https://developers.google.com/tenor/guides/quickstart?hl=ko#setup
get Giphy API key : https://developers.giphy.com/
"
"https://news.hada.io/topic?id=10649","터무니없는 성공","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                터무니없는 성공

     * marginalia 검색 엔진의 RAM 요구 사항을 줄이고 업그레이드 중 시스템 다운타임을 제거하며 인덱싱된 문서 및 키워드의 제한을 증가시킨 중요한 개선 사항
     * 최신 릴리스로 인한 확장 문제로 인해 검색 엔진이 일주일 동안 중단되었음
     * URL 데이터베이스에 변경 사항을 가하여 인덱스 전환 중 시스템 다운타임에 대응한 작가의 조치
     * 데이터를 단순화하고 RAM 사용량을 줄이기 위해 작가가 URL 데이터베이스의 두 테이블을 하나의 테이블로 병합함
     * 작가는 역 인덱스 구축 과정에도 변경 사항을 가하여 RAM 사용량을 줄이고 성능을 개선함
     * 이러한 변경 사항으로 RAM 요구 사항이 크게 감소되고 운영 효율성이 향상되었음
     * 작가는 이러한 변경 사항의 성공에 놀라며 특정 경우에는 사전 설계의 필요성을 인정

   Marginalia - 독립 운영되는 DIY 검색엔진

        Hacker News 의견

     * Marginalia 프로젝트의 성공은 세계의 다른 방향으로 나아가고 있다는 주제로 논의됩니다.
     * 프로젝트의 성공은 긍정적이고 영감을 주는 이야기로 여겨집니다.
     * 창조자는 의도적으로 프로젝트의 하드웨어와 RAM을 제한하고 있으며, 이는 효율성에 기여한다고 여겨집니다.
     * 기사는 자기 제한이 장기적인 결과에 도움이 될 수 있다고 제안합니다.
     * 최적화는 버그 수정과 비교되며, 많은 사람들이 생각하는 것보다 쉽다고 여겨집니다.
     * 성능 최적화의 중요성이 강조되며, 중요한 성능 분석이 없는 소프트웨어는 많은 재현 가능한 버그를 가질 수 있다고 합니다.
     * 댓글 작성자는 Marginalia에 대한 업데이트에 감사를 표하며, 더 많은 게시물을 기대합니다.
     * 댓글 작성자는 자신의 검색 엔진 취미 프로젝트에 대해 언급하고, Marginalia의 검색에서 시간 필터에 대해 묻습니다.
     * SSD가 단일 바이트를 업데이트할 때 전체 페이지를 지우고 다시 쓸 필요가 있는지에 대한 논의가 있습니다.
     * 댓글 작성자는 자신의 프로젝트 Mojeek에서 비슷한 경험을 언급하며, 제한과 의사 결정 과정에 관련성을 느낍니다.
     * Marginalia에서 키-값 저장소 대신 SQLite를 선택한 이유에 대해 의문을 제기합니다.
     * 댓글 작성자는 제한 내에서 작업하는 것으로부터 창의성이 나올 수 있다는 점을 감사하게 여깁니다.
"
"https://news.hada.io/topic?id=10632","윈도우 11 시스템 구성 요소는 유럽에서 링크를 열 때 기본 브라우저를 사용합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             윈도우 11 시스템 구성 요소는 유럽에서 링크를 열 때 기본 브라우저를 사용합니다.

     * 윈도우 11 시스템 구성 요소는 유럽에서 링크를 열기 위해 기본 브라우저를 사용합니다.
     * 이는 윈도우 11 시스템 구성 요소 내에서 링크를 클릭할 때 인터넷 익스플로러 대신 기본 브라우저에서 열린다는 것을 의미합니다.
     * 이 변경은 사용자 경험을 향상시키는 중요한 변화입니다. 웹 브라우징 활동에선 선호하는 브라우저를 사용할 수 있게 됩니다.
     * 이는 또한 인터넷 익스플로러로부터 이동하는 추세와 일치하며, 이는 기능이 제한되고 보안 취약점이 있는 구식 브라우저입니다.
     * 이 업데이트는 효율성과 맞춤화를 중요시하는 기술에 능통한 개인들에게 긍정적인 발전입니다.
     * 또한, 이는 마이크로소프트가 사용자의 변화하는 요구와 선호도에 적응하기 위한 지속적인 노력을 반영하여 기쁘게 여겨집니다.
     * 전반적으로, 윈도우 11 시스템 구성 요소가 유럽에서 링크를 열기 위해 기본 브라우저를 사용하는 이 변경은 더욱 원활하고 개인화된 브라우징 경험을 위한 중요한 한 걸음입니다.

        Hacker News 의견

     * 유럽 경제 지역(EEA)의 사용자들은 EEA에서 다른 브라우저를 활성화한 상태에서도 Windows 시스템 구성 요소가 링크를 여는 데 기본 브라우저만 사용하는 것에 당혹스럽다.
     * 일부 사용자들은 Microsoft가 의도적으로 사용자의 선호도를 무시하고 기본 브라우저를 전 세계적으로 사용하지 않음으로써 사용자들을 학대하고 있다고 느낀다.
     * Microsoft의 브라우저인 Edge가 Chrome을 다운로드할 수 없게 하고 Edge가 그만큼 좋다고 설득하려는 점에 대한 불만이 있다.
     * 비평가들은 Microsoft가 EEA뿐만 아니라 어디서든 사용자의 선택을 존중해야 하며, 사용자에게 Edge를 강요하는 것은 도덕적으로 문제가 있다고 주장한다.
     * 일부 사용자들은 Microsoft가 법률에 압박을 받을 때만 사용자를 존중하고, Microsoft가 그들의 비즈니스를 받을 만하지 않다고 믿는다.
     * 이러한 관행으로부터 소비자를 보호하기 위해 미국 정부가 노력하지 않는 것에 대한 당혹스러움이 있다.
     * Microsoft의 동기에 대한 추측이 제기되었는데, 광고 사업, Cortana 통합, 웹 표준에 영향을 미치는 등이 그 중에 포함된다.
     * EU와 비-EU 간 브라우저 시장 점유율이 다르게 나타날 경우 미국에서 Microsoft를 고소하는 제안이 나왔다.
     * Microsoft가 기대한 대로 기본 브라우저를 사용하지 않는 것을 사용자들이 짜증나고 불합리하게 여기며, 일부 사용자들은 Windows의 중요한 부분을 오픈 소스로 공개하여 사용자의 제어력을 높일 것을 제안한다.
     * 한 사용자는 유머러스하게도 Windows 11이 자신이 EU에 있는 것으로 인식하게 하는 방법을 묻는다.
"
"https://news.hada.io/topic?id=10718","지난해 Google, 수백만 개의 '해적' URL을 선제적으로 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 지난해 Google, 수백만 개의 '해적' URL을 선제적으로 차단

     * Google, 미국 특허청에 제출한 최근의 편지에서 온라인 해적행위에 대한 적극적인 대응을 강조
     * Google, 선제적인 삭제 전략의 일환으로 검색 엔진에 등장하기 전 수백만 개의 URL 차단
     * 이 전략은 아직 발생하지 않은 스트리밍 해적행위에 대한 광고도 다룸
     * 현재 DMCA 법률에 따라, 미국 기반 인터넷 서비스는 저작권 소유자의 불만이 제기되면 침해 링크를 제거해야 하며, 이로 인해 서비스는 직접적인 책임에서 면제됨
     * Google은 DMCA 시스템이 잘 작동하고 있으며, 다양한 서비스에 추가적인 반해적행위 조치를 구현하였다고 믿음
     * Google은 합법적인 콘텐츠의 가용성이 해적행위와의 싸움에서 핵심이며, 충족되지 않은 소비자 수요가 해적행위를 촉진한다고 주장
     * Google은 YouTube Music 및 YouTube TV와 같은 합법적인 대안을 적극 홍보하고 있으며, 검색 엔진을 조정하여 사람들이 해적행위에서 벗어나도록 유도
     * Google은 DMCA 삭제 통지를 처리하고, 검색 엔진이 콘텐츠를 색인하기 전에 권리 소유자가 콘텐츠를 신고할 수 있게 함. 이는 DMCA에서 요구하지 않는 기능이지만 권리 소유자들에게 널리 사용됨
     * 2022년에는 웹 양식을 통해 제출된 삭제 요청의 40% 이상이 아직 색인되지 않은 콘텐츠에 대한 것이었음
     * Google은 아직 발생하지 않은 해적행위에 대한 삭제 통지도 받아들이며, 저작권 소유자가 라이브 이벤트의 불법 스트림을 사전에 광고하는 웹사이트를 내리도록 허용
     * 신고된 저작권 URL은 스코어카드에 추가되며, 자주 대상이 되는 사이트는 검색 결과에서 적극적으로 하향 조정됨
     * Google은 하향 조정된 사이트가 검색에서 클릭을 평균 89% 잃는다고 주장
     * Google은 끊임없이 진화하는 해적행위 도전에 대응하기 위해 새로운 도구와 프로세스에 투자하는데 헌신
"
"https://news.hada.io/topic?id=10740","Puck - React를 위한 오픈소스 Drag & Drop 편집기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Puck - React를 위한 오픈소스 Drag & Drop 편집기

     * 기존 React 컴포넌트 라이브러리의 시각적 편집을 위한 드래그 앤 드롭 기능 제공
     * 셀프호스팅 하거나 자신의 기존 어플리케이션에 연동가능
     * 사용자가 직접 콘텐츠를 로드할 수 있게 서드파티 헤드리스 CMS와의 통합을 지원(Strapi.js)
     * 인라인 편집 지원
     * npm을 통해 설치하거나 레시피를 사용하여 Puck 애플리케이션을 생성하여 설치
     * 플러그인으로 기능 확장 : 플러그인 API는 React 패러다임을 따르며, Puck에 전달된 각 플러그인이 renderRoot, renderRootFields, renderFields 세 가지 함수를 제공하면 됨

        Hacker News 의견

     * Puck, 직관적인 디자인과 유연성에 대한 긍정적인 피드백을 받는 React용 오픈 소스 비주얼 에디터
     * MIT 라이선스를 가진 Puck, 개발자들에게 강력한 도구로서의 역할
     * Vue를 위한 유사한 도구에 대한 요구, 다양한 프레임워크에서 이러한 도구의 필요성을 강조
     * Puck은 현재 수직으로 쌓인 레이아웃을 지원하지만, 컬럼 레이아웃에서 반응형 컴포넌트를 처리하는 능력에 대한 우려 존재
     * Puck이 클라이언트 또는 서버에서 페이지를 렌더링하는지에 대한 의문, 그것이 Puck의 활용을 제한할 수 있음
     * 사용자들은 JSON 또는 XML과 같은 데이터 형식으로 페이지 레이아웃을 커스터마이징하는 기능을 평가
     * readme에 스크린샷을 추가하여 드래그 앤 드롭 컴포넌트를 더 잘 이해하게 하는 등의 개선 제안 존재
     * 사용자들은 커스텀 컴포넌트를 추가하고 Puck을 사용하기 시작하는 것이 쉽다고 느낌
     * Puck이 코드 내 컴포넌트 props와 동기화된 저장 데이터 props/값을 어떻게 유지하는지에 대한 의문 존재
     * 일부 사용자들은 Retool과 유사한 백엔드 계층이 있는 Puck과 같은 도구를 가지고 싶어함
     * API 호출을 위한 WYSIWYG 기능과 응답을 컴포넌트에 매핑하는 제안 존재
     * 일부 사용자들은 Puck을 웹사이트 빌더로 전환한 Framer와 비교하며, Puck이 어떻게 차별화될 것인지 묻는다
     * 미래의 검색 가능성을 위해 HN 게시물 제목에 프로젝트 이름 ""Puck""을 포함하는 것이 좋다는 소소한 제안 존재
"
"https://news.hada.io/topic?id=10699","Tesla, Rivian, "Right to Repair"에 대한 가짜 지지 행위를 벌여","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Tesla, Rivian, ""Right to Repair""에 대한 가짜 지지 행위를 벌여

   헉 요약 실패

        Hacker News 의견

     * '수리권' 문제에 대한 테슬라와 리비안, 두 주요 전기차 제조사의 논의 기사
     * 일부 독자들은 키트 카로의 복귀를 원하며, 이는 거대한 시장이 될 수 있다는 제안을 함
     * '수리권'이 기본 상태가 되어야 하는지에 대한 논쟁, 일부는 자신의 재산을 수리하고, 수정하고, 분해하고, 재조합하는 능력이 자본주의의 핵심 구성 요소라고 주장
     * 일부 독자들은 '수리권'이 제품의 모든 구성 요소에 대한 지침과 사양에 대한 완전한 접근을 의미해야 한다고 주장
     * 이 문제를 다루는 저널리즘의 품질에 대한 비판, 일부 독자들은 언론이 적절한 조사 없이 정보를 되풀이한다고 비난
     * BMW와 같은 제조사들이 서비스 매뉴얼 판매를 중단하는 것에 대한 불만, 이는 '수리권'에 대한 무시로 보임
     * 일부 독자들은 테슬라로 다른 차를 점프조차 할 수 없다고 지적, 이러한 차량의 복잡성이 서비스를 어렵게 만든다는 제안
     * 수리 가능성과 온라인 보안 사이에 비교가 이루어짐, 회사가 진정으로 둘 중 어느 것에 대해 신경 쓴다면, 그것들은 디자인 단계에서 제품에 포함되어야 한다는 주장
     * 일부 독자들은 테슬라의 '수리권' 지원이 경쟁자에게 규제 부담을 가중시키고 혁신을 저해하는 전략일 뿐이라고 주장
"
"https://news.hada.io/topic?id=10672","LFortran - LLVM 기반의 최신 Fortran 오픈소스 컴파일러","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                LFortran - LLVM 기반의 최신 Fortran 오픈소스 컴파일러

     * 사용자의 코드를 인터랙티브하게 실행하거나 멀티코어 CPU/GPU 용 바이너리로 컴파일 가능
     * Full Fortran 2018 파서 구현
     * 인터랙티브 지원, Jupyter Kernel 로 사용 가능
     * AST (Abstract Syntax Tree), ASR (Abstract Semantic Representation) 두개의 독립 모듈로 구성되어 각각 라이브러리로 사용 가능
     * Linux, Mac, Windows 및 WebAssembly를 통해서 브라우저에서 실행가능

   Fortran - 고성능 병렬 프로그래밍 언어
"
"https://news.hada.io/topic?id=10693","Meta, 컴퓨터 비전 모델의 편향성을 조사하기 위한 FACET 데이터셋 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Meta, 컴퓨터 비전 모델의 편향성을 조사하기 위한 FACET 데이터셋 공개

     * Fairness in Computer Vision EvaluaTion
     * 분류, 탐지, 인스턴스 분할 및 시각적 기반 작업 전반에 걸쳐 컴퓨터 비전 모델의 공정성을 평가하기 위한 새로운 종합 벤치마크
     * 50,000명의 사람이 포함된 32,000개의 이미지 로 구성
     * 인구통계학적 속성(예: 성별,연령), 추가 신체적 속성(예: 피부색, 헤어스타일) 및 사람 관련 클래스(예: 농구선수, 의사)에 대해 전문 인간 주석자가 라벨링
     * SA-1B(Segment Anything) 데이터셋에 포함된 사람, 머리카락, 의복 라벨 69,000개도 포함
     * FACET은 연구 평가 목적으로만 사용되며 교육용으로는 사용할 수 없음
     * 데이터세트와 데이터세트 탐색기를 같이 제공
     * 이와 함께 기존에 공개했던 비전 모델인 DINOv2 를 아파치 2.0 라이센스로 변경

   DINOv2 - Meta AI가 공개한 자기지도학습 가능한 컴퓨터 비전 모델
"
"https://news.hada.io/topic?id=10742","현재 유지되고 있는 SSHFS의 포크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          현재 유지되고 있는 SSHFS의 포크

     * 현재 유지되고 있는 SSHFS의 포크에 대한 기사, 이 시스템은 SFTP를 사용하여 원격 파일 시스템을 마운트할 수 있게 해줍니다.
     * 원래의 SSHFS (저장소: https://github.com/libfuse/sshfs)는 더 이상 유지되지 않는다고 선언되어, 이 포크가 만들어졌습니다.
     * Greg Shuflin (https://github.com/neunenak/sshfs/tree/rust)에 의해 진행 중인 SSHFS의 Rust 포크도 있습니다. Rust는 현대적이고 메모리 안전한 프로그래밍 언어입니다.
     * 그러나 Rust 언어는 젊은 언어라는 단점이 있으며, 불안정한 API 변경, 표준 사양의 부재, 그리고 긴, 계산 집중적인 컴파일 과정이 있습니다.
     * 현재 이 포크의 유지자들은 문제를 수정하고, PR을 병합하며, Rust 포크가 준비될 때까지 프로젝트를 유지하는 데 집중하고 있습니다.
     * SSHFS는 사용하기 쉽고 대부분의 SSH 서버에서 기본적으로 지원됩니다. 이는 모든 주요 리눅스 배포판에 포함되어 있으며, 많은 년 동안 다양한 시스템에서 생산적으로 사용되어 왔습니다.
     * 널리 사용되고 있음에도 불구하고, SSHFS는 현재 활발한 정기적인 기여자가 부족하며, 알려진 문제들이 있습니다.
     * 이 기사는 SSHFS를 사용하는 방법에 대한 자세한 지침을 제공하며, 파일 시스템을 마운트하고 언마운트하는 방법을 포함합니다.
     * 또한 SSHFS를 설치하는 방법에 대한 정보를 제공하며, 필요한 라이브러리와 도구를 포함합니다.
     * 이 기사는 사용자들에게 버그를 보고하고 프로젝트에 기여할 것을 권장하며, 지원과 버그 보고를 위한 메일링 리스트와 GitHub 이슈 트래커에 대한 링크를 제공합니다.
     * 이 기사는 최신 SSHFS 릴리스 (https://github.com/libfuse/sshfs/releases)와 패키징 상태에 대한 링크로 마무리됩니다.

        Hacker News 의견

     * SSHFS의 현재 유지되고 있는 포크에 대한 기사, 이 시스템은 안전한 쉘(SSH) 세션을 통해 원격 서버에 위치한 디렉토리와 파일을 마운트하고 상호 작용하는 것을 가능하게 함.
     * 한 사용자는 Emacs를 사용하는 데 문제가 없다면, 투명한 원격 파일 액세스를 위해 Emacs의 TRAMP 기능을 사용하는 것을 제안함.
     * 다른 사용자는 Mac에서 macfuse + sshfs를 사용하는 것에서 ""mountain duck"" 도구를 사용하여 SFTP 엔드포인트에 대한 파인더와 마운트 포인트 액세스로 전환함.
     * SSHFS가 OpenSSH의 일부가 아니라는 오해를 명확히 함.
     * Slackware에서 사용된 SSHFS는 버려진 것으로 보이며, 개발자들이 프로젝트를 이어받을 것을 요청함.
     * SFTP는 좋지만 과소평가된 프로토콜로 강조되며, 특히 파일 트리를 양방향으로 미러링하는 것이 복제보다 효율적일 때 그렇습니다.
     * 일부 사용자들은 SSHFS가 더 이상 유지되지 않는 것에 실망을 표현하며, 원격 서버에 모든 플러그인을 설치하지 않고도 원격으로 코드를 편집하는 데 유용하다고 발견함.
     * 포크의 활동 수준에 대한 우려가 있으며, 마지막 커밋은 3월에 있었고 풀 요청과 이슈에 대한 활동이 거의 없음.
     * 한 사용자는 프로젝트가 고영향 이슈를 해결하는 활발한 유지 관리자를 가지고 있으므로 포크가 필요하지 않다고 주장함.
     * 사용자들은 SSHFS 대안으로 rclone mount를 논의하며, 이는 성능, 안정성, 캐싱 옵션을 향상시키고, Nautilus는 SFTP 폴더를 마운트함.
     * SFTP가 파일 전송을 위해 SSH 연결을 사용하므로, SSHFS와 사용자 인터페이스 차이가 없다는 점이 언급됨.
"
"https://news.hada.io/topic?id=10697","프리랜스 디자인 스튜디오를 에이전시로 확장하고 싶지 않음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    프리랜스 디자인 스튜디오를 에이전시로 확장하고 싶지 않음

     * 저자 Nela Dunato는 10년 동안 프리랜서 디자인 스튜디오를 운영하며 에이전시로 확장할 계획이 없다.
     * 그녀는 프로젝트별로 다른 창작자들과 협업하며, 각자 독립적으로 운영하고 비용을 청구하는 것을 선호한다.
     * Dunato의 사업 확장을 하지 않는 결정은 그녀의 개인적인 작업 스타일에 기반하며, 이는 에이전시의 작업 규범과 호환되지 않다고 그녀는 설명한다.
     * 그녀는 자신만의 방식과 속도로 일하는 자유를 소중히 여기며, 이를 통해 자신이 자랑스럽게 생각하는 디자인을 만들 수 있다고 믿는다.
     * Dunato는 ""느린""과 ""비효율적""이라는 레이블을 받는 등 그녀의 작업 스타일에 대한 비판을 받았지만, 그녀는 자신을 ""신중한""과 ""세심한""으로 보고 있다.
     * 그녀는 전통적인 작업 규범에 맞추려는 시도로 인해 스트레스와 건강 문제를 겪었다.
     * Dunato는 개인적인 성장과 서비스의 지속적인 개선을 믿지만, 성장을 지속 가능성과 동일시하지는 않는다.
     * 그녀는 반자본주의적인 신념을 가지고 있으며, 회사 규모, 고객 수, 수익, 그리고 다른 수치적 지표들의 지속적인 성장을 믿지 않는다.
     * Dunato는 비상업적인 창조적인 자기 표현을 그녀의 경력과 동등하게 중요하게 여기며, 개인 프로젝트에 시간을 할애할 필요가 있다.
     * 그녀는 디렉터보다는 디자이너가 되는 것을 선호하며, 디자인 작업을 직접하는 것을 즐긴다.
     * Dunato는 그녀가 원하는 대로 프로젝트를 수락하거나 거절할 자유를 가지고 있으며, 이는 많은 에이전시들이 가지지 못하는 특권이라고 그녀는 믿는다.
     * 그녀는 그녀의 사업을 ""라이프스타일 비즈니스""라고 설명하며, 이는 그녀의 삶을 따르는 것이지, 그녀의 삶을 일에 맞추는 것이 아니다.
     * Dunato는 그녀의 작업 방식이 모두에게 이해되거나 받아들여지지 않을 수 있다는 것을 인정하지만, 그녀는 자신에게 충실하게 남아 다른 삶의 방식이 가능하다는 것을 보여주는 데 믿음을 가지고 있다.

        Hacker News 의견

     * 프리랜서 디자인 스튜디오의 에이전시로의 전환을 거부하는 결정에 대한 기사
     * ""어소시에이트"" 모델을 사용하여 신뢰할 수 있는 프리랜서 네트워크를 통해 12년 동안 운영해온 스튜디오
     * 성장의 기회에도 불구하고 균형 잡힌 가정 생활을 유지하기 위해 스태프를 고용하지 않기로 한 스튜디오
     * 에이전시로 성장하는 것이 스트레스와 재정 부담을 초래할 수 있음을 지적하며, 팀 유지의 재정적 부담으로 아내와 이혼한 친구의 예를 든 기사
     * 스튜디오가 급변하는 시기에도 봉급 지급 걱정 없이 작업 규모를 조절할 수 있었던 사실
     * 에이전시로 전환하는 일부 독립 계약자들이 ""속임수""에 집중하게 되는 현상
     * 모든 성장이 유익하지 않으며, 지속 가능한 운영 방식을 유지하는 것이 더 보람차다는 기사의 주장
     * 창의적 자기 표현과 개인 프로젝트의 중요성에 대해 언급한 기사
     * 비정상적인 근무 시간과 습관에 대한 사회적 압박과 죄책감을 강조한 기사
     * 에이전시들이 중간에서 낮은 품질의 계약자들을 활용하면서도 높은 요금을 청구하는 것을 비판하는 기사
     * 3D 아티스트가 프리랜싱 대신 ""안전한"" 스튜디오 직장을 선택했지만, 스튜디오가 파산하면서 보상 없이 떠나게 된 개인 경험을 공유하는 기사
     * 4일 근무주와 같은 대체 근무 형태에 대한 토론과 그들이 제공할 수 있는 이점으로 기사를 마무리하는 내용
"
"https://news.hada.io/topic?id=10744","Shaq - CLI용 Shazam(음악 이름 찾기)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Shaq - CLI용 Shazam(음악 이름 찾기)

     * 오디오 소스를 듣고 Shazam 으로 보내서 음악을 찾아내는(Fingerprinting) CLI도구
     * 기본적으로 시스템 마이크를 사용하지만, mp3/mp4 등 ffmpeg 이 지원하는 모든 오디오 트랙을 입력으로 사용 가능
     * JSON 형태로 찾은 노래의 타이틀/서브타이틀을 출력
     * 추가 예정인 기능
          + Rolling 디텍션 기능으로 ""곡목을 찾을 때 까지 듣기"" 가능
          + 파일 입력의 범위 지정
"
"https://news.hada.io/topic?id=10675","AsmBB - 어셈블리로 개발된 웹 게시판","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        AsmBB - 어셈블리로 개발된 웹 게시판

     * 웹 기반 메시지 보드(포럼)
     * FASM(Flat Assembler, x86용) + FastCGI + SQLite
     * 현대적인 룩앤필을 제공하면서도, 빠르고 경량인 메시지 보드 엔진을 목표
     * 윈/리눅스

   당연히 불가능하진 않겠지만... 너무 신기해요.

   멋지네요 ㄷㄷㄷㄷ

   https://asm32.info/fossil/asmbb/…

   (사실 당연하게도) stdcall에 의존하는 것 같기는 한데, 도스나 부트로더같은것도 아니고 모던 웹을 어셈블리로 구현하려는 시도 자체가 신박하네요. 시간나면 파봐야겠습니다

   아 뭔가 멋있어 보여서 좀 더 들여다 보려고 했더니.. 마지막 문구가 발목을 잡네요
   ""프로젝트에 큰 관심이 있는 것은 아니므로 상세한 지침은 작성하지 않습니다. FASM 프로그래머는 컴파일 할 수 있을 꺼에요. 다른 프로그래머는 아마 시도조차 하지 않을 꺼에요. :)""

   관심이 없다기보다는 (경제적) 이익이 없다는 것으로 읽힙니다.
   익명의 독지가가 도네이션을 해주면 작성해 줄 수도 있겠네요 :)
   일단 저도 슬그머니 손을 떼는 것으로;;
"
"https://news.hada.io/topic?id=10664","Microsoft Edge에 EPUB 지원이 조용히 추가되었습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Microsoft Edge에 EPUB 지원이 조용히 추가되었습니다.

     * Edge가 Chromium으로 전환되면서 사라진 EPUB 지원이 Canary 빌드인 117.0.1989.0 버전에서 조용히 추가됨.
     * Canary 빌드에서도 기능이 숨겨져 있어서 –enable-features=msEdgeEpubReaderEnabled 플래그를 넣어 줘야 해당 기능이 활성화 됨.
     * 목차, 책갈피 등도 지원.
     * 아직 Microsoft 측에서 EPUB 지원에 대한 공식적인 발표가 없기 때문에 어떻게 될 지는 모름.

   저번 달...이 아니라 이젠 2달 전이군요. 7월 말에 Canary 빌드가 올라오면서 생긴 기능이라고 합니다.
   개인적으로 Blink Edge에 있던 EPUB 리더가 제일 빠르고 깔끔하다고 생각해서, 부활했으면 좋겠네요.
"
"https://news.hada.io/topic?id=10741","Android 14, 루트 권한조차 시스템 인증서의 모든 수정을 차단?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Android 14, 루트 권한조차 시스템 인증서의 모든 수정을 차단?

     * 다가오는 Android 14 릴리즈는 루트 권한을 가진 사용자조차 시스템 인증서의 모든 수정을 차단할 것입니다.
     * 이 변화는 개발자들에게 핸드셋 기능과 도구에 대한 완전한 접근을 허용하는 ""오픈 플랫폼""이라는 Android의 초기 약속에서 크게 벗어난 것입니다.
     * 인증 기관(CA) 인증서 주변의 제한은 훨씬 더 강화되어, 완전히 루트된 장치에서 신뢰할 수 있는 인증서 세트를 수정하는 것이 불가능하게 될 것입니다.
     * 이 변화는 Android 개발자, 테스터, 리버스 엔지니어, 그리고 자신의 장치가 누구를 신뢰하는지 제어하는 데 관심이 있는 사람들에게 새로운 도전을 제시할 것입니다.
     * 더 많이 제한된, 벤더가 제어하는 세상으로의 전환은 Android 7 (Nougat)에서 시작되었으며, 이는 장치의 인증 기관(CAs)을 OS 벤더가 제공하는 고정 목록과 사용자가 수정 가능한 목록 두 가지로 분리했습니다.
     * 신뢰할 수 있는 인증서 세트를 수정하는 능력은 개인 정보 보호 및 보안 연구, 리버스 엔지니어링, 앱 디버깅 및 테스트, 그리고 다양한 기업 내부 네트워크 구성에 있어 중요합니다.
     * 불편함에도 불구하고, Android 장치를 루트화하고 이러한 제한을 우회하는 것이 가능했지만, 이 우회 방법은 Android 14에서는 더 이상 효과적이지 않을 것입니다.
     * Android 14의 새로운 보안 기능인 원격으로 업데이트 가능한 CA 인증서는 더 빠른 CA 업데이트를 가능하게 하며, Google이 각 휴대폰 벤더가 OTA 업데이트를 릴리즈하는 것을 기다리지 않고 모든 Android 14+ 장치에서 문제가 있는 또는 실패하는 CA에 대한 신뢰를 철회할 수 있게 합니다.
     * 이 기능의 긍정적인 목표에도 불구하고, 구현은 심각한 결과를 초래하며 시스템 CA 인증서는 더 이상 /system에서 로드되지 않고, 루트 접근을 사용하여 만든 모든 변경 사항은 장치의 모든 앱에 의해 무시됩니다.
     * 이 변화는 Android Pony EXpress (APEX) 모듈의 범위로 이동된 미래 시스템 구성 요소도 사용자 제어에서 제거되며, 이는 GrapheneOS & LineageOS와 같은 Android의 포크와 Magisk와 같은 고급 장치 구성 도구에 문제를 일으킬 수 있음을 의미합니다.
     * 현재로서는, 디버깅, 리버스 엔지니어링, 테스트, 또는 연구를 위해 자신의 시스템 CA 인증서를 구성하는 데 관심이 있는 사람들은 Android 14로 업데이트하는 것을 피하거나, APEX 모듈을 사용하여 CA 인증서를 관리하지 않는 사용자 정의 OS 릴리즈를 사용해야 합니다.

        Hacker News 의견

     * Android 14이 시스템 인증서의 모든 수정을 차단하는 것에 대한 잠재적인 영향에 대한 기사
     * 경험 많은 Android 개발자가 제목이 오해를 불러일으킨다고 주장하며, Android에서 루트 액세스가 여전히 광범위한 수정을 허용한다고 주장, Java 코드 편집 포함
     * 개발자는 시스템 인증서를 수정할 수 없는 문제가 보편적인 문제가 아니라 기사 작성자에게만 특정한 문제일 수 있다고 제안
     * 개발자는 Android가 점점 사용자에게 적대적이 되고 있으며, 특히 파워 유저들에게 그렇다고 비판하며, 이것이 더 많은 사람들이 커스텀 ROM을 사용하도록 할 것이라고 희망
     * 다른 댓글러는 PC가 스마트폰처럼 작동하지 않아서 감사하다고 표현하며, Android를 Windows에 비해 사용자 제어가 부족하고 불안정하다고 비판
     * Pinephone Pro 사용자가 표준이 아닌 브라우저와 모바일 운영 체제를 사용하는 어려움에 대해 논의하며, 독점적인 모바일 OS 이중 독점에서 벗어나는 도전을 강조
     * 사용자는 Android가 새로운 루트 CA를 설치하고 신뢰하는 데 있어서 Apple보다 더 제한적이었다고 지적하며, Android 7+는 기본적으로 사용자가 추가한 CA를 무시
     * 다른 사용자는 루트 CA를 변경할 수 없는 문제가 Google의 네임스페이싱/컨테이너화의 부산물일 수 있으며, 변경을 방지하기 위한 의도적인 노력이 아닐 수 있다고 제안
     * 댓글러는 시스템 속성을 설정하여 APEX cert 디렉토리에서 읽기를 우회하는 방법을 공유하며, 문제가 처음에 생각한 것만큼 심각하지 않을 수 있다고 제안
     * Android의 버려진 버전에서 하드코딩된 인증서의 장기적인 생존성에 대한 우려, 이 접근법의 장기적인 생존 가능성에 의문을 제기
     * 한 사용자는 Android가 각 릴리스에서 기능을 제거하는 것을 비판하며, iOS가 사용자 경험 측면에서 결국 Android를 능가할 수 있다고 제안
     * 자체 호스팅 소프트웨어에 대한 개인 PKI에 의존하는 사용자가 자신의 루트 인증서를 인증된 기관 목록에 추가할 필요성을 표현하며, 사용자가 자신의 장치를 제어하는 것의 중요성을 강조
     * 사용자가 HTTP Toolkit과 Frida를 사용하여 EV 충전 앱에서 숨겨진 API를 추출하는 경험을 공유하며, 이러한 도구들이 개발자들에게 유용할 수 있는 잠재적인 가치를 강조
"
"https://news.hada.io/topic?id=10665","RFC 3339 대비 ISO 8601","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          RFC 3339 대비 ISO 8601

     * RFC 3339 및 ISO 8601은 날짜와 시간을 나타내기 위한 표준입니다.
     * RFC 3339는 날짜와 시간을 구분하기 위해 T 문자를 사용하는 것을 제안하며, ISO 8601은 더 유연성을 허용합니다.
     * ISO 8601-1:2019는 참조되는 ISO 8601 표준의 특정 판입니다.
     * 이 기사는 두 표준에 따른 유효한 날짜와 시간 형식을 보여주는 표를 제공합니다.
     * 추가적인 표현은 ISO 8601-2:2019에서 찾을 수 있습니다.
     * RFC 3339는 T를 대체할 수 있는 대체 문자를 허용하며, 예를 들어 공백 문자를 사용할 수 있습니다.
     * ISO 8601은 가장 작은 시간 값의 소수 부분과 임의의 정밀도를 허용합니다.
     * 두 표준에 따른 유효한 형식의 예시가 제공됩니다.
     * 각 표준은 다른 목적을 위한 여러 형식을 정의하며, 다른 형식의 사용을 권장하지 않습니다.
     * 이 기사에는 현재 날짜와 시간을 RFC 3339 및 ISO 8601 형식으로 보여주는 ""현재 형식"" 섹션이 포함되어 있습니다.
     * 다양한 날짜와 시간 형식을 이해하고 다루는 것은 소프트웨어 엔지니어링에서 중요합니다.
     * 다양한 형식의 날짜와 시간 데이터를 처리하는 것은 도전적이고 복잡할 수 있습니다.
     * 날짜와 시간 정보를 다룰 때 정확성과 정밀도가 중요합니다.
     * 다양한 형식을 숙달하는 것은 신뢰할 수 있고 효율적인 소프트웨어 애플리케이션 개발에 중요합니다.
     * 이 기사는 날짜와 시간 데이터 처리 기술을 개선하려는 소프트웨어 엔지니어에게 흥미로울 수 있습니다.
     * 이 기사는 다양한 날짜와 시간 형식의 예시와 정확한 표현에서의 중요성을 제공합니다.
     * 이 기사는 날짜와 시간 데이터를 다루는 소프트웨어 엔지니어에게 유익하고 정보를 제공합니다.
     * 이 텍스트는 프로그래밍 언어나 시스템에서 날짜와 시간을 나타내는 다양한 방법을 보여줍니다.
     * 형식에는 연도, 월, 일, 시간, 분, 초 및 시간대의 다양한 조합이 포함됩니다.
     * 형식에는 초의 소수 부분과 UTC 오프셋의 변형도 포함됩니다.
     * 텍스트의 목적이나 맥락은 명확하지 않습니다.
     * 이 텍스트는 날짜와 시간 형식 및 그 표현을 나열합니다.
     * 형식은 소프트웨어 개발이나 데이터 분석에 사용될 수 있습니다.
     * 형식은 날짜와 시간을 표준화된 방식으로 나타내는 데 사용될 수 있습니다.
     * 형식은 사용자 정의되어 계산이나 비교에 사용될 수 있습니다.
     * 형식은 다른 표현으로 변환될 수 있습니다.
     * 이 기사는 소프트웨어 개발에서 시간대와 값에 대한 다른 형식의 사용에 대해 논의합니다.
     * 유효성 검사를 위한 테스트 파일 생성기와 형식 확인 도구가 소개됩니다.
     * ISO 8601 형식을 파싱하는 서비스의 베타 테스트가 언급됩니다.
     * 시간대 전환기와 시간대 목록이 제공됩니다.
     * 이 서비스는 GitHub에서 다운로드할 수 있습니다.

        Hacker News 의견

     * 특정 시간대에 대한 미래 날짜/시간을 지정하는 표준화된 방법이 없습니다.
     * RFC 3339와 ISO 8601은 날짜와 시간 형식이 중복되고 1 CE 이전과 9999-12-31 이후의 날짜를 표현하는 데 불명확합니다.
     * 6자리 연도를 출력하는 표준 형식이 없습니다.
     * 가용성과 오픈 소스 준수로 인해 RFC 3339가 종종 ISO 8601보다 선호됩니다.
     * 벽시계 시간 + 위치를 표현하는 표준이 없습니다.
     * 기간(시간 간격)을 표현하는 표준화된 방법이 필요합니다.
     * 6자리 연도는 실용적이지 않거나 필요하지 않을 수 있습니다.
     * 파일 이름에서 특정 문자를 사용하여 날짜와 시간을 표현하는 데 제한이 있습니다.
     * ISO/IEC 646을 기반으로 하는 문자 집합에 대해 ISO 8601에서 사용해야 하는 올바른 문자는 하이픈 마이너스입니다.
     * 6자리 연도와 RFC 3339의 도입에 대한 이유가 의문입니다.
     * JS 날짜 형식은 상호 운용성과 날짜 작업의 간편함을 고려할 때 좋은 선택으로 여겨집니다.
"
"https://news.hada.io/topic?id=10743","Rockstar는 Steam에서 게임의 크랙을 판매했었습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Rockstar는 Steam에서 게임의 크랙을 판매했었습니다.

     * 20년 된 CD 게임인 Midnight Club II의 Steam 버전에서 CD 없이 게임을 실행하게 해주는 No-CD 크랙을 발견함.
     * Steam에 오래된 CD 게임을 배포할 때 CD 없이 게임이 실행될 수 있도록 게임을 수정하는 것이 아닌, No-CD 크랙을 설치하고 그대로 판매한 것으로 추정.
     * 파일을 확인한 결과 가장 오래된 소프트웨어 크래킹 그룹인 Razor 1911팀이 공개한 No-CD 크랙이 사용된 것으로 보임.

     * HN 스레드

   이런 이야기 몇 번 들었었는데, 게임 업계에서는 생각보다 일반적인 것 같습니다.
   다른 기업들도 CD로 출시했던 과거 게임을 다운로드 게임으로 판매할 때 그냥 크랙 해버리는 경우가 종종 있다고 하네요.

   크랙이 정품?이 되버리다니... 재미있는 일 같습니다. +_+

   참고로 위 게임은 2021년도에 판매를 중단한 것 같네요. SteamDB에서 2년 치 가격 정보가 없어요.

   그리고 스크린샷에 있는 exe 파일도 실제로 사용하지 않는 파일이라는 것 같습니다.
   이러면 초기에 크랙으로 테스트를 해봤고, 이후 실제 수정해서 스팀에 출시했지만, 테스트할 때 파일을 제거하지 않는 것이 아닐까? 싶어요.

   HN 스레드의 AI 요약
     * CobrastanJorji: 이전 직장에서 오래된 게임의 라이선스 문제로 인해 크랙된 게임 카피를 사용해야 했던 경험을 공유했습니다.
     * Bluecobra: 게임 중 하나에서 최종 보스 프리즈와 같이 잡히지 않는 방식으로 게임을 망가뜨리는 나쁜 크랙을 사용하면 재미있을 것 같다고 생각했습니다.
     * atherton33: 크랙이 한 번의 플레이로 감지할 수 없는 방식으로 무작위 요소를 깨뜨리는 게임의 예를 링크했습니다.
     * Darmody: Steam의 원본 게임은 Linux에서 실행되지 않지만 크랙 버전은 작동한다고 말했습니다.
     * thaumasiotes: 게임이 크랙되어 있다고 주장하는 아카이브를 언급했지만 일부 개발자는 게임 후반부까지 복사 방지를 호출하지 않음으로써 이를 무력화합니다.
     * robbiet480: 표시된 게임은 CD가 필요하며 Rockstar는 이전 소스 코드를 업데이트하는 대신 CD가 없는 크랙을 포함시켜 이를 우회했다고 설명했습니다.
     * rpdillon: 오늘의 불법 복제는 내일의 유일한 복사본이며, 게임이 원래 미국의 기간인 14년을 넘겼기 때문에 저작권이 이를 허용해야 한다고 말했습니다.
     * chrisco255: 디즈니 변호사들은 저작권이 원작자의 3세대를 넘어 50년까지 연장되기를 원한다고 농담했습니다.
     * pizzafeelsright: 17세 어린이에게 게임을 크랙하는 이유를 물었습니다 - 명성, 돈, 도전을 위해 - 스스로 방법을 모르기 때문에.
     * blagie: 10대 시절에는 사람들에게 말하지 않았기 때문에 돈보다는 재미와 커뮤니티 정체성 때문이라고 대답했습니다. 또한 게임을 살 돈이 없는 다른 아이들에게도 기회를 제공했습니다.
     * wongarsu: 무 CD 크랙은 미국에서는 저작권에 대한 변형적 2차적 저작물에 해당하지 않을 수 있지만 다른 관할권에서는 다르게 볼 수 있다고 언급했습니다.
     * itiro: 대부분의 크래커들은 돈을 벌기 위해서가 아니라 DRM에 결함이 있다는 것을 증명하기 위해 크래킹을 하며, 당시에는 위험 부담이 적은 학습 경험으로 여겼었다고 말했습니다.
"
"https://news.hada.io/topic?id=10687","Lidl 제품 리콜 [pdf]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Lidl 제품 리콜 [pdf]

     * 대학원생이 스마트폰 없이 세탁을 하려는 개인적인 경험담
     * 저자가 수동적인 작업에서 기술의 도움으로 자동화된 일로 변화한 세탁에 대해 성찰
     * 저자의 기숙사인 'Sidney Pacific'가 2020년경 'Washlava'라는 앱을 사용하는 새로운 세탁기를 설치
     * 저자가 스마트폰 사용을 제한하려고 결정하고, Washlava 앱에 의존하는 세탁 과정에서 어려움을 겪음
     * 저자가 Washlava가 전화 없는 사용자를 위해 iPod Touch를 제공한다는 것을 발견. 이 장치는 'Laundry Pod'로 불리며, Washlava 앱을 작동시키는 데 사용됨
     * 저자가 Laundry Pod를 사용하는 데 여러 어려움을 겪음, 배터리 소모, 비밀번호로 보호된 화면, Washlava 계정에 로그인하는 어려움 등
     * 이러한 장애에도 불구하고, 저자는 충분한 자금이 없다는 오류 메시지 때문에 지불하지 않고도 성공적으로 세탁을 할 수 있었음
     * 저자가 세탁과 같은 간단한 작업조차 서비스와 기술의 네트워크를 필요로 하는 현대 생활의 복잡성에 대해 성찰
     * 저자가 기본적인 작업에 대한 이러한 기술 의존성이 우리가 추구하고 싶은 길인지 의문을 제기, 우리의 집단적 인류성에 대한 성찰의 필요성을 제안

        Hacker News 의견

     * 소매 구매자들이 종종 QR 코드가 포함된 제품을 주문하며, 이 코드는 보통 소매 회사 본사가 고용한 에이전시가 관리하는 프로모션 또는 정보 사이트로 연결됩니다.
     * 이러한 프로모션 사이트들은 제품 판매 기간이 끝난 후에는 관리되지 않는 경우가 많아, 도메인이 탈취되거나 호스팅 제공 업체가 침해당할 경우 보안 취약점이 발생할 수 있습니다.
     * 이 문제는 소매업계에서 흔하며, 대부분의 대기업들이 연간 최소 한 번씩 이런 문제를 겪지만, 일반적으로 회사의 주가나 평판에는 영향을 미치지 않습니다.
     * 패키지에 기재된 프로모션 웹사이트가 침해당해 Lidl의 제품이 리콜되는 것은 낭비로 여겨지며, 플라스틱 봉투와 아마도 비스킷 자체가 폐기될 필요가 있을 것입니다.
     * 일부 댓글러들은 회사들이 URL을 더 책임감 있게 관리해야 한다고 주장하며, 이는 장기적인 약속이며 소비자 제품에 부주의하게 사용되어서는 안된다고 말합니다.
     * 리콜된 제품의 프로모션 사이트(appykidsco.com)는 중국 장쑤성의 어떤 사람에게 등록되어 있으며, 이 사람은 많은 다른 도메인을 소유하고 있는 것으로 보아, 자동 도메인 인수 공격의 가능성을 시사합니다.
     * 제품 리콜은 식품 자체에 문제가 있다는 것을 나타내지 않아, 리콜된 제품들이 식품 은행에 기부될 것이라는 희망을 제기합니다.
     * 리콜은 패키지에 기재된 공급업체의 URL이 침해되어 어린이에게 부적절한 사이트로 리디렉션되는 것이 원인이었으며, 고객들에게는 제품을 반환하고 전액 환불받을 것을 권장하였습니다.
"
"https://news.hada.io/topic?id=10700",""Raft 합의 알고리즘aft 합의 알고리즘 (2015)""

     * 이 기사는 이해하기 쉽게 설계된 합의 알고리즘인 Raft Consensus Algorithm에 대해 논의하며, 이는 오류 허용성과 성능 면에서 Paxos와 동등하다.
     * 합의는 여러 서버가 값에 대해 합의해야 하는 오류 허용 분산 시스템에서의 기본적인 문제이다. 값에 대한 결정이 이루어지면 그것은 최종적이다.
     * Raft 알고리즘은 복제된 상태 기계의 맥락에서 사용되어 오류 허용 시스템을 구축한다. 각 서버에는 상태 기계와 로그가 있다. 상태 기계는 오류 허용성을 가져야 하는 구성 요소이다.
     * Raft 알고리즘은 어떤 상태 기계가 명령을 n번째 명령으로 적용하면, 다른 상태 기계는 다른 n번째 명령을 적용하지 않도록 보장한다. 이로 인해 각 상태 기계는 동일한 일련의 명령을 처리하고 동일한 결과를 생성한다.
     * 이 기사는 Raft 클러스터가 브라우저에서 실행되는 모습을 시각화하여 Raft의 작동 방식을 이해하는 데 도움을 준다.
     * 이 기사는 Raft에 대한 좋은 소개로서의 출판물과 강연 목록도 제공한다.
     * 이 기사는 다양한 개발 단계에서 사용 가능한 Raft의 많은 구현을 나열하며, 소스 코드도 제공한다.
     * Raft와 그 구현에 대해 질문하는 가장 좋은 장소는 raft-dev Google 그룹이다.
     * 이 기사는 Creative Commons Attribution 3.0 Unported License에 따라 라이선스가 부여된다.

        Hacker News 의견

     * Raft 합의 알고리즘은 간단하면서도 견고한 분산 시스템 학습 알고리즘으로, 실제 세계에서 많은 응용 분야를 가지고 있습니다.
     * Jepsen이 만든 Maelstrom 작업대는 Raft의 모델 검증 구현과 이를 구현하는 방법에 대한 우수한 튜토리얼을 포함하고 있습니다.
     * Raft 알고리즘은 간단함으로 인해 주목받지만, 원래의 논문에는 장난감 구현에서 자주 무시되는 많은 정확성 세부 사항이 포함되어 있습니다.
     * 실제 하드웨어의 결함 가능성, 엄격한 지연 시간 SLA, 유연한 쿼럼/동적 클러스터 멤버십의 필요성으로 인해 Raft를 제품용으로 구현하는 것은 길고 어려운 작업입니다.
     * Raft 논문은 읽기 쉽고, 심지어 구현하고 싶지 않은 사람들에게도 훌륭한 직관을 제공합니다.
     * Raft를 사용하는 소프트웨어에는 etcd, consul, cockroach, tidb가 포함됩니다.
     * Raft의 개념적 명료성과 우아함은 성능과 신뢰성에서 나타날 수 있습니다.
     * Raft는 잘 이해되고 강력한 라이브러리 생태계를 가지고 있어, 이를 구현하는 사람들에게 유익합니다.
     * Raft와 함께 오는 간단함과 추론은 기술 커뮤니티의 많은 사람들에게 인정받고 있습니다.
     * 일부 사용자들은 합의 프로토콜에 대한 초보자들이 Bitcoin으로 시작한 다음 Paxos/Tendermint/Simplex로 넘어가고, Raft는 완전히 건너뛰는 것을 권장합니다.
     * 간단함에도 불구하고 Raft는 여전히 많은 미묘한 점을 가진 복잡한 알고리즘이며, 일부 사용자들은 이해하고 구현하는 데 어려움을 겪습니다.
     * Raft 합의 알고리즘은 이해하기 쉽게 설계되었으며, 고장 허용성과 성능에서 Paxos와 동등합니다.
     * 알고리즘은 상대적으로 독립적인 부분 문제로 분해되며, 실용적인 시스템에 필요한 모든 주요 부분을 다룹니다.
     * 일부 사용자들은 Raft 합의 알고리즘의 시각화와 설명이 불명확하거나 혼란스럽다고 발견했습니다.
"
"https://news.hada.io/topic?id=10710","Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2023년 9월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2023년 9월)

   일할 곳을 찾고 계시다면, 간단히 정보를 남겨 주세요.

     지역 :
     리모트 필요 :
     기술 :
     이력서 :
     이메일 :

   위 정보는 구인을 위해서만 이용해 주세요

   ~~

   혹시나 봇들이 이메일 주소를 크롤링하는 경우가 있을 수 있으니 '[at]' 이나 '[앳]' 등을 써서 이메일 주소를 난독화 해주셔도 좋습니다.
   가능하면 자신의 깃헙/링크드인 URL을 남겨 주세요.
   HN의 Who wants to be hired 를 참고 했습니다.

   지역: 서울
   리모트 필요: 있으면 좋지만 없어도 무방함!
   기술: python 백엔드 (react도 어느정도 가능합니다)
   이력서: https://www.linkedin.com/in/qodot/
   이메일: waitingforqodot@gmail.com
   기타: 특히 10인 이하의 작은 팀에 흥미가 많습니다. 가볍게 커피챗 하면서 대화 나눠보면 재미있을 것 같아요!

   지역 : 서울
   리모트 필요 : 관계없음
   기술 : solidity, kotlin, java, javascript 등 백엔드 관련 기술들(docker, k8s), 블록체인 및 백엔드 개발자
   이력서 : linkdin 참조 및 원한다면 원티드 양식으로 첨부
   이메일 : echizen7yomga@gmail.com
   linkdin: https://www.linkedin.com/in/%EC%8B%9C%EC%A4%91-%EA%B9%80-126b901a3/

   희망사항: 양식에 따로 없어 답변에 적어둡니다.
   저는 문제 푸는 것을 좋아합니다. 주어진 문제를 푸는것이 아닌 문제를 방관하지 않고 문제를 찾아다니며 해결하는데에 있어 행복함을 느끼는 사람입니다.
   그래서 저에게 제안 주실 곳은 풀 문제가 아주 많은 회사였으면 좋겠습니다.
"
"https://news.hada.io/topic?id=10671","UTM - iOS 및 macOS를 위한 가상 머신","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      UTM - iOS 및 macOS를 위한 가상 머신

     * UTM은 QEMU 기반의 iOS 및 macOS를 위한 종합적인 시스템 에뮬레이터 및 가상 머신 호스트입니다.
     * Mac, iPhone, iPad에서 Windows 및 Linux와 같은 다양한 운영 체제를 실행할 수 있습니다.
     * 시스템은 MMU, 디바이스 등을 포함한 전체 시스템 에뮬레이션을 지원합니다.
     * x86_64, ARM64, RISC-V를 포함한 30개 이상의 프로세서를 지원합니다.
     * UTM은 SPICE와 QXL을 사용한 VGA 그래픽 모드, 텍스트 터미널 모드, USB 디바이스를 제공합니다.
     * QEMU TCG를 사용한 JIT 기반 가속을 사용하며, macOS 11 및 iOS 11+를 위해 특별히 설계된 프론트엔드를 가지고 있습니다.
     * 사용자는 자신의 장치에서 직접 VM을 생성, 관리, 실행할 수 있습니다.
     * macOS용 추가 기능으로는 Hypervisor.framework 및 QEMU를 사용한 하드웨어 가속 가상화, macOS 12+에서 Virtualization.framework를 사용한 macOS 게스트 부팅이 있습니다.
     * UTM/QEMU는 최대 성능을 위해 동적 코드 생성(JIT)을 필요로 하며, iOS 장치에서는 탈옥된 장치 또는 특정 우회 방법이 필요합니다.
     * UTM SE(""slow edition"")는 전통적인 인터프리터보다는 성능이 좋지만 JIT보다는 느린 스레드 인터프리터를 사용하며, 탈옥이나 JIT 우회 방법이 필요하지 않습니다.
     * UTM SE는 크기와 빌드 시간을 최적화하기 위해 ARM, PPC, RISC-V, x86 아키텍처(32비트 및 64비트 버전 모두)만 포함합니다.
     * UTM은 iOS와 macOS 모두에서 사용할 수 있습니다.
     * UTM은 관대한 Apache 2.0 라이선스에 따라 배포되지만, 여러 (L)GPL 구성 요소를 사용하며 일부 코드는 qemu에서 가져왔습니다.
     * UTM 프론트엔드는 IQKeyboardManager, SwiftTerm, ZIP Foundation, InAppSettingsKit을 포함한 여러 MIT/BSD 라이선스 구성 요소에 의존합니다.
     * 지속적인 통합 호스팅은 MacStadium에서 제공합니다.

        Hacker News 의견

     * UTM은 iOS와 macOS를 위한 가상 머신으로, Fusion과 Parallels와 같은 상업용 VM 솔루션에 대한 오픈 소스 대안을 제공합니다.
     * 일부 사용자들은 UTM과 함께 통합 도구의 부족, 예를 들어 VM과 호스트 간의 복사/붙여넣기, 파일 공유, 그래픽 오류 등의 문제를 경험했습니다.
     * 이러한 문제에도 불구하고, 다른 사람들은 UTM의 기능성과 시간이 지남에 따른 기능 개선, 스냅샷 기능이 추가되면 기본 추천이 될 가능성을 칭찬했습니다.
     * UTM에 대한 사용자 경험은 매우 다양하며, 일부는 잘 작동한다고 찾았지만, 다른 일부는 사용할 수 없을 정도로 느리거나 전혀 작동하지 않는다고 발견했습니다.
     * 일부 사용자들은 Parallels와 VMWare와 달리 UTM이 주 macOS에서 VM을 격리시킬 수 있는 능력을 선호합니다.
     * UTM의 iOS 설치 옵션은 제한적이며, 탈옥이나 반 테더링이 필요하거나 몇 일마다 앱을 다시 로드/서명해야 할 수 있습니다.
     * 사용자들이 언급한 UTM의 대안으로는 macOS용 wsl2와 유사한 Lima, 개발 환경용 Mac에서 VM을 실행하는 OrbStack이 있습니다.
     * UTM은 기본적인 작업에 대해 인정받지만, 일부 사용자들은 일상 작업에 대한 성능이 부족하다고 느껴, Mac에서의 우수한 성능으로 Parallels를 선호합니다.
"
"https://news.hada.io/topic?id=10707","Battery 벤쳐스의 Gen Z 보고서 (16p PDF)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Battery 벤쳐스의 Gen Z 보고서 (16p PDF)

     * 1997~2012 사이에 태어난 Z 세대의 소비자 선호도와 행동, 이 세대가 산업 전반에 미칠 잠재적 영향, 앞으로의 기술 투자기회 등을 정리
     * 작년 기준 전세계 인구의 25%를 초과, 밀레니얼 세대를 넘어 지구상에서 가장 많은 인구의 세대가 되었음
          + 구매력은 $360B(475조원)
          + 인종과 민족이 가장 다양한 세대. 52%만이 백인
          + 섹슈얼리티에서도 가장 다양. 기존 어떤 세대보다도 많은 16%가 자신이 LGBTQ+ 의 일원임을 밝히고 있음
          + 가장 많이 교육을 받은 세대. 18-21세 사이에 밀레니얼/X세대보다 1대학 재학중인 비율이 높음
          + 매일 온라인에서 10.6시간을 소비. 33%는 자신의 온라인 정체성이 ""가장 진정한 자아(most authentic self)""라고 생각함

핵심 가치, 커뮤니티, 소셜 애티튜드

     * 끊임없는 경제적, 사회적, 정치적 변화와 혼란을 견디며 성장
     * 9/11 테러, 2008년 금융위기, 최근의 사회-정의 운동, COVID-19 팬데믹등
     * 이런 경험은 자신의 가치관에 부합하는 비즈니스와 관계를 맺고, 워라밸을 추구하며, 의료 서비스 및 부채 상환전략에 더 나은 접근성을 요구하는 Z세대의 독특한 시각을 형성
     * 또한, 위 사건등을 통해 주택 소유와 같은 문제에 대해 더 비관적인 견해를 갖게 됨. 예를 들어, Z세대의 34%는 자신의 재정 상태가 결코 집을 살 수 있을 만큼 충분하지 않을 것이라고 생각
     * 매크로 환경 : Gen Z에 준 영향 : 비즈니스 시사점
          + 인터넷의 광범위한 사용 : 디지털 네이티브 : 진정한 옴니채널이 되어야함 (소셜허브, 사이트, 리테일러, 게임, 미디어 를 언제 어디서나)
          + Gen Z의 다양성(인종,성별) : 사회적 의식을 가짐(사회에 긍정적인 영향을 미치기를 열망): 개성과 다양성을 포용하고 브랜드에 이러한 가치를 반영
          + 기후 변화 : 목적 있는 소비 : 지속 가능성을 위한 노력 (기업이 책임과 역할을 다하기를 기대함)
          + 대 침체(Great Recession) : 경제적 어려움과 소득 불평등에 대한 이해 : 기업가 정신 (부업이나 프리랜서로 일할 가능성이 높음)
          + COVID-19/정치적 불확실성/소셜미디어 : 정신 건강에 대한 인식(Z세대 대다수가 스트레스/정신질환으로 인한 증상을 경험) : 정신 건강에 대한 후원(Z세대는 고용주가 이를 후원해야 한다고 강하게 믿음)

Z 세대와 엔터테인먼트

     * 91%가 ""주류"" 팝 컬쳐는 없다고 생각함
     * 55%가 친구들이 보지 않는 콘텐츠를 시청함
     * 버티컬 네트워크와 초특정(Hyper-Specific) 커뮤니티의 부상
          + ""메인 피드""로 부터 멀어져서, 서브레딧/페이스북 그룹 같은 쪽으로 모이는 트렌드
     * 동영상 공유는 소셜 네트워킹의 차세대 보루
          + 93%의 Z세대가 유튜브를 매주 사용
          + 83%가 틱톡을 매주 사용

리테일 : 해쉬태그에서 핸드백까지

     * Z세대가 상품을 찾고 구매하는 방식은 다른 세대와 근본적으로 다름
     * 소셜과 커머스의 융합
          + Z세대에게 소셜은 검색하고, 발견하고, 영감을 얻는 de-facto 공간
          + 인스타그램, 틱톡, 유튜브 등의 소셜 플랫폼은 소비자 구매 여정에서 중요한 노드가 되었음
          + 이런 변화는 iOS 14 와 구글의 써드파티 쿠키 제거 때문에 소비자를 추적하고 리타게팅하는게 불가능해졌기 때문
          + 그래서 고객확보비용(CAC)는 사상 최고치를 기록한 반면, 이커머스 플랫폼의 전환율은 사상 최저로 떨어짐
          + 결국 브랜드는 최종 소비자와 장기적인 관계를 구축하고, 이 커뮤니티를 통해 수익을 창출하고, 궁극적으로 데이터를 직접 소유하기 위해 소셜 커머스 전략에 예산을 재할당
     * Z세대 소비자의 97%는 쇼핑 아이디어를 얻기 위해 소셜 미디어를 이용

Z 세대는 Conscientious(건전한 인식의) 소비자들임

     * Z세대의 70%는 그들이 윤리적이라고 생각하는 기업에서 구매하려고 함
     * Z세대의 90%는 기업이 사회 및 환경 문제에 대해 조치를 취해야 한다고 생각
     * 순환 경제에 더블링 다운
          + ""리-커머스"" 스타트업: 소비자와 기업이 중고상품을 사고/팔고/빌려줄수 있도록 하는 시장/인프라/소프트웨어 도구를 지원

Z 세대와 파이낸스: Lessons Learned, Money Earned

     * 부모/형&누나 들이 재정적 위기를 헤쳐나가는 것을 봤기 때문에 금융 안전에 대한 인식이 높아졌을 가능성이 있음
     * 부채를 기피하고, 재정에 대해 스트레스를 받으며, 다른세대와는 다르게 돈을 관리 함
     * Z세대의 14%가 스스로를 돈을 많이 쓰는 사람(Big Spender)이라고 생각함
     * Z세대의 48%는 지출보다 저축을 우선시함
     * Z세대의 61%는 직장에서 재정적 웰빙 혜택을 제공한다면 스트레스를 덜 받을 것이라고 대답함
     * Z세대가 생각하는 이상적인 은퇴 연령은 54세이지만, 대부분은 60세까지 은퇴할 것으로 예상

Z 세대와 일: “I’m a Business, Man — Not a Businessman”

     * 전통적인 9-5 근무방식 보다 자신들이 희망하는 라이프스타일에 맞는 전통적이지 않은 방식을 선호
     * 43%가 프리랜서 작업에 참여
     * Z세대의 62%는 자신의 사업을 시작했거나 시작할 의향이 있음
     * Z세대가 37%가 다른 세대보다 다른 사람을 멘토링할 수 있는 능력을 원함
     * Z세대의 46%는 본업 외에 풀타임 또는 파트타임 직업을 가지고 있음
     * Z세대의 85%는 하이브리드 또는 원격 근무를 선호
     * Z세대의 72%는 일과 삶의 경계를 지키고 있음

Z 세대와 부동산

     * Z세대 주택 구매자의 67%가 앱이나 온라인 서비스를 고려(밀레니얼은 39%)
     * Z세대의 34%는 재정적인 이유로 내 집 마련이 항상 불가능할 것이라고 생각

Z 세대와 웰니스: The Body (and the Mind) is a Temple

     * 2021년에 Z세대의 46%는 팬데믹 기간 동안 정신 건강이 악화되었다고 응답
     * Z세대의 72%는 건강한 음식을 신체적, 정신적 건강의 필수 요소로 여긴다고 응답
     * Z세대의 37%는 정신건강 전문가로부터 치료를 받은 경험이 있다고 응답
     * Z세대의 42%는 건강 정보를 얻기 위해 소셜 미디어를 이용
     * Z세대의 79%는 일주일에 한 번 이상 채식을 함
     * Z세대의 70%가 스마트워치 또는 피트니스 트래커를 착용

Gen Z 와 AI

     * Z세대의 28%가 현재 직장에서 AI를 사용하고 있다고 응답, 다른 어떤 세대보다 높음
     * Z세대의 53%가 월간 생성형 AI 사용자가 될 것

결론

     * Z세대의 행동과 신념은 산업 전반에 걸쳐 영향력과 잠재력을 모두 가지고 있음
     * 오늘날의 비즈니스 리더는 이러한 소비자의 선호도와 니즈를 이해하고 이에 적응하는 것이 중요
     * Long-Term Behavior
          + Z세대가 계속해서 성숙해지고 다양한 인생 단계에 접어들면서 그들의 가치관, 선호도, 행동이 시간이 지남에 따라 어떻게 변화하는지 관찰하는 것은 흥미로운 일이 될 것
          + 이들이 성인이 되면서 소비 습관, 직업 선택, 사회적 영향력은 어떻게 발전할까?
     * Economic Impact
          + Z세대는 학자금 대출 부채와 변화하는 취업 시장 등 독특한 경제적 문제에 직면해 있음
          + 이러한 요인들이 그들의 장기적인 경제 전망과 재무적 결정에 어떤 영향을 미칠지 지켜봐야 함
          + Z세대는 변화하는 업무 환경과 경제적 기회를 어떻게 탐색할까?
     * Cultural & Social Identity
          + Z세대가 계속 성장하고 자신의 정체성을 정의함에 따라, 이들이 문화적 영향을 탐색하는 방식을 이해하는 것이 중요
          + 급변하는 세상과 상호작용하면서 정체성과 소속감, 커뮤니티에 대한 개념을 어떻게 형성하고 재정의할까?
     * Technology & Mental Health
          + Z세대는 기술에 대한 의존도가 높고 디지털 플랫폼에 많이 노출되어 있기 때문에 장기적으로 정신 건강과 웰빙에 어떤 영향을 미칠지 지켜봐야 함
          + 이 세대와 기술의 관계는 어떻게 발전할 것이며, 건강한 디지털 습관을 장려하고 잠재적인 부정적인 영향을 완화하기 위해 어떤 조치를 취할 수 있을까?
     * Workplace Dynamics
          + Z세대가 직장에 들어가면서 이들의 기대와 가치관이 직장 내 역학 관계에 어떤 영향을 미치는지 관찰하는 것이 중요해질 것
          + 이들이 직장 문화와 직원 복지 이니셔티브, 그리고 일과 개인 생활 사이의 균형을 어떻게 형성할까?

   너무 유용하게 잘 읽었습니다

   상당히 의미있는 보고서네요.
"
"https://news.hada.io/topic?id=10676","Comic-Factory - 디퓨전 모델을 이용하여 만화를 생성해주는 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Comic-Factory - 디퓨전 모델을 이용하여 만화를 생성해주는 도구

     * 만화 스타일 프리셋과 짧은 스토리 프롬프트를 이용하여 만화를 4컷 단위로 생성
     * 프리셋: Japanese(출판 만화), American(그래픽 노블), Franco-Belgian(프랑스/벨기에 스타일), Armorican(고대 그림체 스타일)

   디퓨전 모델의 발전은 어디까지...

   스누피로 해보니 정말 스누피 그림체로 만화가..

   와 너무 재밌는데요;
   일관성있게 잘 찍어내면 작품이 나올 듯합니다

   간단하게 프롬프트 넣어서 만들어봤는데 나오는 품질은 볼만하네요.
   이제 프롬프트만 잘 쓰면 만화도 찍어내줄듯
"
"https://news.hada.io/topic?id=10730","GraalVM Enterpise의 새로운 에디션 OracleVM 에디션. 상용 사용 무료화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           GraalVM Enterpise의 새로운 에디션 OracleVM 에디션. 상용 사용 무료화

   Graalvm enterpise edition이 OracleVM 이라는 이름으로 바뀌었네요.
   개발용과 상용 사용은 무료이고, 재판매는 라이센스 받으라고 하네요.

   일단 일반적인 어플리케이션 서버용으로 무료로 사용가능해졌다는게 좋네요.

   오라클도 오픈소스에 더 진심이 되어가는거 같네요
"
"https://news.hada.io/topic?id=10748","Show GN: 셀럽미: 아이돌 닮은꼴 테스트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Show GN: 셀럽미: 아이돌 닮은꼴 테스트

     * 닮은 아이돌 테스트를 사이트 내에서 간단하게 수행
     * 딥러닝 이미지인식 모델 학습에 5만여장의 이미지 사용
          + 데이터 정제와 모델 학습에 대한 내용은 별도로 정리
          + 분류정확도 50% 수준

   사이트 도메인을 .kr 에서 .net 으로 변경했습니다!
   https://celebme.net
"
"https://news.hada.io/topic?id=10706","생성형 AI를 이용한 마케팅/SEO/PR용 자동화 스크립트 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  생성형 AI를 이용한 마케팅/SEO/PR용 자동화 스크립트 모음

     * Google Colab에서 바로 실험가능한 20개 이상의 스크립트
     * TikTok 동영상 자동 분석 및 바이럴 성공 요인 보고서 생성: Apify + OpenAI Whisper + Vicuna
     * 구글 뉴스 클러스터링을 통한 모니터링 & 분석 : SerpAPI + GPT
     * 콘텐츠 갭 분석을 위한 자동화된 키워드 클러스터링 : OpenAI API + SEMrush API
     * 시맨틱 SEO 데이터를 활용하여 고품질의 자동화된 장문 기사 생성
     * 클러스터링을 이용한 자동 Newsjacking 콘텐츠 아이디어 도출
     * 소셜 미디어 전략을 위한 자동 틱톡 동영상 분석
     * 자동화된 온사이트 SEO 링크 최적화
     * 아무 기사를 기반으로 한 자동화된 서브 레딧 및 게시물 제목 추천
     * 특정 키워드에 대한 상위 랭킹 페이지의 기사 텍스트를 분석하여 기사 개요를 자동으로 생성
     * LipSync를 이용한 자동 비디오 번역
     * 유튜브 URL에서 요약, 기사 개요, 긴 형식의 기사 및 트윗 스레드를 자동으로 생성
     * 반복적 발명, 비평 및 합성을 위한 멀티 에이전트 AI 협업
     * 자동으로 의도(intension), 페르소나 및 구매자 추론
     * 대규모 언어 모델 검색 최적화
     * 데이터 저널리즘 기사를 구하는 언론사를 위한 프롬프트 체이닝
     * HuggingFace Embedding, Agglomerative 클러스터링 및 GPT-3를 통한 자동화된 콘텐츠 및 키워드 클러스터 생성
"
"https://news.hada.io/topic?id=10638","아마존 CEO가 원격근무자들에게: "주 3일 사무실에 출근하지 않으면 아마 잘 안될 것"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           아마존 CEO가 원격근무자들에게: ""주 3일 사무실에 출근하지 않으면 아마 잘 안될 것""

     * Andy Jassy가 이번달 내부회의에서 성명을 발표
     * 현재 5월에 발표한 아마존의 공식 정책에도 불구하고 일부 직원이 일주일에 3일 출근하지 않는다고 불만을 표명
          + 이전에는 개별팀이 사무실 출근여부를 각각 결정했지만 이 정책을 폐기
          + ""주 3일 출근하지 않는다면 아마 잘 되지 않을 것(not going to work out)""
     * 3만명의 아마존 직원이 이 사무실 복귀 명령에 반대하는 내부 청원에 서명했음
          + ""아마존의 하향식이고 일률적인 Return-To-Office 정책은 우리가 참여하고 싶은, 다양하고 접근 가능한 미래를 훼손함""

   저희도 경영진이 집요하게 출근하라고 밀어부치는데, 그 분들 집에서 얼마나 놀았으면 저럴까... 싶더군요, 물론 대놓고 물어보진 못했습니다;;; =3=3=3

   산업화이후 원거리 출퇴근으로 집과 일터가 멀어지면서 생기는 여러 부작용을 해결할 수 있는 기회인데 진짜 접근 가능한 미래를 밟아버리지 않았으면 좋겠네요.

   기업에서 재택업무의 효율성을 얘기하기 전에 기업의 출퇴근 접근성에 대해서도 논의가 이뤄지면 좋을것같네요. 서울/도쿄/캘리포니아 등 유수의 대기업들이 모여있는 곳의 집값과 통근시간 때문에 일하는 입장에선 재택으로 업무를 하는게 삶의 질이 더 향상되는 측면이 있다고 봐서요.

   공감합니다

   원격근무가 업무 효율을 낮춘다는 데이터라도 있는걸까요. 개인적으로 그끼기에는 사무실에서 하나 집에서 하나 똑같은거 똑같이 해서 별 차이 없던데..

   아마 잘 안될 것 = 다른 회사 알아봐라

   처럼 들리는 군요
"
"https://news.hada.io/topic?id=10644","FCC 월별 요금 목록 작성을 요구하는 규칙 폐지 거부","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     FCC 월별 요금 목록 작성을 요구하는 규칙 폐지 거부

     * 미국 연방통신위원회(FCC)가 인터넷 서비스 제공업체(ISP)들의 요청을 거부하여 월간 요금 목록을 공개하는 요구사항을 없애지 않았다.
     * 미국의 주요 브로드밴드 제공업체를 대표하는 5개의 무역 단체가 관리적 부담과 불필요한 복잡성을 이유로 FCC에 철회를 요청했다.
     * FCC는 소비자들이 인터넷 서비스 선택 시 투명한 정보가 필요하다고 주장하여 굴하지 않았다.
     * FCC의 명령은 소비자들에게 명확하고 정확한 정보를 제공하기 위해 제공업체가 모든 월간 요금을 표시해야 한다는 요구사항을 확정한다.
     * ISP들은 정부 기관에서 부과하는 요금을 표시해야 한다는 요구사항에 반대하며 이에 이의를 제기했다.
     * FCC의 규정에는 월간 가격, 추가 요금, 도입 기간 요금, 데이터 용량 제한, 초과 데이터에 대한 요금, 성능 지표 등의 정보가 포함되어 있다.
     * 이 규정은 효력을 발생하기 전에 연방 예산 관리국의 검토를 받아야 한다.

        Hacker News 의견

     * ""요금 목록 작성이 어렵다""고 주장하는 인터넷 서비스 제공업체들의 투명성과 잠재적인 숨겨진 요금에 대한 우려
     * FCC가 요금 목록 작성을 요구하는 규칙을 폐기하지 않기로 한 것은 더 많은 투명성을 위한 긍정적인 조치로 여겨짐
     * 일부 의견 제시자들은 호텔 등 다른 산업에서의 미기재 요금에 대한 좌절을 표현하며, 이러한 관행에 대한 단속을 희망함
     * 한 의견 제시자는 인터넷 서비스 제공업체들이 요금 목록 작성에 대한 이의를 제기함에 있어 모든 제공업체에게 공정한 기회가 주어져야 한다고 제안함
     * FCC의 이의에 대한 대응은 풍자적이고 심각한 해결책이 아니라고 여겨짐
     * 한 의견 제시자는 인터넷 서비스 제공업체들이 정확하게 요금 목록을 작성하지 못한다면 정부의 세금과 요금을 적절하게 처리하고 납부할 수 있는 능력에 대해 우려를 표명함
     * 전체 가격과 가격만을 공개하는 것의 중요성이 강조됨
     * FCC가 데이터 할당량에 대한 복잡한 세부 사항을 라벨에 표시하지 않기로 한 결정은 단순화를 위한 긍정적인 조치로 여겨짐
     * 통과 수수료를 실제 요금과 구분하는 이의가 명확해지며, 해당 금액이 지방 정부의 일반 기금으로 사용된다는 것이 설명됨
     * 레스토랑에서 서비스 수수료와 주방 감사 수수료를 눈에 띄게 표시하기 위해 입법이 필요한 필요성에 대한 비교가 이뤄짐
     * 케이블 회사들이 요금을 숨기기를 원하는 것 외에도 이 규칙을 폐기할 유효한 이유가 있는지 의문이 제기됨
     * 미국의 의료 분야에서의 가격 투명성 부족이 이 규칙과 대비되어 강조됨
"
"https://news.hada.io/topic?id=10630","나의 카스트나의 카스트

     * 인도에서는 인구의 40-45%를 차지하는 기타 백인민족 (OBC) 범주를 소개하는 기사입니다.
     * OBC 범주에 속하는 작가는 자신의 정체성을 회복하고 대중에게 정보를 전달하며 학계의 다른 OBC 개인들에게 도움을 주고자 합니다.
     * 인도에서는 IIT와 같은 명문 기관의 교수진을 포함하여 종교에 기반한 차별이 흔히 있습니다.
     * 작가는 5개의 IIT에서 CS 교수진의 OBC 대표성에 대한 연구를 진행하였으며, 180명 중에 단 한 명의 OBC 교수가 발견되었습니다.
     * 작가는 OBC 개인들이 박사 학위나 교수직을 추구하는 데에 영감과 지원을 주기를 희망합니다. 대표성은 부족하지만 진전이 가능합니다.

        Hacker News 의견

     * 인도의 카스트 제도는 계층적이고 계급이 있으며, SC와 ST는 OBC보다 낮은 계급으로 간주됩니다.
     * 억압된 계급 내에서도 억압과 차별이 존재합니다.
     * 저자는 억압된 계급이 통일되고 서로를 지원한다면 상황이 개선될 수 있다고 제안합니다.
     * IIT 칸푸르에서 카스트에 기반한 차별에 대한 상세한 기사가 있으며, 차별의 존재를 강조합니다.
     * 인도 정부는 IIT에서 후진 계급을 위한 좌석의 상당한 비율을 보장했지만, 학업 성취에 여전히 격차가 있습니다.
     * 댓글 작성자는 인도에서 카스트 차별에 반대하는 동지들을 만날 수 있을지 묻습니다.
     * 다른 댓글 작성자는 Cisco 사건을 언급하며 이 주제에 대한 게시물의 신뢰성을 의심합니다.
     * 댓글 작성자는 인도의 공립 대학에는 강력한 긍정적 대안 정책이 있다고 주장합니다.
     * 댓글 작성자는 교육 기관에서의 대표성에 대한 초점을 의문지어 봅니다.
     * 다른 댓글 작성자는 교직원 선발에서 카스트 차별을 입증하기 위해 증거가 필요하다고 제안합니다.
     * 범주적 편견에 기반한 차별은 받아들여지지 않는다고 댓글 작성자가 주장합니다.
     * 개인적인 경험은 인도 외에서도 카스트의 영향력을 강조합니다.
     * IIT의 교직원 구성에 대한 데이터는 전진 계급 출신이 대다수임을 보여줍니다.
     * 미국에서 카스트에 관한 책 추천이 언급됩니다.
"
"https://news.hada.io/topic?id=10651","동료가 훌륭한 일을 할 때, 그들의 매니저에게 알려주세요.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    동료가 훌륭한 일을 할 때, 그들의 매니저에게 알려주세요.

     * 동료의 우수한 업무에 대해 그들의 매니저에게 알리는 것은 도움이 될 수 있는 일반적인 관행이지만, 먼저 허락을 구하는 것이 중요합니다.
     * 동료의 목표와 일치하지 않는 칭찬을 하거나 적절하지 않은 수준의 칭찬을 하는 것은 역효과를 낼 수 있습니다.
     * 매니저들이 인식하지 못하는 업무, 다른 부서의 업무 또는 비공개 채널의 업무를 강조하는 것이 중요합니다.
     * 주니어 동료들의 공헌을 인정하는 것은 항상 좋습니다.
     * 동료의 훌륭한 업무에 대해 그들의 매니저에게 알리는 것은 매니저들이 승진을 위한 사례를 제시하는 데 도움이 됩니다.
     * 동료의 성취를 인정할 때 구체적이고 업무의 영향을 설명하는 것이 도움이 됩니다.
     * 동료가 자신의 수준을 초과하는 일을 할 때 강조하는 것이 중요합니다.
     * 인식 메시지를 동료에게도 보내는 것은 좋은 제스처입니다.
     * 공개적으로 인식하는 것은 신뢰도 구축과 협업을 촉진하는 데 도움이 될 수 있습니다.
     * 동료 보너스는 보다 공식적인 형태의 인식일 수 있습니다.
     * 경험 수준에 관계없이 누구나 동료의 성과를 인정함으로써 동료들을 도울 수 있습니다.
     * 자신의 업무에 대해 인식하는 사람들의 범위를 확대하는 것이 중요합니다.
     * 후원 및 ""어려움의 닻""이라는 방식으로 동료들을 지원하고 격려하는 다른 방법들이 많이 있습니다.
     * 이 기사 초안을 읽어주신 Sher Minn Chong, Allie Jones, 그리고 Kamal Marhubi에게 감사드립니다.

   2년전에 올라온 글이라, 긱뉴스에도 번역해서 올렸던 적이 있네요
   동료가 일을 잘했다면, 그 동료의 매니저에게 말해주세요

        Hacker News 의견

     * 공개적인 상황에서 칭찬을 받는 것이나 매니저가 자신의 업무 범위를 벗어난 도움을 알게 되는 것을 원하지 않는 사람들도 있습니다.
     * 맥락에 맞춰 칭찬하는 것은 도움이 되며, 누군가 자신의 일에 대해 이야기한 후에 스탠드업에서 할 수 있습니다.
     * 공개적으로 칭찬하고 비판은 비공개적으로 하는 것이 좋은 접근 방식입니다.
     * 동료들을 그들의 훌륭한 일에 대해 칭찬하면 다른 사람들이 더 좋아지고 더 잘 일하며 진정한 우정을 형성할 수 있습니다.
     * 칭찬하는 동안 직원에게 상처를 주지 않는 피드백을 주는 것에는 기술이 필요합니다.
     * 긍정적인 피드백을 경영진에게 강조함으로써 원하는 조직을 구축하는 데 도움이 될 수 있습니다.
     * 경영진의 부적절한 대응을 인지하고 자신의 선택으로 표현하는 것이 중요합니다.
     * 지원적인 작업 환경을 구축하는 것은 협업과 생산성을 향상시킬 수 있습니다.
     * 묻지 않고 피드백을 주는 것은 작은 위험을 가지지만, 칭찬을 주는 이점이 위험을 상쇄시킵니다.
     * 긍정적인 작업 문화에서 칭찬과 찬양은 빠르고 쉽고 빈번해야 합니다.
"
"https://news.hada.io/topic?id=10648","2023년 9월, 3가지 디자인 트렌드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         2023년 9월, 3가지 디자인 트렌드

     * 이달의 디자인 트렌드, ""단색 색상 체계, 잡지 스타일 레이아웃, 상자 안의 탐색 요소"" 에 대한 설명과 적용된 사이트들 소개
     * Monochrome Color Schemes: 같은 기본 색의 색조와 색상을 사용하여 우아하고 매혹적. 그러나 대조와 접근성을 유지하기 위해 웹사이트 디자인에서는 신중한 계획이 필요.
     * Magazine-Style Layouts: 레트로와 모던 요소를 결합하며, 대형 이미지, 넉넉한 공간, 과장된 헤드라인이 특징. 디자인 요소는 대체로 겹치지 않고 포함되어 평면적이고 읽기 쉬운 레이아웃을 구성.
     * Navigation Elements in a Box: 탐색 요소를 상자로 둘러싸서 눈에 띄게 하고 찾기 쉽게. 가독성과 상호 작용성 때문에 인기를 얻는 중.
     * 저자인 Carrie Cousins는 이런 트렌드들이 전체 사이트 디자인에 대한 신중한 고려와 계획을 필요로 한다고 강조. 이들은 기존 디자인에 쉽게 추가할 수 있는 요소가 아님.
"
"https://news.hada.io/topic?id=10727","Python 500줄로 C 컴파일러 작성하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Python 500줄로 C 컴파일러 작성하기

     * 저자는 파이썬 코드 500줄로 C 컴파일러를 작성하는 어려운 도전을 수행했음
     * 컴파일러는 단일 패스로, 구문 트리를 먼저 구축하고 기계 코드로 변환하는 일반적인 두 패스 컴파일러와는 다르게 파싱 중에 코드를 생성함
     * 컴파일러는 WebAssembly를 대상으로 하며, 이는 실용성보다는 호기심에서 비롯된 결정임. WebAssembly의 독특한 도전 과제들, 예를 들어 레지스터의 부재와 스택 머신의 사용이 강조됨
     * 500줄 제약으로 인해, 컴파일러는 구조체, 열거형, 유니온, 전처리기 지시문, 부동 소수점, 8바이트 유형과 같은 특정 C 기능을 지원하지 않음
     * 컴파일러는 c-testsuite의 220개 테스트 케이스 중 34개를 통과하며, 피보나치 수열을 계산하는 프로그램을 성공적으로 컴파일하고 실행할 수 있음
     * 컴파일러의 코드에 대한 자세한 분석을 제공하며, C 구문의 다양한 측면을 어떻게 처리하는지, WebAssembly와 작업하는 데 있어 어려움은 무엇인지 설명함
     * 컴파일러의 복잡성에도 불구하고, 코드 품질을 희생하고 모든 것을 단일 패스에서 수행하면 놀랍게도 간결할 수 있다는 것을 보여줌
     * 이러한 종류의 단일 패스 컴파일러가 그 간결함으로 인해 자체 호스팅 언어의 stage0로서 훌륭할 수 있다고 제안
     * sloccount 도구를 사용하여 코드의 줄 수를 측정하였으며, 이때 주석, docstrings, 공백은 제외하였음

        Hacker News 의견

     * 파이썬 500줄을 사용한 C 컴파일러 생성에 대한 기사, 1978년에 발표된 Tiny Pascal 컴파일러와 비교
     * 컴파일러는 싱글 패스로, 코드 생성이 파싱 중에 이루어지며, 이는 초기 컴퓨터의 제한된 메모리를 수용하기 위해 C에 특별히 설계된 기능
     * 자체 컴파일러 작성의 이점은 컴파일러, 인터프리터, 링커/로더 및 관련 시스템 소프트웨어를 이해하게 하며, 디버깅 노력을 돕고 개발자의 기술 수준을 향상시킴
     * 이 프로젝트는 x86 어셈블리를 생성하고, 이를 바이너리로 컴파일하며, 실행하는 TypeScript 프로젝트와 같은 다른 프로젝트와 유사
     * 기사는 명확한 설명을 위해 칭찬받으며, 이는 이상한 프로그래밍 언어(esolangs) 영역에서 재미있는 도전으로 간주됨
     * 이해하기 쉬운 코드 500줄로 C 컴파일러를 작성하는 작업은 경험 많은 개발자들에게도 수개월의 작업이 필요한 중요한 도전으로 간주됨
     * 기사는 Scheme to WASM 컴파일러와 같은 다른 작은 컴파일러에 대한 호기심을 자극함
     * 비교를 위해, 기사는 Ritchie의 가장 초기의 struct 컴파일러와 v7 Unix C 컴파일러를 포함한 다른 작은 C 또는 C와 유사한 컴파일러의 코드 라인 수(LOCs)를 언급함
"
"https://news.hada.io/topic?id=10647","Google Deepmind, 인간이 식별 불가능하고 삭제도 할 수 없는 AI 이미지용 워터마크 SynthID 개발","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Google Deepmind, 인간이 식별 불가능하고 삭제도 할 수 없는 AI 이미지용 워터마크 SynthID 개발

     * SynthID는 AI 도구에 의해 쉽게 감지되지만 인간의 눈에는 보이지 않는 방식으로 AI가 생성한 이미지에 워터마크를 추가
     * 워터마크는 이미지의 픽셀에 포함되어 있으며, 크롭 및 크기 조정과 같은 변형에도 강함
     * SynthID 워터마크는 deepfakes의 증가로 인한 AI 생성 이미지를 식별하고 감지하는 데 도움이 되도록 설계
     * 이 도구는 공개적으로 출시되며, 초기에는 Vertex AI 플랫폼과 Imagen 이미지 생성기를 사용하는 Google Cloud 고객에게 제공될 예정
     * SynthID가 테스트되고 개선됨에 따라, Google은 이를 더 많은 곳에서 사용하고, 작동 방식에 대해 더 많이 공유하며, 효과에 대한 더 많은 데이터를 수집하는 것을 희망
     * Google DeepMind의 CEO인 Demis Hassabis는 SynthID가 인터넷 전체의 표준이 되어 비디오 및 텍스트와 같은 다른 미디어에도 사용될 수 있도록 확장하는 것을 바라고 있음
     * SynthID의 출시는 광고 복사본부터 제품 사진에 이르기까지 다양한 목적으로 사용된 이미지의 원본을 확인해야 하는 고객을 위한 것
     * 차후계획으로 Google Slides와 Docs에 통합하거나, Chrome 확장 프로그램 또는 브라우저에 내장하여 웹 전체에서 AI가 생성한 이미지를 식별하는 것도 가능
     * SynthID의 출시는 해커와 개발자들이 시스템을 우회하는 방법을 찾기 위한 경쟁을 촉발할 것으로 예상되며, 이는 Google DeepMind로부터 지속적인 업데이트와 개선을 필요로 함
     * 비슷한 AI 감지 도구를 개발하는 다른 회사들과의 경쟁에도 불구하고, Google은 워터마킹이 웹에서 AI 생성 콘텐츠를 식별하는 솔루션의 핵심 부분이 될 것이라고 확신

   실제로 해당 기능이 나오면 금방 또 다른 AI 도구가 나타나서 SynthID를 지워주지 않을까 싶어요.

   안 지워지는 워터마크는 없던 것 같습니다.

   워터마크 지우는게 문제가 아니고 원본이 어떤거냐를 판별할 수 있는거죠. 지우면 사본인거고

   SynthID는 AI 생성 이미지를 판별하기 위한 기술이라 삭제되거나 대체되지 않는 것이 제일로 중요합니다. 그리고 인터넷 상의 모든 이미지에 SynthID가 적용되기 전까지는 워터마크 없다고 해서 사본이라고 판별할 수가 없죠.
"
"https://news.hada.io/topic?id=10634","Fomos: 러스트로 구축된 실험용 운영체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Fomos: 러스트로 구축된 실험용 운영체제

     * Fomos: Rust로 구축된 실험적인 운영 체제로, Unix 이외의 운영 체제 아이디어와 개발 도전을 탐구하는 것을 목표로 함.
     * 그 운영 체제는 그래픽 출력, 동적 할당, 동시 앱 실행 및 Virtio 마우스 및 키보드 지원 기능을 갖추고 있음.
     * Fomos의 앱은 함수로 이루어져 있으며 표준 라이브러리가 필요하지 않아 앱과 운영 체제 간의 단순한 계약을 가능하게 함.
     * Fomos의 Context 구조체는 메모리 할당 및 하드웨어 접근과 같은 운영 체제 기능을 앱에 제공함.
     * Fomos는 이전 버전과 호환되도록 설계되어 이전 버전용 앱을 우아하게 처리할 수 있음.
     * 그 운영 체제는 협력적 스케줄링을 사용하며 앱이 운영 체제에 제어를 양도하며 부팅 후에는 컨텍스트 전환 없음.
     * Fomos는 커널 루프를 단순화하고 샌드박싱, 디버깅 및 하드웨어 변경 측면에서 잠재적 이점을 제공함.
     * 그러나 보안과 협력적 대 선점적 스케줄링 접근 방식에 대한 도전이 있음.
     * Fomos는 아직 진행 중인 프로젝트로 영구 저장소, GPU 지원, 네트워킹 및 앱 간 데이터 공유 추상화 기능이 부족함.
     * 이 프로젝트는 Philipp Oppermann의 블로그에서 영감을 받았으며 darbysauter로부터 조언을 받았음.

        Hacker News 의견

     * 협력 스케줄링이 실패하기로 예측되는 주장은 과장되었다.
     * Fomos는 Rust로 개발된 실험적인 운영 체제이다.
     * Fomos에서 앱은 실제로 함수이다.
     * 운영 체제는 컨텍스트에 추가함으로써 다른 앱에 새로운 기능을 추가할 수 있다.
     * Fomos는 새로운 기능을 도입하면서 기존 시스템과의 호환성을 달성하려고 한다.
     * Fomos의 디자인은 비동기 작업과 네트워킹을 효율적으로 지원하기 어려울 수 있다.
     * 신뢰할 수 없는 협력 앱으로 인해 보안과 안전성이 저하될 수 있다.
     * Fomos는 흥미로운 아이디어와 개선 가능성을 가진 취미용 운영 체제이다.
     * 저자는 Barrelfish OS에서 영감을 얻을 수 있다.
"
"https://news.hada.io/topic?id=10695","끓는 물속 개구리인 '디지털 자유(Digital Freedom)'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  끓는 물속 개구리인 '디지털 자유(Digital Freedom)'

     * 2011년부터 2035년까지의 디지털 자유 제한에 대한 가설적 타임라인
     * 2011년: Microsoft 가 Windows에 대해 Secure Boot 를 필수 요구사항으로 지정
     * 2017년: Chrome의 Widevine DRM 비활성화 불가능
     * 2017년: Microsoft가 Window 10 S 를 릴리즈, 써드 파티 앱 설치를 막은 버전
     * 2020년: 구글이 하드웨어 기반 기기 무결성 감사를 도입하여 대체 ROM을 무력화
     * 2020년: 애플이 MacOS에 앱의 인증을 강제
     * 2021년: 마이크로소프트가 TPM2.0을 Windows의 필수 요구사항으로
     * 2022년: 애플이 ""Private Access Tokens"" 을 도입. 웹 리퀘스트가 '합법적인 장치'로 부터인지 검증하는 메커니즘
     * 2023년: Google이 Chrome에 웹 환경 무결성(WEI) 검사를 도입
     * 2023년: 프랑스가 2023년에 SREN 법안을 제안. 브라우저가 정부에서 제공하는 차단 목록을 강제로 적용하도록 요구
     * 현재
     * 2024년: Youtube, Gmail, Spotify, 은행 등 주요 웹사이트들이 내부 사용자 평판 점수를 위해 Google의 WEI API를 사용하기 시작
     * 2025년: Google이 보안 문제로 인해 Play 스토어 외부에서 Android 앱을 설치하는 기능을 제거
     * 2026년: Windows 12가 ""S 모드""가 기본적으로 활성화된 상태로 출시되어, 제3자 앱을 제한
     * 2027년: Chrome과 Safari에서 WEI 미준수 웹사이트를 ""안전하지 않음""으로 표시
     * 2028년: Chrome 스토어에서 광고 차단 확장 프로그램이 금지
     * 2029년: Windows 14 Home이 ""S 모드""를 영구적으로 만들어, 제3자 앱의 실행을 막음
     * 2030년: ARM 기반 Windows 기기의 시장 점유율이 x86_64를 앞질러감
     * 2031년: Chrome이 사용자의 지역 정부에서 제공하는 웹사이트 차단 목록과 함께 출하
     * 2032년: Chrome이 Linux에 대한 공식 지원을 중단하며, 이는 WEI 검사를 만족시키는 것이 불가능하다고 주장
     * 2033년: 미디어 플레이어 앱이 앱 스토어에 게시되기 위해서는 DRM 검사를 구현해야 함
     * 2034년: VPN이 대부분 전 세계적으로 금지
     * 2035년: 메시징 앱(이메일 클라이언트 포함)이 ""핵심 애플리케이션""으로 간주되어, 출판 전에 정부의 승인을 받아야 함
     * 저자는 디지털 자유의 점진적인 손실을 설명하기 위해 끓는 물속 개구리의 비유를 사용

   90년대 후반~2000년대 초반에 사람들이 생각했던 인터넷의 순기능과 용도는 성선설 같은 것에 불과했던걸까요? 안타깝네요..

   나열해서 보니 점점 나빠지는 게 보이는 것 같기도 하네요...

        Hacker News 의견

     * 디지털 자유의 점진적인 침식에 대한 기사, '끓는 개구리' 비유를 통해 너무 느리게 변화해 늦게 깨닫는 상황을 설명
     * 댓글러들은 리눅스 기반 PC, 오픈소스 Android 버전, 분산형 메시징 앱 등 주류 기술에 대한 대안의 성장을 강조
     * Google 서비스에 대한 대안으로 ProtonMail, Tutanota, OpenStreetmap의 상승세도 언급
     * 일부 댓글러들은 기사의 시간표에 대해 회의적이며, 제안된 일부 변화들(Windows 10 S 및 웹 환경 무결성 등)이 아직 성공적으로 이루어지지 않았거나 구현되지 않았다고 지적
     * 다른 이들은 기술에서 윤리적 기준과 비즈니스 필요성을 균형있게 조화시키는 새로운 철학적 움직임을 주장
     * 브라우저 단일문화를 피하기 위해 Chrome 대신 Firefox 사용을 촉구
     * 일부 댓글러들은 온라인 저작권 및 콘텐츠 정책의 강화 시행, 그리고 소셜 미디어의 중앙집중화에 대해 논의
     * 디지털 자유를 보호하는 정부와 법적 틀의 역할도 논의됨
     * 소수의 댓글러들은 CloudFlare의 잠재적 위협과 Digital Markets Act가 Play 스토어 외부에서의 앱 설치에 미치는 영향을 지적
     * 한 댓글러는 '끓는 개구리' 비유를 정정하며, 개구리는 물이 너무 뜨거워지면 물에서 뛰어나온다고 주장
"
"https://news.hada.io/topic?id=10705","GitHub, Codespaces의 VM을 AMD 기반으로 변경하여 비용을 50% 절감","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GitHub, Codespaces의 VM을 AMD 기반으로 변경하여 비용을 50% 절감

     * Github 은 Codespaces 를 자신들 전체 플랫폼을 빌드하는 데도 사용
          + 대형 Ruby Monolith가 있어서 CPU와 램을 많이 필요로 함
     * AMD CPU 기반 VM으로 변경한 뒤, 비용이 50% 절감
     * 이를 기반으로 사용자에게 같은 가격에 두배의 RAM과 10~30% 향상된 CPU 성능을 제공

   A！M！D！

   요즘 AMD가 정말 잘나가네요.
"
"https://news.hada.io/topic?id=10712","역사학자들이 점점 더 강력한 동기를 가지고 극적인 이야기를 전달하게 되는 추세","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              역사학자들이 점점 더 강력한 동기를 가지고 극적인 이야기를 전달하게 되는 추세

     * UCL의 과학 기술 강사인 Jenny Bulstrode의 최근 논문은 산업혁명의 주요 인물인 Henry Cort가 자메이카의 흑인 노예들로부터 그의 혁신을 훔쳤다고 주장한다.
     * Bulstrode의 논문은 학계 동료들에게 널리 칭찬받았으며 주요 매체에서도 보도되었다.
     * 그러나, 혁신 역사 전문가인 Anton Howes와 Oliver Jelf는 Bulstrode의 논문이 증거 부족을 지적하며 그 중심 주장을 반박했다.
     * 이 기사는 Bulstrode의 논문이 영국과 서양의 경제적 성공이 대부분 흑인의 창의력과 아이디어의 착취 덕분이라는 역사 연구의 인기 있는 서사에 부합하기 때문에 그녀의 동료들에게 받아들여졌다고 제안한다.
     * 저자는 역사학자들이 서사와 이야기에 대해 더욱 회의적이어야 한다고 주장한다. 그것들은 현실을 왜곡하고 잘못된 결론을 내릴 수 있다.
     * 저자는 또한 Bulstrode의 논문이 어떻게 역사학이 주목을 받고 영향을 미치는 드라마틱한 이야기를 전하고자 하는 욕구에 점점 더 영향을 받고 있는지를 예로 든다.
     * 기사는 독자들에게 서사와 이야기, 특히 이미 존재하는 신념이나 이데올로기에 깔끔하게 맞아떨어지는 것들에 대해 회의적이어야 한다고 경고한다.

        Hacker News 의견

     * 역사학자들이 주목과 영향력을 얻기 위해 드라마틱한 내러티브를 만드는 문제에 대한 논의
     * 일부 댓글에서는 저자인 Bulstrode가 고의적으로 정보를 잘못 표현했을 수 있으며, 동료들이 그녀에게 기록을 바로잡도록 권장해야 한다는 의견 제시
     * 학계가 사회 정의 영향을 정당화하고 보조금을 확보하는 필요성에 영향을 받아 편향된 연구가 이루어질 수 있다는 우려
     * Tyler Cowen의 TED 강연 ""단순한 이야기에 의심하라""가 관련 주제로 추천됨
     * 1780년에 슬리팅 밀이 발명되었다는 주장이 잘못되었다는 한 댓글, 실제로는 1640년경 미주에서 처음으로 건설됨
     * 일부 댓글에서는 역사학자들이 드라마틱한 내러티브를 위한 동기를 가지고 있다는 주장을 증거 없이 주장한 기사를 비판
     * 논문의 주장을 지지하기 위한 출처의 범위를 넓혀야 한다는 촉구, 단일 작품에 집중하는 대신
     * '스토리 편향' 개념에 대한 논의, 이야기를 믿는 것이 분석적 지능에 부정적인 영향을 미칠 수 있다는 제안
     * 관련 논의 ""역사에 복제 위기가 있는가?""에 대한 링크 제공
     * 일부 댓글에서는 이야기 자체가 문제가 아니라 이데올로기적으로 동기 부여된 사고가 문제라는 의견 제시
     * 기사 자체가 매력적인 내러티브로 지적되며, 일부 댓글러들이 논쟁의 다른 측면을 듣는 데 관심을 표현
"
"https://news.hada.io/topic?id=10694","Figma를 빠르게 유지하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Figma를 빠르게 유지하기

     * 프로젝트가 점점 복잡해지며 성능 테스트를 위한 자원도 많이 증가해 새로운 테스트 시스템이 필요해졌음.
     * 모든 코드 변경 사항에 대해 테스트를 진행하면서, 10분 안에 테스트가 완료되고, 결과를 상세하게 분석할 수 있는 꿈의 테스트 시스템을 원함.
     * Figma의 성능은 주로 CPU와 GPU에 영향을 받았으며, 여러 방식의 장단점을 고려해 크게 2가지 시스템으로 구성함.
     * 클라우드 기반 시스템
          + Headless Chromium을 실행하는 GPU가 있는 VM을 사용하여 병렬로 테스트를 실행하여 10분 내 테스트가 완료되도록 함.
          + VM 특성상 외부 요인에 영향을 쉽게 받으므로 20%가량의 여유를 둠.
     * 하드웨어 기반 시스템
          + 오래된 노트북(구형 맥북, Windows 노트북, 크롬북 등)들로 구성된 시스템에서 모든 테스트를 예약하여 순차적으로 실행.
          + 테스트는 오래 걸리지만, 실제 장치에서 나타나는 미묘한 성능 변화를 상세하게 추적함.
     * 두 가지 테스트 시스템을 구성하고 나서 성능 개선을 위해 노력한 결과 긍정적인 결과를 얻을 수 있었음.
     * 렌더링 성능 개선
          + GPU가 최신 CPU가 없는 환경에서 렌더링 성능을 개선하기 위한 노력.
          + 스트레스 테스트를 통해 상세하게 조사한 결과, 일부 기능이 몇몇 하드웨어에서 큰 오버헤드를 발생시키고 있었음.
          + 렌더링 시간을 상세하게 분할하여 로컬 작업에 우선을 둔 새로운 알고리즘을 구현하여 구형 하드웨어에서 효과적으로 성능을 개선함.
     * FigJam 성능 개선
          + 테스트를 작성하는 건 어려웠지만, 기존에 고객 문의나 지표를 보고 수정하던 방식에서, 테스트를 보고 미리 문제를 수정할 수 있게 됨.
          + CSS의 미묘한 성능 차이 등으로 인해 쉽게 발견하기 어려운 문제도 테스트를 수십 번 반복하며 발견하고 수정할 수 있었음.
          + 특히 성능 저하가 일어난 코드의 변경 사항을 정확하게 추적할 수 있어 도움이 됨.
     * 성능 개선은 까다로운 영역이지만, 사람이 생각하는 것과 실제는 다른 경우가 많으므로 테스트와 성능 측정이 아주 중요함.

     * HN 스레드

   테스트를 통해 성능 개선을 한 건 좋은데... 여전히 Figma는 심각하게 느린 것 같아요.
   HN 댓글에도 엄청나게 느리다는 불만이 꽤 많네요. -_-

   특히 Adobe에 인수된 이후에 엄청나게 느려졌다고 느끼는데 (그 전에는 생각보다 빨랐는데...)
   기분 탓이겠죠?

   HN 스레드의 AI 요약
     * skhameneh: 웹어셈블리로 선구적인 작업을 하고 GitHub에서 탐색 과정을 공유한 Figma의 전 CTO Evan Wallace에게 찬사를 보냅니다.
     * imslavko: Evan과 Jamie의 이전 블로그 게시물을 공유하며 Figma의 WebAssembly로의 전환, 성능 테스트 및 시간 경과에 따른 개선 사항을 자세히 설명합니다.
     * fhub: 에반 월리스가 2012년에 Figma를 공동 설립하고 2021년 퇴사하기 전까지 10년간 CTO로 근무했음을 언급합니다.
     * antoineMoPa: 기업이 후자에서 타협해야 한다고 가정할 때 Figma가 상업적 성공과 기술적 우수성을 모두 달성한 것에 놀라움을 표합니다.
     * tobyjsullivan: 대부분의 스타트업이 품질보다 기능에 우선순위를 두는 반면, 몇몇 스타트업은 새로운 기술을 혁신하여 상업화할 수 있는 만큼 Figma는 예외라고 설명합니다.
     * tmpz22: 현재 표준은 지속적 통합 패스가 되어야 한다며 최근 제품을 기반으로 소프트웨어에 대한 편협한 기대치를 비판합니다.
     * yellow_lead: Figma의 20% 오차 범위를 고려할 때 다른 사람들은 노이즈가 많은 성능 테스트 환경을 어떻게 처리하는지 의문을 제기합니다.
     * imslavko: Figma의 보조 하드웨어 기반 테스트 시스템과 가상 머신의 편차를 해결하기 위해 기준선을 계산하는 방법에 대해 자세히 설명합니다.
     * koenbok: 전용 테스트 Mac Mini로 15%의 편차에 직면하여 궁극적으로 사용자 모니터링이 가장 신뢰할 수 있다는 것을 알게 된 Shares Framer.
     * chrisdbanks: 유럽에서 로드 시간 문제와 이미지가 빠르게 로드되지 않는 것을 보고 Figma가 미국 외 지역에서 적절하게 테스트하는지 의문을 제기합니다.
"
"https://news.hada.io/topic?id=10641","DevTools Tips - 브라우저 개발자 도구용 팁들 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   DevTools Tips - 브라우저 개발자 도구용 팁들 모음

     * Chrome, Edge, Firefox, Polypane, Safari 등의 브라우저에 내장된 개발자 도구용 팁들 모음
     * 현재 153개의 팁이 등록
     * 기능별 자세한 설명과 함께 지원하는 브라우저를 함께 표기
     * GitHub을 통해 추가/수정 가능
"
"https://news.hada.io/topic?id=10662","Show GN: 서브폰에서 메인폰으로 푸시를 전달 해주는 Notina","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Show GN: 서브폰에서 메인폰으로 푸시를 전달 해주는 Notina

   Notina는,
     * 안드로이드 서브폰의 푸시 알림을 아이폰으로 전달해주는 서비스입니다.
     * 비슷한 기능을 하는 Pushbullet의 아이폰 App이 스토어에서 내려가는 바람에, 사이드 프로젝트 삼아 그냥 직접 개발했어요.

주요 기능

     * 안드로이드 폰의 푸시 알림 영역을 읽어, 나의 다른 폰이나 PC로 보냅니다.
     * 원하는 앱만 선택하여 푸시를 전달합니다.
     * 서브폰에 전화가 오면(Incoming Call) 푸시로 '수신 전화' 라고 알려줍니다. (T전화 이용시)
     * 부재중 전화도 푸시 알림을 해 줍니다.
     * 단대단(E2E) 암호화로 사용자가 직접 암호화키를 입력합니다.
     * 크롬 확장 프로그램을 통해 편리하게 메시지를 확인할 수 있습니다.

적용 플랫폼

     * iOS, Android, 웹, 크롬 확장 프로그램

파생된 기능

     * 몰톡(1 안 없애고 메시지 몰래 읽기)
     * 삭톡(상대방이 삭제한 카톡 읽기)
     * 푸시 저장(휘발성인 푸시를 저장할 수 있습니다)

사용 사례

     * 쇼핑몰 운영시 주문전용폰이 있다면, 이 폰으로 오는 주문들을 전직원이 PC(또는 개인폰)에서 확인이 가능합니다.
     * 주문 뿐 아니라, 앱으로 오는 입금내역도 모두 확인이 가능합니다.
     * 회사에서 준 법인폰과 개인폰 두 개를 항상 들고다녀야 하는 부담을 조금 덜어줍니다.


   앞으로 개발해야할 것들이 눈에 많이 보입니다.

   모든 플랫폼을 1인 개발로, 부족한 시간을 내서 하다보니 완성도 면에서 조금 떨어질 수도 있습니다.

   사용해보시고 의견 주시면 최대한 의견 반영하도록 하겠습니다.

   반대로는 불가능한가요?
   아이폰알림을 안드로이드에

   네 불가능합니다. iOS에서 권한을 허용을 안해줘서요.

   저는 업무용폰과 개인폰이 따로 있어요.
   업무용폰은 회사 IT에서 관리해서, '개인'/'업무' 이렇게 런처에서,
   앱이 구분되어서 표시 됩니다.
   '업무' 영역에 설치된 앱들 중에서, teams 나 slack notification 만 이라도,
   개인폰으로 전달되어도, 많이 유용할 것 같습니다.

   아! 저도, 업무용으로 분리해서 한번 해 보겠습니다!

   앱안에서 회원가입할 때, 보이는 이미지 어떻게 만드셨는지 궁금합니다.

   안드로이드 배경화면 말씀하는 것일까요?
   강릉 경포호에서 제가 직접 찍은 사진입니다.

   https://bit.ly/3PoqjQe

   사람이미지는 어떻게 만드셨어요?
   AI로 만드신건가요?

   네? 사람이미지가 있나요? 어느 화면인지... AI로 제가 뭐 만든건 없습니다~

   이 화면 아닌가요?

   https://lh3.googleusercontent.com/pw/…

   여기 있는 사람 이미지요, 잘 만득
   셨더라구요.
   https://drive.google.com/drive/folders/…

   아, 무료 일러스트 사이트에서 받았어요

   사이트 어딘지 알 수 있을까요?

   사용해 보려고 했는데 회원가입 하는 창구가 안보이네요 회원가입은 어떻게 하나요?

   안드로이드 앱에서 ""이용하기"" 누르면 회원가입이 됩니다.

   아이폰앱 수정하여 스토어에 배포했습니다~
   오류가 있는 분들은 홈페이지에 실시간 채팅상담으로 연락주세요

   딱 필요한 앱이네요.
   사용해 보면서 문의 드려볼게요. ^^

   감사합니다. 홈페이지에 실시간 채팅창도 달아놨습니다. 버그나 개선점 많이 알려주세요

   역시 여러명이 써 주시니 버그가 발견되네요.

   반드시 안드로이드먼저 설치하고 가입한 후, 아이폰을 나중에 설치하세요.

   주말동안 버그는 고쳐볼게요.

   와 1인개발이시군요. 저도 아이폰이 메인, 안드로이드가 서브라서 가끔 알림 체크하기 불편하다는 생각을 했었거든요.. 기능과 사례를 리스트업 하신 걸 보니 사업아이템을 잘 잡으셨다는 생각이 드네요. 개인 뿐만 아니라 다양한 형태의 기업에서도 활용할 수 있겠어요. 기획력에 박수를 치고 싶네요

   감사합니다! 열심히 해 볼게요

   뿐만아니라 다양한 분야를 망라한 스택도 멋지네요..^^

   따로 이슈전달 가능한 창구가 있을까요?

   홈페이지에 실시간 채팅상담 달아놓았습니다~

   예전 홈페이지 에 문의하기로 보내주시면 되거나,
   https://notina.tera.co.kr/contact-us-2/

   teracokr@gmail.com 으로 보내주시면 됩니다.

   기능 오류나 개선에 대한 의견이 많이 필요합니다.
   혼자 개발하면 매몰되어 못 보는 것이 많아서요^^

   안드에 Windows와 연결 기능이 연결 안 되는 경우가 종종 있어서 불편함이 좀 있었는데, 좋아 보입니다.
   특히 E2E를 지원한다고 하니 기쁘네요.

   혹시 프로젝트를 오픈 소스화하실 생각도 있으신가요?
   아니면 프리미엄 서비스 같은 걸로 비즈니스 모델을 찾아볼 예정인가요?

   E2E를 알아봐주시니 고맙습니다. 좀 고생했습니다.

   더 다듬어서 비즈니스 모델 붙여 볼까 생각중입니다.

   참, 아이폰만 가지고 계신 분은 필요없는 서비스입니다.

   오~ 좋은 아이디어이신데요?
   많은 발전을 기대해봅니다.

   감사합니다! 잘 발전시켜보겠습니다.

   와우 안드로이드, IOS, 웹 3개 동시에 가능한게 사이드 프로젝트라니... 대단하네요

   개발은 플러터 같은걸 쓰신 걸까요?

   기술 스택을 썼다가 지우긴했습니다만...
     * iOS: swift
     * AOS: java
     * WEB: nodejs + nextjs
     * Chrome Ext: reactjs
     * Demon: Python
       입니다^^

   와우 java, swift 등등을 혼자 다 하시다니
   능력자시네요 ㄷㄷ...

   아, 뭐랄까요...
   주변에 보니 이정도 하시는 분들도 많이 계시더라구요..

   한 랭귀지에 집중을 못하다보니,
   각 언어에 깊은 조예는 없고
   구글링, chatGPT의 도움을 많이 받고 있어요^^
"
"https://news.hada.io/topic?id=10655","Microsoft LIDA - LLM을 이용한 시각화/인포그래픽 자동 생성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Microsoft LIDA - LLM을 이용한 시각화/인포그래픽 자동 생성

     * IGM(이미지 생성 모델)과 LLM(대규모 언어 모델) 기반의 grammar-agnostic 한 시각화 및 인포그래픽 생성 도구
     * 4개의 모듈로 구성
          + SUMMARIZER: 데이터를 자연어 요약으로 변환
          + GOAL EXPLORER: 해당 데이터에서 시각화 Goal을 나열
          + VISGENERATOR: 시각화 코드를 생성/정제/실행/필터링
          + INFOGRAPHER: IGM을 이용하여 데이터에 충실한 그래픽을 생성
     * Python API 제공
     * 하이브리드 UI(직접 조작 또는 다국어 자연어)로 인터랙티브 차트,인포그래픽,데이터 스토리 생성
"
"https://news.hada.io/topic?id=10690","PSA: Discord를 기반으로 한 사업을 하지 마세요. ASN 게시로 인해 7년 계정이 차단되었습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      PSA: Discord를 기반으로 한 사업을 하지 마세요. ASN 게시로 인해 7년 계정이 차단되었습니다.

     * 스타트업들이 Midjourney AI와 같이 전체 사업을 Discord에 기반하고, Discord 자체가 그들의 구독 시스템으로 사람들이 그렇게 하도록 밀어붙이는 추세가 있습니다.
     * 몇 일 전에 제 7년 계정이 그들의 명백한 오류로 인해 경고 없이 차단되었다는 사실을 알게 되었습니다.
     * 계정이 차단된 몇 시간 전에 저는 이렇게 보이는 비-Discord 서버에 연결된 ASN(기본적으로 ISP) 목록을 게시했습니다:
     * ASN을 모르는 사람들은 아마도 그것들이 주소라고 가정할 것입니다. 이것은 개인 정보가 아니며, 이 정보를 개인에게 연결할 방법이 없습니다.
     * 티켓을 열었고, 받은 유일한 답변은 차단이 취소되지 않고 계정이 14일 내에 삭제될 것이라는 것이었습니다.
     * Twitter에 게시해 보았지만, 그들은 나를 선택적으로 무시하면서 다른 모든 사람에게 답변하였습니다. 서브레딧에 제출한 모든 것이 즉시 삭제되었습니다.
     * Discord와의 첫 번째 문제는 아닙니다. 그들은 몇 년 전에 수천 줄의 채팅 중에서 미성년자라고 말한 1명 때문에 서버를 삭제하겠다고 위협했습니다.
     * Discord를 기반으로 사업을 시작하기 전에 두 번 생각하십시오.

        Hacker News 의견

     * 기사는 사업 주인의 통제 아래 있지 않은 플랫폼인 Discord를 기반으로 사업을 운영하는 위험성에 대해 논의한다.
     * 댓글 작성자들은 플랫폼 또는 초대 회사에 의한 부당한 대우 가능성과 통제력 부족에 대해 우려를 표현한다.
     * Discord가 지식 기반, 지원 시스템, 조직성, 전문성이 부족하여 비즈니스 용도로 설계되지 않았다는 일반적인 합의가 있다.
     * 많은 사용자들은 Discord를 게임과 일상 대화를 위한 플랫폼으로 보며, 심각한 비즈니스 목적에 적합성을 의문시한다.
     * 일부 댓글 작성자들은 Discord를 사용하는 비즈니스에 대해 회의적으로 보며, 전문성이나 진지함이 부족하다고 연관시킨다.
     * Discord가 비즈니스 커뮤니케이션과 데이터의 무책임한 관리자가 되는 것에 대한 우려가 있다.
     * 사용자들은 특정 서비스에 접근하기 위해 Discord의 이용 약관을 받아들여야 하는 것에 대해 걱정을 표현한다.
     * 일부 댓글 작성자들은 Discord에 ASNs (Autonomous System Numbers)를 게시하는 결정에 대해 의문을 제기하며, 잠재적인 개인정보 보호 문제를 언급한다.
     * Discord와 같은 단일 실패 지점을 중심으로 사업을 구축하는 것에 대한 위험 회피 감정이 일반적이다.
     * 위험에도 불구하고 Discord, OpenAI, AWS, Shopify와 같은 플랫폼을 기반으로 하는 것에는 기회가 있다는 것을 일부는 인정한다.
"
"https://news.hada.io/topic?id=10643","FreeBSD, 이제 AWS Firecracker에서 25ms 만에 부팅 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              FreeBSD, 이제 AWS Firecracker에서 25ms 만에 부팅 가능

     * MicroVM은 지난 5년동안 기술 R&D 분야에서 뜨거운 영역
     * 핵심 아이디어는 IBM이 1960년대 하이퍼바이저와 함께 발명한 일부 개념과 기술을 재창조
          + 다른 OS에서 게스트로 실행되도록 특별히 OS를 설계하는 것
          + VM내에서 실행되지만 가짜 하드웨어가 아닌 특정 하이퍼바이저가 제공하는 리소스(VirtIO)와 통신하도록 함
     * 상업적인 목표는 ""서버리스"" 컴퓨팅 성능을 제공하는 것
          + AWS Lambda 는 Firecracker 로 구동
          + Firecracker는 리눅스 커널에 내장된 KVM 하이퍼바이저를 기반으로 함(기존 AWS는 Xen 하이퍼바이저 기반이었음)
          + Linux-On-Linux
     * FreeBSD가 25ms 에 부팅 가능한 동일 환경에서 Linux는 75~80ms가 걸림
     * FreeBSD Kernel 개발자인 Colin Percival이 처음에 부팅속도 개선 작업을 시작 할때 10초 였지만 이제 400배 빨라진 것
     * 현재는 x86-64 에서 최적화 된것이지만, Arm64도 작업이 진행중
     * Firecracker 는 현재 가장 널리 알려진 microVM중 하나지만, 다른 제품들도 있음
          + QEMU는 microvm 가상플랫폼을 추가 했고, 온라인 개발환경 서비스인 Hocus는 Firecracker 에서 QEMU로 전환했음
     * 클라우드 뿐만 아니라 다른 용도도 있을수 있음
          + 완전히 다른 OS위에 하나의 OS용으로 구축된 단일 프로그램을 실행하는 것은 여러 상황에서 유용

   80밀리초와 20밀리초의 차이가 실제 전체 서비스? 서비스 제공자 경험? 측면에서는 어느 정도의 차이일까요? 그냥 80밀리초도 충분한거 아닌가 싶은 느낌도 막연히 들어서요. 10초는 좀 너무했지만요.

   콜드 스타트 시간을 클라이언트와의 TLS 핸드셰이킹에 걸리는 시간보다 줄일 수 있으면 느린 콜드 스타트에 의한 일부 사용자의 초기 체감속도 저하나 혹은 이를 막기 위한 워밍업 등의 조치가 필요없다고 합니다.
   CloudFlare에서는 Workers 서비스의 로딩시간을 무려 5밀리초까지 줄여서 이를 정말로 달성했다고 자랑한 적이 있습니다.
     * CloudFlare가 Workers의 콜드 스타트 시간을 0으로 만든 방법
     * Eliminating cold starts with Cloudflare Workers

   클플 기술력 대단하네요...

   최근에 Colin Percival이 SYSINIT의 버블소트-머지소트 변경건으로 화제가 되긴 했는데,
   그 기반에 깔린 FreeBSD의 부팅속도 개선과 microVM 과의 상관관계를 같이 설명하고 있는 글이라 옮겨봅니다.

   Hocus - GitHub Codespaces의 오픈소스 대체제
   Firecracker를 QEMU로 대체한 이유

   FreeBSD는 부팅시에 7%의 시간을 SYSINIT들을 버블소트하는데 사용
   FreeBSD, SYSINIT의 버블소트를 머지소트로 변경

   아 그것과 같은 맥락에 있는 글이군요. 흥미롭네요
"
"https://news.hada.io/topic?id=10713","cola: 실시간 협업 편집을 위한 텍스트 CRDT 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    cola: 실시간 협업 편집을 위한 텍스트 CRDT 기술

     * Rust로 작성된 'cola'라는 실시간 협업 편집을 위한 텍스트 CRDT(Conflict-free Replicated Data Type)의 이론적 배경과 기술적 구현에 대한 설명
     * CRDT는 여러 사이트에서 동시에 복제 및 수정할 수 있는 데이터 구조로, 중앙 권한의 조정 없이도 수렴이 보장됨
     * 글의 내용은 문서의 상태 표현과 그것을 변형하는 편집, 코드에서 프레임워크를 효율적으로 구현하는 방법, 그리고 cola와 다른 Rust 기반 CRDT 라이브러리와의 벤치마크 비교로 나뉨
     * 저자는 텍스트에서 'Anchors'라는 개념을 소개하며, 이는 동시성을 활성화하는 방식으로 삽입과 삭제를 모두 지정하는 데 사용됨
     * 논문에서는 'Lamport timestamps'를 사용하여 Lamport timestamp에 따라 내림차순으로 정렬함으로써 충돌하는 삽입을 처리하는 방법에 대해 논의함
     * 저자는 삭제를 처리하기 위해 'tombstones'라는 개념을 소개함. tombstoned 문자는 삭제로 표시되지만 문서에는 계속 유지됨
     * 논문에서는 'G-trees'(grow-only trees)의 사용을 통해 시스템의 성능을 향상시키는 방법에 대해 논의함. G-trees는 양방향으로 순회할 수 있어 동일한 커서 위치에서 반복적인 편집이 매우 빠름
     * 저자는 cola와 Rust로 구현된 다른 세 가지 CRDT인 diamond-types, automerge, yrs와의 벤치마크 비교로 논문을 마무리함. Cola는 상류와 하류 방향 모두에서 다른 세 가지를 능가함
     * 저자는 cola가 현재 알려진 가장 빠른 텍스트 CRDT 구현이지만, 아직 제작 준비를 위해 해야 할 작업이 있다고 지적함. 예를 들어 undo/redo 및 기타 기능을 지원하는 것 등

        Hacker News 의견

     * 한 댓글에서는 G-트리가 기본적으로 부모 포인터가 추가된 B-트리이며, 이를 배열에 저장해도 그 구조가 근본적으로 변하지 않는다고 주장
     * Cola가 굵게, 기울임꼴 등과 같은 리치 텍스트 포맷팅 범위를 지원하지 않을 수 있다는 우려가 있으며, 댓글 작성자는 리치 텍스트 CRDT 알고리즘의 최신 기술로 Peritext를 제안
     * Cola와 Automerge 또는 Y.js/Yrs와 같은 유사한 기술 간의 성능이나 기능 비교에 대한 질문이 있음
     * 동적 배열에서 노드 소유권 문제에 대한 해결책이 논의되었으며, 이때 모든 노드는 동적 배열에 저장되고 인덱스는 다른 노드를 참조하는 데 사용됨
     * 'slotmap'이라는 crate를 사용하여 인덱스가 이동하거나 다른 값들을 가리키는 것에 대한 걱정 없이 삭제를 지원하도록 제안
     * 일부 사용자들은 Etherpad와 Word와 같은 다른 도구들이 실패한 프로젝트에서 Cola를 시도해보는 데 관심을 표현
     * 사용된 벤치마크의 공정성에 대한 비판이 제기되었는데, 이는 작업이나 실제 텍스트를 계산하고 저장하지 않기 때문
     * 이 Cola가 Ian Piumarta의 동명의 작품과 혼동되어서는 안 된다는 사항도 얘기됨
     * 텍스트 CRDT를 사용하여 브라우저에서 양식의 협업 편집을 가능하게 하는 것에 대한 질문도 있음
     * ""CRDT""라는 약어를 문서에서 정의하는 것이 제안되었는데, 이는 매우 흔하지 않아 독자들이 혼란스러워할 수 있기 때문
     * Cola를 tiptap/prosemirror 또는 다른 텍스트 편집기와 함께 사용하여 CRDT 기반의 협업 편집을 추가할 수 있는 가능성에 대한 질문도 제기
"
"https://news.hada.io/topic?id=10750","이 Duplo 기차 트랙은 너무 많은 긴장감을 받고 있는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   이 Duplo 기차 트랙은 너무 많은 긴장감을 받고 있는가?

     * 저자의 아이들이 만든 Duplo 기차 트랙의 긴장감에 대한 Puzzling Stack Exchange 토론 기사
     * 저자는 트랙이 너무 많은 긴장감을 받아 Duplo 부품이 파손될 가능성을 우려함
     * 트랙은 곡선과 직선 두 종류의 레일로 구성되어 있으며, 저자는 무리한 힘을 사용하면 13개의 곡선 레일을 원형으로 맞출 수 있지만, 이는 트랙에 너무 많은 긴장감을 주게 됨을 지적함
     * 저자는 트랙에 긴장감이 있는지 빠르게 파악하는 방법과 레일 조각을 제거하거나 추가함으로써 긴장감을 줄이는 방법에 대한 두 가지 주요 질문을 제기함
     * 저자는 수학적 계산보다는 신속하고 실용적인 해결책을 선호함
     * 저자는 또한 Duplo 레일 치수에 대한 사이트 링크를 제공하며, 이는 질문에 대답하는데 유용할 수 있음
     * 커뮤니티는 트랙의 평탄성을 확인하고, 연결 레일에서 불규칙한 간격을 찾아보고, 트랙 위에서 기차가 얼마나 부드럽게 달리는지 관찰하는 등 다양한 제안으로 응답함
     * 일부 사용자들은 각도와 위치의 불일치를 확인하는 등의 수학적 해결책을 제안하는 반면, 다른 사용자들은 아이들이 자신의 경험을 통해 과도한 재료 스트레스에 대해 배우게 하는 등 더 실용적인 조언을 제공함
     * 이 토론은 기술 지식, 실용적인 조언, 그리고 유머의 섞임으로, 기술에 익숙한 독자와 익숙하지 않은 독자 모두에게 매력적임

        Hacker News 의견

     * N개의 1XM 레고로 얼마나 많은 구조물을 만들 수 있는지, 회전 대칭과 0 제조 허용 오차를 가진 '이상적인' 레고를 고려한 조합론 문제에 대한 논의.
     * 한 사용자가 고정된 곡선 Duplo 트랙 세트로 생성할 수 있는 다양한 루프 트랙 레이아웃의 수에 대한 유사한 질문을 공유, 목걸이 문제 뒤의 수학을 이끌어냄.
     * 다른 사용자가 자신의 아이와 함께 나무 BRIO 기차 트랙을 조립하는 경험을 공유, 트랙 구성을 재작업하여 과도한 제약을 피함.
     * 사용자가 Duplo 레일에 대한 심층적인 소개 링크를 공유, ""new-type""과 ""old-type"" Duplo 레일 간의 차이점을 논의.
     * 각 트랙 조각을 2D 벡터로 보고 이를 합산하는 수학적 분석이 제안됨. 제로 텐션 설정에서 합계는 (0, 0). 이동은 모든 벡터의 평균으로 모델링됨.
     * 위험에 처한 약점은 연결된 트랙 중 하나의 합동 핀의 목으로, 심각한 불일치 하에 변형되거나 파손될 수 있음.
     * StackExchange 포럼은 상세한 논의와 통찰력을 위해 칭찬받지만, 한 사용자는 까다로운 관리자들로 인해 StackOverflow의 품질이 저하되었다고 지적함.
     * 사용자가 어릴 적 트랙을 따라 그리는 방법을 공유, 왼쪽 굽힘에 하나를 더하고 오른쪽 굽힘에 하나를 빼는 방법을 사용, 총합이 + / - 12, 24 등이 되도록 함.
     * 곡선 조각만 고려하는 유사한 질문에 대한 수학적 분석 링크가 공유됨.
"
"https://news.hada.io/topic?id=10746","PartyKit - 실시간 협동 앱을 만들기 위한 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    PartyKit - 실시간 협동 앱을 만들기 위한 플랫폼

     * AI 에이전트, 멀티플레이어 & 로컬-퍼스트 앱, 게임, 웹사이트를 배포 가능
     * Y.js, Automerge, Repicache, XState, tldraw 등의 협동 프레임워크와 잘 연동
     * 분석, 스테이징 환경, 시크릿 관리, 로깅 등의 기능 제공
     * Vercel, Netlify, AWS, Cloudflare, fly.io 등과도 잘 연동
     * Websocket, Fetch, Request-Response, WASM 등 웹 표준 기반
"
"https://news.hada.io/topic?id=10739","록스타가 스팀에서 크랙된 게임 복사본을 판매하고 있음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     록스타가 스팀에서 크랙된 게임 복사본을 판매하고 있음

        Hacker News 의견

     * 기사는 Rockstar에 의한 Steam에서 깨진 버전의 게임 판매 관행에 대해 논의한다.
     * 한 사용자는 오리지널 ROM의 부재로 인해 깨진 버전을 사용해야 했던 오래된 에뮬레이트된 게임을 제공하는 제품에 대한 작업 경험을 공유한다.
     * 또 다른 사용자는 이 관행이 예상보다 훨씬 흔하다고 지적하며, Steam에서 판매되는 Marc Ecko's Getting Up: Contents under Pressure의 Windows 포트가 DEViANCE 크랙인 예를 든다.
     * 한 사용자는 게임이 충돌하는 경험을 공유하며, 게임 자체보다는 크랙이 원인이었을 수 있다고 제안한다.
     * 한 사용자는 구입한 Prince of Persia PC 게임에서의 반-해적 전략에 대한 이야기를 공유하며, 게임 설명서에서 비밀번호가 필요했다고 말한다.
     * 한 사용자는 스크린샷에 표시된 실행 파일(testapp.exe)이 더 이상 사용되지 않지만, 배포에서 제거되지 않았음을 명확히 한다.
     * 또 다른 사용자는 이것이 새로운 관행이 아니라고 언급하며, Ubisoft의 no-CD DRM 대응에 대한 기사 링크를 제공한다.
     * 한 사용자는 이 관행을 ""이상한 버전의 오픈 소스""와 비교하며, 커뮤니티가 프로젝트에 기여하지만, 일부 커뮤니티 구성원을 추적하는 복잡한 생태계가 연관되어 있다.
     * 한 사용자는 이 관행에 대한 이해를 표현하며, 모든 스튜디오가 소스 코드와 게임을 구축하고 수정하는 방법을 아는 사람을 가지고 있을 수는 없다고 말한다.
     * 한 사용자는 소프트웨어 보관 생태계에서의 역할에 대해 Razor 1911, 크래킹 그룹을 칭찬한다.
"
"https://news.hada.io/topic?id=10631","마이크로소프트, 윈11에서 악성 팝업을 사용하여 사람들이 크롬을 포기하도록 유도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              마이크로소프트, 윈11에서 악성 팝업을 사용하여 사람들이 크롬을 포기하도록 유도

     * 마이크로소프트, 윈도우 11에서 팝업을 사용하여 구글에서 빙으로 전환하도록 시도
     * 팝업은 앱과 게임 위에 나타나며 마이크로소프트의 디지털 서명이 되어 있음
     * 마이크로소프트는 이 동작이 의도치 않은 것이라 주장하며 문제를 조사 중
     * 마이크로소프트는 빙과 엣지로 전환하도록 사람들에게 유도하기 위해 프롬프트와 팝업을 사용한 것은 처음이 아님
     * 마이크로소프트는 심지어 빙에서 크롬 검색 결과를 인수하여 엣지와 빙을 사용하도록 사용자를 설득함
     * 마이크로소프트는 이러한 팝업을 일부 사용자에게 실험한 후 피드백을 바탕으로 변경함
     * 구글도 크롬을 홍보하기 위해 프롬프트를 사용하지만, 마이크로소프트의 동작은 단순한 웹페이지 프롬프트를 넘어섬
     * 윈도우 사용자는 앱과 게임 위에 팝업과 광고를 다루지 않아도 됨
     * 윈도우는 사람들이 지불하는 생산성 도구이며 광고 플랫폼으로 다뤄지면 안 됨
     * 마이크로소프트가 접근 방식을 변경할 것으로 기대되지만, 이 동작은 여러 해 동안 계속되고 있음

   저도 웬만하면 윈도우는 순정상태로 쓰는걸 선호하는데 윈11은 도저히 안되겠어서 WinToys 같은 트윅 앱으로 필요없는 기능들을 전부 꺼버렸습니다.

   뉴스랑 광고만 개인화 시켜줘도 엣지 쓸만한데, 싫어요 아무리 눌러도 소용없더라고요

   새 탭 페이지 변경부터 가능하게 해주고 쓰라고 하길.. 새 탭 페이지에 보고 싶지 않은 뉴스, 광고들만 잔뜩 박혀있어서 어쩔 수 없이 크롬을 쓴다..

   win 10과 11을 같이 쓰고 있는데, 11은 정말 광고덩어리더라구요..

   저는 엣지를 쓰는데도 윈도우에서 뭐라 하는게 불편할 정도긴 해요.
   진짜 윈도우 - 마이크로소프트 OS가 나오면 좋을듯...

        Hacker News 의견

     * 소프트웨어 엔지니어는 애드웨어가 포함된 운영체제 때문에 Windows보다 Apple Silicon을 선호합니다.
     * ARM/Apple Silicon은 .NET 개발을 포함한 소프트웨어에서 잘 지원됩니다.
     * Windows는 악성 소프트웨어로 오해될 수 있는 팝업 알림을 표시합니다.
     * Windows 사용자들은 팝업을 무시하는 것에 익숙하며, 이를 끄는 방법을 모를 수 있습니다.
     * 마이크로소프트의 행동은 사용자에게 적대적으로 여겨지며, 점점 더 흔해지고 있습니다.
     * Windows 7은 마지막으로 좋은 Windows 버전으로 여겨집니다.
     * 마이크로소프트는 무료 업그레이드를 제공하여 서비스를 홍보하고 광고 대상 사용자를 겨냥합니다.
     * 일부 사용자들은 일상적으로 리눅스와 파이어폭스로 전환했습니다.
     * 마이크로소프트의 초점은 오피스, 엑스박스, 그리고 아주어에 있으므로, Windows 운영체제가 큰 영향을 주지 않고 사라질 수 있습니다.
     * 기업 컴퓨팅의 미래는 소프트웨어를 지원하기 위한 광고에 의존할 것입니다.
"
"https://news.hada.io/topic?id=10709","Observability 개념과 도구 발전과정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Observability 개념과 도구 발전과정

     * Observability 개념:
          + 시스템 외부 출력의 결괏값(지식)에서 시스템 내부 상태를 얼마나 잘 추론하는지 나타내는 척도
          + 출력값 측정에서 시스템 상태를 추정하도록 설계된 동적 시스템
          + 클라우드 환경이 대중화되고, 도커화된 앱과 마이크로서비스 아키텍처가 보편화되면서 Observability 필요
     * Observability와 모니터링 차이점:
          + 모니터링: 사용자가 수행하는 무엇. 무엇이 잘못됐는지 보여줌
          + Observability: 모니터링을 포함하는 상위 개념. 내부 동작 배경 정보를 풍부하게 제공하고, 심층적인 시스템 문제를 해결. 무엇이 ‘왜’ 잘못됐는지까지 보여줌
     * 조직에서 Observability가 필요한 상황:
          + 프로덕션에 이슈가 생기면 ‘문제 원인을 파악하는 데이터는 무엇이고, 이는 어디에 있으며, 데이터를 어떻게 봐야 하는가?’라는 의문이 들 때
          + 1분 전까지 괜찮던 서비스에 문제가 생겨 ‘근본 원인을 어디서 찾아야 하는가?’란 문제를 맞닥뜨릴 때
          + 조직에서 ‘개발팀이 고객이나 지원/운영팀보다 서비스 이상 증상을 먼저 알려면 어떻게 해야 할까?’ 를 고민할 때
          + 마이크로서비스의 서비스 오류, 성능 오류를 효과적으로 추적할 방법이나 ‘로그 또는 애플리케이션 성능 모니터링(APM) 형태로 이를 확인할 수 있을지’ 궁금할 때
     * Observability 도구 발전 과정:
          + 2010년대 이후로 IT 업계에 다양한 Observability 도구가 나옴
          + 2010년 구글이 대규모 분산 시스템 추적 인프라 ‘Dapper’를 선보임
          + 이후 우버와 트위터에서 분산 추적 시스템 ‘Jaeger’(우버)와 ‘Zipkin’(트위터)을 각각 만듦
          + 분산 시스템 동작을 계속 모델링하고, 설명하는 표준 API 세트인 ‘Open Tracing’이 나옴
          + ‘Open Census’ 공개: 애플리케이션 지표와 분산 추적을 수집한 다음, 백엔드에 데이터를 실시간 전송하는, 다양한 언어용 라이브러리 세트
          + 이어서 ‘프로메테우스’가 나옴
          + 2019년에는 Open Tracing과 Open Census를 통합한 ‘Open Telemetry(OTel)’라는 도구, API, SDK 모음 공개
     * Open Telemetry:
          + 벤더 중립 오픈 소스 Observability 프레임워크
          + 소프트웨어 성능과 동작을 분석하도록 돕는 원격 측정 데이터로 로그, 지표, 추적이 있는데 Open Telemetry는 이를 계측, 생성, 수집하고 내보내는 데 쓰임
               o 로그: 타임스탬프 메타데이터. 이슈의 근본 원인을 판단하는 데 쓰임
               o 지표: 서비스에서 측정한 키/밸류 태그를 갖는 통계 또는 집계 데이터. 런타임에 포착한 서비스의 측정값
               o 추적: 사용자와 애플리케이션에 발생한 이벤트 기록. 개별 리퀘스트가 전파되는 경로 기록
          + 사용방식: Observability 도구에서 알림 보냄->알림 내용 확인하고, 대시보드로 가서 문제 지점 확인->이 문제 지점에서 특정 부분을 상세하게 쿼리->로그를 찾아 확인->이 로그와 관련된 추적 데이터를 찾아 패턴화->여기서 문제 확인하고, 고치며 Observability 구현
          + 요즘 만든 대부분의 Observability 도구는 Open Telemetry를 기본 지원
     * Open Telemetry가 나온 이유:
          + 과거에는 각 Observability 백엔드가 도구로 데이터를 전송하는 자체 계측 라이브러리와 에이전트가 있었고, 코드를 계측하는 방식이 여러 가지였음
          + Observability 백엔드로 데이터를 보내는 표준화된 데이터 형식이 없음
          + 이후, 하나의 표준을 만들기 위해 Open Tracing과 Open Census가 통합돼 Open Telemetry가 나옴
     * SigNoz: 오픈 소스 APM 도구
          + 애플리케이션을 모니터하고, 문제를 해결하도록 도움
          + 분산 추적 기술을 사용해 사용자 소프트웨어 스택 파악
               o latency, requests per second, error rates 같은 애플리케이션 지표를 모니터링
               o CPU 이용이나 메모리 사용 같은 인프라 지표도 관찰
               o 서비스 전반에 사용자 리퀘스트 추적
               o 지표에 알림 설정
               o 문제를 일으키는 정확한 추적에 가서 문제 근본 원인을 찾을 수 있음
               o 개별 리퀘스트 추적의 자세한 flame 그래프도 볼 수 있음

   좋은 글 감사합니다!

   댓글 감사드려요! :)

   좋은 글 고맙습니다~

   댓글 감사합니다! :)

   모니터링이 잘 동작하는 건 어떻게 모니터링하지?

   왓치맨이라는 만화에서 나오는 고민 비슷한 걸 했었는데 옵저버빌리티라는 말이 있었군여 감사합니다

   감사합니다! 요즘 AI로 Observability를 간소화하는 도구를 개발하는 곳들도 눈에 띄더라고요. 더 알고 싶은 분야에요! :)

   좋은 글 감사합니다 :)

   고맙습니다! :D
"
"https://news.hada.io/topic?id=10681",""Bloomfield 다리의 미스터리"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ""Bloomfield 다리의 미스터리""

     * 블룸필드 다리의 미스터리에 대해 깊이 파고드는 기사, 이 보행자 다리는 미니애폴리스 공항 근처에 위치해 있으며, 타코 벨과 그레인저 산업 공급업체를 연결한다.
     * 블룸필드 다리는 1959년 연방 지원 프로젝트의 일환으로 건설되었지만, 저자는 프로젝트 번호에 대한 정보를 찾지 못했다.
     * 저자의 연구는 현장 방문, 현지인들과의 대화, I-494 회랑위원회와 블룸필드 시 플래닝 매니저에게 연락하는 것을 포함한다.
     * 이 다리는 원래 빈 들판이었던 지역에 위치해 있어, 그 원래 목적에 대한 혼란을 초래했다.
     * 블룸필드 시 플래닝 매니저는 다리가 미래 개발을 예상하여 건설되었을 수 있다고 제안했다.
     * 이 다리의 건설은 1950년대 고속도로 시스템의 건설 붐과 동시에 이루어졌으며, 이는 1956년 연방-지원 고속도로 법에 의해 자금이 지원되었다.
     * 저자는 이 다리가 Assumption 교회와 학교 근처에 있었음을 발견했으며, 이는 학생들과 교회 출석자들이 안전하게 건널 수 있도록 만들어졌을 것이라고 제안한다.
     * 이 기사는 블룸필드 다리의 역사와 미네소타 주 블룸필드에서의 중요성, 특히 학생들에게 중요한 연결고리로서의 역할에 대해 논의한다.
     * 저자는 Assumption Mothers라는 정치적으로 활동적인 여성 그룹이 다리 건설을 위해 로비를 했을 수 있다고 제안한다.
     * 이 기사는 여성의 역사적 역할을 인식하는 것의 중요성을 강조하며, 그들의 기여가 직접적으로 기록되지 않았더라도 그렇다.
     * 이 다리는 학교 가는 아이들에게 안전한 통행로, 모험의 장소, 그리고 커뮤니티 연결의 상징으로서 역할을 했다.
     * 저자는 독자들이 다리와 관련된 자신의 기억과 경험을 공유하도록 권장하며, 커뮤니티의 향수를 불러일으킨다.

        Hacker News 의견

     * 글의 저자는 걷기 용이성을 주장하며, 해당 지역의 제한된 걷기 용이성 때문에 블룸필드 다리의 역사에 대해 궁금해했다.
     * 이 기사는 로버트 카로의 작품과 비교되며, 잘 연구된 사례 연구 접근법과 공공 권력에 대한 초점, 특히 다리와 같은 인프라에 대한 관련성을 갖고 있다.
     * 이 기사는 깊이 있는 연구와 매력적인 서술로 인해 대학의 역사나 저널리즘 교육 과정에 포함될 가능성이 제안되었다.
     * 이 기사는 또한 기술 프로젝트 뒤의 권력 역학을 이해하는 것의 중요성에 대한 교훈을 제공하며, 이는 종종 특정 프로젝트가 예산 초과 또는 진행되지 않는 이유를 설명할 수 있다.
     * 일부 독자들은 이 기사를 읽으며 슬픔을 느꼈는데, 이는 고속도로와 같은 인프라 프로젝트가 이웃을 부정적으로 영향을 미칠 수 있음을 강조하기 때문이다.
     * 저자가 미국 도시 관리자로부터 자세한 인프라 계획에 접근할 수 있는 능력이 칭찬받았으며, 한 독자는 다른 나라에서 비슷한 정보를 얻는 것이 얼마나 어려울지 언급했다.
     * 일부 독자들은 보행자 다리에 대한 자신의 경험을 공유했으며, 이는 걷기 용이성에 대한 도전을 강조했다.
     * 저자가 기사 페이지를 수익화하지 않고, 광고나 추적기 없이 유지하는 결정은 독자들에게 칭찬받았다.
     * 일부 독자들은 블룸필드 다리의 이름과 디자인이 다른 위치에서 알고 있는 다른 다리와의 우연한 일치에 흥미를 느꼈다.
"
"https://news.hada.io/topic?id=10720","LangFuse - LLM앱을 위한 오픈소스 Observability & Analytics 솔루션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         LangFuse - LLM앱을 위한 오픈소스 Observability & Analytics 솔루션

     * LLM을 이용하여 만들어진 앱들을 위한 도구
     * Observability
          + 복잡한 로그와 트레이스를 비쥬얼 UI로 탐색 및 디버그
          + 사용자 피드백에 따라 실행 트레이스를 세그먼트화
     * Analytics: 비용, 지연시간 및 응답 품질을 측정 & 개선
          + 모델별 토근 사용량, 스코어/평가 점수 리포트
          + 사용자, 릴리즈, 프롬프트/체인 버전과 종류, 시간대 별로 분석 제공
"
"https://news.hada.io/topic?id=10652","고스트폴리오: 오픈소스 자산관리 소프트웨어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        고스트폴리오: 오픈소스 자산관리 소프트웨어

     * 고스트폴리오는 개인 재무를 관리하고 데이터 기반 투자 결정을 내릴 수 있는 오픈 소스 자산 관리 소프트웨어입니다.
     * 개인 정보 보호를 우선으로 하는 대시보드를 제공하여 자산 할당을 분석하고 순자산 가치를 파악하며, 주식, ETF 및 암호화폐를 추적할 수 있습니다.
     * 고스트폴리오는 여러 플랫폼에서 개인 재무의 360° 전망을 제공하며, 익명으로 금융 데이터를 소유할 수 있습니다.
     * 이는 강력한 커뮤니티를 통해 지속적인 개선을 받는 오픈 소스 프로젝트입니다.
     * 고스트폴리오는 여러 플랫폼에서 주식, ETF 또는 암호화폐를 거래하며, 매수 및 보유 전략을 추구하고, 개인 정보와 데이터 소유권을 중요시하며, 재정 자원을 다변화시키는 개인에게 적합합니다.
     * 사용자들은 고스트폴리오의 내장된 포트폴리오 분석기, 원활한 사용자 인터페이스, 간결한 디자인 및 깊은 통찰력을 칭찬하고 있습니다.
     * 이는 훌륭한 사용자 인터페이스를 가진 가벼운 앱이며, 오픈 소스입니다.
     * 고스트폴리오는 전 세계의 회원들이 사용하는 프리미엄 버전을 제공합니다.
     * 고스트폴리오를 시작하는 것은 쉽고 익명으로 세 단계만 거치면 됩니다: 익명으로 가입하고 과거 거래 내역을 추가하고 포트폴리오 구성에 대한 가치 있는 통찰력을 얻으세요.
     * 고스트폴리오는 전 세계의 개인들이 신뢰하는 자산 관리 소프트웨어입니다.

        Hacker News 의견

     * Ghostfolio의 자체 호스팅 및 오픈 소스 기능에 대해 댓글러가 흥분합니다.
     * 데이터를 제3자에게 제공하는 것을 싫어하여 스프레드시트를 사용하여 재산 관리를 선호하며, 다른 서비스에는 제한 사항이 있습니다.
     * ""재산 관리""의 정의를 요청하고, 왜 Ledger 대신 Ghostfolio를 사용해야 하는지 의문을 제기합니다.
     * 다른 댓글러는 Vanguard의 ""기타 계정""에 모든 것을 추가하여 재산 관리를 한다고 언급합니다.
     * 다른 사람은 유사한 도구를 만들었으며, 링크를 공유합니다.
     * 다른 댓글러는 Portfolio Performance를 사용하고 있으며, Ghostfolio와 비교하고 싶다고 언급합니다.
     * 또한, Portfolio Performance가 설정하기 쉽고 암호화폐 추적에 용이하다고 언급합니다.
     * 다른 댓글러는 재산 관리에 대해 배운 두 가지 교훈을 공유합니다.
     * 한 댓글러는 자신의 도구인 ProjectionLab의 대안으로 Ghostfolio가 광고되어 기분이 좋다고 언급합니다.
     * Ghostfolio에서 예측을 수행하는 부분을 보지 못했다고 언급합니다.
     * 한 댓글러는 사이트가 뒤로 가기 버튼을 가로채는 데 불편함을 표명합니다.
     * 다른 댓글러는 부동산을 재산 관리 도구에서 처리하기 어렵다고 언급합니다.
     * Ghostfolio가 주식 분할, 합병, 배당금 등을 처리하는지 묻습니다.
"
"https://news.hada.io/topic?id=10758","SAM.cpp - Meta의 Segment Anything Model을 순수 C/C++ 로 구현","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         SAM.cpp - Meta의 Segment Anything Model을 순수 C/C++ 로 구현

     * 원래 Python 으로 구현되어 있던 모델을 GGML 라이브러리를 이용해서 C++로 포팅
     * 경량화된 코드를 통해 다양한 곳에서 이용 가능
     * 원작성자 Georgi Gerganov의 이름을 딴 GGML은 llama.cpp/whisper.cpp 를 만드는데 사용한 양자화 지원 텐서 라이브러리
          + GPU보다는 CPU에 최적화. 특히 애플 실리콘 M1/M2
"
"https://news.hada.io/topic?id=10692",""Emacs에서 'blimpy'를 어떻게 입력하는지 [비디오]"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ""Emacs에서 'blimpy'를 어떻게 입력하는지 [비디오]""

        Hacker News 의견

     * 프로그래머들 사이에서 인기 있는 텍스트 에디터인 Emacs에서 ""blimpy""를 타이핑하는 방법에 대한 기사
     * 일부 사용자들은 Emacs의 커스터마이징 및 생산성 기능을 언급하며 Emacs 사용을 제안
     * 사용자가 Emacs의 이점에 대해 확신이 없는 사람들을 위한 인터뷰 링크 공유
     * ""Vim Exit% Speedrun"" 비디오에 대한 유머스러운 언급, Vim과 Emacs 사용자들 사이의 친절한 경쟁을 나타냄
     * 사용자가 Emacs에서 ""C-u C-u"" 트릭을 깔끔한 해킹으로 언급, Emacs에서의 커스터마이징과 생산성의 균형 강조
     * 일부 사용자들은 Emacs의 내부 작동 방식을 공개하는 것에 대해 반대 의견 표현
     * 사용자가 ed, 또 다른 텍스트 에디터에서 ""blimpy""를 타이핑하는 것이 더 쉽다고 제안
     * 일부 사용자들은 Emacs에서 추가적인 추상화와 문제 해결을 위해 Doom 모듈 또는 Spacemacs 레이어 사용을 권장
     * 사용자가 ""blimpy""를 ""chicken chicken chicken""으로 유머스럽게 언급, 관련 논문 링크 공유
     * 사용자가 Emacs의 Git 인터페이스인 Magit의 힘을 언급, 커밋 메시지 작성을 더 쉽게 만듦
     * 사용자가 ""blimpy""에 대한 과제가 있어 비디오의 타이밍을 칭찬
     * 사용자가 ""blimpytyper.net""이 모든 기계에서 접근 가능할 때 Emacs에서 ""blimpy-mode""가 필요한지 의문을 제기
"
"https://news.hada.io/topic?id=10738",""초보자를 위한초보자를 위한 ZFS""

     * 이 기사는 Sun Microsystems가 만든 로컬 파일시스템 및 논리 볼륨 관리자인 ZFS (Zettabyte File System)에 대한 종합 가이드입니다.
     * 저자는 FreeNAS 설치 후의 충돌로 ZFS를 배우게 된 경험을 공유하고, 초보자들이 ZFS를 이해하는 것을 단순화하려고 합니다.
     * ZFS는 Oracle이 Sun Microsystems를 인수하고 소스를 닫을 때까지 오픈 소스였습니다. 그러나 소스 코드는 이미 공개되어 다른 OS로 이식되었고, 이로 인해 대부분의 유닉스 계열 시스템에서 사용되는 'OpenZFS'가 생성되었습니다.
     * ZFS는 vdevs (하나 이상의 물리 드라이브로 구성), 풀 (하나 이상의 vdevs로 구성), 데이터셋 (ZFS의 파일시스템 부분), 볼륨 (블록 장치 표현) 등 여러 구성 요소로 구성되어 있습니다.
     * ZFS는 Dynamic/Simple Stripe (RAID0), MIRROR (RAID1), RAIDZ-1 (RAID5), RAIDZ-2 (RAID6), RAIDZ-3 등 다양한 RAIDZ 유형을 지원합니다.
     * 이 기사는 ZFS 풀과 파일시스템을 다루는 다양한 ZFS 명령어에 대한 자세한 설명을 제공합니다.
     * ZFS는 스냅샷의 생성을 허용하며, 이는 저장소를 복제하지 않고 특정 시점의 파일시스템 상태를 저장합니다.
     * ZFS는 또한 'ZFS send' 기능을 제공하며, 이를 통해 스냅샷과 그 데이터셋을 파일, 다른 풀, 또는 SSH를 통한 다른 시스템으로 복제할 수 있습니다.
     * 저자는 이 기사가 ZFS가 할 수 있는 것의 표면만 긁었다는 것을 인정하며, 추가적인 읽기를 위한 참조 자료를 제공합니다.
     * 이 기사는 ZFS의 기능을 이해하고 활용하는 데 관심이 있는 기술적으로 능숙한 개인에게 특히 유용합니다.

        Hacker News 의견

     * 사용자들이 ZFS의 학습 곡선이 예상보다 가파르다고 발견, 일반적인 사용 사례를 위한 간소화된 래퍼의 필요성을 제안.
     * 개선 사항 제안: 풀 생성을 위한 합리적인 기본 설정 사용, 암호화 옵션 간소화, 암호화 키 자동 생성, 데이터셋 상태에 대한 명확한 정보 제공.
     * 사용자들은 또한 풀과 스냅샷의 명명 및 관리, 풀 생성 시 디스크 ID 처리에 대한 개선을 제안.
     * ZFS는 쉬운 백업, 과거 스냅샷에서 테스트 환경 생성, 특히 대형 데이터베이스에 대한 내장 압축 등의 기능으로 칭찬받음.
     * 사용자들은 ZFS에 대한 FreeBSD의 핸드북과 Aaron Toponce의 초보자용 기사 등의 자료를 추천.
     * 일부 사용자들은 기본 volblocksize로 인한 예상치 못한 디스크 공간 손실, zpool 상태에서 나타나는 오류 등 ZFS와 관련된 문제를 겪음.
     * 사용자들은 ZFS를 다양한 시스템과 응용 프로그램에서 사용한 경험을 공유하며, ZFS 사용의 장점과 도전 과제를 강조.
     * zpool-attach(8), zpool-replace(8), zfs list -t all -o space 등 특정 ZFS 기능 및 명령어에 대한 토론도 있음.
     * 사용자들은 대형 데이터베이스를 운영하기 위해 ZFS를 사용한 경험과 백업, 테스트 환경 생성, 디스크 공간 절약 등의 이점을 공유.
     * 일부 사용자들은 ZFS 사용, 특히 데이터베이스 운영 및 복제에 관한 웹에서의 잘못된 조언을 발견하고, 정확한 정보를 얻기 위해 man 페이지 사용을 추천.
     * 사용자들은 또한 Linux에서 ZFS를 사용한 경험과 디스크 공간 손실을 피하기 위해 volblocksize 등의 설정을 조정해야 하는 필요성을 공유.
     * 일부 사용자들은 기술 이해 부족과 RAM 부족으로 데이터를 잃는 등 ZFS와 관련된 부정적인 경험을 함.
"
"https://news.hada.io/topic?id=10752","Mozilla가 실시한 개인정보 및 보안 테스트에서 인터넷 연결 자동차 실패","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Mozilla가 실시한 개인정보 및 보안 테스트에서 인터넷 연결 자동차 실패

     * Mozilla의 *Privacy Not Included 프로젝트는 모든 주요 자동차 브랜드의 새로운 인터넷 연결 모델이 기본 개인 정보 보호 및 보안 표준을 충족하지 못한다는 사실을 발견했습니다.
     * 이 연구는 이러한 차량들이 인종, 체중, 성적 활동 등 민감한 개인 정보를 수집하는 데이터 수확 기계라는 사실을 밝혔습니다.
     * BMW, Ford, Toyota, Tesla, Subaru와 같은 브랜드들은 운전자의 인종, 얼굴 표정, 체중, 건강 정보, 운전 경로 등에 대한 데이터를 수집하는 것으로 밝혀졌습니다.
     * 일부 차량은 성적 활동, 인종, 이민 상태에 대한 정보와 같은 예상치 못한 데이터까지 수집했습니다.
     * 현대 자동차는 마이크, 카메라, 운전자가 자동차에 연결하는 전화 등 다양한 데이터 수확 도구를 사용합니다.
     * 제조사들은 또한 자신들의 앱과 웹사이트를 통해 데이터를 수집하고, 그 데이터를 판매하거나 제3자와 공유할 수 있습니다.
     * Nissan은 가장 나쁜 위반자로 지목되었으며, 제조사가 성적 활동, 건강 진단 데이터, 유전 데이터 등의 정보를 수집한다는 개인 정보 보호 정책을 제시했습니다.
     * Volkswagen, Kia, Mercedes-Benz와 같은 다른 브랜드들도 광범위한 개인 데이터를 수집하고 이를 대상화된 광고 또는 모니터링에 사용합니다.
     * Mozilla는 브랜드들이 수집하는 데이터 중 어떤 것이 암호화되는지를 확인할 수 없었으며, Mercedes-Benz만이 이 조직의 질문에 응답했습니다.
     * 많은 자동차 브랜드들이 ""개인 정보 보호 세탁""에 참여하고 있으며, 이는 소비자들에게 그들이 개인 정보 문제에 대해 걱정할 필요가 없다는 정보를 제공하는 것을 의미합니다.
     * 동의에 대한 문제도 문제가 되고 있으며, Subaru와 같은 브랜드들은 승객들을 회사에 정보를 수집할 수 있는 동의를 준 ""사용자""로 간주합니다.

        Hacker News 의견

     * Mozilla가 실시한 개인정보 및 보안 테스트에서 인터넷 연결 자동차의 실패에 대한 기사.
     * 새로운 자동차에서 텔레메트리와 터치스크린의 증가에 대해 일부 독자들이 불필요하고 침략적이라고 느낀다는 표현.
     * 이러한 차량이 수집하는 데이터를 통한 정부 및 기업의 감시와 통제 가능성에 대한 우려.
     * 기사의 원본 자료가 실제 차량 텔레메트리 트래픽이 아닌 개인정보 보호 정책에 기반하고 있어, 일부는 보고서의 방법론과 어조에 의문을 제기.
     * 제조사들이 성적 활동, 건강 진단 데이터, 유전 데이터 등의 정보를 수집한다는 주장에 대한 회의론, 이를 어떻게 수행하는지에 대한 자세한 정보 요청.
     * 일부 독자들이 자신의 차량에서 텔레메트리를 비활성화하는 방법을 적극적으로 찾고 있으며, 이를 가능하게 하는 특정 모델을 언급.
     * 기계에서 디지털로, 제품에서 서비스로의 전환이 인터넷 연결에 대한 의존성과 대기업의 힘에 대한 우려로 인해 문제가 될 수 있다는 인식.
     * 수집될 수 있는 데이터의 종류, 오디오, 비디오, 생체 데이터 등과 이를 분석, 정부 감시, 광고 등에 어떻게 사용될 수 있는지에 대한 두려움.
     * 자동차에서의 개인정보 침해에 대한 애도, 자동차를 사용하기 위해 이용 약관에 동의해야 하며, 개인 데이터를 기반으로 한 차내 광고의 가능성에 대한 예측.
     * 추가적인 읽기를 위해 원문 기사의 링크 제공.
"
"https://news.hada.io/topic?id=10660","Microsoft, Visual Studio for Mac 개발 중단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Microsoft, Visual Studio for Mac 개발 중단

     * 현재 17.6 버전은 12개월후인 2024년 8/31까지 지원될 것
     * VS for Mac은 종료하지만, 최근 발표한 ""C# Dev Kit for VS Code"" 및 맥에서의 .NET 개발을 지원하는 확장들 지원은 계속 할 것
     * 앞으로 모든 OS에서 사용가능한 Microsoft Dev Box(개발자용 클라우드 워크스테이션) 및 ""C# Dev Kit for VS Code"" 등에 역량을 집중할 예정

   맥에서 VS는 거의 못쓸정도였는데, 결국 중단되네요.
   그래도 VSC라도 계속 지원해줘서 다행입니다.
"
"https://news.hada.io/topic?id=10698","타이맥스 m851 해킹","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              타이맥스 m851 해킹

     * 이 기사는 러너들을 위해 디자인된 디지털 시계인 Timex m851을 해킹하는 것에 관한 것입니다.
     * Timex m851은 8비트 Seiko SC188 CPU를 사용하며, 48KB의 ROM, 2KB의 RAM, 그리고 42x11 도트 행렬 주 디스플레이를 갖추고 있습니다.
     * 이 시계는 초저전력 작동을 위해 설계되었으며, 단일 배터리로 최대 3년까지 사용할 수 있습니다.
     * 시계에는 일정 및 기타 데이터를 동기화하기 위한 USB 핀이 측면에 있습니다.
     * Timex m851은 놀랍게도 훌륭한 소프트웨어 개발 키트(SDK)를 가지고 있어 사용자가 자신의 코드를 시계에 작성하고 업로드할 수 있습니다.
     * 저자는 'hello world' 코드와 이를 빌드하기 위한 Makefile을 GitHub에 업로드하여 다른 사람들이 볼 수 있게 했습니다.
     * 시계의 애플리케이션은 제한된 RAM 때문에 상태로 분할되어야 합니다. 상태는 필요에 따라 코드를 교체할 수 있게 합니다.
     * 시계의 커널은 하드웨어를 처리하고 이벤트를 발송하며, 타이머, 톤 생성, 디스플레이 스크롤, 데이터베이스 레코드 접근 등 다양한 서비스를 제공합니다.
     * 시계에는 커널을 통해 다양한 방식으로 설정할 수 있는 크라운과 소프트웨어에서 제어할 수 있는 백라이트가 있습니다.
     * 시계에는 메모리 보호 기능이 없어 충돌이 발생하면 리셋이 발생할 수 있습니다. 감시 개 기능은 2초마다 커널에 알려 살아있는지 확인합니다.
     * 시계를 위한 시뮬레이터인 Virtual Datalink이 있으며, 이는 오픈소스 3rd party 도구입니다. 하지만 Windows에서만 사용 가능합니다.
     * 저자는 현재 'remind'라는 소프트웨어 스케줄링 애플리케이션과 시계를 통합하는 작업을 진행 중입니다.
     * Timex m851은 더 이상 생산되지 않고 찾기 어려워지고 있습니다.
     * 저자는 다른 사람들이 시계의 유효성을 확인하고 그를 해킹에 참여하도록 권장합니다.
"
"https://news.hada.io/topic?id=10666","Neo 8.0에서 Vue.js 에서 React로 프레임워크를 갈아 탄 이유 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Neo 8.0에서 Vue.js 에서 React로 프레임워크를 갈아 탄 이유

   지난 3년간 개발팀에서 다른 클라우드 솔루션에 vue.js를 채택하고 사용했음.

   1년전부터 Neo라는 오픈소스 시계열 데이터베이스 개발에도 같이 사용.

   최근 들어 vue.js를 사용하는 것이 개발 시간과 비용, 성능이 떨어진다는 것을 느낌.

   특히, 필요한 컴포넌트를 찾아서 사용하는 지점에서 vue.js의 생태계가 상대적으로 적어 오히려 개발시간이 다른 프레임워크 보다 느리다는 것을 지적.

   이에 시간을 들여 vue.js와 react 와의 개발 시간 관점, 성능 관점 등을 비교하였고, 최종적으로 react로 갈아탐.

   갈아타는 비용은 1~2개월 정도 시간과 개발 비용이 들었고, 현재는 전체 체감 응답 성능이 2~3배 빨라졌다고 함.

   향후 개발 비용에 있어서도 풍부한 라이브러리가 있는 react로 인해 더 낮아질 것으로 예상.

   단, react를 초기에 공부하고, 학습하는 비용이 높기 때문에 이에 대한 단점은 여전하다고.

   Vue3가 좋기는 진짜 좋은데, vue로 검색해서 나오는게 Vue2용인게 너무 많고, Vue3에 맞게 만들어진게 적다는게 타격이 큽니다.

   Python 2랑 Python 3 차이랑 거의 느낌이 비슷해요.

   Vue가 React보다 성능이 떨어졌나요?
   2면 모르겠는데 3의 경우 빌드타임시 최적화가 들어가서 쓸만하다고 들었는데..

   개발팀도 그렇게 알고 채택한 것 같아요..
   그렇지만 실제로는 react가 더 빠르다고 했는데,
   조직이나 환경마다 조건이 다르지 않을까 싶네요.

   응답성능이라 써있으니, 동시성 렌더링이 필요한 경우는 리엑트가 나을수도 있을듯 하네요.
   코드를 안봐서 어떤 상황인지는 모르겠지만요.

   한글 문서요..
   https://blog.naver.com/machbasekr/223199761857

   3년간 Vue 작업을 하다가 React 선택.. 대단하네요. Vue3으로 작업하는데 검색 내용들이 다 Vue2라서... 확실히 생태계가 아쉽긴 하더라구요.

   갈아타는 비용 : 1에서 2개월
   응답 성능 : 2배에서 3배 향상.

   HTML이 이상해서 다시 올려요..

   마크다운 문법때문에 물결표 사이 글씨에 자동적으로 ~취소선이 그어진 것 같네요~
"
"https://news.hada.io/topic?id=10674","USENET이 다시 부활하나이 다시 부활하나?

     * USENET 관리 위원회 재집합, 원래의 전세계 웹 이전 소셜 네트워크 부활 신호
     * USENET, NetNews로도 알려져 있음, 전세계 여러 서버에서 호스팅하는 수많은 포럼, 또는 ""뉴스그룹""이 있는 텍스트 전용 소셜 토론 포럼
     * 원 개발자들이 2010년에 서버를 종료했음에도 불구하고 많은 서버들이 여전히 활성화되어 있고, USENET은 대부분의 운영 체제를 위한 다양한 클라이언트 앱으로 무료로 접근 가능
     * 분산형, P2P 네트워크인 USENET의 중앙 통치 기관에 가장 가까운 Big-8 보드가 2020년에 재설립
     * 보드는 뉴스그룹 목록을 관리하고 활발하게 활동, 오래된 그룹 삭제, 새 그룹 추가, 웹사이트 개편, Reddit Ask Me Anything 세션 운영, 그리고 모더레이터가 사용하는 패키지 업데이트
     * 웹보다 오래된 USENET은 이메일과 유사하게 작동, 서버가 뉴스그룹 목록을 소유하고 서로 메시지를 동기화
     * USENET을 사용하려면 USENET 서버에 계정을 만들고, 클라이언트를 설치하고, 서버 주소를 제공하고, 그룹 목록을 다운로드하고, 일부를 구독하면 새 메시지가 클라이언트로 전달됨
     * The Reg FOSS desk는 텍스트 그룹만을 제공하고 무료 계정을 제공하는 Eternal September라는 서비스를 사용
     * Thunderbird를 포함한 다양한 클라이언트를 사용하여 USENET에 접근 가능, 이는 무료이며 모든 주요 데스크톱 운영 체제와 호환 가능
     * USENET은 과학 소설, 컴퓨터 역사, 레트로 컴퓨팅에 전념하는 활발한 그룹들을 호스팅함

        Hacker News 의견

     * USENET 재활 가능성에 대한 기사, 현대 인터넷 이전의 분산 토론 시스템
     * 현재 토론 포럼의 상태에 대해 못마땅해하며 USENET으로의 복귀를 제안하는 일부 사용자들, 스팸 문제와 개선 필요성에 대한 우려에도 불구하고
     * USENET 부흥에 대한 증거를 제공하지 않는다는 비판자들의 주장, 그리고 Google Groups가 약 8년 전에 USENET 호스팅을 중단했다는 사실을 언급
     * 유료 구독과 클라이언트 소프트웨어를 포함한 USENET의 진입 장벽이 일반 사용자에게 너무 높다는 일부 사용자들의 생각, 이로 인해 전문 기술 애호가들에게만 호소할 수 있다는 제안
     * USENET의 중재 시스템은 메일링 리스트 운영과 비교, 알려진 사용자들은 자유롭게 게시할 수 있으며 알려지지 않은 사용자들의 게시물은 중재자에 의해 검토됨
     * Unix Haters Handbook은 USENET의 전성기 동안 작성된 비평에 관심이 있는 사람들에게 추천됨
     * USENET이 ""불사조처럼"" 부활하고 있다는 기사의 주장은 일부에게는 과장된 표현으로 간주되지만, ""big 8"" USENET 계층을 감독하는 보드가 재설립되었다는 사실을 언급함
     * 일부 사용자들은 여전히 USENET의 단순함을 존중하지만, 보호 조치 부재로 인한 트롤과 스팸메일에 대한 취약성을 인정함
     * HackerNews와 Reddit과 같은 현대의 ""뉴스그룹""이 USENET보다 우수하다고 주장하는 이들, 그리고 그것의 부활에 대한 필요성을 보지 않음
     * 일부 사용자들은 여전히 USENET을 사용하며, 개인적인 용도로 자신의 NNTP 클라이언트 소프트웨어와 서버를 개발하는 사람도 있음, 프로토콜의 단순함과 오프라인 기능을 칭찬함
"
"https://news.hada.io/topic?id=10757","몰리 홀츠슬라그의 사망","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              몰리 홀츠슬라그의 사망

     * 'Molly Holzschlag 사망'이라는 제목과 관련된 의미 있는 내용이 포함되어 있지 않은 텍스트
     * 사용자의 브라우저가 오래되었다는 웹사이트(www.tucsonsentinel.com)의 오류 메시지로 보임
     * 메시지에는 Ray ID가 포함되어 있고, Cloudflare의 성능 및 보안을 언급하여, 해당 웹사이트가 보안 및 성능 요구사항을 위해 Cloudflare를 사용하는 것으로 추정
     * 추가 정보 없이는 Molly Holzschlag의 사망에 대한 추가적인 세부 사항이나 맥락을 제공할 수 없음

        Hacker News 의견

     * 현대 웹에 중요한 기여를 한 Molly Holzschlag이 별세하였습니다.
     * 그녀는 웹 표준 프로젝트에서의 업무로 알려져 있었으며, 웹의 발전에 중요한 영향을 미쳤습니다.
     * Molly는 웹 개발 커뮤니티에서 존경받는 인물로, 많은 사람들이 그녀의 튜토리얼을 통해 HTML과 CSS를 배웠습니다.
     * 그녀는 흥미롭고 유익한 글쓰기 스타일로 알려져 있었으며, 그녀의 웹에 대한 기여는 널리 인정받았습니다.
     * Molly는 오랫동안 심각한 질병과 관련 의료비용에 공개적으로 투쟁하였습니다.
     * 그녀는 치료비를 위해 자신의 도메인인 molly.com을 팔아야 했습니다.
     * 그녀의 투쟁에도 불구하고, 그녀는 계속해서 커뮤니티와 소통하며 질문에 답하고 토론에 참여하였습니다.
     * 그녀의 사망은 슬픔과 존경으로 맞이되었으며, 많은 사람들이 그녀의 웹에 대한 기여와 그녀가 자신들의 커리어에 미친 영향을 인정하였습니다.
     * Molly의 유산은 계속해서 웹 개발 커뮤니티의 사람들을 영감을 주고 교육하고 있습니다.
"
"https://news.hada.io/topic?id=10745","작은 프로그램을 작성하며 WebAssembly 배우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     작은 프로그램을 작성하며 WebAssembly 배우기

     * 'Watlings' 프로젝트 소개: 작은 프로그램을 수정하며 WebAssembly Text Format 교육
     * 프로젝트는 현재 미완성 상태이며, 활발한 개발 중, 이슈 제출 및 PR 생성을 통한 기여를 촉구
     * 프로젝트는 Node 16+ & NPM을 이용한 컴파일 및 테스트, 저장소 복제, 의존성 설치, 연습문제 해결 테스트 방법 제공
     * 공식 WebAssembly Binary Toolkit 사용 권장: 문법 하이라이팅 및 최신 빌드, VSCode와 WATI 확장 기능을 이용한 문법 하이라이팅, 인텔리센스, 기타 유용한 기능
     * 프로젝트 동기: Rustlings & Ziglings의 성공에 영감을 받아 WebAssembly와 WAT 교육의 공백을 채우기
     * 프로젝트의 교육 철학: 최소한의 설명과 다양한 맥락에서의 문법 노출을 통한 실천 중심 학습 강조
     * 효과적인 학습을 위한 고민 생성을 믿는 저자: 프로젝트는 교육적이고 쉽지 않아야 하며, 문법에 대한 익숙함에 따라 문제 범위가 달라짐
     * 텍스트의 일부가 혼란스럽거나 장황하다고 판단되면 피드백 및 토론 게시물을 촉구하는 저자

        Hacker News 의견

     * 웹어셈블리(WASM) 교윐법이 Exercism 모델과 비교되며, 이 모델 역시 작은 연습들로 가득 찬 무료 WASM 코스를 제공한다.
     * ""koans"" 같은 구조로 인해 기본적인 기능에서 고급 기능으로의 부드러운 진행이 학습 방법으로서 인정받는다.
     * Binaryen의 wasm-opt를 사용하여 WASM의 GC와 같은 기능을 시험해보는 것이 제안되며, 이는 WABT보다 더 많은 WASM 확장을 지원한다.
     * Qt 애플리케이션을 웹어셈블리로 대상으로 하는 편의성에 대한 호기심이 있다.
     * 웹어셈블리를 이해하는 것의 중요성이 강조되며, 이는 다양한 생태계의 공통 언어가 된다.
     * WASM이 웹 개발에 긍정적인 영향을 미치는 것이 칭찬받으며, 이에는 더 빠른 라이브러리, 인상적인 개발 도구, 그리고 더 이식성 있는 노드 바이너리가 포함된다.
     * 웹어셈블리가 손으로 쓸 수 있는 ""진짜 언어""와 유사하다는 점이 언급되며, 이는 그것을 대상으로 하는 데 대한 장벽을 낮출 수 있다.
     * Svelte나 Vue와 같은 웹어셈블리 UI 프레임워크의 존재에 대한 의문이 제기된다.
     * 사용자가 WASM을 사용하면서 SQLite 데이터베이스에 연결을 노출하는 데 어려움을 겪고 있으며, 도움을 위한 자료를 찾고 있다.
     * 사용자가 웹 개발 언어의 저수준 중간 표현(IR)으로서 웹어셈블리를 배울 필요성에 대해 의문을 제기하며, 이는 수동으로 작성할 것이 아니다.
"
"https://news.hada.io/topic?id=10755","LLMs이 단일 예제로부터 배울 수 있을까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        LLMs이 단일 예제로부터 배울 수 있을까?

     * 본문은 대형 언어 모델(Large Language Models, LLMs)의 미세조정 과정에서 관찰된 특이한 학습 패턴에 대해 논의하고 있으며, 이 모델은 단일 예제로부터 효과적으로 학습하는 것으로 보인다.
     * 이러한 관찰 결과는 신경망의 샘플 효율성에 대한 일반적인 이해와는 상반되는데, 이는 효과적인 학습을 위해 일반적으로 여러 예제가 필요하다는 것을 의미한다.
     * 저자들은 이 현상을 검증하기 위해 일련의 실험을 수행하였고, 이는 LLMs가 빠르게 입력을 기억할 수 있다는 가설을 지지한다.
     * 신경망의 학습 과정은 입력과 출력의 예를 보여주고, 그들이 입력에 기반하여 출력을 예측하도록 학습하는 것을 포함한다. 이 과정은 모델이 효과적으로 학습하도록 여러 번 (에폭) 반복된다.
     * 저자들은 Kaggle 경쟁을 위해 모델을 훈련시키면서 각 에폭의 끝에서 손실의 급격한 감소를 관찰하였는데, 이는 이례적이며 처음에는 버그로 의심되었다.
     * 저자들과 커뮤니티의 다른 개발자들은 다른 훈련 루프와 방법을 사용하면서도 비슷한 패턴을 발견하였는데, 이는 버그가 아니라 LLM 미세조정의 특성임을 제안한다.
     * 가설은 이러한 훈련 곡선이 과적합을 보여주고 있음을 의미하며, 이는 모델이 하나 또는 두 개의 예제에서만 입력을 인식하도록 학습하고 있음을 시사한다.
     * 저자들은 다른 학습률 일정을 사용하여 실험을 수행하고, 모델이 예제를 한 번만 보고도 빠르게 인식하도록 학습하는 것을 관찰하였다.
     * 저자들은 사전 훈련된 대형 언어 모델이 최소 손실에 가까운 영역에서 매우 부드러운 손실 표면을 가질 수 있으며, 이는 그들이 단일 예제로부터 빠르게 학습할 수 있게 한다고 제안한다.
     * 이러한 빠른 학습은 전통적인 훈련 방법에 도전할 수 있으며, 새로운 정보가 도입될 때 모델이 이전에 학습한 정보를 잊어버리는 재앙적인 잊어버림 문제를 악화시킬 수 있다.
     * 저자들은 드롭아웃이나 확률적 깊이와 같은 기술의 사용을 늘리거나, 훈련 과정에서 다양한 데이터셋의 혼합을 사용하는 등의 가능한 완화 전략을 제안한다.
     * 저자들은 이 현상과 LLMs의 훈련 및 사용에 대한 그것의 영향을 더 잘 이해하기 위해 추가 연구와 대안 가설을 제안한다.

        Hacker News 의견

     * 대형 언어 모델(Large Language Models, LLMs)의 놀라운 단일 예제에서 빠르게 기억하는 능력에 대한 기사 토론
     * 포스트의 저자 중 한 명이 30년 동안 신경망과 함께 작업하면서 이런 행동을 가장 놀라웠다고 발견
     * 일부 독자들은 기사에서 사용된 ""과도한 자신감""이라는 용어가 오해의 소지가 있으며, ""과적합"" 또는 ""결정되지 않음""이 더 정확할 것이라 주장
     * 생성 모델에서 수십억 개의 매개변수를 고려하면, 일반적인 머신러닝(Machine Learning, ML) 관점에서 LLMs가 단일 예제에서 빠르게 학습하는 현상은 놀랍지 않음
     * 대부분의 LLMs가 단 한 번의 epoch만으로 훈련되는 것에 대한 함의에 대한 논의, 과적합 문제를 제기
     * 한 사용자가 ChatGPT와의 개인적인 경험을 공유, LLM이 훈련받지 않은 질문의 자료를 제공하는 것이 문제를 해결하는 데 도움이 되었다고 강조
     * 일부 독자들이 LLMs가 자신들의 훈련 데이터를 보강하는 데 사용되었는지 의문을 제기, ""꿈꾸는"" 또는 합성 입력을 훈련 데이터에 추가하는 아이디어를 제안
     * 기사 제목에 대한 논쟁, 일부 독자들은 단일 예제에서 학습하는 것이 바람직하다고 믿는 반면, 기억하는 것은 그렇지 않다고 생각하여 오해의 소지가 있다고 판단
     * 일부 사용자들이 Vision Transformers (ViTs)를 훈련시킬 때 비슷한 손실 곡선 경험을 공유, 이런 이상한 손실 곡선이 Transformer 기반 모델의 특징일 수 있다고 제안
     * 이 주제에 관심이 있는 사람들을 위해 ""Transformer에서의 대량 편집 메모리""와 ""GPT에서 사실 연관성 위치 및 편집""과 같은 다른 관련 작품 추천
     * 기사의 발견이 사실이라면, 작고 인간이 관리하는 데이터셋이 LLMs에 의해 생성된 합성 데이터셋보다 더 가치있을 수 있다는 아이디어를 지지할 수 있음
"
"https://news.hada.io/topic?id=10689","React Server Components로 50K 코드 라인을 이동하기 전에 알았더라면 좋았을 것들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        React Server Components로 50K 코드 라인을 이동하기 전에 알았더라면 좋았을 것들

     * 저자가 50,000줄의 코드를 React Server Components(RSCs)로 이동하면서 경험하고 배운 교훈에 대한 기사
     * RSCs는 클라이언트 대신 서버에서 실행되는 React 컴포넌트로, 서버 사이드 렌더링(SSR)보다 두 가지 주요한 이점을 제공
          + 첫째, RSCs는 개발자가 코드가 실행되는 위치를 정의하게 해주어, 번들 크기를 줄이고 hydration 동안의 작업을 감소시킴
          + 둘째, 서버 컴포넌트는 컴포넌트 내에서 직접 데이터를 가져와 클라이언트에 스트리밍함으로써, React에서의 데이터 가져오기를 더 쉽고 효율적으로 만듦
     * 그러나 RSCs를 사용하는 데에는 일부 제한 사항이 있음. CSS-in-JS는 서버 컴포넌트에서 작동하지 않고, React Context는 클라이언트 컴포넌트에서만 접근 가능하며, 코드가 실행되는 위치를 관리하는 복잡성이 도전적일 수 있음
     * 저자는 RSCs를 점진적으로 채택하기 위한 3단계 접근법을 제안함:
          + 앱의 루트에 ""use client"" 지시문을 추가함
          + 렌더링 트리에서 가능한 한 낮은 위치로 지시문을 이동함
          + 성능 문제가 발생할 때 고급 패턴을 채택함
     * 추가된 복잡성에도 불구하고, 저자는 RSCs의 이점들, 예를 들어 더 작은 번들 크기, 더 빠른 실행, 고급 데이터 로딩 패턴 등이 팀에게 성능 이점이 가치 있는 경우 비용을 상회할 수 있다고 결론 내림

        Hacker News 의견

     * 기사는 50K 코드 라인을 React Server Components (RSCs)로 전환하는 논의를 다룹니다.
     * 일부 사용자들은 서버 측 렌더링의 속도와 간편함을 언급하며, 클라이언트가 즉시 볼 수 있는 HTML을 받는다는 점을 지적했습니다.
     * RSCs 대신 Rails, Django, Laravel 등의 전체 스택 또는 클래식 웹 프레임워크를 고려하는 것이 더 빠르고 확장 가능한 해결책이 될 수 있다는 제안이 있습니다.
     * 일부 사용자들은 현대 프레임워크의 복잡성에 대해 우려를 표현하며, 간단한 작업에도 필요한 광범위한 빌드 및 컴파일 파이프라인을 언급했습니다.
     * 사용자들은 next.js와 그 새로운 app 디렉토리 설정에 대한 개인적인 경험을 공유했으며, 작업이 어디서 일어나는지 (서버 또는 클라이언트) 이해하는 데 어려움이 있고, 클라이언트 측 작업을 가정하는 기존 React 라이브러리와의 문제점을 강조했습니다.
     * 일부 사용자들은 새로운 next.js 앱 디렉토리 패러다임에서의 버그와 거친 부분을 지적했으며, 동적 라우트와 병렬 라우트와 관련된 문제를 포함했습니다.
     * 한 사용자는 PHP와 JavaScript의 유사성을 언급하며, JavaScript가 비록 더 많은 약어와 더 가파른 학습 곡선을 가지고 있지만, 유사한 서버 측 기능을 제공하도록 발전했다고 지적했습니다.
     * 일부 사용자들은 정적 사이트 생성기나 캐싱이 있는 CMS와 같은 더 간단한 도구로 해결할 수 있는 작업에 React를 사용할 필요성에 의문을 제기했습니다.
     * 서버가 모든 것을 렌더링하고 CSS와 JavaScript가 렌더링 후 페이지를 향상시키는 시절에 대한 향수 정서가 있습니다.
     * 일부 사용자들은 React가 현대적이고 더 쉽고 빠른 대안을 따라잡기 위해 더 복잡해지고 있다는 견해를 표현했습니다.
     * React를 백엔드에서 HTML을 렌더링하는 데 사용하는 것에 대한 논쟁이 있으며, 일부 사용자들은 그 필요성에 의문을 제기하고 다른 사용자들은 전통적인 서버 반환 방법보다 이점을 옹호했습니다.
"
"https://news.hada.io/topic?id=10633","자가 제작 '바이오닉 췌장'이 당뇨 관리를 변화시키고 있다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   자가 제작 '바이오닉 췌장'이 당뇨 관리를 변화시키고 있다.

     * '바이오닉 췌장' DIY 개발로 인한 당뇨병 치료 변화
     * 소프트웨어가 혈당 수치 측정과 조절에서 자유를 약속
     * DIY 커뮤니티는 인슐린 펌프와 지속적인 혈당 모니터를 사용하지만, 여전히 데이터를 수동으로 읽고 인슐린 투여량을 계산해야 했음
     * 그들은 혈당 데이터를 분석하고 펌프 자체를 프로그래밍하는 알고리즘을 개발하여 자동화 수준을 높임
     * 약 30,000명이 오픈 소스 기술을 사용하여 자동 인슐린 투여(AID)를 함
     * 두 개의 무작위 대조 임상시험에서 오픈 소스 시스템의 안전성과 효과가 입증됨
     * 미국 FDA가 오픈 소스 알고리즘을 기반으로 한 AID 시스템에 규제 승인을 부여함
     * 상용 AID 시스템도 출시되었지만, DIY 커뮤니티는 기술을 새로운 방향으로 발전시키기 위해 계속 노력함
     * FDA의 오픈 소스 시스템 Tidepool Loop의 승인은 더 많은 접근성을 야기할 수 있음
     * 오픈 소스 알고리즘은 다른 회사에서 만든 지속적인 혈당 모니터와 펌프와의 호환성을 요구하여 상호 운용성에 도전할 수 있음
     * 오픈 소스 인슐린 펌프와 같은 오픈 소스 하드웨어도 개발 중임
     * DIY 커뮤니티는 새로운 기능과 혁신을 테스트하는 실험장 역할을 함
     * 오픈 소스 시스템은 고급 기능을 제공하며 혈당을 자율적으로 조절하는 데 가까움
     * 오픈 소스와 상용 시스템의 선택은 개인의 선호도와 요구에 따라 다름
     * DIY 커뮤니티와 산업은 대립하지 않으며, 오픈 소스 커뮤니티는 사용자에게 선택권을 제공하는 한 계속해서 중요성을 유지할 것임.

        Hacker News 의견

     * 베타 바이오닉스라는 회사가 혈당을 올리는 호르몬인 글루카곤을 주입하는 듀얼 펌프 시스템을 상용화하려고 노력하고 있습니다.
     * DIY 커뮤니티는 아직 이 기술에 초점을 맞추지 않았지만, 당뇨병 치료에 큰 변화를 가져올 수 있을 것입니다.
     * 인슐린 펌프는 여전히 지연 작용과 탄수화물 섭취와 같은 외부 요소의 수동 입력과 같은 한계가 있습니다.
     * 당뇨병 기술의 DIY 운동은 많은 노력을 기울였지만, 로비 활동과 자금 지원으로 인해 상업적인 참가자들에게 밀릴 수도 있습니다.
     * AndroidAPS와 Loop는 당뇨병 관리에서 큰 발전을 이룬 DIY 솔루션의 예입니다.
     * 폐쇄 루프 시스템 개발에서 전력 관리는 복잡한 알고리즘과 많은 전력 소비를 필요로 하기 때문에 도전입니다.
     * 췌장암은 심각한 문제이며, 1형 당뇨병에 대한 가장 실용적인 해결책으로 기계 치료가 간주됩니다.
     * 사람들은 AndroidAPS와 같은 DIY 솔루션을 앱 스토어에서 이용할 수 있는 가능성에 흥분하고 있습니다.
     * 의사, 연구자, 프로그래머 간의 협력은 당뇨병 치료에서 비슷한 문제를 해결하기 위해 장려됩니다.
"
"https://news.hada.io/topic?id=10715","소니, 40년에서 60년 전의 프로그램에 대해 TV 박물관에 저작권 고지서 발송","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              소니, 40년에서 60년 전의 프로그램에 대해 TV 박물관에 저작권 고지서 발송

     * 클래식 시카고 텔레비전 박물관, 비영리 단체의 오랜 기간 동안의 TV 광고, 잊혀진 테이프, 수십 년 전 TV 프로그램 보존
     * 소니로부터의 저작권 통지로 인한 박물관의 잠재적 폐쇄 위기, 40년에서 60년 전의 TV 쇼 보호
     * 인도 기반의 반투명 회사 Markscan이 소니를 대신해 저작권 통지 발송
     * 박물관의 회장이자 주요 큐레이터, Rick Klein의 저작권 침해를 되돌리기 위한 수동적인 자료 제거 의지 표현
     * YouTube에 제기된 저작권 이의는 1964년의 TV 시리즈 Bewitched의 두 에피소드를 대상으로 함
     * Klein은 비디오의 저질과 그들의 역사적 맥락이 대부분의 권리 소유자들이 박물관의 콘텐츠를 방치하는 이유일 수 있다고 믿음
     * 박물관의 콘텐츠, 원래의 광고와 후원 통지를 포함하여, 관객들에게 독특한 역사적 관점 제공
     * Klein은 소니가 이 ""드문 비디오 유물"" 보존의 중요성을 이해하고 박물관이 그 작업을 계속할 수 있도록 허락할 것을 희망함
"
"https://news.hada.io/topic?id=10736","케이블 모뎀 구입, 감옥행의 길 (1999)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        케이블 모뎀 구입, 감옥행의 길 (1999)

     * 1998년 Comcast@home에 의해 케이블 사기로 기소된 Judy Sammel의 이야기를 다룬 기사.
     * Sammel은 Comcast@home의 케이블 모뎀 서비스만 가입했지만, TV 신호를 차단하는 필터 설치 오류로 인해 케이블 사기로 기소되었다.
     * Comcast와의 여러 차례 해결 시도에도 불구하고 필터는 설치되지 않아, Sammel이 법정에 출두하게 되었다.
     * Sammel이 Comcast에 대해 악의적 기소에 대한 소송을 제기하겠다고 위협한 후 기소는 결국 철회되었다.
     * 이 사건은 Comcast의 절차 변경을 이끌었으며, 이에는 비-TV-구독 고객의 케이블 연결 표시 및 케이블 사기 기소 전 고객 기록 확인 등이 포함되었다.
     * Sammel의 이야기는 Multichannel News와 InternetNews Radio와 같은 매체에서 널리 보도되어 케이블 모뎀 사용자들이 직면할 수 있는 잠재적 문제에 대한 인식을 높였다.
     * 이 이야기는 Tasty Bits from the Technology Front의 ""Tasty Bit of the Day""로 소개되었고, WorldNetDaily의 Lisa Ronthal의 Interscope 칼럼에서 강조되었다.
     * Macintosh 커뮤니티도 이 이야기에 주목했으며, Macaddict, Macresource, MacInTouch에서 언급되었다.
     * Sammel은 1999년 4월 14일에 삭제 명령을 받았으며, 이는 당국이 그녀의 가정적인 ""범죄 활동"" 기록을 30일 이내에 지우도록 요구하는 것이었다.
     * 이 이야기는 ""slashdotted""되었는데, 이는 인기 있는 웹사이트에 의해 링크되어 Sammel의 사이트로의 트래픽이 급증한 것을 의미한다.
     * Sammel의 이야기는 Yahoo의 Bandwidth News 섹션에도 등재되었고, Risks Digest (Vol. 20, Issue 33)에 제출되었다.
     * Sammel은 독자들이 2000-2001년 업데이트를 위해 그녀의 Telecom Archives와 홈페이지로 돌아오도록 초대한다.

        Hacker News 의견

     * 기사는 1999년에 광대역 기술자가 케이블 모뎀을 설치하는 동안 위협과 위험한 상황에 직면한 사건을 논의한다.
     * 기술자는 총으로 위협받거나, 결함 있는 TV로 인해 감전당하거나, 적대적인 고객들을 대처하는 등의 위험 때문에 1년 후에 그만두었다.
     * 기사는 케이블 도난에 대한 엄격한 처벌, 최대 6개월의 징역을 강조하며, 일부 댓글 작성자들은 이를 과도하다고 여긴다.
     * 일부 댓글 작성자들은 기업과 검찰의 기소 역할을 비판하며, 조사와 신중한 검토가 부족하다고 제안한다.
     * 기사는 다이얼업이나 ISDN에서 광대역으로 전환하는 것이 큰 업그레이드였던 초기 광대역의 추억을 되살린다.
     * 일부 댓글 작성자들은 특히 Comcast와 같은 대형 기업들과 함께 이러한 문제를 해결하는 것의 어려움에 대해 우려를 표현한다.
     * 기사는 또한 미국 법률 시스템에 대한 의문을 제기한다, 예를 들어 기소를 요구하는 개인과 기업의 영향력, 통지서를 제공하는 과정, 그리고 기소가 취하된 사건으로부터 범죄 기록을 취득하는 가능성 등이다.
     * 다른 국가의 댓글 작성자들은 비슷한 상황에서의 경험을 공유하며, 이러한 문제가 어떻게 다루어지는지에 대한 차이점을 강조한다.
     * 기사는 또한 1999년에 ""코드를 자르는"" 개념에 대해 언급하며, 이는 당시에 새롭고 오해의 소지가 있는 현상이었다.
     * 한 댓글 작성자는 사건에 연루된 사람이 그녀의 범죄 기록을 삭제하기 위해 Comcast를 면책하는 면책서에 서명해야 했던 이유에 대해 의문을 제기한다.
"
"https://news.hada.io/topic?id=10701","재귀적 요약이 LLMs의 장기 대화 메모리를 가능하게 함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    재귀적 요약이 LLMs의 장기 대화 메모리를 가능하게 함

     * 개방형 대화 시스템에서 사용되는 대형 언어 모델(LLMs)의 장기 기억력 향상을 위한 새로운 방법에 대한 논문
     * 장기 대화에서 중요한 정보를 잊어버리는 개방형 대화 시스템의 중요한 문제점
     * 기존 해결책은 대화 내용에서 핵심 정보를 얻기 위해 특정 검색기나 요약기를 훈련하는 것이지만, 이는 시간이 많이 소요되며 라벨링된 데이터의 품질에 크게 의존적임
     * 제안된 방법은 LLMs를 이용해 요약이나 기억을 재귀적으로 생성함으로써 이 문제를 완화하려고 함
     * 이 방법은 먼저 LLMs가 작은 대화 맥락을 기억하게 하고, 이전의 기억과 이후 맥락을 사용해 새로운 기억을 재귀적으로 생성함
     * 최신 기억의 도움으로 LLM은 매우 일관된 응답을 생성할 수 있음
     * 이 방법은 ChatGPT와 text-davinci-003를 사용하여 평가되었으며, 널리 사용되는 공개 데이터셋에서의 실험 결과, 장기 맥락 대화에서 더 일관된 응답을 생성할 수 있음을 보여줌
     * 이 방법은 LLM이 극도로 긴 맥락을 모델링할 수 있게 하는 잠재적인 해결책임
     * 이 방법에 대한 코드와 스크립트는 향후 공개될 예정임
     * 이 연구는 Simons Foundation, 회원 기관, 그리고 모든 기여자들의 지원을 받았음

        Hacker News 의견

     * CodeRabbit이 PR 검토를 위해 기사에서 논의된 접근법과 유사하게 사용하며, 각 커밋에 대한 요약의 요약을 생성하고 추가 커밋이 이루어짐에 따라 점진적으로 업데이트합니다.
     * 일부 사용자들은 ""텍스트 공간""에서 메모리를 구축하는 효과에 대해 의구심을 표현하며, 메모리는 전체 의미를 보존할 수 있는 밀집 임베딩 공간에 더 잘 저장될 것이라고 제안합니다.
     * 연구에서의 투명성과 재현성에 대한 요구가 있으며, 일부 사용자들은 실험에 사용된 코드와 스크립트에 대한 접근 없이는 주장을 믿지 않습니다.
     * 재귀적 요약의 사용이 성공적으로 업무 환경에 적용되었으며, 수천 개의 ""브리핑""을 다섯 단락의 텍스트로 요약하고 각 브리핑을 주제와 하위 주제로 분류합니다.
     * 일부 사용자들은 재귀적 요약과 관련하여 문제를 겪었으며, 특정 비트가 모든 요약 라운드를 살아남아 모델이 특정 주제에 갇히는 경우 등이 있습니다.
     * 논문의 세부 사항 부족에 대한 비판이 있으며, 일부 사용자들은 이를 실망스럽고 LLM 개발자들에게 별로 가치가 없다고 생각합니다.
     * 일부 사용자들은 기법의 참신성에 의문을 제기하며, LLM 기반 채팅 기록 메모리의 요약이 이미 확립된 기법이며, 논문에서 제안된 대로 모든 메시지에서 요약하는 것은 주요 성능 병목이라고 주장합니다.
     * 논문의 메모리 텍스트를 프롬프트의 일부로 추가하는 구현에 대한 의문이 제기되며, 컨텍스트 윈도우 토큰을 소비하지 않는 저장/검색 시스템에 대한 제안이 있습니다.
     * 논문에서 논의된 기법은 Langchain의 ""요약"" 메모리 기능과 비교되며, 이는 2023년 3월 이후로 존재했다고 보고되었습니다.
"
"https://news.hada.io/topic?id=10714","VSCodium - VSCode의 오픈소스 바이너리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      VSCodium - VSCode의 오픈소스 바이너리

     * VSCodium은 Microsoft의 편집기 VS Code의 커뮤니티 주도, 자유로운 라이선스 바이너리 배포입니다.
     * 이 프로젝트는 Microsoft의 VS Code에 대한 대안을 제공하기 위해 존재하며, 이는 오픈 소스이지만 텔레메트리/추적을 포함하고 있으며, 자유/오픈 소스 소프트웨어(FLOSS) 라이선스에 따라 라이선스가 부여되지 않습니다.
     * VSCodium의 빌드 스크립트는 Microsoft의 vscode 저장소를 복제하고, 빌드 명령을 실행하며, 결과 바이너리를 GitHub 릴리스에 업로드합니다. 이는 MIT 라이선스에 따라 라이선스가 부여되며 텔레메트리가 비활성화되어 있습니다.
     * 이 프로젝트의 목표는 소스에서 다운로드하고 빌드하지 않고도 MIT 라이선스의 최신 버전의 VS Code를 더 쉽게 얻을 수 있도록 하는 것입니다.
     * VSCodium은 Windows, Mac OS, Linux에서 사용할 수 있으며, 다양한 패키지 관리자를 사용하여 설치할 수 있습니다.
     * Mac 사용자의 경우, Homebrew를 사용하여 brew install --cask vscodium 명령으로 VSCodium을 설치할 수 있습니다.
     * Windows 사용자의 경우, Windows Package Manager를 사용하여 winget install vscodium 명령으로, Chocolatey를 사용하여 choco install vscodium 명령으로, 또는 Scoop을 사용하여 scoop bucket add extras 및 scoop install vscodium 명령으로 VSCodium을 설치할 수 있습니다.
     * Linux 사용자의 경우, VSCodium은 Snap Store에서 Codium으로 사용할 수 있으며, snap install codium --classic 명령으로 설치할 수 있습니다. 또한 Parrot OS에 사전 설치되어 있으며, Nixpkgs 및 AUR (Arch User Repository)에서 사용할 수 있습니다.
     * VSCodium은 flatpak을 지원하는 Linux 배포판을 위한 Flatpak 앱으로도 사용할 수 있습니다.
     * Visual Studio Code에서 VSCodium으로의 이전 및 기타 잠재적인 문제에 대한 자세한 정보는 VSCodium 웹사이트에 문서화되어 있습니다.

        Hacker News 의견

     * VSCodium은 Visual Studio Code의 오픈 소스 버전으로, Microsoft의 브랜딩, 텔레메트리, 라이선싱 없이 유사한 경험을 제공합니다.
     * 일부 사용자들은 이러한 프로젝트의 신뢰성과 취약성에 대해 우려를 표현하며, 이는 인력 부족과 공급망 공격 또는 적대적 인수의 가능성 때문입니다.
     * Microsoft는 주요 확장 기능을 공식 릴리스에만 제한함으로써 경쟁을 제한하였고, 이로 인해 일부 사용자들이 대안을 찾게 되었습니다.
     * 일부 사용자들은 Microsoft의 제품을 오픈 소스화하면서 폐쇄 소스 기능을 추가하는 행위를 비판하며, 이를 부정직하다고 지적합니다.
     * VSCodium은 HackerNews에서 여러 번 논의되었으며, 이러한 스레드는 2018년 8월까지 거슬러 올라갑니다.
     * 일부 사용자들은 업데이트 문제와 라이선스 위반 때문에 오픈 소스 빌드에서 벗어나야 했습니다.
     * 그 장점에도 불구하고, 일부 사용자들은 공식 VSCode에서 사용할 수 있는 원격 SSH 기능과 devcontainers와 같은 기능이 VSCodium에서 부족하다고 느낍니다.
     * 일부 사용자들은 구성 관리와 여러 창 구분 가능성을 이유로 VSCode와 VSCodium을 다른 작업에 사용합니다.
     * 스타트업 커뮤니티에서는 VSCodium에 대한 지원이 있으며, 일부 회사들은 자신들의 확장 기능을 Open VSX Registry에 나열하고 있습니다.
     * 일부 사용자들은 Emacs를 현대 IDE/편집기에 대한 대안으로 사용하는 것을 제안하며, 그 속도와 자원 효율성을 이유로 들고 있습니다.
"
"https://news.hada.io/topic?id=10656","삼성, AI기반의 개인화된 음식 & 레시피 서비스 '삼성 푸드' 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 삼성, AI기반의 개인화된 음식 & 레시피 서비스 '삼성 푸드' 공개

     * 인공지능(AI) 기반 개인 맞춤형 식(食)경험을 제공하는 푸드 통합 플랫폼
          + 레시피 검색/저장, 식단 계획, 식재료 관리 등 사전 준비 단계부터 조리, 콘텐츠 공유 등 식생활 전반에 필요한 기능을 통합
          + 삼성 주방 가전과 연동되어 쉬운 조리경험 제공
          + 16만개 이상의 레시피와 AI를 통해 개인별 음식 선호와 원하는 영양 균형 수준, 음식 종류 기반의 맞춤형 레시피도 제공
     * 104개국 대상 8개 언어 지원
     * Android/iOS 에서 사용가능하며 웹사이트도 있음
     * 모바일 뿐만 아니라, 비스포크 냉장고의 패밀리허브에서도 사용 가능. 냉장고에 보관중인 식재료 까지 고려해 레시피 추천
     * 연말까지 삼성헬스와 삼성푸드를 통합해 다이어트 관리 기능까지 도입할 것
     * 내년에는 ‘비전(Vision) AI’ 기술을 적용해 언제 어디서나 음식 사진을 촬영하기만 하면 음식의 영양성분과 레시피까지 한 번에 확인할 수 있도록 할 계획

   음식 사진으로 영양 성분을 좀 정확하게 알아낼 수 있으면 좋겠네요.
   지금 있는 것들은 아쉬움이 있다고 생각해서...

   한국쪽 기사는 보도자료 처럼 되어있고 내용이 좀 빠져있어서 영문 버전이랑 같이 봐서 정리했습니다.
   https://news.samsung.com/global/…

   애플이 안하는 것들을 잘 찾아서 먼저 하는 것 같기도 한데.. 잘 유지될지 걱정도 됩니다.

   웹사이트는 https://app.samsungfood.com/ 입니다.
"
"https://news.hada.io/topic?id=10753","AI를 활용한 교육를 활용한 교육

     * OpenAI가 ChatGPT를 교실에서 사용하는 교사들을 위한 가이드를 발표
          + 프롬프트 제안부터 ChatGPT 작동 방식, 한계, AI 탐지기의 효과성, 그리고 편향에 대한 설명이 포함
     * 교사들이 사용 가능한 프롬프트들
          + 수업 계획 세우기
          + 효과적인 설명, 예시, 비유 만들기
          + 학습을 돕기
          + AI 튜터 만들기
     * 교육자들은 학생들의 학습을 가속화하기 위해 ChatGPT를 어떻게 사용하고 있을까?
          + Old Dominion University의 교육 기술 교수인 Dr. Helen Crompton은 ChatGPT를 특정 인물의 대리인으로 사용하여 학생들이 자신들의 자료를 더욱 세밀하게 이해하고 새로운 관점을 가질 수 있도록 도움
          + 스페인 Coruña 대학의 교수인 Fran Bellas는 교사들이 퀴즈, 시험, 그리고 수업 계획을 작성하는 데 ChatGPT를 보조 도구로 사용하도록 권장
          + Johannesburg 대학의 연구 책임자인 Dr. Anthony Kaziboni는 학생들이 번역 도움, 영어 글쓰기 향상, 그리고 대화 연습을 위해 ChatGPT를 사용하도록 격려
          + 인도 Chennai에 위치한 American International School의 고등학교 컴퓨터 과학 교사인 Geetha Venugopal은 학생들에게 비판적 사고를 가르치기 위해 ChatGPT를 사용
     * 이 가이드는 모델이 항상 정확한 정보를 제공하지 않을 수 있으며, 프롬프트는 시작점에 불과하다는 점을 강조하며, 교사가 전문가이며 자료를 관리하는 책임이 있다는 점을 강조하고 있음
"
"https://news.hada.io/topic?id=10704",""해리 브라운의 1999년 금융 안전 규칙"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ""해리 브라운의 1999년 금융 안전 규칙""

     * 금융 성공을 위한 기본 원칙인 해리 브라운의 17가지 황금 규칙에 대한 기사
     * 규칙 1: 당신의 직업은 부의 주요 원천입니다. 투자는 자본을 빠르게 늘리기 위한 위험을 감수하기보다는 보유한 것을 보존하는 데 목표를 두어야 합니다.
     * 규칙 2: 잃어버린 부를 대체할 수 있다고 가정하지 마세요. 부를 대체할 수 없는 것으로 취급하고 불필요한 위험을 피하세요.
     * 규칙 3: 투자와 투기의 차이를 이해하세요. 투자는 시장의 수익률을 받아들이는 반면, 투기는 그 수익률을 능가하려고 시도합니다.
     * 규칙 4: 미래를 예측할 수 있는 사람은 없습니다. 안전은 불확실성에 대처할 현실적인 방법을 마련하는 것에서 비롯됩니다.
     * 규칙 5: 누구도 당신을 투자에서 정확하고 수익적인 타이밍으로 지속적으로 이동시킬 수 없습니다. 투자 자문가는 가치있을 수 있지만, 항상 성공을 보장할 수는 없습니다.
     * 규칙 6: 어떤 거래 시스템도 과거처럼 잘 작동하지 않을 것입니다. 세상은 끊임없이 변하며, 시장과 기회에 영향을 미칩니다.
     * 규칙 7: 레버리지를 사용하지 마세요. 빌린 돈을 사용하면 원래 투자액보다 더 많이 잃을 위험이 있습니다.
     * 규칙 8: 스스로 결정하세요. 어떤 자문가도 당신이 돈을 존중하는 것처럼 존중할 수 없습니다.
     * 규칙 9: 이해하지 못하는 투자, 투기, 투자 프로그램을 시작하지 마세요.
     * 규칙 10: 투자를 다양화하고, 안전을 위해 어떤 한 가지 투자, 기관, 또는 사람에 의존하지 마세요.
     * 규칙 11: 어떤 사건에도 버틸 수 있는 균형 잡힌 다양화된 포트폴리오를 만드세요.
     * 규칙 12: 잃어도 괜찮은 돈으로만 투기하세요.
     * 규칙 13: 잠재적 위험에 대비하여 일부 자산을 거주 국가 외부에 보유하세요.
     * 규칙 14: 세금 회피 계획에 주의하세요. 세금을 최소화하기 위해 간단하고 논란의 여지가 없는 방법을 사용하세요.
     * 규칙 15: 투자의 잠재적 위험과 이익을 이해하기 위해 올바른 질문을 하세요.
     * 규칙 16: 즐거움을 위한 예산을 설정하세요. 당신이 즐길 수 없다면 부는 아무 가치가 없습니다.
     * 규칙 17: 의심스러울 때는 안전한 쪽으로 실수하세요. 소중한 자본을 잃는 것보다 기회를 놓치는 것이 낫습니다.
     * 안전한 투자의 규칙은 인생의 규칙과 비슷합니다: 세상의 불확실성을 인식하고, 불가능한 것을 기대하지 마세요, 낯선 사람을 믿지 마세요.

        Hacker News 의견

     * 일부 독자들은 자산의 25%를 현금으로 보유하라는 제11조의 타당성에 의문을 제기하며, 이는 인플레이션으로 인한 손실을 초래할 수 있다고 주장합니다.
     * 제11조에서 ""현금""의 해석에 대한 논란이 있으며, 일부 독자들은 이것이 실제 현금이 아닌 ""단기 미국 국채""를 의미할 수 있다고 지적합니다.
     * 이해하지 못하는 일을 하지 말라는 제9조는 VR 소프트웨어 회사에 투자하고 회사의 성장에도 불구하고 예상 수익을 보지 못한 독자의 개인적인 사례로 강조됩니다.
     * 일부 독자들은 레버리지 사용에 대한 규칙을 비판하며, 부의 축적에 있어서 부채 이해와 활용이 기본적인 요소라고 주장합니다.
     * 직업이 부를 창출한다는 제1조는 일부 독자들로부터 칭찬을 받습니다.
     * 제8조(자신의 결정을 내리라), 제11조(방탄 포트폴리오), 제6조(거래 시스템은 영원히 통하지 않는다), 그리고 제9조(이해하는 일만 하라) 사이에는 모순점이 지적되었습니다.
     * 제11조에서 제안된 금이 인플레이션에 대한 헤지로서의 효과는 논란의 여지가 있으며, 일부 독자들은 그들의 주장을 지지하기 위해 연구 논문과 기사를 제공합니다.
     * 레버리지 사용에 대해 경고하는 제7조는 추가적인 명확화가 필요하다고 간주되며, 일부 독자들은 부채 금융이 특정 상황에서 유익할 수 있다고 주장합니다.
     * 금, 주식, 채권, 현금 각각 25%로 자산을 분할하는 것은 특히 2007-09년 이후로 성과가 떨어질 수 있다는 이유로 비판을 받습니다.
     * 일부 독자들은 자산의 일부를 자국 외부에 보유하라는 제13조의 실용성에 의문을 제기하며, 이는 비용이 많이 들고 상당한 부를 가진 사람들에게만 유익할 수 있다고 주장합니다.
"
"https://news.hada.io/topic?id=10760","GCSFuse - Google Cloud Storage FUSE","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  GCSFuse - Google Cloud Storage FUSE

     * 구글 Cloud Storage 버킷을 로컷 파일 시스템으로 마운트하고 액세스할 수 있게 해주는 FUSE 어댑터
     * 2015년부터 개발되었고, 올해 6월에 1.0 버전이 GA 되었음. 현재 버전은 1.1.0
     * 머신러닝 학습 및 모델 데이터를 GCS에 저장하고 접근할 때 주로 사용
     * FUSE CSI(Container Storage Interface)를 제공해서 GKE에서 사용 가능(애드온 이용해서 자동으로 적용. 매뉴얼 설치는 공식적으로 지원 안함)
     * FUSE 자체는 무료이고, GCS의 네트워크 I/O, 용량, 메타 데이터등 기존 요금만 적용
"
"https://news.hada.io/topic?id=10703","C++로 직접 플라이트 시뮬레이터 만들기 (1996)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     C++로 직접 플라이트 시뮬레이터 만들기 (1996)

     * 'Build Your Own Flight Sim In C++ (DOS GameDev)'라는 제목의 책에 대한 기사, 저자는 Michael Radtke와 Chris Lampton, 1996년 출판.
     * 이 책은 SB16 사운드를 이용한 비행 시뮬레이터 제작을 목표로 하는 DOS 게임 프로그래밍 가이드.
     * Retro City Rampage를 DOS로 이식하는 과정에서 개발자가 자신의 DOS 프로그래밍/게임 개발 책을 버린 것에 대한 후회를 표현하면서 책이 언급됨.
     * 책에는 독자들의 프로그래밍 여정을 돕기 위한 예제 코드가 포함된 CD-ROM 이미지가 함께 제공됨.
     * 책은 CHOCR, EPUB, FULL TEXT, HOCR, ISO IMAGE, ITEM TILE, OCR PAGE INDEX, OCR SEARCH TEXT, PAGE NUMBERS JSON, PDF, SINGLE PAGE PROCESSED JP2 ZIP, TORRENT 등 다양한 형식으로 다운로드 가능.
     * 이 책은 CD-ROM Software Library, CD-ROM Software Collection, 그리고 The Vintage Software Collection의 일부.
     * 기사 작성 시점에는 책에 대한 리뷰가 없었지만, 605번 조회되었고 25번 즐겨찾기 되었음.
     * 이 책은 게임 개발, 특히 비행 시뮬레이터 제작에 관심이 있는 입문 소프트웨어 엔지니어들에게 귀중한 자료.

        Hacker News 의견

     * 'C++로 자신만의 비행 시뮬레이터 만들기 (1996)'라는 책에 대한 기사
     * 이 책을 통해 3D 프로그래밍과 게임 개발을 배운 많은 댓글러들의 추억
     * 한 사용자가 이 책을 통해 기본적인 3D 게임을 만들었음, 벽에 충돌이 없는 등의 사소한 문제가 있음에도 불구하고
     * 런던 대학교 교수가 가르치는 3D 컴퓨터 그래픽스 프로그래밍에 관심 있는 사람들을 위한 온라인 코스를 추천한 다른 사용자
     * 청소년 시절 이 책을 받았을 때의 흥분과 자신만의 비행 시뮬레이터를 만드는 즐거움에 대해 회상하는 일부 사용자들
     * 한 사용자가 VGA 카드의 레지스터 설정부터 조이스틱 포트 초기화까지 3D 세계를 만드는데 대한 책의 상세한 접근법을 지적
     * 이 책을 통해 배우면서 작성한 프로그램을 아직도 가지고 있는 몇몇 사용자들, 이 책이 그들의 프로그래밍 기술에 미친 지속적인 영향을 강조
     * 한 사용자가 책의 ePub 링크에 문제가 있다고 지적했지만, 관심 있는 사람들을 위해 작동하는 PDF 링크를 제공
     * 다른 사용자가 책의 내용이 선형 대수학에 관한 대학 과정과 잘 어울렸다고 언급, 책이 복잡한 수학 개념을 배우는데 실질적으로 활용되는 점을 강조
"
"https://news.hada.io/topic?id=10733","Kickstarter에서 10년 후에 출하된 Oscilloscope 시계","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Kickstarter에서 10년 후에 출하된 Oscilloscope 시계

     * 10년 전 Kickstarter에서 시작된 Gabriel Anzziani의 오실로스코프 시계 프로젝트, 초기 후원자에게 배송 시작
     * 시계는 시계와 오실로스코프로 기능, 24시간 대 12시간 레이아웃과 알람 기능을 갖춘 시계 모드, 프로브가 삽입될 때 오실로스코프 모드
     * 시계는 내부 PDI가 있는 8비트 Xmega 마이크로컨트롤러로 구동되며, C를 사용하여 사용자 정의 수정을 프로그래밍 가능, 8개의 프로그래밍 가능한 버튼도 특징
     * 화면은 1.28인치 저전력 E Ink 디스플레이, 배터리 수명은 사용량에 따라 다르며, 오실로스코프를 사용하지 않을 경우 한 번의 충전으로 약 30일, 오실로스코프를 사용할 경우 약 12시간 지속
     * Anzziani는 현재 매주 10개에서 20개의 보상을 발송 중이며, 2023년 말까지 모든 초기 보상을 배송하는 것이 목표
     * 프로젝트에 대한 자세한 내용은 Kickstarter 페이지에서 확인 가능, 보상은 더 이상 제공되지 않지만, 관심 있는 개인들은 여전히 프로젝트 진행 상황에 대해 더 알아볼 수 있음

        Hacker News 의견

     * 오실로스코프 시계, Kickstarter 프로젝트, 10년 개발 기간 후 드디어 출하
     * 후원자 중 한 명이 프로젝트의 여정을 공유, 초기에는 창조자의 정기적인 업데이트, 그 후 오랜 침묵 기간, 그리고 2021년에 출하 발표를 강조
     * 이미 시계를 받은 또 다른 후원자, 취약한 3D 프린트 케이스에도 불구하고 디버깅과 성능 측정에 유용한 흥미로운 데스크탑 가젯으로 설명
     * 일부 댓글 작성자들은 시계와 오실로스코프를 결합하는 복잡성을 고려할 때 창조자의 끈기와 성취에 대해 놀라움과 감탄을 표현
     * 다른 사람들은 Ultimate Hacking Keyboard와 같은 다른 장기 Kickstarter 프로젝트의 경험을 공유, 초기 시간 추정을 초과했지만 만족스러운 제품을 만들어냄
     * Kickstarter에서 복잡한 제조품을 후원하는 것에 대한 의견이 엇갈림, 일부는 이 이야기를 경고의 이야기로 보는 반면, 다른 일부는 지연에도 불구하고 결국 성공의 증거로 보기도 함
     * 소수의 댓글 작성자들은 신경 전도 검사 절차와 실패한 Star Citizen 프로젝트를 포함한 오실로스코프와 관련된 개인적인 이야기를 공유
"
"https://news.hada.io/topic?id=10717","curl-wget 벤 다이어그램","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           curl-wget 벤 다이어그램

     * 인기 있는 커맨드라인 도구인 curl과 wget 사이의 관계와 차이점에 대한 기사
     * 저자 Daniel Stenberg는 wget이 curl의 경쟁자가 아니라 중복 기능을 가진 동반 도구라고 주장
     * 주요 포인트는 wget을 curl보다 선호하는 경우라도 주어진 작업을 가장 잘 수행하는 도구를 사용하는 것
     * curl과 wget 사이의 기술적 차이점과 유사점을 설명하기 위해 Stenberg는 벤 다이어그램을 만듦
     * Stenberg는 wget에 코드를 기여했으며, 여러 wget 유지 관리자들이 curl에 기여함으로써 이 프로젝트들의 협업적 성격을 강조
     * 기사는 독자들이 다이어그램에 오류나 누락된 부분이 있다고 생각하면 피드백을 제공하도록 권장
     * 기사는 또한 curl과 다른 다운로드 도구 간의 추가 비교를 위한 링크와 OpenHub에서 curl과 wget을 비교하는 표를 제공

        Hacker News 의견

     * curl과 wget 명령줄 도구 간의 차이점에 대한 기사
     * 사용자들은 wget이 ""합리적인 기본 옵션"", ""다운로드 계속"", ""오류 시 재시도""를 가지고 있어 불안정한 연결에서 큰 파일을 다운로드하는데 더 신뢰할 수 있다고 지적
     * curl에서는 기본 기능이 아닌 wget의 강력함과 충돌 후에도 다운로드를 재개하는 능력을 칭찬
     * 일부 사용자들은 wget이 상자에서 더 잘 작동하고 그 매뉴얼 페이지가 더 쉽게 탐색되기 때문에 일상 작업에 선호
     * 두 도구 간의 주요 차이점은 curl이 기본적으로 stdout에 쓰는 반면, wget은 기본적으로 파일을 생성
     * wget은 기본적으로 URL에서 파생된 이름으로 파일을 다운로드하는 능력을 가지고 있어, 이는 curl에는 없는 기능으로 인정받음
     * curl의 창시자인 Daniel Stenberg은 도구에 대한 헌신으로 칭찬받으며, 그는 이를 IT 세계에서의 자신의 표식으로 여김
     * 일부 사용자들은 비교가 구식일 수 있다고 지적하며, wget은 이제 HTTP PUT과 프록시를 지원하는데, 이는 다이어그램에 포함되지 않았음
     * curl이 많은 프로토콜을 지원하더라도, 사용자들은 Venn 다이어그램에서 작은 교집합 영역이 대부분의 사용자들이 이러한 도구를 사용하는 것임을 지적
     * 게시물은 curl과 wget의 개발자들 사이의 동료애를 강조하며, 각각의 유지 관리자들이 서로의 도구에 코드 기여를 함
     * wget은 전통적으로 웹사이트를 미러링하는데 사용되었으며, curl은 일반적인 목적의 요청 라이브러리로 명령줄 인터페이스를 가짐
     * 다가오는 wget2는 libcurl에 상응하는 libwget을 도입
"
"https://news.hada.io/topic?id=10683","세금 준비 회사들: 무료 세금 신고에 대한 로비 활동에 9000만 달러 투자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               세금 준비 회사들: 무료 세금 신고에 대한 로비 활동에 9000만 달러 투자
"
"https://news.hada.io/topic?id=10716","Glove80 에르고노믹 키보드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Glove80 에르고노믹 키보드

     * 본 기사는 MoErgo가 개발 및 제조한 Glove80 Ergonomic Keyboard에 대한 상세 리뷰입니다.
     * Glove80은 초기 학습 곡선에도 불구하고 최고의 편안함을 자랑합니다.
     * 이 키보드는 가변 분할, 텐티드 반쪽, 엄지 클러스터, 키 웰, 팜 레스트, 그리고 낮은 프로파일의 Choc v1 스위치 등, 모두 사용자의 편의성을 향상시키기 위해 설계되었습니다.
     * Glove80은 또한 오픈 소스 ZMK 펌웨어, 키별 RGB 조명, 그리고 다양한 확장 옵션을 자랑합니다.
     * 리뷰어는 Glove80을 두 달 동안 전용으로 사용하였으며, 이를 또 다른 인체공학 키보드인 Kinesis Advantage2/360 Pro와 비교합니다.
     * Glove80은 손가락의 이동을 줄이고 자연스러운 호를 따라 움직이게 해주는 키 웰을 위해 칭찬받습니다.
     * Glove80의 엄지 클러스터는 엄지의 자연스러운 호를 따르도록 설계되어, 더욱 접근하기 쉽고 편안하게 사용할 수 있습니다.
     * Glove80은 텐팅 메커니즘으로서 스틸트를 사용하여, 사용자가 텐팅 각도를 자신의 선호에 맞게 조정할 수 있습니다.
     * 키보드는 짧은 키 감도와 작동 거리를 가진 낮은 프로파일의 Kailh Choc v1 스위치를 사용하여, 타이핑을 더욱 수월하게 만듭니다.
     * Glove80은 가벼우며 컴팩트하여, 여행에 이상적입니다.
     * 리뷰어는 구매 과정, 특히 관세 처리와 배송 시간에 대한 개선을 제안합니다.
     * 전반적으로, Glove80 Ergonomic Keyboard는 편안함, 사용자 정의 가능성, 그리고 인체공학적 디자인에 대해 5/5의 평점을 받습니다.

        Hacker News 의견

     * Glove80 Ergonomic Keyboard는 일부 사용자들이 적응하기 어려워하는 독특한 곡선 디자인을 가지고 있다.
     * 일부 사용자들은 Glove80 및 유사한 키보드의 키가 너무 높고 각도가 있어 누르기 불편하다고 느낀다.
     * 이러한 도전에도 불구하고 많은 사용자들은 Glove80의 수리 가능성, 오픈 펌웨어, 휴대성을 칭찬하며 만족하고 있다.
     * 사용자들은 Glove80이 반복적인 부상(RSI) 문제를 완화하는데 도움이 되었다고 보고하였다.
     * Glove80의 사운드 시연 비디오 요청이 있으며, 온라인에서 사용할 수 있는 콘텐츠가 제한적이다.
     * Glove80은 인체공학 키보드 시장의 새로운 대량 생산 제품으로 보이지만, 가격은 여전히 높다고 여겨진다.
     * 일부 사용자들은 QWERTY 레이아웃과 프로그래밍 가능성 때문에 Ultimate Hacking Keyboard (UHK)와 같은 다른 인체공학 키보드를 선호한다.
     * Glove80으로의 전환은 도전적일 수 있으며, 일부 사용자들은 타이핑 속도와 생산성이 감소하였다고 보고하였다.
     * 인체공학 키보드가 앉아서 생활하는 사람들에게 최선의 해결책인지에 대한 논란이 있으며, 일부는 대안으로 특정 운동과 정기적인 휴식을 제안하고 있다.
     * 특정 시장에도 불구하고 Glove80은 사용자 정의 옵션을 위해 칭찬받지만, 일부 사용자들은 더 다양하고 휴대하기 쉬운 디자인을 원한다.
"
"https://news.hada.io/topic?id=10756","리눅스 네트워크 성능 파라미터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            리눅스 네트워크 성능 파라미터

     * 본 기사는 Linux 네트워크 성능 파라미터에 대한 종합적인 가이드를 제공하며, sysctl/네트워크 파라미터와 그들이 Linux 네트워크 흐름에서 역할에 초점을 맞춥니다.
     * 사람들이 종종 높은 처리량과 낮은 지연 시간을 제공하는 sysctl 값에 대해 탐색하지만, 이는 비현실적이라는 점을 강조합니다. 새로운 커널 버전들은 기본적으로 잘 조정되어 있으며, 기본값을 변경하면 성능이 저하될 수 있습니다.
     * 본 기사는 Linux 네트워크 흐름에 대한 자세한 설명을 제공하며, 인그레스(들어오는 데이터)와 이그레스(나가는 데이터) 프로세스를 모두 다룹니다.
     * 'perf'라는 Linux 성능 분석 도구를 사용하여 네트워크 성능을 확인하는 방법에 대한 단계별 가이드를 제공합니다.
     * 본 기사는 Ring Buffer(rx, tx), Interrupt Coalescence(IC), Ingress QDisc, Egress QDisc, TCP Read and Write Buffers/Queues 등 다양한 네트워크 및 sysctl 파라미터를 설명하고, 이들이 네트워크 성능에서의 중요성을 설명합니다.
     * 이러한 파라미터를 확인, 변경, 모니터링하는 명령어를 제공하여 Linux 사용자들에게 실질적인 가이드를 제공합니다.
     * 본 기사는 또한 TCP FSM(유한 상태 기계) 및 혼잡 알고리즘을 언급하며, 이러한 측면을 모니터링하는 명령어를 제공합니다.
     * iperf3, vegeta, netdata 등의 네트워크 도구를 테스트하고 모니터링하는 도구 목록으로 마무리하며, 추가적인 학습을 위한 참고 자료의 종합적인 목록을 제공합니다.
     * 본 기사는 Linux 네트워크 성능을 이해하고 최적화하려는 모든 사람에게 가치 있는 자료입니다.
"
"https://news.hada.io/topic?id=10724","Nintendo 64용 Portal의 디메이크인 'Portal 64'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Nintendo 64용 Portal의 디메이크인 'Portal 64'

     * 인기 게임 'Portal'의 Nintendo 64용 디메이크인 'Portal 64'에 대한 기사
     * Modern SDK를 사용하여 게임을 구축할 수 있으며, 먼저 설정해야 함
     * 필요한 추가 설치 항목으로는 libnustd, Blender 3.0, Python vpk, vtf2png, sfz2n64, skeletool64, lua5.4, nodejs 등이 있음
     * 시스템에 있는 Blender 실행 파일의 절대 경로로 환경 변수 BLENDER_3_0을 설정해야 함
     * Portal이 설치된 위치에서 특정 파일들을 vpk 폴더에 추가해야 함
     * 'make' 명령어를 사용하여 프로젝트를 구축할 수 있음
     * Docker를 사용하여 게임을 구축할 수도 있으며, 유일한 설정 단계는 vpk 폴더를 채우는 것임
     * 현재 작업 중인 여러 기능들, 럼블 팩 지원, 퍼즐 요소 연결, 입자 효과, 자동 저장 체크포인트 등을 기사에서 언급함
     * 박스 충돌 소리와 주변 배경 루프와 같은 여러 사운드 추가가 진행 중임
     * 하드웨어에서 확인된 버그 목록이 우선 순위로 수정될 예정이라는 내용도 기사에서 언급함
     * 게임은 아직 개발 중이며, 다양한 시각적 결함과 게임 플레이 문제가 해결되고 있음

        Hacker News 의견

     * 'Portal 64'의 저자는 Nintendo 64용 Portal의 demake로, 게임 개발 상황을 정기적으로 YouTube 채널에 게시합니다.
     * 이 게임은 아직 초기 개발 단계에 있으며 Github 저장소에 스크린샷이나 링크가 부족합니다.
     * 더 오래된 플랫폼에서 게임을 재제작하는 demake의 개념은 디지털 폐기물을 줄이고 permacomputing을 촉진하는 잠재력을 인정받고 있습니다.
     * 인디 게임이 Xbox, PS3, Wii, 또는 Windows 7 데스크톱 및 노트북으로 더 쉽게 이식될 수 있다는 제안이 있습니다.
     * 이 게임을 실제 Nintendo 64 콘솔에서 실행하는 가이드에 대한 관심이 있으며, MiSTer의 새로운 N64 FPGA 코어에서 작동하는 것이 확인되었습니다.
     * 창작자의 최신 데모 비디오가 이용 가능하며 모바일 친화적입니다.
     * 댓글 작성자 중 한 명이 Portal의 또 다른 demake를 좋아하는 것으로 언급되었습니다.
     * 프로젝트는 일반적으로 인상적으로 여겨지며, 특히 N64 플랫폼의 제한을 고려할 때입니다.
     * 게임을 더 잘 이해하기 위해 스크린샷이나 비디오와 같은 시각적 콘텐츠에 대한 더 많은 요구가 있습니다.
     * 일부 댓글 작성자들은 두 개의 직교 포털을 통과하는 회전하는 'N 큐브'와 같은 특정 기능을 원하며, 이는 잠재적인 DMCA 문제에도 불구하고입니다.
     * 전반적으로 프로젝트는 긍정적으로 평가되며, 에뮬레이터에서 시도해 보는 데 관심이 있습니다.
"
"https://news.hada.io/topic?id=10702","'On Craft'에 대하여","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            'On Craft'에 대하여

     * 글은 '공예'라는 개념에 대한 개인적인 성찰이며, 농장에서 자라고 위험한 공장에서 일했던 저자의 조부, 한 명의 장인에게 영감을 받았다.
     * 저자의 조부는 고장난 것들을 고치는 데에만 능하지 않았다. 곧 고장날 것들을 미리 파악하는 능력이 있었고, 그의 작업은 세심하게 이루어졌으며 세부 사항에 대한 뛰어난 안목을 가지고 있었다.
     * 조부의 공예에 대한 이해는 물리적 객체를 넘어섰다. 그는 다른 종류의 나무들을 구분하고, 그들의 건강 상태를 단지 보는 것만으로도 평가할 수 있었다.
     * 가혹한 공장 환경에서 일하더라도, 조부는 속도보다 안전을 우선시하며, 사고를 방지하기 위해 조립라인에서 꾸준한 리듬을 유지했다.
     * 저자는 조부의 포괄적인 공예 접근법과 소프트웨어 엔지니어링 분야에서 종종 보이는 배타성을 대비시킨다. 여기서 일부는 모든 사람이 장인이 될 수 없다고 믿는다.
     * 저자는 소프트웨어 작업이 독특하고 다른 작업과 같은 방식으로 판단되어서는 안된다는 개념에 반대하며, 모든 노동이 숙련된 노동이라고 주장한다.
     * 저자는 소프트웨어 엔지니어가 아니어서 기술 회사의 메이커스페이스에서 배제된 개인적인 경험을 공유하며, 기술 산업의 엘리트주의를 강조한다.
     * 저자는 노력과 기술을 중요시하고, 누구의 작업이 진정하거나 숙련된 것인지 판단하지 않는, 더 포괄적인 공예에 대한 이해를 주장한다.
     * 저자의 조부는 상황에 관계없이 모든 사람을 존중하고 그의 작업을 공예로 만든 사람의 한 예로 제시된다.
     * 저자는 다양한 환경에 적응하고 주변 사람들에게 더 나은 가능성을 확장하는 조부의 능력에 대해 성찰하며, 이를 공예의 본질로 정의한다.

        Hacker News 의견

     * 'On Craft'라는 기사는 소프트웨어 엔지니어링에서의 장인정신 탐구를 칭찬하는 독자들에게 호평받았다.
     * 한 독자는 소프트웨어 엔지니어링 세계에서 이방인처럼 느껴진 경험을 공유하며, 소프트웨어 장인정신은 모두를 위한 것이고 개인용 컴퓨터는 일반 사람들이 자신과 주변 세계를 향상시키기 위해 만들어졌다고 강조했다.
     * 다른 독자는 저자의 할아버지가 레스토랑 테이블을 수리하는 이야기가 성찰을 유도한다고 제안하며, 일시적인 해결책이 아닌 더 영구적인 해결책이 필요하다고 주장했다.
     * 일부 독자들은 기사가 모호하고 공예 개념을 이상화한다고 비판하며, 나무를 인식하거나 밤에 거리에서 누군가를 두려워하는 것이 ""곧 깨질 것""을 인식하는 것과 동일하다고 주장했다.
     * 여러 독자들은 자신의 할아버지들이 각자 능숙한 장인이었던 개인적인 이야기를 공유하며, 실용적인 기술과 물건을 수리하고 만드는 능력의 가치를 강조했다.
     * 한 독자는 주변의 물건에 대해 작고, 게릴라식으로 수리를 하는 자신의 경험을 공유하며, 단 한 분의 주의와 한 달러 가치의 부품만 필요한 물건들이 무시되는 것에 대한 불만을 표현했다.
     * 이 기사는 피자 만들기와 요리와 같은 일상 활동에서의 공예에 대한 토론을 촉발하기도 했다.
"
"https://news.hada.io/topic?id=10728","Contextual AI, 차세대 언어 모델 구축을 위해 2000만 달러 시드 투자 받음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Contextual AI, 차세대 언어 모델 구축을 위해 2000만 달러 시드 투자 받음

     * 고급 언어 모델 개발에 중점을 둔 스타트업인 Contextual AI가 2000만 달러의 시드 펀딩 라운드를 발표
     * Bain Capital Ventures가 주도하였으며, Lightspeed, Greycroft, SV Angel, 그리고 몇몇 주목할 만한 엔젤 투자자들이 참여
     * 회사의 창립자인 Douwe Kiela와 Amanpreet Singh은 Microsoft Research, Meta/Facebook AI Research, 그리고 Hugging Face와 같은 최고의 기관에서 일한 AI 연구 분야에서 풍부한 경험을 가지고 있음
     * Contextual AI는 데이터 프라이버시, 맞춤형 가능성, 환영, 준수, 노후화, 지연, 비용 등의 문제로 인해 아직 기업용 사례에 적합하지 않은 현재의 대형 언어 모델(LLMs)의 단점을 해결하려고 함
     * 회사의 해결책은 신뢰, 안전, 데이터 프라이버시, 낮은 지연 시간, 그리고 높은 맞춤형 가능성에 중점을 둔 기업의 필요에 맞게 설계된 LLMs를 개발하는 것
     * Contextual AI의 접근 방식은 ""Retrieval Augmented Generation"" (RAG) 방법을 사용하는 것으로, 이는 생성 모델과 검색 기반 데이터 저장소를 결합하여 모델을 주어진 사용 사례와 맞춤 데이터에 맞게 조정
     * 회사는 이러한 접근 방식이 환영이 적고, 새로운 데이터 소스에 더 맞춤형이며, 더 효율적인 LLMs를 이끌 것이라고 믿음
     * Contextual AI는 오픈 소스에 대한 약속을 지키고 있으며, 가능한 한 많은 오픈 소스 소프트웨어를 활용하고 커뮤니티에 기여할 계획
     * 시드 펀딩은 팀을 확대하고 회사의 여정을 시작하는 데 사용될 것. 회사는 현재 다양한 역할에 대해 채용 중
     * Contextual AI는 스텔스 모드에서 벗어나 현재 여러 Fortune 500 기업들과 그들의 문맥 언어 모델을 시범 운영에 대해 적극적으로 논의중

   LLM 기반의 시스템 & 제품 구축 패턴들
     * RAG(Retrieval-Augmented Generation): 최신, 외부 지식을 추가
"
"https://news.hada.io/topic?id=10729","Lenovo의 새로운 27인치 4K 모니터, 안경 없이 3D 체험 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Lenovo의 새로운 27인치 4K 모니터, 안경 없이 3D 체험 가능

     * 'ThinkVision 27 3D Monitor'
     * 렌티큘러 렌즈와 실시간 눈 추적을 사용하여 각 눈에 다른 이미지를 투영, 3D 효과 생성
     * Lenovo의 독자적인 기술과 소프트웨어인 '3D Explorer'가 모니터의 3D 기능을 지원, 3D 플레이어와 3D 앱 개발을 위한 SDK 포함
     * 3D 그래픽 디자이너와 개발자 등 콘텐츠 제작자를 대상으로 함
     * 3D 해상도는 1920×2160이지만, 일반 2D 시청 모드로 전환하여 3840×2160의 해상도로 볼 수 있음
     * ThinkVision의 디자인은 Acer와 Asus와 같은 회사의 안경 없는 3D 모니터와 노트북과 비교하여 독특함
     * 3D 체험은 한 사용자에게 한정되며, 23.6에서 39.4 인치의 거리에서 볼 수 있음
     * 모니터 사용을 위해 특정 사양의 Windows 10 이상 PC가 필요하지만, Lenovo는 모니터가 3D 렌더링을 위한 추가 컴퓨팅 파워의 필요성을 줄인다고 주장
     * 일반 2D 모니터로서, ThinkVision은 60 Hz의 리프레시 속도, 310 니트, 1,000:1의 대비 비율, 99 퍼센트의 DCI-P3 및 Adobe RGB 색상 범위를 가진 4K IPS 화면을 제공
     * 다양한 포트를 지원. HDMI 2.1 두 개, DisplayPort 1.4 하나, USB-A (3.1 Gen 1) 네 개, 최대 15 W 전력 공급이 가능한 USB-C 포트 (3.2 Gen 1) 하나, RJ45, 3.5mm 잭, 최대 100 W 전력 공급이 가능한 상류 USB-C 포트를 포함
     * 내년 1월 $2,999에 출시할 계획
"
"https://news.hada.io/topic?id=10646","Ask GN: 게임물관리위원회에서 말하는 게임은 무엇일까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Ask GN: 게임물관리위원회에서 말하는 게임은 무엇일까요?

   안녕하세요, [텍스트 웹게임 플랫폼]을 제작 운영하고 있는 텍스터즈라고 합니다.

   예전에 Show GN 에 한번 저희 서비스를 홍보한 적 있었습니다.
   https://news.hada.io/topic?id=10259

   그때는 [멀티엔딩 웹소설 플랫폼]으로 시작했지만 피보팅을 거쳐 [텍스트 웹게임 플랫폼] 으로 운영중에 있습니다.

   아무래도 텍스트 웹'게임' 이다보니까, 게임물관리위원회에서 등급 분류를 받아야 할까 고민 중인데요. 게임물관리위원회에서 말하는 '게임'이란 무엇일까요?
     * 「게임산업진흥에 관한 법률」(이하 게임법) 제2조 제1호와 제21조에 규정되어 있는 바와 같이 “컴퓨터프로그램 등 정보처리기술이나 기계장치를 이용하여 오락, 여가선용, 학습 및 운동효과 등을 높일 수 있도록 제작된 영상물 또는 그 영상물과 관계된 기기 및 장치”는 모두 게임물관리위원회(이하 게임위)의 등급분류를 받아야 합니다. 즉, 게임물을 유통시키거나 이용에 제공할 목적으로 게임물을 제작 또는 배급하고자 하는 사람은 당해 게임물을 제작 또는 배급하기 전에 게임위로부터 등급분류를 받아야 합니다.

   “컴퓨터프로그램 등 정보처리기술이나 기계장치를 이용하여 오락, 여가선용, 학습 및 운동효과 등을 높일 수 있도록 제작된 영상물 또는 그 영상물과 관계된 기기 및 장치”

   에서 ""영상물 또는 그 영상물과 관계된 기기 및 장치"" 라고 하니까 저희는 아예 텍스트 기반이니 저기에 해당되지 않는걸까요?

   그리고 저희 플랫폼에 유저가 텍스트 웹게임을 만들어서 올리려면 이것도 하나하나 게임 등급을 받아야 할까요?

   차라리 웹소설 플랫폼으로 간다면 문제가 없을까 싶다가도, 아이템이나 스탯 확률과 같이 게임적 요소가 앞으로 더 많이 개발될 예정이고, BM요소도 추가할 예정인데 웹소설(E-book)이라고 눈가리고 아웅하고 있어도 되나 싶습니다.

   그리고 저희와 비슷한 서비스를 제공하는 업체가 있습니다.(https://playthe.world/)
   여기에서는 유저가 직접 방탈출게임을 만들어서 배포할 수 있습니다. 근데 이 곳의 경우에는 따로 게임등급을 받아서 진행하는 건 아닌 것 같은데 어떤 차이점이 있는 걸까요? 회사 소개에서는 '콘텐츠 제작'을 주로 앞세우고 있는데, 저희도 게임 플랫폼이 아닌 콘텐츠 플랫폼으로 가도 괜찮을까요?

   선배님들의 지혜와 의견이 필요합니다 ㅠㅠ

   과거에 uc노벨이라는 플랫폼이 있었죠. 영상은 아니지만 텍스트와 이미지로 이루어진 비주얼노벨 플랫폼입니다.
   물론 사업성의 문제인지 망해서 없어졌지만 게등위에서 해당 이름을 찾아봐도 공식적으로 심사를 받은 기록은 없습니다. 테스트를 위해 게등위에서 서비스 종료한 게임 아무거나 입력해봐도 나오는 걸 보아 공식적인 심사는 받지 않은 것 같습니다. 다른 방식으로 진행했을 수는 있겠습니다만 사이트가 없어져서 그 여부는 알 수 없네요.. UC노벨은 2007~2019년까지 서비스했어요.

   2010년대 초반즈음하여 플래시게임 커뮤니티에서 게등위 관련 큰 풍파가 있었던 걸 떠올려보면, UC노벨은 딱히 영향받지 않았다고 할 수 있을 것 같네요. 그게 아니라면 2019년까지도 못 버텼을 겁니다.

   하지만 확률적인 아이템과 BM이 추가된다는 가정이라면 기획에 대해 정비한 다음 공식적인 자문을 구해보시는 게 좋을 것 같습니다. 가능하고 불가능한 게 있을 것 같아요.

   UC노벨이라는 사이트가 현재 저희 텍스터즈의 시스템과 가장 비슷해 보이는데 게등위의 영향을 받지 않은 걸 보면 '게임' 이 아닌 '인터랙티브 콘텐츠' 분야 쪽으로 밀고 가는게 좋을 것 같습니다!

   정말 좋은 조언 감사합니다!

   비슷한 업체가 이미 있다면 일단 특별한 게임이 아닌 텍스트 기반의 사용자 제작 콘텐츠로 밀어붙여도 괜찮지 않을까요?
   요즘 있는 ~~~ 테스트 생성기처럼 다양한 선택지/분기가 있고, 이미지를 제공하고 있지만 게임이라고 취급하지는 않으니....
   (말씀하신 대로 영상물이 아니라서 그런지)

   물론 완전 게임과 동일하게 구현하고 싶거나 더 자세히 알아보고 싶으시다면 법적 검토를 받으셔야 할 부분 같긴 합니다.

   ps. 게임 업계와 전혀 상관 없는 사람의 사소한 의견입니다...

   텍스트 기반의 사용자 제작 콘텐츠 좋습니다. 그리고 말씀 주신 것 처럼 성향 테스트 생성기와 저희 서비스의 큰 차이점을 모르겠습니다. 좋은 의견 감사합니다!
"
