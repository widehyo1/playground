"https://news.hada.io/topic?id=6665","alfred-chromium-workflow","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        alfred-chromium-workflow

   크로미움 기반의 다양한 브라우저들을 지원하며 북마크 검색, 프로필 전환, 열려 있는 탭 검색 등의 기능을 가진 Alfred 워크플로우입니다.
"
"https://news.hada.io/topic?id=6748","오크리지 국립 연구소의 Frontier가 세계 슈퍼컴퓨터 순위 1위를 차지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               오크리지 국립 연구소의 Frontier가 세계 슈퍼컴퓨터 순위 1위를 차지

     * 미국 에너지부 산하 최대 연구소인 오크리지 국립 연구소 (Oak Ridge National Laboratory)의 슈퍼컴퓨터인 Frontier가 1.1 엑사플롭스로 전 1위였던 후가쿠(442 페타플롭스)를 두배 이상 격차로 제치고 세계 슈퍼컴퓨터 성능 순위표인 Top500 (https://www.top500.org/)에서 1위를 차지.
"https://news.hada.io/topic?id=6755","Floppotron 3.0 - FDD/HDD/스캐너로 만든 컴퓨터 오케스트라","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Floppotron 3.0 - FDD/HDD/스캐너로 만든 컴퓨터 오케스트라
     * Frontier는 휴렛 팩커드 엔터프라이즈의 HPE Cray EX 슈퍼컴퓨터 시스템으로 제작됐으며, 9400개 이상의 Amd EPYC CPU와 37,000개 이상의 AMD Radeon Instinct GPU로 구성되며, 분당 6000갤런을 이동시킬 수 있는 수냉 시스템을 갖춤.


     * 512개의 플로피 디스크 드라이브, 4대의 플랫베드 스캐너, 16개의 하드디스크 드라이브 로 구성
   테슬라 DOJO 슈퍼컴퓨터가 1000페타(1엑사)가 되어서 1등이 될거라고 작년에 얘기했는데, 다른데서 먼저 1엑사에 도달했네요.

     * USB-to-MIDI 컨트롤러로 음악 데이터를 전송하고, 전용 컨트롤러로 각 기기에서 특정음을 내어 음악을 연주하는 장치
   올해 8/19 에 Tesla AI Day #2 한다고 하니 그때 얘기나올지 함 봐야..
          + FDD는 헤드 이동 소리로 낮은 톤을 내고
"
          + 스캐너는 모터가 커서 고음을 발생
          + HDD는 딸깍 소리

   1.0은 2011년에 FDD 1개 또는 2개
   2.0은 2016년에 64 FDD, 8 HDD, 2 스캐너
   3.0은 엄청 거대해졌네요. 소리도 풍부합니다.

   이 글이 소개된 HN의 댓글 에서 재미난 채널을 봤는데

   Device Orchestra https://www.youtube.com/channel/UCDwMh0pu1iSXeKx7qmqjIQA

   여기는 정말 다양한 기기를 가지고 음악을 만들어냅니다.

   와 재밌는 채널이네요. 바로 구독했습니다
"
"https://news.hada.io/topic?id=6728","Apple 디자인 어워드 2022년 수상작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Apple 디자인 어워드 2022년 수상작

     * 포용성 : Procreate, Wylde Flowers
     * 기쁨과 재미 : (Not Boring) Habits, Overboard!
     * 인터랙션 : A Musical Story, Slopes
     * 사회적 영향력 : 'Gibbon: Beyond the Trees', Rebel Girls
     * 영상 및 그래픽 : Halide Mark II - 프로 카메라, LEGO® Star Wars™: Castaways
     * 혁신 : MARVEL 퓨처 레볼루션, Odio
"
"https://news.hada.io/topic?id=6697","Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2022년 6월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구직 - 같이 일할 팀을 찾습니다 (2022년 6월)

   일할 곳을 찾고 계시다면, 간단히 정보를 남겨 주세요.

     지역 :
     리모트 필요 :
     기술 :
     이력서 :
     이메일 :

   위 정보는 구인을 위해서만 이용해 주세요

   ~~

   구직자 들이 홍보할 수 있는 공간도 필요하다는 얘기를 주셔서 시도해 봅니다.
   혹시나 봇들이 이메일 주소를 크롤링하는 경우도 있을 수 있으니 '[at]' 이나 '[앳]' 등을 써서 이메일 주소를 난독화 해주셔도 좋습니다.
   가능하면 자신의 깃헙/링크드인 URL을 남겨 주세요.
   HN의 Who wants to be hired 를 참고 했습니다.

   지역 : 서울
   리모트 필요 : 불필요 (하이브리드 가능시 best)
   기술 : 아래 참고
   이력서 : https://bit.ly/3NAvKbM
   이메일 : young.kkim2@gmail.com

   <PO/PM 구직>

   저는 창업 1회 포함 약 10년 정도 PM/PO 포지션에서 일했습니다.

   아래와 같은 비즈니스를 하는 팀을 경험 했습니다.
     * 커머스/플랫폼 : 마켓할인 플랫폼
     * 생산성 : 셀러를 위한 카메라앱
     * 커뮤니케이션 : 스포츠정보 제공앱, 채팅봇
     * 구독, 플랫폼 : 온라인 퍼스널 트레이닝 (창업)

   이런 스킬셋을 가지고 있습니다.
   ✔ Data 조회/편집/가공 : SQL, BigQuery, Excel, Python (초급), Kibana (사용경험有)
   ✔ Data Analysis: GA/Firebase, Power BI, Google Data Studio, Fullstory, Appsflyer
   ✔ HTML, CSS, Javascript, bootstrap, PHP : 프로토타입 수준의 서버연동 웹 개발 가능
   ✔ AWS/GCP : 콘솔레벨 직접 셋업 및 integration 기술문서 검토 및 적용기획
   ✔ Communication : Jira/Confluence, Slack, Notion, Redmine, Trello, 두레이
   ✔ Prototyping/UI wireframing : Adobe XD, Zeplin, 카카오 오븐, draw.io
   ✔ Git : Gitlab, Github 주요 개념 이해 및 사용가능 (브랜치 분기하여 작업 가능)

   좀 더 상세한 사항은 상단의 이력서 URL에 작성해 두었습니다.
   감사합니다.

   Kane 님, 이력서 링크에 액세스 권한이 필요하다고 뜨네요 :)

   앗.. 수정해 놓았습니다^^;
"
"https://news.hada.io/topic?id=6753","간 이식에 변화를 몰고 올 혁신적 보관 기술이 등장했다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     간 이식에 변화를 몰고 올 혁신적 보관 기술이 등장했다

     * 기존에는 12시간 보관만 가능해서, 이식용 간의 70%는 사용이 불가했음
     * 인체 내부와 비슷한 압력과 온도등으로 재현해서 최대 ""12일""까지 보관 가능
     * 이식전에 생체 검사및 약물 치료할 가능성도 커져

   이건 정말 널리 보급되었으면 좋겠네요. 가족 중에 가족력으로 인한 만성 B형 간염 보균자가 계신데요, 평생토록 술담배를 안 하셔도 간 수치가 늘 안 좋으시고, B형 간염이셨던 친척들이 다 간암으로 손도 못 써보고 돌아가셨던지라.. 이식을 해야하는 날이 오면 기꺼이 제 간을 내어드리겠지만 그렇지 못한 환자들에게 큰 희망이 될 것 같습니다.

   첫 글자가 크게 보이는 디자인 때문에 '이' 식용 간 이라고 나와서.. 왠 식용 간 인가 했네요 ㅡ.ㅡ;;;
"
"https://news.hada.io/topic?id=6686","시스템 설계 관련 자료들 모음 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            시스템 설계 관련 자료들 모음

     * 대용량 비디오 처리 : 페이스북, 넷플릭스
     * 클러스터 & 워크플로우 관리 : 페이스북, 구글, 넷플릭스
     * 인트라-서비스 메시징 : Airbnb, Nginx Service Mesh
     * 메시지 큐 안티패턴
     * 서비스 메쉬
     * 실용적인 시스템 설계 : 페이스북, 유튜브..
     * 분산 파일 시스템
     * 시계열 데이터베이스
     * Rate Limiting
     * 네트웍 프로토콜
     * 구독 관리 시스템 : 넷플릭스
     * 구글 닥스
     * API 설계
     * NoSQL DB Internals : 카산드라, 빅테이블, DynamoDB
     * NoSQL DB Algorithms
     * Database Replication
     * Containers and Docker
     * Capacity Estimation
     * Publisher & Subscriber
     * Event Driven Architectures
     * Microservices
     * Load Balancing
     * Alerts and Anomaly Detection
     * Distributed Logging
     * Metrics and Text Search Engine
     * Single Point of Failure
     * Real Time Processing
     * Caching

   비슷한 레포지토리: https://github.com/donnemartin/system-design-primer
"
"https://news.hada.io/topic?id=6700","여피족과 보보스족으로 읽는 NFT","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           여피족과 보보스족으로 읽는 NFT

     * PFP NFT를 투자 외에 구매하는 가장 큰 이유는 자아 표현
     * 초기 NFT 판매는 부 또는 크립토 OG를 증명하기 위한 수단
     * 다만 시간이 지날수록 NFT 내에서 유틸리티를 찾는 사용자가 많아짐
     * 이런 소비형태는 일종의 브랜드, 명품 등에서 찾아볼 수 있음
     * 1980년대 여피족의 표면적 사치 -> 크립토펑크, BAYC
     * 1990년대의 보보스족의 합리적 사치 -> 문버드(멤버십NFT)
     * 2000년대 명품 소비 트렌드를 통해 그 다음 트렌드는 두 가지로 예상해볼 수 있음
          + 매스티지 : 대중적인 명품
          + 매스클루시버티 : 차별화된 명품
     * 앞으로 NFT는 더 효과적인 브랜드 매니지먼트와 전략 필요
"
"https://news.hada.io/topic?id=6720","M1 Windows Project ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           M1 Windows Project

     * 애플 M1 칩에서 윈도우를 실행하기 위한 프로젝트
     * M1은 표준 ARM64 칩과는 많이 다름
     * Asahi Linux 에서 많은 작업을 해뒀지만, 윈도우를 위해서는 다른 추가 작업들이 필요
       → PSCI(Power State Coordination Interface) 같은게 꼭 필요
     * M1에서 윈도우 실행이 어려운 이유
       → 인터럽트 컨트롤러와 IOMMU 때문
     * 이를 해결하기 위해 경량 하이퍼바이저를 이용할 계획

   3번째 줄에 Asaha Linux -> Asahi Linux 입니다.

   2번째 줄에 m1인 > m1은 의 오타 같네요. ㅎㅎ
"
"https://news.hada.io/topic?id=6743","Firefox 데스크탑 & 안드로이드에서 WebContainers 지원 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Firefox 데스크탑 & 안드로이드에서 WebContainers 지원 시작

     * WebContainers는 풀스택 Node.js 환경을 브라우저에서 WASM 으로 실행하는 것
     * 웹표준 API를 이용해서 개발되었지만 지금까진 크로미엄 기반에서만 실행가능 했음
     * 모질라 팀과 협업해서 이제 Firefox Mobile/Desktop에서 WebContainers를 지원
          + 풀웹앱을 브라우저 탭에서 개발 및 실행 가능
          + Node.js 어플리케이션을 Firefox DevTools에서 디버깅 가능
          + 개발 환경을 URL로 간단히 공유 가능

   WebContainers : 브라우저에서 Node.js 실행
"
"https://news.hada.io/topic?id=6696","Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2022년 6월)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 이달의 구인 - 멤버를 찾고 계신가요 ? (2022년 6월)

   현재 근무중인 스타트업에서 같이 일할 멤버를 찾고 계시다면
   회사 소개 / JD / 위치 / 리모트 가능 여부 / 연락방법(이메일,웹사이트) 등을 적어주세요.
   ""멤버가 직접 1개의 댓글로 홍보를 작성""하시면 됩니다. (서치펌 등은 불가)

   이 글은 매월 첫번째 월요일에 등록됩니다.
   해당 회사의 공고에 관심있으시면 기재된 메일등으로 연락하시기 바랍니다.

   작성 예)

   하다 | 프론트엔드 개발자, 디자이너 | 서울 역삼 | Remote 가능 | https://hada.io | jobs@hada.io
   하다는 긱뉴스를 개발 및 운영하는 스타트업 입니다. 저희는 이러 저러 해서 엄청 좋은 회사입니다~~
   [1] 프론트엔드 개발자 JD : 내용 또는 URL
   [2] 디자이너 JD : 내용 또는 URL

   [피크 - 월급이 주급으로 바뀌는 세상]

   안녕하세요! 저희 피크페이는 월급을 주급으로, 일한만큼 급여를 근로자가 바로 사용할 수 있는 회사의 급여 복지 서비스 ‘피크'를 만들고 있습니다.

   이제 막 시작한 스타트업이라서 함께 새로운 서비스를 만들 분을 찾습니다.

   ► 서비스 소개

   피크는 직원들이 월급날까지 기다릴 필요 없이 일한 만큼 급여를 바로 사용할 수 있는 무료급여 복지 서비스입니다.
     * 서비스 소개 페이지: https://peakpay.co.kr

   ► 피크의 비전
     * 피크의 금융 서비스를 통해 2100만명의 근로자들이 경제적 안정과 기회를 갖고 보다 행복한 삶을 사는데 기여하는 것을 꿈꾸고 있습니다.

   ►현재 단계

   현재는 풀스택 개발자 한분과 저랑 2명이서 MVP를 개발하여 Close Beta를 진행하고 있고 법인 설립 전 단계입니다. 추가로 글로벌 VC와 Seed 투자를 계획하고 있고 법인 설립 후에는 속도를 내려는 상황입니다.

   아직은 창업 전 단계이기 때문에 갖추어진 것이 없는 상태이고 하나하나 준비를 하고 있는데요. 피크의 비전에 공감하고 함께 창업 단계부터 성장하는 서비스를 만들어갈 열정과 능력있는 초기 크루를 찾고 있습니다!

   ►피크 크루를 찾아요!
     * 채용 홈페이지: https://team.peakpay.co.kr/recruit
     * 초기 팀 크루: https://team.peakpay.co.kr/recruit/crew

   첫 10명의 크루가 피크의 방향을 결정한다고 생각합니다.
   기획, 개발, 디자인, 사업개발 피크의 성장에 기여할 수 있는 직군이라면 항상 열려있습니다.
   피크의 서비스의 시작부터 조직문화까지 함께 만들어 가는데 관심 있으신 분은 편하게 연락주세요.
     * 지원 방법: 이메일(recruit@peakpay.co.kr)로 간단한 자기 소개와 왜 피크 초기 멤버에 관심이 있는지도 알려주세요!
     * 연락주시면 함께 이야기하면서 서로를 알아가는 시간을 가지면서 합류를 결정할 수 있습니다. 부담없이 연락주세요.

   🎧 소리하는 회사! 가우디오랩에서 소중한 가우딘을 모십니다!
   🎧 강남구 삼성역 인근 / 자율근무 / careers@gaudiolab.com
   🎧 채용페이지는 여기 [ https://gaudiolab.com/ko/careers/ ]
   🎧 어서오세요!
     * 서비스 백엔드 소프트웨어 엔지니어
     * 플랫폼 백엔드 소프트웨어 엔지니어
     * 모바일 SDK 소프트웨어 엔지니어
     * 빅데이터 엔지니어

   🎧 가우디오랩을 소개해요
   가우디오랩은 세계적으로 손꼽히는 오디오 기술을 통해, 여러분께서 전혀 경험해 보지 못했던 새로운 차원의 소리 경험을 제공하는 회사입니다. 메타버스의 완성을 담당하는 스페이셜 오디오(공간음향)와 AI 오디오 기술의 가장 첨단, 그 이상의 경지에서 비교 불가한 오디오 기술의 초격차를 구현해내고 있습니다.

   가우디오랩에서 매일 창조되는 새로운 소리들은 네이버, 플로, 벅스뮤직 등 국내외 유수의 서비스에 적용되어, 여러분의 귀에 가닿고 있습니다. 이미 매일 약 2천만명의 사용자가 가우디오랩의 소리기술을 경험하고 있다는 사실! 가우디오랩과 함께 폭발적으로 성장하며 스케일업을 만들어나갈 미래 가우딘을 정중히 모시고자 합니다.

   [FuturePlay 퓨처플레이]
    1. 채용페이지: https://futureplay.co/recruit
    2. 채용직군: React 프론트엔드 / 풀스택 / Product Owner
    3. 위치: 서울 서울숲 아크로포레스트 디타워
    4. 근무형태: 리모트 가능
    5. Contact: jobs@futureplay.co

   FuturePlay는 기술 스타트업에 투자하는 투자사이자 액셀러레이터로서 역량 있는 창업팀을 발굴해 성장을 위한 투자와 각종 지원을 제공합니다. FuturePlay가 투자한 185여 개의 국내외 기술 스타트업들은 인공지능, 자율주행, 로봇, 드론, 디지털 헬스케어, 핀테크, VR/AR, 블록체인 등 근미래의 사회와 산업을 혁신할 첨단 기술들의 발전을 이끌어가고 있습니다.

   [Tech Team in FuturePlay]
    1. Tech Team 소개
       [https://notion.so/futureplayx/…]
    2. Tech Team 문화
       [https://notion.so/futureplayx/…]

   [퓨처플레이와 함께 미래를 만들어가고 싶다면?]
    1. 프론트엔드 https://career.greetinghr.com/o/OTU3.kHzNGtgeGKNQwZa8yljTguUJKkQ
    2. 풀스택 https://career.greetinghr.com/o/NjY0MQ.KfRXFb-Agl8coSGnyKvP8lhCjxs
    3. Product Owner
          + https://career.greetinghr.com/o/MTQzODE.MCkJgjlj7kO3CbWNWmZyR6jOzW8
          + https://career.greetinghr.com/o/MTg0NTE.lLE53vaOacIHKQZtz6uTcH8k8nE

   많은 지원 부탁드립니다!

   💻 커먼컴퓨터 | Software Engineer | 서울 양재 | Remote 가능 | contact@comcom.ai (cc: hanabee@comcom.ai)

   모두가 같이, AI와 함께 돌아가는 Web3 세상을 만드는 커먼컴퓨터에서 다음 미래를 같이 만들어갈 갈 분을 찾고 있습니다.

   Software Engineer JD

   커먼컴퓨터는 세상의 모든 사람과 컴퓨터가 만들어내는 가치를 투명하게 측정하고 보상하자는 사명을 가지고 구글과 네이버 출신들에 의해 시작되었습니다. 현재 블록체인 기술을 핵심으로 하여, 인공지능 관련 대규모 연산이 가능한 블록체인 AI Network와 분산형 클라우드 플랫폼 Ainize®, 그리고 이를 기반으로 한 크리에이터와 팬을 위한 소셜 플랫폼 aFan®을 서비스 중에 있습니다.

   또한 커먼컴퓨터는,
     * 국내외 유명 VC들로부터 130억 규모의 시리즈 B 투자를 마무리하였습니다.
     * Google for Startups와 Naver D2의 엑셀러레이팅 프로그램을 이수하였습니다.
     * 글로벌 기업(예: 구글)의 혁신적 기업문화와 스타트업만의 빠른 성장을 경험할 수 있습니다.

   저희 유튜브에 놀러오시면, 제가 나온 편도 살짝!

   [🍋 레몬베이스(Lemonbase) - 회사와 구성원의 성과관리 혁신을 위한 국내대표 HR SaaS]

   채용페이지 : lemonbase.team/
   채용직군 : 프론트엔드 / 백엔드 / 디자이너 / 프로덕트 오너 (PO)
   위치 : 서울 성수(서울숲/뚝섬역 5분)
   근무형태 : Remote 가능
   레몬베이스는 ""일하는 사람들이 성장하고 성과를 내는 방식(grow and perform)을 혁신""하고 있습니다. 회사와 구성원의 건강한 성장을 돕기 위한 '성과관리솔루션' HR SaaS를 만들고 있고요. 서비스 런칭 후 매월 50% 이상 빠르게 성장하며, 카카오모빌리티 / 쏘카 / 위메프 / 마이리얼트립 / 매스프레소 / 버킷플레이스 등 수많은 기업들이 이미 레몬베이스와 함께 일하는 방식을 혁신하고 있습니다.

   2020년 12월 국내 시드 라운드로는 매우 드물게 본엔젤스 / 크래프톤 / 카카오벤처스로부터 62억원의 펀딩에 성공함으로써 우리의 가능성을 인정 받았어요 😊

   ✅ 앞으로 10년 우리 앞에 펼쳐질 가장 큰 기회를 현실로 만드는데 동참하고 싶은 분
   ✅ '건강한 성장'이라는 단어에 조금이라도 가슴이 떨리시는 분
   🌈🌈 https://www.lemonbase.team 에서 흥미로운 이야기들을 더 많이 보실 수 있습니다 :)

   프론트엔드 엔지니어 https://www.lemonbase.team/recruit/fe
   백엔드 엔지니어 https://www.lemonbase.team/recruit/be
   프로덕트 오너 https://www.lemonbase.team/recruit/po

   🙌 당장 지원하지 않으셔도 괜찮아요! 관련해서 궁금하신 점이 있거나 가볍게 이야기를 나눠보고 싶다면 start@lemonbase.com 으로 편히 메일 부탁드립니다 :)

   💎 AB180(에이비일팔공) | 소프트웨어 엔지니어 | 서울 서초(강남역 1분) | Remote 가능(부분) | https://hiring.abrge.app/geeknews | hr@ab180.co

  초당 10만 건의 트래픽 처리. 월 2,000만 MAU.

  300억 이벤트 수집 및 분석. 실시간 대규모 데이터 분석 및 성과 극대화를 위한 머신러닝.

   유니콘부터 대기업까지 사용하는 프로덕트를 만들며 함께 성장하실 분들을 찾고 있어요!
     * AB180은 'Airbridge'라는, 사용자 행동과 마케팅 성과를 측정, 분석해서 더 좋은 퍼포먼스를 낼 수 있도록 돕는 도구를 만들고 있어요.
     * Meta(페이스북) 공식 모바일 측정(MMP) + 멀티터치 기여도 분석(MTA) 파트너
     * GS리테일, KB증권, 퀸잇, 다노 등 많은 기업에서 사용하는 제품
     * 실시간 대규모 데이터 처리 및 분석, 시각화 등을 경험 가능 → 기술블로그

   전직군 채용중 / 저희에 대해 궁금하시다면 아래의 공고를 확인해주세요 :)

   [1] Backend Engineer - Data Pipeline ↗
   [2] Backend Engineer - Data Serving API ↗
   [3] Backend Engineer - Platform API ↗
   [4] Backend Engineer - Query Engine ↗
   [5] Data Engineer ↗
   [6] DevOps Engineer ↗

   [7] SDK Engineer - Android ↗
   [8] SDK Engineer - iOS ↗
   [9] SDK Engineer - Web ↗

   [10] Frontend Engineer ↗

   비사이드코리아 | 프론트엔드/백엔드 엔지니어, 프로덕트 디자이너 | 여의도 IFC | Remote 불가 | https://bside.ai | careers@bside.ai

   거버넌스 개선을 위한 커뮤니티 플랫폼, 비사이드코리아

   전자의결 서비스 런칭 직후, 1,200억원의 주식을 위임받아 에스엠 캠페인에서 완승을 거두어 국내 자본시장 역사상 처음으로 행동주의를 성공시킨 플랫폼이 되었습니다. 전자의결을 바탕으로 앞으로 증권사 연동, 주주 집결력 강화를 위한 커뮤니티 개선, 투자기관 매칭 연계 등을 통해 플랫폼 기능을 강화하고자 합니다.

   비사이드코리아와 함께 코리아 디스카운트를 해결하실 분을 찾고 있습니다.

   [1] 벡엔드 엔지니어(경력)
   [2] 벡엔드 엔지니어(신입)
   [3] 프런트엔드 엔지니어(경럭)
   [4] 프런트엔드 엔지니어(신입)
   [3] 프로덕트 매니저

   원티드랩 | iOS 개발자 | 서울 송파구 잠실 | Remote 가능(부분) | https://www.wantedlab.com/ | junsang,ryu@wantedlab.com

     원티드랩은 차별화된 데이터를 기반으로 각자에게 가장 잘 맞는 커리어 경로를 설계하고 커리어 성장 경험을 제공하여, 모두가 나답게 일하고 즐겁게 성장할 수 있도록 돕는 HR 테크 회사입니다. 우리는 서로 다른 백그라운드를 가진 동료들과 지난 6년간 매년 매출을 약 2배씩 성장시켜왔습니다. 채용을 넘어, 커리어, 긱스, HR솔루션, 글로벌 등 라이프 커리어 플랫폼으로 도약을 함께할 분들을 모십니다.

   개발플랫폼팀은 사용자가 원티드의 다양한 서비스를 편하게 이용하는 것을 최우선 목표로 회원 관리, 가입, 로그인의 기능을 통합 인증하는 프로젝트를 진행하고 있습니다.
   또한, 원티드 제품을 만드는 스쿼드 조직 내의 디자이너, 프론트, 앱 개발자들을 위한 제품 설계의 기준인 디자인 시스템을 진행하여 원티드 서비스가 높은 퀄리티의 결과를 유지할 수 있도록 공통 컴포넌트/모듈 제작, 배포/문서화, 조직 내 가이드를 제공합니다

   [1] iOS 개발자

   뉴스젤리 | 프론트엔드 개발자 | 서울 성동구 (서울숲역 바로 앞) | Remote 불가 | https://newsjel.ly/ | hr@newsjel.ly

   국내 No.1 데이터 시각화 전문가 그룹, 뉴스젤리
     * 뉴스젤리는 국내 데이터 시각화 분야의 독보적인 전문성을 갖춘 데이터 시각화 전문 기업입니다.
     * 서울시, 한국방송광고진흥공사(KOBACO), 한국개발연구원(KDI), 아모레퍼시픽, 현대로템, 중앙일보 등 국내 유수의 공공기관 및 기업, 언론사와 프로젝트를 진행하였으며, 자체 개발한 웹 기반 데이터 시각화 솔루션 DAISY와 시각화 관련 특허 15건을 보유하고 있습니다.
     * 데이터 시각화 전문성을 바탕으로 데이터 시각화 대시보드 구축, 데이터 시각화 컨설팅 등 프로젝트를 진행하며 누구나 자유롭게 데이터를 활용할 수 있는 경험을 제공합니다.

   2022년 뉴스젤리 채용
     * 지난 2020년 하반기 서울숲에 새롭게 자리를 잡은 뉴스젤리는 핵심 구성원을 중심으로 대대적인 조직 개편 등 더 나은 뉴스젤리로 거듭나기 위한 변화를 시작하였습니다.
     * 더 나은 뉴스젤리 안에서 데이터 시각화의 가치를 경험하고 더 많은 사람에게 가치를 전할 ‘전문가‘를 찾습니다.

   [1] 웹 프론트엔드 개발자 : https://302.notion.site/2022-2069acec1ce5468c975c0975d7360c3b

   이메일 뉴스레터 서비스 스티비에서 개발, 프로덕트 전직군을 모시고 있어요!

   스티비 | 프론트엔드/백엔드 엔지니어, 프로덕트 디자이너, 프로덕트 매니저 | 서울 중구 소공동(시청역, 을지로입구역 도보 5분) | Remote 가능(부분) | https://stibee.com | recruit@stibee.com

   스티비는 이메일 뉴스레터의 제작과 발송, 마케팅을 돕는 이메일 뉴스레터 서비스입니다. 2019년 서비스 출시 이후 매년 2배 이상 성장해왔고, 우아한형제들, 컬리, 뉴닉, 조선일보, MBC 등 유니콘 기업, 미디어 스타트업, 주요 언론사/방송사에서 스티비를 사용하고 있습니다.

   이메일 뉴스레터 제작 솔루션으로 시작한 스티비는, 이제 이메일 뉴스레터를 기반으로 새로운 콘텐츠 구독 생태계, 크리에이터 생태계를 만들어 나가고 있습니다.

   스티비와 함께 이메일 뉴스레터 제작 솔루션을 넘어, 새로운 콘텐츠 구독 생태계, 크리에이터 생태계를 만들어나갈 분을 찾고 있습니다. 🙌

   [1] 백엔드 엔지니어
   [2] 프론트엔드 엔지니어(신입)
   [3] 프론트엔드 엔지니어(경력)
   [4] 프로덕트 매니저
   [5] 프로덕트 디자이너
"
"https://news.hada.io/topic?id=6738","TinyGo - LLVM기반의 소형 Go 컴파일러","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      TinyGo - LLVM기반의 소형 Go 컴파일러

     * 마이크로콘트롤러, WebAssembly(WASM/WASI) 및 CLI 도구 등에서 사용 가능
     * 대부분의 표준 라이브러리 패키지를 지원하며 수정없이 Go 코드 컴파일 가능
     * LLVM을 내부적으로 이용해서 작고 효율적인 코드를 만들어 냄
     * 훌륭한 CGo 지원

   TinyGo를 아두이노 nano 33 보드들 (nrf52기반 또는 nano 33 iot)에 사용 해봤을 때, 기본적인 기능들은 꽤 잘 작동 했습니다 (ble 본딩이 안 되는 문제가...).
   제 생각에도 상업용으로 쓰기에는 힘들다고 봅니다만, 그래도 생각보다 go 채널이 돌긴 돌아서 재미로 뭐 하기엔 괜찮았습니다.
   요즘 펌웨어라면 Zephyr RTOS (c/c++)가 좀 괜찮을 것 같은데, 일단 리눅스재단의 지원을 받고 있고, 노르딕세미의 주 RTOS로 본격적으로 쓰이고 있으며, 다양한 프로토콜 지원과 툴링이 강점 입니다.
   러스트의 경우 no_std로 해야하는 경우가 많아 쉽지 않다는 얘기를 들은 적이 있는데, 실제로 적용해 본적이 없어서 저도 궁금하네요 ㅎㅎ

   지원하는 mcu가 좀 제한적이고 많이 두루 쓰이는 stm이나 nxp, ti 제품군의 지원이 좀 그렇네요
   Esp32는 와이파이 블루투스 안되고, 아직 프로덕션 레디라고 하기에는 좀 부족한듯 하네요.

   개인적으로 이런 모던 랭귀지의 mcu 적용 프로젝트 중에는 rust in embedded가 제일 기대가 됩니다.

   안녕하세요, 지나가다 말씀하신 부분이 흥미로워 질문 드립니다.
   과거에 c로 fw를 공부하고 작성한 경험이 있는데(stm, ti), 적성에 맞지 않아 포기했습니다. 시간이 많이 흐른 현재 다시 해당 분야를 좀 더 모던하게(?) 공부해보고 싶습니다.
   펌웨어에서는 rust가 그래도 좀 더 트렌드에 가까울까요?

   펌웨어에서 러스트의 적용은 아직 production ready는 확실히 아니다~~~ 라고 이야기 할 수 있습니다. 하지만 매우 빠르게 지원 가능 디바이스의 커버리지를 넓히고 있어요..

   재미있는 뉴스는 최근 AutoSAR 표준에서 Rust를 목록에 넣기 위한 사전 작업같은 회의가 있었다고 하는것 같기도 하고요..

   펌웨어 쪽은 특수한 동작 환경 때문에 unmanaged memory관련 해서 버그 터지면 치명타라서요..

   펌웨어 mcu쪽에서는

   software emulation in embedded,
   perfect unit testing without boards

   쪽의 주제들이 세미나에서 많이 발표되요..

   advanced topic으로는 onnx in mcu 정도 일까요 ??
"
"https://news.hada.io/topic?id=6673","구글이 직접 개발자에게 연락해서 PlayStore 에서 FairEmail 앱 복원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             구글이 직접 개발자에게 연락해서 PlayStore 에서 FairEmail 앱 복원

   안드로이드 오픈소스 FairEmail 앱 개발자, 구글이 앱을 Spyware로 플래그 해서 개발 중단
"
"https://news.hada.io/topic?id=6764","블룸버그의 전기차 전망 EV Outlook 2022","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      블룸버그의 전기차 전망 EV Outlook 2022

     * 현재 2천만대의 승용EV, 130만대의 상용EV(버스,밴,트럭), 2.8억대의 전기 스쿠터/오토바이/3륜차가 운행 중

단기 전망

     * 전기차 판매량은 급속하게 증가
     * 플러그인 하이브리드 보다 배터리 전기차의 증가율이 더 큼
     * 2025년에 중국와 유럽이 전기차 판매의 80%를 차지
     * 내연기관(ICE)차의 판매는 2017년이 피크였고 계속 감소중, 2025년이 되면 2017년보다 19% 감소 예정
     * 2022년 현재 2천만대의 승용EV가 운행중이지만 전체 자동차의 1.5% 밖에 되지 않음
     * 중국은 68.5만대의 전기 버스가 운행중이고, 1.95억대의 전기 2륜차가 운행중
     * 2021년 대한민국에서 팔린 경상용차의 17%는 전기차였음
     * 인도의 3륜차중 40%는 이미 전기차임
     * 2025년에는 7700만대의 승용EV가 운용되어 전체 차의 6%를 차지할 것
       → 일부 지역은 빨라서, 중국은 전체 차의 13%, 유럽은 8%
     * 전기 밴 & 트럭 판매량은 2021년에 2배로 증가
     * 트럭 제조사들도 2030년에는 모두 전기로 전환하는 걸 목표

장기 전망

     * 2026년 이후는 두개의 시나리오로 나뉨
          + Economic Transition Scenario(ETS) : 기술 및 경제 동향과 시장에 의해 주도
          + Net Zero Scenario(NZS) : 2050년을 목표로
     * ETS 면에서는 배터리 가격이 떨어지면서 승용EV 판매가 빠르게 성장할 것
     * 차후 10~15년간 EV판매가 빠르게 성장한 뒤 점차 느려지게 될 것
     * 빠른 EV판매량 증가에도 불구하고, 2040년에도 8억대의 내연기관차가 운행중일 것
     * 2020년대 안에 상용 전기차의 디젤차 대비 비용도 같아질 것
     * 배터리 밴과 경트럭들이 이미 마켓 셰어를 먹고 있고, 2030년에는 1/3 까지 차지. 2040년이 되면 60% 까지 증가(일부 지역은 75%)
     * 대형차들의 전기화는 2040년에 본격적으 시작되어, 1/3은 전기화 될 것
     * 전기 버스는 계속 성장하여, 이미 신차의 44%, 전세계 버스의 18%가 전기차
     * 98%의 전기 버스가 아직 중국에서 운행중이지만 점점 다른 나라에서도 증가중
     * 전기버스는 2040년 175만대로 성장해서 전체 버스의 62%를 차지할 것
     * 수소버스도 일부 국가의 강력한 지원으로 역할을 가질 수도
     * 2040년이 되면 7억대의 승용EV와 7.5억대의 2륜/3륜EV가 운행

Net Zero Scenario 와 정책 관계

     * 2050년 Net-Zero를 위해서는 전기차 판매량이 2030년엔 61%, 2035년엔 95%, 2038년엔 100%가 되어야 함
     * ETS 대로라면 2038년까지 내연기관 판매를 0로 달성할 국가는 없어보임
     * 전기차와 배터리 가격이 떨어지더라도 성장국가들은 전환을 위해 재정적인 지원이 필요함
     * ETS대로라면 2035년 승용EV가 4.69억대 지만, NZS를 위해선 6.12억대가 되어야 함
     * NZS상에서 2050년에는 수소차 비중이 중대형 트럭이 10%, 버스의 15%, 승용차의 2% 정도를 예상
     * 전기차는 ETS상으로는 올해부터 2030년까지는 9조달러, 올해부터 2050년까지는 53조달러(6경원) 시장
       → NZS로는 2050년까지 82조달러

배터리와 충전 인프라

  배터리

     * EV배터리 수요는 급증해서 2021년에 2020년보다 94%증가
     * 2030년까지 배터리 수요는 3,486GWh 가 될 것
     * 제조사들은 2024년까지 년간 4,151GWh 생산 계획을 발표했음
     * LFP(리튬 인산 철)가 2023년까지 배터리 수요의 43%까지 증가. 망간을 포함시켜서 배터리 밀도가 증가되는 LMFP 포함
     * 새로운 EV배터리가 수용되면서 2020년말까지 NMCA 및 NMC(96Ni) 같은게 더 많이 보급 될 것

  배터리 재료

     * 리튬,코발트,망간 및 니켈 등의 공급은 타이트
     * 새로운 정제 시설과 투자가 필요

  충전 인프라

     * 2040년까지 충전인프라에만 1조~1.4조 달러 투자가 필요
     * 예상되는 전기차 수요를 감당하기 위해서는 충전인프라에 빅 푸시가 필요함

석유, 전기와 탄소 배출

  석유

     * 현재 전기차들은 현재 하루 150만 배럴의 석유 수요를 대체중
       → 67%가 2/3륜차, 16%가 버스고, 승용전기차는 15%만 해당하지만 빠르게 성장 중
     * 승용EV 및 2/3륜, 버스의 기름 수요는 이미 피크를 쳤고, 상용차들만 성장할 여력이 있음
     * 2025년이 되면 모든 전기차가 하루 250만 배럴의 석유 수요를 대체
       → 2026에는 가솔린 수요가 피크를 치고, 도로에서의 석유 수요 피크는 2027년일 것
     * ETS상 2019년의 4360만 배럴에서 2040년에는 3400만 배럴로 감소
       → NZS로는 2040년에는 2400만배럴까지 떨어져야 2050년에 0를 만들 수 있음

  전기

     * 2040년에는 ETS상 3338TWh, NZS로는 4761TWh 가 필요
     * 2050년 NZS를 위해서는 총 8855TWh가 필요함

  탄소배출

     * 코로나 기간중 자동차의 CO2 배출량이 늘었고, 2023년 되어야 2019년 수준으로 떨어질 것
     * EV가 빠르게 늘어나지만 탄소배출량은 2029년까지 피크를 치지 못함
     * 승용차가 2021년에는 탄소배출량의 53%를 차지하지만 2050년 ETS상 38%까지 감소
     * 상용차 및 버스는 42%에서 59%로 증가
"
"https://news.hada.io/topic?id=6654","Codeball - AI가 수행하는 코드 리뷰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Codeball - AI가 수행하는 코드 리뷰

     * 딥러닝을 이용해서 PR을 자동으로 체크하고 문제없으면 승인하는 로봇
          + 변경부분 diff, Repo 및 Coder의 최근 Activity, Coder의 Reputation 등 100여개의 indicator를 이용
     * 백만개의 PR로 훈련됨
     * Multi-layer Perceptron classifier 모델을 이용
     * 베타 기간 중 무료. 오픈소스에는 계속 무료로 동작 예정
"
"https://news.hada.io/topic?id=6731","만약 OpenSSL이 GUI 였다면","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          만약 OpenSSL이 GUI 였다면

   아... 보기만 해도 현기증이..

   openssl 헤더파일이나 man page 볼 때 마다 끔찍한데, GUI로 봐도 그렇군요

   오랫만에 보는 플래티넘UI네요.
"
"https://news.hada.io/topic?id=6670","OpenVerse - 오픈 라이센스 미디어 검색엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      OpenVerse - 오픈 라이센스 미디어 검색엔진

     * 워드프레스에 조인한 CC Search를 리브랜딩
     * 무료로 사용가능한 이미지/사진, 오디오(음악,팟캐스트,샘플링 등) 등의 콘텐츠 검색 엔진
     * Creative Commons 라이센스나 Public Domain 콘텐츠 대상
     * Meta Search 기능으로 다른 CC 라이센스 검색이 가능한 엔진과도 연결
       → Europeana, Google Images, Flickr, Jamendo, Open Clip Art Library, SpinXpress, Wikimedia Commons, YouTube, ccMixter, SoundCloud
"
"https://news.hada.io/topic?id=6650","iOS16은 Always-On 디스플레이 기능을 추가하게 될 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  iOS16은 Always-On 디스플레이 기능을 추가하게 될 것

   차세대 아이폰 프로 모델은 아마도 완전히 새로운 디자인(노치를 핀홀로 변경)을 가지게 될 것이며,
   알림 및 기타 작은 정보들을 계속 볼 수 있는 Always-On 기능이 iOS16부터 추가 될것이라는 루머
"
"https://news.hada.io/topic?id=6766","Rulex - 새로운 포터블 정규식 언어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Rulex - 새로운 포터블 정규식 언어

     * 표준 정규식으로 트랜스파일
     * 공백 무시, 코멘트 지원
     * 유니코드 지원
     * 숫자 범위 및 변수 같은 확장 기능 지원
     * 알기 쉬운 에러 메시지
     * Rust 오픈소스
"
"https://news.hada.io/topic?id=6658","Neon - 서버리스 Postgres 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Neon - 서버리스 Postgres 오픈소스

     * AWS Aurora Postgres 의 오픈소스 대체제
     * Compute 와 Storage를 분리하고, Postgres의 Storage Layer를 클러스터 노드에 분산하여 저장하는 Neon Storage 엔진으로 교체
     * 단일 명령으로 실행 가능 $psql -h pg.neon.tech
     * Neon Storage Engine 은 2개의 컴포넌트로 구성
          + Pageserver : Compute 노드를 위한 스케일러블 스토리지 백엔드
          + WAL service : Compute 노드에서 WAL(Write-Ahead-Log)를 수신해서 영구적으로 저장
"
"https://news.hada.io/topic?id=6676","EdgeDB팀이 Node.js 라이브러리를 Deno용으로 컨버팅한 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                EdgeDB팀이 Node.js 라이브러리를 Deno용으로 컨버팅한 방법

     * NPM에 edgedb 클라이언트 라이브러리를 직접 만들어 제공 중
     * 최소한의 리팩토링을 통해 Node.js용 구현체에서 Deno 호환하는 모듈을 생성하여 관리를 편하게 하기로
       → ""Runtime Adapter"" 패턴
     * 기존 코드가 TypeScript 로 되어있어서 ESM 문법을 사용하고 있어서 모듈쪽은 변환 필요 없음
     * 스탠다드 라이브러리 임포트는 Node/Deno 각각으로 분리
     * Deno-ifier 를 작성 (상세 내용은 생략..)
"
"https://news.hada.io/topic?id=6660","음파를 사용하는 새로운 형태의 3D 프린팅","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        음파를 사용하는 새로운 형태의 3D 프린팅

     * 매우 작고 상세한 것을 찍을 수 있으며, 다른 구조 내부에 '비침습적'으로 인쇄할 수 있음
       → 비행기의 동체를 열지 않고 내부를 수리하거나, 수술 없이 환자의 몸 내부에 임플란트를 3D 프린팅
     * Direct Sound Printing(DSP) 기술을 이용
     * 초음파를 챔버에 보내서 초음파 필드를 생성하고, 빠르게 진동하는 미세기포가 레진(Resin)의 특정 지점에서 형성되도록 함
     * PDMS 레진 및 세라믹 인쇄는 성공했고, 순수 금속 및 고분자 금속 복합재료도 실험 예정
     * 초음파 주파수는 인체 조직(티슈) 및 종양의 레이저 절제와 같은 파괴적인 용도로 이미 사용중이지만,
       ""초음파를 뭔가를 만들어 내는 용도로 사용해 보고 싶었음""
"
"https://news.hada.io/topic?id=6652","Jasontte - JSON으로 네이티브 앱 생성하는 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Jasontte - JSON으로 네이티브 앱 생성하는 오픈소스

     '네이티브 앱으로 동작하는 JSON 브라우저'

     * JSON 설정 파일 만으로 iOS/Android 앱 생성
     * JSON은 싱글 파일이나 HTTP 원격 모두 가능
     * 레이아웃/액션/스타일 모두 JSON으로 설정
     * 완전 무료 / MIT 라이센스
"
"https://news.hada.io/topic?id=6704","탈옥된 아이폰 12/iOS 14.1 에서 하드웨어 가속되는 VM 실행하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                탈옥된 아이폰 12/iOS 14.1 에서 하드웨어 가속되는 VM 실행하기

     * Hypervisor.framework를 언락후 UTM(QEMU)을 수정해서 네이티브 속도로 실행 성공
     * A14 CPU는 Virtualization을 지원하지만 커널에서 비활성화 되어 있음
       → 탈옥하여 활성화 가능
     * VM이 램을 900MB 밖에 사용하지 못하므로 실사용은 불가하고 PoC 수준
     * GeekBench 점수 : 네이티브 아이폰 12 1573, Hypervisor 이용시 1504~1511
"
"https://news.hada.io/topic?id=6699","tweet-to-markdown: 트위터 글을 마크다운으로 저장하는 CLI툴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               tweet-to-markdown: 트위터 글을 마크다운으로 저장하는 CLI툴

     * 첨부된 모든 이미지, 투표 및 링크도 파일에 연결되고 표시됩니다.
     * 연달아 작성된 트윗 스레드도 가져올 수 있습니다.
     * 좋아요 수, 리트윗 수, 트윗에 대한 답글 수를 기록할 수 있습니다.
     * 마크다운 내 트위터 이미지를 URL 링크 방식이 아닌, 로컬에 저장하여 불러올 수 있습니다.
"
"https://news.hada.io/topic?id=6736","DNS Toys - DNS 프로토콜을 이용한 작은 유틸리티 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 DNS Toys - DNS 프로토콜을 이용한 작은 유틸리티 오픈소스

     * 세계 시계/날씨/단위&통화 변환/IP Echo 등 명령으로 지정된 특정 도메인 주소를 DNS 조회하면, 관련 정보를 TXT 레코드 값으로 리턴하는 DNS서버
     * 터미널에서 간단히 정보조회 할때 사용 가능
     * Go 오픈소스
     * 세계 시계 : dig seoul.time @dns.toys
     * 날씨 : dig seoul.weather @dns.toys
     * 단위 변환 : dig 42km-mi.unit @dns.toys
     * 통화 변환 : dig 100USD-KRW.fx @dns.toys
     * IP Echo : dig ip @dns.toys
     * 숫자를 단어로 : dig 987654321.words @dns.toys
     * 사용가능한 CIDR 범위 : dig 10.0.0.0/24.cidr @dns.toys dig 2001:db8::/108.cidr @dns.toys

   요전에 윤초 정보를 DNS로 인코딩해서 간단하게 서비스하는 프로토콜이 제안된 적도 있죠. (Varnish를 만든 Poul-Henning Kamp의 작품입니다: http://phk.freebsd.dk/time/20151122/ )

   그냥 재미를 위한 것이긴 한데..
   제한된 인터넷 접근을 허용하는 WIFI AP나 방화벽 안에서도 DNS용 53번 포트는 안 막혀 있는 경우가 종종 있어서
   이걸 활용해서 원하는 기능을 구현해 놓으면 다양한 용도로 사용가능할 듯 합니다.

   53 / 123 포트를 이런 회피 용도로 가끔 활용했던 기억이..

   아예 DNS포트를 이용해서 IPv4 데이터를 터널링하는 iodine 같은 것도 있네요
   https://github.com/yarrick/iodine
"
"https://news.hada.io/topic?id=6708","세쿼이아 캐피탈 - 견디기 위해 적응하기 (번역)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      세쿼이아 캐피탈 - 견디기 위해 적응하기 (번역)

   ""Adapting to Endure"" - 52p PDF
     * 지금은 당황할 때가 아님. 잠시 멈추고 재평가 해야할 때

[ 매크로 환경 by 케빈 켈리 ]

  COVID 재정 명령 : 대규모 통화 부양책

     * COVID 대응을 위해 전세계 정부들이 특별 재정 및 대규모 통화 부양책으로 경기 침체를 예방했지만 이에 따른 결과가 발생
     * 경제가 리오픈 되면서 이런 유동성은 실물 경제 전반에 걸친 병목현상과 왜곡으로 나타나, 수요가 공급을 압도하면서 공급망 문제와 가격압력으로 이어짐
     * 인플레이션 추세는 2022년 초부터 가속화 되어, 우크라이나 전쟁으로 공급망 복잡도 및 상품 가격을 압박
       최근 몇달간 인플레이션이 급등하는 것을 보여주는 다양한 차트들을 봤음
       더 중요한 것은 5년 선행 인플레이션 기대치가 수십년만에 최대치가 되어, 장기적인 인플레이션 기대치가 증가하고 있다는 것

  새로운 Fed(연준)의 명령 : 인플레이션 통제, 유동성 조건 강화

     * Fed는 고용 극대화 와 물가 안정관리라는 두가지 잡을 가지고 있기 때문에 이것들이 중요함
     * Fed는 통화 긴축으로 선회(금리 인상 및 대차대조표 축소)해서 유동성이 더욱 축소됨

  자본은 무료였지만, 이제 비싸짐

     * 비즈니스 모델이 어떻게 작동하는지 재평가 중
     * 비용의 상승이 실물 경제에 어떤 영향을 미치는지 보기 시작

[ 퍼블릭 마켓 by Jeff Wang ]

  20년만에 3번째로 큰 나스닥 하락을 경험 중

     * 2001년이나 2008년 만큼은 아니지만, 지난 11월 대비 나스닥은 28% 하락
     * 높은 수준에서 보면 닷컴 붕괴나 글로벌 금융위기 때처럼은 아니지만, 거대 자본 너머를 보면 표면 아래의 이야기가 드러남

  모든 소프트웨어, 인터넷 및 핀테크 기업의 61% 팬데믹 이전의 2020년 주식 가격 이하로 거래중

     * 2년 이상의 주가 상승분을 잃어버림
     * 많은 기업들이 매출과 이익율을 2배이상 늘렸음에도 불구

  1/3은 불확실성과 공포가 정점에 이르렀던 COVID 저점 보다도 아래에서 거래중

     * 팬데믹 이전뿐만 아니라 2020년 3월의 저점 아래에서 거래중
     * 다 알다시피, 그때 통화 및 재정정책의 도움으로 빠르게 반등했음
     * 하지만 이제 두가지 도구는 모두 철회되었고, 순풍에서 역풍으로 이동하면서
       시장은 공짜 자본의 제거와 함께 지난 2년간의 가치 평가 프레임워크가 더 이상 유효하지 않음을 보여줌

  무조건 성장(Growth at all costs)이 더 이상 보상받지 못함

     * 무조건 초성장(Hypergrowth at any costs)이 보상받는 시대가 빠르게 끝나가고 있음
     * 소프트웨어 전반에 걸친 EV / Revenue 멀티플은 지난 6개월간 절반으로 감소했으며, 현재 10년 평균 보다 낮음
     * 성장률 조정 배수는 더 하락해서 10년 평균보다 훨씬 낮고, 거의 10년 최저치로 가고 있음
     * 인플레이션, 금리, 전쟁등에 대한 거시적 불확실성으로 투자자들은 단기적인 확신을 줄 수 있는 회사를 찾는 중
     * 자본은 점점 더 비싸지고 매크로는 점점 불확실해지고 있어서, 투자자들은 성장에 대한 우선 순위를 낮추고 더 적은 비용을 지불하게 됨

  수익성 있는 기업으로 관심이 옮겨감

     * 단기 모멘텀에 대한 관심이 현재 수익성을 입증할 수 있는 회사들로 옮겨가는 경우가 많음
     * 나스닥은 계속 하락세이고, 모건스탠리의 MSXXUPT(Unprofitable Tech Index)가 64% 감소
     * 자본 비용(부채와 자기자본 모두)이 상승함에 따라, 시장은 오늘 현금을 만들수 있는 회사들에 대한 강한 선호를 나타냄

  값싼 자본이 구해주지 않을 것

     * 이전 시대와 달리, 값싼 자본들이 도와주러 오지 못함
     * 최근 몇년간 민간 투자에 나서며 가장 저렴한 자본의 원천인 크로스오버 헤지펀드는 퍼블릭 포트폴리오에 큰 타격을 입음
     * 많은 곳이 투자할 능력조차 없음. 퍼블릭 포트폴리오의 축소로 인해 하이브리드 펀드의 불균형이 발생(프라이빗 투자는 많이 감소하지 않아서)했기 때문에

  중장기 : 수익선 개선과 함께하는 지속적 성장이 나아갈 방향

     * 항해하기 힘든 시장. 인플레이션 상승과 실물 경제 위험등
     * 하지만, 모든 시장에서 먹히는 것은 지속적인 성장과 마진 개선으로 이어지는 엄격한 재무 관리

[ 역사가 우리에게 말해 주는 것 - Doug Leone ]

  고통

     * 2000년과 2008년을 겪었고, 지난 2년간 팬데믹은 정부를 자극했음
     * 전쟁은 휘발류 가격에 영향을 줬고, 공급망 문제로 가격인상이 인플레이션으로 이어짐
     * 인플레이션을 막을 수 있는 유일한 방법은 구매를 중단하고, 구매 비용을 줄여서, 경제를 위축 시키는 것

  회복 기간은 길 것

     * 이 주기는 시간이 걸리고, 특정 기간으로 한정하기 어려움
     * 하지만 빠르지는 않을 것

누가 살아 남을까 ?

  Adaptability(적응성)

     * ""살아남는 종은 가장 강하거나 가장 똑똑한 종이 아니라, 변화에 가장 잘 반응하는 종이다. - 찰스 다윈""

  가장 빠른자가 생존

     * 가장 빠르게 움직이는 기업이 가장 큰 Runway(생존할 수 있는 기간/자금)를 가지고, 죽음의 나선을 피할 가능성이 높음
     * 컷 연습(프로젝트, R&D, 마케팅, 기타 비용을 잘라내는 것)을 할 것
       방아쇠를 당기라는게 아니라, 필요한 경우 다음 30일내에 할 수 있도록 준비하라는 것
     * 2008년에 삭감했던 모든 회사는 효율적이고 더 좋았음
     * 삭감을 부정적으로 보지 말고, 현금을 절약하고 빠르게 움직일 것

  선택

     * ""어떤 결정을 내릴 계획인가?"" vs. ""어떤 결정을 내렸으면 좋았을까?""
     * 6개월간의 자금만 남았다면, 집중은 정말 중요해 짐
     * 은행에 얼마 있는가와 상관없이 지금 그 집중할 것을 찾을 것

  기회

     * ""맑은 날씨에는 15대를 추월할 수 없지만, 비가 올 때는 가능함""
     * 앞에 기회가 있음. 그걸 인식할 것

  누가 ~~살아남을까요?~~ 이길까요?

     * 현실을 직시하고, 빠르게 적응하고, 후회보다 규율(Discipline)을 가진 창업자/CEO
     * 6개월 이상 남아 있을 때 돈을 모아두는 것이 쉬움
     * 채용은 수월해 질 것, 모든 FANG들이 채용을 동결
     * 지금을 절호의 기회로 보라. 카드를 제대로 플레이 한다면 강한 존재가 될 것

[ 더 강해지는 방법 - Alfred Lin ]

  위기의 순간에 무엇을 하나요 ?

     * 미래를 예측하긴 어렵지만, 어떤일이 일어나던지 간에, 우리는 어떤 시련의 순간에서도 더 강해지는 프레임워크를 제공하고자 함

  기회는 준비된 자에게만 찾아온다 (“Chance only favors the prepared mind"" - Louis Pasteur)

     * WeCrashed 많이들 봤겠지만, 돈을 많이 가지고 있다는 것이 올바른 교훈은 아님
     * 돈이 많다고 이기는 거면, 어떻게 Zappos 가 Amazon을 이기고, DoorDash가 UberEats를 이겼을까
     * 세쿼이아는 가장 준비된 사람이 이긴다고 믿음

  어떻게 준비해야할까?

     * 우리는 여러 이슈들을 거쳐오며 몇년간 계속 정제된 프레임워크를 만들었습니다.
     * 1998년 러시아 루블 위기 @LinkExchange
     * 2001년 닷컴 붕괴 @Zappos 와 TellMe Networks
     * 2008년 금융 위기 @Zappos
     * 2020년 팬데믹을 여러분과 협력

  체크 리스트

     * 자신을 준비하기
     * 팀을 준비하기
     * 회사를 준비하기

  자신을 준비하기

     * 현실을 직시하기
          + 첫번째가 가장 어려움. 모든 추락은 창업자들이 현실을 직시하지 않는 것에서 시작
          + 창업자/CEO로서 현실을 직시하는 사람이 되어야 함
          + Good to Great에 나온 Jim Stockdale 제독 이야기가 이에 가장 적절
               o 베트남전에서 1965년에서 1973년까지 8년간 포로로 잡혀 있었음
               o 엄청 고문을 받았고, 다른 사람들은 다 살아남지 못해지만 그는 살아 남았음
               o 그에게 누가 성공하지 못했냐고 묻자 ""맹목적인 낙관론자들(Blind Optimist)""
               o ""크리스마스가 되면 풀려날꺼야, 부활절이 되면 풀려날꺼야"" 라고 희망적인 생각만 품다가 좌절해서 버티지 못함
               o 스톡데일은 쉽게 풀려나지 않을 것을 알고, 장기간 버텨야 된다는 각오로 하루 하루를 보냈기에 살아남을 수 있었음
     * 두려움에 맞서기
          + 현실을 직시했다면, 부정적인 악순환(Negative Cycle)에 빠지지 않도록 조심해야 함
          + 상황이 어렵다고 안 좋게만 생각하면, 그 상황을 벗어나는 것 자체를 어렵게 함
     * 두려움을 이기는 용기
          + 용기는 결정임. 그러므로 용기를 선택할 것.
          + 우리가 지금 처한 상황은 팬데믹 초기에 겪었던 불확실성보다는 나쁠 수 없음. 우리는 승리할 것
     * 위기를 기회로 만들기
          + Crisis 의 한자는 WeiJi(危機, 위기)
          + 이것은 Danger + Change Point 를 나타냄. 근데 이걸 Dange + Opportunity 로 부르는 것도 인기있는 Meme
          + 위험과 변화점이 있다는 사실이 흥미로움
          + 이 변화점 에서는 강자가 약해지고, 약자가 강해질 수 있음. 다들 탐내던 성장주는 덤핑되고, 가치주를 탐내고 있음
          + 수익을 유지하고 더디게 성장하던 기업들이 이제 캐시버닝 하는 회사들의 후퇴를 활용할 수 있는 재정적 유연성을 가지게 되었음
          + 기회를 명확히 보고 그 순간을 멈출 각오가 되어있다면, 변화점은 기회를 허용 하는 것

  팀을 준비하기

     * Why 부터 시작하기
     * 미션/가치를 재확인
          + 당신이 고용한 Missionaries(미션을 보고 합류한 이들)들에게 정말 중요함. 용병이 가장 먼저 퇴각함.
          + LinkExhange가 IPO를 못했을 때, 용병들이 가장 먼저 떠났고, 이건 AirBnb 와 DoorDash에도 똑같이 일어남
          + 9/11 테러 이후 Zappos의 매출이 0이 되자 용병들은 Nordstrom 과 Amazon 같은 큰 회사로 도망쳤음
          + 이 것은 계속해서 발생함. Missionaries를 지킬 것
     * 당신의 리더십을 보여줄 것
          + 오디언스를 알기 : 고객, 직원, 투자자등
          + 그들은 왜 당신의 미래에 대한 비젼에 조인했는 지를 상기시켜주기를 기대하고 있음
          + 당신에게 방향을 기대하고 있음
          + 당신에게 단호한 행동을 기대하고 있음
     * 팀을 얼라인 할 것
     * Commitment를 요청할 것
          + 앞으로 나아가기 위해 팀의 Commitment를 요청하거나, 그들에게 구명정을 가볍게 해달라고 정중하게 요청할 시간임

  회사를 준비하기

     * 현금과 현금흐름
          + 거의 모든 회사가 일일 판매량 또는 메트릭 대시보드가 있음
          + 그러나 Zappos는 일일 현금/현금흐름/현금 런웨이 보고서가 있었음.
          + 9/11 이후 현금이 거의 바닥났기 때문인데, 이 보고서는 2008년 금융 위기를 극복하는데 정말 도움이 되었음
     * 재정적 자유도를 만들기
          + Best : 고객으로 부터 더 많은 수익을 창출
               o Airbnb - 장기 숙박으로 피봇
               o Tellme - 제품을 개선하고 자동화를 증가
               o Zappos - 셀렉션과 AOV(평균 주문 단가)를 향상
          + Good : 단위 경제를 향상
               o Airbnb - 마케팅 중단
               o Tellme - ROI 개선
               o Zappos - 첫 주문 페이백 해주기
          + OK : 먼저 했었어야할, 초과분 잘라내기
               o Airbnb - 강제 축소(팬데믹)
               o Tellme - 강제 축소(3x, 1x 면 좋았겠지만)
               o Zappos - 강제 축소(2001) / 먼저 축소(2008)
               o 모두들 변경한 바로 다음날 부터 더 효율적이 되었음
          + 필요하다면 : 비싸더라도 자본이나 부채를 늘릴 것
               o Survival >> 좋아하지 않는 용어
               o Airbnb - 10% 부채 딜
               o DoorDash - 매우 어려운 2번의 라운드
               o Zappos - 부채 및 주식 딜
     * 미래에 집중적으로 투자하기
          + 비즈니스에 지장을 줄 수는 없음
          + 하지만 여전히 미래에 집중해야함
          + 가장 중요하고 활용도 높은 투자에 집중하기
               o 더 많은 것을 쫒는 무분별한 추구에서 한발짝 물러서기
               o Airbnb는 모든것을 축소했지만, 코어 호스팅 과 장기 숙박에는 더 많이 투자했음
               o Zappos 는 마케팅을 줄였지만, 고객 서비스와 셀렉션, 엔지니어링에 투자했음
     * 제약 → 창의성
          + AND의 힘 vs. 양자택일 사고
          + 제약을 인식하면, 문제에 돈을 쓰는 것보다 더 나은 솔루션을 찾는데 집중할 수 있음
          + 자금 부족으로 인해 Zappos는
               o 첫주문시 Payback 으로 강제로 LTV/CAC 성장
               o 자체 기프트 카드 프로그램을 만듦
               o 반품을 위한 자체 스토어 크레딧 프로그램을 만듦
               o 판매자 기한을 30일에서 90일으로 변경
               o 엄청 저렴한 가격으로 신발장에 광고하는 방법 같은 브랜드 마케팅 방법을 찾음

[ 전면에서 리드하기 - Carl Eschenbach ]

     ""변화는 불가피. 성장은 선택 - John C. Maxwell""
     변하지 않는 것은 ""변화(Change)"" 뿐. 성장은 당신의 선택.

     희망적인 생각은 시간 낭비 입니다. ""좋은 시절""이 돌아올 것이라는 희망을 가지고 둘러 앉아 이야기 하지 마세요.

     변화를 관리하는 것이 모두의 Job인 불안정한 시대임. 당신의 개인적인 과제라고 생각할 것

     ""회사의 바깥 세상이 당신 회사의 내부보다 더 빠르게 변하고 있다면, 끝이 가까운 것 - Jack Welch""

  리더십 원칙 - 4C

     * Communicate(소통), Conviction(신념), Confidence(신뢰), Calmness(평온)
     * Be Authentic, Be Human, Balance optimism and realism

  불확실한 시대를 위한 전략

     * 단순성은 확장되지만, 복잡성은 확장되지 않음
     * 스피드는 최고의 비즈니스 전략중 하나
     * 최고의 인재를 두배로 늘릴 것
     * 합의(Agreement)보다 정렬(Alignment)
     * 판매를 촉진하기 위해 가치 제안을 강화
     * 다음 중 하나가 아니면 쓸데없음
          + 매출 성장을 촉진
          + 비용을 절감 (강력한 ROI)
          + 위험 감소

  Push vs. Pull 리더십

     * Pushing : Motivational (동기부여)
     * Pulling : Inspirational (영감주기)
          + 미션과 가치를 얼라인할 것. 팀은 당신을 실망시키고 싶어하지 않음
     * 동기를 부여하고 영감을 주는 사람이 될 것. 상황에 따라 유연하게

[ What's Next? - Roelof Botha ]

     * 오늘 우리가 모인 의도는 우울함을 보여주기 위함이 아님
     * 가장 훌륭하고, 가장 야심차고, 가장 결단력이 있는 여러분이 이 순간을 활용하여 기회를 잡고 진정으로 놀라운 것을 만들 것이라고 믿음
       1987년의 시스코, 2000년의 닷컴 붕괴후 구글과 PayPal이, 2008년 금융위기 때의 Airbnb가, 2020년 팬데믹 때의 DoorDash가 그랬음
     * 하지만 향후 몇년간의 승리는 - 지난 2년간 자본의 풍요와 왜곡으로 가려져 있는 불편한 도전들을 직면하고 - 어렵고 결정적인 선택을 하는 것에 달려 있음
     * 이 세션의 주요 목표는 우리의 집단적 사고방식을 바꾸는 것
       우리는 불확실성과 변화의 순간 - 즉 당신의 결정이 기업의 결과에 중요한 영향을 미치는 시련의 순간에 와 있음
     * 세쿼이아는 다음 몇 주간 초기 및 성장 기업을 위한 새로운 돌파구를 위해 다음과 같은 주제들을 이야기 할 것
          + 런웨이를 최대한 늘리기
          + 예측과 시나리오 계획하기
          + 불확실한 시대의 리더십
          + 어려운 시장에서 펀드레이징

   정말 감사합니다.

   훌륭한 투자자인 세쿼이아는 중요한 시기마다, 자신의 포트폴리오 회사들에게 이런 훌륭한 메모들을 남겨왔습니다.
     * 2008년 ""R.I.P. Good Times""
     * 2020년 ""Coronavirus: The Black Swan of 2020.""
"
"https://news.hada.io/topic?id=6659","소행성 광물 채굴 스타트업이 곧 SpaceX를 이용해서 미션을 수행할 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               소행성 광물 채굴 스타트업이 곧 SpaceX를 이용해서 미션을 수행할 예정

     * YC 스타트업 Astroforge는 최근에 $13M 투자를 마무리하고, 창업자들은 우주에서 재료를 정제하는 새로운 방법을 개발했다고 주장
     * 직경 20미터에서 1.5km 크기의 소행성을 타겟
     * OrbAstro와 데모용 위성을 이미 개발했으며, 내년에 발사 예정인 SpaceX의 Rideshare 미션에 참여하기 위해 계약을 체결했음
     * 시드라운드는 Initialized Capital이 주도했으며, 미래 우주 광물 채취 미션의 잠재적 수익을 목표로 함
       → 일례로, NASA의 Psyche 미션이 목표로 하는 소행성에는 700조달러($700 quintillion) 상당의 희귀금속이 포함되어 있는 것으로 추정
     * Astroforge 는 백금(Platinum) 및 이리듐(Iridium)을 포함한 6개의 플래티늄 그룹 광물들이 고도로 농축된 소행성을 목표로 함
"
"https://news.hada.io/topic?id=6649","Jiffy - Bionic 읽기용 브라우저 확장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Jiffy - Bionic 읽기용 브라우저 확장

   단어의 앞부분을 볼드로 강조해서, 나머지는 뇌가 채우도록 하는 방식으로
   읽기 속도를 올려주는 Bionic Reading 기법을 크롬/FF/오페라 브라우저에 적용해주는 무료 확장

     Welcome to the fast lane, my friend. See, by selectively drawing your attention to certain parts of the sentence, we create a gap that our psychology is programmed to fill.

   이를 npm 모듈로 배포하는(commonjs, esm) 프로젝트를 진행했었습니다.

   https://github.com/Gumball12/bionic-reading

   홍보를 하다보니 알게 된 것인데 영어의 경우에도 ""딱히 도움되는 것을 느끼지 못하겠다"", ""되려 가독성을 해친다""와 같은 의견들이 있더라고요 ㅎㅎ..

   bionic-reading의 디자이너 또한 연구에서 현재는 긍정적인 반응만을 이끌어 냈을 뿐, 깨끗히게 ""도움된다""라는 결론은 얻지 못했다고 하니 시간을 두고 조금 더 지켜보면 좋을 것 같습니다. (이 내용은 https://bionic-reading.com 의 맨 위 Statements 부분을 펼쳐 읽으실 수 있습니다.)

   예전에 써본 기억으로는 Beeline Reader가 이쪽에서 젤 낫더라구요.
   https://www.beelinereader.com/

   이러한 기법들이 이미 여럿 있었군요.. 흥미롭네요.
   감사합니다.

   단어의 앞분부을 볼드로 강해조서, 나지머는 뇌가 채도우록 하는 방으식로
   읽속기도를 올주려는 Bionic Reading 기법을 브우라저에 적해용주는 무료 확장

   한글은요!

   어제 jiffyreader 한국어 테스트 해봤는데 오히려 정신이 없는 것 같아서 확장 프로그램 삭제 했네요 😅😅

   예전에 이 Bionic 리딩 기법 글을 https://bionic-reading.com/ 에서 보긴 했는데..
   그때는 API가 유료였어서 무시했던 거로 기억하거든요. 근데 공식 사이트에도 크롬 확장이 나오고,
   이렇게 오픈소스 브라우저 확장으로도 나왔네요.

     단어의 앞부분을 강조해서, 나머지는 뇌가 채우도록 하는 방식으로
     읽기 속도를 올려주는 바이오닉 리딩 기법을 브라우저에 적용해주는 무료 확장

   임시로 해봤는데 단어들이 길지 않은 한국어에서는 잘 안맞는 것 같기도 합니다.. ㅎ
"
"https://news.hada.io/topic?id=6693","Apple, iOS 16 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Apple, iOS 16 공개

     * 잠금화면 사용자화
       → 다중레이어, 위젯, 갤러리, 실시간 현황 보기, 여러개의 잠금화면 지원
       → 집중 모드와 연결해서 중요한 콘텐츠만 표시 가능
     * iCloud 공유 사진 보관함
       → 최대 6명. 같이 추가,삭제,편집,즐겨찾기 가능. 카메라앱에서 자동 전송 지원
     * 메시지 앱
       → 최근 보낸 메시지를 편집 및 전송 취소 가능(최대 15분 안에. 삭제후 30일간 복구 가능)
       → SharePlay 지원. 대화 나누면서 영화/음악을 공유하고 재생 제어기능도 동기화
     * Mail
       → 이메일 발송 예약. 전송 취소. 첨부 파일 누락 감지. 다시 알리기 및 후속 작업 알림. 검색 기능 개편
     * 라이브 텍스트 및 시각 자료 찾아보기 향상
       → 동영상까지 지원해서 일시 정지된 동영상 화면에서도 텍스트 선택 및 번역등 가능
       → 이미지속 피사체를 꾹 누르면 배경 제거 가능
     * Apple Pay Later, Order Tracking
     * 차세대 CarPlay 업데이트
       → 차량의 라디오 및 냉난방 까지 모두 제어
       → 차량 데이터를 받아서 속도, 연료 잔량, 온도등을 계기판에 표시
       → 다양한 게이지 클러스터 디자인 제공
       → 위젯 지원 기능 추가
       → 내년 말부터 지원되는 차량 모델들 발표할 계획
     * 그밖의 기능
          + Safari 의 공유 탭그룹. Passkey
          + 지도앱에서 다중 경유지 경로 지원
          + 받아쓰기 중에도 키보드가 보이면서 자연스레 겸용 가능
          + Siri 단축어가 자동으로 설정
          + Home 에서 Matter 지원(스마트 홈 연동 표준)
          + 애플워치 없어도 아이폰의 모션센서로 피트니스 앱 사용 가능
          + 건강 앱에 복용하는 약 관리기능 추가
          + Apple News 에 My Sports 섹션 추가
          + 사용자화된 공간 음향으로 더욱 정교하고 몰입도 높은 청취 경험 제공
          + 안전 확인(Safety Check) 기능으로 타인에게 부여한 모든 접근 권한을 신속하게 해재해서 가정/데이트 폭력등으로 위협받는 사용자에게 도움

   iOS16에 추가될 전체 기능 리스트 https://www.apple.com/ios/ios-16-preview/features/
   아주 상세하게 정리 되어 있네요.
     * Web Push Notification 이 2023년에 추가 에정
     * FaceTime 시에 라이브 캡션이 지원될 예정 ( 그룹 통화시에도 지원 )
     * 애플의 디지털 협업 칠판앱 Freeform 에 대한 기능 소개

   찔끔 찔금 기능 개선.
   안드쓰다 사과갔는데 넘 적응 안되서 다시 안드생활중.

   BNPL 스타트업들은 힘든 한 해가 되겠네요

   affirm 이 바로 -5.5% 주가가 떨어졌네요.
   Klarna 는 작년부터 상장 얘기가 있었는데.. 가능하려나 모르겠네요.

   잠금화면 사용자화는 마음에 드네요. 큰 화면에 너무 정보가 안 보인다 싶었는데
"
"https://news.hada.io/topic?id=6721","mirrord - 프로덕션 트래픽을 개발 환경으로 미러링 해주는 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                mirrord - 프로덕션 트래픽을 개발 환경으로 미러링 해주는 오픈소스

     * 쿠버네티스 클러스터로 들어오는 트래픽을 미러링해서 로컬에서 똑같이 테스팅 가능
     * 미러링할 Pod를 선택하면 클라우드 환경에 이를 생성하고, 트래픽을 복사해서 로컬 프로세스로 전달
     * VSCode 확장 및 CLI 도구 제공

   글어 오타가 있네요.

   들오는 -> 들어오는

   준임말로 맞지 않나요?

   *줄임말로 ㅎ;;

   일상에서 쓰지 않는 말인지라, 햇갈렸네요;;
   찾아보니, 자주 쓰는 말은 아닌것처럼 보이고요
"
"https://news.hada.io/topic?id=6714","Markdown-Tag - 웹사이트에 마크다운 기능 추가하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Markdown-Tag - 웹사이트에 마크다운 기능 추가하기

     * 스크립트만 첨부하면 웹 페이지 어디서나 <md># 제목</md> 처럼 사용 가능
     * GitHub 스타일도 지원 <github-md>
     * 렌더링에 ShowdownJS / CommonMark / GitHub Flavored Markdown 문법 선택이용 가능

   오오 좋다! 싶었으나 XSS 취약점 수정이 todo로 남아있네요. 게다가 GPL.. :\
"
"https://news.hada.io/topic?id=6757","Android SDK 자동화 테스트 환경 구축기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Android SDK 자동화 테스트 환경 구축기

   Android SDK 자동화 테스트 환경 구축기 시리즈, 1번째 이야기
     * 왜 자동화 테스트를 도입하게 되었을까?
          + 테스트 환경이 다양함 → 수동 테스트 시 많은 리소스 필요
          + 테스트 중 확인해야할 내용이 많음 → Human Error의 위험 존재
          + 이러한 문제를 해결하기 위해 자동화 테스트 도입
     * 어떤 것을 자동화 테스트 환경으로 구성할까?
          + 개발자의 입장에서의 SDK → 수동 테스트 대상
               o 가이드 상에 빠진 내용 확인, SDK 사용성 확인 등
          + 서비스 이용자 입장에서의 SDK → 자동 테스트 대상
               o 서비스 구동 중 오류는 없는지 등
     * 무엇을 활용해서 자동화를 구성할까?
          + Appium
          + Cucumber
          + Kotlin
          + Github Action
"
"https://news.hada.io/topic?id=6722","Google I/O 2022에서 발표한 Android 개발 도구 업데이트 정리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Google I/O 2022에서 발표한 Android 개발 도구 업데이트 정리

[ Android Studio Dolphin ]

  Jetpack Compose

     * Compose 애니메이션 조정
     * Compose 다중 미리보기 Annotation
     * Layout Inspector의 Compose 재구성 횟수

  Wear OS

     * Wear OS 에뮬레이터 페어링 어시스턴트
     * Wear OS 에뮬레이터 사이드 툴바
     * Wear OS 영역 바로 시작하기

  개발 도구

     * Logcat V2
     * Gradle Managed Devices

[ Android Studio Electric Eel ]

  Jetpack Compose

     * Live Edit

  Google Play 및 Firebase

     * SDK 정보
     * Firebase Crashlytics의 앱 품질 정보

  대화면

     * 크기 조절이 가능한 에뮬레이터
     * 시각적 Lint 작업

  개발 도구

     * 에뮬레이션된 블루투스
     * 기기 미러링

   Logcat V2!!
"
"https://news.hada.io/topic?id=6694","Show GN: 스톡옵션 계산기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Show GN: 스톡옵션 계산기

   고려해야할 것도 많고 어려운 스톡옵션 기대수익 계산
   머리 아픈 계산에서 벗어나 차트로 보기 쉽게 정리해 보세요!
     * iOS
     * Android

   👏 한번에 모든 정보를 입력받지 않아 최소한으로 입력해도 시작할 수 있습니다.
   단계적으로 정보를 추가할 수 있어 익숙하지 않은 사람은 차근히 채워나가면 됩니다.
   따라가며 변화하는 차트를 보고 스톡옵션에 대한 이해도도 높아집니다.

   🤯 스톡옵션에 익숙한 분들도 매번 바뀌는 세법 때문에
   헷갈리거나 잊거나 확인하는데 시간 많이 쓰지 않으셨나요?
   스톡옵션 계산기와 함께 시간도 절약 해보세요!
     __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

   🙏 아직 계산에 고려되지 못한 점들(대주주 여부, 벤처기업 과세특례 등)도 있고,
   추가해야할 기능들(행사/매도 계획 변경, 변화하는 시장가 등)도 많지만
   써보실 수 있는 최소한의 퀄리티는 됐다고 생각해 올리게 되었습니다.
   제보나 의견 모두 환영합니다. 😃

   혹시 국내기업이 아니라 해외기업의 경우에도 사용가능할까요? 소득세는 국내에 내야하는 거면 똑같은걸까요?

   네 사용가능합니다. 주식 보유 신고하고 한국에 소득세 내셔야하기 때문에 행사 시 세금은 동일합니다. 다만 해외주식은 매도 시에 양도소득세도 있고 거래세도 달라서 계산기가 보여주는 세금보다 더 내실 가능성이 있습니다.

   재밌네요 ㅎㅎ 런칭 축하드립니다.
     * 앱 소개 화면에 잇는 행사/매도 팝업창(빨간/파란)을 보는 방법을 몰라서 마구 눌러봤는데, 길게 터치해야 팝업 되는 거네요. 별도 소개나 버튼같은게 있으면 어떨까요.
     * 베스팅 옵션중에 일반적인 4년이나 5년을 선택하면 기본 템플릿 (50/25/25) 같은걸 자동으로 입력되게 추가해주면 좋을 것 같아요. 날짜를 계속 입력하는게 조금 귀찮은듯 해서요 ^^;
     * 스톡옵션을 여러번 나눠서 받은 경우에 각각을 추가 가능하게 되면 좋을 듯 합니다.

   감사합니다. :)
     * 항상 좋은 의견 감사합니다. 튜토리얼처럼 유도하는게 있으면 좋겠네요~
     * 한국에만 출시한게 아니다보니 나라마다 일반적인 기준이 달라 고민이네요. 어떻게 편의성을 개선할 수 있을지 생각해보겠습니다. e.g. 날짜 입력된게 있는 상태에서 (+) 누르면 1년 더한 날짜를 넣어주는 등.
     * 맞습니다. 나눠받는 경우도 있고 여러 회사에서 동시에 받는 분들도 있어 추가할 계획이 있습니다.
"
"https://news.hada.io/topic?id=6705","RFC 9114 - HTTP/3","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           RFC 9114 - HTTP/3

     * QUIC은 HTTP 전송에 필요한 스트림 다중화, 스트림별 흐름 제어, Low-Latency 연결 설정 같은 기능들을 가지고 있음
     * 이 문서는 HTTP over QUIC 매핑을 설명
     * 또한 QUIC에 포함된 HTTP/2 기능들을 식별하고, HTTP/2 확장을 HTTP/3로 이식하는 방법을 설명함

     * RFC 9000 - QUIC: A UDP-Based Multiplexed and Secure Transport https://www.rfc-editor.org/info/rfc9000
     * QUIC은 이제 RFC 9000 입니다. https://news.hada.io/topic?id=4353
       ㅤ
     * HTTP/3의 현재상태 https://news.hada.io/topic?id=1296
     * 구글 크롬, HTTP/3 와 IETF QUIC 지원 시작 https://news.hada.io/topic?id=2992
     * Firefox, QUIC 과 HTTP/3 지원 시작 https://news.hada.io/topic?id=4088
     * 이제 페이스북 트래픽의 75%가 QUIC 과 HTTP/3 사용 https://news.hada.io/topic?id=3076
     * QUIC으로 수십억 트래픽을 대응하는 법 [번역] https://news.hada.io/topic?id=3167
     * HTTP/3는 왜 UDP를 선택한 것일까? https://news.hada.io/topic?id=682
     * HTTP/3 와 HTTP/2의 퍼포먼스 비교 https://news.hada.io/topic?id=1893
"
"https://news.hada.io/topic?id=6666","Don't Wordle","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Don't Wordle

     * 워들의 반대방식으로 단어를 맞추지 않기
     * 규칙
          + 글자를 정확히 맞출 경우 계속 사용해야 함
          + 글자 위치가 틀릴 경우 다른 자리를 찾아야 함
          + 안쓰인 글자를 찾았다면 다시 사용하지 못함
     * 가능한 단어 숫자가 위에 보임
     * 너무 낮아지면 UNDO를 통해서 기존 단어 제거 가능
"
"https://news.hada.io/topic?id=6675","GitNoter - 마크다운 기반 셀프호스트 노트 작성 웹앱 오픈소스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 GitNoter - 마크다운 기반 셀프호스트 노트 작성 웹앱 오픈소스

     * 노트를 Git에 저장하는 형태의 웹앱
     * React + Redux + REST API(Go) 로 작성된 오픈소스
     * GitHub 로그인 및 GitHub Repo에 모든 노트 저장
     * 마크다운 포맷으로 작성 및 프리뷰
"
"https://news.hada.io/topic?id=6734","Ask GN: 실제 인연이 있는 분들중에 멘토나 존경하시는 분이 계신가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ask GN: 실제 인연이 있는 분들중에 멘토나 존경하시는 분이 계신가요?

   실제 삶에서 인연이 있으신 분들 중에서 멘토나 존경하시는 분이 계신가요?
   계시다면 그 사연과 이유를 여쭈어보고 싶습니다.

   학부 시절에 만난 교수님을 정말 존경합니다. 네가 97학번인데 그때 XML이 뭔지도 모르던 시절에 XML이 데이터 마크업의 중요한 자리를 매김하게 될것이다라고 예언을 하셨는데, 정말 그렇게 되었었구요, 함수형 언어가 곧 세상을 지배할 것이다라고 하셨는데, 정말 모던 랭귀지들은 하나같이 함수를 퍼스트 클래스 취급하면서 FP 피처들을 지원했죠. 하물며 그 오래된 CPP도 람다를 지원하고, 파이썬은 이미 옛날부터 지원했던걸 보면....

   이분의 기술에 대한 통찰력과 연구력은 정말 존경스럽습니다.

   그래서 학부 1학년때 커리큐럼이 정말 남달랐는데요
   OOP 위해서 java가 아니라 스몰톡과 Objective-C 를 선택하시고
   함수형 언어 위해서 Haskell과 Scheme등을 선택 하셨더랬죠..

   취미로 언어를 설계하고 컴파일을 만드시는 분이셨고 (들리는 바에 의하면 llvm에도 많이 기여하신듯..)
   ㄷㄷㄷ

   정말 좋은 인연을 만나셨군요. :-)

   네가 -> 제가 (오타 죄송합니다)
"
"https://news.hada.io/topic?id=6669","가장 좋아하는 오픈소스 게임은?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           가장 좋아하는 오픈소스 게임은?

   HN에 올라온 질문의 답변들
     * OpenTTD : Transport Tycoon Deluxe
     * Dungeon Crawl : 로그라이크
     * OpenRA : 전략시뮬 Red Alert를 재구현
     * Battle for Wesnoth : 턴제 전략 게임
     * FreeCiv : 문명
     * Endless Sky : 우주 무역/전쟁
     * Brogue : 로그라이크
     * Reverse RPG : 워들처럼 짧게 즐기는 RPG
     * Open Hexagon : 버튼 4개로 즐기는 타이밍 액션
     * Star Control 2 : 우주 어드벤처
     * Screeps : 프로그래머를 위한 MMO 샌드박스 게임
     * AlephOne : FPS
     * Xonotic : FPS

   Veloren https://veloren.net/ (멀티플레이 복셀 RPG) 도 개인적으로 주목되더군요

   Mindustry 추천합니다.
   Factorio의 자동화와 디펜스 요소를 단순하게 표현한 작지만 재미진 게임입니다.
   유료로 구입하실 수도 있고 무료로 하셔도 됩니다.

   https://github.com/Anuken/Mindustry

   OpenRCT2 https://openrct2.org/ (RollerCoaster Tycoon 2) 가 없는게 섭섭하군요. OpenTTD랑 정말 비슷한 프로젝트긴 하지만요.

   OpenTTD https://www.openttd.org/
   Dungeon Crawl https://crawl.develz.org/
   OpenRA https://www.openra.net/
   Battle for Wesnoth http://www.wesnoth.org/
   FreeCiv http://freeciv.org/
   Endless Sky https://endless-sky.github.io/
   Brogue https://github.com/tmewett/BrogueCE
   Reverse RPG https://r-rpg.com/
   Open Hexagon https://github.com/vittorioromeo/SSVOpenHexagon
   Star Control 2 http://sc2.sourceforge.net/
   Screeps https://screeps.com/
   AlephOne https://alephone.lhowon.org/
   Xonotic https://xonotic.org/
"
"https://news.hada.io/topic?id=6730","찰스 페졸드의 CODE 2판 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           찰스 페졸드의 CODE 2판 발표

     * 1999년에 출간된 ""Code: The Hidden Language of Computer Hardware and Software""
     * 2022년 8월 19일에 2판 출간 예정(영문)
     * 2021년 1월부터 수정 시작해서 약 70페이지 늘어남 (Intel 8080을 예제로 사용해서 CPU작동에 대해서 훨씬 더 깊이 들어간다고)
     * 또한 책 내부에 있는 주요 회로들중 일부를 인터랙티브 하게 볼수 있는 CodeHiddenLanguage 웹사이트도 만드는 중

   아니 어제샀는데 ㅠ

   이러한 애프터서비스 참 감사하네요

   must cop!!! 벌써부터 설레네요

   재미난 표현 담아갑니다.

   1판 번역본은 인사이트에서 나왔는데, 2판도 그렇겠죠.. ?
"
"https://news.hada.io/topic?id=6737","더 나은 언어 선택창 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            더 나은 언어 선택창 만들기

     * 사용자를 Nudge 하되, 자동 리디렉션은 피하기
     * 위치/언어/통화 설정을 디커플링 하기
     * 사용자 설정 가능하게 하기 (통화, 타임존, 측정단위)
     * 논모달 창 사용 고려하기
     * 국가/언어를 섹션/탭/아코디언 등으로 조직화
     * 자동완성 추천으로 입력창 제공
     * 국가에는 국기를 사용하고, 언어에는 사용하지 말 것
     * 국기 아이콘 대신 지구본 및 번역 아이콘 사용 고려
     * 언어 이름을 로컬화
     * 언어 단축명이나 이니셜 피하기
     * 접근성을 위해서 선택창을 헤더와 푸터에 다 넣고 키보드로 변경 가능하게 하기
"
"https://news.hada.io/topic?id=6643","Ask GN: 코딩할 때 어떤 폰트를 사용하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Ask GN: 코딩할 때 어떤 폰트를 사용하시나요?

   이곳에 진작 올라왔을 법한 질문인데, 의외로 여기에는 아직 한 번도 올라온 적이 없는 질문인 것 같아 올려 봅니다.
   여러분은 코딩할 때 어떤 폰트를 사용하시나요? 또한, 웹 브라우저의 고정폭 글꼴은 어떤 걸 사용하시나요?

   일단 제 경우에는 D2Coding을 씁니다.
   제가 코딩용 폰트를 고르는 기준은 다음과 같습니다.
     * 산세리프(Sans-serif) 스타일의 고정폭(monospace) 글꼴이어야 한다.
     * 한글이 지원되어야 하며, 한글을 사용할 때도 고정폭이 깨지지 않아야 한다.
     * O, o, 0, l, i 등 헷갈리기 쉬운 글자의 구분이 충분히 가능해야 한다.
     * \(backslash) 기호가 ₩(한국 원) 통화기호로 표시되지 않아야 한다.
     * 터미널에서 사용하기 위한 Powerline 심볼을 지원해야 한다.
     * 기타 본인의 취향에 맞아떨어져야 한다.

   문제는 이 조건들을 모두 만족하는 경우가 생각보다 굉장히 드물다는 것입니다. 특히 한글을 사용할 때도 고정폭이 깨지지 않아야 한다는 조건을 만족하는 폰트는 정말 드문 것 같습니다. 그래서 사라사 고딕이나 Monoplex KR처럼 유명한 고정폭 글꼴에 한글 글꼴을 결합한 폰트를 찾아봤지만, 아직 기존에 쓰던 D2Coding보다 더 마음에 드는 것을 찾지 못했습니다.

   마침 최근에 새로 윈도우를 설치하면서 폰트 관련 설정을 하다가, 문득 다른 분들은 어떤 폰트를 코딩용으로 쓰시는지 궁금해졌습니다. 특히 한글 지원과 관련하여, 혹시 추천할 만한 폰트 조합이 있는지 알고 싶습니다.

   본모노(Source Han Mono)와 나눔고딕코딩 섞어서 씁니다.

   source code pro for powerline 몇년째 사용 중이 었는데
   여기 댓글 타래에서 sf mono를 알게되고 바로 갈아탔습니다.
   vscode, datagrip 에서 sf mono가 아주 이쁘게 나오네요.

   오래 전부터 타이포그래피에 수상할 정도로(?) 관심이 많던 애플이 UI용으로 직접 각 잡고 만든 폰트가 San Francisco라서 그런지 가독성 좋고 예쁘지요.

   여기서 Monoplex KR 을 알려주셔서, 한동안 Jetbrains mono 를 코딩용으로, 마크다운용으로는 Sarasa Fixed K 를 사용하고 있던 것을 Monoplex KR 하나로 코딩용, 마크다운용으로 바꿔서 쓰기 시작했습니다.
   윈도우 10, VSCode 인데요, 첫인상은 같은 폰트 사이즈인데도 실제 보이는 크기는 확 줄었다는 점과 한글은 좀 희뿌옇게 보인다는 점입니다.
   가독성에 문제가 있을 정도는 아니라서 한동안 Monoplex KR 를 써보려고 합니다!

   한글이 조금 흐리게 보이는 경우, 글자 굵기 선택이 가능한 환경이라면 굵기를 살짝 조절하면 좀 나아지는 경우도 있었습니다. VS Code라면 settings.json 파일의 editor.fontWeight 설정에 1부터 1000 사이의 숫자를 입력하여 글꼴 굵기를 미세조정할 수 있습니다.

   SF Mono를 사용하고 있었는데, 한글 사용시 고정폭 지원이라는 부분은 생각을 못해봤네요. 듣고보니 굉장히 좋을 거 같아서, 한번 적용해봐야겠어요.

   폰트 파일을 직접 수정하여 쓰시는 건가요?

   윈도우에서는 Consolas, macOS에서는 Menlo를 씁니다. 맥에서는 SF Mono가 가독성이 제일 좋았는데 이 폰트가 Xcode 밖에서도 쓸 수 있도록 라이센싱이 되는지는 모르겠네요.

   SF Mono를 빌트인으로 지원하도록 라이센싱은 없지만, 직접 다운로드받아서 커스텀 폰트 설정은 가능하더라구요. WebStorm에서 그런 방식으로 사용하고 있네요.

   개인적으로 Consolas가 별로 마음에 안 드는 구석도 있지만, 윈도우에서 기본적으로 쓸 수 있는 고정폭 글꼴 중에서는 가장 나은 편이 아닌가 싶습니다. 특히 외부와 격리되었거나 해서 제 마음대로 원하는 폰트를 사용하지 못하는 환경에서는 고정폭 글꼴로 무조건 Consolas를 사용합니다.

   저는 영어는 Ubuntu Mono derivative Powerline, 한글은 D2 Coding을 씁니다.
   영어는 고정폭 글꼴 예쁜게 참 많은데 한글은 아직까지 D2 Coding보다 좋은 걸 못찾았네요.

   저도 혹시 제가 모르지만 한글을 지원하는 다른 좋은 고정폭 글꼴이 있나 해서 Ask GN 한번 올려봤습니다만, 역시 없더라고요 ㅠㅠ

   합자(ligature)를 좋아해서 Fira Code를 쓰기 시작했는데 (하스켈 코딩을 하다보니 합자를 쓰는 편이 더 좋더라고요), 요즘에는 합자 지원하는 고정폭 글꼴이 많아져서 좋은 것 같습니다. 귀찮아서 다른 걸 시도해 보지는 않고 있습니다. 그 전에는 Source Code Pro도 오래 썼습니다.

   Haskell 같은 함수형 언어라면 연산자 기호를 보기 편하게 바꿔 주는 합자 기능을 쓰는 게 더 좋긴 하겠군요.

   다들 한번쯤 들어본 좋은 폰트들 사용하고 계시네요. 전 어쩌다보니 Comic Mono 를 사용합니다. 둥근 느낌이 좋더하구요.

   아니 Comic Sans가 고정폭 버전이 있었단 말입니까?!
   …생각해보면 굴림체 이상으로 호불호가 갈리는 애증의 존재이니, 이런 게 나올 법도 하긴 하군요.

   여러 폰트를 사용해봤는데 나눔고딕코딩을 쓰다가, D2Coding으로 정착했습니다. Meslo도 괜찮은 것 같아요.

   그러고 보니 Mac OS의 터미널 기본 폰트인 Menlo도 꽤 괜찮은 느낌이었던 걸로 기억합니다. 그게 Bitstream Vera Sans의 변형이었던가요.

   Bitstream Vera Sans의 변형 맞습니다.

   네. Meslo는 Menlo font를 Windows에서 사용하도록 컨버팅한 폰트입니다.

   https://github.com/andreberg/Meslo-Font

   찾아보니 Meslo LG 폰트의 조건 조합 선택 가이드도 있군요.
   https://johngrib.github.io/wiki/coding-font/

   FiraMono NF 씁니다..

   합자(ligature)는 쓰기 싫지만 Powerline 심볼은 쓰고 싶은 그 마음… 저도 알지요.
   그래서 저도 D2Coding ligature는 쓰지 않고 그냥 D2Coding만 씁니다.

   geeknews에서 가장 활발한 게시물!

   이런 주제가 왜 여태껏 등장하지 않은 걸까 싶기도 합니다.

   JetBrains Mono와 D2Coding을 씁니다.
   때로 터미털 폰트 등에서 IBM Plex mono를 애정합니다.

   IBM Plex Mono는 개인적으로 호불호가 갈리는 요소가 있어 좋아하지는 않지만, 인상깊은 폰트라고 생각합니다.
   그나저나 근래에 나온 폰트치고는 JetBrains Mono가 생각보다도 인기가 많은 것 같네요.

   JetBrains Mono는 ligarture도 왠지 거슬리지 않네요

   오, 그 정도인가요.

   메인으로는 Pragmata Pro (https://fsd.it/shop/fonts/pragmatapro/), 서브로 Berkeley Mono (https://berkeleygraphics.com/typefaces/berkeley-mono)를 사용합니다. 코드에 한글을 사용하는 경우가 거의 없어서 한글 고정폭은 고려하지 않고 있습니다.

   상용 폰트는 돈 값을 충분히 한다고 느껴지시는지 궁금합니다.

   Pragmata pro는 구입한지 햇수로 5년 좀 넘은 것 같은데, 다른 폰트를 제치고 항상 메인 코딩용으로 사용하게 되는 폰트라서 가격을 지불한 보람을 느끼고 있습니다. Berkely mono는 이제 구입한지 몇 달 정도밖에 되지 않아 정확하게 평가하기는 좀 어렵습니다.

   한국 돈 25,000원 상당을 지불해서 5년 넘게 쓴다면 정말 제 값은 충분히 하는군요.
   Berkeley Mono도 보기에는 상당히 괜찮아 보이는데, 실제로는 어떨지 훗날의 평가가 궁금합니다.

   pretendard가 고정폭 지원을 안해서 매우 아쉬워요

   Pretendard는 UI 디자인을 위해 만들어진 물건이니 어쩔 수 없긴 하지만… 그래도 쓸만한 한국어 지원 고정폭 글꼴이 좀 더 나왔으면 하는 바람이 있습니다.

   저두 D2Coding...

   다른 고정폭 글꼴에 한글 폰트를 결합한 경우가 아니라, 아예 한글 사용을 처음부터 염두에 두고 만든 고정폭 글꼴은 현재로서는 D2Coding밖에 없는 것 같습니다. 적어도 제가 아는 한에서는요.

   Hack에 D2Coding(한글용) 섞어씁니다.

   설정은 이래요.
   ;;
   ;;; straight is nill' macro ;; ;;;###autoload (defmacro use-feature (name &rest args) ""Like use-package', but with straight-use-package-by-default' disabled."" (declare (indent defun)) (use-package ,name
   :straight nil
   ,@args))

   (use-feature emacs
   :custom
   (face-font-rescale-alist '(("".D2Coding."" . 1.26)))
   :init
   (add-to-list 'default-frame-alist '(font . ""Hack Nerd Font""))

   (set-face-attribute 'default nil
   :height 120
   :family ""Hack Nerd Font"") ;; This will early init
   (set-fontset-font ""fontset-default"" '(#x1100 . #xffdc)
   '(""D2Coding"" . ""iso10646-1""))
   (set-fontset-font ""fontset-default"" '(#xe0bc . #xf66e)
   '(""D2Coding"" . ""iso10646-1"")))

   히익 Emacs!
   잘 보니까 그냥 Hack 폰트가 아니라 Hack Nerd 폰트인 모양이군요.

   앗 맞아요

   MS에서 만든 Cascadia Mono를 사용하고 ligature 옵션은 사용하지 않습니다. Fallback font로 D2Coding을 사용중이예요.

   Fallback 설정은 레지스트리 편집으로 하셨나요?

   inteliJ 계열을 사용하고 있어서.. 설정이 그냥 가능합니다.

   아하… 저도 IntelliJ IDEA와 Rider를 쓰고 있습니다만, 어디서나 항상 D2Coding을 쓰다 보니 fallback 옵션 설정은 그냥 잊고 있었네요.

   fira code 사용하고 있습니다.

   Fira Code는 합자(ligature) 지원에 진심인 글꼴인 것 같더군요.
   개인적으로는 고정폭 글꼴에서 합자 쓰는 걸 별로 좋아하지 않지만, 그런 거 좋아하시는 분들이라면 꽤나 마음에 드실 폰트라고 생각합니다.

   저도 D2Coding Ligature 를 쓰다가 최근에 Jetbrains Mono 를 쓰고 있는데 한글 고정폭이 지원되지 않네요

   CJK를 지원하는 고정폭 글꼴은 넘나 귀한 것…

   개인적으로는, 코딩할 때 한글을 최대한 쓰지 않고 있어서, 그냥 가장 마음에 드는 Jetbrains Mono를 사용하고 있습니다.
   개인적으로는 도트 글꼴도 좋아해서, 가끔 Neo둥근모 Code도 사용하고 있습니다.

   참고로 제 경우는 저희 팀 내 소스 코드의 모든 주석이 한국어이기 때문에 코딩용 폰트의 한글 지원은 포기할 수 없는 조건입니다.

   윈도에서 vscode 로 개발하면서 젯브레인 모노 사용합니다. 저희도 주석은 당연히 한글인데 코드에 한글을 사용하지는 않아서 크게 상관없는 듯 합니다.
   마크다운 편집시에는 한영 같이 있을 때 정말 2:1 고정폭인 것이 중요해서 사라사 fixed k 를 쓰고 있습니다.

   사실 d2coding이 모든 조건에 부합해서 너무 오랜 기간 썼기 때문에… 대체 폰트를 찾다가 sarasa fixed k를 사용중입니다. jetbrains mono 는 영어 글꼴이 미려해서 맘에 들었고요.

   저도 뭐 순수하게 소스 코드에만 사용한다면 한글이 fallback되는 폰트를 써도 상관없겠지만, 왠지 마크다운이나 터미널 혹은 웹 브라우저의 고정폭 글꼴까지 하나의 폰트로 일관성 있게 깔맞춤하려는 고집이 있어서… 그런 의미에서는 D2Coding이 정말 모든 조건에 부합하니까 저도 지금까지 계속 쓰고 있지요.

   사라사 고딕은 베이스가 된 Iosevka 폰트가 별로 제 취향이 아니라서 안 씁니다만, (이 스레드에서 알게 된 Meslo LG 폰트만큼은 아니더라도) 각 디자인 조합을 취향에 맞게 쓸 수 있도록 세분해 둔 것은 좋더군요.

   Neo둥근모 Code의 경우에는 일부 글자(예를 들면 U와 V)가 제대로 구분되지 않는 느낌이라 위에 있는 조건 중 3번째를 만족하지 못한다고 생각합니다.

   RobotoMono Nerd Font
"
"https://news.hada.io/topic?id=6749","GitHub Skills - 인터랙티브하게 GitHub 사용법 배우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 GitHub Skills - 인터랙티브하게 GitHub 사용법 배우기

   GitHub이 직접 만든 가이드

First day on GitHub

     * Introduction to GitHub
     * Communicate using Markdown
     * GitHub Pages

First week on GitHub

     * Review pull requests
     * Resolve merge conflicts

Automate workflows with GitHub Actions

     * Hello GitHub Actions
     * Continuous integration
     * Publish packages

   인터랙티브라고 해서 https://learngitbranching.js.org 와 같이 상호작용하며 배우는 걸 생각했는데 링크에는 그냥 문서만 있는 것 같네요. 혹시 다른 페이지가 있을까요?

   Github Action 이 붙어있어요. GA 가 일종의 숙제 검사 느낌으로 작동하는 것 같습니다

   그냥 깃헙에서 실제로 작업하면서 해볼수 있어서 인터랙티브 라고 얘기하는 듯 하네요;;
"
"https://news.hada.io/topic?id=6674","Privaxy - 차세대 트래커 & 광고 블록커","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Privaxy - 차세대 트래커 & 광고 블록커

     * HTTP(S) 트래픽을 MITM 하여 광고 및 트래커를 원천 차단하는 프록시
     * uBlock Origin, Adblock Plus 의 필터를 그대로 지원
     * Web GUI로 통계 및 실시간 요청 탐색 지원
     * MITM 파이프라인 상에서 특정 호스트 제외처리 가능
     * Rust 오픈소스 로 적은 자원 사용
          + 32만개 필터 적용해도 약 50MB의 메모리만 사용
          + 작은 머신에서도 초당 수천 리퀘스트 처리 가능

   윈도우용으로 컴파일 하니 DNS 요청이 매우 느려지네요. 빨리 개선 되었으면 좋겠습니다.
"
"https://news.hada.io/topic?id=6702","Beacon CRM, 주4일 근무제로 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Beacon CRM, 주4일 근무제로 변경

     * 자선 단체들을 위한 CRM SaaS 회사
     * 100/80/100 모델을 적용
          + 급여와 혜택은 100% 예전 그대로
          + 근무 시간은 예전의 80% (월~목 주4일)
          + 생산성은 100% 예전 그대로 유지
     * 기본적인 업무 공간은 사무실이지만, 재택도 필요하면 가능
     * 생산성을 유지하기 위한 방법을 찾는 것은 전체 팀의 책임
          + 불필요한 회의를 없애고, 집중을 도와주도록 Do Not Disturb 표지를 책상에 붙이고, 수동 관리 작업을 자동화 하는 등
          + (주4일 근무라는) 보상이 너무 좋기 때문에 모두가 더 효율적으로 만드는 방법을 찾기 위해 열심히 노력 중
     * 고객 지원팀은 주5일동안 지원하기 위해 명확한 로테이션을 가지며, 기존 주말 및 위험 근무 수당 및 정책이 금요일까지 지원되도록 확대

   최근 2주간 주4일제 베타 해보니까 너무 좋..아요..ㅎㅎ

   Bolt, 주4일 근무제 영구적으로 시행
   MS Japan의 주4일 근무제 실험이 생산성을 40퍼센트 향상시키다
   아이슬란드의 주4일 근무 시험 '압도적인 성공'
   벨기에, 주4일제를 승인하고 퇴근 후에 상사의 연락을 무시할 권리 부여
"
"https://news.hada.io/topic?id=6756","27년만에 역사 속으로 사라지는 인터넷 익스플로러… 서비스 종료 이후는?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                27년만에 역사 속으로 사라지는 인터넷 익스플로러… 서비스 종료 이후는?

     * 마이크로소프트가 2022년 6월 15일자로 인터넷 익스플로러(IE) 11 지원을 종료
     * PC 시대, MS의 절대 권력이었던 IE… 한 때 ‘끼워팔기’ 논란
     * 브라우저 춘추전국시대 돌입, 스마트폰 등장과 함께 IE 시대 저물어가
     * 1개월 간은 윈도우를 통해 IE 접근 시 자동으로 엣지 ‘IE 모드’로 넘어간다고 안내

   Internet Explorer 11 has retired and is officially out of support—what you need to know
   https://blogs.windows.com/windowsexperience/2022/…

   Windows 3.1에 등장했던 IE가 드디어...

   IE 11 지원 종료 공지 https://docs.microsoft.com/ko-kr/lifecycle/…

   경주의 모 카페 옥상에 빈소가 마련되었습니다..
   https://www.clien.net/service/board/park/17331335

     故 Internet Explorer
     1995.8.17 ~ 2022.6.15
     He was a good tool to download other browsers
"
"https://news.hada.io/topic?id=6687","‘밀리의 서재’ 해킹으로 고객 ‘개인정보’ 또 유출","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ‘밀리의 서재’ 해킹으로 고객 ‘개인정보’ 또 유출

     * 13,182명 정보 유출
     * 지난 2019년 6월 해킹으로 유출된 지, 3년 만에 두 번째 유출

   근데 보안뉴스 사이트인데.. 왜 인증서가 만료..

   올해 상장 준비 중이라는데.. 두번째 개인정보 유출은 좀 그렇네요.
   한번 털리고 나서 보안 대응을 제대로 못한 건지..

   밀리의 서재 사이트 https://www.millie.co.kr/ 들어가보니 사과문 공지가 떠있네요.
   별도 링크는 없어서 그냥 가져와 봅니다.

     안녕하세요. 밀리의 서재입니다.
     먼저 밀리의 서재를 믿고 사랑해 주시는 회원 여러분께 머리 숙여 진심으로 죄송하다는 말씀을 드립니다.

     밀리의 서재는 회원님들의 개인 정보 보호를 최우선으로 노력해 왔으나
     해킹 공격으로 인해 일부 회원님의 개인 정보가 유출된 사실을 확인하였습니다.

     유출 시기는 6월 3일 새벽 4시경으로, 13,182명의 정보가 유출된 것으로 파악됩니다.
     유출된 정보는 이메일 주소, 암호화되어 식별 불가한 전화번호 및 비밀번호입니다.
     이중 어떤 정보가 유출되었는지는 회원마다 서로 다르기 때문에,
     아래 '개인정보 유출 내역 확인' 버튼을 통해 조회하실 수 있습니다.
     또한 유출 정보 중 전화번호와 비밀번호의 경우에는 암호화되어 있어, 외부에서는 해당 정보만으로 회원님의 정보에 해당한다는 사실을 알아내기 불가능하도록 조치되어 있다는 점도 함께 안내해 드립니다.

     당사는 위 침해 사실 인지 즉시 피해가 확대되는 것을 방지하기 위해 외부에서 접근하지 못하도록
     차단하는 초기 대응을 실시하고, 24시간 모니터링을 진행하고 있습니다. 또한, 한국인터넷진흥원(KISA)과
     방송통신위원회에 본 사실을 신고하고, 관계 기관과 긴밀히 협의하여 침해에 대응하고 있습니다.

     당사는 개인 정보 최소 수집 원칙에 따라 회원님의 ID 및 비밀번호, 성명, 카드번호 등
     금융 정보는 원칙적으로 암호화하거나 직접 보관(수집) 하지 않고 있습니다.
     밀리의 서재는 가장 우선적으로 회원님의 소중한 자산인 개인 정보가 유통되거나 악용되지 않도록
     모든 조치를 다할 것이며, 다시는 불의의 사고가 재발하지 않도록 원점에서 다시 점검하겠습니다.

     회원님께서는 출처가 불분명한 이메일 수신 시 주의를 기울여 주실 것을 당부드립니다.
     항상 밀리의 서재를 믿고 사랑해 주시는 회원님께 심려 끼쳐드린 점에 대해 다시 한 번 고개 숙여
     사과 드립니다. 다시는 이러한 일이 발생하지 않도록 관계 기관과 협조해 철저히 조사하고,
     개인정보 보호에 더욱 만전을 기하겠습니다.
     * 관련 문의 연락처 : 밀리의 서재 고객센터 070-7510-5415
"
"https://news.hada.io/topic?id=6746","구글, 대화형 AI(챗봇)가 지각이 있다고 주장한 직원을 유급 휴직 처분","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                구글, 대화형 AI(챗봇)가 지각이 있다고 주장한 직원을 유급 휴직 처분

     * 자신이 제기한 AI Ethics(윤리)건과 관련하여 ""유급 관리 휴가""를 받았고, 이는 구글이 해고하기 전에 하는 행동이라고
     * LaMDA 와 진행한 인터뷰를 통해서 AI가 지각(Sentient)이 있다고 판단했다고 얘기하며 인터뷰 내용을 공개
     * 구글은 그가 비밀 유지 의무 위반 및 LaMDA를 의인화하는 오류를 범했다고 해명

   ""구글은 그가 비밀 유지 의무 위반""에 따르면 나중에 자각이 생기거나(개인적으로 큰 기간동안 만들기 어렵다 생각하나), 윤리적 문제가 생기더라도 비밀 유지 의무를 지키길 바라겠군요. 아니면 짜르거나 고소하거나.

   없다고 말해도, 이게 없는 건지 말 못하게 해서 없다라는 표현만 존재하는지 구분이 안되는 상태라니. 옆나라 보는거 같군요 😭

   정직 처분은 ""AI가 자의식이 있다는 걸 사내에서 동의받지 못하자 의원들에게 자료를 유출했기 때문""이라는 이야기도 있네요.

   Gary Marcus 는 그건 전혀 말도 안되는 얘기이며, LaMDA는 아주 조금도 지각이 없다는 답글을 남겼습니다.
   https://garymarcus.substack.com/p/nonsense-on-stilts

   ""LaMDA 나 GPT-3 는 그냥 거대한 언어 DB에서 가져온 패턴을 일치 시킬뿐이기에, 아무 의미도 없고 지각이 있는 것도 아님""

   LaMDA 와의 인터뷰 내용 https://cajundiscordian.medium.com/is-lamda-sentient-an-interview-ea64…
   인터뷰중 일부 번역은 국내 뉴스에서 보시면 됩니다
     * ""죽음 두렵다""는 AI..성큼 다가온 '인공지능 인격체' 논쟁 https://n.news.naver.com/mnews/article/001/0013242838?sid=104
"
"https://news.hada.io/topic?id=6639","Architecture Note : Datasette","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Architecture Note : Datasette

   개인용 데이터웨어하우스 툴인 Datasette 개발자 Simon Willison과 아키텍처에 대해 인터뷰한 글
     * ASGI로 를 이용한 파이썬 앱 구축
     * SQLite의 장점
     * 플러그인 시스템을 위한 Hook 설계
     * 안전하게 SQL Injection 허용하기
     * AsyncIO로 SQLite 이용하기
     * Baked Data 아키텍쳐 패턴
     * Electron 으로 파이썬 웹앱 번들링 하기 : Datasette Desktop
     * 파이썬을 WebAssembly로 패키징하기 : 브라우저용 Datasette Lite

   이 사이트는 1Password의 스태프 엔지니어인 Mahdi Yusuf가
   좋은 아키텍처에 대한 내용을 정리하려고 만든 것으로, 이 인터뷰가 첫번째 글입니다.
   이메일 구독도 가능하니 챙겨봐두시면 좋을 것 같아요.

   Datasette - 개인용 데이터 웨어하우스 오픈소스
"
"https://news.hada.io/topic?id=6752","왜 Rust가 스타트업에게 좋은 선택인가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         왜 Rust가 스타트업에게 좋은 선택인가

   인재를 뽑기 쉽고, 빠르게 작업 가능하고, 성능이 좋음

   글 내용에 딱히 동의하는 것은 아니어서, 작성자가 주장하는 것을 간단히만 옯겼습니다.

   외국의 경우에는 Rust가 성능도 좋고 사람을 뽑기 쉽다는 것엔 어느정도 동의합니다만..
   (국내에 Rust 개발자가 그 정도 있는지는 의문..)

   스타트업에서는 언어가 중요하다기 보다는, 어떤 문제를 해결하는지가 더 중요합니다.
   지금 상황에 맞는 도구를 써서, MVP를 제대로 빨리 만드는게 중요하다고 봐요.
   하루 하루가 바쁜데, 언어에 익숙해지는데 3달 걸린다는 얘기는 뭔가 엇나간 듯
   회사 다니면서 토이 플젝으로 Rust 3달 배우고, 그 다음에 창업하는 거라면 OK

   https://news.ycombinator.com/item?id=31736703
   이 기사가 올라온 HN의 댓글에도 저와 비슷한 생각을 가진 댓글들이 많네요.

   ""지금 상황에 맞는 도구를 써서, MVP를 제대로 빨리 만드는게 중요하다고 봐요.""
   저는 '제대로 빨리' 때문에 rust가 괜찮을것 같습니다.
   언어 컨셉이 컴파일만 되면 어느정도의 품질이 나오도록 하는 것이고(그래서 컴파일이 상당히 빡빡하고) 급하게 개발하다 날림이 되지 않게 막아주는 역할을 해주리라 생각합니다

   아 제가 말한 문제는.. Rust를 잘 모르는 상황에서 '제대로 빨리' 가 가능할까요?
   스타트업의 '지금 상황에 맞는' 도구인지는 잘 모르겠어서요.

   지금 상황이 데모 만드는 단계라면 품질이 필요없겠죠 장기간 유지보수할 생각이 없어도 그럴거구요 하지만 그게 아니라면 필요할것 같아요
   스타트업 경험이 없어서 잘 모르지만 일단 빨리 개발하고 업데이트를 해나가자는 전략을 많이 쓸 것 같은데 나중으로 미루다보면 결국 품질 안정은 저멀리 가버리겠죠
   그래서 컴파일단에서 많은것을 강제하는 Rust가 오히려 도움되는 도구이지 않을까 합니다

   이 말씀에 동의합니다.
   lib도 부족한 상황에서 이것을 가지고 서비스를 만든다??
   나중에 엄청난 수정작업을 수반할 꺼 같습니다.
"
"https://news.hada.io/topic?id=6651","Show GN: Q.Link | Hide your link behind a simple quiz","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Show GN: Q.Link | Hide your link behind a simple quiz

Q.Link는 무엇인가요?

   Q.Link란 퀴즈로 접근하는 링크라는 의미로
   링크 앞에 간단한 퀴즈를 추가하여 정답을 맞췄을 때만 링크에 접속 할 수 있도록 해주는 간단한 서비스입니다. 이벤트, 구인 페이지, 모바일 청접장등 여러 상황에서 사용해볼 수 있습니다.
   데모에서 어떤 프로젝트인지 확인해보세요!

   이 프로젝트는 codecaptcha.io에서 영감을 받았습니다.

어떻게 사용하나요?

   Q.Link 생성하기를 통해 이동하게될 링크와 퀴즈 내용, 정답을 입력하면 Q.Link가 생성됩니다. 정답을 맞춘 사람만이 링크로 접근할 수 있게 됩니다.

어떤 상황에서 사용하나요?

   보안적인 요소보다는 재미 요소에 중점을 두고 여러 상황에서 활용해볼 수 있습니다.
     * 간단한 퀴즈를 맞춘 참가자들이 회사 지원 페이지를 들어올 수 있도록 하기
     * 생일을 알고 있는 사람만 모바일 초대장을 볼 수 있도록 하기

   Service: https://q-link.minung.dev
   Github: https://github.com/hmu332233/q-link
   Producthunt: https://www.producthunt.com/posts/q-link

   버그: 공유하기 버튼을 누르면 생성된 링크가 복사되는게 아니라 (complete) 페이지 링크가 복사되네요

   앗. 리포팅 감사합니다..!

   작으면서 멋진 아이디어네요!

   감사합니다. :)

   좋은 아이디어인 것 같습니다. 보니까 저도 한 가지 아이디어가 떠오르네요.

   퀴즈 이벤트를 진행할 때 선착순으로 진행되는 경우도 종종 있더라구요. 그래서.. 선착순 n명을 설정할 수 있는 기능도 (항후) 추가해보면 어떨까요? 현재는 없는 것 같아 말씀드려봅니다 ㅎㅎ..

   피드백 감사합니다. :)
   역시 GeekNews에 올리니 양질의 아이디어들이 올라오네요. 😀😀

   재밌네요! favicon 변경을 안하셨었는지 vercel 아이콘이 보이네요ㅎㅎ
   그런데 프로덕트헌트 주소가 동작을 안합니다~

   감사합니다!

   프로덕트헌트가 오늘 리뉴얼된 것 같은데 잠깐 이슈가 있었던 것 같아요.

   favicon은 아직 준비를 못했습니다. ㅠㅠ..
   GeekNews에 파비콘을 만들어서 프로젝트에 기여해주실 분을 찾는다는 내용을 넣는다는걸 깜박했네요.

   에러페이지가 떴었는데 시간지나 다시 해보니 잘되네요

   런칭 축하드립니다~! 사이트 깔끔하네요.

   만들어지는 URL Path에 SLUG 지정 기능이 있으면 좋을 것 같아요.
   기본 주소가 너무 길기도 하고, 뭔가 의미를 부여하는게 가능할 듯.

   너무 쉬워지는 것 같지만, 객관식 기능도 넣으면 어떨까요? ㅎ

   감사합니다!
   slug 지정, 문제의 유형 추가 아이디어 너무 좋네요. 👏👏
"
"https://news.hada.io/topic?id=6709","Discover the new  HTML Tag: Native Modals Make Easy","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Discover the new HTML Tag: Native Modals Make Easy
"
"https://news.hada.io/topic?id=6751","Fresh - 차세대 웹 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Fresh - 차세대 웹 프레임워크

     * 빌드 단계가 없음 : 코드 작성후 Deno Deploy에 올리면 프레임워크가 알아서 처리
     * Edge에서 JIT 렌더링
     * Zero Config
     * TypeScript 기본 지원
     * Island based client hydration
     * Preact + JSX

   Pbkit 프로젝트 홈페이지에서 Fresh를 사용하고 있습니다: https://github.com/pbkit/pbkit.dev
     * Islands Architecture https://www.patterns.dev/posts/islands-architecture/

   빌드를 안하는게 아니라 서버가 ESBuild를 WASM으로 실행하는 거네요
   https://github.com/lucacasonato/fresh/…
"
"https://news.hada.io/topic?id=6741","새로운 Apple Human Interface Guidelines","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  새로운 Apple Human Interface Guidelines

     * 기존 HIG 자료를 완전히 다시 디자인
     * 플랫폼별 지침을 통합문서로 합치고, 각 플랫폼에 대한 세부 정보를 유지하면서도 공통적인 디자인 접근을 쉽게
     * 네비게이션을 쉽게 만들고, 인덱스 생성. 내부 검색 가능
     * 올해안에 전체 및 각 페이지별 변경 로그도 추가될 예정

   애플 개발자 문서 웹페이지도 이번에 레이아웃 등이 완전히 바뀌었는데 HIG도 함께 바뀌었나보네요.
"
"https://news.hada.io/topic?id=6645","Dragonfly - Redis와 Memcached의 최신 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Dragonfly - Redis와 Memcached의 최신 대체제

     * SET/GET 성능면에서 Redis 보다 25배 빠른 인메모리 저장소. 메모리 효율도 뛰어남
     * 약 ~130개의 Redis 명령과 거의 모든 Memcache 명령(cas 제외)을 다 지원함
     * I/O를 위해서 Linux의 io-uring API를 사용. (Linux 5.10 이상을 요구함. Ubuntu 20.04.4~)
     * x86/arm64 바이너리 제공

   호오... 예전에 Redis 첨 쓸때도 언빌리버블! 하면서 썼는데 25배라니...

   이런걸 보면 왠지 불안한 부분이 있더라구요.
   Redis와 Memcached가 뭘 몰라서 25배나 느리게 돌아가고 있지는 않을 것인데
   25배 빠르게 한 만큼의 트레이드 오프가 어디에서 나올것인가 하는.

   최신 리눅스 커널에서만 지원되는 기능을 사용했으니, 그 댓가로 설치 가능한 시스템의 범위를 포기한 것이라고 보면 되지 않을까 싶습니다. 최신 커널의 리눅스가 아니면 동작하지 않을 테니까요. 하지만 최신 버전 리눅스를 실행하는 인스턴스를 금방 띄울 수 있는 클라우드 환경에서는 충분히 감수할 만한 트레이드 오프라고 생각합니다.

   리눅스 전용 비동기IO인 io_uring 을 적용하면서 나오는 장점인 듯 하네요.
   Redis 에도 io_uring 적용해보자는 이슈가 있는거 같은데 아직 시도는 없는 듯
   https://github.com/redis/redis/issues/9441

   감사합니다.

   개발자가 HN에서 질문/답변 받고 있네요.
   https://news.ycombinator.com/item?id=31560547
"
"https://news.hada.io/topic?id=6685","Diablo Immortal에서 장비를 완전히 갖추는데는 약 1.3억원이 필요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Diablo Immortal에서 장비를 완전히 갖추는데는 약 1.3억원이 필요

     * 전설 보석을 얻기 위해 전설 문장을 구매해야 함
     * 무료 플레이어는 다 얻기 위해 10년은 걸릴 것

   다른 건 모르겠고, 일단 별로 재미가 없더라구요...ㅠ

   찾아보니 전설문장 구입시 1레벨 보석만 확정 드롭이고 5레벨은 4.5% 확률 이라네요.

   P2W(Pay to Win)에 익숙하지 않은 외국인들은 엄청나게 비난중이네요.
   Metacritic 에 유저 평점이 0.9 까지 떨어졌습니다.
   https://www.metacritic.com/game/ios/diablo-immortal

   한국에선 다른 유료과금 게임에 비해 1억정도면 싼데? 라고 생각하는 듯... ?

   저 랜덤박스(Loot Box) 관련 법률이 있는 벨기에/네덜란드는 출시 못한다고 하네요.

   해외 게이머들 리뷰를 보니, 장비를 완전히 갖추기까지 30~50만불 정도가 든다는 글을 봤는데... 과금 없이도 즐기는 유저들도 조금씩 많아지고는 있는거 같아요. 호기심에 받아는 놨는데, 켜기가 무섭내요.

   벨기에랑 네덜란드는 관련 법률이 엄청 엄격해서 유럽 진출한 로스트 아크도 출시 못했다는 이야기를 들었습니다.
"
"https://news.hada.io/topic?id=6732","Umbrel - 셀프호스팅을 위한 개인용 서버 OS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Umbrel - 셀프호스팅을 위한 개인용 서버 OS

     * 라즈베리 파이 나 Ubuntu/Debian 시스템에 설치 가능
     * NextCloud, PhotoPrism 등으로 구글 서비스 대체
     * 비트코인 / 라이트닝 노드 실행
     * 앱스토어 제공 : PiHole, Syncthing, Home Assistant, Node-RED 등 쉽게 설치 가능

   OpenMediaVault같은 느낌이네요...

   이걸 OS라고 불러야 하나 싶은데.. 음..

   그냥 application suite 처럼 보이는데요;;;

   본인들이 그렇게 얘기하고 있으니.. 원제목을 충실히 옮겨봤습니다;;;
"
"https://news.hada.io/topic?id=6642","50대의 Geforce 1080Ti로 유방암/뇌종양과 싸운 '아마추어' 프로그래머","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             50대의 Geforce 1080Ti로 유방암/뇌종양과 싸운 '아마추어' 프로그래머

   ""모든 영웅이 망토를 입는 것은 아닙니다.""
     * 2018년, X-Ray 이미지를 올리면 AI로 유방암을 진단해주는 사이트를 공개한 coolwulf에 대한 이야기
          + 완전히 무료. 정확도가 90%에 달함
     * 유방암은 초기에 발견하면 완치율이 높지만, 초기 증상이 뚜렷하지 않아 치료시기를 놓치기 쉬움
     * 최종적으로는 의사가 판단 해야겠지만, 신뢰할 수 있는 AI로 종양을 감지한다면 이를 조기에 발견할 수 있어 충분히 가치가 있음
     * 처음에 공개한 글은 많은 호응을 받았지만, 공개한 coolwulf 는 자신을 노출하지 않고 사라졌음
     * 그러고 2022년 coolwulf는 더 중요한 ""뇌종양 프로젝트""로 돌아왔음. 여전히 자신을 숨긴 채..
     * 기자가 미 중부에 사는 coolwulf를 찾아가 몇번 인터뷰한 내용.

Coolwulf의 본명은 Hao Jiang

     * 난징대학교 물리학과에서 학부 및 박사과정을 마치고, 미시건 대학교에서 원자력 공학 및 방사선 과학과에서 박사를 취득
     * 그는 자신의 경력을 이렇게 평가함

     제 메인 커리어는 '의료 영상' 이지만, 여가시간에 오픈소스 프로젝트를 개발하는 '아마추어' 프로그래머 이기도 합니다.
     * 학생시절 부터 코딩을 했고, GitHub 이전에 SourceForge 나 자신의 웹사이트에서 사이드 프로젝트를 진행했음
     * 2001년에는 Mozilla의 Gecko 렌더링 엔진 관련 프로젝트에 참여했고, Firefox 의 전신인 코드명 Pheonix 에도 참여
     * 2009년 부터는 호텔을 저가로 예약해주는 Exp Deals Hotel 라는 사이트를 운영하기도 했음
     * 미시건대학교에서 의료 영상 공부를 마친뒤 Bruker 와 Siemens에서 이미징 디텍터 제품 개발을 지휘
     * 그후 텍사스 대학교의 교수인 Weiguo Lu와 함께 방사선 요법 관련 소프트웨어 회사를 차려서 암 방사선 치료 및 인공지능 기술 제품 개발 중

죽음을 보다

     * 이대로 진행했으면 아마도 그는 과학 창업자가 될 것 이었지만,
       난징 대학교 동문이 34살의 나이로 유방암에 대한 치료시기를 놓쳐서 4살의 아이만 남겨두고 사망하는 것을 보게 됨
     * 많은 유방암 환자가 종종 암을 발견하는 것에 대한 접근 방법이 없어서, 진단이 늦어진다는 것을 알게 됨
     * 그래서 적절한 전문 경험이 있던 그에게, AI를 이용해서 X-Ray 이미지를 감지하자는 아이디어가 떠오름

데이터 셋 모으기

     * Coolwulf는 먼저 플로리다 대학교 웹사이트에서 DDSM 및 MIAS 데이터 셋을 다운로드
     * 그 시절에는 데이터 포맷이 구식이어서 표준 Dicom 이미지가 아니였고, 이미지가 아직 필름 스캔이었어서 특별한 프로그램을 짜서 모든 정보를 사용가능한 형태로 변환
     * 바르셀로나 대학교에서 비공개자료인 InBreast 유방암 데이터 셋을 요구하기도 함
     * 그러면서 많은 문서를 읽고 모델 코드를 작성

로컬 GPU 클러스터 구성

     * 모델을 효율적으로 훈련시키기 위해서는 고성능 하드웨어가 필요했고,
       자신의 돈으로 50개의 Nvidia GTX 1080 Ti 로 로컬 GPU 클러스터를 구성
     * 그 시절에는 암호화폐 마이닝 때문에 50개 그래픽카드를 구성하는게 쉽지 않았음
     * 친구들에게 Newegg/Amazon/Dell 을 뒤져서 GPU를 구해달라고 도움도 요청
     * 3개월에 걸쳐서 ""무료 AI 유방암 검출"" 웹사이트가 만들어져서 2018년에 라이브 됨

사람들의 반응

     * 얼마나 많은 사람이 이용했는 지는 모름. 개인정보 문제로 데이터는 서버에 저장되지 않기 때문
     * 하지만 환자들로부터 많은 감사 이메일이 도착하기 시작. 특히 중국에서 많이 옴
     * 사용자들은 의료 자원이 부족한 먼 지역들의 사람을 위해서 웹사이트로 종양을 탐지 했음
     * 몇 년 전만 해도 이 기술은 지금만큼 대중적이지 않았기 때문에 coolwulf의 프로젝트는 거의 시초였음
     * 이 웹사이트는 업계에서 많은 주목을 받았고, 푸단대학병원(상하이에 있는 국립대학) 같은 곳에서도 이메일로 감사를 표하고 재정 및 기술지원을 하겠다는 의사 표현도 함
     * 하지만, 이 전체는 coolwulf 가 혼자 돈을 냈고, 작은 돈은 아님
     * 왜 유료화 하지 않냐고 묻자

     ""암 환자와 가족들은 너무 많은 것을 견뎌왔기에, 모두가 그들을 돕고 싶어 한다고 생각합니다. 나에게는 그럴 수 있는 능력이 있고요""
     * 웹사이트 말고 데스크탑 버전도 있음

두번째 삶의 변화

     * 2021년에 Coolwulf는 두번째 삶의 변화를 겪음
     * 동료의 사촌이 처치하기 어려운 뇌종양을 앓아 ""전뇌 방사선 치료(WBRT, Whole Brain Radiation Therapy)""를 받음
     * 안타깝게도, 전뇌방사선치료를 하고 몇달이 지나서 종양이 재발했으며, 더 이상 손 쓸수 없이 죽음을 기다려야 했음
     * WBRT는 방서선을 통해 종양을 대규모로 제거하는 치료법으로, 암세포를 제거하지만 정상 뇌조직에도 손상을 주어서 병변의 발생을 줄이는 치료법
     * 조금 덜 딱딱하게 말해서, WBRT는 ""무차별 공격""에 가까움
     * 따라서 뇌간(Brainstem, 뇌줄기)나 시신경(Optical Nerve) 같은 뇌의 중요구조의 방사선량 한계점을 고려하면 WBRT는 일반적으로 '일생에 한번만 할 수 있는 치료법(once-in-a-lifetime)'
     * 이 일이 있은 후, coolwulf는 관점을 완전히 바꾸고 업계의 도전과제를 돌파하기로 결정
       → AI를 탐지 단계 뿐만이 아니라 실제 치료에 적용하는 것

뇌종양 치료의 현재

     * 현재 뇌종양에 대한 가장 일반적인 치료법은 전뇌 방사선 치료(WBRT)
     * 미국에서만 매년 20만명이 WBRT를 받음
     * 그러면, 다발성 뇌종양 환자에게 WBRT 치료를 선택하는 위험(일생에 한번 뿐이므로)을 감수해야 할 필요가 있을까?
     * 꼭 그렇지는 않은게, 다른 치료법인 정위 방사선 요법(Stereotactic Radiotherapy, Stereotactic Radiosurgery/SRS)이 있음
     * 전뇌 방사선 치료와 비교하면 정위 방사선 요법은 집중도가 높아서 정상조직을 손상시키지 않고 병든 조직만 정밀하게 제거가 가능
     * 예를 들어 감마 나이프(Gamma Knife)는 일종의 정위 방사선 치료기계. 이 치료법은 부작용이 훨씬 적고 환자에게 덜 해로우며 여러 번 사용 가능
     * 정위 방사선 요법이 환자에게 더 나은 삶의 질을 제공하는 동시에 더 효과적이라는 게 학계의 일반적인 견해

정위 방사선 요법을 하기 위해선

     * 유일한 문제는 정위 방사선 요법으로는 의료 자원이 더 부족해 진다는 것
     * 이 프로토콜이 채택되면 종양 전문의나 신경외과 의사가 각 종양의 윤곽을 정확하게 파악하고 각 종양에 대해서 레이블을 지정해야 하기 때문
     * 의학 물리사(medical physicist)도 각각의 종양에 대해 정확한 치료 계획을 세워야 하고, 한 명의 환자를 구하는데 많은 시간이 소요
     * 따라서, 의사들은 환자가 5개 이상의 뇌 병변이 있는 경우 항상 정위 방사선 요법보다 전뇌 방사선 요법을 선호
     * 그러나 AI가 의사의 업무량을 분담 가능 함
     * coolwulf는 정위 방사선 요법을 더 많은 뇌종양 환자에게 제공하기 위해 노력중
     * 하지만 이번에는 문제가 훨씬 더 어려워서 더 이상 혼자는 불가능. 그래서 텍사스 대학교 의료 센터와 스탠포드와 협력
     * 많은 사람들의 도움으로 최근에 3가지 AI 모델이 개발 됨
          + 뇌 전이(brain metastases)를 자동으로 개요/라벨링 하는 모델
          + False Positive를 빠르게 줄이기 위한 SVM-radiomics 기반 모델
          + 최적화된 방사선량 맵을 기반으로 하는 모델을 통해서 여러 병변을 다양한 치료과정으로 신속하게 분할
     * 이 세가지 모델은 서로를 보완하고, 의사의 작업 흐름과 일치하므로 정위 방사선 요법을 사용할 때 작업량을 크게 줄일 수 있음

기술 발표

     * ""An AI-based stereotactic Radiosurgery Management Web Platform for Brain Metastases""
     * 이 프로젝트는 2022 AAPM Spring Clinical Meeting 과 2022 AAPM annual meeting 에서 발표되어. 다시 한번 업계에서 넓게 인정 받음
     * coolwulf는 공동 저자들과 함께 정위 방사선 요법 커뮤니티 전체가 이 성과를 인식하고 채택하여 실제로 더 많은 환자를 돕는걸 가속화 하는 중
     * 인터뷰에서 coolwulf는 이 결과를 달성하는데 결코 혼자한게 아니라고 반복해서 언급
     * 조용히 암과 싸운 모두가 같이 영웅이라며 공동 저자들을 기재해 달라고 요청

     Zi Yang, Mingli Chen, Hao Jiang, Zabi Wardak, Strahinja Stojadinovic, Robert Timmerman, Tu Dan, Weiguo Lu, Xuejun Gu
     * 최근 몇 년간 암 사망율은 30년 전에 비해 30% 감소했음.
     * 이 속도로 가면, 아마도 미래의 어느 날엔 암은 더 이상 말기 질환이 아닐 것
     * 하지만 이것은 그냥 직진하면 되는 다리가 아니라, coolwulf처럼 심연에서 자신의 길을 밝히는 사람들이 무수히 많음
     * 기사를 마무리 하기 위해 Reddit에 올라온 한 사용자의 댓글을 인용

     모든 영웅이 망토를 입는 것은 아닙니다.
     “Not all heroes wear capes”

   감동적인 글 번역해주셔서 정말 감사합니다.

   와우.. 정말 대단하네요

   대단하네요.
   감사합니다.

   정말 영웅이라 불려도 아깝지 않은 분이네요. 좋은 글 소개 고맙습니다.

   너무 멋있고 존경스럽네요..
   좋은 글 번역해주셔서 감사합니다!

   좋은 글 감사합니다.

   훌륭한 글 공유와 번역 감사합니다!

   와..

   번역해 주셔서 감사해요. 소중하게 읽었습니다.

   감동적이네요

   머리를 깨우는 글이내요 ...

   역시 저는 게을렀군요.
   조금 더 자극 받고 갑니다.

   예전의 beowulf project가 생각나네요. 좋은 정보 감사

   오.. 이러고 읽기 시작했다가.. 정독하게 됐네요. 멋있다 선구자다 외엔 딱히 떠오르는 단어가 없습니다. 물론 혼자 모든 것을 처리하지 않았다곤 하지만 많은 시행착오 .. 고생들에 박수를 보내고 싶습니다.

   가볍게 읽으려다가 책상에 앉아 정독했습니다. 번역해주신 문장 하나하나가 폐부를 찌르네요. 생각도 많아지고요… 길을 잃은 것 같았던 제 커리어에 작은 전구 하나를 켜준 글입니다. 감사합니다!

   앗 열심히 번역한 보람이 있네요. 화이팅입니다!

   영웅이시네요.
   행동하는 지성.

   정말 멋있네요. 감사합니다!

   Coolwulf 본인이 직접 HN에 뉴스를 올렸네요. https://news.ycombinator.com/item?id=31449147
   댓글에서는 왜 http로 서비스하냐, 정확도는 어떤 기준이냐 등으로 뭐라 하지만.. 전 정말 흥미롭게 읽었습니다.

   글에서 얘기하는 유방암 검사 사이트 입니다. http://mammo.neuralrad.com:5300/upload
   국내에서도 Mammogram(유방촬영술) 검사하고 나서 환자가 사진을 얻을 수 있는지는 잘 모르겠네요.
     * 왜 뇌종양은 뇌암이라 부르지 않을까? https://www.econovill.com/news/articleView.html?idxno=68142
     * 의학 물리란 http://www.ksmp.or.kr/content/information/info.php

   병원에서 촬영하는 대부분의 환자 영상들은 본인이 원하면 받을 수 있습니다. 아마 비용이 들긴하나(병원마다 다르지만 만원 언저리였던 것 같습니다.) 신청하면 CD로 받을 수 있습니다. 이 CD안에 DICOM 영상을 jpg로 변환하면 이용가능할 것 같네요.

   아하 그렇군요. 감사합니다!
"
"https://news.hada.io/topic?id=6638","SQLite3 Fiddle","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             SQLite3 Fiddle

     * 웹에서 테스트 해보는 SQLite
     * 아웃풋/인풋 창으로 구성되어 SQL로 다양한 DB작업 수행
     * 외부 DB 파일 업로드 하여 로딩 가능
     * 작업한 DB 다운로드 지원
     * WASM 으로 컴파일한 3.39.0 베타 버전 사용
"
"https://news.hada.io/topic?id=6692","Web3라는 집단 광기에 여러 사람이 다칠 것이다 (번역)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Web3라는 집단 광기에 여러 사람이 다칠 것이다 (번역)

   Vice의 ""The Pivot to Web3 Is Going to Get People Hurt"" 기사를 요약 번역한 글
     * Web3 한다는 회사가 많아지고 엄청난 투자금을 유치중
     * Web3는 암호화폐, 블록체인, NFT, DAO, 메타버스, DeFi 제품 모두를 포괄하는 장바구니 같은 역할로 사용되기 시작
       → 사람들이 “인터넷의 일부를 소유하는 능력”을 갖게 된다고 하는 이론적인 비전으로 묶이며,
       Web3 추종자들은 이런 시스템이 더 공정하고 더 공동체적인 버전의 웹이 될 거라고 믿거나 혹은 믿는다고 주장
     * 그러나, “벤처캐피털(VC)이 이렇게 몰고 가는 이유는 단 하나. 돈을 벌기 위해서다.”
     * 냉혹한 비평가들은 Web3가 디스토피아적 악몽의 씨앗을 담고 있는 웹의 초자본주의적 재구성(“hyper-capitalistic” reframing)에 가깝다고 우려
     * Web3 광신도(“zealots”)는 의심하는 자들을 무시
     * Web3의 이념을 지지하기 위해서가 아닌 다른 이유로 관심을 갖는 이들도 많음
     * 토큰(token)을 크립토 프로젝트의 거래 가능한 지분(tradable shares)으로 보는 시각도 생겨남
     * a16z는 토큰-중심 구조(token-focused structure)를 가진 Web3 회사는 그렇지 못한 회사에 비하여 사용자, 창작자, 개발자 그리고 투자자들의 이해관계에 일치된다고 주장
     * 기업가들과 벤처 투자자들은 몇 푼 더 유치하겠다고 Web3 요소를 끼워넣는 회사들을 “사기꾼들”(grifters)이라 설명
     * 이제 문제는 이러한 규제가 없는 틈을 타서 차익을 실현하는 잔치(the regulatory-arbitrage party)가 얼마나 오래 지속될 것인가임
     * 힐러리 J. 앨런 교수는 서브프라임 모기지 사태와 같은 역사가 반복되기 전에 Web3 시스템이 규제되어야 한다고 주장

   buzzword가 되면 항상 부작용이 따라붙는 거 같아요.
   특정 단어를 공정하게 보고자 하는 노력도 좋지만
   이런 단어들이 다수의 개념을 뭉뚱그리는 측면이 있는 만큼 개인 차원에서는 각 세부 사실들을 별도로 인식하고 판단하는 게 더 좋을 거 같다는 생각도 드네요.

   계속 말씀드리지만, Web3 에 대해서는 다양한 의견이 있습니다. 양쪽 의견들을 다 들어보시면 좋을 것 같아요.
   Web3에 대한 나의 첫인상
   Web3는 그냥 비싼 P2P입니다

   또한 반대입장에 서있는 (Web3 옹호쪽인) a16z의 보고서도 같이 보세요
   2022년의 크립토씬, 어디까지 왔는가?
"
"https://news.hada.io/topic?id=6765","Awesome Data Leadership","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Awesome Data Leadership

   데이터팀을 채용하고, 조직을 구성하고, 문화를 만드는 것, 전략과 조직내에서 운용하는 방법에 관한 글들 모음
     * Hiring
     * Culture
     * Impact
     * Strategy
     * Project Management
     * Code Review
     * Organization Structure and Job Titles
     * ML and AI Within an Organization
     * BI and Analytics Within an Organization
     * Management Skills
"
"https://news.hada.io/topic?id=6689","Apple, M2칩 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Apple, M2칩 공개

     * M2 : 2세대 5나노, 8코어 CPU, 10코어 GPU, 200억개 트랜지스터
          + M1 대비 18% 속도 향상된 CPU, 35% 강력한 GPU, 40% 향상된 NPU
            50% 확장된 메모리 대역폭, 최대 24GB 고속 통합 메모리
     * 성능을 높이면서도 전력 사용량 최소화
     * 미디어 엔진 : 8K H.264 및 HEVC 지원
     * ProRes 동영상 엔진 : 다수의 4K 및 8K 동영상 재생 가능

   M1의 충격이 넘 컸고, M1 Pro/Max 때문에 성능 차이가 커보이지는 않는군요. M2 Pro/Max 가 나와야..
"
"https://news.hada.io/topic?id=6691","Apple, macOS Ventura 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Apple, macOS Ventura 공개

     * 스테이지 매니저 : 여러 창이 열렸을 때도 매끄럽게 이동하며 작업
       → 중앙에 메인 창을 두고, 왼쪽에 다른 윈도우들을 정렬. 그룹화 가능
     * 연속성 : 맥에서 아이폰을 웹캠으로 이용 가능. 자동으로 무선 연결
       → 센터 스테이지, 인물 사진 모드, 스튜디오 조명등을 그대로 활용
       → 울트라 와이드 카메라를 이용해 책상 보여주기도 가능
     * Safari : 다른 사용자와 함께 탐색하는 공유 탭 그룹, 책갈피 목록, 메시지 및 FaceTime. 패스키
     * Mail : 빠르고 똑똑한 검색. 이메일 예약. 전송 취소. 첨부파일 & 참조 수신자 누락 감지. 회신 못받을 시 후속 조치 자동 제안
     * Message : 보낸 메시지를 편집 & 전송 취소 가능. 읽지 않음 상태로 표시 가능. SharePlay 지원
     * Spotlight : 사진 보관함 및 시스템, 온라인에서 이미지 찾기 지원. 아티스트/영화/배우/TV프로그램/비즈니스/스포츠 관련 검색 결과 제공
     * iCloud : 공유 사진 보관함 기능으로 가족 사진 공유

   아이폰을 웹캠으로 사용하는게 정말 좋을 것 같네요. 줌 미팅에도 아이폰이 필수가 될 듯

   패스키 관련 링크들
     * Apple, Google 및 Microsoft와 함께 FIDO 표준 지원 확대 가속화
     * 패스워드 없는 미래가 오고 있다
"
"https://news.hada.io/topic?id=6706","Meet Web Push","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Meet Web Push

     * Web Push는 W3C 표준인 Push API, Notifications API, Service Workers 를 같이 이용함으로써 구현됨
     * macOS Ventura 의 Safari 16에서 Web Push 지원
       → 표준에 따라 개발하면, 애플 개발자 프로그램 가입할 필요 없음
     * 2023년엔 iOS/iPadOS 에서 Web Push 지원 예정
     * 애플 웹킷은 webpushd 라는 데몬이 추가되어 웹페이지의 푸시 구독 요청을 APNS로 전환시켜주는 역할을 함
"
"https://news.hada.io/topic?id=6740","페이스북은 어떻게 배포하는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            페이스북은 어떻게 배포하는가

     * 조직구조: Engineering과 Ops팀이 50% 이상을 차지하고, 1명의 제품관리자가 대략 7-10명 정도의 엔지니어를 맡는다
     * 입사: 4-6주짜리 부트캠프를 거친 후에는, 실제 DB에 접속할 수 있는 권한을 받게 됨
     * 권한과 책임: 모든 엔지니어는 코드의 모든 부분을 수정할 수 있고, 스펙과 우선순위 변경 또한 자유롭다
     * 일하는 방식: 엔지니어가 진행상황을 공유하고, 참여할 프로젝트를 선택한다. 대부분 풀스택으로 개발한다.
     * 코드리뷰: 개발자들은 백엔드와 인프라 관련 문제에 공을 많이 들이고 싶어함. 모든 변경은 최소한 한 명에 의해서라도 리뷰됨.
     * QA, Unit Test: QA가 없지만, QA 업무는 있다. 엔지니어가 테스트하고, 버그를 고친다. 배포 전에 반드시 거쳐야만 하는 자동화된 테스트 과정이 있다.
     * 제품관리자: 제품관리자는 독립적이고 자유롭다. 로드맵을 만들 때 허락을 얻거나 리뷰를 받을 필요는 없다
     * DevOps, 배포: 모든 커밋은 주 단위로 배포된다. 코드를 단계적으로 배포하는 릴리즈 프로세스가 있다.
     * Ops 팀: Ops팀은 비즈니스에 대해 매우 잘 알고, 에러 로그, 부하 분산, 메모리 사용률을 같이 관리한다.
     * 성과, 평판: 성과 중심적인 문화이고, 다 알아서 해야 한다. 생산적이지 않거나 천재가 아닌 사람들은 눈에 잘 띈다.

   ""천재가 아닌 사람들은 눈에 잘 띈다.""

   후덜덜...
   뒤집어 말하면 ""생산적이고 천재인 사람들은 눈에 안 뛴다""

   '이곳은 천재들만 모인곳이다', 하는 느낌이라서 그시절의 페이스북은 참 대단했구나 싶어요.

   2011년 1월에 쓰여진 글임을 감안하고 읽으니 더 인상 깊게 느껴지네요

   (원문 기준)
"
"https://news.hada.io/topic?id=6711","Albert - 리눅스용 오픈소스 키보드 런처","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Albert - 리눅스용 오픈소스 키보드 런처

     * 앱 실행, 파일 및 경로 열기, 브라우저의 북마크 열기, 웹 검색, 계산하기 등 지원
     * macOS Alfred와 비슷한 런처
     * Native(C++ & QT) / Python 으로 확장 추가 가능
     * C++ 과 Qt 로 개발

   아.. mac 용으로 raycast : https://www.raycast.com/ 잘 사용중인데... 리눅스용이 없네요.. ㅎㅎㅎㅎ

   그외 Linux 용 런처들

   Synapse - https://launchpad.net/synapse-project
   fbrun - https://linux.die.net/man/1/fbrun
   rofi - https://github.com/davatorium/rofi
   gmrun - https://github.com/WdesktopX/gmrun
   krunner - https://userbase.kde.org/Plasma/Krunner
   Kupfer - https://kupferlauncher.github.io
   ulauncher - https://ulauncher.io/
   fuzzel - https://codeberg.org/dnkl/fuzzel
"
"https://news.hada.io/topic?id=6739","1조 회사들은 MVP를 어떻게 개발하고, 첫 1000명의 사용자를 모았을까","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               1조 회사들은 MVP를 어떻게 개발하고, 첫 1000명의 사용자를 모았을까

     * 충분히 큰 문제를 해결하기 : Airbnb, Dropbox, WhatsApp
          + 경쟁자들의 문제를 해결하기 : Zoom, Wordpress
     * 고객들에게 듣고 피봇하기 : Twitter, Groupon, Pinterest, Slack, DoorDash, Instagram, Twitch
     * 오래된 컨셉을 새로운 방법으로 제시하기 : Zappos, Uber, Netflix, Paypal, Reddit
          + 오래된 컨셉을 단순화 : Canva, Spotify, Tinder
          + 현재에 도전 : Snapchat
     * 이미 존재하는 틈새시장을 위한 플랫폼 만들기 : OnlyFans, AppSumo, Linkedin, Upwork, Udemy
          + 더 틈새를 파고들기 : Medium, Etsy, Fiverr
     * 새로운 급성장 시장에 들어가기 : Amazon, Google, Coinbase

   회사 제목들만 옮겼는데 원문은 MVP 설명이 들어있어서 꽤 깁니다.
   관심있는 회사들은 가서 보시기 바래요.
"
"https://news.hada.io/topic?id=6671","터키 국호 '튀르키예'로 변경…영어 터키는 '칠면조·겁쟁이' 뜻","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  터키 국호 '튀르키예'로 변경…영어 터키는 '칠면조·겁쟁이' 뜻

   긱뉴스 에서 https://news.hada.io/search?q=터키 검색해보니 여러개의 글이 나오네요.
   알아두자는 의미에서 올려봅니다. ㅎ

   예전 글들 찾아서 수정하려다 보니 터키어 i 라는 글이 있는데..
   이거는 이제 튀르키예어 가 되는 걸까요.. ?
"
"https://news.hada.io/topic?id=6726","Deepkit - 고성능 TypeScript 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Deepkit - 고성능 TypeScript 프레임워크

     * Runtime Types
     * ORM : MySQL, PostgreSQL, SQLite, MongoDB
     * Dependency Injection
     * Validation, Serialization, Reflection, HTTP Router ..
     * Debugger & Profiler
     * Template Engine
"
"https://news.hada.io/topic?id=6688","SaaS를 오픈소스로 만들어서 MRR 증가시키기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       SaaS를 오픈소스로 만들어서 MRR 증가시키기

     * 대화형 앱 빌더인 Typebot이 오픈소스로 변경하고 나서 MRR(월 반복 매출)이 늘어난 경험을 공유
     * 1년 동안 Typebot을 만들어왔지만 MRR은 $300정도에서 느리게 늘어남
     * 2.0을 개발하면서 오픈소스로 공개하고 나서 MRR이 $830으로 증가
          + 사용자들에게 자유를 주기 위해서 더 개방형 기술을 선택 (Supabase 대신 Prisma + Postgres)

오픈소스에 대한 오해들

     * 프로젝트를 훔쳐가지 않을까?
       → 라이센스로 막을수 있고(AGPLv3), 누군가 별도 상용버전을 만드는 것도 자신의 프로젝트 홍보가 될 수 있음
     * 오픈소스로 하면 누구나 셀프호스트 하고, 구독은 안하지 않을까?
       → 직접 운영하는건 그 나름의 고통이 있음. 공식 클라우드 서비스가 있으면 안심
       → 그리고 잠재적 기여자들로부터 혜틱을 받을수 있음
     * 경쟁자들이 기능을 훔쳐가지 않을까?
       → 실제로 이런 일은 거의 일어나지 않음. 코드가 보인다고 기능을 빼서 다른 프로젝트에 넣는게 쉽지 않기 때문
       → 대부분 실제 메인테이너들이나 코드가 어떻게 구성되고 실행되는지 알 수 있음

왜 오픈소스를 고려해야 할까

     * 마케팅 메시지에 오픈소스를 넣는 것 만으로 고객에게 신뢰를 줄 수 있음
       → 이론적으로는 당신이 아무것도 팔려고 하지 않고, 그냥 제품을 보여주는 것처럼 보임
       → 마케팅 메시지로 ""X의 오픈소스 대체제"" 라는 경쟁자 대응 문구도 사용 가능. 사람들은 다윗 vs 골리앗 에서 좋은 의도를 가진 다윗을 도와주는 것을 좋아함
     * 누구나 당신의 프로젝트에 기여하고 버그 픽스와 기능을 도와줄 수 있음
       → 개인 창업가들에게는 큰 이점임
       → 개발자들 대상의 프로젝트가 아니더라도, 틈새 시장에 있는 다른 개발자들이 도와주려고 할 것
"
"https://news.hada.io/topic?id=6690","Apple, M2칩을 장착한 맥북에어와 맥북프로13 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Apple, M2칩을 장착한 맥북에어와 맥북프로13 공개

M2 MacBook Air

     * 34.5cm(13.6') 노치형 디스플레이. 1080p FaceTime, 4스피커, 3 마이크 어레이, 최대 18시간 배터리, MagSafe
     * 1.13cm 두께, 1.24kg. 평평한 형태의 알루미늄 유니바디. 팬리스
     * 2개의 썬더볼트 및 3.5mm 오디오. 터치ID
     * 네가지 색상 : 실버, 스페이스 그레이, 미드나이트, 스타라이트
     * 2개의 USB-C 포트 내장 35W 전원 어댑터
     * 급속충전 지원으로 67W 어댑터 사용시 30분만에 50% 까지 충전 가능

M2 MacBook Pro 13

     * 8코어 CPU, 10코어 GPU, 최대 24GB 메모리, ~2TB SSD
     * 기존과 동일한 디자인. 터치바 내장
     * 최대 20시간 배터리

   시작 가격 10만원 차이.
   근데..Air에는 magsafe 충전 단자가 있는데..
   pro에는 그냥 usb-c 단자만 2개 있네요...;;

   프로가 왜 더 비싼거죠? ㅋㅋㅋ

   터치바 재고가 많이 남았나 봐요.. 심지어 프로는 페이스타임도 기존 720P 입니다.

   헐.. 이건 좀 심하네요 ㅋ

   Apple, M2칩 공개
"
"https://news.hada.io/topic?id=6725","Meta가 캐시 무효화를 쓰면서 캐시 일관성을 유지하는 방법 (번역)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Meta가 캐시 무효화를 쓰면서 캐시 일관성을 유지하는 방법 (번역)

   Cache Inconsistency
     * cache server가 db에서 x에 대한 요청을 보내고 db가 x=42를 응답이 cache에 도착하기 전에
          + 외부에서 x=43 으로 업데이트하고, invalidation을 통해 x=43을 cache에게 전달함
          + cache는 x=43을 받아서 반영함
          + x=42 응답이 뒤늦게 도착하여 반영됨
     * 위의 문제는 data에 version을 붙여서 해결 가능
     * 하지만 version을 붙이더라도 x=43에 대한 eviction이 일어나면 x=42가 반영될 수 있음

   Polaris: Cache Inconsistency 측정 서비스
     * 동작과정
          + Polaris도 invalidation event를 받음
          + event를 받으면 모든 cache server를 찔러서 이전 version을 가지고 있는지 확인함
          + cache가 이전 version을 가지고있으면 inconsistency로 판단하고 재시도 할 수 있도록 requeue
               o cache server에게 invalidation event가 늦게 도착할 수 있기 때문
          + 특정 시간 (1분,3분,5분 등)이 지나면 inconsistency 알람을 보냄
     * metric
          + 최근 M분동안 N nines에 해당하는 cache write이 consistent한지 metric을 보여줌
          + 5분동안 10 nines라면, 최근 5분동안 100억개중 1개의 cache write이 inconsistency하다고 알 수 있음

   Cache Inconsistency를 디버그를 위한 로깅 라이브러리
     * 모든 cache write을 로깅하는건 불가능함
          + 애초에 cache가 read-heavy workload인데 ""로깅""으로 인해 write-heavy workload가 되기 때문
     * 따라서 invalidation이 일어난 직후의 time window에 대해 로깅을 할 수 있도록 라이브러리를 만듦
     * invalidation에 관여하는 모든 서비스에 라이브러리를 심어둠
     * 로깅을 통해 inconsistency가 발생했을때, 발생하기까지의 과정을 timeline으로 알아낼 수 있음
"
"https://news.hada.io/topic?id=6762","Grafana, OnCall 오픈소스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Grafana, OnCall 오픈소스 공개

     * 작년 11월에 공개한 OnCall SaaS의 오픈소스
     * DevOps 와 SRE 팀이 효율적으로 협업할 수 있도록, 온콜 로테이션을 셋업하고 관리해주는 도구
     * 여러 모니터링 시스템에서 알림을 수집하고 분석
     * 전화, SMS, 슬랙, 텔레그램 알림 가능
     * Python 오픈소스, GNU AGPL 3.0

   Grafana OnCall 공개 - 쉬운 온콜 관리 도구

   긱뉴스 위클리 #153에서 말씀드렸듯이, SaaS를 오픈소스화 하는 것은 분명 장점이 많습니다.
     * SaaS를 오픈소스로 만들어서 MRR 증가시키기
"
"https://news.hada.io/topic?id=6715","History API는 죽었습니다. Navigation API여 영원하라","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                History API는 죽었습니다. Navigation API여 영원하라

     * SPA에서 많이 사용하는 History API는 SPA가 많이 사용되기 전에 개발되어서 잘 어울리지 않음
     * 이를 개선한 Navigation API는 현재 Draft 상태이지만, 크롬 102 버전부터 미리 적용
     * 글로벌 navigation 객체에 navigate 리스너를 붙여서 동작
          + 사용자 또는 프로그램적으로 네비게이션(클릭, 서브밋, 백/포워드)할 때 무조건 호출되어 중앙집중식 처리 가능
     * transitionWhile() 또는 preventDefault()로 인터셉트 가능

   이전에 App History API 로 알려져 있던 제안입니다.
   훨씬 오래걸릴 줄 알았는데 빠르게 들어오네요.

   Navigation API https://developer.chrome.com/docs/web-platform/navigation-api/
"
"https://news.hada.io/topic?id=6735","TBD, Web5 발표eb5 발표

     (WEB2)(WEB3) → (WEB5)

     * TBD는 트위터 창업자 Jack Dorsey의 Block(스퀘어)의 비트코인 중심 자회사
     * Web5 : 자신의 데이터와 아이덴티티를 제어 가능하게 해주는 더 탈 중앙화된 웹 플랫폼
     * Decentralized Web Platform (DWP) 은
       개발자들이 Decentralized Identifiers (DIDs) 와
       Decentralized Web Nodes (DWNs) 를 이용해서
       Decentralized Web Apps (DWAs) 을 개발 가능하게 해줌
     * DWA는 PWA와 비슷하지만, 중앙집중식 저장소가 아닌 DWN에 데이터를 저장 가능

   Web5만 보고 풍자인가 했는데, 의외로 진짜였군요. 숫자놀음 하는거는 변함이 없지만요.

   Web 2랑 Web 3가 발표되었다고, 그 두개를 더하다니.......

   처음에 제목만 보고 유머 글인가 해서 뉴스로 올릴까 말까 고민했어요..
   근데 (WEB2)(WEB3) = (WEB6) 아닌가요.. ?

   6차산업 명명법에 따르면 애매하긴 하네요. 1 x 2 x 3 = 6으로 했던데, 2 x 3은 뭐라고 해야 맞으려나..🤔

   https://www.xn--6-ql4f73k2zh.com:448/home/sub.cs?m=7

   아.. 놀라운 웹사이트를 하나 알아갑니다. https://www.6차산업.com:448/ 이라니..

   아니..이건 무슨 혼파망...

   아.. 피보나치 수열.. 1,1,2,3,5,8 이니.. 전 WEB8 을 기다리겠습니다.

   web1은 넘버링이 후대에 붙은거니 없다고 치면 소수 배열일 수도 있으니 전 web7을 기다리겠습니다?
"
"https://news.hada.io/topic?id=6754","Lorien - 무한 칠판/노트 작성 도구 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Lorien - 무한 칠판/노트 작성 도구 오픈소스

     * 디지털 노트북 및 브레인스토밍 도구로 개발
     * 브러시 스트로크를 컬렉션으로 저장해서 런타임 렌더링
     * Godot 게임 엔진으로 작성됨
     * 무한 캔버스, 무한 Undo/Redo 지원, 거의 무한대의 Zoom 가능
     * 엄청 작게 설계된 Savefile
     * SVG Export
     * Wacom 등의 압력 감지 태블릿 지원
     * 윈/맥/리눅스

   다운받고 사용해 보렵니다. 기대가 됩니다.

   godot 엔진으로 개발됐다니... 고도엔진이 4.0 으로 버전업 작업하면서 일반적인 gui 개발 용도도 염두에 두고 있다는 얘길 들었는데, 흥미롭네요.
"
"https://news.hada.io/topic?id=6662","System Font Stack","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           System Font Stack

     * 웹 폰트 대신 시스템에 이미 있는 좋은 글꼴들을 사용 하자는 것
       → 예전엔 웹 폰트가 좋았지만, 애플/구글/마이크로소프트가 좋은 글꼴들을 구매해서 OS에 내장했기 때문
     * 빠르고, 스타일이 다양하고, 더 네이티브 하게 보임

폰트별 설정

     * Sans-serif : font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica, Cantarell, Ubuntu, roboto, noto, arial, sans-serif;
     * Serif : font-family: Iowan Old Style, Apple Garamond, Baskerville, Times New Roman, Droid Serif, Times, Source Serif Pro, serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
     * Mono : font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;

   “Noto Sans CJK KR”도 좋지만, 개인적으로는 “KoPub 돋움”이 좋더군요.
   터미널 전용 고정폭은 D2Coding ligature nerd patched 정도밖에 대안이 없고요.
   맥에선 레티나 되면, 뭔 폰트건 다 깔끔하게 나오니 걱정할 게 없지만요.

   디자인 뿐만 아니라 OS별로 글꼴 렌더링하는 방식에 차이도있어서 디자인에서도 크든 작든 차이가 발생할것 같은데...그부분을 제외하더라도 웹사이트를 네이티브하게 보여줄 필요가 있나 싶네요..

   이에 대해서는 다양한 찬반 논란이 있긴 합니다.
   https://news.ycombinator.com/item?id=31543054

   게다가 영어에나 해당하는 거지, 한글 글꼴은 사실 윈도우 기본 폰트가 별로라..
"https://news.hada.io/topic?id=6758","Ask GN: 이맥스 20년 쓰다가 Vimmer로 전향했습니다. ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Ask GN: 이맥스 20년 쓰다가 Vimmer로 전향했습니다.

   이유는 간단합니다.
     * 한국에서 ""동지""들이 전부 음지에서 활동하고 있어서 만나기가 너무 힘들다.
     * ELisp은 정말이지 친해지지 않는다.
     * 나에게 이맥스를 전파한 학부 교수님이 최근에 vscode 쓰신다더라..
     * gccemacs가 한줄기 빛이었는데, 리눅스 말고는 딱히 빨라지지도 않더라
     * neovim이 lua를 임베딩하면서 XX같은 vimscript 안써도 된다.
     * lua가 생각보다 좋은 개발 언어이다.

   vimmer로 전향하고 나서 가장 아쉬운것.
     * neovim에 emacs의 magit + forge 조합을 대체할 만한 플러그인이 없음.
     * neovim은 emacs의 tramp 같은게 없음.

   neovim으로 전향하고 나서 좋다고 느끼는 것들
     * emacs보다 더 적은 메모리
     * 더 빠른 bootup 시간
     * 더 많은 커뮤니티, 더 많은 자료들

   vim 쓰시는 분들중에 아쉬운것들 한번 이야기 해봐요~~

   doomemacs 를 쓰시면 모든 문제가 해결됩니다.

   neovim 플러그인 만드는게 취미입니다. neovim 좋아요!

   최근 손목이 조금 아파와서 마우스 사용을 줄이고자 vscode 에서 neovim 으로 넘어갔습니다.
   vim 은 가끔 설정파일 수정할때 한번씩 쓰는정도였어서 아예 새로 배우기 시작했네요..ㅋㅋ
   하나씩 단축키 조합 알아가는 재미가 쏠쏠합니다.
   저는 하나씩 설정할 자신도 없고,, 업무가 바빠 그럴 여유도 없어서
   lunarvim 이라는 ide layer 로 시작했는데, 결국 필요한 것 하나하나 작성하게 되긴 하네요 암튼 지금까지는 꽤나 만족중입니다. 여기계신분들 전부 반갑네요 ㅋㅋ

   vim 사용자인데 아직 neovim을 써야한다! 생각이 없네요 혹시 특별한 장점이 있을까요?
   neovim을 사용하면 vim script 또는 lua로 플러그인 개발, config 설정이 가능한건가요?

   일단 루아가 된다는거랑 계속 유지보수가 잘되고 있다는점 훨씬더 최적화가 잘 진행되고 있다는점 등의 장점이 많아요

   저는 반대로, 10년동안 쓰던 Vim 버리고 이맥스 쓰러 갑니다. - 연오

   이맥스를 써보니
   빔과 달리 네비게이션/입력 모달이 없어서 불편한 점도 많은데,
   모달 전환과 한영 전환을 함게 해야하는 문제가 없는 건 편하네요.

   Emacs에도 evil이라고 vim 키바인딩 플러그인이 있어요

   가끔 emacs로 갈까 하는 생각이 들 때가 있긴 있는데 역시 vim만한 게 없는 것 같습니다.

   제가 몇 안되는 한국인 사용자이긴 한데 ㅎㅎ
   한국에서 쓰는 사람 찾기가 정말 어렵습니다.

   예전에 vim 과 neovim 의 main 함수구현을 한번 보고나니...(..)

   vim : https://github.com/vim/vim/blob/master/src/main.c#L85-L434
   neovim : https://github.com/neovim/neovim/blob/master/src/nvim/main.c#L206-L577

   바로 neovim 으로 건너갔습니다.

   덤으로 copilot도 같이 쓸 수 있습니다.
   https://github.com/github/copilot.vim

   들어보면 magit만한 것은 vim 뿐만 아니라 개발용 에디터 통틀어서 별로 없는 것 같기는 하더라구요.
   요새는 그냥 gitui 쓰고 있습니다.

   forge랑 같이 쓰면.. 정말이지 이맛에 이맥스 쓴다는게 뭔지 알것 같죠..
   그리고 복잡한 브랜치와 커밋 이력 수정과 리베이와 머지 충돌 해결에서 git operation에서의 두려움이 싸악 사라지는 보너스..

   저는 lazygit 써요.. tui 좋아하시면 한번 보세용

   vim을 쓰다보면 이것저것 플러그인을 붙여서 쓰는데, 오랫동안 써오다보니 vim에 익숙해져서 딱히 아쉬운 것은 없는 것 같아요. 아쉽다면 vscode에 연동해서 사용하니 ..

   오 XX같은 vimscript 안써도 되나보군요! 이제 vim 좀 써볼까...

   저도 vim < 8.0? 사용하다가, neovim 사용하고 있습니다.
   coc.nvim 쓰다보니 neovim으로 갈아탔는데, coc.nvim 쓰면서 개발 환경 구축하는 스트레스가 매우 줄었어요.

   아쉬운 점은 결국 설치한 플러그인이 많아지면서 발생하는 거 같아요.
     * esc로 insert mode를 벗어날 때 점점 느려지는데 프로파일링해도 모르겠다는 것
     * .csv 등 대용량 파일 열었을 떄 vscode가 차라리 더 빠르다는 것..

   아쉬운점이 생겨서 그런지 점점 emacs에도 관심이 가더라구요.

   neovim 이 lsp를 native 지원합니다. vim-lsp 패키지 사용해보세요.. 새로운 세상이에요..

   늦게나마 답변답니다. vim-lsp 정말 잘 쓰고 있어요 :D
   Server 설정 관리는 coc.nvim이 더 좋았지만 ㅎㅎㅎ

   저는 순정 vim 8.2를 사용하는데, vim + tmux를 사용하는데 (1) 한/영 전환 자주 해야 할 때 (2) Java 프로그래밍할 때는 어쩔 수 없는 한계를 느낍니다ㅜ

   Lsp를 써도 그런가요 ??

   네 제가 vim + Java의 끝판왕까지 경험을 못해봐서 그런 것일 수도 있는데,
   팀원들이 IntelliJ IDEA를 추천해주어서 같이 써보니 함수 추출, 리팩토링, 폴더 구조 생성 같이 vim에 lsp를 추가하더라도 쉽게 못하는 것들을 IDE가 다 해주니까, vim이 한계를 갖고 있는 게 아닌가 싶더라구요ㅎㅎ

   fzf + fzf.vim 추천드려요
   개꿀입니다

   저는 telescope ㅎㅎ

   리눅스 환경에서 개발할때 vi 를 쓰고 있습니다. -_-
   아니면... Windows에서 편집하고 원격으로 ftp로 파일을 올려서 개발을 하기는 합니다.

   이런 환경이면 emacs의 tramp가 정말 훌륭한데요.. 마치 이순신장군의 말 처럼

   ""너가 지금 보고 있는 파일이 원격인지 로컬인지 주인님이 모르게 하라...""

   ssh나 ftp와 잘 연동되구요.. 파일을 열때만 주소를 적어주면 알아서 업로드를 하고 ssh로 주소가 지정되면 해당 파일에서 터미널을 열면 알아서 ssh 터미널이 열리죠..
   버퍼간의 복사 붙여넣기도 로컬과 리모트 구분하지 않고 당연히 서로 잘 되고,

   그에 반해 vim은...

   하지만 요즘은 서버에 직접 코드를 업로드 하지는 않고 거의 다 CI/CD를 통해서 배포를 하니까.. 딱히 필요가 없는 기능이 되었긴 하지만요..

   TRAMP 도 VSCode 리모트 때문에 매리트가 떨어졌죠...ㅠ

   저는 최근 클로져 개발 떄문에 스페이스맥스로 이맥스를 시작했습니다. VI와 별다른게 없어서 놀랐습니다. '음지'라는 표현을 쓰셔서 궁금한게 있습니다. 생각보다 관련 한글 자료가 많이 없더라구요. (옛날 자료 조금 있고) 관련 정보를 얻으려면 어디 커뮤니티로 가야할까요?

   저는 주로 디스코드나 gitter 채널등에서 정보 교환을 했어요.
   그리고 의외로 깃허브에 본인 설정 파일 자랑하려고 올려놓을 사람들이 많아서 깃허브에서 검색도 쏠쏠합니다.

   다만 한글 사용자는 정말 만나기가 쉽지 않더라구요..

   tmux + vim + ycm으로 작업하는 사람입니다.
   다 만족하는데 기본 파일 탐색 기능이 만족스럽지 않아서 좋은 플러그인이 있나요?

   ycm 타이핑할때마다 API 호출하는거같던데 쓸만한가요?

   telescope나 fzf계열의 플러그인이면 왠만한 파일 관련 오퍼레이션은 다 할 수 있구요
   저는
 거기에 더해서 FloatTerm이랑 ranger를 같이 써서 파일 탐색기 기능도 넣어 두었어요.

   반대로 한글이야말로 웹폰트가 무거워서 OS 내장 폰트가 좀 이뻤으면 웹폰트 안 쓰고 싶은 부분이긴 합니다..
   저는 Sublime 에서 VSCode 로 넘어온 경우라..

   이맥스는 20여년전에 딱 6개월 쓰고는 손도 안대봤고..
   저도 애플고딕 수준의 한글 폰트가 윈도우에도 기본 내장 되어 있으면 좋겠어요. ㅎㅎ

   VI 계열은 터미널에서 잠깐 임시로 쓸 경우 아니면 안써서, 아직도 쓰시는 분들이 신기 하긴 합니다.
   Noto Sans/Serif가 모든 주요 OS에 기본으로 들어가 있기만 해도 훨씬 나을 것 같습니다.

"
   말씀 하신 Vimmer 는 어떤 버전일까요? 찾아보니 뭔가 복잡하네요.

   vimmer는 vim을 사용하는 사람이라는 표현이에요.. ^_^

   저는 vim은 아니고 neovim을 쓰구요.. init.lua 의 Big Fan 입니다.

   아하 그렇군요. 저는 Vimmer 로 검색하니 도구가 몇개 나오길래 그 얘긴가 했습니다!
"
"https://news.hada.io/topic?id=6672","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   이번 주에 서울국제도서전 개막해서 가고 싶네요! 코시국 이후로 6월에 행사를 여는 건 2년만이라 감개무량합니다! 출판업도 기술과 떼려야 뗄 수 없는 관계라서 도서전 다녀오면 기술에 대해서도 통찰을 얻게 됩니다.

   오 후기가 궁금하네요!

   특별한게 없는 주말일 것 같아서 잠도 좀 많이 자고..
   게임패스에 뱀파이어 서바이버가 추가되어서, 남들보다 한참 늦었지만 조금 달려볼까 합니다.
   ""유연한 소프트웨어를 만드는 설계 원칙"" 책도 읽기 시작하려고요.
"
"https://news.hada.io/topic?id=6637","왜 strapi 사용을 포기했는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          왜 strapi 사용을 포기했는가?

   제가 headless CMS로 strapi 사용을 검토하고,
   실제로 도입까지 갔었는데 왜 strapi를 더이상 사용하지 않기로 하였는가에 대해 작성했습니다.
     * 문서의 부재
     * 원인을 알 수 없는 과금
     * 아주 매력적이지는 않은 CMS

   를 주된 원인으로 생각했고,
   대체재로는 firebaes를 사용하기로 하였습니다.

   heroku에 배포해서 잠깐 사용했었는데 작은 프로젝트에서 유용할 것 같습니다.

   다른것보다 글 중간에 오늘의 집에 백엔드 엔지니어가 없다니..! 놀라고 갑니다

   백엔드 엔지니어 있습니다 ^^;;;

   아 여기는 오늘의집이 아니라 ^^;

   아 이직하셨군요. 몰랐습니다 ㅎㅎ;

   strapi를 저도 써봤지만, 대안이 필요하네 라는 생각이 많이 드는 도구이기도 한 것 같습니다.
"
"https://news.hada.io/topic?id=6745","도요타, 가정용 8.7kWh 배터리 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         도요타, 가정용 8.7kWh 배터리 공개

     * 8.7 kWh 용량으로 5.5 kW 출력 가능
     * 1142mm x 341mm x 432mm, 142kg으로 집 외부에 설치
     * -20도 ~ 45도 환경에서 사용가능
     * 하이브리드 파워 컨디셔너와 DC-to-DC 어댑터, 1.1kWh 출력가능한 차량용 어댑터 제공

   Tesla Powerwall+가 비슷한 크기와 무게로 13.5 kWh 입니다.
   https://www.tesla.com/powerwall

   Tesla Solar Roof 통해서 태양광 충전도 기본으로 가능하고요.
   https://www.tesla.com/solarroof

   만들어 보는 것도 이해는 갑니다만.. 도요타는 요즘 시대에는 뭔가 많이 뒤쳐지는 느낌이 드네요.

   미국에서 실제 정전이 한국에 비해 굉장히 잦고 많아서 저 수요가 사실 많이 있습니다.
   집집마다, 발전기 보유도 많고, 저런 파워월 배터리가 또 전기료가 싼 밤시간에 충전해서 일부 낮 시간 사용도 하고 그런거 같더라고요.

   저도 정전 몇번에(전기 다시 들어오는데 상당히 오랜 시간이 걸렸던) 가정용 발전기와 파워월 한참 알아봤었거든요.

   근데 가격이 ㅠ

   도요타도 VPP쪽을 보고 있는 듯해서...
   저런 ESS장치는 그쪽 사업 진출용 아닐까 싶네요.
"
"https://news.hada.io/topic?id=6647","Xournal++ - 오픈소스 손글씨 노트 작성 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Xournal++ - 오픈소스 손글씨 노트 작성 도구

     * 필압감지 스타일러스 및 드로잉 태블릿 지원 : Wacom, Huion, XP-Pen..
     * 맥/윈도우/리눅스 크로스플랫폼
     * 레이어 기능으로 복잡한 노트도 보기 쉽게
     * 오디오 녹음, LaTeX, 이미지 및 다양한 쉐이프 지원
     * PDF 주석 달기 가능
     * Lua 언어 기반 플러그인 시스템
     * C++ + GTK3 오픈소스

   재택용으로 구입한 gaomon 타블릿(3마넌)에 써봤더니 잘 되네요.
     * 노트 기능이 있어서 좋았음.

   lenovo 태블릿에 한번 써봐야겠네요.
"
"https://news.hada.io/topic?id=6761","Show GN: WRP - 웹뷰와 모바일 네이티브 통신을 위한 Protobuf 서비스 프로토콜","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Show GN: WRP - 웹뷰와 모바일 네이티브 통신을 위한 Protobuf 서비스 프로토콜

   뤼이드에서는 모바일 앱을 주력으로 하는 다른 많은 스타트업들이 그렇듯이, 각 모바일 플랫폼에 공통적으로 제공되는 화면을 웹으로 개발해서 웹뷰 형태로 탑재하는 방식을 사용합니다.

   별개로 빠른 웹뷰 개발 이터레이션을 위해서, 웹뷰 대신 iframe을 사용해서 모바일 네이티브를 흉내내는 방식으로 가상 모바일 웹페이지를 만들어서 웹 화면 개발에 사용하고 있기도 하고요.

   웹페이지로 만들어진 화면은 네이티브 보다 라이프타임도 짧고 제한된 api 권한을 가지고 있기 때문에 필연적으로 웹뷰를 탑재한 껍데기(네이티브, parent window)와 통신하는 코드를 작성할 필요가 생깁니다.

   그런데 각 껍데기 쪽에서 웹뷰와 통신하는 인터페이스가 불편한 제약(양방향 통신이 안된다던가 임의의 js 코드조각을 실행하는 방식만 지원한다던가)을 갖고있는데다가, 각 껍데기마다 인터페이스가 크게 다르기 때문에 통신 코드 작성이 피곤한 문제가 발생합니다.

   저희는 원래 웹/모바일 클라이언트가 api 서버와 통신할 때 protobuf와 grpc 기술을 사용하고 있는데요, protobuf는 서비스 인터페이스를 기술하는데 사용하는 스키마 언어이고, grpc는 protobuf로 정의된 추상적인 요청을 실제 http 요청으로 만들어주는 프로토콜 레이어입니다.

   이미 백엔드와의 통신에 protobuf를 사용하고 있어서 엔지니어들이 익숙하기 때문에, 워크플로를 통일하기 위해서 기존 웹뷰 통신 방식의 문제를 해결하는 데에 protobuf를 사용하기로 오래전에 결정했습니다.

   이후 다년간 여러 모바일 앱을 개발하면서 이미 껍데기 <-> 웹뷰 통신에 protobuf 코드젠 개발방식을 사용해왔고, 최근에 새로운 앱을 만들면서 이 기술을 개선 및 오픈소스화 하기로 결정했습니다.
   wrp는 이런 배경속에서 탄생한, grpc와 비슷한 역할을 하지만 웹뷰 전용인 프로토콜 레이어입니다.

   wrp는 typescript & react / kotlin & compose / swift & tca 지원, 스트림, 양방향 통신, 웹페이지가 다시 로드되는 경우에 통신 맥락을 복원하는 기능 등을 지원하고, 사용자의 네이티브 앱 버전업이 느려서 웹뷰와 프로토콜 불일치가 일어나는 상황에 대한 대응이 어느정도 되어있습니다.

   이제 막 wrp의 주요 기능들이 개발된 상태이기 때문에 안정적이지는 않지만 이 기술에 관심이 있으신 분들은 저희 디스코드 서버에 들어오셔서 같이 이야기 나눌 수 있으면 좋겠습니다.


   Pbkit 디스코드 서버: https://discord.gg/PHmV3nhvQq

  Web - TypeScript & React

     * 라이브러리: https://github.com/pbkit/wrp-ts
     * 예제: https://github.com/pbkit/pbkit.dev/blob/main/islands/WrpIframeHost.tsx

  iOS - Swift & TCA

     * 라이브러리: https://github.com/pbkit/wrp-swift
     * 예제: https://github.com/pbkit/wrp-swift/…

  Android - Kotlin & Compose

     * 라이브러리: https://github.com/pbkit/wrp-kt
     * 예제: https://github.com/pbkit/wrp-kt/…


   (트위터에 작성한 내용을 약간 고쳐서 옮겨적었습니다)
   https://twitter.com/disjukr/status/1537034296959315968
     * Show GN: Pbkit - Deno로 만든 Protobuf 툴킷 https://news.hada.io/topic?id=6316
"
"https://news.hada.io/topic?id=6710","화이트 노이즈 만으로 월 $18000 버는 Spotify 팟캐스터들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 화이트 노이즈 만으로 월 $18000 버는 Spotify 팟캐스터들

     * 5만명의 구독자를 가진 Tmsoft’s White Noise Sleep Sounds
       → 유료 구독 옵션도 있지만, 무료 청취자의 Pre-Roll 광고 만으로 재생 1000회당 $12.25, 일 $612, 월 $18375를 받고 있다고
     * Spotify가 인수해서 운영하는 Anchor 에서 팟캐스트 호스팅 중
"
"https://news.hada.io/topic?id=6680","Plasmo - 브라우저 확장 개발용 SDK","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Plasmo - 브라우저 확장 개발용 SDK

   ""브라우저 확장을 위한 Next.js 같은 도구""
     * 크롬/엣지/FF/오페라/사파리
     * React + TypeScript 지원
     * Manifest.json(MV3) 자동 생성
     * Live-Reloading
     * 각 확장 스토어에 자동 배포 지원 : Browser Platform Publish(BPP) GitHub Action 제공
"
"https://news.hada.io/topic?id=6661","일런 머스크가 테슬라 팀에 '이제 원격근무 불가' 메일을 발송","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   일런 머스크가 테슬라 팀에 '이제 원격근무 불가' 메일을 발송

     * Tesla Exec Staff 에게 보낸 메일

     ""사무실에서 최소 주40시간 근무하고 나서 추가로 원격 근무를 하던지, 테슬라를 떠나세요.""
     특별하게 필요하다면 내가 직접 리뷰하고 승인할 거임
     * 다시 전체에 보낸 메일

     Tesla 직원 모두는 '동료가 근무하는' 사무실에서 40시간 근무해야함
     이걸 요구하지 않는 회사들도 있지만, 그 회사들이 ""위대한 새로운 제품"" 출시한게 언제쯤이었나? 아마 오래전일껄.

   특수성이 좀 있는 것 같아요. 하드웨어와 소프트웨어를 분리할 수 없는 차라는 도메인 특성상 원격근무라는게 정말 어려워 보입니다.

   GAN을 만들었던 애플 머신러닝 디렉터, 사무실 출근 정책에 반발하여 퇴사

   이 글이 떠오르네요.

   참 이래저래 이슈를 몰고 다니는 사람이에요.
   일런 한테 ""차나 좀 빨리 배송하고, 주가에나 신경쓰세요"" 라고들 트윗 하는데..
   그럼 테슬라 차랑 주식은 샀다는 얘기라.. ㅡ.ㅡ;
"
"https://news.hada.io/topic?id=6718","사용 가능한 좋은 .COM 도메인 찾기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         사용 가능한 좋은 .COM 도메인 찾기

     * ICANN 에서 Zone 파일 접근 권한 획득 (무료지만 승인에 몇일 소요)
     * 승인되면 com.txt.gz 라는 모든 닷컴 도메인이 기록된 4억 라인짜리 텍스트 파일 다운로드 가능
     * 유니크한 도메인만 추출(루비 스크립트)하면 총 1.62억개(2.2GB)
     * SQLite 에 집어넣고 인덱싱
     * 맥/리눅스에 있는 /usr/share/dict/words 사전에 있는 단어중 도메인 등록 안된 것을 추출하면 93000개
          + 4글자 짜리 짧은 사전 단어 2개를 조합한 도메인을 찾는 것도 가능
          + 이상한 단어들도 많으니 좋은 3/4글자 단어만 추출한 텍스트파일을 생성해서 그것들만 찾는 것도 가능
     * 글자-숫자-글자-숫자 조합의 짧은 도메인 검색도 가능
          + q7r7.com 이나 e3p3.com 같은

   좋은데 사용 가능한 건 비싸죠... ㅠ

   아직 등록되지 않은 닷컴 도메인들은 정가(연 $10 내외)로 등록하실 수 있습니다.
"
"https://news.hada.io/topic?id=6648","Dotdrop - dotfile 들을 어디서나 사용 가능하게","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Dotdrop - dotfile 들을 어디서나 사용 가능하게

   ""Save your dotfiles once, deploy them everywhere""
     * 여러 호스트에서 dotfile 관리를 쉽게해주는 도구
     * Git에 dotfile 들을 저장하고 설정별로 다른 파일을 배포 가능
     * Jinja2 템플릿 적용
     * 미리 지정한 변수를 이용해서 동적으로 생성 가능
     * 쉬운 임포트 & 업데이트
     * 심링크 지원
     * 특정 dotfile 에 대한 Action 지정
"
"https://news.hada.io/topic?id=6678","FireZone - WireGuard 기반의 VPN 서버 & 방화벽","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 FireZone - WireGuard 기반의 VPN 서버 & 방화벽

     * 몇 분 만에 설치하고 간단한 CLI 및 웹 인터페이스로 관리 가능
     * WireGuard를 사용해서 OpenVPN보다 3-4배 빠름
     * 의존성 없음
     * nftables로 원치않는 egress 트래픽 차단

   무료로 사용할 수 있는 개인 or 업무용 VPN 에는 왠지 관심이 가서 자꾸 찾아보게 됩니다. 관련된 긱뉴스 기사 링크를 제가 한 번 달아보겠습니다!
     * https://news.hada.io/topic?id=5701
     * https://news.hada.io/topic?id=1802 WireGuard 가 리눅스 커널 레벨에서 지원된다는 점이 안정성과 속도에서도 이점이 있다고 하네요.
     * https://news.hada.io/topic?id=5039
"
"https://news.hada.io/topic?id=6683","Ford CEO, 전기차는 100% 온라인에서 가격 할인 없이 판매할 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Ford CEO, 전기차는 100% 온라인에서 가격 할인 없이 판매할 것

     * 가격 협상 불가. 딜러를 통하지 않고 직접 고객에게 판매하며, 100% 리모트 픽업 및 배송
     * Lyft & Uber 승차 공유용 전기차를 만들어 큰 이익을 볼 것으로 기대
     * 자동차 회사가 수익을 내는 방식도 바뀌게 될 것 : 고객에게 하루 또는 특정 거리당 비용을 내고 렌트해주는 방식으로
     * 큰 업계 변화가 있을 것 : 기존 자동차 제조사들이 많이들 통합 될 것이며, 중국 전기차 제조사들이 점점 더 중요해 질 것
     * 테슬라의 2021년 2분기 수익은 ""내 세상을 완전히 바꿨고, 큰 깨달음을 줬음""
     * 전기차는 큰 돈을 벌어다 줄 것이고, 테슬라가 그걸 마법처럼 보여줬음.
     * Ford의 유통 모델이 테슬라보다 차량당 2천달러는 더 비쌈 : 딜러가 가진 재고와 광고비용 등

광고 없이 파는 모델로

     * Ford F-150 라이트닝과 Mustang Mach-E SUV의 판매와 예약은 광고 캠페인 없이 진행되었음
     * Ford는 딜러와 협력해서 전문 서비스에 더 집중하는 것으로 변경 중
       → 테슬라도 노르웨이엔 대리점을 두고 있음. 노르웨이 고객들은 판매보다 더 많은 서비스를 원하기 때문

Super Duty는 유지

     * 아직 가솔린 자동차인 Super Duty 픽업 트럭은 계속 개발 예정
     * 회사에 막대한 수익을 벌어주고, 아직 배터리 기술이 이에 적용할 만큼 발전하지 않음 (4.5톤을 토잉하거나, 알라스카 북부 등)
     * 2022년에 배터리에만 $5b(6.2조원)를 쓸 예정

   페이월 링크라서 웹아카이브에서 보시면 됩니다 : https://archive.ph/KDXzM

   전기차는 온라인 판매가 점점 많아 질 것으로 보입니다.
   테슬라가 그렇고, BMW Mini 전기차도 온라인 전용이고요.

   온라인 주문 한번 해보니, 영업점 찾아가고 하는게 훨씬 더 번거롭더군요.
"
"https://news.hada.io/topic?id=6667","Feather Wiki - 1개의 HTML로 저장되는 개인용 위키","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Feather Wiki - 1개의 HTML로 저장되는 개인용 위키

     * 브라우저만 있다면 어디서든 수정 가능하고, 수정된 HTML 파일을 내려받아 교체하는 방식
     * 페이지 및 중첩 페이지 무제한 생성
     * 무제한 Tag 가능
     * 외부/내부 이미지 첨부 지원
     * 최근 본 페이지 트래킹
     * 새 버전의 위키로 쉬운 업그레이드 가능 (새 버전에서 Import & Overwrite)
     * 최종 파일만 가져다 어디서든 호스팅 가능
     * 다양한 버전들 제공
          + Dove : 63.5kb로 가장 큰 버전, WYSIWYG 및 마크다운 에디터 포함. ES6 지원 모든 브라우저에서 실행 가능
          + Robin : Dove 보다 더 작음. 2개 에디터 포함. ECMAScript 2020 이상 지원하는 브라우저만 지원
          + Finch : Dove 에서 마크다운 에디터만 제외
          + 그외 Sparrow, Chickadee, Hummingbird 등

   홈페이지에도 적혀있듯, 비슷한 서비스로는 TiddlyWiki가 있습니다

   흥미롭네요. 취향에 맞는 것 같습니다.
"
"https://news.hada.io/topic?id=6663","대학생 때 알았더라면 좋았을 것들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           대학생 때 알았더라면 좋았을 것들

   고려대학교 컴퓨터학과에서 진행한 특강 ""대학생 때 알았더라면 좋았을 것들""의 발표 자료입니다. 저의 관점에서 '지금 대학생으로 돌아간다면 이런 걸 했었을텐데...'의 생각들을 모아 정리했습니다. 한참 고민이 많을 시기인 대학생 여러분들에게 도움이 되었으면 합니다.

   ""대학생 때 알았더라면 좋았을 것들"" 특강 발표 자료에 많은 관심을 가져주셔서 감사합니다! 사전 질문에 대한 답변이 있었으면 좋겠다는 의견을 많이 받았는데, 주말에 추가해서 자료를 갱신할게요. 다음에 또 발표할 기회가 있다면 발표 자료를 갱신해서 Ver 1.1 또는 Ver 2로 만들어 보겠습니다.

   사전 질문에 대한 답변은 어디서 볼 수 있을까요? 발표 자료를 너무 인상 깊게 봐서 사전 질문에 대한 답도 보고 싶습니다!

   공유 감사합니다...^^

   감사합니다. :)

   공유 감사합니다.

   감사합니다. :)

   방금 다 보았네요.
   무척이나 정성이 들어가있고 알차다는 느낌을 받았습니다. :-)

   잊고 지내던 것들을 다시 떠올릴 수 있는 좋은 기회가 되었습니다.
   좋은 자료 공유해 주셔서 고맙습니다.

   좋게 봐주셔서 감사합니다. _ _ );

   감사합니다. 다른 분께서도 언급하셨지만, 마지막 질문에 대해 어떤 답변을 하셨는지도 궁금하네요 ㅎㅎ

   주말에 추가할게요. :)

   멋진 글 감사합니다. 'ㅁ '! 많은 조언들이 대학생이 아닌 저에게도 큰 도움이 되었습니다. (__ )

   특히 이 글(전산학 교육에서 가르쳐 주지 않는 것) 이랑 세트로 읽으면, 새내기 대학생 분들에게는 마치 천군만마를 얻는 듯한 느낌이지 않을까 ... 생각이 드는군용.

   이렇게까지 말씀해주셔서 영광입니다. 앞으로도 좋은 자료 많이 만들겠습니다.

   오...교양으로 있으면 좋겠네요.

   마지막 Q&A 섹션도 궁금해요

   주말에 추가하겠습니다. :D

   완전 좋네요. 점점 선배와의 관계가 없어지면서 이런걸 듣고 배우기가 힘들어 지는 것 같더라고요.
   특히나 코로나때문에 작년 재작년 신입의 경우는 더더욱요.
   저도 나중에 학생들 만나면 종종 인용하겠습니다. 좋은 자료 고맙습니다!

   좋게 봐주셔서 감사합니다!
"
"https://news.hada.io/topic?id=6703","EU, USB-C를 표준 충전 포트로 만드는 법안 도입 합의","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   EU, USB-C를 표준 충전 포트로 만드는 법안 도입 합의

     * 제조사들은 2024년 가을까지 USB-C를 장착 해야함
     * 대부분의 중소형 전자기기 : 스마트폰, 태블릿, 이북리더, 이어폰, 디지털카메라, 헤드폰, 휴대용 게임기, 휴대용 스피커등을 대부분 포함
     * 노트북은 발효 후 40개월 정도의 시간을 두고 조정 예정

   ""英, EU의 USB-C 통일 따르지 않을 것""

   아.. 요즘 영국 참 재밌네요.. 서로 좋아하는? 영국&일본이 똑같이 갈라파고스가 되고 싶어하는듯

   으… 충전을 위해 usb-c 로 통일하는 건 좋은 생각인지 모르겠어요. 좀더 사용자가 명확히 식별할 수 있게 케이블 제품 표준화도 좀더 강제 해주려나요?
   이 케이블로는 되고 저걸로는 안되는 경험이 자주 있다보니 너무 불편하게 느껴져요. 결국 제품별로 구매시 같이 준 케이블을 정해놓고 써야 안심이 되는데다가… “동봉된 케이블이 아니면 정상 동작을 보장하지 않음.” 이라고 안내되어 있는 제품도 있는데 그럴거면 단자 통일이 뭔 소용일까 싶고요.

   USB-C가 좀 등치가 크긴 한데..그래도 통합되면 편하긴 편할 거 같아요.

   애플 타겟으로 법안 도입한 내용인데, 애플이라면 현재 발주된 내용 소진된 이후에 장착할 것 같네요. 밍치궈가 예상하는게 맞을 것 같습니다.

   https://macrumors.com/2022/06/…
   USB-C 포트가 들어가기에 너무 작은 스마트워치, 헬스 트래커, 스포츠 장비들은 예외 가능하다고 하네요.

   이 법안에 가장 큰 타격은 아마도 애플일텐데,
   밍치궈는 2023년 아이폰15부터 USB-C로 바꿔갈 것이라고 예상하는 군요.
"
"https://news.hada.io/topic?id=6641","1인 SaaS인 Healthchecks.io의 기술 스택","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    1인 SaaS인 Healthchecks.io의 기술 스택

하드웨어 : Hetzner의 Dedi 서버 9대 사용 : 월 €484

     * HAProxy 4대, 웹 서버 3대 , Postgres 2대

소프트웨어

     * Ubuntu 20.04
     * Systemd로 서비스 운용 : haproxy / nginx / postgres
     * Wireguard로 서버간 사설 네트워킹. 티어링 하여 HAProxy는 Postgres에 연결 불가
     * Netdata agent로 머신/서비스 모니터링하고 Netdata Cloud에 연동해서 전체 오버뷰 가능
     * HAProxy 2.2로 로드밸런싱 및 롤링업데이트
     * PostgreSQL 13으로 Primary 에서 Standby로 스트리밍 복제. 자동 failover 없음
       → 싱글 커맨드로 페일오버 트리거링 가능하지만 매뉴얼로 처리

  앱 서버 에선

     * uWSGI 로 Healthchecks 파이썬 앱 실행
     * Go 작성된 작은 hchk 프로그램이 ping API 및 inbound email 처리
     * NGINX로 Rate limiting, 정적 파일 서빙, 리버스 프록시(uWSGI 와 hchk)

SaaS 도구

     * AWS S3 : DB 백업 저장
     * Braintree : 결제 및 구독 관리
     * Cloudflare : DNS
     * Elastic Email : 트랜잭션 메일 전송
     * Fastmail : 고객지원 메일 수신/발신
     * GitHub : 버전 관리 및 트래킹, GitHub Actions로 커밋마다 테스트 실행
     * Hardypress : 서비스 블로그 운영(스태틱한 워드프레스 호스팅 서비스)
     * HetrixTools : 업타임 모니터링
     * IcoMoon : 아이콘 폰트 저작
     * pgDash : PostgreSQL 서버 모니터링
     * PingPong : 서비스 상태 페이지 운영
     * SSLMate : 커맨드라인에서 Certificate Provisioning 가능
     * Syften : HN, Twitter, Reddit 등에서 Healthchecks 서비스가 거론되면 알림 받기
     * Twillio : SMS 전송, Whatsapp 및 전화 알림

Cron jobs

     * 하루에 한번 전체 DB 백업해서, gpg로 암호화후 S3에 업로드
     * 하루에 한번 비활성 사용자 삭제 알림 전송
     * 하루에 한번 년간 구독자들 중 1개월 내 갱신될 사용자들 알림 전송

개발 환경

     * 데스크탑 PC + 27인치 1440p 모니터
     * Ubuntu 20.04 + GNOME shell
     * Sublime Text + meld / Sublime Merge
     * Yubikeys
     * Fabric : 배포 및 메인터넌스 작업 실행
     * sops : Secret 저장
     * 응급시 대처용 노트북

   혼자서 SaaS를 1년 운영해보고 배운 것
   1인 SaaS 개발자를 위한 도구 추천
   1인 SaaS 스타트업 6개월 운영 회고
   1인 기술 스타트업의 아키텍쳐 스택
"
"https://news.hada.io/topic?id=6679","폭력적이지 않고 스토리가 좋은 게임?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          폭력적이지 않고 스토리가 좋은 게임?

   아이들과 할 만한 게임을 추천해달라는 HN글의 답변들
     * Outer Wilds : 윈/XBOX/PS
     * Firewatch : 윈/XBOX/PS/스위치
     * Machinerium / Botanicula / Samorost : W/X/P/i/A
     * It takes two : W/X/P. 2인 플레이 전용
     * Overcooked : W/X/P. 1~4인 협동
     * Gone Home, The Swapper, Fez, Day Of The Tentacle, Braid, Her Story..

   monument valley
   journey 요

   Spring Falls 추천합니다. 플레이타임은 짧지만 이리 저리 고민해서 풀어내고, 결국 절벽 위 꽃이 피는 걸 보면 힐링되요.

   Unpacking 좋죠. 특히 아이들에게 익숙하지 않은 물건들(예- 게임큐브)을 풀고 짐을 배치하며 아이들과 이야기를 나누며 설명할 수도 있어서 좋았어요.

   전 GRIS 추천 드립니다. 폭력이 없고 아름다운 진행이 참 멋지더군요.
   아이들을 위해사 할 수 있는 게임이 정말 없더군요. 일단 싸움을 빼면 몇개 남지도 않아서.
   Never alone 도 이런 측면에서 수작입니다.

   It takes two도 폭력적인 게임같아요. 청소기 눈 뽑아버리고 코끼리 찢어버리는 장면이 있어서...

   아우터 와일즈는 공포요소가 있어서(특히 DLC 시나리오) 적합한지는 잘 모르겠네요.

   제목보고 먼저 떠오른 게임은 투더문...
"
"https://news.hada.io/topic?id=6717","GitHub, Atom 에디터 종료","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          GitHub, Atom 에디터 종료

     * 2011년 개발자를 위한 텍스트 에디터로 시작
     * 2022년 12월 15일자로 프로젝트를 종료하고 아카이브 할 예정
     * 이제 VSCode 및 GitHub Codespaces에 집중

   코딩에 첫 입문할 때 사용한 에디터였는데 이제 종료되네요.

   VS Code 나오기전만 해도 최고의 에디터였었는데. 한 시대가 저무는 듯 하네요

   최애 에디터인데 안타깝네요..

   우와.. 한세대가 넘어가는군요..

   MS가 인수할때 없어지겠거니 했는데 생각보다 오래 걸렸네요.
"
"https://news.hada.io/topic?id=6763","Anker가 아마존에서만 1.2조원 매출을 달성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Anker가 아마존에서만 1.2조원 매출을 달성

     * Amazon-Native(아마존을 기반으로 구축한) 브랜드로 2021년 아마존에서 $1B 매출 달성하고 공격적으로 다각화 중
     * 2011년 구글 엔지니어였던 스티븐 양이 중국 선전에서 시작해서 배터리, 충전기, 케이블 등을 아마존에서 팔기 시작
     * 매출의 절반 이상을 아마존에서 내고 있지만 점점 축소중
       → 2016년엔 80%가 아마존이었지만, 2021년엔 54%
       → Best Buy, Walmart 와 Apple에서 판매 시작한게 컸음
     * 2021년 총 매출은 $1.89B
       → 이중 $1.03B가 아마존
       → $685m 은 오프라인(Brick-and-mortar)
       → $168m 은 다른 마켓 및 자체 웹사이트
     * 전체 비즈니스가 34% 성장하는 동안, 아마존 매출은 19%만 성장
     * 3532명 직원중 1605명이 R&D
     * 다른 Amazon-Native 브랜드들 처럼 다른 브랜드들 보다 아마존에서 정말 비즈니스를 잘함
       → 그리고 중요한건 이제는 오프라인에서도 고객들이 알아주는 브랜드가 되었다는 것

   생각해보니 요즘 악세사리는 아마존에선 Anker, 알리에선 BaseUS, UGreen 요렇게 셋중에 하나만 보이는 듯 하네요.
   벨킨 제품 사본지가 굉장히 오래된 것 같습니다.
"
"https://news.hada.io/topic?id=6668","Orion - Kagi의 WebKit 기반 브라우저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Orion - Kagi의 WebKit 기반 브라우저

     * 현재 베타 버전
     * 맥/iOS만 지원
     * WebKit 최신 빌드를 사용하고, 트래커/광고 제거하여 빠른 브라우저
     * 크롬/FF의 모든 확장들을 사용 가능케 하는 것을 목표
     * Privacy를 중시한 설계
       → Zero Telemetry, Anti-Tracking
       → Ad-Blocker 내장
     * 버티컬 탭 및 탭 그룹 지원
     * iCloud 기반 북마크/탭/암호 동기화
     * 리더모드 지원
     * 애플 Keychain 에 암호 저장
     * Focus 모드로 브라우저의 다른 모든 기능 버튼들 제거하고 콘텐츠만 보기 지원
     * PIP 기능 내장
     * 콘텐츠 Copy & Paste 안되게 막혀 있는 사이트를 해제해주는 ""Allow Copy & Paste""
     * 스크린샷시에 콘텐츠를 쉽게 편집하게 해주는 ""Edit Text on Page""
     * iOS 버전
          + 광고 차단 기능 내장
          + 유튜브 광고도 차단
          + 유튜브 PIP 가능
          + 일부 확장들도 지원

   Private 베타부터 써보고 있는데 아직까지 약간 불안정하고 크롬 플러그인도 지원 안되는 게 많긴 하지만,
   그래도 사파리 대안으로써 충분히 잘 쓰고 있습니다
   Allow Copy & Paste라는 기능은 있는 줄도 몰랐네요.. 전 해당 기능해 주는 크롬 플러그인 받아서 쓰는 중입니다.

   흥미롭네요 크롬을 별로 안 좋아해서 메인 브라우저로 Safari를 쓰고 있는데, 대안으로 테스트해볼 만해 보이네요.

   요즘 검색엔진으로 Kagi 를 쓰고 있어서, 이것도 함 써보고 있는데요.
   광고하는 수준으로 빠른지는 잘 모르겠습니다. 몇일 더 써봐야 할 것 같아요.

   Allow Copy & Paste 기능은 흥미로웠는데.. 해보니 잘 되지는 않네요 ㅡ.ㅡ; 구현에 따라 다른듯
"
"https://news.hada.io/topic?id=6750","토스에서 '계좌에 돈이 부족할 때 알려드릴까요?'에 동의하면 '마케팅 정보 수신 동의'를 하게 된다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        토스에서 '계좌에 돈이 부족할 때 알려드릴까요?'에 동의하면 '마케팅 정보 수신 동의'를 하게 된다

   와 .. 저도 확인해보니 생각보다 많은 항목에 동의되어 있네요.

   나름 마케팅동의 같은 항목들 잘 피해다닌다고 생각했는데
   제대로 인지하지 못한채로 동의한게 이렇게나 많다니
   이 플랫폼을 더이상 신뢰하기 어려울 것 같습니다.

   원문 링크에는 다른 커머스들에 비하면 양반이라는 답글이 달렸던데 동의하기 어렵습니다.
   다른 커머스들에 비해서도 최악이에요.

   페북에 스캠처럼 광고때리던 때 버릇 어디안가는

   토스를 보면 온갖 다크 패턴들이 많고, 갈수록 늘어나는 것 같아서 토스 앱은 물론 토스라는 브랜드 자체에도 신뢰가 크게 떨어지는 느낌입니다.

   토스만의 문제는 아니지만, 토스는 좀 더 심각한 것 같습니다.

   토스가 이런식으로 능구렁이 담넘듯 슬쩍 마케팅 동의 시키는거 많습니다.

   내 자산 조회하기와 비슷한 UI로 내 보험 조회하기 같은걸 해보려고 넘어가면
   버튼과 텍스트 사이에 숨겨져있던 7pt정도의 회색 글씨로 적힌 마케팅 동의를 나도 모르게 동의하게 되고
   그러면 뉴스에 나온 것 처럼 69000원에 내 정보가 보험 고객DB로 팔려가는거죠.

   우리는 동의 받았으니 떳떳하다 라고 하겠지만....

   설정에 개인정보 이용약관 쪽에 가면 모두 철회 할 수 있으니 지금이라도 알게되신 분들은 차근차근 약관 둘러보면서 다 철회하세요

   원문의 'UX 라이팅' 이라는 단어가.. '가스라이팅' 처럼 읽혔..
"
"https://news.hada.io/topic?id=6719","Dashy - 개인 서버용 스타트 페이지 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Dashy - 개인 서버용 스타트 페이지 오픈소스

     * 실시간 상태 모니터링
     * 위젯을 이용한 정보 및 동적 콘텐츠 정보 표시
     * 이름/도메인/태그로 검색
     * 많은 내장 색상 테마 및 커스텀 CSS 지원. 다양한 아이콘 지원
     * 멀티 유저 인증 및 SSO 지원
     * Docker/베어메탈
     * 싱글 YAML 파일 설정 및 UI를 통해서 가능

     * homer - https://github.com/bastienwirtz/homer
     * heimdall - https://github.com/linuxserver/Heimdall
     * dashmachine - https://github.com/rmountjoy92/DashMachine
     * flame - https://github.com/pawelmalak/flame
     * netdata - https://github.com/netdata/netdata
     * cockpit - https://github.com/cockpit-project/cockpit/
"
"https://news.hada.io/topic?id=6653","LiveTerm - 터미널 스타일의 웹사이트 템플릿","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      LiveTerm - 터미널 스타일의 웹사이트 템플릿

     * Next.js 기반
     * config.json 하나만 수정하면 바로 세팅 가능
     * 개인 웹사이트, 브라우저의 시작페이지, 프로젝트 페이지등 용도로 사용
     * 다양한 테마 제공

   예쁘네요~~😃
"
"https://news.hada.io/topic?id=6636","Puppeteer 안티패턴들 피하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Puppeteer 안티패턴들 피하기

     * waitForTimeout 남용
     * Puppeteer의 API가 네이티브 브라우저 처럼 작동한다고 가정하는 것
     * ""domcontentloaded"" 를 사용하지 않는 것
     * 이미지/자료 로딩을 블로킹 하지 않는 것
     * page.evalute 를 사용하지 않는 것
     * 개발도구가 생성한 셀렉터들을 오용하는 것
     * .waitForSelector and .waitForXPath 의 리턴 값을 사용하지 않는 것
     * 별도의 HTML 파서를 이용하는 것
     * 다른 도구가 더 적절한게 있음에도 Puppeteer를 사용하는 것
"
"https://news.hada.io/topic?id=6712","Debezium - DB의 변경사항을 스트리밍하는 오픈소스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Debezium - DB의 변경사항을 스트리밍하는 오픈소스

     * Change Data Capture Platform
     * DB의 변경 사항을 로그 단위 CDC로 스트리밍하여 다양한 곳에서 처리 가능(Kafka)
     * MySQL, MongoDB, PostgreSQL, SQL Server, Oracle, Cassandra
"
"https://news.hada.io/topic?id=6682","한 GitHub 사용자가 40만명에게 Noti 발송 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      한 GitHub 사용자가 40만명에게 Noti 발송

   Unreal 엔진을 사용하기 위해서 가입해야 하는 40만명 멤버가 있는 그룹을 멘션

   그럼 40만명에게 저기에 댓글이 하나 달릴 때 마다 메일이 가고있는 건가요?
   메일 발송 처리능력이 대단하네요.

   이건 Epic이 엔진 사용자들을 무조건 GitHub 그룹에 가입시킨 것도 좀 이상한 듯..
"
"https://news.hada.io/topic?id=6657","Microsoft, Xbox 클라우드 게임 스트리밍용 HDMI 동글 개발 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Microsoft, Xbox 클라우드 게임 스트리밍용 HDMI 동글 개발 중

     * 프로젝트 ""Keystone""이 Xbox 지원 OS에서 확인
     * 크롬캐스트 같이 HDMI에 꼽으면 클라우드 게임을 즐길 수 있게 해주는 저가형 장치
     * Game Pass 가입자가 풀 콘솔 없이 Xbox 게임을 실행 가능
     * 루머는 몇 년 되었지만 공개될 때까진 아직 시간이 필요할 것
"
"https://news.hada.io/topic?id=6759","Show GN: Test API - Simple API that is (maybe) useful for testing","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Show GN: Test API - Simple API that is (maybe) useful for testing

   개발하고 있는 서비스에서 외부 API 요청이 timeout 이 나면 어떻게 될까를 시뮬레이션 해보려다가 귀찮아서 만들었습니다.

   해당 API 에 원하는 status code, response body, timeout 을 설정해서 request 하면, 원하는 response 를 받으실 수 있습니다.

   다른 분들에게도 쓸모가 있을지 잘 모르겠네요 ㅎㅎ

   직접 만드신 거라면 Show GN 쪽으로 올리시는 것이 좋을 것 같습니다.

   삭제를 어떻게 하는 건지 잘 모르겠네요...

   @xguru 님께 옮겨달라고 요청해야 할 것 같습니다.

   오 몰랐네요 거기로 옮기겠습니다

   Show GN 으로 변경되었습니다

   아주 단순한 버전의 Mockbin 같은 서비스라고 보면 되나요?

   가장 기본적인 요청입니다.

   https://json.media/test_api/api?status=200&body=hi&timeout=1
"
"https://news.hada.io/topic?id=6716","카페인 섭취는 뇌를 어떻게 바꾸는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          카페인 섭취는 뇌를 어떻게 바꾸는가

     * 만성적인 카페인 섭취가 뇌의 뉴런 활성도에 어떤 영향을 미치는지에 대한 연구.
     * 쥐에게 2주간 적당량의 카페인을 먹게하고 뇌세포의 활성 패턴을 분석
       -> 신진대사에 관여하는 단백질 합성 과정은 저하됐지만, 뉴런 신호와 가소성은 증가함.
     * 몇몇 변화는 카페인을 끊은지 2주가 지나도록 지속됨.
     * 카페인을 만성적으로 섭취한 쥐는 섭취하지 않은 쥐에 비해 학습 과제에서 더욱 많은 기억형성 유전자가 활성화 되는게 관찰됨.
     * 카페인이 단기적인 효과 뿐만 아니라, 장기적인 변화를 만들 수도 있다는 것을 보여줌.

   커피 안마시는데 마셔야하는 건가...

   신진대사 저하… 그래서 내 몸이… ㅠㅠ

   후.. 덕분에 안심하고 갑니다.

   Q: how many cups of coffee did you drink today?
   A: yes

   아니 커피를 어떻게 끊어 ㅠㅠ 하고 들어왔는데 천만다행이네요

   제목만 보고 ""아.. 뇌에도 악영향을 미치는구나.. 나도 커피좀 끊어야 하는데..."" 하고 클릭했는데...

   저도 “그래… 커피 끊어야지…” 하며 들어왔다가, 카페인 보충할 동기부여를 얻어갑니다

   와 최고 짱

   링크 https://www.nature.com/articles/d41586-022-01487-4 이거 같네요!

   링크를 클릭하면 잘못된 페이지라고 나오는데, 한 번 확인해주시면 좋겠습니다.

   앗 그렇네요... 제대로 된 링크는 다음과 같습니다.

   https://www.nature.com/articles/d41586-022-01487-4

   링크 수정하였습니다
"
"https://news.hada.io/topic?id=6727","Calcure - TUI 캘린더 & 태스크 관리자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Calcure - TUI 캘린더 & 태스크 관리자

     * 윈/맥/리눅스
     * Vim 키 지원
     * 최소한의 키로 이용 가능
     * ToDo 리스트 : 서브태스크 및 타이머 지원
     * Calcurse, Taskwarrior, Abook 연동
     * 색상, 아이콘 등 커스터마이징 지원
"
"https://news.hada.io/topic?id=6744","Android용 Thunderbird 계획 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Android용 Thunderbird 계획 발표

     * 안드로이드용 오픈소스 이메일 클라이언트였던 K-9 Mail이 썬더버드 패밀리에 조인
     * K-9의 메인 개발자가 풀타임 썬더버드 스태프로 참여하고, K-9를 안드로이드용 Thunderbird로 이름을 변경하고 전환 작업을 진행
          + 썬더버드의 자동 계정 설정 지원
          + 썬더버드 데스크탑과의 동기화
          + 메시지 필터 지원 & 향상된 폴더 관리
     * Community-Funded Project
"
"https://news.hada.io/topic?id=6701","Apple Passkeys 개발자 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Apple Passkeys 개발자 가이드

     * FIDO 표준을 통해서 웹/앱에서 암호 필요 없이 Touch ID/Face ID로 로그인
     * 기기내에서 개인키/공개키를 생성하고 공개키를 서버와 공유

   Apple, Google 및 Microsoft와 함께 FIDO 표준 지원 확대 가속화
"
"https://news.hada.io/topic?id=6681","Airbnb가 JavaScript 빌드를 빠르게 만든 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Airbnb가 JavaScript 빌드를 빠르게 만든 방법

     * Webpack 에서 Metro로 번들러를 변경
       → 간단한 UI변경은 80% 빨라졌고 (~1분에서 11초로)
       → 가장 느린 프로덕션 빌드도 55% 빨라짐 (30.5분에서 13.8분으로)
       → 추가로 웹페이지 성능도 1% 정도 빨라짐
     * Metro는 React Native용 오픈소스 JavaScript 번들러
       → Airbnb는 이제 더이상 RN을 쓰지 않지만, 웹에도 잘 맞는다고 믿음
       → 번들링을 3단계로 구성 : Resolution, Transformation, Serialization
     * Metro 와 Webpack 의 주요 차이점
          + 개발시에 요청할 때만 JS 번들 처리
          + 멀티 레이어 캐쉬
          + Serialization
          + RN용이므로 약간의 작업은 필요
               o Bundle Splitting
               o Tree-shaking
"
"https://news.hada.io/topic?id=6698","Github 사용자가 약 40만 명의 사용자에게 6천만 통이 넘는 알림 메일을 발송.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Github 사용자가 약 40만 명의 사용자에게 6천만 통이 넘는 알림 메일을 발송.

     * 한 사용자가 EpicGames/Signup 저장소에서 아주 단순한 변경 사항을 포함한 PR을 생성하고 @EpicGames/developers에게 맨션.
          + @EpicGames/developers는 UnrealEngine을 사용하기 위해 가입해야 하는 조직으로, 약 40만 명의 사용자가 등록되어 있음.
          + 맨션으로 인해 해당 PR을 40만 명이 구독한 상태가 됨.
     * 이후 관리자가 PR를 닫을 때까지 2시간 동안 백 개가 넘는 댓글이 달렸으며, 1인당 약 150통, 총합 6천만 통이 넘는 메일이 발송되었음.
          + 메일은 몇 시간에 걸쳐 지연 발송됨.
     * 다른 유저가 한 번 더 동일한 일을 시도하였으며, 관리자가 빠르게 대응하여 약 10통의 메일(총합 400만 통)이 발송되고 끝남.
     * EpicGames에서는 임시로 모든 PR을 자동으로 닫는 기능을 구현하고, 향후 스팸 방지를 위해 Github와 협력 중이라고 밝힘.

   저도 저거 때문에 이메일 200통 정도 테러 당했습니다 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ

   @EpicGames/developers는 UnrealEngine을 사용하기 위해 가입해야 하는 조직으로, 약 40만 명의 사용자가 등록되어 있음

   이게 뭔가 이상하네요...ㅇㅁㅇ

   언리얼엔진을 사용하기 위해서는 반드시 깃허브 조직에 가입을 시켰던 것으로 기억해서 그걸 표현하고 싶었는데, 표현이 부족했던 것 같습니다.... 다음엔 조금 더 정확히 적을 수 있도록 하겠습니다. ㅠㅠ

   부연설명 남기고 갑니다 ㅎㅎ
   UnrealEngine 내부 소스코드가 github 에 private repo 로 공개되어 있습니다. 내부 소스코드를 커스텀하지 않고 그냥 사용할거라면 가입하지 않아도 되지만, 최적화 등의 이유로 엔진을 고쳐서 빌드해야 할 경우에는 가입이 필요합니다.
     * Hacker News 스레드
"
"https://news.hada.io/topic?id=6656","DALLE-2 내부에서 쓰이는 언어내부에서 쓰이는 언어

   DALLE-2는 텍스트 처리에 문제가 있는것으로 알려져 있었는데,
   알고보니 그게 아무말이 아니라 의미 있는 언어였다는게 발견됨.

   프롬프트로 다시 넣어보면 뜻을 확인할 수 있음.

   이 ""아무말 언어""로 자연어 입력을 대체할수 있고,
   어쩌면 보안과 해석가능성에 대한 도전이 될것.

   링크에서 번역과 원문을 모두 볼 수 있습니다

   ""No, DALL-E doesn’t have a secret language."" https://news.ycombinator.com/item?id=31587316

   아 이미 thread 마지막에 달려있군요!
"
"https://news.hada.io/topic?id=6723","Haskell로 정적 사이트 생성기 만들기 튜토리얼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Haskell로 정적 사이트 생성기 만들기 튜토리얼

   함수형 언어 하스켈을 이용해서 Jekyll/Gatsby 같은 정적 사이트 생성기를 만드는 방법을 배우는 튜토리얼입니다.

   하스켈을 만들면서 프로젝트도 만들 수 있는 구성이기 때문에, 아래에 하나라도 해당이 된다면 도움이 될 것 같습니다.
    1. 함수형 언어를 배우는데 관심이 있는 사람
    2. 프로젝트를 만들고 싶은 경험을 하고 싶은 사람
    3. 정적 사이트 생성기를 개발하는 원리를 조금이나마 이해하고 싶은 사람

   개인적으로는 저렇게 build your own X 같은 시리즈들이 많이 나왔으면 하는 바램이네요.

   오오 재밌어보여요
"
"https://news.hada.io/topic?id=6742","Fastify 4.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Fastify 4.0 릴리즈

     * 2년만에 메이저 버전 업
     * ""resolved with undefined"" 문제 해결 : reply.send 호출 의무화
     * 에러 핸들러 캡슐화하여 일관적인 에러 처리 방식 도입
     * 워커 쓰레드를 이용한 Pino 로거로 같은 프로세스에서 처리 가능
     * Type Provider 기본 제공
     * 스타트업 시간 150% 향상
     * Route 등록이 동기 처리되어 await 해야함
     * find-my-way 라우터 향상
"
"https://news.hada.io/topic?id=6729","Trunk Check - 모든 린터와 포맷터를 실행하는 단일 CLI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Trunk Check - 모든 린터와 포맷터를 실행하는 단일 CLI

   eslint, prettier 같은 린터와 포맷터들을 이 도구 하나로 모두 커버 가능
   자신들의 툴을 슈퍼 린터로 정의

   CI/CD에도 통합가능하며, 현재 VSCode 를 지원함

   표준까지는 아니지만 https://xkcdko.com/927/ 이런 짤이 생각납니다.
"
"https://news.hada.io/topic?id=6655","a16z, Web3를 위한 5.5조원 펀드 결성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       a16z, Web3를 위한 5.5조원 펀드 결성

     * 이제 Web3의 황금기에 들어선다고 판단
     * 2013년부터 Crypto에 투자해 왔으며, 4번째 Crypto 펀드로 $4.5B를 결성(지금까지 Crypto/Web3 펀드 총합은 $7.6B)
     * $1.5B는 시드 투자, $3B는 벤쳐 투자 예정
     * Web3 게임, DeFi, 탈중앙화된 소셜 미디어, Self-sovereign identity, Layer 1 & 2 인프라, 브릿지, DAO 와 거버넌스, NFT 커뮤니티, 창작자 수익화, 탈중앙화 콘텐츠 & 스토리 창작 등의 분야

   Web3 에 반대하는 글도 많지만, a16z 는 Web3에 더 크게 베팅하네요.
   2022년의 크립토씬, 어디까지 왔는가?

   Web3는 그냥 비싼 P2P입니다
   Web3에 대한 나의 첫인상
   귀도 반 로섬 : Web3는 불타서 죽어버리게 두세요
   웹2.0 창시자 ""웹3에 흥분하기엔 너무 이르다"" 왜?
   Keep the web free, say no to Web3
"
"https://news.hada.io/topic?id=6760","Ask GN: VS Code에서 다른 편집기로 갈아타고 싶습니다. 뭐가 좋을까요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Ask GN: VS Code에서 다른 편집기로 갈아타고 싶습니다. 뭐가 좋을까요?

   최근 VS Code에 'Trusted workspace' 개념이 생겼습니다. 새로운 폴더를 열게 되면 '이 폴더를 신뢰하십니까' 하는 질문이 뜹니다.

   '예'를 선택하면 모든 기능을 사용할 수 있는 대신, 악의적으로 작성된 폴더에서 '예'를 누르면 악의적인 코드가 자동 실행되는 결과를 맺을 수 있게 되고요. 대신 '아니오'를 누르면 여러 기능을 못 쓰게 됩니다.

   이게 문제가 한두개가 아니더라고요.
     * 귀찮습니다. 폴더 하나 여는데 이런 상호작용을 하고 있는 게 귀찮습니다.
     * 짜증납니다. 개인적으로 저는 안전한 폴더인지 아닌지 정확히 체크를 하고 누르는 성격인데... 편집기 하나 열자고 이런 걸 체크하고 있으니 짜증납니다.
     * 불편합니다. '아니오'를 누르면 기능이 제한되는데, 디버깅도 못하게 되고, 확장들도 죄다 비활성화되며, 편집기에서 쉘조차도 못 열고 있으니 불편합니다.

   그래서 편집기를 다른 거로 바꾸려고 하는데, 혹시 쓰고 있으시거나 또는 괜찮은 편집기를 알고 계신다면 소개해주실 수 있나요?

   +) 개인적으로 편집기에 바란다던가 선호하는 기능이라던가 하는 게 분명 있지만... 질문이 너무 세부적이게 될까봐 안 적었습니다. 추천해주시면 제가 찾아보겠습니다.

   저는 모든것이 under my control이 아니거나 혹은 모든 설정값들에 대해서 제가 모르는게 있으면 별로 내켜하지 않는 성격이라서 emacs쓰다가 최근에 neovim으로 전향했습니다.

   vscode를 제가 싫어 하는 이유는 (물론 좋은 에디터라는 것에는 동의합니다)
     * 메모리를 너무 많이 잡아 먹는다
     * 플러그인을 프로젝트별로 따로 구성하는게 어지간해서는 쉽지 않다.
     * 일렉트론 기반이라 멀티 프로세스이고 무겁다.
     * 압도적으로 많은 플러그인수를 자랑하지만 그만큼 압도적으로 쓰레기 플러그인도 많다
     * 마우스 사용을 전제로 만든 UI
     * 전혀 예쁘지 않고 정보 가독성이 떨어지는 StatusLine
     * 키보드 단축키가 모든 UI 구성요소에서 똑같이 동작하지 않는다
     * Modal 에디팅이 아니다.

   신뢰문제는 차치하고, 대안이라면 서브라임이나 윈도시면 노트패드++ 정도가 좋을것 같습니다

   감사합니다 :D

   괜히 물어봐서 불안해진건가요? 허용한 디렉토리에 옮겨서 보거나 vi나 emacs쓰면 되지 않나 싶은데... 윈도우면 메모장...

   폴더 전체를 열어서 왼쪽에서 클릭해가면서 보는, 또 확장을 쓰고 편집기 안에서 쉘을 열 수 있는 VS Code의 디자인이 편하긴 한데, 이 창 때문에 (1) VS Code의 여러 기능을 포기해야 되거나 (2) 보안 문제가 생길 가능성을 받아들여야 해서 더 이상 쓰기가 그렇더라고요.

   이 링크를 참고해서 disable 시키거나 안뜨게 하는 방법도 있을것 같아요.
   https://stackoverflow.com/questions/67914899/…

   원래는 확장이 악의로 작성된 폴더로부터 안전한 게 당연한건데, Workspace Trust 개념이 도입되면서 확장이 '자기는 악의로 작성된 폴더로부터 안전하다/그렇지 않다'를 명시할 수 있게 됩니다. Untrust를 선택하면 해당 확장들은 비활성화되는 거고요.

   그런 상황에서 Workspace Trust를 아예 꺼버리면 보안 문제가 될 겁니다. 악의로 작성된 폴더로부터 안전하지 않다고 명시한 확장도 죄다 실행될 거라서요...

   신뢰 경로를 등록하면 하위 폴더까지 같이 적용됩니다. 그래서 프로젝트 모아두는 폴더 하나 등록해 놓고 쓰니까 불편하진 않더라고요. 해당 기능을 무력화하고 싶으시면 아예 최상위 폴더를 등록해두면 되지 않을까 싶습니다.

   프로젝트 폴더 말고 외부에서 다운받은 폴더를 열어보려고 할 때가 문제가 되더라고요. 다운로드 폴더 전체를 함부로 신뢰하기가 좀 그래서...

   음... 결국 저걸 허용하는 다른 에디터를 찾으시는거면...
   joyful님이 말씀하신거 처럼 최상위 디렉토리를 등록해서 쓰는것과 똑같지 않나요?

   그걸 허용하는 다른에디터를 쓴다 == 전체를 함부로 신뢰한다. .... 가 될거 같습니다만...

   허용하는 에디터가 아니라, 신뢰할 수 없는 폴더이더라도 별다른 걱정 없이 안심하고 열 수 있는 편집기를 찾고 있습니다.
"
"https://news.hada.io/topic?id=6724","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   밀린 기술 서적을 읽고, 친구들과 보드게임을 합니다. 아직 파티게임을 하기는 두렵고, 고정 인원으로 소소하게 RPG 협력게임이나 카드 대전 게임을 주로 하고 있습니다. 파티게임이 그립네요.

   오백만년만에 오프라인 컨퍼런스를 다녀왔습니다.
   비포 코로나때는 무료 컨퍼런스의 노쇼비율이 30-50%였다는데, 어제 행사에서는 거의 만석이더군요.

   다들 목말랐던듯.. 저도 이제 해외 컨퍼런스 좀 가고 싶어요.. ㅎ

   여름 맞이 삼계탕 슥 하고 왔습니다🫠

   삼계탕의 시즌이군요. 개인적으로 저는 신길동 호수삼계탕이 최애입니다. 안드셔보셨다면 강력 추천 드립니다!

   요즘은 주말 계획이 거의 고착화? 되가는 것 같네요 ㅎㅎ

   보드게임 모임을 하고, 친구들과 운동하러 갑니다~!

   직업이 두개라서, 하루는 사업과 관련된 일을 할 것 같고, 하루는 논문보면서 시간을 보낼 것 같네요.

   화이팅입니다~! 그래도 주말엔 좀 쉬어주세요 ㅎ

   30일 그림 그리기 도전을 하고 있어서 그림 그리고 쉬고 그러려고요~

   오오~ 인스타 공개 가능하신가요?

   앗 조금 민망하고 긱뉴스에 맞지 않는 것 같아서요 ^^; 고맙습니다~~

   인스타에서 그림 잘 보고 있습니다;; 그림 잘그리는건 부럽
"
"https://news.hada.io/topic?id=6646","WebRTC Nuts & Bolts","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          WebRTC Nuts & Bolts

     * WebRTC가 실제로 어떻게 동작하는지 코드와 예제를 통해 전체적으로 배우기
     * 웹페이지 에서 웹캠을 초기화하고 백엔드와 통신하는 각 단계들을 로그 및 출력물과 함께 볼 수 있음
     * Front 는 TypeScript, 백엔드는 Go 로 구현한 오픈소스
"
"https://news.hada.io/topic?id=6713","렌더링 성능을 7배 빠르게 하는 2줄의 CSS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       렌더링 성능을 7배 빠르게 하는 2줄의 CSS

   애플리케이션 실행시에 방대한 데이터 리스트/그리드를 로드할 경우에 적합
{
  content-visibility: auto;
  contain-intrinsic-size: 1px 5000px;
}

   FF 사용자 입장에서 원 링크의 댓글을 더 재미있게 보았습니다.

   다른 이야기지만, 다크 모드에서도 코드는 라이트 테마로 보이는 것 같습니다!

   아.. 마크다운쪽 코드라서 수정해야 하는데.. 일단 백로그에.. ㅎㅎㅎ
"
"https://news.hada.io/topic?id=6747","큰 기술 회사들은 어떻게 프로젝트를 진행할까","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        큰 기술 회사들은 어떻게 프로젝트를 진행할까

     * 100개 이상의 빅 테크 회사들을 설문 조사한 결과
     * 빅 테크의 프로젝트 관리 방식을 정리하면 ⇨ ""상황에 따라 다름(It Depends)""
          + 대부분 정해진 방법론이나 업무 방식은 없고, 팀이 자신에 맞는 것을 선택
          + 상장회사나 투자받은 회사들은 전담 PM이 있는 것에 대해서 만족도가 낮았지만, 투자 받지 않은 경우는 만족도가 높았음
          + 팀의 자율성과 만족도는 상관관계가 높음
          + 문제가 있는 팀들도 방법론의 문제라기 보다는, 비전을 제대로 보여주지 못하거나, 투명성이나 도구의 부족등이 안 좋게 되는 이유 였음
          + JIRA는 대부분 부정적인 응답이었음
     * 잘 되지 않았던 프로젝트 관리 방법들
          + 엔지니어들이 프로젝트 기간 산정에 참여하지 않음
          + 전담 PM이 있음에도 요구사항이 변경됨
          + 실패한 프로젝트 관리 방법을 변경할 자율성이 없는 팀은 낮은 만족도를 기록
     * 빅테크 들이 프로젝트를 진행하는 방법
          + 엔지니어들이 대부분의 프로젝트를 리드함
          + 정해진 방법론은 없고, 팀이 자유롭게 선택 가능
          + 팀 단위 프로젝트에는 전담 Project Manager 없음. 여러팀 또는 회사 전체가 참여하는 큰 프로젝트에는 Technical Program Manager를 둠. Uber의 경우 1:50 정도의 비율
          + First-class 개발자 도구가 주어지고, 이게 짧은 이터레이션 주기에 큰 영향을 줌

프로젝트에 영향을 주는 빅 테크들의 조직 구조

     * 기본적인 환경
          + 엔지니어와 팀이 자율성을 가짐
          + 무의식 자원(공장 노동자)이 아닌 호기심 많은 문제 해결사들
          + 내부의 데이터, 코드, 문서가 투명하게 공개됨
          + 엔지니어들도 비즈니스와 비즈니스 메트릭에 노출됨
          + 계층적 커뮤니케이션이 아닌 엔지니어-대-엔지니어 커뮤니케이션으로 빠르게
          + 덜 실망스러운 개발자 경험에 투자
          + 더 높은 레버리지로 정당화 되는 더 높은 급여
          + 더 훌륭한 인재들을 고용 가능
     * 권한이 부여되고 자율적인 팀
     * 명확한 오너십을 가진 팀들

Product Manager 는 Yes, Project Manager 는 No

     * 제품 관리자의 롤은 ""What game we're playing"" 과 ""How we're going to play it"" 을 파악하는 것
     * 많은 경우, 빅테크 회사의 제품관리자들은 Project Management를 하지 않음
          + 팀이 실행에 대한 책임이 있고, 대부분 기술 관리자(팀 리드)가 프로젝트 관리를 수행할 책임이 있음
          + 권한이 부여되고 자율적인 팀에서는 프로젝트 관리가 하향식이 되는 경우는 드뭄 ⇨ 모두가 같이
     * 전담 Project Manager가 없을 때 궁금한 점들
          + 팀 단위 프로젝트 : 프로세스를 간단히 하고, 개인간 관계를 강화
          + 복잡한 프로젝트 : 빅테크 들은 Techinical Program Manager(TPM) 를 둠
          + 전담 Program Manager / Project Manager 가 존재하긴 함. 일반적으로 외부,고객 및 장기 실행 계획등에 연결 됨
     * 제품 중심 환경과 스크럼을 하지 않는 이유
     * 스프린트 단위로 실행되는 스크럼은 빠르게 배포하는 상황에 잘 맞지 않음
     * 인프라 및 개발자 도구들이 많은 스크럼 액티비티들을 대신해 줌
          + 빅 테크 회사들이 인프라 및 개발자 도구에 대한 투자가 생산성 향상을 가져온다는 사실을 알게 됨
     * 페이스북, 구글, 넷플릭스 등은 스크럼을 사용하지 않음. 왜 ?
          + 유능하고 자율적인 사람들은 이런 구조가 덜 필요함
          + 유능한 팀에게 어떻게 운영할 지 자유를 주면, 그들을 레버리지 할 수 있음
     * 엔지니어링 조직을 확장하는 것은 팀 레벨 프로세스를 훨씬 넘어섬
     * 그렇다고 모두 빅테크를 따라서 스크럼을 하지 않는 것은 실수임
       → 스크럼을 사용하는 것이 맞는 상황이 있고, 더 높은 생산성을 낼 수도 있음
          + 키친 싱크 팀 : 한팀이 모든 것을 다 해결해야 할 때(초기 단계의 스타트업)
          + 새로운 팀을 형성하는 시점에
          + 몇주마다 한번씩 배포하는 경우
          + 통일화된 형식의 프로젝트 진행 보고를 필수로 해야 하는 경우

어떻게 팀을 운영해야 할까 ?

     * 반복적인 변경이 '빅 뱅' 변경보다 항상 좋음
     * 물고기를 잡아주는 것 보다, 물고기 잡는 법을 알려주는게 더 힘듬
     * 지시(Directing), 멘토링, 코칭은 각자 용도가 있음
          + 지시는 그들이 스스로 할 수 있지만 할수 없을때 만 보조적으로 마이크로 매니징 하는 것
     * 결정을 내리는데 필요한 사람이 적을수록 더 빨리 결정할 수 있음
     * 보고하는 것에 최적화 하는 것은, 더 낮은 신뢰 환경에 최적화 하는 것
     * 컨설턴트들은 측정하기 쉬운 결과를 제공하는데 편향되어 있음, 그게 그들의 가치를 입증하기 가장 쉬운 방식이기 때문에
     * 직접적인 경쟁자들로 부터 배우는 것은 과소평가됨
     * 최고의 엔지니어 중 일부는 마이크로매니징 되기 보다는 그만두는 것을 선호

   ""JIRA는 대부분 부정적인 응답이었음""

   어떤 형식이든 이슈를 관리하는 것은 필요하다고 보는데, 저도 JIRA에 부정적이였어서 일부러 다른 툴을 시도해봤었습니다 (github issues, trello, asana등)
   근데 구관이 명관이라고 결국 JIRA로 회귀했습니다...

   다만 더 나은 방법이 있을지 계속 고민은 하고 있습니다.

   어떤 점에서 구관이 명관이라고 생각하신걸까요?

   저는 YouTrack을 좋아한답니다. Jetbrains가 만든 PM툴인데 제가 필요한 만큼은 프로젝트를 관리할 수 있더라고요.

   저희 팀은 Linear로 갈아탔고, 전체적으로 만족도가 많이 올라갔습니다. 한번 검토해보시길 추천드릴게요.

   이 제품인가 보네요, https://linear.app/. 흥미로워보입니다.

   네 장점이라고 느끼는 부분들은
    1. 가볍고 빠르다. - 앱의 속도, 숏컷, 제공되는 기능의 뎁스
    2. opinionated된 가이드라인이 있다.
    3. 러닝 커브가 낮다. 이슈 트래커에 익숙하지 않아도 배우기 쉬움.
    4. integration이 충분히 잘 되어있다.

   이 정도로 저는 느끼고 있어요.

   퍼스트클래스 개발자 도구는 무엇을 만하는 걸까요?

   원문 느낌을 살리기 위해서 그냥 가져왔는데요.
   현시점에 조직에서 제공 가능한 최고의 개발자 도구라고 보면 될 것 같습니다.
"
"https://news.hada.io/topic?id=6684","Cassandra 대체제로 ScyllaDB를 선택해야 하는 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Cassandra 대체제로 ScyllaDB를 선택해야 하는 이유

     * Scylla는 오픈소스 컬럼기반 NoSQL DB
     * Cassandra와 완전히 호환되며 성능과 비용면에서 훨씬 뛰어남
       → 처리량으로는 3노드 클러스터에서 2x~5x. P99 < 10ms 일때는 3x~8x 빠름. 노드 추가는 3x, 노드 교체는 4x 빠름
     * Scylla는 Cassandra의 아키텍쳐를 많이 가져오면서도 C++로 구현하여 Java의 GC 오버헤드를 줄이고, 코어당 1개의 쓰레드를 사용하여 컨텍스트 스위칭을 최소화
          + 노드당 100만 R/W 이상 처리 가능
          + 지연시간도 더 적고, 안정적인 성능을 유지
          + 셀프 튜닝 가능
          + 고 가용성 + 확장성
          + 같은 작업량 대비 Cassandra 보다 훨씬 적은 컴퓨팅 자원을 사용
"
"https://news.hada.io/topic?id=6664","AI로 금융기관 수수료 환불받고, 경제생활 조언받으며, 구독 서비스 해지하는 방식","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             AI로 금융기관 수수료 환불받고, 경제생활 조언받으며, 구독 서비스 해지하는 방식

   1.미국 기업 쿠션
     * 이 회사는 사용자가 금융기관에서 당좌대월 수수료나 신용카드 이자 등을 자동으로 환불받는 서비스를 운영하고 여기에 머신러닝을 활용함
     * 쿠션에서는 알고리즘으로 사용자 은행 또는 신용카드 계좌를 살펴보고, 사용자가 낸 수수료 가운데 환불받을 가능성이 있는 수수료를 발견함
     * 이어 사용자를 대신해 해당 금융기관에 자동으로 연락하는데, 각 사에 수수료 환불을 요청하며 협상을 벌임
     * 쿠션에서는 ATM 수수료, 월 서비스 수수료, 신용카드 이자, 당좌대월 수수료, 해외 결제 수수료, 연체료 등을 취급함
     * 이 회사는 사용자 은행 또는 신용카드 계좌에서 환불받을 여지가 있는 수수료를 탐지하고, 이를 (사용자에게) 알려주는 도구인 ‘피 지니어스(Fee Genius)’를 개발함
     * 피 지니어스는 ‘언제 당좌대월이 발생할지’도 예측하며, 수수료 협상에 협조적인 은행까지 알려줌
     * 쿠션은 사용자를 대신해 금융기관에 자동으로 연락해서 수수료 환불을 요청하고, 협상하는 기능인 ‘피 니고시에이션(Fee Negotiation)’도 개발함
     * 구체적인 작동방식
       → 사용자는 쿠션에 가입해서 자신의 은행 또는 신용카드 계좌를 연결해야 함
       → 쿠션 알고리즘은 주 7일 하루 24시간 내내 사용자 계좌를 살핌
       → 이 과정에서 지난 3~6개월동안 사용자가 낸 수수료 가운데 환불받을 가능성이 있는 수수료를 머신러닝으로 발견함
       →사용자가 ‘피 니고시에이션’ 기능을 활성화하면 쿠션에서 직접 나서서 해당 금융기관에 자동으로 연락함
       → 쿠션에서는 이메일, 채팅, 전통 우편 등으로 기관에 접촉해서 환불을 요청함
       → 금융기관에서 검토하는 데에는 2~90일 걸림
       → 협상에 성공하면 사용자 계좌로 수수료가 환불됨

   2.영국 기업 클리오
     * 이 회사는 Z세대를 위한 AI 금융 비서 서비스를 운영함
     * AI로 사용자 재정상태, 지출 내역 등을 분석해 챗봇으로 금융 관련 조언을 건네며, AI로 사용자에게 맞춤형 예산도 짜줌
     * 클리오는 먼저 ‘계좌 통합’ 기능으로 사용자의 여러 금융 계좌 정보를 한데 모아 보여줌
     * 아울러 사용자가 챗봇으로 ‘내가 피자를 살 여유가 있을까?’, ‘내가 이번 달에는 어떤 분야에서 (지출을) 줄일 수 있을까?’라고 질문하면 즉각 답변해줌
     * 이는 사용자 지출 내역을 추적해 월별 내역, 카테고리 비교 등으로 보여줌
     * 지난 3개월동안 사용자 지출 거래 이력을 역추적해서 맞춤형으로 예산을 짬
     * 또 ‘자동 저축’ 기능으로 사용자가 매주 얼마나 저축할 수 있는지 파악하는데 해당 금액을 ‘클리오 월렛’이라는 디지털 지갑에 따로 떼어놓음
     * 클리오에서는 위 기능 대부분을 챗봇과 대화하면서 이용할 수 있음
     * 챗봇 어조는 특정 대화 모드에 따라 달라지는데 “날 혹평해줘(Roast me)”라고 입력하면 사용자가 과소비한 사례를 부정적 어조로 꼬집음(예: ”너 이번 달에는 맥도날드에 12번 갔어”)
     * “날 선전해줘(Hype me)”라고 입력하면 사용자가 절약한 사례를 긍정적 어조로 칭찬함(예: “네가 이번 주에는 여행에 돈을 덜 쓴 걸 좀 봐”)

   3.미국 기업 트루빌
     * 이 회사는 AI로 사용자가 잘 이용하지 않는 구독 서비스를 해지하도록 도움
     * 클리오처럼 사용자 지출을 추적하고, 예산을 짜주며, 자동 저축 기능도 제공함
     * 또 사용자가 인터넷, 휴대전화 등 고지서 요금을 낮추도록 지원함
     * 사용자가 트루빌에 은행 또는 신용카드 계좌를 등록하면 AI가 거래 내역을 분석함
     * 이 과정에서 반복 결제 내역, 구독료 내역 등을 찾아냄
     * 사용자는 원치 않는 구독 서비스를 트루빌 앱에서도 직접 해지할 수 있음
     * 트루빌 유료 서비스에 가입하면 트루빌 컨시어지가 사용자를 대신해서 구독을 해지해줌
     * 트루빌에서는 우편과 이메일, 전화 등으로 연락해서 구독을 해지함
     * AI로 구독료를 식별하는 데 따른 어려움

   → 야햐 막터자더 트루빌 공동 창업자 겸 최고매출책임자는 미국 신용카드 자문 플랫폼인 카드레이츠와의 인터뷰에서 이렇게 설명함
   → “넷플릭스에는 거래명이 수백가지가 있을 수 있음""
   → “‘Neflix’, ‘Netflx’ 또는 일련 번호가 함께 있는 ‘Netflix’ 등이 있을 수 있음”
   → AI로 구독료 내역을 정확히 식별하려면 이게 뭔지 정확히 인지해야 함
   → “AI가 (반복) 구독과 일회성 거래를 구분하는 것도 문제”
   → 어떤 서비스에서는 반복 구독과 일회성 거래를 둘 다 허용하는데, 만약 AI가 둘을 구분하지 못하면 사용자 결제 내역에서 일회성 거래를 반복 구독으로 오해할 가능성도 있음

   수수료를 환급받는다는게 잘 이해가 안되는데, 우리나라에도 비슷한 유즈케이스가 있나요? 삼쩜삼은 세금 관련된거고...

   쿠션에서 환불 도와주는 수수료가 ATM 수수료, 월 서비스 수수료, 신용카드 이자, 당좌대월 수수료, 해외 결제 수수료, 연체료 등이라고 하네요. 국내에서 비슷한 사례는 잘 모르겠습니다.

   재밌는 소개 감사합니다. 완전 동일하진 않지만 국내 서비스 중에서는 삼쩜삼이 조금 비슷한 모델로 나아갈 것 같습니다. 토스 같은 경우에도 정기적인 지출이나 환급 가능한 지출이 일어나면 관련 이벤트가 있더라구요.
   그리고 약간 무섭기도 하네요(?) 보안이 뚫린다거나 했을 때...

   오, 전 토스를 이용하면서도 그런 이벤트가 있는 줄 미처 몰랐어요! 삼쩜삼은 이야기만 들어보고 실제 이용해보지 않았는데 tequila님 댓글을 읽어보니 좀 더 관심갖고 봐야겠다는 생각이 드네요! 보안 관련 우려는 저도 공감합니다. 댓글 감사드려요!

   행사의 의미로서 이벤트라기보다는 환급 가능 여부에 관해 표시하는 상황(?)이 있더라구요.
   병원 결제 건이 잡히면 보험 환급 신청이 자동으로 뜬다거나, 특정한 시기마다 결제되는 금액에 대한 알림이라든지..
   상세한 요약글 인상깊게 잘 읽었습니다. 국내에도 꼭 생겼으면 하는 서비스들이네요 ㅎㅎ

   오, 병원 결제에 대한 보험 환급 좋네요. 미국 핀테크 기업에는 인터넷이나 유선방송 요금 같은 것도 금융기관 수수료 환급 협상처럼 이의 신청하고 협상해서 환불 도와주는 서비스도 운영하더라고요. 그것만 하지 않고 여러 서비스를 같이 제공하긴 하던데. 저도 국내에서 저런 서비스 있으면 좋겠어요. 댓글 감사합니다!

   한국에서는 사용이 어려운 서비스 들이겠죠?..
   사회 초년생으로서 1번과 2번 서비스가 매우 흥미롭게 다가오네요.

   저도 체험해보려고 가입을 시도했는데 현지(미국) 전화번호가 없어서 가입하기 어려웠네요. 금융 서비스다보니 본인 인증이 중요하고, 엄격할 수밖에 없어서 그런 듯해요. 금융 계좌도 여럿 연결해야 하다보니 가입 절차에서 본인 인증이 철저해야 하는 듯하고요. =]

   그렇군요. 아쉽네요 ㅎㅎ.. 답변 감사합니다.

   국내에도 더 좋은 서비스가 많이 나오리라 기대해봅니다. 위 사례 중 어떤 건(클리오) 국내 마이데이터 서비스와 일부 비슷하더라고요. 아주 같지는 않지만 약간 비슷한 기능이 있어요(절약 금액 저축). 댓글 달아주셔서 감사해요!
"
"https://news.hada.io/topic?id=6733","Shotcut - 무료, 오픈소스, 크로스플랫폼 비디오 편집기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Shotcut - 무료, 오픈소스, 크로스플랫폼 비디오 편집기

     * FFMpeg을 이용하여 수백개 오디오/비디오 포맷 지원
          + 임포트 없이 직접 편집 가능
          + 멀티포맷 타임라인 : 한 프로젝트 내에서 다양한 해상도/프레임레이트 지원
          + 네트웍 스트림 재생(HTTP, HLS, RTMP, RTSP, MMS, UDP)
          + HDR to SDR 톤매핑
     * 비디오 필터 및 효과
     * 다양한 디스플레이/모니터링 기기 및 트랜스포트 지원

   만들어진지 거의 20년 가까이 된 프로그램으로, 몇년전 부터는 한국어 인터페이스도 지원
   한국어 시작하기 매뉴얼도 올라와있네요 https://shotcut.org/howtos/getting-started/Shotcut%20한국어.pdf
"
"https://news.hada.io/topic?id=6707","카카오, 메타버스 비전 ‘카카오 유니버스’ 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       카카오, 메타버스 비전 ‘카카오 유니버스’ 공개

     * 이용자들을 관심사로 연결하는 ‘오픈링크’ 서비스 준비중
     * 카카오톡 프로필, 친구탭, 채팅탭 등에 비목적성 커뮤니케이션 및 재미 요소 확장
     * 창작자-이용자 간 수익 창출 가능한 ‘B2C2C’ 생태계 구축해 메타버스 활성화 가속
     * 카카오브레인/넵튠 등 공동체 협업으로 텍스트에서 가상현실까지 다양한 메타버스 환경 조성
"
"https://news.hada.io/topic?id=6640","Ultra - 스트리밍 SSR React 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Ultra - 스트리밍 SSR React 프레임워크

     * 브라우저의 네이티브 기능에 의존하는 Deno용 웹앱 프레임워크
       → ES Modules, Import Maps, Web Streams
     * Hot-takes(모든 사람이 동의하긴 어렵지만, 개발자들은 이런 의견을 따른다는 것)
          + ESM,SSR은 필수(non-negotiable)
          + 번들링은 안티패턴
          + 데이터는 어디서든 요청 가능하고, 서버에서 항상 접근 가능
          + 파일시스템 라우팅보다 Dynamic Import를 이용한 Lazy Routing이 우선
          + 도구 및 프레임워크의 마법은 적은게 좋음
          + 워크플로우와 기술스택을 단순화
          + Streams 는 깔끔함

   웹서버 설정에서 소스코드들은 access할 수 없게 설정하고 사용은 가능하긴 하겠네요.

   팀 내에서 Ultra를 사용해보려고 고려했었는데, static file serving을 위한 public 폴더를 따로 지정하는 설정이 없고 src 내에 컴포넌트들과 정적 파일들이 같이 위치해있는 구조더라구요. 추후에 개선된다고는 하는데 현재는 사용하실 때 유의하시면 될 것 같습니다.
   (이런 식으로 Ultra로 제공된 사이트의 소스코드를 볼 수 있습니다. https://ultrajs.dev/app.tsx)

   앗 그렇군요. 경험담 공유 고맙습니다!
"
