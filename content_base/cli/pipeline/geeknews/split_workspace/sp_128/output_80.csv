"https://news.hada.io/topic?id=10623","갤럭시 북 외의 윈도우 기기에서 삼성 노트를 실행할 수 있게 해 주는 스크립트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              갤럭시 북 외의 윈도우 기기에서 삼성 노트를 실행할 수 있게 해 주는 스크립트

     * 최근 업데이트로 갤럭시 북 외의 기기에서 윈도우용 삼성 노트 앱을 실행할 수 없게 됨
     * 레지스트리를 수정해 갤럭시 북이 아닌 기기를 갤럭시 북으로 보이게끔 위장하는 방식
     * 8월 29일에 올라온 1.1 버전 스크립트는 기기를 '갤럭시 북 프로 360'으로 위장시킴
     * 윈도우를 시작할 때마다 bat 스크립트가 실행되게 할 수도 있고, 직접 스크립트를 실행할 수도 있음
"
"https://news.hada.io/topic?id=10600","연방 연구, 고환암과 '영원한 화학물질'의 연관성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      연방 연구, 고환암과 '영원한 화학물질'의 연관성

     * 연방 정부의 새로운 연구, 군인들 사이에서 PFAS 화학물질과 고환암의 연관성을 밝혀냄.
     * 연구 결과, 소방관으로 근무한 공군 병사들의 혈액 내 PFAS 농도가 상승함.
     * 이 연구는 군인들 사이에서 PFAS와 고환암 사이의 직접적인 연결성에 대한 첫 번째 직접적인 증거를 제공함.
     * PFAS 화학물질은 소방용 거품에서 흔히 발견되며 수십 년 동안 사용되어 왔음.
     * PFAS 화학물질은 환경에서 분해되지 않고 인체에 축적되기 때문에 ""영원한 화학물질""로 알려져 있음.
     * 국방부는 2024년 10월까지 모든 PFAS 함유 거품 사용을 중단해야 함.
     * 이 연구는 PFAS 화학물질과 관련된 건강 및 환경 문제에 대한 추가 연구와 조치의 필요성을 강조함.
     * 의회는 VA에게 PFAS 노출로 인한 질환 치료와 피해 병사들에 대한 장애 수당을 요구하는 법안을 발의함.
     * 이 연구는 백신 반응 저하, 신장암, 저체중 출생 등 다양한 건강 영향과 PFAS 노출 간의 증거가 점점 더 많아지고 있음을 보여줌.
     * 국방부는 700개 이상의 국방 시설에서 PFAS 오염 테스트 및 정화 작업 초기 단계에 있음.

        Hacker News 의견

     * ""영원한 화학물질""과 고환암의 연관성을 연구한 연구는 상관관계와 통계적 유의성이 약하다는 비판을 받고 있습니다.
     * 분해되지 않고 영구히 지속되는 화학물질의 사용은 장기적인 건강 위험과 보상에 대한 도전을 야기하여 우려스럽습니다.
     * 이러한 화학물질과 생식력 문제 및 임신 확률 감소 사이에 이전 연구에서 이미 연관성이 확인되었습니다.
     * 남성 생식기 건강과 자궁 내 PFAS 노출 사이에 우려스러운 연결고리가 있으며, 이로 인해 각 세대마다 정자 수가 감소하고 있습니다.
     * 연구 자체는 자세한 정보를 얻을 수 있습니다.
     * 댓글에서는 Atrizine이 개구리를 동성애로 만든다는 알렉스 존스의 주장을 상기시키는 내용입니다.
     * 신체에는 독소나 감염을 감지하고 번식률을 감소시켜 감염 또는 태아 결함의 확산을 방지하는 메커니즘이 있습니다.
     * 소방관들은 다른 위험에도 노출될 수 있습니다.
     * 청소년기의 PFAS 발생률과 낮은 테스토스테론 수준과의 관계는 흥미로운 연구 분야입니다.
     * 이 주제에 관심이 있는 사람들에게는 영화 ""Dark Waters""를 추천합니다.
"
"https://news.hada.io/topic?id=10536","'Hacker News' 가이드라인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'Hacker News' 가이드라인

     * 컴퓨터 과학과 창업에 중점을 둔 소셜 뉴스 웹사이트인 Hacker News 사용 가이드라인 집합 기사
     * 제출물은 주제에 맞아야 하며, 해커들에게 흥미롭고 지적 호기심을 충족시켜야 한다. 이는 해킹과 스타트업 이상을 포함한다.
     * 주제에서 벗어난 제출물은 대부분 정치, 범죄, 스포츠, 연예인에 관한 이야기, 그리고 TV 뉴스에서 일반적으로 다루는 내용을 포함한다.
     * 제목은 대문자, 느낌표, 주관적 칭찬으로 과장되어서는 안 된다. 원본 소스를 제출해야 하며, 이차 보고서는 아니다.
     * Hacker News는 주로 홍보용으로 사용되어서는 안 된다. 자신의 콘텐츠를 일부 시간 동안 게시하는 것은 허용되지만, 사이트의 주요 사용은 호기심을 위해야 한다.
     * 제목에는 사이트의 이름이나 무의미한 숫자가 포함되어서는 안 된다. 제목이 오해를 불러일으키거나 클릭베이트인 경우 변경할 수 있다.
     * 제출물이 비디오나 pdf인 경우, 제목에 표시해야 한다. 직접적인 커뮤니케이션은 hn@ycombinator.com으로 보내야 하며, 사이트에 게시해서는 안 된다.
     * 사용자는 콘텐츠를 삭제하고 다시 게시하거나, 추천, 댓글, 제출을 요청해서는 안 된다. 상호작용은 자연스럽고 개인적인 관심에 기반해야 한다.
     * 댓글은 친절하고, 신중하며, 실질적이어야 한다. 불일치는 논쟁에 초점을 맞춰야 하며, 개인 공격이 아니어야 한다.
     * 사용자는 선동적인 언어, 조롱, 얄팍한 거부, 정치적 또는 이념적인 싸움을 피해야 한다. 댓글은 토론에 기여하고 선의를 가정해야 한다.
     * 사용자는 누군가가 기사를 읽었는지 여부에 대해 댓글을 달거나, 가장 도발적인 포인트에 대해 불평하거나, 강조를 위해 대문자를 사용해서는 안 된다.
     * 민감한 정보에 대해 일회용 계정을 사용하는 것은 허용되지만, 새 계정을 일상적으로 생성하는 것은 권장되지 않는다. Hacker News는 커뮤니티이며 사용자는 일관된 신원을 가져야 한다.
     * 사용자는 astroturfing, shilling, brigading, 외국 요원 등에 대한 암시를 게시해서는 안 된다. 학대에 대한 우려는 hn@ycombinator.com으로 이메일을 보내야 한다.
     * 사용자는 제출물의 적절성, 주변적인 불편함, 댓글에 대한 투표에 대해 불평해서는 안 된다. 대신, 그들은 부적절한 콘텐츠를 신고해야 한다.
     * 사용자는 Hacker News가 Reddit로 변하고 있다고 댓글을 달아서는 안 된다. 이는 새로운 사용자들에게 흔한 오해로 간주된다.

        Hacker News 의견

     * HackerNews의 댓글 지침에 대한 기사, 존중스럽고 실질적인 댓글의 중요성을 강조
     * ""감사합니다""와 같은 ""비실질적인"" 댓글에 대한 부정적인 반응에 대한 일부 사용자의 불만, 이것이 빈정거림을 부추길 수 있다는 주장
     * ""포괄적인 공간""을 만드는 것보다 지적 호기심을 키우는 목표, 대부분의 인터넷 공간보다 덜 독성을 가진 포럼을 만드는데 찬사
     * 사용자들은 지침을 인정하고 모든 소셜 네트워크에서 이를 준수할 것을 약속
     * HackerNews를 관리하는 데 필요한 노력을 사용자들이 인정하고 감사
     * HackerNews와 Reddit을 비교하는 댓글을 피하라는 요청, 사용자들은 HackerNews의 공격적인 성장 전략 부재가 독특한 정체성을 유지하는 데 도움이 되었다고 지적
     * 사용자들에게 HackerNews의 ""두 번째 기회 풀""을 탐색하도록 권장, 더 많은 토론을 위해
     * 사용자가 댓글을 달 때의 개인적인 규칙을 공유, 존중하는 것, 주제에 맞게, 대화를 전진시키는 것, 지지하는 증거를 제공하는 것, 유머를 피하는 것을 포함
     * 댓글을 신고하는 방법에 대한 더 명확한 지침 제안, 사용자는 ""타임스탬프""라는 용어가 혼란스러울 수 있다고 지적
     * 사용자는 전 세계 뉴스 웹사이트를 차단하면 최고의 게시물 수를 크게 줄일 수 있을 것이라고 제안하고, 댓글 관리를 개선하기 위해 메타-투표와 사용자 정의 필터의 도입을 제안
"
"https://news.hada.io/topic?id=10559","파인튜닝된 CodeLlama-34B로 HumanEval에서 GPT-4를 이기다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              파인튜닝된 CodeLlama-34B로 HumanEval에서 GPT-4를 이기다

     * CodeLlama-34B 와 CodeLlama-34B-Python 을 Phind의 내부 데이터셋으로 파인튜닝, 각각 HumanEval에서 67.6%와 69.5%의 pass@1을 달성하여 GPT-4의 67%를 능가함
     * 최근 공개된 CodeLlama 모델들은 HumanEval에서 인상적인 성능을 보였으며, CodeLlama-34B는 48.8%의 pass@1을, CodeLlama-34B-Python은 53.7%의 pass@1을 달성함
     * 두 모델 모두 약 80k의 고품질 프로그래밍 문제와 해결책을 포함하는 독점 데이터셋에서 미세조정되었으며, 이는 코드 완성 예시 대신 지시-답변 쌍을 특징으로 하는 HumanEval과 구조적으로 다름
     * 모델들은 DeepSpeed ZeRO 3와 Flash Attention 2를 사용하여 두 Epoch 동안 총 160k의 예시를 학습하였으며, 이는 32개의 A100-80GB GPU와 4096 토큰의 시퀀스 길이로 세 시간 동안 이루어짐
     * OpenAI의 오염 제거 방법론이 데이터셋에 적용되어 유효한 결과를 보장하였으며, 오염된 예시는 발견되지 않았음. 이 방법론은 각 평가 예시에서 50개의 문자로 구성된 세 개의 부분 문자열을 무작위로 샘플링하거나, 전체 예시가 50개 문자 미만인 경우 전체 예시를 사용하고, 샘플링된 부분 문자열 중 하나가 처리된 학습 예시의 부분 문자열인 경우 일치하는 것으로 식별함.
     * 미세조정된 모델들은 HumanEval에서 Phind-CodeLlama-34B-v1에 대해 67.6%, Phind-CodeLlama-34B-Python-v1에 대해 69.5%의 pass@1 점수를 달성함
     * 두 모델 모두 Huggingface에서 공개되어 검증 가능성을 보장하고 오픈소스 커뮤니티를 지원하며, 결과의 독립적인 검증이 권장됨

   HN 글입니다.
   https://news.ycombinator.com/item?id=37267597
"
"https://news.hada.io/topic?id=10528","저렴한 로직 분석기를 통해 Bitlocker 우회하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     저렴한 로직 분석기를 통해 Bitlocker 우회하기

     * 저렴한 로직 분석기를 이용하면 별도의 TPM 칩이 탑재된 컴퓨터에서 Bitlocker의 전체 디스크 암호화를 우회할 수 있음.
     * Bitlocker는 FVEK(전체 볼륨 암호화 키)를 먼저 생성하고, VMK(볼륨 마스터 키)를 사용하여 이를 암호화한 뒤 하드 디스크에 저장함.
          + TPM을 활성화한 경우 VMK는 TPM 안에 저장되며, 부팅 시 TPM으로부터 VMK를 받아 하드 디스크를 해독하게 됨.
          + 하지만 VMK를 받아오는 과정에서 평문으로 메시지가 전송되고 있음.
     * 이를 해독하기 위해서는 로직 분석기를 통해 CPU와 TPM 칩 사이에 오가는 SPI 명령어를 캡처해야 함.
          + TPM 칩 자체는 로직 분석기를 달기에 매우 어려우므로, TPM과 SPI 버스를 공유하는 다른 칩에 연결하여 신호를 캡처 시작.
          + 먼저 알기 쉬운 SPI 요청을 캡처하고, TPM 인터페이스 사양으로 통신을 의미하는 TIS를 해독해야 함.
          + TIS를 해독하는 쉬운 방법이 없어, 수동으로 해독하여 TPM 신호의 시작 바이트를 알 수 있었음.
          + 이제 TPM 2.0 사양에 명시된 TPM2_Unseal 명령어를 캡처하여 암호를 알아낼 순서임.
          + TIS에서 알아낸 바이트로 TPM 2.0 명령을 찾고, 응답을 분리한 다음 tpmstream-web 같은 도구를 사용해 TPM 응답에서 버퍼를 분리함.
     * 키를 알아냈으면 이제 하드 디스크의 데이터에 접근할 수 있음.
          + 하드 디스크를 분리하여 다른 시스템에 연결한 후, dislocker와 같은 도구를 사용해 암호화된 파일 시스템을 탐색함.
          + 전통적인 방법인 특정 프로그램을 cmd.exe로 바꾸는 방법을 통해 로그인 화면에서 쓸 수 있는 시스템 셸을 만듦.
          + 관리자 권한이 있는 cmd를 얻었으므로, 무엇이든 할 수 있음.
     * 결국 물리적인 TPM이 있으면 Bitlocker가 매우 취약해지므로, CPU에 완전히 통합되어 이러한 공격이 불가능한 fTPM이 권장됨.
     * 만약 물리적인 TPM이 있는 시스템에서 안전하게 Bitlocker를 사용하기 위해서는 PIN이나 암호를 설정해야 함.

     * 도난당한 노트북에서 회사 네트워크 내부까지

   동일한 주제로 한 다른 게시글입니다.

   Bitlocker만 이상하게 TPM이 이런 중간자 공격을 방지하기 위해 만들어둔 암호화된 세션을 이용하지 않아 이런 문제가 발생한다네요.
   systemd는 TPM과 LUKS 암호화를 사용할 때 이런 문제가 없다고 합니다.

   제 생각보다 Bitlocker가 특정 상황에서는 굉장히 취약했네요.
   무려 이름에 Trusted가 들어가는 보안 모듈이라 이런 문제가 없을 줄 알았는데...
"
"https://news.hada.io/topic?id=10604","Onboard - GitHub Repo 설명해주는 AI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Onboard - GitHub Repo 설명해주는 AI

     * 익숙하지 않은 코드베이스를 AI에게 물어보고 답변받기
     * 유명한 저장소 및 GitHub ID로 로그인 하여 자기 계정에 클론한 저장소에 대해서 질의 가능
     * 어떤 기능이 어디 있는지, 어떻게 동작하는지, 코드를 어떻게 수정하는지 단계별로 설명듣기 등 지원

   안녕하세요, onboard의 공동창업자입니다. 포스팅 해주셔서 감사합니다! 몇 주 전에 시작했는데, 계속해서 onboard를 개선하기 위해 노력하고 있음니다. 피드백이나 기능 요청이 있으시면 디스코드에 참여해서 팀에게 알려주세요. 다시 한번 ㄱㅅ 드립니다!

   오 멋진 도구네요

   ProductHunt 에 등록된 글을 보다보니, 공동창업자 분이 한국분이시더군요.
   https://www.producthunt.com/products/onboard-ai#onboard-ai
"
"https://news.hada.io/topic?id=10578","침대에서 가만히 누워있기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             침대에서 가만히 누워있기

     * 저자는 개인적인 경험과 통찰을 공유하며, 규칙적인 수면 스케줄을 맞추는 예를 들어 목표 달성에 있어서 규율과 일관성의 중요성을 강조한다.
     * 대학 후 규칙적인 수면 스케줄을 유지하는 데 초기에 어려움을 겪었던 저자는 크고 거슬리는 알람 시계를 사용하게 되었다.
     * ""침대에서 조용히 누워 있기""라는 조언이 도움이 되었으며, 이는 전화, TV, 책과 같은 방해 요소를 피하는 것을 의미한다.
     * 저자는 대부분의 사람들이 늦게 잠자리에 들기 때문이 아니라, 잠을 유발하는 활동에 몰두하기 때문에 일찍 잠들지 못한다고 강조한다.
     * 이 조언은 즉시 효과를 보이지 않았지만, 몇 주 후 결과를 보여주었고, 결국 저자를 아침형 인간으로 바꾸었다.
     * 저자는 이 일관성과 규율의 원칙을 생활의 다른 영역에도 성공적으로 적용하였다.
     * 연습에 대한 세 가지 주요 통찰을 공유한다:
          + 수면 습관부터 침대 정리까지, 무엇이든 연습할 수 있다.
          + 가장 어려운 부분에 의지력을 사용하고, 작업을 단순화하여 관리 가능하게 만든다.
          + 진전은 종종 예상보다 더 작은 단계로 이루어지며, 작은 개선을 인식하는 것이 중요하다.
     * 저자는 독자들에게 이 원칙들을 자신의 삶에 적용하도록 권장하며, ""침대에서 조용히 누워 있기""라는 문구를 규율과 일관성을 상징하는 비유로 사용한다.
     * 저자는 독자들에게 빈 PDF를 구매함으로써 그들의 글쓰기를 지원하도록 초대하며 결론을 짓는다.

        Hacker News 의견

     * 한 사용자는 잠들기 위한 방법으로 몽상을 제안하며, 과거의 후회나 미래의 불안에 연연하기보다는 안정감을 주고 주의를 분산시키는 환상에 집중하라고 말한다.
     * 다른 사용자는 등을 대고 잠들도록 자신을 훈련시키고 200부터 역으로 세어 잠들게 하는 경험을 공유하며, 이 방법이 그들이 더 빨리 잠들고 통증 없이 깨어나는 데 도움이 되었다고 말한다.
     * 침대에서 휴대폰을 사용하는 것은 잠에 부정적인 영향을 미치는 일반적인 요소로, 한 사용자는 이러한 방해를 피하기 위해 휴대폰을 방에서 제거하라고 제안한다.
     * 일부 사용자들은 불안과 과도한 생각 때문에 잠에 고생하는 경험을 공유하며, 1000부터 역으로 세기, 4-7-8 호흡법, 시각화 명상 등의 기법을 제안한다.
     * 한 사용자는 일반적인 수면 조언에 대한 불만을 표현하며, 자신은 적은 수면으로 더 좋게 느껴지며, 피곤하지 않다면 잠을 강요하기보다는 다른 일을 하는 것이 더 효과적이라고 말한다.
     * 한 사용자는 웹사이트에서 ""빈 PDF를 구매""하는 옵션에 대해 유머러스하게 댓글을 남기며, 이러한 결정의 이유를 의문시한다.
     * 합리적인 시간에 잠자리에 들거나 침대를 정리하는 등의 습관을 ""연습""하는 개념이 자기 개선을 위한 강력한 도구로 강조된다.
     * 자기 개선을 위한 균형 잡힌 마음가짐의 중요성이 강조되며, 배운 무기력과 유해한 긍정적 사고 모두에 대해 경계를 당부한다.
"
"https://news.hada.io/topic?id=10532","Bun v0.8.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Bun v0.8.0 릴리즈

     * 디버거 지원, 페치 스트리밍, SvelteKit과의 호환성 등 여러 업데이트를 제공
     * node:tty의 ReadStream과 WriteStream을 구현하며, .setRawMode()는 이제 process.stdin에서 작동하여 여러 대화형 CLI 도구의 작동을 가능하게 함
     * Node.js 호환성 업데이트, 버그 수정, 안정성 향상이 포함
     * Bun 1.0은 9월 7일에 출시 예정입
     * Bun은 빠른 JavaScript 런타임, 번들러, 트랜스파일러, 패키지 매니저를 모두 하나로 합니다.
     * 디버거 지원은 WebKit의 Inspector Protocol을 통해 구현되며, --inspect 플래그를 사용하여 파일이나 스크립트를 실행함으로써 사용 가능
     * bun update 명령을 도입, package.json의 semver 범위와 호환되는 최신 버전으로 모든 프로젝트 종속성을 업데이트
     * Worker에서의 환경 변수 지원 향상이 SvelteKit의 작동을 가능하게 함
     * 업데이트는 또한 Nuxt (nuxt dev)에 대한 지원을 추가하며, node:tty와 node:fs 지원을 향상
     * Fetch() response body Streaming이 구현되어, 전체 응답을 다운로드하는 대신 데이터를 페치 응답에서 스트리밍 가능
     * node:tty와 process.stdin.setRawMode()에 대한 지원이 추가되어, 대화형 CLI 도구에 중요한 새로운 문자를 기다리지 않고 키 입력을 읽을 수 있게 됨
     * bun test 개선. Jest의 test.each와 describe.each에 대한 지원과 추가적인 Matcher를 제공
     * Buffer.toString(""hex"") 함수는 SIMD를 통해 최적화되어, 성능이 40배 빨라짐
     * Buffer 관련 함수에서의 JIT 충돌, buffer.toString(""hex"") 구현에서의 메모리 누수, 그리고 여러 다른 버그를 수정
"
"https://news.hada.io/topic?id=10580","친근한 인터랙티브 쉘 - Fish","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           친근한 인터랙티브 쉘 - Fish

     * Fish는 macOS, Linux 및 기타 Unix 계열 운영체제를 위한 사용자 친화적인 커맨드라인 쉘
     * 구문 강조, 타이핑 중 자동 제안, 설정 없이 작동하는 탭 완성 등의 기능을 제공
     * bash 또는 zsh와 같은 다른 쉘과 유사하게 작동하지만, 주요 차이점이 있음
          + 변수를 설정할 때 다른 셸에서 사용하는 = 연산자 대신 set 명령어를 사용 : set name 'Mister Noodle'
          + 변수 치환 이후 추가로 값을 분리하지 않으며, 이는 공백이 포함된 값을 처리할 때 유용 : mkdir $name # 하나의 디렉토리 ""Mister Noodle"" 생성
          + 명령 치환에서 백틱(``) 대신 $() 또는 ()를 사용: echo ""Current directory: $(pwd)""
          + 명령 치환의 출력값을 공백 대신 줄바꿈(newline)으로만 분리
          + 모든 변수를 리스트로 처리하며, 다른 셸의 문자열 기반 변수와 다름 : set PATH /usr/bin /bin
          + 리스트 요소를 접근할 때 1부터 시작하는 인덱스를 사용 : echo $PATH[1]
          + 별칭(alias)을 지원하지 않으며, 대신 함수(function)를 사용
          + &&, ||뿐만 아니라 and, or, not 키워드를 지원 : command1; and command2; or command3
          + 명령어와 히스토리를 기반으로 실시간 추천(autosuggestions)을 제공 : grep --ignore-case
          + .bashrc 대신 ~/.config/fish/config.fish 파일을 구성 파일로 사용
     * Homebrew, MacPorts 또는 공식 웹사이트를 통해 macOS에 설치할 수 있음. 지원되는 최소 macOS 버전은 10.10 ""Yosemite""
     * curses 또는 ncurses, 일반적인 Unix 시스템 유틸리티, 그리고 선택적으로 번역 지원을 위한 gettext 라이브러리와 같은 특정 의존성이 있음
     * Fish를 기본 쉘로 사용하려면 chsh -s /usr/local/bin/fish 명령을 사용
     * Fish는 현재 Rust로 포팅되고 있으며, 모든 C++ 코드를 대체함

   지금 zsh 사용 중인데 다음에 기회되면 한번 fish도 써봐야겠어요.

        Hacker News 의견

     * Fish는 최소한의 설정 요구로 시간 효율적인 도구로 인정받음.
     * 사용자들은 Fish가 zsh보다 더 사용자 친화적이며, 설정 중 문제가 더 적다고 발견함.
     * Fish는 사용자 스크립트에서 잘 처리되지 않는 특이 사례가 적어 견고함으로 칭찬받음.
     * 일부 사용자들은 10년 이상 Fish를 사용해왔으며, bash보다 더 단순하고 직관적이라고 느낌.
     * Fish는 패키지 매니저와 플러그인을 사용하는 zsh 설정이 필요한 것을 추가 기능 없이도 달성할 수 있어 그 기능성을 인정받음.
     * 그러나 일부 사용자들은 bash 호환성의 부재가 단점으로 느껴짐, 다른 스크립트 언어로 전환하는 것이 필요하기 때문임.
     * 일부 사용자들은 Fish의 설정 가능한 옵션 부재로 인해 Fish에서 zsh로 전환함.
     * 이러한 단점에도 불구하고, 사용자들은 Fish를 자신의 기계에 좋은 추가로 여기며, 가끔 bash와 함께 사용함.
     * 전반적으로, Fish는 호환성과 설정 가능성의 일부 제한에도 불구하고 사용자 친화적이고 효율적이며 견고한 쉘로 간주됨.
"
"https://news.hada.io/topic?id=10601","오스틴에서 제작된 테슬라 모델 Y의 새로운 이미지 및 비디오가 파손된 전면 캐스팅을 확인합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         오스틴에서 제작된 테슬라 모델 Y의 새로운 이미지 및 비디오가 파손된 전면 캐스팅을 확인합니다.

     * 오스틴에서 만들어진 테슬라 모델 Y의 전면 캐스팅이 깨진 것으로 확인되었습니다.
     * NK 또는 Cracked_Tesla로 알려진 소유자는 차량 인도 후 2개월 뒤에 이 문제를 발견했습니다.
     * 소유자는 처음에 브레이크 액 저장 탱크 뚜껑이 없어진 것을 조사하면서 이 문제를 발견했습니다.
     * 열린 브레이크 액 저장 탱크는 위험하며 브레이크 고장으로 이어질 수 있습니다.
     * 소유자는 테슬라로부터 적절한 대응을 얻기 위해 노력하고, 사진과 동영상으로 문제를 기록했습니다.
     * 소유자는 이와 같은 사례를 들어본 적이 없지만, 다른 차량들도 같은 문제를 가질 수 있습니다.
     * 오스틴에서 만들어진 테슬라 차량 소유자들은 비슷한 문제를 확인하고 보고해야 합니다.
     * 테슬라는 소유자의 우려에 대한 문서를 제공해야 합니다.
     * 이 기사는 이야기의 개발 사항에 대한 업데이트를 제공할 것입니다.

        Hacker News 의견

     * 2015년에 친구가 테슬라와 부정적인 경험을 하여 그들을 브랜드를 비추천하는 사람으로 만들었습니다.
     * 테슬라는 기술자들에게 구두로 피드백을 제공하는 정책을 가지고 있으며, 이는 일부 사람들에게 우려스러운 것으로 여겨집니다.
     * 테슬라 모델 Y의 전면 캐스팅에 생긴 균열은 ""cold shut""이라고 불리는 캐스팅 결함일 가능성이 높습니다.
     * 차주는 레몬 법에 따라 법적 조치를 취할 수도 있습니다.
     * 일부 댓글 작성자들은 테슬라의 서비스와 제작 품질을 비판합니다.
     * 이 사건은 향후 테슬라 구매의 지혜에 대한 의문을 제기합니다.
     * 차량이 안전하지 않다고 판단된 경우 소비자들의 법적 구제에 대한 우려가 있습니다.
     * 이 문제는 시간에 눈치채지 못했다면 안전상의 위험이 될 수 있었습니다.
     * 기사에서 NTSB에 대한 언급이 없는 것은 일부 댓글 작성자들에게 놀라운 점입니다.
"
"https://news.hada.io/topic?id=10598","GNU awk를 사용한 CLI 텍스트 처리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        GNU awk를 사용한 CLI 텍스트 처리

     * GNU awk를 사용한 CLI 텍스트 처리에 관한 기사입니다.
     * 이 기사는 awk 소개, 필터링, 대체, 필드 처리, awk 원라이너 구조, 문자열과 숫자, 배열 등 다양한 주제를 다룹니다.
     * 각 주제에 대한 예제와 설명이 제공되어, 초보 소프트웨어 엔지니어들도 쉽게 이해할 수 있습니다.
     * 이 기사에는 실습을 위한 대화식 연습문제와 해답도 포함되어 있습니다.
     * 이 기사는 독자들에게 예제를 실험하고 많이 연습하여 awk 구문에 대한 이해를 향상시키도록 권장합니다.
     * 다음 장에서는 이 장에서 다룬 개념을 바탕으로 정규 표현식에 초점을 맞출 것입니다.

        Hacker News 의견

     * Awk는 선행 라인을 기반으로 한 라인 매칭 및 일회용 린터 생성과 같은 작업에 유용합니다.
     * Awk에는 Lisp와 기타 사항과 함께 미세한 부가적인 관심이 있습니다.
     * Awk는 더 복잡한 논리를 제공하며 처리가 필요한 작업을 처리할 수 있습니다.
     * 일부 사용자는 Awk보다 텍스트 처리 작업에 Perl을 선호합니다.
     * Gawk는 추가 기능에 액세스하는 유용한 확장 기능을 제공합니다.
     * 저자는 GNU Awk를 사용한 CLI 텍스트 처리에 대한 새로운 버전의 ebook을 출시했습니다.
     * 이 ebook은 필드 처리, 필터링, 다중 파일 처리, 레코드 및 필드 비교, 중복 식별 및 정규 표현식을 다룹니다.
     * 저자는 ebook 번들 거래를 제공하고 있습니다.
     * 저자는 책에 대한 피드백을 요청하고 있습니다.
     * 이전 Awk에 대한 토론은 긍정적인 관심을 받았습니다.
"
"https://news.hada.io/topic?id=10563","EU의 행동 기반 광고에 대한 전쟁","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          EU의 행동 기반 광고에 대한 전쟁

     * EU는 Meta, Snap, TikTok이 그들의 제품에 대해 발표한 중요한 변화와 함께 행동 기반 광고와 싸우고 있다.
     * Apple의 App Tracking Transparency 프레임워크, Google의 서드파티 쿠키 폐지, 그리고 EU 일반 데이터 보호 규정과 같은 개인정보 보호 법률 등 세 가지 중요한 변화가 디지털 광고 산업의 전환을 이끌었다.
     * 과거 행동에 기반한 광고를 보여주는 행동 기반 광고는 사용자에 대한 많은 데이터를 필요로 한다. 이로 인해 데이터 통합과 사용자 동의에 대한 우려가 제기되었다.
     * Apple의 App Tracking Transparency (ATT) 프레임워크는 광고 ID에 대한 접근을 기본적으로 선택에서 제외로 변경하여 앱 간 행동 기반 광고의 효과를 줄였다.
     * Google이 2024년에 서드파티 쿠키를 폐지하기로 한 결정은 사이트 간 행동 기반 광고의 효과를 줄일 것이다.
     * EU의 GDPR은 행동 기반 광고에 대해 명시적인 선택을 요구한다. Meta는 최근 EU 내에서 앱 내 행동 기반 광고는 더 이상 기본적으로 선택할 수 없다고 인정했다.
     * 미래의 방향성은 더 명확한 사용자 선호도, 비개인화된 피드, 사용자 경험의 저하로 인한 더 많은 선택, 구독 실험, 그리고 플랫폼에 의한 EU 시장의 우선 순위 하락을 포함할 수 있다.
     * 저자는 광고 시장의 폭발적인 성장과 주요한 개인정보 위험 때문에 규제가 필요했지만, EU가 너무 나아간 것일 수 있다고 믿는다. 이의 영향은 5-10년 후에 볼 수 있을 것이다.

        Hacker News 의견

     * 기사는 행동 기반 광고에 대한 EU의 입장을 논의하며, 이는 오용 가능성으로 인해 디지털 사회의 기반을 위협하는 것으로 간주됩니다.
     * 주요 문제는 광고 자체가 아니라, 대부분의 경우 대상의 인식이나 동의 없이 인간의 행동 데이터를 수집하고 사용하는 것입니다.
     * 인간의 행동 데이터를 대규모로 처리하고 이를 직접 알고리즘에 적용하는 것은 대량 사회 파괴 무기로 간주되며, 이는 금지되어야 합니다.
     * ""전쟁""이라는 용어는 부적절한 선택이라는 주장이 있으며, EU 규제 당국이 광고주들을 완전히 통제하고 있고, 행동 기반 광고는 불법이어야 한다는 결론을 천천히 내리고 있습니다.
     * ""행동"" 광고라는 용어에 대한 혼란이 있으며, 일부 업계 내부자들은 이것이 다양한 관행을 포괄하는 용어라고 주장합니다.
     * ""타겟팅"" 데이터의 가치는 사용자들이 콘텐츠와 덜 상호 작용하고 기기를 더 자주 바꾸면서 감소했으며, 이로 인해 써드파티 쿠키의 유용성이 줄었습니다.
     * 데이터 브로커에서 나오는 데이터의 품질이 종종 떨어지며, 업계는 광고 효과의 유기적 변화로 이동하고 있습니다.
     * 저자는 소비자의 부를 감소로 인해 EU 시장이 우선 순위에서 밀려나고, 사용자들이 더 많은 광고를 선택하고 있다고 제안합니다.
     * 후원과 물리적 마케팅의 중요성이 증가하고 있으며, 맥락적 타겟팅은 중요한 발전을 보일 것으로 예상됩니다.
     * 이 기사는 인터넷 광고 시장과 최근의 변화에 대한 철저하고 명확한 설명으로 칭찬받고 있습니다.
     * 일부 독자들은 사용자 개인정보를 보호하기 위한 EU의 노력을 강조하는 더 나은 제목 대안을 제안합니다.
     * EU의 행동 기반 광고에 대한 입장이 다른 지역에도 영향을 미칠 것이라는 희망이 있습니다.
"
"https://news.hada.io/topic?id=10514","파킨슨병 진단 전 최대 7년까지 눈 스캔으로 증상 감지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     파킨슨병 진단 전 최대 7년까지 눈 스캔으로 증상 감지

     * Moorfields Eye Hospital 및 UCL Ophthalmology Institute의 Siegfried Wagner와 Pearse Keane이 이끄는 팀이 Parkinson's 질병의 존재를 가리키는 눈 스캔 마커를 임상 진단보다 최대 7년 전에 발견했습니다.
     * 이 혁신적인 발견은 Parkinson's 질병에서의 망막 이미징에 대한 지금까지 가장 큰 연구를 통해 가능했으며, 이 연구는 American Academy of Neurology의 의학 저널인 Neurology®에 게재되었습니다.
     * 이 연구에서는 AlzEye 데이터셋과 건강한 자원봉사자를 포함하는 UK Biobank 데이터베이스에서 Parkinson's 마커를 식별하기 위해 인공지능(AI)을 사용했습니다.
     * 망막 이미지와 관련 임상 데이터의 세계 최대 데이터베이스인 AlzEye 데이터셋은 이 연구에서 중요한 역할을 했습니다.
     * 이 연구는 Alzheimer's, 다발성 경화증, 그리고 조현병과 같은 신경퇴행성 질환의 징후를 감지하기 위해 눈 스캔을 사용하는 ""oculomics""라는 신흥 분야의 일부입니다.
     * 눈은 우리의 건강에 대한 통찰력을 제공하는 '창'으로 간주되며, 특히 광학적 일관성 단층촬영(OCT)에서 나온 망막의 고해상도 이미지는 이제 눈 관리의 일상적인 부분입니다.
     * 1분 이내에 망막의 단면을 만들 수 있는 OCT 스캔은 눈 건강을 모니터링하는 데 유용할 뿐만 아니라 피부 표면 아래의 세포층을 볼 수 있습니다.
     * 연구자들은 AI와 머신러닝을 사용하여 많은 수의 OCT와 다른 눈 이미지를 분석하며, 이 이미지만으로 전체 몸에 대한 숨겨진 정보를 찾아냅니다.
     * 이 연구는 여러 병원과 대학의 National Institute of Health and Social Care (NIHR) Biomedical Research Centres와의 협력을 포함했습니다.
     * 상담 안과 의사인 Alastair Denniston과 임상 연구원인 Siegfried Wagner 모두 Parkinson's 및 기타 질병의 조기 징후를 감지하는 데 눈 데이터와 AI 기술의 잠재력을 강조했습니다.
     * Moorfields의 의료 감독인 Louisa Wickham은 예측 분석을 위한 뇌 스캔에 비해 OCT 스캔의 확장성, 비침습성, 낮은 비용, 그리고 속도를 강조했습니다.

        Hacker News 의견

     * 연구는 눈 스캔이 진단 전 최대 7년 전부터 파킨슨병의 징후를 감지할 수 있다는 것을 제안합니다.
     * 파킨슨병의 전조증상과 대조군 사이에는 중요한 중첩이 있어, 높은 거짓 양성률을 가지지 않고는 단독 측정치로서의 유용성이 없습니다.
     * RightEye와 Neuralight와 같은 회사들이 이 기술을 개발하고 있으며, 더 포괄적인 테스트가 필요할 때 눈동자 움직임 데이터를 활용합니다.
     * 아직 치료법이 없음에도 불구하고 파킨슨병 감지의 진전이 인정받고 있습니다.
     * 수년 전에 잠재적 치매를 알 수 있는 아이디어는 흥미롭고 복잡하며, 사회적 영향을 미칠 수 있습니다.
     * AI, 특히 머신러닝이 이러한 이미지에서 숨겨진 정보를 찾아내는 데 사용되고 있습니다.
     * 스마트폰이 진단 도구로 사용될 가능성에 대해 논의되고 있으며, Apple Watch가 유망한 기기로 언급되었습니다.
     * 2형 당뇨병 감지를 위해 딥러닝을 사용하는 기사의 저자는 초기 질병 감지의 잠재적 이점과 도전 과제를 강조하였습니다.
     * 파킨슨병이 모든 사람에게 동일한 메커니즘이 있는지, 아니면 유사한 증상을 일으키는 고유한 문제들의 집합인지에 대한 논의가 있습니다.
     * 이 기술이 보험 적용 거부를 위한 잘못된 사용에 대한 우려가 제기되었습니다.
     * 눈 스캔, 냄새 감지, 실험실 검사와 같은 여러 감지 방법을 결합하여 더 정확한 파킨슨병 진단을 제안하는 아이디어가 있습니다.
"
"https://news.hada.io/topic?id=10523","급여 협상에서 흔히 범하는 실수들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           급여 협상에서 흔히 범하는 실수들

     * 글은 interviewing.io의 창립자인 Aline Lerner가 쓴 것으로, 이 플랫폼은 수백 명의 사람들이 급여 협상을 성공적으로 마칠 수 있도록 지도했다.
     * 글에서는 급여 협상 중 사람들이 자주 하는 두 가지 실수를 강조한다: 정보를 너무 일찍 공개하거나 준비되기 전에 협상을 시작하는 것.
     * 급여 이력, 기대치, 다른 인터뷰에 대한 세부 정보 등의 정보를 너무 일찍 공개하는 것은 협상에서 당신에게 불리하게 작용할 수 있다.
     * 준비되기 전에 협상을 시작하는 것은 당신이 선택지에 대한 모든 필요한 정보를 갖추지 못했을 수 있으므로 더 높은 제안을 받는 데 제한을 둘 수 있다.
     * 저자는 채용 담당자들이 당신의 친구가 아니며 당신을 위해 일하는 것이 아니라고 강조한다. 그들의 주요 목표는 당신을 직위에 배치하는 것이며, 그들의 인센티브는 당신의 것과 일치하지 않을 수 있다.
     * 글에서는 협상이 올바른 말을 하거나 단단한 악수를 하는 것이 아니라 준비와 지렛대에 관한 것이라고 제안한다.
     * 저자는 채용 담당자와의 초기 상호 작용 중에 ""수동적 정보 수집"" 모드에 있어야 하며, 협상할 준비가 될 때까지 어떤 정보도 공개하지 않아야 한다고 조언한다.
     * 글은 채용 담당자들이 보상 기대치와 다른 인터뷰에 대해 흔히 묻는 질문에 대한 구체적인 대응 방안을 제공한다.
     * 저자는 정보를 너무 일찍 공개하지 않고, 조기에 협상하지 않으며, 여러 가지 제안을 확보함으로써 협상을 위한 탄탄한 기반을 마련하는 것의 중요성을 재확인하며 글을 마친다.
     * 글은 또한 interviewing.io의 급여 협상 패키지를 홍보하며, 이 패키지는 급여 협상을 이끌어가는 데 실질적인 도움을 제공한다.

        Hacker News 의견

     * 거래에서의 가격 결정 원칙과 경쟁 원칙이 급여 협상에 적용될 수 있다.
     * 면접은 시장을 이해하고 자신에게 어떤 제안이 있을지 파악하는 방법이다.
     * 여러 개의 직장 제안이 있으면 협상에서 지위를 강화하고 제안 범위를 이해하는 데 도움이 될 수 있다.
     * 정보 유출을 피하기 위해 제3자 채용업체를 통하지 않고 직접 회사와 거래하는 것이 바람직하다.
     * 시간 낭비를 피하기 위해 면접을 시작하기 전에 급여 기대치를 미리 밝히는 것이 권장된다.
     * 일부 회사들은 공정성을 보장하고 협상을 피하기 위해 동일한 직무 역할에 대해 표준화된 급여를 도입했다.
     * 급여 협상을 거래처럼 다루는 것에 대한 조언은 급여 협상에서의 불균형한 권력 균형 때문에 비판받고 있다.
     * 자신의 가치를 연구하고 면접 중에 그것을 뒷받침하는 것에 초점을 맞추는 것이 제안된다.
     * 동시에 여러 직장 제안을 받는 것에 대한 조언은 전업적으로 직업을 찾고 있지 않은 사람들에게는 비현실적이라는 비판을 받고 있다.
     * 일부 사람들은 자신의 보수 수치를 미리 공개하고 채용업체와 면접 과정을 공유함으로써 성공을 거두었다.
     * 회사들은 시장 연구 급여 분석을 사용하여 급여를 결정할 수 있으며, 이는 이미 자신의 역할에 대한 급여 범위 상단에 있는 경우 인상을 제한할 수 있다.
"
"https://news.hada.io/topic?id=10573","PythonMonkey - SpiderMonkey를 Python VM에 임베드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              PythonMonkey - SpiderMonkey를 Python VM에 임베드

     * Mozilla SpiderMonkey JavaScript 엔진을 Python VM에 내장하여, 파이썬 엔진으로 JS 호스트 환경을 제공하는 프로젝트
          + 빠르고 메모리 효율적
          + 개발자가 JS/Python을 선택해서 작성 가능: JavaScript 라이브러리를 파이썬에서 이용하거나, Python 라이브러리를 JavaScript에서 이용
          + 같은 프로세스내에서 JS와 Python을 실행해서 Serialization/Pipe 등이 필요없음
     * 현재 초기단계로 2023/7 기준 MVP의 80% 정도를 구현

   듀얼 쓰레드를 이렇게!!ㅋㅋㅋ
"
"https://news.hada.io/topic?id=10594","AWS, 맥용 터미널 확장도구 Fig 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        AWS, 맥용 터미널 확장도구 Fig 인수

     * Fig는 VSCode 스타일의 자동완성 기능을 터미널에 추가해주는 도구
          + 스크립팅 기능으로 내부 CLI 도구 개발을 빠르게
          + SSH 접속 정보를 팀과 공유, Dotfile 동기화
          + 400개 이상의 플러그인 제공
     * 기존 사용자는 그대로 사용할 수 있고, 유료였던 Fig Team 기능들을 무료화
     * AWS와 더 깊게 연동하고 최적화할 예정

   아... fuck과 더불어 잘 쓰고 있는 툴인데...AWS 인수라니...음....

   AWS ..가 .. 아휴,.. 이런..

   글 마지막에 제작자 트위터를 들어가려고 하니 트위터가 안되네요 ;;

   Fig - 맥 터미널에 자동완성 기능 붙이기
"
"https://news.hada.io/topic?id=10622","파이썬의 승리 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               파이썬의 승리 이유

     * 2013년에 자바스크립트로 프로그래밍을 시작했습니다.
     * 그 이후로 파이썬을 포함한 여러 언어를 배웠고 시도해봤지만, 자바스크립트가 항상 제일 좋았습니다.
     * 작년에 루비를 배우고, 재미있고 사용하기 쉬워서 놀랐습니다.
     * 현재는 새로운 프로젝트를 모두 루비로 시작하고 있습니다.
     * 2000년대에는 파이썬과 루비가 모두 상대적으로 새로운, 동적 타입의 ""영어 같은"" 언어였습니다.
     * 그동안 이 두 언어는 비슷한 인기를 누렸습니다.
     * 지금은 루비는 여전히 살아있으며, 레일즈 관련 일자리도 많이 있고 루비 자체에서도 흥미로운 일이 벌어지고 있습니다.
     * 그러나 파이썬은 지난 10년 동안 거대한 성장을 이어가고 있습니다.
     * 파이썬의 수학 라이브러리인 numpy와 pandas는 학계에 매력적으로 다가가고 있습니다.
     * 파이썬은 더 간단하고 배우기 쉬울 수도 있습니다.
     * 루비는 왜 성장이 멈추고 파이썬이 아마도 가장 인기 있는 프로그래밍 언어가 되었는지에 대해 고려해볼 수 있습니다.
     * (내 의견으로는 루비가 더 좋은 언어인데) 당시에는 주목하지 않았기 때문에, 오래된 프로그래머들의 의견을 듣고 싶습니다.

        Hacker News 의견

     * 데이터 분야에서 프로그래밍에 처음으로 접하는 사람들에게 많은 기회를 제공하는 데이터 컨텍스트에 특화된 Python.
     * Node.js와 React와 경쟁해야 했던 웹 개발에 특화된 Ruby.
     * Python은 가르침의 언어로 인기를 얻었으며, 게임 스크립팅 및 빌드 시스템 생성과 같은 다양한 분야에서 사용되었습니다.
     * Python은 무작위 스크립팅을 위한 표준이 되었으며, 많은 배포판에서 Perl을 대체했습니다.
     * Python은 만능 언어로 알려져 있으며, 다양한 분야에서 널리 사용되고 유용합니다.
     * Python의 설계는 새로운 사용자가 개념에 대해 정확한 직관을 형성하는 데 도움이 되었습니다.
     * Python의 간결성, 유연성 및 강력한 기능은 성공에 기여했습니다.
     * Python의 표준 라이브러리, REPL 및 FFI는 인기에 큰 역할을 했습니다.
     * Python의 모멘텀과 의사 코드와 유사한 구문은 인기를 유지하는 데 도움이 되었습니다.
     * Python의 초기 채택으로 인해 Numpy와 관련 라이브러리를 사용하는 데이터 관련 작업에 선호되는 선택이 되었습니다.
     * Python은 친근하고 접근 가능한 커뮤니티와 훌륭한 문서화를 가졌으며, Ruby는 처음에는 일본어로만 문서화되었습니다.
     * Rails와 유사한 Django는 다양한 다른 기술과 결합할 수 있어 Python의 성공에 기여했습니다.
     * 개인적인 경험과 선호도도 Ruby와 Python 사이의 선택에 영향을 미쳤습니다.
"
"https://news.hada.io/topic?id=10613","2021년에 발견된 예상치 못한 20GB의 사용되지 않은 인덱스 공간의 해방","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               2021년에 발견된 예상치 못한 20GB의 사용되지 않은 인덱스 공간의 해방

     * 데이터베이스에서 인덱스를 삭제하거나 데이터를 삭제하지 않고 저장 공간을 확보하는 기술에 대해 논의됩니다.
     * 사용되지 않는 인덱스를 식별하고 저장 공간을 확보하기 위해 삭제됩니다.
     * 테이블과 인덱스의 불필요한 공간을 정리하기 위해 다시 구축됩니다.
     * PostgreSQL 13에서 B-Tree 인덱스 중복 제거 기능이 도입되어 중복 값이 있는 인덱스의 크기를 줄일 수 있습니다.
     * downtime 없이 블로트를 줄이기 위해 pg_repack 확장 기능을 사용하여 테이블을 다시 구축할 수 있습니다.
     * PostgreSQL에서는 NULL 값도 인덱싱되어 불필요한 공간을 사용합니다.
     * NULL 값을 제외하고 인덱스 크기를 줄이기 위해 부분 인덱스를 활용합니다.
     * 이러한 작업을 수행하기 위한 쿼리와 명령이 제공됩니다.
     * 언급된 기술은 저장 공간 사용을 최적화하고 데이터베이스 성능을 향상시킬 수 있습니다.
     * Django로 구축된 대규모 애플리케이션에서 저장 공간을 최적화하고 성능을 향상시키기 위해 부분 인덱스가 사용됩니다.
     * 부분 인덱스는 null 값뿐만 아니라 자주 또는 전혀 쿼리되지 않는 값을 제외할 수 있습니다.
     * 특정 인덱스를 null 값을 제외하는 부분 인덱스로 변환하면 약 1.3GB의 저장 공간을 절약할 수 있습니다.
     * 복제에서 인덱스를 삭제하면 더 많은 저장 공간을 확보할 수 있습니다.
     * Django에서 외래 키에 대한 암묵적 인덱스 생성을 방지하고 downtime이나 성능 저하 없이 기존의 전체 인덱스를 부분 인덱스로 마이그레이션하는 팁이 제공됩니다.
     * 인덱스 정의를 최적화하여 저장 공간 효율성과 성능을 극대화하는 중요성이 강조됩니다.

        Hacker News 의견

     * 색인을 작게 만드는 것은 충분한 저장 용량이 있어도 이점이 있다.
     * 자체 하드웨어를 가진 사람들에게는 더 많은 저장 공간을 할당하는 것이 유효한 옵션이다.
     * PostgreSQL 13의 B-트리 중복 제거는 외래 키 색인의 NULL 값에 도움이 될 수 있다.
     * 이 기사는 PostgreSQL의 공간 효율성을 최적화하기 위한 유용한 기술과 통찰력을 제공한다.
     * 초기 또는 초기 단계의 회사에서는 크기를 최적화하는 대신 디스크 공간을 추가하는 것이 일반적으로 더 좋다.
     * 테이블 열 순서를 재정렬하고 스크립트를 사용하면 상당한 저장 공간을 확보할 수 있다.
     * 비대칭 데이터 분포는 색인 팽창과 더 효율적인 진공 작업이 필요할 수 있다.
     * 이 기사는 Hacker News에서 긍정적인 피드백을 받았다.
     * 사용되지 않는 색인 및 최적화 기회를 발견하기 위해 pganalyze.com을 추천한다.
     * 흔하지 않은 PostgreSQL 색인 형식과 NULL 값 색인은 널리 알려져 있지 않다.
     * 데이터 양을 증가시키면 삽입 시간과 성능에 큰 영향을 미칠 수 있다.
     * 해당 원칙은 열에 공통 값의 높은 비율이 있더라도 여전히 적용될 수 있다.
"
"https://news.hada.io/topic?id=10608","Show GN: 틸노트 썸 - ChatGPT로 한방에 요약해 주는 크롬 확장앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Show GN: 틸노트 썸 - ChatGPT로 한방에 요약해 주는 크롬 확장앱

   웹 서핑 중 ChatGPT 요약 기능을 활용하고 싶어 크롬 확장 프로그램으로 간단하게 만들었습니다.
     * 사이트를 보다가 확장 프로그램에 텍스트를 입력하면 ChatGPT로 넘어가 자동으로 요약 시작.
     * 텍스트가 길면 특정 길이로 자른 후 자동 입력 및 요약.
     * 요약이 끝나면 각 파트별로 요약한 것을 합쳐서 보고.
     * 프롬프트 템플릿을 바꾸면 요약 외에 번역, 맞춤법 체크 등으로 다양하게 사용가능.
     * 유튜브도 자막을 입력하면 한 번에 요약. (자막을 복사하는 방법은 URL에 소개)
     * 로그인 필요없음 & 개인정보 요구 안하는 오프라인 앱 & 100% 무료

   한번 활용해 보세요~

   긴글 분리해서 요약하는 기능을 정말 사용하고 싶었는데 있어서 좋네요. 다만 복붙을 하는 과정이 없는 패턴/기능도 추가가 되면 더 좋지 않을까 싶네요. 제가 현재 사용중인 확장 프로그램 한번 참고해 보셔도 좋을것 같습니다. 해외 개인 개발자가 특정 확장(기억이 잘 안나네요 뭐였는지)을 수정해서 만든 거라고 합니다. 링크 : https://chrome.google.com/webstore/detail/…

   좋은 댓글 감사합니다. 나중에 시간이 되면 확장 프로그램에서 클릭 한번에 웹페이지를 파싱하는 기능이나 마우스 우클릭으로 바로 프롬프트 입혀서 ChatGPT로 보내는 패턴으로 코딩해 볼게요.
"
"https://news.hada.io/topic?id=10584","과학자들, 줄기세포로 재프로그래밍하기 위해 세포의 기억을 지우는 방법 발견","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               과학자들, 줄기세포로 재프로그래밍하기 위해 세포의 기억을 지우는 방법 발견

     * 호주 과학자들이 인간 세포를 재프로그래밍하여 배아 줄기세포를 더 잘 흉내내는 새로운 방법을 개발했다는 Nature에 게재된 연구 보고서.
     * 이 연구는 Harry Perkins 의학연구소와 웨스턴 오스트레일리아 대학의 Ryan Lister 교수와 Monash 대학과 Adelaide 대학의 Jose M Polo 교수가 주도했다.
     * TNT(Temporary-Naive-Treatment) 재프로그래밍이라는 이 방법은 세포 치료와 생물의학 연구의 새로운 기준을 설정할 수 있다.
     * 인간의 체세포, 예를 들어 피부세포를 유도 다능성 줄기세포(iPS)로 인공적으로 재프로그래밍하는 능력은 2000년대 중반부터 가능했다.
     * 그러나 이 과정에서 지속적으로 문제가 되는 것은 iPS 세포가 원래의 체세포 상태의 유전자 후성유전학적 기억을 유지할 수 있으며, 이로 인해 iPS 세포와 그들이 흉내내야 하는 배아 줄기세포 사이에 기능적 차이가 생긴다.
     * TNT 재프로그래밍 방법은 초기 배아 발달에서 일어나는 세포의 유전자 후성유전체 리셋을 흉내내어 iPS 세포와 배아 줄기세포 사이의 차이를 줄인다.
     * 새로운 인간 TNT-iPS 세포는 분자적, 기능적으로 인간 배아 줄기세포와 매우 유사하며, 이는 기존 재프로그래밍을 사용하여 생성된 것보다 더욱 그렇다.
     * TNT 방법을 사용하여 생성된 iPS 세포는 표준 방법으로 생성된 iPS 세포보다 더 잘 다른 세포, 예를 들어 뉴런 선조세포로 분화할 수 있다.
     * iPS 유전자 후성유전체 이상과 그 수정에 zugrunde liegenden 정확한 분자 메커니즘은 아직 완전히 알려져 있지 않으며, 이를 이해하기 위해 추가 연구가 필요하다.
     * 이 협력 연구 프로젝트에는 호주, 런던, 싱가포르의 여러 대학과 연구소의 연구자들이 참여했다.

        Hacker News 의견

     * 연구는 새로운 줄기세포 생성 방법을 제시하지 않고 유도 다능성 줄기세포(iPSCs) 생성 과정을 개선하여 기능을 더 잘하게 하는 것을 논의하고 있다.
     * 비줄기 인간 세포에서 생성된 iPSCs는 유전자 조절인 유전자학적 요인의 차이로 인해 배아 줄기세포(ESCs)만큼 효과적이지 않다.
     * 유전자 표현의 조절인 유전자학은 동일한 DNA를 가진 다른 세포들이 어떻게 기능하는지에 중요한 역할을 한다.
     * 이 연구는 줄기세포가 되기 위한 재프로그래밍 과정 중 특정 유전자학적 패턴의 발달에서 이상을 확인하였다.
     * 개발된 기술은 iPSCs의 이러한 이상을 재설정하여 연구 목적에 더 효과적으로 만들 수 있다.
     * 이 연구의 의료적 사용에 대한 함의는 불확실하다. iPSCs는 본질적으로 거의 통제되지 않은 암세포이며 치료적 사용에 안전하지 않을 수 있다.
     * 이 연구는 심장 발작으로 인한 손상을 수리하는 것과 같은 장수와 재생 의학에 대한 돌파구에 기여할 수 있다.
     * 일부 사용자들은 이 연구가 중요한 진전을 나타내는 것으로 희망을 표현하지만, 그 실질적인 중요성에 대한 더욱 자세한 설명을 요구한다.
"
"https://news.hada.io/topic?id=10496","Microsoft Excel의 Python 지원 기능 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Microsoft Excel의 Python 지원 기능 공개

     * Microsoft가 Excel에서 Python을 사용할 수 있는 기능의 미리 보기를 공개함.
          + Excel Power Query의 일부로 실행되어 추가적인 설정이 필요하지 않음.
     * Anaconda와 협력하여 pandas, statsmodels, Matplotlib 등 여러 라이브러리들을 활용할 수 있도록 지원.
     * 모든 연산은 Microsoft Cloud에서 실행됨.
     * 베타 채널인 Microsoft 365 Insiders에서 공개 미리 보기로 사용 가능.
          + 미리 보기 기간 동안에는 Microsft 365 구독에 포함되지만, 끝나면 유료 라이선스가 출시될 예정.

   시대를 잘 못읽는 것 같은데... 저만 그렇게 느끼나요?

   로컬에서 안된다니 ㅠㅠㅠㅠ

   헉.. (이런 좋은 소식이..)
   헉... ('Microsoft Clode에서 실행됨' 문구를 읽고 설마..)
   헉... (설마가 역시.. 유료 라이선스가 출시될 예정.. 아쉽..)

   로컬이 아니라니… 유료라니…
     * HN 스레드

   로컬에서 실행될 수 있으면 좋겠네요.
"
"https://news.hada.io/topic?id=10611","Elixir가 Pinterest의 서버 비용을 년간 $2M(26억원) 절감","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Elixir가 Pinterest의 서버 비용을 년간 $2M(26억원) 절감

     * Pinterest가 Elixir를 이용하여 서버 수를 95% 줄이고 매년 200만 달러 이상을 절약
     * 스팸팀은 기존에 1400개에 가까운 서버를 운영
          + 200개의 파이썬 서버에서 실행되던 시스템중 하나가 이제 4대의 Elixir 서버에서 실행
          + 실제로는 2대 만으로도 가능하지만, fault tolerance를 위해 4개로 운영
     * 훨씬 적은수의 하드웨어로 실행됨에도 불구하고 성능과 안정성이 향상
     * Notification 시스템이 Java에서 실행될 때는 30개의 c32.xl 인스턴스
          + Elixir 로 전환하고 15개 인스턴스에서 실행 가능
          + 역시 오류도 줄고 응답시간도 크게 단축
     * Elixir의 비용 절감 사례는 이외에도 많음
          + Cory O'Daniel은 서버리스에서 엘릭서로 변경하여 AWS 비용을 매월 16,000달러에서 150달러로 줄임
          + Bleacher Report는 엘릭서로 서버 수를 150대에서 5대로 축소하여 서버 비용을 97% 절감
     * 엘릭서는 항상 온라인인 많은 사용자를 대상으로 설계되어 비용 절감과 성능 향상 측면에서 명확한 이점을 제공

   clojure 는 이런 뉴스 잘 안들리는데... 엘릭서를 공부해야 되나 싶네요 ㅠ.ㅠ

        Hacker News 의견

     * Pinterest의 Elixir 사용은 서버 비용을 크게 줄였다.
     * Python에서 Elixir로의 전환으로 하나의 시스템이 200대 대신 4대의 서버에서 작동할 수 있게 되었다.
     * 하드웨어를 적게 사용하더라도 시스템의 성능과 신뢰성이 향상되었다.
     * 비용 절감의 정도와 Elixir의 재구성 과정에서의 역할에 대한 회의가 있다.
     * Pinterest의 Google 이미지 검색 결과와 사용자 경험에 대한 우려가 있다.
     * 일부 조직은 고수준 클라우드 인프라에서 벗어나 가상 서버나 온프레미스 솔루션을 선택하고 있다.
     * Pinterest에서 Elixir 구현의 투자 수익률은 회사의 전체 수익에 비해 상대적으로 낮다.
     * Elixir 선택은 프로그래머 친화적인 구문, 강력한 기능, Actor 모델의 통합으로 인해 영향을 받았다.
     * 서버 감소는 주로 언어 선택인지 아키텍처 문제인지에 대해 의견이 분분하다.
     * 언어 선호를 위해 하위 시스템을 재작성하는 결정에 대해 일부 댓글러들이 비판한다.

   의견에서 눈에 들어오는 부분이 오히려 많네요. 본문과 의견의 건강한 토론이라는 느낌이네요.
"
"https://news.hada.io/topic?id=10561","E-ink이 레트로펑크 스타일임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           E-ink이 레트로펑크 스타일임

     * ""레트로펑크""와 ""해커의 꿈""으로 묘사되는 e-ink 기기의 매력에 대한 기사
     * 80년대와 90년대 컴퓨터를 연상시키는 e-ink 기기, 간단하고 방해받지 않는 컴퓨팅 경험 제공
     * 이 기기들은 저전력 ARM 기기로 Linux를 실행하며, 커널과 프레임버퍼에 직접 대화하는 간단한 앱들
     * e-ink 기기는 경량, 휴대 가능, 고해상도를 가지며, 터치 이벤트를 지원하고 일부는 펜 스타일러스도 지원
     * 이 기기들의 소프트웨어 생태계는 홈브루로, 애호가들이 앱을 작성하고 공유. 앱 스토어, 추적 픽셀, 끊임없는 방해 없음
     * reMarkable 생태계에서 사용 가능한 여러 애플리케이션들, 멀티태스킹 애플리케이션 런처, 터미널 에뮬레이터, 인터랙티브 픽션 인터프리터, 실험적 에디터 & 쉘, 절차적 드로잉 앱, 대체 전자책 리더 등
     * 저자는 관심 있는 독자들에게 e-ink 기기를 해킹하기 시작할 것을 권장, reMarkable 또는 Kobo를 좋은 시작점으로 제안
     * 이 기기들의 단점도 언급, rM2의 독점 디스플레이 드라이버와 Kobo의 강력한 패키지 관리 부재 등
     * 저자는 감옥 탈출 요구와 수정된 안드로이드 OS를 실행하는 Kindle 기기를 추천하지 않음
     * e-ink 기기에 대한 저자의 열정과 컴퓨팅에서 대안적인 경로의 잠재력을 표현하며 기사를 마무리

        Hacker News 의견

     * 원본 게시자(OP)는 rM 및 Kobo 장치용 앱을 개발하는 개발자 그룹인 rmkit의 일부입니다. 일반적으로 앱 개발에 Qt를 사용하지만, Unix 파이프를 사용하는 SAS를 포함하여 다른 방법도 많습니다.
     * rM2 장치는 내장된 프레임버퍼 드라이버 때문에 rM1보다 더 많은 해킹이 필요합니다. 이는 remarkable에서 새로운 업데이트가 출시될 때마다 rm2fb를 업데이트해야 함을 의미합니다.
     * 많은 사용자들은 크기, 무게, 그리고 수용할 수 있는 책의 수 등의 편리성 때문에 전자 잉크 장치를 좋아합니다. 또한 눈에 부담이 적고 방해가 없습니다.
     * 일부 사용자들은 대시보드를 보여주기 위해 큰 전자 잉크 디스플레이를 가지고 싶지만, 높은 비용이 방해가 됩니다. 그들은 큰 LCD 디스플레이와 같은 대안을 고려하고 있습니다.
     * 전자 잉크 디스플레이의 가격은 면적이 증가함에 따라 수율이 감소하는 문제입니다. 이는 반도체 및 기타 디스플레이 기술에서 흔한 현상이지만, 전자 잉크의 경우 더욱 심각해 보입니다.
     * 한 사용자는 4.2"" 전자 잉크 화면에 배터리가 있는 인쇄 케이스를 $90에 구입하여 작은 달력 애플리케이션을 만들었습니다.
     * 일부 사용자들은 remarkable 2 장치가 성능이 떨어지고 중요한 노트에는 부적합하다고 느낍니다. 그들은 더 나은 하드웨어와 더 높은 성능이 이 문제를 해결할 수 있다고 제안합니다.
     * 일부 사용자들은 기사가 waveshare에서 판매하는 완제품 화면에 대해 논의하지 않아 실망했습니다. 그들은 Raspberry Pi와 Python으로 epub 리더를 작성하여 eReader를 만들었습니다.
     * 사용자들은 제한된 색상으로 인해 레트로 느낌을 주는 전자 잉크 장치를 좋아합니다. 그들은 전자 잉크 기술의 미래 발전에 대해 기대감을 표현하고 있습니다.
     * 전자 잉크는 매력적인 디스플레이 기술입니다. 한 사용자는 광학적 일관성 단층 촬영(OCT)에 의한 비파괴적인 E-ink 디스플레이의 ""분해""에 대한 이야기를 공유했습니다.
     * 사용자가 언급한 회사인 Pimoroni는 Badger2040W와 Inky Frame과 같은 제품을 제공하며, 이들은 E-Ink 패널을 RP2040 마이크로컨트롤러와 결합합니다. 이러한 제품의 가장 큰 장애물은 업데이트 속도입니다. Badger의 흑백 화면은 강하게 구동할 수 있지만, 과도하게 구동하면 결과가 있습니다. Inky Frame의 7색 디스플레이는 새로 고침하는 데 약 30초가 걸립니다.
"
"https://news.hada.io/topic?id=10558","나를 위한 웹 스크래핑, 그러나 너를 위해서는 아닌","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      나를 위한 웹 스크래핑, 그러나 너를 위해서는 아닌

     * 웹 스크래핑에 대한 법적 복잡성과 위선에 대한 기사
     * Meta와 Microsoft와 같은 대기업들이 자신들의 플랫폼에서 웹 스크래핑을 금지하면서 동시에 다른 회사의 플랫폼에서 데이터를 수집하는 방식
     * 인터넷에서 데이터를 접근하고 사용할 수 있는 법적 문제와 그 목적에 대한 복잡성. 저작권이나 다른 지적 재산권으로 보호받는 데이터 형태가 있지만, 인터넷의 대부분 데이터는 쉽게 보호받지 못함
     * LinkedIn과 Facebook과 같은 소셜 미디어 회사들이 웹 스크래핑 소송을 가장 공격적으로 추구. 그러나 그들이 보호하려는 콘텐츠는 사용자가 생성한 것이며, 그들 자신의 재산이 아님
     * 인터넷 초기에 회사들이 물건에 대한 침입으로서의 웹 스크래핑을 중단시키기 위해 법적 이론을 사용. 즉, 원치 않는 대량의 데이터 요청이 개인의 유형 재산, 즉 컴퓨터 서버에 대한 침입 형태라고 주장
     * 2000년대 초부터 2017년까지, Computer Fraud and Abuse Act (CFAA)가 웹 스크래핑을 방지하는 주요 법적 이론이었음. CFAA는 ""보호된 컴퓨터""에 대한 무단 접근을 금지함
     * 2017년 hiQ Labs, Inc. 대 LinkedIn Corp. 사건에서 웹 스크래퍼의 CFAA에 따른 공개 LinkedIn 데이터 접근 권리를 확인, 이를 공개 데이터를 스크래핑할 수 있는 긍정적인 권리로 해석하는 이들이 많아짐
     * 현재 웹 스크래핑을 중단시키는 주요 방법은 계약 위반 주장을 통한 것. 이를 통해 회사들이 계약법을 통해 데이터 사용 및 접근에 대한 재산권을 주장할 수 있게 함
     * 재산법에서 계약법으로의 이동은 웹사이트 소유자들이 온라인 이용 약관을 통해 온라인 데이터에 대한 권리를 정의할 수 있게 함
     * Microsoft와 같은 회사의 위선을 강조하는 기사. 최근에 AI 서비스의 스크래핑을 금지하는 이용 약관을 업데이트했지만, 그들의 계열사인 OpenAI는 인터넷 전체를 스크래핑하도록 설계된 제품을 출시함
     * 저자는 법원이 사적 회사들이 접착 계약을 통해 지적 재산권을 창출하도록 허용하는 것을 비난, 이러한 결정들은 공공의 이익에 관한 문제가 되어야 한다고 주장
     * 기사는 현재의 웹 스크래핑에 대한 법적 체제가 생성적 AI 사례로 시험될 것이라고 제안하며, 법의 일관성이 유지될 수 없으며 앞으로 몇 년 동안 중요한 법적 발전이 이루어질 것이라고 예측

        Hacker News 의견

     * 최근 AI와 LLM 경쟁은 웹 스크래핑에 대한 우려를 높이고 있으며, 주요 기술 인물들과 기업들이 인식된 위협에 대한 방어를 강화하고 있다.
     * 데이터 스크래핑 주변의 공포를 완화하기 위해 상업적 AI 응용 프로그램에 대한 새로운 저작권 해석이 필요하다.
     * HiQ 대 LinkedIn 사건은 웹 스크래핑에 대한 논의에서 자주 인용되지만, 사건의 세부 사항은 복잡하고 종종 무시된다.
     * 데이터를 스크래핑하면서 자신들의 데이터 스크래핑을 금지하는 회사들의 인식된 위선은 경쟁 전략으로 이해될 수 있으며, 모순이 아니다.
     * 재산법에서 계약법으로의 전환은 웹사이트 소유자들이 자신들의 권리를 정의할 수 있게 해주었으며, 이로 인해 대기업들로부터 일방적인 ""계약""이 확산되었다.
     * Microsoft가 인터넷을 스크래핑하도록 설계된 제품을 출시하면서 스크래핑을 금지한 최근의 사례는 기업의 위선의 예로 지적되었다.
     * 웹 스크래핑은 특히 규모 때문에 비즈니스 모델 문제로 간주되며, 광고 수익에 의존하는 무료 콘텐츠 제공자들은 광고를 우회하는 스크래핑에 의해 위협받고 있다.
     * Facebook과 같은 플랫폼에서 사용자가 생성한 콘텐츠의 소유권은 복잡하며, 사용자들은 소유권을 유지하면서 플랫폼에 광범위한 사용 권리를 부여한다.
     * 웹 스크래핑에 대한 법적 장애물은 일반적으로 해로운 것으로 간주되지만, 스팸 이메일과 같은 스크래핑으로부터 부정적인 영향을 경험한 개인들도 있다.
"
"https://news.hada.io/topic?id=10542","소니, 플레이스테이션 전용 리모트 플레이 기기 PlayStation Portal 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            소니, 플레이스테이션 전용 리모트 플레이 기기 PlayStation Portal 공개

     * $199.99
     * 듀얼센스 컨트롤러의 기능을 내장
     * 8인치 1080p 60fps LCD
     * Wi-Fi로 PS5에 접속해서 원격 플레이를 지원
     * 3.5mm 오디오잭
     * PS VR2 게임이나, PlayStation Plus Premium 에 포함된 클라우드 스트리밍 게임은 지원 안됨

   뭔가 하마치 비스므리하게 VPN을 구축하면 실외에서도 리모트플레이가 가능하긴 하겠네요.

   이걸 어떤 경우에 사는거죠???

   거실에 PS5가 있는데 피치 못할 상황에서 방에서나 베란다에 해야할때? 려나요?

   정말 기괴하게 생겼어요..

   크리스마스에 부모님이 플스인줄 알고 자녀들에게 알고 이걸 사주는 비극이 일어나겠죠...

   블루투스 이어폰도 지원안하고, 클라우드 스트리밍도 안되고..
   정말 딱 얘네스러운 기기네요.
"
"https://news.hada.io/topic?id=10545","레노버 노트북에서 저렴한 로직 분석기를 사용하여 Bitlocker 우회하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               레노버 노트북에서 저렴한 로직 분석기를 사용하여 Bitlocker 우회하기

     * 레노버 노트북에서 저렴한 로직 분석기를 사용하여 Microsoft Windows의 전체 볼륨 암호화 기능인 BitLocker를 우회하는 방법에 대한 기사
     * BitLocker의 전체 볼륨 암호화 키(FVEK)는 볼륨 마스터 키(VMK)로 암호화되어 디스크에 저장됩니다. VMK는 신뢰할 수 있는 플랫폼 모듈(TPM)에 저장되어, 같은 컴퓨터에서 부팅할 때만 디스크를 복호화할 수 있습니다.
     * 취약점은 부팅 과정에서 VMK가 TPM과 CPU 사이에서 암호화되지 않은 상태로 전송되어, 이를 캡처하고 디스크를 복호화하는 데 사용할 수 있다는 사실에 있습니다.
     * 저자는 2021년에 100달러 미만으로 구입한 DSLogic Plus 로직 분석기를 사용하여 TPM 교환을 캡처했습니다.
     * SPI(Serial Peripheral Interface) 버스는 신호를 편안하게 획득하기 위해 최소 100MHz의 주파수로 샘플링되었습니다.
     * VMK 키는 POST 단계 후반, 즉 부팅 과정에서 약 14초 후에 사용되었다는 것이 밝혀졌습니다.
     * 캡처된 신호는 SPI, TIST(TPM Interface Specification), TPM 2.0의 세 가지 계층에서 디코딩되었습니다.
     * 키를 반환하도록 요청하는 TPM 명령은 TPM2_Unseal 명령으로, 이를 사용하여 VMK를 획득했습니다.
     * 디스크는 그 후 마운트되어 스티키 키 프로그램을 cmd로 덮어쓰는 방식으로 백도어가 설치되었으며, 부팅 중에 시프트 키를 다섯 번 누르면 SYSTEM 쉘을 제공합니다.
     * 저자는 이 작업을 위해 DSLogic을 사용하는 것이 많은 캡처가 불량이었고, 샘플링 주파수가 겨우 일관된 클럭을 제공했기 때문에 도전적이었다고 지적했습니다.
     * 기사는 이산(물리적) TPM의 사용이 예상대로 시스템 보안을 높이지 않고 보안의 착각을 만들어낸다는 결론을 내립니다. 이 공격을 방어하기 위해서는 펌웨어 TPM(fTPM)을 사용하거나 BitLocker에 PIN이나 암호를 설정하는 것이 권장됩니다.

        Hacker News 의견

     * Bitlocker 취약점에 대한 논의, Microsoft의 디스크 암호화 도구, Lenovo 노트북에서 저렴한 논리 분석기를 사용하여 공격 가능
     * Bitlocker는 암호화된 세션을 사용하지 않아 Man-in-the-Middle (MITM) 공격에 취약
     * Microsoft가 TPM2_StartAuthSession을 구현하고 각 세션 명령에 암호화를 지정하면 문제 해결 가능
     * 일부 노트북 제조사는 노트북이 열릴 경우 신뢰할 수 있는 플랫폼 모듈 (TPM)을 지우는 설정을 제공, Bitlocker 키 또는 백업에 액세스할 수 없는 사용자에게 문제 발생 가능
     * Microsoft 문서는 TPM이 무차별 공격을 방지하기 때문에 이러한 공격을 방지하기 위해 Bitlocker PIN 설정을 권장
     * Bitlocker의 암호화는 노트북에서 하드 디스크를 추출하고 다른 시스템에서 실행하려는 시도에 효과적
     * 복호화 키가 공유 버스를 통해 이동, 시스템의 모든 구성 요소가 키를 가로챌 가능성이 있어 공급망 보안 위험 발생
     * 도난 방지를 위해 사용자는 Bitlocker에 대한 비밀번호를 설정하고 비-수면 모드를 비활성화해야 함
     * Bitlocker의 취약점을 이용하는 동일한 기술은 2021년에 설명됨
     * 일부 사용자는 Windows 보안 조치를 우회하는 오래된 방법이 여전히 작동한다는 것을 재미있게 여기며, 이는 Windows 보안이 대부분 극장적이라는 것을 시사
"
"https://news.hada.io/topic?id=10544","Announcing TypeScript 5.2","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Announcing TypeScript 5.2

   Typescript 5.2 버전이 출시되었습니다.
     * using 선언문을 통한 명시적 자원 관리
     * 데코레이터 메타데이터
     * 명명 혹은 익명 튜플 요소
     * 배열 합치는 메소드 사용이 쉬워짐
     * 배열 복사 메소드
     * WeakMap and WeakSet 키에 기호 형식(symbols) 지원
     * 타입스크립트 구현 파일 확장자에 형식만 존재하는 Import 경로 지원
     * 객체 멤버 입력 시 쉼표 자동입력
     * 인라인 변수 리팩토링 (특정 변수가 특정한 곳에서만 사용할 경우 자동으로 변수값을 주입 후 변수 선언문 삭제. IntelliJ 기반 IDE와 비슷)
     * Inlay 인자 힌트 클릭 가능 (인자 옆에 인자명을 시각적으로 제공하며 이 또한 IntelliJ 기반 IDE와 비슷)
     * 유입되는 유형 호환성 검사 최적화 (유사 타입 분석 속도 향상)
     * 이외 각종 변경 및 수정 사항
          + lib.d.ts (DOM 타입 업데이트)
          + labeledElementDeclarations 속성에 지정되지 않은(undefined) 요소 지원
          + module 및 moduleResolution 속성은 Node.js 환경 설정 내에서 반드시 일치해야 함
          + 병합된 기호에 대한 일관성 있는 export 검사
          + modules 는 항상 namespace 형태로 방출

   배열 합치는 메소드 사용이 쉬워짐
   은
   배열 유니온(한글로 뭐라고 할지 몰라서) 메서드 사용이 쉬워짐

   이 더 적합한 표현 일 것 같습니다 (이조차도 뭔가 어색하지만)

   박뭐시기 급으로 급조한 번역으로 인해 번역 오류 발생에 대한 양해 바랍니다. 게다가 수정도 할 수 없으니...
"
"https://news.hada.io/topic?id=10562","자신의 수원을 굴착하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            자신의 수원을 굴착하는 방법

     * PVC와 가정용 물 호스를 사용하여 자신의 얕은 물 우물을 직접 드릴링하는 방법에 대한 종합적인 지침을 제공하는 기사, 이 방법은 비용 효율적이며 참여적입니다.
     * 설명된 드릴링 방법은 흙과 점토, 포함하여 단단한 점토를 통해 파기에 효과적이지만, 바위를 통해 드릴링하기에는 적합하지 않습니다.
     * 기사는 우물이 수질을 파거나 드릴링해야 한다는 일반적인 오해를 해명하며, 농업용 수도와 잔디 물뿌리기를 위해서는 수질에 도달할 필요가 없다고 주장합니다.
     * DIY 물 우물 드릴링 기법, 또는 ""세척"" 또는 ""분사"" 우물이라고도 불리는 이 기법은, PVC 스케줄 40 파이프의 중심으로 물을 펌핑하는 것을 포함하며, 이 파이프는 드릴 스템과 드릴 비트로 사용됩니다.
     * DIY 기법은 전문 물 우물 드릴러들이 사용하는 회전 비트 방법과 유사하며, 특히 농업용 수도에 대해 지불하고 있는 사람들에게 많은 돈을 절약할 수 있습니다.
     * 웹사이트는 기본 우물 드릴링 단계에 대한 자세한 지침을 제공하며, BENTONITE를 사용하여 더 깊게 드릴링하고, 더 생산적인 드릴링을 위해 금속 드릴 비트로 전환하는 등의 기본 DIY 우물 드릴링 기법을 향상시키는 방법도 제공합니다.
     * 사이트는 또한 적절한 펌프를 선택하는 데 대한 조언을 제공하며, 얕은 우물 펌프 또는 흡입 펌프를 추천하고, 수영장 펌프와 다른 종류의 전송 펌프는 작동하지 않을 것이라고 주장합니다.
     * 기사에는 전 세계에서 사용되는 기법을 보여주는 ""비디오"" 섹션과, 자신의 우물을 성공적으로 드릴링한 사용자들의 이야기를 특징으로 하는 ""성공 사례"" 섹션이 포함되어 있습니다.
     * 기사는 특히 해안가 또는 평지 내륙 지역에 사는 사람들에게 DIY 우물 드릴링 기법의 비용 효율성을 강조하며, 잔디를 물뿌리기와 정원을 관개하는 데 돈을 절약하는 이점을 강조합니다.
     * 저자는 사용자들이 자신의 DIY 우물 드릴링 기법에 대한 개선과 향상을 공유하도록 격려하며, 사이트에 제시된 기법 대부분이 사용자들에 의해 제출되었다고 주장합니다.

        Hacker News 의견

     * 본 기사는 독자들이 개인적인 경험과 조언을 공유하며 자신의 수원을 직접 굴착하는 다양한 방법에 대해 논의합니다.
     * 한 독자는 ""Mother Earth News""를 자원으로 추천하며, 특히 1984년의 한 기사를 언급하고, 갠트리 리그를 사용하여 우물을 파는 자신의 경험을 공유합니다.
     * 폴란드에서는 사람들이 보강용 콘크리트 링을 사용하여 수원을 손으로 파는 것이 일반적이며, 깊이는 최대 30미터, 일일 수량은 최대 5큐빅미터에 이릅니다.
     * 한 독자는 그의 할아버지에 대한 이야기를 공유하는데, 그는 매번 굴착할 때마다 물을 찾는 명성을 가진 성공적인 ""well witcher""였습니다.
     * 스위스에서는 우물을 굴착하려면 도시와 캔톤의 상하수도 부서에서 허가를 받아야 하며, ""proof of utility"", 기술 계획 문서, 그리고 지하수까지 굴착할 경우 추가 분석이 필요합니다.
     * 한 독자는 수원 굴착기와 함께 일한 경험을 공유하는데, 이때는 유압 리프트와 압축 공기를 사용하여 구멍을 청소했습니다.
     * 일부 독자들은 자신의 굴착기를 만드는 것보다 굴착기를 렌트하는 것이 더 실용적일 수 있다고 제안하며, 마이애미에서 굴착하고 석회석을 통과하는 경험을 공유합니다.
     * 한 독자는 허가를 받는 것이 과정에서 가장 어려울 수 있다고 경고합니다.
     * 자신의 수원을 만드는 다양한 기법이 논의되었으며, 이에는 수동 드릴과 사전 제작된 콘크리트 링으로 파는 방법이 포함됩니다.
     * 일부 독자들은 굴착에 실패한 시도를 공유하는데, 이에는 전문 수원 굴착기조차 관통할 수 없는 셰일 매장을 만나는 등이 포함됩니다.
     * 한 독자는 가솔린, 기름, 화학물질에 의한 우발적인 오염으로 인해 집에서 굴착한 물이 오염될 가능성에 대해 우려를 표현합니다.
"
"https://news.hada.io/topic?id=10616","온라인 언어 표현의 경우, ISPs는 얼마나 끔찍한지와 상관없이 감시해서는 안 된다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            온라인 언어 표현의 경우, ISPs는 얼마나 끔찍한지와 상관없이 감시해서는 안 된다.

     * 온라인 표현은 ISP와 플랫폼을 포함한 민간 기업에 의존한다.
     * Tier 1 ISP는 인터넷에서 강력한 역할을 하며 콘텐츠 정책에 영향을 미칠 수 있다.
     * EFF는 인프라 제공업체가 인터넷 콘텐츠를 감시하는 것에 반대한다.
     * Tier 1 ISP인 Hurricane Electric은 자사 정책을 위반하는 사이트로의 트래픽을 방해하고 있다.
     * 피해를 입은 사이트인 Kiwi Farms는 혐오 발언과 공격 계획으로 인해 멸시받고 있다.
     * EFF는 Hurricane Electric이 잘못되었으며 그들의 간섭이 위험하다고 믿는다.
     * Tier 1 ISP는 종종 독점적이어서 차단된 경우 사용자에게는 거의 대안이 없다.
     * ISP 검열은 더 많은 압력을 따르는 선례를 만들어 낼 수 있으며, 합법적인 의사 표현을 차단할 수도 있다.
     * 사이트 차단은 합법적인 의사 표현과 불법적인 의사 표현을 모두 차단한다.
     * 차단 대신, 법 집행 기관은 가해자를 추적하고 기존 법을 집행해야 한다.
     * 데이터 프라이버시 법은 도킹스를 가능하게 하는 데이터 브로커를 대상으로 해야 한다.
     * Tier 1 ISP는 통제 지점이 되지 말고, 언어 경찰로 행동하지 말아야 한다.

        Hacker News 의견

     * 허리케인 일렉트릭은 웹사이트 접근을 차단하는 데서 전문적으로 행동하지 않았다.
     * ISP의 불만에 대한 응답은 경멸적이고 기술적으로 어렵게 이해되었다.
     * 웹사이트의 차단은 그 존재에 직접적인 영향을 미치지 않았다.
     * ISP는 온라인 언어를 감시할 권한을 가지지 않아야 한다.
     * 민간 회사들은 온라인에서 허용되는 것을 너무 많이 통제하고 있다.
     * EFF는 언론의 자유 원칙을 지키기 위해 노력하고 있다.
     * ACLU와 같은 다른 단체들은 같은 입장을 취하지 않을 수도 있다.
     * ISP, 크라우드펀딩 플랫폼 및 결제 처리 업체는 모두 검열에 관여하고 있다.
     * 영향을 받은 웹사이트인 Kiwi Farms는 논란이 있지만 여전히 온라인 상에 존재한다.
     * 이 상황에서는 넷 중립성 문제가 발생하고 있다.
     * Tier 1 공급자들은 싫어하는 엔티티의 경로를 차단할 권한을 가지고 있다.
"
"https://news.hada.io/topic?id=10510","NVIDIA, 2024 회계 연도 2분기 재무 결과 발표회계 연도 2분기 재무 결과 발표

     * 회계 연도 2024년 2분기(2023년 5월~7월)에 135억 1천만 달러(약 17조 9천억 원)의 매출을 기록함.
     * 이는 1분기 대비 88%, 전년 동기 대비 101% 증가한 수치.
     * 특히 영업 이익이 전년 동기 대비 1,263% 증가한 68억 달러(약 9조 2천억 원)를 기록하여 역대 최대 성장을 보여줌.
     * 당초 엔비디아는 2분기 매출을 110억 달러로 예측함.
     * 이러한 증가에는 데이터 센터 매출이 크게 증가한 부분이 영향을 줌.
          + 데이터 센터 매출은 1분기 대비 141%, 전년 동기 대비 171% 증가한 103억 2천만 달러(약 13조 7천억 원)의 매출을 기록함
     * 이에 엔비디아는 2분기 동안 750만 주를 32억 8천만 달러에 환매하고, 현금 배당금을 지급하는 등 주주에게 33억 8천만 달러를 환원함.
          + 250억 달러 규모의 자사주 매입을 계속할 예정이라고 밝힘.
          + 2023년 9월 28일에 주당 0.04달러의 현금 배당을 지급할 예정.
     * 회계 연도 2024년 3분기 전망은 160억 달러로 잡음.


     * 소비자용 그래픽 카드 매출은 24억 9천만 달러로 전 분기 대비 11%, 전년 동기 대비 22% 증가함.
     * 시각화 관련 매출은 3억 7,900만 달러로 전 분기 대비 28% 증가하였으나, 전년 동기 대비 24% 감소함.
     * 자동차 관련 매출은 2억 5,300만 달러로 전 분기 대비 15% 감소하였으나, 전년 동기 대비 15% 증가함.

   2018년에 척후병으로 엔비디아 주식을 소량 산게 있는데, 대량 샀었어야 ㅠ

   최대한 정확하게 적은 것 같긴 한데, 숫자가 틀린 부분이 있으면 알려주세요.

   다시 읽어보니 내용에 잘못된 부분이 있네요.
   영업 이익 어쩌고 하면서 ""역대 최대 성장을 보여줌."" 이라고 적었는데, 본문엔 이런 내용이 없습니다. -_-;;

   그냥 적다 보니 말도 안 되는 매출이 나와서 제 머리가 껴넣었나봅니다....

   아무튼 AI 열풍으로 인해 데이터 센터 매출이 진짜 어어어어어엄청나게 급성장했네요.
   A100이나 H100 등 서버용 GPU 매출도 포함된 것 같은데...

   HN 댓글중에 판매량은 늘지 않았지만, 가격을 두 배로 올려 엄청난 마진이 발생했다고 하네요.

   이런 데이터 센터 매출을 통해 소비자용 GPU도 신경을 좀 써줬으면 좋겠는데....
   둘 다 엄청나게 올려버렸나봐요.

   최근에 그래픽 카드좀 보고 있는데, 4090이 가성비인 게 말이 안된다 생각해요.

   기사 하이라이트만 봐서 흥미진진했는데 판매량 대신 가격을 올려서 달성한 매출이었군요 몰랐네요. 어차피 TSMC 생산량은 한계가 있고 이미 노출이 다 되었을텐데 어떻게 예측치를 많이 상회했나 했더니, 엔비디아 단독으로도 할 수 있는 일이었군요. ㅋㅋ

   다만 앞으로도 지속 가능할지는 의문이군요. 아무리 수요가 높고 공급이 모자란다고 해도 가격을 계속 올릴 수 있나?

   AI 열풍이 지속되는 동안은 꾸준히 올려도 울며겨자먹기로 살 수 밖에 없으니까요
   골드러시때 돈 번건 곡괭이 장사였다는게 여기서도 반복되는 듯 합니다...
"
"https://news.hada.io/topic?id=10502","Awesome 한국어 음성인식","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Awesome 한국어 음성인식

   (SHOW에 더 적합해보이지만 제가 만든 게 아니라서 SHOW 대신 NEWS에 올립니다.)

   ====

   한국어 음성인식을 사용해볼 수 있는 개발자 사이트의 API로 AI-Hub에서 공개한 다양한 테스트셋의 에러율(Character Error Rate) 을 음성인식 API별로 측정한 리포지토리입니다. 본 리포지토리는 다음과 같은 내용을 다루고 있습니다.
     * Return Zero(리턴제로), Google, OpenAI Whisper, ETRI, Naver 등 다양한 음성인식 API를 사용하여 AI Hub 테스트셋에 대한 에러율(Character Error Rate) 측정
     * 한국어 음성인식 평가 방법에 대한 소개

   ====

   본 프로젝트는 다양한 음성인식 API들의 성능을 객관적으로 평가하기 위해 공개되었습니다. 현재 시장에서 제공되는 다양한 음성인식 서비스의 성능 차이를 분석하고, 이를 통해 사용자와 개발자에게 더 나은 접근성을 제공하고자 합니다.

   논문으로 공개되는 자료들은 보통 영어에 대해서만 성능 평가를 하고 WER(Word Error Rate)을 paperswithcode에 공개를 합니다. 하지만 한국어 음성인식은 WER이 아닌 CER(Character Error Rate)로 평가되어야 적절한데 잘 정리된 리더보드를 찾아볼 수가 없었습니다.

   KsponSpeech가 2018년에 첫 공개되었지만, AI-Hub에 내국인만 접근 가능하고 음성인식을 연구하고 개발하는 한국인들이 적은 탓에 다양한 리소스로 공개되지 못했습니다.

   리턴제로는 음성인식을 자체적으로 연구 개발하면서 이러한 리소스를 많은 사람들이 접할 수 있도록, KsponSpeech를 음성인식 분야에서 많이 쓰이는 speechbrain에 기여하여 현재 최신 recipe에서 사용해 볼 수 있고, huggingface에서도 접근할 수 있도록 기여하였습니다.

   최근에는 다양한 종류의 음성 데이터들이 AI-Hub에 공개되었고, 이러한 다양한 데이터 세트에 대하여 한국어 음성인식 엔진이 어디까지 왔는지 평가해보고 알리는 것이 한국어 음성인식의 발전에 도움이 된다고 생각했습니다.
"
"https://news.hada.io/topic?id=10581","FFmpeg Explorer - ffmpeg 필터를 온라인 테스트 해보기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                FFmpeg Explorer - ffmpeg 필터를 온라인 테스트 해보기

     * FFMpeg의 다양한 필터를 브라우저에서 실시간으로 테스트 해볼 수 있음
     * GUI로 필터 그래프를 표시. 필터간 연결을 변경하거나 각 항목의 상세 옵션들을 우측에 리스트해서 보여주고 변경 가능
     * 3초짜리 짧은 영상을 가지고 실시간으로 렌더링해서 결과를 보면서 비교
     * 테스트해본 필터의 실제 입력 커맨드를 보여줘서 카피해서 사용
     * ffmpeg.wasm 으로 구현된 오픈소스
     * 오류 로그를 보고, 오류를 지우는 옵션을 제공
     * FFmpeg에 익숙하지 않은 사람들이나 다양한 필터와 옵션을 실험해보고 싶은 사람들에게 특히 유용

        Hacker News 의견

     * 'FFmpeg Explorer'에 대한 기사, 이 도구는 그래픽 사용자 인터페이스(GUI)를 FFmpeg에 추가하는 도구로, FFmpeg는 멀티미디어 데이터를 다루는 데 사용되는 인기 있는 명령줄 도구입니다.
     * 사용자들은 이 도구를 FFmpeg에 가장 좋은 GUI 추가 중 하나로 칭찬했습니다.
     * 일부 사용자들은 현재 명령줄에서 FFmpeg를 사용하는 제작 시스템에서 FFmpeg Explorer를 사용하는 데 관심을 표현했습니다.
     * 개선을 위한 제안으로는 실시간 미리보기나 갤러리 기능을 추가하여 시각적 탐색을 향상시키는 것, 특히 자막과 오버레이를 삽입하는 작업 등이 있습니다.
     * 도구를 보여주는 데 사용된 데모 비디오의 내용에 대해 일부 우려가 있으며, 일부 사용자들은 더 적절한 비디오로 교체될 수 있다고 제안했습니다.
     * 도구의 GitHub 페이지에는 열린 이슈가 있어, 활발한 개발과 사용자 참여를 나타냅니다.
     * 일부 사용자들은 JavaScript, HTML, CSS로 데스크톱 앱을 만드는 데 널리 사용되는 프레임워크인 Electron을 위한 도구 패키징을 제안했습니다.
     * 도구와 관련하여 보고된 약간의 문제가 있습니다. 예를 들어, 특정 기능이 예상대로 작동하지 않거나 로그 클리어링 기능이 필요한 경우 등입니다.
     * 사용자들은 또한 FFmpeg를 사용하여 GIF를 만드는 잠재적인 사용에 대해 논의하였으며, 이는 도구의 더 넓은 응용에 대한 관심을 나타냅니다.
"
"https://news.hada.io/topic?id=10509","Chandrayaan-3 소프트 랜딩 [비디오]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Chandrayaan-3 소프트 랜딩 [비디오]

     * 우주 탐사 분야에서 중요한 사건인 Chandrayaan-3의 부드러운 착륙에 대한 기사
     * 인도 우주 연구 기구(ISRO)의 임무인 Chandrayaan-3, 인도의 우주 기술에서 점점 두드러지는 중요성
     * Chandrayaan-3 임무와 관련된 다양한 자료 제공, 발사 스트리밍, 브로셔, 비디오 포함
     * 이벤트는 실시간으로 방송되었음, 우주 임무에 대한 대중의 관심과 접근성 증가를 보여줌
     * 기사는 ISRO의 연락처 정보도 제공, 대중 참여와 투명성에 대한 의지를 나타냄
     * 보도 자료는 2023년 8월 5일에 발표되었음, 이벤트의 최신성을 나타냄
     * 기사는 ISRO의 공식 웹사이트에 게시되어 정보의 신뢰성을 보장함
     * 사이트는 또한 ISRO의 활동과 관련된 다양한 다른 자료와 정책을 제공, 인도의 우주 임무에 대한 정보의 종합적인 출처를 나타냄

        Hacker News 의견

     * 인도 우주 연구 기구(ISRO)가 Chandrayaan-3 미션으로 달에 성공적인 부드러운 착륙을 달성했습니다.
     * 미션을 위한 소프트웨어 개발은 복잡했으며, 정밀성과 안전성에 중점을 두었습니다. 소프트웨어는 지정된 장소에 도달하기 위해 모든 오류를 수정하도록 설계되었습니다.
     * 안전성을 정확성보다 우선시하는 결정은 부드러운 착륙을 달성하지 못한 이전 미션인 Chandrayaan-2와 크게 달랐습니다.
     * Chandrayaan-3의 착륙 구역은 500mx500m에서 4000mx4000m로 확대되었고, 적합한 착륙지를 찾는 데 도움이 되도록 추가 센서와 카메라가 추가되었습니다.
     * 착륙 소프트웨어는 오프코스 시나리오를 더 잘 처리하도록 업그레이드되어, 더 유연한 착륙 접근을 가능하게 했습니다.
     * 미션은 달의 남극을 목표로 했는데, 이는 다른 달의 위치에 비해 중요성을 가지고 있고 추가적인 도전을 제시합니다.
     * 미션은 비용 효율적이었으며, 예산은 7500만 달러로, 비슷한 우주 미션에 비해 훨씬 적었습니다.
     * Chandrayaan-3 미션은 널리 축하받았으며 많은 사람들이 실시간으로 시청했으며, YouTube에서 가장 많이 시청된 실시간 비디오 중 하나가 되었습니다.
     * 로버는 다음 몇 시간 또는 아마 내일 출시될 것으로 예상되며, 수명은 한 달의 날(14 지구 일)로 예상됩니다.
"
"https://news.hada.io/topic?id=10557","KHOj - 당신의 디지털 뇌를 위한 AI 개인 비서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     KHOj - 당신의 디지털 뇌를 위한 AI 개인 비서

     * 자신의 노트/문서/이미지 기반으로 검색 및 채팅 가능한 데스크탑 어플리케이션
     * Emacs/Obsidian/웹브라우저에서 활용 가능한 오프라인에서 동작하는 오픈소스 AI 비서
     * LLama-7B 를 이용
"
"https://news.hada.io/topic?id=10531","최첨단 대형 언어 모델인 Code Llama, 코딩용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     최첨단 대형 언어 모델인 Code Llama, 코딩용

     * Code Llama는 코딩 작업을 위해 특별히 설계된 최첨단 대형 언어 모델(LLM)입니다.
     * 코드와 자연어 프롬프트 모두에서 코드와 코드에 대한 자연어를 생성할 수 있습니다.
     * Code Llama는 Llama 2 위에 구축되었으며, 기본 코드 모델, Python 전문 모델, 자연어 지시사항을 이해하기 위해 미세 조정된 모델 세 가지로 제공됩니다.
     * 이 모델은 연구와 상업적 사용 모두에게 무료이며, 코드 작업에서 다른 공개적으로 사용 가능한 LLM들을 능가합니다.
     * Code Llama는 프로그래머가 더욱 견고하고 잘 문서화된 소프트웨어를 작성하는 데 도움이 되는 생산성 도구로, 코드를 배우는 사람들에게 진입 장벽을 낮추는 교육 도구로 사용될 수 있습니다.
     * 이 모델은 Python, C++, Java, PHP, Typescript (Javascript), C#, Bash 등 많은 인기 언어를 지원합니다.
     * Code Llama는 각각 7B, 13B, 34B의 파라미터를 가진 세 가지 크기로 제공되며, 각각 코드와 코드 관련 데이터의 500B 토큰으로 훈련되었습니다.
     * 다양한 모델은 다른 서비스와 대기 시간 요구 사항에 맞춰 제공되며, 34B 모델은 최상의 결과를 제공하고, 작은 모델은 빠르고 낮은 대기 시간을 요구하는 작업에 더 적합합니다.
     * Code Llama는 최대 100,000 토큰의 컨텍스트를 처리할 수 있어, 더 긴 프로그램을 생성하고 더 큰 코드베이스를 디버깅하는 데 유용합니다.
     * Code Llama - Python과 Code Llama - Instruct 두 가지 추가 변형이 미세 조정되었으며, 이들은 각각 Python 코드에 특화되고, 자연어로 도움이 되고 안전한 답변을 생성하는 데 미세 조정되었습니다.
     * Code Llama는 HumanEval과 Mostly Basic Python Programming (MBPP) 코딩 벤치마크를 사용한 벤치마크 테스트에서 다른 오픈 소스, 코드 전용 LLM들과 Llama 2를 능가했습니다.
     * Code Llama를 출시하기 전에 안전 조치가 취해졌으며, 이에는 모델이 악의적인 코드를 생성하는 위험에 대한 정량적 평가가 포함되었습니다.
     * Code Llama의 훈련 레시피와 모델 가중치는 GitHub에서 사용할 수 있으며, 그 개발, 벤치마킹 테스트, 한계, 미래의 도전은 연구 논문에서 자세히 설명되어 있습니다.
     * Code Llama의 창조자들은 AI 모델, 특히 코딩용 LLM이 개방적인 접근법에서 가장 큰 이익을 얻는다고 믿으며, 이를 통해 전체 커뮤니티가 그들의 능력을 평가하고 문제를 식별하고 취약점을 수정할 수 있습니다.
     * 개발자들은 Code Llama를 책임감 있게 사용하도록 권장되며, 이에는 하위 모델 개발, 콘텐츠 정책 정의, 데이터 준비, 모델 미세 조정, 성능 평가 및 개선, 위험 대응, 사용자 상호작용에서의 투명성 및 보고 메커니즘 구축에 대한 지침을 따르는 것이 포함됩니다.
     * Code Llama는 모든 분야의 소프트웨어 엔지니어를 지원하고, 다른 사람들이 Llama 2를 활용하여 연구 및 상업 제품에 대한 새로운 혁신적인 도구를 만드는 데 영감을 주도록 설계되었습니다.

        Hacker News 의견

     * Code Llama는 코딩을 위해 특별히 설계된 새로운 대형 언어 모델입니다.
     * 이 모델은 최대 100,000개의 토큰 컨텍스트를 처리할 수 있으며, 안정적인 생성을 제공합니다.
     * 일부 사용자들은 16k 토큰 이후로 핵심 검색 정확도가 저하되어 100k 컨텍스트의 유용성에 의문을 제기하였습니다.
     * Code Llama의 7B 모델은 GitHub의 Copilot 뒤에 있는 모델인 Codex와 경쟁력이 있다고 봅니다.
     * 사용자들은 34B Python 4 bit quantized 모델의 잠재력에 대해 흥분하고 있습니다.
     * 100K 토큰보다 큰 코드베이스를 처리하는 임베디드 코드 모델에 대한 의문이 있습니다.
     * 이러한 모델의 개발은 이러한 도구를 최적화하기 위한 코딩 관행의 잠재적 변화에 대한 논의를 이끌고 있습니다.
     * 사용자들은 Rust, Linux, genomics, physics modeling 등 다른 도메인에 대한 특정 대형 언어 모델을 만들고 문제를 해결하기 위해 협력하는 가능성에 관심이 있습니다.
     * 최고의 모델인 Unnatural Code Llama는 아직 출시되지 않았으며, 이는 OpenAI의 서비스 이용 약관을 위반할 가능성 때문일 수 있습니다.
     * 사용자들은 Code Llama와 Code Pilot와 같은 도구의 유용성을 GPT-4를 직접 사용하는 것과 비교하고 있습니다.
     * 이러한 모델을 실행하는 데 필요한 하드웨어 요구 사항을 이해하는 데 관심이 있으며, 일부 사용자들은 자신의 소스 코드를 기술 거인에 업로드하지 않고 이러한 모델을 사용하고 싶어합니다.
"
"https://news.hada.io/topic?id=10538","연매출 100억원의 워드프레스 플러그인 제국을 만든 90년생 파키스탄 남자 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             연매출 100억원의 워드프레스 플러그인 제국을 만든 90년생 파키스탄 남자 이야기

   공유해 주시는 글들의 원본 소스가 하나인건 그렇다 치더라도, 3줄 요약이라도 해서 같이 올려주시면 좋겠습니다.
"
"https://news.hada.io/topic?id=10540","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   GN에서 나온 팟 머시기.. 테크 말고 다른 분야도 보여주는 서비스 이름 뭐였져 푸터에도 없고 찾을 수가 없네요 ㅠ

   Show GN: 모든 주제에 대한 GeekNews 를 표방하는 서비스 - 스닙팟
   긱뉴스가 만든것은 아니여서 ^^; Show GN 에 올라왔던 서비스 말씀하시는듯 합니다.

   맞아요 감사합니다! GN 서비스가 아니었군요 ㅋㅋ

   날씨가 오랜만에 좋아서 나들이라도 가볼까 하는데 가깝게 지내던 분이 코로나 확진 뜨는 바람에 안아프길 기도하며 자가 격리하려구요 ㅠㅠ

   3D 프린터에 계속 빠져 있는데요. Printables에 만든 보드게임 도장을 좀 정리해서 올려보려고 준비중입니다.
   보드게임 관련이라 BoardGameGeek 에도 올려서 반응을 보고 싶네요 ㅎ

   지난주말에도 청첩장 이번주말도 청첩장 이번 모임은 과음하지 않고 일요일에 피아노도 좀 치고 블로그 포스팅 해야겠습니다.
"
"https://news.hada.io/topic?id=10620","Llama2가 요약에 있어 GPT-4만큼 정확하며 30배 더 저렴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Llama2가 요약에 있어 GPT-4만큼 정확하며 30배 더 저렴

     * 요약(Summarizing)은 LLM의 가장 실용적인 응용중 하나지만, 요약이 정확하다는 것을 신뢰할 수 있어야 함
     * 비용이나 데이터 접근성 이슈때문에 Llama2 와 같은 오픈소스 LLM을 사용하고 싶지만 정확성에 대한 확신이 서지 않음
     * 실험을 통해서 Llama-2-70b 가 gpt-4 만큼 사실성이 강하고, gpt-3.5-turbo 보다 훨씬 우수하다는 사실을 발견했음
     * Anyscale Endpoint 를 이용해서 Llama 2 7b/13b/70b 와 gpt-3.5/4 를 비교
          + 3자 검층을 거친 373개의 뉴스 보도 문장을 라벨링 하여 각각 정답과 오답을 하나씩 제시
          + 각 LLM들이 어떤 진술이 사실에 근거한 정확한 요약인지 선택하게 함
     * 문제 2가지
          + 작은 모델이 지시를 잘 따르지 않음. 더 큰 모델이 지침을 더 잘 따름. 그래서 다른 LLM을 이용하여 작은 LLM의 출력을 이해하도록 해야 했음
          + 순서 편향. 첫번째로 뭘 제시하는 가에 따라 선택이 달라짐. 그래서 순서를 바꿔서도 확인
     * 결과
          + 사람 : 84% (이전 연구 기준)
          + gpt-3.5-turbo: 67.0% 정답 (순서 편향 이슈가 심함)
          + gpt-4: 85.5% 정답
          + Llama-2-7b: 엄청 심한 순서 편향 이슈. 랜덤 정확도 아래임
          + Llama-2-13b: 58.9% 정답
          + Llama-2-70b: 81.7%
     * 비용 (100K 단어 요약하는데)
          + gpt-4 : $5.48
          + gpt-3.5-turbo : $0.25
          + Llama-2-7b : $0.05
          + Llama-2-13b : $0.09
          + Llama-2-70b : $0.19

   GPT4 비용이 다른 GPT에 비해 압도적이긴 하네요...

   아무 생각없이 썼더니.. 월 $120 쿼타 초과해서 증량 신청했네요.
   현재는 확실히 비싸긴 합니다. 얼른 가격이 GPT-3.5 수준으로 떨어지면 좋겠어요 ㅎㅎ

   저는 요약에는 항상 Kagi의 Universal Summarizer를 이용하긴 합니다.
   ChatGPT보다 간편하다는 생각도 들고, 토큰도 무제한이라...

   근데 한국어가 그냥 결과를 번역해 주는 거라 확실히 GPT 3.5에 비해서도 한국어는 좀 떨어지긴 하더라고요.
   유료로만 쓸 수 있는 엔터프라이즈급 모델이 더 나은 것 같긴 한데, 요약당 1달러였나 그래서 개인 용도로 쓰기엔 부담되더라고요.

   LLM 에서 요약 기능이 중요 선택 요소인건 확실한거 같아요.

   문제는.. 이 실험은 LLM이 요약한게 아니고 요약된 것을 판단한 것이라..
   써보면 GPT-4 가 요약 성능은 확실히 훌륭하더라고요. 한국어 번역도 문제고요.
   GN⁺ 비용때문에 혹했는데.. 아직은 그냥 gpt-4 를 써야할듯 하네요.
"
"https://news.hada.io/topic?id=10568",""친환경" 종이 빨대의 90%에 영구 독성 화학물질 흔적이 포함되어 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ""친환경"" 종이 빨대의 90%에 영구 독성 화학물질 흔적이 포함되어 있다

     * 안트워프 대학에서 수행된 연구에 따르면, ""친환경"" 종이 빨대의 90%가 독성 ""영원한 화학물질"" 흔적을 포함하고 있다는 기사 공개.
     * 이 ""영원한 화학물질"", 공식적으로는 페르- 및 폴리플루오로알킬 물질(PFAS)로 알려져 있으며, 환경이나 우리 몸에 방출되면 분해되지 않음.
     * PFAS는 고콜레스테롤, 면역 반응 감소, 갑상선 질환, 특정 암 위험 증가 등의 건강 효과와 연관되어 있음.
     * 이 연구에서는 종이, 대나무, 유리, 스테인리스 스틸, 플라스틱 등 다양한 재료로 만든 39개 브랜드의 빨대를 테스트하였으며, 모든 빨대의 69%에서 PFAS가 검출되었으나, 종이 빨대에서 가장 많이 발견되었으며, 테스트한 브랜드의 90%에서 PFAS가 발견되었음.
     * 종이 빨대에서 발견된 PFAS 중에는 암과 장기 손상을 포함한 건강 위험으로 인해 2020년부터 전 세계적으로 금지된 페르플루오르옥타노산(PFOA)이 있었음.
     * 대나무 빨대도 테스트한 브랜드의 80%에서 PFAS가 포함되어 있었으며, 플라스틱과 유리 빨대는 PFAS가 덜 흔했음. 스테인리스 스틸 빨대는 가장 안전하게 판명되었으며, PFAS 화합물이 검출되지 않았음.
     * 이 연구는 종이 빨대의 잠재적인 건강 위험에 대한 우려를 제기하며, PFAS는 시간이 지남에 따라 인체와 환경에 축적될 수 있음.
     * 이 연구 결과는 종이와 다른 식물 기반 제품이 플라스틱에 비해 건강과 지속 가능성에 본질적으로 더 나은 것이라는 가정에 도전함.
     * 이 연구는 식품 첨가물 및 오염물 저널에 게재되었으며, 일반적인 사용 중에 PFAS가 종이 빨대에서 누출되는지 여부를 결정하기 위한 추가 연구의 필요성을 제안함.

        Hacker News 의견

     * ""친환경"" 종이 빨대의 90%에 유해 화학물질인 PFAS가 존재하는 문제에 대한 기사
     * 일부 댓글에서는 PFAS가 환경 규제 부족으로 만연해 있어 이것이 플라스틱을 지지하는 캠페인일 수 있다는 의견 제시
     * 이 빨대에 얼마나 많은 PFAS가 있는지, 생산 과정에서 추가되는지, 그리고 대체품보다 의학적으로 중요하거나 높은 수준인지에 대한 정보 요구 증가
     * 일부는 빨대 제조 과정에서 PFAS가 사용되는지, 아니면 환경 오염이 널리 퍼져 있어서 그런지 의문을 제기
     * 몇몇 댓글에서는 빨대의 필요성에 의문을 제기하며, 컵에서 직접 마시는 것이 실현 가능한 옵션이라고 주장
     * 다른 사람들은 파킨슨병과 같은 특정 질병을 가진 사람들에게 빨대가 필요하다고 강조
     * 일부 댓글에서는 무거우며 대부분 유기 화학물질로 만들어져 자원 소비가 높아지는 종이 빨대의 환경 영향에 대한 우려를 제기
     * 몇몇 댓글에서는 빨대의 사회적 필요성에 의문을 제기하며, 밀크셰이크와 같은 두꺼운 음료를 마실 때와 같은 특정 상황을 제외하고는 대부분 불필요하다고 주장
"
"https://news.hada.io/topic?id=10612","스크럼은 암 입니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               스크럼은 암 입니다

     * 25년간 개발했지만, Scrum 만큼 소프트웨어 팀을 쓸모 없게 만드는 것은 없음
     * 몇가지 일화들
          + Poker가 게임이 아니라 플래닝 도구라고 나를 설득하려고 함
          + 더 효율적으로 일하고 싶으면, 프로세스를 제거하는게 아니라 추가해야함
               o 스탠드업, 그루밍, 계획, 회고, 스크럼의 스크럼등 회의의 또 다른 멋진 이름인 ""세레모니""에 참석하게 했음
               o 우리는 하는 일보다 말하는데 시간을 더 보냈음
          + 미팅에서 노트북 사용을 금지하고, 서 있어야 했음. 모두가 집중할 수 있도록 공을 돌리기도 함
          + 소프트웨어를 작성하는 것보다 스토리 포인트를 추정하는데 더 많은 시간을 할애
               o 스토리 포인트는 시간이 아니라 복잡성을 측정하지만, 스프린트에 얼마나 많은 스토리 포인트를 넣을지 결정해야 했음
          + 소프트웨어를 추정하기 위해 티셔츠 사이즈를 사용했음
          + 하나의 스토리포인트를 딜리버 하는데 드는 비용을 측정한다음, 고객이 ""500개의 스토리 포인트"" 패키지를 지불하는 계약서를 쓰게 했음
          + 한 프로젝트의 500 스토리 포인트가 다른 프로젝트의 500 스토리 포인트와 같지 않다는 사실을 알게된 경영진은 당황함. 이 문제를 해결하기 위해 많은 회의를 해야했음
          + 관리자, 스크럼마스터, 제품 오너, 기술 리드가 있다고 상상해볼 것. 그리고 이 모든 사람에게 동시에 대답하거나 아무것도 대답하지 않아야 함
          + 우리가 충분히 빠르게 ""스토리 포인트""를 처리하는지 여부를 알려줘야 하는 사람들로부터 돈을 받았음. 스토리 포인트는 시간이 아니라 복잡성에 관한게 아니었나? 신경쓰지 마세요
     * 나는 애자일을 믿지만 이건 애자일이 아님
     * 우린 전문 스크럼 트레이너를 고용했고, 우리 팀원들에게 비용을 대서 자격증을 취득하게 했음. 스크럼을 이런 저런 방법으로 시도해 보면서 몇년을 보냈음
     * 결과는 항상 같았음: 동작하지 않음
     * 스크럼은 개발팀을 잡아먹는 Cancer임. 스크럼은 개발자를 위한 것이 아니라, 관리자가 자신이 통제권을 갖고 있다고 느끼기 위한 또 다른 도구일 뿐
     * 하지만 스크럼의 가장 좋은 점은 여러분의 눈을 똑바로 바라보며 이렇게 말하는 사람들임
       "" 스크럼이 여러분에게 맞지 않는다면, 여러분이 잘못하고 있는 겁니다. 스크럼은 팀에 적합한 모든 것을 의미합니다.""
       물론이죠

   ""관리자가 자신이 통제권을 갖고 있다고 느끼기 위한 또 다른 도구일 뿐"" 공감가네요.
   스크럼은 가스라이팅의 연속이라고 생각합니다.
     * Agile 20주년 : 실패한 반란
     * 왜 (일부) 개발자들은 Agile 을 싫어하는가
     * 왜 어떤 구글 개발자들은 애자일 개발이 무의미하다고 하는가에 대한 (전) 구글 엔지니어 디렉터의 답변
     * Spotify의 Squad 팀 모델은 실패였다
       ㅤ→ 2012년 유명했던 스포티파이의 ""Scaling Agile"" 백서는 그들의 희망이었을 뿐 완전히 구현되지 않음.
     * Shape Up - 작은 조직이 훌륭하게 일하는 법 [PDF]
       → 작은 팀이 6주 단위로 스프린트,스크럼,백로그,칸반 같은거 없이 제품을 어떻게 만들어 내는지를 설명.
     * 왜 당신의 일일 스탠드업 미팅은 실패하는가

   스크럼은 ""It works in my machine"" 과 유사하다고 생각합니다. 나 (주장하는 사람) 빼고 어디서도 안됨.

   논란을 불러 일으키는 제목과 내용이라, 해당 트윗의 조회수가 450만, 리포스트 4685, 좋아요 2.6만개 정도가 달렸네요.
   뒤따라서 이런 트윗도 합니다.

     스크럼은 공산주의(Communism)와 같음
     모든 곳에서 항상 실패하지만, 당신에게 ""니가 잘못하고 있어서 그래"" 라고 얘기함

   관련 HN 댓글들 : https://news.ycombinator.com/item?id=37289151

   그리고 이 트윗에 달린 3400개의 답변들을 본뒤, 다시 또 트윗을 하나 합니다.
   https://twitter.com/svpino/status/1696869327335571833
     * 첫째, 제게 틀렸다고 말한 사람들의 가장 흔한 직업은 ""애자일 코치""와 ""스크럼 마스터"" 였음. 그들은 스크럼을 매우 선호하지만, 이유를 잘 모르겠음
     * 둘째, 스크럼은 내가 원하는 대로 할 수 있는 것이기 때문에 스크럼은 실패할 수 없음. 스크럼을 수행하는 올바른 방법은 없으므로, 자신에게 맞지 않는다면, 자신이 생각만큼 똑똑하지 않다는 것
     * 셋째, 스크럼은 (그런 경우를 제외하고) 애자일이 아님. 하지만 (그렇지 않은 경우를 제외하고) 워터폴보다는 훨씬 나음. 그리고 아무것도 하지 않는 것이나 모든 것을 동시에 하는 것보다도 나음
     * 넷째, 스크럼과 공산주의를 비교해서 많은 사람들이 트리거 되었음. 그들은 공산주의가 훌륭하다고 말하지만 공산주의 사회에서는 살아본 적이 없다는 것을 알아둘 것. 그들은 자신이 읽은 책과 공산주의 아래에서 피를 흘린 모든 사람들이 ""공산주의를 잘못하고 있다"" 라고 계속 얘기함
     * 마지막으로, 대부분의 사람들은 스크럼을 열렬히 싫어함
     * 어떻게 보든지 간에, 스크럼은 실패임

        Hacker News 의견

     * 스크럼은 전체 비즈니스/아키텍처 그림을 보지 못하는 개발자들을 이용하여 유용한 작업을 수행하는 데 도움이 되는 미팅의 집합으로 여겨집니다.
     * 스크럼은 개발자 수와 거의 선형적으로 확장되는 출력물을 생산하는 데 유용하지만, 고레벨의 기술 개발자를 고용하는 데는 최적의 방법이 아닐 수 있습니다.
     * 스크럼은 마이크로 매니지먼트처럼 느껴지며, 주니어 개발자들을 생산적인 상태로 이끌어줍니다.
     * 스크럼은 연구 요소가 있는 프로젝트나 고도로 동기부여된 팀에게 효과적이지 않을 수 있습니다.
     * 스크럼은 완료까지의 시간과 관련된 알려지지 않은 요소에 제한을 두고, 해결책을 찾는 믿음을 구축하는 데 도움이 됩니다.
     * 스크럼의 프로세스는 괜찮지만, 이름이 그 혜택을 정확하게 대표하지 못할 수 있습니다.
     * 일부 사람들은 스크럼과 같은 형식화된 프로세스를 전문적으로 보이기 위해 사용하며, 자신이 무엇을 하는지 모른다는 사실을 숨기기 위해 사용합니다.
     * 애자일과 스크럼은 같은 것이 아니며, 애자일은 이유가 있는 엔지니어링 세계를 지배하고 있는 훌륭한 프로세스로 여겨집니다.

   방법론이나 프레임워크는 적시적소에 쓰여야 하는 법인데
   그럴듯해 보인다고 죄다 적용하니 애자일과는 반대로 딜레이만 됨
   암이라기보단 약물 오남용으로 부작용에 합병증까지 온 느낌

   이 글로 암이 나았습니다
"
"https://news.hada.io/topic?id=10570","슬랙, 셀룰러 아키텍처로 이전","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            슬랙, 셀룰러 아키텍처로 이전

     * Slack은 지난 1.5년간 중복성(Redundancy)을 늘리고 사이트 실패의 영향을 제한하기 위해 단일 구조에서 셀 기반 구조(Cellular Architecture)로 전환
     * 2021년 6월 네트워크 장애로 Slack 고객들에게 서비스 저하가 발생한 사건 이후 Slack 서비스의 복원력을 향상시키기 위한 필요성에 의해 주도
     * 셀룰러 구조는 각 서비스가 가용 영역(AZ)당 하나의 가상 서비스로 작동하게 해서 한 AZ에서의 실패가 다른 AZ에 영향을 미치지 않음
     * 문제가 있는 AZ에서 트래픽을 배수(Drain)하는 기능도 포함되어 있어, 이를 시스템의 나머지 부분에서 효과적으로 격리
     * 배수 메커니즘은 빠르고, 오류가 없으며, 점진적이고, 배수되는 AZ의 리소스에 독립적으로 설계
     * 셀룰러 구조로의 전환은 사일로잉(Siloing)이라는 전략을 포함, 서비스가 자신의 AZ 내에서만 트래픽을 수신하고 전송하도록 함. 이는 단일 AZ 내의 모든 실패를 포함시키는 데 도움이 됨
     * 트래픽 이동 메커니즘의 구현은 사용자의 쿼리를 핵심 서비스로 라우팅하는 시스템에 집중
     * 새로운 구조는 Envoy 기능인 가중치 클러스터와 RTDS를 통한 동적 가중치 할당을 활용하여 AZ 배수를 지원
     * 이 전환은 Slack의 운영 방식과 서비스 구축 방식을 변경하였으며, 트래픽 관리와 실패 완화에 대한 강력한 새로운 도구를 제공
     * 향후 블로그 게시물을 통해 기술 구현 세부사항에 대해 더 깊게 다루고 새로운 구조가 Slack의 운영에 어떤 영향을 미쳤는지 논의할 것

        Hacker News 의견

     * Slack의 셀룰러 아키텍처로의 이전은 그들의 독특한 운영 및 모니터링 접근법 때문에 관심을 불러일으켰습니다.
     * 회사의 전략은 단일 AWS 가용성 영역(AZ)의 요청을 해결하고, 운영을 단순화하며 모니터링을 용이하게 하는 것입니다.
     * 이 접근법은 클러스터 간의 메트릭을 비교함으로써 단일 클러스터에서의 사건을 쉽게 탐지하고 완화할 수 있게 합니다.
     * 그러나, 이 전략은 대부분의 서비스가 여러 클러스터에서 실행되어야 하므로, 컴퓨트, 캐시 등에서 중복성이 발생합니다.
     * 일부 사용자들은 Slack의 API 요청 시스템의 효율성에 의문을 제기하며, 이는 서비스 백엔드로 수백 개의 RPC를 팬아웃할 수 있습니다.
     * AWS 가용성 영역 친화성을 사용하는 것과 상위 라우팅 지점에서 다운된 AZ를 단순히 드롭하는 것 사이의 차이에 대한 논쟁이 있습니다.
     * AWS USE1에서 모든 것을 실행하는 것의 중복성에 대한 우려가 제기되었으며, USE1과 관련된 문제가 여러 서비스에 영향을 미칠 수 있습니다.
     * 이 아키텍처에서 사용자 데이터가 어떻게 처리되는지, 특히 AZ 배수 시에 대해 의문이 제기되었습니다.
     * 일부 사용자들은 과거에 작업했던 유사한 아키텍처, 예를 들어 Metal Cell이라는 분산 운영 체제에 대해 회상합니다.
     * 새로운 사용자 요청이 도착하지 않더라도, 자원을 많이 사용하는 작업이 분리된 AZ에서 무한정 실행되는 가능성에 대한 문제에 대한 논의가 있습니다.
     * 사용자들은 현재 Slack이 어떤 프로그래밍 언어로 작성되었는지 궁금해하며, 여전히 Hack/PHP인지 묻습니다.
     * 일부 사용자들은 Slack의 성능에 대해 실망을 표현하며, 이를 Discord와 같은 다른 채팅 앱과 불리하게 비교합니다.
"
"https://news.hada.io/topic?id=10582","커모도어 64에서의 Linux","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            커모도어 64에서의 Linux

     * 1980년대의 클래식 홈 컴퓨터인 커모도어 C64에서 리눅스 성공적인 운영에 대한 기사
     * 리눅스 운영 체제는 커모도어 C64에서 매우 느리게 작동하며, 컴퓨터의 제한된 64KiB 메모리 때문에 RAM 확장 유닛(REU)가 필요
     * 시스템은 메모리 관리 유닛(MMU)을 사용하여 가상 메모리를 에뮬레이션
     * 저자는 아직 실제 하드웨어에서 설정을 테스트하지 않았으며 독자들이 경험을 공유하도록 권장
     * 시스템을 구축하려면 'make' 명령과 'mos-c64-clang' 도구를 사용해야 함
     * 커널 구성은 큰 섹션 정렬 때문에 원래 semu 커널과 다름. 더 적합한 커널 구성은 config 하위 폴더에서 찾을 수 있음
     * VICE 에뮬레이터에 필요한 REU 이미지를 모두 조립하기 위해 'mk_linux_reu.py' 스크립트를 사용
     * 시스템을 실행하려면 컴파일된 semu 실행 파일이 포함된 .d64 파일을 생성. 이 파일은 그 후 VICE 에뮬레이터에 로드됨
     * 저자는 GitHub에 필요한 모든 사전 제작 바이너리를 포함한 아카이브를 추가할 계획
     * 저자는 또한 컴파일된 6502 코드를 최적화하여 성능을 향상시키고, 긴 부팅 과정을 피하기 위해 체크포인트 VM을 구현하는 가능성을 언급
     * 기사는 이 프로젝트를 가능하게 한 최소주의 RISC-V32 에뮬레이터인 semu와 llvm-mos 도구의 작업을 인정하며 마무리

        Hacker News 의견

     * Onno Kortman이 semu라는 최소한의 RISC-V 에뮬레이터와 llvm-mos, MOS 6502 프로세서에 대한 LLVM 포트를 사용하여 Commodore 64에서 Linux를 성공적으로 실행하였습니다.
     * 이 과정은 시간이 많이 소요되며, '워프 모드'에서 스크린샷을 생성하는 데 몇 시간이 걸립니다. 실제 C64는 일주일 내에 Linux를 부팅할 수 있어야 합니다.
     * 이 프로젝트는 16MB REU라는 드문 하드웨어를 필요로 합니다. 당시 C64에 사용 가능했던 REU는 256kB와 512kB였습니다.
     * 이 프로젝트는 386에서 Doom3를 실행하는 것과 비교되지만, 386은 현대 PC의 PCI 카드입니다. 이 비교는 기술적으로 가능하다는 것을 제안하지만, 원래 하드웨어의 능력을 대표하는 것은 아닙니다.
     * 원래 SuperCPU 회로도가 사라진 후, 오픈 소스 ""슈퍼 CPU"" 회로도에 대한 요청이 있습니다. SuperCPU와 그 DMA 컨트롤러는 현재 강력한 FPGA를 사용하여 에뮬레이트됩니다.
     * 일부 사용자들은 ""Kung Fu Flash""와 같은 최근의 C-64 액세서리를 실험하고 있으며, 이는 ""슈퍼 스냅샷""을 에뮬레이트 할 수 있지만 REU는 아닙니다.
     * 현대 Linux를 부팅할 수 있는 가장 오래된 하드웨어에 대한 토론이 있으며, 이는 일상적으로 사용할 수 있습니다.
     * 이 프로젝트는 튜링 동등성의 시연으로 간주되며, 충분한 시간이 주어지면 모든 튜링 완전 컴퓨터가 다른 튜링 완전 컴퓨터가 할 수 있는 것을 보여줍니다.
     * 이 프로젝트가 Commodore 64용 작고 다중 작업 운영 체제인 Lunix와 다른지에 대한 질문이 있습니다.
     * 일부 사용자들은 C64에서 Linux를 실행하기 위한 대안적인 방법을 제안하며, 이는 RAM으로 여러 플로피 디스크를 사용하고 필요에 따라 교체하는 것을 포함합니다.
     * 이 프로젝트는 C64가 Linux를 직접 실행하는 것이 아니라 RISC-V 환경을 에뮬레이트하는 것으로 명확히 설명되었습니다.
     * 이 프로젝트는 다른 사람들이 Gameboy에서 RISC-V를 실행하거나 TRS-80 Model 4에 Unix 스타일 시스템을 설치하는 등 비슷한 프로젝트를 고려하게 했습니다.
"
"https://news.hada.io/topic?id=10560","iPad만으로의 여행 꿈 포기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            iPad만으로의 여행 꿈 포기

     * 저자, 테크 열성가, iPad의 유연성과 기능성 제한 때문에 iPad만 가지고 여행하는 아이디어를 포기하기로 결정
     * iPad와 Mac의 오랜 사용자임에도 불구하고, 저자는 iPad의 발전이 느리고 기능이 부족하다고 판단, 특히 Mac과 비교했을 때
     * 저자는 동료들 중에서도 iPad를 전문적인 작업에 통합하려던 이들이 더 유연하고 강력한 Mac으로 돌아가는 추세를 발견
     * 저자의 생산성 요구는 독특하지만, iPad의 유연성 부족은 많은 사용자들에게 공통적인 문제라고 믿음. iPad가 특정 기능을 지원하지 않으면, 사용자들은 벽에 부딪히고 대안을 찾거나 포기해야 함
     * 저자는 iPad의 유연성이 부족한 오디오 시스템 때문에 팟캐스트를 녹음하기 위한 확실한 작업 흐름을 찾는 데 어려움을 겪음. Zoom을 동시에 사용하면서 한 앱에서 마이크 오디오를 녹음할 수 있는 간단한 해결책조차도 iPad가 그의 요구에 더 적합하게 만들 것이라고 언급
     * 저자는 또한 Stream Deck을 언급, 이는 사용자가 버튼을 누르면 작업을 실행할 수 있게 하는 외부 장치. Stream Deck의 iPad 앱이 있지만, Mac이나 PC에서처럼 동일하게 작동하지 않음
     * 저자는 Mac과 iPad의 근본적인 차이는 Mac이 개발자와 사용자에게 원하는 것을 모두 할 수 있게 해주는 반면, iPad는 Apple이 특별히 허용하는 것만 할 수 있게 한다는 결론을 내림
     * 저자는 iPad의 발전을 기다리는 것에 지쳐 MacBook Air를 대신 가지고 여행하기로 결정, 이는 도로 위에서 그가 필요로 하는 거의 모든 것을 처리할 수 있고, 이상한 대안을 찾거나 기술 실패를 감수할 필요가 없음
     * 저자는 언젠가 iPad에서 그가 필요한 모든 것을 할 수 있기를 바라지만, 지금은 한계를 더 이상 밀어붙이지 않고, 그가 iPad로 무엇을 할 수 있는지 Apple이 결정할 때까지 기다릴 것임

        Hacker News 의견

     * 여행의 유일한 장치로서 iPad 사용의 한계에 대한 논의, 사용자 제어와 유연성 면에서 Mac과 iPad의 근본적인 차이를 강조.
     * 전화, 노트북, iPad을 포함한 여러 장치를 소지한 사용자들이 많음, 각 장치의 독특한 사용 사례와 데이터 저장 필요성 때문.
     * iPad 소프트웨어는 하드웨어에 비해 뒤처져 있다는 비판을 받음, 특정 애플리케이션에 대한 사용을 제한하는 인공적인 제한 때문.
     * 일부 사용자들은 Pencil로 PDF와 eBooks에 주석을 달는 등의 특정 작업과 셀룰러 기능 때문에 iPad에 가치를 찾음.
     * iPad Pro는 전문적인 사용을 위한 MacBook을 대체할 수 없다고 봄, Surface Pro 장치가 태블릿만의 여행 경험에 더 적합한 대안으로 제안됨.
     * 일부 사용자들은 iPad를 가지고 여행하는 것의 필요성을 의문시함, 덜 능력있는 Mac으로 보고 여행에 대한 필수성을 의문시함.
     * 일부 사람들에게 iPad는 메시징, 소셜 미디어 브라우징, 비디오 시청을 위한 필요성을 충족시키는 큰 iPhone으로 봄.
     * 일부 사용자들은 GPD MicroPC를 가까운 이상적인 것으로 언급하며, 다른 모든 모바일 장치를 대체할 수 있는 모바일 컴퓨터를 원함.
     * iPad는 일부에게는 장난감으로 봄, 그림 그리기에 적합하지만 일반 목적 컴퓨터와는 같은 클래스가 아님.
     * 기사는 iPad의 업무 적합성이 사례별로 다르다고 강조, 일부 사용자들은 iPad에서 모든 것을 할 수 있지만, 다른 사람들은 그것이 제한적이라고 느낌.
"
"https://news.hada.io/topic?id=10617","구글 지도, 전세계 대상 꽃가루(Pollen) API 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    구글 지도, 전세계 대상 꽃가루(Pollen) API 공개

     * WHO에 의하면 전세계인구 최대 1/3이 알레르기성 비염을 앓고 있으며, 미국 성인의 1/4(6700만명)이 계절성 알레르기를 앓고 있음
     * 기후 변화에 따라 꽃가루가 날리는 계절이 길어지고 심각성이 악화중
     * Pollen API를 통해 알레르기성 꽃가루에 노출될 위험을 줄이고, 정보 기반으로 의사결정을 도움
          + 현지화된 꽃가루 수 데이터
          + 히트맵 시각화
          + 자세한 식물 알레르기 정보
          + 꽃가루 노출을 최소화 하기 위한 행동가능한 팁 제공
     * 건강 관련 기업이나, 휴가/여행등을 위한 앱에서 이 정보를 이용하여 고객에게 맞춤 정보를 제공 가능
     * 구글 맵스 플랫폼 이용 고객이 활용 가능
          + 현재 프리뷰 버전
          + 출시되면 기존의 Air Quality API, Solar API 등처럼 호출당 비용이 정해질 것

   watch
"
"https://news.hada.io/topic?id=10586","애플의 MPW C 컴파일러(2006)가 생성한 일부 오류 메시지들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  애플의 MPW C 컴파일러(2006)가 생성한 일부 오류 메시지들

     * 이 기사는 애플의 MPW C 컴파일러가 생성하는 오류 메시지에 대해 논의하며, 이 메시지들은 컴파일러의 문자열 리소스를 디컴파일하여 발견되었다.
     * 컴파일러의 크기는 324k이며, 기사에서 공유하는 오류 메시지들은 그 중 일부에 불과하다.
     * 오류 메시지 중 일부는 ""문자열 리터럴이 너무 길다 (ANSI가 규정한 것보다 3자 더 허용했다)""나 ""상수를 수정하거나, 상류로 흐르거나, IRS와 논쟁에서 이기거나, 이 컴파일러를 만족시킬 수 없다""와 같이 유머러스하고 비정상적이다.
     * 다른 오류 메시지들은 ANSI 표준과 컴파일러 문서의 특정 섹션을 참조하는 등 더 기술적이다.
     * 컴파일러는 ""typedef 이름이 프로그램의 이 시점에서 나에게 완전히 뜬금없었다""나 ""이 구조체는 이미 완벽한 정의를 가지고 있다""와 같이 사용자의 코딩 습관을 비판하는 오류 메시지도 포함하고 있다.
     * ""이 레이블은 이 레이블을 포함하는 블록 외부에서 goto의 대상이며, 이 블록에는 초기화자가 있는 자동 변수가 있으며, 창이 넓지 않아 이 전체 오류 메시지를 읽을 수 없었다""와 같이 특히 장황한 오류 메시지도 있다.
     * 심지어 컴파일러는 심볼 테이블이 가득 찼을 때 사용자가 애플 딜러로부터 더 많은 RAM을 구입해야 한다는 메시지를 포함하고 있다.
     * 이 기사는 애플의 MPW C 컴파일러가 오류 메시지에 대해 독특하고 재미있는 접근 방식을 강조하며, 이는 기술에 능통한 독자들에게 흥미로울 것이다.

        Hacker News 의견

     * 애플의 MPW C 컴파일러가 생성하는 장난스럽고 유머러스한 오류 메시지에 대한 기사
     * 댓글 작성자들이 고양이 그림이 특징인 아마존의 404 페이지 같은 오래된 오류 메시지에서의 재미와 창의성을 회상
     * 일부 댓글 작성자들이 오류 메시지 중 하나에서 언급된 대로 사용자가 컴퓨터의 RAM을 업그레이드 할 수 있던 시절에 대한 향수를 표현
     * 여러 컴파일러로부터의 가장 웃긴 오류 메시지를 공유하는 여러 댓글 작성자들, 이러한 메시지들이 프로그래밍에 매력과 개성을 더했다는 것을 강조
     * 한 댓글 작성자가 MPW 유틸리티의 독특한 기능, 즉 오류 메시지를 포함한 출력을 명령 형태로 생성하고, 이를 터미널에서 대화식으로 사용할 수 있었다는 것을 회상
     * 기사와 댓글들이 기술 산업에서 더 장난스럽고 사용자 친화적인 접근 방식에서 더 표준화되고 기업 스타일로의 변화를 강조
"
"https://news.hada.io/topic?id=10529","Code Llama - 코딩을 위한 최첨단 거대 언어 모델","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Code Llama - 코딩을 위한 최첨단 거대 언어 모델

     * Meta가 Llama 2를 기반으로 구축된 코딩 전용 모델인 Code Llama를 공개.
     * 코드와 자연어 프롬프트에서 코드 생성이 가능하며, 자체 벤치마크 결과 ChatGPT보다 성능이 뛰어났음.
     * 5,000억 개의 코드 토큰과 관련 데이터로 훈련된 7B, 13B, 34B 모델을 각각 출시.
     * 최대 10만 개의 컨텍스트 토큰을 지원하여 더 긴 프로그램을 작성하거나 상세한 조건, 실제 코드를 프롬프트로 입력하기 용이함.
     * Code Llama는 원본 모델 말고도 2가지 추가 변형으로 출시함.
          + Code Llama - Python: 1,000억 개의 Python 코드 토큰을 추가하여 미세 조정한 모델.
          + Code Llama - Instruct: 50억 개의 명령 토큰으로 미세 조정한 자연어 입력과 코드 출력에 최적화된 모델.
               o 다른 모델은 자연어에 최적화 되어 있지 않아 자연어를 통해 코드를 생성할 때는 이 모델을 사용해야 함.
     * HumanEval, MBPP를 통해 모델의 성능을 측정한 결과 ChatGPT (GPT 3.5) 와 동등하거나 성능이 높은 것으로 나타남.
          + GPT 3.5가 HumanEval에서 48.1%를 기록할 때 Code Llama - Python은 53.7%를 기록함.
          + GPT 4는 67%로 아직 갈 길이 남아 있음.
     * Code Llama가 악성 코드를 생성할 수 있는 위험을 최소화하기 위해 다양한 안전 조치를 추가함.
          + 실제 테스트를 해 보니 ChatGPT에 비해 더 적은 악성 코드를 생성하는 것으로 나타남.

   라이센스는 Llama 와 같네요. MAU 7억명 넘어가면 라이센스를 요청해야합니다.
   뭐 한국회사들은 큰 문제 없을듯 ㅎㅎ
     * 연구 논문
     * Github 저장소
     * 모델 다운로드

   Llama 2와 동일한 라이선스로 출시되었습니다.
   StarCoder도 약간 아쉽다고 알고 있었는데, 이제 진짜 Copilot의 대안이 생긴 걸까요?

   아무튼 이런 거 생각하면 GPT 4가 성능이 진짜 대단하긴 한가 봐요.
   한국어도 잘하고, 벤치마크에서도 GPT 4는 성능이 훨씬 높다고 나오니...

   GPT 3.5도 한국어는 다른 개방형 모델에 비해 월등하고요.

   한국어로도 동작하는 오픈 소스 코드 생성 모델이 생기길 기원합니다.
"
"https://news.hada.io/topic?id=10567","HelloSystem: FreeBSD 기반의 그래픽 OS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    HelloSystem: FreeBSD 기반의 그래픽 OS

     * 기사는 FreeBSD 기반의 새로운 그래픽 운영 체제인 helloSystem을 소개합니다.
     * 이 운영 체제는 창작자를 위해 설계되었으며, 단순성, 우아함, 사용성을 강조합니다.
     * helloSystem의 디자인 철학은 ""더 적지만, 더 나은""이라는 매니트라를 따르며, 간결한 사용자 경험을 제공하는 것을 목표로 합니다.
     * 이 시스템은 특히 맥 운영 체제에서 전환하는 사용자들에게 친숙하게 만들어졌습니다.
     * 무료이며 오픈 소스인 유닉스 계열 운영 체제인 FreeBSD가 helloSystem의 핵심으로 사용되었습니다.
     * helloSystem은 사용자, 리뷰어, 개발자를 위한 다양한 가이드를 제공하며, 시작하는 방법, 문제 해결, 피드백 제공, 아키텍처, 부팅 과정, 그래픽 하드웨어 자동 구성 등 더 기술적인 측면에 이르기까지 다양한 주제를 다룹니다.
     * 이 시스템은 다양한 개발자 도구를 지원하며, 커뮤니티의 기여를 허용합니다.
     * helloSystem의 아이디어와 원칙에 대한 자세한 정보는 기사가 독자들을 GitHub 페이지로 안내합니다: https://github.com/helloSystem/hello.
"
"https://news.hada.io/topic?id=10595","챗지피티 엔터프라이즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              챗지피티 엔터프라이즈

     * 오픈AI, 기업용 보안 및 개인 정보 보호를 제공하는 ChatGPT Enterprise 출시
     * ChatGPT Enterprise, 출시 9개월 만에 포춘 500대 기업의 80% 이상이 도입
     * Block, Canva, Carlyle, The Estée Lauder Companies, PwC, Zapier 등의 업계 선두 기업을 포함한 ChatGPT Enterprise 초기 사용자들, 명료한 의사 소통, 코딩 작업, 복잡한 비즈니스 질문 탐색, 창의적인 작업 등 다양한 작업에 활용
     * ChatGPT Enterprise는 기업용 개인 정보 보호, 보안 및 배포 도구를 제공하여 기업이 자체 데이터를 소유하고 제어할 수 있도록 함
     * GPT-4에 대한 무제한, 빠른 액세스, 더 긴 입력 처리를 위한 확장된 문맥 창, 고급 데이터 분석 기능 제공
     * ChatGPT Enterprise는 Asana와 같은 조직에서 생산성을 향상시키고 가설 검증을 가속화하는 데 효과적으로 적용됨
     * 기업용으로 오늘부터 사용 가능하며, 관리자 콘솔, 도메인 검증, 분석 대시보드, 공유 가능한 채팅 템플릿 등의 기능 포함
     * 오픈AI는 사용자 정의 옵션, 소규모 팀용 가용성, 특정 역할을 위한 강력한 도구 등 추가 기능을 향후에도 제공할 계획
     * 오픈AI는 가능한 많은 기업을 온보딩하고 관심 있는 당사자들이 웹사이트에서 자세히 알아보고 영업팀과 연결하도록 권장함.

        Hacker News 의견

     * OpenAI의 ChatGPT Enterprise는 기업 데이터를 훈련에 사용하지 않는다고 명시하여 기업들을 안심시키고 기술을 받아들이도록 유도한다.
     * 기업들은 자사의 데이터를 공유하는 것에 민감하기 때문에, 기업용 기계 학습 제품에서 기업 데이터를 사용하지 않는 것은 표준 요구 사항이다.
     * OpenAI는 HIPAA 컴플라이언스를 달성하는 등 더 규제가 엄격한 산업에서 고려받기 위해 규정 준수를 강화해야 할 수도 있다.
     * OpenAI의 제공 내용에는 고급 데이터 분석에 대한 무제한 액세스와 32k 토큰 컨텍스트 창이 포함되어 있다.
     * 일부 사용자들은 기업 문서 코퍼스에 대한 세밀한 조정이 포함되지 않은 출시에 실망하고 있다.
     * OpenAI 서비스 사용의 지연 시간과 온프레미스 호스팅된 LLM 사용과의 비교에 대한 우려가 있지만, 전통적인 방법보다 여전히 더 빠르고 정확할 수 있다.
     * Code Interpreter의 새로운 이름은 ""고급 데이터 분석""이다.
     * 출시와 관련된 GitHub 저장소의 사라짐과의 상관 관계에 대한 논의가 진행 중이다.
     * 일부 사용자들은 챗봇이 잘못된 정보를 생성할 수 있는 가능성과 특정 상황에서의 인간의 검토와 제어의 필요성에 대한 우려를 표명하고 있다.
     * 이미 ChatGPT를 사용하여 수익 창출하는 기업이 있는지 여부는 분명하지 않지만, 이 기술은 인상적이며 상업적 응용에 대한 관심이 있다.
"
"https://news.hada.io/topic?id=10597","동기들이 중죄 혐의로 협박할 때","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           동기들이 중죄 혐의로 협박할 때

     * 학우들로부터 선의로 보안 연구를 하다가 법적 위협을 받은 경험을 공유하는 저자
     * 저자와 보안에 관심이 있는 친구들이 Fizz라는 익명의 소셜 미디어 앱에서 취약점을 발견함
     * 그들은 Fizz에 취약점을 책임감 있게 알렸으나, 문제를 해결하는 대신 Fizz가 위협을 보내고 침묵을 요구함
     * 저자는 Electronic Frontier Foundation (EFF)에 법적 도움을 요청하고 Fizz의 위협에 대한 대응을 초안으로 작성함
     * 상황은 친근하게 해결되었고, Fizz는 결국 사용자들에게 문제를 공개함
     * 저자는 경험을 돌아보며 연구를 합법적으로 진행하고 잘 문서화하는 것, 법적 위협에 진정하며 변호사의 지원을 받는 것 등 세 가지 주요 교훈을 공유함
     * 저자는 결론적으로 취약점 공개 과정의 다른 측면에서 경험을 공유하는 다른 연사자에게 이야기를 넘김

        Hacker News 의견

     * EFF의 직원 변호사가 CFAA 위반에 대한 주장에서 과장한 발언을 할 수도 있었다.
     * 연구원들은 허가 없이 관리자 계정을 생성하여 법을 위반한 가능성이 있다.
     * 연구원들은 선의의 의도와 중대한 피해의 부재로 인해 법적인 결과에 직면할 가능성이 적다.
     * Fizz의 변호사들은 형사 소송을 위협함으로써 주의를 기울여야 할 규정을 위반한 실수를 저질렀다.
     * 이 기사는 보안 연구자들에 대한 호의적인 변화를 반영하며, 현재 정보 공개의 처리 방식에 대한 긍정적인 변화를 보여준다.
     * Stanford Daily 기사는 Fizz의 개인 정보 침해와 보안 조치의 부재의 정도를 드러낸다.
     * Fizz의 Ashton Cofer와 Teddy Solomon은 상황에 대해 약하게 대응하고 추가적인 의견 제시를 거부했다.
     * 법적 위협의 결과와 책임의 필요에 대한 논의가 진행 중이다.
     * 보안 정보 공개에서 시행일을 지정하는 가치에 대한 의문이 제기되고 있다.
     * 보안 연구자들이 취약점을 개인 브랜딩을 위해 활용하는 경향에 대한 비판이 있다.
     * 법적인 괴롭힘과 적극적인 메커니즘의 필요성에 대한 도전이 언급되었다.
     * 이 기사는 Fizz가 사용자 데이터 보호 실패를 지적한 점에서 칭찬받고 있다.
"
"https://news.hada.io/topic?id=10520","패키지 매니저 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              패키지 매니저 만들기

     * SQLite 확장의 비공식 패키지 매니저를 만들어 본 방법.
     * 패키지 매니저에 필요한 요소의 설계와 그 과정을 자세히 공개함.
          + 소유자, 이름, 버전, 자산 등 패키지를 설명하는 사양 파일의 설계.
          + 소유자/이름으로 구분되는 계층적 폴더 구조의 설계.
          + 프로젝트, 전역 범위 관리.
          + 패키지 저장소, 깃 저장소, 로컬 파일 등 사양 파일 로케이터 구현.
          + 버전 관리와 latest 버전.
          + 사양 파일에 각 자산별 체크섬 추가.
     * 최종적으로 go 언어로 구현하여 배포하였으며, 62개의 패키지가 등록되어 있음.

     * HN 스레드

   재미있는 이야기 같습니다.

   SQLite 확장에는 종속성이 거의 없어서 종속성을 아예 뺐다고 하는데,
   이렇게 하니 구현이 정말 명확하네요.
"
"https://news.hada.io/topic?id=10518","Chrome에서 Firefox로 전환할 때 팁들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Chrome에서 Firefox로 전환할 때 팁들

     * 문제1: 브라우저 동기화 및 프로필 변경
          + 기본 세팅으로는 크롬의 계정별 동기화처럼 편하지 않음. 내장 프로필 스위처를 실행하려면 실행옵션에 ""-p""를 붙여야함
          + Profile Switcher for Firefox 확장 설치를 추천. 크롬과 비슷한 형식으로 동작함
     * 문제2: 폰트 렌더링
          + 윈도우 환경에서 폰트가 좀더 작고, 글자의 폭이 더 좁아 가독성이 눈에 띄게 떨어짐
          + about:config 에서 cleartype 관련 폰트 렌더링 옵션을 조정하면 나아질 수 있음
          + 하지만 이것은 모니터/OS 에 따라 취향이 다르니 테스트 해봐야 함
     * 문제3: 탭
          + Firefox의 비활성 탭은 구분자가 없음(예전엔 있었는데 2021년에 없어짐)
          + Firefox UI Fix Script를 통해서 예전 스타일을 복구 가능
     * 문제4: 다운로드 관리
          + 업무상 파일을 많이 다운받기 때문에, 스크린 하단에 있는 크롬의 다운로드바를 좋아함
          + 닫기전까지 항상 보이고, OS의 Drag & Drop과 연동됨
          + Firefox는 주소창 옆에 작은 아이곤으로 있고, 별도 윈도우의 다운로드 관리자가 있지만 그닥 유용하지 않음
          + 하지만 이건 해결해주는 확장이 없어서, 어쩔수 없이 워크플로우가 약간 느려지는 것을 감수해야할 듯
     * 문제5: 검색 아이콘과 Pocket
          + URL/검색 추천아래에 보이는 아이콘들은 날 화나게함
          + Settings → Search → Search Shortcuts 에서 비활성화 가능
          + Pocket 역시 about:config 에서 extensions.pocket.enabled = ""false"" 로 비활성화
          + Settings → Homepage 에서 “Sponsored shortcuts” 와 “Pages saved to pocket” 도 비활성화

   ""윈도우 환경에서 폰트가 좀더 작고, 글자의 폭이 더 좁아 가독성이 눈에 띄게 떨어짐"" 이거 지금 한글 확인해봤는데 저는 오히려 파이어폭스 쪽이 가독성이 더 좋은듯. 더 진하게 나오는군요. 별도로 파이어폭스 클리어타입 설정한건 없습니다. 이건 한글, 영문 차이 일수도

   프로필관련해서 저는 multi account container 플러그인을 씁니다. 따로 창을 전환하지 않아도 돼서 좋아요!

   크롬에 대한 흉흉한 소식이 들려올 때마다 깔았다가 적응 못하고 지웠다가 하고있었는데 다시한번 도전 해 봐야겠네요

   와! 제 프로젝트도 포함되어 있네요
     * Lepton - Firefox의 새로운 UI 개선 프로젝트

   아앗 이거 본거 같다 하면서 적었는데 예전에 올리셨던거 맞군요! 축하드립니다 ㅎㅎ

   넵 감사합니다

   포크 브라우저들에 빌트인으로 포함되어 있어서 따로 업뎃하기 귀찮으신 분들은 다음 플젝을 쓰시면 되요.
     * https://github.com/WaterfoxCo/Waterfox
     * https://github.com/Floorp-Projects/Floorp

   firefox 의 최대 장점은 탭이 아무리 많아져도 최소 탭 width 가 있다는 점입니다. 다른 브라우저들은 정말 무슨 탭인지 전혀 못알아볼 정도로 폭이 줄어들어서..

   ""문제 1: 프로필 관리"" 의 경우, 별도로 플러그인을 설치하기 싫다면
    1. 일단 firefox를 기본 프로필인 채로 그냥 킨 뒤
    2. 주소창에 about:profiles 를 입력해서 들어간 다음에
    3. 원하는 프로필에 대해 ""새 브라우저에서 프로필 실행"" 을 누르는 방법도 있습니다.

   프로필을 통째로 교체하는 것까지는 원하는 게 아니라, 단지 같은 사이트에서 여러 계정으로 다중 로그인하기만을 원한다면 컨테이너 기능을 추천하고 싶네요.
   https://addons.mozilla.org/ko/firefox/addon/multi-account-containers
   이 플러그인 외에도, 개인정보 보호 측면에서 접근하신다면, 같은 기능을 사용하는 사이트 전용 격리 플러그인이 많이 있습니다. (구글이나 페이스북 등)

   firefox를 벋어날 수 없는 이유가 있다면 단 하나는 multi-accouint-containers 입니다. !

   Temporary Containers 확장을 사용하면 여러 계정으로 사이트를 테스트할 때 아주 편합니다. 임시로 컨테이너를 새로 만들어주기 때문에, 저장해둔 비밀번호 같은 것들을 모두 공유할 수 있기도 해서 크롬 프로필 여러개 띄우는 것보다 더 편하고, 찌꺼기도 남지 않아요.

   Edge를 쓰고 있는데, Firefox로 옮겨야 하나 고민입니다.
   Edge는 탭을 많이 열면 좀 힘들어 하더군요. 가끔 강제 종료도 되고...

   brave도 좋습니다

   오 프로파일 관리는 좋네요 좀 아쉬웠었는데
"
"https://news.hada.io/topic?id=10551","온리온 서비스를 위한 프루프-오브-워크 방어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        온리온 서비스를 위한 프루프-오브-워크 방어

     * 본 기사는 양파 서비스를 위한 작업증명(PoW) 방어 기능의 도입을 발표하며, 이는 검증된 네트워크 트래픽을 우선시하고 서비스 거부(DoS) 공격을 방지하는 것을 목표로 합니다. 이 기능은 Tor 0.4.8의 새로운 릴리스의 일부입니다.
     * PoW 방어 메커니즘은 정상 상황에서는 비활성화 상태를 유지하여 사용자 경험을 원활하게 합니다. 그러나 양파 서비스가 스트레스를 받을 때, 들어오는 클라이언트 연결에 점점 복잡한 작업을 수행하도록 요청합니다.
     * 양파 서비스는 이러한 연결을 클라이언트가 보여준 노력 수준에 따라 우선 순위를 매깁니다. 이 PoW 메커니즘은 대규모 공격을 비용이 많이 들고 비현실적으로 만들어 공격자를 단념시키는 것으로 예상되며, 합법적인 트래픽에 우선 순위를 부여합니다.
     * 이 메커니즘의 필요성은 양파 서비스의 고유한 설계에서 비롯되며, 이는 IP 주소를 숨김으로써 사용자의 개인 정보를 우선시합니다. 이 설계는 양파 서비스를 DoS 공격에 취약하게 만들었고, 전통적인 IP 기반의 속도 제한은 불완전한 보호책이었습니다.
     * PoW 메커니즘은 기본적으로 꺼져 있는 티켓 시스템처럼 작동하지만, 네트워크 스트레스에 적응하여 우선 순위 큐를 생성합니다. 양파 서비스에 접근하기 전에 클라이언트는 작은 퍼즐을 풀어 ""작업""이 수행되었음을 증명해야 합니다. 퍼즐이 어려울수록 더 많은 작업이 수행되며, 이는 사용자가 서비스를 침략하려는 봇이 아니라 진정한 사용자임을 증명합니다.
     * 공격자가 양파 서비스에 요청을 쇄도하려고 시도하면, PoW 방어는 .onion 사이트에 접근하는 데 필요한 계산 노력을 증가시킵니다. 이 티켓 시스템은 양파 서비스에 대한 대량의 연결 시도를 하는 공격자에게 불리하게 작용하는 것을 목표로 합니다.
     * 일상적인 사용자들에게는, 퍼즐을 푸는 데 필요한 추가적인 계산 노력은 대부분의 장치에서 감당할 수 있습니다. 공격 트래픽이 증가하면, 작업의 노력도 증가하며, 대략 1분의 작업 시간까지 증가합니다. 이 과정은 사용자에게 보이지 않으며, PoW 솔루션을 기다리는 것은 느린 네트워크 연결을 기다리는 것과 비슷합니다.
     * Tor의 PoW 방어 도입은 양파 서비스를 내장된 DoS 보호 기능이 있는 소수의 통신 프로토콜 중 하나로 위치시킵니다. 주요 사이트에서 채택될 경우, 이는 네트워크 속도에 대한 표적이 된 공격의 부정적인 영향을 줄일 것으로 약속하며, 이 시스템의 동적 특성은 트래픽의 급증 동안 부하를 균형있게 유지하고, 양파 서비스에 대한 더 일관되고 신뢰할 수 있는 접근을 보장하는 데 도움이 됩니다.

        Hacker News 의견

     * 본 기사는 Onion 서비스에 대한 공격을 어렵게 만들기 위해 Proof-of-Work (PoW) 방어를 구현하는 제안에 대해 논의한다.
     * PoW 방어는 대규모 봇넷에 대응할 것으로 예상되지 않지만, 작은 규모의 공격에 대비하는 데 도움이 될 수 있다.
     * 이 제안은 DoS 공격 중에도 사용자가 노력을 기울여 연결할 수 있도록 허용한다.
     * 이 제안에 선택된 PoW 알고리즘은 equi-X이다.
     * 이 제안은 클라이언트가 PoW에 더 많은 노력을 기울일수록 더 높은 우선 순위를 얻는 ""입찰"" 시스템을 도입한다.
     * 일부 사용자들은 이런 방어가 더 일찍 구현되지 않았던 것에 놀라며, 사용자 익명성에 미칠 수 있는 잠재적 영향을 의문시한다.
     * PoW 방어는 프록시되는 서비스에 대한 부하를 줄이고 노드 자체에 대한 부하를 줄일 수 있다.
     * 일부 사용자들은 이것이 DDoS 보호를 위한 CDN의 필요성을 제거하고, 이메일 스팸과 바쁜 웹사이트와 같은 다른 영역에 적용될 수 있을 것이라고 제안한다.
     * PoW 방어가 새로운 신원을 얻고 DDoS를 계속하는 악용자를 어떻게 처리할 것인지에 대한 의문이 제기된다.
     * 네트워크를 CDN으로 사용하거나 PoW를 연속 서명에 연결하고 병렬로 검증할 수 있도록 하는 등의 대안 해결책이 제안된다.
     * 고급 서버와 저급 휴대폰 간의 해결 시간에 6배의 차이만 있다는 주장에 대한 회의론이 있다.
     * 일부 사용자들은 이것이 PoW의 좋은 활용 방법이라고 생각하며, 이를 통해 DDoS 공격을 증거 제공의 부담으로 제한할 수 있다고 믿는다.
"
"https://news.hada.io/topic?id=10575","구글 안드로이드 개발의 포로들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            구글 안드로이드 개발의 포로들

     * 기사는 구글이 요구사항을 업데이트할 때 레거시 안드로이드 앱을 유지 관리하는 데 직면한 도전 사례 연구입니다.
     * 저자의 팀은 수년 동안 안정적이었던 안드로이드 앱을 담당했으며, 활발한 개발은 없었습니다.
     * 구글은 모든 앱이 API 레벨 31 이상을 대상으로 하여 앱의 대상 API 레벨보다 높은 안드로이드 OS를 실행하는 장치에서 사용자에게 계속 사용할 수 있도록 요구하는 이메일을 보냈습니다.
     * 저자는 targetSdkVersion을 API 레벨 30에서 33으로 업데이트하고 분석과 관련된 호환되지 않는 의존성을 제거했습니다.
     * 업데이트된 앱은 성공적으로 Google Play Store에 업로드되었고, 처음에는 예상대로 작동하는 것처럼 보였습니다.
     * 그러나 고객은 가장 최신의 애플리케이션 버전을 사용하여 계정에 로그인하는 데 문제가 있다고 보고했습니다. 앱은 물리적인 안드로이드 장치에서 로그인 한 후에 충돌했습니다.
     * 이 문제는 가장 최신의 안드로이드 버전(당시 13)에 특정하였고, 저자는 이 버전에서 앱을 테스트하지 않았다는 것을 깨달았습니다.
     * 저자는 Google Play Store에서 이전 작동 버전으로 되돌리려고 시도했지만, 구글의 제한 때문에 이것이 불가능했습니다.
     * 저자는 그 후 targetSdkVersion을 API 레벨 30으로 되돌리고 Play Store에서 새 릴리스를 만들려고 시도했지만, 이것도 구글의 필수 API 레벨 33 요구사항 때문에 불가능했습니다.
     * 유일한 해결책은 가장 최신의 안드로이드 버전에 대한 충돌을 수정하고 새 릴리스를 만드는 것이었습니다.
     * 저자는 알려진 충돌 문제를 수정하고 새 버전을 릴리스했지만, 앱은 ""리뷰 중"" 상태로 장기간 유지되었습니다.
     * 저자는 구글과 애플이 모바일 앱 개발에 대한 통제를 비판하며, 이것이 개발자가 생산 문제를 해결하는 것을 방해할 수 있다고 주장합니다.
     * 저자는 제품/서비스 개발에 대한 통제를 되찾기 위해 오픈 웹 표준으로 돌아가는 것을 제안합니다.
     * 저자의 경험은 앱 배포를 위해 제3자 플랫폼에 의존하는 것의 잠재적인 함정과 모든 잠재적 사용자 환경에서 철저한 테스트의 중요성을 강조합니다.

        Hacker News 의견

     * 개발자들이 Google의 Android 개발 정책으로 인해 직면하는 도전
     * 개발자들은 새로운 대상 Android API를 지원하기 위해 앱을 업데이트해야 하며, 이는 여러 앱을 유지하는 사람들에게 특히 중대한 작업 부담이 될 수 있음
     * 업데이트는 종종 기존 플러그인을 중단시키고 광범위한 테스트를 필요로 하며, 불편함과 좌절감을 유발함
     * 개발자들은 Google이 이러한 문제를 완화하기 위해 Play Store에 직접 Progressive Web Apps (PWAs)를 제출할 수 있도록 허용해야 한다고 제안함
     * 일부 개발자들은 저자가 최신 Android 버전에서 앱을 테스트하고 문제가 있는 업데이트를 전체 사용자 기반에 배포하는 것을 피하기 위해 단계적인 롤아웃을 사용했어야 한다고 주장함
     * 다른 사람들은 플랫폼의 규모와 복잡성을 고려하면 실수는 불가피하며, Google은 롤아웃을 중단하거나 이전 버전으로 되돌리는 것을 더 쉽게 만들어야 한다고 주장함
     * Google과 Apple이 웹 표준에 대한 통제력을 가지고 있어 개발자들이 오픈 웹 표준으로 돌아갈 수 있는 능력에 영향을 미치는 문제에 대한 우려가 있음
     * 일부 댓글은 후진 호환성을 유지하고 보안성 및 신뢰성을 보장하는 사이의 타협점을 강조함
     * 비평가들은 저자가 이러한 문제를 예상하고 관리하지 못한 것은 전문적인 Android 개발 경험이 부족하다는 것을 반영한다고 주장함
     * 개발자들이 이러한 문제를 피하기 위해 가능한 한 빨리 앱을 항상 업데이트해야 한다는 제안이 있음
"
"https://news.hada.io/topic?id=10625","Spring Boot + Kubernetes 기반에서 웜업 적용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Spring Boot + Kubernetes 기반에서 웜업 적용하기

     * Kubernetes 환경 Spring Boot 기반 웹 애플리케이션(일본의 배달 서비스 '데마에칸')
     * 콜드 스타트의 영향으로 초기 지연 현상 발생, 웜업을 적용하기로
          + 웜업은 가상의 사용자를 시뮬레이션해 필요한 기능과 라이브러리를 미리 로딩하는 전략
     * 웜업을 적용한 방법
          + 워머(warmer) 구현
          + Spring Actuator 커스텀 HealthIndicator 추가
          + Kubernetes 프로브 설정
     * 웜업 적용으로 초기 지연 현상이 크게 개선됨
     * 웜업으로 초기 지연 현상이 개선되는 이유
          + 클래스 로드 사전 진행
          + 프로파일링 정보 사전 생성
          + I/O 연결 설정 사전 진행
     * 웜업을 적용할 때 고려해야 할 점

   라인 엔지니어링 기술 블로그... 국내 탑 IT 기술 블로그가 아닌가 생각됩니다.
   정말 좋은 인재들이 있네요,
"
"https://news.hada.io/topic?id=10530","최첨단 코딩용 대형 언어 모델인 Code Llama","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      최첨단 코딩용 대형 언어 모델인 Code Llama

     * Code Llama는 코딩을 위해 설계된 최첨단 대형 언어 모델(LLM)로, 코드와 자연어 프롬프트 모두에서 코드와 코드에 대한 자연어를 생성할 수 있습니다.
     * 이는 Llama 2 위에 구축되었으며, 세 가지 모델로 제공됩니다: Code Llama (기본 코드 모델), Code Llama - Python (Python 전문), Code Llama - Instruct (자연어 지시사항 이해에 맞춰 조정).
     * Code Llama는 연구 및 상업적 사용에 무료이며, Llama 2와 동일한 커뮤니티 라이선스에 따라 출시되었습니다.
     * 이 모델은 코드 완성 및 디버깅에 사용할 수 있으며, Python, C++, Java, PHP, Typescript (Javascript), C#, Bash 등 많은 인기 언어를 지원합니다.
     * Code Llama는 각각 7B, 13B, 34B 매개변수로 세 가지 크기로 제공되며, 각각 코드 및 코드 관련 데이터의 500B 토큰으로 훈련되었습니다.
     * 이 모델들은 다양한 서비스 및 대기 시간 요구 사항에 맞춰 제공되며, 34B 모델은 최상의 결과를 제공하고, 더 작은 7B 및 13B 모델은 빠르고 낮은 대기 시간을 요구하는 작업에 더 적합합니다.
     * Code Llama 모델은 최대 100,000 토큰의 컨텍스트를 처리할 수 있어, 더 긴 프로그램을 생성하고 더 큰 코드베이스를 디버깅하는 데 유용합니다.
     * Code Llama - Python (Python 코드의 100B 토큰에 특화) 및 Code Llama - Instruct (자연어로 도움이 되고 안전한 답변을 생성하도록 조정)의 두 가지 추가 변형이 조정되었습니다.
     * Code Llama는 벤치마크 테스트에서 코드 작업에 대한 다른 공개적으로 사용 가능한 LLM들을 능가했으며, HumanEval에서 53.7%, Mostly Basic Python Programming (MBPP)에서 56.2%를 기록했습니다.
     * Code Llama와 관련된 위험을 완화하기 위한 안전 조치가 취해졌으며, 악의적인 코드를 생성하는 위험에 대한 정량적 평가를 포함합니다.
     * Code Llama의 훈련 레시피와 모델 가중치는 **Code Llama GitHub 저장소**에서 확인할 수 있습니다.
     * **Code Llama 연구 논문**은 모델의 개발, 한계, 그리고 미래의 도전에 대한 자세한 내용을 제공합니다.
     * 개발자들은 또한 하위 모델을 책임감 있게 개발하는 방법에 대한 지침을 포함하기 위해 Responsible Use Guide를 업데이트했습니다.
     * Code Llama는 모든 분야의 소프트웨어 엔지니어를 지원하고, 다른 사람들이 Llama 2를 활용하여 연구 및 상업용 제품에 대한 새로운 혁신적인 도구를 만드는 데 영감을 주도록 설계되었습니다.

        Hacker News 의견

     * 'Code Llama, 최첨단 대형 언어 모델을 위한 기사'에 대한 댓글이 다른 URL로 이동되었습니다.
     * 댓글의 새로운 위치는 https://news.ycombinator.com/item?id=37248494에서 찾을 수 있습니다.
     * 댓글이 예상보다 빨리 게시되어 이동하게 되었습니다.
     * 원래의 댓글 섹션은 이제 [dead]로 표시되었습니다.
"
"https://news.hada.io/topic?id=10605","ChatGPT로 완성하는 쿠팡 크롤링 봇 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ChatGPT로 완성하는 쿠팡 크롤링 봇

     * ChatGPT로 쿠팡의 상품 정보를 수집하는 크롤링 봇 개발
          + 수집할 컬럼은 상품 이름, 정가, 판매가, 별점, 리뷰 개수, 카드 할인 정보, 적립 정보, 배송 정보
     * 토큰 수 제한을 피하기 위한 HTML 크기 축소 방법 및 프롬프트 작성시 고려 사항
     * 광고 상품 건너띄기
     * DOM 구조가 다른 경우 예외처리
     * 필수 컬럼 확인(상품명, 가격)
     * ChatGPT는 굉장히 유용한 도구이지만, 약간의 디버깅과 수정이 필요 (결국 전문가가 더 큰 도움을 받게 된다)
     * 대량의 데이터를 수집하기 위해 차단 회피에 대해 고려해야 함

   여기 글 자체가 다 GPT로 쓰여진 것 같네요

     (결국 전문가가 더 큰 도움을 받게 된다)

   로 요약되는것 같네요..

   ChatGPT로 크롤러를 만들고 있는데 파싱이나 Xpath 추출에 많은 도움을 받고 있습니다

   gpt로 크롤링 만드는 글이지만 결국 해시스크래퍼 광고군요

   테크 블로그가 다 그런 것 아니겠읍니까.. 흐흐
"
"https://news.hada.io/topic?id=10504","GPT-3.5 Turbo의 세밀 조정 및 API 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    GPT-3.5 Turbo의 세밀 조정 및 API 업데이트

     * OpenAI는 GPT-3.5 Turbo를 위한 세부 조정 및 API 업데이트를 발표하였으며, 개발자들이 특정 사용 사례에 맞게 모델을 맞춤화할 수 있게 하였습니다.
     * GPT-4를 위한 세부 조정이 가을에 가능해질 것으로 예상됩니다.
     * 초기 테스트에서 세부 조정된 GPT-3.5 Turbo가 특정 작업에서 기본 GPT-4 성능을 능가하거나 동등하게 수행할 수 있음을 보여주었습니다.
     * 세부 조정 API를 통해 전송된 데이터는 고객이 소유하며, OpenAI나 다른 조직에서는 다른 모델을 훈련하는 데 사용하지 않습니다.
     * 세부 조정은 개선된 조종성, 신뢰할 수 있는 출력 형식, 맞춤형 톤 등 일반적인 사용 사례에서 모델 성능을 향상시키는 데 사용되었습니다.
     * 세부 조정은 비즈니스가 프롬프트를 단축하면서도 유사한 성능을 보장하고, 이전에 세부 조정된 모델의 두 배인 4k 토큰을 처리할 수 있게 합니다.
     * 세부 조정은 프롬프트 엔지니어링, 정보 검색, 함수 호출 등의 기법과 결합할 때 가장 효과적입니다.
     * 세부 조정 비용은 초기 훈련 비용과 사용 비용 두 가지로 나뉩니다.
     * OpenAI는 또한 babbage-002와 davinci-002를 원래의 GPT-3 기본 모델 대체품으로 제공하며, 이들은 새로운 API 엔드포인트를 통해 세부 조정할 수 있습니다.
     * 기존의 /v1/fine-tunes 엔드포인트는 2024년 1월 4일에 사용 중지될 예정입니다.
     * OpenAI는 세부 조정 배포의 안전성을 보장하기 위해 노력하고 있으며, 세부 조정 훈련 데이터는 그들의 Moderation API와 GPT-4 기반의 검열 시스템을 통해 불안전한 훈련 데이터를 감지합니다.
     * 가까운 미래에 세부 조정 UI가 출시될 예정이며, 개발자들이 진행 중인 세부 조정 작업 및 완료된 모델 스냅샷에 대한 정보에 더 쉽게 접근할 수 있게 될 것입니다.

        Hacker News 의견

     * OpenAI, 약속대로 GPT-3.5 세부조정을 출시, 몇 달 전 GPT-4 API 접근 개방 이후.
     * 충분히 개방적이지 않다는 비판에도 불구하고, OpenAI는 Llama와 Bard와 같은 다른 오픈소스 AI를 앞서는 빠른 혁신으로 인정받음.
     * 세부조정된 GPT-3.5 Turbo로 생성하는 비용은 기본 모델보다 8배 높아, 프롬프트 크기를 크게 줄일 수 있는 사람들에게만 비용 효과적임.
     * 세부조정된 GPT-3.5 Turbo와 Llama2 모델 간의 비교가 요구되며, 후자는 임대 인프라가 필요함.
     * 일부 사용자들은 GPT-3.5 Turbo가 반복적이고 부정확하여 글쓰기와 코딩에 부적합하다고 느끼는 반면, 다른 사용자들은 GPT-4가 훨씬 더 나아지고 교육이나 문제 해결 보조 도구로 유용하다고 느낌.
     * 사용자들 사이에서 원하는 기능은 제3자 도구의 필요성을 제거하기 위한 내장 프롬프트 분할 기능임.
     * OpenAI가 ""안전하지 않은"" 모델을 제공하지 않기로 한 결정이 주목되었으며, davinci-002와 babbage-002 모두 ""안전하지 않은"" 완성에 대해 무한 루프에 빠짐.
     * 세부조정 훈련 데이터는 OpenAI의 Moderation API와 GPT-4 기반의 검열 시스템을 통과하며, 이는 높은 비용 때문에 ""안전성""이 모호할 때만 사용되는 것으로 추측됨.
     * 세부조정 작업에 필요한 토큰 수를 어떻게 계산하고, 기본 모델의 행동에 효과적으로 영향을 미치기 위해 일반적으로 얼마나 많은 세부조정 데이터가 필요한지에 대한 질문이 제기되었음.
     * ""Chat"" 모델의 세부조정 가능성은 흥미롭게 느껴지며, 세부조정된 모델을 사용하여 현재의 AI 탐지기를 우회할 가능성에 대한 질문이 제기됨.
     * 개인정보 보호에 대한 우려가 제기되었으며, OpenAI 또는 Microsoft가 API 호출로부터의 텍스트를 얼마나 오래 저장하는지에 대한 질문이 제기됨.
     * 전반적으로, GPT-3.5 Turbo 세부조정의 출시는 긍정적인 발전으로 봐지며, 16k 세부조정에 대한 기대감이 있음.
"
"https://news.hada.io/topic?id=10566","딥 뉴럴 넷: 33년 전과 33년 후의 모습 (2022)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    딥 뉴럴 넷: 33년 전과 33년 후의 모습 (2022)

     * Yann LeCun 등이 1989년에 발표한 ""Backpropagation Applied to Handwritten Zip Code Recognition"" 논문의 역사적 중요성에 대한 기사, 이 논문은 역전파를 사용하여 신경망을 처음부터 끝까지 훈련시킨 가장 초기의 실제 응용 사례로 간주됩니다.
     * 저자는 PyTorch와 같은 현대 도구를 사용하여 논문의 작업을 재현하려고 시도했으며, 원래 네트워크는 Bottou와 LeCun 1988의 역전파 시뮬레이터 SN (나중에 Lush로 명명)을 사용하여 Lisp에서 구현되었다는 점을 언급했습니다.
     * 원래 네트워크는 SUN-4/260 워크스테이션에서 3일 동안 훈련되었지만, 저자가 MacBook Air (M1) CPU를 사용하여 재현한 것은 약 90초가 걸렸습니다.
     * 저자는 또한 Adam 최적화 도구를 사용하거나 데이터 증강 및 드롭아웃을 도입하고, tanh 활성화 함수를 ReLU로 교체하는 등의 현대 딥러닝 기법을 실험했으며, 이로 인해 오류율이 약 60% 감소했습니다.
     * 저자는 네트워크나 데이터셋의 크기를 확대함으로써 추가적인 향상을 이룰 수 있지만, 이는 계산 비용을 증가시키고 추론 지연을 야기할 수 있다고 제안합니다.
     * 지난 33년 동안 딥러닝의 진보를 되돌아보며, 저자는 기본 원칙은 동일하게 유지되었지만, 데이터셋과 모델의 규모는 크게 증가했으며, 모델을 훈련시키는 데 필요한 시간은 크게 줄었다고 지적합니다.
     * 저자는 2055년까지 신경망이 더욱 커질 것이며, 대부분의 응용 프로그램은 네트워크의 일부를 가볍게 미세 조정하거나, 프롬프트 엔지니어링, 또는 데이터나 모델을 더 작고 특수 목적의 추론 네트워크로 증류함으로써 달성될 것이라고 추측합니다.

        Hacker News 의견

     * 이 기사는 지난 33년 동안 딥 뉴럴 네트워크의 진화를 논의하고 다음 33년에 대한 예측을 제시합니다.
     * 이 네트워크의 원래 훈련은 Sun 4/260 워크스테이션에서 3일 동안 이루어졌으며, 약 14400 와트시의 에너지를 소비했습니다. 오늘날, 동일한 훈련은 MacBook에서 90초 만에 이루어질 수 있으며, 단지 0.5 와트시를 사용하여 에너지 효율성이 거의 30000배 향상되었습니다.
     * 일부 독자들은 2055년에 대한 기사의 예측을 ""메타-선형""이라고 비판하며, 이는 여전히 현재 날짜를 원점으로 하는 ""월드라인 대칭""을 반영한다고 주장합니다. 그들은 예상치 못한 돌파구와 장애물이 많을 수 있는 충분히 큰 시간 프레임이라고 주장합니다.
     * 다음 33년 동안 더 많은 데이터와 더 많은 컴퓨팅 파워로 같은 일을 계속하는 것이 좋을지, 아니면 새로운 접근법을 탐색해야 할지에 대한 논쟁이 있습니다.
     * 일부 독자들은 다음 33년 동안 컴퓨팅의 확장 가능성에 의문을 제기하는 반면, 다른 일부는 그것이 과거처럼 확장될 필요가 없다고 주장합니다.
     * 이 기사는 기계 학습의 기본을 직접적이고 간단한 방식으로 탐색함으로써 많은 논문들이 새로운 복잡한 아키텍처에서 재현하기 어려운 성과로 페이지를 채우는 것과 대조적으로 칭찬받고 있습니다.
     * 독자들은 가장 근본적인 변화가 어떤 모델이 훈련되고 있는지에 있음을 지적하며, 작은 이미지에서 인간 종의 언어적, 시각적 커뮤니케이션으로 이동하고 있습니다.
     * 이 기사는 신경망에 대한 관심의 상승, 하락, 그리고 부활을 목격한 일부 독자들에게 향수를 불러일으킵니다.
     * 일부 독자들은 기술의 미래에 대해 흥분을 표현하는 반면, 다른 일부는 AI가 지배하는 세계에서 인간이 무의미해질 가능성에 대해 우려를 표현합니다.
     * 이 기사는 하드웨어의 발전이 AI의 진화에서 중요한 역할을 하는 것을 입증하며, 일부 독자들은 미래의 발전이 그렇게 극적이지 않을 수도 있다고 주장합니다.
"
"https://news.hada.io/topic?id=10577","Overthewire.org","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Overthewire.org

     * OverTheWire는 해커 커뮤니티로, 워게임 시리즈를 통해 개인들이 보안 개념을 재미있고 참여적인 방식으로 배우고 연습할 수 있도록 돕습니다.
     * 워게임은 온라인과 오프라인으로 진행되며, Bandit, Leviathan, Natas, Krypton, Narnia, Behemoth, Utumno, Maze, Vortex, Manpage, Drifter, FormulaOne, Semtex, HES2010, Abraxas, Monxla, Kishi 등의 이름을 가지고 있습니다.
     * 각 게임은 고유의 SSH 포트를 가지고 있으며, 웹사이트에서 각 게임에 SSH를 사용하여 연결하는 방법에 대한 정보를 제공합니다.
     * 커뮤니티는 Bandit부터 시작하여 Leviathan, Natas 또는 Krypton으로 이동한 다음 Narnia, Behemoth, Utumno, Maze 순으로 게임을 진행하는 특정 순서를 제안합니다.
     * 플레이어들이 문제에 직면하거나 질문이나 제안사항이 있을 경우, 채팅을 통해 OverTheWire 커뮤니티에 가입할 수 있습니다.
     * 커뮤니티는 또한 이러한 교육 게임의 유지 및 개발을 지원하기 위한 기부를 장려합니다.

        Hacker News 의견

     * 게임을 통해 보안 개념을 배우고 연습하는 OverTheWire (OTW) 플랫폼의 가치에 대한 기사
     * OTW는 '스매시 더 스택' 등과 같은 유사한 플랫폼의 커뮤니티의 일부로, IRC 채널에서 활발한 토론이 이루어졌던 곳
     * 커뮤니티는 현재 '좀비 상태'로, 게임은 대부분 최신 상태이지만 동반되는 토론은 줄어들었다
     * Linux 및 보안 개념 학습을 위한 다른 자료로는 linuxsurvival.com, linuxupskillchallenge subreddit, TUI-apps on GitHub가 언급됨
     * 댓글 작성자들은 이러한 커뮤니티의 초기 멤버들이 더 나은 학습 환경을 만드는 데 집중하고 있는 노력을 칭찬함
     * 추천되는 다른 자료로는 hackthissite, websec.fr, microcorruption.com, underthewire.tech가 있음
     * 일부 사용자들은 OTW를 사이버 보안 과정의 일부로 사용한 경험을 공유하였고, 다른 사용자들은 레벨을 완료한 후 이름과 인사말을 남긴 것에 대해 추억을 나눔
     * 한 사용자는 2010년에 작성한 바이너리 역공학 챌린지를 GitHub에서 공유했음
     * 한 사용자는 Linux 생태계를 배우고 탐구하려는 사람들에게 OTW를 추천하고, 함께 문제를 해결하고 토론하기 위한 그룹을 만들자고 제안함
"
"https://news.hada.io/topic?id=10539","AI2 Dolma: 언어모델을 위한 3T 토큰 오픈 코퍼스 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    AI2 Dolma: 언어모델을 위한 3T 토큰 오픈 코퍼스

     * Allen Institute for AI 가 만드는 데이터셋
     * 웹 콘텐츠, 학술 간행물, 코드, 서적 및 백과사전 자료의 믹스
     * 3조(Trillion)개로 현재까지 공개된 것중 가장 큰 규모의 데이터 셋
     * HuggingFace 허브에서 다운로드 가능
     * AI2 ImpACT 라이센스(Artifact의 Risk에 따라 Low/Medium/High로 구분)
"
"https://news.hada.io/topic?id=10592","AppleTV에서 Profobuf를 이용해 암호화 해제 및 광고 제거를 통한 YouTube 광고 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        AppleTV에서 Profobuf를 이용해 암호화 해제 및 광고 제거를 통한 YouTube 광고 차단

     * 기사는 Google의 Protocol Buffer (Protobuf) 데이터에서 광고를 복호화하고 제거하여 Apple TV에서 YouTube 광고를 차단하는 방법에 대해 논의합니다.
     * 저자는 Apple TV와 인터넷 사이에 중간자 프록시를 사용하여 HTTPS 트래픽을 복호화하고 Google이 YouTube에 광고를 채우는 데 사용하는 Protobuf 데이터를 읽었습니다.
     * Protobuf 형식에 결함이 발견되어 저자가 1바이트를 변경하고 효과적으로 광고를 제거할 수 있었습니다.
     * 기사는 네트워크 라우터를 설정하여 악성 광고, 추적, 클릭바이트 등 다양한 유형의 원치 않는 콘텐츠를 차단하는 가이드를 제공합니다.
     * 저자는 FreeBSD와 pfSense를 사용하여 라우터를 구축하고 Google Protocol Buffer 형식의 결함을 이용하여 YouTube 광고를 차단했습니다.
     * 광고를 차단하는 방법을 찾았음에도 불구하고 저자는 콘텐츠 제작자를 지원하고 YouTube Premium을 구입합니다.
     * 기사는 또한 개인 정보 보호와 대역폭 문제로 인해 악성 광고와 행동 추적을 차단하는 것의 중요성에 대해 논의합니다.
     * 저자는 전체 네트워크를 보호하기 위해 암호화 명령 세트가 있는 전용 하드웨어를 사용했습니다.
     * 기사는 또한 DNS 광고 차단 설정, 네트워크 LAN 분리, YouTube 광고 알고리즘 속이기 과정을 다룹니다.
     * 기사는 YouTube Premium의 가치와 악성 광고 및 행동 추적 차단의 중요성에 대한 논의로 마무리됩니다.

   원글이 엄청 긴데요. 과정은 흥미롭지만, 글쓴이도 끝내는 그냥 유튜브 프리미엄 결제해서 사용하고 있다는게 포인트.

        Hacker News 의견

     * AppleTV에서 YouTube 광고 차단 방법에 대한 기사, Protobuf의 특징을 이용해 광고 제거
     * 한 댓글러는 Protobuf의 결함으로 기술된 기사의 표현이 잘못되었다고 주장, 미인식 태그 번호를 무시하는 것은 Protobuf의 확장성을 위한 핵심 설계 특징
     * 같은 댓글러는 Protobuf 인코딩이 해독하는 데 계산 비용이 많이 든다는 주장에 반박, Protobuf는 효율적으로 해독하도록 설계되었다고 주장
     * 다른 댓글러는 The Proxomitron을 이용해 웹 트래픽을 조작하는 경험 공유, 광고 제거 및 사용자 정의 CSS로 페이지 재작성 포함
     * 세 번째 댓글러는 Privaxy의 도커화된 버전 언급, UBlock-origin blocklist 호환 MITM 프록시로 스마트 TV 앱에서 광고 제거
     * 기사는 해킹에 들어가는 생각 과정과 작업을 보여주어 ""어떻게 해커가 되는지""에 대한 실질적인 답변을 제공하며 칭찬 받음
     * 한 댓글러는 TLS 암호화에 대한 CPU 요구 사항에 대한 저자의 추정에 의문을 제기, 현대의 싱글 보드 컴퓨터가 과소평가되었을 수 있다고 제안
     * 다른 댓글러는 사용자 정의 CA 설치를 허용하지 않는 장치에 대한 MITM 방법을 희망, 플래시 메모리를 덤프하고 CA를 교체한 후 덤프를 장치에 다시 업로드하는 것이 유일한 방법일 수 있다고 제안
     * 댓글러는 광고 차단에 대한 다른 접근법 제안, 가짜 클릭을 생성하되 구매 없이 광고주를 공격하면 광고주가 플랫폼에서 철수할 수 있다고 제안
     * 기사는 상세한 작성, 특히 mitm 패치에 대한 단계에 대해 칭찬 받음
     * 한 댓글러는 고급 제품에 대한 광고를 받기 위해 광고 타겟팅을 조작하는 경험 공유, 다른 댓글러는 Apple TV에서 잘못 지역 타겟팅된 광고에 대한 문제 언급
     * 댓글러는 squid 프록시에서 메모리 누수 문제에 대한 경험 공유, 이후 버전에서 수정되었다고 주장
"
"https://news.hada.io/topic?id=10521","Cloud Database Cheat Sheet","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Cloud Database Cheat Sheet

     * AWS,Azure,Google 과 오픈소스/써드파티의 DB 들을 Type에 따라 한개의 테이블로 정리
     * Structured
          + Relational : RDS, SQL DB, Cloud SQL, Oracle/PostgreSQL/MySQL/SQL Server
          + Columnar : Redshift, Synapse Analytics, BigQuery, Snowflake/ClickHouse
     * Semi Structured
          + Key Value : DynamoDB, Cosmos DB, BigTable , Redis/Scylla
          + In-Memory : ElastiCache, Azure Cache for Redis, MemoryStore, Redis/Memcached
          + Wide Column : Keyspaces, Cosmos DB, BigTable, Cassandra/Scylla
          + Time Series : Timestream, Time Series Insights, Bigtable/BigQuery, Influx, OpenTSDB
          + Immutable Ledger : Quantum Ledger DB, Confidential Ledger, CloudSpanner, HyperLedger Fabric
          + Geospatial : Keyspaces, Cosmos DB, BigTable, PostGIS/geomesa
          + Graph : Neptune, Cosmos DB, CloudSpanner, OrientDB/Dgraph
          + Document : DocumentDB, Cosmos DB, Firestore, MongoDB/Couchbase
          + Text Search : OpenSearch, Cognitive Search, CloudSearch, Elastic Search/Elassandra
     * Unstructured
          + Blob : S3, Blob Storage, Cloud Storage, Ceph/OpenIO

   Spanner는 Structured로 분류하는게 더 적합하지 않을까요?
"
"https://news.hada.io/topic?id=10537","OpenCopilot - 오픈소스 AI Copilot","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     OpenCopilot - 오픈소스 AI Copilot

     * 자신만의 제품을 위한 AI Copilot 추가 가능
     * 기존 사용중인 자신의 API와 연동하여 필요할때 호출 가능
          + LLM을 이용하여 사용자의 요청이 API 호출이 필요한지 판단
          + Swagger OpenAPI 3.0 스펙을 지원
          + 자신의 스키마와 API 정의를 입력하여 연동
"
"https://news.hada.io/topic?id=10588","로딩을 위한 UX 디자인 패턴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            로딩을 위한 UX 디자인 패턴

     * 로딩 화면은 시스템이 하는 일에 대한 가시성을 제공하여 사용자 경험을 향상 시킬수 있음.
     * 적절한 로딩 화면을 만들기 위해 고려해야 할 사항이 몇 가지 있음.
          + 디자인에 앞서 로딩 시스템을 확인해야 함.
          + 로딩이 사용자의 입력을 차단하는지, 진행률을 알 수 있는지, 얼마나 많은 정보를 불러오는지, 모바일 경험은 어떤지 등.
          + 패시브 로딩(시스템이 미리 불러오는 것)인지, 티브 로딩(사용자의 행동에 따라 불러오는 것)인지 등.
     * 한 번에 보여주는 양에 따른 변화
          + 복잡한 구성 요소의 경우 하나씩 보여주는 게 좋을 수 있음.
          + 비교적 간단한 구성 요소의 경우 로드가 완료된 후 한 번에 표시하는 게 좋음.
          + 구성 요소의 수가 많으면 지연 로딩이 필요함.
               o 무한 스크롤, 더 보기 버튼, 페이징 등의 접근 방식 활용.
     * 빈도에 따른 변화
          + 계속 변경되는 경우, 로딩을 보여주는 UI를 최소화해야 함.
               o 구글 드라이브가 실시간 저장되는 UI를 참고.
          + 가끔 변경되는 경우 즉시 사용자에게 보여주는게 좋음.
               o 보고 있는 콘텐츠가 업데이트 되었으니, 화면을 새로고침 하라는 팝업 등.
     * 소요 시간에 따른 변화
          + 진행률을 명확하게 알 수 있는지, 아니면 불확실한지 먼저 검토해야 함.
          + 0.1초 이하인 경우
               o 즉시 결과를 보여주면 됨.
               o 몇몇 경우에는 가짜 로딩 화면을 보여주는 게 더 좋을 수 있음.
               o 사용자가 느끼기에 중요한 작업이거나 (저장 등), 사용자가 액션을 취할 수 있는 지연 시간이 필요한 경우 (메일 전송의 되돌리기 버튼 등).
          + 0.1초 ~ 1초 사이인 경우
               o 아주 흔한 지연 시간이고, 사용자의 눈에 띄지 않으므로 로딩 화면을 추가하지 않는 게 좋음.
          + 1초 이상인 경우
               o 1초를 넘기는 순간 사용자가 대기 시간을 인지하게 되므로, 적합한 로딩 화면을 추가하는 게 좋음.
               o 로딩되는 구성 요소가 작은 경우 로딩 스피너가 좋은 선택. (파일 업로드 등)
               o 화면이 바뀌는 경우 스켈레톤 로딩 화면이 좋음.
               o 이미지가 핵심 콘텐츠인 경우 주요 색상을 추출하여 흐리게 처리하면 아주 좋음.
          + 2초 ~ 10초 사이인 경우
               o ""5초 가량 소요됩니다"" 와 같은 시간표시기가 효과적일 수 있음.
               o 진행 표시줄은 항상 좋은 선택임.
               o 몇 가지 단계로 구성된 경우, 해당 단계를 보여주는 것도 방법.
                    # 명확한 단계가 없는 경우에도 일반적인 메시지를 사용할 수 있음. (서버 연결 중 등)
          + 10초 이상 걸리는 경우
               o 진행률을 명확하게 알 수 있는 경우 퍼센트와 남은 시간 등을 표시해주는 게 좋음. (파일 업로드의 50% 등)
                    # 단 99%에서 멈추는 것은 매우 치명적이므로 이런 경우가 발생할 수 있으면 다른 방법을 사용해야 함.
               o 더 오래 걸리는데 진행률을 명확하게 알 수 없으면, 작업이 완료되면 이메일 등으로 알려주겠다고 하고 사용자가 제어할 수 있도록 하면 좋음.
               o 아예 백그라운드에서 작업이 되면서 사용자의 모든 행동을 방해하지 않는 것도 좋음. (구글 드라이브의 업로드 진행 상태 등)

   좋은 글 감사합니다.
     * 즉시 처리되는 요청도 경우에 따라 로딩을 잠깐 보여주는게 더 좋다.
     * 0.1~1초 는 로딩을 안보여주는게 낫다.
       . 저는 250ms 까지는 안보여주는데 이게 1초까지 늘어나도 괜찮을지는 모르겠네용
     * 1초 이상은 화면이 바뀌는 경우 스켈레톤, 아닌 경우 스피너를 사용

   오 로딩화면에 대한 근거를 찾고있던 중이었습니다! 감사합니다 ㅎㅎㅎ
     * HN 스레드

   요약이 너무 길어진 것 같네요... 아무튼 좋은 내용이 많아서 최대한 들고 왔습니다.

   가짜 로딩 화면이 있으면 더 신뢰성이 올라간다는 내용이 흥미롭네요. 헤커 뉴스 쪽에서도 그 주제를 꽤 말하더군요.
"
"https://news.hada.io/topic?id=10541","Aih - 터미널에서 Bard|ChatGPT|Claude2|Llama2 와 대화하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Aih - 터미널에서 Bard|ChatGPT|Claude2|Llama2 와 대화하기

     * Go로 만든 바이너리 (맥/리눅스/윈도우)
     * 내부에서 크롬 브라우저를 실행해서 결과를 터미널로 읽어옴(서비스별로 브라우저에서 수동 로그인 필요)
     * 답변들은 자동으로 시스템 클립보드에 복사됨
     * 대화내역은 history.txt 파일로 저장
     * All-In-One 모드로 모든 AI에게 답변 한번에 받기 가능

   안녕! 저는 Aih의 저자입니다. .v만 입력하면 AI 모델에 영감을 주는 퀘스트를 편집할 수 있는 미니 VI 모드를 도입하는 마일스톤 업데이트가 있습니다. 그런 다음 hjkl, wbyd... 및 :ai를 사용하여 질문을 보내고 :q 취소할 수 있습니다.
   Think2source 도구로서 우리는 차세대 사용자 인터페이스가 언어 사용자 인터페이스(Language User Interface)를 의미하는 LUI가 될 것이라고 믿습니다. 이러한 통찰을 바탕으로 우리는 VI 모드가 심오한 생각, 즉 살아 있는 목소리 외에 우리 언어의 쓰기 형식을 편집하기 위한 훌륭한 도구라고 생각합니다.

   피드백을 즐기고 환영합니다 :)

   저는 Aih의 작가입니다. 친절하게 소개해주셔서 감사합니다.
"
"https://news.hada.io/topic?id=10626","인텔, 실리콘 포토닉스를 사용한 8코어 528스레드 프로세서 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  인텔, 실리콘 포토닉스를 사용한 8코어 528스레드 프로세서 공개

     * 인텔, Hot Chips 2023에서 직접 메쉬-투-메쉬 광섬유 패브릭을 강조
     * 이 기술의 동기는 하이퍼-희소 데이터를 위한 DARPA HIVE 프로그램
     * 인텔, 코어 당 66개의 스레드를 갖는 8코어 프로세서 개발, 중요한 발전
     * 프로세서는 x86 대신 RISC ISA를 사용하며 캐시 라인 활용이 떨어짐
     * 인텔, 광 네트워킹을 사용하고 이러한 프로세서를 단일 OCP 컴퓨트 스레드에 16개 소켓에 패킹
     * 칩 아키텍처에는 멀티스레드 파이프라인과 전기-광학 기능을 위한 고속 I/O 칩이 포함
     * 다이 네트워크와 실리콘 포토닉스를 통해 칩 간에 스위치와 NIC 없이 직접 연결 가능
     * 칩은 EMIB를 사용한 멀티칩 패키지로 패키징되며, 전력 소비는 실리콘 포토닉스가 주도
     * 이 기술은 TSMC 7nm에서 개발되었으며 아직 실험실에서 작업 중
     * 기사는 또한 Innovation 2022에서 선보인 플러그 가능한 커넥터의 부재와 광학 부분에서 Ayar Labs의 참여를 언급

        Hacker News 의견

     * 프로세서는 8개의 코어와 528개의 스레드를 가지며, 코어 당 스레드 수가 많습니다.
     * 스레드는 아주 빠르지 않을 수 있지만, 프로세서에 충분한 작업이 있다면 여전히 유용할 수 있습니다.
     * Marvell은 데이터베이스 작업에 특화된 고수의 스레드를 가진 CPU도 만들었습니다.
     * 실리콘 포토닉스의 사용으로 인해 상호 연결에서 거리에 상관없는 속도를 얻을 수 있습니다.
     * 이 프로세서에 TSMC 7nm를 사용하는 것은 Intel에게는 낮은 순간으로 여겨집니다.
     * 이 프로세서는 개념 증명으로 간주되며 특수한 용도를 가질 수 있습니다.
     * 향후 열 문제를 해결하기 위해 포토닉스가 범용 컴퓨팅에 도입될 수 있습니다.
     * Sun은 과거에 비슷한 개념을 가졌지만, 포기되었습니다.
     * 528개의 스레드의 수학적 배경은 알려지지 않았습니다.
     * 이 프로세서는 그래프 축소 및 데이터플로우 프로그래밍에 유용할 수 있습니다.
     * 이벤트 기반으로 코드를 다시 작성하고 io_uring과 같은 기술을 활용해야 할 필요가 있을 수 있습니다.
"
"https://news.hada.io/topic?id=10534","Salesforce와 Nvidia를 포함한 투자자들로부터 235백만 달러를 모금한 Hugging Face","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Salesforce와 Nvidia를 포함한 투자자들로부터 235백만 달러를 모금한 Hugging Face

     * AI 스타트업 Hugging Face, 시리즈 D 투자 라운드에서 $235 million 성공적으로 모금
     * 이번 투자 라운드에는 Google, Amazon, Nvidia, Intel, AMD, Qualcomm, IBM, Salesforce, Sound Ventures 등의 기술 거물들이 참여
     * 이 투자로 인해 Hugging Face의 가치는 2022년 5월 대비 두 배로 증가, 현재 $4.5 billion으로 평가
     * Hugging Face, AI 코드 저장소, 모델, 데이터셋 허브를 비롯한 다양한 데이터 과학 호스팅 및 개발 도구 제공
     * 회사는 또한 데이터셋 처리 및 모델 평가와 같은 작업을 위한 라이브러리를 포함한 AI 기반 애플리케이션 데모 웹 앱도 제공
     * Hugging Face의 유료 기능에는 AutoTrain (AI 모델 훈련 자동화), Inference API (개발자가 기반 인프라를 관리하지 않고 모델 호스팅 가능), Infinity (생산 모델 데이터 처리 속도 증가) 포함
     * Clément Delangue, Julien Chaumond, Thomas Wolf에 의해 2016년에 창업된 회사는 이후 기계 학습 생성, 테스트, 배포를 위한 플랫폼 개발에 초점을 맞추었음
     * Hugging Face는 플랫폼에 10,000명의 고객과 50,000개의 조직이 있으며, 모델 허브는 100만 개가 넘는 저장소를 호스팅하고 있다고 주장
     * 회사는 또한 여러 오픈 소스 모델의 개발에 기여하고 주요 클라우드 제공 업체와 협력, 일부는 전략적 투자자
     * 최근 투자를 통해 Hugging Face는 연구, 기업, 스타트업 등 여러 분야에서의 지원 노력을 더욱 강화할 계획
     * 지금까지 Hugging Face는 총 $395.2 million을 모금, 이 분야에서 가장 투자를 많이 받은 AI 스타트업 중 하나

        Hacker News 의견

     * AI 회사인 Hugging Face가 Salesforce와 Nvidia를 포함한 투자자들로부터 2억 3천 5백만 달러를 조달하였다.
     * 일부 사용자들은 Hugging Face가 ""실리콘 밸리 사이클""의 초기 단계에 있으며, 현재 VC 투자금을 활용하고 있지만 결국 비즈니스 고객에게 초점을 맞출 수 있다고 추측한다.
     * Nvidia의 AI 회사 투자는 전략적으로 간주되며, 이 돈이 AI 개발에서 Nvidia의 칩 사용을 통해 돌아올 것으로 기대된다.
     * AI/ML 사업의 성격에 대한 의문이 제기되며, 일부는 AI/ML이 제품이 아닌 기능이라고 제안하며, 이 회사들이 정확히 무엇을 판매하는지에 대한 질문을 이끈다.
     * Hugging Face의 비즈니스 모델과 장기적인 생존 가능성에 대한 우려가 표현되며, Docker와의 비교가 이루어지고 그들의 독특한 판매 제안에 대한 질문이 제기된다.
     * 일부 사용자들은 Hugging Face가 커뮤니티 구축과 오픈 소스 모델의 중앙 저장소 역할을 잘 수행하고 있지만, 그들의 상업적 성공과 성장 가능성에 대해 의심한다.
     * ML 모델이 새로운 앱이라는 개념이 도입되어, 모델을 위한 ""앱 스토어""의 잠재력이 제안되며, Hugging Face가 이 분야의 잠재적인 리더로 보인다.
     * Hugging Face의 비즈니스 모델은 금광 열풍 동안 삽을 판매하는 것에 비유되며, 이는 그들이 현재의 AI 붐을 이용하고 있다는 것을 시사한다.
     * 일부 사용자들은 Nvidia가 Hugging Face에 투자하는 것이 직접적인 투자보다는 네트워크 효과를 통해 자신들의 비즈니스를 이롭게 하는 것일 수 있다고 제안한다.
     * 일부 사용자들은 Hugging Face의 가격 책정이 혼란스럽다고 느끼며, 그들의 가격 책정 페이지에서 불일치가 발견되었다.
     * Hugging Face의 조달 자금 계획과 그들이 어떻게 상환할 것인지에 대한 질문이 제기되며, 일부 사용자들은 금융 거품의 가능성에 대해 우려를 표현한다.
"
"https://news.hada.io/topic?id=10565","Os.js - 창 관리자가 있는 오픈소스 자바스크립트 웹 데스크톱 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Os.js - 창 관리자가 있는 오픈소스 자바스크립트 웹 데스크톱 플랫폼

     * OS.js는 창 관리자가 있는 오픈 소스 JavaScript 웹 데스크톱 플랫폼입니다.
     * 이는 애플리케이션 API, GUI 툴킷, 파일시스템 추상화 등 다양한 기능을 제공합니다.
     * 이 플랫폼은 다양한 사용자 요구에 맞춰 유연하고 적응력이 뛰어난 설계를 가지고 있습니다.
     * OS.js는 2009년부터 Anders Evenrud에 의해 개발되어 왔으며, 이는 프로젝트에 대한 장기적인 헌신을 보여줍니다.
     * 사용자가 기능을 더 잘 이해할 수 있도록 실시간 데모와 비디오 데모를 제공합니다.
     * 사용자가 플랫폼을 효과적으로 탐색하고 활용할 수 있도록 포괄적인 문서가 제공됩니다.
     * OS.js의 소스 코드는 공개적으로 이용 가능하며, 이는 투명성을 증진시키고 커뮤니티의 기여를 가능하게 합니다.
     * OS.js에는 사용자들이 플랫폼에 대해 토론하고, 문제를 해결하고, 아이디어를 공유할 수 있는 활발한 채팅과 포럼이 있습니다.
     * 이 플랫폼은 웹 데스크톱 플랫폼에 관심이 있는 기술적으로 능숙한 개인들에게 중요한 도구로, 여러 기능을 하나의 오픈 소스 솔루션으로 결합합니다.

        Hacker News 의견

     * 기사는 창 관리자가 있는 오픈 소스 JavaScript 웹 데스크톱 플랫폼인 OS.js에 대해 논의합니다.
     * 사용자는 웹 데스크톱 개념에 대한 자신의 최애 버전인 windows93.net을 공유합니다.
     * 또 다른 사용자는 웹 데스크톱의 최근 인기 상승을 언급하며 OS.js의 디자인과 문서화를 칭찬합니다.
     * 한 사용자는 OS.js의 속도와 반응성에 대해 논평하며, 실제 Windows 데스크톱보다 더 빠르다고 주장합니다.
     * 사용자는 플랫폼에서의 테트리스 게임에 시각적 문제가 있다고 지적하며, 흐릿한 조각 테두리를 수정하는 해결책을 제안합니다.
     * 또 다른 사용자는 자신의 프로젝트를 공유하는데, 이는 파일 시스템에 대한 개인 인터넷 접근을 중점으로 둔 유사한 개념입니다.
     * 사용자는 OS.js가 특정 프로그램에 대해 HTML과 캔버스를 사용한다고 언급하며, 처음에는 전체가 캔버스에서 렌더링된다고 가정했던 것과는 반대입니다.
     * 한 사용자는 운영 체제의 계층적인 특성에 대해 유머러스하게 논평하며, OS.js는 웹 브라우저 위에, 그리고 Windows 위에 구축되어 있다고 말합니다.
     * 일부 사용자들은 특정 사용 사례를 떠올리지 못하면서도 OS.js에 끌리는 복합적인 감정을 표현합니다.
     * 사용자는 스페이스 바가 필요하기 때문에 휴대폰에서 테트리스를 플레이하는 데 어려움을 겪었다는 경험을 공유합니다.
     * 사용자들은 프로젝트에 대한 호기심과 감탄을 표현하면서도, 그것이 만들어진 실질적인 이유에 대해 의문을 제기합니다.
"
"https://news.hada.io/topic?id=10602","아마존이 Fig를 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              아마존이 Fig를 인수

     * 아마존 웹 서비스(AWS)가 개발자 도구 및 서비스에 특화된 회사인 Fig를 인수했습니다.
     * Fig의 전문성은 AWS의 장기적인 방향성과 결합하여 개발자 경험을 향상시킬 것입니다.
     * 기존 Fig 사용자는 제품을 계속 사용하고 지속적인 지원을 받을 수 있습니다.
     * 유료 Fig 팀 기능은 이제 무료로 제공됩니다.
     * 새로운 사용자는 현재 Fig 제품에 가입할 수 없으며, 기존 고객을 최적화하고 AWS와 통합하기 위해 작업 중에 있습니다.
     * 아마존 + Fig 제품의 미래 계획에 대한 업데이트는 없지만, 터미널/셸 개발자를 위한 혁신 작업을 진행 중입니다.
     * Fig는 수십만 명의 사용자, 22,000개의 GitHub 스타, 13,000명의 Discord 회원 및 400명의 오픈 소스 기여자를 포함한 커뮤니티의 지원에 감사드립니다.
     * Fig는 커뮤니티와 함께 혁신을 계속할 것을 기대합니다.

        Hacker News 의견

     * Fig 제품은 사라질 수 있으며 AWS 호스팅, 아마존 브랜드 제품으로 재등장할 수도 있습니다.
     * 일부 사용자는 Fig와 같은 구독 기반 제품을 사용하는 것에 관심이 없으며 별도의 터미널 애플리케이션을 사용하지 않기를 선호합니다.
     * Fig의 인수는 HackerNews에서 출시 후 빠르게 이루어졌습니다.
     * Fig가 더 이상 존재하지 않을 수도 있지만 판매에 대해 팀에 축하하는 사용자들도 있습니다.
     * MIT 라이선스를 사용하여 Fig의 자동완성 제품을 오픈 소스 버전으로 만들 수 있는 가능성에 대한 추측이 있습니다.
     * Gorilla-CLI와 같은 대체 프로젝트도 있으며 유사한 기능을 제공합니다.
     * Fig가 AWS와 통합되는 방식과 다른 플랫폼과의 호환성 여부에 대한 질문이 있습니다.
     * 일부 사용자는 Fig와 부정적인 경험을 하였으며 이 제품이 성공적인 제품이 되고 인수되었다는 사실에 놀라고 있습니다.
     * 한 사용자는 LLM을 위한 Fig 대안으로 자신의 프로젝트인 Butterfi.sh를 공유합니다.
"
"https://news.hada.io/topic?id=10535","Nvidia, 2024년도 제2분기 재무결과 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Nvidia, 2024년도 제2분기 재무결과 발표

     * 선두 기술 회사인 Nvidia가 2024 회계연도 2분기 재무 결과를 발표했습니다.
     * 이 발표는 Nvidia의 재무 건강과 성과에 대한 통찰력을 제공하므로 중요합니다.
     * 재무 결과는 Nvidia의 주가와 투자자 신뢰에 영향을 미칠 수 있습니다.
     * 발표에는 재무 커뮤니티를 위한 다가오는 이벤트도 포함되어 있으며, 이는 Nvidia의 미래 계획과 전략에 대한 추가적인 통찰력을 제공할 수 있습니다.
     * 엔트리 레벨 소프트웨어 엔지니어로서, 이러한 재무 결과를 이해하는 것은 회사의 안정성과 성장 잠재력을 판단하는 데 도움이 될 수 있습니다.
     * 이 발표는 기술에 능통한 개인들에게 특히 흥미롭습니다. 왜냐하면 이는 기술 산업의 선두 주자 중 하나인 회사의 재무 작업에 대한 일부를 엿보게 해주기 때문입니다.

        Hacker News 의견

     * 댓글 작성자는 2009년에 NVIDIA에서 인턴으로 근무하며, Windows에서 GPU로 작업을 스케줄링하는 주요 클래스를 생성하는 커널 모드 드라이버 팀에서 일했습니다.
     * 댓글 작성자는 NVIDIA가 Intel 및 기타 경쟁사들로부터의 위협에도 불구하고 취약한 상태에서 기술 산업의 강자로 전환했다고 언급합니다.
     * NVIDIA는 칩을 더 많이 팔아서가 아니라 가격을 두 배로 올려 이익률을 크게 늘렸습니다. 이로 인해 그들의 카드를 제조하는 회사들은 이익 증가가 없었습니다.
     * NVIDIA가 설정한 높은 GPU 가격은 Intel, AMD, ARM, Google과 같은 기타 기술 회사들이 새로운 칩을 만들고 현재의 칩을 더 효율적으로 사용하도록 독려하고 있습니다.
     * 댓글 작성자는 NVIDIA를 10년 전에 투자한 결과 눈에 띄는 발전을 이룬 놀라운 회사로 칭찬합니다.
     * 댓글 작성자는 9월에 NVDA 콜 옵션을 팔았으며, 암호화폐의 하락에도 불구하고 AI 때문에 가격이 상승한 것에 놀랐다고 언급합니다.
     * NVIDIA의 수익의 지속성에 대한 의문이 제기되었는데, 그들이 계약이나 서비스가 아닌 자본화된 자산을 팔고 있기 때문입니다.
     * 댓글 작성자는 다음 세 년 동안 GPU 칩에 대한 수요가 현재의 수익을 유지하거나 증가시키고 평가를 유지하는데 충분할지 확신하지 못합니다.
     * NVIDIA의 주식은 전일 대비 시간 외에 10% 이상 상승하여, NVIDIA가 1조 달러 이상에 천정을 찍었다고 생각한 댓글 작성자를 놀라게 했습니다.
     * 댓글 작성자는 이것을 Intel이 소프트웨어 측면을 파악할 수 있다면 큰 기회로 보고 있습니다.
     * NVIDIA의 시간 외 거래는 8% 이상 상승하여, 대략 41달러에서 주당 약 513달러로 상승했는데, 댓글 작성자는 이것을 미친 일로 생각합니다.
     * 댓글 작성자는 NVIDIA가 최고 가치에 근접해 있는지, 아니면 더 성장할 여지가 있는지 의문을 제기합니다.
     * 댓글 작성자는 NVIDIA의 지배력 때문에 사람들이 경쟁사가 시장에 진입하기를 간절히 바라고 있다고 언급합니다.
     * 댓글 작성자는 게임이 이제 NVIDIA의 사업 중 20% 미만을 차지한다는 것을 알게 되어 놀랐습니다.
"
"https://news.hada.io/topic?id=10556","'Elixir'의 동시성 해부","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            'Elixir'의 동시성 해부

     * 글에서는 저자의 Elixir 프로그래밍 언어 경험에 대해 논의하며, 그 중점은 동시성과 병렬성 기능에 있다.
     * 저자는 지난 5-6년 동안 Elixir를 기본 프로그래밍 언어로 사용하며 그 성능과 최소한의 단점을 인정했다.
     * 저자는 Elixir의 동시성 모델을 PHP와 Python과 비교하며, PHP의 동시성 모델은 웹 서버에 의존하고, Python은 Global Interpreter Lock (GIL) 때문에 동시성에 어려움을 겪는다고 주장한다.
     * Elixir는 Erlang과 Erlang 가상 머신 (BEAM) 위에 구축되어 있으며, 이는 많은 수의 경량 프로세스를 실행하도록 설계되어 동시성과 병렬성의 기초를 제공한다.
     * BEAM은 시작할 때 스케줄러에 대한 스레드를 생성하며, 기본적으로 사용 가능한 CPU 코어 당 하나씩 프로세스 스케줄링을 처리한다.
     * 저자는 Elixir와 Erlang의 불변성 함수형 프로그래밍 특성이 고도의 동시성과 병렬성을 달성하기 위해 실용적으로 선택된 것이라고 설명한다.
     * Elixir에서의 프로세스는 상태를 공유하지 않으며, 메시지 전달을 통해 비동기적으로만 통신할 수 있어 안전한 동시 및 병렬 실행을 보장한다.
     * 저자는 Elixir로 코드를 작성할 때, 대부분의 웹 요청이 단일 프로세스 내에서 이루어지므로 이러한 기본 원칙에 대해 크게 걱정할 필요가 없다고 지적한다.
     * Elixir는 동시 작업을 위한 async/await 메커니즘을 제공하며, 이는 Task 모듈에서 구현되고, 열거 가능한 각 항목에 대해 Task를 실행하는 Task.async_stream 함수가 있다.
     * 저자는 Elixir와 Erlang의 동시성과 병렬성에 대한 훌륭한 옵션이 뒤늦게 생각해낸 것이 아니라 런타임의 기초에 빌드되어 있어, BEAM에서의 동시성은 위험하거나 어렵지 않다고 결론짓는다.
"
"https://news.hada.io/topic?id=10508","Prettymapp - Streamlit 웹앱에서 OpenStreetMap 데이터를 이용해 지도 생성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Prettymapp - Streamlit 웹앱에서 OpenStreetMap 데이터를 이용해 지도 생성

     * Prettymapp은 사용자가 OpenStreetMap 데이터로 시각적으로 매력적인 지도를 생성할 수 있게 해주는 웹앱 및 Python 패키지입니다.
     * 이 프로젝트는 Marcelo Prates의 원래 prettymaps 프로젝트를 재작성한 것으로, 속도, 간소화된 구성 인터페이스, 코드 복잡성 감소에 중점을 두고 있습니다.
     * Prettymapp 패키지는 웹앱과 독립적으로 Python에서 직접 사용할 수 있어, 사용자 정의나 자신의 애플리케이션 구축에 유연성을 제공합니다.
     * Prettymapp의 설치는 간단하며 pip(pip install prettymapp)을 사용하여 수행할 수 있습니다.
     * 이 패키지는 사용자가 영역을 정의하고, 다운로드하며, Python 코드를 사용하여 OpenStreetMap 데이터를 플롯할 수 있게 해줍니다.
     * 사용자는 Plot 클래스의 추가 인수(예: shape, contour_width 등)를 사용하여 지도의 모양을 사용자 정의할 수 있습니다.
     * 이 패키지에는 또한 사전 구성된 스타일과 웹앱 예제가 포함되어 있어 참고할 수 있습니다.
     * Prettymapp 프로젝트는 또한 Streamlit 웹앱 컴포넌트를 도입하여 사용성과 접근성을 향상시킵니다.

        Hacker News 의견

     * 'Prettymapp'에 대한 기사, OpenStreetMap 데이터를 Streamlit 웹앱에서 지도로 만들 수 있는 도구
     * 사용자들이 도구를 유용하게 사용하고 경험과 제안을 공유
     * 한 사용자가 Figma 플러그인을 공유, OpenStreetMap 데이터를 가져와 OSM 지도를 사용자 정의하려는 사람들을 위한 것
     * 다른 사용자는 프로젝트에 문서화되지 않았음에도 불구하고 Streamlit에서 앱의 배포 과정이 쉽다고 발견
     * 한 사용자가 도시/마을 이름 대신 GPS 위치에서 지도를 중심으로 설정하는 API 문서화에 관심을 표현
     * 도구의 라이선싱에 대해 한 사용자가 질문, 원본이 AGPL이었고 재작성이 허용적으로 라이선스되었는지 궁금해함
     * 벡터 지도를 제공하는 SAAS 서비스인 Maptiler가 오픈 소스에 대한 회사의 기여를 칭찬하는 사용자에 의해 추천됨
     * 한 사용자가 주류 함수형 프로그래밍과 즉시 모드 GUI의 발전을 Prettymapp의 개발과 비교
     * 사용자들이 Ortelius와 Felt와 같은 다른 지도 사용자 정의 도구를 언급
     * 앱이 HackerNews로부터의 높은 트래픽에 압도당했다는 댓글, 그 인기를 나타냄
"
"https://news.hada.io/topic?id=10511","Ask HN: 오픈소스 주택 설계도를 어디에서 찾을 수 있나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Ask HN: 오픈소스 주택 설계도를 어디에서 찾을 수 있나요?

   오픈 소스 계획의 DB를 찾아 집을 지으려는 사람들.

   국내에서 누구나 볼 수 있는 공개된 주택 설계도로는 정부기관에서 제작하여 배포하는 농촌주택표준설계도와 목조주택표준설계도가 있습니다.
   다만 이것들은 CAD 파일을 제공하지 않는 등 오픈소스라고 보기는 어렵습니다. 그저 누구나 볼 수 있다는 데 의미가 있지요.
     * 농촌주택표준설계도
     * 목조주택표준설계도

        Hacker News 의견

     * Wikihouse, Earthships, Studiolada의 Open Source Home, Open Source Ecology, 그리고 Open Building Institute와 같은 플랫폼에서 오픈 소스 주택 계획을 이용할 수 있습니다.
     * Earthships의 계획은 오픈 소스이지만 무료가 아니며, 반면에 Studiolada의 계획은 무료이지만 프랑스어입니다.
     * Open Source Ecology와 Open Building Institute는 구성 가능한 주택을 홍보하고 있습니다.
     * 태양 노출, 강수량, 강설량, 전망, 그리고 현지 조건과 같은 요소를 고려하지 않을 수 있는 기존 계획을 감안할 때, 주택이 지어질 장소를 고려하는 것의 중요성이 강조됩니다.
     * A Pattern Language 주변의 자재를 사용하여 집을 직접 설계하는 아이디어가 제안됩니다.
     * 주택 계획에 대한 자원으로서의 건축 서적과 귀하의 지역에서의 개발 승인이 권장됩니다.
     * 현지 특정 규정, 건설 접근법, 그리고 변화하는 취향 때문에 '오픈 소스' 개념이 주택에 잘 적용되지 않을 수 있습니다.
     * 영국의 계획 신청은 공개적으로 이용 가능하며, 많은 신청에는 건축 도면/현장 계획이 첨부되어 있습니다.
     * 피닉스 시는 넷 제로 단독 가정용 주택의 계획을 발표했습니다.
     * 헝가리에는 모든 필요한 문서와 함께 건설을 시작할 수 있는 자유롭게 접근 가능한 주택 계획을 만드는 공공 프로젝트가 있습니다.
     * 계획을 사용한 사용자들이 실제 사용 후 계획을 개선할 방법에 대한 'pull requests'를 추가하는 아이디어가 제안됩니다.
     * 간단하고, 쉽게 지을 수 있으며 유지할 수 있는 주택 계획에 대한 열망이 표현됩니다.
     * Pretty Good House 프레임워크가 자원으로 언급되었지만, 계획/도면을 제공하지는 않습니다.
"
"https://news.hada.io/topic?id=10614","접근 가능한 팔레트: 색상 시스템에서 HSL 사용 중지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     접근 가능한 팔레트: 색상 시스템에서 HSL 사용 중지

     * 포스트마크에서 색상 시스템을 재구성한 경험과 이전 팔레트에서 겪은 문제를 작가가 공유합니다.
     * 이전 팔레트의 주요 문제는 색상의 인식된 밝기의 일관성이 없고 색상 변형 간 예측할 수 없는 대비 비율입니다.
     * 작가는 이러한 문제들이 HSL 색상 모델의 고유 결함과 디자인 도구에서 더 나은 대안에 대한 지원 부족으로 인해 발생했다고 설명합니다.
     * 작가는 HSL 대신 인간의 밝기와 채도 인식을 반영하기 위해 설계된 CIELAB 및 LCh 색 공간을 더 나은 대안으로 소개합니다.
     * 작가는 일관된 밝기와 예측 가능한 대비 비율을 갖는 색상 시스템을 구축하기 위한 도구인 Accessible Palette 앱을 소개합니다.
     * 이 앱은 사용자가 밝기 수준을 사용자 정의하고 대비 비율을 제어하며 RGB 또는 CIELAB 색 공간을 기반으로 색상 팔레트를 생성할 수 있게 해줍니다.
     * 작가는 현재 WCAG 2.1 대비 비율 계산의 결함을 논의하고 앱에서 사용되는 Advanced Perceptual Contrast Algorithm (APCA)를 소개합니다.
     * 작가는 독자들에게 최대한 미래 지향적이고 규정 준수를 위해 WCAG 2.1과 APCA 지침을 모두 고려하여 색상 시스템을 구축해보라고 권장합니다.
     * 작가는 Accessible Palette 앱 사용의 이점을 강조하며 질문이나 피드백이 있으면 언제든 연락하라고 독자들을 초대합니다.

        Hacker News 의견

     * 일반 디스플레이 및 인쇄 시스템에서 포화된 빨강과 파랑은 초록보다 어둡습니다.
     * 대비 규칙을 적용하면 색상 선택이 접근 가능해지지만, 이 기사의 기술은 접근 가능하면서도 시각적으로 매력적인 선택을 가능하게 합니다.
     * 포화된 화면 초록은 가능한 포화되지 않지만, 실제 생활에서의 대부분의 초록보다는 포화되어 있습니다.
     * 나무와 풀에서 빨간색과 초록색 채널의 균형은 스테레오그램에서 멋지게 보이게 합니다.
     * WCAG 2.1의 색상 대비 권장 사항은 때로는 충분한 대비가 없는 샘플보다 읽기 어려운 결과를 낼 수 있습니다.
     * 이 기사는 색상에 대한 포괄적인 자료에 대한 링크를 제공합니다.
     * 댓글의 작성자는 ClickHouse에서 로그를 색칠하는 데 이 기사의 생각을 활용합니다.
     * APCA는 WCAG 2의 색상 대비 알고리즘의 잠재적인 후계자로 언급됩니다.
     * 색상 작업 시 도구와 알고리즘은 단지 수학적 근사치에 불과하므로 눈을 믿는 것이 중요합니다.
     * CSS color() 함수는 sRGB뿐만 아니라 다양한 색 공간을 지원합니다.
     * 접근성과 색맹과의 상호작용에 대한 지각 공식에 대한 의문을 제기합니다.
     * LCh 대신 oklab를 대안으로 제안합니다.
     * 기사에서 언급된 APCA Contrast는 WCAG 2.1의 Contrast Ratio보다 일부 색상에 대해 더 공정하다고 여겨집니다.
     * 색 이론과 APCA에 대한 추가 자료가 제공됩니다.
     * 저자는 웹 폼뿐만 아니라 모든 소프트웨어에서 사용할 수 있는 알고리즘을 원합니다.
     * Krita의 고급 색상 선택기에서 사용되는 색상 모델인 HSY에 대해 다른 기사에서 언급됩니다.
"
"https://news.hada.io/topic?id=10516","Salesforce, 5.3조원 가치로 AI스타트업 HuggingFace에 투자를 진행중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Salesforce, 5.3조원 가치로 AI스타트업 HuggingFace에 투자를 진행중

     * HuggingFace의 기존 가치에 비해 2배가 넘는 $4b(5.3조원) 가치로 약 2670억원($200m) 펀딩을 리딩하는 중
     * 회사의 향후 12개월간 매출 예상치의 100배 이상으로 높은 평가
          + 년간 $30m 매출을 달성할 것으로 예상
     * 2016년에 설립되어 직원은 약 200명이고, 1만개 이상의 회사가 무료/유료 저장소를 사용중
     * Meta 의 Llama2를 포함해서 최소 수십만개 이상의 AI모델을 호스팅중
     * 세콰이어등이 투자했던 지난해 라운드에서는 회사를 $2b 정도 가치로 평가했었음

   와우....
"
"https://news.hada.io/topic?id=10497","JSON Schema Storechema Store

     * 다양한 형식에 대한 JSON 스키마 저장소 (현재 716개)
          + Configuration, Manifest, File Spec,..
     * 이 스키마 정보를 이용하여 VSCode, IntelliJ, Sublime, Neovim 등의 다양한 에디터에서 자동완성 및 포맷 검증을 지원
     * 스키마 메타데이터를 리스트 API로도 제공
"
"https://news.hada.io/topic?id=10503","연방정부, TikTok에 대량의 국내 감청 기능 요청","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     연방정부, TikTok에 대량의 국내 감청 기능 요청

     * 미 연방정부, TikTok 금지 방지를 위해 앱에 대한 광범위한 통제를 목표로 한 협상 시도 보고
     * Forbes가 입수한 초안 협정, 미국 여러 기관에게 TikTok의 기록 및 운영에 대한 전례 없는 접근 허용
     * 정부가 TikTok에 요구한 양보, 중국 관리들이 남용하고 있다고 비판받은 감시 전술과 유사
     * 2022년 여름에 날짜가 찍힌 초안 협정, 미 법무부 및 국방부와 같은 미 정부 기관에 다른 소셜 미디어 회사보다 더 많은 접근을 허용
     * 협정, TikTok의 미국 시설, 기록, 서버를 최소한의 통보로 검사하고, TikTok의 미국 데이터 보안 조직과 관련된 어떤 임원의 고용을 거부하고, 앱의 미국 내 이용 약관 변경을 차단하는 등의 권한을 기관에 부여
     * 협정, 미 기관이 TikTok에 각종 감사를 요구하고, 극단적인 경우에는 TikTok의 미국 내 운영을 일시 중단하도록 요구할 수 있게 허용
     * TikTok, 초안 협정을 확인하거나 부인하지 않았지만, CFIUS와 1년 이상 국가 보안 협정을 이행하기 위해 협력하고 있으며, 미국 사용자 데이터를 격리하기 위한 방화벽에 상당한 자원을 투자했다고 발표
     * 약 100페이지에 달하는 초안 협정, ByteDance의 대표 변호사와 CFIUS 간에 교환된 코멘트 포함
     * 당시 작성된 대로 수락된다면, 협정은 TikTok의 미국 운영을 외부 제3자 감사인 및 소스 코드 검사관의 감독에 노출시켰을 것
     * 협정, 중국 공산당과 밀접한 연결을 유지하고 있다고 비난받은 ByteDance 리더들을 미국 버전 앱과 관련된 일부 보안 관련 결정에서 제외
     * 미국 외국 투자 위원회(CFIUS), 중국 정부 관리들이 미국인을 감시하는 데 이를 사용할 수 있다는 우려로 4년 전 ByteDance 조사 시작
     * 당시 대통령인 트럼프의 금지 위협에 이어, TikTok은 Oracle과 ""프로젝트 텍사스""라는 데이터 라우팅 협정에 동의, 새로운 미국 사용자 데이터는 미국 내 Oracle의 클라우드 인프라에 저장
     * 그러나 지난해 동안의 뉴스 조사와 내부고발자 보고서는 TikTok의 데이터 보안 약속의 효과와 시간표에 대해 의문을 제기하였음.

        Hacker News 의견

     * 미국 정부가 중국에서 비판받은 것과 유사한 감시 기능을 TikTok에 요청했음, 일부는 정부의 동기를 의심함
     * 일부는 정부의 요청을 국내 스파이 활동보다는 감독에 가깝게 보며, 신뢰할 수 없지만 폐쇄할 수 없는 당사자를 철저히 감시하는 것이 목표라고 봄
     * 정부의 요청에는 TikTok의 미국 시설, 기록, 장비, 서버를 최소한의 또는 통지 없이 검사하는 것이 포함되어 있어, 사용자 데이터에 임의로 접근할 수 있는 가능성이 있음
     * 정부는 또한 TikTok 미국이 ByteDance의 리더들을 특정 보안 관련 결정에서 배제하고, 대신 ByteDance로부터 비밀리에 운영될 수 있는 경영 보안 위원회에 의존하길 원함
     * 일부는 TikTok이 미국에게 실제 위협이 되는지 의문을 제기하며, 이 앱이 중요한 정보를 포함하고 있지 않다고 주장하고, 백도어 기능이나 취약점은 Google과 그들의 스토어 보안/검토 정책에 대한 우려가 되어야 한다고 주장함
     * 다른 사람들은 미국 정부가 TikTok의 특정 주제를 확대하고 다른 주제를 순위를 내리는 능력으로 미국인들에게 영향을 미칠 수 있는 능력에 대해 더 우려하고 있다고 믿음, 이는 미국 기업들이 전 세계적으로 즐기는 능력임
     * 일부 댓글 작성자들은 미국 정부의 TikTok 문제가 진정한 우려가 아니라 앱에서 이익을 얻지 못하는 것에 대한 문제라고 제안함
     * 중국이 Facebook과 Google과 같은 미국 플랫폼의 운영을 허용하지 않는다면, 미국은 TikTok을 금지해야 한다는 상호 금지 요구가 있음
     * 다른 사람들은 TikTok의 금지 가능성을 자유 연설에 대한 공격으로 보며, 이를 책을 태우는 것과 비교함
     * 일부 댓글 작성자들은 TikTok이 어떤 데이터를 수집하는지, 미국 정부가 원하는 것이 무엇인지 의문을 제기하며, 특정 데이터를 수집할 수 있는 모든 앱에 대한 금지가 있어야 한다고 제안함
"
"https://news.hada.io/topic?id=10628","ChatGPT로 저렴하게 학습데이터 구축하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ChatGPT로 저렴하게 학습데이터 구축하는 방법

     * AI모델을 개발할 때 데이터셋의 양과 질이 모두 중요
     * ChatGPT를 활용하면 저렴하게 데이터셋 구축이 가능하며, 라벨링 대행 업체를 이용하는 것 보다 시간을 단축할 수 있음
     * 영어로 질의하면 비용절약(토큰 수 절약) 뿐만 아니라 성능도 우수함
     * 일반적인 상황에서는 temperature를 0으로 낮춰 일관적인 답변을 받는것이 유리함
     * role(user, assistant, system)에 적절한 행동 양식 지정
     * 단순 계산으로 3달러면 약 1만 건의 감정 분석 데이터셋을 라벨링 (gpt-3.5-turbo 모델 기준)
"
"https://news.hada.io/topic?id=10554","Whisper API - Whisper ASR을 API화 해주는 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Whisper API - Whisper ASR을 API화 해주는 오픈소스

     * 파인튜닝한 Whisper 모델을 셀프 호스트 가능한 HTTP API로 만들기
          + Whisper.cpp + Python + Uvicorn
     * API 키를 이용한 사용자 관리 시스템 제공(사용량 제어)
     * 빠르고 효율적인 추론을 위한 양자화 모델 최적화
"
"https://news.hada.io/topic?id=10629","Fomos - Rust로 제작된 실험적인 OS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Fomos - Rust로 제작된 실험적인 OS

     * Rust를 이용해 Non-Unix OS를 만들어 보는 시도.
     * 지금은 그래픽 출력과 동적 할당, 동시 실행, 키보드/마우스를 지원하는 상태.
     * 특이한 점은 모든 앱이 단일 함수로 동작할 수 있게 설계한 것.
          + OS 기능이 포함된 Context를 전달받아 앱이 실행되기 때문에 모든 상호작용이 Context를 통해 일어남.
          + 이로 인해 샌드박싱, 디버깅 등이 아주 쉽고 메모리 유지 또한 Context를 통해 하기 때문에 재시작, 절전이 쉬움.
     * 아직 앱에 대한 설계가 완전하지 않아 모든 앱이 서로의 메모리를 볼 수 있는 등 문제가 남아 있음.
     * 영구 저장소, GPU, 네트워크 지원 등은 아직 구현해야 할 사항임.

   컨셉은 섹시하네요. 온 세상이 러스트다.. ㅋㅋㅋㅋ

   ""앱이 서로의 메모리를 볼 수 있는""... :)

   예 너무 웃기네요

   VirGL - QEMU VM내에서 사용 가능한 Virtual 3D GPU

   VirGL을 지원해서 QEMU에서 설치해서 테스트 가능합니다.
     * HN 스레드

   Rust OS에서 Rust 프로그램을 실행하는 미래...? 온 세상이 Rust네요.

   댓글에 HN 스레드 있으면 neo가 자동으로 요약해주면 좋겠네요 ㅋㅋ neo 없이 못 살아

   다음부터는 AI 요약도 같이 가져와보겠습니다. 특이하게 사람이 한 주장별로? 요약을 해주는 것 같네요.
     * danhau: 다른 사람들이 주장하는 대로 협력 스케줄링이 실패하기로 예상되는지 의문을 제기하며, 이미 앱들이 협력하고 있다는 점에 대해 걱정합니다. 거부 서비스 공격이 이러한 시스템을 쉽게 중단시킬 수 있다는 것을 우려합니다.
     * aseipp: danhau와 동의하여 협력 스케줄링이 간단한 오류를 시스템에 치명적으로 만들 수 있어서 임의의 프로그램 실행에 문제가 될 수 있다고 말합니다.
     * gnulinux: 모든 것이 아니라는 것을 제안하며, 협력 앱을 허용하면서도 무한 루프로 인해 시스템이 중단되는 것을 방지하는 방법이 있을 수 있다고 말합니다. 예를 들어 타임아웃이나 루프 감지 등이 있을 수 있다고 합니다.
     * DSMan195276: 협력 프로그램은 선점되지 않을 것이라고 가정하기 때문에, 실제로는 모든 것이 아니라고 주장합니다. 심지어 선점의 수준이 낮아져도 프로그램을 작성하는 방식이 변경되어야 한다고 말합니다.
     * getpokedagain: 모든 운영 체제가 예측할 수 없는 다중 사용자 앱을 실행할 필요는 없으며, 임베디드 장치나 게임 콘솔과 같은 제한된 시스템에서는 협력 모델이 작동할 수 있다고 말합니다.
     * Symmetry: 현대 CPU는 여러 스레드를 가지고 있으므로, OS가 일부 스레드의 과도한 사용을 확인하면서 돌아올 수 있다면 Fomos의 모델은 완전히 중단되지 않고 작동할 수 있다고 말합니다.
     * cmrdporcupine: 특수한 사용 사례는 직접 작업을 빈 코어에 할당하는 모델을 사용할 수 있는 이점이 있지만, 동시성 처리의 복잡성은 타임슬라이싱을 구현하는 것보다 크게 단순화되지 않을 수 있다는 점을 언급합니다.
     * JoeAltmaier: 하나의 스레드에서 while(true) 루프가 다른 스레드에 영향을 미치지 않을 수도 있지만, 배터리/온도 상승은 여전히 관리가 필요한 리소스 문제임을 보여줍니다.
     * keyle: 이 프로젝트와 미니멀리스트적인 접근에 열광하며, DOOM을 실행하는 전통적인 요구 사항을 충족하는 파일 시스템과 같은 더 많은 개발을 기대합니다.
     * mepian: Smalltalk 메소드는 독립적인 함수가 아닌 객체 간에 호출된다는 것을 명확히하며, 일부 초기 Lisp OS도 객체 시스템 이전에 함수를 사용했다고 설명합니다.

   다행히?도 같은 글을 Neo가 처리했네요 ㅎㅎㅎ

   Fomos: 러스트로 구축된 실험용 운영체제

   문제는 저도 저 링크를 보고 같이 요약하고 있었다는거 ㅠ

   무려 3가지의 요약버전을 보시면서 비교하시면 되겠습니다 ㅎ
     * Non-Unix OS 를 만들어보고 싶었음
     * Exo-Kernel은 흥미롭지만 대부분 이론에 불과해서, 이 패턴을 이해하는데 도움이 됨
     * 기능들
          + 그래픽 출력, 동적 할당, 모든 앱이 비동기 루프에서 실행
          + Virtio 마우스/키보드(드라이버들도 비동기 태스크)
          + 협업 스케줄링(앱들이 최대한 제어를 넘김)
          + 부팅후에는 컨텍스트 스위치 없음
          + Virgl™ 을 거의 지원
     * 독특한 점
          + 앱의 시그니처 pub extern ""C"" fn _start(ctx: &mut Context) -> i32
          + 앱들은 표준 라이브러리가 필요 없고, 모든 OS 기능들은 Context 를 통해 앱에 전달
          + Fomos에서 앱은 그냥 한개의 function 임. 이게 가장 큰 부분. Unix/Windows OS의 실행파일은 함수에 비해서 매우 복잡함.

   ""형편없다"" 가 종종 ""실험적인"" 이란 단어로 미화되곤 한다.

   thumbs down 이 없는데 어떻게 카르마가 마이너스가 되신건가요
"
"https://news.hada.io/topic?id=10590","100-Year Plan: WordPress.com 에서 1세기 동안 온라인 유산을 보호하세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          100-Year Plan: WordPress.com 에서 1세기 동안 온라인 유산을 보호하세요

     * WordPress가 ""100년 플랜""을 발표: 사용자의 온라인 유산을 1세기 동안 보호
     * US$38,000 (5천만원)
     * 가족의 디지털 자산 보존, 창업자의 회사 역사 보호, 안정적이고 적응력 있는 온라인 홈을 찾는 개인을 위한 장기 플랜
     * 표준 도메인 등록기간인 10년 등록을 넘어서는 세기 동안의 도메인 등록 제공
     * 지리적으로 분산된 데이터 센터에서의 다중 백업, 인터넷 아카이브에 대한 자동 제출, 선택적 잠금 모드 등 강화된 보안 조치 포함
     * 소유권 이전이나 사이트 선물하기를 용이하게 하는 강화된 소유권 프로토콜 제공
     * 무제한 대역폭, 최고 수준의 속도, 강력한 보안을 갖춘 최상위 관리형 WordPress 호스팅 포함
     * 24/7 프리미어 지원 포함
     * 선물도 가능

   이런 서비스 있었으면 하면 바랬는데, 가격에서 일단 어렵군요.
   $3,800에 도메인하고 사이트만 유지해주면 좋을텐데요.
   개인적으로 github가 더 나을 것 같네요.

   가격을 보니 좀 신뢰가 가는 기분이에요... 구매는 못하겠지만.
"
"https://news.hada.io/topic?id=10543","클라우드 서비스 인프라를 "코딩"하여 구축하는 Wing 언어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   클라우드 서비스 인프라를 ""코딩""하여 구축하는 Wing 언어

클라우드 서비스 인프라를 ""코딩""하여 구축하는 Wing 언어

     * 공식 문서에서는 클라우드 지향 프로그래밍 언어(cloud-oriented programming language)로 설명하고있음.
     * npm 패키지를 통한 컴파일러 설치 (패키지 winglang / wing cli 사용)
     * 컴파일 결과물은 Terraform/IaC, JavaScript
     * 타깃은 sim, tf-aws, tf-gcp, tf-azure, awscdk
     * 자체 튜토리얼 페이지 있음
"
"https://news.hada.io/topic?id=10506","SeamlessM4T: Meta AI에서 공개한, 번역을 위한 멀티모달에서의 파운데이션 모델","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          SeamlessM4T: Meta AI에서 공개한, 번역을 위한 멀티모달에서의 파운데이션 모델

     * Meta AI에서는 음성과 텍스트 간에 원활하게 번역하고 전사하는 기본 다중 언어 및 다중 작업 모델인 SeamlessM4T 공개
     * 다양한 언어에 대한 자동 음성 인식, 음성-텍스트 번역, 음성-음성 번역, 텍스트-텍스트 번역 및 텍스트-음성 번역을 지원
          + 100여종의 언어에 대한 자동 음성 인식
          + 100여종의 입력 및 출력 언어에 대한 음성-텍스트 번역
          + 100여종의 입력 언어와 35종(+영어)의 출력 언어를 지원하는 음성 대 음성 번역
          + 100여종의 언어에 대한 텍스트-텍스트 번역
          + 텍스트 음성 변환, 100여종의 입력 언어와 35종(+영어)의 출력 언어 지원
     * SeamlessM4T 모델은 연구자와 개발자를 위해 CC BY-NC 4.0으로 공개
     * 27시간 분량의 멀티모달 번역 데이터셋 SeamlessAlign도 함께 공개

    더 읽어보기

     * 논문: https://ai.meta.com/research/publications/seamless-m4t/
     * 데모: https://seamless.metademolab.com/
     * GitHub 저장소: https://github.com/facebookresearch/seamless_communication
     * HuggingFace 데모: https://huggingface.co/spaces/facebook/seamless_m4t
     * (⚠️광고⚠️) 파이토치 한국어 커뮤니티에서 조금 더 길게 정리한 내용 읽기
"
"https://news.hada.io/topic?id=10499","Ruby의 'Hash'는 만능도구 입니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ruby의 'Hash'는 만능도구 입니다

     * Ruby의 Hash는 키에 값을 매핑하는 내장 데이터 구조. O(1)
     * 다른 언어들은 키/밸류를 관리하는 클래스가 많지만, 루비는 Hash 클래스 하나로 키/밸류 쌍을 관리
     * 매우 유연한 자료구조로, 데이터 객체 / 딕셔너리 / 해시테이블 / 정렬 리스트 등 외에도 다양하게 사용 가능
     * 심볼/문자열/정수를 포함한 거의 모든 객체를 키로 사용 가능
     * fetch 메소드로 키가 없는 경우 기본값 설정 가능
     * delete 로 키 삭제 가능. 없는 키를 호출해도 문제 없음
     * Nesting 가능
     * 해당 키가 없다면 nil 을 리턴하지만, default 속성으로 기본값 지정 가능
     * Enumerable 모듈을 포함하여 each, each_key, each_pair, each_value, keys, values 등의 메소드로 해시를 이터레이션 가능
     * 더블 Splat 연산자 ""**"" 로 해시안의 내용을 언팩 가능
     * 그외 유용한 메소드들 : any?(key), compact, empty?, merge, hash.eql? obj, except(*keys), reject, filter & select, fetch_values(*keys), has_key?, member?, include?, key?, has_value?, value?, length, size, count, slice(*keys), transform_values, flatten

   대학교에서 c 배우고 파이썬 리스트를 처음 접했을 때의 감동이 떠오르는 군요.

   ""스위스 아미 나이프"" 를 ""맥가이버칼"" 이라고 번역하려다 요즘 사람들은 못알아들을듯 해서 ""만능도구"" 로..

   맥가이버까지는 ok인것 같고, 스위스아미나이프는 못들어봤으면 어려울 것 같아요ㅋㅋ

   10대인 저도 이해했습니다 모르는 사람은 별로 없는것 같아요

   헉 놀라운 발견이네요. 전 정말 모를거라 생각했어요.
   그나저나 긱뉴스 사용자 중에 10대도 계셨군요.. 멋지십니다!

   의외로 10대 개발자도 늘고 있어서, 긱뉴스를 접하는 학생 개발자분들이 점차 늘어나는 것 같습니다.
   저도 불과 9달전만 해도 10대였으니까요...

   '맥가이버'라는 드라마가 있었다는 사실을 모르는 사람은 많지만, 그래도 '맥가이버칼'이라는 단어는 다들 알아먹는 것 같습니다.

   이제는 속담 같은 지위라 괜찮지 않을까요? 일단 20대인 저는 이해했습니다 :D

   아. 이해하면 아재 인증이네요 :)
"
"https://news.hada.io/topic?id=10564","파이썬 30줄로 이해하는 'Automatic Differentiation'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               파이썬 30줄로 이해하는 'Automatic Differentiation'

     * 기사는 Python을 사용하여 자동 미분이라는 중요한 개념을 설명하며, 이는 신경망 훈련의 핵심 구성 요소입니다.
     * 저자는 기계 학습 엔지니어로, Tensorflow와 Pytorch와 같은 라이브러리를 사용하며, 자동 미분을 수행하는 가장 간단한 코드를 작성하는 것을 목표로 합니다.
     * 저자는 두 변수 x와 y 사이의 합을 수행하는 Python 코드를 작성하여 결과를 변수 z에 할당하는 것으로 시작합니다. 그러나 z는 사용된 변수를 추적하지 않아, x 또는 y의 값이 변경되면 z의 값을 자동으로 업데이트하는 것이 불가능합니다.
     * 이를 해결하기 위해, 저자는 변수에 대한 기호 계산을 허용하는 Tensor 클래스를 소개합니다. 이 클래스에서 덧셈 연산이 재정의됩니다.
     * Tensor 클래스는 이진 트리를 사용하여 더욱 향상됩니다. 각 텐서는 다른 두 텐서와 그것을 생성한 연산을 포함할 수 있습니다. 이는 Children 튜플을 도입함으로써 이루어집니다.
     * 저자는 계산 그래프를 실행하고 텐서의 실제 값을 계산하기 위해 Tensor 클래스에 forward 메소드를 추가합니다.
     * 저자는 Tensor 클래스가 지원하는 기본 연산에 대한 미분을 추가함으로써 계산 그래프에 자동 미분을 도입합니다. grad 함수에 대한 재귀 호출은 계산 그래프를 순회하고 복잡한 함수를 간단한 함수의 조합으로 분해합니다.
     * Tensor 클래스는 뺄셈, 나눗셈, 지수, 부정 등의 추가 연산을 추가함으로써 더 복잡한 공식을 처리할 수 있도록 확장됩니다.
     * 저자는 복잡한 공식을 생성하고 이를 유도함으로써 Tensor 클래스의 사용을 보여줍니다.
     * 저자는 임의의 크기의 배열에 대한 연산 추가, 텐서 x에 의존하지 않는 노드에서의 순회 중지, 계산 반복을 피하기 위한 캐시 설정 등 Tensor 클래스에 대한 가능한 개선과 최적화를 제안하며 결론을 내립니다.
     * 이 기사는 독자들이 신경망 최적화와 학습을 위한 자동 미분이 어떻게 수행되는지 이해하는 데 도움을 주는 것을 목표로 합니다.

        Hacker News 의견

     * 독자들은 복잡한 개념을 이해하는 데 도움이 되는 간결하고 우아한 코드 시연을 평가한다.
     * 본문의 자동 미분 설명은 그래프가 트리일 때만 다루므로 과도하게 단순화된 것으로 보인다, 더 복잡한 방향성 비순환 그래프는 다루지 않는다.
     * 일부 독자들은 자동 미분을 매우 흥미롭게 생각하고, 이 개념에 대한 자신만의 소개를 작성했다.
     * 한 독자는 Python 26줄로 구현한 자신만의 autodiff를 공유했다.
     * 논의된 기법들은 ""의존성 추적"" 및 대규모 파라메트릭 3D 모델에서 계산을 줄이는 Knowledge Based Engineering 시스템에서 사용되는 것과 유사하다.
     * Andrej Karpathy가 autograd 엔진을 구축하는 비디오는 통찰력이 있어 추천되었다.
     * 일부 독자들은 자동 미분이 반드시 연산 그래프를 구축하지 않고, 즉석에서 해당 값을 계산한다고 제안했다.
     * autodiff를 수치적 연쇄 법칙으로 설명하는 것이 명확하다는 제안이 있다.
     * 클래스를 텐서라고 부르는 데 대한 근거에 대한 질문이 제기되었다.
     * 구현의 단순성이 일부 독자들을 놀라게 했으며, 이로 인해 개념이 처음 생각했던 것보다 더 접근하기 쉬워졌다.
     * 구현은 Haskell의 free monad와 비교되었으며, 이는 기사의 언어 간 관련성을 나타낸다.
"
"https://news.hada.io/topic?id=10533",".COM 과 .XYZ 도메인 가격 인상 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        .COM 과 .XYZ 도메인 가격 인상 예정

     * 9월 1일자로 인상
     * .COM 도메인 갱신 비용이 9% 인상 (Namecheap 기준이며, 모든 Registrar가 다 오름)
     * .XYZ 도메인도 등록/갱신 비용이 모두 인상
     * .COM 도메인 감독기관인 Verisign이 ICANN과의 계약에 따라 가격 책정 권한을 가짐. 이 가격 인상은 이 계약에 따른 것

   이번에 찾아보니까 VRSN으로 나스닥에 상장되어있군요.
   Verisign이 상장회사인지는 처음 알게 되었습니다.

   한두번이 아니야

   제작년, 작년에 이어도 또 올해도?
"
"https://news.hada.io/topic?id=10548","Walk - 터미널 네비게이터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Walk - 터미널 네비게이터

     * 빠르고 편리한 파일시스템 네비게이션 CLI 도구. cd + ls
     * 커서를 이용한 파일/디렉토리 탐색 및 미리보기, 삭제 가능
     * 퍼지 검색 지원
     * Nerd Fonts 를 이용해서 파일 타입 아이콘 표시 가능

   M 생각나네요

   이미지 미리보기가 유독 웃기네요 ㅎㅎ

   이거 좋네요...

   와 굉장히 좋네요!
"
"https://news.hada.io/topic?id=10517","소프트웨어 개발에서 지속적 테스트 관련 기술과 유의사항","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     소프트웨어 개발에서 지속적 테스트 관련 기술과 유의사항

     * 지속적 테스트 의미:
          + 소프트웨어 테스트는 개발한 소프트웨어가 요구사항을 잘 반영하였는지, 기능이 정상적으로 작동하는지, 안정적인지 등을 확인하여 품질을 유지하고 결함을 확인하는 활동
          + 소프트웨어 개발 라이프사이클 전반에 걸쳐 테스트를 자동화하고 실행
          + 버그와 결함을 늦게 감지하면 잠재적 부채가 증가해 품질이 떨어지고 위험도 상승
     * 작동방식:
          + 자동화 툴을 사용해 모든 프로덕션 단계에서 사전 정의된 QA 스크립트를 로드하면서 작동
          + 자동화 스크립트는 소스 코드 효율을 순차적으로 검증하고, 관련 피드백을 팀에 즉시 제공
          + 자동화 테스트가 실패하면, 개발 팀은 해당 개발 단계에서 알림을 받고 소스 코드 수정
          + 자동화 테스트가 검사를 통과하면, 프로젝트는 자동으로 소프트웨어 개발 라이프사이클의 다음 단계로 넘어감
     * 지속적 테스트 관련 신기술:
          + AI/ML: 테스트 케이스 생성 자동화
          + 자동화: 테스트 계획, 테스트 케이스 설계, 테스트 실행, 테스트 리포트 자동화
          + DevOps: 개발 팀과 운영 팀 간의 자동화, 협업, 소통 촉진
          + 블록체인: 탈중앙화되고, 투명한 방식으로 테스트 결과와 데이터 저장, 아무도 데이터를 수정하거나 조작할 수 없도록 함
          + IoT: 많은 IoT 디바이스와 플랫폼을 시뮬레이션해 테스터가 여러 디바이스와 플랫폼에서 애플리케이션을 테스트하도록 지원
     * 지속적 테스트 도입 시 유의 사항:
          + 테스트를 실행하는 툴을 Jenkins, CircleCI, Bamboo, 다른 주요 CI/CD 툴과 원활하게 통합
          + DevOps, 자동화, CI/CD 파이프라인 전문 지식 포함해 기존 테스트와 다른 기술이 필요
          + 자동화 테스트를 실행할 수 있도록 적절한 컴퓨팅 환경이 있어야 함
          + 지속적 테스트에 활용할 수 있는 도구와 기술이 다양하기에 올바른 도구를 고르는 일 어려움
          + 테스트를 손쉽게 자동화하고, 적절한 기간에 이를 실행해야 함
          + 정의된 통과 또는 실패 조건, 문제 해결 위한 구체적 경로가 있어야 함
"
"https://news.hada.io/topic?id=10522","Lightning CSS - Rust로 작성된 초고속 CSS 파서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Lightning CSS - Rust로 작성된 초고속 CSS 파서

     * Parcel 과 함께 사용하기 위해 만든 초고속 CSS 파서/트랜스포머/번들러/미니파이어
          + CSSNano 에 비해서 100배 이상, ESBuild 보다 4배 이상 빠름
     * 스탠드얼론 라이브러리, CLI, 또는 다른 도구의 플러그인으로 사용 가능
     * 다른 도구들과 달리 속성 밸류를 CSS 스펙의 문법에 따라 정확한 Type 처리
     * Mozilla 가 만든 Firefox/Servo용 CSSparser/Selector 기반으로 만들어져서 브라우저 수준의 파싱 지원
     * 매우 최적화된 Minification
     * 브라우저 타겟에 따라 벤더 프리픽스를 추가/삭제
     * 브라우저에 맞춘 호환 CSS 신택스를 생성
     * CSS Modules 지원
     * 커스텀 트랜스폼 플러그인 지원
"
"https://news.hada.io/topic?id=10512","ZFS 덕분에 데이터 손실은 단 10분 분량에 불과","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ZFS 덕분에 데이터 손실은 단 10분 분량에 불과

     * 저자인 맥스 굿하트(Max Goodhart)가 2년 된 SSD가 갑자기 고장나도 자신의 데이터를 복구하는 방법에 대한 개인적인 경험을 담은 기사.
     * 굿하트는 데이터 무결성 검증을 제공하고 대용량 저장을 지원하는 파일 시스템인 ZFS(Zettabyte File System) 덕분에 많은 데이터를 잃지 않았다.
     * 그는 ZFS 증분 복제라는 기능을 사용하여 시스템이 작동하는 동안 효율적인 시점 스냅샷을 가능하게 하는 홈 네트워크 저장 시스템을 설정했다.
     * 스냅샷을 찍고 이를 그의 네트워크 연결 스토리지(Network Attached Storage, NAS)로 보내는 과정을 자동화하기 위해 굿하트는 zrepl이라는 소프트웨어를 사용했다.
     * 그의 SSD가 고장났을 때, 그는 새 드라이브에서 시스템을 복원할 수 있었고, 약 10분 분량의 데이터만을 잃었다.
     * 복원 과정은 수동적이었으며, 밤새 625 GiB ZFS 수신 작업을 실행하고 백업을 복호화하기 위해 ""래퍼 키""를 복원하는 것을 포함했다.
     * 굿하트는 Ubuntu 22.04 라이브 USB를 통해 파일 시스템을 처음부터 설정하기 위한 OpenZFS 가이드를 따라 시스템을 재구축했다.
     * 결과적으로 그의 시스템, 그리고 그의 브라우저 탭과 전날 밤의 미완성 작업까지 성공적으로 복원되었다.
     * 굿하트는 처음에 ZFS를 설정하는 것이 높은 시작 비용을 필요로 하고 유지 관리는 지식이 많이 필요하고 수동적인 과정을 필요로 하지만, 그의 독특한 이점들이 그것을 가치있게 만든다고 인정한다.
     * 그는 또한 고장난 드라이브가 WD_BLACK SN850이라는 모델이었으며, 그는 이 모델이 갑자기 죽거나 부팅할 수 없게 되는 이야기를 들었다고 언급한다.
     * 굿하트의 이야기는 하드웨어 고장 시 심각한 데이터 손실을 방지하기 위해 견고한 데이터 백업 또는 복제 시스템을 갖추는 것의 중요성을 강조한다.

        Hacker News 의견

     * 사용자는 강인함과 데이터 무결성 기능으로 알려진 파일 시스템인 ZFS의 사용으로 효율적으로 데이터를 복구할 수 있었다.
     * ZFS는 ""가난한 사람의 ZFS""라고 불리는 btrfs를 포함한 다른 파일 시스템에 비해 유리하게 비교된다.
     * Sandisk와 Western Digital SSD의 자주 발생하는 고장에 대한 참조로 저장 장치의 신뢰성에 대한 우려가 증가하고 있다.
     * 사용자는 ZFS 복제를 위한 솔루션인 zrepl의 사용을 언급하며, 이것이 성공적인 데이터 복구에 기여했을 수 있다.
     * 파일 시스템의 자주 스냅샷을 찍는 것이 저장 장치의 실패에 기여했을 수 있는지에 대한 논의가 있다.
     * 일부 사용자들은 Apple의 Time Machine과 같은 대체 백업 솔루션을 선호하며, 단 하나의 방법에만 의존하지 않는 것의 중요성을 강조한다.
     * 백업을 암호화하고 복원 과정을 테스트하는 것의 중요성이 강조되며, 한 사용자는 자신의 데이터가 성공적으로 복호화될 수 있는지 확인할 때까지 느낀 불안감을 공유한다.
     * 사용자의 성공적인 데이터 복구는 운이 좋았다고 여겨진다. 그들은 필요할 때까지 백업 시스템을 테스트하지 않았다.
     * 다가오는 Linux용 bcachefs 파일 시스템은 데이터 저장 및 복구에 대한 유망한 솔루션으로 언급된다.
     * 전반적인 감정은 정기적인 백업과 복원 과정의 테스트의 중요성을 상기시키는 것으로, 데이터 안전성을 보장한다.
"
"https://news.hada.io/topic?id=10607","2023년의 OpenTelemetry","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          2023년의 OpenTelemetry

     * OpenTelemetry (OTEL) 프로젝트는 조직을 위한 고품질, 어디서나 사용 가능하고 이식성 있는 텔레메트리를 제공하기 위한 목표를 가지고 있습니다.
     * OTEL은 2019년에 두 개의 오픈 소스 추적 프로젝트가 합쳐져 OpenTelemetry을 형성하면서 시작되었으며, 모든 관측 가능성을 포괄하는 범위로 확장되었습니다.
     * OTEL은 메트릭, 로그 및 추적에 대한 안정적인 표준, 수집기 및 주요 언어에서 코드를 계측하기 위한 SDK를 제공함으로써 약속을 이행했습니다.
     * OTEL은 CNCF에서 두 번째로 활발한 프로젝트로, 관측 가능성 제공업체들 사이에서 광범위한 채택을 받고 있습니다.
     * OTEL은 사양과 구현으로 구성되어 있으며, 사양은 공통 표준을 정의하고 구현은 클라이언트 라이브러리와 도구를 제공합니다.
     * OTEL 사양은 이제 모든 신호에 대해 안정화되었지만, 일부 SDK에서는 로깅 지원이 여전히 제한적입니다.
     * OTEL SDK는 OTEL 사양을 기반으로 한 클라이언트 측 계측을 제공하며, 각 신호에 대해 다른 성숙도 수준을 가지고 있습니다.
     * OTEL 프로토콜은 관측 가능성 데이터를 전달하기 위한 공통 와이어 프로토콜을 설명하며, OTEL 수집기와 관측 가능성 공급업체에서 구현됩니다.
     * OTEL 수집기는 공급업체에 중립적인 에이전트로, 관측 가능성 데이터를 수집, 변환 및 전송하며, 다양한 구성 요소가 관측 가능성 파이프라인을 형성합니다.
     * Open Agent Management Protocol (OpAMP)는 에이전트의 원격 관리를 가능하게 하여 동적 구성 배포 및 에이전트 업데이트와 같은 기능을 제공합니다.
     * OTEL Semantic Conventions는 관측 가능성 데이터에 대한 공통 속성 집합을 정의하여 다른 신호 간의 상관관계를 가능하게 합니다.
     * OTEL은 OpenTelemetry 변환 언어와 데모 마이크로서비스 기반 쇼핑 사이트와 같은 추가 부분을 포함한 거대한 프로젝트입니다.
     * OTEL은 관측 가능성을 위한 산업 표준이 되어 공급업체와 도구 간의 공통 기반을 마련하고 있습니다.

        Hacker News 의견

     * OpenTelemetry: 다중 레이어에서 추상화를 제공하는 의미론적 표준, 프로토콜, 퍼사드 및 라이브러리입니다.
     * OpenTelemetry은 메트릭, 트레이스 및 로그 사용에 대한 명확한 가이드가 부족하다는 우려가 있습니다.
     * 일부 사용자는 OpenTelemetry을 다른 기술과 쉽게 연결하고 비용 효율적으로 사용할 수 있다는 긍정적인 경험을 가지고 있습니다.
     * 그러나 OpenTelemetry은 과도하게 설계되어 사용자에게 적합하지 않으며 기능이 부족하다는 비판이 있습니다.
     * 공식 OpenTelemetry 라이브러리는 웹 프론트엔드에서 잘 작동하지 않고 오류 상관 관계 및 세션 재생에 제한이 있을 수 있습니다.
     * 다양한 언어에서 OpenTelemetry에 대한 클라이언트 라이브러리의 성숙도는 다릅니다.
     * 일부 사용자는 로그 대신 스팬 이벤트를 사용하여 효과적이지만 UI 개선의 여지가 있다는 것을 실험해 보았습니다.
     * OpenTelemetry을 Datadog와 같은 플랫폼과 통합하는 데 관심이 있지만 추가 관리 및 교육의 필요성에 대한 우려가 있습니다.
     * OpenTelemetry은 마케팅 중심 프로젝트로 비판되며 선택권이 있는 사람들에게는 권장되지 않습니다.
     * 대량 요청에 OpenTelemetry을 사용하는 데 필요한 비용 및 인프라 요구 사항에 대한 우려가 있습니다.
     * OpenTelemetry은 AWS X-Ray SDK의 대체제로 홍보되고 있지만 Lambda 함수에서 사용할 경우 성능 문제가 있습니다.
"
"https://news.hada.io/topic?id=10553","히가시야마 아츠키와 "between-legs effect"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    히가시야마 아츠키와 ""between-legs effect""

     * 일본 연구자 히가시야마 아츠키의 ""다리 사이 효과"" 연구에 대한 기사
     * ""다리 사이 효과""는 물체를 다리 사이에서 거꾸로 볼 때 인식의 변화를 의미. 히가시야마의 연구는 이런 방식으로 보았을 때 거리와 색상이 다르게 보인다는 것을 발견
     * 히가시야마의 연구는 시각 인식에 대한 전통적 이해에 도전, 우리의 물리적 위치가 세상을 인식하는 방식에 영향을 미칠 수 있다는 것을 제안
     * 사람들을 웃기고 생각하게 만드는 연구에 수여되는 Ig Nobel Prize. 히가시야마는 처음에 자신의 후보 지명이 장난인 줄 알았음
     * 상을 받는 것이 유머러스하긴 하지만, 히가시야마의 연구는 심리학 분야, 특히 몸과 뇌 사이의 관계를 이해하는 데 중요한 함의를 가짐
     * 히가시야마의 연구는 200명 이상의 학생 자원봉사자들을 대상으로 하고, 프리즘 고글을 사용하여 시각 인식을 조작
     * 그의 연구 결과는 ""다리 사이 효과""가 주로 시각 정보보다는 물리적 정보 때문이라는 것을 보여줌
     * 히가시야마는 공간 인식 분야의 연구를 계속하고 있으며, 현재 ""팔과 몸의 방향 인식과 그 방향에 적응하는 효과""라는 프로젝트를 진행 중
     * Ig Nobel Prize 수상으로 히가시야마의 작업에 대한 관심이 증가, 강연 초청과 미디어 주목도 늘어남
     * 히가시야마는 심리학 연구에서 증거의 중요성을 강조하고, 뒷받침되지 않은 결론에 기반하여 사람들의 삶을 바꾸는 위험에 대해 경고

        Hacker News 의견

     * ""사이다리 효과"" 현상에 대한 히가시야마 교수의 인식 연구
     * 히가시야마의 연구, 심리학적이 아닌 물리적 정보와 증거 기반 결론에 초점
     * 수평-수직 착시에 대한 논의, 독자들의 반론 포함
     * ""사이다리 효과""를 이용한 달의 크기 인식 변화나 세상의 '위쪽'을 보는 독자들의 이야기
     * 기본 과학 연구에 대한 독자들의 호평
     * 미식축구 센터의 독특한 시선 이동, 머리가 거꾸로 된 상태에서의 안구 근육에 대한 혈압 영향 등 추가 연구 제안
     * 자세 복원에 대한 한 독자의 이야기, 이를 통한 치아와 엉덩이 근육 사이의 연결성 제안
     * 수평-수직 착시가 존재하지 않는 측면에서의 관찰, 수직 모니터 경험을 바탕으로 한 독자들의 동의
"
"https://news.hada.io/topic?id=10526","최신 애플리케이션에서 localStorage 사용: 종합 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  최신 애플리케이션에서 localStorage 사용: 종합 가이드
"
"https://news.hada.io/topic?id=10550","인간 Y 염색체의 완전한 순서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            인간 Y 염색체의 완전한 순서

     * 텔로미어-투-텔로미어(T2T) 컨소시엄이 복잡한 반복 구조로 인한 이전의 도전을 극복하고 완전한 인간 Y 염색체를 성공적으로 시퀀싱하였습니다.
     * 새로운 시퀀스인 T2T-Y는 이전 참조 시퀀스인 GRCh38의 여러 오류를 수정하고 참조에 3000만 이상의 염기 쌍 시퀀스를 추가합니다.
     * 완전한 시퀀스는 TSPY, DAZ, RBMY 유전자 가족의 전체 구조와 추가적으로 41개의 단백질 코딩 유전자, 대부분이 TSPY 가족에서 나온 것을 보여줍니다.
     * T2T-Y 시퀀스는 이전에 조립된 CHM13 게놈과 결합하여 모든 24개의 인간 염색체에 대한 종합적인 참조 시퀀스를 생성하였습니다.
     * T2T-CHM13v2.0 조립과 관련된 데이터 및 자원은 지정된 GitHub 저장소에서 다운로드할 수 있습니다.
     * 이 성과는 유전학 연구에 대한 더 정확하고 완전한 참조를 제공함으로써 인간 유전학과 건강에 대한 새로운 발견을 이끌어낼 수 있음을 의미합니다.
     * 연구자들은 머신러닝 모델, DNA G-사각형 구조 형성, 그리고 다양한 생물정보학 도구를 사용하여 인간 게놈을 분석하였습니다.
     * 이 연구는 마을 개와 자바 긴팔 원숭이를 포함한 다양한 종의 게놈을 비교하여 포유류에서 Y 염색체의 진화를 이해하였습니다.
     * 연구자들은 RAxML을 사용하여 대형 계통 분석 및 후 분석을 수행하고, EMBOSS(The European Molecular Biology Open Software Suite)를 사용하여 생물정보학 분석을 수행하였습니다.
     * 연구는 센트로미어가 A-단계 반복, 직접 반복, STRs로 더 풍부하게 보강되어 있으며, 반면에 HSat1B는 역방향 반복과 거울 반복으로 더 풍부하게 보강되어 있다는 것을 보여줍니다.
     * Y 염색체의 일부인 TSPY 유전자 배열은 G4 및 Z-DNA 모티프로 풍부하게 보강되어 있다는 것이 밝혀졌습니다.
     * 연구자들은 Strand-seq라는 시퀀싱 방법을 사용하여 DNA에서 반복적인 역전을 식별하였습니다.
     * Y 염색체의 완전한 시퀀싱은 유전학 연구에 대한 더 정확한 참조를 제공하고 남성 특정 건강 문제에 대한 새로운 통찰력을 제공할 수 있습니다.
     * 이 논문은 과학 저널인 Nature에 게재되었으며, 이는 연구의 중요성을 나타냅니다.

        Hacker News 의견

     * 인간 Y 염색체의 완전한 염기서열 결정에 대한 기사
     * Celera Genomics와 인간 게놈 프로젝트 같은 회사들이 경쟁하는 인간 게놈의 염기서열 결정 분야
     * Craig Venter가 이끄는 Celera Genomics는 처음에 ""샷건 방법""을 사용해 전체 게놈을 염기서열 결정했다고 주장했으나, 나중에 전체 게놈을 염기서열 결정하지 않았다고 인정
     * 모든 사람의 DNA가 다르기 때문에 ""인간 게놈""이 정확히 무엇을 의미하는지에 대한 의문
     * 유전자 염기서열 결정 과정은 큰 염기서열을 작은 조각으로 나누고, 각 조각을 개별적으로 염기서열 결정한 후, 이를 배열하여 전체 게놈을 형성하는 것을 포함
     * Y 염색체의 염기서열 결정은 그 특성 때문에 어려웠던 작업이므로 중요한 성과
     * Y 염색체의 완전한 염기서열 결정에 대한 소식은 처음으로 지난 12월에 사전 인쇄본으로 발표되었고, 데이터는 3월에 공개되었다. 그러나 동료 심사 과정 때문에 이 결과는 최근에야 Nature에서 공식적으로 발표되었다.
     * 모든 24개 염색체의 염기서열 결정은 게놈학 분야에서 큰 이슈로 간주
     * 이 작업의 함의는 ACM SIGPLAN 기조연설에서 설명된 바와 같이 다양한 분야에서의 잠재적인 응용을 포함하고 있음
     * Y 염색체의 염기서열 결정은 유전적 특성과 그 표현에 대한 더 나은 이해를 가능하게 할 수 있음
"
"https://news.hada.io/topic?id=10624","그리핀 - 클로저를 사용한 완전히 규제된 API 기반 은행","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    그리핀 - 클로저를 사용한 완전히 규제된 API 기반 은행

     * 그리핀은 핀테크 기업들이 은행 기능을 빠르고 안전하게 통합할 수 있는 은행 서비스 플랫폼입니다.
     * 그들은 2023년 3월에 영국 은행 면허를 획득하여 완전히 규제된 영국 은행이 되었습니다.
     * 그리핀은 기존 은행보다 더 현대적인 기술과 빠른 서비스 제공 능력을 제공하여 시장을 혼란시키려고 합니다.
     * 이 플랫폼은 금융 서비스에 적합한 강력하고 불변한 언어인 클로저를 사용하여 구축되었습니다.
     * 그리핀 플랫폼의 아키텍처에는 클로저를 Kubernetes에서 실행하고, 데이터베이스로 FoundationDB를 사용하며, 이벤트 소싱을 구현하는 것이 포함되어 있습니다.
     * 그리핀은 비즈니스 로직을 깔끔하게 유지하고 외부와 상호작용하기 위해 프로토콜을 사용하는 것을 강조합니다.
     * 이 플랫폼은 ring, netty, reitit, Clojure spec, Cognitect aws-api와 같은 라이브러리를 활용합니다.
     * 클로저 경험이 있는 엔지니어를 채용하는 것은 그리핀에게 성공적이었으며, 고품질의 지원자들을 유치하고 있습니다.
     * 팀은 원격으로 작업하며, 더 큰 인재 풀과 지리적 유연성을 제공합니다.
     * 그리핀은 FoundationDB의 테스트 접근 방식에서 영감을 받아 경쟁 조건 및 시스템 오류에 대한 시스템 테스트에 집중하고 있습니다.
     * FoundationDB는 복잡하고 분산된 시스템의 결정론적 테스트를 가능하게 하는 도구를 개발했습니다.
     * 이 도구는 디스크 오류, 네트워크 오류, 스레드 스케줄링과 같은 시스템의 다양한 측면을 제어할 수 있습니다.
     * 이는 Jepsen과 유사하지만 더 많은 제어와 빠른 결과를 제공합니다.
     * FoundationDB 팀은 이 도구를 자체 시스템에 성공적으로 구현했습니다.
     * 클로저와 JVM 외에도 이 도구를 사용하는 다른 사람들에 대해서는 알 수 없습니다.
     * FoundationDB가 이 도구를 사용하는 것은 그들의 시스템에 대한 신뢰를 제공합니다.
     * FoundationDB의 Allen은 여름 동안 면접에는 소극적일 수 있지만, 그들은 채용 중이라고 언급했습니다.

        Hacker News 의견

     * 그리핀의 공항 기술 소개, 제임스 트렁크, 엔지니어링 부사장
     * 결정론적 실행이 어려운 이유: 자바 스레딩 라이브러리와 디스크 기록 제어 불가
     * 그리핀 창립자들의 공동 저술 ""Learning ClojureScript""
     * 은행 면허를 가진 기술 회사 그리핀
     * 그리핀의 예금 이자 수익 및 API 대출 제공 방안 불분명
     * API 은행은 주로 영국에 기반을 두어 미국 고객들이 유사한 서비스를 기다리게 함
     * 그리핀이 사용하는 독점 도구를 오픈소스화하는 관심
     * 시장에서 이미 잘 알려진 기업들과 비교했을 때 그리핀의 제안은 약하게 비춰질 수 있음
     * 그리핀은 올해 3분기 또는 4분기에 감사를 완료하고 자금을 추가 조달하며 코드 작성을 완료할 계획
     * 은행에 대한 원활한 API 액세스의 가능성과 사용자 이점이 완전히 이해되지 않음
"
"https://news.hada.io/topic?id=10505","Show GN: (노코드툴로 1시간만에 뚝딱 만들어본) 커피나 카페 정보를 공유사이트 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Show GN: (노코드툴로 1시간만에 뚝딱 만들어본) 커피나 카페 정보를 공유사이트

   노코드툴 중에
   ""앱가이버""라는 쿨을 이용해서
   간단하게 만들어 본 사이트입니다.

   https://coffeecafe.appgyverapp.com/
   커피나 카페 정보를 공유하는 곳인데,,,

   노코드툴로 코딩 일도 없이
   이런 사이트를 쉽게 한 시간 만에 만들 수 있습니다.

   회원가입까지 하고 들어가야 볼 수 있군요...

   네 그렇습니다.
"
"https://news.hada.io/topic?id=10552","Firecracker에서의 FreeBSD","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Firecracker에서의 FreeBSD

     * FreeBSD 14을 Firecracker 가상 머신 모니터(VMM)에서 실행하도록 포팅하는 과정에 대한 기사
     * Amazon이 AWS Lambda 서비스를 위해 최소한의 오버헤드로 가상 머신을 시작할 수 있도록 개발한 Firecracker
     * Colin Percival이 FreeBSD 부팅 과정을 가속화하고, FreeBSD와 다른 플랫폼에서의 버그를 발견하며, AWS에서 FreeBSD를 더 사용할 수 있게 하기 위한 여러 가지 이유로 2022년 6월에 FreeBSD를 Firecracker로 포팅하기 시작함
     * 포팅 과정에서 Firecracker가 FreeBSD 커널을 실행하도록 만들고, 초기 충돌을 디버깅하며, Xen 하이퍼콜을 처리하고, Firecracker에서 ACPI의 부재를 다루며, 시리얼 콘솔과 관련된 문제를 해결하는 등 여러 도전을 극복해야 했음
     * 저자는 또한 Virtio 장치(디스크 및 네트워크 등)가 Firecracker에서의 FreeBSD에서 작동하도록 만드는 작업을 수행해야 했음
     * FreeBSD가 Firecracker에서 실행되면, 저자는 성능을 향상시키고 부팅 시간을 줄이기 위해 최적화할 수 있는 여러 영역을 식별했음
     * 저자는 Firecracker가 향후 FreeBSD에서 실행되도록 포팅될 수도 있다고 제안함
     * 저자는 다른 사람들이 Firecracker에서 FreeBSD를 시도하고 그 경험에 대한 피드백을 제공하도록 초대함
     * Colin Percival은 2004년부터 FreeBSD 개발자이며 2005년부터 2012년까지 프로젝트의 보안 담당자였음. 그는 2006년에 Tarsnap 온라인 백업 서비스를 설립하였고, 2019년에는 FreeBSD를 EC2로 가져오는 작업에 대해 Amazon Web Services Hero로 선정되었음

        Hacker News 의견

     * Firecracker VM은 단순한 리눅스 컨테이너 기술이 아닌 완전한 기계입니다.
     * fly.io와 같은 실제 사용 사례는 작지만 능력 있는 마이크로-VM의 효과성을 보여줍니다.
     * Colin의 패치가 FreeBSD와 Firecracker에 적용되면, 커널 부팅 시간은 20ms 미만입니다.
     * QEMU는 Firecracker에서 영감을 받은 microvm을 가지고 있습니다.
     * Firecracker는 빠른 부팅 시간을 약속하며, 그러나 네트워킹 설정은 복잡한 과정이 될 수 있습니다.
     * AWS나 ARM 기반의 macOS는 현재 중첩 가상화를 지원하지 않아, 이는 Firecracker 기반 기술의 개발과 배포를 단순화하는데 도움이 될 것입니다.
     * Firecracker는 추가 문서화가 필요한 많은 엣지 케이스를 가지고 있습니다.
     * 1 CPU와 128 MB의 RAM으로, FreeBSD 커널은 20ms 미만으로 부팅할 수 있습니다. 이는 k8s 클러스터나 Docker와 함께 작업하는 사람들에게 인상적입니다.
     * 일부 사용자들은 Firecracker 인스턴스와 유사한 기술에 대한 사용 사례를 의문시하며, 이들이 주로 클라우드 경험 혹은 비용 절감 조치에 유리한지 여부를 묻습니다.
"
"https://news.hada.io/topic?id=10603","Fortran - 고성능 병렬 프로그래밍 언어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Fortran - 고성능 병렬 프로그래밍 언어

     * 1957년에 만들어진 과학 계산용 언어 Fortran이 계속 발전중. 최근 버전은 Fortran 2018이고, 2023이 릴리즈 될 예정
     * 고성능: 과학/기술 계산용으로 설계
     * 정적/강 타입 언어. 배우고 사용하기 쉬움
     * Natively Parallel한 언어
          + 직관적인 배열 같은 구문으로 CPU간에 데이터를 통신
          + 단일 CPU, 공유메모리 멀티코어, 분산 메모리 HPC, 클라우드 시스템 등에서 거의 동일한 코드를 실행
          + Coarray, Team, Event, Collective Soubroutine 등으로 문제에 적합한 병렬 프로그래밍 패턴 표현 가능

GN⁺ 의 요약 내용

     * Fortran은 과학 및 공학에서 계산 집약적인 응용 프로그램을 위해 설계된 고성능 병렬 프로그래밍 언어
     * 성숙하고 검증된 컴파일러와 라이브러리를 갖추고 있어 빠른 코드 실행이 가능
     * Fortran은 정적이고 강력한 타입을 갖추어 프로그래밍 오류를 조기에 발견하고 효율적인 이진 코드를 생성
     * 큰 배열에 대한 수학 및 산술 연산을 표현하기 위한 간단한 구문을 갖추어 배우고 사용하기가 놀랍게 쉬움
     * Fortran은 명령형, 절차적, 배열 지향, 객체 지향 또는 함수형과 같은 다양한 프로그래밍 스타일을 허용
     * CPU 간 데이터 통신을 위한 직관적인 구문을 갖춘 병렬 언어
     * Fortran은 수치적 날씨 예측, 계산 유체 역학, 응용 수학, 통계 및 금융과 같은 영역에서 널리 사용
     * 큰 숫자 배열에 대한 빠른 산술 계산을 수행해야 한다면, Fortran은 최적의 도구

   해당 언어가 컴파일제한이 꽤 많아 다른언어에 비해 최적화가 오지게 잘됩니다.

   파이썬 코드와 비교해보니 이런 느낌이군요 https://fortran-lang.org/en/learn/rosetta_stone.html

   https://www.fortran90.org/src/rosetta.html

   요 URL을 링크하신것 같네요

   이상하게 링크가 깨졌군요 -0- 원래 링크하려던 주소는 https://fortran-lang.org/learn/rosetta_stone/ 입니다

   슈퍼컴을 사용하는 고체계산분야에서 지금도 포트란 많이 씁니다.

   대체 누가 자꾸 업데이트하는거지

   슈퍼컴퓨터가 포트란을 많이 쓴다고 들었습니다
   기상청 채용공고 조건에 포트란이 있더라구요..

   교수님: (타르볼을 이메일로 쏘며) 자네, 이 포트란 코드 좀 파이썬으로 포팅 해오게, 내일 아침까지.

   이런 경우 말고 포트란에 입문하는 경우가 있을까요?!

   인력이 없다지만 채찍피티가 포트란을 쓴다면 어떨지?

   이미 python으로 다 넘어가신게 아니었나요... ㄷㄷㄷ

   포트란이 사장된 언어가 아니었군요~ 지금도 업데이트 중인지 몰랐네요~

   헉.. 로스트 테크놀로지같은 느낌이었는데.. 정적/강 타입언어에 병렬처리에, 구문도 간단하다구요..?

   전산시뮬레이션에선 현역입니다ㅎㅎ 저희분야에서는 좀 빡센 시뮬레이션 코드는 80%가 포트란이고 나머지는 C...

   포트란이 아직도 업데이트중이었군요 WoW..

   아.. 저 사회생활 초기에 Microsoft Fortran Powerstation 으로 코딩했었는데..

        Hacker News 의견

     * 로스알라모스 국립 연구소, 미션 크리티컬 코드에 포트란에 의존하는 위험에 대한 보고서 발표
     * 보고서는 포트란의 계속적인 사용과 관련된 7가지 위험을 강조, 직원 확보의 어려움과 미래 CPU 및 GPU 기술에서의 성능 저하 등을 포함
     * 저자는 포트란이 ""유지보수 언어""가 되고 있다고 믿으며, 언어를 잘 알고 있는 사람의 부족, 학습에 대한 낮은 관심, 교육 및 보상에 대한 불충분한 투자 등을 언급
     * 포트란은 고성능 컴퓨팅을 단순화하고 상용화하기 위한 경쟁에서 독특한 위치에 있다.
     * 최근의 발전을 놓치기는 했지만, 포트란은 최적의 계산 성능을 갖춘 숫자 계산과 고성능 컴퓨팅을 위한 언어로 남아 있다.
     * Matlab 사용의 위험에 대한 더 많은 연구가 필요하다. 많은 학계 및 산업 연구자들이 여전히 이에 의존하고 있다.
     * 포트란은 Python의 Numpy/Scipy와 비교했을 때 수치 선형 대수에서 훨씬 빠른 성능을 보여준다.
     * 포트란은 배우기 쉽지만, 외부 라이브러리와 작업 제어와 관련하여 도전이 있다.
     * 포트란은 역사적인 중요성과 대규모 계산에서의 높은 사용량을 가지고 있으며, 더 많은 주목을 받을 만하다.
     * 포트란의 현대적인 웹사이트는 오래된 언어에 대한 기대를 뛰어넘는 인상적이다.
"
"https://news.hada.io/topic?id=10498","나의 스크립트를 훔쳐 AutoHotKey 배우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       나의 스크립트를 훔쳐 AutoHotKey 배우기

     * 이 기사는 고도로 평가받는 Windows 자동화 도구인 AutoHotKey에 대한 것입니다.
     * 저자는 AutoHotKey 스크립트 대부분과 자세한 설명을 공유하여, 이 도구를 어려워하는 사람들에게 도움을 주고 있습니다.
     * 총 14개의 파일이 있으며, 특정 폴더를 빠르게 열거나 현재 날짜를 삽입하고, 새로운 단축키로 모든 프로그램을 확장하며, 타임스탬프를 UTC와 현지 시간으로 변환하는 등의 기능을 다룹니다.
     * 스크립트에는 vim 팬들을 위한 모달 단축키 시스템과 간단한 GUI 데모도 포함되어 있습니다.
     * 이 스크립트들은 학습 목적으로 특별히 설계된 교육용 코드베이스로 제시됩니다.
     * 각 스크립트는 무엇을 하는지, 때로는 왜 특정한 방식으로 수행되는지 설명하기 위해 상세히 주석 처리되어 있습니다.
     * 저자는 더 잘 설명하고 싶은 부분이 있다면 이슈를 제기하도록 독자들에게 권장합니다.
     * 저자는 뉴스레터에서 교육용 코드베이스의 이론에 대해 작성한 바 있습니다.
     * 이 기사는 AutoHotKey를 배우는 실질적이고 실용적인 접근법을 제공함으로써, Windows에서 작업을 자동화하는 강력한 도구에 대해 기술에 능숙한 독자들에게 특히 흥미롭습니다.

        Hacker News 의견

     * AutoHotKey(AHK) 사용에 대한 기사, 사용자들이 개인적인 경험과 스크립트를 공유
     * 한 사용자가 글쓰기에 유용한 빈 메모장을 빠르게 열 수 있는 스크립트 공유
     * 다른 사용자가 AHK 언어 구문, 특히 다양한 모니터와 크기를 다루는데 어려움을 표현
     * Ctrl + Shift + V를 포맷 없이 붙여넣기로 매핑하는 AHK 스크립트 공유, 게임 체인저로 발견
     * AutoHotKey가 결혼식용 ""포토박스"" 설정에 사용되어, 포토 박스 대여에 드는 수백 유로 절약
     * 한 사용자가 AHK를 사용하여 키보드에 문자 추가, 조명 레벨 조절, 타임스탬프 추가, 모니터 전원 제어
     * 다른 사용자가 날짜/타임스탬프 삽입, 애플리케이션 실행, 클립보드를 일반 텍스트로 붙여넣기, 미디어 및 볼륨 단축키 등 다양한 단축키에 AHK 사용
     * 한 사용자가 Caps Lock과 Escape를 교환하는데 AHK를 사용하는데 어려움을 공유, 다른 소프트웨어를 설치할 수 없는 업무용 컴퓨터에서
     * 한 사용자가 더 나은/빠른 앱 전환을 위해 AHK 사용, 모든 것을 제어하는 ""단축키"" 활성화 키
     * 한 사용자가 AHK가 강력하고 상당한 금액을 절약해주지만, 언어 사용이 가장 즐겁지 않다고 지적
     * 가장 인상적인 공유된 스크립트는 Diablo 3를 컨트롤러로 플레이하는데 사용되어, 반복적인 부상(RSI)를 예방하는 것
"
"https://news.hada.io/topic?id=10547",""Factorio: 우주 시대"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ""Factorio: 우주 시대""

     * 게임 'Factorio' 확장판 발표, ""Factorio: Space Age"" 제목으로
     * 확장판, 우주로 로켓 발사 후 플레이어의 여정 계속, 새로운 세계 탐색과 독특한 도전과 자원 제공
     * 확장판, 원래 1.0 Factorio 출시의 일부 계획되었으나, 야심찬 성격으로 인해 연기
     * 게임 플레이, 건설 재료 운송을 위해 우주로 여러 로켓 발사, 궤도에 큰 우주 플랫폼 구축
     * 확장판, 각각 독특한 테마, 자원, 도전, 게임 메커니즘을 가진 네 개의 추가 행성 소개
     * 플레이어가 행성을 이용하는 순서, 게임에 영향을 미치는 전략적 선택
     * 기술 트리, 확장판을 위해 재조정, 일부 아이템은 바닐라 게임에서 특정 행성에서 나중에 잠금 해제
     * 확장판, 업데이트된 게임 엔진을 활용하는 모드로 기술적으로, 많은 개선 사항이 모든 플레이어에게 제공될 예정
     * 확장판 출시, 약 1년 후 계획
     * 게임, 1년 이상 시작부터 완료까지 플레이 가능, 이미 플레이를 기반으로 한 여러 개선 반복
     * 개발자들, 프로그래머와 아티스트 모두 완료해야 할 안정적인 작업 목록이 있으므로 약 1년 후에 완성된 제품을 출시할 수 있다고 확신
     * 확장판 콘텐츠에 대한 금지가 해제되었고, 개발자들은 출시까지 매주 확장판에 대한 업데이트를 발표할 예정
     * Space Age 확장판, Space Exploration 모드와 비슷해 보이지만 다름. 확장판은 게임 엔진이 지원하는 독특한 게임 메커니즘을 가진, 접근성이 좋고, 길이가 짧고, 복잡성이 덜한 디자인
     * 개발자들, 커뮤니티로부터 확장판에 대한 피드백을 기대

        Hacker News 의견

     * 'Factorio: Space Age'의 다가오는 출시에 대한 게시물, 인기 게임 Factorio의 확장팩으로, Space Exploration mod의 창작자가 개발
     * Space Exploration mod는 수백 시간의 게임 플레이를 제공하는 놀라운 퍼즐 게임으로, 다양한 추상화와 복잡성 수준을 도입
     * 'Factorio: Space Age'는 mod보다 경험이 덜 하드코어할 것으로 예상되지만, 비슷한 재미와 참여 수준을 제공할 것으로 예상
     * 게임의 개발 과정은 품질에 대한 헌신으로 칭찬받으며, 게임은 1년 이상 시작부터 끝까지 플레이 가능하였고, 여러 개선 반복을 허용
     * 일부 플레이어들은 게임의 자원 관리 메커니즘에 대해 우려를 표현하며, '우주 로켓'의 엔드 게임 자원 소모가 만족스러운 목표가 아니라고 제안
     * 클리프 폭발의 연기에 대한 우려도 있음, 이는 플레이어가 게임의 지형을 수정할 수 있는 기능으로, 일부 플레이어는 그들의 게임 전략에 필수적이라고 생각
     * 이러한 우려에도 불구하고, 많은 플레이어들이 다가오는 출시에 대해 흥분하고 있으며, 일부는 게임을 플레이하는데 상당한 시간을 할애할 계획
     * 게시물은 또한 비슷한 게임인 shapez.io를 언급하며, 이는 더 깔끔한 미학을 제공하고 플레이어 캐릭터를 특징으로 하지 않음
     * 확장팩은 기본 게임을 넘어서지 않은 플레이어들과 mod를 광범위하게 사용한 플레이어들을 끌어들일 것으로 예상
"
"https://news.hada.io/topic?id=10572","Show GN: 나는 "QR 코드 스네이크 게임"을 80바이트 어셈블리에 맞추었습니다. ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Show GN: 나는 ""QR 코드 스네이크 게임""을 80바이트 어셈블리에 맞추었습니다.

   그렇다면 ""Can you fit a whole game into a QR code?""라는 비디오를 보셨을 것입니다. 게임의 전체 실행 파일을 QR에 맞추려고 시도하는 MattKC가 그렇게 했고 그 결과는 거대한 QR이었습니다. 제 목표는 전체 게임을 포함하는 작은 QR 코드를 만드는 것이었고 저는 성공했습니다. 나도 그와 같은 게임인 뱀으로 이 일을 했습니다. 전체 코드는 GitHub 리포지토리에서 찾을 수 있습니다.
"
"https://news.hada.io/topic?id=10589","ChatGPT로 DevOps 워크플로 개선하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ChatGPT로 DevOps 워크플로 개선하는 방법

     * 문서화
          + ChatGPT에 “DevOps 초급자용 튜토리얼 문서를 작성해달라”고 요청하는 상황
          + “write a detailed tutorial for DevOps beginners”라는 프롬프트를 사용하고, 출력되는 파일 형식은 “markdown”으로 지정. 저장될 파일 이름은 “tutorial.md”로 지정
          + CLI 명령어: python3 code_genetate.py --prompt ""write a detailed tutorial for devops beginners"" --format ""markdown"" --file_name ""tutorial.md""
          + 위 결과로 tutorial.md 파일 만들어짐
     * 실시간 번역
          + 위에서 만든 tutorial.md 파일을 한국어로 번역해 한국어용 tutorial-kr.md파일을 만들기
          + CLI 명령어: python3 file_process.py --input tutorial.md --output tutorial-kr.md --prompt ""translate the above file into Korean""
          + 위 결과로 tutorial-kr.md 파일 만들어짐
     * 코드 생성
          + 위 내용 기반으로 Ansible 코드 생성
          + CLI 명령어: python3 write_with_chatgpt.py --prompt ""having public and private subnet, attach internet gateway and nat gateway to the subnets also launch an instance inside the public subnet"" --format ""ansible"" --file_name ""ansible.yaml""
          + 위 결과로 ansible.yaml 파일 만들어짐
     * 코드 검토, 이해
          + ChatGPT 도움으로 위에서 만든 Ansible 코드를 이해하기
          + CLI 명령어: python3 file_process.py --input ansible.yaml --output report.txt --prompt ""explain the above code in detail""
          + 위 결과로 report.txt 파일 만들어짐
     * 오류 감지, 해결
          + “위 코드에서 하드코딩된 비밀 키가 있다면 알려줘”와 같은 질문을 사용해 오류를 감지하고 해결
     * 개념 증명(PoC)
          + “하루 평균 10000명의 유저가 사용할 node.js 애플리케이션을 배포하려고 하는데 AWS에서 어떤 인스턴스 타입이 괜찮은가?”라는 질문을 사용해 PoC 방향 설정과 제안받음
     * 리팩토링
          + “작성한 코드 리팩토링 해줘”와 같은 질문으로 코드 리팩토링 제안받음
"
"https://news.hada.io/topic?id=10546","Show HN: Rev Obsidian Sync - 리버스 엔지니어링한 옵시디안 동기화 서버 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Show HN: Rev Obsidian Sync - 리버스 엔지니어링한 옵시디안 동기화 서버

     * 한 고등학생(최근 졸업)이 Obsidian Sync를 리버스 엔지니어링 해서 오픈소스로 제작하여 Show HN에 공개
     * 파일 리커버리/스냅샷/파일 히스토리 기능을 제외한 기본 동기화 기능은 지원
     * Obsidian CEO가 직접 댓글 남김 ""인상적이네요. 현재 구현으로 보면 나중 업데이트에서 잘 안 동작할 수 있을 것 같아요. 그리고 Obsidian Sync는 트레이드마크이므로 이름만 변경해주세요""
     * Go로 작성한 오픈소스

     ""안녕하세요 HN,저는 최근 고등학교를 졸업하고 공식 동기화 서비스에 매달 $8을 지불할 여유가 없어서 서버를 복제해 보았습니다. 아직 파일 복구와 히스토리 등 몇 가지 기능이 누락되어 있지만, 기본 동기화는 작동하고 있습니다.Obsidian.md의 창작자들에게: 아마도 저는 이용 약관을 위반하고 있을 것이고, 죄송합니다. 요청이 있으면 저장소를 내리겠습니다. 아직 제품화 준비가 되지 않았고 매우 비효율적입니다; 경쟁이 아니므로 너그럽게 봐주시길 바랍니다.

   옵시디안 동기화 기능을 이용하고 싶은 사람으로서 느낌표가 많이 떠오르네요. :) 내용 공유해주셔서 감사드립니다! 옵시디안 CEO 반응을 보니 8달러 내고 이용해도 괜찮겠다는 생각도 들었어요.

   완전히 옮기진 않았는데 Obsidian CEO의 댓글을 이용한 대응이 훌륭하다고 생각합니다.

   댓글중에 비용때문에 꺼리는 사람을 위해, Remotely-Save 라는 동기화 플러그인도 추천하네요
   https://github.com/remotely-save/remotely-save

        Hacker News 의견

     * Obsidian, 노트 작성 앱의 CEO는 사용자들이 Obsidian 파일을 동기화/백업하는 다양한 방법과 Markdown 도구 생태계의 탄탄함을 칭찬한다.
     * Obsidian은 VC 지원이 아닌 사용자 지원의 소규모 회사로, Sync 가격 정책이 사업을 유지하는 데 도움을 준다.
     * CEO는 오픈 소스 obsidian.md 동기화 서버의 이름을 공식 Obsidian Sync와 혼동을 피하기 위해 변경할 것을 제안한다.
     * 일부 사용자들은 Git, Syncthing, 커뮤니티 플러그인 등을 통해 무료로 노트를 동기화하는 대안적인 방법을 찾아냈다.
     * 한 사용자는 개인 S3 버킷과 암호화를 사용한 Remote-save를 통해 장치 간에 동기화한다.
     * 일부 사용자들은 통합, 신뢰성, ""동기화 버전 기록 보기""와 같은 기능 때문에 Obsidian이 제공하는 동기화 서비스가 가치가 있다고 생각한다.
     * 사용자들은 Syncthing 및 주요 Obsidian git 확장 도구를 사용하여 동기화하고 충돌을 해결하는 데 성공했다.
     * 일부 사용자들은 Obsidian의 더 저렴하거나 무료 버전의 필요성을 의문시하며, 회사가 자체를 유지해야 하고 이미 주요 제품을 무료로 제공하고 있다고 주장한다.
     * 다른 사용자들은 Markdown 디렉토리 동기화 위에 가치를 더하는 HTTP API를 제공하는 동기화 서비스나 더 나은 아웃라이너 모드/플러그인과 같은 추가 기능에 관심이 있다.
"
"https://news.hada.io/topic?id=10549","OpenTF, Terraform의 포크 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        OpenTF, Terraform의 포크 발표

     * OpenTF 이니셔티브가 HashiCorp의 핵심 제품들, 특히 Terraform의 라이선스를 Business Source License (BSL)로 변경하는 결정에 대응하여 Terraform의 포크를 발표
     * OpenTF 이니셔티브는 100개 이상의 기업, 10개의 프로젝트, 400명의 개인이 Terraform을 오픈소스로 유지하기 위해 시간과 자원을 약속하는 등 커뮤니티로부터 대규모의 지지를 받는 선언문과 함께 시작됨
     * 이 선언문은 두 단계를 제시: 첫째, HashiCorp에게 라이선스 변경을 철회하도록 호소하고, 둘째, 라이선스가 철회되지 않을 경우 Terraform 프로젝트를 OpenTF로 포크하는 것
     * HashiCorp가 결정을 철회하지 않았기 때문에, OpenTF는 이제 Terraform의 포크로서, 다양한 회사의 엔지니어들이 협력하여 이를 가능하게 함
     * OpenTF는 진정한 오픈소스, 커뮤니티 주도, 공정, 계층화 및 모듈화, 그리고 하위 호환성을 목표로 하고 있음
     * OpenTF는 Linux Foundation의 일부가 되기 위한 모든 필요한 문서를 완성하였으며, 최종 목표는 Cloud Native Computing Foundation의 일부가 되어 오픈소스이며 벤더 중립적으로 유지되도록 하는 것
     * OpenTF 팀은 이미 프로젝트 작업을 시작하였으며, 현재 상태는 OpenTF로의 전체 저장소 이름 변경, 초기 조정 위원회 멤버 선정, 커뮤니티 문서의 조정 및 정리, CI/CD 파이프라인 및 다양한 테스트 하네스 설정등의 작업을 포함
     * OpenTF 저장소는 공식적으로 재단의 일부가 되고 기본적인 커뮤니티 가드레일 및 프로세스가 구축되면 곧 공개될 것으로 예상

   OpenTF 선언문(Manifesto)

        Hacker News 의견

     * Terraform의 포크인 OpenTF는 라이선스 문제에 얽매이지 않고 빠른 설정, 다가오는 릴리스, 공개 로드맵, 엔지니어링 작업 등의 긍정적인 측면에 초점을 맞추고 있다.
     * OpenTF는 상당한 지원을 받았으며, 네 개의 회사가 이 프로젝트에 14명의 풀타임 엔지니어에 해당하는 지원을 약속했으며, 이는 앞으로 몇 주 안에 두 배로 늘어날 것으로 예상된다.
     * OpenTF는 Linux Foundation의 일부가 되고 결국 Cloud Native Computing Foundation의 일부가 되려고 하며, 이는 긍정적인 움직임으로 여겨진다.
     * OpenTF의 커뮤니티 주도 접근 방식, 즉, 풀 요청이 정기적으로 검토되고 장점에 따라 수락되는 것이 인정받고 있다.
     * OpenTF는 Terraform에서 소홀히 대하던 인기 있는 PR들을 부활시킴으로써 Terraform을 앞설 수 있다는 제안이 있다.
     * Sun 소프트웨어의 포스트-Oracle 포크와 비교되며, 커뮤니티 중심의 포크가 원래 프로젝트를 앞섰다.
     * OpenTF 재단의 주요 기여자들의 실적에 대한 우려가 있으며, 그들이 프로젝트의 좋은 관리자가 될 수 있는 능력에 의문을 제기한다.
     * OpenTF는 2k+ 별, 100+ 회사, 400+ 개인이 약속한 높은 수준의 지원을 받았으며, Hashicorp의 Terraform Core 팀 전체보다 더 많은 풀타임 엔지니어링 포지션을 약속받았다.
     * 일부는 Hashi TF를 포크로 간주하며, 그들은 라이선스를 비오픈소스로 변경했지만, OpenTF는 다른 이름으로 동일한 MPL 라이선스를 유지한다.
     * Linux Foundation은 OpenTF 커뮤니티와 함께 일하는 것을 기대하고 있으며, 그들을 중립적인 관리 아래에 두려고 한다.
     * OpenTF가 풀 요청 승인의 좋은 처리량을 유지할 수 있다면, 그것은 잠재적으로 Terraform의 기능에서 앞설 수 있다.
"
"https://news.hada.io/topic?id=10593","ChatGPT 엔터프라이즈를 소개합니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ChatGPT 엔터프라이즈를 소개합니다.

   엔터프라이즈급 보안 및 개인 정보 보호, 무제한 고속 GPT-4 액세스, 더 긴 입력을 처리하기 위한 더 긴 컨텍스트 창, 고급 데이터 분석 기능, 사용자 정의 옵션 등을 제공하는 ChatGPT Enterprise를 출시합니다.

   OpenAI에 따르면, 불과 9개월 전 ChatGPT가 출시된 이후 Fortune 500대 기업 중 80% 이상의 팀에서 ChatGPT를 채택했다네요.

엔터프라이즈용 ChatGPT의 주요 특징:

   엔터프라이즈급 보안 및 개인 정보 보호
     * OpenAI 모델 교육에는 고객 프롬프트와 회사 데이터가 사용되지 않습니다.
     * 저장 중(AES 256) 및 전송 중(TLS 1.2+) 데이터 암호화
     * 인증된 SOC 2 준수

   대규모 배포를 위한 기능
     * 대량 회원 관리 기능이 있는 관리 콘솔
     * SSO
     * 도메인 확인
     * 사용량 통찰력을 위한 분석 대시보드

   ChatGPT의 가장 강력한 버전
     * GPT-4에 무제한 액세스(사용 한도 없음)
     * GPT-4의 더 빠른 속도 성능(최대 2배 더 빠름)
"https://news.hada.io/topic?id=10519","당신의 입력란과 텍스트 영역에 dir="auto" 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     당신의 입력란과 텍스트 영역에 dir=""auto"" 추가
     * 고급 데이터 분석(이전의 코드 해석기 ) 에 대한 무제한 액세스

     * 4배 더 긴 입력, 파일 또는 후속 조치를 위한 32k 토큰 컨텍스트 창
     * 웹 애플리케이션에서 오른쪽에서 왼쪽으로 언어 지원(RTL; 히브리어, 아랍어, 우르두어 등) 추가의 중요성에 대한 기사
     * 회사에서 협업하고 공통 워크플로우를 구축할 수 있는 공유 가능한 채팅 템플릿
     * 저자는 처음에 문자 리스너나 서드파티 라이브러리 사용을 제안하는 일반적인 해결책으로 RTL 지원을 어떻게 구현할지 고민했음
     * OpenAI를 조직을 위한 완전한 맞춤형 솔루션으로 확장해야 하는 경우 API를 사용할 수 있는 무료 크레딧

     * 저자는 HTML 코드의 입력란이나 텍스트 영역에 dir=""auto""를 추가함으로써 RTL 지원을 추가하는 더 간단한 해결책을 발견함
   하이요

     * 이 작은 변화는 애플리케이션에서 입력에 따라 텍스트 방향을 자동으로 조정하게 해, 전 세계 사용자들에게 더욱 접근하기 쉽게 만듦
   최소한 우덜식 보안을 고수하는 한국 주요 기업에서 쓸 일은 없다는 건 확실하죠.
   오죽하면 클라우드도 안쓰려고 고집을 피우겠어요.
     * 저자는 이 해결책이 검색 결과에서 일반적으로 제안되지 않으며, 대개 수동 개입이나 서드파티 라이브러리를 추천한다고 강조함

   이러니 저러니 해도 결국 가격이 궁금해지네요.
     * 저자는 dir=""auto"" 해결책을 테스트하고 이것이 완벽하게 작동함을 발견, RTL 지원을 추가하는 간단하고 효과적인 방법이라는 결론을 내림
"
     * 저자는 다른 개발자들이 이 간단한 해결책을 사용하여 그들의 애플리케이션을 더욱 전 세계적으로 접근 가능하게 만들도록 격려하는 말로 마무리함
"
"https://news.hada.io/topic?id=10615","젊은이들에게 드리는 한 마디: 사랑하는 것들을 다운로드 받아두세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  젊은이들에게 드리는 한 마디: 사랑하는 것들을 다운로드 받아두세요

     * 자신이 좋아하던 ""The Totally Rad Shaw"" 의 오리지널 에피소드들이 다운로드 불가능해졌다는 것을 알게됨
          + 최근 일부 에피소드가 YouTube에 업로드되었지만, 영원히 그곳에 남아있을 보장은 없음
          + 기회가 있을 때 외부 저장장치에 에피소드를 저장하지 않은 것을 후회함
     * 예전엔 많이들 다운로드해서 로컬에서 재생했지만, 최근엔 스트리밍이 가능하므로 전혀 다운로드를 하지 않음
     * 이는 다른 것에도 적용됨
          + Youtube 이전 시태의 인터넷 동영상은 아주 조금이긴 하지만, 볼 수도 없음
          + 스트리밍 서비스에서 듣기 불가능한 버전의 음악들도 있음
     * 인터넷에 있는 것들은 영원할 수 있지만, 다른 사람이 이걸 계속 유지할 것이라고 가정하기는 어려움
     * 특히, 호스팅 하는데 실제 비용이 드는 비디오와 같은 콘텐츠는 더욱 그러함
     * 마음에 드는 것이 있다면, 로컬로 다운로드하여 하드 드라이브에 저장해둘것
     * 비디오 콘텐츠의 경우 yt-dlp 를 사용해볼 것을 권장

   가족들 사진이나 영상이라면 모를까, 다른 콘텐츠들은 '굳이 다운로드까지?' 싶네요.
   저도 한동안 DVD나 블루레이 사 모은 적도 있는데, 오래전에 본 영화나 드라마 같은 것들 대부분 기억 속에서나 아름답지 10년 정도 지나서 다시 보면 그때의 재미나 감동을 다시 느끼기 어렵더라구요. 그리고 새로 나오는 콘텐츠만 즐기기에도 인생이 모자라서.. ㅎㅎ

   지대넓얕이라는 팟캐스트가 팟빵에서 없어진 이후로 많이 느끼고 있는 부분입니다. 다행이도 유튜브에 다 있더라고요.

   좀 그런 사례지만... 그렇고 그런 영상이나 매체물도 해당이 됩니다. 그들이 말하는 방주라거나... 한때 ‘그녀’를 위해 하드디스크 대량 구매해 보관 잘 하고 있다는 사례도 있고요. 스트리밍은 언제가 결국 없어지기 마련이니...

   사진을 취미로 10년 넘게 찍는 입장에서 클라우드 서비스들은 믿지 않는게 좋더라고요.
   저는 더 나아가서 디지털도 크게 신뢰하지 않아요. 가능한 인화해서 보관합니다.
   사진은 요즘에는 인화하는 분들이 별로 없는데, 저는 인화하는 것 강력하게 추천합니다.

   드는 생각 몇 가지를 적어봅니다.
     * 미래에는 책이 더 긴 생명력을 가질거라는 이야기가 있더군요. 비디오테이프를 생각해보면 100년뒤에 어디에서 비디오플레이어를 찾을것인가 하는거죠
     * 영원을 바라는 것은 인간의 욕심이 아닐까요? 집안 어르신들의 장롱속 오래된 사진들은 누가 찾아볼까요? 우리가 구글포토에 쌓아둔 사진들은 우리 아이들, 손주들이 얼마나 찾아볼까요?
     * 어느 사이트였죠? 검색 순위를 위해서 이전 자료들을 삭제한다고 했던 뉴스. 그건 좀 끔찍하더군요.

   역사적인 의미로서의 보존은 다른 차원의 이야기이다 싶고, 개인이라면 오히려 사라지는 것은 사라지는 대로 흘려 보내줘야 하는 것이 아닌가 싶습니다.

   세 번째 내용은 https://news.hada.io/topic?id=10278 이거 느낌입니다!

   요즘 신문기사도 온라인에만 나오는데 기사 수정이나 밑장빼기를 방지하기 위해서라도 물리적인 스크랩의 중요성은 올라가더라고요

   이걸 보니 조금 다른 이야기지만 놓쳐서 구할 길이 아주아주 적어진 앨범 하나가 떠오르네요.

   앨범 하나를 어디선가 구매해서 잘 듣고 있었는데, 후속 앨범이 나온 걸 모르고 있었습니다.
   이걸 나중에 구하려고 보니...

   소규모 팀에서 만들어서 행사에 나와서 판매한 앨범이라 발매 수량 자체도 극소수고,
   구매자도 적어서 그런지 온라인에 립도 없고, 해당 팀은 그 뒤로 활동을 안 하는 것 같은 그런...

   결국 작곡가 한 분 SNS로 연락해서 앨범 남는 거 있는지 or 음원이라도 구매 가능한지 물어보려고 했었어요.
   근데 그때도 벌써 1~2년가량 지난 시점이라 좀 민폐 아닐까 싶어서 결국 포기했었는데...

   이제 와서 생각해 보면 이미 늦었다고 생각한 때가 제일 빠른 때였습니다.

   아무튼 희망?은 Internet Archive랑 Archive Team 같습니다.

   Internet Archive야 Wayback Machine으로 유명하고,
   Archive Team은 종료 직전에 놓인 서비스들을 자원봉사자들이 크롤링해서 그걸 Internet Archive에 올려서 최대한 오래 보관될 수 있도록 하더군요.

   물론 여기는 서비스 단위로 하기 때문에 아무도 모르게 삭제되는 유튜브 영상은 막을 방법이 없지만,
   그래도 이런 일을 하는 사람들이 있다는 게 참 다행입니다.

   CD 와 DVD , 그리고 블루레이까지 모으다가 요즘은 미디어 콘텐츠는 컬렉팅을 안하게 되었네요.
   (아예 피지컬한 레고와 보드게임만 모으고 있습니다.)
   글에서 얘기한 것 처럼 미디어는 스트리밍 으로 쉽게 접근하게 된게 이유이기는 한데요.

   정말로 시간이 지나도 만나기 힘든 예전 콘텐츠들이 있기도 하니까, 아주 좋아하는 것들은 저장해두는 것을 권장합니다.
   요즘 어린 친구들은 다운로드해서 저장해두는 개념 자체를 모를 것도 같아요.

   적으면서 생각이 났는데, 아주 오래 전에 자주 듣던 노래인 Space A 의 Again 이란 곡이 있는데요.
   이게 원곡 보다 댄스 리믹스가 훨씬 좋은데, 이 곡의 원 출처를 알수가 없더라고요.
   CD로 가지고 있고 싶었는데 말이죠
   https://www.youtube.com/watch?v=rp-b0J3QihU
   유튜브에는 남아있긴 하더군요. 근데 이것도 언제 사라질지 모르니.. 저장을 해둬야 ㅎㅎ

        Hacker News 의견

     * 앞으로를 위해 사랑하는 것들을 누가 만들었는지와 어디에서 다운로드했는지 추적하는 것이 중요합니다.
     * 사랑하는 것들을 다운로드하면 앞으로 쉽게 찾고 접근할 수 있습니다.
     * 스트리밍 서비스는 종종 난해하고 오래된 미디어를 호스팅하지 않아 알려지지 않은 보석들의 손실을 야기합니다.
     * 인터넷은 변동적인 것이므로 항상 접근 가능하지 않을 수 있다는 인식으로 디지털 라이프를 구축하는 것이 중요합니다.
     * 디지털 콘텐츠를 저장하기 위해 이중 시스템을 가지는 것은 우선순위를 정하고 진정으로 사랑하는 것들만 보관하는 데 도움이 될 수 있습니다.
     * 중앙집중화는 정보의 손실을 야기할 수 있으므로 개인적인 메모와 웹페이지 아카이브를 유지하여 소중한 콘텐츠를 보존하는 것이 중요합니다.
     * 소셜 미디어 플랫폼에만 의존하는 대신, 생성한 콘텐츠를 직접 관리할 수 있는 곳에 보관하는 것이 중요합니다.
     * 디지털 콘텐츠를 저장하고 접근하는 방법을 문서화하면 소유권을 유지하고 다른 도구와 유틸리티를 활용할 수 있습니다.
     * YouTube와 같은 플랫폼에서 콘텐츠에 접근을 잃을 수 있으므로 중요한 것들을 다운로드하고 저장하는 것이 중요합니다.

   때에 따라서는 보내주고, 잊혀지는 것도 필요하지 않을까요? 무엇인가 소중한 것들은 옆에 없을때 느끼자나요
"
"https://news.hada.io/topic?id=10501","Cloud GPU 가이드 - AI에 어떤 GPU를 어디서 써야할까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Cloud GPU 가이드 - AI에 어떤 GPU를 어디서 써야할까?

     * StableDiffusion, Whisper, 오픈소스 LLM등을 이용한 AI도구를 만든다면 어디선가 계속 실행되어야 함

어떤 GPU를 써야할까?

   Cloud GPU를 쓴다면:
     * Falcon-40B, Falcon-40B-Uncensored, or Falcon-40B-Instruct
          + 비용 상관없이 최고의 성능을 원한다면 H100 2개
          + 비용과 성능 밸런스를 추구한다면 RTX 6000 Ada 2개(A6000 이나 RTX6000 아님)
          + 저렴하게 원하면 A6000 2개
     * MPT-30B
          + 최고의 성능이나 가성비: H100 1개
          + 저렴 : A100 80GB 1개
     * Stable Diffusion
          + 최고의 성능 : H100 1개
          + 가성비 : 4090 1개
          + 저렴 : 3090 1개
     * Whisper
          + Stable Diffusion과 같음
          + Whisper-Large 는 더 적은 VRAM에서 실행가능하지만, 대부분 클라우드는 그런 카드가 없음
          + 4090/3090도 잘 동작하고, CPU에서도 가능
     * 대규모 LLM을 파인튜닝 한다면
          + H100 클러스터 또는 A100 클러스터
     * 대규모 LLM을 훈련하고 싶다면
          + 대규모 H100 클러스터
            로컬 GPU를 쓴다면:
     * 위와 거의 같지만, LLM 훈련 및 파인튜닝은 불가
     * 대부분의 LLM들은 작은 VRAM에서 실행 가능한 버전이 있음 (Falcon on 40GB)

모델들을 로컬에서 실행해야 할까? 클라우드 GPU로 실행해야 할까?

     * 둘다 합리적인 선택임
     * 모델을 클라우드에서 실행하려면 Runpod 의 템플릿이 가장 쉬운 선택임
     * 가장 쉬운 옵션은 호스트된 인스턴스를 사용하는 것 : DreamStudio, RunDiffusion, Playground AI for stable diffusion 등

RTX 6000, A6000, 6000 Ada 은 무슨 차이야 ?

   셋이 완전히 다름
     * RTX 6000 (Quadro RTX 6000, 24 GB VRAM, 2018/08/13 출시)
     * RTX A6000 (48 GB VRAM, 2020/10/05 출시)
     * RTX 6000 Ada (48 GB VRAM, 2022/12/03 출시)

DGX GH200, GH200, H100?

     * 1개의 DGX GH200 은 256개의 GH200 을 포함하고 있음
     * 1개의 GH200 은 1개의 H100 과 1개의 Grace CPU를 포함

H100 은 A100에서 큰 업그레이드인가 ?

     * 당근. 스피드 향상이 매우 큼. H100은 A100 보다 더 많은 수의 GPU로 확장이 가능
     * 즉 LLM 훈련에는 H100 여러대가 최고임

AMD, Intel, Cerebras 는 ?

     * 현재로선 Nvidia가 제일 쉬움

어떤 GPU 클라우드를 써야할까 ?

     * 다수의 A100/H100이 필요하다면: Oracle, FluidStack, Lambda Labs 등에 문의.
     * 몇대의 A100이 필요하다면: FluidStack or Runpod
     * H100 1개가 필요하다면: FluidStack or Lambda Labs
     * 저렴한 3090s, 4090s, A6000s: Tensordock.
     * Stable Diffusion 추론만 필요하다면: Salad.
     * 다양한 종류의 GPU가 필요하다면: Runpod or FluidStack.
     * 템플릿을 쓰거나 취미로 한다면: Runpod.
     * 큰 클라우드는 가격이 비싸고 복잡함

시작하기 가장 쉬운 GPU Cloud

     * RunPod에서 템플릿 사용
     * RunPod 파드는 완전한 기능을 갖춘 VM이 아니라 호스트 머신의 도커 컨테이너라는 점에 유의할 것

얼마나 많은 VRAM과 시스템 램, 몇개의 vCPU가 필요할까 ?

     * VRAM (Video RAM / GPU RAM)
          + Falcon-40B: 85-100GB
          + MPT-30B: 80GB
          + Stable Diffusion: 16GB+ 이상 선호
          + Whisper: 12GB+. (OpenAI 버전을 사용하면 이정도, 커뮤니티 버전으로는 CPU로도 가능)
     * System ram
          + VRAM의 1~2배
     * vCPUs
          + 8-16 vCPU면 대규모 GPU 워크로드가 아닌 이상 충분
     * 디스크 용량
     * 유스케이스에 따라 다름. 잘 모르겠으면 100GB로 시작해서 유스케이스에 맞는지 볼 것

   Runpod 쓰고 있는데 저렴하고 사용하기 쉽고 너무 좋아요! 좋은 정보 감사드립니다.

   아주 좋은 정보네요!

   사소하지만 아래쪽에 2개 섹션 정도가 누락된 것 같아 추가해보았습니다. :)


  SXM나 PCIe, NVLink가 필요할까?

     * 확신하지 못하겠다면, 우선은 중요하지 않다고 가정할 것
     * 더 자세히 알아려면: https://gpus.llm-utils.org/nvlink-sxm-and-pcie/

  인피니밴드(InfiniBand)는?

     * 1~2개의 GPU를 사용하는 경우에는 필요없음. 수천 개의 클러스터를 사용하는 경우 필요.

   좋은 글 감사합니다!

   관련한 분들에게는 정말 소중한 정보이겠군요

   오 아주 유용한 자료네요.
"
"https://news.hada.io/topic?id=10610","ssh(1)에 키 스트로크 타이밍 난독화 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ssh(1)에 키 스트로크 타이밍 난독화 추가

     * ssh(1)에 키 스트로크 타이밍 난독화가 추가되었습니다.
     * 실용적인 보안 솔루션에서 중요한 발전입니다.
     * 키 스트로크 타이밍 난독화의 추가는 ssh(1)의 보안을 강화합니다.
     * 이 기능은 타이밍 공격에 대한 보호를 목표로 합니다.
     * 타이밍 공격은 해커들이 무단 접근을 위해 사용하는 일반적인 방법입니다.
     * 키 스트로크 타이밍 난독화의 구현은 해커들이 타이밍 취약점을 악용하는 것을 더 어렵게 만듭니다.
     * 이 업데이트는 ssh(1)의 보안을 개선하기 위한 긍정적인 한 걸음입니다.
     * 개발자들이 보안 문제에 대한 대응에 헌신하는 것을 보여줍니다.
     * 기술에 능통한 개인들은 이 기사에 관심을 가지고 있습니다. 이는 새로운 흥미로운 보안 기능을 강조하기 때문입니다.
     * 키 스트로크 타이밍 난독화의 추가는 사이버 보안 분야에서 주목할 만한 진보입니다.
     * 이 업데이트는 민감한 정보를 보호하는 데 관심이 있는 업계 전문가들의 주목을 끌 것으로 예상됩니다.
"
"https://news.hada.io/topic?id=10621","트위터(X), 회사 계정에서 채용 공고를 보여주는 X Hiring 베타 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               트위터(X), 회사 계정에서 채용 공고를 보여주는 X Hiring 베타 공개

     * 골드 인증마크(월 $1k) 붙은 회사들 계정 대상으로 채용 공고를 보여주는 기능을 제공
     * 지난 몇달간 일부 회사들과 함께 테스트 했음
     * ""View all jobs"" 를 눌러서 모든 채용 공고를 보고, 각 항목을 눌러서 상세보기 및 지원 가능(별도 호스팅 웹사이트)

   결국 돈벌이는 광고긴 하죠...
"
"https://news.hada.io/topic?id=10513","AI 실시간 인체 전체 사진 생성기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          AI 실시간 인체 전체 사진 생성기

     * 'Generated Photos'라는 새로운 AI 도구에 대한 기사로, 실시간으로 인간의 전신 사진을 생성합니다.
     * 이 도구는 Karras 등이 개발하고 2018년 12월에 Nvidia가 개발한 Generative Adversarial Network (GAN), 특히 StyleGAN에 의해 구동됩니다.
     * 'Generated Photos'는 창의적인 기술 도구를 구축하는데 중점을 둔 Generated Media, Inc.의 제품입니다.
     * 이 AI는 디지털 미디어 회사인 Icons8이 제공한 스튜디오 사진을 사용하여 훈련되었습니다.
     * 회사는 개발자들이 이 기술을 자신의 애플리케이션에 통합할 수 있도록 API를 제공합니다.
     * 사용자들은 도구의 개발과 새로운 기능에 대해 알려주는 업데이트를 받기 위해 가입할 수 있습니다.
     * 회사는 또한 관심 있는 당사자들에게 파트너십 기회를 제공합니다.
     * 이 도구는 사용자 경험, 분석, 그리고 제안에 중점을 둔 디자인으로 제작되었습니다.

        Hacker News 의견

     * AI 실시간 인체 전체 사진 생성기는 GANs(Generative Adversarial Networks)를 사용하여 빠르고 저렴하게 이미지를 생성합니다.
     * GANs는 이미지를 한 번의 전달로 생성하기 때문에 확산 모델보다 빠르며, 진정한 잠재 공간 인코딩으로 편집이 쉽습니다.
     * 대중적인 생각과는 달리, GANs는 수십억 이미지 규모의 데이터셋에서 고화질의 사실적인 이미지를 생성할 수 있으며, 규모가 커질수록 더욱 안정적이게 됩니다.
     * 이 기술의 잠재적인 오용에 대한 우려가 있습니다. 예를 들어, 공공 인물의 이미지를 현실과 구별할 수 없는 가짜 시나리오에서 생성하는 것 등입니다.
     * 일부 사용자들은 인간과 같은 잘 알려진 객체의 이미지를 AI로 생성하는 필요성에 의문을 제기하며, 3D 모델을 렌더링하는 것이 더 효율적일 수 있다고 제안합니다.
     * 이 서비스의 창조자에 대한 투명성 부족에 대한 우려가 있으며, 이는 인터넷에서의 신뢰 저하에 기여합니다.
     * 일부 사용자들은 선량한 프롬프트를 제공했음에도 불구하고 생성된 이미지의 성적화를 발견했습니다.
     * 생성된 이미지의 품질에 대한 의문이 제기되었으며, 일부 사용자들은 생성된 모델에서 자연스럽지 않은 특징을 지적했습니다.
     * AI가 생성한 이미지의 저작권에 대한 질문이 제기되었으며, 창작자들이 상업적 사용 권리를 어떻게 집행할 수 있는지에 대한 문제입니다.
     * 생성기의 사용자 인터페이스는 사용하기 쉬움으로 인해 좋아하는 사용자들이 많으며, 사용자들이 원하는 것을 지정할 수 있게 합니다.
     * 일부 사용자들은 생성기가 청바지 반바지 이외의 의상을 입은 남성 모델과 같은 특정 유형의 이미지를 생성하는 능력에 제한이 있다고 보고했습니다.
"
"https://news.hada.io/topic?id=10500","Rift - 개발을 도와주는 AI-Native 언어 서버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Rift - 개발을 도와주는 AI-Native 언어 서버

     * IDE를 에이전트 처럼 만들어주는 오픈소스 인프라 스트럭쳐
     * Language Server Protocol기반으로 AI기능을 제공하는 VSCode 확장을 구현
          + 대화형 코드 수정
          + 코드베이스 전반에 걸친 코드 변경
          + 컨텍스트 기반의 코드 생성
     * StarCoder / CodeGen

   AI가 LSP의 정보까지 사용할 수 있으면 성능이 훨씬 올라갈 거라는 생각을 하긴 했는데...
   드디어 뭔가 나왔군요. +_+
"
"https://news.hada.io/topic?id=10627","소프트웨어 엔지니어가 알아야 할 로그에 대한 모든 것 | Apache Kafka 탄생 배경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           소프트웨어 엔지니어가 알아야 할 로그에 대한 모든 것 | Apache Kafka 탄생 배경

   Linkedin에서 Apache Kafka를 개발한 Jay Kreps가 2013년에 쓴 글을 번역 및 해석한 아티클
     * 로그(Log) : 가장 단순하게 추상화된 저장소이며 Append-only만 가능하고, 전체 이벤트가 시간 순서대로 정렬된 자료구조
          + 전통적인 데이터베이스 시스템에서 복제를 구현할 때 로그는 핵심적인 역할을 함
          + 상태 복제 머신을 기반으로 하는 분산 시스템도 사실은 로그를 복제하는 시스템
     * 로그와 테이블은 동일성을 띈다.
          + 은행을 예시로 들면, 로그는 입출금 기록이며 테이블은 계좌 잔액을 나타낸다. 로그로 테이블을 만들 수 있고, 반면 테이블에서 로그를 추출할 수 있음
     * 많은 기업들이 빅 데이터 도입에는 적극적인 반면, 신뢰할 수 있는 데이터 파이프라인 구축에는 관심이 적었음
          + End-to-End 로 데이터를 연결하는 방식은 장애, 메인터넌스, 데이터 파편화, 이벤트 데이터의 발전으로 점점 어려워졌다.
          + 로그(Log)라는 자료구조를 메인 네트워크 레이어로 추상화 시켜야 한다는 동기로 Apache Kafka에 대한 아이디어가 출발함
          + Jay Kreps는 Quora에서 과거 메시지 큐는 인프라 월드에서 매우 마이너한 분야였다고 설명하면서 실시간 데이터를 이벤트 스트림으로 추상화 시켜야 한다고 생각했고, 영속성을 가진 커밋 로그가 적절한 자료구조라고 설명함
"
"https://news.hada.io/topic?id=10569","Jacobin JVM - Go로 의존성 없이 작성된 Java 17 JVM 구현체","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Jacobin JVM - Go로 의존성 없이 작성된 Java 17 JVM 구현체

     * OpenJDK 기반의 JVM과 같은 결과를 제공하는 최소한 이상의 JVM 구현이 목표
     * 설계 및 구현시에 일관성 있고 명확한 코드로 구성하는 것을 중요하게 고려
     * 2년째 개발 중
     * JNI 없음(JEP 389로 대체), Security Manager 없음(JEP 411), JIT 없음
     * GC는 Golang Runtime에 의해 처리됨
"
"https://news.hada.io/topic?id=10599","커뮤니티 노트에 대해 어떻게 생각하나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         커뮤니티 노트에 대해 어떻게 생각하나요?

     * 트위터 X, 일론 머스크에 의해 440억 달러에 인수된 이후 큰 변화를 겪었습니다.
     * 커뮤니티 노트는 트위터의 사실 확인 도구로, 트윗에 맥락 노트를 첨부하여 잘못된 정보에 대항합니다.
     * 커뮤니티 노트는 트위터 계정을 가진 누구나 이용할 수 있으며, 사용자는 노트를 작성하고 투표할 수 있습니다.
     * 커뮤니티 노트 뒤에 있는 알고리즘은 다양한 시각에서 긍정적인 평가를 받은 노트에 우선순위를 두기 위해 기획되었습니다.
     * 이 알고리즘은 기계 학습을 사용하여 노트의 유용성을 예측하며, 정확성을 보장하고 남용을 방지하기 위한 메커니즘을 갖추고 있습니다.
     * 이 알고리즘의 극성은 좌파 대 우파 정치 스펙트럼과 일치하며, 고품질이고 정보성 있는 노트를 홍보하는 데 성공했습니다.
     * 이 알고리즘은 경제학자의 알고리즘과 유사하도록 개선될 수 있습니다.
     * 극성화와의 효과적인 싸움을 위해 추가 분석이 필요합니다.
     * 이 알고리즘은 사용자가 트윗에 추가한 노트의 유용성을 평가합니다.
     * 이 알고리즘은 오픈 소스이며 검증 가능하며, 중앙 집중식 조작 없이 비판적인 노트를 제거합니다.
     * 이 알고리즘의 간결성은 신뢰성과 투명성에 중요합니다.
     * 이 알고리즘은 조직적인 공격에 취약하며, 추가 분석과 개선이 필요합니다.
     * 커뮤니티 노트는 다양한 시각과 사실 확인의 중요성을 사람들에게 상기시키는 교육 도구로 작용합니다.
     * 커뮤니티 노트는 갈등을 줄이고 극성화를 완화하기 위한 새로운 메커니즘 디자인의 일환입니다.
     * 커뮤니티 노트가 제공하는 알고리즘 투명성은 조작을 방지하고 조작에 참여하지 않는 플랫폼에게 큰 가치를 제공합니다.

        Hacker News 의견

     * 커뮤니티 노트 시스템은 수학적으로 탄탄한 모델에 기반하며, 기존의 추천/비추천 시스템에 비해 편향된 행동에 덜 취약합니다.
     * 커뮤니티 노트와 암호화폐 간의 관계는 약하며, 독자들에게 호소하기 위한 시도로 보입니다.
     * 브라질에서는 커뮤니티 노트가 정치인들을 점검하고 거짓말에 대해 책임을 물을 때 사용되고 있습니다.
     * 커뮤니티 노트는 위키피디아와 유사한 장단점을 가지고 있으며, 특정 인구군이 기여를 지배할 경우 편향성이 발생할 수 있습니다.
     * 슬래시닷의 조절 방법은 커뮤니티 노트와 유사하지만 더 정교합니다.
     * ""극성""을 단일 축으로 취급하는 것은 문제이며, 모든 주제가 그렇게 일치하지 않습니다.
     * 커뮤니티 노트는 노트를 받은 사용자의 기록을 가져야 합니다.
     * 일부 사람들은 커뮤니티 노트를 좋아하고, 다른 사람들은 암호화폐와 연관시키기 위한 시도라고 생각합니다.
"
"https://news.hada.io/topic?id=10555","Haskell을 뒤로한채 떠나기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Haskell을 뒤로한채 떠나기

     * 저자, 소프트웨어 엔지니어가 10년 동안 사용한 함수형 프로그래밍 언어인 Haskell에서 벗어나는 여정을 공유한다.
     * 저자는 코드를 기호적이고 대수적으로 이해하는 Haskell의 능력과 견고한 타입 시스템에 끌렸다.
     * Haskell의 타입 시스템은 과도하게 제한적이거나 시끄럽지 않은 엄격한 타입 검사를 허용하여 코드 작성 및 유지 관리를 용이하게 한다.
     * 저자는 타입을 사용하여 불변성을 표현하는 Haskell의 능력을 높이 평가하였으며, 이는 컴파일러가 로직을 이중으로 확인하게 하여 코드의 안전성과 정확성을 향상시킨다.
     * 이러한 장점에도 불구하고, 저자는 스타일적인 새로움에 대한 열망, 어색한 도구, 그리고 지속적인 변화라는 세 가지 주요 이유로 Haskell에서 벗어났다.
     * 스타일적인 새로움은 Haskell 커뮤니티가 새로운 추상화를 실험하는 경향을 가리키며, 이는 혁신적이지만 코드 유지 관리를 어렵게 만들 수 있다.
     * 저자는 Haskell의 도구를 ""괜찮다""고 평가했지만, Rust의 cargo만큼 사용하기 쉽고 안정적인 도구가 없다고 언급했다.
     * Haskell의 지속적인 변화, 특히 정기적인 하위 호환성이 없는 수정은 언어 사용의 마찰을 증가시켰다.
     * Haskell에서 벗어났음에도 불구하고, 저자는 여전히 그것의 강점, 즉 코드를 대수적으로 리팩토링하는 능력, 타입 시스템, 그리고 선언적 라이브러리 생태계를 인정한다.
     * 저자는 Haskell 사용 여부는 개인의 목표에 달려 있다고 결론짓고, 더 나은 프로그래머가 되기 위해 Haskell을 배우는 것을 권장하지만, 그가 설명한 도전 과제로 인해 기본 언어로 사용하는 것에 대해서는 주의를 당부한다.

        Hacker News 의견

     * Haskell 커뮤니티는 학습에 대한 강한 강조와 호기심 및 지식 공유의 환경을 조성하는 것으로 알려져 있다.
     * 그러나 커뮤니티는 종종 아이디어를 테스트한 후 버리는 데 어려움을 겪어, 전문적인 Haskell 코드베이스가 혼란스럽게 된다.
     * Haskell의 툴링은 비판받지만, 대부분의 프로그래밍 언어가 열등한 툴링을 가지고 있다고 주장하는 사람들도 있다.
     * Haskell의 툴링은 Hoogle이라는 독특한 기능을 가지고 있으며, 이는 그 유용성 때문에 매우 인정받고 있다.
     * Haskell과 그 유일한 합리적인 공개 구현인 GHC의 발전은 지속적인 변화와 불일치 때문에 비판받고 있다.
     * GHC와 표준 라이브러리인 base의 특정 버전 간의 연결은 새로운 GHC 버전이 출시될 때 종속성에 변화를 강제하는 문제로 인식된다.
     * 저자의 Haskell에 대한 관심 상실은 스타일적인 새로움, 어색한 툴링, 그리고 지속적인 변화라는 세 가지 주요 요인에 기인한다.
     * Haskell의 문서화와 툴링은 작업하기 어려웠고, 커뮤니티의 Cabal에서 Stack으로, 그리고 다시 Cabal로의 전환은 개선의 징후로 여겨진다.
     * 다른 프로그래밍 언어들은 함수형 프로그래밍의 요소를 통합하여 일부 개발자들에게 더 매력적으로 만들었다.
     * 일부 개발자들은 코드 작성이 더 간단하다는 이유로 Haskell에서 F#으로 이동했다.
     * Haskell은 배우기 어렵다고 여겨지며 그 라이브러리들은 종종 구식이거나 반쪽짜리이다.
     * Haskell의 성능은 비판받으며, 게으른 평가는 메모리 문제와 느린 성능을 초래한다.
     * Haskell 개발자들에게는 언어의 특수성 때문에 일자리 전망이 제한적이라고 여겨진다.
     * Haskell에서의 디버깅은 언어의 복잡성 때문에 도전적이라고 설명된다.
     * Scala는 Haskell에 대한 좋은 대안으로 여겨지며, 양쪽의 장점을 모두 제공한다.
     * 일부는 일상적인 소프트웨어 엔지니어링 작업에서 고급 언어 기능의 필요성을 의문시한다.
     * Haskell의 연구와 학문적 추구에 대한 초점은 실용적인 프로그래밍의 필요성과 충돌할 가능성이 있다고 여겨진다.
     * 게시물은 Haskell에서 실험적인 기능과 안정적인 기능을 분리할 방법이 필요하다고 제안한다.
     * 저자는 Haskell에서 새로운 고급 타입 기능을 사용하도록 압박받지 않으며, 복잡한 타입을 얼마나 사용할지에 대한 직관을 개발하는 것을 제안한다.
"
"https://news.hada.io/topic?id=10507","무료로 Discord Nitro 기능을 활용하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     무료로 Discord Nitro 기능을 활용하는 방법

     * 디스코드 니트로 기능을 무료로 이용하기 위해 수정된 디스코드 클라이언트와 플러그인 사용법에 대한 기사
     * 디스코드는 Electron을 사용하여 개발되었으며, 이는 웹 기술을 사용하여 크로스 플랫폼 애플리케이션을 개발할 수 있게 하는 프레임워크
     * 디스코드의 개발 도구는 위협 요소에 의해 제공된 악성 명령어를 복사하는 것을 방지하기 위해 기본적으로 비활성화 상태
     * 사용자는 디스코드 설정 파일에 특정 파라미터를 추가함으로써 개발 도구를 활성화할 수 있음
     * 애플리케이션의 초기 로딩을 최적화하기 위해 디스코드 함수를 패치하는 방법에 대한 기사
     * 고품질 스트리밍과 프리미엄 테마를 잠금 해제하기 위해 디스코드의 코드를 수정하는 것은 디스코드의 이용 약관에 위반되며, 계정 정지를 초래할 수 있음에 대한 경고 기사
     * 디스코드는 현재 서버에서 전송되는 스트림이 비구독 사용자의 기준에 부합하는지를 검증하지 않지만, 이를 감지할 수 있는 능력을 가지고 있을 가능성이 있음
     * 디스코드 니트로 구독으로 제공되는 테마를 사용할 수 있는지를 반환하는 함수를 수정하여 프리미엄 테마를 잠금 해제하는 방법에 대한 기사
     * 디스코드 클라이언트를 수정하거나 모드를 사용하기 전에 주의를 기울일 것을 권고하는 기사로, 디스코드는 이용 약관을 위반하는 계정을 정지시킬 수 있음
     * 기사에서 설명된 기법을 사용하는 디스코드 클라이언트 모드를 위한 다양한 플러그인의 소스 코드에 대한 참조를 제공하는 기사

        Hacker News 의견

     * 무료로 Discord Nitro 기능을 해제하는 방법에 대한 논문이 보안과 윤리에 대한 논란을 불러일으킴
     * 일부 댓글러들은 이 방법이 공격 경로로 사용될 가능성, 특히 base64로 인코딩된 블롭을 실행하는 것에 대해 우려를 표현함
     * Discord의 서버 측 유효성 검사 부재에 대한 비판, 일부는 초보적인 실수라고 지적함
     * '해커' 정신을 찬양하는 기사, 앱이 마법이 아니며 코드를 조작할 수 있다는 사실을 독자에게 상기시킴
     * Discord의 데이터 개인정보 보호 관행에 대한 우려, 한 댓글러는 Discord를 통해 보내진 모든 데이터, 직접 메시지를 포함하여, FISA 개정법 제702조에 따라 영장 없이 접근할 수 있다고 경고함
     * 일부 사용자들은 Discord에서 채팅 로그를 내보내는 가능성에 대해 논의, 한 댓글러는 Chrome 확장 프로그램의 소스 코드를 수정하는 방법을 공유함
     * Discord가 이러한 방법을 사용하여 Nitro 기능을 해제하는 사용자들을 차단할지에 대한 의문, 일부 사용자들은 비슷한 트릭을 사용하면서도 불이익을 받지 않은 경험을 공유함
     * 논의는 이 방법의 기술적 측면에 대해 다루며, 일부 사용자들은 사용 가능한 API와 클라이언트를 역공학하는 데 관심을 표현함
     * 대화는 프론트엔드 엔지니어링의 기본 규칙을 상기시키며 마무리: ""클라이언트를 절대로 신뢰하지 마라"".
"
"https://news.hada.io/topic?id=10596","PHP-Tokio - Async Rust 라이브러리를 PHP에서 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                PHP-Tokio - Async Rust 라이브러리를 PHP에서 사용하기

     * PHP에서 모든 Async Rust 라이브러리를 호출 가능하게 해주는 오픈소스 라이브러리
     * Revolt(Concurrent PHP용 이벤트루프)와 완전히 연동
          + 이를 통해서 AMPHP(Asynchronous Multitasking PHP), PSL(PHP Standard Library), ReactPHP 와 완벽 호환 가능

   https://news.hada.io/topic?id=10027 요런 것과 같이 쓰면 좋을 것 같네용

   FFI라고 부르기엔 허접하고, Wrapper 수준 정도로 쓰는게 PHP Module 구조다보니, 오히려 이럴때에는 장점이 되네요.

   -d extension= 으로 모듈을 직접 지정하는게 참으로 불편해보이는데, 이것까지 관리해줄 녀석이 과연 나올런지..

   -d extension 옵션없이 php ini 에 전역으로 등록하고 쓰는방법이 있죠
   FFI 는 php7.4 부터 도입되긴했는데 저건 FFI 로 로딩하지 않네요

   PHP 붐은 온다...

   PHP 망한다고 그랬는데.. 정말 대단..
"
"https://news.hada.io/topic?id=10574","'아이트래킹'에 관심이 있다면, 당신에게 투자할 의향이 있는 저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  '아이트래킹'에 관심이 있다면, 당신에게 투자할 의향이 있는 저

        Hacker News 의견

     * 4인 팀이 눈 추적 및 기타 생리적 특징 측정을 위한 다중 카메라 배열을 개발하고 판매했습니다. 주요 고객은 대학 연구 그룹, Lockheed의 인간 요소 그룹, 그리고 미국 공군입니다.
     * 이 팀의 기술은 배열에서 1미터까지 정확하게 눈과 얼굴을 추적하며, 주제별로 최소한의 보정만 필요하고, 피로와 기타 요인에 대한 동공 반응을 측정할 수 있습니다.
     * Senseye는 눈 추적 기술에 대해 오랫동안 작업해 왔으며, 초기에는 미국 공군과 협력하여 조종사 훈련을 개선하기 위해 노력했습니다. 그러나 그들은 자금 조달에 어려움을 겪어 PTSD 스크리닝으로 방향을 전환해야 했습니다.
     * 눈 추적 기술을 구축하는 것은 어렵지 않지만, 도전은 현재 UI 패러다임에 방해받지 않는 사용자 친화적인 인터페이스를 만드는 데 있습니다.
     * EEG 기록은 눈 움직임의 질병 관련 저하를 이길 수 있는 눈 추적의 대안이 될 수 있습니다.
     * Microsoft의 HoloLens 2와 Magic Leap의 ML2를 포함한 여러 AR 헤드셋은 적절한 눈 추적을 제공합니다. Tobii의 눈 추적 안경도 독립형 솔루션으로 좋습니다.
     * 터키의 ALS 환자가 Tobii 눈 추적기를 사용하여 YouTube 비디오, 팟캐스트, 그리고 Twitch 스트림을 만듭니다.
     * 한 댓글 작성자가 Fitt's Law와 Huffman trees를 교차시킨 메뉴 시스템을 개발하고 있으며, 이는 눈 추적 기술과 함께 사용될 수 있습니다.
     * 눈 추적 회사에 대한 사업 사례는 시장 규모가 작고, 제품을 건강 보험 적용을 위해 승인받는 데 드는 비용이 높기 때문에 어려움이 있습니다.
     * Sub-vocalization, 즉 생각에 대한 텍스트-투-스피치는 보조 기술을 탐색하는 또 다른 방법일 수 있습니다.
     * Stephen Hawking이 의사소통에 사용한 기술, 즉 눈 추적기를 포함한 기술은 개선될 수 있습니다.
"
"https://news.hada.io/topic?id=10579","Zoom CEO, "Zoom을 통해서는 신뢰를 구축하기 힘드니까 직원들은 사무실에 출근해야 한다" 라고 말한 녹음이 유출","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Zoom CEO, ""Zoom을 통해서는 신뢰를 구축하기 힘드니까 직원들은 사무실에 출근해야 한다"" 라고 말한 녹음이 유출

     * Zoom CEO인 Eric Yuan이 전체 회의에서 말한 내용들의 녹음이 유출됨
          + 사무실에서 50마일 이내에 있는 직원들은 일주일에 최소 2일은 사무실에 출근해야 함
          + ""Zoomies(줌 직원에 대한 애칭)가 컴퓨터 화면에서 신뢰를 쌓는 것은 힘들기 때문""
          + ""우리 플랫폼(Zoom)을 이용하면 사람들을 너무 친근하게(friendly) 만들기 때문에 혁신적인 대화와 토론을 하기 어렵다""

   마지막 두 줄이 상반되는 것 같은데..

   원문을 읽어보니, 줌에선 다 터놓고 이야기하기 힘들다는 뜻인 것 같네요

   We cannot have a great conversation. We cannot debate each other well because everyone tends to be very friendly when you join a Zoom call.

   어느 정도 이해되는 말이긴 하네요.
   줌에서 아무리 얼굴을 보면서 소통한다 해도 뭔가... 대면 소통과는 약간의 사회적 거리감이 느껴지는 것 같습니다.
   그래도 주 2일 출근 정도면 선녀같은데요?

   저도 그 생각 했습니다 ㅋㅋ

   감사합니다. 이제 이해되네요
"
"https://news.hada.io/topic?id=10527","네덜란드에서 3000유로 이상의 현금 결제 금지 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     네덜란드에서 3000유로 이상의 현금 결제 금지 예정

     * 네덜란드 정부, 3000유로 이상의 현금 결제 금지 법안 작성 중
     * 현재 모든 구매는 금액에 상관없이 현금으로 결제 가능
     * 그러나, 10,000유로 이상의 현금 구매에 대해서는 판매자가 고객 조사를 실시해야 함
     * 이 고객 조사는 돈세탁 및 테러 자금 조달 방지를 위해 필수적임
     * 제안된 법안은 모든 상품의 구매자와 판매자에게 적용될 것임
     * 새로운 법이 제정되면, 3000유로 이상의 구매는 더 이상 현금으로 결제할 수 없게 될 것임
     * 이 조치는 정부의 금융 범죄 대응 및 거래 투명성 증진 노력의 일환임

        Hacker News 의견

     * 네덜란드, 3000유로 이상 현금 결제 금지 법안 작성 중
     * 현재 모든 구매는 현금으로 지불 가능하나, 10,000유로 이상의 구매에 대해서는 판매자가 고객 신원 확인을 통해 돈세탁 및 테러 자금 조달 방지
     * 일부 사용자들, 디지털 결제로의 전환과 관련된 자유 및 개인정보 보호의 잠재적 손실에 대해 우려 표현
     * 다른 국가에서도 유사한 제한이 존재하며, 유럽에서는 3000유로 - 4000유로가 일반적이라는 점을 일부 사용자들이 지적
     * 일부 사용자들, 대규모 돈세탁 및 탈세 방지에 이러한 법률의 효과에 대해 회의적
     * 현금을 사용하는 일반인들에게 미칠 잠재적 영향에 대한 우려도 존재
     * 그러나 일부 사용자들, 디지털 결제의 편리성을 인정하며 최근 몇 년 동안 거의 현금을 사용하지 않음
     * 제안된 법안은 모든 상품의 구매자와 판매자에게 적용되지만, 일회성 거래가 고객 신원 확인에서 면제될지는 불명확
"
"https://news.hada.io/topic?id=10585","LLM 기반의 시스템 & 제품 구축 패턴들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        LLM 기반의 시스템 & 제품 구축 패턴들

     * 7가지 핵심 패턴을 ""성능 향상 vs. 비용/리스크 감소"" 및 ""데이터 친화 vs 사용자 친화"" 로 정리
          + Evals: 성능 측정
          + RAG(Retrieval-Augmented Generation): 최신, 외부 지식을 추가
          + Fine-tuning: 특정 작업을 더 잘 수행하기 위해
          + Caching: 레이턴시 및 비용 감소
          + Guardrails: 출력 품질 보장
          + Defensive UX: 오류를 에측하고 관리하기 위해
          + Collect user feedback: 데이터 플라이 휠 구축

Evals: 성능 측정

     * Evals는 작업에서 모델의 성능을 평가하는데 사용되는 일련의 측정값들
     * 벤치마크 데이터 및 메트릭 포함
     * 시스템 또는 제품이 얼마나 잘 작동하고 있는지 측정하고, 퇴보를 감지할 수 있음
     * 언어 모델링 분야에 많은 벤치마크들이 있음: MMLU, EleutherAI Eval, HELM, AlpacaEval
     * 메트릭을 두개의 카테고리로 구분 가능: Context-dependent 또는 Context-free
     * 공통적으로 사용하는 메트릭들: BLEU, ROUGE, BERTScore, MoverScore
     * 요즘 뜨는 트렌드는 강력한 LLM을 reference-free metric으로 이용하여 다른 LLM들의 생성물을 평가하는 것
          + G-Eval, Vicuna 논문, QLoRA

RAG(Retrieval-Augmented Generation): 최신, 외부 지식을 추가

     * 파운데이션 모델 외부로부터 정보를 가져와 이 데이터로 입력을 강화하여 더 풍부한 컨텍스트를 제공함으로써 출력을 개선
     * RAG는 검색된 컨텍스트에 모델을 기반으로 하여 환각을 줄이는데 도움을 줘서 사실성을 높임
     * 또한 LLM을 지속적으로 사전 학습하는 것보다 검색 인덱스를 최신 상태로 유지하는 것이 더 저렴
     * 이런 비용 효율성 때문에 LLM이 RAG을 통해 최신 데이터에 억세스 가능
     * 편향되거나 유해한 문서와 같은 데이터를 업데이트/제거해야 하는 경우 검색 인덱스를 업데이트하는 것이 더 간단함(LLM을 미세조정 하는 것에 비해)
     * RAG을 위해서는 텍스트 임베딩에 대해 먼저 이해하는 것이 도움이 됨
     * 텍스트 임베딩은 임의 길이의 텍스트를 숫자의 고정 크기 벡터로 표현할 수 있는 텍스트 데이터의 압축된 추상 표현
          + 일반적으로 Wikipedia같은 텍스트 코퍼스에서 학습함
          + 유사한 항목은 서로 가깝고, 유사하지 않은 항목은 더 멀리 떨어져 있는 텍스트에 대한 범용 인코딩으로 생각하면 됨
     * 좋은 임베딩은 유사 항목 검색 같은 다운스트림 작업을 잘 수행하는 것
          + Huggingface의 Massive Text Embedding Benchmark (MTEB)는 분류,클러스터링,검색,요약 같은 다양한 작업에서 모델의 점수를 매김
     * 여기서는 주로 텍스트 임베딩에 대해 이야기 하지만, 임베딩은 다양한 모달리티가 사용될 수 있음
     * Fusion-in-Decoder(FiD)는 오픈 도메인 QA를 위해 생성형 모델과 검색을 같이 사용함
     * Internet-augmented LM들은 기존 검색엔진을 이용하여 LLM 강화를 제안
     * RAG 적용 방법
          + 하이브리드 검색(전통적인 검색 인덱스 + 임베딩 기반 검색)이 각각 단독보다 더 잘 동작함

Fine-tuning: 특정 작업을 더 잘 수행하기 위해

     * 미세 조정은 사전 훈련된 모델(방대한 양의 데이터로 이미 훈련된 모델)을 가져와 특정 작업에 대해 추가로 정제하는 프로세스
     * 모델이 사전 훈련 중에 이미 획득한 지식을 활용하여 일반적으로 더 작은 작업별 데이터 세트를 포함하는 특정 작업에 적용하기 위함
     * 파인 튜닝이란 용어는 느슨하게 사용되어 다양한 개념을 나타내는데 이용 됨
          + 지속적인 사전 훈련
          + 인스트럭션 파인 튜닝
          + 단일 작업 파인 튜닝
          + RLHF
     * 왜 파인 튜닝을 할까 ?
          + 성능 및 제어:
               o 기성 기본 모델의 성능을 개선하고, 써드파티 LLM 능가도 가능
               o LLM 동작을 보다 잘 제어할 수 있으므로 시스템이나 제품이 더욱 강력해짐
               o 미세 조정을 통해 단순히 타사 또는 개방형 LLM을 사용하는 것과 차별화된 제품을 구축할 수 있음
          + 모듈화:
               o 단일 작업 미세 조정을 통해 각각 고유한 작업을 전문으로 하는 더 작은 모델들의 부대를 만들 수 있음
               o 이런 설정을 통해서 시스템을 콘텐츠 모더레이션, 추출, 요약등의 태스크로 모듈화 가능
          + 종속성 감소:
               o 자체 모델을 미세 조정하고 호스팅함으로써 외부 API에 노출되는 독점 데이터(예: PII, 내부 문서 및 코드)에 대한 법적 문제를 줄일 수 있음
               o 또한 속도 제한, 높은 비용 또는 지나치게 제한적인 안전 필터와 같은 써드파티 LLM의 제약 조건을 극복
     * Generative Pre-trained Transformers (GPT; decoder only)
     * Text-to-text Transfer Transformer (T5; encoder-decoder)
     * InstructGPT
     * Soft prompt tuning & Prefix Tuning
     * Low-Rank Adaptation (LoRA) & QLoRA
     * 파인튜닝 적용 방법
          + 데모 데이터/라벨 수집
          + 평가지표를 정의
          + 사전 학습 모델 선택
          + 모델 아키텍처 업데이트
          + 파인 튜닝 방법 선택(LoRA, QLoRA등 )
          + 기본 하이퍼파라미터 튜닝

Caching: 레이턴시 및 비용 감소

     * 캐싱은 이전에 검색하거나 계산한 데이터를 저장하는 기술
     * 동일한 데이터에 대한 향후 요청을 더 처리 가능
     * LLM에서는 입력 요청의 임베딩에 대한 LLM 응답을 캐쉬하고, 다음 요청에서 의미상 유사한 요청이 들어오면 캐시된 응답을 제공하는 것
          + 하지만 일부 실무자는 이게 ""재앙이 일어나길 기다리는 것"" 과 같다고 함. 나도 동의함
     * 캐싱 패턴을 채택하기 위한 핵심은 의미론적 유사성에만 의존하는 대신, 안전하게 캐시하는 방법을 파악하는 것
     * 왜 캐싱해야 할까? : 대기시간을 줄이고, LLM 요청수를 줄여서 비용을 절감
     * 캐싱을 적용하는 방법?
          + 사용자 요청 패턴을 잘 이해하는 것 부터 시작해야함
          + 캐싱이 사용 패턴에 효과적인지 고려

Guardrails: 출력 품질 보장

     * LLM의 출력을 검증하여 출력이 좋게 보일 뿐만 아니라 구문적으로 정확하고 사실적이며 유해한 콘텐츠가 없는지 확인
     * 왜 가드레일이 필요할까?
          + 모델 출력이 생산에 사용할 수 있을 만큼 신뢰할 수 있고 일관성이 있는지 확인하는 데 도움이 됨
          + 추가 안전 계층을 제공하고 LLM의 출력에 대한 품질 관리를 유지
     * 한 가지 접근 방식은 프롬프트를 통해 모델의 응답을 제어하는 ​​것
          + Anthropic은 모델이 도움이 되고 무해하며 정직한 (HHH) 응답을 생성하도록 안내하도록 설계된 프롬프트를 공유했음
     * 보다 일반적인 접근 방식은 출력의 유효성을 검사하는 것 (Guardrails 패키지 같은)
     * Nvidia의 NeMo-Guardrails는 유사한 원칙을 따르지만 LLM 기반 대화 시스템을 안내하도록 설계
     * Microsoft의 Guidance 처럼 특정 문법을 준수하도록 출력을 직접 조정할 수도 있음 (LLM을 위한 DSL이라고 생각할 수 있음)
     * 가드레일을 적용하는 방법
          + Structural guidance
          + Syntactic guardrails
          + Content safety guardrails
          + Semantic/factuality guardrails
          + Input guardrails

Defensive UX: 오류를 예측하고 관리하기 위해

     * 방어적 UX는 사용자가 기계 학습 또는 LLM 기반 제품과 상호 작용하는 동안 부정확성이나 환각과 같은 나쁜 일이 발생할 수 있음을 인정하는 디자인 전략
     * 주로 사용자 행동을 안내하고, 오용을 방지하고, 오류를 적절하게 처리함으로써 이를 미리 예측하고 관리하는 것이 목표
     * 왜 방어적인 UX인가?
          + 기계 학습과 LLM은 완벽하지 않음. 부정확한 결과를 생성할 수 있음
          + 같은 질문에 대해서 다르게 반응함
          + 방어적 UX는 다음을 제공하여 위의 문제를 완화하는 데 도움
               o 접근성 향상, 신뢰도 증가, Better UX
     * 회사들이 정리한 지침 참조
          + Microsoft’s Guidelines for Human-AI Interaction
          + Google’s People + AI Guidebook
          + Apple’s Human Interface Guidelines for Machine Learning
     * 방어적 UX를 적용하는 방법
          + 올바른 기대치를 설정하기
          + 효율적인 해제를 가능하게 하기(Enable efficient dismissal)
          + Attribution 제공
          + Anchor on familiarity

Collect user feedback: 데이터 플라이 휠 구축

     * 사용자 피드백을 수집하면 사용자의 선호도를 알 수 있음
     * LLM 제품에 특정한 사용자 피드백은 평가, 미세 조정 및 가드레일 구축에 기여함
     * 사전 교육을 위한 Corpus, 전문가가 만든 데모, 보상 모델링에 대한 인간의 선호도와 같은 데이터는 LLM 제품의 몇 안 되는 해자(Moat)임
     * 피드백은 명시적이거나 암시적일 수 있음
          + 명시적 피드백은 제품의 요청에 대한 응답으로 사용자가 제공하는 정보
          + 암시적 피드백은 사용자가 의도적으로 피드백을 제공할 필요 없이 사용자 상호 작용에서 학습하는 정보
     * 사용자 피드백을 수집하는 이유
          + 사용자 피드백은 모델을 개선하는 데 도움이 됨
          + 사용자가 좋아하는 것, 싫어하는 것 또는 불평하는 것을 학습함으로써 모델을 개선하여 그들의 요구 사항을 더 잘 충족시킬 수 있음
          + 또한 개인의 선호도에 적응할 수 있음
          + 피드백 루프는 시스템의 전반적인 성능을 평가하는 데 도움이 됨
     * 사용자 피드백 수집 방법
          + 사용자가 쉽게 피드백을 남길 수 있게 만들기: ChatGPT처럼 응답에 추천/비추천 선택
          + 암시적 피드백도 고려하기 : 사용자가 제품과 상호 작용할 때 발생하는 정보

   실제 글에는 각 항목 및 알고리듬/메트릭들에 대한 자세한 설명이 있는데 그건 생략했습니다.
   이 글로 요약만 대충 보시고 원문도 같이 참고하세요
"
"https://news.hada.io/topic?id=10525","덴마크의 클라우드 제공 업체가 랜섬웨어 공격으로 모든 고객 데이터를 잃음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                덴마크의 클라우드 제공 업체가 랜섬웨어 공격으로 모든 고객 데이터를 잃음

     * 덴마크의 클라우드 제공 업체인 CloudNordic는 데이터 센터에 대한 랜섬웨어 공격에 의해 모든 고객 데이터를 잃었다고 발표함.
     * 랜섬웨어 공격은 금요일에 시작되었으며, 웹 사이트와 이메일 시스템, 고객 시스템 등 모든 시스템을 종료함.
     * 그 후 기본 및 보조 백업 시스템을 포함한 모든 서버의 디스크를 암호화하였고, 결국 모든 시스템이 충돌하여 데이터 접근이 불가능해짐.
          + 데이터 센터 이전 과정에서 이미 감염된 서버가 새 데이터 센터로 이전되어 문제가 발생한 것으로 추정.
          + 공격은 내부 네트워크로부터 시작됨.
     * 다행히 고객 데이터가 유출되었다는 증거는 찾을 수 없었음.
          + 공격자가 실제 데이터에 접근한 게 아닌, 모든 가상 머신의 전체 디스크를 암호화할 수 있는 관리 시스템에만 접근한 것으로 파악함.
          + 데이터를 복제하려는 시도는 없었음.
     * 현재 시스템을 다시 구축하여 DNS, 웹, 메일 서버 등을 새로 구축한 상태임.
          + 단 모든 데이터가 유실되었기에, 고객이 모든 정보를 다시 등록해야 함.
     * CloudNordic는 공격자에게 비용을 지불할 생각이 없고, 협상할 생각도 없다고 함.

     * CloudNordic측 공지사항
     * HN 스레드

   내용을 추가할 게 있어서 바로 삭제했는데, 알림이 이미 간 상태였네요.
   본의 아니게 두 번이나 보낸 것 같아 죄송한 마음입니다...

   내용 수정이 필요할 때는 글을 삭제하지 않고 따로 요청하도록 하겠습니다...

   어쩌다보니 중요해서 두번 강조한 느낌이 되었네요

   아무튼 엄청 심각한 사항이네요.

   가상 서버 디스크를 암호화했다는 걸 보니, 보조 용도의 콜드 백업도 결국 가상 서버로 되어 있었고,
   공격자는 가상 서버의 디스크를 통째로 암호화했기 때문에 콜드 백업마저 전부 사라진 것으로 생각됩니다.

   업체도 업체지만, 저 업체를 사용하는 고객들도 엄청 날벼락이겠네요.

   사용하는 이메일 시스템, DNS 같은 것도 통째로 날아가서
   만약 저 업체에서 웹 호스팅+이메일 다 사용하고 있었다면 고객 문의조차 받지 못하는 상태가 된 것 같아요.

   진짜 물리적으로 수정할 수 없는 테이프 같은 거에 백업하는 게 유일한 해답일까요…?

   역시 믿을건 자기테이프뿐이야!
"
"https://news.hada.io/topic?id=10619","Web LLM - Llama2 7B/13B 지원 시작 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Web LLM - Llama2 7B/13B 지원 시작

     * 서버 없이 브라우저에서 Llama, RedPajama, Vicuna 같은 LLM을 WASM으로 구동하는 서비스
     * Llama 2 7B/13B 지원 시작
     * Llama 2 70B도 지원하지만, 애플 실리콘 맥 + 64GB 램 이상에서만 사용 가능
     * WebGPU로 가속

     * AI 잘알못이 호기심에 저사양PC지만 테스트 해봤습니다 - Chat Demo 첫번째 모델 (PC사양: AMD Ryzen5 3600, NVIDIA GeForce GTX 750 Ti)
     * 최초 질문에 4G정도 다운받고 초기화 하는데 제 PC환경기준으로 11분 정도 걸렸습니다.
     * 매 질문마다 GPU를 평균 60%이상 사용했고, 천천히 타이핑 하는듯한 답변을 주었습니다. (속터지더군요 ㅡㅡ)
     * 테스트 삼아 ""show me the earth picture"" 라는 질문을 줘봤더니, NASA URL을 답해주긴 했는데 이미지는 볼수 없었습니다. (Invalid URL)
     * 한글 질문도 인식은 했으나 답변은 영어로만 주더군요

   750Ti라서....

   url output으로 나가는 건 ChatGPT에서도 깨지는 경우가 많더라고요. 아무래도.

   Stable Diffiusion을 웹에서 실행하는 걸 보고 되게 신기했는데,
   과연 WebGPU가 GPU API 대통합을 이룰 수 있을까요?

   크로노스 그룹이 가만히 있었어도 진작에 대통합을 이루고도 남았죠.

   어메이징하네요

   Web LLM - WebGPU로 브라우저에서 LLM 가속하여 실행하기
"
"https://news.hada.io/topic?id=10591","111,111.1미터가 신뢰성있게 1도의 위도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       111,111.1미터가 신뢰성있게 1도의 위도

     * 지리 정보 시스템 스택 교환에 대한 질의응답에 대한 기사, 특정 수의 미터로 위도와 경도를 오프셋하는 알고리즘에 대한 것.
     * 사용자는 주어진 위도와 경도 쌍과 미터 단위의 벡터 변환을 새로운 좌표로 빠르고 정확하게 변환하는 방법을 찾고 있다.
     * 가장 높은 평가를 받은 답변은 간단한 추정을 제안한다: y 방향으로 111,111 미터(또는 111.111 km)는 위도 1도이며, x 방향으로 111,111 * cos(위도) 미터는 경도 1도이다. 이 방법은 극지방을 제외한 몇 킬로미터 이내의 이동에 적합하다.
     * 숫자 111,111은 프랑스인이 미터를 정의한 원래의 정의에서 유래되었는데, 그들은 이를 10^7 미터가 적도에서 북극까지의 거리가 되도록 정의했다. 따라서, 10^7 / 90 = 111,111.1 미터는 위도 1도에 해당한다.
     * 다른 답변들은 항공 공식의 알고리즘, Vincenty의 직접 공식을 사용하거나, 오프셋을 추가하기 전에 점을 평면 좌표 시스템에 투영하는 것을 제안한다.
     * 이 논의에는 제안된 방법을 구현하는 Python, R, Swift의 코드 스니펫도 포함되어 있다.
     * 이 기사는 지리 정보 시스템이 문제 해결에 어떻게 사용되는지, 지리 좌표와 물리적 거리 사이의 관계를 이해하는 것의 중요성에 대한 실용적인 예를 제공한다.

        Hacker News 의견

     * 1791년에 미터는 파리를 통과하는 사분의 일 자오선, 즉 아크 90도의 천만분의 일로 재정의되었습니다. 이로 인해 1°는 111,111.111... m가 됩니다.
     * 지구의 둘레는 대략 4천만 미터, 즉 40,000 km입니다.
     * 미터의 초기 정의는 초당 펜듈럼의 길이, 즉 주기가 두 초인 펜듈럼의 길이였습니다.
     * 1 해리(~6076 ft)는 정확히 지구의 적도에서 아크 1분입니다.
     * 빛의 속도는 대략 나노초당 1피트입니다.
     * 일부 사용자들은 미터법의 단순성에 비해 제국제의 복잡성에 대해 불만을 표현합니다.
     * 지구의 모양이 납작한 구체인 것은 1도의 위도의 실제 아크 길이가 변할 수 있음을 의미합니다.
     * 위도 1도가 111,111.1 미터에 해당하는 ""신뢰성""이라는 용어는 ""유용하게 사용할 수 있을 정도로 가깝다""는 의미일 수 있습니다.
     * 유용한 경험칙은 111,111 * cos(위도) 미터가 경도 1도라는 것입니다.
"
"https://news.hada.io/topic?id=10515","SSH에 대한 극도로 상세한 가이드(하지만 나에게 유용한 것들만)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  SSH에 대한 극도로 상세한 가이드(하지만 나에게 유용한 것들만)

     * 이 기사는 저자가 가장 유용하다고 생각하는 SSH (Secure Shell)에 대한 종합 가이드입니다.
     * 저자는 네트워크를 통과하는 강력한 도구인 SSH 포트 포워딩 개념을 설명합니다.
     * 이 가이드는 Local Port Forwarding (-L), Remote Port Forwarding (-R), 그리고 Dynamic Port Forwarding (-D) 등 다양한 유형의 포트 포워딩을 다룹니다.
          + Local Port Forwarding은 원격 포트로 전달되는 로컬 포트를 생성할 수 있습니다.
          + Remote Port Forwarding은 반대로, 로컬 포트를 통해 원격 서버에 접근할 수 있습니다.
          + Dynamic Port Forwarding은 SOCKS 프록시를 통해 트래픽을 프록시하는 것을 가능하게 합니다.
     * 저자는 또한 여러 호스트를 통해 목적지 호스트에 도달하기 위해 Jumphosts (-J)를 사용하는 방법을 설명합니다.
     * 가이드는 Agent Forwarding (-A) 개념을 다루며, 이는 연결하려는 기계로 키 에이전트를 전달할 수 있게 합니다.
     * 저자는 또한 TTY Command Allocation (-t)의 사용법을 설명하며, 이는 원격 서버에서 빠르게 명령을 실행하는 데 사용됩니다.
     * 가이드는 Global port (-g) 옵션의 사용법을 다루며, 이는 로컬로 전달된 포트를 글로벌 포트로 정의할 수 있게 합니다.
     * 저자는 SSH Console (~?)을 소개하며, 이는 원격 시스템과 상호작용하지 않고 SSH를 제어할 수 있는 SSH의 숨겨진 기능입니다.
     * 가이드는 SSH Config 파일의 사용법을 설명하며, 이 파일은 ~/.ssh/config에 위치하고 있습니다.
     * 저자는 또한 ssh-copy-id 유틸리티를 소개하며, 이는 공개 키를 서버에 빠르게 업로드할 수 있는 도구입니다.
     * 가이드는 ssh-keygen 유틸리티로 마무리되며, 이는 개인/공개 키 쌍을 생성하는 데 사용됩니다.
     * 이 기사는 SSH를 보다 효과적으로 이해하고 활용하려는 모든 사람에게 귀중한 자료입니다.

        Hacker News 의견

     * SSH에 대한 상세 가이드 제공, 가장 유용한 측면에 초점
     * 사용자, sshd_config에 추가할 수 있는 간단한 지시문 제안, 특정 Github 그룹의 회원 여부 확인 후 로그인 허용, 온보딩 및 오프보딩 과정 단순화
     * 사용자, OpenSSH 구성 파서가 중복 지시문을 무시함을 지적, 혼란과 잠재적 보안 문제 야기, sshd -T 또는 ssh -G를 사용하여 구성 확인 권장
     * 사용자, -L과 -R을 사용한 로컬 및 원격 포워딩에 대한 기사 설명 감사, 어느 포트가 로컬인지 기억하는데 도움
     * 사용자, ssh-copy-id에 대한 기사 설명 수정, 키를 ~/.ssh/authorized_keys에 추가, 단순 업로드만 하는 것이 아님, ssh-keygen에 대해 ed25519 사용 권장
     * 사용자, 포워딩에 -f 사용을 피함, 열려 있는 포워드 추적 어려움, 중첩 세션에서 이스케이프 명령어 중첩 팁 공유
     * 사용자, SSH를 통해 사용 가능한 텍스트 모드 게임에 대한 이전 HN 게시물 회상, 다른 바이너리 실행을 방지하기 위한 복잡한 구성 필요
     * AF_UNIX 지원을 OpenSSH에 추가하기 위한 현재 풀 요청, 더 고급 포워딩 옵션 가능성
     * 사용자, SSH 콘솔 및 기능 발견에 대한 흥분 공유
     * Include 지시문, ~/.ssh/config 파일의 대량 호스트 관리 방법 제안, 정리 및 깔끔하게 유지
     * 사용자, 원격 포트 포워딩의 기사 예제에서 잠재적 오류 지적, 명령은 다른 서버에서 실행되어야 함 제안
"
"https://news.hada.io/topic?id=10571","수학 서클에서 효과적이었던 방법에 대한 생각들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       수학 서클에서 효과적이었던 방법에 대한 생각들

     * 저자는 7-8세 아동 그룹을 대상으로 수학 원을 운영한 7개월의 경험에 대해 반성하며, 무엇이 효과적이었고 무엇이 그렇지 않았는지를 논의한다.
     * 저자는 아이들이 관심을 가질 것으로 생각했던 것과 실제로 관심을 가진 것 사이에 큰 차이가 있다는 것을 발견했다.
     * 저자가 성공할 것으로 예상했지만 그렇지 않았던 활동에는 SET 게임, 접고 자르는 퍼즐, 기하학 간식, 모비우스 스트립 자르기, 타일 패턴, Prime Climb, flexagons 만들기, 자와 컴퍼스 구조 등이 포함된다.
     * 예상치 못하게 성공적이었던 활동에는 Knights and Knaves 퍼즐, 수동으로 라운드 로빈 토너먼트 스케줄링, 일곱 개의 다리 문제, 점수/실점을 기반으로 페널티 킥에서 누가 더 잘하는지 파악하기, 그리고 자신만의 Pascal's triangle 유형의 패턴 만들기가 포함된다.
     * 성공할 것으로 예상되었고 실제로 성공한 활동에는 The Function Machine 게임, Nim의 변형, Turing Tumble, 공정한 케이크 자르기, Prisoner's dilemma와 Chicken과 같은 게임 이론 게임, 그리고 3명을 위한 모의 칵테일 만들기가 포함된다.
     * 저자는 아이들을 참여시키는 데 있어 스토리텔링이 핵심 요소였음을 지적하며, 이는 수학이 스스로를 말해야 한다는 일반적인 견해와는 반대다.
     * 저자는 수학 문제가 이야기나 더 참여적인 형식으로 제시될 때 아이들이 더 참여하게 되었다는 것을 발견했다.
     * 저자는 아이들이 수학을 자체적으로 평가하기 시작하고 있지만, 새로운 아동 그룹을 시작할 경우, 문제를 더 참여적인 이야기로 구성하는 데 더 신중해야 할 것이라 결론지었다.

        Hacker News 의견

     * 고급 수학 개념에 대한 조기 노출의 이점에 대한 기사, 수학 경력을 추구하는 학생들에게 제공하는 중요한 이점 강조
     * 기사의 저자, 무료로 고급 커리큘럼을 제공하는 것이 가치 있는 서비스로 칭찬받음
     * 표준 커리큘럼, 대학 및 전문 환경에서 만나는 개방적이고 증명 기반의 수학에 대해 학생들을 충분히 준비시키지 못하는 암기 중심의 학습에 대한 비판
     * 댓글 작성자들, The Global Math Circle 및 'Mammoth Math' 책과 같은 수학 원에 관심이 있는 부모와 잠재적인 강사들을 위한 다양한 자원 추천
     * 'The Function Machine'이라는 게임, 학생들이 출력을 기반으로 함수를 추측하는 효과적인 학습 도구로 강조
     * 댓글 작성자들, 한 댓글 작성자가 손으로 천까지 세는 방법을 재미있고 교육적인 운동으로 추천하는 것처럼 아이들에게 수학을 가르치는 경험 공유
     * 'Bitcoin mining' 및 스포츠 통계와 같은 실제 세계의 예시 사용, 학생들을 참여시키고 수학 개념을 더 관련성 있게 만드는 방법으로 제안
     * 일부 댓글 작성자들, 자와 컴퍼스 구성과 같은 일부 전통적인 교육 방법이 예상만큼 학생들을 참여시키지 못했다는 실망 표현
     * 토론, 수학 교육에서 열정과 창의성의 중요성 강조, 강직하고 일괄적인 접근 방식이 학생들의 이해와 주제에 대한 즐거움을 저해할 수 있다고 제안
"
