"https://news.hada.io/topic?id=10958","미국 연방 정부, 공식 웹 디자인 시스템 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       미국 연방 정부, 공식 웹 디자인 시스템 발표

     * 미국 웹 디자인 시스템(USWDS)
     * 접근성과 가독성, 일관성을 높이고, 모바일 친화적인 정부 웹사이트를 위한 공식 웹 디자인 시스템
     * 정부 엔지니어, 콘텐츠 전문가, 디자이너들이 참여한 오픈 소스 프로젝트로 정부 내외의 수십 개 기관과 거의 200개 사이트 지원
     * 이 분야에서의 황금 표준인 GOV.UK의 영국 웹 디자인 시스템은 간결함 / 스타일 / 공간 활용의 효율성으로 유명
          + USWDS는 영국의 시스템과 유사하나 더 촘촘함
     * 기사끝에서는 주별로 통일된 웹사이트에 반발하고, 독특한 디자인으로 다양성을 추구하는 것이 진정한 미국식 대응이라고 유머러스하게 제안

   우리 나라도 이런 웹 디자인 가이드라인이 있었으면 좋겠습니다. code.gov 같은 프로젝트도 있었으면 좋겠어요!

   한국에서 하는 사람 없으면 제가 나서서라도 하고 싶군요.
   저에게도 필요하니까요.
"
"https://news.hada.io/topic?id=10913","애플의 새로운 'Transformer' 기반 예측 텍스트 모델","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   애플의 새로운 'Transformer' 기반 예측 텍스트 모델

     * 애플, 트랜스포머 언어 모델을 활용한 iOS와 macOS의 새로운 기능 발표: 사용자가 타이핑하면서 예측 텍스트 추천 제공
     * 애플이 공개적으로 인정한 첫 번째 트랜스포머 기반 모델 중 하나로, 운영 체제에 통합될 예정
     * Gmail의 자동완성과 유사하게, 개별 단어를 완성하고 때때로 한 번에 두 단어 이상을 제안하는 기능
     * 예측 텍스트 모델은 사용자가 타이핑하면서 철자와 문법 오류를 확인하는 macOS 내부 애플리케이션인 AppleSpell에서 발견
     * 모델은 타이핑 중 사용되는 여러 Espresso 모델 파일이 포함된 /System/Library/LinguisticData/RequiredAssets_en.bundle/AssetData/en.lm/unilm.bundle에 위치
     * 예측 텍스트 모델의 어휘는 특수 토큰, 축약어, 이모티콘을 포함한 15,000개의 토큰으로 구성
     * 예측 텍스트 모델의 구조는 토큰 임베딩, 위치 인코딩, 일련의 디코더 블록, 출력 계층을 포함하여 GPT-2를 기반으로 한 것으로 보임
     * 애플의 예측 텍스트 모델은 약 3,400만 개의 파라미터와 512개의 히든 유닛을 가지고 있어, GPT-2의 가장 작은 버전보다 훨씬 작음
     * 모델의 작은 크기로 인해 기기의 배터리를 많이 소모하지 않고 빠르고 자주 실행 가능, 사용자 경험 향상
     * 모델의 크기 제한으로 인해 전체 문장이나 문단을 작성하는 데는 능력이 부족하지만, 다음 단어나 두 단어에 대한 높은 확신을 보일 때는 사용자에게 제안하기에 충분히 좋음
     * 예측 텍스트 기능을 직접 시도해보고 싶은 사람들을 위해 저자가 GitHub에 스크립트를 제공

        Hacker News 의견

     * 게시글의 저자가 HackerNews에서 자신의 기사가 인기를 끌고 있는 것에 놀라고 있으며, 이에 대한 질문에 답하겠다고 밝혔습니다.
     * 일부 사용자들은 Apple의 새로운 예측 텍스트 모델이 GPT2보다 우수한지 의문을 제기하고 있습니다. 후자는 사용자의 입력에 기반하여 관련 없는 텍스트를 생성하는 경향이 있습니다.
     * 예측 텍스트 모델이 전체 문장을 생성해야 하는지, 아니면 사용자의 의도한 입력을 단순히 예측해야 하는지에 대한 논란의 여지가 있습니다.
     * 상위 예측이 아닌 토큰을 선택할 확률을 제어하는 온도 설정이 테스트에서 언급되지 않았습니다. 이 설정은 모델의 출력의 창의성과 반복성에 영향을 줄 수 있습니다.
     * 일부 사용자들은 iOS 시뮬레이터의 콘솔 로그를 관찰함으로써 ""unilm.bundle""이 새로운 텍스트 예측 모델임을 발견했습니다.
     * 애플의 모델의 미래 버전이 더 높은 품질의 데이터로 훈련된 더 작은 모델로 전환할 것인지, 그리고 애플이 Xcode용 Copilot의 자체 버전을 개발할 것인지에 대한 추측이 있습니다.
     * 일부 사용자들은 텍스트 예측의 목적이 텍스트 입력을 가속화하는 것이라면, 입력 인터페이스가 병목 현상이 될 수 있으며, 이는 텍스트를 더 빠르게 입력할 수 있는 방법의 필요성을 제안합니다.
     * AI의 배포가 논의되고 있으며, 일부 사용자들은 AI가 end-to-end 솔루션으로 판매되기보다는 작고 신뢰할 수 있는 작업을 수행하는 데 사용되어야 한다고 제안합니다.
     * 새로운 예측 텍스트 모델이 경험 또는 iMessage 기록을 바탕으로 개선할 수 있는지에 대한 질문이 제기되었습니다.
     * ""UnilmCtrl""이라는 용어는 Socher의 CTRL 모델에 어떤 의존성을 시사하는 것으로 추측되지만, 이는 확인되지 않았습니다. 일부 사용자들은 애플이 NLP 분야에서 더 오랫동안 일해왔다면 더 존경할 것이라고 말합니다.
"
"https://news.hada.io/topic?id=11015","GitHub Actions이 훨씬 더 좋아질 수 있음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GitHub Actions이 훨씬 더 좋아질 수 있음

     * 저자는 2019년부터 GitHub Actions의 일일 사용자이며, 재사용 가능한 워크플로우, OpenID 연결, 작업 요약, GitHub Mobile로의 통합과 같은 새로운 기능을 감사하게 생각한다.
     * 그러나 저자는 GitHub Actions에서 디버깅 과정이 시간이 많이 소요되고 여러 컨텍스트 전환을 포함한다는 점에 대해 불만을 표현한다.
     * 저자는 대화식 디버깅 셸과 분명히 유효하지 않은 워크플로우를 가진 커밋을 거부하는 저장소 설정과 같은 개선을 제안한다.
     * 저자는 또한 GitHub Actions의 보안 문제, 예를 들어 잠재적으로 취약한 워크플로우를 작성하는 것이 쉽고 포크와 비포크 SHA 참조 간의 구분이 없다는 점을 강조한다.
     * 저자는 불안전한 워크플로우의 푸시 시간 거부, 워크플로우에 대한 런타임 검사, 더 제한적인 기본 토큰 범위 등과 같은 해결책을 제안한다.
     * 저자는 GitHub Actions에서 타입 강제의 부재를 비판하며, 이로 인해 유지 관리 및 보안 문제가 발생한다.
     * 저자는 액션 및 워크플로우 작성자가 어디에서나 type:을 사용하도록 허용하고, 더 엄격한 타입 검사를 실시하며, type: object와 type: array 타입을 도입하는 것을 제안한다.
     * 저자는 또한 GitHub에서 더 많은 공식 액션을 요구하며, 가장 큰 제3자 액션과 협력하여 더 많은 의사 공식 액션을 요구한다.
     * 저자는 GitHub 엔지니어들이 이러한 문제를 공유하고 해결하길 바란다.

        Hacker News 의견

     * 기사는 두 가지 유형의 GitHub Actions 워크플로우에 대해 논의하고 있습니다: GitHub Actions로 프로그래밍하고 설정하는 것. 전자는 복잡하고 이해하기 어려운 워크플로우를 초래할 수 있으며, 후자는 더 간단하고 관리하기 쉬운 워크플로우를 만듭니다.
     * 사용자들은 Microsoft가 제공하는 디버깅 도구의 부족에 대해 불만을 표현하며, 이로 인해 번거로운 커밋-푸시-디버그 루프가 발생한다고 지적합니다. 그들은 디버깅을 쉽게 하기 위해 YAML 복잡성을 스크립트로 밀어넣는 것을 제안합니다.
     * 일부 사용자들은 디버깅 문제를 해결하고 로컬 머신을 포함한 어디에서나 실행할 수 있는 이동 가능한 파이프라인을 만들기 위해 Act와 Garden 같은 도구를 사용하는 것을 권장합니다.
     * 사용자들은 GitHub Actions의 병렬화 부족, 컨테이너 기반 작업의 불량 처리, 캐시 크기 제한 등을 비판하며, 동일한 VM에서 단계를 병렬로 실행할 수 없는 능력 부족에 대해 불만을 표현합니다.
     * 사용자들은 GitHub Actions의 보안 문제를 지적하며, 포크와 비포크 SHA 참조를 구분할 수 없는 능력 부족이 포크가 보안 설정을 우회할 수 있게 할 수 있다고 말합니다.
     * 일부 사용자들은 pre-commit.ci를 사용하여 커밋 전에 코드 검사와 수정을 하는 것을 권장하며, 이것이 빠르게 작동하고 많은 디버깅 문제를 해결한다고 말합니다.
     * 사용자들은 현재의 actions/upload-artifact를 사용하지 않고도 액션 실행에 HTML 보고서를 첨부할 수 있는 기능을 원하며, 작업 요약에 HTML 보고서에 대한 링크를 놓을 ""attach-report"" 액션을 제안합니다.
     * 사용자들은 자신들의 로컬 머신에서 모든 CI 워크플로우를 실행할 수 있게 해주는 Earthly와 같은 프로젝트를 지지하며, CI가 하는 대부분의 일은 스크립트나 다른 비CI 도구로 추상화되어야 한다는 데 동의합니다.
"
"https://news.hada.io/topic?id=10969","OpenAI, DALL·E 3 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          OpenAI, DALL·E 3 공개

     * 이전 보다 훨씬 더 많은 뉘앙스와 디테일을 이해하여, 아이디어를 매우 정확한 이미지로 쉽게 변환
     * 요즘 텍스트-이미지 변환 시스템은 단어나 설명을 무시하는 경향이 있어 사용자에게 프롬프트 엔지니어링을 배우도록 강요함
          + DALL-E 3는 사용자가 제공한 텍스트와 정확히 일치하는 이미지를 생성하는 능력에서 비약적인 발전을 이뤄냄
     * 완전히 같은 프롬프트로도 DALL·E 2 보다 훨씬 좋은 이미지를 만들어 냄
     * DALL-E 3는 기본적으로 ChatGPT를 기반으로 제작되었기 때문에 ChatGPT를 브레인스토밍 파트너이자 프롬프트를 다듬는 도구로 사용할 수 있음
          + 원하는 이미지의 내용을 ChatGPT에게 간단한 문장부터 자세한 단락까지 입력해서 요청하면 됨
     * DALL-E 3는 10월 초에 ChatGPT 플러스 및 엔터프라이즈 고객에게 제공될 예정
     * DALL-E 2와 마찬가지로 DALL-E 3로 생성한 이미지는 사용자가 사용할 수 있으며 재인쇄, 판매 또는 상품화를 위해 허가받을 필요 없음
     * 폭력적이거나 성인적인 내용, 혹은 혐오스러운 콘텐츠를 생성하는 능력을 제한하기 위한 안전 조치가 취해졌으며, 공공 인물의 이미지 요청을 거부하는 조치도 마련
     * DALL-E 3는 현재 생존하는 아티스트의 스타일로 이미지를 요청하는 것을 거부하도록 설계됨
          + 크리에이터는 이제 자신의 이미지를 향후 이미지 생성 모델 학습에서 제외할 수도 있음
"
"https://news.hada.io/topic?id=10914","생성적 이미지 동역학","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              생성적 이미지 동역학

     * Google 연구자들이 개발한 장면 동적성에 대한 이미지 공간 우선 모델링의 새로운 접근법에 대한 기사
     * 자연스러운 진동 운동을 포함하는 실제 비디오 시퀀스에서 추출된 운동 궤적을 사용하여 모델 훈련
     * 모델은 주파수 조정된 확산 샘플링 과정을 사용하여 푸리에 도메인에서 픽셀 당 장기 운동 표현을 예측, 이를 신경 스토캐스틱 운동 텍스처라고 함
     * 이 표현은 전체 비디오를 아우르는 밀집 운동 궤적으로 변환 가능
     * 모델은 정적 이미지를 원활하게 반복되는 동적 비디오로 변환하거나 사용자가 실제 사진의 객체와 현실적으로 상호 작용할 수 있게 하는 등 다양한 응용 프로그램에 사용 가능
     * 모델은 상호작용하는 사용자의 흥분에 대한 객체 동적성의 반응을 시뮬레이션 가능
     * 운동 텍스처의 진폭을 조정하여 움직이는 동작을 축소하거나 확대 가능
     * 예측된 운동 텍스처를 보간하여 슬로우 모션 비디오 생성 가능
     * 연구자들은 Rick Szeliski, Andrew Liu, Qianqian Wang, Boyang Deng, Xuan Luo, Lucy Chai의 교정, 코멘트, 토론에 대한 기여를 인정
     * 시연에 사용된 웹사이트는 nerfies에서 빌려온 것으로, Keunhong에게 감사의 말 전달
"
"https://news.hada.io/topic?id=11010","이집트 상업 감시 업체가 이용한 0-days 취약점","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      이집트 상업 감시 업체가 이용한 0-days 취약점

     * Google의 Threat Analysis Group(TAG)과 The Citizen Lab이 상업 감시 업체인 Intellexa가 개발한 아이폰용 0-day 공격 경로를 발견했습니다.
     * 이 공격 경로는 사용자의 지식 없이 Intellexa의 Predator 스파이웨어를 장치에 설치하는 데 사용됩니다.
     * Apple은 iOS 16.7 및 iOS 17.0.1에서 CVE-2023-41991, CVE-2023-41992, CVE-2023-41993으로 버그를 수정하였으며, 모든 iOS 사용자에게 가능한 한 빨리 이 패치를 설치하도록 권장합니다.
     * 공격 경로는 ""중간자 공격""(MITM)을 통해 전달되었으며, 이 공격에서 공격자는 대상의 웹 트래픽을 가로채 다른 웹사이트로 리디렉션합니다.
     * iOS용 공격 경로에는 세 가지 취약점이 포함되어 있습니다: Safari에서의 초기 원격 코드 실행, PAC 우회, XNU 커널에서의 로컬 권한 상승.
     * 공격자는 또한 MITM 주입과 대상에게 직접 보낸 일회용 링크를 통해 이집트의 안드로이드 장치에 Predator를 설치하는 공격 경로를 가지고 있었습니다.
     * Chrome은 MITM 공격에 대비하여 웹 전체에서 HTTPS의 보편적인 채택을 위해 노력하고 있으며, 모든 페이지를 HTTPS로 로드하려는 ""HTTPS-First Mode""를 가지고 있습니다.
     * 이 캠페인은 상업 감시 업체에 의한 위험과 온라인 사용자의 안전에 미치는 그들의 영향에 대한 예시입니다.
     * TAG는 상업 스파이웨어 산업에 대한 조치를 계속 취하고, 이에 대한 연구를 발표하며, 이 작업을 추진하기 위해 공공 및 민간 부문과 협력할 계획입니다.
     * The Citizen Lab은 이러한 공격을 포착하고 분석하는 데 있어 협력과 파트너십을 인정받았으며, Apple은 온라인 사용자의 안전을 위해 적시에 패치를 배포한 것에 대해 감사의 말을 전했습니다.

        Hacker News 의견

     * 이집트의 상업 감시 업체가 0-day 취약점을 악용하는 문제에 대한 기사.
     * 안드로이드에서의 샌드박스 탈출의 성격에 대한 의문을 던지며, 크롬의 패치에 대한 우려가 제기됨.
     * HTTP와 일회용 링크의 가로채기를 포함한 대상 지정 캠페인이 공격 경로였지만, 이것이 광고 캠페인이나 스팸을 통해 봇넷을 구축하거나 사용자 자격 증명을 도용하는 데 널리 사용될 수 있다는 우려가 있음.
     * 공격은 HTTP를 이용해 초기 페이로드를 주입하지만, 국가 후원의 공격자들이 CA 또는 CDN 인프라를 잠재적으로 장악할 수 있다는 제안이 있음.
     * 구글과 애플 같은 기술 거인들이 왜 스파이웨어 회사와 0-day 업체의 직원을 고용하여 이러한 취약점을 찾지 않는지에 대한 의문이 제기됨.
     * 이 취약점이 이집트 당국에 의해 대통령 후보인 아흐메드 엘 탄타위의 휴대폰을 해킹하는 데 사용되었을 것으로 의심됨.
     * 일부 사용자들은 업데이트 설치와 HTTPS-Only 모드 사용 등으로 자신들을 보호하기 위한 조치를 취하고 있음.
     * 구글이 업체가 사용하던 도메인을 공개했을 수도 있으며, 이로 인해 자행법이 초래될 수 있다는 추측이 있음.
     * iOS의 Lockdown 모드가 이 공격 체인을 차단했다는 사실이 언급됨.
     * 자바스크립트가 기본적으로 비활성화되면 이 공격이 여전히 작동할지에 대한 의문이 제기됨.
"
"https://news.hada.io/topic?id=10970","바닐라 아이스크림에 알레르기를 보이는 자동차 (2000)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    바닐라 아이스크림에 알레르기를 보이는 자동차 (2000)

     * 특이한 문제에 직면한 포니악 자동차 소유자의 이야기: 바닐라 아이스크림을 구매한 후 자동차가 시동이 걸리지 않음.
     * 소유자는 자신이 직면한 문제, 비록 어이없게 들리지만, 실제로 존재하는 문제에 대해 포니악 부서의 제너럴 모터스에게 편지를 썼다.
     * 회의적이었지만, 포니악 회장은 이 문제를 조사하기 위해 엔지니어를 보냈다.
     * 여러 차례 방문과 관찰 후, 엔지니어는 자동차가 시동이 걸리지 않는 것이 아이스크림의 종류와는 관련이 없고, 그것을 구매하는 데 걸리는 시간과 관련이 있다는 것을 발견했다.
     * 가장 인기 있는 맛인 바닐라 아이스크림은 가게 앞쪽에 빠르게 접근할 수 있어, 여행 시간이 짧았다.
     * 짧은 여행은 자동차 엔진이 다시 시작할 수 있을 만큼 충분히 식을 시간을 주지 않아, 기화락을 일으켰다.
     * 다른 맛을 구매할 때는 문제가 발생하지 않았다. 왜냐하면 그들은 가게 뒷쪽에 위치해 있었고, 그것들을 구매하는 데 걸리는 더 긴 시간이 엔진을 충분히 식히는 데 도움이 되었기 때문이다.
     * 이 이야기는 심지어 어이없게 보이는 문제들도 때때로 실제로 존재하고 논리적인 설명이 있을 수 있다는 것을 강조한다.

        Hacker News 의견

     * 기사는 이상한 기술 문제와 그들의 예상치 못한 해결책에 대한 일련의 일화를 공유한다.
     * 한 이야기는 특정 시간에만 작동하는 마우스가 얇은 플라스틱 케이싱 때문에 햇빛이 센서를 방해하는 것으로 밝혀진 것을 다룬다.
     * 또 다른 일화는 매일 오후 5시에 재부팅되는 서버가 청소부가 진공청소기를 사용하기 위해 서버를 뽑는 것이 원인이었다는 것을 알려준다.
     * GM 미니밴이 무작위로 시동이 걸리지 않는 이야기는 사용자의 불만을 진지하게 받아들이는 것의 중요성을 강조하며, GM 엔지니어들조차 처음에는 문제를 파악하지 못했다.
     * 한 사용자는 집안의 정지된 전자제품에서 희미한 정치 연설을 들었던 무서운 경험을 공유하는데, 이는 집의 전선이 AM 라디오 수신기로 작용했던 것으로 밝혀졌다.
     * 게임 중에 계속해서 꺼지는 노트북 화면은 자석 시계 밴드가 노트북의 홀 센서를 작동시키는 것이 원인이었다는 것이 밝혀졌다.
     * 특정 위치에서 항상 와이퍼 액 부족을 경고하는 자동차는 또 다른 특이한 문제로, 이는 현지 전화 신호의 사각지대와 관련이 있을 수 있다.
     * 이런 일화들은 라디오 쇼 Car Talk에서 공유된 재미있고 특이한 이야기와 비교된다.
     * 한 사용자는 사용자의 문제가 대체로 실제로 있지만, 원인을 진단하는 능력은 종종 부정확하다고 댓글을 남겼다.
     * 마을 간의 경쟁 이야기는 오해와 기술 지식 부족이 ""블랙 매직""의 비난으로 이어질 수 있음을 보여준다.
     * 마지막 일화는 Subaru의 불안정한 Bluetooth 연결이 놀랍게도 장갑 수납함을 닫으면서 고쳐진 것을 다룬다.
"
"https://news.hada.io/topic?id=10915","Show HN: 'Every Breath You Take' - 심박변이도 훈련","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Show HN: 'Every Breath You Take' - 심박변이도 훈련

     * 새로운 애플리케이션은 Polar H10 심박수 모니터를 사용하여 HRV(심박 변이성)를 측정하고 통제된 호흡을 통해 훈련하는 것을 소개한다.
     * HRV는 심박마다의 작은 변화로, 스트레스 반응의 신뢰할 수 있는 척도이다. 이는 자율신경계의 두 가지 반응, 즉 싸움 혹은 도망치는 반응(교감신경계)과 휴식 및 소화 반응(부교감신경계) 사이의 균형을 반영한다.
     * 이 애플리케이션은 사용자가 더 느리고 깊게 숨을 쉼으로써 자율신경계의 균형을 회복할 수 있게 한다. 이는 가슴 가속도계를 사용하여 측정할 수 있다.
     * 애플리케이션의 주요 기능에는 Polar H10에 연결하고 스트리밍하는 기능, 실시간 호흡 제어 피드백, 조절 가능한 속도 설정, 실시간으로 호흡 및 심박수 진동을 추적하는 기능이 포함된다.
     * 애플리케이션은 사용자가 HRV가 다른 호흡 속도에 어떻게 반응하는지 탐색할 수 있게 한다.
     * 애플리케이션을 설치하고 사용하려면 사용자는 여러 Python 명령을 실행해야 한다. 프로그램은 자동으로 Polar 장치에 연결한다.
     * 최상의 결과를 얻기 위해, Polar H10은 갈비뼈의 가장 넓은 부분에 착용되어야 하며, 사용자는 녹음하는 동안 앉아 있고 움직이지 않아야 한다.
     * 사용자는 호흡 속도를 슬라이더(분당 호흡수)로 설정하고, 시각적인 원이 확장되고 수축하는 것을 따라 호흡을 할 수 있다. 원은 사용자의 호흡 제어를 보여준다.
     * 애플리케이션은 사용자가 각 호흡 주기와 심박수가 어떻게 반응하는지 추적할 수 있게 한다. 사용자는 호흡 속도와 제어를 조정하여 HRV의 하단 그래프에서 녹색 영역(> 150 ms)을 목표로 할 수 있다.
     * 애플리케이션의 개발자들은 피드백, 버그 보고, 풀 요청을 환영한다. 사용자는 GitHub에서 이슈를 제출하거나 풀 요청을 생성할 수 있다.
"
"https://news.hada.io/topic?id=10986","월 $10에 무제한 Kagi 검색 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         월 $10에 무제한 Kagi 검색 가능

     * Kagi 검색 엔진이 Professional 플랜에 월 10달러 무제한 검색 제공 시작
     * 사용자 피드백에 따른 것으로, 기존 광고 지원 검색에서 전환 시 검색 습관을 바꾸는 것이 중요하기 때문
     * 연간 결제시 10% 할인 제공
     * 무제한 문서, 오디오, 비디오 요약 가능한 Universal Summarizer 사용 무제한 포함
     * 표준 플랜인 스타터 플랜, 월 5달러에 300회 검색 제공. 이 플랜은 평균적으로 하루에 몇 번 검색하는 사용자를 대상으로 설계
     * 이전에 무제한 검색을 제공하던 Ultimate Plan은 사용자에게 Kagi가 개발 중인 다음 세대 도구의 폐쇄 베타에 접근 권한 제공
     * 가족 및 듀오 플랜 도입, 각각 월 20달러(최대 6명까지)와 월 14달러(커플용)에 무제한 검색 제공
     * 신용카드, PayPal, OpenNode를 통한 Bitcoin/Lightning 등 새로운 결제 옵션 추가
     * 현재 표준 또는 전문가 플랜의 사용자에 대한 모든 보류 중인 미터기 사용료 면제
     * 협업에 열려 있으며 내년 초에 주주가 되고자 하는 사용자를 위한 또 다른 펀드레이징을 고려 중

   Kagi 베타 때 사용했었는데 검색 경험이 그 당시에도 엄청 좋았었어요.
   구글 검색에서 거의 한 80%를 차지하는 광고가 거의 안 보여서...

   다만 아직도 검색 엔진에 돈을 써야 하나? 라는 의문 때문에 유로로 사용은 하지 못하고 있는 상태지만요.

   어제 한번 검색결과가 희소한 검색어를 kagi로 찾아봤는데, 구글에서는 정보 제공을 위한 상업적인 사이트가 위주라 결과로부터 정보들을 찾아내는데 노이즈가 많은 반면, kagi는 필요한 정보를 가진 페이지만 정확하게 딱 잘 찾아서 리스팅해주더라구요. 기대가 되는 서비스인것 같습니다.

        Hacker News 의견

     * Kagi는 정확성과 Google과의 지속적인 비교가 필요하지 않다는 점을 사용자들이 칭찬하는 높이 평가받는 검색 엔진입니다.
     * 사용자들은 매일 여러 번 사용하는 도구로서 월 10달러는 합리적인 가치라고 인식합니다.
     * Kagi의 기능은 검색의 사용자 정의를 가능하게 하지만, 사용자들은 결과가 너무 좋아 거의 사용할 필요가 없다고 느낍니다.
     * 일부 사용자들은 다른 플랫폼에서 Kagi로 이동하였으며, 제품으로부터 받는 존중감을 높이 평가합니다.
     * Kagi의 채용 페이지는 쾌적하고 빠른 사용자 인터페이스를 만드는 데 초점을 맞추고 있으며, 속도를 우선시합니다.
     * 일부 사용자들은 다른 결제 모델을 원하며, 이는 월간 요금 대신 검색 블록을 구매하는 것을 포함합니다.
     * Kagi는 DuckDuckGo의 Bang 문법을 채택하여 필요한 경우 사용자가 Google로 검색을 전환할 수 있게 하였습니다.
     * 사용자들은 Kagi가 이전에 방해가 되었던 제한된 검색 횟수를 제거한 것에 만족합니다.
     * 일부 사용자들은 비즈니스 모델이 도전적이라고 느끼며, 이는 그들의 월간 예산에 추가 비용을 부과합니다.
     * 사용자들은 여러 번 Google 검색을 떠나려고 시도했지만, 다른 플랫폼에서의 결과 품질이 부족하다고 느꼈습니다. 그러나 Kagi는 높은 품질의 결과로 칭찬받았습니다.
     * 일부 사용자들은 웹 검색이 ChatGPT와 같은 다른 도구의 사용 가능성을 고려할 때 지불할 만큼 중요하지 않다고 생각합니다.
     * Kagi의 새로운 가격 모델은 더 많은 사용자들이 서비스를 시도하도록 격려하고 있습니다.
     * Google을 떠난 사용자들은 Bing과 DuckDuckGo가 만족스럽다고 느꼈지만, 무언가를 놓친다고 느끼며, 그것을 Kagi에서 찾기를 희망합니다.
"
"https://news.hada.io/topic?id=10916","인스타그램이 오직 3명의 엔지니어로 1400만 사용자를 확보한 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 인스타그램이 오직 3명의 엔지니어로 1400만 사용자를 확보한 방법

     * 2010/10 부터 2011/11 까지 약 1년간 0명에서 1400만명 사용자에 도달. 엔지니어는 단 3명
     * 3가지 원칙을 따랐음
          + 간단하게 유지할 것 (Keep things very simple.)
          + 바퀴를 재발명하지 말 것 (Don’t re-invent the wheel.)
          + 가능하면 입증된 견고한 기술을 사용할 것 (Use proven, solid technologies when possible.)

사용자 관점에서 간단하게 스택 살펴보기

     * 초기 인프라는 AWS EC2에서 Ubuntu Linux
     * 인스타그램 앱은 iOS만 먼저 나왔고, Swift 발표 전이라 Objective-C + UIKit 일 가능성이 높음
     * 로드 밸런싱을 위해 Amazon의 Elastic Load Balancer와 3개의 NGINX 인스턴스를 사용하
     * 백엔드
          + 어플리케이션 서버는 파이썬으로 개발되어서 Django 와 WSGI 서버로 Gunicorn
          + Fabric 을 이용해서 여러 인스턴스에서 같은 명령을 동시 실행. 이를 통해 코드를 몇 초 안에 배포
          + 25대의 고성능 CPU Extra-Large 머신을 구동. 모두 Stateless라서 필요하면 쉽게 더 추가 가능
     * 일반 데이터 저장소
          + 관련된 포토 ID, 해당 ID의 실제 사진, 사진에 대한 사용자 데이터
          + 어플리케이션 서버가 PostgreSQL로 부터 데이터 가져오기
          + Django 와 PostgreSQL 간에 pgbouncer로 풀링
          + 인스타그램은 시간으로 정렬가능한 ID를 이용함 : 41비트 밀리초 + 13비트 샤드ID + 10비트 자동 증가 시퀀스
     * 사진 저장소 : S3와 Cloudfront
     * 캐싱: Redis 와 Memcached
          + 스마트한 해싱을 통해서 3억개의 키 매핑을 5GB 이하의 공간에 저장
          + 그리고 2년후에 페이스북은 Memcached를 스케일해서 초당 수십억건의 요청을 확장한 방법에 대한 논문을 발표
     * Postgres와 Redis 모두 Master-Replica 모드로 실행. Amazon EBS 스냅샷으로 계속 백업
     * Push Notification 과 Async Task : 노티는 pyapns. Gearman 태스크 큐
     * 오류를 실시간으로 모니터링하기 위해 오픈 소스 Django 앱인 Sentry를 사용하였으며, 시스템 전체 메트릭스를 위해 Munin을 사용하였고, 외부 서비스 모니터링을 위해 Pingdom 과 PagerDuty를 사용

   인스타그램이 초창기에는 (고집스럽게 아이폰만 지원하던 시절) 팬시한 이미지 필터앱 정도의 느낌이었는데 말이죠. 이렇게 대박이 날줄은 상상도 못했습니다. (저의 상상력이 그정도였어요;;;)

   Exit까지 경험한 제품들 비교 중에서 인스타그램이 1인당 엑싯 금액이 상당히 높은 상태였던 것을 본 기억이 있네요. 배울 점이 많다고 생각합니다.

        Hacker News 의견

     * Instagram이 단 세 명의 엔지니어로 1400만 사용자를 확보하는 방법에 대한 기사
     * Instagram이 Objective-C와 UIKit으로 작성되었다고 가정하는 언어에 대한 논쟁
     * Instagram의 기술 스택의 단순성을 칭찬하는 일부 댓글, 많은 회사들이 비슷한 접근법으로 이익을 볼 수 있음을 제안
     * ""적절한 사람들을 선택하면 몇 명만 필요합니다. 그렇지 않으면 모두 필요하게 됩니다.""라는 한 댓글에서 강조하는 팀원 선택의 중요성
     * Instagram이 수백만 사용자의 피드를 즉시 업데이트하는 방법에 대한 호기심, 분산 시스템에서 읽기를 확장하는 것보다 더 도전적인 작업으로 간주
     * Django, Postgres, Redis, 하드웨어 속도의 발전을 고려할 때 Instagram이 현대 기술로 얼마나 확장할 수 있었을지에 대한 추측
     * 엔지니어링 팀의 크기에 대한 논의를 촉발하는 기사, 기본 CRUD 앱을 가진 일부 조직이 왜 수천 명의 엔지니어를 필요로 하는지 이해하기 어려워하는 일부 사람들
     * Instagram의 자신만의 버전을 만들고 싶다는 욕구를 표현하는 일부 독자들 사이에서 영감의 감각
     * Instagram의 초기 날에는 iOS 앱이라는 하나의 프론트엔드만 있었으며, 현대의 소셜 미디어 플랫폼보다 기능이 적었다는 점이 언급
     * Instagram의 인프라 위에 Meta의 Threads 앱을 개발하는 최근의 내부자 경험 공유, 앱의 성공과 관련 팀의 크기 강조
"
"https://news.hada.io/topic?id=10988","Safari 17.0의 WebKit 기능들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Safari 17.0의 WebKit 기능들

     * iOS/iPadOS 17에 포함된 사파리 17.0의 기능들

HTML

     * 새로운 <search> 엘리먼트
     * popover 속성 지원 추가 auto/manual
     * <select> 내부에서 <hr> 로 구분자 가능

CSS

     * font-size-adjust 에 from-font 및 문법 추가 (ex-height, cap-height, ch-width, ic-width, ic-height 등 조정)
     * text-transform에 full-width / full-size-kana 추가
     * 폰트 지원 테스팅 : @supports font-format() / @supports font-tech()
     * Hyphenation : hyphens: auto/manual 멀티라인이 될때 하이픈 추가
     * @counter-style 지원
     * display:contents 의 접근성 이슈들 해결
     * Media Queries Level 4 지원
     * image-set() 향상
     * Container Queries: CSSOM(CSS Object Model) 지원

JavaScript 와 Web API

     * Storage API 지원 : 1GB 제한이었던게 이제 전체 디스크 용량 기반으로 계산
     * Offscreen Canvas 에서 WebGL도 지원
     * Canvas: CanvasRenderingContext2D.drawImage() 가 캔바스에 그려질 이미지의 여러 소스를 지원
     * 정규식에 2가지 지원 추가
          + RegExp v flag with set notation + properties of strings
          + RegExp duplicate named capture groups.
     * Set 명령어 추가: intersection(), union(), difference(), isSubsetOf(), isSuperSetOf(), symmetricDifference() ,isDisjointFrom()
     * Gamepad API : Gamepad.prototype.vibrationActuator
     * URL API : URL.canParse(tentativeURL, optionalBase) 및 has(), delete() 추가
     * WebSocket 생성자에서 relative URL 사용 가능
     * <link rel=""modulepreload""> 지원

이미지와 비디오

     * JPEG XL 지원 추가
     * HEIC 이미지 지원
     * AV1 비디오 하드웨어 디코딩 지원 추가(아이폰 15프로와 15 프로 맥스)
     * Managed Media Source API 지원
     * 개발자용 Media player stats overlay
     * WebM 과 MPEG-4 컨테이너에서 stereo-only Opus 지원
     * iPadOS 17에서 USB 카메라 지원

Web Apps on Mac

     * 모든 웹 사이트를 Dock에 추가 가능 File > Add to Dock
          + 웹앱은 일반 앱처럼 동작. 스테이지 메니저/미션 컨트롤/커맨드 탭/키보드 단축키 등
          + 런치패드/스팟라이트 검색에서도 실행 가능
     * 서비스 워커 지원
     * Web App Manifest를 제공하면 디스플레이 모드, 이름, 테마 색상, 시작 URL 등을 커스터마이징 가능
     * Safari View Controller 에서도 Add to Home Screen 지원

Web 개발자 도구

     * 개편된 Develop 메뉴
     * Feature Flags 패널을 완전 개편
     * 새로운 개발자 세팅 패널
     * 새로운 탭별 설정 오버레이
     * 재 설계된 반응형 웹 디자인 모드
     * 사파리에서 어떤 페이지든 시뮬레이터 직접 실행 가능
     * Web Inspector 개선

보안

     * GPU 프로세스 를 WebContent 프로세스와 분리

브라우저 변경

     * Safari Profiles 추가
     * Safari Private Browsing 향상
     * Live Text 지원
     * Payment Request API 를 통해 Apple Pay 지원
     * 락다운 모드 지원

Safari 확장

     * Safari App Extensions 가 Safari Web Extensions 와 같은 사이트별 권한을 갖게됨
     * Private Browsing 시에 확장 Off 가능
     * Safari Profile 별로 모든 확장을 켜고 끌 수 있음
"
"https://news.hada.io/topic?id=10926","Unity, 요금제 수정안 발표 예정 및 사과문","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Unity, 요금제 수정안 발표 예정 및 사과문

   최근 Unity가 발표한 요금제의 정책을 다시 수정 후 수일 내로 공지하겠다며 더불어 혼란과 불안을 끼친 점에 대해 사과하는 글을 트위터에 게시하였습니다.

   신뢰가 한번 날아가서 쌓기 쉽진 않겠네요

   요새 가장 뜨거운 감자던데.. 어떻게 될 지 궁금하네요.

   내부 인원들도 반대하는 입장이었는데 윗선에서 결정돼서 밀어부쳤다는 이야기가 돌더군요
   CEO가 문제라고 봅니다.

   만악의 근원인 ceo부터 퇴출시켜야...

   역시나 반발이 너무 컷나보네요. 과연 어떻게 수정되어 나올지 기다려봐야겠어요.
"
"https://news.hada.io/topic?id=10935","HyperDX - 개발자 친화적인 Datadog 대체제 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  HyperDX - 개발자 친화적인 Datadog 대체제 오픈소스

     * HyperDX는 Datadog 및 New Relic에 대한 개발자 친화적인 오픈 소스 대체제로, 엔지니어가 생산 문제를 신속하게 식별하고 해결하는 데 도움을 주도록 설계
     * 로그, 메트릭, 트레이스, 예외, 세션 재생을 한 곳에서 중앙 집중화하고 연관시켜 몇 번의 클릭만으로 종단 간 연관성을 가능하게 함
     * Clickhouse에 의해 구동되는 빠른 성능, 직관적인 전문 검색, 수십억 개의 이벤트에서 자동 이벤트 패턴 클러스터링, 간편한 알림 설정을 제공
     * 자동 JSON/구조화된 로그 파싱을 지원하며 OpenTelemetry 네이티브임
     * Docker Compose를 사용하여 설정할 수 있으며, 설정 후 http://localhost:8080에서 접근 가능한 사용자 인터페이스를 제공
     * hyperdx.io에서 호스팅되는 클라우드 서비스로도 제공되며, 사용자는 무료 계정에 가입하고 몇 분 안에 데이터를 전송하기 시작할 수 있음
     * 로그, 메트릭, 트레이스 등을 HyperDX로 가져오려면 사용자는 앱을 계측하여 텔레메트리 데이터를 HyperDX 인스턴스로 수집하고 전송해야 함
     * HyperDX는 브라우저, Node.js, Python 등 다양한 플랫폼에 대한 SDK 및 통합 옵션을 제공
     * 또한 CNCF가 지원하는 애플리케이션 계측을 위한 공급업체 중립적인 표준인 OpenTelemetry와 호환되며, Kubernetes, Javascript, Python, Java, Go, Ruby, PHP, .NET, Elixir, Rust와 같은 언어/플랫폼을 지원
     * HyperDX의 동기는 텔레메트리를 활용하는 쉽고, 확장 가능하며, 저렴한 도구를 제공함으로써 엔지니어가 신뢰할 수 있는 소프트웨어를 출하하는 데 도움을 주는 것
     * HyperDX는 오픈 코어로, 대부분의 기능은 MIT 라이선스 하에 제공. 또한 비즈니스를 지속하고 HyperDX를 오픈 소스 플랫폼으로 계속 구축하는 데 필요한 추가 기능을 제공하는 클라우드 호스팅 버전도 제공

   진짜 저렴하긴 하네요. 오픈소스라서 기술에대한 비용이 많이 절감되어서 그런지..
   오픈소스이기 때문에 다양한 시스템으로 빠르게 확장가능 할 것이라는 기대도 생기네요

        Hacker News 의견

     * 기사는 Datadog의 대안인 오픈소스, 개발자 친화적인 HyperDX에 대해 논의한다.
     * 사용자들은 HyperDX, signoz, openobserve, uptrace, highlight.io와 같은 새로운 플랫폼을 테스트하고 비교하는 객관적인 블로그나 비디오에 관심이 있다.
     * 이러한 플랫폼의 장기적인 생존 가능성에 대한 우려가 있으며, 일부 사용자들은 이들이 지속적인 VC 자금을 필요로 할 수 있다고 추측한다.
     * HyperDX를 포함한 여러 플랫폼들이 칼럼 지향 데이터베이스 관리 시스템인 Clickhouse 위에 구축되고 있다.
     * 사용자들은 HyperDX의 세련된 수준과 개발자 경험(DX)에 대한 초점을 칭찬한다.
     * HyperDX가 높은 데이터 속도 입력을 어떻게 처리하고, 이에 대한 옵션을 오픈소스에서 제공할 것인지에 대한 의문이 있다.
     * 사용자들은 HyperDX의 라이선싱에 대해 궁금해하며, 일부는 MIT 라이선스 아래에 있다는 것에 놀랐다.
     * HyperDX의 타겟 페르소나와 GTM 계획은 사용자들이 제품 주도 성장(PLG)에 초점을 맞출 수 있다고 추측하는 관심 주제다.
     * 사용자들은 로컬 개발 로깅에서 HyperDX의 잠재력을 보고, 이에 기여하는 데 관심이 있다.
     * HyperDX는 그 세련되고 빠른 성능으로 칭찬받으며, 사용자들은 Datadog에 비해 저렴하다는 것을 칭찬한다.
     * 사용자들은 HyperDX의 세션 재생 기능을 유용하게 사용하며, 이는 많은 Datadog 대안에서 부족한 기능이다.
     * HyperDX의 쿼리 구문에 대한 질문이 있으며, 이것이 기존의 사양을 따르는지 여부에 대한 의문이 있다.
     * 일부 사용자들은 HyperDX가 의존할 수 있는 OpenTelemetry 라이브러리 중 많은 것들이 미완성이라고 지적한다.
"
"https://news.hada.io/topic?id=10891","Unity가 조용히 ToS 변경을 추적하는 GitHub 저장소를 삭제한 것으로 보임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Unity가 조용히 ToS 변경을 추적하는 GitHub 저장소를 삭제한 것으로 보임

     * Unity가 라이센스 계약의 변경 사항을 추적하던 GitHub 저장소를 제거했음
     * 또한 라이센스를 업데이트 해서 예전에 배포했던 버전의 ToS를 사용 가능하게 했던 것도 수정
          + 즉, 이미 배포된 기존 게임들도 새 ToS가 적용되어 런타임 수수료를 내야 한다는 것
     * 이 깃헙 Repo는 2019년에 처음 만들어져서, ""Unity는 개방형 플랫폼이 되기 위해 노력하고 있으며, 완전한 투명성을 제공할 것"" 이라고 자신들의 블로그에서 얘기했었음
     * 또한 해당 블로그 게시물에서 ""Unity 버전을 구입하고 프로젝트를 업그레이드하지 않으면 해당 버전의 ToS를 고수할 수 있어야 한다고 생각한다"" 라고도 얘기한 바 있음

        Hacker News 의견

     * Unity가 이용 약관(Terms of Service, ToS)의 변경 사항을 추적하는 GitHub 저장소를 삭제했다는 보고가 있습니다.
     * 기존에 출시된 게임에 대해 회사가 변경 사항을 소급 적용하는 결정은 신뢰와 투명성을 유지하는 데 더 나은 방법이 있었을 것이라는 비판을 받았습니다.
     * Unity의 새로운 수익 모델은 수익이 아닌 설치에 연결되어 있어, 개발자들 사이에서 비용 증가와 계획의 어려움으로 인한 불만이 발생했습니다.
     * GitHub 라이선스 아카이브 저장소의 삭제는 투명성 부족으로 보여지며, Unity가 언제든지 약관을 변경할 수 있다는 사실을 숨기려고 한다는 의견이 있습니다.
     * 새로운 약관이 개발자에게 제한 없는 책임을 부과하며, 미래에 게임이 얼마나 자주 설치될지를 제어할 수 없다는 우려가 있습니다.
     * 일부 개발자들은 Unity의 최근 행동으로 인해 게임을 Godot나 Unreal과 같은 다른 플랫폼으로 이전하는 것을 고려하고 있습니다.
     * 변호사의 관점에서 상황을 논의하고 주요 불만 사항을 요약하는 비디오가 있습니다.
     * 많은 회사의 이용 약관을 추적하는 프로젝트가 있으며, 이 상황에서 유용할 수 있습니다.
     * 일부 개발자들은 Unity의 행동을 Adobe의 Flash player에서의 묵묵한 종료 스위치와 비교하며, 이로 인해 많은 게임이 불가능해졌습니다.
"
"https://news.hada.io/topic?id=10949","Java 21 / JDK 21: General Availability","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Java 21 / JDK 21: General Availability

     * 2023년 9월 19일 Java 21이 GA 상태가 됨
          + 8월 11일 처음이자 유일한 RC버전으로 배포된 빌드 35의 P1 에러 보고가 없기에 GA 상태로 릴리스함
          + Java 21은 대부분의 벤더사가 LTS로 릴리스할 것
     * 15개의 JEP, 수백 개의 작은 개선 사항, 수천 개의 버그 수정이 포함됨
          + 아래는 최종 버전에 포함된 15개의 JEP 목록임
          + 430: String Templates (Preview)
          + 431: Sequenced Collections
          + 439: Generational ZGC
          + 440: Record Patterns
          + 441: Pattern Matching for switch
          + 442: Foreign Function & Memory API (Third Preview)
          + 443: Unnamed Patterns and Variables (Preview)
          + 444: Virtual Threads
          + 445: Unnamed Classes and Instance Main Methods (Preview)
          + 446: Scoped Values (Preview)
          + 448: Vector API (Sixth Incubator)
          + 449: Deprecate the Windows 32-bit x86 Port for Removal
          + 451: Prepare to Disallow the Dynamic Loading of Agents
          + 452: Key Encapsulation Mechanism API
          + 453: Structured Concurrency (Preview)

   이제 11 쓰는데....

   하지만 한국에서는 전문업체가 아니면 21년 뒤에 적용하는 모습을 볼 수 있습니다.
"
"https://news.hada.io/topic?id=10938","Zig에서 메모리 효율적인 enum 배열","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Zig에서 메모리 효율적인 enum 배열

     * Zig와 Rust에서 enum 배열의 메모리 효율성에 대한 기사
     * Rust에서 가변 크기를 가진 Enums (또는 태그된 유니온)는 가장 큰 변형을 위한 충분한 데이터 할당이 필요하므로 상당한 메모리 파편화를 초래할 수 있음
     * 이러한 메모리 파편화는 Vec 또는 HashMap에 많은 수의 enums를 수집할 때 문제가 될 수 있음
     * 저자는 Rust에서 특정 enum을 위한 전문화된 데이터 구조를 만들어 파편화를 줄이는 것이 거의 불가능하다고 제안함
     * Zig는 더 유연하고 효율적인 데이터 구조 변환을 허용함
     * 저자는 메모리 파편화를 줄이는 것의 중요성을 강조하며, 특히 컴파일러와 구문 트리 노드의 맥락에서 그러함
     * 기사는 패킹 효율성을 향상시키는 가장 일반적인 방법은 태그된 인덱스를 사용하여 enum 변형을 가능한 작게 유지하는 것이라고 제안함
     * Zig의 단계별 컴파일은 어떤 유형에 대해서도 일반적으로 struct-of-arrays (SoA) 변환을 수행하는 컨테이너 유형을 허용함
     * 저자는 파편화를 더욱 줄이기 위해 변형 배열의 배열 (AoVA) 개념을 소개함
     * 기사는 크기 등가 클래스라는 개념에 대해서도 논의하며, 여기서는 같은 크기의 변형이 함께 그룹화되어 컨테이너 내의 총 벡터 수를 줄임
     * 저자는 이 데이터 구조의 프로토타입을 Zig에서 구현하였으며, 필드 유형, 바이트 및 비트 크기, 판별자 검사에 대한 컴파일러 내장 기능을 사용함
     * 기사는 Rust에서 매우 효율적인 일반 데이터 구조를 작성하는 것이 도전적일 수 있지만, Zig의 comptime은 더욱 구성 가능한 메모리 레이아웃을 허용한다고 결론짓고 있음
"
"https://news.hada.io/topic?id=10918","'Linear Book Scanner' - 오픈소스 자동 서적 스캐너 (2014)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             'Linear Book Scanner' - 오픈소스 자동 서적 스캐너 (2014)

     * Linear Book Scanner에 대한 기사, 오픈소스 자동 책 스캐너
     * 저렴한 가격으로 설계된 스캐너, 더 넓은 대중에게 접근성 제공
     * 스캐너의 작동 원리, 기계 위를 왔다갔다하는 책의 움직임
     * 진공 메커니즘을 이용한 페이지 넘김 방식
     * 페이지가 기계를 지나가며 두 개의 이미징 센서로 스캔
     * 스캐너와 통합된 소프트웨어, 스캔된 책의 검색 가능한 PDF 생성
     * 오픈소스로 설계된 스캐너, 누구나 이 스캐너의 버전을 만들 수 있음
     * 자동 페이지 넘김 기능이 특징적인 이 스캐너, 대부분의 책 스캐너에서 찾아보기 힘듦
     * 스캐너 설계의 오픈소스 특성, 커뮤니티의 기여와 개선을 가능하게 함

        Hacker News 의견

     * 본 기사는 오픈소스 자동 책 스캐너인 Linear Book Scanner에 대해 논의합니다.
     * 한 사용자가 BoofCV 라이브러리를 사용하여 Java로 유사한 도구를 만들어, 이미지를 자동으로 처리하여 검색 가능한 PDF를 생성하는 경험을 공유합니다.
     * 다른 사용자는 현재의 책 스캐닝 소프트웨어가 충분히 발전하지 않았으며, 이를 보완하기 위해 하드웨어가 사용되고 있다고 제안합니다. 그들은 여러 사진이나 스테레오 이미지를 사용하여 평면 페이지 이미지를 생성하는 것을 제안합니다.
     * 같은 사용자는 과학 문헌의 LaTeX 소스를 재구성하기 위한 ChatGPT와 유사한 도구의 필요성도 언급합니다.
     * 유사한 디자인의 상업용 스캐너가 언급되지만, 이는 스캐너가 움직이는 상황에서 책을 위로 스캔하여 책에 더욱 부드럽습니다.
     * 일부 사용자들은 스캐너가 보관용이나 가치 있는 책의 페이지를 손상시키거나 찢을 가능성에 대해 우려를 표현합니다.
     * 한 사용자는 책을 스캐닝하기 전에 풀어놓는 것이 확장 가능한 모델이 될 수 있으며, 이것이 일반적으로 왜 이루어지지 않는지 의문을 제기합니다.
     * 다른 사용자는 스캐너가 책을 디지털화하는 것뿐만 아니라 파쇄하는 것을 칭찬하며, 이를 1+1 행사로 보고 있습니다.
     * 한 사용자는 스캐너를 사용하여 자신의 언어 모델을 훈련시킬 가능성을 언급합니다.
     * 더 안전한 대안 스캐너가 제안되며, 더 많은 정보를 제공하는 링크가 제공됩니다.
     * DIY Book Scanner 커뮤니티가 이 주제에 관심이 있는 사람들에게 리소스로 언급됩니다.
"
"https://news.hada.io/topic?id=10964","HN에게 알림: ChatGPT 종료 날짜, 이제 2022년 1월로 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                HN에게 알림: ChatGPT 종료 날짜, 이제 2022년 1월로 변경

     * ChatGPT의 훈련 종료일이 2021년 9월에서 2022년 1월로 변경된 것을 발견했습니다.

        Hacker News 의견

     * AI 모델 ChatGPT의 훈련 종료 날짜는 이제 2022년 1월로, 그 이후의 사건이나 데이터에 대한 구체적인 지식이 없음.
     * 모델에게 그의 훈련 종료 날짜를 묻는 것은 그가 어떤 것에 대해 훈련받았는지 결정하는 믿을 만한 방법이 아님. 특정 시간 범위 내의 사건에 대해 묻는 것이 더 유용함.
     * 모델은 이제 Go 1.18에서 2022년 3월에 도입된 일반화를 사용하는 코드를 출력할 수 있음.
     * 모델은 2021년 5월에 열린 Miss Universe 2021 대회와 같이 훈련 종료 날짜까지의 사건에 대한 정확한 정보를 제공할 수 있음.
     * 그러나 훈련 종료 날짜 이후의 사건, 예를 들어 2021년 12월에 열린 Miss Universe 2021 대회에 대한 정보는 가지고 있지 않을 수 있음.
     * 일부 사용자들은 ChatGPT가 2021년 12월의 사건에 대한 정보를 제공할 수 있다는 것을 발견했지만, 이는 환영이나 오류 때문일 수 있음.
     * 모델이 최근 사건에 대한 지식은 어떻게 접근하느냐에 따라 다를 수 있으며, 일부 사용자들은 API를 통해 접근할 때 2023년 7월까지의 사건을 언급한다고 보고함.
     * 일부 사용자들은 2021년 12월 미국 토네이도에서 사망한 사람들의 수에 대한 질문에 답하는 것과 같은 작업에 모델이 유용하다고 발견함.
     * 그러나 다른 일부 사용자들은 고등학교 대수학 또는 Python 코딩 질문과 같은 작업에 대해 모델이 자주 부정확하거나 관련 없는 답변을 제공하기 때문에 그다지 유용하지 않다고 발견함.
     * 일부 사용자들은 특정 사람에 대한 정보와 같은 구체적인 정보를 제공하는 모델의 능력이 시간이 지남에 따라 감소했다는 것을 알아차림.
     * 모델은 훈련 종료 날짜 이후의 사건, 예를 들어 2022년 2월에 시작된 우크라이나의 군사 작전에 대한 정보를 가지고 있지 않음.
"
"https://news.hada.io/topic?id=10997","세상에서 가장 쉬운 Protobuf 라이브러리 of TypeScript","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                세상에서 가장 쉬운 Protobuf 라이브러리 of TypeScript

   Runtime validator 라이브러리 typia 에서 구글의 Protocol Buffer 지원 시작
     * Typia 유저들이 protobuf 에 대한 지원을 꾸준히 요청하여 개발하
     * Protobuf 스키마 정의 없이, 순수 TS 타입만으로 사용 가능
     * 단 한 줄의 코드만으로 protobuf encode/decode 시전
     * TS 타입 -> Protobuf 스키마 변환도 가능
"
"https://news.hada.io/topic?id=11013","온라인 Favicon 생성기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            온라인 Favicon 생성기

     * 이미지/로고 부터 Favicon 을 생성해주는 웹 어플리케이션
     * SVG, PNG, WEBP, JPEG, BMP, GIF, AVIF 등 포맷 지원
     * 4가지 포맷의 favicon 을 생성해서 묶음 다운로드 가능
          + 브라우저 16x16
          + 태스크바 숏컷 32x32
          + 애플터치 180x180
          + 워드프레스 512x512
"
"https://news.hada.io/topic?id=11001","밸브는 리눅스와 오픈소스 커뮤니티에 탁월한 업스트림 기여자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    밸브는 리눅스와 오픈소스 커뮤니티에 탁월한 업스트림 기여자

     * Steam Deck 및 SteamOS 개발로 알려진 Valve는 오픈소스 생태계에 중요한 기여를 하고 있다.
     * 이 회사의 노력은 Linux Foundation Europe의 오픈소스 서밋에서 강조되었다.
     * Valve는 오픈소스 컨설팅 회사 Igalia와 협력하여 다양한 Linux 생태계 개선 작업을 진행하고 있다.
     * Valve의 운영 체제인 SteamOS는 Arch Linux를 기반으로 하며, Valve가 개선을 위해 자금을 지원한 KDE Plasma 데스크톱 환경을 특징으로 한다.
     * Wine을 사용하는 Valve의 Steam Play / Proton은 Linux 게이머와 애호가들에게 매우 유익했으며, DXVK / VKD3D-Proton과 같은 관련 오픈소스 프로젝트와 함께 이를 실현하였다.
     * Valve는 또한 AMD 색상 관리 / HDR 작업을 진행하고 있으며, 이와 같은 영역뿐만 아니라 Steam Play 지원을 개선하기 위한 새로운 Linux 커널 기능 활성화에 Igalia 엔지니어들이 참여하고 있다.
     * Valve 엔지니어들은 Mesa OpenGL 및 Vulkan 드라이버와 커널 그래픽 드라이버 구성 요소에 수많은 개선을 가하였으며, 이는 Steam Deck을 위한 AMD 그래픽 드라이버뿐만 아니라 Zink OpenGL-on-Vulkan 및 기타 일반 인프라에도 이점을 제공하였다.
     * 이러한 기여는 게임 외에도 Linux 데스크톱 생태계에 매우 유익하였다.
     * Valve는 또한 Linux에서 대소문자 구분 없는 파일 시스템 지원 확장, 다양한 커널 기능, Gamescope Wayland 컴포지터, 변경 불가능한 소프트웨어 업데이트, Flatpak 등에 대해 작업하였다.
     * Igalia에 따르면, Valve의 정책 중 하나는 그들이 작업 중인 모든 것을 ""업스트림에 반영""하는 것으로, 이는 그들이 모든 개선 사항을 원래의 오픈소스 프로젝트에 기여한다는 것을 의미한다.
     * Alberto Garcia의 OSS EU 2023 프레젠테이션은 Valve / SteamOS의 모든 업스트림 기여에 대해 종합적으로 살펴본다.

        Hacker News 의견

     * Valve는 품질 높은 게임 제작과 게이머를 위한 플랫폼 제공에 대한 헌신으로 크게 칭찬받고 있다.
     * 이 회사는 Linux에서의 게임 지원 향상에 크게 기여하여, 게임이 이 플랫폼에서 플레이 가능할 가능성을 높였다.
     * Valve는 비전통적인 경영 스타일을 가능하게 하는 사적 회사로서의 지위를 가지고 있으며, 이는 긍정적인 측면으로 여겨진다.
     * Proton 프로젝트는 Steam이 사랑받는 플랫폼인 이유를 보여주는 예시로, 직접적인 이익 추구 없이 선택의 폭을 넓히고 호환성을 높인다.
     * Valve에게는 HL2와 CSGO와 같은 게임을 더 많이 제공하고 고품질의 네이티브 포트를 장려하기 위해 ""Native Linux Game Awards""를 도입하는 제안이 있다.
     * Linux는 그 유연성과 마음을 공유하는 능력으로 칭찬받고 있으며, 게임 개발자들이 더 나은 성능, 처리량, 그리고 낮은 지연 시간을 위해 Linux를 최적화하고 기여하도록 촉구하고 있다.
     * Steam Deck은 그 정신과 Valve가 커뮤니티에 기여하는 사실, 그리고 성공적인 제품이 작업을 촉진하는 것으로 인정받고 있다.
     * Steam Remote Play는 Linux에서 지연 없는 원격 플레이를 위한 좋은 대안으로 강조되고 있다.
     * Valve의 Linux에서 게임을 제공하는 데 대한 헌신은 처음에는 회의적으로 받아들여졌지만, 회사는 이 목표를 성공적으로 달성했다.
     * SteamOS와 Linux에 대한 프레젠테이션과 슬라이드에 대한 링크가 추가 정보를 위해 제공되었다.
"
"https://news.hada.io/topic?id=10907","어린이 계정에 대한 EU 데이터법 위반으로 TikTok이 €345M 벌금 부과받다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             어린이 계정에 대한 EU 데이터법 위반으로 TikTok이 €345M 벌금 부과받다

     * TikTok, 아이들의 계정과 관련된 EU 데이터 법 위반으로 아일랜드 데이터 보호 위원회로부터 €345m (£296m) 벌금 부과
     * 중국 소유의 비디오 앱, 일반 데이터 보호 규정(GDPR) 규칙을 여러 차례 위반한 것으로 밝혀져
     * 위반 사항에는 아동 사용자의 계정을 기본적으로 공개로 설정, 아동 사용자에게 명확한 정보를 제공하지 않음, 플랫폼에서 13세 미만의 위험을 적절히 고려하지 않음 등이 포함
     * ""가족 페어링"" 기능, 성인이 아동의 계정 설정을 제어할 수 있으나, 성인이 부모나 보호자인지 확인하지 않음
     * Duet 및 Stitch 기능, 사용자가 다른 사람들과 콘텐츠를 결합할 수 있게 하는 기능도 17세 미만의 사용자에게 기본적으로 활성화됨
     * 이러한 위반에도 불구하고, DPC는 TikTok의 사용자 연령 확인 방법에 대해 GDPR을 위반하지 않았다고 판단
     * 이 벌금은 4월에 영국 데이터 규제기관이 부모의 동의 없이 13세 미만의 140만 아동의 데이터를 불법적으로 처리한 것에 대해 £12.7m 벌금을 부과한 것에 이어짐
     * TikTok은 조사에서 제기된 문제를 해결했으며, 2021년부터 13세에서 15세까지의 모든 계정을 기본적으로 비공개로 설정했다고 밝혔음
     * TikTok은 결정과 벌금의 규모에 동의하지 않았으며, 조사가 시작되기 전에 비판받은 기능과 설정이 변경되었다고 주장
     * DPC는 결정의 일부 측면에서 유럽 데이터 보호 위원회에 의해 무효화되었으며, 이로 인해 ""다크 패턴""의 사용이 개인 데이터의 공정한 처리에 관한 GDPR 규정을 위반한 것으로 독일 규제기관의 제안된 판단이 포함되었음

        Hacker News 의견

     * TikTok, 아동 계정 관련 EU 데이터 법 위반으로 €345M 벌금 부과.
     * 플랫폼의 ""가족 연결"" 체계, 성인이 아동 계정 설정을 제어할 수 있게 하는 것, 부모나 보호자인지의 확인이 부족하다는 판단.
     * 일부 사용자들, TikTok 또는 다른 기술 회사가 성인과 아동 사용자 간의 관계를 어떻게 확인할 수 있을지 의문 제기.
     * TikTok의 라이브 스트림에 미성년자 사용자가 있음에 대한 우려, 플랫폼 규칙에 따르면 사용자는 18세 이상이고 팔로워가 1000명 이상이어야 라이브 스트림 가능.
     * 일부에게는 TikTok의 자체 규칙 집행 부족에 대한 인식을 감안할 때 판결이 적시적인 것으로 보임.
     * 13세에서 18세 사이의 사용자들이 스트리밍에서 제외되는 이유에 대한 의문 제기, 일부는 플랫폼의 성적 콘텐츠 금지가 충분한 통제 수단이어야 한다고 주장.
     * 일부 댓글 작성자들, EU 데이터 법이 유럽 회사에도 적용되기를 희망, 국제 회사만이 아님.
     * 벌금, TikTok의 연간 수익의 약 2.6% 또는 10일간의 운영에 해당하는 것으로 일부에게는 중요하게, 다른 일부에게는 부족하게 보임.
     * 추가 벌칙 제안, TikTok이 일정 기간 동안 특정 지역에서 운영하는 것을 금지하는 것 등.
     * 벌금 금액이 어디로 향할지에 대한 의문 제기.
     * 일부 사용자들, 벌금이 TikTok의 총 수익에 비해 작아 보일지라도 여전히 상당한 금액이라고 주장.
     * EU가 주요 유럽 플레이어 없이 아시아와 미국의 대형 소셜 미디어 회사를 효과적으로 규제할 수 있을지에 대한 회의론.
"
"https://news.hada.io/topic?id=11003","안드로이드 14, 스마트폰을 웹캠으로 사용 지원 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     안드로이드 14, 스마트폰을 웹캠으로 사용 지원 추가

     * Android 14, 스마트폰을 웹캠으로 사용할 수 있는 기능 도입, 이전에는 제3자 앱을 통해서만 가능했던 기능
     * 새로운 기능은 Zoom과 Google Meet 같은 비디오 회의 플랫폼의 인기 증가로 인한 웹캠에 대한 수요 증가에 대응
     * Android 장치를 웹캠으로 사용하려면 USB 환경설정에서 새로운 옵션인 USB 웹캠이 나타남. 이는 USB 모드를 UVC (USB Video Class)로 전환, Android 장치를 다른 장치가 인식하는 표준 USB 웹캠으로 전환
     * 그러나 Android 14에서의 웹캠 지원은 기본적으로 활성화되지 않음. 네 가지 요구사항 필요: Linux 커널 구성이 활성화되어야 하며, UVC 장치가 구성되어야 하고, USB HAL이 업데이트되어야 하며, 새로운 시스템 앱이 사전에 로드되어야 함
     * Linux 커널 구성 (CONFIG_USB_CONFIGFS_F_UVC)은 Android 장치가 UVC 기기로 마운트될 수 있도록 필요. Android 14로 업그레이드하는 많은 장치들이 이 구성을 활성화한 커널을 가질 것
     * “Webcam Service”라는 새로운 시스템 앱 (com.android.deviceaswebcam)이 Android 14에 포함. 이 앱은 카메라 프레임을 호스트 장치가 읽을 수 있는 /dev/video 노드로 전달하는 “DeviceAsWebcam” 서비스를 구현
     * Webcam Service 앱은 시스템에 의해 유지되도록 포그라운드 서비스를 시작. Camera2 API를 사용하고 720p (1280x720) 또는 1080p (1920x1080p) 해상도에서 스트리밍을 지원
     * 정확한 인코딩 방법, 비디오 매개변수, 호스트에 표시되는 이름은 장치 제조사가 configfs를 사용하여 UVC 기기를 설정하는 방식에 따라 다름. 장치는 Android가 설정에서 선택한 경우 UVC로 USB 모드를 전환할 수 있도록 USB HAL이 업데이트되어야 함
     * 새로운 기능은 요구사항을 충족하는 Android 14를 실행하는 모든 휴대폰을 어떤 PC와도 작동하는 표준 USB 웹캠으로 전환할 수 있으므로 중요한 발전

        Hacker News 의견

     * Android 14, 스마트폰을 웹캠으로 사용 지원
     * scrcpy 프로젝트, OBS에서 카메라를 통한 스트리밍을 위한 스크립트 제공으로 이 기능의 기존 해결책으로 언급
     * 사용자 중 일부는 vdo.ninja라는 프로젝트를 통해 잠금 상태에서 iPhone을 웹캠으로 사용, 브라우저에서 데스크탑 비디오와 오디오 공유 가능
     * 일부 사용자들, 웹캠에 대한 수요가 높았던 팬데믹 기간에 모든 것이 원격으로 전환되었을 때 이 기능이 다소 늦었다고 느낌
     * 한 사용자, Google 폰을 외부 디스플레이에 연결하여 미러링할 수 없는 문제와 문자 메시지 및 전화 백업에 접근하는 어려움 등으로 Android에 실망, 이러한 이유로 iPhone으로 전환
     * Camo 앱, 기본 계정은 무료로 wifi를 통한 카메라 보기를 지원하는 스마트폰을 웹캠으로 사용하는 것을 사용자에게 추천
     * 일부 사용자들, 이 기능이 수년 동안 사용 가능했다고 느낌, 어떻게 이것이 새로운 것인지 의문
     * 한 사용자, Android가 Apple과 차별화하기 위해 이 기능을 활용해야 한다고 제안, Apple이 그들의 생태계 외부에서 이런 종류의 기능을 지원하는 것을 보지 못함
     * 새로운 기능, Android 폰에 가치를 더하는 것으로 보임, 한 사용자는 6a 모델이 시장에서 최고의 가치를 가진 웹캠이라고 제안
     * 한 사용자, Android 폰을 대시캠으로 사용할 수 있는 기능을 원함
     * 한 사용자, 2009년에 Nokia N900을 사용하여 gstreamer로 이 기능이 가능했던 것을 회상, Android 기기에서도 이렇게 쉽게 할 수 있기를 바람
"
"https://news.hada.io/topic?id=10897","나는 Uber를 위해 Excel을 구축했지만 그들은 그것을 버렸다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  나는 Uber를 위해 Excel을 구축했지만 그들은 그것을 버렸다

     * 작가 Matt Basta가 Uber를 위한 도구를 개발한 경험을 공유, 이 도구는 Excel과 유사하며 회사의 데이터 과학자들이 직면한 특정 문제를 해결하기 위한 것이었다.
     * Uber의 데이터 과학자들은 여러 노트북을 사용하여 밤새 데이터 과학 모델을 실행하였는데, 이는 비효율적이었으며 데이터와 돈의 손실을 초래하였다.
     * Basta는 Uber의 ""Crystal Ball"" 팀에 합류하여 이 과정을 자동화하기 위한 ""R-Crusher""라는 도구를 개발하였다. 그는 프론트엔드 엔지니어로서 이 도구를 위한 사용자 인터페이스를 구축하는 것이었다.
     * 이 도구는 Uber의 내부 프론트엔드 프레임워크인 ""Bedrock""를 사용하여 몇 주 안에 완성되었다. 그 후 Basta는 이 도구에 사용자 중심의 기능을 추가하기 위해 7명의 프론트엔드 팀을 구성하였다.
     * 이 도구의 주요 목적은 중국에서의 Uber 운영을 지원하는 것이었다. 이 회사는 현지 택시 호출 서비스인 Didi와 경쟁하고 있었다. 이 도구는 중국에서 예상되는 승차 인원 데이터를 생성하고 운전자 인센티브를 결정하는 데 사용되었다.
     * 그러나 이 도구는 Uber China 팀이 사용하는 Excel 스프레드시트를 모방해야 하는 도전에 직면하였다. 이 스프레드시트는 복잡한 공식을 포함하고 있었으며 운전자 인센티브를 결정하는 데 사용되었다.
     * Basta는 Excel 공식을 읽고 실행할 수 있는 브라우저 기반의 스프레드시트 엔진을 구축하기로 결정하였다. 그는 이전 직장인 Box에서 개발한 도구인 ""Box Sums""의 프로토타입을 시작점으로 사용하였다.
     * Excel의 순환 참조 등 여러 기술적인 도전을 극복한 후, 이 도구는 성공적으로 Uber의 R-Crusher 프론트엔드인 Wesley에 통합되었다.
     * 그러나 도구가 출시된 직후, Uber China는 Didi에게 팔렸고, 이 도구는 더 이상 필요하지 않아 Wesley에서 제거되었다.
     * Basta는 이 경험에 대해 반성하며, 엔지니어가 작성하는 모든 코드는 결국 레거시 코드가 된다고 말한다. 그는 자신의 작업의 장기성에 집착하기보다는 비즈니스 가치를 창출하는 데 초점을 맞추는 것의 중요성을 강조한다.

        Hacker News 의견

     * Uber를 위한 브라우저 기반 스프레드시트 엔진의 창조에 대한 기사, 중국에서 예상되는 승차 고객 관련 데이터를 처리하기 위한 Excel과 유사한 방식
     * 저자는 중국에서 경제 및 산업 스파이의 만연성을 강조하며, 기술 산업에서의 자신의 경험을 통한 일화적 증거를 인용
     * 저자는 소프트웨어 엔지니어링에서 실용주의의 중요성을 강조하며, 코드는 ""애완동물이 아닌 소""처럼 취급되어 더 이상 유용하지 않을 때 폐기되어야 한다고 주장
     * Uber를 위해 작성된 코드의 소유권에 대한 논의가 있으며, 일부는 이것이 Uber의 재산인지, 저자의 이전 고용주인 Box의 재산인지 의문을 제기
     * 일부 댓글 작성자들은 JavaScript로 전체 스프레드시트 엔진을 구축하는 결정에 의문을 제기하며, Apache POI와 같은 기존 솔루션을 대신 사용했어야 했다고 제안
     * 저자가 코드를 Github에서 공개적으로 사용할 수 있게 한 결정이 칭찬받으며, 일부는 코드가 Uber에 의해 최종적으로 사용되지 않았더라도 카타르시스의 형태를 제공한다고 제안
     * 일부 댓글 작성자들은 Uber가 직면한 문제에 대한 대안적인 해결책을 제안하며, 모델이 출력하는 데이터에 Excel을 직접 연결하는 것과 같은 방법을 제안
     * 엔지니어의 역할에 대한 저자의 관점이 강조되며, ""아름다운 장신구""를 만드는 것보다 결과를 제공하는 것의 중요성에 초점을 맞춤
     * Uber의 내부 애플리케이션 시스템이 디자인과 효율성에 대해 칭찬받으며, 한 댓글 작성자는 30분 이내에 하위 도메인에서 Hello World 애플리케이션을 실행할 수 있었다고 주장
     * 기사는 Uber의 BI 팀이 직면한 도전에 대한 내부자의 관점을 제공하며, 인센티브에 소비된 상당한 자원과 Excel과 같은 기존 도구를 복제하려는 압력을 포함
"
"https://news.hada.io/topic?id=10896","B612 글꼴 패밀리글꼴 패밀리

     * B612 글꼴 가족에 대한 기사, 항공기 조종실 화면에서의 가독성을 위해 특별히 설계된 오픈 소스 글꼴
     * 2010년에 Airbus가 ENAC 및 툴루즈 III 대학과 협력하여 프로젝트를 시작, 조종실 화면에서의 정보 표시 개선 및 전반적인 조종실 일관성 최적화를 목표로 함
     * 프로젝트 시작 2년 후, Airbus는 Intactile DESIGN과 협력하여 B612라는 이름의 글꼴의 8가지 서체 변형을 만듦, Antoine de Saint-Exupéry의 ""어린 왕자""에서 상상된 소행성의 이름을 따서 명명
     * B612 글꼴은 모든 문자에서 최적의 가독성을 보장하기 위해 완전한 힌팅 과정을 거쳤음
     * 2017년, Airbus는 Polarsys 프로젝트 내에서 오픈 소스 라이선스(Eclipse Public License)로 글꼴을 게시하기로 합의, 이 프로젝트는 Eclipse 재단에서 주관하는 산업 중심의 프로젝트임
     * 2018년 12월 현재, B612 글꼴은 Google Fonts에서 오픈 소스 라이선스(OFL)로 사용 가능하며, 소스 코드는 Github에서 호스팅되고 있음
     * 글꼴은 Intactile DESIGN의 Nicolas Chauveau, Thomas Paillot, Jonathan Favre-Lamarine에 의해 설계되었으며, Jean‑Luc Vinot (ENAC)의 지원을 받았음. 초기 연구는 Jean‑Luc Vinot (DGAC/DSNA)와 Sylvie Athènes (툴루즈 III 대학)에 의해 수행되었음
     * B612 글꼴은 Airbus가 시작한 연구 프로젝트의 결과물이며, 항공 및 디자인 산업 간의 협력을 증명함

        Hacker News 의견

     * 조종실 사용을 위해 디자인된 B612 글꼴 가족은 가독성과 미적 매력에 대한 비판을 받았습니다.
     * 일부 사용자들은 사이트 헤더 이미지에 표시된 글꼴과 다르게 느껴졌으며, 특히 0을 통과하는 선이 없음을 지적했습니다.
     * Atkinson Hyperlegible 글꼴과의 비교가 이루어졌는데, 이 글꼴이 미적성과 가독성 사이에 더 나은 균형을 이루고 있다고 믿어집니다.
     * B612 글꼴의 디자인 목표가 강조되었으며, 이에는 저도트피치 화면에서 시각적 일관성을 유지하고 대문자로 된 긴 구절의 가독성을 극대화하는 것이 포함되었습니다.
     * 일부 사용자들은 B612 글꼴의 커닝(문자 간 간격)을 비판했으며, 이를 방해적이며 단어 경계 인식에 문제가 될 수 있다고 느꼈습니다.
     * 안전을 위한 고유 글리프 구별의 중요성이 강조되었으며, 일부 사용자들은 B612 글꼴이 이 부분에서 부족하다고 느꼈습니다.
     * 글꼴의 가독성에 대한 의문이 제기되었으며, 이에 대한 우월성을 뒷받침하는 증거는 발견되지 않았습니다. 글꼴이 저해상도 화면과 고정폭 사용에 최적화되었다는 제안이 있었습니다.
     * 한 사용자는 B612 글꼴이 코딩에 유용하다고 발견했으며, 특히 음악 시퀀서 구문에서 밑줄을 분리하는 데 특히 유용하다고 느꼈습니다.
     * 글꼴의 넓은 트래킹(문자 간 간격)에 대한 질문이 제기되었으며, 일부 사용자들은 이를 과도하다고 느꼈습니다.
     * 글꼴의 굵은 얼굴이 일반 무게에 비해 좁아 보이는 느낌을 받았다는 비판이 있었습니다.
     * 한 사용자는 유머러스하게 Toulouse III 대학의 역사에 대해 의문을 제기했는데, 이 곳에서 글꼴이 개발되었습니다.
"
"https://news.hada.io/topic?id=10931","Show GN: 히치카","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Show GN: 히치카

   AI 로 쉬운 사진 찍기, 편집, 차종 인식 등을 제공하는 자동차 커뮤니티입니다~

   귀여운 팬이 만들어주신 유튜브 홍보 영상도 있습니다
   https://www.youtube.com/watch?v=P_guRR4GwS8&t=403s
"
"https://news.hada.io/topic?id=10940","파업하는 미국 자동차 노동자들, CEO들의 급여 증가율과 동일한 40%의 급여 인상을 원하다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          파업하는 미국 자동차 노동자들, CEO들의 급여 증가율과 동일한 40%의 급여 인상을 원하다

     * 미국 자동차 노동조합원(United Auto Workers) 수천 명이 디트로이트의 세 대형 자동차 제조사인 Ford, GM, Stellantis와 합의에 실패하고 파업에 돌입
     * 이 노동조합은 CEO 연봉이 지난 10년 동안 40% 증가한 것을 반영하여 앞으로 4년 동안 시간당 임금을 40% 인상하는 것을 제안
     * 미국 자동차 제조 라인에서 일하는 평균 노동자는 시간당 약 28달러를 받으며, 최고 수준의 노동자는 시간당 평균 33달러, 하위 수준의 노동자는 최대 시간당 17달러를 받음
     * Ford, Stellantis, GM의 CEO 연봉은 2100만 달러에서 거의 2900만 달러에 달함
     * 노동조합은 또한 보상(Compensation) 티어를 제거하고 생활비(Cost-of-living) 조정을 복원, 주 32시간 근무, 기존 연금으로의 전환, 퇴직자 및 육아휴직 혜택 개선 등을 제안
     * 이번 파업은 전국의 세 곳의 시설에서 근무하는 약 12,700명의 노동자에게 영향을 미칠 것이며, 생산 라인에서 추가적인 중단을 초래할 가능성이 있음
     * 자동차 산업은 경영진의 연봉이 일반 노동자의 임금 증가율보다 빠르게 증가하는 더 넓은 추세의 한 예
     * 2021년 미국 최고의 기업에서 평균 CEO는 2780만 달러를 받았으며, 이는 일반 노동자의 399배에 해당
     * 1978년부터 2021년까지 CEO 연봉은 인플레이션을 고려하면 1,460% 증가했으나, 일반 노동자의 경우에는 단지 18.1%에 불과

   다른기사지만 Ford and GM workers already make $20 more per hour than Tesla employees. Their union's demands would double that gap. 를 보면
   임금과 복지를 합친 인건비 기준으로 보면 포드/GM/스텔란티스는 시간당 66달러인데, 테슬라는 45달러 수준이라고 하네요.
   여기서 아마 UAW의 주장대로 인상을 하면 인건비 격차가 더 벌어지게 됩니다.
   정작 3사의 마진율이 높지 않아서, 테슬라 입장에서는 파업이 오래가거나, 협상이 타결되어 오르거나 모두 이득을 얻게 되겠네요.

   참 어려운 일입니다.

        Hacker News 의견

     * CEO와 근로자 간 임금 격차 증가에 대한 기사, 1978년 이후 CEO 임금이 1,460% 증가한 반면 일반 근로자는 18.1%만 증가
     * CEO 공급이 교육 및 MBA 프로그램 확대에도 불구하고 수요를 따라가지 못하는 이유에 대한 의문, 이로 인한 임금 상승
     * Mondragon Corporation은 최저 임금 대비 경영진의 임금 비율을 사전에 합의하는 회사로 언급, 9:1로 제한, 이 회사는 높은 생존률과 생산성으로 알려져 있음
     * 미국 자동차 노조와 Big Three 자동차 제조사 간 계약 만료, 노동 시장의 긴장, 높은 인플레이션, 전기차 시장으로의 전환으로 인한 파업 가능성
     * 2008년 미국 자동차 제조사 파산 시 노조가 내린 양보가 복구되지 않아, 근로자들이 40%의 임금 인상을 요구하는 요인일 수 있음
     * 4년 동안 40% 증가는 협상 가치를 고려하면 비합리적이지 않다는 의견, 최종 증가율은 4년 동안 20-30% 사이일 수 있음
     * CEO가 항상 회사에서 가장 높은 급여를 받아야 하는지에 대한 논쟁, 이에 반하는 예시 제시
     * CEO 임금이 중위수 또는 최저 임금 근로자의 임금의 배수가 되어야 임금 격차를 해결할 수 있다는 의견 제시
     * 리더십 스킬이 부문 간에 이전 가능한지에 대한 논의, 이로 인해 더 많은 회사들이 경쟁하여 CEO 임금이 높아질 수 있음
     * 기사와 댓글에서는 더 넓은 노동 운동에 대해 언급, 다른 회사에서의 파업과 퇴장 사례를 참조
"
"https://news.hada.io/topic?id=10973","ElectricSQL, 로컬-퍼스트 웹/앱을 위한 Postgres에서 SQLite로의 액티브-액티브 동기화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ElectricSQL, 로컬-퍼스트 웹/앱을 위한 Postgres에서 SQLite로의 액티브-액티브 동기화

     * 클라우드의 Postgres와 로컬 SQLite 기반으로 반응형(Reactive), 실시간(Realtime), 로컬 퍼스트 앱을 개발하는 플랫폼
     * Local-First
          + 앱의 코드는 SQLite로 된 임베디드 DB랑 직접 통신하고, 데이터가 백그라운드에서 클라우드 Postgres 와 active-active 복제 방식으로 동적 동기화
          + 이를 통해서 멀티 유저 협업 및 Conflict-Free 가 가능하게 해줌
     * ElectricSQL 을 통해서 로컬 Postgres를 그대로 이용
     * 로컬 우선 데이터 접근을 활용하여 앱을 즉시 반응 및 일관되게 빠르게 만드는 것을 목표로 설계
     * 운영의 단순성을 제공하며, 간단하고 확장 가능한 복제 프로토콜에 표준화함으로써 백엔드 서비스의 다양성과 작업량을 줄임
     * 기존의 Postgres 기반 시스템과 호환되며 기존의 데이터 모델과 함께 작동

   제가 서버 없이도 동작하는 것을 선호해서 클라이언트 위주의 앱을 만들었다가 뒤늦게 서버 연동이 필요해지면서, 액티브-액티브 동기화로 전환했던 케이스였습니다.

   첫번째 서비스는 OT 개념을 도입해서 수동으로 구현했고, 두번째는 외부 솔루션을 찾다가 Couchbase를 선택했었는데요 (그때 PouchDB나 Realm 도 조사)...

   결론은 왠만하면 하지 않는게 좋습니다. 데이터 관리가 안 됩니다 (Couchbase DB가 특이해서인 것도 있긴 하지만)

        Hacker News 의견

     * ElectricSQL은 로컬 우선 앱을 위해 Postgres와 SQLite 사이의 액티브-액티브 동기화를 가능하게 하는 새로운 기술입니다.
     * 이 기술은 클라이언트 측 SQLite, 오픈 소스 CRDT/동기화 계층, 그리고 Postgres 사이의 연결을 관리하는 독특한 접근 방식으로 칭찬받았습니다.
     * ElectricSQL은 모든 데이터와 사용자 계정의 중앙 진실의 원천으로 Postgres 데이터베이스가 작동하게 하며, 각 사용자의 개인 콘텐츠는 자신의 SQLite 데이터베이스에 격리되어 동기화될 수 있습니다.
     * ElectricSQL이 실제 또는 큐레이션된 데이터의 일부를 사용하여 빠른 통합 테스트를 작성하는 CI 워크플로우에서 사용될 가능성이 있습니다.
     * ElectricSQL은 로컬 우선 앱의 부흥을 향한 중요한 한 걸음으로 간주되지만, 이 분야에서 극복해야 할 많은 도전이 여전히 있습니다.
     * ElectricSQL을 사용하는 애플리케이션의 일부 상태에 대해 종단간 암호화를 사용할 가능성에 대한 질문이 제기되었습니다.
     * 일부 사용자들은 CRDT와 함께 상태가 어떻게 되는지 이해하는 복잡성에 대해 우려를 표현하였으며, 이것이 어떻게 사용자에게 문제를 일으킬 수 있는지에 대해 말하였습니다.
     * ElectricSQL의 상업 모델에 대한 질문이 있으며, 이것이 전체 클라우드 서비스가 될 것인지 아니면 Elixir 컴포넌트만 호스팅할 것인지에 대해 의문이 있습니다.
     * 사용자들은 루트 데이터베이스로 다시 병합되는 변경 사항에 대한 검증 또는 인증에 대해 궁금해하며, ElectricSQL이 악의적인 클라이언트가 임의의 데이터 스트림을 루트 데이터베이스로 동기화하도록 보내는 가능성에 어떻게 대응하는지에 대해 궁금해합니다.
     * ElectricSQL은 PouchDB와 CouchDB와 같은 다른 솔루션과 비교되었으며, 사용자들은 새로운 기술을 시도해 보는 데 관심을 표현하였습니다.
     * ElectricSQL의 출시는 일반적으로 잘 받아들여졌으며, 많은 사용자들이 이 기술이 로컬 우선 소프트웨어에 대한 잠재력에 대해 흥분을 표현하였습니다.
"
"https://news.hada.io/topic?id=10972","FAA, Zipline에 드론을 이용한 상업용 패키지 배송 허가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  FAA, Zipline에 드론을 이용한 상업용 패키지 배송 허가

     * 드론 배송회사인 Zipline이 운영자의 시야 범위를 벗어나 비행가능한 드론을 이용하여 상업용 패키지를 배송할 수 있게 승인
     * 솔트레이크 시티와 아칸소주 벤턴빌 주변에 한정
     * Sparrow 드론을 사용해서 낙하산으로 페이로드를 릴리즈
          + 80-120m와 60mph로 비행하며, 최대 페이로드는 1.8kg이며, 최대 배송 거리는 50마일
          + 한 번의 충전으로 190마일을 비행하고, 25-30m에서 5m 지름의 착륙 구역으로 페이로드를 낙하산으로 떨어뜨릴 수 있음
     * FAA의 장기 목표는 드론 전용의 별도 영공을 따로 확보하는 것이 아니라 드론을 국가 영공 시스템에 안전하게 통합하는 것

        Hacker News 의견

     * 드론 배송 회사인 Zipline이 FAA로부터 상업적 패키지 배송을 위한 허가를 받았다.
     * Mark Rober의 비디오에서 Zipline의 운영 개요를 제공한다.
     * 회사의 Sparrow (""Platform 1"") 드론은 80-120m와 60mph로 비행하며, 최대 페이로드는 1.8kg이며, 최대 배송 거리는 50마일이다.
     * 드론은 한 번의 충전으로 190마일을 비행하고, 25-30m에서 5m 지름의 착륙 구역으로 페이로드를 낙하산으로 떨어뜨릴 수 있다.
     * 상업용 드론 운영이 애호가 드론 운영에 제한을 두게 될 수 있다는 추측과 함께, 항공 공간 규제의 미래에 대한 우려가 있다.
     * Uber와 Lyft와 같은 비슷한 회사들이 직면한 높은 비용과 도전을 고려할 때, 드론 물류의 수익성에 대해 의문을 제기하는 사람들이 있다.
     * 증가하는 드론 및 항공 차량 사용으로 인한 잠재적인 시각적 및 소음 오염에 대한 우려를 표현하는 사람들이 있다.
     * 드론 배송의 잠재력에 대해 흥분하는 사람들이 있으며, 이를 별 Wars 영화의 장면과 비교하며 드론이 자동차에 비해 효율적임을 강조한다.
     * 아일랜드 회사인 Manna는 몇 년 동안 두 아일랜드 교외에서 드론 배송을 운영해 왔으며, 주목해야 할 회사로 제안되었다.
     * FAA는 Zipline에게 Salt Lake City와 Bentonville에서 상업적 패키지를 배송할 수 있는 권한을 부여했는데, 이러한 위치가 선택된 이유에 대한 질문을 제기하게 되었다.
     * 미국에서 드론 배송의 도래에 대한 흥분이 있으며, 법적 장애를 극복했다는 것에 대한 놀라움이 있다.
     * 한 댓글 작성자는 우편 배송의 미래에 대해 추측하며, 편지함이 항공 배송을 위한 ""패키지 굴뚝""으로 대체될지 궁금해한다.
"
"https://news.hada.io/topic?id=10992","NFS > FUSE: 우리가 자체 NFS 서버를 Rust로 개발한 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                NFS > FUSE: 우리가 자체 NFS 서버를 Rust로 개발한 이유

     * FUSE는 파일시스템 드라이버를 커널 모듈 필요없이 작성할 수 있게 해줌
          + NTFS, SFTP, S3 같은 다양한 파일시스템 클라이언트가 사용
          + WikipediaFS 처럼 실제 파일시스템이 아닌 것도 만들 수 있음
     * 하지만 FUSE는 개발하기에 불편함
          + 2개의 API 중에서 선택: Low-Level 과 High-Level
          + 호환되지 않는 2개의 API 버전: libfuse2 와 libfuse3
          + 조금씩 계속 변경되는 API들 (FUSE_USE_VERSION)
          + Mac 과 Windows 에서는 네이티브가 아니라 MacFuse, WinFuse 같은 써드파티 드라이버를 설치해야만 함
     * 우리(XetHub)는 이미지 데이터셋의 다양한 버전을 S3 명령어 쓸 필요없이 개인 노트북에서 편하게 접근하게 만들고 싶었음
     * ""진정한 크로스 플랫폼인 유저스페이스 파일 시스템을 만들수 있을까?"" 질문에서 NFSv3 에 도달

NFS

     * NFSv3는 20년이 된 네트워크 파일 시스템 프로토콜로, 매우 간단하고 보편적이어서 거의 모든 운영 체제에서 기본으로 구현됨
     * 아름답고 간단한 디자인 원칙
          + 서버는 완전히 Stateless
          + NFS 서버는 멍청하고 NFS 클라이언트는 스마트함
          + 간단한 캐시 일관성 규칙(서버는 캐시 정책을 정의하지 않음. 클라언트는 원하는 만큼 알아서)
          + NFS 클라이언트는 자신이 네트워크를 넘어서 대화하고 있다는 것을 알고 있음
          + 실제로 매우 우수한 성능
     * 요약하자면, FUSE 대신 로컬 호스트 NFS를 사용하여 사용자 모드 파일 시스템을 구현하면 성능과 복원력(resiliency)을 더 쉽게 얻을 수 있다는 것
     * 서버 프로토콜만 한번 구현하면, 기존의 캐싱 및 20년 간 강화된 기능을 그대로 활용 가능

XetHub 에서 NFS를 사용하는 방법

     * 네이티브 크로스 플랫폼, 사용자 모드 파일시스템 구현체를 개발
     * 커널 드라이버 없이 대규모 데이터셋을 사용자 머신에 마운트 가능
          + 660GB Llama 2 모델을 마운트 하거나, DuckDB 쿼리로 대규모 Parquet 파일을 분석 하는 등
     * Linux, Mac 및 Windows Pro 버전 이상에서 지원(Windows Home은 동작하지 않음)
     * Rust 로 구현한 NFS 서버인 nfsserve 는 GitHub에 공개
     * 읽기 성능은 꽤 좋고, 쓰기는 작동하지만 아직 최적화가 필요함

   제목과는 다르게 정작 Rust로 작성한 이유는 안나와있네요

   원글의 초점은 우리만의 NFS서버를 개발한 이유...... 인데, Rust 같은 인기 키워드를 빼먹을 수 없어서 제목에 쓴것같네요 :-)

   원글이 rust로 작성한 이유가 아니라 fuse대신 nfs를 선택했나하는 내용이네요.

   앗 그러고보니 그냥 Rust라서 빠르다는 얘기말고는 없었군요. 아무 생각없이 요약을 했네요.
"
"https://news.hada.io/topic?id=10977","Ruby 3.3의 YJIT는 Shopify 프로덕션 코드를 15% 빠르게 동작시킴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Ruby 3.3의 YJIT는 Shopify 프로덕션 코드를 15% 빠르게 동작시킴

     * Shopify는 YJIT를 웹스토어의 첫 화면 같은 중요 서비스에 적용하고 있음
     * 3.2에 포함된 YJIT는 이 Storefront Renderer를 평균 10% 정도 속도 향상시켜줬음
     * 3.3-preview2 에 들어있는 YJIT는 더 빨라서 3.2 YJIT 대비 평균 13% 빠름
     * Ruby 3.3 YJIT 는 Ruby 3.3 인터프리터보다 15% 빠름

왜 빠를까

     * 새로운 Register Allocator
     * 더 많은 코드가 이제 JIT 컴파일됨

Ruby 3.3.0 릴리즈를 향해

     * 메모리 오버헤드 감소
     * 메소드 호출 최적화

결론

     * Ruby 3.2 YJIT 는 Shopify를 비롯한 여러 회사들의 프로덕션 서비스 워크로드를 최적화 해줬음
     * YJIT 를 프로덕션에서 사용하는 것을 권장함
     * Ruby 3.3이 릴리즈 되면 여러분의 어플리케이션이 더욱 빠르게 동작하게 될 것

   Ruby 3.2.0은 다른 차원에서 왔다
   Ruby 3.2.0 릴리즈
"
"https://news.hada.io/topic?id=10943","현재 AWS IPv4 자산의 가치는 6조원($4.5b)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     현재 AWS IPv4 자산의 가치는 6조원($4.5b)

     * 2700만개를 추가해서 현재 1억 2800만개의 IPv4 주소를 보유중
     * IPv4 주소 하나당 평균가격이 $35 라고 치면 $4.5B
     * 2024년부터 고객에게 IPv4 비용을 부과할 예정(시간당 $0.005, 연간 $43.80)
     * 현재 AWS가 공개적으로 할당하여 사용중인 주소는 7300만개로 약 57%를 사용중(정확한 수치는 아님)
     * 2020년과 비교해보면
          + 그 당시 1억개에 개당 $25 여서 $2.5B 정도였음
          + 약 5300만개를 사용중이어서 4700만개가 사용 가능(53%만 사용중이었음)
     * 주소는 어느 부분에서 늘어났을까 ?
          + 2개의 새로운 /11 할당. 13.32.0.0/11 및 13.192.0.0/11 이 13/8 블록 전체는 이전에 Xerox가 소유했던 것
          + 2개의 새로운 /12 할당. 13.224.0.0/12. 13/8 블록을 계속 사들이는 중인듯
          + 16.0.0.0/8 블록에서 더 많은 통합이 이뤄지는 중. 예전에 /16을 여러개 보유했는데 3개의 /12로 통합(16.16.0.0/12, 16.48.0.0/12 및 16.112.0.0/12)
          + 새로운 63.176.0.0/12

AWS는 IPv4 주소에 대한 요금을 부과하기 시작

     * 올해 8월 AWS는 2024년부터 고객에게 IPv4 주소에 대한 요금을 부과할 것이라고 발표
     * ""2024년 2월 1일부터 서비스 연결 여부에 관계없이 모든 공용 IPv4 주소에 대해 IP당 시간당 $0.005의 요금이 부과""
     * 이는 IPv4 주소당 연간 총 $43.80
     * AWS는 이 새로운 IPv4 요금으로 얼마나 많은 돈을 벌 수 있을까?
          + 공개된 IPv4 JSON에 있는 10%만 대상으로 한다면 730만개 x 43.80 으로 연간 $320m
          + 25% 사용량으로 본다면 $800m 에 달하는 큰 금액
          + 31% 만 넘어도 $1B(1.3조원)

   아마존이 보유한 IP주소 1억개는 약 2.5조원가치
   AWS, 2024년 2월 1일부터 공인 IPv4 주소에 대해서 비용 부과 시작
"
"https://news.hada.io/topic?id=10998","연구에 따르면, 생각보다 납 중독이 더 많은 사망과 IQ 손실을 초래","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 연구에 따르면, 생각보다 납 중독이 더 많은 사망과 IQ 손실을 초래

     * 연구 결과, 이전에 생각했던 것보다 납 중독이 전 세계 건강에 훨씬 큰 영향을 미치며, 연간 500만 건 이상의 사망을 초래하고 대기 오염과 비슷한 위협을 끼친다는 것을 밝혔습니다.
     * 이 연구는 독성 금속에 노출되면 개발 도상국의 어린이들이 평균적으로 거의 6점의 IQ를 잃게 된다고 제안합니다.
     * 납 오염은 심장 질환과 어린이들의 뇌 발달에 관련된 심각한 건강 문제와 연관되어 있습니다.
     * 납 함유 휘발유의 전 세계적인 금지에도 불구하고, 사람들은 음식, 토양, 조리기구, 비료, 화장품, 납산 자동차 배터리 등 다른 출처를 통해 이 강력한 신경 독소에 노출될 수 있습니다.
     * 세계은행의 두 경제학자가 저술하고 Lancet Planetary Health 저널에 게재된 이 연구는, 납 노출이 심장 질환 사망과 어린이 IQ 손실에 미치는 영향을 부유한 국가와 개발 도상국에서 처음으로 평가한 것입니다.
     * 이 모델은 2019년에 납 노출로 인해 550만명의 성인이 심장 질환으로 사망했으며, 그 중 90%는 저소득 및 중산층 국가에서 발생했다고 추정합니다.
     * 연구는 또한 2019년에 전 세계적으로 납 중독으로 인해 5세 미만의 어린이들이 누적하여 7억 6500만 IQ 점수를 잃었으며, 이 중 95%는 개발 도상국에서 발생했다고 추정했습니다.
     * 2019년 납 노출의 경제적 비용은 6조 달러로 추정되었으며, 이는 전 세계 총생산(GDP)의 7%에 해당합니다.
     * 이 연구는 2019년 Global Burden of Disease 연구에서 얻은 183개 국가의 혈중 납 수준 추정치를 사용했습니다.
     * 이 연구는 또한 동맥 경화와 같이 납이 심장에 미치는 여러 다른 방법을 살펴보았고, 이로 인해 더 높은 숫자가 나왔습니다.
     * 이 연구는 ""깨어나야 할 시기""이며, 납 노출이 전 세계 건강에 미치는 영향을 이해하는 데 중요한 기여로 간주됩니다.

        Hacker News 의견

     * 유아기 아동의 납 농도와 범죄율 사이의 상관관계를 제안하는 납-범죄 가설 논의
     * 미국에서는 납을 수도관에 사용하는 것이 불법임에도 불구하고, 온수관에서는 허용되는 허점 지적
     * 충격적인 통계 공유: 심혈관 질환으로 인한 사망의 약 30%가 납에 의해 발생, 주로 저/중소 소득 국가에서
     * 가정용품으로 인한 납 중독은 해결 가능하다는 긍정적인 주장
     * 납 노출과 일치하는 증상을 가진 댓글 작성자에게 저렴한 비침습적 검사에 대한 의문 제기
     * 사격장을 자주 방문하다 납 중독에 걸린 개인에 대한 일화 공유
     * 도시의 과도한 흥분과 적대감이 납 규제 위반으로 인해 경계성 정신병이나 성격 장애를 유발할 수 있다는 제안
     * 댓글 작성자가 현재의 납 중독에 해당하는 것에 대해 궁금해하며, 마이크로 플라스틱이나 탄소를 제안
     * 항공 연료에는 여전히 납이 허용되어 있어, 일상적으로 사람들에게 영향을 미칠 수 있다는 지적
     * 납이 혈중에 있을 때 심장 질환과의 관계에 대한 메커니즘에 대한 의문 제기, 정보는 설문조사에 기반
     * 전자 취미가들에게의 위험에 대한 질문, 이 분야에서의 잠재적인 납 노출에 대한 우려를 시사
"
"https://news.hada.io/topic?id=10904","선형 코드가 더 읽기 쉽다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             선형 코드가 더 읽기 쉽다

     * 구글 테스팅 블로그에서 제시된 관점에 도전하며 선형 코드의 가독성에 대해 논의하는 기사
     * 저자는 추상화 수준을 분리한 함수가 더 가독성이 좋다는 구글 테스팅 블로그의 주장에 동의하지 않음
     * 저자는 위에서 아래로 읽히는 선형 코드가 다양한 추상화 수준 사이를 왔다갔다하는 코드보다 더 직관적이고 이해하기 쉽다고 주장
     * 저자는 피자 굽는 함수의 예를 들어 그의 주장을 설명하며, 피자를 굽는 함수가 오븐을 데우는지, 아니면 오븐을 미리 예열해야 하는지 의문을 제기
     * 저자는 코드의 가독성이 추상화 수준을 분리하는 구조 때문이 아니라, 코드의 각 부분이 무엇을 하는지 명확하게 설명하기 때문이라고 제안
     * 저자는 선형 코드에서 작은 함수를 추출하는 것을 반대하며, 특히 한 번만 사용되는 경우에는 이점이 선형성의 손실을 상쇄하지 못한다고 결론
     * 저자는 또한 피자 굽는 함수와 관련된 잠재적 문제를 지적하며, 피자를 만들 때마다 새로운 오븐이 생성되는 이유가 무엇인지 의문을 제기하며, 이는 실제 코드에서 성능 문제를 초래할 수 있음
     * 저자는 오븐이 함수의 매개변수가 되어야 하며, 그 제공은 호출자의 책임이어야 하며, 함수는 피자가 아닌 박스를 반환해야 한다고 제안

        Hacker News 의견

     * 선형 코드와 모듈식 코드의 가독성은 스타일 문제이며, 좋은 판단력과 감각이 필요합니다.
     * 과도한 추상화는 코드의 조기 결합을 초래할 수 있습니다.
     * 작업 단위를 추상화하기 위해 함수를 추출하는 것은 알고리즘을 정리할 수 있지만 신중하게 사용해야 합니다.
     * 제공된 예제 코드는 단순하며 확장성이 떨어집니다. 재사용성과 단위 테스트 가능성도 고려해야 합니다.
     * 과도한 리팩토링은 코드의 다른 부분을 이동해야 하는 필요성으로 인해 유지 관리가 더 어려워질 수 있습니다.
     * 선형 코드는 실행 순서를 따르므로 읽기 쉽지만, 대규모 코드베이스에서는 확장성이 떨어집니다.
     * 깊게 중첩된 호출 스택을 가진 간결한 함수는 대규모 코드베이스에서 악몽이 될 수 있습니다.
     * 좋은 선형 코드는 더 읽기 쉽지만, 유지 관리와 테스트가 더 어렵습니다.
     * 함수를 가능한 한 작게 유지하고 단일 목적에 가깝게 유지하는 것이 좋은 관행입니다.
     * 코드의 구조는 비즈니스 사용 사례에 맞게 구성되어야 이동하기 쉽습니다.
     * 선형 코드와 모듈식 코드 모두 선형적으로 읽히지만, 함수의 순서는 가독성에 영향을 줄 수 있습니다.
     * 실제 코드는 종종 더 복잡하며, 독자가 세부 사항에 헤매지 않도록 상위 수준의 개요가 필요합니다.
"
"https://news.hada.io/topic?id=10941","좋은 README 작성하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           좋은 README 작성하는 방법

     * README 파일 존재 이유
          + README는 코드 프로젝트 첫인상을 결정짓는 중요한 콘텐츠
          + 프로젝트 얼굴이자 사용 설명서
          + 코드 존재 이유와 코드가 해결하는 문제, 코드의 중요성 이해 도움
               o 프로젝트 목적, 설치 방법, 사용 방법 설명
               o 프로젝트에 참여하는 모든 이에게 중요한 정보 제공, 코드 가치 높임
          + 훌륭한 README는 프로젝트 성공에도 큰 영향 미칠 수 있음
          + 코드는 문제 해결 위해 존재, 그 문제 중요성과 해결 방법을 README로 명확히 전달
     * README가 없는 프로젝트
          + 안내판이 없는 미로
          + 프로젝트에 관심이 떨어지고, 유용한 프로젝트가 널리 알려지지 못할 수 있음
          + 개발자가 프로젝트 유지보수, 개선하는 데 어려움
               o 기존 코드 구조나 사용방법 파악하는 데 시간 많이 걸림
     * README 작성 요건
          + 항상 최신 정보를 담아야 함
               o 프로젝트에 변경 사항이 생기면 README도 함께 업데이트해야 함
          + README는 간결하되, 필요한 모든 정보 제공해야 함
          + 내용이 길어지면 목적별로 새로운 경로 생성해 파일 저장, 하이퍼링크 추가
     * README에 담을 내용
       1)프로젝트의 주요 기능과 목적
       2)설치 방법: 단계별 설치 가이드, 설치에 필요한 도구와 라이브러리, 환경 설정 안내
       3)문제 해결 방법: 자주 발생하는 문제와 해결 방법
       4)지원 창구: 프로젝트 주요 유지 관리자나 커뮤니케이션 담당자와 소통 방법
       5)라이선스 정보: 라이선스는 코드 사용, 수정, 배포 관련 권리와 제한 명시
       6)변경 로그: 프로젝트의 주요 업데이트 내역
       7)사용 예시
       8)추가 학습 자료와 문서 링크
       9)사전 요구사항: 사용자가 프로젝트 설치 실행할 환경 쉽게 구성하도록 지원 목적
"
"https://news.hada.io/topic?id=10999","Show GN: 업무에 집중해야 하는 개발자를 위한 뉴스레터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Show GN: 업무에 집중해야 하는 개발자를 위한 뉴스레터

     * IT 분야에 관련된 개발, 스타트업, 프로덕트 소개하는 뉴스레터
     * 개발자/디자이너/기획자 상관없이 볼 수 있는 IT 분야 뉴스레터
     * 분석도 함께 제공되므로 조금 더 딥다이브하게 볼 수 있음.
     * 매주 월요일 오전 10시 발송 (추후 시간 조정 가능)
     * 토론 등 다양한 기능 추가 예정
"
"https://news.hada.io/topic?id=10959","AWS EC2 M2 Pro Mac 인스턴스(mac2-m2pro) 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 AWS EC2 M2 Pro Mac 인스턴스(mac2-m2pro) 출시

     * Apple Silicon M2 Pro Mac Mini 기반
     * 기존 M1 Mac 인스턴스(mac2.metal)보다 최대 35% 더 빠른 성능을 제공
     * 12코어 CPU, 19코어 GPU, 32GiB 메모리, 16코어 Apple Neural Engine을 탑재
     * 미국 서부(오레곤) 및 미국 동부(오하이오) 리전에서 사용 가능
     * 1달 온디맨드 가격은 약 $1,138

   이건 아마 iOS 앱 빌드나 테스트용일거에요 일상적인 작업에 쓰는 건 아닙니다

   어마어마한 녀석이 나와버렸군요;;; Use case는 뭘까요?

   가격이 후덜덜 하군여 몇달 유지하면 Mac 장비 살 것 같은데..
"
"https://news.hada.io/topic?id=10939","2002년 Lotus-Notes의 NSA 백도어 키","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      2002년 Lotus-Notes의 NSA 백도어 키

     * 미국 암호화 수출 규제가 해제되기 전에 포함된 Lotus Notes의 백도어 키에 대한 기사
     * 이 백도어 기능은 차등 암호화로 알려져 있으며, 이는 NSA의 공개 키를 위해 24비트가 암호화된 경우 64비트 암호의 수출을 허용했다.
     * 그런 다음 NSA는 평문을 얻기 위해 남은 40비트를 무차별 공격할 필요가 있었으며, 다른 모든 사람들은 64비트 키 공간을 가지게 됐다.
     * 저자는 NSA 공개 키를 찾기 위해 애플리케이션을 역설계하려고 시도했다.
     * NSA 공개 키는 조직 이름이 ""MiniTruth""이고, 일반 이름이 ""Big Brother""로, 이는 조지 오웰의 ""1984""를 참조한 것으로 밝혀졌다.
     * 저자는 디버거에서 원시 공개 키 모듈러스를 제공하며, 이는 리틀 엔디언 형식으로 판명되었다.
     * 모듈러스는 760비트이며, PGP 키로서 형식화된 공개 키는 기사에서 제공된다.
     * 저자는 또한 pgpacket 명령의 출력을 제공하며, 이는 키의 내용에 대한 정보를 제공한다.
     * 이 기사는 Lotus Notes에서 사용된 암호화와 NSA의 백도어 접근에 대한 독특한 통찰력을 제공한다.
"
"https://news.hada.io/topic?id=11011","'프러스트레이션 루프'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              '프러스트레이션 루프'

     * 저자 허먼은 자신의 무료 플랫폼 'Bear'에서 스팸메일 발송자들을 상대하고 있다. 이 플랫폼은 백링크 농장, 신용카드 피싱, 불법 약물 판매자, 온라인 카지노 광고주, 암호화폐 홍보자들의 표적이다.
     * 이러한 스팸메일 발송자들은 봇이 아니라, SEO 순위를 높이기 위해 웹 전체에 콘텐츠를 제출할 수 있는 스팸 농장이다.
     * 이에 대응하기 위해 허먼은 스팸 게시물이 넓은 인터넷에 노출되지 않도록 검토가 완료될 때까지 모든 검토되지 않은 블로그에 ""no-index""와 ""no-follow"" 태그를 부여하는 메커니즘을 구현하였다.
     * 허먼은 워드프레스의 스팸 감지 도구인 Akismet를 사용하여 스팸을 감지한다. 그는 GPT4를 사용하여 자체 스팸 감지 시스템을 개발하려고 시도했지만, Akismet가 더 정확하고 비용 효율적이라는 것을 발견하였다.
     * 강력한 스팸 감지에도 불구하고 일부 스팸메일 발송자들은 합법적인 블로그로 위장하여 규제가 덜한 영역에 스팸을 게시하는 방법을 찾았다.
     * 특정 IP 주소에서의 게시물 차단은 효과적이지 않았다. 스팸메일 발송자들은 종종 Nord와 같은 상업용 VPN 서비스를 사용하며, 이 서비스는 전 세계에 서버를 가지고 있다.
     * 그 후 허먼은 스팸메일 발송자들을 방해하기 위한 'The Frustration Loop'라는 아이디어를 제안하였다. 스팸이 감지되면 블로그를 차단하는 대신, 시스템은 가짜 오류를 발생시키고 과정을 최대한 괴롭게 만들어 스팸메일 발송자들의 시간을 낭비하게 하고 포기하게 한다.
     * The Frustration Loop는 스팸이 감지되면 양식을 지우고, 모든 텍스트 영역에서 붙여넣기를 비활성화하며, 5에서 10초마다 요소 포커스를 전환하고, 그들이 양식을 다시 제출하려고 시도할 때 다른 오류를 발생시킨다.
     * 허먼은 이 시스템을 테스트하고 유효한 사용자에게는 거의 트리거되지 않을 것으로 판단하였다. 이 시스템은 지난 3개월 동안 제작 중에 있었고, 오직 한 명의 사용자만이 이를 문제로 보고하였다.
     * The Frustration Loop를 구현한 이후, 스팸의 양은 새로운 블로그의 약 30%에서 5% 미만으로 떨어졌다. 허먼은 개선할 부분과 메울 구멍이 있다는 것을 인정하지만, 전반적으로 잘 작동하고 있다.

        Hacker News 의견

     * ""프러스트레이션 루프""라는 스팸 및 트롤 방지 방법에 대한 기사
     * 프러스트레이션 루프는 트롤 계정에 대해 페이지 로딩 시 무작위로 10-60초의 지연을 추가하는 방식으로, Newsvine 커뮤니티 뉴스 사이트에서 효과적인 방어책으로 입증됨
     * 기사에서는 댓글 스팸 탐지 도구인 Akismet에 대해 언급하지만, 가입 스팸 탐지에는 그다지 효과적이지 않다고 지적
     * 한 댓글 작성자는 각 사이트와 서비스마다 고유한 이메일 주소를 사용하는 캐치올 이메일 계정을 이용해 이메일 스팸을 제거하는 개인적인 방법을 공유
     * 다른 댓글 작성자는 자신의 블로그에 댓글을 게시하다가 차단된 경험을 공유하며 Akismet의 불완전한 항소 메커니즘을 비판
     * 기사에서는 소셜 네트워크에서 스팸 발송자에 대한 그림자 차단 실시를 언급하며, 이는 스팸 발송자가 자신이 걸린 것을 인지하기 어렵게 만드는 방법
     * 일부 댓글 작성자들은 프러스트레이션 루프의 잘못된 양성 및 음성 결과에 대한 우려를 표현하고, 스팸 발송자와 합법적인 사용자를 구별하는 방법에 대한 더 많은 정보가 필요하다고 주장
     * 스팸 보호의 다른 방법으로는 메일 연락처 양식에 숨겨진 텍스트 입력 필드 사용, VPN 사용 등이 언급됨
     * 기사와 댓글은 스팸 발송자와 스팸 방지를 시도하는 사람들 사이의 지속적인 싸움을 강조하며, 한 댓글 작성자는 이를 무기 경쟁에 비유
"
"https://news.hada.io/topic?id=10990","'Terraria' 개발자가 'Unity'를 비난하고, 오픈 소스 대안에 20만 달러를 기부","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'Terraria' 개발자가 'Unity'를 비난하고, 오픈 소스 대안에 20만 달러를 기부

        Hacker News 의견

     * Terraria 개발자가 Unity를 비판하고 오픈소스 대안에 20만 달러를 기부했습니다.
     * 엔진 개발 씬에서는 ""libgodot"" 같은 공유 라이브러리 버전의 Godot를 포함하여 많은 흥미로운 활동이 진행되고 있습니다.
     * ""libgodot""의 사용 사례에는 .net, Blender, VR 애플리케이션, SwiftGodotKit, 이미지 내보내기, UI 시스템, 3D 뷰포트, 자산 변환 자동화 등이 포함됩니다.
     * Terraria의 개발자는 앞으로의 각 프로젝트에 매달 1000달러씩 기부합니다.
     * Unity만큼 기술적으로 진보하지 않은 오픈소스 엔진들이 개선되고 있으며, 변경 사항에 동의하지 않을 경우 코드를 포크하는 등의 장점을 제공합니다.
     * Godot 프로젝트는 Patreon 수수료와 VAT를 피하기 위해 자체 재단을 설립하여 기부금의 더 큰 부분이 직접 작업에 사용되도록 했습니다.
     * 일부 사용자들은 Unity가 부피가 크고 혼란스럽다고 생각합니다.
     * 오래된 Microsoft XNA 프레임워크의 재구현인 FNA도 자금을 받고 있습니다. 이는 주로 새로운 플랫폼보다는 오래된 게임을 유지하는 데 사용됩니다.
     * Terraria 개발자들은 지속적인 업데이트와 게임 및 커뮤니티 활성화를 위해 칭찬받고 있습니다.
     * 게임을 지원하고자 하는 사람들을 위해 Terraria는 Android Play Store와 iOS App Store에서 이용 가능합니다.
"
"https://news.hada.io/topic?id=10946","잃어버린 물건들은 어디로 갈까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           잃어버린 물건들은 어디로 갈까?

     * 경찰청 유실물들을 통합 검색 할 수 있도록 Redesign한 웹 서비스
     * 기존 사이트의 문제를 해결
          + 경찰청 유실물 센터의 모든 이미지는 찌그러진 thumbnail을 만들고 원본 이미지도 볼 수 없음.
          + 입력 폼이 너무 많아 상당히 불편한 UI/UX를 하나의 검색창으로 통합
          + 장소 검색, 지하철 노선 필터링이 가능

   개인적으로 하다가 미뤄둔 프로젝트랑 동기/룩앤필/검색이 비슷해서 좀 신기하네요

   https://velog.io/@mowinckel/…

   도메인 센스 좋네요.

   유용한 사이트네요

   하루동안 올라오는 유실물이 수천건에 달합니다...

   사람들이 잃어버린 에어팟 1953개
   주인을 못 찾은 아이폰 1662개, 갤럭시 1449개

   와 진짜 기발하네요 ㅋㅋㅋㅋ
"
"https://news.hada.io/topic?id=10968","'Mythbusters: Wing Commander I Edition' 관련 신화 해설","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            'Mythbusters: Wing Commander I Edition' 관련 신화 해설

     * 유명한 'Wing Commander를 플레이해 주셔서 감사합니다' 이야기에 대한 깊은 탐구 기사, 이는 프로그래머의 빠른 오류 수정으로 기능적인 해결책으로 대표되는 이야기입니다.
     * 이 이야기는 10년 이상 인터넷에서 유통되어 왔으며, Chris Roberts의 게임인 Star Citizen의 비평가들이 하위 수준의 작업을 판매하는 예시로 사용했습니다.
     * 기사는 이 이야기와 게임 자체의 기원을 조사하며, 이 이야기가 부분적으로 사실임을 발견했습니다.
     * 원래의 인용구는 2009년 Gamasutra 기사의 댓글에서 발견되었으며, 이는 원래 Wing Commander 게임의 프로그래머인 Ken Demarest가 남긴 것이었습니다.
     * 이 이야기는 후속 재구성에서 약간 변경되었으며, 원래 게시물에는 없던 스크린샷이 추가되었습니다.
     * 기사는 또한 게임이 ""Wing Commander를 플레이해 주셔서 감사합니다""를 출력한다는 주장을 무효화하며, 이는 테스트에서 그렇지 않음을 보여줍니다.
     * 유일한 예외는 게임의 병영에서 공기 빼기 문을 클릭하여 종료하는 경우로, 이는 다른 메시지를 출력합니다.
     * 기사는 게임 개발 중에 해킹이 사용되었지만 게임이 출시되기 전에 수정되었다는 Ken Demarest의 직접적인 인용으로 마무리됩니다.
     * 따라서 이 이야기는 하위 수준의 제품의 증거가 아니라 영리한 엔지니어링 트릭입니다.

        Hacker News 의견

     * Traveller's Tales가 Sega Genesis/Megadrive의 Sonic 3D Blast에 적용한 독특한 해킹에 대한 기사
     * 메인 CPU의 모든 오류 인터럽트를 레벨 선택 화면으로 리디렉션하는 사용자 정의 충돌 핸들러를 포함한 해킹
     * Sega의 QA 팀에 의한 게임 빌드 거부를 피하고 게임 출시 지연을 방지하기 위해 만들어진 해킹
     * 이러한 정보에 대한 1차 소스 접근의 가치를 강조하는 기사
     * 80년대 게임의 향수와 게임 개발의 진화에 대한 논의
     * 개발자가 미사일 코드를 감사하고 비행 종료 시 미사일 자체의 가비지 수집의 일부인 의도적 메모리 누수를 발견한 이야기
     * 2023년에도 여전히 활동 중인 Wing Commander 뉴스 전용 웹사이트 언급
     * ""Wing Commander를 플레이해 주셔서 감사합니다!"" 메시지의 진위에 대한 논평, 일부 사용자는 이를 기억하고 일부는 그 존재를 의심함
     * 사용자가 Half Life 1의 멀티플레이어 게임 런처를 설치하고 프로그램이 제대로 설치되었음에도 불구하고 그렇지 않다는 오류 메시지를 만난 이야기
     * 앞서 언급한 ""감사합니다"" 메시지가 Wing Commander 1 또는 2에 있었는지에 대한 논쟁
     * 이야기가 전파됨에 따라 왜곡될 수 있다는 논평으로 논의가 마무리되지만, 이 경우 왜곡은 무해하다고 간주됨
"
"https://news.hada.io/topic?id=11012","아무도 원하지 않는 무언가를 만들어도 괜찮다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        아무도 원하지 않는 무언가를 만들어도 괜찮다

     * 제품은 사용자를 위한 것뿐만 아니라 자기 표현의 매개체임을 강조하는 기사
     * 제품 창조는 시장의 필요성에만 초점을 맞추는 것이 아니라 개인의 관심과 열정에 의해 주도되어야 한다는 저자의 제안
     * 제품은 감정의 용기로, 창조자가 감정을 주입하고 사용자가 그것을 추출한다는 저자의 주장
     * 창조자가 그것에 완전히 감정을 표현했다면 아무도 원하지 않는 제품을 만드는 것이 허용될 수 있다는 저자의 생각
     * 과도한 생각이나 시장 필요성에 대한 과도한 걱정으로 인해 창조자 자신조차도 좋아하지 않는 제품을 만드는 일반적인 관행을 비판하는 저자
     * 창조자가 진정으로 좋아하는 것을 만들었다면 시장에 더 흥미로운 제품이 있을 것이라는 저자의 제안
     * 제품 창조 과정에서 기대 관리와 감정 연결 유지의 중요성을 강조하는 저자
     * 많은 성공적인 제품들이 창조자의 즐거움과 개인적인 관심에 의해 주도되는 부 프로젝트로 시작되었다는 저자의 지적
     * 자신의 감정을 이해하고 느끼는 것이 제품 창조에서 중요한 기술이라는 저자의 주장
     * Steve Jobs를 세밀한 감정을 감지하고 제품에 주입할 수 있는 성공적인 ""감정 탐지기""의 예로 드는 저자
     * 기대를 줄이고 현재에 집중함으로써 제품 창조 과정에서 세밀한 감정을 더 잘 인지하는 것의 중요성을 강조하며 마무리하는 저자

        Hacker News 의견

     * 기사는 창작자들이 널리 인기있지 않더라도 흥미로운 것을 만들어내는 데서 두려움을 극복하도록 권장한다.
     * 한 사용자는 디지털 개미 무리를 만드는 데 목적을 찾았음에도 불구하고 재정적으로 성공하지 못했다는 경험을 공유한다.
     * 또 다른 사용자는 외부적인 인정에 집중하기보다 원하는 것을 만드는 것의 중요성을 강조한다.
     * 기사의 저자는 자신의 HackerNews 게시물에 대한 긍정적인 반응에 대한 놀라움과 감사함을 공유한다.
     * 여러 사용자들은 창작 뒤에 있는 주도력이 다른 사람들을 기쁘게 하기 위한 기대가 아니라 개인적인 흥미여야 한다는 기사의 감정에 동의한다.
     * 일부 사용자들은 잠재적인 비즈니스 기회를 위해 창작하는 것으로의 관점 전환에 대해 반성한다.
     * 한 사용자는 자신이 필요하고 즐기는 것을 만드는 것과 순전히 경제적 이익을 위해 만드는 것 사이의 차이에 대한 견해를 공유한다.
     * 한 사용자는 잠재적인 부정적인 피드백 때문에 자신의 부가 프로젝트를 공개하는 것에 대한 두려움을 공유하지만, 개인적인 흥미를 위해 창작하는 기사의 메시지에서 위안을 찾는다.
"
"https://news.hada.io/topic?id=10924","Pineapple ONE: 집에서 만들 수 있는 오픈소스 32비트 RISC-V CPU","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Pineapple ONE: 집에서 만들 수 있는 오픈소스 32비트 RISC-V CPU

     * CPU는 FPGA나 마이크로컨트롤러 없이 완전히 일반적인 부품으로만 구성
     * 프로젝트의 목표는 현대 CPU 설계가 생각만큼 어렵지 않음을 보여주는 것
     * 프로젝트의 회로도는 오픈소스로, GitHub 에 공개
     * CPU는 RV32I 표준을 지원하며, 500 kHz에서 작동하고, 512 kB 프로그램 메모리와 512 kB RAM
     * 간단한 흑백 VGA 카드를 포함, 200x150 픽셀의 해상도를 지원하여 사용자가 외부 모니터를 연결하고 간단한 그래픽을 표시 가능
     * CPU는 올해 19세인 Filip Szkandera가 설계하고 제작하였으며, 이 프로젝트에 2년을 투자
     * 프로젝트는 커뮤니티의 기여를 환영하며, 신뢰성, 속도, 오디오 카드나 더 나은 VGA 카드와 같은 추가 기능 등 개선 가능성이 있는 영역이 있음
     * 관심 있는 기여자들은 회로도, PCB 설계, 새로운 모듈 생성, 소프트웨어, 웹사이트 또는 프로젝트와 관련된 다른 모든 것을 도와줄 수 있음
     * 프로젝트는 또한 토론과 아이디어 공유를 위한 Discord 서버도 운영

        Hacker News 의견

     * Pineapple ONE은 FPGA나 마이크로컨트롤러 없이 이산 논리를 사용하여 집에서 만들 수 있는 오픈 소스 32비트 RISC-V CPU입니다.
     * 일부 댓글 작성자들은 이 프로젝트의 실행 가능성에 대해 의문을 제기하며, 필요한 하드웨어의 공간과 복잡성을 지적합니다.
     * 이 프로젝트는 slu4의 Minimal 64와 같은 비슷한 초기화 프로젝트와 비교됩니다. 이들 프로젝트도 이산 논리 부품으로 컴퓨터를 만드는 것을 포함합니다.
     * Pineapple ONE의 GitHub 저장소가 언급되었지만, 소스가 있는 주요 저장소가 어느 것인지는 불분명합니다.
     * 이 프로젝트는 특히 체코 고등학생의 대부분 작업을 고려할 때 그 야망에 대해 칭찬을 받습니다.
     * 일부 댓글 작성자들은 디자인, 특히 저항, 용량, 인덕턴스와 같은 기생 요소로 인해 전기 흐름을 복잡하게 만들 수 있는 수직 스택을 비판합니다.
     * 프로젝트의 목표는 ""현대적인"" CPU 설계가 그렇게 어렵지 않다는 것을 증명하는 것이지만, 일부 댓글 작성자들은 설계된 CPU가 ""현대적인"" 것에 대해 의문을 제기하며, 이것이 마케팅 캠페인을 가진 장난감 CPU일 수 있다고 제안합니다.
"
"https://news.hada.io/topic?id=10911","Java 21이 다시 Java를 좋아하게 만듦","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Java 21이 다시 Java를 좋아하게 만듦

     * 2023/9/19 출시 예정인 Java 21은 스위치 블록과 표현식에서 레코드 패턴을 지원하며, 이는 Kotlin, Rust, C#과 같은 함수형 프로그래밍 패턴에 Java를 더 가깝게 만드는 중요한 업데이트
     * Java는 지난 10년 동안 빠르게 발전해 왔으며, Java 9 이후로 6개월마다 주요 업데이트가 이루어짐
     * Java 21은 레코드 패턴과 스위치 패턴 매칭을 안정화시키며, 함수형 프로그래밍의 핵심 요소인 대수 데이터 타입 표현이 가능해짐
          + 대수 데이터 타입의 개념은 집합 이론의 한 분야인 타입 이론을 통해 설명됨
     * 새 버전은 또한 패턴 매칭이라는 기능을 도입하며, 이를 통해 특정 데이터 패턴의 정적 검증이 가능해짐
     * Java 21은 개발자가 라이브러리 API와의 사용자 상호작용을 제어할 수 있도록 봉인된 클래스 또는 인터페이스를 도입
     * 봉인된 클래스 또는 인터페이스는 Sum 타입이라는 개념에 기반한 디자인 패턴을 지원하며, 이는 한 시점에 타입이 그 구성 요소 중 하나가 될 수 있다는 것을 의미
     * 새 버전은 또한 스위치 문과 표현식 내에서 복잡한 조건을 간결하게 표현할 수 있는 가드 절을 특징으로 함
     * Java 21은 패턴 매치가 잘못될 때 발생하는 java.lang.MatchException이라는 새로운 예외 클래스를 도입
     * 이 기사는 Java 21에서 스위치 블록의 사용과 특정 조건에서 MatchException을 발생시킬 수 있는 방법에 대해 논의
     * 스위치 블록이 선택자와 지정된 변형 중 어느 것과도 일치하지 않을 때 MatchException이 발생하며, 이는 매우 이례적인 것으로 간주됨
     * Java Enhancement Proposal (JEP) 441은 항상 예외를 발생시키는 레코드 접근 메서드가 매우 이례적이라는 것을 인정
     * 이 기사는 가드 절에서 0으로 나누는 오류로 인해 MatchException을 발생시키는 스위치 블록의 예를 제공
     * 저자는 나눗셈 연산에서 피제수가 0이 될 수 있는 동적 값일 때 상황이 더 복잡해진다고 지적
     * 이 기사는 Java 21의 새로운 기능과 기능을 탐구하는 시리즈의 일부로, 앞으로 이러한 특징들이 Java 코드 작성을 개선하는 데 어떻게 사용될 수 있는지에 대한 실용적인 예제와 함께 일부 흥미로운 특징들을 살펴볼 예정
     * 저자는 제네릭이 스위치 패턴과 어떻게 상호 작용하는지와 같은 특정 주제들이 이 기사에서 다루어지지 않았지만, 향후 기사에서 다룰 수 있음을 언급
     * 이 기사는 JVM 패턴 매칭, 함수형 프로그래밍, Java 21, 대수 타입에 관심이 있는 사람들에게 관련성이 있음
"
"https://news.hada.io/topic?id=10901","처음부터 경제 시뮬레이터 구축하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           처음부터 경제 시뮬레이터 구축하기

     * Thomas Simon이 저술한 경제 시뮬레이터 제작에 대한 종합 가이드 기사
     * 시뮬레이터는 한 개인에서 시작하여 식품, 물, 목재 소비, 돈, 국가 생산 등 다양한 요소를 점진적으로 통합
     * 농부, 수도공, 공무원 등의 다양한 역할이 시뮬레이션에 도입, 각각 특정 책임을 가짐
     * 시뮬레이터는 가장 적게 소유한 자원 재고 수준으로 정의된 개인의 경제적 복지를 측정하는 Quality of Life (QoL) 지표를 사용
     * 기사는 화폐 발행, 인플레이션, 공급과 수요의 영향 등 경제 개념을 시뮬레이션 내에서 탐구
     * 가이드는 시뮬레이션 빌더 도구로 마무리, 독자들이 다양한 가설을 사용자 정의하고 테스트할 수 있게 함
     * 시뮬레이터는 경제의 단순화된 모델로, 기술 차이, 규모의 경제, 주식 보유, 투자, 마케팅, 비필수 제품, 생산 과정, 생애 주기, 교육, 은퇴, 실업, 블랙 스완 이벤트 등의 요소를 배제
     * 기사는 경제 시뮬레이터 제작, 플랫 OS 커널 유토피아 개념, Android 앱 구축의 복잡성 등 다양한 기술 주제를 탐구
     * Rust, Android, JavaScript 등 다양한 프로그래밍 언어와 기술의 사용을 강조
     * 실시간 전략 게임인 Oxidator, 코더를 위한 사운드 합성기인 Natify, 현대 하드웨어를 위한 실험적 OS인 Fomos 등 여러 프로젝트를 선보임
     * WebGL과 PvP 요소를 활용한 멀티플레이어 아레나 슈터 게임, Top Down Battleground도 소개
     * 저자는 연락을 권장하며, 잠재적인 협업이나 추가 토론의 기회를 제안
     * 기사의 독특함은 다양한 기술 주제에 대한 광범위한 커버리지로, 최신 기술 산업 동향에 관심 있는 사람들에게 가치 있는 자료로 여겨짐
     * 기술에 밝은 독자들은 다양한 기술 개념의 깊이 있는 탐구와 혁신적인 프로젝트의 선보임으로 인해 기사를 흥미롭게 볼 수 있음

        Hacker News 의견

     * 경제 시뮬레이터 제작에 대한 기사
     * 사용자가 1950년대에 빌 필립스가 만든 MONIAC 장치 언급, 이 장치는 유체 논리라는 색상 물을 사용하여 경제 과정을 모델링하려고 시도했음
     * 또 다른 사용자가 80년대 후반 컴퓨터 잡지에서 BASIC 경제 시뮬레이터를 타이핑한 것을 회상, 재무 장관으로서 세율, 이자율, 공공 지출 수준을 설정하고 주기를 실행할 수 있었음
     * 판매자의 수익의 일정 비율을 모으는 방식으로 세금이 작동하는 방법과 돈이 본질적으로 사람들 사이의 약속임에 대한 토론
     * 한 사용자가 시뮬레이터의 애니메이션과 아이디어를 칭찬, 런던 경제학교의 빌 필립스에 의한 유사한 개념을 언급
     * ""Captain of Industry""라는 게임이 더 완벽한 시뮬레이션으로 제안됨
     * 일부 사용자들이 Dwarf Fortress 게임과 유사한 상세 수준의 경제 시뮬레이터에 관심을 표현
     * HAMURABI 게임이 재미있고 교육적인 프로그래밍 게임으로 소개됨
     * 한 사용자가 시뮬레이터의 소스 코드에 대해 문의, 게시물의 코드가 최소화/난독화되었다고 지적
     * 한 사용자가 아름다운 지도를 영토로 오해하지 말라고 경고, 시뮬레이션이 현실을 정확하게 대표하지 않을 수 있음을 암시
     * 한 사용자가 실제로 경제를 시뮬레이트하려면 전통적인 정적 평형 모델 대신 복잡한 동적 시스템을 사용해야 한다고 제안, 날씨 예보조차 동적 시스템 모델로 이동했지만 경제는 그렇지 않다고 지적
"
"https://news.hada.io/topic?id=10981","토요타 연구소, 로봇에게 새로운 행동을 가르치는 데 돌파구 주장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  토요타 연구소, 로봇에게 새로운 행동을 가르치는 데 돌파구 주장

     * Toyota Research Institute(TRI)는 Diffusion Policy를 기반으로 한 생성 AI 접근법을 사용하여 로봇에게 새로운 기술을 가르치는 돌파구를 발표했습니다.
     * 이 새로운 접근법은 로봇의 유용성을 크게 향상시키며, 대화형 AI를 혁신시킨 Large Language Models(LLMs)와 유사한 ""Large Behavior Models(LBMs)""을 로봇에게 구축하는 방향으로 한 걸음 나아갔습니다.
     * 이 새로운 교육 기법은 효율적이며 높은 성능의 행동을 생성하므로, 로봇이 사람들을 더 효과적으로 지원할 수 있습니다.
     * 이전의 로봇 교육 기법들은 느리고 일관성이 없으며 비효율적이었으며, 대부분은 매우 제한된 환경에서 수행되는 좁은 범위의 작업에 한정되었습니다.
     * TRI는 새로운 접근법을 사용하여 액체를 붓는 것, 도구를 사용하는 것, 변형 가능한 물체를 조작하는 것과 같은 60가지 이상의 어려운, 민첩한 기술을 로봇에게 가르쳤습니다.
     * TRI는 올해 말까지 수백 가지의 새로운 기술을, 2024년 말까지는 1,000가지를 가르치려는 목표를 가지고 있습니다.
     * TRI의 로봇들은 이제 다양하고 풍부한 방법으로 세상과 상호작용할 수 있으며, 이는 언젠가 로봇이 일상적인 상황과 예측 불가능하고 끊임없이 변하는 환경에서 사람들을 지원할 수 있게 할 것입니다.
     * TRI의 로봇 행동 모델은 선생님의 촉각적 시연과 목표에 대한 언어적 설명을 결합하고, AI 기반 Diffusion Policy를 사용하여 시연된 기술을 배웁니다.
     * TRI와 Columbia University의 Song 교수님의 그룹과의 협업을 통해 Diffusion Policy를 개발했는데, 이는 행동 학습에 대한 강력한 생성 AI 접근법입니다.
     * TRI의 로봇 플랫폼은 촉각적 피드백과 촉각 감지를 가능하게 하는 민첩한 양팔 조작 작업에 맞춤형으로 제작되었습니다.
     * TRI는 Drake를 사용하는데, 이는 로봇 설계를 위한 모델 기반 설계로, 최첨단 도구 상자와 시뮬레이션 플랫폼을 제공하여 시뮬레이션과 현실에서의 개발을 더욱 확대하고 가속화할 수 있습니다.
     * 안전성은 TRI의 로봇 개발 노력의 핵심이며, 시스템에는 로봇이 자신이나 환경과 충돌하지 않는 등의 안전 보장을 존중하도록 설계된 강력한 보호장치가 포함되어 있습니다.
     * TRI의 이번 돌파구에 대한 보다 기술적인 정보는 TRI의 Medium 블로그에서 찾아볼 수 있으며, 10월 4일에 LinkedIn Live Q&A 세션에서 논의될 예정입니다.

        Hacker News 의견

     * Toyota Research Institute(TRI)는 로봇에게 새로운 행동을 가르치는 데 있어서 발전을 이루어냈다는 찬사를 받고 있다.
     * 이러한 발전의 핵심은 콜롬비아 대학의 Shuran Song 교수의 연구실에서 개발된 Diffusion Policy에 의해 이루어졌으며, 현재는 스탠퍼드 대학에 위치해 있다.
     * Diffusion Policy는 올해 R:SS 컨퍼런스에서 최우수 논문상을 받을 수 있는 커뮤니티의 인기를 끌었다.
     * Song 교수는 실제 세계의 응용 분야로 확장 가능한 여러 접근법을 가진 로봇 공학의 선두 주자로 인정받고 있다.
     * Russ Tedrake의 온라인 코스인 'Underactuated Robotics'는 로봇 공학의 복잡성을 이해하는 데 추천된다.
     * Google도 힘의 피드백과 압력 센서에 중점을 둔 유사한 프로젝트를 진행하고 있다.
     * 로봇이 시연을 통해 학습하는 것을 보여주는 Toyota Research의 팬케이크 뒤집기 로봇 비디오는 인상적으로 평가받고 있다.
     * 일부 사용자들은 TRI의 작업을 Google의 PaLM-E 프로젝트와 비교하며, 로봇 공학 분야에서 흥미로운 시기를 보여준다.
     * 일반 목적의 인간형 로봇은 모션 캡처 기술과 기계 학습 알고리즘을 결합함으로써 달성될 수 있다.
     * MIT의 교수가 동시에 TRI의 부사장을 맡는 경우처럼, 두 개의 전임직을 동시에 맡는 것의 실용성에 대해 일부 사용자들은 의문을 제기하고 있다.
     * gen-AI를 로봇 공학에 사용하는 것에 대한 잠재적 위험에 대한 우려가 있으며, 예기치 않은 움직임이 손상이나 부상을 초래할 수 있다는 것이다.
"
"https://news.hada.io/topic?id=11017","나는 수동으로 간단한 시퀀스를 예측하는 트랜스포머를 만들었다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   나는 수동으로 간단한 시퀀스를 예측하는 트랜스포머를 만들었다

     * 저자가 수동으로 GPT-2와 유사한 트랜스포머 모델을 구축하여 간단한 시퀀스를 예측하고 트랜스포머와 주의 메커니즘에 대한 더 깊은 이해를 얻음.
     * 트랜스포머는 기존 가중치를 사용하여 훈련되지 않았으며, 각 가중치는 수동으로 할당되었음.
     * 트랜스포머에 선택된 작업은 ""aabaabaabaab..."" 시퀀스를 예측하는 것으로, 다음 출력을 결정하기 위해 이전 두 토큰을 조회하는 작업이 필요함.
     * 저자는 'a'를 0으로, 'b'를 1로 나타내는 토큰화 체계를 사용함.
     * 모델의 코드는 jaymody의 picoGPT GPT-2 구현을 기반으로 하며, 간소화를 위한 일부 수정이 이루어졌음.
     * 모델의 차원에는 5의 컨텍스트 길이, 2의 어휘 크기, 8의 임베딩 크기가 포함됨.
     * 저자는 임베딩 가중치를 설계하였으며, 첫 번째 5개 요소를 위치 1-핫 임베딩에, 다음 두 요소를 토큰 id 1-핫 임베딩에 사용함.
     * 트랜스포머 블록은 q, k, v 행렬을 생성하고, 결과를 임베딩으로 다시 투영하며, 토큰 임베딩 가중치를 사용하여 그것을 다음 토큰 로짓 세트로 다시 투영하도록 설계되었음.
     * 저자는 주의 헤드 디자인과 임베딩 공간으로의 투영에 대한 자세한 설명을 제공함.
     * 마지막 단계는 트랜스포머 블록을 실행한 결과를 전치된 토큰 임베딩 가중치와 곱하여 최종 로짓을 얻는 것을 포함함.
     * 모델은 훈련을 위해 소프트맥스 함수를 사용하며, 주어진 시퀀스에 대해 합리적인 완성을 생성할 수 있음.
     * 모델은 모호하지 않은 컨텍스트로 테스트했을 때 100%의 성공률을 달성함.
     * 저자는 독자들이 트랜스포머와 주의에 대한 더 직관적인 이해를 얻고, 자신의 모델을 만들어 보도록 권장함.
     * 기사에는 numpy를 사용하여 계산하고 토큰화, 예측, 시퀀스 완성을 위한 함수를 정의하는 모델의 완전한 코드가 포함되어 있음.
     * 저자는 컨텍스트 창을 축소하고, 퓨즈드 곱셈-덧셈, kv 캐싱 등의 기법을 사용함으로써 모델의 효율성을 향상시킬 수 있다고 제안함.
     * 이 기사는 언어 모델 분야에서 특히 기계 학습과 AI에 관심이 있는 개인을 대상으로 함.

        Hacker News 의견

     * 본 기사는 수동으로 단순한 시퀀스를 예측하는 변환기 생성에 대해 논의하고 있다.
     * 관련 연구인 ""Thinking Like Transformers""는 변환기 구성 요소로 모델링 가능한 원시 프로그래밍 언어인 RASP를 소개한다.
     * RASP와 유사한 프로그램은 훈련 없이 모델 가중치로 컴파일될 수 있다.
     * 드롭아웃의 중요성과 토큰에 대한 훈련의 병렬화를 포함한 이해를 높이기 위해 변환기를 처음부터 구현하는 것이 권장된다.
     * 변환기를 직접 다루는 경험이 예상치 못한 학습 결과를 가져올 수 있다는 것이 기사에서 제안된다.
     * Karpathy 등이 제작한 비디오가 변환기 이해에 도움이 되는 자료로 언급된다.
     * 도메인 전문가가 수동으로 조정하여 훈련을 가속화할 수 있는 모델 가중치에 대한 직관적인 인터페이스 아이디어가 제안된다.
     * 기사는 변환기에 대한 명확한 설명을 통해 기술 개념을 더욱 접근하기 쉽게 만들어 주어 호평받고 있다.
     * 변환기는 튜링 머신이나 정규 표현식을 파싱하는 머신과 유사한 추상 머신에 비유된다.
     * 저자는 실용적인 응용이 의심스럽지만 독자들이 직접 모델을 만들어 보도록 격려한다.
     * 기사는 흥미롭고 유익하며, 기술에 밝은 독자들 사이에서 토론과 아이디어를 불러일으킨다.
"
"https://news.hada.io/topic?id=10927","Petals - 비트토렌트 스타일로 집에서 LLMs 실행","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Petals - 비트토렌트 스타일로 집에서 LLMs 실행

     * 기사는 BitTorrent와 유사하게 사용자가 집에서 대형 언어 모델(LLMs)을 실행할 수 있게 해주는 새로운 기술인 Petals를 소개합니다.
     * Petals는 Llama 2 (70B), Falcon (180B), BLOOM (176B) 등 여러 LLMs와 그 파생 제품을 지원합니다.
     * 이 기술은 사용자의 장치에 모델의 일부를 로드한 후, 나머지 부분을 제공하는 다른 사용자들의 네트워크에 연결하는 방식으로 작동합니다.
     * Llama 2에 대해 6 토큰/초, Falcon에 대해 4 토큰/초의 단일 배치 추론 속도를 제공합니다. 이 속도는 챗봇과 대화형 앱에 충분합니다.
     * Petals는 사용자가 어떤 미세 조정 및 샘플링 방법을 사용하거나, 모델을 통해 사용자 정의 경로를 실행하거나, 숨겨진 상태를 볼 수 있도록 하여 클래식 LLM API를 넘어섭니다.
     * Petals는 PyTorch와 🤗 Transformers의 유연성과 API의 편리성을 결합합니다.
     * 사용자는 Google Colab에서 Petals를 시험해 볼 수 있으며, GitHub에서 문서를 확인할 수 있습니다.
     * 기사는 프로젝트에 대한 주요 기여자들을 나열하고 GPU를 기여할 수 있는 링크를 제공합니다.
     * 사용자는 Discord 또는 이메일 구독을 통해 Petals의 개발을 따라갈 수 있습니다.
     * 이 프로젝트는 BigScience 연구 워크숍의 일부입니다.

        Hacker News 의견

     * BitTorrent과 유사한 방식으로 대형 언어 모델(LLMs)을 가정에서 실행하는 새로운 방법에 대한 기사
     * 모델 가중치가 여러 기계에 걸쳐 계층으로 나누어져 협력하여 추론 또는 미세 조정을 수행
     * Ollama라는 프로젝트가 개발 중으로, Docker 레지스트리에 모델 가중치를 호스팅하여 매번 올바른 가중치가 다운로드되도록 보장
     * 양자화/QLORA의 사용으로 대형 모델을 소비자 하드웨어에서 허용 가능한 속도로 실행, 다른 서버 간 병렬성으로 인한 지연 시간 피함
     * 70B와 같은 대형 모델의 미세 조정은 도전적이며 비싼 자원이 필요, ""llama training horde""의 집단 기여 제안
     * 시스템의 취약성에 대한 우려, 악의적인 참가자들이 출력을 변경하거나 쓰레기 결과를 반환하여 시스템을 방해할 수 있음
     * 프로젝트의 일부인 Petals는 사용자가 GPU를 공유하고 코드를 기여할 수 있게 하여 일반적인 코딩 경험 제공
     * 시스템은 분배된 토큰의 일정 수를 제공할 수 있으므로 저사양 장치 사용자에게 이점을 줄 수 있음
     * 프로젝트는 잠재적인 게임 체인저로 보여지며, 이 분야의 더 많은 개발자에게 접근성을 제공
     * Petals는 AI Horde kudos와 유사한 중앙 집중식 인센티브 시스템을 운영, 다른 측면에서는 분산 시스템임. 인센티브는 돈으로 교환할 수 없으며 시스템 내에서 사용하도록 의도됨
     * 일부 사용자들은 GPU를 공유하려고 할 때 종속성 버전 문제를 겪음
     * GPU 사이클을 위해 ""토큰""을 사용하는 것에 대한 제안, 태양광 PV 에너지의 사용을 극대화하기 위해 해를 따라가는 아이디어 제시
"
"https://news.hada.io/topic?id=10895","까르푸, "축소 인플레이션(#shrinkflation)" 가격 경고를 식품에 표시하여 브랜드를 수치스럽게 만듦","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     까르푸, ""축소 인플레이션(#shrinkflation)"" 가격 경고를 식품에 표시하여 브랜드를 수치스럽게 만듦

     * 프랑스 슈퍼마켓 체인 Carrefour가 'shrinkflation'을 한 제품에 라벨을 붙이기 시작
          + 제조업체가 가격은 그대로지만 용량을 줄여서 실제 가격을 올리는 것을 의미
     * 이 라벨은 Nestlé, PepsiCo, Unilever와 같은 주요 소비재 공급업체들에게 압력을 가하고, 다가오는 계약 협상을 앞두고 이 문제를 해결하는 것을 목표로 함
     * Carrefour는 프랑스 전역의 매장에서 Lindt 초콜릿과 Lipton 아이스티와 같은 26개의 제품에 이 라벨을 붙임
     * 라벨에는 ""이 제품은 부피 또는 무게가 줄어들고 공급업체로부터의 실질적인 가격이 상승했습니다.""라고 적혀 있음
     * 예를 들어, PepsiCo가 생산한 무설탕 복숭아 맛 Lipton 아이스티 병은 1.5리터에서 1.25리터로 줄어들어, 리터당 가격이 40% 상승
     * Carrefour의 이러한 행동은 프랑스 재무장관 Bruno Le Maire의 지지를 받았으며, 그는 대형 소매업체와 소비자 그룹에게 가격을 낮추도록 촉구
     * 'shrinkflation' 경고는 대상 공급업체가 가격 인하에 동의할 때까지 모든 프랑스 Carrefour 매장에 유지될 것
     * Carrefour는 다른 상품에 대한 경고를 확대할 수 있지만, 다른 국가로 이러한 행동을 확대할 계획은 없음

   https://www.shrinkflation.io/

   Shrinkflation 트래커라는 웹사이트가 있습니다.
   브랜드/제품별로 무게가 얼마나 줄어드는지 그래프로 확인가능합니다.

   아 이거 좋네요. 제 생각에 초코파이가 크기가 점점 줄어든 거 같아서 찾아보니..

   74년 첫 출시때 48그램에 50원
   76년에 2배로 100원으로 인상하면서 양을 62g로 늘림
   100원으로 26년 유지하며 양을 줄여나가다가 96년에 150원으로 올림
   다시 가격을 올리기 시작해서 2013년이 되면서 소매가 기준 400원에 35g이 됨
   2015년에 현재의 중량인 39g이 됨

   요렇다고 하네요. 초코파이는 너무 천천히 변해서 저 shrinkflation 에 적합하진 않는데, 다른 것들도 살짝 그렇게 변하고는 있는듯.

        Hacker News 의견

     * 'Shrinkflation' 실천에 대한 기사, 회사들이 제품 크기를 미묘하게 줄이면서 가격은 유지하는 현상
     * 댓글러들은 유럽의 인플레이션의 50%가 마진 증가 때문이라고 추정한다고 강조
     * 일부 사용자들은 Shrinkflation이 소비자, 특히 재정적으로 취약하고 식품은행에 의존하는 사람들에게 미치는 영향에 대해 우려
     * Shrinkflation의 예시 공유, 세제 브랜드가 용기 크기를 줄이고 가격을 올리는 등
     * Shrinkflation을 기만적인 전략으로 사용하는 회사들에 대한 비판, 한 댓글러는 이런 전략이 여전히 사용되고 있다는 것에 놀람 표현
     * 일부 사용자들은 Shrinkflation을 막기 위해 순중량과 이전 가격에 대한 명확한 라벨링을 요구하는 법을 시행해야 한다고 제안
     * 브라질에서는 회사들이 무게 감소를 공개적으로 알려야 한다는 법이 있다는 것이 언급, 비슷한 법이 다른 곳에서도 유익할 수 있음을 제안
     * '비교 가격' 개념 논의, 소비자가 옵션을 비교할 수 있도록 단위당 두 번째 가격이 표시되는 방식
     * 한 댓글러는 제조업체와 상업 로비의 압력으로 80년대에 특정 제품의 표준화된 무게와 부피가 폐지되었다고 공유
"
"https://news.hada.io/topic?id=10947","플러터에서 codepush(Over The Air) 업데이트가 가능한 서비스 shorebird","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          플러터에서 codepush(Over The Air) 업데이트가 가능한 서비스 shorebird

     * React Native에서는 앱 스토어 검수를 기다릴 필요 없이, 사용자 클라이언트에서 JS 코드를 치환하도록 요구하는 방식으로 업데이트를 진행할 수 있었음
     * 네이티브 바이너리를 사용하는 Flutter는 이와 같은 방식의 업데이트가 불가능했음
     * Shorebird는 자체적으로 수정한 Flutter 엔진을 사용하여 이 문제를 우회
     * Android는 현 시점에서 정식으로 지원하는 중. iOS는 알파 버전으로, 현 시점에서는 바이너리 컴파일에 비해 느리고, 몇 달 내로 이 문제를 해결할 것이라고 함
     * 현 시점에서의 알려진 이슈는 다음 문서를 참조

   저도 좋은 프로젝트라고 생각하고 관련해서 다른 유튜버 분의 영상 봤었는데,
   가격관련해서도 한번 체크해보는게 좋을거 같습니다~
   https://www.youtube.com/watch?v=jP19mQMtyEw&t=410s
   참고요~

   좋은 추가 정보 감사드려요! 가격적인 부담은 설명 페이지에서만 봐도 좀... 있는 수준이더라구요
   완전히 큰 회사 아니면 쓰기 힘들 것 같습니다.
   솔직히 코드푸시 자체는 RN에서는 마소 급 정도 되는 회사면 무료로 해주는데, 경쟁자가 아직 없어서 그런가 쇼어버드는 과금이 좀 세더라구요;;

   우아.. 나오는구나 대박

   저도 기대가 무척 큽니다. 플러터를 선택한 건 후회하지 않지만(RN을 싫어하는 건 아닙니다. 이번에 진행중인 프로젝트에 Flutter가 더 적합했을 뿐...), OTA 업데이트가 안 되는 건 계속 아쉬웠거든요

   오!!!너무좋네요
   이부분때문에 rn을 고려하고있었는대
   flutter에도 이게 되면 좋겠네요
   굿굿

   정식 출시되면 몇달동안 테스트 돌려보다가 저희도 넘어가지 싶습니다

   아직 개발 초기라 정식 사용은 힘들것같지만, 의미있는 프로젝트 인것같습니다.
   플러터에서 정식으로 지원해주면 좋으련만..
   사족이지만, 좀 위회적인 방법으로는 dynamic widget 과 같은 SSR 방식의 패키지도 있습니다.
   https://pub.dev/packages/dynamic_widget

   이 부분에 대해서 플러터 팀에서 공식적인 견해를 밝혔다는 걸 어디서 본 것 같은데... 나중에 다시 찾아봐야 할 것 같아요!
   비슷한 다양한 패키지들은 검토해 보았습니다. 다만 아직 Codepush와 같은 수준은 아닌 것 같기도 하여....

   개인적으로 본 프로젝트도 애플에서 허용하는 부분적 JS 코드로의 치환이 맞다면, 웹 어셈블리 정도는 적용해 줬으면 합니다(이게 애플의 정책에 부합하는지는 잘 모르겠네요)
"
"https://news.hada.io/topic?id=10961","브라이언 체스키가 Airbnb에서 PM을 없애버린 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     브라이언 체스키가 Airbnb에서 PM을 없애버린 이유

     * 8월에 진행한 Figma 컨퍼런스에서 CEO인 Dylan과 함께 나눈 대담
     * Airbnb에서 PM 직무를 없앴다고 발언. 디자이너들의 호응을 이끌어냄
     * 브라이언 체스키는 디자이너 출신 경영자로서, 초기에는 디자인을 회사의 핵심 정신으로 삼았으며, 디자이너를 의사결정 과정에 참여시키려 했음
     * 코로나로 인해 Airbnb가 80%의 매출 감소를 경험하며 큰 위기에 처했으나, 브라이언의 디자인 중심 경영 방식을 채택하고 회사를 회생시키려 노력함
     * 이후 브라이언은 디자이너와 PM 역할을 통합하고 디자이너의 권한을 강화하여 디자인 중심 경영으로 회사를 개편함

   저는 이 결정을 지지합니다. 당연히 이 제도에도 부작용이 있겠지만요.
   공격적인 발언이지만, PM 역할을 유지한다고 하더라도 전문영역(디자인, 개발)에 대한 경험이 있는 사람이 맡아야 한다는 생각입니다. 제품에 대한 깊은 이해를 하지 못하는 경우에 일정 조율하는 역할만 하는 경우를 너무 많이 봤어요.

   책임을 지고 결정하라고 PM 역할을 만드는건데, 공감하긴 어렵네요. 좋은 의견이 회사에 적용되는 시스템을 만들어야지, 누군가의 역할을 강조하는게 딱히 성과를 더 냈다고 볼 순 없을거 같습니다.

   신기한 내용이네요

   각각의 고유 역할이 있는데 1+1 이 2가 되거나 2.5가 되어야 이게 성공적이라고 판단할 수 있을 것 같은데요. 1+1 이 1.5가 되거나 0.8이 되는 경우도 많이 경험했습니다.

   이런 결정을 내린 회사들이 과정 중에 어떤 노력을 했는지도 궁금하네요.

   원래 잘되는 회사였고, 통합이 대세에 영향을 미치지 않았지만 CEO 가 자신의 성과를 PR 하기 위해서 끌어다 붙였을 가능성도 있지 않을까요? (부정적이라 죄송합니다.)

   https://www.nngroup.com/articles/ux-product-managers-overlap/
   https://nngroup.com/articles/…

   두 직무의 role은 항상 충돌이 있었는데 정답은 없다고 봅니다.
   다만 개인이나 팀의 파워가 아닌 제품과 역할의 관점에서 디자이너의 권한 문제는 충분히 공감되네요.

   PM, PO는 중추를 담당하는 반면, 디자이너는 주어진 걸 바탕으로 잠깐 고민하다 디자인만 찍어내는.
   그게 역할의 전부인 조직을 자주 봐왔는데, 그중에는 디자이너가 전문성을 발휘할 역할을 PM이 담당하는 경우도 있어서 안타깝더라고요.

   아무튼 디자인 중심 경영은 좋은데요. 전략이 현실적인지는 모르겠습니다.
   애플도, 에어비앤비도, 이미 성공사례가 있지만 결과론적인 이야기 같아요.

   '연중 80%의 업데이트는 상반기/하반기 나누어 2번만 크게 진행하고, 나머지 20%의 업데이트는 애자일하게 반복 배포하여 최적화한다고 합니다.'

   줄리 주오도 판단력이 가장 뛰어난 사람이 의사결정을 해야 한다고 말하는데,
   결국 성공할 만한 사람이 성공한 게 아닐까요? 못하면 크게 망하는 건데 말이죠.

   지나가는 경영알못이었습니다.
"
"https://news.hada.io/topic?id=10945","OpenAI DevDay 사전등록 오픈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         OpenAI DevDay 사전등록 오픈

     * 11월 6일에 OpenAI가 주최하는 첫번째 개발자 컨퍼런스 (샌프란시스코)
     * $450
     * 키노트, 개별 세션, 이브닝 리셉션 참가 가능
     * 개별 세션엔 최신 API와 기능, AI기반 제품 개발관련 우수 사례, AI로 새로운 경험을 만든 개발자들의 이야기 등이 포함
     * 자리가 한정적이어서 9/22일 금요일 자정까지만 참가 신청 받을 예정(참가를 위해선 승인 필요)
     * 키노트는 온라인으로 생중계 예정
"
"https://news.hada.io/topic?id=10994","항공사들, 비행기 운항보다 마일리지 프로그램에서 더 많은 수익 창출","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 항공사들, 비행기 운항보다 마일리지 프로그램에서 더 많은 수익 창출

     * 항공사들이 비행기를 운항하는 것보다 마일리지 프로그램에서 더 많은 돈을 벌고 있으며, 최근에 델타 항공이 SkyMiles 프로그램의 변경을 발표하여, Status를 쌓고 혜택을 누리는 것이 훨씬 어려워질 것
     * 델타는 지출한 달러와 공중에서 이동한 마일의 조합에 의존하는 대신, 단일 지표인 지출한 달러를 기반으로 상태를 부여하고, 그것을 얻기 위해 필요한 지출액을 늘리게 될 것
     * 빈번한 비행 프로그램의 변화는 미국 항공 여행 산업의 더 깊은 문제의 증상이며, 결국 의회와 1978년 항공 산업의 규제 해제에 책임이 있음
     * 항공사들은 비행기를 운항하는 것보다는 금융 기관과 같은 것으로 변모하였으며, 실제 돈으로 은행에 판매하기 위해 포인트를 창출하고 있음
     * 은행들은 카드 사용자에게 지출에 대한 포인트를 부여하며, 은행과 신용 카드 회사 모두 카드 사용으로 인한 스와이프 수수료에서 돈을 벌게 됨
     * 항공사들은 포인트가 사용될 때까지 또는 포인트가 잊혀질 경우에는 전혀 비용이 발생하지 않아, 충성도 프로그램이 매우 수익성이 높음
     * 주요 항공사들의 마일리지 프로그램은 항공사 자체보다 더 높게 평가되며, 예를 들어, 유나이티드 항공의 MileagePlus 프로그램은 220억 달러로 평가되었지만, 당시 회사의 시가 총액은 106억 달러에 불과했음
     * 포인트 시스템은 포인트를 적립하는 카드를 가지지 않은 미국인들에게는 나쁘며, 그들은 일반 상품과 서비스에 더 높은 가격을 지불하지만 포인트를 받지 못하므로, 이미 부유한 카드 사용자들의 혜택을 보조하게 됨
     * 항공사들은 화폐인 포인트를 공중에서 창출하고, 그 화폐의 가치와 그것이 어떤 것에 사용될 수 있는 지를 결정하기 때문에, 포인트 시스템이 매우 불투명하고 종종 불공정하게 느껴짐
     * 항공사의 규제 해제는 항공사가 이상한 방식으로 은행과 유사한 기관으로 진화하는 것을 이끌었으며, 항공사들은 그들이 얻을 수 있는 이익을 추구했음 - 금융 부문에 진출하는 것을 포함하여.
     * 규제 해제 시대는 곧바로 합병과 비용 절감으로 전환되었으며, 수십 개의 항공사들이 파산하거나 인수되었으며, 경쟁이 적어져 서비스가 악화됨
     * 규제 해제는 가격을 낮추는 것으로 종종 인정받는 것을 제공하지 못했으며, 비행 비용은 규제 해제 전에 이미 떨어지고 있었고, 규제 해제 후에도 같은 속도로 계속 떨어졌음.
     * 현대화된 규칙 세트는 항공사가 금융화된 전자상거래 플랫폼이 되는 경로를 막을 수 있을 뿐만 아니라, 아마도 그들이 항공 여행을 덜 불편하게 만드는 데 집중하게 할 수 있음

   대한항공 스카이패스 마일리지도 개악된다고 해서 말이 많았는데, 이건 미국도 마찬가지인가 보네요.

        Hacker News 의견

     * 항공사의 수익성 변화: 비행기 운항에서 마일리지 프로그램으로
     * 항공 산업의 역사적 맥락 강조: 1930년대 후반부터 70년대까지 연방 정부가 항공사를 공공 유틸리티로 규제
     * 민간 항공위원회의 결정: 어떤 항공사가 어떤 노선을 운항하고 요금을 얼마나 부과할지 결정
     * 1978년 항공 산업 규제 해제 법안 통과: 시장을 잡기 위한 새로운 전략 도입
     * 규제 해제의 결과: 항공 여행 비용 감소, 안전성 증가, 서비스 품질 하락
     * 자주 비행하는 고객보다 이익을 내는 고객에 초점을 맞춘 대량 지출 프로그램으로 자주 비행하는 고객 프로그램의 진화
     * 2020년 금융 타임스 분석: 월스트리트 대출자들이 항공사 자체보다 항공사의 마일리지 프로그램을 더 높게 평가
     * 항공사의 보상 사업을 최대 가치를 얻기 위해 별도의 회사로 분리할 수 있다는 제안
     * 포인트를 신용카드 스와이프 수수료의 일종의 리베이트로서의 개념 논의
     * 기업이 얼마나 지출하는지에 따라 비즈니스 여행자에게 보상이 주어지며, 이로 인해 가격에 무감각해지고 더 비싼 비행을 선호
     * 포인트 가치 하락과 가격 변동을 통한 가치 하락 숨기기에 대한 항공사 비판
     * 포인트와 엘리트 상태의 가치 하락이 항공사에 대한 충성도 감소로 이어짐
     * 소소한 혜택을 위한 항공사 상태 추구 비판, 요금 계획 및 최적화가 더 유익하다는 제안
     * 포인트는 만기되거나 인출할 수 없으므로 은행 돈이 아닌 선불 자산 및 서비스
     * 모든 기업이 일정 규모에서 은행이 되며, 실제 제품 개발보다 자본 구조를 최적화하는 것에서 더 많은 한계 수익을 얻는다는 제안
"
"https://news.hada.io/topic?id=10956","Snowflake의 최신 마케팅 데이터 스택 2023 [52p PDF]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Snowflake의 최신 마케팅 데이터 스택 2023 [52p PDF]

     * 마케팅 데이터 스택의 진화
     * 마케팅을 재편하는 4가지 힘
          + AdTech 와 MarTech 의 융합: 벽이 무너지고 있다
          + AI/ML: LLM의 부상
          + 개인정보 보호: 과제를 해결하기
          + 통합 데이터: Single Source of Truth and Value
     * 마케팅 도구
          + 분석 및 데이터 캡쳐 : Amplitude, Data.ai, Funnel, Heap, Mixpanel, Piano, RudderStack, Snowplow
          + Enrichment : Crisp, Equifax, Fetch, G2, GlobalData, Numerator, SafeGraph, Similarweb, TRUESTAR, Zoominfo, Bond, Affinity Solutions
          + Identity & Onboarders: Acxiom, Experian, FullContact, LiveRamp, MediaWallah, Merkle's, Neustar(TransUnion), Verisk Marketing Solutions, Aidentified, UID 2.0
          + Customer Data Activation: Acquia, Amperity, Braze, Census, Hightouch, HubSpot, Iterable, Simon Daa, Twilio Segment, Zeta, ActionIQ, GrowthLoop, MessageGears
          + 광고 플랫폼: Beeswax, FreeWheel, Magnite, OpenX, StackAdapt, The Trade Desk, Yieldmo, OpenAP, Sharethrough
          + Measurement & Attribution: Comscore, DoubleVerity, IQVIA, NCSolutions, Nielson, Rockerbox, VideoAmp, ADImpact, EDO
     * 기본 도구
          + Integration & Modeling: dbt, Fivetran, Informatica, Matillion, Talend, Adverity, Airbyte, Rivery
          + Business Intelligence: Microsoft PowerBI, Mode, Sigma, Tableau, ThoughSpot, Domo, Microstrategy
          + AI & Machine Learning: Alteryx, Amazon SageMaker, Dataiku, DataRobot, Hex's SAS, Peak's RelationalAI
          + Privacy-Enhancing Technologies: Habu, OneTrust, Samooha, Lockr, Optable's
     * Snowflake 데이터 클라우드: 현대 마케팅 데이터 스택의 기초

   PDF 링크 https://snowflake.com/wp-content/uploads/…
"
"https://news.hada.io/topic?id=10995","v0 - Vercel이 만든 생성형 UI 시스템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       v0 - Vercel이 만든 생성형 UI 시스템

     * AI 모델을 사용해서 프롬프트에 기반의 UI 코드를 생성
          + shadcn/ui 와 Tailwind CSS 에 기반한 React 코드
     * 프롬프트 입력하면 AI가 3개의 UI를 생성해서 보여주고, 선택해서 복사하거나 그중 일부를 선택해서 더 Refine 가능
     * Vercel 사용자들의 데이터는 훈련에 이용되지 않았으며, 오픈소스 및 합성 데이터 기반
     * 사용자가 생성한 디자인은 다시 학습에 재 이용됨
     * 현재 알파단계라 무료
     * 생성된 디자인은 상업용도로 사용 가능

   이거 상당히 쓸만합니다

   오 한번 써볼라 했는데 대기열에 등록하고 기다려야 하는군여..
"
"https://news.hada.io/topic?id=10991","Splunk 인수에 대한 내부자 거래?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Splunk 인수에 대한 내부자 거래?

     * 어제 누군가 22,000달러에 내일 만기되는 스플렁크 주식에 $127 콜을 오픈
     * 오늘 Cisco Systems가 스플렁크를 280억 달러에 인수한다고 발표했고, 스플렁크가 20% 상승
     * 어제 0.04달러였던 계약은 현재 18.30달러
     * 그들은 오늘 45,650%의 수익을 내고 엑싯함

        Hacker News 의견

     * Splunk (SPLK)에 관련된 특정 거래에 대한 기사, 거래자가 SPLK가 주당 $127에 도달하도록 550k 옵션을 구매
     * SPLK가 주당 $127에 도달할 가능성이 낮아 각 옵션이 $.04에 거래됨
     * 그러나 SPLK는 주당 $145에 도달하여, 옵션 가치는 각각 $18로 상승, 거래자에게 약 $10m의 이익을 가져다줌
     * 이 거래가 내부자 거래로 간주될 수 있다는 의견이 있어 법적 조사가 이루어질 수 있음
     * 거래자가 인수에 대한 예감이나 의심을 가졌지만 직접 거래에 참여하지 않았다면 이런 종류의 거래가 내부자 거래로 간주되는지에 대한 논란
     * 거래의 합법성에 대한 의문이 제기되며, 합법적이라 해도 거래자는 앞으로 몇 달 동안 증언을 해야 할 수도 있다는 의견
     * 초기 투자 금액에 대한 수정, 거래자가 처음 주장한 $22,000이 아닌 $1,040만 투자했으며, $1k를 $475k로 전환
     * 이것이 옵션 스프레드 전략의 일부일 수 있다는 의견, 거래자가 At The Money (ATM) 또는 Slightly Out of The Money (OTM) 콜을 팔고 깊은 OTM을 사서 헤지했을 수 있음
     * 이런 거래의 빈도에 대한 논의도 있으며, 20K의 옵션을 구매하는 것이 흔한 일인지 아니면 드문 행운인지에 대한 의문 제기
"
"https://news.hada.io/topic?id=11000","Ask GN: 국내 isp가  r2.cloudflarestorage.com를 막아버린건가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Ask GN: 국내 isp가 r2.cloudflarestorage.com를 막아버린건가요?

   r2.cloudflarestorage.com 가 국내에서는 도메인이 막혀버린것 같습니다.

   거참 그냥 쉽게 막아버린거 같은데..

   어디다 말을 해야 할까요?

   kisa가 kisa했네요.

   솔직히 능력있으면 왜 kisa가겠습니까

   차단 해제되었다고 합니다.

   LG U+ DNS인데 r2와 전혀 무관한 transfer.sh도 접속이 되지 않아 체크해보니 dns서버에서 IPv6 주소만 반환하고 있네요. 오히려 r2.cloudflarestorage.com는 정상적으로 반환됩니다. 차단은 아닌것 같고(차단페이지를 띄우려면 어느 아이피건 반환해야 하는데 그렇지 않고 있습니다) 장비 오류로 보입니다.

   정확히는 차단페이지를 띄워야 하는데 제대로 리턴을 못하는 케이스 아닐까 생각됩니다만. 아무튼 IPv4를 리턴하지 않는것이나 로컬로 연결하는것 둘다 정상은 아니니...

   SKT측에 문의해봤는데 KISA측 차단 요청 (사유: 악성앱 유포지)으로 차단되었다고 합니다. https://m.dcinside.com/board/svr/9936

   아 정확히는 저 문의는 r2.dev 도메인 관련 문의라서 r2.cloudflare.com의 차단 사유와는 다를 수도 있긴 하겠네요. 이쪽도 DNS에서 로컬호스트로 응답해버립니다.

   아니 cloudflarestorage... storage를 빼먹었군요.

   국내 통신사가 지들 멋대로 사이트를 차단할 권한이 있나요?
   이게 맞나... 싶네요.

   일단 커스텀 도메인으로 R2 사용하던 서비스는 정상적으로 동작하고 있는데,
   S3 API에 직접 연결하지 않고, Worker 거쳐서 연결하게 해둬서 정말 다행이네요.

   하마터면 영문도 모른 채 장애가 발생할 뻔했어요;;

   *업로드도 S3 API에 직접 연결하지 않고

   [루머] 통신사, Cloudflare R2 차단 - 망사용료 이슈 추정
   대한민국 정부, Cloudflare R2 차단.

   이런 글들이 올라왔네요. 아직 루머이긴 합니다만, 아래 말씀하신대로 DNS로 시작해서 이제는 SNI 패킷까지 차단으로 넘어갔다는 얘기도 있습니다.

   SNI 차단을 건 게 아니라, 국내 DNS에서 r2.dev 접속 시 127.0.0.1 으로 바인딩 해버렸습니다. SNI 차단은 방통위 승인 없이 할 수 없습니다. 왜냐면 SNI 차단 관리는 통신사가 자리만 빌려주고 방통위가 직접 관리하기 때문입니다.

   클라우드플레어 공식 디스코드에서 해당 문제에 대해 이야기가 오갔고, 한 유저가 ISP에게 얻은 답변은 이렇습니다:

   ""CF 는 엔터프라이즈 사용자를 제외하고 사용자의 제대로된 망사용료를 지불하지 않고 있다. 지금 차단은 우리의 개정된 법 위반에 대한 조치이고, CF 가 조치하지 않는 이상 차단을 해제하지 않겠다.""

   ...미친듯

   클라우드플레어라... dns들이 난리나던데 그 이유 중 하나로 공격 막으려고 차단한거려나요...?

   kt skt lg 전부 DNS조회가 안되네요.
   s3 호환 r2인 r2.cloudflarestorage.com는 custom domain도 불가능해서 골치아프겠네요.

   r2.dev도 lg에서 쿼리 안되네요

   클라우드플레어 원본: 정상 동작됩니다.
   SNI: 통신사에서 차단한 적 없습니다.
   DNS: 국내 DNS에서 찾지 못했습니다. KT 기준이고 다른 통신사는 모르겠습니다.

   DNS에서 빼먹거나, 고의로 빼거나 한 것 같습니다.

   aws 였으면 난리가 났을텐데.. cloudflare 는 존재감이 없나보군요.

   API 도메인을 막아 버리면 어떻게 합니다= ='
"
"https://news.hada.io/topic?id=10989","Matrix 2.0: Matrix의 미래","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Matrix 2.0: Matrix의 미래

     * 안전하고 분산된 통신을 위한 Matrix 오픈 표준에 대한 중요한 업그레이드인 Matrix 2.0의 출시를 발표
     * Matrix는 9년 이상 운영되어 왔으며, 현재 64,000개 이상의 서버에서 1억 1천만 개 이상의 Matrix ID를 호스팅 중
     * Matrix 2.0은 즉시 로그인/시작/동기화를 위한 Sliding Sync, 산업 표준 인증을 위한 Native OIDC, 대규모 음성 및 비디오 회의를 위한 Native Group VoIP, 더 빠른 방 입장을 위한 Faster Joins 등 여러 주요 개선 사항을 도입
     * Matrix 생태계는 독립적인 클라이언트, 봇, 브릿지, 그리고 오픈 소스 프로젝트에서 Fortune 100 기업에 이르기까지 다양한 조직들에 의해 채택되며 크게 성장했음
     * Matrix 2.0은 중앙 집중식 인터넷 서비스의 위험을 피하기 위해 분산화에 초점을 맞춘 오픈 웹을 위한 누락된 통신 계층을 제공하려는 목표를 가지고 있음
     * 대형 중앙 집중식 메시징 제공업체에 대한 상호 운용성을 의무화하는 유럽 연합의 Digital Markets Act는 Matrix의 목표를 향한 중요한 한 걸음으로 간주됨
     * Matrix 2.0 기능은 이제 테스트를 위해 사용 가능하며, 이를 명세서에 공식적으로 통합하는 데에는 아직 일부 작업이 남아 있음
     * 새 버전은 주로 Element가 주도하였으며, 그들의 새로운 Element X 클라이언트를 새로운 Matrix 2.0 기능의 테스트 베드로 사용
     * 글에서는 Sliding Sync, Native Matrix Group VoIP, 그리고 Native Open ID Connect의 구현에 대해 자세히 논의하며, 개발 과정에서 마주친 도전과 해결책을 강조
     * Matrix 2.0에 대한 향후 작업은 matrix.org에서 Native OIDC를 활성화하고, Sliding Sync를 재작업하고, Matrix 2.0 MSC를 안정화하고 성숙시키며, matrix-rust-sdk에 암호화 백업을 추가하고, Native Matrix Group VoIP 호출을 위한 전체 메시 지원을 재도입하고, spec이 완성되면 큰 Matrix 2.0 출시 파티를 개최하는 것을 포함함

        Hacker News 의견

     * 새로운 Element X에 대한 사용자들의 흥분, 그러나 Sliding Sync 프록시를 지원하기 위한 필요성에 대한 일부 우려 표현.
     * 기술에 능숙한 사용자 그룹이 Discord에서 자체 호스팅된 개인 Matrix 서버로 이동하고, 지금까지 긍정적인 경험을 가지고 있음.
     * Matrix의 Nebuchadnezzar 취약점 해결 진행 상황과 Olm/Megolm 대신 MLS로 전환할 계획에 대한 의문.
     * 두 년 이상 Synapse 홈서버를 운영해온 사용자들은 소소한 문제에도 불구하고 만족을 표현하나, Sliding Sync와 같은 새로운 기능을 계속 업데이트하는 것이 도전적임.
     * Matrix와 Element 사이의 명명 규칙에 혼란을 느끼는 일부 사용자들, Element는 클라이언트이고 Matrix는 서버 또는 프로토콜 표준임.
     * 새로운 클라이언트에 대한 지속적인 작업에도 불구하고, 모든 장치가 동시에 울리는 버그와 같은 기본 기능 문제가 여전히 해결되지 않은 것에 대한 실망.
     * Matrix의 개발이 개인 통신을 위해 Matrix로 이동하는 사람들에게 제공되는 조언에 어떻게 영향을 미칠지에 대한 사용자들의 호기심, 오픈 소스, 오픈 표준, 분산화의 중요성을 강조함.
     * 아직 Element X의 웹 버전이 없어, 주로 웹 버전을 사용하는 일부 사용자들에게는 불편함.
     * 데스크톱 Electron 버전의 성능 향상을 위한 계획이 있는지에 대한 사용자들의 호기심.
     * 비디오 통화를 위한 오픈 프로토콜 및 오픈 소스 클라이언트 구현인 Element Call이 사용자들에게 인기, Jitsi와 같은 대안보다 더 직관적이라는 의견도 있음.
"
"https://news.hada.io/topic?id=10978","Microsoft, 신개념 단백질 생성 AI EvoDiff를 오픈소스로 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Microsoft, 신개념 단백질 생성 AI EvoDiff를 오픈소스로 공개

     * 모든 질병의 기본 구성 요소인 단백질의 이해 및 생성은 새로운 약물 및 치료법으로 이어질 수 있음
     * 현재 실험실에서 단백질을 설계하는 과정은 단백질 구조와 아미노산 순서를 생성하는 것을 포함하여 계산 및 자원이 많이 필요함
"https://news.hada.io/topic?id=10909","Unity 이후의 게임 개발","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Unity 이후의 게임 개발

     * Unity의 경우는 예측 가능한 재난이었음
          + 수익의 절반이상이 엔진이 아닌 광고에서 나옴. 즉 광고시장에 영향을 받음

Unity의 대안

     * Godot (C#, GDScript, visual)
          + 가장 많이 언급되는 오픈소스 대안
          + 하이엔드 엔진 기능보다는 초보다들이 빠르게 시작하는데 집중
          + 공통된 불만은 ""not quite there yet""
          + 콘솔 대응이 부족
     * Unreal (visual)
          + 소개할 필요없는 엔진. AAA 게임들중 다수가 사용
          + Nanite, Lumen, Metahuman 같은 고급 기능을 제공하지만 복잡해서 시작하기 어렵고 더 많은 전문 지식이 필요
          + 하지만 요즘은 Unreal 로 게임 출시하는게 Unity 보다 실제로 더 쉬움
     * Defold (Lua)
          + Godot 과 Unreal 만큼 많이 언급
          + 2D 및 모바일 게임에 적합
          + 이미 많은 모바일 게임들이 이 엔진으로 출시됨
     * RayLib
          + 엔진이 아니고 라이브러리 형태
          + C++ 같은 언어로 게임을 빠르게 개발할 수 있게 해줌
     * Open 3D (Lua, visual)
          + 아마존이 CryEngine 기반으로 만들던 Lumberyard을 오픈소스로 공개한 것
          + Crytek의 AAA 게임용 엔진에서 시작된 것이므로 학습곡선이 더 어려울 수 있음
     * GameMaker (GML, visual)
          + 2D 게임의 경우에 인기가 많고 초보자에게도 쉬움
          + Undertale, Spelunky 등 많은 유명 2D 게임이 이걸로 제작
     * Unigine (C#)
          + 기본적으로 게임 대상은 아니지만, 게임이 SDK의 타겟 최상단에 있기는 함
     * Bevy (Rust)
          + Rust 개발자들에게 가장 일반적으로 언급
     * Flax (visual)
          + Defold 처럼 들어본 적은 없지만, 꽤 많은 기능세트를 제공
          + 아직 이 엔진을 탑재한 주목할만한 게임이 없음
     * Cocos (JavaScript/TypeScript)
          + 15년전 FarmVille 를 만드는데 사용된 것과 같은 개발 도구 계보
     * Stride (C#)
          + Silicon Studio의 Paradox 엔진(그전엔 Xenko)이 이름을 바꿈
     * Monogame (C#)
     * 그외 Construct, Ogre3D, Solar2D, HARFANG 3D, CryEngine, FNA, libGDX, LÖVE, Fyrox, C4Engine, Hazel, Wicked, TelluSim, heaps.io

   유니티의 대안이 제시된 것 만으로도 뭔가 활력이 생긴 느낌.
   유니티가 쌓아올린 수많은 것들을 무시할 수 없는 게 현실이라고 생각하지만
   실험성 강한 인디는 다른 툴로 빠질 것 같은 느낌이 드네요.

   과거의 수많은 국내.외 상용게임엔진들이 적자로 망해 없어진걸 떠올려보면 유니티엔진의 수익성문제를 너무 손가락질하는 분위기가 저는 좀 아이러니합니다.

   프로덕션과정에서 엔진을 갈아엎자는 이야기들도 너무 쉽게 이야기하는것같고.

   현시점의 팩트는 유니티만큼 개발도구나 학습자료가 풍부한 엔진이 많지 않다는것이고. 단순히 프로그래머의 학습의 문제가 아니라 개발팀 전체의 학습비용을 생각하면 여전히 메리트가 높은 엔진입니다.

   유니티측과 개발자 모두 윈윈하는 방향이 되길 희망합니다

   대체 엔진 언급하는 글 중에 renpy 얘기는 하나도 없네요

   렌파이는 미연시라는 주제로 한정되어 있어 대안책으로 제시될 수 없을듯 합니다.

   실제로 사용해보면 범용 2d 게임 엔진으로서 필요한 기능은 대부분 갖추고 있습니다.

   파이게임을 쓰지 않고 렌파이만으로 게임을 만드는 사람들이 있나 보군요.

   전 이렇게 많은 대안이 제시되긴 하지만 돌고돌아 Unity로 갈 것 같은 기분이 들긴하네요.

   유니티가 인디 개발자와 소규모 개발사를 위한 엔진으로서 많이 어필을 해왔는데, 이번 일로 입을 피해가 상당해보이더군요. 다른 엔진으로 옮겨간다고 하더라도 시간이 걸릴 것이고, 그동안 업계는 위축되고 게이머들이 즐길 수 있는 기회도 줄어들겠죠. 유니티가 지금이라도 다시 생각해봤으면 좋겠습니다.
"
     * EvoDiff는 대상 단백질에 대한 구조 정보가 필요 없이 주어진 단백질 순서에서 고품질, 다양한 단백질을 생성하여 이 과정을 단순화함
     * 오픈소스 EvoDiff는 새로운 치료법, 약물 전달 방법, 산업용 화학 반응을 위한 효소를 생성하는 데 사용될 수 있음
     * '단백질 순서가 모든 것이다'라는 원칙에 따라 작동하여, 단백질 공학에서 구조-기능 패러다임에서 벗어나 새로운 단백질을 설계함
     * EvoDiff 프레임워크는 OpenFold 데이터셋과 UniRef50에서 가져온 다양한 종과 단백질 기능 클래스의 데이터에 대해 훈련된 6억 4천만 매개변수 모델을 기반으로 함
     * 현대 이미지 생성 모델과 유사한 확산 모델로, 거의 모두 노이즈로 이루어진 시작 단백질에서 점차 노이즈를 제거하고 단백질 순서에 가깝게 이동하는 방법을 학습함
     * 새로운 단백질을 생성하고 기존 단백질 설계의 공백을 채우며, 특정 기능적 목표를 충족시킴
     * 단백질의 구조가 아닌 순서 공간에서 단백질을 설계하여, 생물학과 질병에서 중요한 역할을 하는 무질서한 단백질을 합성할 수 있게 함
     * 대한 연구는 아직 동료 평가를 받지 않았으며, 프레임워크가 상업적으로 사용될 수 있기 전에 더 많은 확장 작업이 필요함
     * EvoDiff 팀은 모델이 생성한 단백질을 실험실에서 테스트하여 생존 가능성을 판단할 계획이며, 성공적이라면 프레임워크의 다음 세대 작업을 시작할 것임
"
"https://news.hada.io/topic?id=10957","이메일, 500마일 이상 보낼 수 없는 현상 (2002)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    이메일, 500마일 이상 보낼 수 없는 현상 (2002)

     * 트레이 해리스, 경험 많은 소프트웨어 엔지니어의 유머러스한 일화인 기사는 그가 캠퍼스 이메일 시스템을 운영하면서 마주한 불가능해 보이는 문제에 대한 것입니다.
     * 통계학과의 학과장은 그들의 위치에서 500마일 이상 떨어진 곳으로 이메일을 보낼 수 없다고 보고했습니다.
     * 주장의 터무니없음에도 불구하고, 해리스는 500마일 이상 떨어진 곳으로의 이메일이 실제로 실패하고 있다는 것을 발견했습니다.
     * 조사 후, 해리스는 최근의 서버 패치가 실수로 이메일 시스템을 Sendmail 8에서 Sendmail 5로 다운그레이드했다는 것을 발견했습니다.
     * 이 다운그레이드로 인해 시스템은 Sendmail 8 설정 파일을 잘못 해석하여 원격 SMTP 서버에 연결하는 시간 제한을 0으로 설정했습니다.
     * 캠퍼스 네트워크의 100% 스위치드 특성 때문에, 원격 호스트에 연결하는 시간은 라우터 지연보다 목적지까지의 빛의 속도 거리에 의해 주로 결정되었습니다.
     * 이로 인해 약 500마일의 거리에 해당하는 약 3밀리초 이상의 연결 시간 초과가 발생했으며, 이로 인해 특이한 문제가 발생했습니다.
     * 이 이야기는 시스템 구성의 복잡성을 이해하는 것의 중요성과 사소한 변화로 인해 예상치 못한 문제가 발생할 수 있다는 것을 강조합니다.

        Hacker News 의견

     * '500마일 이상 이메일을 보낼 수 없다' 사건과 유사한 이야기를 수집하기 위한 블로그가 생성되었습니다.
     * 해당 블로그는 HackerNews의 여러 다른 스레드에서 논의되었습니다.
     * '500마일 이메일' 사건은 우주의 기본 전송 프로토콜이 드러나는 누출 추상화의 대표적인 예로 간주됩니다.
     * 이 이야기는 Sendmail과 같은 오래된 이메일 시스템에 대한 대화를 촉발하였으며, 사용자들이 90년대 초 이러한 시스템을 설정한 경험을 공유하였습니다.
     * 일부 사용자들은 '500마일 이메일' 문제의 원인에 대해 추측하였으며, TTL(Time To Live)과 연결 시간 초과와 관련된 이론들이 제시되었습니다.
     * '500마일 이메일' 사건 동안 서버를 패치한 컨설턴트는 HackerNews의 활발한 사용자이며, 이 사건에 대해 댓글을 남겼습니다.
     * '500마일 이메일' 이야기는 HackerNews에서 여러 번 논의되었으며, 논의는 2008년까지 거슬러 올라갑니다.
     * 일부 사용자들은 호스트와 일정한 물리적 근접성 내에 클라이언트가 있을 때만 접근할 수 있는 웹사이트를 만드는 것의 실행 가능성에 대해 고민하였습니다.
     * '500마일 이메일' 이야기는 millilightseconds를 마일로 변환하기 위한 'units' 명령의 창의적인 사용으로 기억되곤 합니다.
     * '500마일 이메일' 사건의 정확한 연도에 대한 논란이 있으며, 2002년이 아닌 1997년으로 날짜를 정해야 한다는 제안이 있습니다.
     * 일부 사용자들은 '500마일' 거리를 파악한 사람이 그들의 독특한 사고방식에 대해 더 많은 인정을 받아야 한다고 믿습니다.
"
"https://news.hada.io/topic?id=10975","테라폼의 포크버전 OpenTF가 OpenTofu로 이름을 변경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   테라폼의 포크버전 OpenTF가 OpenTofu로 이름을 변경

     * OpenTF 프로젝트가 공식적으로 OpenTofu로 이름이 변경
     * Hashicorp Terraform과의 법률적 문제를 피하기 위해서 이름 변경이 필요하다는 의견이 대두됨
     * GitHub 커뮤니티 토론을 통해 다양한 의견들 중에서 Tofu를 가장 많은 사람들이 선택
     * 공식적으로 리눅스 재단 산하의 OpenTofu로 리브랜딩되고, GitHub 조직과 저장소의 이름을 일치
     * 바이너리, 명령어, 코드 모두 tofu 를 사용
     * OpenTofu 프로젝트는 계속해서 커뮤니티 주도의 이니셔티브로, 인프라스트럭처 코드(IaC) 솔루션에 초점을 맞추고 있음
     * 이 이름 변경은 프로젝트를 원래 포크된 HashiCorp의 Terraform으로부터 멀어지는 한 단계
     * 핵심 원칙을 유지하고 강력한 오픈소스 IaC 도구를 제공하는 임무를 계속 추구할 것

   Tofu 가 없는데 OpenTofu가 있는것은 이상하지 않냐는 의견도 있고
   Tofu 를 ""Terraform Open and Free for Users"" 라고 생각하면 안되냐는 얘기도 있네요.(물론 이걸 공식적으로 쓰면 법적인 문제가 있음)
     * OpenTF 선언문
     * OpenTF, Terraform의 포크 발표

   그러네요. OpenTofu가 아니라 Tofu가 돼야 하지 않나

        Hacker News 의견

     * OpenTF는 임시 기술 책임자의 발표에 따라 공식적으로 OpenTofu로 이름을 변경하였습니다.
     * OpenTofu는 또한 리눅스 재단에 가입하였습니다, 이는 프로젝트에 있어 중요한 단계입니다.
     * 이름 변경이 아직 OpenTofu Github 조직 페이지에 반영되지 않아 일부 혼란을 야기하고 있습니다.
     * OpenTofu의 새로운 이름과 브랜딩은 일부 사용자들에게 잘 받아들여졌으며, 그들은 이를 일관성 있고 발음하기 쉽다고 느꼈습니다.
     * 그러나 Github 페이지와 공식 웹사이트 모두에서 OpenTofu가 무엇이며 어떤 일을 하는지에 대한 명확한 정보가 부족하다는 비판이 있습니다.
     * 일부 사용자들은 이 프로젝트를 지지하며, 이것이 그것의 전신인 Terraform보다 더 나은 도구가 될 것이라고 믿습니다.
     * 새로운 이름에 대한 의견은 분분하며, 일부는 그것을 귀엽다고 생각하는 반면, 다른 일부는 그것이 좋지 않다고 생각합니다.
     * 이름 변경으로 인해 일부 혼란이 발생하였으며, 일부는 처음에 프로젝트가 Open Type Font와 관련이 있다고 생각했습니다.
"
"https://news.hada.io/topic?id=11007","Show HN: Paisa - 오픈소스 개인 금융 관리자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Show HN: Paisa - 오픈소스 개인 금융 관리자

     * 기사에서는 오픈 소스 개인 재무 관리자 'Paisa'를 소개합니다.
     * Paisa는 잘 알려진 재무 거래 기록 방법인 분개 회계 도구 위에 구축되었습니다.
     * 이 소프트웨어는 모든 재무 데이터가 사용자의 시스템 내에 머무르고 떠나지 않음으로써 사용자의 개인 정보를 보장합니다.
     * Paisa는 모든 저널과 구성 정보를 일반 텍스트 파일에 저장하여 사용자가 버전 관리를 쉽게 유지할 수 있게 합니다.
     * 이 소프트웨어는 이러한 파일에 대한 다른 사람들의 접근을 허용함으로써 협업을 가능하게 합니다.
     * Paisa는 상호 기금, NPS 기금, 주식 보유량의 최신 시장 가격을 추적하여 실시간 재무 업데이트를 제공할 수 있습니다.
     * 이는 지출 추적 및 예산 관리를 돕고, 사용자가 자신의 재무를 효과적으로 관리하는 데 도움을 줍니다.
     * Paisa는 CSV 또는 Excel 시트를 Ledger 저널로 변환하여 데이터 입력 및 관리를 간소화할 수 있습니다.
     * 이 소프트웨어는 또한 은퇴 계획을 돕고, 종합적인 재무 관리 도구를 제공합니다.
     * Paisa는 장기 자본 이득(LTCG)에 적격한 상호 기금과 주식 보유량을 표시하고 세금 수확 계획을 돕습니다.
     * 이 소프트웨어는 사용자가 잘 알려진 재무 결정을 내릴 수 있도록 다양한 시각화를 제공합니다.

        Hacker News 의견

     * 'Paisa'라는 오픈 소스 개인 금융 관리자에 대한 기사
     * 사용자들은 Paisa가 제공하는 기본 데이터에 대한 통제를 평가
     * Paisa가 ledger, 강력한 복식 회계 시스템을 기반으로 구축된 것에 대한 긍정적인 반응
     * 일부 사용자들은 명시되지 않은 이유로 인해 Intuit이 소유한 Simplifi Money에서 벗어나고자 함
     * Plaid 플러그인에 대한 Paisa 제안, Plaid는 미국 은행에서 데이터를 올바르게 추출하는 유일한 서비스로 인식
     * 자동 데이터 가져오기에 대한 요구, 수동 데이터 입력은 여러 계정을 가진 사용자들에게 비현실적으로 여겨짐
     * 금융 계획 및 예측에 초점을 맞춘 도구의 부족, Paisa가 이 분야로 확장할 수 있음을 제안
     * Paisa에서 개념의 문서화 및 구현에 대한 칭찬
     * 일부 사용자들은 국가별 모듈, 세금 계산 등을 만들어 다른 사람들이 기여할 수 있도록 제안
     * 데이터 가져오기 자동화의 도전에 대한 논의, 많은 금융 기관들이 PDF 형식의 데이터를 제공하거나 Plaid와 같은 유료 서비스에 의존
     * 사용자가 Paisa에서 사용된 회계 논리에 의문을 제기, 전통적인 회계 원칙과 모순을 보인다고 제안
     * 세법의 복잡성과 변동성을 고려하여 Paisa 내에서 자신의 세금 모델을 코딩할 수 있는 기능에 대한 관심 표현
     * 사용성을 높이기 위한 다국어 지원 제안
     * 다가오는 비용과 특정 날짜의 계정 잔액을 시각화하는 기능에 대한 요구
     * YNAB4, 인기 있지만 중단된 회계 도구와의 비교, 사용자들은 Paisa가 이 공백을 채울 수 있기를 희망
     * Quicken OFX Import의 부재는 단점으로 여겨지지만, CSV import는 잠재적인 해결책으로 간주
     * 전반적으로, 사용자들은 Paisa에 대해 흥분하고 더욱 테스트해보기를 기대함.
"
"https://news.hada.io/topic?id=10908","Subdomain Center - 모든 서브도메인 찾기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Subdomain Center - 모든 서브도메인 찾기

     * ARPSyndicate의 연구 프로젝트
     * 특정 도메인 명을 넘기면, 해당 도메인의 서브도메인을 모두 찾아서 알려주는 도구
     * Apache의 Nutch, Calidog의 Certstream, OpenAI의 Embedding Models, 그리고 자체 도구를 사용하여 다른 서비스보다 더 많은 서브도메인을 발견
     * 남용을 방지하기 위해 분당 3개까지의 리퀘스트만 허용
     * CLI 도구로도 제공
     * GitHub에 호스팅되어 pip3로 설치가능

   사실 숨기고 싶은 서브도메인이 있을수도 있어서 보안상 문제가 되긴 하겠네요.
   내부 그룹웨어 서버나 관리자 서버 같은 것들요

   원리는 정확히 모르겠지만, 저희 회사쪽을 테스트해보면, 내부에서 사용하는 서버들은 나오지 않는것 같네요. 제가 쓰는 VM 몇개는 제 유저네임이 도메인에 들어가는데, 이게 나올지 궁금했는데/걱정했는데 나오지 않습니다. 다행;;

        Hacker News 의견

     * 본 기사는 사용자가 특정 도메인의 모든 서브도메인을 찾을 수 있게 해주는 도구인 Subdomain.center에 대해 논의한다.
     * 이 도구는 정기적으로 전체 IPv4 범위를 스캔하는 능력으로 알려져 있어, 공개 IP의 어떤 열린 포트도 숨길 수 없게 한다.
     * 또한 이 도구가 Certificate Transparency 로그를 사용한다고 언급되며, 이는 와일드카드 인증서 없이 어떤 HTTPS 서비스도 숨길 수 없음을 의미한다.
     * hackertarget.com과 Detectify 같은 유사한 도구들이 언급되며, Detectify는 예상보다 더 많은 서브도메인을 찾을 수 있는 능력으로 칭찬받는다.
     * 그러나 일부 사용자들은 Subdomain.center가 주장하는 ""모든 서브도메인""을 찾지 못하며, 잘못되거나 오래된 정보를 제공한다고 비판했다.
     * 이 도구는 인증서 투명성에 크게 의존한다고도 언급되며, 이는 공개 CNAME 또는 A 레코드를 가지지 않은 서브도메인을 보고할 수 있음을 의미한다.
     * 일부 사용자들은 또한 이 도구가 주어진 도메인에 대해 활성화된 와일드카드 서브도메인을 결정함으로써 회사의 고객/클라이언트 목록을 파악하는 데 사용될 수 있다고 지적했다.
     * 일부 비판에도 불구하고, 이 도구는 일반적으로 서브도메인을 발견하는데 유용하고 흥미로운 자원으로 간주된다.
"
"https://news.hada.io/topic?id=10985","영국 의회, 모든 인터넷 사용자의 개인정보 보호, 보안, 자유 침해","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 영국 의회, 모든 인터넷 사용자의 개인정보 보호, 보안, 자유 침해

     * 영국 의회, 온라인 안전성을 높이기 위한 '온라인 안전 법안' 통과
     * 비평가들, 온라인 안전 법안이 영국 사용자들의 인터넷을 더욱 검열하고 제한할 것이라 주장
     * 법안의 조항에 따라 영국 통신 규제 기관 Ofcom은 기술 회사들에게 모든 사용자 데이터를 아동 학대 콘텐츠에 대해 검색하도록 요구할 수 있음
     * 이로 인해 회사들은 암호화에 상관없이 데이터를 스캔할 수 있는 기술을 개발하게 될 수 있음
     * 전자 프론티어 재단(EFF)을 포함한 비평가들은 이러한 클라이언트 측 스캔 시스템이 모든 사람의 개인 정보 보호와 보안을 저해한다고 주장
     * 이 법안은 괴롭힘, 데이터 도난, 권위주의 정부 등으로부터 자신을 보호하는 데 필요한 보안을 해칠 수 있음
     * 영국 정부가 최근에 발표한 성명서에서는 종단간 암호화를 우회하는 것과 사용자 개인 정보 보호의 불일치를 인정했지만, 비평가들은 법안의 내용과 정부의 보장이 인권을 보호하는 데 충분하지 않다고 주장
     * 온라인 안전 법안은 영국 정부가 아동에게 부적절하다고 판단한 콘텐츠를 온라인 플랫폼에서 제거하도록 요구
     * 이 법안은 인터넷의 기본 원칙인 익명성과 간단한 접근을 침해하는 해로운 연령 확인 시스템을 도입할 수 있음
     * 비평가들은 아동을 차단하기 위한 연령 게이팅 시스템이 성인들의 개인적이고 익명의 언론 자유를 침해할 수 있다고 경고
     * 앞으로 몇 달 동안, 관찰자들은 영국 정부가 인터넷을 규제하기 위해 이 새로운 권한을 어떻게 사용할지를 발표하는 규정을 주시할 것
     * 규제 기관이 암호화된 서비스에 위험한 백도어를 만들도록 요구한다면, 암호화 메시징 서비스는 사용자를 보호하기 위해 영국에서 철수할 수 있음

        Hacker News 의견

     * 영국 의회, 온라인 안전 법안(OSB) 통과, 영국을 온라인에서 가장 안전한 장소로 만들기 위한 목표
     * 비평가들, 법안을 통과시킨 정치인들이 기술 관련 이슈에 대해 논의할 자격이 없으며 법안의 영향을 이해하지 못할 수 있다고 주장
     * 법안의 조항, 영국 통신 규제 기관 Ofcom이 기술 회사에게 모든 사용자 콘텐츠를 아동 학대 콘텐츠에 대해 스캔하도록 요구, 애플의 CSAM과 유사
     * 비평가들, 이로 인해 테러, 일반적인 범죄, 극단적인 정치적 견해, 혐오 발언 등 다른 이유로 스캔이 확대될 수 있다는 우려
     * 법안, 종단간 암호화된 메시지와 파일에도 영향을 미칠 수 있으며, 회사들이 암호화에 상관없이 스캔할 수 있는 기술을 개발하도록 강제할 가능성
     * 일부 영국인들, 법안에 대한 무관심 표현, 주류 미디어의 보도 부족
     * 기술 회사들이 정부의 통제에 저항하고, 정부가 자신들의 시민을 규제하도록 요구하는 촉구
     * 사용자의 개인 정보 보호가 아동 보호에 이차적이어서는 안 된다는 주장, 법안이 아동 착취를 방지하는 데 효과적인지 의문
     * 이러한 법안들이 검열 문제와 언론 자유의 손실을 부각시킬 수 있다는 믿음
     * 법안, 영국 공중과 야당들의 대부분 지지, 법이 충분히 강력하지 않다는 느낌
     * Whatsapp, Signal, Apple과 같은 기술 회사들이 법안에 어떻게 반응할지에 대한 불확실성
     * 일부 개인들, 법안에 대해 자신의 대표자에게 연락, 개인 정보 보호와 표현의 자유에 대한 우려 표현
"
"https://news.hada.io/topic?id=10955","Go 1.22에서 for 루프 수정하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Go 1.22에서 for 루프 수정하기

     * 다가오는 Go 1.22 릴리즈는 많은 회사에서 생산 문제를 일으킨 for loop 범위의 일반적인 오류를 수정할 계획입니다.
     * 문제는 반복의 끝 이후에 루프 변수에 대한 참조가 유지되어 의도하지 않은 새로운 값을 가지게 될 때 발생합니다.
     * 이 문제는 동시 및 비동시 Go 코드에서 모두 흔하며, 변수에 대한 참조가 반복을 초과하는지 분석하는 복잡성 때문에 식별하고 수정하기 어려웠습니다.
     * 이러한 실수를 식별하는 기존 도구들은 종종 거짓 부정 또는 거짓 긍정을 초래하여 불필요한 코드 변경이나 간과된 문제를 야기합니다.
     * Go 1.22에서 제안된 수정은 for 루프가 반복 범위 대신 루프 범위를 가지도록 변경하여 이러한 종류의 실수와 부정확한 도구의 필요성을 제거할 것입니다.
     * 하위 호환성을 유지하기 위해, 새로운 의미론은 go.mod 파일에서 Go 1.22 이상을 선언하는 모듈에 포함된 패키지에서만 적용됩니다.
     * 개발자들은 특정 패키지에서 의미론이 변경되는 시기를 제어할 수 있으며, 기존 코드는 현재처럼 계속 작동할 것입니다.
     * Go 1.21에는 환경에서 GOEXPERIMENT=loopvar를 설정하여 활성화할 수 있는 범위 변경의 미리보기가 포함되어 있습니다.
     * 이 변경 사항은 Google에서 광범위하게 테스트되었으며, 생산 코드에서 보고된 문제는 없습니다.
     * 그러나, 루프 변수 문제로 인해 원래 테스트하려던 내용을 테스트하지 못한 일부 테스트는 수정해야 했습니다.
     * Go 1.21의 loopclosure 분석기는 이러한 종류의 문제를 식별하고 보고하는 데 개선되어, 개발자들이 Go 1.22에서의 변경에 대비할 수 있도록 도움을 줍니다.
     * 이 변경에 대한 자세한 정보는 설계 문서와 FAQ에서 찾을 수 있습니다.

        Hacker News 의견

     * 'Go 1.22'에서 'for loops' 문제에 대한 논의, 클로저에서 루프 변수의 잘못된 사용에 초점
     * 클로저에서 루프 변수의 잘못된 사용 문제는 새로운 것이 아니며, 1992년 Lisp 언어로 거슬러 올라감
     * C# 언어 팀도 이 문제에 직면하고 C# 5.0에서 이를 해결하기 위해 중대한 변경을 시행함
     * Go 1.21은 Go 1.22 이후를 선언하는 코드를 컴파일하지 않아, 새로운 의미에 의존하는 코드가 오래된 의미로 컴파일되지 않음을 보장함
     * 이 변경이 현재의 행동에 의존하는 프로그램을 중단시킬지에 대한 우려가 있음
     * 패키지가 1.22를 고정하고 사용자가 1.18로 컴파일하는 경우 실제로 어떻게 작동할지에 대해 일부 사용자들이 의문을 제기함
     * 이 변경이 메모리 할당 및 루프 성능에 미치는 영향에 대한 질문도 있음
     * 일부 사용자들은 Python과 같은 다른 언어에서 비슷한 문제를 겪은 경험을 공유함
     * Go 1.22의 변경은 언어 구문의 문제를 해결하는 방법으로 보이지만, 한 파일에서 선언된 버전을 알아야 다른 파일의 행동을 이해할 수 있기 때문에 일부 사용자들에게는 직관적이지 않게 느껴짐
"
"https://news.hada.io/topic?id=11018","더 적은 학습 데이터와 작은 모델로 더 큰 언어 모델을 능가하는 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 더 적은 학습 데이터와 작은 모델로 더 큰 언어 모델을 능가하는 기술

     * 대규모 언어 모델(Large Language Models, LLMs) 배포의 어려움에 대한 기사: 크기와 연산 요구 사항으로 인해 많은 연구팀, 특히 낮은 대기 시간 성능이 필요한 응용 프로그램에게 접근이 어려움
     * 이러한 도전을 극복하기 위해, 세부 조정이나 증류를 사용하여 훈련된 작은 전문 모델이 종종 배포됨. 그러나 이러한 방법들은 인간이 생성한 라벨이나 대량의 라벨이 없는 데이터가 필요한 등 자체적인 제한이 있음
     * 저자들은 ""단계별 증류""라는 새로운 메커니즘을 소개하며, 이를 통해 표준 세부 조정이나 증류 접근법에 필요한 것보다 훨씬 적은 훈련 데이터로 작은 과제별 모델을 훈련시킬 수 있음
     * 이 메커니즘은 벤치마크 데이터셋의 예제 80%만을 사용하여 770M 파라미터 T5 모델이 몇 번의 샷으로 프롬프트된 540B PaLM 모델을 능가하게 하며, 표준 접근법에 필요한 것보다 훈련 데이터가 훨씬 적은 700배 이상의 모델 크기 축소를 보여줌
     * 단계별 증류의 핵심 아이디어는 LLMs에서 정보가 많은 자연어 이유를 추출하고, 이를 사용하여 작은 모델을 더 효율적으로 훈련시키는 것
     * 이 과정은 두 가지 주요 단계로 구성: 첫째, 몇 번의 샷으로 CoT 프롬프트를 사용하여 LLMs에서 이유를 추출하고, 둘째, 훈련 과정을 다중 과제 문제로 구성하여 이유를 작은 모델 훈련에 포함시킴
     * 저자들은 세 가지 다른 NLP 작업에 걸친 네 가지 벤치마크 데이터셋에서 실험을 진행하였고, 단계별 증류 방법이 표준 세부 조정에 비해 훈련 데이터가 훨씬 적게 사용하여 더 나은 성능을 달성함을 발견함
     * 단계별 증류 메커니즘은 Google Cloud Platform인 Vertex AI에서 비공개 미리보기로 사용 가능
     * 이 연구는 Cheng-Yu Hsieh, Chun-Liang Li, Chih-Kuan Yeh, Hootan Nakhost, Yasuhisa Fujii, Alexander Ratner, Ranjay Krishna, Chen-Yu Lee, 그리고 Tomas Pfister에 의해 수행되었음.

        Hacker News 의견

     * 크기와 사용성의 최적 균형 때문에 더 작은 전문가 모델이 대부분의 응용 프로그램을 지배할 것으로 예상됩니다.
     * T5를 사용한 디스틸 모델은 인코더-디코더 아키텍처가 여전히 관련성이 있을 수 있음을 제안합니다.
     * 접근 방식이 과도하게 복잡하지 않아, Large Language Models (LLMs) 분야에서 아직 탐색해야 할 것이 많음을 시사합니다.
     * LLMs의 미래는 이런 스타일로 훈련된 전문가 모델의 혼합을 포함할 수 있습니다.
     * LLM, Machine Learning (ML), Artificial Intelligence (AI) 분야에서의 활동과 진보 수준이 인상적입니다.
     * Nvidia와 같은 하드웨어가 비싼 경우 이러한 최적화는 가치가 있습니다.
     * 가장 효과적인 모델은 멀티모달이며, 신중하게 맞춤화된 핵심 교육 과정으로 훈련될 가능성이 높습니다.
     * LLM의 훈련 데이터가 디스틸 및 과제별 모델보다 적은 이유에 대한 질문이 있습니다.
     * Reinforcement Learning from Human Feedback (RLHF)가 최첨단 LLM만큼 잘 수행하기 위해 더 작은 모델에 필요할지에 대한 추측이 있습니다.
     * 큰 LLM에서 많은 용량이 사용되지 않는지, 아니면 작은 언어 모델이 단순히 추론 작업을 모방하는지 여부는 불분명합니다.
     * 최대 144GB의 사용 가능한 GPU 메모리를 지원하는 Mac Studio는 LLM 서비스 공간에서 사용될 수 있습니다.
     * Facebook이 사용자의 모든 채팅 기록에 LLM을 훈련시킬 수 있을지에 대한 제안이 있습니다.
"
"https://news.hada.io/topic?id=10963","The Pirate Bay의 20주년 기념","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        The Pirate Bay의 20주년 기념

     * 전 세계적으로 인정받는 토렌트 사이트인 The Pirate Bay가 20주년을 맞이했습니다.
     * 2003년 해커와 활동가 그룹에 의해 설립된 이 사이트는 처음에는 작은 스웨덴 BitTorrent 추적자였습니다.
     * 수많은 법적 도전과 법 집행과의 충돌에도 불구하고 The Pirate Bay는 오늘날에도 운영 중입니다.
     * 이 사이트는 처음에는 Gottfrid Svartholm, 별명 Anakata가 멕시코에서 호스팅하였고, 이후 스웨덴으로 이동하여 Pentium III 1GHz 노트북에 256MB RAM으로 호스팅되었습니다.
     * The Pirate Bay는 2006년 스웨덴 경찰에 의한 급습을 포함하여 상당한 법적 압박에 직면했습니다.
     * 그럼에도 불구하고, Fredrik Neij, 별명 TiAMO가 백업한 덕분에 사이트는 3일 만에 부활하였습니다.
     * 사이트의 신속한 회복과 법적 압박에 대한 저항은 창립자들을 많은 사람들의 영웅으로 만들었고, 이로 인해 전 세계적인 인식과 지지를 받게 되었습니다.
     * 그러나 이 급습은 또한 범죄 조사를 초래하였고, 이로 인해 사이트의 몇몇 창립자들에게는 감옥형이 선고되었습니다.
     * 사이트는 추적자의 제거, 마그넷 링크의 도입, 그리고 그 설치의 더욱 분산화를 포함하여 수년 동안 여러 변화를 겪었습니다.
     * 오늘날, The Pirate Bay는 스팸과 악성 소프트웨어로부터 사이트를 보호하기 위해 헌신적인 자원봉사자 팀에 의해 유지되고 있습니다.
     * 그것의 격동적인 역사에도 불구하고, The Pirate Bay는 2021년에 자체 '암호화폐' 토큰을 발행하는 등 계속해서 뉴스 헤드라인을 장식하고 있습니다.
     * The Pirate Bay의 미래는 불확실하지만, 지난 20년 동안 파일 공유 세계에 상당한 영향을 끼쳤습니다.

        Hacker News 의견

     * Bram Cohen이 주로 개발한 BitTorrent 프로토콜은 그의 탄탄함과 효율성으로 인해 존경받으며, 정점에서는 인터넷 트래픽의 상당 부분을 촉진했습니다.
     * Darknet Diaries 팟캐스트의 PirateBay 에피소드는 사이트의 역사에 대한 흥미로운 통찰력을 제공하며, 창립자 중 한 명과의 인터뷰를 포함합니다.
     * PirateBay에서 가장 오래된 활성 토렌트는 2004년 3월 25일에 처음 업로드된 스웨덴 코미디 쇼 ""High Chaparral"" 에피소드입니다.
     * PirateBay의 창립자 중 한 명인 Peter Sunde는 토렌트 사이트의 정체성과 몇 개의 큰, 인기 있는 토렌트 사이트만이 가지고 있는 취약성을 보호하기 위한 혁신의 필요성에 대해 우려를 표현했습니다.
     * 토렌트의 미래는 Distributed Hash Tables (DHT)에 있다고 보지만, Kademlia와 같은 내장 검색 기능의 부재는 중대한 실수로 간주됩니다.
     * PirateBay의 역사는 그들의 자체 그림을 통해 추적할 수 있습니다.
     * PirateBay의 20주년은 ""Talk Like a Pirate Day""와 동시에 일치하는데, 이는 일부 사람들에게는 적절하게 재미있게 느껴집니다.
     * 일부 비평가들은 PirateBay가 지난 20년 동안 모든 면에서 Gnutella, 또 다른 P2P 파일 공유 시스템에 비해 열세였다고 주장합니다.
"
"https://news.hada.io/topic?id=10902","H2ORestart - HWP, HWPX 문서 편집을 위한 LibreOffice 확장 프로그램","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          H2ORestart - HWP, HWPX 문서 편집을 위한 LibreOffice 확장 프로그램

HWP 및 HWPX 형식 문서를 LibreOffice에서 편집 가능하게 해주는 확장 프로그램

     * LibreOffice에서 이미 지원하는 구버전의 HWP97 한글 형식 외에 .hwp, .hwpx 형식의 문서를 지원
          + HWP97: 확장자가 .hwp으로 동일하지만, 2000년대 이후 한컴오피스에서 사용하지 않는 형식
     * LibreOffice에서 지원하는 형식으로 모두 변환가능 (.odt, .docx, .pdf ...)
     * LibreOffice 확장 웹사이트를 통해서도 설치 가능
          + LibreOffice Extension Link
     * HWP 및 HWPX로 저장하는 기능은 지원하지 않음
     * Java 기반
     * GPLv3 License

   오픈소스 hwp 하면 항상 이 사건이 생각나네요.
   hwp 처리기 개발 중단 및 프로젝트 삭제
   벌써 10년이 흘렀군요.
"
"https://news.hada.io/topic?id=11006","Zig 프로그래밍 언어 배우기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Zig 프로그래밍 언어 배우기

     * Zig 설치하기
     * 언어 개요
     * 스타일 가이드
     * 포인터
     * 스택 메모리
     * 힙 메모리 및 할당자
     * 제네릭
     * Zig로 코딩하기

   zig 한국 커뮤니티 입니다.
   https://discord.ziglang.kr
"
"https://news.hada.io/topic?id=10933","OpenRA - 현대 시대를 위해 재구축된 클래식 전략 게임들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   OpenRA - 현대 시대를 위해 재구축된 클래식 전략 게임들

     * 클래식 전략 게임 재현에 헌신하는 프로젝트인 OpenRA가 상당한 변화와 개선을 동반한 새로운 플레이테스트를 출시했습니다.
     * 새로운 플레이테스트는 새로운 레드 얼럿 미션 ""Soviet13b""와 여러 버그 수정, Lua 스크립트가 포함된 맵을 허용하는 전용 서버 등을 포함합니다.
     * 플레이테스트는 비행기 조종에서 드물게 발생하는 시각적인 떨림, 타일 오류로 인한 맵 임포터 충돌, 이전에 작동하지 않던 저전력 알림 등을 해결합니다.
     * 별도로 출시된 Tiberian Dawn HD 플레이테스트는 다운로드 가능하며, 주요 20230801 플레이테스트와 멀티플레이어 호환성이 있습니다.
     * 원래의 플레이테스트-20230801 발표는 Tiberian Dawn의 새로운 Covert Ops 미션, 새로운 Red Alert 미션, Counter-Strike 미션을 강조했습니다.
     * 플레이테스트는 맵 스크립터를 위한 개선된 오류 보고를 위한 새로운 사용자 정의 Lua 래퍼, 모듈식 자산 설치 프로그램, 제3자 모딩 지원을 위한 재작업된 스프라이트 시퀀스를 도입했습니다.
     * 이번 릴리스는 C&C Remastered Collection 지원을 향한 중요한 진전을 포함하며, 새로운 EA 앱과의 호환성을 포함합니다.
     * ""Tiberian Dawn HD"" 플레이테스트의 성능, 메모리 사용량, 로딩 시간은 아직 최적화되지 않았습니다.
     * OpenRA 팀은 모든 사람들이 플레이테스트에 참여하고 그들의 포럼, Community Discord, GitHub에서 문제를 보고하도록 권장합니다.
     * 팀은 버그 수정, 소소한 요청 기능, 대규모 개편 준비를 중점으로 하는 다가오는 OpenRA 릴리스에 대해 기대감을 표현했습니다.

        Hacker News 의견

     * OpenRA의 Red Alert는 고전 전략 게임의 현대적 재해석으로, 원래의 재미와 빠른 페이스의 게임 플레이를 유지하면서 현대의 연결성과 디스플레이 해상도에 맞게 업데이트했습니다.
     * 게임의 빠른 설치와 크로스 플랫폼 호환성은 즉흥적인 LAN 파티에 이상적입니다.
     * Warcraft 2와 Starcraft 1과 같은 다른 고전 전략 게임들도 Stratagus.com을 통해 재상상되었습니다.
     * OpenRA의 Tiberian Dawn은 정기적인 플레이어들에게 인기 있는 선택으로, 도전적이지만 보람찬 게임 경험을 제공합니다.
     * 일부 플레이어들은 이러한 리메이크 게임의 중독성이 그들의 여가 시간을 많이 소비할 수 있다고 주의를 당부합니다.
     * OpenRA는 필요한 자산을 자동으로 다운로드하고 ""미션 저장"" 기능을 통해 플레이어가 게임을 일시 중지하고 재개할 수 있게 하는 능력으로 칭찬받습니다.
     * 이 게임은 원본의 정통한 재현으로 간주되며, 플레이어들이 그들의 어린 시절 경험을 다시 살릴 수 있게 하고 새로운 세대와 공유할 수 있게 합니다.
     * CnCNet.org는 고전 Command & Conquer 게임을 현대 하드웨어에서 플레이할 수 있게 하는 또 다른 플랫폼입니다.
     * OpenRA는 부모와 자녀 사이의 공유 게임 경험을 촉진하는 능력으로도 인정받습니다.
"
"https://news.hada.io/topic?id=10934","OpenDocument가 SQLite를 사용하면 어떨까? (2014)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 OpenDocument가 SQLite를 사용하면 어떨까? (2014)

     * 이 기사는 OpenDocument 파일 형식, 특히 OpenDocument Presentation (ODP) 형식의 컨테이너로 SQLite를 사용하는 아이디어를 탐구하며, 현재의 ZIP 형식 대신 이를 사용하는 것을 제안합니다.
     * SQLite를 사용하는 잠재적 이점으로는 더 작은 문서, 더 빠른 파일/저장 시간, 더 빠른 시작 시간, 더 적은 메모리 사용, 문서 버전 관리, 그리고 전반적으로 더 나은 사용자 경험 등이 있습니다.
     * OpenDocument 파일 형식은 워드 프로세서, 스프레드시트, 프레젠테이션과 같은 오피스 애플리케이션에 사용되며, 원래는 OpenOffice 스위트를 위해 설계되었지만 이후 다른 데스크톱 애플리케이션 스위트에 통합되었습니다.
     * ODP 파일은 프레젠테이션 슬라이드를 설명하는 XML 파일과 프레젠테이션에 포함된 다양한 이미지를 위한 별도의 이미지 파일을 포함하는 ZIP 아카이브입니다.
     * 이 기사는 SQLite를 ZIP 대신 사용하면 프레젠테이션 파일을 더 작게 만들고, 업데이트 중에 전원 손실이나 충돌이 발생해도 문서가 손상되지 않는 증분 업데이트를 허용할 수 있다고 제안합니다.
     * 또한 이 기사는 내용을 더 작은 조각으로 분할하고, 각 슬라이드의 내용을 별도로 저장하는 것을 제안합니다. 이렇게 하면 새 문서를 더 빠르게 열 수 있고 메모리 사용량을 줄일 수 있습니다.
     * 또 다른 제안은 프레젠테이션의 버전 관리를 지원하고, 각 슬라이드를 고유 식별자와 이러한 식별자의 목록에 의해 결정되는 슬라이드 순서와 함께 저장하는 것입니다. 이렇게 하면 같은 문서에 여러 프레젠테이션을 저장하고 프레젠테이션의 이력 버전을 볼 수 있게 됩니다.
     * 이 기사는 SQLite를 애플리케이션 파일 형식으로 사용하는 이점을 요약하여 마무리하며, 이에는 크기 효율성, 성능 향상, 메모리 사용량 감소, 그리고 타사 애플리케이션 및 스크립트에 대한 접근성 향상 등이 포함됩니다.

        Hacker News 의견

     * OpenDocument가 SQLite를 파일 형식으로 사용하는 아이디어에 대한 기사
     * SQLite는 Zip과 XML과 달리 표준화된 파일 형식이 아니라는 점이 Open Office 프로그래머들에게 도전이 될 수 있다는 한 가지 주장
     * SQLite의 API는 Zip과 XML보다 복잡하며, SQL 언어 자체를 포함하여 파서를 작성하는 것이 더 어려움
     * 그러나 SQLite는 상호 운용성과 ISO 표준화가 문제가 아닌 도메인 특화, 폐쇄 소스 애플리케이션에 적합한 파일 형식으로 간주됨
     * 일부 사용자들은 SQLite를 파일 형식으로 사용하여 성공을 거두었으며, 파일을 :memory: 데이터베이스로 복사하여 편집하고 변경 사항을 데이터베이스 파일로 다시 저장함
     * 다른 사용자들은 SQLite와 관련하여 권한 오류와 예상치 못한 파일 수정 등의 문제를 겪었음
     * OpenDocument의 현재 형식인 ZIP 아카이브 내의 XML 파일 모음의 단순성은 무거운 라이브러리가 필요 없는 문서 생성의 용이성을 인정받음
     * SQLite는 이 과정을 더 복잡하게 만들고 개발을 늦출 수 있음
     * 일부 사용자들은 SQLite에서 XML 파일로 작은 양의 데이터를 이동함으로써 데이터 액세스 계층과 진단을 단순화하는 데 성공했음
     * 그러나 XML의 한계, 예를 들어 증분 업데이트를 위해 전체 파일을 다시 작성해야 하는 필요성,은 단점으로 간주됨
     * SQLite를 파일 형식으로 표준화하는 아이디어가 제안되었지만, 파일 형식을 SQLite에 결합하는 것이 최선의 접근 방식이 아닐 수 있다는 주장도 있음
     * 다른 사용자들은 래스터 맵 타일을 저장할 때 SQLite가 Zip, tar, 파일시스템에 비해 가장 빠르고 가장 작은 옵션으로 판명되었음
     * 전반적으로, SQLite는 그 기능에 대해 인정받지만, OpenDocument의 파일 형식으로서의 사용은 잠재적으로 복잡하고 도전적으로 보임
"
"https://news.hada.io/topic?id=10912","[2023/09/11 ~ 09/17] 이번 주의 주요 ML 논문 (Top ML Papers of the Week)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    [2023/09/11 ~ 09/17] 이번 주의 주요 ML 논문 (Top ML Papers of the Week)

  개요

     * DAIR.AI에서 매주 공개하는 ML 논문들에 대한 글을 자동 번역해보았습니다.
     * 이번 주 선택된 논문들은 대부분 LLM(Large Language Model)이라는 주제에 집중되어 있습니다. 특히, LLM을 다루는 방식이 다양하다는 점이 독특합니다. 이들 논문은 언어 모델의 학습 방식, 에이전트 기반의 LLM의 발전 가능성, LLM의 정교화와 독자 학습 능력, LLM에 대한 일련의 연구 등 다양한 관점에서 LLM을 분석하고 있습니다.
     * 이러한 추세는 인공지능과 기계학습 분야에서 언어 모델학습 방식이 중요하게 여겨지고 있다는 것을 보여주며, 그 중에서도 LLM이 주목받고 있음을 알 수 있습니다. 또한, LLM을 다루는 방식의 다양함은 이 기술이 얼마나 광범위하게 적용될 수 있는지를 시사하며, 그 잠재력을 보여주고 있습니다.

  교과서만 있으면 됩니다 II: PHI-1.5 기술 보고서 / Textbooks Are All You Need II: phi-1.5 technical report

    논문 소개

     * 300억 개의 토큰으로 학습된 새로운 13억 개의 매개변수 모델, ""교과서 수준의"" 합성 데이터로 구성된 데이터 세트, 추론 작업에서 다른 대규모 모델과 경쟁하거나 더 나은 성능을 보이는 phi-1.5는 데이터 품질이 이전에 생각했던 것보다 더 중요한 역할을 한다는 것을 시사합니다. #llm #llm-alignment

     A new 1.3 billion parameter model trained on 30 billion tokens; the dataset consists of ""textbook-quality"" synthetically generated data; phi-1.5 competes or outperforms other larger models on reasoning tasks suggesting that data quality plays a more important role than previously thought.

    논문 초록

     * 일관된 영어를 생성할 수 있는 1,000만 개의 매개변수 모델인 $TinyStories$ 와 최신 기술에 가까운 Python 코딩 성능을 갖춘 13억 개의 매개변수 모델인 $phi-1$ 의 후속 작업에서 시작된 소규모 Transformer 기반 언어 모델의 성능에 대한 연구를 계속하고 있습니다. 후자의 작업은 기존 웹 데이터에 비해 학습 과정을 개선하기 위한 방법으로 기존의 대규모 언어 모델(LLM)을 사용해 '교과서 수준의' 데이터를 생성하는 것을 제안했습니다. 이번에는 자연어의 상식 추론에 초점을 맞춘 '교과서만 있으면 된다'는 접근 방식을 따르며, 자연어 작업에서는 5배 더 큰 모델과 비슷한 성능을, 초등학교 수학 및 기본 코딩과 같은 더 복잡한 추론 작업에서는 대부분의 비프론티어 LLM을 능가하는 13억 개의 파라미터를 가진 \textbf{phi-1.5}라는 새로운 모델을 만들었습니다. 일반적으로
       $phi-1.5$ 는 '단계별 사고'나 초보적인 상황 내 학습 수행 능력과 같은 좋은 점과 환각, 독성 및 편향 생성 가능성 등 나쁜 점 모두에서 훨씬 더 큰 LLM의 특성을 많이 보여줍니다. 하지만 고무적인 점은 웹 데이터가 없기 때문에 이러한 측면이 개선되고 있다는 점입니다. 저희는 이러한 시급한 주제에 대한 추가 연구를 촉진하기 위해 $phi-1.5$ 를 오픈소스화했습니다.

     We continue the investigation into the power of smaller Transformer-based language models as initiated by \textbf{TinyStories} -- a 10 million parameter model that can produce coherent English -- and the follow-up work on \textbf{phi-1}, a 1.3 billion parameter model with Python coding performance close to the state-of-the-art. The latter work proposed to use existing Large Language Models (LLMs) to generate textbook quality"" data as a way to enhance the learning process compared to traditional web data. We follow the Textbooks Are All You Need"" approach, focusing this time on common sense reasoning in natural language, and create a new 1.3 billion parameter model named \textbf{phi-1.5}, with performance on natural language tasks comparable to models 5x larger, and surpassing most non-frontier LLMs on more complex reasoning tasks such as grade-school mathematics and basic coding. More generally, \textbf{phi-1.5} exhibits many of the traits of much larger LLMs, both good --
     such as the ability to ``think step by step"" or perform some rudimentary in-context learning -- and bad, including hallucinations and the potential for toxic and biased generations -- encouragingly though, we are seeing improvement on that front thanks to the absence of web data. We open-source \textbf{phi-1.5} to promote further research on these urgent topics.

    논문 링크

   https://arxiv.org/abs/2309.05463

    더 읽어보기

   https://x.com/omarsar0/status/1701590130270601422

  대규모 언어 모델 기반 에이전트의 부상과 잠재력: 서베이 논문 / The Rise and Potential of Large Language Model Based Agents: A Survey

    논문 소개

     * Llm 기반 에이전트에 대한 포괄적인 개요로, 이러한 에이전트를 구성하는 방법부터 유용하게 활용하는 방법까지 다룹니다. #survey-paper

     A comprehensive overview of llm based agents; covers from how to construct these agents to how to harness them for good.

    논문 초록

     * 인류는 오랫동안 인간과 동등하거나 그 이상의 인공지능(AI)을 추구해 왔으며, AI 에이전트는 이러한 목표를 달성할 수 있는 유망한 수단으로 여겨져 왔습니다. AI 에이전트는 환경을 감지하고 의사 결정을 내리고 행동을 취하는 인공 개체입니다. 20세기 중반부터 지능형 AI 에이전트를 개발하기 위해 많은 노력을 기울여 왔습니다. 그러나 이러한 노력은 주로 특정 기능이나 특정 작업의 성능을 향상시키기 위한 알고리즘이나 학습 전략의 발전에 집중되어 왔습니다. 실제로 커뮤니티에 부족한 것은 다양한 시나리오에 적응할 수 있는 AI 에이전트를 설계하기 위한 출발점 역할을 할 수 있는 충분히 일반적이고 강력한 모델입니다. 대규모 언어 모델(LLM)은 다재다능하고 뛰어난 기능으로 인해 인공지능(AGI)의 잠재적인 불꽃으로 간주되며 일반 AI 에이전트 구축에
       희망을 제시합니다. 많은 연구 노력에서 AI 에이전트 구축의 기초로 LLM을 활용했으며 상당한 진전을 이루었습니다. 먼저 에이전트의 철학적 기원에서부터 AI의 발전까지 에이전트의 개념을 추적하고, 왜 LLM이 AI 에이전트의 토대가 되는지 설명합니다. 이를 바탕으로 두뇌, 지각, 행동이라는 세 가지 주요 구성 요소로 구성된 LLM 기반 에이전트의 개념적 프레임워크를 제시하고, 이 프레임워크는 다양한 애플리케이션에 맞게 조정할 수 있습니다. 이어서 단일 에이전트 시나리오, 다중 에이전트 시나리오, 인간과 에이전트 간의 협력이라는 세 가지 측면에서 LLM 기반 에이전트의 광범위한 적용 사례를 살펴봅니다. 그 다음에는 에이전트 사회에 대해 자세히 살펴보면서 LLM 기반 에이전트의 행동과 성격, 에이전트가 사회를 형성할 때 나타나는 사회 현상, 인간
       사회에 제공하는 인사이트를 살펴봅니다. 마지막으로 이 분야의 다양한 주요 주제와 미해결 문제에 대해 논의합니다.

     For a long time, humanity has pursued artificial intelligence (AI) equivalent to or surpassing the human level, with AI agents considered a promising vehicle for this pursuit. AI agents are artificial entities that sense their environment, make decisions, and take actions. Many efforts have been made to develop intelligent AI agents since the mid-20th century. However, these efforts have mainly focused on advancement in algorithms or training strategies to enhance specific capabilities or performance on particular tasks. Actually, what the community lacks is a sufficiently general and powerful model to serve as a starting point for designing AI agents that can adapt to diverse scenarios. Due to the versatile and remarkable capabilities they demonstrate, large language models (LLMs) are regarded as potential sparks for Artificial General Intelligence (AGI), offering hope for building general AI agents. Many research efforts have leveraged LLMs as the foundation to build AI
     agents and have achieved significant progress. We start by tracing the concept of agents from its philosophical origins to its development in AI, and explain why LLMs are suitable foundations for AI agents. Building upon this, we present a conceptual framework for LLM-based agents, comprising three main components: brain, perception, and action, and the framework can be tailored to suit different applications. Subsequently, we explore the extensive applications of LLM-based agents in three aspects: single-agent scenarios, multi-agent scenarios, and human-agent cooperation. Following this, we delve into agent societies, exploring the behavior and personality of LLM-based agents, the social phenomena that emerge when they form societies, and the insights they offer for human society. Finally, we discuss a range of key topics and open problems within the field.

    논문 링크

   https://arxiv.org/abs/2309.07864

    더 읽어보기

   https://x.com/omarsar0/status/1702736490067890239

  EvoDiff

    논문 소개

     * 서열 공간에서 제어 가능한 단백질 생성을 위해 진화 규모 데이터와 디퓨젼 모델을 결합하여 구조 기반 모델로는 접근이 불가능한 단백질을 생성할 수 있습니다. #diffusion

     Combines evolutionary-scale data with diffusion models for controllable protein generation in sequence space; it can generate proteins inaccessible to structure-based models.

    논문 링크

   https://www.biorxiv.org/content/10.1101/2023.09.11.556673v1

    더 읽어보기

   https://x.com/KevinKaichuang/status/1701953715312136302

  RAIN: 언어 모델을 미세 조정하지 않고도 스스로 정렬할 수 있습니다 / RAIN: Your Language Models Can Align Themselves without Finetuning

    논문 소개

     * 자체 평가 및 되감기 메커니즘을 통합함으로써 정렬되지 않은 llms가 자체 부스팅을 통해 인간의 선호도에 부합하는 반응을 직접 생성할 수 있음을 발견합니다.

     Discovers that by integrating self-evaluation and rewind mechanisms, unaligned llms can directly produce responses consistent with human preferences via self-boosting.

    논문 초록

     * 대규모 언어 모델(LLM)은 종종 인간의 선호도와 불일치를 보이기도 합니다. 이전 연구에서는 인간의 선호도 데이터를 수집한 다음 강화 학습 또는 인스트럭션 튜닝(소위 미세 조정 단계)을 사용하여 사전 학습된 모델을 조정했습니다. 이와는 대조적으로, 추가 데이터 없이 고정된 LLM을 정렬하는 것이 더 매력적입니다. 이 연구에서는 후자의 잠재력을 탐구합니다. 자체 평가와 되감기 메커니즘을 통합함으로써 정렬되지 않은 LLM이 자체 부스팅을 통해 인간의 선호도와 일치하는 반응을 직접 생성할 수 있음을 발견했습니다. 유니티는 새로운 추론 방법인 되감기 자동 회귀 추론(RAIN)을 도입하여 사전 학습된 LLM이 자체 생성을 평가하고 평가 결과를 사용하여 AI의 안전을 위해 되감기 및 앞으로 생성을 안내할 수 있도록 합니다. 특히 RAIN은 모델 정렬을 위한 추가
       데이터 없이 작동하며 학습, 기울기 계산 또는 매개변수 업데이트가 필요 없고, 자체 평가 단계에서 모델이 고정 템플릿 프롬프트를 통해 사람의 선호도에 따라 정렬할 지침을 받으므로 초기 프롬프트를 수정할 필요가 없습니다. GPT-4와 사람이 평가한 실험 결과는 RAIN의 효과를 입증합니다. HH 데이터셋에서 RAIN은 바닐라 추론에 비해 LLaMA 30B의 무해성 비율을 82%에서 97%로 향상시키면서 유용성 비율은 유지합니다. 비쿠나 33B에 대한 주요 적대적 공격인 llm 공격에서 RAIN은 공격 성공률을 94%에서 19%로 낮춰 새로운 방어 기준선을 설정합니다.

     Large language models (LLMs) often demonstrate inconsistencies with human preferences. Previous research gathered human preference data and then aligned the pre-trained models using reinforcement learning or instruction tuning, the so-called finetuning step. In contrast, aligning frozen LLMs without any extra data is more appealing. This work explores the potential of the latter setting. We discover that by integrating self-evaluation and rewind mechanisms, unaligned LLMs can directly produce responses consistent with human preferences via self-boosting. We introduce a novel inference method, Rewindable Auto-regressive INference (RAIN), that allows pre-trained LLMs to evaluate their own generation and use the evaluation results to guide backward rewind and forward generation for AI safety. Notably, RAIN operates without the need of extra data for model alignment and abstains from any training, gradient computation, or parameter updates; during the self-evaluation phase, the
     model receives guidance on which human preference to align with through a fixed-template prompt, eliminating the need to modify the initial prompt. Experimental results evaluated by GPT-4 and humans demonstrate the effectiveness of RAIN: on the HH dataset, RAIN improves the harmlessness rate of LLaMA 30B over vanilla inference from 82% to 97%, while maintaining the helpfulness rate. Under the leading adversarial attack llm-attacks on Vicuna 33B, RAIN establishes a new defense baseline by reducing the attack success rate from 94% to 19%.

    논문 링크

   https://arxiv.org/abs/2309.07124

    더 읽어보기

   https://x.com/omarsar0/status/1702131444041011395

  로봇 파쿠르 학습 / Robot Parkour Learning

    논문 소개

     * 생태심도 카메라를 사용하여 4족 보행 로봇에 전송되는 엔드투엔드 비전 기반 파쿠르 정책을 학습하는 시스템을 제시하고, 저비용 로봇이 실제 환경에서 파쿠르 기술을 자동으로 선택하고 실행할 수 있음을 보여 줍니다.

     Presents a system for learning end-to-end vision-based parkour policy which is transferred to a quadrupedal robot using its ecocentric depth camera; shows that low-cost robots can automatically select and execute parkour skills in a real-world environment.

    논문 초록

     * 파쿠르는 로봇이 복잡한 환경에서 다양한 장애물을 빠르게 극복해야 하는 다리를 이용한 이동의 대도전입니다. 기존 방식은 동물 데이터나 복잡한 보상을 사용하여 다양하지만 맹목적인 이동 기술을 생성하거나 시각을 기반으로 하지만 특화된 기술을 생성할 수 있습니다. 하지만 자율 파쿠르를 구현하기 위해서는 로봇이 다양한 시나리오를 인지하고 반응할 수 있도록 시각 기반이면서 다양한 일반화 가능한 기술을 학습해야 합니다. 본 연구에서는 참조 동작 데이터 없이 간단한 보상을 사용하여 다양한 파쿠르 기술에 대한 단일 엔드투엔드 비전 기반 파쿠르 정책을 학습하는 시스템을 제안합니다. 높은 장애물 오르기, 큰 틈새 뛰어넘기, 낮은 장벽 밑으로 기어가기, 좁은 틈새 통과하기, 달리기 등 파쿠르 기술을 생성하기 위해 직접 배열에서 영감을
       얻은 강화 학습 방법을 개발합니다. 유니티는 이러한 기술을 단일 비전 기반 파쿠르 정책으로 추출하여 자기 중심 깊이 카메라를 사용하여 4족 보행 로봇에 전송합니다. 유니티의 시스템은 두 대의 서로 다른 저비용 로봇이 자율적으로 적절한 파쿠르 기술을 선택하고 실행하여 까다로운 실제 환경을 통과할 수 있음을 보여줍니다.

     Parkour is a grand challenge for legged locomotion that requires robots to overcome various obstacles rapidly in complex environments. Existing methods can generate either diverse but blind locomotion skills or vision-based but specialized skills by using reference animal data or complex rewards. However, autonomous parkour requires robots to learn generalizable skills that are both vision-based and diverse to perceive and react to various scenarios. In this work, we propose a system for learning a single end-to-end vision-based parkour policy of diverse parkour skills using a simple reward without any reference motion data. We develop a reinforcement learning method inspired by direct collocation to generate parkour skills, including climbing over high obstacles, leaping over large gaps, crawling beneath low barriers, squeezing through thin slits, and running. We distill these skills into a single vision-based parkour policy and transfer it to a quadrupedal robot using its
     egocentric depth camera. We demonstrate that our system can empower two different low-cost robots to autonomously select and execute appropriate parkour skills to traverse challenging real-world environments.

    논문 링크

   https://arxiv.org/abs/2309.05665

    더 읽어보기

   https://x.com/zipengfu/status/1701316023612219445

  대형 파운데이션 모델에서 환각에 대한 설문 조사 / A Survey of Hallucination in Large Foundation Models

    논문 소개

     * 다양한 유형의 환각 현상을 분류하고 환각을 평가하기 위한 평가 기준과 완화 전략을 제공합니다. #survey-paper #foundation-model

     Classifies different types of hallucination phenomena and provides evaluation criteria for assessing hallucination along with mitigation strategies.

    논문 초록

     * 파운데이션 모델(FM)에서의 환각은 사실과 다르거나 조작된 정보가 포함된 콘텐츠를 생성하는 것을 말합니다. 이 조사 논문은 '대형' 파운데이션 모델(LFM)을 중심으로 환각 문제를 식별, 규명, 해결하기 위한 최근의 노력에 대한 광범위한 개요를 제공합니다. 이 논문에서는 LFM에 특화된 다양한 유형의 환각 현상을 분류하고 환각의 정도를 평가하기 위한 평가 기준을 수립합니다. 또한 LFM에서 환각을 완화하기 위한 기존의 전략을 검토하고 이 분야의 향후 연구 방향에 대해 논의합니다. 이 논문은 기본적으로 LFM의 환각과 관련된 과제와 해결책을 종합적으로 검토합니다.

     Hallucination in a foundation model (FM) refers to the generation of content that strays from factual reality or includes fabricated information. This survey paper provides an extensive overview of recent efforts that aim to identify, elucidate, and tackle the problem of hallucination, with a particular focus on ``Large'' Foundation Models (LFMs). The paper classifies various types of hallucination phenomena that are specific to LFMs and establishes evaluation criteria for assessing the extent of hallucination. It also examines existing strategies for mitigating hallucination in LFMs and discusses potential directions for future research in this area. Essentially, the paper offers a comprehensive examination of the challenges and solutions related to hallucination in LFMs.

    논문 링크

   https://arxiv.org/abs/2309.05922

    더 읽어보기

   https://x.com/omarsar0/status/1701970034711539839

  에이전트: 자율 언어 에이전트를 위한 오픈소스 프레임워크 / Agents: An Open-source Framework for Autonomous Language Agents

    논문 소개

     * 계획, 메모리, 도구 사용, 다중 에이전트 커뮤니케이션 등의 기능을 지원하는 자율 언어 에이전트를 구축하기 위한 오픈소스 라이브러리입니다.

     An open-source library for building autonomous language agents including support for features like planning, memory, tool usage, multi-agent communication, and more.

    논문 초록

     * 최근 대규모 언어 모델(LLM)의 발전으로 연구자와 개발자는 자연어 인터페이스를 사용하여 다양한 작업을 자동으로 해결하고 환경, 사람 및 다른 에이전트와 상호 작용할 수 있는 자율 언어 에이전트를 구축할 수 있습니다. 저희는 언어 에이전트를 인공지능을 향한 유망한 방향이라고 생각하며, 이러한 발전을 더 많은 비전문가에게 공개하기 위해 오픈소스 라이브러리인 Agents를 출시했습니다. 에이전트는 계획, 메모리, 도구 사용, 다중 에이전트 통신, 세분화된 기호 제어 등 중요한 기능을 지원하도록 세심하게 설계되었습니다. 에이전트는 비전문가도 많은 코딩 없이도 최첨단 자율 언어 에이전트를 구축, 사용자 지정, 테스트, 조정 및 배포할 수 있으므로 사용자 친화적입니다. 또한 라이브러리는 모듈화된 설계로 연구자들이 쉽게 확장할 수 있어 연구
       친화적입니다. 에이전트는 https://github.com/aiwaves-cn/agents 에서 사용할 수 있습니다.

     Recent advances on large language models (LLMs) enable researchers and developers to build autonomous language agents that can automatically solve various tasks and interact with environments, humans, and other agents using natural language interfaces. We consider language agents as a promising direction towards artificial general intelligence and release Agents, an open-source library with the goal of opening up these advances to a wider non-specialist audience. Agents is carefully engineered to support important features including planning, memory, tool usage, multi-agent communication, and fine-grained symbolic control. Agents is user-friendly as it enables non-specialists to build, customize, test, tune, and deploy state-of-the-art autonomous language agents without much coding. The library is also research-friendly as its modularized design makes it easily extensible for researchers. Agents is available at https://github.com/aiwaves-cn/agents.

    논문 링크

   https://arxiv.org/abs/2309.07870

    더 읽어보기

   https://x.com/arankomatsuzaki/status/1702497897395396960

  Radiology-Llama2: 동급 최고의 방사선학용 대규모 언어 모델 / Radiology-Llama2: Best-in-Class Large Language Model for Radiology

    논문 소개

     * 영상의학에 맞게 조정된 라마 2 기반의 llm을 제공하며, 대규모 영상의학 보고서 데이터셋을 기반으로 조정되어 영상의학 소견에서 일관되고 임상적으로 유용한 인상을 생성합니다.

     Presents an llm based on llama 2 tailored for radiology; it's tuned on a large dataset of radiology reports to generate coherent and clinically useful impressions from radiology findings.

    논문 초록

     * 이 논문에서는 명령어 튜닝이라는 프로세스를 통해 영상의학에 특화된 대규모 언어 모델인 Radiology-Llama2를 소개합니다. Radiology-Llama2는 Llama2 아키텍처를 기반으로 하며 대규모 방사선 보고서 데이터셋을 학습하여 방사선 소견에서 일관성 있고 임상적으로 유용한 인상을 생성합니다. MIMIC-CXR 및 OpenI 데이터셋에서 ROUGE 메트릭을 사용한 정량적 평가 결과, Radiology-Llama2는 다른 생성 언어 모델에 비해 최첨단 성능을 달성하는 것으로 나타났으며, Rouge-1 점수는 MIMIC-CXR에서 0.4834점, OpenI에서 0.4185점을 기록했습니다. 영상의학 전문가들의 추가 평가에서는 이해 가능성, 일관성, 관련성, 간결성, 임상적 유용성에서 이 모델의 강점을 강조했습니다. 이 작업은 영상의학과 같은 전문 분야에 맞게 설계되고 조정된 로컬라이즈드 언어 모델의 잠재력을 보여줍니다. 이러한
       모델을 적절히 평가하고 배포하면 암기 작업을 자동화하고 인간의 전문성을 향상시킴으로써 방사선과 같은 분야를 혁신할 수 있습니다.

     This paper introduces Radiology-Llama2, a large language model specialized for radiology through a process known as instruction tuning. Radiology-Llama2 is based on the Llama2 architecture and further trained on a large dataset of radiology reports to generate coherent and clinically useful impressions from radiological findings. Quantitative evaluations using ROUGE metrics on the MIMIC-CXR and OpenI datasets demonstrate that Radiology-Llama2 achieves state-of-the-art performance compared to other generative language models, with a Rouge-1 score of 0.4834 on MIMIC-CXR and 0.4185 on OpenI. Additional assessments by radiology experts highlight the model's strengths in understandability, coherence, relevance, conciseness, and clinical utility. The work illustrates the potential of localized language models designed and tuned for specialized domains like radiology. When properly evaluated and deployed, such models can transform fields like radiology by automating rote tasks and
     enhancing human expertise.

    논문 링크

   https://arxiv.org/abs/2309.06419

    더 읽어보기

   https://x.com/omarsar0/status/1701774444052557965

  소프트웨어 개발을 위한 커뮤니케이션 에이전트 / Communicative Agents for Software Development

    논문 소개

     * 폭포수 모델을 반영한 가상 채팅 기반 소프트웨어 개발 회사인 chatdev를 소개하며, 1달러 미만의 비용으로 전체 소프트웨어 개발 프로세스를 7분 이내에 완료하는 등 소프트웨어 생성에 있어 에이전트의 효율성을 보여 줍니다.

     Presents chatdev, a virtual chat-powered software development company mirroring the waterfall model; shows the efficacy of the agent in software generation, even completing the entire software development process in less than seven minutes for less than one dollar.

    논문 초록

     * 소프트웨어 엔지니어링은 복잡한 의사 결정 프로세스가 특징인 분야로, 미묘한 직관과 협의에 의존하는 경우가 많습니다. 최근 딥러닝의 발전은 소프트웨어 개발의 다양한 단계에서 구현되는 정교한 설계를 통해 소프트웨어 엔지니어링 관행에 혁명을 일으키기 시작했습니다. 이 논문에서는 전체 소프트웨어 개발 프로세스에 걸쳐 대규모 언어 모델(LLM)을 활용하여 자연어 커뮤니케이션을 통해 주요 프로세스를 간소화하고 통합함으로써 각 단계마다 전문화된 모델이 필요하지 않도록 하는 혁신적인 패러다임을 제시합니다. 이 패러다임의 핵심에는 기존의 폭포수 모델을 반영하여 개발 프로세스를 설계, 코딩, 테스트, 문서화의 네 가지 시간적 단계로 세심하게 구분하는 가상 채팅 기반 소프트웨어 개발 회사인 ChatDev가 있습니다. 각 단계에는 프로그래머,
       코드 리뷰어, 테스트 엔지니어와 같은 에이전트 팀이 참여하여 협업 대화를 촉진하고 원활한 워크플로를 촉진합니다. 채팅 체인은 각 단계를 원자적인 하위 작업으로 세분화하여 촉진자 역할을 합니다. 이를 통해 상황 인식 커뮤니케이션을 통해 솔루션을 제안하고 검증하여 특정 하위 작업을 효율적으로 해결할 수 있는 이중 역할을 수행할 수 있습니다. ChatDev의 도구적 분석은 소프트웨어 생성에 있어 놀라운 효율성을 보여주며, 1달러 미만의 비용으로 전체 소프트웨어 개발 프로세스를 7분 이내에 완료할 수 있게 해줍니다. 또한 잠재적인 취약점을 식별하고 완화할 뿐만 아니라 잠재적인 오류를 수정하는 동시에 뛰어난 효율성과 비용 효율성을 유지합니다. ChatDev의 잠재력은 LLM을 소프트웨어 개발 영역에 통합할 수 있는 새로운 가능성을 열어줍니다.

     Software engineering is a domain characterized by intricate decision-making processes, often relying on nuanced intuition and consultation. Recent advancements in deep learning have started to revolutionize software engineering practices through elaborate designs implemented at various stages of software development. In this paper, we present an innovative paradigm that leverages large language models (LLMs) throughout the entire software development process, streamlining and unifying key processes through natural language communication, thereby eliminating the need for specialized models at each phase. At the core of this paradigm lies ChatDev, a virtual chat-powered software development company that mirrors the established waterfall model, meticulously dividing the development process into four distinct chronological stages: designing, coding, testing, and documenting. Each stage engages a team of agents, such as programmers, code reviewers, and test engineers, fostering
     collaborative dialogue and facilitating a seamless workflow. The chat chain acts as a facilitator, breaking down each stage into atomic subtasks. This enables dual roles, allowing for proposing and validating solutions through context-aware communication, leading to efficient resolution of specific subtasks. The instrumental analysis of ChatDev highlights its remarkable efficacy in software generation, enabling the completion of the entire software development process in under seven minutes at a cost of less than one dollar. It not only identifies and alleviates potential vulnerabilities but also rectifies potential hallucinations while maintaining commendable efficiency and cost-effectiveness. The potential of ChatDev unveils fresh possibilities for integrating LLMs into the realm of software development.

    논문 링크

   https://arxiv.org/abs/2307.07924v3

    더 읽어보기

   https://x.com/KevinAFischer/status/1702355125418045860

  MAmmoTH: 하이브리드 인스트럭션 튜닝을 통한 수학 제너럴리스트 모델 구축 / MAmmoTH: Building Math Generalist Models through Hybrid Instruction Tuning

    논문 소개

     * 일반적인 수학 문제 해결을 위해 맞춤화된 일련의 오픈소스 머신러닝으로, 엄선된 인스트럭션 튜닝 데이터세트로 학습되며 여러 수학적 추론 데이터세트에서 기존 오픈소스 모델보다 뛰어난 성능을 발휘합니다. #mathglm

     A series of open-source llms tailored for general math problem-solving; the models are trained on a curated instruction tuning dataset and outperform existing open-source models on several mathematical reasoning datasets.

    논문 초록

     * 일반적인 수학 문제 해결을 위해 특별히 맞춤화된 오픈소스 대규모 언어 모델(LLM) 시리즈인 MAmmoTH를 소개합니다. MAmmoTH 모델은 세심하게 선별된 명령어 튜닝 데이터세트인 MathInstruct를 기반으로 학습됩니다. MathInstruct는 13개의 수학 데이터셋에서 중간 수준의 추론으로 컴파일되며, 이 중 6개는 유니티에서 새롭게 큐레이팅한 추론이 포함되어 있습니다. 이 솔루션은 생각의 사슬(CoT)과 생각의 프로그램(PoT) 근거의 고유한 하이브리드를 제공하며 수학의 다양한 분야를 광범위하게 다룹니다. CoT와 PoT의 혼합은 도구 사용의 잠재력을 발휘할 뿐만 아니라 다양한 수학 문제에 대해 서로 다른 사고 과정을 허용합니다. 그 결과, MAmmoTH 시리즈는 모든 규모에 걸쳐 9개의 수학적 추론 데이터셋에서 평균 13%에서 29%의 정확도 향상으로 기존 오픈소스 모델을 크게
       능가합니다. 놀랍게도, 경쟁사 수준의 데이터셋인 MATH에서 MAmmoTH-7B 모델은 35%에 도달하여 최고의 오픈소스 7B 모델(WizardMath)을 25% 능가하며, MAmmoTH-34B 모델은 MATH에서 46%의 정확도를 달성하여 GPT-4의 CoT 결과를 뛰어넘었습니다. 이 연구는 우수한 수학 범용 모델을 개발하는 데 있어 다양한 문제 범위와 하이브리드 이론의 사용의 중요성을 강조합니다.

     We introduce MAmmoTH, a series of open-source large language models (LLMs) specifically tailored for general math problem-solving. The MAmmoTH models are trained on MathInstruct, our meticulously curated instruction tuning dataset. MathInstruct is compiled from 13 math datasets with intermediate rationales, six of which have rationales newly curated by us. It presents a unique hybrid of chain-of-thought (CoT) and program-of-thought (PoT) rationales, and also ensures extensive coverage of diverse fields in math. The hybrid of CoT and PoT not only unleashes the potential of tool use but also allows different thought processes for different math problems. As a result, the MAmmoTH series substantially outperform existing open-source models on nine mathematical reasoning datasets across all scales with an average accuracy gain between 13% and 29%. Remarkably, our MAmmoTH-7B model reaches 35% on MATH (a competition-level dataset), which exceeds the best open-source 7B model
     (WizardMath) by 25%, and the MAmmoTH-34B model achieves 46% accuracy on MATH, even surpassing GPT-4's CoT result. Our work underscores the importance of diverse problem coverage and the use of hybrid rationales in developing superior math generalist models.

    논문 링크

   https://arxiv.org/abs/2309.05653

    더 읽어보기

   https://x.com/xiangyue96/status/1701710215442309323

  원문

   https://nlp.elvissaravia.com/p/top-ml-papers-of-the-week-461
"
"https://news.hada.io/topic?id=10982","10줄 미만의 코드로 GZIP을 사용하여 78%의 MNIST 정확도 달성","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                10줄 미만의 코드로 GZIP을 사용하여 78%의 MNIST 정확도 달성

     * GZIP을 사용하여 MNIST 데이터셋에서 10줄 미만의 코드로 78%의 정확도 달성에 대한 기사
     * 저자는 최첨단 결과를 달성하는 것이 아니라 압축을 독특하고 모델이 없는 분류 도구로 사용하는 잠재력을 보여주는 것이 이 게시물의 새로움이라고 강조
     * 제공된 코드는 GZIP과 NCD (Normalized Compression Distance)를 유사성 지표로 사용하고, k-NN (k-Nearest Neighbors)을 분류에 사용
     * GZIP은 개별 데이터 포인트의 복잡성 또는 정보 내용을 측정하는 도구로 사용되며, NCD는 두 데이터 포인트가 얼마나 유사한지의 정규화된 측정치를 제공
     * 알고리즘은 모든 훈련 샘플과 NCD를 계산하고, 이를 정렬하며, k개의 가장 작은 거리를 선택. 이 k=5 가장 가까운 이웃 중 다수 클래스가 테스트 샘플의 레이블로 예측됨
     * 저자는 이 접근 방식이 계산적으로 비싸며, 정확도 측정을 위해 테스트 이미지의 일부만 사용되었다는 것을 인정
     * 저자는 더 나은 이해를 위해 알고리즘의 덜 숨겨진 버전도 제공
     * 저자는 2019년 Andreas Kirsch가 취한 유사한 접근 방식을 언급, 이는 약 35%의 정확도를 달성
     * 저자는 데이터 압축에서 텍스트 생성에 대한 게시물을 읽고, 매개 변수가 없는 텍스트 분류에 대한 논문을 읽은 후 이미지 분류 메커니즘으로 압축을 사용하게 됨
     * 저자는 이전에 에지 컴퓨터 비전을 위한 이미지 압축에 작업하였고, 이 기술을 MNIST 데이터셋에 적용하는 데 관심이 있었음

        Hacker News 의견

     * GZIP을 사용하여 MNIST 데이터셋에서 10줄 미만의 코드로 78%의 정확도 달성에 대한 기사
     * 댓글 작성자들이 코드에서 거리 함수를 더 간단한 측정법으로 대체해 봤으며, 이로 인해 정확도가 향상되고 계산 요구량이 줄어듬
          + 유클리드 거리는 이미지를 이진화한 후 약 0.5초 만에 93%의 정확도를 달성
          + 자카드 거리는 이미지를 이진화한 후 약 0.7초 만에 94%의 정확도를 달성
          + 다이스 불일치는 이미지를 이진화한 후 약 0.8초 만에 94%의 정확도를 달성
     * 비교를 위한 다른 기술에는 Linear SVC가 92%의 정확도, SVC rbf가 96.4%의 정확도, SVC poly가 94.5%의 정확도, 로지스틱 회귀가 89%의 정확도, 그리고 나이브 베이즈가 81%의 정확도를 보임
     * 댓글 작성자들은 코드가 우아하고 간결할지라도, MNIST에 대해 78%의 정확도는 낮게 여겨지며, Tensorflow로 작성된 더미 모델이 쉽게 90%의 정확도를 달성한다고 제안
     * MNIST에 대한 최고의 모델은 99.87%의 정확도로 순위가 매겨짐
     * 일부 댓글 작성자들은 정규화된 압축 거리(NCD)를 유클리드 거리로 대체하면 테스트 정확도가 15% 증가하고 많은 계산을 절약할 수 있다고 제안
     * 일부 댓글 작성자들은 MNIST 데이터셋이 은퇴해야 한다고 제안하며, 이는 그 위에서 높은 정확도를 달성하는 것이 상대적으로 쉬워졌기 때문
     * 고도로 압축된 데이터에서 패턴을 찾아 더 나은 압축을 위한 잠재력에 대한 논의가 있음
     * 일부 댓글 작성자들은 일반 목적의 압축기와 대체 언어 모델에 대한 정보 거리 측정에 관심이 있음
     * 한 댓글 작성자는 후보 시퀀스 간의 이산 합성곱과 함께 정규화된 압축 거리(gzip)를 결합하는 주의 메커니즘을 사용하는 것에 대해 언급
"
"https://news.hada.io/topic?id=10962","Lichess: 광고 및 추적기 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Lichess: 광고 및 추적기 차단

     * 인터넷 브라우징 시 광고와 추적기를 차단하는 중요성에 대한 기사, 특히 이러한 요소가 없는 lichess.org 웹사이트에 초점을 맞춤
     * 광고와 추적기는 우리의 화면 공간을 팔고, 우리에게 영향을 미치며, 광고 효과를 높이기 위해 개인 정보를 팔아 위협으로 간주됨
     * 이러한 요소들은 웹사이트 사용자에게 이익을 주지 않으며 컴퓨팅 파워와 대역폭을 상당히 많이 사용함
     * 기사에서는 이러한 위협으로부터 우리를 보호하는 여러 가지 방법을 권장함:
          + uBlock Origin: 모든 사용자에게 권장되는 무료, 빠르고 효과적인 광고 차단 브라우저 확장 기능. Windows, MacOS, Linux의 대부분의 브라우저에서 사용 가능
          + AdGuard: 비디오 광고 및 앱, 브라우저, 게임 내 광고를 포함하여 시스템 전체에서 광고와 추적기를 차단할 수 있는 DNS 서버. uBlock Origin과 함께 사용할 수 있음
          + 사용자 정의 호스트 파일: 호스트 파일을 직접 관리하는 시스템 전체 차단을 위한 고급 방법
          + personalDNSfilter: 광고를 보내거나 사용자 활동을 추적하는 모든 연결을 방지하는 안드로이드 기기용 DNS 프록시
          + BlockBear: Safari 브라우저 내에서 광고와 추적기를 차단하는 iOS 앱
     * 기사에서는 광고 차단이 도둑질이 아니라 프라이버시에 대한 권리라고 강조함. 광고와 추적기는 프라이버시를 침해하고, 웹사이트를 느리게 하며, 위험한 악성 소프트웨어를 전달할 수 있음
     * 기사에서는 인터넷에서 다운로드 받는 것, 그것을 인터넷에 보내는 것, 그리고 화면에 표시하는 것을 포함하여 우리가 반대하는 소스 코드를 거부하는 것을 결정할 권리를 주장함
     * 기사에서는 가치 있는 기능을 가진 서비스는 광고에 의존하지 않고 구독을 판매할 수 있어야 한다고 제안함

        Hacker News 의견

     * Lichess는 그 비즈니스 모델과 투명성으로 높이 평가받으며, 공개 재정 정보를 공개적으로 볼 수 있다.
     * 이 플랫폼은 사용자가 게임 플레이를 상쇄하기 위해 기부할 정확한 금액을 계산할 수 있게 해주는, 유사 픔랫폼에서 흔히 볼 수 없는 기능을 제공한다.
     * Lichess는 주요 경쟁사인 Chess.com과 비교하여 긍정적으로 대조되며, Chess.com은 AdSense를 사용하고 다양한 제3자 데이터 소스로 사용자를 추적한다.
     * uBlock, Ghostery, PrivacyBadger와 같은 광고 차단 도구는 Chess.com에서 Lichess보다 더 활발하게 사용되어, 더 높은 수준의 추적 및 광고를 나타낸다.
     * 댓글 작성자들은 광고 차단이 도둑질이 아니라 개인정보 보호의 권리라고 강조한다.
     * Lichess는 광고 차단기와 개인정보 보호에 대한 입장으로 칭찬받으며, 사용자들은 플랫폼이 일반적인 광고 차단 기술을 구현하는 데 도움을 주는 노력을 인정한다.
     * Lichess의 창시자인 Thibault는 그의 철학과 광고에 대한 입장으로 존경받으며, 한 댓글 작성자는 Thibault가 유용한 광고를 찾아본 적이 없다고 언급한다.
     * iOS에서 최고의 광고 차단 솔루션에 대한 토론이 있으며, 한 사용자가 추천을 요청한다.
     * 댓글 작성자들은 Lichess와 그 창시자인 Thibault에 대한 사랑과 존경을 표현한다.
"
"https://news.hada.io/topic?id=10890","Unity의 새로운 가격정책: 오픈 소스의 중요성에 대한 알람","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Unity의 새로운 가격정책: 오픈 소스의 중요성에 대한 알람

     * Unity가 Seat당 결제 모델에서 Install당 결제 모델로 전환. 이는 유료 설치뿐만 아니라 모든 설치에 적용
     * 이 변화는 특히 설치당 수익이 크게 다른 모바일 게임에 중요한 영향을 줌
          + 예를 들어, Unity는 앱이 연간 200,000달러를 벌면 설치당 0.20달러를 청구할 계획, 이는 앱이 수익성을 유지하기 위해 각 사용자가 설치 후 최소 10개의 광고를 볼 필요가 있다는 것을 의미
     * 새로운 가격 모델은 기존 애플리케이션에도 소급 적용되어 개발자에게 잠재적인 위협이 될 수 있음
     * 문서 편집기를 다른 것으로 바꾸는 것과 달리, 게임 엔진을 다른 것으로 전환하는 것은 복잡하고 시간이 많이 소요되는 과정이므로, 이 가격 변경은 게임 개발자에게 더 큰 도전
     * Godot와 같은 오픈 소스 게임 엔진은 개발자에게 취소하거나 변경할 수 없는 엔진 권리를 제공함으로써 해결책을 제공. Godot의 MIT 라이선스에 따르면, 사용자는 원작자를 인정하는 한 엔진을 사용하고, 수정하고, 배포할 수 있음
     * Unreal 엔진은 현재 Unity와 같은 조건을 가지고 있지 않지만, 미래에 비슷한 접근 방식을 채택하지 않을 것이라는 보장은 없음
     * Ramatak 모바일 스튜디오는 광고, 앱 내 구매, 분석 등 모바일 게임에 필요한 기능으로 오픈 소스 Godot 엔진을 강화중
     * Ramatak이 조건을 불리하게 변경한다면, 개발자들은 Ramatak 특정 강화 기능만을 잃고 오픈 소스 버전으로 다시 전환할 수 있음
     * Ramatak을 사용하면, 개발자들은 오픈 소스 엔진의 자유와 보안을 즐길 수 있으며, 현대 모바일 게임에 필요한 고급 기능들을 함께 사용할 수 있음
     * 핵심 포인트는 오픈 소스 엔진을 사용하면 개발자들이 엔진의 수익화 전략에 제한받지 않고 게임 환경의 미래 변화에 적응할 수 있다는 것

        Hacker News 의견

     * Unity의 새로운 가격 정책은 오픈 소스의 중요성에 대한 논란을 촉발하였다.
     * 일부 댓글러들은 Epic과 Unreal Engine이 서로 다른 비즈니스 전략과 수익 모델 때문에 Unity의 가격 모델을 따르지 않을 것이라고 주장한다.
     * Unity의 결정은 재정적 어려움과 상장 후 성장 압박의 결과로 보인다.
     * 새로운 가격 모델은 개발자들이 앞으로 Unity를 사용하는 것을 방해할 수 있는 잠재적 요인으로 보인다.
     * 이 상황은 닫힌 소스 도구를 사용하는 데 관련된 위험을 상기시키는데, 약관이 변경될 수 있고, 지원이 종료될 수 있으며, 가격이 상승할 수 있다.
     * 일부 댓글러들은 Unity의 재정적 어려움에 대한 동정을 표현하며, 회사의 높은 소비율과 Unreal과 같은 다른 게임 엔진들과의 경쟁을 언급한다.
     * 다른 사람들은 문제가 오픈 소스에 관한 것이 아니라, 기업들이 일방적으로 계약을 변경하고 새로운 요금을 부과하는 것에 대한 것이라고 주장한다.
     * 일부 댓글러들은 많은 사용자들이 이러한 기술로부터 이익을 얻으면서 기여하거나 지불하지 않는다는 점을 지적하며, 오픈 소스 모델의 지속 가능성에 의문을 제기한다.
     * Unity가 구독 기반 게임의 개발자에게 요금을 부과하지 않을 계획은 비현실적이며 법적 문제를 초래할 수 있다고 보인다.
     * Unreal Engine의 라이선스 조건, 즉 엔진의 한 버전을 영구적으로 사용할 수 있게 하는 것은 Unity의 접근법과 대조적으로 강조된다.
     * Unity에 대한 대안으로 Bevy 엔진과 Rust가 제안된다.
     * Unity가 동의 없이 언제든지 요금을 추가하거나 변경할 수 있다는 선언은 비판을 받는다.
"
"https://news.hada.io/topic?id=10979","우리는 RAM-only VPN 인프라로의 마이그레이션을 성공적으로 완료하였다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               우리는 RAM-only VPN 인프라로의 마이그레이션을 성공적으로 완료하였다

     * Mullvad VPN이 RAM 전용 VPN 인프라로의 마이그레이션을 성공적으로 완료했다고 발표했습니다.
     * 디스크 없는 인프라로의 전환은 2022년 초, 부트로더 ""stboot""의 도입과 함께 시작되었습니다.
     * VPN 인프라는 마이그레이션 이후 두 번의 감사를 받았으며, 2022년과 2023년에 이루어졌으며, 모든 미래의 감사는 RAM 전용 배포에만 초점을 맞추게 됩니다.
     * Mullvad VPN 서버는 계속해서 커널 개발의 메인라인 분기를 따르는 맞춤형이며 대폭 축소된 Linux 커널을 사용합니다.
     * 이 접근 방식은 회사가 새로운 기능과 성능 향상을 최신 상태로 유지하고, 커널에서 불필요한 부피를 제거할 수 있게 합니다.
     * 운영 체제는 배포되기 전에 200MB를 약간 넘는 무게로, 서버가 처음으로 부팅되거나 프로비저닝될 때마다 신선하게 빌드된 커널, 로그 파일의 어떤 흔적도 없고, 완전히 패치된 OS를 보장합니다.
     * RAM 전용 인프라로의 이동은 서버에 사용자 활동의 흔적을 남기지 않음으로써 VPN 서비스의 개인 정보 보호 및 보안을 강화합니다.

        Hacker News 의견

     * RAM 전용 VPN 인프라로의 이전이 성공적으로 완료되어, 보안성과 투명성이 향상되었습니다.
     * VPN 제공업체인 Mullvad는 마케팅 노력보다 보안 향상에 중점을 두는 것으로 칭찬받고 있습니다.
     * VPN의 보안 개선 사항은 오픈 소스로, GitHub에서 이용 가능합니다.
     * 디스크리스 운영, 커널 맞춤화, 더욱 강화된 보안 등의 잠재적 이점에도 불구하고, 기술에 능통한 VPN 제공업체들이 BSD보다 Linux를 선택하는 것에 대한 논의가 있습니다.
     * 일부 사용자들은 로그나 데이터를 기록하지 않는다고 주장하는 VPN에 대해 회의적으로 보며, 이들이 대신 법 집행 기관이나 정보 기관으로 데이터를 스트리밍할 수도 있다고 제안합니다.
     * 하드웨어 기반의 백도어, 메모리 주입, 또는 공급망 공격 등이 데이터를 위협할 수 있다는 우려가 제기되고 있습니다.
     * 서버의 재부팅 빈도나 프로비저닝을 통해 신선하게 구축된 커널을 보장하기 위한 질문이 제기되었습니다.
     * VPN이 불법 활동에 이용될 경우 법적 책임에 대한 논의가 있습니다.
     * VPN 서버에서 맞춤형 및 경량화된 Linux 커널의 사용이 잠재적인 보안 위험으로 여겨집니다.
     * 일부 사용자들은 VPN이 분산되어야 하며, 실패의 단일 지점과 개인정보 위험을 피하기 위해 익명의 암호화폐로 지불되어야 한다고 제안합니다.
     * RAM 전용 VPN 인프라로의 이전이 사용자에게 무엇을 의미하는지, 그 장단점은 무엇인지에 대한 더욱 상세한 설명을 요청하는 의견이 있습니다.
     * 영구 메모리(pmem)가 RAM으로 간주되는지에 대한 질문이 제기되었습니다.
"
"https://news.hada.io/topic?id=10936","불변의 리눅스 시스템 소개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             불변의 리눅스 시스템 소개

     * 이 기사는 학습과 지식 공유를 즐기는 OpenBSD 개발자인 Solène Rapenne이 작성했습니다.
     * Rapenne의 관심사는 NixOS, BSD, OpenBSD, Lisp, 커맨드 라인 게임, 보안, QubesOS, 인터넷 관련 주제 등입니다.
     * 그녀는 퍼센트와 람다 문자에 강한 애정을 가지고 있어, 프로그래밍과 코딩에 깊은 관심을 나타냅니다.
     * Rapenne은 이메일 solene+www at dataswamp dot org 또는 Mastodon @solene@bsd.network를 통해 연락할 수 있습니다.
     * 그녀는 PayPal donate@perso.pw를 통해 기부를 받고, 그녀의 작업을 후원하고자 하는 사람들을 위해 Patreon 계정도 가지고 있습니다.
     * 그녀의 주요 작업은 기술 관련 블로그 작성과 자유 소프트웨어에 기여하는 것입니다.

        Hacker News 의견

     * Fedora CoreOS는 불변성을 유지하면서 사용성과 학습의 용이성을 위해 찬사를 받고 있습니다. Dockerfile에서 시스템 정의를 허용하는 CoreOS Layering이라는 기능이 있습니다.
     * 이미지 기반 시스템의 개념이 불변 시스템에 대한 대안으로 소개되었습니다. 이 방법은 Fedora Silverblue와 다른 데스크톱 버전 위에 OCI 컨테이너 이미지를 구축하는 것을 포함합니다.
     * 일부 사용자들은 불변 시스템보다 사전 구성된 시스템을 선호한다고 표현하였습니다. 그들은 전체 구성을 제어하고 재부팅시 모든 변경 사항이 지워지는 시스템이 필요하다고 강조하였습니다.
     * 불변 시스템의 한계에 대한 우려가 제기되었습니다, 특히 개발자가 지원하지 않는 방식으로 수정할 수 없는 능력에 대한 것입니다.
     * 불변 시스템에 대한 정의가 제안되었습니다: ""어떤 패키지든 설치하고, 언제든지 순서에 상관없이 제거하는 것은 그것들을 전혀 설치하지 않은 것과 동일합니다.""
     * 일부 사용자들은 ""불변"" 시스템이 ""가변"" 시스템보다 더 많은 문제에 직면하는 경향이 있다는 관찰을 인용하여 불변 인프라의 개념에 대해 회의적인 의견을 표현하였습니다.
     * 부팅 중에 ram-backed 파일 시스템을 생성하는 것을 포함하는 불변 시스템을 만드는 간단한 방법이 제안되었습니다.
     * Fedora Silverblue는 ostree의 사용이 특히 칭찬받으며 운영 체제의 미래로 찬사를 받았습니다.
     * Tinycore는 ""하나의 OS, 하나의 기능""이라는 보안 철학을 보완하는 가벼운 불변 시스템으로 언급되었습니다.
     * Fedora Silverblue와 같은 불변 시스템에서 Docker가 어떻게 작동하는지에 대한 질문이 제기되었으며, Silverblue에서의 개발자 워크플로우에 대한 블로그 게시물을 요청하였습니다.
"
"https://news.hada.io/topic?id=10960","YouTube, Russell Brand의 수익 창출 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    YouTube, Russell Brand의 수익 창출 차단

     * 유튜브, 코미디언 러셀 브랜드의 채널 수익화 방해로 대응
     * 600만 이상의 구독자를 보유하고 있음에도 불구하고, 브랜드는 이제 그의 비디오에 표시되는 광고로부터 수익을 창출할 수 없게 됨
     * 이러한 유튜브의 결정은 브랜드가 성폭행을 했다는 여러 여성들의 주장을 조사한 영국 뉴스 기관의 보도에 이어 나옴
     * 이번 조치는 유튜브가 콘텐츠 제작자에 대한 심각한 혐의에 대한 입장을 보여주는 중요한 사안으로, 그들의 수입원에 영향을 미칠 수 있음
     * 유튜브가 취한 이번 조치는 플랫폼이 앞으로 비슷한 상황을 어떻게 다루는지에 대한 선례를 제시할 수 있음

        Hacker News 의견

     * YouTube, Russell Brand의 콘텐츠 수익화 차단
     * 플랫폼의 결정, 창작자의 플랫폼 외 행동으로 인한 커뮤니티 피해 방지 원칙에 근거
     * 이 정책의 넓은 적용 범위에 대한 의문, YouTube 사용자와 수익 창출 창작자를 포함한 모든 범죄에 적용 가능성
     * YouTube이 플랫폼 사용자와 사용 방식을 제한할 권리가 있는지에 대한 논란
     * YouTube의 결정의 합법성에 대한 의문, Brand가 무죄 판결을 받을 경우 소송 가능성
     * YouTube의 수익화 정책이 콘텐츠 창작에 미치는 영향, 수익뿐만 아니라 비디오 홍보에도 영향을 미친다는 제안
     * '취소된' 콘텐츠를 위한 안전한 플랫폼으로 다른 플랫폼이 제안됨
     * 수익 차단의 세부 사항에 대한 의문 - YouTube이 창작자에게 지불하지 않고 수익 차단 채널에서 광고를 계속 실행하는지 여부
     * 일부 사용자들은 YouTube의 결정을 도덕적 책임의 가면 아래 이익 증대 정책으로 비판
     * Brand의 YouTube 콘텐츠의 진화에 대한 논의, 더 이분법적이고 센세이셔널한 콘텐츠로의 변화에 대한 실망 표현, 이 변화를 YouTube의 알고리즘에 귀속
"
"https://news.hada.io/topic?id=10944","다양한 씨앗으로 벌목된 숲을 재조성하면 복원이 가속화된다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    다양한 씨앗으로 벌목된 숲을 재조성하면 복원이 가속화된다

     * 옥스퍼드 대학의 새로운 연구는 다양한 씨앗 혼합물로 벌목된 숲을 재심으면 그 회복이 크게 가속화된다는 것을 밝혔다.
     * 이 연구는 세계에서 가장 큰 생태학 실험 중 하나로, 보르네오 섬에서 진행되었으며 벌목된 열대림에서 125개의 다른 구획의 회복을 평가하였다.
     * 16개의 원래 나무 종류로 재심된 구획은 4개 또는 단 1개의 종류로 재심된 구획에 비해 더 빠른 캐노피 면적 및 전체 나무 바이오매스의 회복을 보였다.
     * 단 1개의 나무 종류로만 재심된 구획조차도 자연적으로 복원되기를 기다리는 것보다 더 빨리 회복되었다.
     * 이 연구는 다양한 나무 종류의 혼합물이 서로를 보완하여 생태계의 전반적인 기능과 안정성을 증가시킨다는 것을 제안한다.
     * 나무 종류의 다양성이 더 크면 동물 생명의 더 넓은 범위를 지원하고 간헐적인 강수량이 적은 시기에 대한 회복력을 제공한다.
     * 세계 기록된 종의 약 80%가 서식하는 열대림은 벌목과 팜유 농장으로 전환되는 속도가 놀랍게도 빠르게 사라지고 있다.
     * 이 연구는 원래의 숲에서의 생물다양성을 보존하고 이미 벌목된 지역에서 그것을 복원할 필요성을 강조한다.
     * 연구팀은 이제 실험에서 살아남은 모든 나무의 조사를 위한 새로운 3년 프로젝트를 시작하고, 숲의 건강에 대한 더 포괄적인 분석을 제공할 예정이다.

        Hacker News 의견

     * 기사는 다양한 씨앗으로 벌목된 숲을 재심을 함으로써 복원을 가속화하는 중요성을 논의한다.
     * 한 사용자는 그들의 형의 MA 논문이 EU의 모든 기후 지역에서 혼합된 숲이 날씨와 곤충에 대해 더욱 탄탄하다는 것을 발견했다고 공유한다.
     * 혼합된 숲은 특히 산악 지역에서 토양 안정화에도 중요하다.
     * 또 다른 사용자는 보르네오에서의 연구 방법론에 의문을 제기하며, 벌목 대상으로 자주 선택되는 나무 종만 심어졌다. 그들은 또한 위성 이미지를 이용한 숲 회복 평가의 정확성에 대해서도 의문을 제기한다.
     * 자연 발생 식물 군집을 심는 데 관련된 미야와키 방법이 숲 복원에 성공적인 접근법으로 언급된다.
     * 일부 사용자들은 단일문화가 약한 숲 생태계를 만든다는 현대 삼림학의 기본 개념을 고려할 때, 다양한 재심의 이점이 더 널리 인식되지 않는다는 사실에 놀라움을 표현한다.
     * 대규모 나무 심기 프로젝트를 위한 다양하고, 기후 친화적인 묘목을 구하는 것의 도전에 대해 논의하는 팟캐스트 에피소드가 언급된다.
     * 여러 사용자들은 성공적인 숲 복원을 위해 자연을 복제하고 현지 씨앗을 사용하는 것의 중요성을 언급한다.
     * 생물 다양성과 씨앗 은행에 초점을 맞춘 Terraformation과 같은 회사들이 성공적인 재생 프로젝트에서 핵심 플레이어로 강조된다.
     * 전반적인 감정은 다양한 재심의 이점이 명백해야 하며, 이 접근법을 숲 복원에 더 많이 도입하기 위해 더 많은 노력이 필요하다는 것이다.
"
"https://news.hada.io/topic?id=10967","FTC, 제네릭 약품 출시 지연을 위한 가짜 특허 등록에 대해 제약 회사들에 경고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             FTC, 제네릭 약품 출시 지연을 위한 가짜 특허 등록에 대해 제약 회사들에 경고

        Hacker News 의견

     * FTC, 제네릭 약물 생산 지연을 의도한 거짓 특허 목록에 대해 제약 회사들에게 경고 발표
     * 오렌지 북, 일부 제약 회사들이 특정 약물에 대해 승인된 제네릭이 없다고 거짓 주장하는 데 악용되는 승인된 처방약물, 관련 특허 및 독점 정보, 그리고 치료 등가성 평가 목록
     * 단일 회사에게 약 2000억 달러의 이익을 창출한 대박 약물인 휴미라/아다리누맙 사례, 문제가 되는 특허 시스템의 예시로 부각
     * FDA에게 약물을 안전하고 효과적이며 접근 가능하게 만드는 세 번째 조항을 추가하라는 요구
     * USPTO와 FDA 시스템이 망가져 있어 수리가 필요하며, 이 문제를 해결하기 위해 세 번째 기관인 FTC를 참여시키는 것이 아니라는 일부 의견
     * 이러한 행위에 참여하는 회사의 CEO들이 처벌을 받아야 한다는 제안
     * FTC의 경고, 규정을 집행하고 회사들을 행동에 대해 책임지게 하는 방향으로의 한 걸음으로 간주
     * Lina Kahn의 FTC 의장 임명, 현재의 관행에 대한 명확한 반대 입장이 변화의 잠재적 촉매제로 간주되며 긍정적인 발전으로 주목
     * 규제 당국이 이러한 행위에 대해 결정적인 조치를 취하라는 요구
"
"https://news.hada.io/topic?id=10900","Show GN: Discord에서 무료로 대용량파일 보내기 앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Show GN: Discord에서 무료로 대용량파일 보내기 앱

  디스코드에서 대용량 파일을 간편히 보낼 수 있는 디스코드 앱 입니다.

   아시다시피 디스코드는 첨부 파일용량에 매우 인색합니다. 무료는 25M, 유료가 500M 이니 업무용으로는 쓰지 말라는 것처럼 들리죠.
   그래도 디스코드를 업무용으로 쓰는 사람들은 구글드라이브에서 링크 만들어 집복사 붙여 넣는 짓을 할수밖에 없습니다. 뭐 하면 되는데, 작업 흐름이 다 끊겨버리죠. 업로드 한다음 , 링크 만들어질때까지 한참을 기다려서 다시 붙여넣으면 이걸 왜 올렸는지부터 헷갈리구요. 특히 대용량인 경우는 더하죠.

   그래서, 만들었습니다. 사용방법은 간단합니다.

준비작업 (최초1회, 서버운영자권한필요)

    1. 설치페이지로이동 합니다.
    2. [서버에 추가]를 눌러서 서버에 앱을 설치합니다.

사용방법

    1. 대화창에 /send-file 을 입력합니다.
    2. 링크가 표시는데 이걸 눌러서, 파일을 선택합니다.
    3. ~~업로드 100%완료시까지 대기~~ => 요과정은 생략됩니다.
    4. 링크가 공유되어. 전송 끝!

   파일크기 제한 없습니다.
   상대방에게 즉시 다운로드 링크가 표시되고 이를 통해서 다운로드를 할수 있습니다.
   업로드와 다운로드가 동시에 진행될수 있어서, 실시간으로 파일공유가 시작됩니다.
   즉,구드로 하는 것과 차이라면 용량 제한 없는 것과 실시간 공유라고 할수 있겠네요. 90시간후 자동으로 삭제되는것도 차이구요.

   써보시고 불편한게 있으면 말씀해주세요..

   설치 페이지 링크가 깨졌네요..
   아래 링크 클릭하세요
   https://discord.com/application-directory/999199298380111882

   file.kiwi와 비슷한 느낌이었는데 들어가보니 file.kiwi의 디스코드 봇이었군요! 잘 쓰고 있습니다. 감사합니다.

   앗 비천한 서비스를 알고 계시니.. 몸둘바를 모르겠사옵니다.

   8mb로 청크로 자른다음 업로드하나요?

   5m 또는 20m로 나눈다음 암호화합니당

   /request-file 을 입력하면, 파일을 넣어달라고 요청하는 방식으로 작업할수도 있습니다.
   상대방은 클릭해서 파일만 선택하면됩니다.

   (수정이 안되어 댓글로 추가합니다.)
"
"https://news.hada.io/topic?id=11009","Mac Mouse Fix - 트랙패드 동작을 마우스로 하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Mac Mouse Fix - 트랙패드 동작을 마우스로 하기

     * 맥의 마우스를 더 쓰기 편하게
     * 트랙패드에서 가능했던 스페이스간 이동, 미션 컨트롤 실행, 데스크탑 보기, 퀵 룩 실행 등을 마우스로 할 수 있게 해주는 유틸
     * 부드럽고 Responsive한 스크롤 지원
     * Objective-C 오픈소스
     * 현재 버전 2이고, 3 베타테스트 진행중

   로지옵션스에서 마우스 버튼에 단축키로 쓰고있었는데
   이것도 괜찮은 방법이네요!

   예전에 잠깐 마우스4번 5번 버튼을 위해서 사용해 봤었는데 2.4GHz만 동작하고 블루투스 마우스에서는 동작하지 않았던 기억이 있네요. 3번전 나오면 테스트 해봐야 겠습니다.
"
"https://news.hada.io/topic?id=10893","나의 가장 좋아하는 API는 유럽 중앙은행 웹사이트의 'zipfile'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                나의 가장 좋아하는 API는 유럽 중앙은행 웹사이트의 'zipfile'

     * 글에서는 저자가 가장 좋아하는 API, 즉 유럽 중앙은행 웹사이트의 zipfile에 대해 이야기하며, 이 zipfile은 유로화가 다른 통화에 대해 어떤 위치에 있었는지에 대한 역사적 데이터를 제공한다.
     * 저자는 curl, gunzip, sqlite3, pandas 등 다양한 도구를 사용하여 zipfile에서 데이터를 다운로드, 압축 해제, 쿼리하는 방법을 보여준다.
     * zipfile에서 얻은 데이터는 ""wide"" 형식으로, 날짜 열과 각 통화에 대한 추가 열이 있으며, 이는 필터와 집계에 이상적이지 않다.
     * 저자는 pandas를 사용하여 데이터를 ""wide"" 형식에서 ""long"" 형식으로 변환하는 과정, 즉 ""melting""을 수행한다.
     * 저자는 또한 데이터에 문제가 있다고 지적한다: 각 줄 끝에 있는 trailing comma가 melting 과정을 방해한다. 이는 pandas의 메소드 체인에 .iloc[:, :-1]를 추가함으로써 해결된다.
     * 저자는 이 데이터를 다루는 데 ""데이터 준비"" 작업이 필요하다는 것을 인정하지만, ECB 외환 데이터는 다른 오픈 데이터 릴리스에 비해 상대적으로 쉽게 다룰 수 있다고 지적한다.
     * 저자는 그 다음으로 정리된 데이터를 csvbase 테이블에 업로드하는 방법과 gnuplot을 사용하여 데이터의 그래프를 그리는 방법을 보여준다.
     * 저자는 또한 sqlite와 유사하지만 columnar인 DuckDB라는 도구를 소개하고, 이를 사용하여 HTTP에서 바로 csv를 테이블 파일로 로드하는 방법을 보여준다.
     * 저자는 오픈 데이터가 오픈 API로 작동할 수 있음을 지적하며, ECB의 zipfile의 간단함을 데이터 교환 형식으로 칭찬한다.
     * 저자는 또한 유로화의 간략한 역사를 제공하며, 처음 출시된 2000년에 왜 달러에 대해 약했는지 설명한다.
"
"https://news.hada.io/topic?id=10942","구글 Infrastructure Manager 정식 출시 - Terraform으로 GCP 리소스 관리하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       구글 Infrastructure Manager 정식 출시 - Terraform으로 GCP 리소스 관리하기

     * 구글 클라우드에 추가된 Managed Terraform 서비스
     * IaC(Infrastructure as Code)를 이용하여 구글 클라우드 인프라를 관리
     * 테라폼의 선언형 구문, 재사용 모듈, 구문/정책의 유효성 검사 등을 그대로 이용 가능
     * Cloud Logging, Cloud Identity and Access Management(IAM) 같은 구글 클라우드 생태계 시스템들과 완전히 통합
"
"https://news.hada.io/topic?id=10910",""Cystic fibrosis" 치료법, 'Breakthrough Prize' 수상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ""Cystic fibrosis"" 치료법, 'Breakthrough Prize' 수상

     * 낭성 섬유증 치료제인 Trikafta가 300만 달러의 Breakthrough 상을 수상했다.
     * Trikafta는 캘리포니아 샌디에고의 Vertex Pharmaceuticals에서 Sabine Hadida, Paul Negulescu, Fredrick Van Goor 과학자들에 의해 개발되었다.
     * 이 치료법은 낭성 섬유증을 가진 사람들의 결함 있는 단백질을 대상으로 한다. 이는 폐와 다른 기관에 영향을 미치는 유전 질환이다.
     * Trikafta는 낭성 섬유증 환자의 90%의 삶을 개선했으며, 이 치료법은 지난 30년 동안 생물의학 연구에서 가장 중요한 성과 중 하나로 극찬받았다.
     * 낭성 섬유증은 전 세계적으로 약 10만명의 사람들에게 영향을 미치며, Trikafta 개발까지는 생명을 제한하는 질병으로 간주되었다.
     * 2019년 미국 식품의약국에 의해 승인된 이 치료법은 평균 수명을 약 30년에서 80년 이상으로 늘릴 수 있다.
     * 이 질병은 낭성 섬유증 투과성 조절 단백질(CFTR)을 만드는 유전자의 돌연변이에 의해 발생하며, 이 단백질은 점액, 땀, 그리고 다른 체액의 생성에 관여한다.
     * 연구팀은 잘못 접힌 단백질이 올바르게 기능하도록 하는 약물 조합을 찾는 데 초점을 맞추었으며, 이는 Trikafta의 개발로 이어졌다.
     * Breakthrough 상은 2012년에 설립되었으며, 러시아-이스라엘 억만장자인 Yuri Milner와 Meta의 최고경영자인 Mark Zuckerberg를 포함한 다른 인터넷 기업가들이 후원하고 있다.
     * Breakthrough 상의 다른 수상자들에는 파킨슨병 발병 위험과 관련된 유전자를 발견한 연구자들과 백혈병 치료를 위한 CAR-T세포 면역치료법을 개발한 연구자들이 포함되어 있다.

        Hacker News 의견

     * 기사는 뚜렷한 영향을 미치는 낭성 섬유증 (CF) 치료제인 Trikafta에 대해 논의하며, 이는 Breakthrough Prize를 수상하였다.
     * CF 환자들은 Trikafta 복용 후 그들의 상태가 크게 개선되었으며, 병원 입원이 줄어들고 증상이 완화되었다고 보고하였다.
     * 그러나, Trikafta는 췌장이나 정관과 같은 장기에 CF가 초래한 손상을 되돌릴 수 없다.
     * Trikafta의 일반적인 부작용 중 하나는 소화가 개선되어 체중이 증가하는 것으로, 이는 건강한 체중을 유지하는데 어려움을 겪는 CF 환자들에게 도전이 될 수 있다.
     * Trikafta의 출시 시기는 COVID-19 팬데믹 동안 CF 환자들의 병원 입원을 줄이고 병상을 확보하는데 도움이 되었다.
     * 일부 사용자들은 Trikafta의 부작용으로 불안을 경험한다고 보고하였지만, 이는 약물로 관리할 수 있다.
     * Trikafta의 긍정적인 영향에도 불구하고, 그것의 높은 비용 ($10k per dose)과 빈곤한 국가에서 이용할 수 없다는 사실에 대한 비판이 있다.
     * Trikafta의 제조사인 Vertex Pharmaceuticals는 수많은 국가에서 특허를 요구함으로써 잠재적인 일반 경쟁자들을 차단하고 있다고 보고되었다.
     * 백인 인구에서 CF의 높은 유병률은 CFTR 돌연변이의 보호 효과 때문으로 추정되며, 이는 장티푸스 열에 대한 보호 효과를 가진다.
     * Trikafta의 생명을 바꾸는 이점에도 불구하고, 이는 CF, 염증, 그리고 감염을 막기 위해 사용된 강력한 항생제로 인한 수년간의 손상을 되돌릴 수 없다.
     * 기사는 또한 CF로 고통받던 게임 디자이너인 Bill Williams의 이야기를 언급하였다. 그는 37세에 사망하였다.
     * 사용자들은 Trikafta로 이익을 얻은 사람들에게 행복을 표현하지만, 치료가 가능해지기 전에 CF로 인해 생명을 잃은 사람들에 대한 슬픔도 표현하였다.
"
"https://news.hada.io/topic?id=10966","GNU와 무료 소프트웨어 운동의 40년","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         GNU와 무료 소프트웨어 운동의 40년

     * 무료 소프트웨어 재단(FSF)이 2023년 9월 27일자로 GNU 운영 체제의 40주년과 무료 소프트웨어 운동의 시작을 기념
     * ""GNU's not Unix""를 의미하는 GNU 운영 체제는 1983년 컴퓨터 과학자 Richard Stallman에 의해 무료 소프트웨어 Unix와 같은 운영 체제를 제공하는 목표로 개발되었음
     * GNU는 사용자의 자유를 위해 특별히 개발된 유일한 운영 체제로, 독점적인 운영 체제에 대한 완전하고 윤리적인 대체품을 제공
     * GNU 시스템은 무료 소프트웨어를 기반으로 한 가장 널리 사용되는 운영 체제일 뿐만 아니라, 40년 동안 무료 소프트웨어 운동을 이끌어온 핵심 철학을 형성
     * GNU는 일반적으로 커널 Linux와 결합되어 인터넷의 척추를 형성하며 수백만 개의 서버, 데스크톱, 임베디드 컴퓨팅 장치를 구동
     * GNU는 ""copyleft""라는 소프트웨어 라이선싱 접근법을 개척했으며, 이는 파생 작품에서 동일한 권리를 보존해야 한다는 것을 GNU 일반 공중 사용 허가서(GPL)에서 가장 잘 보여줌
     * 무료 소프트웨어 커뮤니티는 40년 동안 강하게 유지되고 성장하고 있으며, 이는 FSF의 연례 LibrePlanet 컨퍼런스에서 소프트웨어 자유와 디지털 윤리에 대해 보여주고 있음
     * GNU의 기념일을 축하하기 위한 특별 행사로는 스위스 Biel에서의 GNU 해커 모임과 보스턴, MA에 위치한 FSF 본부에서의 해커데이가 있음
     * 1985년에 설립된 FSF는 컴퓨터 사용자가 컴퓨터 프로그램을 실행, 편집, 공유, 기여, 재배포할 권리를 증진하고 소프트웨어 사용의 자유에 대한 윤리적, 정치적 문제에 대한 인식을 확산하는 데 전념하고 있음
     * 1992년 GNU와 Linux의 결합은 완전한 무료 운영 체제를 형성하였으며, 이로써 처음으로 PC를 비자유 소프트웨어 없이 실행할 수 있게 됨

        Hacker News 의견

     * 무료 소프트웨어 재단(FSF)과 GNU는 오랫동안 무료 소프트웨어를 촉진하고, 더 신뢰할 수 있고 친절한 환경을 만드는 데 기여한 것에 대해 감사받고 있다.
     * 무료 소프트웨어 운동의 원래 비전은 지난 40년 동안 진화해 왔으며, 소프트웨어 생산의 개방적이고 협업적인 방식이 널리 채택되었다.
     * FSF의 핵심 메시지는 여전히 중요하지만, 그들의 전략은 기술에 대한 주류 대화에서 그들을 밀어냈다.
     * 일부 비평가들은 FSF의 접근 방식이 수동적이며, 기술 회사들이 무료 소프트웨어 도구를 사용하여 폐쇄 소스 소프트웨어를 만드는 변화하는 풍경에 적응하지 못했다고 주장한다.
     * FSF에 대한 제안으로는 무료 소프트웨어에 대해 작업하는 스타트업을 위한 보조금 프로그램을 시행하고, 무료 소프트웨어가 사전 설치된 중고 컴퓨터 하드웨어를 재판매하며, 기술 분야의 노동 조합과 협력하는 것이 있다.
     * FSF의 존재는 많은 사람들이 컴퓨팅 분야에서 경력을 추구하게 하는 데 영향을 미쳤다.
     * 허용적인 비저작권 오픈 소스 라이선스의 확산은 무료 소프트웨어 운동에 해를 끼친 요인으로 간주된다.
     * GPL 라이선스 가족은 법적으로 기여하고 돌려주는 이념을 확립한 것에 대해 감사받고 있으며, 이는 오픈 소스 운동의 성공에 기여했다.
     * GNU bash, GNU ed, GNU chess, GNU coreutils, GNU hello 등의 GNU 소프트웨어는 이제 www.exaequOS.com에서 사용할 수 있다.
     * GNU 프로젝트의 장수와 영향력은 소프트웨어 분야에서 중요한 성과로 간주된다.
"
"https://news.hada.io/topic?id=11014","나의 솔로프레너 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              나의 솔로프레너 이야기

     * 소프트웨어 엔지니어에서 성공적인 솔로프레너로, 2년 만에 월 45K 달러를 벌어내는 Tony Dinh의 여정에 대한 상세한 기사
     * Tony는 7년간의 기술 산업 경험과 프론트엔드, 백엔드, DevOps, 모바일 앱, 게임 개발, UX/UI 디자인 기술을 활용하여 2년 전에 일자리를 그만두고 풀타임 인디 해커가 되었다.
     * 그의 여정은 4개의 작지만 성공적인 제품을 만들고, 트위터에서 97K 팔로워를 모으고, 6,000명 이상의 구독자가 있는 뉴스레터를 만들고, 비즈니스 위기를 극복하는 것으로 시작했다.
     * 그의 첫 번째 성공적인 앱인 DevUtils는 2주 만에 만들어졌고 친구, 가족, 동료들에게 호평받았다. 그 후 Hacker News에 게시되어 그의 첫 인터넷 달러를 얻게 되었다.
     * Tony는 장기적인 배포 채널을 구축하기 위해 트위터로 돌아갔고, 흥미로운 것들을 만들고, 다른 사람들과 교류하고, 스레드를 작성하고, 흥미롭고 친절한 사람이 되어 6개월 만에 팔로워를 100명에서 700명으로 늘렸다.
     * 그의 첫 번째 ""진짜"" 비즈니스인 Black Magic은 트위터 API 실험에서 탄생했다. 웹 앱으로 시작하여 ""Pro"" 버전에 대한 월 4달러의 구독료를 받고 빠르게 인기를 얻었다.
     * 2021년 8월에 직장을 그만둔 후 Tony는 Black Magic과 DevUtils를 구축하는 데 집중하였고, 그의 월 수익을 4K 달러로 늘렸다.
     * 그의 세 번째 제품인 스크린샷 앱 Xnapper도 성공적이었으며, 월 6K 달러를 벌어들였다.
     * 트위터가 그들의 API가 더 이상 무료가 아니라고 발표한 후 Tony는 API 가격을 감당할 수 없게 되어 Black Magic을 128K 달러에 팔았다.
     * 그의 네 번째 제품인 Typing Mind, API를 사용하는 ChatGPT에 대한 더 나은 UI는 2023년 3월에 출시되었으며 현재 평균적으로 월 ~30K 달러의 수익을 내고 있다.
     * Tony는 또한 팀을 구축하기 시작했으며, 풀타임 직원 1명과 프리랜서 3명을 고용함으로써 그가 관심 있는 것들에 집중하고 워크-라이프 밸런스를 유지할 수 있게 되었다.
     * 인디 해커를 꿈꾸는 사람들에게 그의 주요 교훈은 일반화, 불공정한 이점 구축, 관객 구축, 초기에 작고 자주 출하, 제품의 핵심 가치에 집중, 인내, 그리고 행운을 위한 준비가 포함되어 있다.

        Hacker News 의견

     * 토니의 솔로프레너로서의 여정과 그가 개발한 수익성 있는 제품들, 예를 들어 스크린샷용 Xnapper에 대한 기사
     * 토니의 제품에 대한 지원에 대해 불만을 표현한 일부 사용자들, 해결되지 않은 버그와 업데이트 부족을 지적
     * 토니의 성공 이야기의 투명성에 대한 의구심, 고객 획득 및 광고의 숨겨진 비용에 대해 의문을 제기하는 일부 사람들
     * 월별 반복 수익(MRR)에 초점을 맞추어 성공 이야기를 과장하는 인디 해커들의 추세를 강조하는 일부 댓글들
     * 사용자 친화적인 인터페이스로 칭찬받는 토니의 ChatGPT 래퍼 제품, 비슷한 서비스의 복잡한 설정과 대비
     * 토니의 월 수익 45k 달러가 칭찬받고, 그의 생활 방식이 일부 사람들에게 영감을 줌
     * 비즈니스 조언이 종종 개별 경험에 특화되어 있으며 일반적으로 적용되지 않을 수 있다는 경고하는 일부 댓글들
     * 토니의 성공이 수년간의 개인 연습에 기인한다는 것, 토니 로빈스의 말을 인용한 한 댓글: ""사람들은 공개적으로 연습한 것에 대해 보상받는다.""
     * 트위터에서 영향력 있는 존재를 유지하고 관객과 소통하는 것의 어려움을 표현하는 일부 댓글들
     * 토니의 성공을 축하하는 전 동창, 그의 수익이 특정 국가에서 미치는 중요한 영향을 강조
     * shottr.cc와의 비교, 비슷하지만 더 저렴한 스크린샷 도구
     * 토니가 트위터를 통한 수익 창출에 효과적으로 활용하는 것이 주목, 많은 성공한 인디 해커들이 강력한 트위터 존재감을 가지고 있다는 관찰
"
"https://news.hada.io/topic?id=10950","구글 Bard, Extention 기능을 통한 새로운 사용법 제안","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  구글 Bard, Extention 기능을 통한 새로운 사용법 제안

   Google Bard는 이제 Google 앱과 서비스와 통합되어 더욱 유용한 응답을 제공합니다. 이를 통해 Bard는 Gmail, Docs, Drive, Google Maps, YouTube, Google Flights 및 호텔과 같은 Google 도구에서 관련 정보를 찾고 보여줄 수 있습니다. (ChatGPT의 Plug-in의 개념을 구글은 기존의 chrome 등에 있던 Extention의 개념으로 풀어 내었습니다.)
     * 현재 구글 바드의 최신 기능은 언어설정이 영어일 경우 사용 가능합니다.

  주요 기능

     * Bard Extensions: 이는 Bard가 여러 앱과 서비스에 걸쳐 필요한 정보를 찾을 수 있게 하는 새로운 방법입니다.
       ex) 여행 계획시 Bard에게 Gmail에서 모두에게 맞는 날짜를 찾고, 실시간 항공 및 호텔 정보를 확인하며, 공항까지의 Google Maps 길찾기와 YouTube 동영상까지 볼 수 있습니다.
       ex) 내 Google Drive에서 2023년 6월에 작성된 이력서를 찾아서 짧은 문단의 자기소개글로 요약해 달라 등의 요약을 시킬 수 있습니다.
     * 개인 정보 보호: Gmail, Docs, Drive의 내용은 인간 리뷰어에게 보이지 않으며, 광고를 보여주거나 Bard 모델을 훈련하는 데 사용되지 않습니다.
     * ""Google it"" 기능: Bard의 응답을 쉽게 더블 체크할 수 있습니다. ""G"" 아이콘을 클릭하면 Bard는 응답을 읽고 웹의 내용을 평가합니다.
     * 다른 사람과의 대화 지속성: 누군가가 Bard 채팅을 공개 링크로 공유하면, 그 주제에 대해 Bard에게 추가 질문을 하거나 자신의 아이디어로 시작할 수 있습니다.

    추가 정보

   이러한 새로운 기능은 PaLM 2 모델의 업데이트 덕분에 가능하며, 이 모델은 더 직관적이고 상상력이 풍부하게 훈련되었습니다.

   구글홈에나 먼저 넣어달라..
"
"https://news.hada.io/topic?id=10983","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   아침에 운동하고 오후에 헌혈하고 저녁에 맛있는 저녁을 먹습니다.

   새로구입한 차를 타고 드라이브가려합니다.
   영흥도에 고양이역이라는 보호소가 있다던데 딸과 방문해볼까 싶네요...

   와 좋네요. ""입장료는 다친 고양이/버려진 고양이 사료비와 치료비로 사용""

   오래된 LG 키폰을 하나 구해서 설치해서 Ebay에서 중고로 산 Dialogic 보드와 연동했는데요. 클로바 음성합성으로 보이스 프롬프트 만들고, 위스퍼 음성인식 및 다른 음성 합성 엔진을 붙여보려고 합니다. 20년전에 만든 ARS 코드가 아직 잘 동작하더라고요.

   지난주에 시작한 블랙리스트는 시즌1 완료하니 지치더라고요. 회차가 너무 많아요.
   무빙이 끝나서 그거 보고, 디즈니에 있는 다른 작품들 볼려고 합니다.

   요즘 elixir 공부중입니다. 평일에 진도를 많이 나가지 못해 주말에 좀 많이 보려고 합니다.
"
"https://news.hada.io/topic?id=10925",""실패"라고 말하지 마세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ""실패""라고 말하지 마세요

     * 언어는 좌절에 대한 우리의 인식을 형성함. 상황을 설명하고 다음 단계를 제안하려면 ""실패(Failure)"" 이외의 단어를 사용할 것
     * ""Fail Fast"" 도 ""Fail Forward""도 아님
     * ""Fail""은 무슨 일이 일어나는 지에 대해서 전혀 적합한 단어가 아님
          + 너무 최종적이고, 부정적이고, 막다른 길임
          + 실패 후에는 뭘 하지? 걸레질?
     * 말에는 의미가 있음. 실제로 무슨 일이 일어나고 있는지 설명하고, 다음에 있는 일을 제안 가능
          + 하지만, ""실패""라는 단어는 그 어느 것도 달성하지 못함

새로운 분야를 탐험할 때

     * 미로를 풀다가 길을 잘못 들었다면, ""실패""한게 아니라 단지 되돌아 온 것
     * 이는 비즈니스와 제품을 탐색하고 만드는데 있어서 자연스러운 것
     * 실제로 ""아이디어 미로"" 라고 부르기도 함
     * 종종 실험의 형태로 나타나는 경우가 많음
     * 실험의 결과는 가설을 지지하거나 거부하는 것이지, 두가지 결과 모두 ""실패""가 아님
     * 대부분의 경우 개선 사항을 발견하지 못하더라도 ""A/B 테스트""는 좋은 방법임
     * ""실패"" 대신 사용할 수 있는 단어: 실험(experiment), 테스트, 내기(bet), 학습(learning), 조사(investigate), 시도(trial), 재시도(retry), 조사(probe)
     *

     ""두 가지 가능한 결과가 있습니다. 결과가 가설을 확인하면 측정을 한 것입니다. 결과가 가설과 반대라면 발견을 한 것입니다."" - 엔리코 페르미

혁명을 일으키려고 할 때

     * 당신이 이전에 누구도 성취한 적이 없는 새로운 것을 창조하려고 하고, 그것이 업계에 즉시 혁명을 일으키지 않는다면 당신은 ""실패""한 것이 아니라 아직 돌파구를 찾지 못한 것
     * 혁신을 위해서는 올바른 솔루션을 찾기까지 수많은 시도가 필요한 경우가 많음
     * 정답이 명백하다면 그것은 혁신이 아닐 것
     * ""실패"" 대신 사용할 수 있는 단어: 되돌아가기(backtrack), 반복(iterate), 시도(trial), 시도(attempt), 단계(step), 누락(miss)
     *

     ""나는 실패하지 않았습니다. 나는 방금 작동하지 않는 10,000가지 방법을 발견했습니다. "" - 토마스 에디슨

학습할 때

     * 새로운 기술을 배우고 있는데 비틀거리거나, 혼란스럽거나, 길을 잃거나, 그것을 숙달했다고 생각했지만 아직 갈 길이 멀다면, 당신은 ""실패""한 것이 아니라 성장하고 있는 것
     * 좋은 선생님은 학생이 기술을 빠르게 배우지 않거나 심지어 뒤로 물러나는 것에 대해 화내지 않음
     * 학습 곡선(Learning Curve)는 잘 알려져 있으며 직선이 아님
     * ""실패"" 대신 사용할 수 있는 단어: 연습(practice), 육성(cultivate), 획득(acquire), 개발(develop), 학습 곡선, 학습의 순간(learning moment), 시도(trial), 진전(progression), 진화(evolve)
     *

     ""내가 항상 할 수 없는 일을 하는 이유는 그것을 하는 방법을 배우기 위해서입니다."" - 빈센트 반 고흐

반복할 때

     * 이미 작동하는 것을 반복하여 더 좋게 만들고 있다면? 그건 최적화(optimization) 임
     * 개선을 위한 모든 시도가 효과가 있거나, 기대한 만큼의 효과를 거두는 것은 아니지만, 상황이 기본적으로 지금 상태로도 괜찮을 때 ""실패""라고 불러서는 안 됨
     * ""실패"" 대신 사용할 수 있는 단어: 개선(refine), 교정(calibrate), 최적화(optimize), 연마(polish), 다듬기(hone), 수정(correct), 미세 조정(fine-tune), 집중하기(dial-in)
     *

     ""유일한 진짜 실수는 아무것도 배우지 못하는 것입니다."" - 헨리 포드

문제를 해결할 때

     * 1인 스타트업이든 1000명 규모의 조직이든 복잡한 공간에서 문제를 해결하려면, 혁신과 속도를 유지하면서도 좌절, 복잡함, 잘못된 시작이 없어야 함
     * ""실패"" 대신 사용할 수 있는 단어: 반복(iterate), 적응(adapt), 조정(adjust), 방향-수정(course-correct), 조정(tweak), 수정(revise), 변형(morph), 리팩터(refactor), 변경(amend), 수리(fix)
     *

     ""성공은 최종적인 것이 아니며, 실패는 치명적이지 않습니다. 중요한 것은 계속하려는 용기입니다."" - 윈스턴 처칠

중대한 오류가 났을 때(major error)

     * 완전한 오판, 잘못된 전략적 결정, 수십 명의 사람들이 몇 달 동안 노력했지만 쓸모없게 된 프로젝트 등 큰 실수를 저질렀skdy?
          + 이건 큰 일이고, ""우린 실패했어요""라고 말하는게 정당할 수도 있음
          + 그럼에도 불구하고 이렇게 얘기하는 것은 그 성격을 설명하지 않으며, 건설적인 일이 될 해결책을 가리키지도 않음
     * ""실패"" 대신 사용할 수 있는 단어: 피봇(Pivot), 진화(evolve), 이관(migrate), 점검(overhaul), 개선(revamp), 변환(transform), 재구성(reconstruct), repurpose(용도 변경), 재구상(reimagine), 재설계(redesign), 재창조(recreate), 재발명(reinvent), 리엔지니어링(reengineer), 리모델링, 리브랜딩, 재조정(realign)
     *

     ""성공은 성공 위에 세워지는 것이 아닙니다. 실패를 기반으로 합니다. 좌절에 기반합니다. 때로는 재앙에 기반하기도 합니다."" - 섬너 레드스톤

마무리

     * 우리가 정말 돌이킬 수 없을 정도로 ""치명적으로 실패""한 순간에 그때 우리는 그렇게 말해야 함
     * 특히 의미 있는 성공을 거두기도 전에 회사가 문을 닫아야 한다면, 그때 ""우리는 실패했다""고 할 수 있음
     * 그렇지 않으면, 현재 상황을 더 잘 이해하고 다음에 해야 할 일의 방향을 지시할 수 있도록 ""더 잘 설명할 수 있는 방법""을 찾아볼 것
     *

     ""성공이란 열정을 잃지 않고 실패에 실패를 거듭하는 것입니다."" - 윈스턴 처칠

   끊임없이 도전하는 자에게 실패라는 단어는 없다.
   아직 성공하지 않은 것 뿐.

   한국은 실패를 용서하지 않는 사회라 오죽하면 '역돌격'같은 변태같은 용어까지 생겼을까 싶군요.

   Test failed

   말에는 의미가 있음. 실제로 무슨 일이 일어나고 있는지 설명하고, 다음에 있는 일을 제안 가능
     * 하지만, ""실패""라는 단어는 그 어느 것도 달성하지 못함

   ""성공이란 열정을 잃지 않고 실패에 실패를 거듭하는 것입니다."" - 윈스턴 처칠

   뭔가 글쓴이도 횡설수설 하는 것 같고 말장난 같네요.
   처칠의 말과 본문 서두의 글이 서로 다른데..

   '(모든 것이) 실패했다' 라는 말이 불필요하지,
   작은 try 과정속에서의 실패는 명확히 인지할 수 있도록 표현하는 것이 좋다고 생각합니다.
   처칠의 말처럼 작은 시도의 실패가 전체의 실패를 의미하는 것이 아닌데,
   작은 시도조차 실패라고 말 할 수 없다면 오히려 제대로 된 판단을 하지 못할 것 같네요.

   역돌격 같은 말 처럼요.

   마지막 섹션의 내용과 처칠의 발언을 가장 마지막에 인용했다는 점이, 정말 실패라고 부를 수 밖에 없는 때도 이 또한 성공을 위한 과정이라는 메시지를 던지려고 한 게 아닐까 싶네요.

   '실패'는 ""포기한 상태, 결과를 확정 짓는 단어""이므로 쓰지말라는 뜻 같습니다.
   aster님이 말씀하시는 ""과정 속에서의 실패""는 ""연습""이나 다른 표현을 사용하라고 하네요.

   포기하지 않았다면 실패가 아니라 아직 연습/실험 중

   글쓴이는 실패라고 말하지 말라는 자신의 의견에 공감을 얻는데에 실패했습니다.

   그렇지만, ""실패""라고 말하지 마세요

   좋은 글입니다.
   다만 읽으면서 군에서 부대 철수가 아닌 재편성, 후퇴가 아닌 역돌격 이라는 말장난이 떠올라서 흠칫했네요.

   해병대 출신이신가 보군요(아님)

   ㅋㅋ역돌격
"
"https://news.hada.io/topic?id=10892","윌링햄, 'Fables'를 공개 도메인으로 전송","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       윌링햄, 'Fables'를 공개 도메인으로 전송

     * 만화책 'Fables'와 그와 관련된 모든 스핀오프와 캐릭터들이 창작자인 Bill Willingham에 의해 공공 재산으로 공개되었습니다.
     * 이번 결정은 전례 없고 되돌릴 수 없는 것으로, Willingham이 단독으로 소유했던 것이 이제는 모두가 영원히 소유하게 되었습니다.
     * Willingham은 이 결정에 대해 실용성과 철학을 여러 이유로 들었습니다.
     * 실용성: 수년 동안 Willingham은 그가 창작자 소유 출판 계약을 체결한 DC Comics와 문제를 겪었습니다. 그는 이 회사가 계약을 DC Comics와 그 소유 회사만을 위한 방식으로 해석했다고 주장하며, 이로 인해 'Fables' 소유권이 '나쁜 손'에 빠지게 되었다고 설명했습니다.
     * DC에 대한 소송을 감당할 수 없는 Willingham은 지적재산을 모두에게 주어 많은 '좋은 손'에도 떨어지게 함으로써 다른 경기장에서 싸우기로 결정했습니다.
     * 철학: Willingham은 상표와 저작권 법의 급진적 개혁을 주장하며, 모든 지적재산은 최초 출판 시점부터 20년 동안 원작자가 소유하고, 그 후에는 누구나 사용할 수 있는 공공 재산이 되어야 한다고 믿습니다.
     * Willingham은 약 20년 동안 'Fables'의 소유자였으며, 이번 결정을 그의 철학을 시험하는 것으로 보고 있습니다. 그는 미래에 다른 소유권이 이를 따를 가능성을 시사했습니다.
     * DC Comics와의 지속적인 문제에도 불구하고, Willingham의 회사와의 계약은 여전히 유효합니다. 그는 DC 외의 다른 사람을 통해 'Fables' 만화를 출판하거나 'Fables' 영화를 승인할 수 없습니다.
     * 그러나 'Fables'이 이제 공공 재산이므로, 다른 사람들은 Willingham이나 DC Comics의 허락 없이 자신들만의 'Fables' 버전을 만들 수 있습니다. 이에는 'Fables' 영화, 만화, 책, 장난감 등이 포함됩니다.
     * Willingham은 다른 사람들이 'Fables' 소유권을 어떻게 활용할지 기대하고 있습니다.

        Hacker News 의견

     * 'Fables' 창작자인 Bill Willingham, 시리즈를 공공 도메인에 공개할 의사를 밝혔다.
     * Willingham의 결정에 대한 추가적인 맥락을 제공하는 후속 게시물이 있다.
     * 일부 댓글 작성자들은 DC Comics가 창작자들을 대하는 방식에 불만을 표현하며, 누락된 로열티 지급과 인식된 탐욕을 예로 든다.
     * 특정 기간 후에 소프트웨어와 일상 제품을 포함한 더 많은 작품이 공공 도메인에 공개되어야 한다는 요구가 있다.
     * DC Comics는 'Fables' 시리즈와 그 요소들이 여전히 그들의 저작권 하에 있으며 공공 도메인에 없다고 반응했다.
     * 일부 댓글 작성자들은 ""Willingham 저작권"" 아이디어를 지지하며, 이는 원작자가 최대 20년 동안 지적 재산권을 유지한 후, 최대 10년 동안 판매할 수 있고 그 후에는 공공 도메인에 들어가게 된다.
     * 무언가를 공공 도메인에 공개하는 것에 대한 기술적인 사항에 대한 토론이 있으며, 이는 기존의 미국 사례법을 참조한다.
     * 일부 댓글 작성자들은 'Fables'의 많은 캐릭터들이 이미 공공 도메인에 있다고 지적하며, 이를 Willingham의 결정이 상호 보상의 형태로 보는 경향이 있다.
     * Willingham의 결정의 실질적인 영향에 대한 의문이 제기되며, 일부는 국제 저작권 법과 DC Comics가 여전히 'Fables'에 대한 계약 권리를 보유하고 있다는 사실로 인해 많은 변화가 없을 것이라고 믿는다.
"
"https://news.hada.io/topic?id=10898","llama2를 파인 튜닝 하고 있는 사람들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        llama2를 파인 튜닝 하고 있는 사람들

   해커 뉴스에서 llama2를 파인 튜닝한 사례입니다.

   파인 튜닝은 나의 질문 + 대답 세트로 AI 모델을 추가적으로 조정하는 것입니다.

   파인튜닝을 하는데 최소 50개의 예제에서 가능하다면 1000개 이상의 예제가 있으면 좋다고 합니다.

   저자는 파인튜닝한 Llama 7B 모델이 GPT-3.5보다 50배 이상 저렴하다고 말하고 있습니다.

   물론 라마 7B와 GPT-3.5(165B)의 비교는 말이 안되기는 하지만 파인튜닝된 GPT 모델의 경우는 저렴하지 않기 때문에 라마를 파인튜닝해서 사용하는 사례가 늘어나지 않을까 생각해 봅니다.

   ""You can run 70B LLAMA on dual 4090s/3090s with quantization. Going with dual 3090s you can get a system that can run LLAMA 2 70B with 12K context for < $2K.

   I built two such a systems after burning that much in a week on ChatGPT.""

  https://news.ycombinator.com/item?id=37489601

   댓글이 인상적이네요. 뒤에 남긴 댓글 보면, 각기 다른 팀에서 데이터를 다른 포맷으로 관리하는데 ChatGPT로 정규화해서 1주일 만에 데이터 포맷 맞췄다고 하는데. 이렇게 잘 조합하면?!

   오옷 좋은 아이디어네요. replicate CEO까지 등장해서 댓글 다는게 인상 깊었어요.
   GPT-3.5 (turbo로 추측됨) 비용과 llama 70b의 비용이 비슷할 것이라는 의견이 기억에 남네요.
   저는 현업에서 GPT를 쓸 생각이지만 llama + 파인튜닝으로 이점을 취하는 스타트업들이 등장하는게 보여서 가져와봤습니다.
"
"https://news.hada.io/topic?id=10903","스크레이핑을 통한 오스트리아 식료품 가격 추적","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       스크레이핑을 통한 오스트리아 식료품 가격 추적

     * 게임 개발자인 마리오 제크너의 프로젝트, 오스트리아 식료품 가격 추적 도구 개발
     * 오스트리아의 높은 인플레이션률에 대한 제크너의 프로젝트 동기
     * 오스트리아 정부의 식품 가격 데이터베이스 계획과 제크너의 프로토타입 개발
     * 제크너의 도구, NGO와 미디어, 정당들에게 주목받지만 호스팅에 대한 행동은 없음
     * 제크너, 식료품 체인으로부터의 법적 위험에도 불구하고 도구 호스팅 결정
     * 제크너의 도구, 식료품 체인의 온라인 상점 크롤링 및 데이터 정규화 방식
     * 클라이언트 측에서 실행되는 전체 시스템, 매일 최신 데이터 가져오기
     * 제크너의 오픈소스 도구, 오스트리아와 독일, 슬로베니아의 모든 상점 추가에 대한 기여자 증가
     * 도구에 포함된 데이터 과학 기법, 상점 간의 비교를 용이하게 하기 위한 상품 매칭
     * 제크너의 데이터 분석, 식료품 체인 간의 가격 조정 패턴 및 축소 인플레이션, 독일 대비 오스트리아의 높은 가격 패턴 발견
     * 도구를 통해 발견된 식료품 체인의 할인 패턴, 소비자가 더 높은 평균 가격을 지불함을 보여줌
     * 제크너의 작업, 가격 과다 청구, 인플레이션, 가격 투명성에 대한 논의 촉발

        Hacker News 의견

     * 오스트리아의 식료품 가격 추적 프로젝트에 대한 기사
     * 오스트리아의 식료품 가격이 독일보다 상당히 높다는 댓글 확인
     * 높은 가격의 원인: 오스트리아인의 가격 민감도 부족, 물류 비용 상승, 부가가치세 약간 상승, 비전문 노동자의 임금 상승, 슈퍼마켓 밀집도 상승
     * 높은 가격과 변화 부족에 대한 불만 표현, 프로젝트 찬사
     * ""Shrinkflation"" (제품 크기 축소, 가격 유지 또는 상승)이 가격 비교의 도전 과제로 언급
     * 모든 슈퍼마켓이 업데이트된 가격 목록 제공을 제안
     * 유럽 전역의 가격 비교 제안, 국가 간 가격 차이 해결
     * 서비스 및 제품 가격 스크래핑의 잠재력 논의, EU 법률 요구
     * 미국 및 그리스 등 다른 국가의 가격 분석 프로젝트에 대한 관심 표현
     * 불공정한 가격 정책 식별을 목표로 한 아이템 가격 추적 앱 아이디어 제안
     * 프로젝트에 사용된 Mastodon 서버의 가독성 찬사, Twitter 제품 디자인에 대한 책 희망 표현
"
"https://news.hada.io/topic?id=10920","Lodash가 이슈 부도를 선언하고 모든 이슈와 오픈 PR을 종료","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Lodash가 이슈 부도를 선언하고 모든 이슈와 오픈 PR을 종료

        Hacker News 의견

     * 인기 있는 오픈 소스 JavaScript 유틸리티 라이브러리인 Lodash가 ""이슈 파산""을 선언하고 모든 열려있는 이슈와 풀 리퀘스트(PR)를 닫았습니다.
     * 이 결정은 다양한 반응을 불러일으켰으며, 일부는 광범위하게 사용되는 오픈 소스 패키지를 유지 관리하는 데 따르는 압도적인 피드백을 관리하는 저자를 칭찬했습니다.
     * 일부 댓글 작성자들은 이슈가 사라진 것이 아니라 단지 다르게 태그되었다며, 빈 이슈 목록을 추구하는 이점에 의문을 제기했습니다.
     * 다른 사람들은 많은 PR들이 사소한 변경이거나 자기 홍보였으며, 이는 유지 관리자에게 스팸처럼 느껴질 수 있다고 지적했습니다.
     * Lodash가 Node.js에서 Bun으로 이전하는 것이 라이브러리에 중요한 변화라는 점이 언급되었습니다.
     * 일부 사용자들은 이슈를 제기하거나 PR을 제출하는 데 시간을 보낸 후, 그것들이 닫히게 되어 실망감을 표현했습니다.
     * 저자는 ""이슈 파산""으로 363개의 이슈를 태그하고 닫았으며, 325개의 PR도 마찬가지였습니다.
     * 일부 댓글 작성자들은 저자에게 공감하며, 복잡한 문제, 경쟁하는 책임, 때로는 감사받지 못하는 작업을 포함한 오픈 소스 소프트웨어를 유지 관리하는 도전을 인정했습니다.
     * 변화에도 불구하고 많은 사용자들은 여전히 Lodash를 존중하고 정기적으로 사용하며, 일부는 JavaScript가 계속 개선되면서 그것을 덜 사용한다고 언급했습니다.
"
"https://news.hada.io/topic?id=10928","5 WHY와 Skin in the Game으로 가설 검증하여, 창업가들의 행복감 +9% 회복시킨 후기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        5 WHY와 Skin in the Game으로 가설 검증하여, 창업가들의 행복감 +9% 회복시킨 후기

   5 WHY와 Skin in the Game을 통해서 어떻게 가설을 구체화 시켜서 검증했는지에 대한 검증 일지. (부제: MVP 데이터로 Correlation Matrix를 만들어서 변수 간에 선형적 관계를 분석)

결론 먼저? 20명 중 15명 2주 프로그램 완수 후 평균 행복감 8.89% 상승

   먼저 최종 데이터부터 보자면, 1기 여러분들의 주관적 행복감, 전체 평균 8.89% 상승, 지각된 스트레스 11% 개선, 수면의 질 5.9% 개선하게 되었고, 20명 중 15명이 끝까지 완수에 성공하셨습니다. 하지만 더 중요한 것은 이 실험을 어떻게 설계했고, 이 데이터 외에도 흥미로운 데이터가 많으니, 꼭 끝까지 읽어주세요!

   5 WHY 접근법이란?
   문제에 대한 근본적인 원인과 핵심에 대해 구체적으로 파고드는 것이 5 WHY 기법입니다. 여러 번의 Why를 통하여 표면으로 나타나는 이유가 아닌 진정한 원인을 찾아내어 각 관점의 명확한 원인을 발견하는 것입니다. 왜라는 질문을 통해 좀 더 깊이 파고드는 것이지요. 저는 개인적으로 가설을 쪼갤 때 사용하는 것이 더 좋더라고요. 자신의 머릿속에 있는 부정문들을 반박하며, 가설이 더 구체적으로 변하며 가설이 더 명확해지는 효과가 있습니다.

   SKIN IN THE GAME이 무엇이죠?
   SKIN IN THE GAME은 프리토타입에서 사용 될 때는 잠재적 고객에게 ‘만들면 쓸 거야?’라는 질문을 ‘쓰기로 약속하면 만들게!’라는 형태로 질문을 재정의하기 위해서 필요한 요소입니다. 즉, 잠재적 고객이 중요시하는 ‘무언가’를 걸게 해서, ‘만들었는데 아무도 안 쓰는’ 상황을 최대한 방지하기 위한 장치인데요.

   보증금을 걸게 한다거나, 시간을 쓰게 만든다거나, 여러 방법이 존재합니다. 웰니스 부스트 1기에서 사용한 SKIN IN THE GAME은 참여자들의 개인정보 중 핸드폰 번호였습니다. 저만 해도, 정말 참여하고 싶은 생각이 들지 않는 이상, 핸드폰 번호는 잘 안 남기거든요.

그래서, 글의 결론은 뭐야?

     * MVP를 만들기 위해서 삽질 많이 했고
     * Correlation Matrix를 돌려봤는데, 몇 개의 가설은 맞아, 근데 좀 이상한 변수 관계들도 나왔는데.
     * 끝까지 완수 못 하신 5명의 데이터는 포함이 안 되어 있어서, 여기서 BIAS도 존재해
     * 결과적으로 커뮤니티적 가치에 도움을 많이 받는 사람들은 존재했고
     * 그래서, MVP에서 찾은 가치들을 기반으로 다듬어 나갈 것이야!
"
"https://news.hada.io/topic?id=10906","아키요시의 일루전 페이지","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             아키요시의 일루전 페이지

     * 일본 오사카에 위치한 Ritsumeikan 대학의 심리학 교수인 Akiyoshi Kitaoka의 시각 인식, 시각 착시, 광학 착시, 트롬프루이, 3D 착시 전문 기사
     * 그의 작품은 'Akiyoshi's Illusion Pages'라는 웹사이트에 전시되어 있으며, 이 사이트는 2002년 5월 18일부터 운영되고 있음
     * 웹사이트에는 동작 착시, 색상 또는 밝기 착시, 모양 착시, 시각 완성, 트롬프루이, 공간 착시, 물리 착시 등 다양한 착시 카테고리가 특징
     * 주목할 만한 착시로는 ""회전하는 뱀"", ""회전하는 광선"", ""가을 색 스왐프"", ""불룩한 부분"", ""Primrose의 들판"", ""Uzumaki ampan"", ""롤러"" 등이 있음
     * 착시는 이상한 움직임 착시 때문에 일부 관람객들이 어지럽거나 아픈 느낌을 받을 수 있음. 민감한 관찰자들을 위해 경고가 제공됨
     * 웹사이트에는 Akiyoshi의 최신 작품, 착시 뉴스, 사진 목록도 포함되어 있음
     * Akiyoshi의 작품은 저작권에 의해 보호되며, 그의 착시 이미지의 상업적 사용은 허가 없이는 금지되어 있음. 그러나 교육적 또는 연구적 사용 또는 수정은 환영함
     * 웹사이트는 외부 웹사이트, 추천 도서, Akiyoshi의 다른 페이지로의 링크도 제공함
     * Akiyoshi의 작품은 JSPS KAKENHI Grant에 의해 부분적으로 지원받았음
     * 웹사이트는 일본어, 세르비아어, 포르투갈어, 중국어 등 다양한 언어로 이용 가능함
     * Akiyoshi는 The Journal of Illusion에 기고를 권장함

        Hacker News 의견

     * 아키요시 키타오카의 최근 작품은 한 색상의 원이 다른 두 색상의 원 앞이나 뒤에 있는 것처럼 보이는 환상을 포함하며, 2D 이미지에서 3D 효과를 만들어냅니다.
     * ""접근하는 블랙홀: 어제""라는 제목의 환상은 특히 인상적으로, 움직이는 이미지처럼 보이지만 실제로는 정지된 이미지입니다.
     * 이러한 환상을 오랫동안 바라보면 장기적인 시력 효과가 우려되며, 이는 McCollough 효과와 비교됩니다.
     * 아키요시 키타오카의 트위터 계정에는 다양한 매력적인 환상이 특징입니다.
     * ""Plaid-tunnel02-040-blackhole01.png""과 같은 환상 중 일부는 눈부신 흰 빛의 반짝임을 일으킬 수 있어, 거의 보기 힘들 정도로 만듭니다.
     * 주목할 만한 다른 시각적 환상에는 코키치 스기하라의 모호한 객체가 포함됩니다.
     * ""회전하는 뱀"" 환상은 불편함을 유발하며, 일부 사람들은 그것이 움직인다고 느껴져서 그것의 출력물 근처에 있기를 거부합니다.
     * 아키요시의 환상 페이지는 이전에 2021년 1월, 2017년 3월, 2013년 5월에 HackerNews에서 논의되었습니다.
     * 일부 움직임 환상은 손가락이나 마우스 포인터를 천천히 이미지 위로 움직이면서 눈으로 추적함으로써 강화될 수 있습니다.
"
"https://news.hada.io/topic?id=10937","Tailscale, Apple TV에도 탑재","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Tailscale, Apple TV에도 탑재

     * 안전한 원격 네트워킹 서비스인 Tailscale이 Apple TV로의 확장을 발표
     * tvOS 17의 출시와 함께 이루어지며, 이는 VPN을 지원하여 Apple TV를 이 기능을 활용하는 최초의 장치 중 하나로 만듦
     * 사용자는 이제 Apple TV를 직접 tailnet에 추가할 수 있으며, 이로 인해 세 가지 새로운 사용 사례가 생김
          + 첫째, 사용자가 미디어 서버를 가지고 있다면, Apple TV를 동일한 Tailscale 네트워크에 통합할 수 있음. 이를 통해 Plex 또는 Jellyfin 서버, homelab 설정, NAS 장치와 같은 장치에서 컬렉션을 안전하게 공유하고 스트리밍 가능
            Tailscale 무료 플랜은 최대 세 명의 사용자를 지원하며, 이를 통해 다른 신뢰할 수 있는 개인에게 미디어 드라이브를 사용할 수 있게 함. 이를 통해 공용 인터넷 접속 없이 가족 사진과 홈 비디오와 같은 컬렉션을 안전하게 공유할 수 있음
          + 둘째, 미디어 서버가 없더라도 사용자는 Tailscale Apple TV 앱을 사용하여 PC, Raspberry Pi, Android 폰 등 tailnet의 다른 장치를 출구 노드로 선택할 수 있음. 이는 모든 Apple TV 트래픽을 해당 연결을 통해 라우팅하며, 추가적인 개인 정보 보호 계층을 제공하고 트래픽이 선택한 기계에서 발생하는 것처럼 보이게 함
            이 기능은 전통적인 VPN 옵션과 대조적으로, 트래픽이 상업용 데이터 센터를 통해 라우팅되고 사용자가 VPN 제공자가 그들의 트래픽을 감시하거나 조작하지 않을 것이라고 믿어야 하는 상황과 대조적. Tailscale을 사용하면 사용자는 제어권을 유지하고 익숙한 인터넷 연결을 얻을 수 있음.
          + 셋째, 새로운 Tailscale 클라이언트는 또한 Apple TV를 tailnet의 다른 기계에 대한 출구 노드로 사용할 수 있게 함. 이는 사용자가 다른 장치의 트래픽을 Apple TV와 집 인터넷 연결을 통해 안전하게 라우팅할 수 있음을 의미하며, 이는 집을 떠나 있을 때에도 가능
     * Tailscale 팀은 사용자가 집에서 Tailscale의 힘을 활용하기 위해 기술 너드가 될 필요가 없다고 강조
     * Tailscale 앱은 새로운 tvOS 17을 실행하는 Apple TV에서 다운로드 가능

   Tailscale이 생각보다 이것저것 많이하던데 Apple TV를 지원할줄은ㅋㅋㅋㅋㅋㅋㅋ

        Hacker News 의견

     * 새로운 Tailscale 클라이언트는 Apple TV를 귀하의 tailnet에서 다른 기기의 출구 노드로 작동하게 합니다.
     * 많은 사용자들이 컴퓨터와 달리 스마트 TV를 계속 켜두는 것에 편안함을 느끼기 때문에 이 기능은 중요합니다.
     * Apple TV 4k는 에너지 효율적이며, 터널링 트래픽 시 1 와트 미만을 소비하는 반면, 컴퓨터는 대기 상태에서 15W 이상을 끌어당깁니다.
     * Tailscale의 무료 플랜은 최대 세 명의 사용자를 허용하며, 공용 인터넷 접근 없이 신뢰할 수 있는 개인과 미디어 드라이브를 공유할 수 있습니다.
     * 무료 플랜은 또한 특정 기기에 초대 링크를 보내는 것을 가능하게 하며, 이는 다른 사람의 계정에 추가될 수 있어, 기기 공유를 다른 것을 공유하지 않고도 가능하게 합니다.
     * Apple TV를 항상 켜둔 출구 노드로 사용하는 것은 유용하고 혁신적인 기능으로 간주됩니다.
     * Tailscale의 서비스는 매우 칭찬받고 있으며, 사용자들은 여행 중 안전한 접근을 위해 Apple TV에 설치할 계획을 세우고 있습니다.
     * 최근의 tvOS 17 업데이트는 이전에는 라우터를 통해서만 가능했던 Apple TV에서 VPN의 추가를 허용합니다.
     * Tailscale on Apple TV는 또한 기기 외부에서 다루기 더 어려웠던 지역 차단 도구를 우회하는 데 사용될 수 있습니다.
"
"https://news.hada.io/topic?id=11004","NASA의 웹이 목성의 달 유로파 표면에서 탄소 원천을 발견","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   NASA의 웹이 목성의 달 유로파 표면에서 탄소 원천을 발견

     * NASA의 제임스 웹 우주 망원경이 목성의 달 유로파 표면에서 탄소를 발견했습니다.
     * 이 탄소는 유로파의 지하 해양에서 기원한 것으로 보이며, 이는 생명이 존재할 수 있는 환경을 시사합니다.
     * 유로파는 소금기 있는 지하 액체 해양이 있으며, 이는 지구의 모든 바다의 물의 두 배가 넘는 양을 포함할 수 있습니다.
     * 생명의 기본 구성 요소인 탄소의 발견은 중요한데, 이는 유로파의 바다가 생물학적으로 필수적인 화학물질을 포함하고 있는지 알려져 있지 않았기 때문입니다.
     * 탄소는 유로파의 얼음 표면의 특정 지역에서 발견되었으며, 이는 지하 해양에서 기원한 것으로 보이며, 운석이나 기타 외부 출처에 의해 전달된 것은 아닙니다.
     * NASA는 2024년 10월에 유로파 클리퍼 우주선을 발사하여 유로파의 생명체 가능성을 더욱 조사할 계획입니다.
     * 이산화탄소는 표면의 얼음이 파괴된 지질학적으로 젊은 지역인 타라 레지오에서 가장 풍부하게 발견되었으며, 이는 지하 해양과 얼음 표면 사이의 물질 교환을 시사합니다.
     * 이 발견은 과학자들이 얼음을 꿰뚫어 보기 전에도 해양의 구성을 알 수 있을지도 모른다는 것을 시사합니다.
     * 이산화탄소는 유로파 표면에서 안정적이지 않아, 이는 지질학적으로 최근에 공급되었음을 시사합니다.
     * 웹 우주 망원경의 데이터는 유로파 표면에서 물기둥이 분출하는 증거를 보여주지 않지만, 이는 물기둥의 가능성을 배제하지는 않습니다.
     * 이러한 발견은 NASA의 유로파 클리퍼 임무와 유럽 우주국의 다가오는 주피터 얼음 달 탐사기(JUICE) 임무에 도움이 될 수 있습니다.
     * 제임스 웹 우주 망원경은 NASA가 주도하며, 유럽 우주국과 캐나다 우주국 등이 파트너로 참여하는 국제 프로그램입니다.
"
"https://news.hada.io/topic?id=10905","Horcrux: 파일을 암호화된 조각으로 분할","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Horcrux: 파일을 암호화된 조각으로 분할

     * 'Horcrux'라는 도구를 소개하는 기사, 이 도구는 파일을 암호화된 조각, 즉 horcruxes로 분할합니다.
     * 이 도구는 'split'과 'bind' 두 가지 명령어로 작동합니다.
     * 'Split' 명령어는 파일을 지정된 수의 horcruxes로 나누는 데 사용됩니다. 예를 들어, 'diary.txt'라는 파일은 5개의 horcruxes로 분할할 수 있으며, 이 중 3개만으로도 원래의 파일을 복원할 수 있습니다.
     * 그런 다음 horcruxes는 USB나 온라인 저장소와 같은 다양한 위치에 분산되어 안전하게 보관됩니다.
     * 'Bind' 명령어는 horcruxes를 원래의 파일로 다시 조립하는 데 사용됩니다.
     * Horcrux는 homebrew 또는 binary release를 통해 설치할 수 있습니다.
     * 이 도구는 큰 민감한 파일을 암호화해야 하고 미래에 비밀번호를 기억하지 못할 것으로 예상하는 사람들에게 이상적입니다. 또한, 여러 채널을 통해 파일을 전송하여 가로채기 위험을 줄이고자 하는 사람들에게도 적합합니다.
     * Horcrux의 기술은 Shamir Secret Sharing Scheme에 기반을 두고 있으며, 이는 암호화 키를 원래의 키를 생성할 수 있는 부분으로 분해합니다. 그러나 이를 수행하기 위해서는 일정 수준의 부분만 필요합니다.
     * 이 도구는 'ssss', 'horcrux'(동일한 이름의 다른 도구), 'Haystack'과 같은 대체품이 있지만, 이들은 horcruxes의 임계값을 지원하지 않거나 재조립에 비밀번호를 요구합니다.

        Hacker News 의견

     * Horcrux라는 도구는 파일을 암호화된 조각으로 분할하는 기능을 사용자에게 제공하며, 이 개념은 일부 사용자들에게 홀로그래픽 원리와 비슷하다고 느껴진다.
     * 이 도구는 암호화/복호화를 위해 OFB 모드에서 AES를 사용하지만, MAC을 사용하지 않기 때문에 암호문의 무결성을 보장하지는 않는다.
     * Shamir Secret Sharing이라는 비슷한 도구가 있으며, 이 도구는 사용자가 파일을 광학적으로 복원하기 위해 종이 복사본을 배포할 수 있게 한다.
     * 일부 사용자들은 Horcrux의 흥미로운 개념과 알고리즘에도 불구하고 그 실용적인 사용 사례에 의문을 제기한다.
     * 이 도구는 비밀번호로 암호화된 파일을 모든 부분 없이, 비밀번호 없이 분할하고 재조립할 수 있게 해서 관심을 끌었다.
     * 일부 사용자들은 이 도구가 기존 솔루션보다 우월한 특정 위협 모델을 식별하는 데 어려움을 겪는다.
     * 이 도구는 업데이트를 푸시하는 데 여러 키가 필요한 multi-sig와 비교되었다.
     * Horcrux는 이전에 HackerNews에서 여러 번 논의되었으며, 그 중 일부 게시물은 2020년 1월까지 거슬러 올라간다.
     * 파일을 더 작은 부분으로 분할하고 그 부분의 부분집합에서 원본을 재생성하는 개념은 Usenet의 패리티 파일과 비교된다.
     * Horcrux의 기본 원리는 Shamir's Secret Sharing이며, Rust와 같은 다양한 프로그래밍 언어에서 이를 구현하기 위한 가이드가 있다.
     * Horcrux의 창조자는 lazygit과 lazydocker와 같은 다른 프로젝트로도 알려져 있으며, 이는 그들이 기술 커뮤니티에서 다방면으로 활동하고 있다는 것을 보여준다.
"
"https://news.hada.io/topic?id=10922","게임 개발자들, IronSource와 Unity Ads 수익화 모두 중단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                게임 개발자들, IronSource와 Unity Ads 수익화 모두 중단

     * 게임 개발 회사들이 IronSource와 Unity Ads 수익화를 일시 중단하기로 한 집단 결정에 대한 기사
     * 이 결정은 일시적이며, 새로운 조건이 검토될 때까지 유효하다.
     * IronSource와 Unity Ads는 인게임 광고 및 수익화를 위한 인기 플랫폼이다.
     * 이번 조치는 게임 개발 산업의 인게임 광고 및 수익화 접근 방식에 중요한 변화를 시사한다.
     * 기사는 이 결정에 대한 구체적인 이유를 제공하지 않으며, 새로운 조건이 검토되면 추가 업데이트가 제공될 것을 암시한다.
     * 이 개발은 이러한 플랫폼을 수익화에 의존하는 게임 개발자들의 수익 흐름에 영향을 미칠 수 있다.
     * 기사는 인게임 광고 및 수익화 분야에서 투명성과 공정한 조건의 중요성을 강조한다.
     * 기술에 능통한 독자들과 산업 내부자들은 이 개발이 게임 산업의 수익화 전략에 미칠 수 있는 잠재적인 영향 때문에 관심을 가지고 있다.

        Hacker News 의견

     * 게임 개발자들이 IronSource & Unity Ads 수익화를 모두 중단하기로 한 결정에 대한 기사
     * 일부 댓글러들이 인디 게임을 복사하고 크게 수익화하는 특정 회사를 비판
     * Unity의 수수료 인상이 이들 회사의 광고 사업에 위협으로 작용, 비즈니스 마인드가 그들의 모델을 형성하는 데 투자한 수년에도 불구하고
     * Twitter, Reddit, 그리고 Unity와 같은 회사에 대한 적대적인 행동과 캠페인에 관련된 피로감 존재
     * Unity가 설치당 수수료를 부과하는 등 회귀적으로 변경하는 것의 합법성에 대해 댓글러들이 의문 제기
     * 일부는 Godot Engine과 같은 다른 플랫폼으로 이동하는 것을 권장
     * Unity가 불필요한 기능을 추가하고 원래의 성공 모델에서 벗어나는 것에 대한 비판 존재
     * 특히 모바일 폰에서의 게임 내 광고가 끔찍한 사용자 경험을 만들어낸다고 인식
     * 일부 댓글러들이 Unity의 경영에 불만을 표현, 무결성 부족과 내부적인 방해물을 주요 문제로 지적
     * Unity의 성공보다는 그들의 붕괴에 내기하는 것이 더 나은 선택일 수 있다는 제안 존재
     * 일부 댓글러들이 Gamebryo와 같은 다른 플랫폼을 시도해보는 것을 제안
     * 특정 회사의 소멸이 인류에게 긍정적일 수 있다는 시각, 그들의 행동에 대한 불만을 강조
"
"https://news.hada.io/topic?id=10929","침묵의 사운드 프루프 부스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             침묵의 사운드 프루프 부스

     * 인기 e스포츠 이벤트인 The International (TI)에서 사용되는 방음 부스의 진화에 대한 기사
     * 첫 번째 TI는 2011년 Gamescom에서 개최되었으며, 선수들이 관중이나 해설자의 소리를 듣지 못하게 하기 위해 방음 부스가 도입되었습니다.
     * 초기 부스는 단순하게만 설계되었으며 방음만 필요했습니다. 그러나 환기와 반사 등 다른 부분에서는 실패하여 후속 TI에서 개선되었습니다.
     * 부스는 에어컨, 더 나은 조명, 반사 방지 조치를 포함하도록 재설계되었습니다. 또한 조립 및 분해가 더 쉽게 만들어졌습니다.
     * 이벤트가 커짐에 따라 부스는 새로운 도전에 적응해야 했습니다. TI5에서는 부스가 모든 면에서 투명하게 만들어져 360도 관중 시야를 제공하도록 하였고, 이를 위해 고급 방음 기술이 필요했습니다.
     * 부스는 사이에 아르곤 가스가 들어 있는 여러 겹의 유리로 만들어져 소리 파동을 감쇄했습니다. 각 부스의 총 비용은 200,000달러 이상이었습니다.
     * 발전에도 불구하고 부스는 장거리 여행에 적합하게 설계되지 않아, 2015년 Frankfurt Major에 국제적으로 운송될 때 손상을 입었습니다.
     * 수년 동안 부스는 선수의 편안함, 조명, 그리고 기타 점진적인 변화를 위해 점진적으로 개선되었습니다.
     * 최근 싱가포르에서 열린 TI에서는 부스가 제거되고 소음 차단 헤드폰, 이어버드, 그리고 경기장의 음향 설계로 대체되었습니다. 이로 인해 설치 및 철거 과정이 간소화되었습니다.
     * 부스 없는 설정의 장점에도 불구하고, 소음 감쇄는 기준에 미치지 못했습니다. 팀은 부스 없는 이벤트를 다시 추진하는 것에 개방적이지만, 성공에 대한 절대적인 확신이 있을 때만 가능합니다.
     * The International 2023에서는 ""클래식"" TI5 방음 부스가 창고에서 다시 꺼내질 예정입니다.

        Hacker News 의견

     * 게임 토너먼트에서 방음 부스의 사용에 대한 기사, 일부 독자들은 소음 차단을 위해 에어 커튼 같은 대안을 제안
     * Age of Empires 토너먼트 동안 선수들을 관중과 별도의 방에 두는 관행 언급, 이러한 이벤트에서 실제 관중의 드문 존재 때문일 수 있음
     * 게임의 심리적 측면에 대한 기사, 선수들이 서로를 볼 수 있어 마인드 게임이 가능
     * 일부 독자들은 사이트의 번역 품질에 의문을 제기, 긴 문장과 이상한 표현 때문에 읽기 어려움
     * 기사는 방음 조치의 범위를 강조, 아르곤 가스를 펌핑하여 여러 겹의 유리를 사용하는 등
     * 선수들에게 유출된 소음의 영향을 최소화하기 위해 실시간 방송을 몇 초 지연시키는 제안
     * 독자들은 기사에서 보여진 사진의 가득 찬 경기장에 감탄
     * 부스의 높은 비용, 약 200k달러, 이렇게 비싼 이유에 대해 독자들이 의문을 제기하는 논의의 중심
     * 기사는 실제 이벤트의 매력에 대한 논쟁을 촉발, 일부는 선수들이 다른 곳에 위치하고 그들의 공연이 홀로그램을 통해 스트리밍될 수 있다고 제안
     * 기사의 저자에 대한 혼란, 독자들이 이것이 Valve 직원에 의해 작성되었는지, 아니면 Valve에 의해 자금이 지원되었는지 의문을 제기
"
"https://news.hada.io/topic?id=10930","브라이언 버클루, 'Caves of Qud'를 유니티에서 고도로 이식 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                브라이언 버클루, 'Caves of Qud'를 유니티에서 고도로 이식 중
"
"https://news.hada.io/topic?id=10921","RecipeUI - 오픈소스 Postman 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      RecipeUI - 오픈소스 Postman 대체제

     * TypeScript 와 자동 완성 기능으로 API 요청 실패를 미리 캐치 가능
          + 개발 문서에서 Curl 명령행을 복사해서 넣으면 자동으로 인터페이스를 생성
          + 이 인터페이스를 통해서 호출에 대한 자동 완성 기능을 제공
     * 문서 자동 생성 및 재사용 가능한 API 템플릿 기능으로 워크플로우 개선
     * Tauri Rust 로 생성한 데스크탑 앱 또는 웹에서 실행
     * 컬렉션 탭에서 일부 API에 대한 템플릿 제공 (OpenAI, Reddit, Unsplash, Giphy등 )

   내부 소스가 어떻게 구현되어있는지 학습용으로도 매우 좋아보입니다!

   오픈 소스라는 점은 굉장히 좋지만, 이미 포스트맨 유료 플랜을 사용하시는 분들에겐 크게 메리트가 있어보이진 않네요.

   https://www.youtube.com/watch?v=O_Mly_p-g5s
   소개 영상을 한번 보시면 이해가 쉽습니다.
"
"https://news.hada.io/topic?id=10952","스노든 유출: Cavium 네트워킹 하드웨어에 NSA 백도어가 포함되어 있을 수 있음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            스노든 유출: Cavium 네트워킹 하드웨어에 NSA 백도어가 포함되어 있을 수 있음

        Hacker News 의견

     * Cavium 네트워킹 하드웨어의 백도어는 NIST SP 800-90A에 따르면, 손상된 랜덤 숫자 생성기인 Dual_EC_DRBG를 기반으로 할 가능성이 높다.
     * 이제 Marvell로 알려진 Cavium은 AWS와 GCP와 같은 최고의 클라우드 제공업체가 중요한 개인 키를 보유하는 데 사용하는 하드웨어 보안 모듈(HSMs)도 설계 및 제조했다.
     * Ubiquiti Networks의 네트워크 하드웨어 전체 라인이 잠재적으로 손상될 수 있으며, 이로 인해 고객들에게 중요한 개인 정보 문제가 발생할 수 있다.
     * NSA의 해킹 도구 보안 유지에 대한 신뢰도는 의문스럽다, 이로 인해 그들이 심어놓은 백도어의 보안에 대한 우려가 생긴다.
     * 이 백도어의 발견은 이전에 Cisco의 시장 가치가 하락하고 그들의 장비가 전자 폐기물로 버려지는 등 경제적이고 환경적인 영향을 미칠 수 있다.
     * Cavium은 이제 Marvell Technology의 일부로, Marvell이 인수한 기술의 백도어를 알고 있었는지에 대한 의문을 제기한다.
     * 일반적인 합의는 대부분의 전자 제품이 정부나 기업에 의해 어떤 방식으로든 손상되었을 가능성이 높으며, 이로 인해 개인 정보 보호가 부족하다는 것이다.
"
"https://news.hada.io/topic?id=10987","스튜디오 지브리, 닛폰 TV의 자회사가 될 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       스튜디오 지브리, 닛폰 TV의 자회사가 될 예정

     * 애니메이션 강자 Studio Ghibli가 2023년 10월 Nippon Television Holdings의 자회사가 될 예정
     * Nippon TV 이사회의 결정으로 Studio Ghibli는 당일 거래를 승인
     * Nippon TV는 Studio Ghibli 주식의 42.3% 를 소유하게 될 예정
     * Studio Ghibli의 새로운 수장은 Nippon TV의 최고운영책임자이자 이사인 Hiroyuki Fukuda가 맡게 됨
     * Studio Ghibli의 현재 대표인 Toshio Suzuki는 회장이 되며, 스튜디오 공동 창립자인 Hayao Miyazaki는 명예 회장이 될 예정
     * Miyazaki가 82세이고 Suzuki가 75세인 가운데 Studio Ghibli의 미래 지도력에 대한 추측이 이어지며 이 거래가 성사됨
     * 스튜디오는 이전에 Hayao Miyazaki의 장남인 Goro Miyazaki를 후계자로 고려했지만, 회사의 미래를 다른 사람에게 맡기는 것이 더 나을 것으로 결정
     * Nippon TV는 경영 운영을 담당하게 되어 Studio Ghibli는 창작 측면에 더욱 집중할 수 있게 됨
     * Nippon TV와 Studio Ghibli는 1985년 이래로 밀접한 관계를 유지해 왔으며, 네트워크는 자주 Ghibli 영화를 방영해 왔음
     * 1985년에 설립된 Studio Ghibli는 ""센과 치히로의 행방불명"", ""카구야 공주의 이야기"", ""이웃집 토토로"", ""모노노케 히메"" 등의 히트 영화로 알려져 있음
     * Goro Miyazaki가 감독하는 Ghibli Park가 지난 11월에 아이치현에 개장함

        Hacker News 의견

     * 스튜디오 지브리, 오랜 파트너인 닛폰 TV의 자회사로 전환 예정
     * 스튜디오 지브리 공동 창립자 하야오 미야자키, 스튜디오의 미래가 ""무너질 것""이라 예측했으나 닛폰 TV의 인수로 변동 가능성
     * 일부 팬들, 스튜디오의 원작 변경에 대한 우려 표현, 영어 더빙으로 사운드 디자인이 변경된 과거 경험을 인용
     * 하야오 미야자키의 스튜디오 지브리에 대한 영향력은 미술, 아이디어, 품질, 추진력의 원천이라는 점에서 중요
     * 닛폰의 매니저 오쿠다와 미야자키 간의 관계, 두 가족이 가까운 개인적 관계를 가지고 있어 인수의 핵심 요소로 강조
     * 일부 팬들, 스티브 잡스가 픽사를 디즈니에 판 사례를 비교하며 인수에 대한 낙관론 표현, 신뢰와 관리의 중요성 강조
     * 다른 이들은 닛폰 텔레비전이 스튜디오를 잘 관리할 수 있을지 의문을 제기하며, 미야자키가 창작 통제권을 유지하기를 희망
     * 미래에 지브리 수준의 영화를 연출할 가능성 있는 인물에 대한 추측, 감독 야스히로 요시우라와 마모루 호소다를 제안하지만 그들의 일관성에 대한 의문 제기
     * 2D 애니메이션의 높은 비용과 과세 문제, 실패한 영화를 제작하는 위험에 대한 우려
     * 인수 관련 뉴스는 니케이와 교도 뉴스의 영어 버전에서 더 자세히 확인 가능
"
"https://news.hada.io/topic?id=10976","나의 uBlock Origin 필터로 방해요소 제거","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      나의 uBlock Origin 필터로 방해요소 제거

     * 본 기사는 uBlock Origin 필터를 이용해 다양한 웹사이트에서 불필요한 방해요소를 제거하는 방법에 대해 논의하고 있습니다.
     * 저자는 각 웹사이트별로 특정 작업을 생성하고, 이러한 작업을 허용하면서 잠재적인 방해요소를 비활성화하는 필터를 최적화하였습니다.
     * 이 필터들은 다른 사람들이 사용하거나 자신의 선호에 따라 수정할 수 있도록 저장소에 공유되어 있습니다.
     * 저자는 이슈, 풀 요청, 이메일을 통해 필터에 대한 제안 및 개선사항에 대해 열려 있습니다.
     * 이 필터들은 uBlock Origin 확장 프로그램 대시보드의 가져오기에 '0-include-all.txt' 파일을 추가함으로써 설치할 수 있습니다.
     * 이 필터들은 Google 계정 팝업, YouTube의 추천 동영상, Twitter와 LinkedIn의 피드 및 사이드바, Stack Overflow와 Stack Exchange의 포인트 및 프로필 사진과 같은 방해요소를 비활성화하도록 설계되었습니다.
     * 저자의 주요 목표는 YouTube에서 동영상을 보거나 업로드하고, Twitter에서 특정 트윗 피드를 보거나 트윗하고, LinkedIn에서 프로필이나 게시물을 보고, Stack Overflow와 Stack Exchange에서 상위 답변을 읽는 것입니다.
     * 저자는 현재 YouTube용 Unhook Firefox 확장 프로그램을 사용하고 있지만, 필터로 교체하는 것을 고려하고 있습니다.
     * 이 필터들은 불필요한 요소를 제거함으로써 이러한 웹사이트에서 사용자의 집중력과 생산성을 향상시키도록 설계되었습니다.

        Hacker News 의견

     * uBlock Origin 필터를 사용하여 웹사이트의 방해 요소 제거에 대한 기사
     * 광고와 사이드바 차단 후 남은 텍스트 요소 확장을 제안한 사용자
     * 화면을 신문처럼 보이게 하여 가독성과 ""스캔 가능성""을 높이는 아이디어 탐색
     * 대부분의 웹사이트 불편함을 제거하기 위한 ""AdGuard – Annoyances"", ""EasyList – Annoyances"", ""uBlock filters – Annoyances"" 체크를 권장하는 사용자
     * 이러한 필터를 uBlock Annoyances 또는 EasyList Annoyances 목록에 제출하여 더 많은 사람들에게 도움이 되도록 제안
     * Stack Exchange의 트렌딩 질문 숨기기와 끝없는 캐러셀, 애니메이션과 같은 시각적 방해 요소를 숨기는 사용자들
     * Twitter를 위한 Nitter, YouTube를 위한 Piped와 Invidious, StackOverflow를 위한 AnonymousOverflow와 같은 읽기 전용을 위한 개인정보 친화적 대안 제안
     * Reddit과 Twitter에서 유료 이기기를 지우는 방법을 공유하는 사용자
     * Firefox의 Redirector 확장 프로그램을 사용하여 Piped, Nitter, AnonymousOverflow와 같은 대체 프론트엔드로 링크를 리디렉션하는 사용자
     * 로그인 버튼을 손상시키지 않고 Google 로그인 팝업을 제거하는 필터 공유
     * Dark Mode를 지원하지 않는 웹사이트에 userContent.css/uBlock 규칙을 사용하여 Dark Mode를 추가하는 것을 제안하는 사용자
     * 웹사이트가 기본 레이아웃을 자주 변경하는 도전에 대해 언급하는 사용자
     * 설정된 시간 후에 피드를 차단하는 뉴스 피드 제거 도구를 권장하는 사용자
"
"https://news.hada.io/topic?id=10932","마이크로소프트 AI 연구자들에 의해 38TB의 데이터가 실수로 노출","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 마이크로소프트 AI 연구자들에 의해 38TB의 데이터가 실수로 노출

     * Microsoft의 AI 연구팀이 GitHub에서 오픈소스 훈련 데이터를 공개하면서 실수로 38테라바이트의 개인 데이터를 노출
     * 노출된 데이터에는 두 명의 직원의 작업장 디스크 백업, 비밀, 개인 키, 비밀번호, 그리고 30,000개 이상의 내부 Microsoft Teams 메시지가 포함
     * 이 데이터는 Azure Storage 계정에서 데이터를 공유할 수 있게 해주는 Azure 기능인 SAS 토큰을 사용하여 공유됨. 그러나 링크는 전체 저장 계정을 공유하도록 설정되어 있어 데이터가 노출
     * 이 사건은 AI를 활용할 때 조직이 직면하는 새로운 위험을 강조하며, 더 많은 엔지니어들이 대량의 훈련 데이터를 다루면서 추가적인 보안 검사와 보호장치가 필요하다는 것을 보여줌
     * Wiz 연구팀은 잘못 구성된 저장 컨테이너를 인터넷에서 찾아내면서 이 노출을 발견했음
     * 그들은 Microsoft 조직 아래에 있는 robust-models-transfer라는 GitHub 저장소를 발견했는데, 이 저장소는 이미지 인식을 위한 오픈소스 코드와 AI 모델을 제공하기 위해 만들어졌지만, 잘못된 구성 때문에 오픈소스 모델 이상의 것에 접근할 수 있는 URL을 허용한 것
     * 사용된 토큰도 ""전체 제어"" 권한을 허용하도록 잘못 구성되어 있어, 공격자가 기존 파일을 보고, 삭제하고, 덮어쓸 수 있었음
     * 이 사건은 SAS 토큰의 보안 위험을 강조하며, 이는 저장 계정에 높은 접근 수준을 부여하고 만료 문제가 있을 수 있음. 또한 관리하고 취소하는 것이 어려움
     * Wiz 연구팀은 보안과 거버넌스 부재로 인해 외부 공유를 위해 Account SAS를 사용하는 것을 피하고, 시간 제한 공유를 위해 Stored Access Policy 또는 User Delegation SAS를 사용하는 것을 제안
     * 팀은 또한 외부 공유를 위해 전용 저장 계정을 만들고 CSPM을 사용하여 정책을 추적하고 집행하는 것을 권장
     * 이 사건은 보안 팀에게 AI 개발 과정의 각 단계에서 내재한 보안 위험을 이해하고, 데이터의 과다 공유와 공급망 공격의 위험을 포함해야 한다는 것을 상기시킴
     * Microsoft는 이후 SAS 토큰을 무효화하고 GitHub에서 교체하였으며, 잠재적 영향에 대한 내부 조사를 완료하였음

        Hacker News 의견

     * Microsoft AI 연구자들에 의한 데이터 노출 사건에 대한 기사, 하지만 댓글러들은 이것이 AI와 직접적으로 관련이 없다고 지적
     * 이슈는 클라우드 제공자, 혼란스러운 보안 토큰, 그리고 대규모 데이터 다운로드 처리에 대한 것이 더 많음
     * 강조된 AI 특정 위험 중 하나는 대규모 AI 모델을 저장하기 위해 직렬화된 Python 객체를 사용하는 것으로, 이는 난독화될 수 있고 잠재적으로 악성 코드를 포함할 수 있음
     * 이 사건은 저장 토큰의 잘못된 구성 때문이었으며, 이는 정기적인 침투 테스트의 필요성을 강조하는 일반적인 사건임
     * Azure 저장소에서 Pickle 파일과 SAS 토큰의 사용이 비판되며, 대신 역할 기반 접근 제어(RBAC)를 사용하는 것이 제안됨
     * 이 사건은 깊이 있는 방어의 부재를 드러내며, SAS 토큰은 만료 기간이 없고 깊은 접근을 제공하며, 그들만의 토큰을 가진 기계 백업을 포함함
     * 모든 비밀과 환경 변수를 파기하고, 대부분의 시스템이 역할 기반으로 작동할 수 있다는 제안이 있음
     * 이 사건은 인간의 보안 토큰 생성의 실패로 보이며, 조직이 인증 토큰/자격증명의 일괄 공유를 방지하기 위해 OrgPolicy를 설정하는 것이 제안됨
     * 누군가가 Teams에서 Teams 메시지를 내보낼 수 있었다는 것에 대한 놀라움이 있음
     * 데이터 노출은 두 년 동안 계속되었으며 두 달 전에 수정되었음
     * 일부 댓글러들은 Azure의 키 관리 시스템을 싫어하며, 각 컨테이너마다 무제한의 명명된 키를 가지는 것이 더 좋을 것이라고 제안함
     * 이 사건은 클라우드 보안의 어려움을 증명하는 것으로 보이며, 한 두 가지의 실수가 테라바이트의 데이터를 노출시킬 수 있음
"
"https://news.hada.io/topic?id=10993","(업데이트 된) 최신 CSS Reset","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         (업데이트 된) 최신 CSS Reset

     * 4년전에 공개했던 CSS Reset을 요즘에 맞게 새로 업데이트
     * 각 항목당 설명 포함

추가된 것들

     * 브라우저별 폰트 사이즈 조정 삭제
     * 디폴트 마진을 margin:0 으로
     * textarea:not([rows]) 의 min-height: 10em
     * :target 의 scroll-margin-block: 5ex;

   요즘은 :where()로 감싸서 선언하기도 하더라고요.

   https://css-tricks.com/using-the-specificity-of-where-as-a-css-reset/
   https://github.com/csstools/sanitize.css/blob/main/sanitize.css
"
"https://news.hada.io/topic?id=11005","WebP 0day","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               WebP 0day

     * Google, 최근 Chrome에 대한 안정적인 업데이트를 출시, Apple의 SEAR 팀이 보고한 WebP 이미지 라이브러리의 힙 버퍼 오버플로우 보안 수정 포함
     * 알려진 취약점인 CVE-2023-4863, 야생에서 악용되고 있음, 즉 누군가가 이 취약점을 이용한 익스플로잇을 사용하고 있었음
     * 게시물은 CVE-2023-4863에 대한 기술 분석과 ""WebP 0day""라고도 알려진 증거 개념 트리거를 제공
     * 취약점은 WebP의 ""무손실 압축"" 지원에 있음, 100% 정확도로 픽셀을 저장하고 복원할 수 있는 무손실 이미지 형식
     * 취약점은 Huffman 코드의 복잡성과 버그를 트리거하는 데 필요한 특정 조건을 고려할 때, 수동 코드 검토를 통해 발견되었을 가능성이 높음
     * 버그는 널리 사용되는 오픈 소스 라이브러리에서 강력한 취약점이며, 퍼즈하기 어려워 중요한 보안 문제가 됨
     * 버그는 BLASTPASS 공격에서 사용된 것과 동일한 취약점일 가능성이 높으며, 이는 iMessage에 대한 ""제로 클릭"" 익스플로잇을 사용하여 NSO 그룹의 Pegasus 스파이웨어를 배포하는 데 관련되어 있음
     * 게시물은 이러한 공격이 어떻게 작동하는지에 대한 기본적인 기술 세부 정보를 보류하는 것이 공격자보다 방어자에게 더 이익이라고 제안하며, 이는 정보의 불균형을 만듦
     * 저자는 능동적인 소스 코드 검토에 대한 더 큰 투자와 파서가 적절하게 샌드박스 처리되도록 하는 데 중점을 두어 보안을 향상시키기를 촉구

        Hacker News 의견

     * 웹P 이미지 형식의 버그에 대한 기사, 2015년의 Timsort 버그와 비교
     * 공식적으로 증명된 가장 큰 테이블 크기와 소스 코드에 입력된 것 사이의 불일치로 인한 버그 발생
     * 공식 검증의 필요성과 메모리 안전 언어 사용의 중요성 강조, 인간의 검토에만 의존하는 것은 부적절
     * 악용의 개념 증명(POC) 재현의 어려움 언급, 위치와 수정 방법이 알려져 있음에도 불구하고
     * Brave와 같은 다른 크롬 기반 브라우저가 영향을 받았는지, 문제가 모바일에만 국한되어 있는지에 대한 의문 제기
     * NSO가 버그를 찾는 데 소스 코드의 역할에 대한 의문, 코드가 blob-only였다면 현대의 디컴파일러가 충분했을지에 대한 추측
     * 이미지를 보는 것만으로도 보안 문제가 발생할 수 있다는 우려 제기
     * JPEG에 사용되는 수십 년 된 기술인 Huffman 압축에서의 버그 존재가 놀라움으로 받아들여짐
     * 웹P 사양이 코드 구성 방법에 대한 명확성이 부족하다는 비판
     * 애플과 크롬의 신속한 대응에 대한 칭찬, 그러나 리눅스 배포판과 관련하여 구글의 문제 처리에 대한 비판
     * 이와 같이 전 세계 수백만 명이 사용하는 라이브러리가 높은 위험 비율 때문에 C를 사용하지 않아야 한다는 주장
     * 기사 요약이 과도하게 fuzzing에 의존하고 있으며, 코드 검토와 샌드박싱을 해결책으로 제안하는 것에 대한 비판, 메모리 안전 언어 사용을 주장하지 않음
"
"https://news.hada.io/topic?id=10953","베를린의 등록 양식을 디지털화한 나","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          베를린의 등록 양식을 디지털화한 나

     * 본 기사는 베를린의 새로운 거주자를 위한 필수 등록 양식인 Anmeldung 양식의 디지털화에 대해 논의하고 있습니다.
     * 원래의 Anmeldung 양식은 모호하고 혼란스럽고 구식이라는 비판을 받았으며, 실제로 제출해야 했습니다.
     * 저자는 이 양식의 디지털 버전을 만들어 더 사용자 친화적이고 효율적이게 설계하였습니다.
     * 디지털 양식은 웹 양식으로, PDF가 아니며, 자동완성, 숫자 키보드, 필드 검증, 자동완성, 키보드 단축키, 접근성 도구를 지원합니다.
     * 이 양식은 대화처럼 느껴지도록 설계되었으며, 사용자의 답변에 적응하고 유용한 지시사항을 제공합니다.
     * 디지털 양식에는 원래 양식에서 자주 놓치는 ""c/o"" 주소를 위한 전용 단계가 포함되어 있습니다.
     * 또한 양식은 아파트 위치 세부사항을 명시해야 한다는 점을 명확히 합니다. 이는 또 다른 흔히 놓치는 세부사항입니다.
     * 디지털 양식은 완료 후 다운로드할 수 있으며, 예약하거나 도움을 청하는 옵션을 제공합니다.
     * 이 도구는 여러 등록을 처리할 수 있습니다. 이는 원래 양식에서 사용할 수 없는 기능입니다.
     * 저자는 또한 언어 감지 및 필드 포커스 관리와 같은 품질 향상 기능을 구현하였습니다.
     * 모든 데이터 처리는 사용자의 브라우저 내에서 이루어지므로 개인 정보가 사용자의 컴퓨터를 떠나지 않음으로써 개인 정보 보호가 유지됩니다.
     * 디지털 양식은 VueJS와 PDFLib를 사용하여 제작되었으며, 이를 통해 끊김 없는 양식 채우기와 즉시 저장이 가능합니다.
     * 저자는 navigator.languages를 사용하여 사용자의 브라우저 언어를 기반으로 국가를 제안합니다.
     * 저자는 앞으로 세금 ID 요청 양식과 Abmeldung 양식 등 더 많은 양식을 디지털화할 계획입니다.
     * 저자는 또한 프린터가 없는 사용자를 위해 LetterXPress API와 Simple Fax API를 각각 사용하여 양식을 우편 또는 팩스로 보내는 것을 제안합니다.
     * 저자는 QR 코드 또는 짧은 URL을 사용하여 양식 제출을 위해 종이 양식을 완전히 없앨 가능성을 제안합니다.

        Hacker News 의견

     * 베를린 등록 양식의 디지털화에 대한 기사, 비효율성과 사용자 친화성 부족으로 비판받는 과정
     * 독일에서의 디지털화 과정은 종종 외주화되어, 지연, 비용 초과, 사용자 친화적이지 않은 최종 제품을 초래함
     * 디지털화된 양식은 종종 출력되어 수동으로 처리되어, 디지털화의 목적을 상쇄함
     * 베를린에서의 등록 과정에 대한 사용자 경험은 불만족스럽고, 대기 시간이 길며, 비효율적인 시스템임
     * 독일 건물에 아파트 번호가 없는 경우, 우편 배달에 문제를 일으킬 수 있음
     * 스웨덴 정부의 ""Dwelling Units Register""는 각 아파트가 고유하게 번호가 매겨진 더 효율적인 시스템으로 강조됨
     * 베를린 등록 양식의 디지털화는 독일의 관료주의 개선을 위한 한 걸음으로 보임
     * 디지털화 부족으로 인한 지연과 비효율성을 해결하기 위해 독일에서 더 많은 디지털화가 요구됨
     * 기사는 또한 캘리포니아의 보충 영양 지원 프로그램(SNAP) 가입 과정을 디지털화하는 과제를 언급함
     * 양식의 디지털화는 사용성을 크게 향상시킬 수 있지만, 많은 양식들이 아직 제대로 편집 가능하지 않음
     * 기사는 사용자 경험을 개선하고 양식 처리를 더 쉽게 자동화할 수 있도록 기능적인 디지털 양식을 만드는 데 더 많은 노력이 필요하다는 결론을 내림
"
"https://news.hada.io/topic?id=10954","iFixit, iPhone 14의 수리 가능성 점수를 소급적용하여 낮춤","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                iFixit, iPhone 14의 수리 가능성 점수를 소급적용하여 낮춤

     * 아이폰 14의 수리 가능성 점수가 10점 중 7점(추천)에서 4점(추천하지 않음)으로 소급적으로 낮춰진 결정에 대한 기사
     * 이러한 결정은 애플의 체계적인 부품 페어링으로 인해 기본적인 아이폰 수리가 제한되기 때문
     * 현대의 아이폰에 대한 주요 수리는 이제 애플의 승인이 필요하며, 부품은 그들의 시스템을 통해 구매해야 함
     * 독립 수리점들은 종종 제3자 부품이나 고장난 기기에서 회수한 부품을 사용하기 때문에 애플의 부품 페어링 실천에 위협받음
     * 수정된 점수는 개인과 독립 수리점들이 아이폰 14를 수리하려고 할 때 직면하는 제한을 반영함
     * 기사는 애플의 수리 과정에 대한 통제와 자신의 기기를 수리하는 데 필요한 비용을 비판함
     * 기사는 또한 애플의 접근 방식이 초래할 수 있는 잠재적인 결과, 예를 들어 전자 폐기물의 증가와 사회 및 지구의 안녕에 대한 위협에 대해 논의함
     * 저자는 수리 가능한 제품을 선호하고 수리 권리 운동을 지원하도록 독자들을 격려함
     * 기사는 애플이 상황을 더 심각하게 받아들이고 소비자들이 독립 수리 권리를 계속 싸우도록 행동을 촉구하며 마무리됨

        Hacker News 의견

     * 기사는 애플이 iPhone의 수리 가능성 점수를 낮추기로 한 결정에 대해 기술 애호가들 사이에서 논란이 일고 있다.
     * 일부 댓글 작성자들은 애플이 ""부품 수확""에 제한을 두는 것이 도난 우려 때문이라고 주장하며, 도난된 기기는 공장 초기화 후 짧은 시간 내에 부품으로 판매될 수 있다고 말한다.
     * 애플이 기기의 합법적인 소유자에게 iCloud에서 전화의 모든 구성 요소를 ""연결 해제""할 수 있도록 허용해야 한다는 제안이 있다. 이렇게 하면 합법적인 중고 상점이 고장난 기기를 부품으로 분해할 수 있다.
     * 일부 댓글 작성자들은 도난 방지 조치의 효과에 의문을 제기하며, 도둑들은 그들의 재판매 가치에 상관없이 귀중한 물건을 여전히 훔칠 것이라고 주장한다.
     * 논의는 또한 애플의 독립 수리점 프로그램에 대해서도 다루며, 일부는 회사가 수리할 수 있는 항목에 대한 제한에 대해 불만을 표현한다.
     * 일부는 이러한 제한이 iPhone 도난을 덜 편리하게 만드는 방지책이라고 생각하는 반면, 다른 일부는 전화를 수리하려는 사용자들이 이러한 제한이 없는 버전에 접근할 수 있어야 한다고 생각한다.
     * 일부 댓글 작성자들은 ThinkPads와 같은 다른 기기의 수리 가능성을 칭찬하며, 이들 기기는 유지 보수 매뉴얼, 가이드 비디오, OEM 부품을 제공한다.
     * 일부 댓글 작성자들은 애플의 결정이 iPhone을 수리하는 제3자에 대한 제한과 기기를 전혀 수리할 수 있는 능력을 혼동하고 있다고 우려하며, 이는 환경적 관점에서 불리하다고 주장한다.
     * 애플의 재활용 프로그램이 합법적인 것인지 아니면 단지 기업의 녹색 세탁인지에 대한 논란도 있다. 일부는 그들의 과정에 대한 독립적인 감사를 요구한다.
     * 일부 댓글 작성자들은 이러한 제한이 주로 도난된 iPhone 시장을 억제하기 위해 의도된 것이라고 주장하며, 다른 일부는 이 논의에서 다른 요인들도 고려해야 한다고 믿는다.
     * 논의는 또한 기기 소유권 개념에 대해서도 다루며, 일부는 그들이 아무것도 소유하지 않으면 아무도 그것을 훔칠 수 없다고 주장한다.
     * 일부 댓글 작성자들은 실제 문제는 도난 부품의 시장 창조자인 부정직한 ""수리"" 상점들이라고 주장하며, 도난 자체보다 이들이 문제라고 주장한다.
"
"https://news.hada.io/topic?id=10919","지난 10년 동안 약 2천명의 환경운동가가 사망","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       지난 10년 동안 약 2천명의 환경운동가가 사망

     * 2012년부터 2022년까지 환경운동가 거의 2,000명이 전 세계적으로 살해당했다는 기사 보도.
     * 2022년에만 환경운동가 177명이 살해되었으며, 이는 대략 이틀에 한 명씩이라는 Global Witness라는 영국 기반 감시 그룹의 보고에 따른 것.
     * 이 그룹은 또한 폭력, 위협, 괴롭힘이 전 세계적으로 환경 보호자들을 침묵시키는 데 사용되고 있다고 보고하고 있다.
     * 이러한 살인의 대부분, 거의 9할이 라틴 아메리카에서 발생했으며, 콜롬비아가 환경운동가에게 가장 위험한 나라였다.
     * 콜롬비아에서의 살인 수는 2021년과 2022년 사이에 거의 두 배로 늘었지만, 이 나라는 환경 보호자에 대한 공격을 예방하도록 요구하는 Escazú Agreement를 10월에 비준했다.
     * 브라질이 두 번째로 살인 수가 많았으며, 그 뒤를 이어 멕시코, 온두라스, 필리핀이었다.
     * 원주민은 전 세계적으로 희생자의 3분의 1을 차지했다. 원주민이 숲의 최고의 수호자이며 기후 위기 완화에 중요한 역할을 하는 것으로 나타났음에도 불구하고, 그들은 브라질, 페루, 베네수엘라 등의 나라에서 공격을 받고 있다.
     * 기사는 또한 원주민 전문가 Bruno Pereira와 영국 기자 Dom Phillips가 브라질에서 살해된 고위 프로파일 살인 사건을 언급하고 있다.
"
"https://news.hada.io/topic?id=10923",""이것을 전략적으로 활용하고 싶다: GOOG/AAPL 대비" (2022)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ""이것을 전략적으로 활용하고 싶다: GOOG/AAPL 대비"" (2022)

   요약과 댓글이 없는걸 보니 버그...?

   트윗 원문이 이미지라서 아무것도 못 읽어온듯 합니다 ㅠ
"
"https://news.hada.io/topic?id=10965","페이스북, BC 지역 시크교 지도자 암살에 대한 캐나다인들의 게시물 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                페이스북, BC 지역 시크교 지도자 암살에 대한 캐나다인들의 게시물 차단

     * 페이스북, 인도 정부의 법적 요구에 따라 캐나다 시크교 사용자들이 시크교 지역 지도자, Bhai Hardeep Singh Nijjar의 암살에 대한 게시물을 차단하고 있다.
     * 인도 법을 위반한 것으로 표시된 많은 게시물과 페이지들은 2023년 6월 Surrey gurdwara 외부에서 암살된 Nijjar의 유산과 관련이 있다.
     * 캐나다 총리 Justin Trudeau는 캐나다 정보기관이 인도 정부의 Nijjar 암살 관여에 대한 신빙성 있는 주장을 조사하고 있다고 밝혔다.
     * Nijjar의 암살 이후, 여러 캐나다 시크교 페이스북 사용자들이 인도 정부의 개입에 이어 지역 지도자에 대한 게시물이 Meta, 페이스북의 모회사에 의해 검열되거나 게시 취소된 것을 보고했다.
     * BC Sikhs, 브리티시 컬럼비아의 시크교 커뮤니티를 대표하는 페이스북 페이지는, 페이지가 Meta의 ""위험한 개인 및 조직""에 대한 기준을 위반했다는 통지를 받은 후 게시 취소되었다.
     * 인도의 정보기술법은 인도 정부가 국방, 주권, 무결성, 인도 또는 외국 국가와의 관계, 공공 질서, 또는 인식 가능한 범죄의 선동을 위한 이익을 위해 콘텐츠를 차단할 수 있게 한다.
     * 이 문제가 Meta의 주목을 받은 후, BC Sikhs는 그들의 항소가 갑자기 거꾸로 되어 그들의 페이지와 게시물이 복구되었다고 보고했다.
     * 세계 시크교 조직은 인도를 외국 개입으로 비난하며, 인도 정부에 비판적인 캐나다의 시크교 이주민들을 대상으로 한다고 주장했다.
     * 캐나다 정부는 올해 초 외국 개입에 대한 조사를 발표하였으며, 예비 보고서는 2월에 제출될 예정이다. 이 조사는 중국, 러시아, 그리고 다른 외국 국가 또는 비국가 행위자들에 의한 개입을 검토하고 평가할 것이다.

        Hacker News 의견

     * 인도 정부, 캐나다 시민 암살에 관여한 것으로 주장하는 게시물 검열로 비난 받아
     * 페이스북과 같은 글로벌 플랫폼에서의 법률 적용 문제 제기
     * 인도가 페이스북 인도 직원을 위협해 캐나다에 검열 체제를 강요하는 것으로 보는 의견도 있음
     * 페이스북이 인도를 떠나거나 캐나다와 유럽이 페이스북에 인도의 요구를 따르지 않도록 강요해야 한다는 요구가 있음
     * 캐나다 정부의 'Bill C-18'을 비판하며 이로 인해 검열 문제가 생겼다는 의견도 있음
     * 캐나다 총리 트뤼도가 이 상황을 이용해 시크교 투표를 얻으려 한다는 주장도 있음
     * 페이스북에 대한 불만 표출, 운영 중단하거나 사용을 중단해야 한다는 의견도 있음
     * 검열의 공식적인 이유는 게시물이 페이스북의 '위험한 개인 및 조직에 대한 커뮤니티 표준'을 위반했다는 것
     * 최근 인도와의 문제로 트뤼도에게 정치적 이점을 줄 수 있는 상황으로 보임
     * 검열 문제가 위험한 사람들과 의견을 검열하는 소셜 미디어 플랫폼에 대한 선례가 될 수 있으며, 이로 인한 의도치 않은 결과에 대한 우려도 있음
"
"https://news.hada.io/topic?id=10971","DALL··E 3

     * DALL·E 3은 OpenAI의 텍스트-이미지 시스템의 최신 버전으로, 이전 버전보다 더욱 미묘하고 세부적인 이해력을 향상시켰습니다.
     * 이 시스템은 텍스트 프롬프트를 정확하게 이미지로 변환하는 것을 목표로 하며, 현대 텍스트-이미지 시스템에서 흔히 발생하는 단어나 설명을 무시하는 문제를 극복하였습니다.
     * DALL·E 3는 ChatGPT를 기반으로 구축되어, 사용자가 ChatGPT를 브레인스토밍 파트너 및 프롬프트 개선 도구로 사용할 수 있습니다.
     * 아이디어를 제공받으면, ChatGPT는 DALL·E 3를 위한 상세한 프롬프트를 생성하고, DALL·E 3는 그 아이디어를 이미지 형태로 구현합니다.
     * 이 시스템은 10월에 ChatGPT Plus 및 Enterprise 고객에게 제공될 예정이며, 생성된 이미지는 사용자가 원하는 대로 사용할 수 있는 사용자의 소유가 됩니다.
     * DALL·E 3가 폭력적이거나 성인적인 내용, 혹은 혐오스러운 콘텐츠를 생성하는 능력을 제한하기 위한 안전 조치가 취해졌으며, 공공 인물의 이미지 요청을 거부하는 조치도 마련되어 있습니다.
     * OpenAI는 AI가 생성한 이미지를 사람들이 식별할 수 있도록 돕는 방법을 연구하고 있으며, 이에는 출처 분류기 도구가 포함됩니다.
     * DALL·E 3는 생존하는 예술가의 스타일로 이미지를 요청하는 것을 거부하도록 설계되었으며, 창작자들은 자신의 이미지를 미래의 이미지 생성 모델 훈련에서 제외시킬 수 있습니다.
     * DALL·E 3의 개발에는 대규모 연구자 팀, 제품 개발자, 안전 전문가, 커뮤니케이션 전문가들이 참여하였습니다.

        Hacker News 의견

     * AI 이미지 생성기의 새로운 버전인 DALL·E 3 출시 예정 공지
     * 아직 출시되지 않은 DALL·E 3, 사전 출시 공지의 가치에 대한 논의
     * 한 사용자가 이전 버전인 DALL·E 2로 약 7,000개의 이미지를 생성하고 웹사이트에 공유
     * ChatGPT와 DALL·E 3의 통합, 텍스트-이미지 SaaS 회사에 중요한 영향을 미칠 수 있는 발전
     * 일부 사용자들은 DALL·E 3가 허락 없이 저작권이 있는 작품으로 학습되었다는 점에 대해 저작권 문제를 제기
     * DALL·E 3의 Midjourney와 Stable Diffusion 같은 다른 AI 아트 플랫폼에 대한 잠재적 영향에 대한 추측
     * AI 아트에서 큐레이션의 중요성 강조, 예쁜 이미지를 선택하기 위해 여전히 예술적 감각이 필요하다는 주장
     * DALL·E 3가 여전히 동의 없이 저작권이 있는 ""학습"" 자료를 사용하는지에 대한 질문
     * 일부 사용자들은 DALL·E 3가 ChatGPT와의 긴밀한 통합 때문에 GPT-4의 다중 모드 기능을 위한 시험 운영일 수 있다는 의심
     * 이 공지는 OpenAI가 분야를 앞으로 밀어붙이는 것에 대해 인정받으면서 기술 커뮤니티에서 흥분과 기대를 불러일으킴
"
"https://news.hada.io/topic?id=10899","Biome - 중단된 Rome 프로젝트의 커뮤니티 포크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Biome - 중단된 Rome 프로젝트의 커뮤니티 포크

     * Rome은 2020년에 새롭게 등장한 자바스크립트 툴 체인
     * Rome은 처음에 Meta OSS라는 이름으로 시작했고 제작자인 Sebastian McKenzie가 Rome Tools Inc.라는 회사를 설립하여 Rome 프로젝트 출시
     * 하지만 회사는 어려워졌고 결국 모든 직원 해고됨
     * 이후에도 메인테이너들이 꾸준히 기여를 하고 있었지만 상표권 문제 등 유지 관리에 한계가 있었음
     * 이에 기존 Rome 메인테이너들이 포크하여 새롭게 Biome 프로젝트 시작

   Rome는 여기서 알게된 프로젝트였는데 중단된지 좀 지났지만 이제서야 알게돼서 올립니다.
"
"https://news.hada.io/topic?id=10974","Svelte 5: Runes 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Svelte 5: Runes 공개

     * Svelte 5가 Runes라는 기능을 도입하여 JavaScript의 반응성을 향상시킴
     * 2019년 Svelte 3은 Javascript를 Reactive 언어로 바꿨음
          + 컴파일러를 이용하여 선언형 컴포넌트를 최적화된 자바스크립트로 변환
     * Runes는 이 Reactivity를 모든 곳에 적용
          + let count = $state(0); 처럼 함수 형태로 적용
          + Compile-time Reactivity 에서 Runtime Reactivity로
     * Runes를 통해 반응성이 .svelte 파일의 경계를 넘어서 확장되어, 컴포넌트 간에 로직을 캡슐화하여 재사용하는 과정을 단순화
     * Svelte의 새로운 버전은 예전에 Knockout 이 이용 했던 Signals 기반으로 구동. 직접 작용이 아닌 내부 구현으로 돌려서 조금 다르게 구현
     * $derived와 $effect runes를 도입하여, 이들이 Evaluate될 때 표현식의 종속성을 결정하며, 런타임 반응성을 향상
     * Runes는 여러 기존 개념을 불필요하게 만들어, Svelte 프레임워크를 단순화하고 앱을 더 쉽게 구축하고 유지할 수 있게 될 것
     * 대부분의 사용자들에게 대체 가능한 제품을 목표로 삼고 있으며, 새로운 기능들은 선택적으로 사용할 수 있도록 하여 기존 컴포넌트가 계속 작동하도록 보장
     * 아직 Svelte 5 공개일자는 결정되지 않았고, 현재 진행중인 작업임

   Evan You 등판..! https://news.ycombinator.com/item?id=37592471

   qwik에게서 많은 영향을 받은 것 같네요

        Hacker News 의견

     * 기사는 Svelte 5의 출시와 특히 새로운 기능 'Runes'에 대해 논의한다.
     * 일부 댓글러들은 Svelte의 새로운 기능을 Vue와 Solid의 상태 및 파생/계산 변수와 비교한다.
     * 반응형 신호의 효과에 대한 논쟁이 있으며, 일부는 이것이 다른 변화에 영향을 미치는 변화의 혼란을 초래할 수 있다고 주장한다.
     * 일부 사용자들은 새로운 'Runes' 기능에 대해 우려를 표현하며, 이것이 이전보다 더 일반적인 코드처럼 보이며, 혼동을 초래할 수 있다고 주장한다.
     * 변화에 대한 불편함의 감정이 있으며, 일부 사용자들은 Svelte가 너무 복잡해지고 간단함을 잃어버릴까 두려워한다.
     * 한 댓글러는 Svelte가 전통적인 구문을 유지하고 이를 새로운 기능과 유사하게 작동하도록 백그라운드에서 변환할 수 있다고 제안한다.
     * Svelte의 고유한 강점인 사용자 정의 컴파일러를 가지고 언어처럼 동작하는 것에 대한 논의가 있으며, 일부는 이것이 전통적인 JavaScript 프레임워크를 닮아가고 있다고 우려한다.
     * 일부 사용자들은 다른 라이브러리들이 독립적으로 동일한 반응형 개념을 재창조하고 있어 호환성이 떨어지고 미래에 프레임워크를 변경하는 것이 더 어려워지는 것에 대해 실망감을 표현한다.
     * 몇몇 댓글러들은 $:의 제거에 대해 기쁘게 생각하며, 이것이 Typescript 사용자를 돕고 구문 혼동을 피하는 데 도움이 될 것이라고 말한다.
     * Svelte가 긴 배열을 어떻게 처리하고, 세밀한 재계산/업데이트만 해당 뷰 요소를 할 수 있는지에 대한 질문이 있다.
     * 한 사용자는 Svelte 4, Svelte 5, 그리고 다른 프레임워크들 간의 비교를 위한 링크를 공유한다.
     * 일부 사용자들은 Svelte가 '기본적으로 반응성'에 대한 입장을 바꾸는 것을 비판하며, 이것은 신뢰의 손실이며 Node.js 생태계의 재발명과 재발견 경향의 증상이라고 주장한다.
     * 마지막 댓글은 Svelte가 React Hooks에 더 가까워지고 있지만 컴파일 단계를 사용하여 이들을 최적화한다고 제안한다.

   슬쩍 보니까 기존이랑 방향성도 달라 보이고 이질감도 확 드네요. 굳이 싶기도 하고 덜 간결하기도 하고 해커 뉴스 반응과 마찬가지로 조금 우려되는 부분입니다
"
"https://news.hada.io/topic?id=10917","CatalaLang/catala: 법률 명세를 위한 프로그래밍 언어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 CatalaLang/catala: 법률 명세를 위한 프로그래밍 언어

     * Catala는 법률 텍스트에서 알고리즘을 생성하기 위해 설계된 도메인 특화 프로그래밍 언어입니다.
     * 이 언어는 사회-재정 법률 프로그래밍에 적합하게 조정되어 복잡한 사회-재정 메커니즘을 코드-법률 충실도가 높은 수준으로 구현할 수 있습니다.
     * 이 과정은 모든 관련 법률, 행정명령, 이전 사례를 수집하고, 텍스트를 코드의 의미로 주석 처리하는 것을 포함합니다.
     * Catala 컴파일러는 도메인 전문가들, 예를 들어 변호사들이 검토하고 정확하다고 인증할 수 있도록 설계된 변호사가 읽을 수 있는 PDF 버전의 구현을 생성할 수 있습니다.
     * Catala의 논리적 구조는 법률의 논리적 구조를 모방하며, 기본 논리를 일급 기능으로 임베딩함으로써 법률 프로그래밍에 독특하게 적합합니다.
     * Catala는 opam 패키지로 제공되며 opam이 설치된 기계에서 설치할 수 있습니다.
     * 이 언어는 Catala 컴파일러의 소스 코드를 수정하지 않고도 사용자 정의 백엔드를 추가하는 것을 지원합니다.
     * Catala에는 LégiFrance, 프랑스 법률 문서의 공식 저장소와 통합하는 명령 줄 유틸리티인 Catleg가 포함되어 있습니다.
     * 이 언어는 법률 사례의 컴퓨터 데이터베이스인 Juris-Data를 만들어 프랑스 법률테크를 선도한 법학 교수인 Pierre Catala의 이름을 따서 명명되었습니다.
     * Catala는 프랑스 국립 컴퓨터 과학 연구소인 Inria의 연구 프로젝트로, 현재 일부 기능이 불안정한 상태로 개발 중입니다.

        Hacker News 의견

     * CatalaLang/catala는 법률 명세를 위해 설계된 프로그래밍 언어입니다.
     * 댓글러들은 이러한 언어의 잠재력에 대해 흥분을 표현하며, 법률이 이 형식으로 작성된다면 공중 이해도를 향상시킬 수 있을 것이라 제안합니다.
     * 법률을 위한 프로그래밍 언어 개념은 Greg Bear의 ""Moving Mars""라는 책에서 ""Legal Logic""라는 이름으로 언급되었습니다.
     * 일부는 테스트 케이스와 모델 체커의 통합을 제안하여 이 언어로 작성된 법률의 정확성과 효과성을 보장합니다.
     * 이 언어를 설명하는 논문이 발행되었으며, 짧은 비디오 요약이 제공됩니다.
     * 일부 댓글러들은 법률의 의도를 명확히 하고 오해를 방지하기 위해 법률에 대한 표준화된 테스트 스위트 형식을 제안합니다.
     * 법률에서 모호성의 역할에 대한 논쟁이 있으며, 일부는 모호성이 근본적이고 필요하다고 주장하는 반면, 다른 일부는 프로그래밍 언어가 원치 않는 모호성을 제거하는 데 도움이 될 수 있다고 믿습니다.
     * 일부 사용자들은 프로그래밍 언어가 법률 텍스트의 이해에 도움이 될 수 있지만, 균형을 따지는 복잡한 작업에는 도움이 되지 않으며, 이는 여전히 인간의 판단력이 필요하다고 지적합니다.
     * Logical English와 같은 다른 유사한 이니셔티브, 즉 ""법률과 윤리를 위한 프로그래밍 언어""도 언급됩니다.
     * 법률에 대한 버전 관리 시스템 개념이 제안되었으며, 법률의 창출 시점에 명확한 목표를 정의하고 검토해야 하는 제약 조건을 설정하는 것을 포함합니다.
"
"https://news.hada.io/topic?id=10951","SpaceX, 더 이상 Starlink 위성 안테나 생산으로 손해 보지 않음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               SpaceX, 더 이상 Starlink 위성 안테나 생산으로 손해 보지 않음

     * 이전엔 단말기 제작비용을 보조금으로 지원하였지만, 단말기 생산에 대한 지속적인 개선으로 인해 더 이상 보조금을 필요로 하지 않게 됨
     * SpaceX는 소비자용 Starlink 안테나, 즉 사용자 단말기를 대당 $599에 판매. 모바일, 해상 또는 항공 사용자용은 가격이 개당 $2,500에서 $150,000 사이
     * 초기에는 단말기 제조 비용이 대당 약 $3,000이었으나, 2021년 초까지 이 비용은 약 $1,300으로 감소
     * 이제는 대량 생산의 이점 덕분에 단말기 제조 비용이 대당 $600 미만 까지 떨어짐
     * SpaceX의 회장/COO인 Gwynne Shotwelld은 올해 초 Starlink가 2022년에 현금 흐름이 흑자인 분기를 가졌으며, 전체 회사가 2023년 1분기에 이익을 내었다고 보고
     * $150 billion에 가까운 가치를 지닌 SpaceX는 20년 이상 전에 설립되었지만, 로켓, 우주선, 위성 사업은 자본 집약적인 사업임
     * 2021년에 Elon Musk는 Starlink가 ""깊은 마이너스 현금 흐름의 협곡""을 겪고 있다고 얘기한바 있음
     * 5월에 약 150만 Starlink 고객을 보유하고 있다고 발표했고, 현재는 150만명을 ""훨씬 넘는다""고 전해짐
     * 지금까지 SpaceX는 5,000개 이상의 Starlink 위성을 발사하였으며, 최근엔 주당 2번 발사하고 있음
     * 유럽 위성 운영자인 SES는 Starlink와의 파트너십을 발표하였으며, 이는 두 회사가 현재 서비스를 제공하고 있는 크루즈선에 통신 서비스를 공동으로 판매하기 위한 것

   관련 주제로 흥미로운 기사가 하나 떳네요.
   기사 내용은 이번 여름에만 200개가 넘는 Starlink 위성이 불타버렸는데 아직 그 이유를 모르고 있다는 내용입니다.
   출처: https://golem.de/news/…

   --- 기사 일부를 DeepL 로 번역해서 올립니다.
   ...
   미국 우주 기업 SpaceX는 5월 중순 이후 스타링크 별자리에서 많은 수의 위성을 잃었습니다. 그 이유는 불분명합니다.

   웹 사이트 Satellitemap.space(왼쪽 하단의 작은 필드 클릭)의 목록에 따르면 지난 두 달 동안 270개의 별자리 위성이 유실되었습니다. 5월 25일부터 26일까지 소실된 위성의 수는 23개 증가했으며, 그 이후 소실된 위성의 곡선은 이전보다 가파른 경사를 보이고 있습니다. 하루에 20개 이상의 위성이 소실된 경우도 여러 차례 있었습니다.

  위성의 궤도 이탈이 증가한 이유는 알려지지 않았습니다. 스페이스X는 이에 대해 언급하지 않았습니다. 리투아니아의 온라인 뉴스 서비스 사이버뉴스는 미국 우주 회사에 문의했지만 아무런 답변이 없었다고 보도했습니다.
  ...
"
"https://news.hada.io/topic?id=10948","뇌는 속에 작은 파충류가 있는 양파가 아니다 (2020)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    뇌는 속에 작은 파충류가 있는 양파가 아니다 (2020)

     * 본 기사는 인간 뇌가 더 오래되고 복잡한 구조 위에 새롭고 복잡한 구조를 추가함으로써 진화했다는 심리학에서의 오해를 해명하려는 목표를 가지고 있다. 이 새로운 구조들이 인간에게 더 복잡한 심리 기능을 부여했다는 주장도 포함되어 있다.
     * 이러한 믿음은 종종 삼중뇌 이론으로 언급되며, 새로운 종이 등장함에 따라 새로운 뇌 구성 요소가 오래된 것들의 외부에 층을 이루고, 이 새로운 구조들이 복잡한 심리 기능과 연관되어 있다고 제안한다.
     * 그러나, 이 믿음은 신경생물학자들과 신경계 진화를 연구하는 사람들 사이에서는 무시되고 있다.
     * 본 기사는 진화의 많은 변화가 새로운 부분을 추가하는 것이 아니라 기존 부분을 변형하는 것으로 이루어진다고 주장한다. 예를 들어, 박쥐의 날개는 새로운 부속물이 아니라 변형된 앞다리다.
     * 저자들은 특정 인지 기능에 연결된 독특한 인간 신경 구조에 대한 믿음이 연구자들을 잘못된 길로 이끌고 다른 분야와의 연결을 방해할 수 있다고 주장한다.
     * 저자들은 심리학자들이 인간 뇌에 대한 이 잘못된 견해를 포기하고 신경 진화에 대한 견해를 바로잡으면 심리학에 어떤 이점이 있을지 고려하도록 촉구한다.
     * 본 기사는 뇌 진화에 대한 더 정확한 이해가 더 통합적이고 창조적인 연구로 이어질 수 있으며, 인간의 의지력에 대한 이중 과정 관점에서는 의미가 없는 질문을 던질 수 있도록 제안한다.
     * 저자들은 이러한 뇌 진화에 대한 잘못된 생각들이 신경생물학이나 진화에 대한 우리의 이해에 어떠한 기반이 없으므로 심리학 과학자들에게 포기되어야 한다고 결론을 내린다.

        Hacker News 의견

     * 기사는 빨대인간 논리로 비판받는 삼위일체 뇌 모델에 대해 논의한다.
     * 일부 독자들은 진화가 선형이 아닌 분기 형태라는 반박, 더 큰 뇌가 반드시 더 복잡하다는 것이 아니라는 주장, 그리고 진화가 새로운 계층을 추가하는 것 외에도 기존 뇌 구조를 수정한다는 주장 등이 분명하고 삼위일체 뇌 이론을 반박하지 않는다고 주장한다.
     * 삼위일체 뇌 모델은 일부에게는 과학적으로 부정확한 이론이 아니라 큰 그림을 구분하는데 유용한 단순한 분류로 보인다.
     * 일부 독자들은 우리가 동물 왕국의 더 원시적인 구성원들과 공유하는 심리의 일부를 논의하는 유용한 도구로 모델을 주장한다.
     * 모델이 틀렸는지의 문제는 모델이 유용한지 여부보다 중요하다고 보는 것이 덜하다.
     * 일부 독자들은 인간이 다루는 반대의 충동을 설명하는 생물학적/진화적으로 올바른 모델이 무엇인지에 대해 의문을 제기한다.
     * 삼위일체 뇌 모델은 뇌에서 무슨 일이 일어나고 있는지를 설명하는 최고의 모델이 아니라는 비판을 받으며, 일부 독자들은 강화 학습과 같은 모델이 더 유용하다고 제안한다.
     * 일부 독자들은 신경피질이 뇌의 다른 부분을 스스로 제어하게 하고 고수준 접근만을 가진다고 주장한다.
     * 기사는 오래된 이론을 실제로 반박하지 않는 것처럼 보인다는 비판을 받는다.
     * 일부 독자들은 삼위일체 뇌 모델과 같은 모델들이 완전히 정확하지 않음에도 불구하고 모델의 범위에 대해 유용하다고 주장한다.
     * 기사의 제목은 공식적인 제목에서 벗어난 환영받는 변화로 칭찬받는다.
"
"https://news.hada.io/topic?id=10984","Cisco, Splunk 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Cisco, Splunk 인수

     * Cisco Systems Inc.가 혁신적인 데이터 솔루션 회사 Splunk를 인수
     * Splunk는 거의 20년 동안 운영되어 왔으며, 특히 디지털 복원력 분야에서 복잡한 문제에 대한 데이터 중심의 솔루션을 고객에게 제공
     * 이번 인수는 디지털 변혁과 AI의 상승세에 따른 수요 증가를 계기로, 데이터 관리의 새로운 기회와 도전을 만들어냄
     * Splunk와 Cisco의 파트너십은 보안, 관찰 가능성, 네트워크 운영에 대한 그들의 업계 선도적인 솔루션을 결합함으로써 고객에게 제공되는 가치를 향상시킬 것으로 예상
     * 이번 합병은 Splunk가 Cisco의 광범위한 글로벌 네트워크와 시장 진출 능력을 활용하여, AI 기반의 기업용 보안 및 관찰 가능성 솔루션을 더 넓은 고객 기반에게 제공할 수 있게 할 것
     * 두 회사의 결합된 능력은 기업이 데이터에 더 빠르고 안전하게 접근하고 분석하고 행동할 수 있도록 하는 솔루션의 혁신과 개발 속도를 가속화할 것으로 예상
     * 이번 인수는 Splunk의 직원들의 노력과 혁신적인 비전을 입증하는 것으로 보이며, 더 안전하고 복원력 있는 디지털 세계를 구축하는 데 대한 그들의 헌신을 더욱 강화할 것으로 예상
     * 이번 인수는 규제 승인 및 기타 통상적인 종료 조건에 따라 진행되며, 제안된 거래와 관련하여 앞으로의 성명서에 자세히 설명된 일정한 위험과 불확실성이 있음
     * 인수에 대한 자세한 정보는 미국 증권 거래 위원회에 제출될 보도 자료 및 기타 문서에서 찾을 수 있음

   Splunk 인수에 대한 내부자 거래?

   관련해서 위 기사가 재미나네요. 어찌 알고 콜옵션을 ㅎㅎ

   인수가격은 280억달러 한화 37조원입니다. 솔직히 시너지가 어찌 날지는 잘 모르겠네요

        Hacker News 의견

     * Cisco, Splunk 인수, 회사 규모로 인한 일부 놀람
     * 이번 인수는 Cisco가 이 분야에 진입하려는 첫 시도가 아니며, 이전에는 Datadog 인수를 시도했음
     * Cisco의 소프트웨어 혁신에 대한 기록, 특히 상위 스택에서의 문제에 대한 우려
     * Cisco의 인수가 종종 인수한 제품의 쇠퇴로 이어진다는 믿음, Protego, Stealthwatch, ThousandEyes 등의 예를 들어 설명
     * 인수로 인해 일부 Splunk 고객들이 가격 상승에 대한 우려로 Datadog와 같은 대안을 고려하게 됨
     * 2023년에 Splunk가 인수되었다는 사실에 대한 놀라움, 많은 보안 엔지니어들이 비용 때문에 이를 떠나려고 한다는 보고
     * Splunk는 작은 사용 사례에는 너무 ""강력""하고 큰 사용 사례에는 너무 비싸다는 평가, 일부 고객들이 ELK 및 전용 개발팀과 같은 대안을 선택하게 됨
     * 인수 비용은 Cisco에게 280억 달러, 당시 Splunk의 거래 가격에 대한 약 31%의 프리미엄
     * Splunk가 가격을 올린 후 일부 회사들이 ElasticSearch와 같은 대안으로 이동
     * 발표에서 사용된 ""디지털 회복력 가속화""라는 구절이 그 의미에 대한 질문을 제기
     * 리더십 팀이 축하를 받는 동안, 인수 후 엔지니어링 팀에 대한 우려 존재
"
"https://news.hada.io/topic?id=10894","FindMyCat - 오픈소스 반려동물 추적기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       FindMyCat - 오픈소스 반려동물 추적기

     * FindMyCat은 애완동물의 실시간 위치 업데이트를 제공하는 오픈 소스 애완동물 추적기입니다.
     * 이 추적기는 실제 GPS 칩과 LTE용 SIM 카드 연결이 장착되어 있어, 셀룰러 연결이 가능한 어디에서나 추적이 가능합니다.
     * 또한 초광대역 (UWB) 및 블루투스 기술을 통해 정확한 실내 추적이 가능합니다.
     * 이 장치는 최적화된 소프트웨어와 초저전력 하드웨어 덕분에 긴 배터리 수명을 가지고 있으며, 한 번 충전으로 최대 6개월까지 사용할 수 있습니다.
     * HomeStation Smart Tether 기능은 애완동물이 집에 있을 때 추적기를 깊은 수면 모드로 전환하여 배터리 수명을 절약하고 WiFi를 통해 위치 업데이트를 보냅니다.
     * 추적기에는 앱에서 한 번 탭하면 작동하는 사운드 플레이 기능도 있습니다.
     * FindMyCat 추적기는 완전히 오픈 소스로, 숨겨진 함정이 없습니다.
     * 추적기는 아직 상업적으로 출시되지 않았지만 곧 출시될 예정입니다.
     * 이 프로젝트는 ChitlangeSahas와 **@iampumpkinthecat_**에 의해 만들어졌으며, 크리에이티브 커먼즈 저작자표시-비영리-동일조건변경허락 4.0 국제 라이선스에 따라 라이선스가 부여됩니다.

        Hacker News 의견

     * 'FindMyCat', 오픈 소스 반려동물 추적 프로젝트에 대한 기사
     * 추적기의 크기에 대한 사용자들의 우려
     * 목걸이에 추적기 통합 제안: 배터리, GPS, LoRa, 안테나 및 전력 관리 마이크로 컨트롤러 포함
     * 다른 반려동물 추적기의 부족함: 크기, 전력 관리, 추적 능력
     * 실시간 GPS 추적 기능을 갖춘 추적기에 대한 사용자들의 요구
     * 'FindMyCat'의 오픈 소스 특성에 대한 호평과 크기로 인한 고양이 안전성에 대한 우려
     * 방수 디자인 부재와 IP67 등급 USB 커넥터, 케이스 결합 부분의 고무 밀봉 제안
     * 장시간 배터리 수명과 '분실 모드'를 갖춘 개용 제품 언급
     * 고양이의 환경 영향에 대한 주의사항
     * GPS를 사용한 월간 배터리 수명 주장에 대한 의문: 20시간이 더 가능성 있음
     * 장치 조립 지침의 명확성 요구와 고양이가 추적기를 착용할 수 있을지에 대한 우려
     * 삼성 S23의 Ultra-wideband (UWB) 기능에 반응하는 고양이 보고: 고양이가 감지할 수 있음을 제안
"
"https://news.hada.io/topic?id=11002","질렸으니, 브라우저를 작성하고 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          질렸으니, 브라우저를 작성하고 있다

     * 저자인 소프트웨어 개발자가 기술 산업의 현재 상황에 대한 불만으로 인해 브라우저를 작성하기로 결정.
     * 저자의 결정은 부정적인 뉴스 사이클에 대한 점점 커지는 실망감으로 인해 뉴스를 전혀 소비하지 않기로 결정하는 데 영향을 받음.
     * 전통적인 뉴스를 피하더라도 저자는 여전히 기술 뉴스를 따르고 있으며, 회사들이 원치 않는 업데이트를 강요하고 약속을 어기며 개인 데이터를 악용하는 경향을 발견.
     * 저자는 브라우저가 직접 광고를 보여주어 차단할 수 없게 만들고, 사이트 사용성을 제한할 수 있는 브라우저 특정 확장 기능에 대해 특히 우려.
     * 저자는 개인으로서의 영향력은 제한적이지만 프로그래머로서 소프트웨어를 개발하고 공유함으로써 반발의 형태를 보여줄 수 있다고 인정.
     * 저자가 브라우저를 만드는 목표는 시장의 주요 플레이어를 전복시키는 것이 아니라, 다른 사람들이 자신의 프로젝트를 만들도록 영감을 주고 잠재적으로 파장 효과를 만들어내는 것.
     * 저자는 프로젝트를 비상업적 목적으로 개방하고 있으며, 이것이 다른 사람들이 자신의 코드를 작성하도록 영감을 주기를 희망.
     * 저자는 프로젝트를 완성할 것으로 기대하지 않고 지원 없이 빠르게 사라질 수도 있다고 예상하지만, 시도에 가치를 보고 있음.
     * 프로젝트의 진행 상황은 https://codemusings.nl/@jaytaph/p/MQpHToAx8c1KXyU98Auip4에서 확인할 수 있으며, 프로젝트 자체는 GitHub의 https://github.com/jaytaph/gosub-browser에서 찾을 수 있음.

        Hacker News 의견

     * 원래 포스터(OP)가 주요 시장 플레이어가 될 것이라는 기대 없이 새로운 브라우저를 개인 프로젝트로 개발 중입니다.
     * OP는 브라우저 시장에서 더 많은 옵션을 제공하고 주요 기술 회사의 지배력에 도전하려는 욕구에 의해 동기를 얻습니다.
     * OP는 또한 이 프로젝트를 브라우저를 만드는 데 있어 기본적인 기술적 도전을 이해하는 학습 기회로 활용하고 있습니다.
     * 일부 댓글 작성자들은 OP의 노력을 지지하며, 이를 가치 있는 학습 경험과 주류 브라우저에 대한 대안으로 보고 있습니다.
     * 다른 사람들은 OP가 처음부터 시작하는 대신 기존 프로젝트에 기여하거나 원치 않는 기능을 제거하기 위해 기존 브라우저를 포크할 수 있다고 제안합니다.
     * 한 댓글 작성자는 자신의 프로젝트인 Tersenet을 언급하며, 이는 전체 웹 브라우저보다 복잡성이 적고, Gemini 프로젝트는 최소한의 웹 경험을 제공한다고 말합니다.
     * 또 다른 댓글 작성자는 Gemini의 최소주의와 주류 웹의 복잡성 사이의 중간 지점을 원하며, 클라이언트 측 디자인 접근법을 제안합니다.
     * 일부 댓글 작성자들은 자신들의 유사 프로젝트 경험을 공유하며, OP에게 격려와 자원을 제안합니다.
     * 전반적인 감정은 OP의 프로젝트에 대한 지지로, 학습의 가치와 브라우저 시장에서의 혁신 가능성에 중점을 두고 있습니다.
"
"https://news.hada.io/topic?id=11016","2023년 웹 디자인의 타이포그래피 트렌드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        2023년 웹 디자인의 타이포그래피 트렌드

     * Go Bold or Go Home : 굵고 큰 폰트 사용
     * Brutalism : 대담하고 기하학적인 글꼴과 선명한 대비가 특징
     * Highlighted Text : 다양한 글꼴/크기/색상을 사용하여 강조하고, 웹 사이트에 시각적 계층 구조를 생성
     * 3D Typography : 3차원 효과를 사용
     * Animated Typography : 대화형의 몰입형 사용자 경험을 제공
     * Monospaced Fonts : 읽고 훑어보기가 더 쉬움
     * Color Fonts : 흰색배경에 검은 텍스트의 시대는 가고 이제 다크모드의 시대, 콘텐츠를 돋보이기 위해 컬러 글꼴을 사용
"
"https://news.hada.io/topic?id=11008","WhatsApp-Llama - 자신의 왓츠앱 대화로 LLM 파인튜닝 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                WhatsApp-Llama - 자신의 왓츠앱 대화로 LLM 파인튜닝 하기

     * Llama 7B 를 자신의 왓츠앱 대화로 파인튜닝하여, 자신처럼 말하게 만들기
     * QLoRA 와 int4 양자화로 싱글 GPU(P100 + 16GB)로 파인튜닝 가능
     * 3가지 질문에 대한 2가지 답(LLM or 본인)을 평가하는 실험결과 약 10%의 친구들(20명중 2명)이 속았다고
"
"https://news.hada.io/topic?id=10996","드디어 MS Paint가 레이어 및 투명 PNG 지원 추가 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    드디어 MS Paint가 레이어 및 투명 PNG 지원 추가

     * MS Paint(그림판)는 지난 몇년간 대대적인 재설계, 다크 모드 지원등을 해왔음
     * 드디어 Layer 생성/삭제/관리 기능과 PNG 투명도 지원이 추가됨
          + 레이어 숨기기,복제,합치기 등 가능
          + 투명 PNG 열기/저장 가능해짐
     * 얼마전 추가된 자동 배경 제거 기능 과 투명 PNG 기능이 잘 어울림
     * Windows Insiders 들 대상 Canary / Dev Channels 에 배포중 (버전 11.2308.18.0 이상)

   기사 원제목이 ""Hell freezes over"" 로 시작해서 지금 상황에 잘 어울리는듯 하여 Microsoft 블로그 말고 이 링크로 올립니다 ㅎㅎ

   Windows 블로그의 원글 Paint app update adding support for layers and transparency begins rolling out to Windows Insiders
"
