"https://news.hada.io/topic?id=2791","Linux Upskill Challenge ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Linux Upskill Challenge

   - 약 한달간 하루 1-2시간 정도 필요한 리눅스 시스템 관리자 교육과정
   - 유료였던 과정을 무료/오픈소스로 공개
   - 주로 커맨드라인으로 진행
   - AWS/디지털오션의 Free Tier를 활용
   - 레딧에서 한달단위로 진행하지만 깃헙을 통해서 편하게 수강도 가능
   - 상용과정으로 제작되었으나 원 저작자가 다발성골수종 진단을 받아서 무료로 전환한 것

   원 저자가 이렇게 전환하고 운영하게 된 상황은 아래 글에서 보실수 있습니다.
   http://snori74.blogspot.com/2020/06/succession-planning-for.html
"
"https://news.hada.io/topic?id=2801","글로벌 협업을 위한 직관적인 타임존 트래커","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        글로벌 협업을 위한 직관적인 타임존 트래커

   - 타임존이 다른 여러 팀원과 협업시 각자의 시간을 한 눈에 보여주는 트래커
   - 자신의 팀 이름으로 URL slug를 생성해서 공유 가능
   - 사용자 추가하고 이름/시간대/프로필 사진 변경 가능
"
"https://news.hada.io/topic?id=2833","노트툴 Roam, 2400억원 밸류로 110억원 투자 받아","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    노트툴 Roam, 2400억원 밸류로 110억원 투자 받아

   - 1년전에 창업, 시드 라운드 대비 25배
   - #RoamCult 로 광적인 팬들을 만들어 냄
   - 월 $15, 년 $165로 경쟁제품인 Notion/Coda 대비 비싼편
   - 11명의 직원으로 년 11억원 정도의 매출을 내서 현재 수익을 내는 중
   - Notion 이 작년에 8천억원 밸류로 120억원을 투자받고, 올해 2.4조 밸류로 540억원을 투자받은게 영향을 준 듯
   - 가장 먼저 1조 밸류에 도달했지만 IPO에 실패한 Evernote의 어두운 전망 때문에 다른 노트도구들이 주목 받는 중

   #RoamCult 로 트위터를 검색해보면 정말 많은 팁들이 공유되는데,
   이런 Cult 만들기는 요즘 스타트업들은 한번 고민해봐야할 요소
   Stripe의 개발자 Cult 만들기 https://news.hada.io/topic?id=2535

   내가 노트툴 Roam 을 사랑하는 이유와 사용법 https://news.hada.io/topic?id=1349
   제가 8달전에 위 글로 Roam 을 소개할때만 해도 그냥 이런게 있구나 수준이었는데..
   노트툴은 정말 빠르게 시장이 변해가는 것 같습니다.
"
"https://news.hada.io/topic?id=2810","Chef, Progress에 인수 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Chef, Progress에 인수

   - 30일내에 이관되고 Progress Software 패밀리의 일부로 편입 예정
   - 나스닥 상장사인 Progress 는 Kinvey, Telerik, DataRPM, WhatsUp Gold 등 다양한 분야의 솔루션을 제공하는 소프트웨어 업체.

   바로 지난주에 ""오픈소스를 비즈니스화 하는 법"" https://news.hada.io/topic?id=2750 글에서
   Chef CTO 가 Chef 자체를 트레이드 마크화 했다는 얘기를 했었는데 바로 인수 발표가 났네요.
   이렇게 했어서 인수할 만한 가치가 생기지 않았나 생각이 듭니다.
   Progress 는 특이?하게도 대부분의 주요 제품들이 모두 인수를 한 케이스 입니다.
   https://www.progress.com/products
   위에서 얘기한 Kinvey, Telerik, DataRPM 다 인수한거고, Ipswitch를 인수하면서 WhatsUp Gold, WS_FTP, MOVEit 같은 작은 도구들까지 다 제품으로 가지고 있어서 제가 보기에 좀 독특한 회사에요.
   조금 경력있는 프론트엔드 개발자는 들어보셨을 Kendo UI 는 Telerik 인수하면서 같이 가져왔는데 단종 안하고 잘 유지 하고 있어요.
   다른 회사를 인수하고 유지못해서 단종시키는 회사들이 많은데 Progress는 이런 프로젝트들의 인수후 사후관리에 도가 튼 회사가 아닐까 생각이 됩니다.
"
"https://news.hada.io/topic?id=2820","무료로 개인 프로젝트 호스팅 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           무료로 개인 프로젝트 호스팅 하기
"
"https://news.hada.io/topic?id=2759","Google People + AI Guidebook 소개 및 번역","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Google People + AI Guidebook 소개 및 번역

   (나온지 좀 되긴 했지만) Google PAIR 팀에서 공개한 People + AI 가이드북을 번역해 보았습니다.
   UX 전문가 및 제품 매니저들이 사람 중심의 AI 제품을 디자인하는데 필요한 내용들을 담고 있고, RUN이라는 가상 달리기 앱을 통해 여러 예시를 보여주고 있어 AI 기반 앱을 기획/서비스할 때 유용해 보입니다.
   챕터별 제목은 다음과 같습니다:
   1. 사용자 요구 + 성공 정의
   2. 데이터 수집 + 평가
   3. 멘탈 모델
   4. 설명가능성 + 신뢰
   5. 피드백 + 제어
   6. 에러 + 우아한 실패
   번역본 링크는 댓글을 참고해 주십시오.

   https://drive.google.com/drive/folders/…

   우와 88페이지나 되네요. 고맙습니다!

   좋은 글 번역과 공유 고맙습니다.
"
"https://news.hada.io/topic?id=2795","Aerial 2.0 - 항공 촬영 영상 스크린세이버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Aerial 2.0 - 항공 촬영 영상 스크린세이버

   - Apple TV의 스크린세이버를 맥으로 옮긴 오픈소스
   - 윈/리눅스도 별도 지원
   - 4K로 뉴욕,샌프란시스코,하와이 등을 항공촬영한 화면을 보여줌
   - 2.0에선 tvOS의 11/12/13의 비디오 포함, 외부 작가팀이 촬영한 20개의 새로운 비디오가 추가
   - 동영상은 자동/수동 다운로드 할 수 있고, 캐쉬사이즈 조정 가능
   - 인텔 / 애플실리콘 맥 둘 다 지원

   윈도우용 : https://github.com/OrangeJedi/Aerial
   리눅스용 : https://github.com/graysky2/xscreensaver-aerial/
"
"https://news.hada.io/topic?id=2799","데이터 엔지니어 로드맵","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              데이터 엔지니어 로드맵

   2020년 기준 요즘 데이터 엔지니어들이 배워야할 이론/도구/프레임워크들의 로드맵
   1. CS 기초
   2. 개발 언어
   3. 테스팅
   4. DB 기초
   5. RDB
   6. Non-RDB
   7. 데이터 웨어하우스
   8. 클러스터 컴퓨팅 기초
   9. 데이터 프로세싱
   10. 메시징
   11. 워크플로우 스케줄링
   12. 데이터파이프라인 모니터링
   13. 네트워킹
   14. Infrastructure as Code
   15. CI/CD
   16. Identity and Access Management
   17. 데이터 보안과 개인정보
   - 배워두면 좋은 것들
   18. 데이터 시각화
   19. 머신러닝 기초
   20. 머신러닝 Ops

   하...

   헛 로드맵...정독해봐야겠네요

   Frontend,Backend,DevOps 개발자를 위한 로드맵 [한국어] https://news.hada.io/topic?id=1075
   Awesome Roadmaps - 개발자 로드맵 모음 https://news.hada.io/topic?id=1490
"
"https://news.hada.io/topic?id=2826","Relativty - $200로 제작 가능한 오픈소스 VR 헤드셋","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Relativty - $200로 제작 가능한 오픈소스 VR 헤드셋

   - 두명이 15세때부터 만들기 시작했다고(현재 20살)
   - SteamVR 지원
   - 2K 해상도 120fps 지원
   - 실험적인 Body-Tracking 지원
   - Arduino 호환
   ㅤ→ Atmel SAM3X8E ARM Cortex-M3 과 MPU-6050 사용
   ㅤ→ 부품은 Aliexpress 에서 구입했다고. (Strap/Foam 은 HTC Vive 것을 사용)
   - 하드웨어/소프트웨어/펌웨어 모두 오픈소스
"
"https://news.hada.io/topic?id=2724","Flight Simulatorlight Simulator 1982/84/88/89

   - 데스크탑/모바일 웹브라우저에서 오리지널 플라이트 시뮬레이터 실행하기
   - 키보드 및 마우스/터치로 조작 가능
   - 1982/84/88/89 4개의 버전 이미지 를 로드하여 각자 실행 가능
   - C로 개발한 오픈소스로 8086 CPU/키보드/마우스/그래픽등을 에뮬레이트하고 LLVM 컴파일러로 WASM으로 컴파일

   소스코드 : https://github.com/s-macke/FSHistory
"
"https://news.hada.io/topic?id=2790","Gatus - 오픈소스 웹서비스 헬스 대쉬보드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Gatus - 오픈소스 웹서비스 헬스 대쉬보드

   - 서비스가 정상 작동중인지 체크하고, 보여주는 웹 대쉬보드
   - Go로 작성된 도커 이미지
   - Slack 으로 알림 지원, 커스텀 URL 호출가능
   - 헬스체크시 body/header 설정 가능하며, GraphQL 호출도 가능
"
"https://news.hada.io/topic?id=2760","리눅스 커널 개발 시작하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             리눅스 커널 개발 시작하기

   오라클의 리눅스 커널 개발자 Vegard Nossum가 쓴 리눅스 커널 개발 프로세스에 대한 글
   커널을 개발하기 전에 필요한 선행 지식, 커널에 관한 자료들, 커널을 처음 개발할때 시작하기 좋은 곳, 메일링 패치 보내는 방법 등을 정리
"
"https://news.hada.io/topic?id=2805","Design Systems for Figma","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Design Systems for Figma

   - Apple, Audi, Uber, Slack, Atlassian, Airtable, Microsoft, HP, Google, GitHub 등 해외 유명 회사들의 디자인 시스템 컬렉션
   - Figma 에서 바로 사용할 수 있도록 다운로드 가능한 .fig 파일로 제공

   디자인 가이드라인 / 디자인 시스템은 왜 필요한가 https://news.hada.io/topic?id=2552
   FAST - MS가 만든 현대적인 웹을 위한 인터페이스 시스템 https://news.hada.io/topic?id=2614
"
"https://news.hada.io/topic?id=2755","애플, 앱 심사 프로세스 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           애플, 앱 심사 프로세스 업데이트

   - 기 등록된 앱의 경우 법적문제를 제외하고는 지침위반으로 버그수정 업데이트가 지연되지 않음
   - 다음 제출시에 가이드라인 위반에 대한 의견 제시 가능
   - 애플쪽에 가이드라인 변경 제안도 가능
"
"https://news.hada.io/topic?id=2796","신규 서비스 배포 전에 실험과 개선을 반복한 이야기  - DB 성능개선을 중심으로","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              신규 서비스 배포 전에 실험과 개선을 반복한 이야기 - DB 성능개선을 중심으로

   새벽배송으로 유명한 신선식재료 판매서비스인 마켓컬리를 운영하는 컬리의 개발 블로그에 새로 개발한 재고관리시스템의 성능을 측정하고 개선하기를 반복한 내용에 관한 글이 올라왔습니다. (한국어) 과거 2주간의 초당 요청량 피크치와 예정된 사업 확장 등을 고려하여 구체적인 성능 목표치를 설정하고, 이를 달성하기 위해 병목이 발생하는 데이터베이스 쪽을 반복적으로 개선한 끝에 성능 목표를 초과 달성하여 서비스를 배포한 경험이 담겨 있습니다.
"
"https://news.hada.io/topic?id=2728","세계에서 제일 빠른 JSON 파서 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         세계에서 제일 빠른 JSON 파서 만들기

   JSON 파서 중에서 특출나게 빠른 것으로는 simdjson( https://news.hada.io/topic?id=2632 )이 있지만, 혹시 특정 사용례에 한해서 이것보다 더 빠른 파싱을 할 수는 없을까요? JSON으로 수신되는 암호화폐 호가 데이터를 simdjson보다 더 빠르게 파싱하는 C++ 코드를 작성한 경험에 관한 포스팅을 소개합니다. (한국어) 이 코드가 simdjson보다 더 빠를 수 있는 까닭은 사용례가 특정 분야를 다루는 작성자의 코드에 한정되어 있기 때문입니다. 결국 일반화된 것보다 특정 분야에 특화된 것이 더 공격적인 최적화가 가능함을 다시 한번 알 수 있군요.

   와 훌륭합니다. 재미도 있구요. 전 이 블로그를 구독! 하려고 했으나 RSS가 없어서 실패 ㅠ

   위 블로그에 있는 https://tanstaafl.dev/20200816-market-data-parser.html 이 글도 흥미롭더군요. 그런데 아직 글이 이 2개밖에 없어서...

   참고 - simdjson 소개글:
   https://news.hada.io/topic?id=2632
"
"https://news.hada.io/topic?id=2775","시니어 개발자처럼 VSCode 사용하기 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       시니어 개발자처럼 VSCode 사용하기 [번역]

   VSCode 기능으로 생산성 높이기
   - 멀티 커서
   - Symbol 이름 일괄 바꾸기
   - 행 단위 위아래 이동
   - 사용자 정의 스니펫 설정 : 반복코드 자동생성
   ㅤ→ 설정 파일 생성
   ㅤ→ 스코프 설정
   ㅤ→ 커서 이동

   글에서는 언급되지 않았지만 HTML 스니핏은 VSCode Emmet에 내장되어 있어 느낌표 치고 탭 키를 눌러도 쓸 수 있습니다

   같은 분이 번역하신 ""시니어 프론트엔드 개발자처럼 크롬 개발자도구 사용하기""
   https://junwoo45.github.io/2020-07-28-chrome_devtools/
   내가 시니어 개발자에게 1년간 배운 것들 https://news.hada.io/topic?id=414
   시니어 엔지니어로 넘어가기 위한 기술: 코드 읽기 https://news.hada.io/topic?id=2390
   Senior 소프트웨어 엔지니어의 체크리스트 https://news.hada.io/topic?id=500
"
"https://news.hada.io/topic?id=2788","모든 길은 Rome으로 통할까? [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         모든 길은 Rome으로 통할까? [번역]

   Rome이 무엇인지, 자바스크립트 생태계에 어떻게 들어 맞는지와 그것에 대한 생각을 적은 글
   - Rome은 무엇인가요?
   - 더 나은 성능
   - 단 하나의 설정 파일
   - 의존이 적다
   - 초보자들에게 친숙하다
   - 모든 길은 Rome으로 통할까? 필자의 생각
   ㅤ→ 단기적으로는 “NO”
   ㅤ→ 장기적으로는 “YES”

   똥 싸고 튄 놈이 그 똥은 난 모르겠고,
   여기 더 멋진 똥이 있다니...

   Rome - 실험적인 자바스크립트 툴체인 https://news.hada.io/topic?id=1609
   Rome - JavaScript / TypeScript Linter 베타 릴리즈 https://news.hada.io/topic?id=2621
"
"https://news.hada.io/topic?id=2784","iOS14 App Clip 용량 최적화 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        iOS14 App Clip 용량 최적화 하기

   AppClip 크기는 10MB로 제한되어 있어서 이를 위해서 한 작업들
   - gzip → LZMA로 교체
   - 프리뷰 이미지는 제거하고 동적으로 생성
   - App Thinning 한 IPA의 사이즈는 적용되지 않음. 실제 .app 사이즈가 10MB 제한
   - 자체 프레임워크를 더 작은 사이즈로 분리해서 필요한 것만 담도록

   글 마지막에 링크 된 Test and Invoke App Clip Cards with NFC tags 글도 좋네요
   https://kushagra.me/testing-app-clip-cards-with-nfc-tags/
   저는 iOS14 기능중에 가장 기대하는 것중에 하나가 App Clip 입니다. 재미난 사례들이 많이 나올거 같아요.
"
"https://news.hada.io/topic?id=2754","Vimac - 키보드로만 macOS 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Vimac - 키보드로만 macOS 사용하기

   - 크롬브라우저를 키보드로만 vi처럼 사용할수 있게 하는 Vimium 확장을 macOS에서 똑같이 구현
   ㅤ→ Ctrl+Space 를 누르면 모든 컨트롤에 단축키 힌트가 보이고 키를 눌러서 선택(클릭) 가능
   ㅤ→ Shift+Hint 우클릭
   ㅤ→ CMD+Hint 더블클릭
   ㅤ→ Ctrl+S HJKL 로 스크롤, D/U로 페이지 업다운

   윈도우용은 이런 거 없으려나요 ^^;

   https://github.com/zsims/hunt-and-peck
   윈도우즈에서 비슷하게 사용할수는 있는데 맘에는 안드는거 같아요.. ^^;

   https://addons.mozilla.org/en-US/firefox/addon/vim-vixen/
   혹시 파폭 쓰시는 분이면 Vim Vixen 써보세요.
   Vimium보다 마음에 들더라고요.

   써보고 있는데 예전에 나온 비슷한 도구들보다 훨씬 좋은 느낌입니다. 오래 쓰고 싶은 마음이 드네요.

   와우 저 이런거 넘 좋아해요 ㅎㅎㅎ

   Vimium for Chrome https://chrome.google.com/webstore/detail/…
   Vimium 단축키 설명은 https://github.com/philc/vimium/blob/master/README.md
"
"https://news.hada.io/topic?id=2831","Joinup Licensing Assistant(JLA) ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Joinup Licensing Assistant(JLA)

   EU가 만든 오픈소스 라이선스 선택 및 비교 도구 (총 51종)
   6개 카테고리로 Term을 분류하고 세부 항목중 원하는 것들만 선택하여 필터링 가능
   - Can / Must / Cannot / Compatible / Law / Support
   예) Can
   → Use/reproduce
   → Distribute
   → Modify/merge
   → Sublicense
   → Commercial use
   → Use patents
   → Place warranty
   Must
   → Incl. Copyright
   → Royalty free
   → State changes
   → Disclose source
   → Copyleft/Share a.
   → Lesser copyleft
   → SaaS/network
   → Include licence
   → Rename modifs.
   Cannot
   → Hold liable
   → Use trademark
   → Commerce
   → Modify
   → Ethical clauses
   → Pub sector only
   → Sublicence
"
"https://news.hada.io/topic?id=2807","codeimg - 소스코드를 SNS공개용으로 캡쳐해주는 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   codeimg - 소스코드를 SNS공개용으로 캡쳐해주는 도구

   - 페이스북(1200x630), 트위터(506x253), 인스타그램(1080x1080) 등 적절한 사이즈로 코드를 캡쳐
   - 수십종의 에디터 테마 제공
   - 자동 구문강조(수동 선택가능)
   - 라인넘버링 지원
   - 각 상황별 사이즈에 맞는 여러 사이즈 프리셋 지원
   - 맥/윈도우 OS 테두리 선택 가능 : 최소/최대 버튼, 타이틀, 그림자, 테두리 곡선등 설정

   이런 도구들이 예쁘긴 한데, 결국 이미지로 전달되는 것이라 코드를 복사하거나 할 수 없어서 별로더라구요.
   짧은 코드면 크게 상관없지만, 긴 코드는 Gist로 공유하는 것이 좋다고 생각해요.

   Snippet Shot - 코드 이미지 캡쳐 도구 https://news.hada.io/topic?id=2596
   둘이 비슷한데, Snippet Shot은 발표자료에 넣을 때 적절하고
   codeimg 는 페북/트위터 등에 공유 전용으로 쓰면 될 듯 하네요.
"
"https://news.hada.io/topic?id=2785","Nissan.com (자동차 회사 웹사이트 아님)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Nissan.com (자동차 회사 웹사이트 아님)

   - 1991년에 Uzi Nissan 이 만든 컴퓨터 판매 회사 홈페이지
   - Nissan 자동차가 손해배상 120억원을 요구하며 도메인 소송을 했으나 패소
   ㅤ→ Uzi가 이기긴 했으나 해당 웹사이트에 상업적 컨텐츠 나 광고를 올리는걸 금지 당함
   ㅤ→ 이에 다시 소송해서 Uzi가 승소
   ㅤ→ 닛산 자동차가 변호사 비용을 청구하는 소송했으나 다시 패소
   - 도메인 소유자인 Uzi Nissan 이 코로나19로 사망했다고

   관련 기사 https://thedrive.com/news/35179/…
   닛산USA 는 https://www.nissanusa.com/ 에 정착해서 해당 도메인을 구입할 의사는 없다고 하네요.
   테슬라도 엘런머스크가 2016년에 tesla.com 을 $11M(130억원)에 구입한바 있죠.
   https://onlinedomain.com/2018/12/…
"
"https://news.hada.io/topic?id=2774","Minglr - 컨퍼런스후 참가자 끼리의 대화를 온라인으로","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Minglr - 컨퍼런스후 참가자 끼리의 대화를 온라인으로

   - Mingling (여기저기 돌아다니면서 대화하는 것) 을 Jitsi를 이용해서 온라인으로 구현한 오픈소스
   - 참여자 리스트를 보고 선택해서 대화 가능
   ㅤ→ 대화하고 싶다고 선택하면 나와 대화하고 싶은 사람들 리스트에 보임. 거기서 클릭하면 대화 시작
   - 자기 이름/소속 소개 및 관심 분야 기록 가능

   코로나로 온라인 컨퍼런스가 많아지지만, 오프라인 참석할 때와 같은 밍글링 경험은 주기 힘든데 그걸 구현하려고 시도해본거네요.
   사람이 많으면 좀 문제긴 하겠지만 괜찮은 것 같습니다.
"
"https://news.hada.io/topic?id=2780","Apple, iOS14의 프라이버시 관련 기능을 내년으로 연기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Apple, iOS14의 프라이버시 관련 기능을 내년으로 연기

   - 광고등에 쓰이는 3rd파티 트래커등에 대해서 사용자 승인을 받도록 하는 기능
   - 개발자들에게 준비할 시간을 주기 위해 내년으로 연기
   - 이에 대해서 페이스북이 지난주에 비난한 바 있음
   - 애플은 블리자드,슈퍼셀 등으로부터 피드백을 받은 것으로 알려져

   iOS14 : IDFA 시대가 저물어 갑니다 https://news.hada.io/topic?id=2337
   IDFA가 없어진 이후의 모바일 마케팅 가이드 https://news.hada.io/topic?id=2363
   페이스북, iOS14 부터 IDFA 수집하지 않을 것 https://news.hada.io/topic?id=2733
"
"https://news.hada.io/topic?id=2767","다가오는 미국 대선에서 가짜뉴스를 막기 위한 MS의 노력","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    다가오는 미국 대선에서 가짜뉴스를 막기 위한 MS의 노력

   가짜뉴스는 전세계적으로 심각한 문제입니다. 대통령 선거와 같이 정치적으로 민감한 사안이나 혹은 코로나19와 같이 생명과 건강에 큰 문제를 야기할 수도 있는 중요한 사안에도 가짜뉴스는 어김없이 따라붙습니다. 또한 DeepFake와 같은 영상·음성 합성 기술의 발달은 갈수록 가짜뉴스를 분간하기 어렵게 만들고 있습니다.
   마이크로소프트는 다가오는 미국 대선에서 이런 문제가 더욱 기승을 부리리라 판단하고, 이를 줄이기 위한 노력을 다음과 같이 발표하였습니다. (영어)
   * MS는 사진이나 동영상에 조작이 들어가지 않았는지 탐지하는 Microsoft Video Authenticator를 개발하였습니다. 영상매체의 메타데이터에 인증서로 서명하는 방법과 이 도구를 결합하면, 사람들이 브라우저 확장 등을 통해 이 영상을 찍은 주체는 누구이고 조작된 바 없는 원본 그대로라는 점을 확신할 수 있을 것입니다. MS는 Azure에 이러한 인증서 서명을 위한 도구를 추가하였습니다.
   * MS는 미국 샌프란시스코에 있는 AI 재단과 협력하여, AI 재단의 Reality Defender 2020( https://rd2020.org/ ) 이니셔티브를 통해 Microsoft Video Authenticator를 최초로 사용할 수 있게 할 것입니다. 이 도구를 사용하려는 언론은 먼저 RD2020에 문의해야 합니다.
   * 또한 MS는 올해 초 BBC에서 시작하고 뉴욕타임스 등 다른 언론들이 참여한 가짜뉴스 방지 프로젝트인 Project Origin과도 파트너십을 맺었습니다. Project Origin은 콘텐츠에 조작을 시도하면 화질이 저하되는 특수한 워터마크를 각 사진에 삽입하고, 이를 사용자가 확인할 수 있게끔 하는 방식을 사용합니다. 이 검증 시스템은 오는 미국 대선 전에 배포될 것입니다.
   * MS는 언론(USA Today) 및 학계(워싱턴대학교), 다른 업체(Sensity) 등과 헙력하여 미국 유권자들을 대상으로 한 퀴즈 사이트( https://aka.ms/spotdeepfakes )를 열었습니다. 이 퀴즈의 목적은 딥페이크 문제에 관한 미디어 리터러시를 증진하는 것입니다.
   * MS는 뉴스 및 SNS 링크에 믿을 만한지의 여부를 딱지 붙여서 평가하는 브라우저 확장 서비스인 NewsGuard( https://www.newsguardtech.com/ )의 기능 확장에도 기여하였습니다.
   * MS는 각국 정부, 기업, NGO 등이 ‘사이버 공간의 신뢰와 안정을 위한 파리의 요청’(The Paris Call for Trust and Stability in Cyberspace, https://pariscall.international/ )에 참여할 것을 권장합니다. ‘파리의 요청’은 2018년 프랑스의 에마뉘엘 마크롱 대통령이 제안한 사이버 공간에 관한 국제 협약으로, 한국에서는 대한민국 정부, 삼성전자, 네이버, KT, 오픈넷 등이 지지 서명을 하였습니다.
"
"https://news.hada.io/topic?id=2794","무명 게임을 바이럴하기 : Spellbreak의 성장 교훈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    무명 게임을 바이럴하기 : Spellbreak의 성장 교훈

   새로운 IP의 무명 게임을 바이럴하고 Imgur,유튜브,Discord를 통해서 60만명의 프리알파 사용자를 모은 방법
   가장 중요한건 ""아무도 당신의 게임에 관심없다""는 것. 사람들이 관심을 가지게 만들어야 함
   아무리 빨라도 이른게 아니고, 초기부터 플레이어들의 관심을 끌어야 함
   1. Focus on high upside channels : 잠재적으로 성장가능한 채널에 집중
   ㅤ→ 아무런 기반 없이도 입소문을 낼수 있는 Imgur, 9gag, Reddit 같은 채널(트위터/페북은 팔로워가 필요하므로)
   ㅤ→ Imgur에 개발 블로그내용을 올려서 20만뷰를 수천명의 이메일 가입을 유도. 이때 심지어 게임이름도 정해지지 않은 상태였음
   ㅤ→ 몇일전에도 Imgur 에 올린 GIF 파일들이 수십만뷰 이상을 끌어냈음.
   2. Post authenticity, not advertisements : 광고 말고 진짜를 올릴 것
   ㅤ→ 올리는 모든 것은 진실된 것(Authentic)여야 함
   ㅤ→ Imgmur Spellbreak의 개발 블로그로서 글을 올렸고, 한번도 ""게임을 다운받거나 가입하세요"" 같은 문구를 사용하지 않음.
   ㅤ→ 대신, ""오! 이 게임 어떻게 받나요?"" 라는 댓글이 달리길 기다려서 그때 응답.
   ㅤ→ 플레이어들은 광고인지를 바로 알아챔.
   ㅤ→ 그걸 알게 하려면, 당신이 게이머이자 사람들이 당신의 게임을 봐주길 원하기 때문에 올리는 것이어야 함
   3. Share quality content consistently : 좋은 콘텐츠를 계속 공유할 것
   ㅤ→ 지속적으로 하는 것이 중요
   ㅤ→ 사용자들이 정기적으로 콘텐츠 보기를 기대하게 되고
   ㅤ→ 더 중요한 건 개발팀도 이를 준비하면서 근육을 만들게 됨(Build muscle)
   ㅤ→ 단, 좋은 콘텐츠여야 함
   ㅤ→ 좋지 않은 콘텐츠를 지속적으로 유지하는게 가장 나쁨. 제대로 작동하지 않는다면 채널을, 콘텐츠를 재평가 할 것
   4. It’s all about the GIF game : GIF가 가장 중요
   ㅤ→ 요즘 게임은 애니메이티드 GIF 와 짧은 비디오가 진짜 중요함
   ㅤ→ 액션 스킬샷 뿐만 아니라 감동적이거나 귀엽고 재미난 것들이어도 됨
   ㅤ→ 사람들이 공유하는건 멋진 게임, 멋진 보스 영상이 아님
   ㅤ→ 당신의 게임이 애니GIF 에서 어떻게 보이는지 팀내에서 대화하고 잘 보이도록 해야함.
   5. Enable your evangelists : 에반젤리스트를 두기
   ㅤ→ Imgur 등을 통해서 사전알파에 등록한 사용자들 대상으로 Mailchimp 를 사용
   ㅤ→ (프리알파)게임키를 받기위해 보통 1~2주를 기다려야 하지만, 초대로 들어오면 키를 바로 제공
   ㅤ→ 이를 통해서, 사람들이 다른 사람들을 초대할수 있게 만듬. 2018년 여름엔 60~70% 이상의 사용자가 초대로 가입
   ㅤ→ 몇명은 슈퍼추천자 여서 ""500명이 있는 내 디스코드 서버에 올렸어요"" ""레딧에 올렸음"" 같은 말을 했지만,
   ㅤㅤ그들에게 ""X명을 추천하시면 런칭때 멋진 의상아이템을 드릴께요"" 같은 보상을 주지 못했던게 아쉬움.
   6. Focus on a community nexus : 커뮤니티 거점에 집중
   ㅤ→ 이메일 만으로는 커뮤니티를 주도할수 없기 때문에 Discord 에 집중
   ㅤ→ 를 신청하면 1-2주 걸린다고 메일에 적지만, ""Discord에 가입하면 내일 바로 키를 받을수 있습니다""
   ㅤ→ Discord 는 플레이어와 직접 소통이 가능하기 때문에 어떤 소셜채널이나 이메일보다 유용
   7. Control the flow of information : 정보의 흐름을 제어
   ㅤ→ 법적인 구속력이 없지만 NDA에 동의하게하고, Discord외부에 게임 정보를 스트리밍/공유하지 못하게 함
   ㅤ→ 이걸 어기면 Ban하겠다고 했지만, 거의 아무도 공개하지 않았고 혹시나 스트리머가 해도 커뮤니티가 알아서 규제
   ㅤ→ 이 정보들을 통제하는 것이 중요. 이래야 공개하는 콘텐츠가 더 가치가 있게 됨.
   8. Create a cool kid club : 쿨 키드 클럽 만들기
   ㅤ→ Discord 안에 있어야 하는 이유를 만들기 시작
   ㅤ→ 자신의 키를 Discord 봇에 보내면 인증을 통해서 Discord 안의 Role을 부여하고 몇개의 테스터 전용 비공개 채널에 참여토록 함
   ㅤ→ 이렇게 해서 테스터들의 쿨 키드 클럽을 만들고 그들이 비밀 정보를 얻는 것 처럼 느끼게 함
   ㅤ→ 실제로 디스코드 서버의 1/3만이 테스터였고, 이들이 다른 사람에게 게임이 어떤지 키는 언제 오는지 등을 대답해 주기 시작.
   ㅤ→ Discord는 모든 것을 게시하는 첫 번째 장소. 작업 중인 개발자가 그주의 작업 비디오를 올리거나 하는 등.
   9. Force social connections : 소셜 연결을 강제하기
   ㅤ→ Discord 안의 사용자들이 서로 연결되는 것을 강제
   ㅤ→ Spellbreak 는 배틀 로얄게임 이기 때문에, 테스트할 플레이어들이 필요했음.
   ㅤ→ 정기적으로 플레이테스트를 열고 디스코드내에서 보이스챗을 하도록 함.
   ㅤ→ 이렇게 연결되어 친구가 된 사람들이 커뮤니티의 기반이 됨.
   ㅤ→ 또한, 개발자가 플레이어와 진정으로 소통하고 피드백을 받을수 있는 기회를 제공
   10. Develop a community content generation engine : 콘텐츠 생성 엔진 개발하기
   ㅤ→ NDA 하에선 콘텐츠를 공유할 수 없었지만 다들 그걸 원했음
   ㅤ→ Discord 내부에서 하이라이트 채널을 만들고, 외부에서는 볼수 없지만 내부에서 공유해서 볼수 있도록 함
   ㅤ→ 좋은 하이라이트에 대해서는 피드백을 서로 주도록 하고, 최고의 하이라이트 영상을 모아서 유튜브에 게시
   ㅤ→ 저 영상에 포함되어 외부에 공개되는 것만으로 업로더들은 인센티브를 받게 됨
   ㅤ→ 또한 이때문에 클로즈드 알파가 끝나고 NDA를 해제했을때 수많은 훌륭한 비디오가 쏟아질 수 있었음.
   11. Establish a content sharing flywheel : 콘텐츠 공유 플라이휠(회전에너지를 저장해두는 장치) 만들기
   ㅤ→ Discord에 항상 모든걸 먼저 올린다고 했기때문에 공개할 것도 먼저 공유한다음 올림
   ㅤ→ 2018년 10월에 유튜브 채널을 시작할 때 90초짜리 게임플레이 알파 동영상을 만들어서 채널에 먼저 공개
   ㅤㅤ""Custom URL을 만들도록 팔로우 해주세요""
   ㅤ→ 이 동영상이 유튜브에서 바이럴 되고, 디스코드 서버의 인원은 4일만에 두배가 됨(3만 → 6만)
   ㅤ→ 단 하나의 콘텐츠로 이렇게 된 데에는, 항상 먼저 확인 할수 있는 베네핏을 줬던 이 커뮤니티의 힘이 중요
   12. Use memes as marketing : 밈을 마케팅으로 사용하기
   ㅤ→ 하이라이트 채널과 같은 방식으로 Meme 채널을 생성
   ㅤ→ 밈 들이 자체 채널, 사용자들의 디스코드 서버, 트위터 등을 통해서 공유
   ㅤ→ 이 것들이 Spellbreak 키를 가지는 것이 얼마나 가치있는지를 보여주는 마케팅이 됨
   ㅤ→ 라이브 운영 게임에서는 밈을 만들수 있도록 하는 것이 중요. 이것이 친구들간 소통의 매개체가 됨
   ㅤ→ 이런 밈 공유를 통해서 커뮤니티를 형성했기 때문에 계속 무료플레이어 들을 유치할수 있게 됨
   * Spellbreak 는 마법으로 싸우는 배틀로얄 게임으로 PC용으로 프리알파를 시작해서, 2020년 9/3일에 Xbox,PS4,스위치용 크로스플랫폼 멀티플레이어 버전으로 공개 되었음. 무료 + 앱내 결제

   발표자료 링크 : https://docs.google.com/presentation/d/…

   발표자도 강조하지만 모든 게임은 다르고 시장도 다르고, 팀도 다릅니다. 이중에서 중요한 것만 골라서 뽑아내세요.
   해외를 대상으로 하는 게임 개발자분들에게 도움될 것 같습니다.
   요약글을 한번 보시고 30분짜리 발표 동영상을 보시면 이해가 쉬울거에요.
   게임 화면과 실제 Imgur/Discord 화면 으로 슬라이드를 구성해놔서 보는 재미가 있습니다.
   원문에는 발표 내용후에 발표자 Seth와 a16z 간에 대화 내용도 있습니다. 그것도 참고하세요.
   Spellbreak 공식 사이트 : https://playspellbreak.com/en
   Spellbreak 가 Imgur에 올린 글 들은 https://imgur.com/user/playspellbreak 에서 보실 수 있습니다.

   발표 중간에 이거 처음부터 리드한 사람이 현재 글로벌 마케팅 총괄이라고 해서 찾아보니
   Gordon Ryan https://www.linkedin.com/in/gordonryan/
   이분인데, 특이?하게도 게임회사 경력이 없네요.
   보스턴대학교에서 마케팅을 담당하다가 조인한 후, 커뮤니티 디렉터로 시작해서 올해 글로벌 마케팅 총괄로 승진한 듯

   전 이 글 적고나서 흥미가 생겨서 엑스박스에서 다운받아서 해봤는데 꽤 재미나게 했습니다.
   - 한글화 잘 되어 있습니다.
   - 최근작 젤다가 생각나는 판타지풍 그래픽이라 배틀그라운드 보다 더 가벼운 느낌
   - 총이 아니고 마법이라 1대1이나 다대다로 싸우는게 더 액션게임 같습니다.
   - 범위마법들이 있어서 다대다 전투도 재미나더군요.
   - 첫판에서 7킬하고 1등해서 기분이 좋았습니다...
"
"https://news.hada.io/topic?id=2770","Bootstrap Icons v1.0.0 정식 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Bootstrap Icons v1.0.0 정식 공개

   - Bootstrap과 함께 또는 별도로 사용가능한 아이콘 1100+개
   - SVG로 되어있어서 CSS로 스타일링 가능
   - MIT 라이센스
   - Figma용도 별도로 배포
   - 1.1.0 에서 200+개 추가하고 계속 유지보수 예정

   다른 SVG 아이콘들
   Teenyicons - 15x15 초소형 무료 아이콘들 587개 https://news.hada.io/topic?id=2633
   Tabler icons : 24x24 고품질 무료 SVG 아이콘 550개 https://news.hada.io/topic?id=2427
   Heroicons - Tailwind CSS 개발자들이 만든 아이콘 모음 226개 https://news.hada.io/topic?id=2731
"
"https://news.hada.io/topic?id=2816","GeekNews 댓글 커스텀 스타일","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          GeekNews 댓글 커스텀 스타일

   - 좌측에 댓글과 대댓글 구분을 위한 선을 추가
   - 커스텀 스타일 확장프로그램(Stylebot 등)으로 적용 가능

   오 감사합니다.

   앗 좋네요. 고맙습니다.

   헛 좋은데요!
   괜찮으시다면 참고해서 개선해 보겠습니다 ^^

   넹 감사합니다 ㅎㅎ

   아래와 같이 댓글이 많이 달린 글을 볼 때 유용합니다.
   긱뉴스 팟캐스트 시작 - https://news.hada.io/topic?id=2705
"
"https://news.hada.io/topic?id=2740","Ultralight - 작고 빠른 크로스플랫폼 HTML 렌더링 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Ultralight - 작고 빠른 크로스플랫폼 HTML 렌더링 엔진

   - Electron을 대체하는 데스크탑앱 개발용 또는 Game용 HTML 렌더러로 사용 가능
   - WebKit기반 HTML5 & JS 엔진
   - Electron 대비 1/5 크기의 실행파일, 1/8 정도의 메모리만 사용
   - C/C++ API 제공. C#,Rust,Java,Go 바인딩은 커뮤니티가 제작
   - WebKit 의 WebCore/JavaScriptCore를 가져오고 렌더러는 자체 작성
   - 윈/맥/리눅스/ARM64(예정)를 지원하는 AppCore는 윈도우 생성,이벤트 루프,네이티브 그래픽 (D3D,Metal,OpenGL) 지원

   요새 일렉트론 앱이 늘면서 메모리가 후덜덜 한데요 ㅋㅋㅋ
   조건부 무료 사용이라 일렉트론만큼 널리 퍼지지 않겠네요 ㅠ.ㅠ
"
"https://news.hada.io/topic?id=2800","스스로를 디자인한 게임들 [유튜브,한글 자막]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       스스로를 디자인한 게임들 [유튜브,한글 자막]

   ""Follow the fun 재미를 따르라""
   기존에 생각한 아이디어나 계획에 매이지 않고, 개발 되는 게임을 보고 기획이 나아가야할 방향을 찾는 방식
   단순히 게임 뿐만 아니라 모든 서비스를 기획할 때도 적용이 되는 이야기인 듯
   ""Fail Faster, Follow the Fun""
   게임 디자인의 방법론 중 하나인 위 말은 시스템쇼크의 디자이너였던 마크 르블랑이 했던 말 ( 4Fs of Game Design )
   - 떠오른 생각을 빠르게 구체화해 무엇이 효과적이고, 그렇지 않은지를 파악하는 방법
   - (빠르게 실패하면) 들인 시간이 많지 않기 때문에 실패해도 상관이 없음
   - 하지만 이 '실패'는 다음번 시도에 대한 매우 확실한 방향성을 제시해 줄 수 있음
   - 이 과정을 더 빠르게 하는 방법?
   ㅤ→ 게임 잼 : 해커톤 처럼 짧은 시간에 뭔가 게임을 만들어 내는 것
   ㅤ→ 게임 메이커, Godot 엔진, 레고, Dreams(PS4) 같은 걸 활용
   ㅤ→ 절대 바꾸지 않을 요소를 확정하고 개발하는 것(방향성과 집중)
   ""게임에 대한 완벽한 아이디어가 떠오를 때 까지 기다리지 마세요""
   ""아이디어를 떠올리고, 시작하고 만들고, 시험하고, 버그를 만든 것들이 지금의 훌륭한 게임들을 만들었음.
   ㅤ빠르게, 또 많이 실패하면서 아이디어의 조각을 하나로 합쳐 냈음""

   영상내에서도 인디게임에 적합하다는 얘기를 하는데
   스타트업이나 1인 서비스 개발자들에게도 잘 어울리는 얘기인듯 합니다.
   영상 자체는 게임영상으로 되어있어서 보기에 재미납니다. 12분 정도라 가볍게 보실수 있어요.
"
"https://news.hada.io/topic?id=2725","머신러닝으로 최적의 땅콩버터+바나나 샌드위치 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      머신러닝으로 최적의 땅콩버터+바나나 샌드위치 만들기

   식빵조각위에 바나나 슬라이스 커버리지를 최대화 하는 방법(파이썬 코드 제공)
   - 딥러닝으로 사진에서 빵과 바나나를 식별
   - 바나나의 비선형 곡선을 계산
   - 극좌표로 변환한후 커브를 따라 타원형으로 슬라이스한 폴리곤을 만들고
   - 타원 폴리곤들을 식빵안에 2D Nesting 알고리즘으로 배열
   - 빵과 바나나 식별은 Mask-RCNN torchvision 모델을 사용
   ㅤ→ 이 모델을 훈련하는데 사용한 COCO 데이터셋에는 이미 banana 와 sandwich 카테고리가 있음
   - scikit-image 라이브러리를 사용하여 바나나를 분할할 곡선을 계산
   - nest2D로 잘라진 조각을 중첩

   원문 전체에 geek flavor를 고르게 발라놨네요. 재미있게 읽었습니다.

   그게 참 어려운거죠. 지식이 있다고 잉여롭느냐 잉여롭다고 행동하느냐 행동한다고 해결하느냐 단계가 이어져 있긴하니까요

   처음에 이 글을 보고 그냥 일반적인 Geek스러운 글이구나 하고 넘겼는데, HN의 한 댓글때문에 이 글을 소개합니다.
   https://news.ycombinator.com/item?id=24275282
   ""저는 응급의사고, 정식으로 소프트웨어 교육은 받은적은 없어요. 지난 3달동안 저는 초음파 비디오에서 심장벽을 분할한 다음 움직이지 않는 영역을 식별하는걸 만들려고 노력했습니다.( 심장마비의 초기증세 입니다.)
   이 분의 프로젝트와 저의 프로젝트 사이에는 많은 유사점이 있습니다. 이 분 지식이 있었다면 지금쯤 내 문제를 해결하고 심장마비를 조기에 발견할수 있는 새로운 방법을 가지게 되었을거라고 생각합니다.""
   잉여롭게 재미로 한거지만 어딘가는 쓰일 때가 있는거죠.
   제가 이럴때 쓰는 말이 있습니다. ""잉여는 잉여라고 판단될 때까지는 잉여가 아니다""
"
"https://news.hada.io/topic?id=2737","권오흠 교수의 알고리즘 강의 동영상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          권오흠 교수의 알고리즘 강의 동영상

   부경대학교 IT융합응용공학과 알고리즘연구실의 권오흠 교수님이 업로드한 알고리즘 강의 동영상 재생목록입니다. (한국어) 이 강의에서는 재귀, 순열, 정렬, 트리, 해싱, 그래프, 압축, 동적계획법에 이르기까지 다양한 알고리즘을 다루고 있습니다. 예시 코드에 사용하는 언어는 일부 보충강의 동영상을 제외하고는 Java입니다.
   그리고 알고리즘이 나왔으면 빠질 수 없는 것이 자료구조죠. 함께 업로드된 자료구조 강의 동영상 목록도 있습니다. 다만 이 강의에서는 위 강의와 달리 예시에 C언어를 사용하고 있습니다.
   https://youtube.com/playlist/?list=PL52K_8WQO5oXIATx2vcTvqwxXxoGxxsIz

   교수님을 여기서 보다니 ...
   졸업한지 10년이 넘었는데 여기서보니 반갑네요^^
"
"https://news.hada.io/topic?id=2828","Playwright 1.4.0 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Playwright 1.4.0 공개

   - 쓰기 편한 CLI 추가
   ㅤ→ 사용자 인터랙션 녹화후 스크립트로 생성
   ㅤ→ 기기 에뮬레이트 및 개발자 콘솔로 인스펙션
   ㅤ→ 스크린샷 및 PDF생성
   - 화면 녹화 기능(실험적)
   ㅤ→ 브라우저의 모든 페이지/팝업 및 스크립트 동작화면을 비디오로 저장
   - 새로운 Client/Server Wire 프로토콜
   ㅤ→ 지난 릴리즈에 내부 프로토콜로 공개되어 Python,.NET,Go 등이 이걸 이용해서 개발
   ㅤ→ 이제 Node 버전도 이를 도입해서 적용

   microsoft/playwright 릴리즈 - 원격 브라우저 컨트롤 https://news.hada.io/topic?id=1374
   QA Wolf- 브라우저 동작을 Playwright/Jest 기반 코드로 자동 생성 https://news.hada.io/topic?id=2689
"
"https://news.hada.io/topic?id=2781","왜 CSS ::before 는 input과 img에는 동작하지 않을까","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 왜 CSS ::before 는 input과 img에는 동작하지 않을까

   - ::before 와 ::after 는 replaced elements에는 동작 하지 않음
   ㅤ→ audio, canvas, embed, iframe, img, input, object, video
   - 이 개체들은 HTML스펙상 브라우저에 의해 ::before, ::after를 다 포함해서 대체되기 때문에 동작하지 않는 것
   ㅤ→ img 는 상황에 따라 동작하기도 함 (FF/크롬에서 이미지 로딩 실패시 )
   ㅤ→ input 은 종류에 따라 동작하기도 함 (크롬/사파리 는 체크박스와 라디오에는 동작 )
"
"https://news.hada.io/topic?id=2824","Spotify, 노래방 모드를 개발중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Spotify, 노래방 모드를 개발중

   - 앱내에서 원곡의 보컬 소리만 조정해서 줄이고 가사에 맞춰 따라 부르는게 가능할 것
   - 리버스 엔지니어링을 통해 알아냄
   ㅤ→ 이 엔지니어는 이전에 Spotify 가 Video Podcast를 시작할 것도 리버스로 알아낸 사람

   비슷하게 프랑스의 음악 스트리밍 회사 Deezer 가 Spleeter 라는 오픈소스를 공개한게 있습니다.
   - spleeter - 노래에서 보컬/드럼/베이스/피아노를 분리 추출해주는 오픈소스 https://news.hada.io/topic?id=849
   이걸 이용해서 유튜브 노래로 노래방영상을 만들어주는 오픈소스가 나왔구요
   - Youka - Youtube to Karaoke https://news.hada.io/topic?id=1681
   MR 제공되는 곡들보다 원음을 낮게 깔고 부르는게 더 쉽기도 하고, 같이 부르는 재미도 있을테니.
   국내 음악 서비스들도 해볼만 한게 아닌가? 생각이 드네요.
"
"https://news.hada.io/topic?id=2766","GitHub Container Registry 베타 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    GitHub Container Registry 베타 공개

   - 접근 권한 관리 및 공개 이미지에 익명 접근도 가능
   - 베타 기간중에는 Private 이미지도 무료로 호스팅
   - GA시 GitHub Packages의 일부로 같은 유료모델을 따를 예정
   - GitHub Actions 로 쉽게 레지스트리에 등록 지원 (Workflow 공개)

   public 이미지는 Docker Hub에서 GitHub로 옮기는 게 좋겠내요.
   Docker ToS 변경 : 무료계정엔 Image 저장 제한 기간 생겨 - https://news.hada.io/topic?id=2649
"
"https://news.hada.io/topic?id=2723","차세대 이미지 포맷 AVIF 사용법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          차세대 이미지 포맷 AVIF 사용법

   - 오픈미디어 얼라이언스가 만든 AV1 (.avif) 이미지 포맷
   - JPEG 대비 50%, WebP 대비 20% 사이즈 감소
   - 크롬85부터 지원, FF80는 피쳐 설정 필요
   - 손실/비손실 압축 지원. 투명용 알파채널 및 애니메이션도 지원
   - Picture 엘리먼트에서 멀티 소스로 폴백 가능
   - 구글이 만든 이미지 최적화 도구 Squoosh 에서도 지원시작

   Squoosh! - Google이 만든 이미지 최적화 웹앱 https://news.hada.io/topic?id=2691
"
"https://news.hada.io/topic?id=2819","openbase - JS 패키지 비교분석 서비스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       openbase - JS 패키지 비교분석 서비스

   - 프로젝트에 사용할 JS 패키지를 선택할 때 도움을 주는 서비스
   - 다운로드 수, GitHub 활성화 지수 등 다양한 지표 제공
   - 패키지 사용자의 리뷰 및 별점 평가
   - 비슷한 패키지와 비교 분석

   서비스 아이디어 좋네요!
   근데.. 서비스랑 상관없는 이야기인데..
   이 사이트 왜 이리 접속이 느린가 했더니 Netlify 에 올린거였군요.
   Netlify 접속이 느린거는 고질적인거 같은데 이건 안 고쳐 지는듯
   JS파일 하나 불러오는데 10초씩 걸리기도 하네요.

   음.. 저는 빠릿하게 나오는데요. CDN이나 ISP의 해외망 접속 문제일까요?

   헛 그런가요? KT 망인데.. 저는 대부분의 Netlify 사이트가 다 느리던데 ㅠ
"
"https://news.hada.io/topic?id=2837","Unix Timestamp 1600000000 돌파","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Unix Timestamp 1600000000 돌파

   - 한국 시간 기준 2020/9/13 9:26:40 PM 에 1,600,000,000 으로 앞자리 16으로 변경
   - 17로 변경되는건 2023/11/15 7:13:20
   - 타임스탬프를 저장하는 time_t 타입은 2038/1/19 에 32bit 오버플로우 발생 예정 (2,147,483,647)

   2023년에 또 만나요 !

   flip - 웹용 플립 시계 & 카운터 라이브러리 https://news.hada.io/topic?id=1902
   사이트는 위 플립 라이브러리를 이용해서 간단히 만들어 봤습니다.
"
"https://news.hada.io/topic?id=2778","2020년과 이후 JavaScript의 동향 - WebAssembly","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 2020년과 이후 JavaScript의 동향 - WebAssembly

   - W3C는 wasm을 HTML, CSS 그리고 JavaScript에 이어 웹의 4번째 언어로 공식 권고
   - wasm은 LLVM(컴파일러 기반 구조) 지원 언어가 모두 웹에서 사용될 수 있게 컴파일되는 Polyglot
   ㅤ→ 실제로는 네이티브 코드를 웹에서 실행하게 해주는 도구에 더 가깝다
   - 미래 버전에 포함될 작업
   ㅤ→ Threading, Fixed-width(128-bit packed) SIMD, Rererence types, Tail calls, ECMAScript module integration
   - wasm은 JavaScript에 비해 왜 더 빠를까
   - 브라우저/JavaScript 엔진의 wasm 지원 동향
   - Bytecode Alliance

   위 글 속에 나오는 Nanoprocess 보안 모델에 관해 찾아보았습니다. 위 글에 링크된 동영상을 강연한 발표자가 그 내용을 그대로 모질라 블로그에도 올려 두셨더군요. 저는 동영상보다 글이 더 편해서, 이걸 보고 나서야 대충 이해했습니다. 결국은 세분화된 권한 부여가 핵심이네요.
   https://hacks.mozilla.org/2019/11/announcing-the-bytecode-alliance/
"
"https://news.hada.io/topic?id=2789","JavaScript 번들러로 본 조선시대 붕당의 이해","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     JavaScript 번들러로 본 조선시대 붕당의 이해

   JavaScript 모듈 표준화의 제안부터 현대 모듈 번들러 등장까지의 역사를 정리
   동인(CommonJS),서인(AMD),남인(UMD),예송논쟁(ES6),노론(Grunt,Gulp),실학(TypeScript),사도세자(Webpack) 등을 이용해서 모듈 관련 흐름을 소개

   재밌고 쉽게 설명한 글이네요! 도움이 되었습니다. 내용은 조선시대 붕당사로 보는 Javascript 번들러의 이해 같아요. ㅎㅎ

   같이 읽어보면 좋은 글
   - Node 모듈은 전쟁중 : CommonJS vs ESM https://news.hada.io/topic?id=2606
   그리고 Rollup 을 이용한 빌드도구 Snowpack
   - Snowpack - 웹앱을 번들러 없이 빠르게 빌드해주는 도구 https://news.hada.io/topic?id=1267
   - Snowpack 2.0 릴리즈 https://news.hada.io/topic?id=2174
"
"https://news.hada.io/topic?id=2818","Long-Term Stock Exchange(장기 주식 거래소) 오픈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Long-Term Stock Exchange(장기 주식 거래소) 오픈

   LTSE는 ""린 스타트업"" 의 저자 Eric Ries가 자신의 책에서 얘기했던 ""장기 비젼을 공유하는 회사와 투자자를 위한 증권 거래소""
   - 현재의 자본 시장은 단기 목표에 대한 압력, 거버넌스의 변화 등으로 오래 지속 가능한 비즈니스 구축이 어려워짐
   - 장기에 초점을 둔 회사들 ( Long-term focused companies ) 을 상장 시키고 거래하는 퍼블릭 마켓
   - LTSE 상장사에 요구되는 5가지 원칙과, 장기 투자자들이 고려해야할 것들
   ㅤ1. 회사는 더 넓은 이해관계자(Stakeholder)를 고려하고 그들 서로의 성공에 중요한 역할을 해야함
   ㅤㅤ→ 환경과 커뮤니티에 미치는 영향
   ㅤㅤ→ 다양성과 포용
   ㅤㅤ→ 직원에 대한 투자
   ㅤㅤ→ 직원에 대한 보상과 회사의 장기 목표에 기여한 모든 Stakeholder들
   ㅤ2. 수년 또는 수십년단위로 성공을 측정하고, 장기적인 의사 결정을 우선 고려
   ㅤㅤ→ 회사가 어느정도의 시간축(Time Horizon)을 장기라고 생각 할 것인가
   ㅤㅤ→ 이 시간축이 회사의 전략 계획과 어떻게 관련되는가
   ㅤㅤ→ 이 장기 시간축과 성공을 어떻게 Align 할 것인가
   ㅤㅤ→ 어떻게 조직이 장기적인 목표에 우선순위를 두게 하는지
   ㅤ3. 임원 보상과 이사회 보상을 장기적인 성과에 일치 시켜야함
   ㅤ4. 이사회는 장기 전략을 같이 수립하고 명시적으로 감독해야함
   ㅤ5. 장기 주주와 협력할 것
   - LTSE 는 이 시장에 어울리는 회사들을 위해서 다양한 소프트웨어를 제공
   ㅤ→ LTSE Bridge : 인력, 자본, 현금 등을 관리하기 위한 소프트웨어 플랫폼
   ㅤㅤ★ Captable : 회사를 위한 무료 주식(Equity) 관리 소프트웨어. 주주/투자 등을 관리
   ㅤㅤ★ Fast409A : IRS 409A 관련, 주식의 공정 시장 가치(Fair Market Value) 평가 도구
   ㅤㅤ★ Runway : 회사의 현금 관리 및 계획 도구
   ㅤㅤ★ HiringPlan : 스타트업을 위한 인력 관리/계획 도구. 인력에 시장 시장 정보(평균 연봉)등 정보를 제공
   ㅤㅤ★ StartupDisclosure : 회사의 투자자 포트폴리오 관리
   ㅤㅤ★ NoteGenie : SAFE(Simple Agreement for Future Equity) 계산 도구
   ㅤㅤ★ IPOReady : IPO 준비가 되었는지 알아보는 셀프 평가 도구
   ㅤㅤ★ TLDROptions : 직원들에게 스탁옵션의 가치를 설명하는 도구
   ㅤ→ LTSE Horizon : IPO 절차를 투명하게 진행시키고, 주주와 장기 투자자들을 위한 도구

   IPO되지 않은 주식들을 대상으로 하는 것 같은데 퍼블릭 마켓이 맞나요?
   사실상 장외주식 거래 플랫폼이 아닌지...

   FAQ에 보면 LTSE 는 미국 증권거래소에 등록된 거래소이고, 모든 주식이 가능하다고 되어있습니다.
   NYSE나 NASDAQ에 상장된 주식들도 회사가 이쪽으로도 상장한다면 거래 자체는 가능 합니다.
   LTSE는 미국 주식들만 거래하고, 미국 주식들은 기본적으로 한개 이상의 거래소에서 가능하게 되어있습니다.
   https://ltse.com/faq/

   장기투자를 지지하는 워런 버핏을 스폰서로 모실 수 있다면 좋겠네요 :)

   너무 이상적이라 흥미롭군요

   +1 저도 비슷한 느낌이에요. 이게 과연 가능할까 싶은?
   다만 전혀 모르는 사람이 했다면 무시했겠는데, Eric Ries 면 함 믿어볼만한데? 하는 생각도 듭니다 ㅎ

   상장사나 스타트업이나 투자가 연결되면 단기적인 목표에 어쩔수 없이 흔들리게 되는데,
   이를 좀 더 장기적으로 보자는 관점에 동의합니다.
   다만 이게 현실화 될수 있을지는 두고 봐야 할거 같아요.
   LTSE Bridge 에 제공하는 도구들이 각자 도메인을 가지고, 별도로 서비스되는 소프트웨어라는게 놀랍네요.
   대부분 LTSE 거래소에서 직접 개발한 도구들입니다.
   https://captable.io/
   https://fast409a.io/
   https://startuprunway.io/
   https://hiringplan.io/
   https://startupdisclosure.io/
   https://notegenie.io/
   https://ipo-ready.com/
   https://tldroptions.io/
"
"https://news.hada.io/topic?id=2747","타워 디펜스로 배우는 CSS FlexBox","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        타워 디펜스로 배우는 CSS FlexBox

   - 몰려오는 적들을 공격하는 타워를 CSS로 위치시켜서 막아내는 게임
   - 총 12개의 Wave
   - display: flex 의 다양한 속성 값들 익히기
   ㅤ→ justify-content : flex-start, flex-end, center, space-between, space-around
   ㅤ→ align-items & align-self
   ㅤ→ flex-direction : row, row-reverse, column, column-reverse

   재밌게 즐기면서 배웠습니다!!
"
"https://news.hada.io/topic?id=2802","유명 SW회사들은 어떻게 테스트 하는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         유명 SW회사들은 어떻게 테스트 하는가

   - 유명 회사들의 테스트/QA에 관련된 발표자료/테스팅 문화/블로그/비디오 링크 들을 한데 모은 페이지
   - Amazon,Airbnb,Atlassian,Dropbox,Facebook,Google,LinkedIn,Shopify,Slack,Spotify 등
   - 51개 회사 약 450여개의 링크

   다른 곳의 QA/Software Testing 관련 내용을 찾기 쉽지 않았는데 정말 잘 정리되어 있는 유용한 곳이네요. 찬찬히 다 읽어봐야겠습니다. :)
"
"https://news.hada.io/topic?id=2764","페이스북의 다운타임 없는 릴리즈 방법에 대한 논문","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      페이스북의 다운타임 없는 릴리즈 방법에 대한 논문

   Zero Downtime Release: Disruption-free Load Balancing of a Multi-Billion User Website
   요약 설명
   - 서버는 종종 재시작 됨 : 업그레이드, 버그픽스, 보안패치
   - Continuous Release 의 도입으로
   ㅤ→ 페이스북의 경우 2007년에 일주일에 1번이던게, 일주일에 100번 이상 배포 진행
   ㅤ→ 수백만대의 서버가 매일 재시작
   ㅤ→ AWS,아틀라시안,옐프,Ebay,우버 모두 마찬가지
   ㅤ→ 헬스체크가 간헐적으로 실패하게 됨
   - 전통적인 배포 방법
   ㅤ1. Blue/Green 배포 (AWS CodeDeploy, Kubernetes) : 두개의 머신군으로 나누고 로드밸런서가 업데이트 먼저 한쪽으로 트래픽을 이관
   ㅤㅤ→ 비용이 많이 듬. 수많은 머신들이 있는 Edge에는 부적합
   ㅤ2. Rolling Updates (Envoy, NGINX, Apache, Kubernetes, AWS) : 한대씩 점진적으로 업데이트 하면서 로드밸런서가 트래픽을 조정
   ㅤㅤ→ 업데이트 기간동안 CPU사용량이 적어지고, 느린 이터레이션.
   ㅤ3. Hot Restart (HAProxy, Envoy) : 한 머신내에서 새로운 버전의 프로세스를 띄우고 기존 프로세스 트래픽이 점차 종료되면 새 프로세스가 트래픽을 받음 (SO_REUSEPORT, CMSG, SCM_RIGHTS)
   ㅤㅤ→ TCP에만 가능하고 UDP는 잘못된 라우팅 발생 가능
   ""어떻게 하면 릴리즈 업데이트를 다운타임 없이, 빠른 이터레이션으로, 중단없이 진행할수 있을까?""
   * 페이스북의 Traffic Infrastructure
   ㅤ- Edge PoP(L7 LB, ProxyGen) - Data Center(L7 LB, ProxyGen) - App. Server(HHVM,MQTT)
   ㅤㅤ→ 티어별로 리스타트해서 중단을 방지
   ㅤㅤ→ Edge 와 Data Center 의 머신은 각각 새 ProxyGen을 띄워서 ""Socket TakeOver""
   ㅤㅤ→ Edge 와 Data Center 간의 ""Downstream Connection Reuse""
   ㅤㅤ→ Data Center 와 App Server 강의 연결은 ""Partial Post Replay""
   ㅤ- Socket Takeover : 새로운 프로세스를 띄워서 SCM_RIGHTS 와 CMSG로 TCP Listening , UDP VIP 소켓을 넘겨 받음
   ㅤㅤ→ SCM_RIGHTS : 다른 프로세스의 File Descriptor 를 넘겨 받게 해주는 소켓 타입
   ㅤㅤ→ CMSG : sendmsg() 기능으로 로컬프로세스 간에 제어 메시지를 전송할수 있게 해줌
   ㅤㅤ→ UDP 기반 커넥션인 QUIC을 위해서 기존 커넥션의 경우는 새 프로세스가 기존 프로세스에게 QUIC ConnectionID를 물어서 해당 패킷을 기존 프로세스로 포워딩
   ㅤ- Partial Post Replay ( App 서버 재시작 )
   ㅤㅤ→ App 서버는 두가지의 워크로드가 존재 : 짧은 API 호출, 긴 HTTP POST 호출 (Upload)
   ㅤㅤ→ 이 앱서버는 가용 자원이 없기 때문에 Socket Takeover 가 하는듯이 새로운 인스턴스를 띄워서 소켓 넘기는게 불가능하고, 긴 업로드 시간도 문제
   ㅤㅤ→ 긴 업로드 중간에 앱서버가 업데이트 되면 프록시가 그 내용을 다 가지고 있지 않기 때문에, 해당 POST를 중단하면서 379코드와 함께 지금까지 받은 데이터를 다시 프록시로 리턴
   ㅤㅤ→ 프록시는 기존 앱서버로 부터 받은 데이터와 남은 데이터를 합쳐서 다시 새 머신으로 재 전송 시도
   * Zero Downtime Release의 장점
   ㅤ→ Rolling Update 대비 20% 정도 높은 CPU 사용량
   ㅤ→ Hot Restart 가 QUIC 패킷을 20K까지 미스라우팅 했던 거에 비해 거의 미스라우팅이 없음
   ㅤ→ 페이스북 내에서 Socket TakeOver는 2013년부터, 나머지는 2015년 부터 사용 중

   위 내용은 이 20분짜리 설명 동영상을 기반으로 요약한 것입니다 https://dl.acm.org/action/downloadSupplement/…
   ProxyGen : 페이스북의 C++ HTTP Library https://github.com/facebook/proxygen
"
"https://news.hada.io/topic?id=2834","애플, 앱스토어 리뷰 가이드라인 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         애플, 앱스토어 리뷰 가이드라인 업데이트

   3.1.2(a) 게임 스트리밍 구독 서비스에서 제공되는 게임은 앱스토어에서 다운로드 해야함
   3.1.3(d) 1:1 개인간 경험(교육,의료상담,피트니스 등) 은 인앱구매 안써도 되나, 1:n (few to many) 은 무조건 인앱구매 통 해야함
   3.1.3(f) 유료 웹기반 도구(Voip,클라우드 저장소, 이메일, 웹호스팅)의 무료앱은 내부에서 구매가 없거나, 앱 외부에서 결제 유도 안 할 경우 경우 인앱구매 사용할 필요 없음
   3.2.2(vi) 사용자에게 트래킹을 가능하게 하도록 요구할 수 없음(기존 리뷰,광고,앱 다운로드에 트래킹 항목 추가)
   4.9 스트리밍 게임 : 다른 앱과 마찬가지로 모든 앱스토어 가이드라인을 준수 해야함 (항목 전체가 새로 추가)
   4.9.1 스트리밍 게임은 앱스토어에 제출되고 별도 앱으로 등록 되어야 함

   최근에 Epic Games 와 Hey 이메일 서비스등과 문제가 되던 부분들 관련해서 변경했네요.
   근데, 4.9 스트리밍 게임 항목에 아래와 같은 문구가 눈길을 끄네요.
   ""Of course, there is always the open Internet and web browser apps to reach all users outside of the App Store.""
   이 가이드라인 지키기 싫으면 그냥 웹에 가서 하세요 라는 거군요..
"
"https://news.hada.io/topic?id=2713","Snowflake IPO S-1 분석","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Snowflake IPO S-1 분석

   - Snowflake는 AWS Redshift와 경쟁하는 엔터프라이즈 데이터 웨어하우스 스타트업
   - 작년에만 174% 성장, 3100억원의 매출을 기록하며 이번에 상장 신청
   - 초기엔 AWS 위에서 만들었으나 Azure,GCP에서도 동작되게 추가함
   ㅤ→ 세 클라우드 모두 Snowflake의 경쟁 제품을 다 가지고 있음 (RedShift, BigQuery, Synapse)
   ㅤ→ 친구/적 관계 : Snowflake 는 클라우드 업체의 제품들과 경쟁하지만, Snowflake 고객들이 해당 클라우드 인프라를 사용하게 함으로써 이점을 주기도 함
   - 2012년에 설립되어 빠르게 성장하며, 8번의 라운드로 1조 6천억원이 넘는 자금을 조달하고, 61%의 탄탄한 마진율을 구축
   - 2020년 현재 하루에 5억개의 쿼리 처리중
   - TAM(Total Addressable Market) : 대상 마켓 규모는 약 96조 원($81B)
   - 고객
   ㅤ→ 2020년 7월 현재 3,117개 회사, 1년전 1547에서 두배 성장
   ㅤ→ Fortune 10 회사중 7개가 사용 (수익의 4%)
   ㅤ→ Forturn 500 회사중 146개가 사용 (수익의 26%)
   - 재무
   ㅤ→ 매출 : 2019 $96.7M → 2020 $264.7M
   ㅤㅤ→ 가격이 12% 상승
   ㅤ→ 매출 총이익 : 2019 $44.9M → 2020 $148.2M ( 46% → 56% 로 개선)
   ㅤㅤ→ 마진율은 57% → 62%로 개선
   - 상장전 지분율
   ㅤ→ CEO, Frank Slootman: 5.9%
   ㅤ→ Altimeter: 14.8%
   ㅤ→ ICONIQ: 13.8%
   ㅤ→ Redpoint: 9%
   ㅤ→ Sequoia: 8.4%
   ㅤ→ Sutter Hill Ventures: 20.3%

   Snowflake S-1 문서 : https://sec.gov/Archives/edgar/…

   2012년에 오라클 출신 데이터웨어하우스 전문가 두명하고 다른 DB전문가 한명이 합쳐서 만든 회사인데,
   지금 CEO인 Frank Slootman은 이 IPO를 위해서 데려온 전문 경영인 입니다. ServiceNow 를 상장시킨 사람이기도 하죠.
   ServiceNow에 2011년에 조인해서 2012년에 상장시키고 2017년까지 대표로 있었는데, 현재 시가총액이 100조쯤 됩니다.
   IPO당시 주가가 $23이었는데, 현재 $457 이네요. Snowflake도 비슷하게 만들지 않을까 기대를..

   서비스나우의 상장 관련 얘기는 ""세계 혁신기업 100 | 1위 - 서비스나우"" 에서 살짝 볼 수 있습니다.
   https://jmagazine.joins.com/forbes/view/321921
"
"https://news.hada.io/topic?id=2832","Caddy 오픈소스 웹서버, Apilayer에 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Caddy 오픈소스 웹서버, Apilayer에 인수

   Caddy는 무료 인증서 자동업데이트를 해주는 Go로 작성된 성능 좋은 오픈소스 웹서버
   Apilayer는 오스트리아의 클라우드 API & SaaS 업체
   APL 2.0 인 라이센스는 변경 없음 (트레이드 마크를 판 것)

   Caddy 2 릴리즈 - 성능 좋고 간편한 HTTPS 자동 지원 웹서버 https://news.hada.io/topic?id=2028
   - 2.2 버전부터는 Let's Encrypt 와 ZeroSSL 두가지 무료 인증서 자동 업데이트를 지원합니다.
   개인으로 개발 시작해서 6년 동안 끌어온건데, 이제 더 마음 편히 풀타임으로 코드작성에만 집중 할 것이라고.
   다른 오픈소스들처럼 회사의 백업을 받아서 더 잘 성장하는 사례가 되면 좋겠네요.
   개발자가 커뮤니티에 직접 쓴 글 링크
   Caddy and CertMagic have new ownership; no changes to licensing or development
   https://caddy.community/t/…

   오픈소스를 비즈니스화 하는 법 https://news.hada.io/topic?id=2750
   이 글의 사례처럼 ""트레이드마크를 등록하고 완전 오픈소스로 공개하는 Redhat 모델""인데 나름 성공한게 되었네요.
"
"https://news.hada.io/topic?id=2803","libtorrent 2.0 공개 - BitTorrent v2 지원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  libtorrent 2.0 공개 - BitTorrent v2 지원

   v2의 변경점
   - 데이터 해쉬를 SHA-1에서 SHA-256으로 교체
   - Merkle Hash Tree 로 해쉬를 저장해서 .torrent 파일 크기가 작아짐
   ㅤ→ 메타데이터가 작아져서 시작속도가 빨라짐
   ㅤ→ 다운 받은 데이터들이 블록단위로 검증가능해짐
   - 파일에도 해쉬 적용
   ㅤ→ 파일이 같다면 같은 해쉬가 되므로 토렌트 간에 파일 이동이 가능해지고 리 해쉬할 필요가 없음
   - 디렉토리 구조의 간소화 저장
   ㅤ→ 작은 파일이 많이 들은 토렌트의 경우 중복이 간소화
   - 조각의 크기를 강제
   ㅤ→ 2의 거듭 제곱, 16 kiB 이상
   - 마그넷링크도 SHA-256을 지원하기 위해 확장
   ㅤ→ SHA-1 은 urn:btih: , SHA-256은 urn:btmh: 로 시작
   - v2의 새 기능은 하위 호환이 안됨.
   ㅤ→ v1,v2 를 동시에 지원하는 하이브리드 토렌트 파일 생성 가능
"
"https://news.hada.io/topic?id=2721","미법원, Apple의 Unreal Engine 차단 조치 부당하다 판결","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                미법원, Apple의 Unreal Engine 차단 조치 부당하다 판결

   - Fortnite 사태와 관련해 Apple이 Unreal Engine 개발자 도구를 차단한 것을 부당하다고 판결함
   - Epic Games는 Fortnite의 App Store 판매 재개도 요청했으나, App Store 가이드라인을 위반했으므로 거절됨

   국내 관련기사: http://whatevers.io/?p=1716
"
"https://news.hada.io/topic?id=2730","엔지니어링 매니저가 꼭 읽어야 할 도서&아티클","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       엔지니어링 매니저가 꼭 읽어야 할 도서&아티클

   컨텐츠 구독 서비스인 퍼블리에서 내부적으로 선정한 엔지니어링 매니저의 필독 문서 목록입니다. (한국어, 영어) “엔지니어링 매니저” 대상이라고 했지만, 내용상 개발자도 포함하는 것 같네요. 리더십이란 관리자만의 것이 아니니까요.
"
"https://news.hada.io/topic?id=2769","htop 3.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              htop 3.0 릴리즈

   - 인터랙티브 프로세스 뷰어
   - 원 개발자가 장기간 비활동중이라 커뮤니티가 넘겨받아 진행. 2년만에 메이저 버전업
   - 주요 변경
   ㅤ→ ZFS ARC 통계지원
   ㅤ→ vim 스타일 키매핑 모드
   ㅤ→ 리눅스 PSI* / PSS* 메트릭 지원
   ㅤ→ 2개 이상의 더 작은 CPU 미터 컬럼 지원
   ㅤ→ CPU 미터에서 프리퀀시 표시 가능

   * PSI(Pressure Stall Information) : 메모리,CPU,IO 자원에 대한 압력(자원이 많이 할당되어 태스크에 지연이 발생되는지)에 대한 정보를 제공하는 지표
   ㅤ→ 10초, 1분, 5분단위 평균 과 누적 ms 총합
   ㅤ→ some (메모리,IO,CPU) : 하나 또는 그 이상의 프로세스가 자원이 부족해서 딜레이가 발생한 시간
   ㅤ→ full (메모리,IO) : 모든 태스크가 자원부족으로 딜레이가 발생한 시간 (완전히 아무것도 못하는 시간)
   ㅤ→ full 값이 높다면 자원부족으로 전체 처리량에 손실이 발생하고 있다는 것
   * PSS(Proportional Set Size) : 프로세스가 램에서 혼자 차지하는 메모리 영역(Page)과 다른 프로세스와 공유하는 메모리 영역의 비율.
   ㅤ→ 한 프로세스가 자기 혼자 100페이지를 차지하고, 다른 프로세스들과 100페이지를 공유한다면 PSS는 150

   원 개발자의 Thank you to Community 메시지 https://github.com/hishamhm/htop/issues/992#issuecomment-683286672
   ㅤ→ 취미로 시작해서 15년 동안 유지보수 해와서 약간 멀어졌었는데 이렇게 커뮤니티가 해줘서 고맙다고

   시스템 모니터 htop 의 모든것 https://news.hada.io/topic?id=913
   * Getting Started with PSI https://facebookmicrosites.github.io/psi/docs/overview
"
"https://news.hada.io/topic?id=2814","Google Cloud API Gateway 공개 베타 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Google Cloud API Gateway 공개 베타 시작

   - 서버리스 백엔드를 위한 Managed API Gateway
   ㅤ→ Cloud Functions, Cloud Run, App Engine 등
   - Envoy 기반
   - 모니터링, 로깅, 트레이싱, 알림 지원
   - 2백만회 호출까지 무료. 10억회까지 백만회당 $3
   - ingress무료, egress는 10TB 까지 GB당 약 $0.12

   기존 GCP의 API 관리시스템인 Cloud Endpoints는 nginx 기반 이었는데, 이건 envoy 기반이네요. 보자마자 Dropbox가 생각났어요.
   - Dropbox가 Nginx에서 Envoy로 전환한 이유와 방법 https://news.hada.io/topic?id=2625
"
"https://news.hada.io/topic?id=2761","Android 에서 리눅스 App 실행: Linux Terminal Emulator (Termux)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Android 에서 리눅스 App 실행: Linux Terminal Emulator (Termux)

   안드로이드의 Libc는 Bionic libc이고, 리눅스의 Libc는 gLibc를 사용하기 때문에 리눅스에 빌드된 실행 파일을 그대로 실행하는 것은 불가능합니다.
   이러한 차이점을 해결하기 위해서 안드로이드 스마트 폰에서는 Linux Terminal Emulator Termux 를 사용해야 합니다. Playstore에서 Termux 설치 후 apt(pkg)를 통해서 각종 리눅스 실행 파일을 설치하고 실행이 가능합니다.
   안드로이드 폰에서 리눅스 터미널 Termux 활용 방안:
   ① 안드로이드 폰에 Web server를 올리는 경우
   ②안드로이드 폰에 Python 프로그램을 구동시키는 경우
   ③안드로이드 폰에서 SSH 기반의 서버 (e.g. sFTP)로 활용하는 경우
   ④안드로이드 폰의 SW를 HACK 하는 경우 (루팅 된 device) - Termux에서 Hacking tool을 지원한다고 함.
   ⑤ 리눅스에서 개발된 프로그램을 재사용 : Termux에서는 C 컴파일로 clang을 사용하기 때문에 우분투 gcc로 빌드된 실행파일 (ELF)는 직접 실행이 안되고 재 빌드해야 함 (소스만 재 활용)
   ⑥Python과 같은 interpreter 언어는 그대로 실행됨
"
"https://news.hada.io/topic?id=2797","rPPG - DeepFake 합성 영상을 분간하는 참신한 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   rPPG - DeepFake 합성 영상을 분간하는 참신한 방법

   급격히 발달한 DeepFake 기술은 엔터테인먼트 산업에 굉장한 도움이 될 수도 있지만, 가짜뉴스의 심각성을 더욱 높이는 문제를 일으킬 수도 있습니다. 그래서 이러한 DeepFake를 분간하는 기술을 확보하는 것은 중요한 의미가 있습니다.
   다가오는 미국 대선에서 가짜뉴스를 막기 위한 MS의 노력:
   https://news.hada.io/topic?id=2767
   DeepFake 영상을 분간하는 참신한 방법이 소개된 기사를 공유합니다. (영어) 이 방법은 사람의 얼굴에서 추출한 심장박동 신호를 바탕으로 진짜 사람의 얼굴과 DeepFake를 분간합니다.
   병원의 비침습형 산소포화도 측정장비나 이제는 꽤 흔해진 스마트워치 등에서 인간의 심장박동수를 재는 방법을 전문용어로 PPG(Photoplethysmography, 광혈류측정)라고 합니다. 인간의 신체에 빛을 비추면 그 빛이 흡수되는데, 이때 흡수되는 정도는 그 빛이 지나가는 경로에 있는 피부, 조직, 혈액의 부피에 비례합니다. 그런데 피부나 조직의 부피는 급격히 바뀔 일이 없지만, 특정한 위치의 혈관 속 혈액의 부피는 심장이 수축할 때는 늘어나고 심장이 이완하면 줄어듭니다. 그래서 빛이 흡수되는 패턴을 그래프로 그려, 피크 수치의 간격을 재기만 하면 그게 바로 심박수가 됩니다. 생각보다 간단하지요.
   rPPG(Remote photoplethysmography, 원격 광혈류측정)는 여기서 한발 더 나아갑니다. 인간이나 카메라가 사물을 볼 수 있는 것은 어딘가에서 나온 빛이 사물에 반사되어 눈이나 카메라에 들어오기 때문입니다. 그런데 위에서 언급한 PPG의 원리를 생각하면, 살아있는 인간의 얼굴 같은 신체 부위에서 반사되어 들어오는 빛에는 아주 희미하긴 하지만 분명히 맥박 패턴을 반영한 변화가 숨어 있다고 볼 수 있습니다. 이 희미한 변화를 고도로 증폭하여 별다른 측정도구나 접촉 없이도 카메라로 찍은 얼굴 동영상만으로 심박수를 재는 것을 rPPG라고 합니다. 이 방법은 극히 미세한 얼굴빛 변화에 의존하지만, 근래의 딥 러닝을 적용한 rPPG 시스템은 압축률이 꽤 높은 얼굴 동영상에서도 이런 변화를 추출할 수 있는 것으로 알려져 있습니다.
   그렇다면, 이러한 방식으로 생체 신호를 추출하면 진짜 사람의 얼굴과 DeepFake로 만들어진 얼굴을 분간할 수도 있지 않을까요? 그래서 최신 rPPG 기법을 바탕으로 DeepFake 얼굴 영상을 가려내는 실험을 한 결과에 관한 논문들이 최근 발표되었습니다. 간단히 말해서, 실제 사람의 얼굴과 DeepFake로 만들어낸 사람 얼굴에서 나타나는 rPPG 신호는 패턴이 확연히 다르며, DeepFake에 사용한 모델 종류에 따라서 추출되는 rPPG 신호 패턴도 다릅니다. 따라서 이러한 방법으로 DeepFake 영상을 분간해낼 수 있었을 뿐만 아니라, 구체적으로 어떤 모델이 사용되었는지도 상당히 높은 정확도로 알아낼 수 있었다고 합니다.
   해당 논문들의 원문:
   https://arxiv.org/abs/2006.07634
   https://arxiv.org/abs/2008.11363

   신기한데 DeepFake가 나중엔 저것도 따라하지 않을까 걱정이 되기도 하는군요. 창과 방패처럼 ㅎㅎ

   그러게요 오히려 논문 공개하면 안되는거 아닌가 싶기도 ㅋㅋ

   서로 경쟁하며 학습하는 창과 방패라니 GAN이 생각나내요.
   새로운 인공지능 기술 GAN - https://samsungsds.com/global/ko/…
"
"https://news.hada.io/topic?id=2762","좋은 Microcopy를 위한 팁","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           좋은 Microcopy를 위한 팁

   * Microcopy : UX에 영향을 주는, 제품/서비스에 사용하는 작은 문구들
   1) 사용자에게 말하는 것처럼
   ㅤ$50 was sent to Max → You sent $50 to Max
   2) 대화형 요소들은 동사로 시작
   ㅤThe Plans → Choose your plan
   3) 사용자의 우려를 방지
   ㅤYou won't be charged until your trial ends
   4) 친숙한 용어 사용
   ㅤAn error occurred → Something went wrong
   5) 능동태 사용이 기본
   ㅤA comment was made by Sophie → Sophie made a comment
   6) 유용한 에러 메시지 보이기
   ㅤLog in failure → We couldn't find an account with that email. Try again or Recover password
   7) 반복하기 : 계속 테스트하며 수정할 것
   ㅤGet Started → Start a free trial → Create account

   일반적인/쉬운 영어로 글쓰는 방법 https://news.hada.io/topic?id=2716 와도 겹치는 내용이 많네요.
   → 문장은 짧게, 능동형으로, You와 We사용, 독자에게 맞는 단어 선택, 지시하는걸 두려워하지 말 것
   다만 6번의 경우는 예제가 약간 문제가 있을 수도 있는게
   그 이메일 주소로 가입된 계정이 없다는 것을 알려주는 것 자체도 보안 이슈가 있을 수 있습니다.
   저 경우는 ""계정 오류입니다. 다른 이메일 주소 또는 암호 찾기를 해보세요"" 정도로 뭉뚱그리는게 맞을거 같아요.
"
"https://news.hada.io/topic?id=2757","Friendly Fire - 오픈소스 Metroidvania 스타일 2D 웹게임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Friendly Fire - 오픈소스 Metroidvania 스타일 2D 웹게임

   - Metroidvania = 메트로이드 + 캐슬배니아 형태의 플랫포머 게임
   - 손으로 그린 픽셀아트 + 오리지널 사운드 트랙
   - Node.js + TypeScript 로 된 소스 전체 공개
   - 스팀에서도 플레이 가능 - 리뷰 : 매우 긍정적(255)

   퀄리티가 꽤 뛰어납니다. 잠깐 해봤다가 시간 순삭 당했네요.
   소스 : https://github.com/friendlyfiregame/friendlyfiregame/
   Steam : https://store.steampowered.com/app/1311660/Friendly_Fire/
"
"https://news.hada.io/topic?id=2714","안드로이드용 크롬, 빠른 웹페이지에 "Fast page" 라벨링 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 안드로이드용 크롬, 빠른 웹페이지에 ""Fast page"" 라벨링 시작

   - Core Web Vitals(LCP,FID,CLS) 기준으로 웹 페이지의 사용자 경험을 측정
   - 길게눌러서 보이는 컨텍스트메뉴에서 ""✓ Fast Page"" 라는 마크를 표시
   - 크롬 85 베타부터 적용되나, flags 설정에서 바꿔서 바로 사용도 가능

   구글, 검색결과 순위에 페이지 경험(Page Experience) 지표 도입 https://news.hada.io/topic?id=2197
   - Core Web Vitals
   ㅤ→ LCP : Largest Contentful Paint
   ㅤ→ FID : First Input Delay
   ㅤ→ CLS : Cumulative Layout Shift
   Lighthouse 6.0 릴리즈 https://news.hada.io/topic?id=2122
   ㅤ→ LCP,CLS,TBT 메트릭 추가
   Cumulative Layout Shift (CLS) 란 무엇인가? https://news.hada.io/topic?id=1697
   ㅤ→ 이미지/광고의 느린 로딩, 비동기 동작, 동적 DOM변경등으로 웹 페이지의 레이아웃이 얼마나 변하는 지를 측정
   ㅤ→ 사용자가 잘못된 클릭을 유발하게 되는 시각적 불안정성을 체크하는 사용자 중심 성능 지표
   크롬 83의 개발자 대상 변경사항 https://news.hada.io/topic?id=2123
   ㅤ→ Core Web Vitals 적용
   개발자가 알아야할 크롬 77 버전의 변경점 https://news.hada.io/topic?id=566
   ㅤ→ Largest Contentful Paint (LCP) API 제공으로 가장 큰 엘리먼트의 렌더링 시간을 알수 있음.
"
"https://news.hada.io/topic?id=2748","file-type - Buffer안의 파일 타입 알아내기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    file-type - Buffer안의 파일 타입 알아내기

   - 매직넘버*로 파일타입을 감지, Promise를 리턴하는 JS라이브러리
   ㅤ→ .fromBuffer : Buffer/Uint8Array/ArrayBuffer
   ㅤ→ .fromFile : 경로명
   ㅤ→ .fromStream : Node.js 스트림
   ㅤ→ .fromTokenizer : ITokenizer - @tokenizer/http , @tokenizer/s3 등으로 원격 파일 체크
   - 약 120여종의 파일타입 지원
   ㅤ→ jpg/png/gif/webp/tif/bmp/ico/psd/ai/skp/avif
   ㅤ→ zip/tar/rar/gz/7z/dmg/lzh
   ㅤ→ mp4/mkv/webm/mov/avi/wmv
   ㅤ→ mp3/ogg/flac/wav/wma/ac3
   ㅤ→ pdf/epub/mobi/ps/eps
   ㅤ→ exe/swf/flv
   ㅤ→ rtf/docx/pptx/xlsx/odt/ods/odp
   ㅤ→ ttf/otf/woff/woff2
   ㅤ→ ics
   ㅤ→ pcap
   * 매직넘버 : 파일을 구분하기 위해 파일 앞부분에 넣어두는 특정 값들. 초기 유닉스에서는 2바이트 정도만 쓰였으나 요즘은 앞부분 여러개의 바이트를 사용하기도
   ㅤ→ 자바 .class 파일은 ""CAFEBABE"" 로 시작
   ㅤ→ GIF89a 는 ASCII코드 ""GIF89a""로 시작 : 47 49 46 38 39 61
   ㅤ→ JPEG 은 ""FF D8"" 로 시작해서 ""FF D9""로 끝남
   ㅤ→ 유닉스/리눅스 스크립트 파일은 ""#!""
   ㅤ→ PDF 파일은 ""%PDF""
   ㅤ→ ZIP 파일은 ""PK""로 시작 - 도스용 PKZIP 개발자 Phil Katz를 따서
"
"https://news.hada.io/topic?id=2830","페이스북, 대학생 전용 Facebook Campus 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    페이스북, 대학생 전용 Facebook Campus 공개

   - 캠퍼스용 Profile 개설을 위해 .edu 이메일 필요
   - 페이스북 앱내에 전용 섹션(모바일에선 탭)을 제공
   ㅤ→ 캠퍼스 전용 뉴스피드
   ㅤ→ 학생들만의 스터디 그룹, 이벤트 등 개설 가능
   ㅤ→ 실시간 캠퍼스 채팅
   - 동급생 디렉토리 제공( 페이스북 초기처럼 수업, 전공, 입학년도등으로 검색 가능)
   - 미국내 약 30여개 대학부터 제공 시작
   - 졸업년도 입력해서 5년내의 졸업자도 등록은 가능

   에브리타임 + 아이러브스쿨 이내요.

   코로나 때문에 오프라인에서 만나지 못하게 되서 만들었다는데, 페북 초기를 생각해보면 자신들의 뿌리? 로의 회귀인듯
   요즘 미국 대학생들이 페이스북을 안쓰니 만든거 같은데,
   회사용 Facebook Workplace 와 비슷하지만 별도 앱이 아니니 조금 편할 것도 같네요.
"
"https://news.hada.io/topic?id=2742","Fluid Size - 일관적이고, 유동적인 크기조절 SCSS 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Fluid Size - 일관적이고, 유동적인 크기조절 SCSS 라이브러리

   각도를 기반으로 화면크기/거리/해상도가 다른 장치들에서 똑같은 느낌이 날 수 있도록 크기를 설정해주는 라이브러리.
   - 크기 정의
   - 기준 장치에서 보여질 각도를 측정
   - 각도를 이용해 각 장치에 대응하는 적합크기 생성
   - 중간단계의 장치를 위해 실시간 리사이징 제공
   처럼 프로세싱.
"
"https://news.hada.io/topic?id=2736","애플은 검색 엔진을 시작할 수 있다는 조짐을 보임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      애플은 검색 엔진을 시작할 수 있다는 조짐을 보임

   - 애플의 채용공고를 보면 검색 엔지니어 구인에 막대한 투자를 하고 있음을 알 수 있음
   - iOS, iPadOS 14 베타에서 Spotlight Search가 구글 검색을 우회함
   - AppleBot의 크롤링 빈도가 점차 늘고있음

   Apple, Applebot 에 대한 설명 업데이트
   https://news.hada.io/topic?id=2532
"
"https://news.hada.io/topic?id=2744","DearPyGui - GPU 가속되는 파이썬 GUI 프레임워크 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   DearPyGui - GPU 가속되는 파이썬 GUI 프레임워크

   - C++용 GUI 라이브러리인 DearImGui 의 Wrapper, 간단한 파이썬 코드로 사용 가능.
   - 다른 GUI 프레임워크와 달리 네이티브 위젯등을 사용하지 않고 모든 위젯을 GPU로 Drawing (DX11,Metal,OpenGL3)
   ㅤ→ 자체 위젯을 이용한 GUI 앱 개발 (입력창, 윈도우, 팝업 등)
   ㅤ→ 빠른속도의 그래프 처리(ImPlot)
   ㅤ→ 10종의 테마 내장
   ㅤ→ 3D게임까지 개발가능한 Canvas 등을 지원, 스파리으트 지원

   원본 라이브러리가 워낙 확장성도 좋고, 어디서든 붙일 수 있어서 Python과 시너지가 기대되네요!
"
"https://news.hada.io/topic?id=2717","아마존 킨들은 놀라울 정도로 많은 데이터를 수집하고 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    아마존 킨들은 놀라울 정도로 많은 데이터를 수집하고 있다

   - 앱을 열고, 책을 보고, 몇페이지 넘기고, 책을 닫는것 만으로 100개 넘는 리퀘스트가 아마존 서버로 전송
   ㅤ→ 페이지 오픈 시간,첫 글자의 위치,마지막 글자,이미지 포함여부 등
   ㅤ→ 페이지 넘김 액션, 책의 길이, 읽기 시작한 위치 등
   ㅤ→ 폰트 변경, 단어 하이라이트 하는 등의 여부도 모두 포함
   - 바로 전송되지는 않고 로컬에서 저장되었다가 묶어서 전송 : 오프라인 일때도 마찬가지
   - 접속 국가, IP, 기기정보(스크린 크기,모델) 등도 포함

   예전 킨들 개발자의 말로는, 대부분의 이 메트릭들은 실제로 기능이 사용되는지 여부를 확인하는 용도로 사용되어, 안 쓰는 기능들을 없애고 주로 사용하는 기능에 집중할수 있게 하는 용도라고 합니다.
   https://news.ycombinator.com/item?id=24271258
"
"https://news.hada.io/topic?id=2716","일반적인/쉬운 영어로 글쓰는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           일반적인/쉬운 영어로 글쓰는 방법

   PEC(Plain English Campaign) 에서 예제와 함께 정리한 가이드
   - 문장은 짧게
   - 능동형 동사 사용
   - 'You' 와 'We' 사용
   - 독자에게 맞는 단어 선택
   - 지시하는걸 두려워하지 말 것
   - Nominalisation(명사화)을 피할 것
   - 적절하게 목록 사용

   예제를 깔끔하게 잘 적어놔서 이해하기 좋네요. 두고 두고 여러번 읽어봐야 겠어요.
   마지막에 피해야할 단어들 목록이 있는데, Gov.UK 에서도 비슷하게 피해야할 단어들을 적어둔게 있으니 같이 참고하세요
   https://gov.uk/guidance/style-guide/…
   그리고 Writing for Gov.UK 라고 (정부) 문서를 적는 방법을 정리한 글도 있는데 이것도 읽어볼만 합니다.
   https://www.gov.uk/guidance/content-design/writing-for-gov-uk
"
"https://news.hada.io/topic?id=2798","hwp.js - 아래아한글 오픈소스 뷰어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         hwp.js - 아래아한글 오픈소스 뷰어

   - 한글과컴퓨터의 한/글 문서 파일(.hwp) 공개 문서를 참고하여 개발
   - TypeScript로 개발
   - html로 렌더링
   - 개발자님 생각에 현재 20% 정도의 커버리지인듯 하지만 배포용 문서를 제외하고는 대부분 읽을수 있다고
   - 향후 목표
   ㅤ→ 네이버 한글 문서에 있는 템플릿을 모두 에러없이 읽어오기
   ㅤ→ 테스트 코드 커버리지 증가
   ㅤ→ HTML이 아닌 canvas로 렌더링하기
   ㅤ→ 크롬, 파이어폭스, 사파리 확장프로그램 제공

   역사에 남을 프로젝트!

   크롬 확장 - https://chrome.google.com/webstore/detail/…

   와 훌륭하시네요. 응원합니다!
"
"https://news.hada.io/topic?id=2735","WebFlow 로 만든 Civilization VI UI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    WebFlow 로 만든 Civilization VI UI

   - NoCode 툴인 WebFlow로 문명VI 게임의 전체 UI를 다 구현 (게임은 빼고 UI만)
   - 총 128GB, 12400개의 개체, 1200개의 애셋과, 400개의 인터랙션을 구현
   - NoCode툴이 단순한 웹사이트 빌더가 아니라는 것을 보여주기 위해 만들었다고
"
"https://news.hada.io/topic?id=2817","180+개의 OKR 및 Goal 예제 모음 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        180+개의 OKR 및 Goal 예제 모음

   - Objectives & Key Results
   - 9개의 카테고리 : HR, 마케팅, 엔지니어링, 재무, 운영, 제품, 세일즈, 고객 성공, General
   - 각각 포지션별로 구분해서 예제들을 정리
   ㅤ예) 엔지니어링 :
   ㅤ→ DevOps
   ㅤ→ Director of Engineering
   ㅤ→ Engineering Manager
   ㅤ→ Junior Software Engineer
   ㅤ→ Senior Engineering Manager
   ㅤ→ Senior Software Engineer
   ㅤ→ Software Engineer
   ㅤ→ VP, Engineering
"
"https://news.hada.io/topic?id=2741","Danfo.js - Pandas와 비슷한 JS라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Danfo.js - Pandas와 비슷한 JS라이브러리

   - JS개발자들에게 고성능 Relational/Labeled 데이터 프로세싱 도구를 지원하는 것이 목적
   - Tensorflow.js 기반 : Tensor를 로딩 할수 있고, 내부 데이터(DataFrame)을 Tensor로 변환도 가능
   - 쉬운 결측값(NaN) 처리
   - DataFrame의 컬럼 추가/삭제
   - 라벨 기반 슬라이싱,인덱싱,쿼리
   - 데이터셋 머지/조인/GroupBy
   - Arrays,JSONs,List,Objects,Tensors 들 간에 쉬운 변환
"
"https://news.hada.io/topic?id=2821","Undici - Node용 빠른 HTTP/1.1 클라이언트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Undici - Node용 빠른 HTTP/1.1 클라이언트

   - Node.js의 기본 HTTP 대신 아예 바닥부터 새로 개발
   - 공식 repo 밑에 포함되었음
   - v15 기준 초당 3~5배의 리퀘스트 처리
   ㅤ→ http - keepalive x 10,337 ops/sec
   ㅤ→ undici - pipeline x 30,387 ops/sec
   ㅤ→ undici - request x 40,117 ops/sec
   ㅤ→ undici - stream x 40,543 ops/sec
   ㅤ→ undici - dispatch x 50,434 ops/sec
   - Undici 는 이태리어로 11을 의미한다고. (넷플릭스 기묘한 이야기도 참고했음)

   대규모 크롤러를 운용한다거나 해서 HTTP 요청을 많이 처리해야 하는 서버에서는 대체효과가 클듯 하네요.
"
"https://news.hada.io/topic?id=2779","OctoLinker - 깃헙에서 include문을 링크로 변환해주는 크롬확장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               OctoLinker - 깃헙에서 include문을 링크로 변환해주는 크롬확장

   - GitHub에서 include/require/import 문장의 파일을 링크로 변환
   - 마크다운, 이슈 및 PR, 커멘트 내용에서도 지원
   - Repo 내부 및 외부 라이브러리도 연결
   - 다양한 언어 및 환경 지원
   ㅤ→ JavaScript, TypeScript, HTML, CSS, Java, Ruby, Rust, Python, Go, Haskell
   ㅤ→ Node.js, Deno, Composer, Docker, npm, Homebrew, RubyGems, less, Sass, vim
   - package.json, composer,json, Gemfile, requirements.txt 안에서도 외부 라이브러리들을 찾아서 링크 연결
"
"https://news.hada.io/topic?id=2746","8월30일 CenturyLink/Level(3) 인터넷 다운상황 분석","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 8월30일 CenturyLink/Level(3) 인터넷 다운상황 분석

   - 어제 오후 대규모 인터넷 장애에 대한 분석
   - 처음엔 CloudFlare쪽 문제로 알려졌지만, 밝혀진건 세계 최대 ISP중 하나인 CenturyLink측 장애
   - 잘못된 Flowspec 업데이트로 BGP (Border Gateway Protocol)에 문제 발생
   ㅤ→ Flowspec은 BGP의 확장으로 방화벽 룰이 빠르게 네트웍에 전파되도록 하는 도구
   ㅤㅤ(Cloudflare는 7년전에 Flowspec 으로 장애를 낸적이 있어서 더 이상 사용하지 않는다고)
   ㅤ→ 보통 1.5~2MB 정도인 BGP 업데이트가 해당 Flowspec 이 포함되면서 갑자기 20M이상으로 넘어가면서 문제 발생
   - 복구에 4시간이나 걸린 이유에 대한 CloudFlare의 추측
   ㅤ→ Flowspec룰 때문에 대용량 BGP 업데이트가 생기면서 라우터에 접근이 불가능 했을 것
   ㅤ→ 아마도 이 Flowspec룰이 CentryLink가 아닌 그들의 고객으로 부터 나오면서 문제가 발생해서 원인 찾기가 어려웠을 것
   ㅤ→ 미국시간 일요일 오전에 일이 발생했고, 게다가 CenturyLink/Level(3) 네트웍이 너무 크고 복잡해서
   - 어제 이 네트웍 장애로 LoL과 PSN,Xbox Live,Steam,WoW 등의 수 많은 온라인 게임 접속이 불가

   관련해서 League of Legends 프로 경기가 중단되서 대회 전용 서버가 아닌 일반 서버에서 진행됐습니다.
   [LCK PO 2R] 중단됐던 젠지 vs DRX, 라이브 서버에서 잔여 세트 진행 - http://www.inven.co.kr/webzine/news/?news=243826&site=lol

   으어 경기중이었으면 난감했겠네요.

   BGP는 안전한가요? https://news.hada.io/topic?id=1932
"
"https://news.hada.io/topic?id=2838","Database of Databases","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Database of Databases

   - CMU DB그룹이 관리하는 총 715개 DBMS들의 정보DB
   ㅤ→ 역사, 개발언어, 라이센스, 웹사이트, 호환가능 DB
   - 기능별로 상세한 지원 여부, 장단점 등을 정리
   ㅤ→ Checkpoint / 압축 / 인덱스 / FK / 조인 / 뷰 / 로깅 / 스토어드 프로시져
   ㅤ→ 데이터 모델 / 시스템 아키텍쳐
   ㅤ→ Query : 컴파일 / 실행 / 인터페이스
   ㅤ→ Storage : 아키텍쳐 / 모델 /
   - 분야별 리더보드
   ㅤ→ 국가, 라이센스, 프로그래밍 언어, 호환성, 임베딩, 파생된 DB들
"
"https://news.hada.io/topic?id=2812","GitHub Profile Trophy -  Readme에 동적으로 생성 된 GitHub 트로피 추가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        GitHub Profile Trophy - Readme에 동적으로 생성 된 GitHub 트로피 추가
"
"https://news.hada.io/topic?id=2771","사람들은 구글 검색을 어떻게 사용하는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         사람들은 구글 검색을 어떻게 사용하는가

   1801명 대상의 구글 검색 사용시 행동 조사 결과
   1. 검색어 자동완성 사용율은 23%
   2. 50%의 사용자가 9초 내에 결과를 클릭. 클릭에 걸리는 시간은 평균 14.6초
   3. 9%의 사용자만 첫페이지 마지막까지 내려감
   4. 15%의 사용자만 자신의 첫 검색어를 수정
   5. 17%의 사용자가 다시 결과창으로 돌아옴. 5% 사용자만 같은 쿼리에 대해 여러번 돌아옴
   6. 59%의 사용자가 검색에 대해 한개의 페이지만 방문. 6% 정도만 답을 찾기위해 4개 이상의 페이지 방문
   7. 65%의 사용자가 10개의 Blue Link(광고가 아닌 오거닉 검색 결과 링크) 중 하나를 클릭
   8. 19%의 사용자가 구글 광고를 클릭 (쿼리에 따라 다름)
   9. 지역검색에 대해서는 42%의 사용자가 구글지도 에 있는 결과를 클릭
   10. 제품을 검색하는 사용자의 19%가 구글 쇼핑 결과를 클릭
   11. 평균적으로 3%정도의 사용자만 ""People Also Ask(관련 질문)"" 박스안의 내용을 사용
   12. 44%의 사용자만 두번째 검색결과 페이지로 감
   13. 평균적으로 검색 세션은 약 76초. 모든 검색 세션의 절반은 53초 안에 끝남
"
"https://news.hada.io/topic?id=2758","오픈 소스 어플리케이션의 아키텍쳐","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           오픈 소스 어플리케이션의 아키텍쳐

   건축가들은 수천개의 건물을 보고, 거장들이 만든 건물에 대한 비평들을 연구하는데요. 대다수의 소프트웨어 개발자들은 대게 직접 작성한 코드만 잘 알고, 역사적으로 위대한 프로그램들을 연구하지 않는다는 문제의식을 가지고 만든 페이지입니다. 그래서 그 분야의 전문가가 유명한 오픈 소스 어플리케이션을 하나씩 맡아 왜 이런 설계를 했는지 설명하였습니다.
   대표적으로 Git, CMake, nginx, PyPy, GDB등 가장 유명한 오픈소스 프로젝트들을 다수 분석했으며. 각각의 항목을 누르셔서 웹 페이지에서 바로 보실 수 있습니다. 또한 종이책이나 PDF등으로 구매할 수 있습니다.

   아래는 소개글의 전문입니다.
   ---
   건축가들은 훈련하는 동안 수 천개의 건물들을 보고, 거장들이 만든 건물에 대한 비평들을 연구합니다. 대조적으로 대부분의 소프트웨어 개발자들은 소수의 대형 프로그램 ( 일반적으로 직접 작성한 프로그램 ) 만 잘 알고, 역사의 위대한 프로그램을 연구하지 않습니다. 결과적으로, 그들은 서로의 성공을 쌓기 보다는 서로의 실수를 반복합니다.
   우리의 목표는 그걸 바꾸는 것입니다. 이 두 권의 책에서 40개의 오픈 소스 애플리케이션의 저자들은 소프트웨어가 어떻게 구성되었는지와 그 이유를 설명합니다. 각 프로그램의 주요 구성 요소는 무엇일까요? 그들은 어떻게 상호 작용할까요? 그리고 그들의 아키텍쳐는 개발 과정에서 무엇을 배웠을까요? 이런 질문에 답하면서, 이 책의 기고자들은 자신의 생각에 대한 독특한 통찰력을 제공합니다.
   주니어 개발자이고 경험이 많은 동료들이 어떻게 생각하는지 배우고 싶다면 이 책들로 시작하기 좋습니다. 중급 또는 시니어 개발자이며, 다른 사람들이 어려운 디자인 문제를 어떻게 해결했는지 확인하려는 경우 이 책이 도움이 될 수 있습니다.

   1권은 번역서도 있답니다~
   http://aladin.kr/p/pG2qJ

   이 글을 보고 나서 생각난건데, 코드나 한 프로젝트의 아키텍쳐 리뷰만 올릴 수 있는 사이트가 있으면 좋을 것 같네요.

   처음으로 나오는 글은 '500라인, 혹은 더 적게' 라는 글인데요. 이 글들은 아키텍쳐와는 상관없지만, 500라인 안으로 웹서버나, DB나, 코드 하이라이트 같은 흥미로운 걸 만들 수 있는 글들입니다.
   밑에는 본문의 내용인 오픈 소스 어플리케이션의 아키텍쳐가 나와있고, 볼륨 2개로 나눠져 있습니다. 모든 내용은 웹 페이지에서 제한없이 엑세스 할 수 있고. 만약 책으로 가지고 싶으시다거나, 돈으로 후원을 해주시고 싶으시면 PDF나 책을 구매할 수 있습니다.
   구매 페이지의 특징은 '여기서 사면 우리는 얼마를 받을 수 있어'라는 걸 상세하게 적었다는 건데요. 독특한 것 같습니다.
"
"https://news.hada.io/topic?id=2727","ARWES - Sci-Fi & Cyberpunk GUI 웹 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ARWES - Sci-Fi & Cyberpunk GUI 웹 프레임워크

   - SF영화에서 보던 UI를 웹에서 구현
   - React 컴포넌트 기반
   - JSS로 스타일링, react-transition-group 으로 애니메이션, Howler로 사운드 처리

   문득 2000년대에 플래시가 한창 유행할 무렵 플래시 기반으로 이런 종류의 디자인을 구현한 웹사이트들이 좀 있었던 게 기억나는군요.

   이걸 이용해서 구현한 사이트 중 하나 https://soulextract.com/

   문득 2000년대에 플래시가 한창 유행할 무렵 플래시 기반으로 이런 종류의 디자인을 구현한 웹사이트들이 좀 있었던 게 기억나는군요.
   (여기에다 달려던 댓글인데 위에 잘못 달았네요;;;)
"
"https://news.hada.io/topic?id=2808","구글, 안드로이드 11 공식 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          구글, 안드로이드 11 공식 릴리즈

   - 픽셀 시리즈 및 샤오미,원플러스 등 일부 폰 부터 적용
   - 대화 알림 개선, 멀티태스킹용 버블 지원
   - 오디오/비이오 제어용 미디어 콘트롤 기능
   - 외부 기기 제어 가능
   - 개인정보 보호 관련 많은 변경
   ㅤ→ 일회성 권한 제공
   ㅤ→ 백그라운드 위치정보 접근 별도의 권한 요청 필요 및 구글의 승인 필요
   ㅤ→ 몇 달동안 사용하지 않은 앱 자동 권한 초기화
   - 5G 네트웍 표시 지원
   - 수신전화 차단(Call Screening) 관련 개선
   - 앱/게임을 위한 가변 Refresh Rate 지원
"
"https://news.hada.io/topic?id=2823","웹크롤링시 Bot검사를 피하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          웹크롤링시 Bot검사를 피하는 방법

   Selenium 기준이지만 다른곳에도 적용 가능
   1. Navigator.Webdriver 플래그 제거
   2. ChromeDriver / GeckoDriver 에서 특정 문자열 제거
   3. 해상도,User-Agent 등 변경
   4. 실제 URL 플로우 사용. 보이지 않는 링크 방문 회피
   5. Proxy를 이용해서 IP 변경
   6. 랜덤 지연값 사용
   7. 헤드리스 브라우저를 사용하지 말 것(Notification Permission 을 체크해서 확인)

   1 번의 경우 Puppeteer 에서는 true/false 세팅만으로는 봇으로 디텍트 되는 곳이 있어서
   아예 아래처럼 속성을 지우는게 좋다고
   const newProto = navigator.__proto__;
   delete newProto.webdriver;
   navigator.__proto__ = newProto;

   That's a good point :) I replaced the code
"
"https://news.hada.io/topic?id=2809","ARM, 첫번째 64bit 리얼타임 프로세서 Cortex-R82 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ARM, 첫번째 64bit 리얼타임 프로세서 Cortex-R82 발표

   - 5G 장비나, HDD/SSD 컨트롤러 등이 타겟
   - 기존 제품에 비해 2배 이상의 성능 향상
   Cortex-A : 어플리케이션 실행 성능 중점. 모바일에서 많이 쓰이는 프로세서
   Cortex-R : 실시간용 프로세서. A 프로세서와의 차이는 반응 속도가 예측 가능해서 신뢰할수 있다는 것.
   ㅤ→ 예를 들어, A 프로세서의 인터럽트 레이턴시가 50~1000 사이클 정도에서 일어난다고 할 때,
   ㅤㅤR의 인터럽트 레이턴시는 40 사이클 이하로 고정된다는 것.
   ㅤㅤ이를 통해서 캐쉬에 대한 세밀한 관리가 가능해지므로 성능이 향상될 것을 기대
   Cortex-M : 마이크로컨트롤러용 프로세서
"
"https://news.hada.io/topic?id=2715","에디큐 to 제프베조스 : 아마존 프라임 비디오 앱 수수료는 15%로 합시다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               에디큐 to 제프베조스 : 아마존 프라임 비디오 앱 수수료는 15%로 합시다

   이번에 공개된 메일 내용 전문
   - iOS 와 AppleTV 의 아마존 프라임 비디오 앱 대상
   - 신규 가입자에 대해서만 15% 매출 분배 (기존 가입자는 안함)
   - 비디오 콘텐츠의 메타데이터는 Siri 와 스팟라이트 검색에 제공
   - Siri 에서 ""Watch [showname]"" 으로 명령 지원
   - Showtime 등의 서비스를 프라임내에서 가입할 경우에도 업셀 가능(15%만 내면 됨)

   뒤로는 이렇게 따로 계약하면서 모든 개발자를 동등하게 대우한다고 말하고 있었내요.

   이 메일 내용이 공개되면서, 이거 기반으로 자신들의 수수료도 내려달라는 요청들이 나오는 중
   그중 한 예가 DCN ( Digital Content Next) 이 팀 쿡에게 보낸 메일
   → AP,BBC,CNBC,Conde Nast,Disney,ESPN,Fox,FT 등 대부분의 디지털 미디어 컨텐츠를 다루는 회사들이 모인 단체
   https://digitalcontentnext.org/wp-content/uploads/…
"
"https://news.hada.io/topic?id=2806","페이스북이 SQL을 가속하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           페이스북이 SQL을 가속하는 방법

   - Presto를 큰 규모로 사용중 : 4만대 서버, 매일 ~1 ExaByte 데이터 스캔, 80% 이상이 새로운 ETL
   ㅤ→ Compute 와 Storage의 분리
   - Presto는 잘 동작했지만 더 빠른 쿼리(1초 이하)를 위해 Raptor를 개발
   ㅤ→ 로컬 SSD에 캐슁, 파일단위 메타스토어
   ㅤ→ 다시 Compute 와 Storage가 결합됨 → 스케일링 및 관리가 어려워짐
   - 작년 가을부터 Alluxio를 수정한 Raptor 대체제를 개발 시작 : Alluxio Local Cache
   ㅤ→ Raptor와 비슷한 성능이지만 로컬 SSD에 캐쉬할 필요 없음
   ㅤ→ Alluxio는 가상 분산 파일 시스템으로 여러 계산엔진을 여러개의 스토리지에 메모리 기반으로 연결해주는 중간 다리
   - Alluxio Local Cache
   ㅤ→ 2.2버전부터 공식 릴리즈에 포함
   ㅤ→ 전체 Alluxio를 사용할 필요없이 Presto Server JVM안에 임베딩 가능한 라이브러리
   - 페이스북 전체 Presto fleet에 Raptor 를 거의 걷어내고 Alluxio Local Cache를 설치
   ㅤ→ 페이스북 데이터들은 ORC 파일포맷으로 HDFS 인터페이스를 통해 접근 가능
   ㅤ→ 로컬 SSD도 사용하지만, 캐쉬에 없으면 원격 저장소도 접근 가능
   ㅤ→ Presto 에 30%~50% 정도의 성능 향상
   ㅤ→ Raptor 대비 원격 저장소 접근이 57% 감소
   ㅤ→ Alluxio Cache의 히트율은 90% 이상
   ㅤ→ 6개월안에 Raptor는 모두 제거 예정
"
"https://news.hada.io/topic?id=2751","ActivityWatch - 나는 하루 종일 무슨 일을 할까","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ActivityWatch - 나는 하루 종일 무슨 일을 할까

   - 내가 컴/폰에서 어떤 행동을 하는지 모두 기록하는 트래커
   - 오픈소스, 보안 우선, 크로스 플랫폼(윈/맥/리눅스/안드로이드)
   ㅤ→ 어떤 앱을 얼마나 언제 사용하는지 (앱/타이틀)
   ㅤ→ 브라우저 확장으로 웹에서 뭘 하는지 (자주 가는 도메인)
   ㅤ→ 에디터 워쳐로 코딩을 얼마나 하는지
   ㅤ→ 카테고리별로 사용을 분류
   - 사용 용도
   ㅤ→ 생산성 모니터링
   ㅤ→ 워라밸 측정
   ㅤ→ 디지털 라이프 로깅

   설치해두고 아무생각없이 컴터 쓰다가 Activity 창 열어보면 깜짝 놀라곤 합니다.
   Chrome 을 Work 카테고리에 넣어두니 편안..

   설치합니다
"
"https://news.hada.io/topic?id=2835","fastmac - 무료로 MacOS 나 Linux 쉘 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   fastmac - 무료로 MacOS 나 Linux 쉘 사용하기

   - GitHub Actions가 맥/리눅스 머신으로 빌드 하는걸 이용해서 해당 쉘에 접속
   - Repo를 복사한후 Workflow를 실행하면 Web 또는 SSH로 접근 가능한 URL이 생성
   - 그 주소에 접속하면 Brew가 설치된 쉘에 접속이 가능해짐
   - 해당 Repo 안의 코드를 테스트하거나 빌드하는게 아니면 GitHub ToS 위반이 되기 때문에 주의 필요
"
"https://news.hada.io/topic?id=2822","OpenAI, GPT-3 API 가격 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        OpenAI, GPT-3 API 가격 공개

   - 무료는 10만개 토큰까지만 (첫 3달안에 써야하며 다 쓰면 끝)
   - 유료는 2백만개 토큰당 $100. 추가 1K 토큰마다 8센트. (천만단위로 가면 20% 할인)
   - 2백만 토큰은 텍스트 3,000페이지 분량
   - 10월 1일부터 적용
   - 가격이 예상외로 비싸서 재미삼아 운용하기는 어려울 것 이라고

   열린 AI의 닫힌 가격이네요; ㅠㅜ

   OpenAI의 GPT-3 는 비트코인 이후 가장 위대한 것 https://news.hada.io/topic?id=2484
   GPT-3는 어떻게 동작하는가 https://news.hada.io/topic?id=2546
   Awesome GPT-3 https://news.hada.io/topic?id=2541
"
"https://news.hada.io/topic?id=2718","Asanasana IPO S-1

   프로젝트 관리 협업도구 Asana의 상장 서류
   - 190개국, 7.5만개 회사, 120만명 유료고객, 320만 무료 계정
   - 매출 : 2019 $76.8M → 2020 $142.6M (86% 성장)
   ㅤ→ 2019년 $50.9M 적자, 2020년 $118.6M 적자
   - 프로젝트 관리 및 협업도구 시장규모 : 2020년 $23B, 2023년 $32B 예상
   - 성장 전략 : 더 많은 고객, 기존 고객내에서의 확대, 제품 혁신, 조직 일부에서 전체가 사용하도록 유스케이스 확장

   VC의 분석글
   Asana S-1 Analysis - Comparing One Productivity Powerhouse to Another
   https://tomtunguz.com/asana-s-1/

   잘 아는 회사들이 여러개 동시에 IPO 서류를 제출해서 관련 뉴스가 많아졌네요 ;)
   근데 Asana 는 예상외로 적자폭이 넘 크네요. 2019년 과 2020년을 비교해보면
   - R&D : $42M -> $89M 으로 R&D 비용이 매출 대비 더 크게 늘어버려서 전체 매출의 60%가 넘는돈이 R&D네요
   - 세일즈&마케팅 : $52M → $105M 역시 두배가량 늘었는데 매출은 두배보다 못하게 늘어버려서 왠지 아쉬운데..
   경쟁제품인 JIRA를 만드는 Atlassian 이 상장전에도 이미 수익이 나면서, R&D비용이 40% 이하였던거에 비하면 뭔가 많이 대조가 됩니다. 성장에 집중해야 하는 후발주자라 더 공격적으로 해야 하는 걸까요.
"
"https://news.hada.io/topic?id=2768","사용자 암호 변경용 well-known URL 추가하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     사용자 암호 변경용 well-known URL 추가하기

   - 패스워드 관리자등 사용시, 암호에 대한 변경요청을 할 때 편하게 보낼수 있는 URL을 추가하기
   ㅤ→ /.well-known/change-password 를 서비스의 암호요청 페이지로 redirect(302,303,307 등 HTTP코드 사용)
   - 암호 변경 페이지를 좀 더 쓰기 쉽게
   ㅤ→ 기존 암호 필드에 autocomplete=""current-password"" 를 추가 : 패스워드 관리자가 현재 암호를 자동으로 채우게
   ㅤ→ 신규 암호 필드에는 autocomplete=""new-password"" 를 추가 : 패스워드 관리자가 새로운 암호를 제안
   - 이 스펙은 Draft 제안 상태이지만, Safari 13이 이 스펙을 지원(제안자가 애플소속)
   - 이미 구글,깃헙,페이스북,트위터,워드프레스 사이트는 이 URL을 지원하고 있음

   /.well-known/change-password
   구글 비번 관리자에서 위험 진단 후 '비밀번호 변경' 링크에 이용되는 중.

   긱뉴스도 이미 지원합니다! ^_^
"
"https://news.hada.io/topic?id=2776","5G NSA 네트워크 살펴보기 (아마추어편)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        5G NSA 네트워크 살펴보기 (아마추어편)
"
"https://news.hada.io/topic?id=2839","GoodUI Leaks - 유명 회사들의 A/B 테스트 내역 모음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  GoodUI Leaks - 유명 회사들의 A/B 테스트 내역 모음

   - Netflix, Google, Amaqzon, Airbnb, Etsy, Booking 등 회사가 실제로 어떤 항목들로 A/B 테스트를 진행했는지 모아 놓은 사이트
   - A/B 화면을 비교해서 보여주고
   ㅤ→ 세부적으로 뭘 테스트 한건지 설명
   ㅤ→ 그 이후 연관되어 시행된 A/B 테스트들
   ㅤ→ 실제 선택 결과는 무엇인지 표시
"
"https://news.hada.io/topic?id=2719","댓글 달기 전에 먼저 글을 읽어주세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          댓글 달기 전에 먼저 글을 읽어주세요

   트위터에서 한 논문이 화제가 되었었는데요. 머신 러닝으로 단어를 정렬하여 단어의 의미에 대한 문화적 영향을 연구한 논문이었습니다. 대부분 사람들은 이걸 디지털 쇼비니즘이냐면서, 왜 엔지니어들은 이미 있는 걸 발견해놓고 '인류학'을 새로운 발견인지 떠드는 지 이해가 안 된다는 둥, 비꼬는 의견이 주류였습니다.
   하지만 해당 논문의 ""엔지니어 친구""는 오직 3명 중 1명이었고. 나머지 두명은 인류 학자와 언어학 교수였습니다. 그러니까 트위터로 비난한 사람들 대부분은 논문의 첫장도 안 읽고, 연구자 이록도 읽어보지 않은체로 비난한 것이었습니다.
   해커뉴스에서 최다 추천을 받은 이 글은 이 문제로 시작하며, 이게 한번 읽어난 일도 아니고, 인용할 때마다 일어나는 일이기도 하고, 게다가 주장하고 판단할 떄조차 '원문은 한 번도 안 읽어 보며' 말하는 걸 문제 삼으며. 거기에 대한 상세한 문제를 써놓았습니다.
   이 글의 원문의 중요성을 강조하는 취지 처럼 이 글의 전문을 읽는 것을 추천드립니다.
"
"https://news.hada.io/topic?id=2840","Tiktok의 추천 알고리즘 동작방식","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Tiktok의 추천 알고리즘 동작방식

   - 보여줄 다음 영상을 선정하는게 몇년만에 200조 회사를 만든 주요 요소중 하나
   - 기본적으로 머신러닝으로 선호도가 유사한 사람들이 좋아하거나 또는 그 것들과 비슷한 영상을 찾은 후, 사용자가 참여할 가능성이 높은 컨텐츠를 더 많이 보여줌
   ㅤ→ 처음 틱톡 사용시 각각 다른 트렌드,음악,주제의 8개 비디오를 보여줌
   ㅤ→ 그 다음엔 8개 중에서 사용자가 어떤 비디오에 반응 하는지에 따라 새로운 8개의 비디오를 선택
   ㅤ→ 알고리즘은 자막,해쉬태그,소리 등의 정보를 이용해서 비슷한 비디오를 인식
   ㅤ→ 추천은 사용자의 언어,국가,기기 정보등도 고려
   ㅤ→ 이렇게 해서 사용자에 대해 충분한 데이터가 모이면, 취향이 비슷한 사용자들과 클러스터로 분류
   ㅤ→ 또한 비디오들도 클러스터로 분류 ( 농구, 토끼 같은 식)
   ㅤ→ 머신러닝으로 사용자 클러스터 와 콘텐츠 클러스터간의 근접도를 기반으로 비디오를 제공
   ㅤ→ 한 사용자가 (지겹지 않도록) 같은 음악/같은 창작자의 영상을 여러번 보는 것을 피하도록 함
   - 틱톡은 사용자 선호도를 파악하는 요소 덕분에 ""필터 버블*""이 생길수 있다는 것을 알고 있음
   ㅤ→ 필터 버블 연구를 통해서 얼마나 지속되고 어떻게 깨뜨리는지 등을 연구중
   ㅤ→ 필터 버블은 음모 이론 이나 사기, 잘못된 정보를 강화할수 있기 때문에
   ㅤㅤ틱톡의 제품 및 정책팀은 비디오의 테마/해쉬태그/캡션 등을 연구해서 어떤 계정과 비디오가 잘못된 정보에 연결되는지를 연구
   ㅤ→ 잘못된 정보에 링크된 동영상 이나 제작자는 틱톡의 글로벌 콘텐츠 리뷰어에게 전달되어 사용자에게 동영상이 배포되기 전에 관리 가능
   * 필터 버블(filter bubble) : 개인화된 검색의 결과로, 자신의 성향과 비슷한 것만 보게 되면서
   자신의 관점에 동의하지 않는 정보로부터 분리됨으로써 자신만의 문화적, 이념적 거품에 가둬져서 편협한 사고를 가지게 되는 왜곡현상
   - 2012년 엘리 프레이저의 책 The Filter Bubble(번역서 제목은 ""생각 조종자들"")

   틱톡을 MS에는 안팔겠다고 ByteDance가 확실히 거절 의사를 밝혔어요
   https://blogs.microsoft.com/blog/2020/…
   그래서 오라클이 틱톡 US의 인수대상자가 되었다는 얘기가 돌고 있네요.
   그리고 만약 인수되더라도 이 알고리즘 자체는 넘기지 않겠다고 얘기가 나오고 있습니다.
   https://engadget.com/bytedance-might-not-sell-tiktok-algorithm-to-us-b…
"
"https://news.hada.io/topic?id=2732","도메인 소유자가 죽었을 때 도메인에 일어나는 일","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       도메인 소유자가 죽었을 때 도메인에 일어나는 일

   - 도메인 소유자들이 불시에 세상을 뜨게되면, 적절한 조치가 없다면 도메인은 만료되고나서 경매에 넘어감
   ㅤ→ Igal Lichtman의 경우는 $75K 정도에 팔 수 있었던 도메인들이 가족에게 가지 않고 만료되어 경매로
   ㅤ→ Jane Both가 소유한 블록체인 도메인 100여개 역시 경매로
   - 도메인은 디지털 자산처럼 관리해야함
   ㅤ→ GoDaddy 같은 경우는 사망시 액세스 권한 이전을 위한 절차들이 별도로 존재
   ㅤ→ 다른 레지스트라 들도 비슷한 절차가 있음
   ( 구글 도메인 같은 경우는 공동관리자를 추가해두는 기능이 있어서 이런 용도로 사용가능 하겠네요. )

   한국에도 있으면 좋을 것 같네요

   이 글을 작성한 Kubera 는 디지털 자산관리 서비스 회사 입니다. https://www.kubera.com/
   ( 그러니까 이 글은 사실 자신들의 서비스를 홍보하는 거죠. 근데 나름 정보가 될 듯해서 올려봅니다. )
   Kubera는 은행,주식,펀드,부동산,암호화폐,도메인,엔젤투자내역,수집품 등을 한눈에 볼수 있게 관리해주는 서비스에요.
   재미난건 Beneficiary (수혜자) 설정입니다.
   https://kubera.com/blog/…
   1. 45일간 서비스에 접속을 안한다면 특정 이메일/전화번호로 알림 전송
   2. 알림받고도 2일안에 접속을 하지 않으면, 자산 포트폴리오를 수혜자에게 발송
   3. 이 알림을 5번이상 받고도 답변 하지 않으면 자신이 믿을 만한 다른 사람에게 이걸 전송
   이런 기능을 통해서 말하자면 디지털 유언장을 작성해 두는 거라고 볼수 있겠네요.
   구글의 경우는 ""휴면계정 관리자"" 기능을 통해서 위와 비슷한 설정이 가능합니다.
   https://myaccount.google.com/inactive
   - 3개월동안 사용하지 않으면 연락할 곳
   - 휴면상태가 되었을때 10개 까지의 알림을 보낼 사용자 선정
   - Gmail이 휴면되었을 경우 자동응답 메일
   - 휴면시 계정 및 콘텐츠 삭제 여부
"
"https://news.hada.io/topic?id=2825","페이스북, 페이지당 광고 한도 시행 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         페이스북, 페이지당 광고 한도 시행 예정

   - 머신러닝으로 각 광고를 최적화 할수 있게, 광고 갯수를 늘리는 것 보다 동적광고로 개인화 하는 것을 추천
   - 이를 위해 내년 2월부터 페이지 규모에 따라 광고 수를 제한
   ㅤ→ 지난 12개월중 가장 광고비용이 많은 달기준 $100K(1억2천만원) 이하인 경우 250개로 제한
   ㅤ→ 100만달러 1,000개. 1000만달러 5,000개. 그 이상 20,000개
"
"https://news.hada.io/topic?id=2811","왜 나는 원본 사이트 대신 WayBackMachine을 링크하는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  왜 나는 원본 사이트 대신 WayBackMachine을 링크하는가

   기사를 요약하자면 아래와 같습니다.
   -
   참조를 위해 링크를 걸어 놓으면, 웹의 특성상 그 때 봤던 컨텐츠와 몇 년후 보는 컨텐츠가 일치하는지 확신할 수 없습니다. 특히 아래 문제들이 발생할 문제들이 높습니다.
   * 404 / Not Found - 가장 흔하게 발생함
   * 변경되었거나, 편집되었거나, 완전히 대체된 콘텐츠.
   * 인기가 상승해 콘텐츠가 보호되어서 전체 기사를 읽기 위해 계정을 만들어야 하는 경우.
   그래서 저자는 아카이브 ( WayBackMachine )에 연결하는 게 불안정한 동적 웹 컨텐츠에 연결하는 것보다 더 신뢰할 수 있다고 말합니다. 저자는 예제로 2019년 2월 14일까지는 무료로 열람 가능했지만, 현재는 '저널리즘을 위해 돈을 내지 않으면 못 보는' 컨텐츠를 소개하며 왜 아카이브가 중요한지 역설합니다.
   특히 요즘 같은 시대에는 더 필요하다고 말하는데요. 요즘은 불안정한 시대이며, 특히 Covid 전염병과 고통스러운 금융 시장로 인하여 웹 사이트가 사라지거나, 광고가 늘어나거나, 사용자에게 글을 보는 대신 대가를 요구하는 일들이 발생하고 있습니다.
   이러한 문제로 콘텐츠 품질이 저하되는 걸 방지하려면 견고하고, 변하지 않는 정적 사본에 연결하는 것이 더 안정적이라는 기사입니다.

   그래도 원문을 링크하는게 원작자를 존중하는 행위인 것 같습니다.
   사라질 것 같은 컨텐츠는 archive.is 로 백업하고 있긴합니다.

   이거 관련해서 Wayback Machine 팀 관리자가 아래와 같은 말을 했습니다.
   https://news.ycombinator.com/item?id=24411324
   We suggest/encourage people link to original URLs but ALSO (as opposed to instead of) provide Wayback Machine URLs so that if/when the original URLs go bad (link rot) the archive URL is available, or to give people a way to compare the content associated with a given URL over time (content drift)
   가능하면 ""링크를 Wayback Machine으로 대체"" 하지 말고, ""원본과 웨이백머신 링크를 같이 제공""해서 혹시나 원본이 죽거나 했을 때, 또는 혹시나 변경된 내용을 같이 볼수 있도록 하는게 좋다고 합니다.

   몇가지 고민해야 할 문제가 있어보입니다. 이렇게 되면 원본 게시자에게 어떠한 트레픽도 가지 않고, 거기에 대한 존중이 필요하다는 의견도 있고요. 웹 사이트가 삭제되거나 루트가 변경되어서 찾을 수 없는 경우는 어쩔 수 없지만. 원본 게시물이 정상적으로 있는 상태에서 처음부터 링크를 거는 건 게시자에 대한 존중이 아니라고 생각되기도 하네요. 한편으로는 인터넷 세상에서는 잊혀지는 글이 사실상 불가능에 가깝다는 사실을 다시 한번 깨닫게 됩니다. 무섭네요.
   저는 한번 본 다음, Pocket에 고히 모셔놓습니다. 다만 Pocket은 클리핑이 잘 안 되는 사이트 몇개가 있어서 아쉽네요.

   본문 요약본 읽고 ""오 그렇구나!"" 했는데, 댓글 읽고 또 ""아.. 그렇구나"" 하고 갑니다.
   링크 두 개를 달고 원본에 접근이 불가능할 때 fallback으로 연결되면 좋겠네요.
"
"https://news.hada.io/topic?id=2804","구글, 전화 건 목적을 알려주는 Verified Calls 기능 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 구글, 전화 건 목적을 알려주는 Verified Calls 기능 출시

   - 안드로이드의 구글 폰(전화) 앱의 새 기능
   - 회사들이 고객에게 전화할 때 어떤 목적으로 걸었는지를 짧은 문장으로 화면에 표시
   - 함께 회사의 인증마크 및 로고를 보여줘서 피싱을 막는 용도로도 사용
   - 기존에 서비스하던 Verified SMS를 전화로 확장한 것

   출시 대상국이 안 나와있고 파트너사들만 나와있는데,
   Verified SMS 의 출시국이 미국,인도,멕시코,브라질,영국,프랑스,필리핀,스페인,캐나다
   정도여서, 아마도 국내하곤 좀 먼 얘기 일수도..
"
"https://news.hada.io/topic?id=2792","하루를 대하는 14년차 개발자의 자세","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          하루를 대하는 14년차 개발자의 자세

   하고싶은 것을 모두 하기에는 하루 24시간은 부족하기만 합니다.
   14년차 개발자가 하루를 어떻게 보내는지 정리했습니다.

   효율보다 지속에 더 무게를 두는 것이 좋은 효과가 나오더라구요. 좋은 글 잘 읽었습니다.

   감사합니다. :)

   전 올해들어 아침에 1시간정도 운동을 하면서 2배속으로 팟캐스트를 듣기 시작했는데요.
   운동할때는 시각상관없이 소리에만 집중하게 되니까 2배속으로도 들을만 하더군요.
   이게 습관이 되면, 뭔가 시간을 압축해서 쓰는 효과가 있다보니 하루종일 그것만으로도 기분이 상쾌합니다.

   요즘은 이북 TTS 도 꽤 좋아져서 운동중에 책을 들어도 좋은것 같습니다.

   저는 이슈가 없으면 취미생활이던 일이던 죽어도 안 하는 습관이 있어서 스스로 기억날 때마다 제 개인 Notion에 이슈를 발행하고 있습니다.
   제목이랑 태그만 달고 내용은 실제로 그 내용을 하면서 적고요. 거기에 모든 이슈를 볼 수 있는 마스터 캘린더를 만들어서 할 일을 관리하고 있어요.
   다만 이렇게 하니까 올려주신 글과 처럼 하루마다 루틴을 세우기는 힘들고, 이슈가 크게 한 덩어리로 몇 일에 걸쳐져 있다보니까. 우선순위 급한 것만 계속하게 되어서 결국 개발만 계속 하게 되어서 책 읽기나 글쓰기는 예상 일정과 점점 멀어지더라고요.
   올려주신 경험을 토대로 몇 개 고쳐봐야겠습니다. ㅎㅎ 좋은 경험 공유해주셔서 감사합니다!

   저도 해야할 것 부터 정해 놓으면 늘 하던 것만 하게 되었던 것 같습니다.
   우선순위는 항상 동일할테니까요.
   도움이 되었으면 좋겠습니다. :)
"
"https://news.hada.io/topic?id=2750","오픈소스를 비즈니스화 하는 법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            오픈소스를 비즈니스화 하는 법

   클라우드 서비스들이 오픈소스를 가져다 ""as a service""로 만들면서 아무런 비용도 내지 않는 상황에 최근 오픈소스들이 라이센스 변경 또는 배포 모델을 변경하는 방식으로 대응 중.
   이에 대한 Chef 전 CTO의 비즈니스화 방법 조언
   Elastic은 코드를 덜 오픈소스화 하는 방식으로 바꿔서 일부 컴포넌트가 독점이고, 이를 분리하기는 까다로움 ⇨ Open Core 모델
   Chef 는 완전히 오픈이지만, Chef 이름을 트레이드 마크화 하고 그거는 못쓰게 변경 ⇨ Redhat 모델
   ㅤ→ Chef는 기존 Open Core 모델에서 RedHat 으로 바꾼 것
   Chef의 CTO였던 Adam Jacob의 조언은 오픈 코어보다 RedHat 모델이 훨씬 좋다는 것
   ( Chef에 한해서 일수도 있음. 그리고 그는 저 라이센스 모델 변경전에 퇴사했음 )
   1) 100% 오픈소스 코드 기반의 제품을 만들 것
   ㅤ→ 이렇게 하면 회사가 해당 오픈소스 코드 커뮤니티의 일부가 됨.
   ㅤ→ 오픈코어 방식에서는 기존 커뮤니티 위에 있게 되고, 커뮤니티에서 도움받기는 어려워짐
   ㅤ→ Adam은 13년동안 왜 상용버전의 Chef가 오픈소스 버전가 다른지를 설명해야 했음. RedHat 모델 에서는 그게 필요없음
   2) 트레이드 마크로 등록하고 그 제품의 유일한 배포자가 될것. 비즈니스도 다 내꺼
   ㅤ→ 이것은 Supply Chain을 회사가 가지게 된다는 것
   ㅤ→ Supply Chain : 소스 버전관리, 커밋, QA, 빌드 파이프라인, 자료 호스팅, 마케팅, 영업팀 등등
   ㅤ→ 즉 코드를 뺀 나머지 모든 노력을 회사가 하고 가치를 부여함
   3) 대체 배포본을 만드는 사람들을 격려하고 협업 할 것
   ㅤ→ 이것이 건강한 커뮤니티를 만듬

   하지만... cent os가 등장하면 어떨까요?

   아마존이 MySQL,MongoDB,Elastic Search 등을 가져다 서비스로 만들면서 이슈가 되어서 아래처럼 라이선스 변경도 이루어지고 있습니다.
   ㅤ→ CockroachDB 라이센스 변경 - 오픈소스지만 상업화는 안됨 https://news.hada.io/topic?id=7
   ㅤ→ Sentry, BSL(Business Source License)로 오픈소스 라이센스 변경 https://news.hada.io/topic?id=870
   드롭박스가 Nginx 에서 Envoy 로 전환한 이유 https://news.hada.io/topic?id=2625
   위 글에서도 보면 Adam의 1)번 조언처럼 Nginx 는 오픈코어 모델, Envoy 는 완전한 오픈모델이어서 기여하기가 더 자유로웠다는 얘기를 해요.
"
"https://news.hada.io/topic?id=2722","크로미움 팀, 브라우저에서 TCP/UDP 직접 접속 가능한 Direct Sockets API 제안","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         크로미움 팀, 브라우저에서 TCP/UDP 직접 접속 가능한 Direct Sockets API 제안

   - 기존 웹소켓,RTC와는 다른 수준의 네트워킹 능력을 제공
   - ""WebUSB, WebMIDI, WebBlueTooth 처럼 웹앱들이 로컬 기기 또는 정보시스템에 접근할수 있게 될 것""
   - SSH, RDP, IRC를 비롯 프린터, 산업용 기계장비, 레거시 시스템등에 접속 가능
   - 보안에 대한 우려가 많아서 토론이 진행중

   웹소켓으로도 악용사례가 많았는데, 다이렉트 소켓이 열리면...
   왜 웹 사이트가 내 포트를 스캔하는거야? - https://news.hada.io/topic?id=2126
   Websocket 으로 정보 훔치기 - https://news.hada.io/topic?id=2127
"
"https://news.hada.io/topic?id=2745","Azure Functions에서 Puppeteer/PlayWright 호출 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Azure Functions에서 Puppeteer/PlayWright 호출 하기

   - 최근 디펜던시 추가로 서버리스에서도 Puppeteer/PlayWright가 편하게 호출 가능해짐
   ㅤ→ 기존엔 프리미엄 플랜에서 커스텀 도커이미지를 써야 했음
   ㅤ→ 이제 npm install 만으로 사용가능
   - 배포할때는 VS Code for Remote Build 등으로 편하게 배포 가능

   AWS Lambda 나 Google Cloud Functions 에서는 chrome-aws-lambda 같은거를 썼었는데 이제 Azure 쪽은 훨씬 편해졌네요.
   - https://github.com/alixaxel/chrome-aws-lambda

   Google Cloud Functions에서 `npm install --save puppeteer` 설치로 사용하게 된 지 좀 되었습니다. 지금은 문서가 사라졌지만 2018년 8월에 발표를 했었거든요. 제가 작년 초에 게시판 키워드 검색과 소프트웨어 가격 변동용으로 하나 만들어서 사용중이라 ㅎㅎ

   오홍 제가 구글쪽은 안써서 몰랐네요. 감사!
"
"https://news.hada.io/topic?id=2836","regular-table - 비동기, 가상화 데이터 모델을 사용한 테이블 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             regular-table - 비동기, 가상화 데이터 모델을 사용한 테이블 라이브러리

   - 일반적인 태그 사용
   - 고성능 렌더링
   - 비동기적인 데이터 모델
   - 일반적인 CSS 스타일 적용가능
   - 작고(JS 기준 약 20kb), 의존성이 없음

   Custom Element(shadow dom)기반으로 작성되서 vue나 React, Svelte 등 프레임워크에 종속되지 않고 사용할 수 있는 점이 매력적이네요.

   저도 그 점이 매력적이더라고요.
"
"https://news.hada.io/topic?id=2829","How to give access to AWS resources without creating 100s of IAM Users?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                How to give access to AWS resources without creating 100s of IAM Users?
"
"https://news.hada.io/topic?id=2813","Habitica - 게임으로 습관만들기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Habitica - 게임으로 습관만들기

   - 삶을 Gamification 해서, 습관을 만들고 생산성을 높이기
   ㅤ1. 매일 해야할 일/습관들을 수행하면 보상을 받아서 아이템을 얻음
   ㅤ2. 성장한 캐릭터로 동료들과 파티를 이뤄 몬스터를 물리치기
   - 웹과 iOS/안드로이드 앱 지원
   - 파티/길드 시스템
   - 그룹단위 태스크 관리 가능
   - 자신만의 도전과제를 생성할 수 있고, 사람들과 공유 가능
"
"https://news.hada.io/topic?id=2729","암호화된 이메일을 쓰지 마세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            암호화된 이메일을 쓰지 마세요

   - PGP는 지나치게 쓰기 어렵고, 오래되었으며, 복잡하고, 안전하지 않음
   - 이메일은 기본적으로 암호화되어있지 않게 설계되었음.
   - 암호화된 이메일의 메타데이터는 암호화되지 않으며, 쉽게 알아낼 수 있음.
   - 종단간 암호화를 사용한다고 주장하는 이메일 서비스들은 같은 서비스를 사용하는 사용자끼리만 암호화되고, 키를 그들의 서버에 보관하고 있음.
   - 순방향 비밀성(Foward Secrecy)이 유지되지 않아서 한 번 키가 유출되면 모든 내용을 볼 수 있음.
   보안이 필요한 대화에서는 기본 종단간 암호화, 메타데이터 암호화, 순방향 비밀성이 보장되는 Signal이나 WhatsApp,Wire 같은 암호화된 메신저를 사용하는 것이 훨씬 더 나음.

   에드워드 스노든도 이메일 대신 Signal 사용한다고 밝힌적이 있습니다
   https://twitter.com/Snowden/status/1175437588129308672

   글에서 (일반인들이 쓰기 어렵지만) 대안으로 추천하는 다른 것들:
   파일 암호화 - age (https://github.com/FiloSottile/age)
   파일 전송 - magic-wormhole(https://github.com/warner/magic-wormhole)

   역시 Signal 이 최고군요. 믿을만 합니다 ㅎ

   PGP 암호화 메일이 포괄적으로 안전하지 않다는 게 새롭네요...
"
"https://news.hada.io/topic?id=2738","아마존, 피트니스 밴드 HALO 런칭","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          아마존, 피트니스 밴드 HALO 런칭

   - 스크린이 없는 형태의 팔찌 ($99) + 구독형 서비스 ($3.99/월)
   ㅤ→ 가속도계,온도센서,심박수 모니터,2개의 마이크,LED표시등,마이크 온/오프 버튼
   ㅤ→ 일주일 이상가는 배터리. 방수가능
   ㅤ→ 폰과 블루투스 통신. 알렉사 연동 없음.
   - Body & Tone
   ㅤ→ 스마트폰 카메라로 몸을 3D 스캔하여 체지방량을 측정
   ㅤㅤ→ 내 몸의 앞/뒤/양옆 을 찍은 사진을 아마존 서버에서 처리하여 3D스캔으로 만들어줌. 사진은 서버에서 삭제
   ㅤ→ 마이크로 음성톤을 감지하여 하루동안의 감정상태를 기록
   - 유산소 운동, 수면, 체지방 및 음성 톤을 추적
   ㅤ→ 명상, 수면습관 개선, 기본운동 등 건강습관을 개선하기 위한 실험실 기능을 제공
   - 현재는 Invite 온리 ( $64.99 )
"
"https://news.hada.io/topic?id=2753","넷플릭스, 비가입자용 무료 시청 페이지 오픈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        넷플릭스, 비가입자용 무료 시청 페이지 오픈

   - 가입 필요없이 광고를 보면 몇몇 넷플릭스 오리지널들을 감상 가능
   - 영화는 전체, 드라마는 시즌의 첫편
   - 30초 광고는 스킵 가능
   - 감상 가능: 기묘한 이야기, 엘리트들, 버드박스, 두 교황, 우리의 지구, 그레이스 앤 프랭키, 그들이 우리를 바라볼 때, 머더 미스터리, 보스베이비

   윈도우/맥/안드로이드 에서는 가능하고, iOS 브라우저는 지원 안됩니다.
"
"https://news.hada.io/topic?id=2827","AWS KMS usecase with Serverless Application Model (SAM): An end to end solution","                                                                                                                                                                                                                                                                                                                                                                                                                                                                            AWS KMS usecase with Serverless Application Model (SAM): An end to end solution
"
"https://news.hada.io/topic?id=2777","대규모 환경에서 레디스 캐시 성능을 높이기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        대규모 환경에서 레디스 캐시 성능을 높이기

   레디스(Redis)는 온라인 서비스의 캐싱에 널리 쓰이는 인메모리(In-Memory) 데이터베이스입니다. 하지만 잘못 사용할 경우 예상치 못한 문제가 생기거나 심지어 큰 장애가 발생할 수도 있죠. 제가 최근에 서점에 갔다가 우연히 모 기업의 SRE팀에서 일하는 현업 엔지니어와 만났는데, 대화 중에 그 분이 “레디스는 사실 필요악이다. 언젠가는 관련 장애가 한번쯤 터질 거라고 생각하면서 써야 한다.”고 말할 정도인 모양이더라고요.
   참고 - 카카오 ""레디스, 잘못쓰면 망한다"":
   https://zdnet.co.kr/view/?no=20131119174125
   참고 - 쿠팡 오류 원인은 오픈소스 '레디스 DB' 때문:
   http://www.digitaltoday.co.kr/news/articleView.html?idxno=212904
   이렇듯 레디스는 잘 알고 섬세하게 사용해야만 하는 물건입니다.
   서론이 길었습니다. NHN에서 RedisConf 2020의 발표 내용을 바탕으로 대규모 트래픽 환경에서 레디스를 캐시로 사용할 때 성능 이슈가 발생할 수 있는 부분을 3가지 지적하고, 그 해결법을 설명한 문서를 소개합니다. (한국어)
   * Cache Stampede: 캐시 공간은 한정되어 있으므로 저장된 데이터에 만료시간(TTL)을 정하는 것이 보통인데, 해당 데이터에 계속 읽기 요청이 들어오고 있을 때 캐시 만료시간이 닥치면 순간적으로 DB에 그 읽기 요청이 집중되고 그게 다시 레디스에 중복된 쓰기 요청으로 몰리게 됩니다. 이를 캐시 스탬피드(Cache Stampede)라 부르는데, 해결방법으로는 확률분포에 기반한 알고리즘으로 TTL값을 미리 갱신하거나 혹은 디바운스(Debounce, 여러 번 반복되는 이벤트 중 마지막 이벤트만 실행하기) 개념을 도입하는 방법이 있습니다.
   * Hot Keys: 하나의 키에 읽기가 집중될 때도 성능이 떨어질 수 있습니다. 위 글에서는 그 대책으로 키 이름 앞에 Prefix를 붙여 여러 복제본을 만든 뒤, 그 Prefix가 붙은 복제본에 랜덤으로 읽기를 분산시키는 방법을 소개하고 있습니다.
   * Compression: 크기가 큰 데이터를 레디스에 저장할 때도 성능 저하가 발생할 수 있습니다. 이때 적절한 압축을 적용하는 것만으로도 속도와 메모리 사용량에서 큰 이득을 볼 수 있습니다. 적절한 압축 방법과 비율은 상황과 환경에 따라 다를 수 있기 때문에, 이를 적용할 때는 사용 환경을 재현한 벤치마크 테스트가 필수입니다.

   참고 - 위에서 언급된 확률분포 기반 알고리즘(Probablistic Early Recomputation)의 예제 코드가 나오는 글:
   https://engineering.linecorp.com/ko/blog/…
"
"https://news.hada.io/topic?id=2773","잘 안려진 10개의 Web API들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          잘 안려진 10개의 Web API들

   브라우저별로 지원이 좀 미흡하지만, 사용 가능한 API 설명과 예제들
   - Fullscreen API
   - Clipboard Async API
   - Resize Observer API
   - Image Capture API
   - Broadcast Channel API
   - Performance Interface API
   - Battery Status API
   - Network Information API
   - Vibration API
   - Bluetooth API
   그외
   - Payment Request API
   - Touch Events
   - Page Visibility
   - Channel Messaging API

   많은 API가 주로 크롬에서만 동작하긴 합니다.
   현재 Firefox 에서 가능한건 Fullscreen, Image capture, Resize observer, Broadcast Channel 정도 입니다.
   Bluetooth 와 Battery API는 FF/Safari 에선 지원 안하겠다고 했습니다.
   https://whatwebcando.today/ 에 접속하면 현재 브라우저에서 이런 것들을 지원하는지 한눈에 보여줍니다.
"
"https://news.hada.io/topic?id=2720","Firefox 80.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Firefox 80.0 릴리즈

   - FF를 기본 시스템 PDF 뷰어로 설정 가능
   - Master 암호 → Primary 암호
   개발도구 변경
   - 개발 콘솔에서 :block :unblock 으로 네트웍 요청 차단/해제 가능
   - 네트웍 모니터창에서 특별히 느린 요청에 거북이 아이콘 표시
   - 인스펙터의 Compatibility 패널에서 브라우저 호환성을 바로 확인 가능 (MDN 의 정보를 사용)
"
"https://news.hada.io/topic?id=2749","bref - AWS Lambda에서 PHP 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      bref - AWS Lambda에서 PHP 사용하기

   - Composer 패키지로 제공되는 Lambda용 PHP 런타임
   - Serverless 프레임워크와 연동하여 쉽게 PHP코드를 람다에 배포
   - API/워커/배치프로세스/웹사이트 등 다양한 종류의 PHP 어플리케이션 가능
   - Laravel, Symfony 등 프레임워크 지원
   - Lambda layers 기반으로 여러 런타임 제공
   ㅤ→ 간단한 함수용 php-74
   ㅤ→ HTTP호스팅과 비슷한 웹사이트용 php-74-fpm
   ㅤ→ 심포니/라라벨 콘솔욜 console
   ㅤ→ 아직 실험적인 php-80

   AWS가 Lambda Layers 를 처음에 소개하며 같이 작업중이라고 소개했던 Stackery 의 PHP 런타임도 있긴 한데, 작년 7월 이후로 업데이트가 없습니다.
   https://github.com/stackery/php-lambda-layer
"
"https://news.hada.io/topic?id=2743","React-PDF - React앱에서 PDF를 쉽게 보이기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    React-PDF - React앱에서 PDF를 쉽게 보이기

   - PDF 파일을 마치 이미지 처럼 React 앱내에서 표시
   ㅤ→ URL, File, Base64, Uint8Array 등
   - PDF.js 를 이용해서 다양한 렌더링 및 기능 지원
   ㅤ→ 커스텀 이벤트, 네비게이션, 텍스트 강조, 주석 달기
   - 텍스트는 스크린리더가 읽을수 있게 처리됨
"
"https://news.hada.io/topic?id=2782","닌텐도, AR방식의 마리오카트 라이브 홈 서킷 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      닌텐도, AR방식의 마리오카트 라이브 홈 서킷 공개

   - 카메라가 내장된 미니카트로 집안을 보면서 실제로 달리는 마리오카트 레이싱
   - 패키지에 포함된 4개의 게이트를 세우고 카트로 한바퀴 돌면 그게 마리오카트의 서킷으로 만들어짐
   - 버섯을 먹으면 실제로 카트가 대쉬하고, 뻐끔 플라워에게 먹히면 카트가 멈춤
   - 마리오/루이지 각각 별도의 세트
   - 4명까지 대전가능

   준비물 : 라이브 홈 서킷 ( 약 10만원 ), 스위치( 약 40만원) , 회사 근처 출퇴근하기 좋고, 넓은 평을 가진 부동산 ( 약 7~20억 )

   🤣

   아 역시 덕질의 끝은 큰 집..
   XBox 와 Sony 가 하드웨어 사양으로 경쟁하고 있는데 닌텐도는 자신의 길을 가네요.
"
"https://news.hada.io/topic?id=2787","react-figma : React로 Figma 디자인하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    react-figma : React로 Figma 디자인하기

   - Figma용 React Renderer
   - React 컴포넌트 코드를 수정하면 Figma에 반영
   - React Native, React SketchApp 과도 호환
   - Yoga Layout 지원
"
"https://news.hada.io/topic?id=2786","크롬 86 베타의 변경 사항 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            크롬 86 베타의 변경 사항

   - CSS :focus-visible , ::marker 추가
   - WebHID API : 게임패드등의 입력 받는게 가능
   - Native File System API : Trial 끝내고 기본 활성화, 웹앱이 파일/폴더에 접근 가능
   - 패스워드 변경용 Well-Known URL 지원
   - macOS Big Sur 에서 VP9 코덱 지원
   - Asynchronous Clipboard API 가 text/html 도 지원해서 HTML을 붙여넣기 가능
   - 새 Origin Trial 들
   ㅤ→ Cross-Screen Window Placement : 멀티 스크린 지원
   ㅤ→ battery-savings 메타 태그 : 배터리 절약 모드일때 어떻게 동작할지 지정 가능 (프레임레이트 및 스크립트 속도 실행 저하)
   ㅤ→ Secure Payment Confirmation : Payment Request API 시에 FIDO 기반 WebAuthen 인증 사용 지원

   사용자 암호 변경용 well-known URL 추가하기 https://news.hada.io/topic?id=2768
"
"https://news.hada.io/topic?id=2763","Figma to Code : 디자인-to-코드 오픈소스 플러그인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Figma to Code : 디자인-to-코드 오픈소스 플러그인

   - 피그마 레이아웃을
   ㅤ→ Tailwind 를 이용한 반응형 웹페이지 코드로
   ㅤ→ Flutter 와 SwiftUI 를 이용한 모바일 앱 코드로
   - React Native,Bootstrap,Fluent 등까지 지원할 예정
   - 코드품질 향상을 위해 피그마 Node를 AltNodes(자체적으로 만든 중간단계)로 변환
"
"https://news.hada.io/topic?id=2726","구글 시트로 Core Web Vitals 매일 자동 측정하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   구글 시트로 Core Web Vitals 매일 자동 측정하기

   - Core Web Vitals : 구글의 웹페이지 성능 지표
   - 구글시트에 여러 웹사이트를 등록해 놓고 매일 한번씩 자동 실행해서 지표를 기록한뒤 그래프 표시
   - 데스크탑/모바일 페이지의 FCP,FID,LCP,CLS,TTI 등을 모두 측정
   1. 해당 시트를 복사
   2. 첫 페이지 속도 측정할 URL 과 Sheet Name 기록
   3. Sheet Name을 알맞게 변경
   4. Track Web Vitals 누르면 측정 시작하고 매일 자동으로 한번씩 측정해서 기록 남김

   코드를 보니 내부에서 구글 PageSpeedOnline 을 통해서 측정한후 그 내역을 파싱해서 구글 시트에 저장하는 방식이네요.
   처음에 등록하면 보안 경고가 나오는데, 소스코드를 보면 아시겠지만 보안상 문제는 없는 코드에요
   https://github.com/labnol/code/…
   자동으로 측정하고 기록이 되니까, 일주일에 한번쯤 내용을 메일로 쏴주면 더 좋을것 같네요.

   function sendEmail() {
   ㅤvar sheets = SpreadsheetApp.getActiveSpreadsheet().getSheets();ㅤ
   ㅤfor (var i = 0; i < sheets.length ; i++ ) {
   ㅤㅤvar sheet = sheets[i];
   ㅤㅤvar dataRange = sheet.getDataRange()
   ㅤㅤvar cwvRange = sheet.getRange(2,1,dataRange.getLastRow()-1,dataRange.getLastColumn());
   ㅤㅤvar numRows = cwvRange.getNumRows();
   ㅤㅤvar numCols = cwvRange.getNumColumns();
   ㅤㅤvar message = ""CWT 값"";
   ㅤㅤfor (var i = 0; i < numRows; i++) {
   ㅤㅤㅤㅤfor (var j = 0; j < numCols; j++) {
   ㅤㅤㅤㅤ message = message + cwvRange.getValues()[i][j] + "" | ""
   ㅤㅤㅤㅤ}
   ㅤㅤㅤㅤmessage = message + ""\r\n""
   ㅤㅤ}
   ㅤ}
   ㅤMailApp.sendEmail(""email@server"", ""이주의 Core Web Vitals"", message);
   }

   구글, 검색결과 순위에 페이지 경험(Page Experience) 지표 도입 https://news.hada.io/topic?id=2197
   - Core Web Vitals
   ㅤ→ LCP : Largest Contentful Paint
   ㅤ→ FID : First Input Delay
   ㅤ→ CLS : Cumulative Layout Shift
   Lighthouse 6.0 릴리즈 https://news.hada.io/topic?id=2122
   ㅤ→ LCP,CLS,TBT 메트릭 추가
   Cumulative Layout Shift (CLS) 란 무엇인가? https://news.hada.io/topic?id=1697
   ㅤ→ 이미지/광고의 느린 로딩, 비동기 동작, 동적 DOM변경등으로 웹 페이지의 레이아웃이 얼마나 변하는 지를 측정
   ㅤ→ 사용자가 잘못된 클릭을 유발하게 되는 시각적 불안정성을 체크하는 사용자 중심 성능 지표
"
"https://news.hada.io/topic?id=2756","MS Flight Simulator 사용자들이 구글지도를 사용하여 빠진 곳들을 채우는 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           MS Flight Simulator 사용자들이 구글지도를 사용하여 빠진 곳들을 채우는 중

   - Bing 맵의 부실함을 해결하고자 구글지도의 3D 모델과 블렌더를 이용
   - 레딧 커뮤니티를 통해 가이드를 만들고 이를 공유 중
   ㅤ→ MSFS SDK 사용법, 구글맵to블렌더, 공항과 풍경 만드는 법등
   - 세계 각국의 공항부터 주요 풍경들을 제작해서 공유중
   ㅤ→ 스톤헨지, 시드니 타워, 아틀란틱 시티의 마천루, 시드니 하버브리지, 멜버른 크리켓 구장, 도쿄 타워 등

   정말 좋네요 'ㅁ'b 당분간 국제선은 거의 안 뜨지 싶은데. 당분간은 이걸로 아쉬운 마음을 달랠 수 있으면 좋겠습니다.

   커뮤니티가 만든 공항과 풍경들 리스트
   https://reddit.com/r/MicrosoftFlightSim/…

   공항 및 풍경 만들기 가이드
   https://reddit.com/r/FS2020Creation/…
"
"https://news.hada.io/topic?id=2783","Oracle MySQL DB Service 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Oracle MySQL DB Service 공개

   - OCI(오라클 클라우드 인프라)에서 제공하는 MySQL 서비스
   - MySQL 엔지니어링 팀이 직접 개발하고 관리 → 항상 최신버전을 제공
   - Amazon RDS, Google Cloud SQL 대비 1/3 이하 가격. 모든 리젼 동일

   정말 매력적이긴 한데 GCP 처럼 빅쿼리 하나 때문에 AWS를 버리는 사례같이 될지...
   이번 기회에 RDS 가격이나 낮춰 줬으면..

   경쟁하면서 가격 떨어지는게 가장 좋은거 같아요!

   AWS가 가격을 낮추면 역설적으로 오라클의 경쟁력이 있다는 것을 증명하게 되겠네요..
   저는 AWS가 가격을 안낮춘다에 베팅합니다..
"
"https://news.hada.io/topic?id=2793","데이터 시각화를 위한 색상 선택하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          데이터 시각화를 위한 색상 선택하기

   일반적인 색상 선택 오류와 피하는 방법.
   예시가 잘 나와있어서 보기 편하고, UI/UX 및 발표자료 만들때도 도움되는 글
   - 컬러 휠 전체를 쓰지 말 것
   - 채도와 밝기를 사용해서 색조표현
   - 따뜻한 컬러와 파란색 사용
   - 녹색 사용시엔 노랗거나 파란쪽으로
   - 순수한 색은 피할 것
   - 밝고, 채도가 높은 색상을 피할 것
   - 밝기가 다른 색상을 결합
   - 비슷하지만 다채로운 색상 활용
   - 배경과 너무 적거나 많은 대비(Constrast)는 피할 것
   - 색상을 다른데서 복사하거나 이해하기

   마지막 항목인 색상 복사하기에서 추천한 도구들이 유용하네요. ( 역시 Copy & Paste ! )
   http://tristen.ca/hcl-picker/#/hlc/6/1.05/CAF270/433348 - 데이터 시각화용 팔레트 생성 도구
   https://learnui.design/tools/data-color-picker.html#palette - 데이터용 컬러 피커. 시작색과 끝색을 선택하면 그 사이의 컬러들을 선택해서 팔레트 생성
   https://medialab.github.io/iwanthue/ - HUE 기반 팔레트 생성기
   https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3 - 지도제작 & 영역그래프용 팔레트 제안
   https://carto.com/carto-colors/ Data-driven color schemes
   https://image-color.com/ - 업로드한 사진에서 주요 색상들을 뽑아내 줍니다
   https://www.degraeve.com/color-palette/ - 업로드한 사진으로 팔레트를 생성
   https://moviesincolor.com/ - 유명 영화장면에서 팔레트 추천
   https://wesandersonpalettes.tumblr.com/ - 웨스 앤더슨 영화에서 팔레트 추천
"
"https://news.hada.io/topic?id=2731","Heroicons - Tailwind CSS 개발자들이 만든 아이콘 모음 226개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Heroicons - Tailwind CSS 개발자들이 만든 아이콘 모음 226개

   - 두가지 크기 아이콘을 SVG 및 JSX 로 제공
   - 24x24 : 네비게이션 및 마케팅용 2px 라인 아이콘
   - 20x20 : 버튼/폼 용 Solid fill 아이콘
   - MIT 라이센스
   - 차후에 더 추가 예정

   Teenyicons - 15x15 초소형 무료 아이콘들 587개 https://news.hada.io/topic?id=2633
   Tabler icons : 24x24 고품질 무료 SVG 아이콘 550개 https://news.hada.io/topic?id=2427
   16x16 아이콘들
   Forge Icons (300+개) : https://icons.theforgesmith.com/
   System UIcons (220개): https://systemuicons.com/
"
"https://news.hada.io/topic?id=2752","[동영상] 마틴 파울러가 말하는 소프트웨어 아키텍쳐의 중요성 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 [동영상] 마틴 파울러가 말하는 소프트웨어 아키텍쳐의 중요성 [번역]

   마틴 파울러(Martin Fowler)가 OSCON 2015 컨퍼런스의 둘쨋날에 소프트웨어 아키텍쳐의 중요성을 14분간 강연하였는데, 여기에 자막을 붙여 번역한 영상입니다. (자막 한국어)
   마틴 파울러는 GoF 중 1명인 랄프 존슨(Ralph Johnson)과 이메일로 토의한 내용을 공유하며, 기존에 통용되던 [소프트웨어 아키텍쳐] 개념의 지나친 일반화를 비판합니다. 그리고 소프트웨어 프로젝트에서 개발자들이 해당 프로젝트에 관해 공유하는 지식의 깊이가 중요하다는 점과 아키텍쳐에 관한 결정은 변경하기 어렵다는 점을 고려할 때, 아키텍쳐 설계에서 가장 중요한 것은 프로젝트의 핵심 가치를 위한 여러 결정사항들임을 지적합니다.
   그리고 또 하나, 프로젝트에서 코드의 품질이 뒷전이 되는 경향에 대해서도 지적합니다. 이는 어찌 보면 당연한 것인데, 그 이유는 실제로 그 소프트웨어에 돈을 내는 고객의 입장에서는 코드의 질이 눈에 보일 리가 없기 때문이지요. 마틴 파울러는 소프트웨어의 품질은 외적 품질(External Quality)과 내적 품질(Internal Quality)로 나뉜다며, 사용자에게 노출되는 UX나 버그 같은 결함은 외적 품질이고 코드의 품질은 사용자가 볼 수 없는 내적 품질이라고 말합니다. 소프트웨어 아키텍쳐는 내적 품질과 관련된 것인데, 이는 직접 보이는 것이 아니므로 사용자 입장에서는 같은 기능이면 더 싼 쪽을 택하는 것이 당연하다는 것입니다. 하지만 내적 품질이 좋지 않은 소프트웨어는 기능 추가나 개선 등 고도화에 그만큼 큰 비용이 들게 됩니다. 반면 내적 품질이 좋은
   소프트웨어는 소스 코드가 플랫폼화하기 때문에 장기적으로 볼수록 기능 추가가 쉽고 빠르게 가능하게 되지요. 마틴 파울러는 이를 ‘디자인 스태미너 가설’이라고 이름붙였습니다. 지속적인 기능 추가야말로 바로 소프트웨어 아키텍쳐가 중요한 이유라는 것이 그의 주장입니다.
   강연 중간에 나왔던 칼럼의 PDF 파일:
   https://martinfowler.com/ieeeSoftware/whoNeedsArchitect.pdf
   OSCON 2015 당시의 기사:
   https://opensource.com/life/15/…

   참고 - ADR을 써야 하는 이유:
   https://news.hada.io/topic?id=2665

   Uncle Bob은 Robert C. Martin이에요

   그런가요? 그럼 제가 잘못 알고 있었나 봅니다.

   화이팅이요
"
"https://news.hada.io/topic?id=2772","Lunar - 맥 외장 모니터 밝기 조절 유틸","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Lunar - 맥 외장 모니터 밝기 조절 유틸

   - 맥에 연결된 외장모니터의 Contrast, Brightness 조절
   ㅤ→ Sync 모드 : 맥의 센서에 따라 조절
   ㅤ→ Location 모드 : 내 위치정보의 일출/일몰 시간에 따라 자동
   ㅤ→ 특정 앱 별로 수치 조정 가능
   - 단축키로 조절시 Step 지정 가능
   - 외부 센서에 의해 자동 조절되는 모드 추가 예정
   - HDMI, DP, Thunderbold 2/3, VGA 및 DDC를 지원하는 모든 어댑터들 지원

   와 1시간 전에 원래 사용하던 BrightnessMenulet이 마음에 들지 않아서
   MonitorControl 설치했다가 Sync 옵션이 없어서 대체할 앱 찾다가
   관련 이슈(https://github.com/MonitorControl/MonitorControl/issues/159) 내용에서 Lunar 얘기를 하길래
   Lunar를 써보고 만족하면서 GeekNews 접속했는데 바로 이 글이 보이네요 ㅋㅋ

   MonitorControl - 맥 외장 모니터의 밝기 조절 유틸 https://news.hada.io/topic?id=2426 와 거의 비슷합니다.
   ㅤ→ MonitorControl 은 시스템 기본인 fn+F1/F2 단축키를 사용하고, Lunar 는 Ctrl+F1/F2 같은 별도 단축키를 사용합니다. (변경은 가능)
   ㅤ→ 설정은 Lunar가 좀 더 다양하고 많은듯 합니다. (시간별 설정 이나 앱별로 지정하는 등)
   윈도우즈 에서 똑같은 기능을 하는 앱으로 Twinkle Tray 도 있습니다.
   https://twinkletray.com/
"
"https://news.hada.io/topic?id=2739","Safari 브라우저, 크롬/Firefox 와 같은 확장 모델 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Safari 브라우저, 크롬/Firefox 와 같은 확장 모델 도입

   - 타 브라우저와 마찬가지로 WebExtensions API 를 이용하여 확장 개발이 가능
   - XCode 12 베타에 변환 도구를 제공해서 기존 확장을 변환하도록 지원 예정
   - 개발된 Web Extension 도 Mac App Store 등록 가능
   - 사파리는 두가지 방법으로 확장 개발 가능
   ㅤ→ Safari App Extension : Obj-C/Swift 와 JS/CSS 를 사용
   ㅤ→ Safari Web Extension : HTML,JS,CSS

   사파리는 이전부터 샌드박스 모델을 택하고 있어서 충격은 적을 것 같고 효과는 많을 것 같네요.
   FF 는 WebExtension 으로 바뀌면서 기능을 제공하지 못하게 된 확장들이 많았어요.

   기존 개발자들이 편해지겠네요.
"
"https://news.hada.io/topic?id=2733","페이스북, iOS14 부터 IDFA 수집하지 않을 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     페이스북, iOS14 부터 IDFA 수집하지 않을 것

   - iOS14 부터 변경되는 동의 이슈 때문에 아예 수집 하지 않는 것으로 변경
   - 새 Facebook SDK는 SKAdNetwork API를 사용할 예정
   - iOS14용 앱설치 광고 캠페인을 위한 별도 광고계정을 만드는 것을 권장
   - Audience Network에는 큰 영향을 미치게 될 것으로 예상
   ㅤ→ iOS 14 사용자들은 Audience Network 통해서는 광고를 못보게 될 것
   ㅤ→ 시험결과 50% 정도의 수익 하락 예상

   iOS14 : IDFA 시대가 저물어 갑니다 https://news.hada.io/topic?id=2337
   IDFA가 없어진 이후의 모바일 마케팅 가이드 https://news.hada.io/topic?id=2363
"
"https://news.hada.io/topic?id=2734","ztext.js - 모든 폰트를 3D로 만들어주는 JS라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ztext.js - 모든 폰트를 3D로 만들어주는 JS라이브러리

   - CSS transform-style 을 이용해서 대부분의 웹브라우저 지원
   ㅤ→ 폰트 뿐만 아니라 SVG,Emoji 및 이미지에도 적용 가능
   - depth, layers, fade, direction 조정
   - 마우스 이벤트 지원 : pointer, scroll, scrollX, scrollY
   ㅤ→ 약간의 애니메이션 효과 가능
"
"https://news.hada.io/topic?id=2815","C++20 표준안 승인표준안 승인

   새로운 기능들
   - Concept : 템플릿 인자에 타입을 제한
   - Contract : 함수 사전/사후 조건을 추가해서 assert()처럼 검사
   - Ranges : 범위를 다루는 제너릭
   - Module : 사용할 것만 import/export 가능
   - Coroutine 지원
   - Designated initializers : 특정 인자 초기화

   모듈이 아름답게 도입되었으면 좋겠네요. 헤더로 빌드 타임 깎아 먹은게 지금까지 얼마나 되는지..

   추가된 기능들의 자세한 설명은 C++20 Key Features Summary [한글 발표자료] 를 참고하세요
   https://www.slideshare.net/utilforever/c20-key-features-summary
"
"https://news.hada.io/topic?id=2765","Responsively - 반응형 웹페이지 테스팅 도구 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Responsively - 반응형 웹페이지 테스팅 도구 오픈소스

   - Instant Preview : 여러개의 폰/패드 사이즈 화면을 한번에 같이 표시
   ㅤ→ 스크롤,클릭이 모든 화면에 실시간 미러링
   ㅤ→ 한번에 모든 기기별 스크린샷 저장
   - 윈/맥/리눅스
   - 하나의 구글 크롬 Inspector 로 모든 화면에 같이 사용 가능
   - 30개 이상의 주요 기기정보 내장 및 추가 가능
   - Hot-Reloading 지원
   - 프리뷰 레이아웃을 맘대로 조정 가능
   - 크롬/FF/Edge 에서 링크를 바로 보낼수 있는 확장 제공

   좋네요 감사합니다
"
