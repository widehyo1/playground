"https://news.hada.io/topic?id=4779","CalyxOS - 구글을 제거한 안드로이드 OS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       CalyxOS - 구글을 제거한 안드로이드 OS

   “Privacy by Design”
   - 구글서비스를 모두 제거하고 대체 앱으로 변경
   ㅤ→ 전화와 메시징은 Signal 과 WhatsApp 으로 암호화
   ㅤ→ DuckDuckGo 브라우저 와 검색 이용
   ㅤ→ Tor 브라우저로 익명 웹 브라우징 가능
   - VPN기능 내장 (Calyx, RiseUp)
   - F-Droid 와 Aurora Store 에서 앱 다운로드
   - Google Play 서비스는 microG 로 대체
   - Pixel 2~5 및 샤오미 Mi A2 지원

   - /e/ - 구글을 걷어내고 개인정보 보호에 주력한 안드로이드 기반의 OS https://news.hada.io/topic?id=605
   - LineageOS - 안드로이드 기반의 오픈소스 OS https://news.hada.io/topic?id=4778
   - Huawei, Android를 포크한 HarmonyOS로 Android를 대체 https://news.hada.io/topic?id=4392
   안드로이드 OS를 입맛대로 수정하는 시도는 계속 있는 듯 하네요.
"
"https://news.hada.io/topic?id=4785","Systemizer - 시스템 디자인 시각화 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Systemizer - 시스템 디자인 시각화 도구

   - 분산시스템의 하이레벨 아키텍처 디자인을 쉽게 표현하기 위한 다이어그램 도구 오픈소스
   ㅤ→ 웹서버, LB, API GW, Pub/Sub Model, DB(SQL,NoSQL), Cache, MQ, CDN 등
   - JSON 형식 문서로 저장
   - PNG/SVG로 Export 지원
   - IFrame으로 문서를 다른 곳에 임베드 지원
"
"https://news.hada.io/topic?id=4719","OpenAI, 오픈소스 GPU 프로그래밍 언어 Triton 1.0 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                OpenAI, 오픈소스 GPU 프로그래밍 언어 Triton 1.0 공개

   - 파이썬과 비슷한 프로그래밍 언어 & 컴파일러
   - CUDA 경험이 없는 연구자들도 쉽게 고효율의 딥러닝을 위한 GPU코드 작성가능
   ㅤ→ 이미 Torch 구현 보다 2배정도 효율이 좋은 커널 구현
   - Linux, NVIDIA GPU 지원 (AMD GPU 와 다른 CPU들은 개발중)
   - 기본 코드는 Numba와 비슷 하지만, SIMT를 사용하지 않고 블록단위에 대한 연산으로 인스턴스 내에서 병렬 실행
   - 파이썬 코드를 Triton-IR로 바꾸고 Triton Compiler 를 통해서 LLVM-IR로 변환하는 아키텍처

   원 작성자의 논문 : http://eecs.harvard.edu/~htk/publication/…
   (Philippe Tillet을 OpenAI가 채용해서 계속 개발을 지원해 주고 있다고)
"
"https://news.hada.io/topic?id=4704","CudaText - 크로스플랫폼 코드 에디터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        CudaText - 크로스플랫폼 코드 에디터

   - 빠른 실행, 무제한 파일 크기 지원, Python 플러그인을 통한 애드온 시스템
   ㅤ→ SublimeText와 아주 비슷
   - Object Pascal(Lazarus) 오픈소스
   - 250+ 언어 구문 강조 지원
   - Code Tree & Folding
   - 멀티 캐럿(커서) & 멀티 셀렉션
   - 탭 UI, Split View 지원
   - Minimap, Micromap
   - 단축키 커스터마이징 가능
   - Hex 모드 지원
   - 윈/맥/리눅스/솔라리스/BSD 바이너리 제공
   * Cuda는 NVIDIA의 CUDA와 상관없는 세르비아어에 있는 ""miracles"" 뜻의 단어에서 가져온 것
"
"https://news.hada.io/topic?id=4687","Riju - 모든 프로그래밍 언어에 대한 Playground","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Riju - 모든 프로그래밍 언어에 대한 Playground

   - 매우 빠른 온라인 플레이 그라운드
   - 현재 224개의 언어 및 환경들 지원
   ㅤ→ Ada,Algol,C,C++,C#,F#,Go,Python,Rust,Ruby,Scala..
   ㅤ→ SQLite, MariaDB, MongoDB, Redis
   ㅤ→ LLVM, R, Tex, x86, Zig, Verilog..
   ㅤ→ 아희

   아희까지? 와우
"
"https://news.hada.io/topic?id=4771","MS Edge, Super Duper Secure Mode 실험","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  MS Edge, Super Duper Secure Mode 실험

   - 공격을 막기 위해 Exploit 하는 환경을 바꾸고, 공격자들의 비용을 증가시키는 실험
   - 보안 vs. 성능
   ㅤ→ V8 엔진은 공격자들이 선호하는 타겟
   ㅤ→ 2019년 CVE*의 45%는 V8의 JIT 엔진 관련
   ㅤ→ JIT를 끄는 것만으로 수많은 취약점이 사라지고, 다른 취약점들도 악용하기 어려워짐
   ㅤ→ JIT를 켜면 CET*도 사용불가
   ㅤ→ 실제로는 JIT을 꺼도 사용자는 성능변화를 잘 못느낌, 또한 전력도 평균 11%쯤 적게 소모
   - Project Super Duper Secure Mode (SDSM)
   ㅤ→ JIT를 끄고 CET를 활성화
   ㅤ→ 현재는 WebAssembly 미지원. 차후에 지원 예정
   CVE : Common Vulnerabilities and Exposures
   CET : Controlflow-Enforcement Technology, 인텔이 만든 하드웨어기반의 Exploit 완화 기술

   jit를 끄는게 성능면에서도 더 좋다는 건 의외네요!
"
"https://news.hada.io/topic?id=4692",""페이스북은 이제 메타버스 기업" - 마크 주커버그 인터뷰","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ""페이스북은 이제 메타버스 기업"" - 마크 주커버그 인터뷰

   “우리 회사의 미래는 달라질 것입니다. 지금까지 소셜 앱 서비스들을 만들고 이를 지원하는 일부 하드웨어를 구축하던 프로젝트들을 훌쩍 뛰어넘어서, 페이스북은 이제 메타버스라고 알려진 공상과학(sci-fi)의 세상을 통해 상호 연결된 경험을 최대화하는데 집중해 나갈 것입니다”
   Q. 메타버스는 무엇이고 페이스북은 어떤 부분을 만들 계획인가?
   ㅤ→ 메타버스는 많은 기업, 즉 산업 전반에 걸친 비전이다. 모바일 인터넷의 후계자라고 생각할 수도 있을 것이다.
   ㅤ→ 메타버스는 단순한 가상 현실은 아니다. VR, AR, PC, 모바일 기기, 게임 콘솔 등 모든 컴퓨팅 플랫폼에서 액세스할 수 있다.
   ㅤ→ 메타버스가 폭넓게 사람들에게 도움을 줄 것은 우리가 상호작용하도록 만들어진 방식에서 훨씬 더 자연스러운 존재감이라고 생각한다.
   ""창작자 경제의 엄청난 부분이 생겨날 것이라고 생각한다. 즉 새로운 경험과 환경을 만들어내는 개인 크리에이터들, 예술가들이 많이 나타날 것이다""
   ""그저 우리가 만들고 있는 단순한 제품에 그치는 게 아니다. 그것은 생태계가 되어야 한다. 그래서 우리가 함께 일하는 크리에이터와 개발자, 그들 모두가 스스로를 지탱할 수 있을 뿐만 아니라 많은 사람을 고용할 수 있어야 한다.""
   ""나는 이것이 그 자체로 거대한 경제가 될 거라고 생각하며 꼭 있어야 할 필수적인 존재라고 본다. 그러려면 먼저 많은 보트를 들어올리는 거대한 파도가 필요하다. 우리가 현재 하고 있는 프로젝트는 아주 작은 일부에 불과할 것이다.""
   ""앞으로 원격 근무가 점차 늘어날 것이다. 5~10년 안에 회사 절반 정도가 원격 근무를 하게 될 것 같다.""
   ""지금 우리 모두가 알아내려고 하는 것 중 하나는, 어떻게 하면 사람들이 흥미로운 것들을 탐험하고 다른 기회를 얻는 자유를 누리면서도 육체적으로도 덜 고정되어 있는 세상을 구축하는 게 어떻게 가능할까 하는 점""
   Q. 메타버스가 어떻게 관리될 거라고 생각하는가? 서로 다른 기업들이 뭉친 컨소시엄이라면 누가 이러한 정책을 수립할 책임이 있을까?
   ㅤ→ 메타버스에 대한 긍정적인 비전은 특정 기업의 비전이 아니라 상호운용성과 유연한 이동성이 있어야 한다고 생각한다.
   ""우리는 최대한 많은 사람들에게 서비스를 제공하면서 사람들이 서로 연결되도록 돕고자 한다""
   ""앞으로 상당히 고립적인 환경을 구축하려는 회사와 반대로 상당히 개방적으로 상호 운용성을 높게 구축하려는 기업 등이 혼재할 것이다""
   ""미래에는 사람들이 개별 회사가 하는 일을 메타버스라고 부르지 않을 거라고 생각한다. 바라건대, 우리가 공동적으로 더 상호 운용이 가능한 시스템을 성공적으로 구축한다면, 그리고 그 모든 것이 메타버스가 되어야 할 것이다. 그래서 각 회사마다 개별적인 메타버스는 없어야 할 것이다. 앞으로 메타버스를 만드는 기업이냐고 묻는 것은 회사에게 인터넷이 어떻게 돌아가는지 물어보는 것처럼 우스꽝스럽게 들렸으면 좋겠다.""
   ""만약 우리가 성공한다면, 지금부터 5년 후, 혹은 7년 후 사람들은 주로 우리를 모바일 인터넷 회사가 아닌 메타버스 회사라고 생각할 것이다""
   ""우리는 전 세계 수백만 명의 사람들이 그들이 정말로 즐기는 창조적인 일을 하면서 돈도 벌 수 있는 경제적인 기회를 만들 수 있다고 생각한다""
   - The Verge의 객원 에디터인 케이시 뉴튼(Casey Newton)이 사내 연설을 계기로 마크 주커버그와 인터뷰를 통해 자세한 이야기를 담은 기사를 C-Rocket 에서 전문 번역
   - 유료매체 이지만 이 글은 이메일 회원가입만 하면 전문을 확인 가능
"
"https://news.hada.io/topic?id=4706","State of Data Science 2021 보고서 [46p PDF]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                State of Data Science 2021 보고서 [46p PDF]

   - 데이터 사이언스 분야가 어떻게 성장하고 있는지를 조사한 보고서
   ㅤ→ 회사 및 교육기관 들이 채택하는 트렌드를 통해서 학생들이 미래에 뭘 준비해야 할까?
   - Anaconda.org 가 140개국, 4299명 대상 온라인 조사
   - 남 72%, 여 23%
   - 25~40세 50%, 18~24세 24%, 41~56세 18%
   - 학사 34%, 석사 24%, 박사 10%, 고교수준 13%
   - 학생 27%, 비즈니스 분석가 11%, 데이터 사이언티스트 11%, 교수/연구자 9%, 데이터 엔지니어 7%, 개발자 6%
   - 관리자 레벨 26%, 시니어 25%, 엔트리 15%, 이사급 10%, 수석급 8%, 오너/경영진/C레벨 8%, VP 5%
   - COVID-19가 데이터 사이언스 투자에 끼친 영향 : 감소 37%, 증가 26%, 유지 24%
   - 팀 사이즈
   ㅤ→ 솔로 19%
   ㅤ→ 6~10명 44%
   ㅤ→ 1~5명 29%
   ㅤ→ 11-20명 17%
   ㅤ→ 20명 이상 10%
   - 조직내에서 자신의 팀 : IT 23%, 연구개발 16%, 선행 데이터 사이언스 8%, 운영 8%, 재무 6%
   - 데이터 사이언티스트의 시간 사용 : 데이터 준비 22%, 데이터 클렌징 17%, 보고 & 프리젠테이션 17%, 데이터 시각화 15%, 모델 선정 12%, 모델 훈련 12%, 모델 배포 11%
   - 데이터 모델이 프로덕션에 도입 못되게 막는 것들
   ㅤ→ 27% : IT 보안 표준 준수
   ㅤ→ 24% : Python/R로된 모델을 다른 언어로 재코딩
   ㅤ→ 23% : 디펜던시와 환경 관리
   ㅤ→ 24% : 다른 언어로된 모델을 Python/R로 재코딩
   - 데이터 사이언스용 시스템 구입시 주 고려 사항
   ㅤ→ CPU/GPU 성능 60%
   ㅤ→ 메모리 46%
   ㅤ→ IT 부서의 승인 45%
   ㅤ→ OS 42%
   ㅤ→ 제조사의 고객 지원 평판 40%
   ㅤ→ 브랜드 32%
   - 조직에서의 오픈소스 사용 : 허용 87%, 불가 7%
   - 오픈소스 사용 권장 : Yes 65%, No 21%
   - 팀이 오픈소스 사용에 기여하게 어떻게 지원하는 가
   ㅤ→ 오픈소스 프로젝트 기여하는데 시간을 별도로 부여 46%
   ㅤ→ 오픈소스 프로젝트 개발에 별도로 펀딩 54%
   ㅤ→ 오픈소스 프로젝트에만 참여하는 팀 멤버가 있음 41%
   언어 사용 여부 (Always, Frequently, Somtimes, Rarely, Never)
   ㅤ→ Python : 항상 34%, 종종 29%, 때때로 22%, 가끔 11%, 전혀 4%
   ㅤ→ SQL : 항상 15%, 종종 20%, 때때로 27%, 가끔 16%, 전혀 22%
   ㅤ→ R : 항상 10%, 종종 17%, 때때로 25%, 가끔 18%, 전혀 30%
   - 32%의 응답자가 6-12개월 안에 새로운 Job을 찾을 예정

   파일 링크 : https://know.anaconda.com/rs/387-XNW-688/…
"
"https://news.hada.io/topic?id=4790","Screw You, Microsoft Edge","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Screw You, Microsoft Edge

   - 찰스 페졸드옹의 MS Edge 브라우저 비판
   - Bookshop.org(로컬 서점을 지원하는 온라인 북스토어)를 브라우징 하는데, 엣지 브라우저가 월마트에서 더 싸게 살 수 있다는 팝업을 띄웠다는 것
   ㅤ→ MS Clippy 이후에 최대의 모욕이라고..
   - 더 큰 모욕은 자신이 가격 만을 기준으로 구매 결정을 내리고 있다고 판단했다는 것
   ㅤ→ 책을 구매할 때 특정 가게를 선택하는데에는 여러 가지 이유가 있을 수 있음
   ㅤ→ 대형 체인보다 책에만 집중하는 소매점, 탄소발자국(Carbon Footprint), 공정하게 임금을 지불하는 지에 대한 회사의 평판, 그들이 지지하는 정치 후보자 및 운동, CEO가 자신의 부를 사용하여 우주에 진출하는지 등을 보고 결정을 내릴 수 있다는 것
   - 그냥 숫자 비교만 하는 Edge의 뇌사수준 알고리즘(Braindead Algorithm)의 영역을 벗어나는 것임

   엣지를 안 써봐서 그러는데, 엣지 브라우저에 사용자가 현재 보고있는 내용을 기반으로 광고를 띄우는 기능이 있는건가요?

   설정에서 'Microsoft Edge 에서 쇼핑하고 시간과 돈 절약' 옵션을 활성화 할 수 있네요.
   현재 국내 쇼핑몰들도 동작하는지는 모르겠어요.
   그런데 이 표현 자체가 정말 돈 아끼는 옵션이군요. ㅎㅎㅎ

   으악 ㅎㅎㅎ 하긴 가성비도 중요하지만 가격보다는 자기 만족, 자기 가치관에 맞거나 혹은 과시를 통해 나를 드러내는 소비도 점점 많아지고 있어서 그걸 가릴 수 있어야 좋은 광고와 추천일 것 같아요. 그런데 그러려면 내 정보가 더 잘, 많이 공유되어야 하니 좋은 추천이란 게 편하면서도 두렵기도 해요. 그런데 저도 페졸드 옹 아네요...(?)

   요즘 개발자 분들은 페졸드옹을 모르실수도 있으니.. 위키피디어 링크 첨부. 예전엔 윈도우 개발할 때는 무조건 이분 책 봤었죠.
   - https://en.wikipedia.org/wiki/Charles_Petzold
   Screw는 F워드의 순화된 표현 이라고 보면 됩니다. 욕을 하지만 상스러워 보이지 않는 느낌 ?
   유명한 어르신께서 쓰니 느낌이 다르네요. 화가 단단히 나신 듯..
"
"https://news.hada.io/topic?id=4682","BirdNET - 새 지저귐 소리로 새 판별하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       BirdNET - 새 지저귐 소리로 새 판별하기

   - 머신러닝을 이용하여 전문가/시민들이 새를 연구하고 보호하는 것을 돕기 위한 연구 플랫폼 프로젝트
   - 현재 984종의 북미/유럽 새들을 인식. 추가 예정
   - 무료 Android/iOS 앱 제공
   - BirdNET은 오픈소스로 공개 (TensorFlow Lite 용도 공개)
   - Arduino/Raspberry Pi/스마트폰/웹브라우저/PC등 다양한 하드웨어와 OS지원
"
"https://news.hada.io/topic?id=4792","Ask GN: 어떤 유료 구독 서비스를 이용하고 계신가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ask GN: 어떤 유료 구독 서비스를 이용하고 계신가요?

   어떤 구독 서비스에 돈을 내고 계신지, 이 중 추천하고 싶은 서비스나 따로 관리하는 방식이 있으신지 궁금합니다.
   저는 콘텐츠 서비스가 대부분이네요. 계속 쓸 것은 연간으로 돌리고 가족 요금제로 묻어가는 것들도 있어서 매달 내는 것은 3만원 좀 안되는 것 같습니다.
   - 다운독 (요가)
   - 후잉 (복식부기 가계부 및 자산관리 SaaS)
   - 네이버, 쿠팡 (멤버십)
   - 넷플릭스, 왓챠, 티빙<네이버, 쿠팡플레이<쿠팡
   - 유튜브, 애플뮤직
   제가 앞으로도 계속 쓰고 싶고 추천하고 싶은 서비스는 다운독이라는 요가앱입니다.
   내 수준, 그 날 수련할 시간(7분-1시간30분)과 집중 운동할 신체 부위 등을 선택하면 그때 그때 다른 요가를 할 수 있게 해줍니다. 각각의 다양한 요가 동작 영상 클립들이 사용자 선택에 맞춰 자연스럽게 연결되고 다운로드 되는 방식이에요. 대부분의 다른 운동앱이나 콘텐츠는 고정된 시간과 자세의 영상을 제공하니 핑계대고 미루곤 했는데, 이건 짧게도 가능하고 변화도 줄 수 있으니 계속 하게 되더라고요.
   2012년 메리 미커의 인터넷 트렌드 보고서에서 Asset-light 세대 얘길 보며 공감했던 기억이 나는데, 이제는 구독-Heavy 시대가 된 것 같아요...
   관리 방법은 따로 없습니다만, 오늘 긱뉴스에 적어보며 정리가 되었어요. ㅎㅎ

   댓글들을 읽다가 의외로 서적관련이 없어서 댓글을 달아봅니다. :)
   * 애플 icloud
   * 지니뮤직
   * 밀리의 서재, yes24 북클럽, (리디 셀렉트, 윌라는 사용하다가 해제)
   * 넷플릭스
   요새 고민중인 것은 명상 subscription을 가입해볼까.. 고민 중입니다. calm, 마음보기 가 좋다고는 하는데 명상이 제 생활에 들어올지는 아직 긴가민가 합니다.

   유튜브 프리미엄 : 백그라운드 재생이 꽤 유용합니다.
   오피스365 : 1년에 약 12만원이지만 6명이 1TB씩 클라우드와 오피스를 사용할 수 있는지라 2만원 꼴입니다. 오피스의 압박과 클라우드 용량의 압박에서 벗어났습니다.

   구독을 그리 좋아하지 않아서, 사용하는 구독 서비스가 거의 없습니다. 사실상 유일하게 구독하는 건 웹소설 서비스인 노벨피아(월 9,900원) 정도네요. 구독이라고 하기에는 뭣하지만, 매달 돈이 나가는 거라면 실손보험(월 35,000원) 같은 보험에 가입한 것은 있습니다.
   그 외에, 이 글을 보기 전까지 완전히 잊고 살던 것인데 제가 다니는 회사가 Microsoft Partner Network에 속해 있어 소속 개발자로서 월 150달러 상당의 Azure 크레딧을 받을 수 있는 게 있습니다. 어쩌다 보니 지금까지 잊고 있었는데, 생각난 김에 지금이라도 좀 써볼까 싶군요.

   - 영상 : 유튜브, 넷플릭스, 웨이브
   - 음악 : 멜론 (유튜브 뮤직을 더 많이 쓰긴 하지만, 멜론은 또 없으면 아쉬워서...)
   - 비밀번호관리 : 1Password
   - 쇼핑몰 : 쿠팡
   - 게임 : 닌텐도스위치온라인
   근래에 왓챠나 티빙쪽에 보고 싶은 컨텐츠들이 있어서, 추가 구독을 고민하고 있습니다.
   그외에 할일관리를 최근 todoist 에서 ticktick 쪽으로 옮겼는데 좀 더 써보고 괜찮으면 구독할 예정입니다.

   - The Information https://www.theinformation.com/ - IT 뉴스($419/년)
   - Trends https://trends.co/ - IT 뉴스($299/년)
   해외 유료 기술 뉴스는 이거 저거 보다가 요 두개만 남았네요.
   - 멤버십 : 아마존($119/년), 쿠팡(2900원/월), 네이버(46800/년)
   - 콘텐츠 : 넷플릭스, 왓챠, 웨이브, 티빙(네이버에 포함), 아마존(Prime에 포함), 유튜브
   - 드롭박스 ($119/년)
   - 다운독 : 요가,명상,발레,인터벌 트레이닝 포함 ($39.99/년)
   - Simply Piano : 피아노 교습 ($149/년)
   가장 최근에 구독한 서비스는 Simply Piano 구요. https://www.joytunes.com/
   아이폰/아이패드로 피아노를 배우는 앱인데, 실제 피아노의 음을 마이크/미디로 인식해서 잘 치고 있는지 피드백을 해줍니다.
   배우는 순서도 재미나고, 아는 노래들이 엄청 많이 나와서 즐겁게 따라하고 있습니다.
   한글화도 어느정도 되어 있구요. 자막은 다 제공되고, 주요 교습 영상들은 한국어 더빙도 되어있습니다.
   예전에 피아노 배울 때는 한시간 치는 것도 지겨워서 금방 포기했는데, 얘는 3-4시간도 붙잡고 있게 되네요.
   이게 JoyTunes 라는 회사의 전체 멤버십이라, 구독하면 Simply Guitar라는 기타 교습 앱도 같이 사용 가능합니다.
   적다보니 저도 꽤 많은 걸 구독하고 있네요.
   이거 매달 얼마나 나가는지 기록해주는 서비스가 따로 나와야..

   생각 안하고 있었는데 찾아보니 구독 서비스들을 관리해주는 앱이 여러 개 있군요.
   - 왓섭, 모두, 다독
   한번 사용해 봐야겠어요

   - 유튜브
   - Obisidian Sync : 멋진 마크다운 기반 노트앱이에요. 동기화는 유료라서..
   - 스포티파이 : 큐레이션이 마음에 듭니다.
   - 쿠팡
   - 라프텔 : 애니메이션 스트리밍 사이트입니다. 'ㅁ'
   - Notion : 개인용 데이터베이스입니다. 모든 관리는 여기서. 용량 + 게스트 떄문에 구독중이에요.
   - Jetbrains All Product Pack : 제가 좋아하는 IDE입니다. 가장 큰 장점은 모든 언어를 대부분의 인터페이스 / 대부분의 기능이 같아서 쉽게 다른 언어로 마이그레이션할 수 있고, 그 언어의 특징이 되는 기능들만 적응하면 생산성을 쭉쭉 끌어올릴 수 있어서요.
   -

   우와 언어 변경이 쉽나요? 요즘 프레임워크 하나씩은 끼고 쓰다보니 얼른 상상이 안되면서도 혹하네요. ㅎㅎ 저는 인텔리J만 구독했다가 지금은 안쓰지만, 계속해서 구독하면 할인해주는 결제 플랜 때문에 기존 사용자들이 빠져나가기 쉽지 않은 것 같아요. 대신 다시 들어가기가 괜히 비싸게 느껴지네요. ^^;

   저는 3년 차가 넘었는데(... )
   - 다른 언어 넘어가도 에디터의 기본 기능, 심볼찾기 / 기본적인 UX가 완전히 동일합니다.
   - 그리고 All Product Pack을 쓰면(... ) 새로운 프로젝트를 하게 될 떄, '아. 기존 툴킷을 그대로 유지해야하니 그냥 쓰던 언어 쓰자' 보다는. 어차피 다른 IDE도 지금 IDE와 거의 똑같은 환경을 제공해주기 때문에 과감하게 이사갈 수 있습니다.
   - 그럼에도 언어별 특징에 따라서 각 IDE마다 지원은 다 해줍니다. 가량 C++/CMake IDE인 CLion은 CMake로 프로젝트 구성을 할 수 있도록 마법사를 제공해주고, C++용 Runtime Executor (디버깅시 구문 테스트 해볼 수 있는 툴킷) 도 있고. C# IDE인 Rider는 .sln으로 프로젝트 구성을 도와주고, 유니티 통합등등. 언어별 특징을 기본적인 UX는 똑같은 상황에서 올려놔서 그것만 적응하면 됩니다. 짱 편해요.
   - 그리고 넵, 지르면 지를 수록 싸서 빠져나가기가 점점 어려워지고, 게다가 All Product Pack을 지르면 더이상 Java를 안 써서 해지하려고 해도 Golang을 추가로 쓰게되면 GoLand 때문에 해지를 못하고, Pycharm 떄문에도 못하고, Rubymine 떄문에도 못하고... 이런 Jetbrains의 선순환에 빠져 들어가게됩니다(... )
   - 게다가 라이센스 정책이 굉장히 파격적인데요, 지를 때 당시의 버전은 평생 제공에 / 개인용 제품을 개인 자금으로 구매했다면, 회사에서도 사용해도 됩니다. 이건 공식 Q&A에 있는 내용이라 모든 곳에 Jetbrains를 들이 붙게되는 계기가..

   흑흑 다 좋은데 연간 250달러에 달하는 가격이…
   회사에서 Visual Studio를 쓰는데, 집에서 Rider 체험판을 설치하여 체험해 보니 회사에서도 이것 좀 썼으면 싶은 생각이 들더라고요. 그런데 돈이 딸려서 구독을 못하겠습니다.

   https://jetbrains.com/ko-kr/lp/…
   한국어 기념으로 신규구독은 30퍼센트 할인 중입니다! 'ㅁ '/ 이번 기회에... (속닥속닥
   저는 이제 연간 19만원쯤 내는데, 개인적인 평가로는 얘가 제 생산성의 지대한 공헌에 비해서 너무 적게 받고 있는 것 같은... 느낌입니다. 다 빼고 그냥 심볼 찾기 기능이 너무 잘만들었어요. VS에서 심볼 찾으려면 구리고 오래걸리는 인터페이스를 써야 하는데, Rider는 Shift+Shift로 끝...

   계산해보니 12개월 할부시 월 24,000원 수준에서 월 17,000원 수준이 되는군요! 으아아 지름신아 물러가라…!

   팀쿡의 아이디어를 빌려오면, 겨우 대충 한달에 스타벅스 커피 5잔 정도밖에 안 된다는 놀라운 사실을 발견할 수 있습니다... (아님)

   결국 지름신에는 이길 수 없었어요 @_@ (결제하기로 결심)

   👍

   조금 전에 실제로 결제를 했습니다. 이게 실제 결제 페이지에 들어가 보니 할부가 안 되더라고요. 그래서 어떻게 할지 고민하다, 결국 예전부터 넣던 인덱스 펀드를 일부 환매하여 메꿔넣기로 했습니다. 이렇게 된 이상 골수까지 빨아먹겠다는 기세로 쓰는 수밖에 없네요 ㅠㅠ

   크윽.. 이렇게 된 이상, 인덱스 펀드 수익률보다 훨씬 더 뽑을 수 밖에 없겠군여...

   정말 그렇습니다 ㅠㅠ
   참고로 ""한국어언어팩"" 할인 코드를 적용했을 때의 실제 결제 가격은 191.73달러였고, 영수증에서 환산된 원화 가격은 222,195.9원이었습니다. 부가가치세를 달러 가격에 합쳐서 결제하더군요.

   이런 장점들이 있었습니다 'ㅁ '/ 3년 차가 넘어서 이젠 구독 해지하기도 뭣하네요 ㅋㅋㅋㅋ... 그런데 개인적으로는 생산성을 제가 돈을 준 것보다 10배는 더 올려준 것 같아, 아마 평생 내지 않을까하는 몇 안되는 구독 서비스입니다.

   👍
"
"https://news.hada.io/topic?id=4758","미국 국가안보국(NSA)의 쿠버네티스 보안 강화 지침 [59p PDF]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                미국 국가안보국(NSA)의 쿠버네티스 보안 강화 지침 [59p PDF]

   주요 내용
   - 취약점 또는 잘못된 구성을 찾기 위해 컨테이너와 포드 스캔하기
   - 최소한의 권한으로 컨테이너와 포드 실행하기
   - 네트워크를 분리하여 발생할 수 있는 데미지를 제어하기
   - 방화벽을 사용해서 필요없는 네트웍 연결을 제한하고, 암호화하기
   - 강력한 인증 및 권한관리를 통해서 사용자 및 관리자의 접근을 제한하고, 공격 표면(Attack Surface)을 한정시키기.
   - 관리자가 활동을 모니터링하고, 잠재적인 위험 동작에 대해 경고할 수 있도록 Log Auditing 사용하기
   - 정기적으로 모든 k8s 설정을 검토하고, Vulnerability 스캔을 사용해서 위험 방지및 보안 패치가 적용되었는지 확인하기

   Kubernetes를 Production에서 사용할 때 체크리스트 https://news.hada.io/topic?id=1129
"
"https://news.hada.io/topic?id=4731","After Dark in CSS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           After Dark in CSS

   - Berkeley Systems가 1989년 애플 매킨토시용으로 만들었던 스크린 세이버 시리즈 ""After Dark"" 를 CSS 만으로 재구현
   - Flying Toasters, Fish, Globe, Hard Rain, Bouncing Ball, Warp, Rainstorm, Spotlight 등

   저 플라잉 토스터는 나중에 윈도우용으로도 나와서 설치해 써봤던 기억이 납니다. 정말 오래전이네요..
   Aerial 2.0 - 항공 촬영 영상 스크린세이버 https://news.hada.io/topic?id=2795
   - Apple TV의 스크린세이버를 맥으로 옮긴 오픈소스, 윈/리눅스도 별도 지원
"
"https://news.hada.io/topic?id=4781","Athens Research 시즌 2 선언","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Athens Research 시즌 2 선언

   - Roam Research의 오픈소스 대체재로 시작한 프로젝트
   - Y Combinator에서 멘토로 Michael Seibel을 만남
   - 시즌 1은 $1.9M의 시드 라운드 투자를 유치하며 성공적으로 끝남
   - 시즌 2는 어벤저스 같은 팀을 구축하는 것으로 시작
   - PKM에서 CKM으로 피봇함
   - Personal Knowledge Management: 개인 지식 관리
   - Collective Knowledge Management: 협업 지식 관리
   - 개인 지식 그래프 대체제는 많지만, 협업 지식 그래프는 새로운 카테고리
   - 새로운 비전
   - Create a Collective Brain, a social network for learning, collaboration, and innovation
   - 학습, 협업 및 혁신을 위한 소셜 네트워크, 집단 두뇌를 만들자
   - 이를 위한 첫 번째 마일스톤으로 실시간 협업(RTC)을 설정함
   - 새로운 제품을 사용하며 피드백을 제공해줄 파트너를 구하고 있음
   - AI, 바이오, 하드웨어, 금융 등 협업 지식 그래프가 필요한 소규모(2~10인) 연구 팀을 대상으로 함

   오호 좋은 소식이네요.
   CKM으로 변경된건 조금더 보기는 해야될꺼같긴한데... 지금 PKM에서 옮긴건 잘한거 같네요..
   Roam Research를 대체재로 시작한 프로젝트가 많은데.. 다들 Roam Research를 따라잡지는 못하고 있어서 안타깝습니다.
   좋은 오픈소스가 있으면 넘어가겠는데 말이죠...

   참고로 Athens는 그리스어로 아테네라고 읽습니다.

   - Athens Research - OSS Knowledge Base, Alternative to Roam Research https://news.hada.io/topic?id=3796
   - 문서 작성법의 패러다임 시프트: 롬리서치 https://news.hada.io/topic?id=3767
"
"https://news.hada.io/topic?id=4676","SpaceX의 저궤도 위성 인터넷 Starlink 4개월 이용기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  SpaceX의 저궤도 위성 인터넷 Starlink 4개월 이용기

   - 기존 케이블과 동시에 사용하며 테스트
   - 대부분의 경우 기존 케이블과 별 차이없음. 속도는 케이블 보다는 느리지만 괜찮음
   ㅤ→ 집주위의 나무들 때문에 장애물로 인식되면서 끊기는 현상은 발생 (글쓴이의 특수상황)
   ㅤ→ 아마 인터넷이 스타링크 뿐이었다면 나무를 다듬었을 것
   - Dishy 안테나는 기술적으로는 훌륭(가격이 500달러이지만, 실제로 SpaceX는 판매당 손실을 보고 있음)
   ㅤ→ 몇몇 단점이 있음 : 사용시 매우 뜨거움, Cat6 이더넷 케이블 배선이 어려움
   ㅤ→ 하지만 더위,눈,비,번개등 다양한 날씨에도 잘 동작
   - 전원은 두개의 포트가 있는 PoE++ 스위치로 제공되어 라우터와 Dishy가 같이 사용
   ㅤ→ 평균적으로 하루종일 100W 정도의 전력을 소모 (케이블모뎀 + Asus 라우터는 5~10W)
   ㅤ→ 눈이 오던날은 125에서 피크시 175W까지 올라감
   ㅤ→ 하루 2.4 kWh 소모하므로, 미국 평균으로 보면 1달에 $10의 전기세 (중간크기 냉장고와 비슷)

   눈오는 날 전력소모가 많은 이유는, 눈에 파묻히지 않도록 녹이기 위해서 인 것 같더라고요.

   전력 소모가 엄청 나네요. 지붕에 설치하는 거라 태양광으로 하고 싶다는 사람들 있는거 같은데 쉽지 않을듯.
   스마트폰 앱에서 장애물을 보여주는 화면은 신기하네요.
   일반적으로 인터넷이 다 잘되는 우리나라 같은 경우엔 별로인 듯 하고,
   땅 넓은 미국이나, 사막 한가운데, 바다위나 산꼭대기 등에서는 꽤 좋은 대안일 듯
"
"https://news.hada.io/topic?id=4732","틱톡, 라이브 코호스트 지원 등 라이브 스트리밍 기능 강화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    틱톡, 라이브 코호스트 지원 등 라이브 스트리밍 기능 강화

   - 라이브 코호스트 : 두명이 동시에 라이브 진행
   - 라이브 관리 : 참석자 중 관리자 지정 기능(음소거 및 차단 기능 부여)
   - PIP 모드 : 라이브 보는 중에 다른일 을 하더라도 영상 계속 보기 가능
   - 라이브 Q&A : 시청자들이 질문하고 바로 선택해서 공개하고 답변 가능
   - 키워드 필터 : 댓글창을 끄거나, 최대 200개 단어까지 필터링해서 안보이게 가능
   - 차후에 라이브 알림수신을 제공하는 '라이브 이벤트', 카테고리별 라이브 를 찾을수 있게 해주는 '탑 라이브', 댓글 달기전에 불쾌감 주는 표현을 사전 방지 할수 있는 ""라이브용 다시 생각해보기"" 기능 등 공개 예정

   틱톡의 성장세는 정말 무서운 것 같아요. 기능 업데이트도 꽤 빠르게 하고요.
   최근에 올림픽 선수들이 올리는 짤들도 틱톡에서 많이 나오는 것 보니 저변이 정말 넓어졌구나 생각이 들더군요.
"
"https://news.hada.io/topic?id=4759","Notecard - 셀룰러 비용을 내장한 IoT 개발용 기기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Notecard - 셀룰러 비용을 내장한 IoT 개발용 기기

   - Ray Ozzie의 스타트업인 Blues가 만드는 개발자 친화적 IoT 기기
   ㅤ→ $49에 기기와 10년간의 데이터 비용 포함(500MB)
   ㅤ→ 2줄의 코드로 JSON in/out 가능. 사용하기 쉬운 API
   - 하드웨어
   ㅤ→ M.2 커넥터
   ㅤ→ ARM Cortex-M4 MCU with 2MB Flash
   ㅤ→ 고성능 3축 가속도 센서 와 온도 센서
   ㅤ→ GPS 안테나 커넥터
   ㅤ→ 보안용 STSAFE Secure Element
   - 컴패니언 개발보드인 Notecarrier는 별도 판매
   ㅤ→ Notecard 와 연결해서 다양한 연결 용도 제공 : 배터리 커넥터, Raspberry Pi 연결, Breadboard Connector 등
   - Notecard는 지역/네트워크별로 가격은 조금씩 차이 있음
   ㅤ→ 북미용 LTE Cat-M $49
   ㅤ→ 북미용 LTE Cat-1 $59
   ㅤ→ 글로벌 NB-IOT & LTE-M $59
   ㅤ→ EMEA LTE Cat-1 $69

   Blue Wireless는 MS의 Chief Software Architect 였던 Ray Ozzie가 2019년에 스텔스모드로 창업한 스타트업 입니다. 2020년에 120억을 펀딩 받았네요.(투자자는 비공개)
   레이 오지는 로터스 노츠를 만들었고, 나중에 IBM이 로터스 인수하면서 조인했다가 독립해서, 그루브 라는 P2P 그룹웨어 만들다가 MS가 인수하면서 MS의 CTO가 되었던 사람이죠. 빌게이츠가 세계 최고의 개발자라고 칭찬하는 그를 데려오기 위해서 그루브를 인수했다고 알려져 있기도 하구요. 그가 퇴사전인 2010년까지 Azure를 진두지휘 했었는데, 지금 Azure 가 MS의 새로운 미래 먹거리가 된거 보면, MS입장에서는 좋은 선택 이었던 것 같아요.
"
"https://news.hada.io/topic?id=4683","구글, 1글자 오타로 크롬OS에 로그인 불가능한 업데이트 배포 후 수정본 배포","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              구글, 1글자 오타로 크롬OS에 로그인 불가능한 업데이트 배포 후 수정본 배포

   - 비밀번호를 확인하는 조건문에 && 대신 & 를 사용해서 제대로 된 비밀번호로도 로그인 자체가 불가능
   - 구글이 수정버전을 배포했으나, 배포에 몇일이 걸릴 수 있으니 이미 업데이트 되고 로그인 불가능하게 된 사용자는 기다리거나 ""Powerwash(로컬 데이터를 모두 지우는 것)"" 필요
   - 특히 문제 있는 91.0.4472.147 버전 사용자는 크롬북을 끄지 말아야 함

   로그인 테스트 조차 자동화가 안되어있다니 신기하군요

   남일같지 않는게....
   저도 C언어 임베디드 프로그래밍할때 같은 실수로 버그 찾아내느라 엄청 고생한 기억이...

   구글도 이런 실수를 한다는 것에 안도(?)를..
   물론 데이터 날린 사람들에게는 심심한 위로를..
"
"https://news.hada.io/topic?id=4756","악성 PyPI 패키지가 신용카드 정보를 훔치고 코드를 삽입 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   악성 PyPI 패키지가 신용카드 정보를 훔치고 코드를 삽입 중

   - JFrog 보안연구팀이 몇개의 악성 패키지를 발견해서 PyPI에 제보해서 제거 완료
   ㅤ→ noblesse, genesisbot, aryi, suffer, pytagora..
   ㅤ→ Discord 토큰과 신용카드, 시스템 정보를 훔치는 코드
   - 이 패키지들은 이미 30,000번쯤 다운로드 된 것으로 밝혀져
   - 어떻게 정보들을 훔쳐가는지 기술 분석 포함
   - 요즘 npm, PyPI, RubyGems 등이 멀웨어 공격을 받고 있으니 주의 요함

   NPM에 그런 패키지들 논란은 많이 있었는데 역시 파이썬도 안전하지 못하군요.
"
"https://news.hada.io/topic?id=4736","M1 맥 지원하는 Lunar 개발기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          M1 맥 지원하는 Lunar 개발기

   - Lunar 개발자의 M1 지원 개발후기
   ㅤ→ DDC 명령을 I²C로 보내서 외장 모니터의 밝기/볼륨을 조절하는 도구
   - M1 맥은 새 커널이고, 기존 API가 전혀 동작하지 않음
   ㅤ→ 기존 맥보다는 아이폰과 더 비슷
   - 라즈베리Pi 를 통해서 밝기 조정을 했다는 사용자 제보를 받아서 그걸 통해서 네트웍 기반의 DDC컨트롤을 구현
   - Private API인 IOAVServiceReadI2C/IOAVServiceWriteI2C 를 통해서 I²C 를 M1 에서도 보낼수 있다는 제보
   - 최종적으로 Intel 맥처럼 똑같이 DDC 호출이 가능해 짐

   Lunar - 맥 외장 모니터 밝기 조절 유틸 https://news.hada.io/topic?id=2772
"
"https://news.hada.io/topic?id=4684","Debian 11 'Bullseye' 2021-08-21 릴리즈 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Debian 11 'Bullseye' 2021-08-21 릴리즈 예정

   GNU/Linux 배포판 Debian 11 'Bullseye' 릴리즈 날짜가 2021-08-21 로 정해졌습니다.

   와, 데비안.
"
"https://news.hada.io/topic?id=4799","ots - 1회성 URL로 e2e 암호화된 Secret 공유하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ots - 1회성 URL로 e2e 암호화된 Secret 공유하기

   - API Key, 암호 등을 남과 공유할 때 사용하는 도구
   - 한번 보거나, 안봐도 특정 시간이 지나면 자동으로 삭제
   - 로컬에서 암호화된 뒤 전송됨
   - CLI/웹 버전으로 사용가능 (셀프호스트 버전은 개발중)
   $ ots new -x 2h
   Enter your secret:
   ㅤ→ 한번 보거나, 안보더라도 2시간이 지나면 지워지는 1회용 URL이 생성됨
"
"https://news.hada.io/topic?id=4701","Ask GN: 근처 사람들은 잘 안 쓰는데, 유용하게 쓰고 계신 유틸러티가 있으신가요? ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Ask GN: 근처 사람들은 잘 안 쓰는데, 유용하게 쓰고 계신 유틸러티가 있으신가요?

   저는 예전엔 Notion도 넣었겠지만. 이제 모두 쓰셔서( ...) 영광스럽게도 이 목록에는 제외했습니다.
   * JetBrains InCloud YouTrack 개인 플랜 버전 - 무료인데 URL도 주고 멋진 이슈트래커도 줍니다. 게다가 원한다면 직접 호스팅도 할 수 있고, 그것마저 무료라서 데이터까지 안전하게 관리할 수 있죠. 제 사이드 프로젝트를 관리하는 멋진 친구랍니다.
   * Roam Reserach - 관계형 노트 앱의 선구자죠. 개발 자체가 문단마다 레퍼런스를 걸수 있게 설계되어있어서 글이 쌓이면 쌓일 수록, 글을 쓰는 건 Notion보다 Roam이 더 연결이 잘 된다는 장점으로 Roam을 선택할 수밖에 없는 효용을 줍니다.
   * 정규식 - 생각보다 쓰시는 분이 적더라고요! 개인적으로는 삶의 질이 한 50퍼센트는 더 오를 멋진 도구입니다. https://regexr.com/ <- 여기서 미리 한번 쳐보고 들어가는데, 정말 좋아요.
   * Grep.app - 위 정규식으로 Github 50만 리포지토리의 내용을 검색할 수 있는 페이지입니다. (https://grep.app/) GeekNews에도 한번 올라왔지만, 이 페이지로 자주 안 쓰는 라이브러리가 주로 오픈소스에서는 어떻게 사용하는지 빠르게 예제를 찾을 수 있어 좋았어요.
   * Node.js - 검색으로 해결 불가능한, 간단한 파싱같은 건 JS의 힘을 빌리는 게 훨씬 좋습니다.
   * Jetbrains IDEs - 최대 장점은 어떤 언어든, 이미 친숙한 인터페이스로 사용 가능하다는 점인 것 같아요. C#, JS, TS, C++, Obj-C, Golang... 모두 똑같은 인터페이스로 이미 쓰던 단축키를 활용해 늘 쓰는 기능을 모든 곳에서 쓸 수 있습니다.
   저는 이 정도인 것 같은데. 여러분은 어떤 것들이 있으신가요 'ㅁ '?

   HxD - 윈도우즈 바이너리 편집기 입니다. 유틸성 기능도 충분히 들어있고 가볍습니다. 아주 오랜기간동안 애용하는 녀석입니다.
   dependencies (github) - 윈도우즈 바이너리 파일의 의존성을 탐색해줍니다. 많이 쓰던 dependency walker라는 녀석이 있는데, 탐색시간이 아주오래걸려서 못쓸 지경인데, 이것으
   로 시간을 많이 절약했네요.
   API Monitor - 윈도우즈 프로그램을 모니터해줍니다. 어떤 프로그램이 어떤 함수를 사용하는지 등등 깊지 않은 레벨에서 리버스 엔지니어링을 할 수 있습니다
   XShell - 윈도우즈용 telnet/ssh 클라이언트 입니다. putty등 많은걸 써봤지만, 얘가 가장 마음에 듭니다. Xmanager에 포함되어 있는데 풀 제품을 사용 하면, GUI 작업도 가능합니다
   VIM - 어느 플랫폼을 가도 사용합니다. 키보드에 손이 올라가는 한 사용 할 것 같습니다
   dbeaver - 각종 DB에 접속해서 쿼리를 실행할 수 있습니다. 아시다시피 대안 소프트웨어는 많습니다. 지원하는 DB가 많은 편입니다. 필요한 드라이버는 알아서 다운 받아서 설치해주기 때문에 DB 정보만 알고 있으면, 금방 접속해 볼 수 있습니다. eclipse 기반이라 플랫폼에 종속되지 않을 것 같네요.
   KVM - 한때 시너지쓰다가, 종종 생기는 문제가 발목을 잡아 결국에는 그냥 KVM 없이 직접 쓰게되었습니다.
   valgrind - 응용프로그램의 메모리 오류나 누수를 탐지하는데 사용합니다. 같이 컴파일하는 방식이 아니고 이미 만들어진 프로그램을 이것을 통해 실행시켜 분석합니다. 결과는 꽤나 만족스러운 편입니다.
   openssl - 이게 왜 있지 싶으실텐데, 내부 HTTPS 환경을 만들기 위해 사설 인증서 만들어서 사용하고 있습니다. 본인의 루트 인증서를 만들어서 등록하고나면, 내부 환경이 편해집니다. (저에 맞게 간단한 스크립트 만들어서 사용중입니다)
   ※ 정리도 할 겸 계속 쓰려고 생각해보니, 리눅스나 맥에서는 기본적으로 제공되는 도구를 주로 사용해왔네요

   * music folder player - 안드로이드용 음악 플레이어
   (https://www.zorillasoft.de/MusicFolderPlayer.html)
   스트리밍 시대지만 저는 여전히 음악 파일을 다운로드 받아서 듣는 경우가 잦은데요. 클래식하게 디렉토리 구조로 파일을 관리할 수 있습니다

   * VSCode 확장:
   foam: VS Code의 확장인데, Roam Research 형식을 그대로 따라갈 수 있습니다. 템플릿이 좀 미흡하지만 깃허브 페이지로 퍼블리싱도 되고, 전부 텍스트 파일이므로 git으로 관리도 되구요.
   dendron: foam과 비슷한 확장인데, 좀 더 flat하게 관리하는 특징이 있습니다. 몇 번 써보고 쓰지는 않았습니다.
   TODO+: 투두리스트를 텍스트로 쉽게 관리할 수 있습니다. 특히 foam의 데일리 저널을 .todo로 만들면 데일리를 투두로 관리하기 좋습니다.
   * 맥:
   SlowQuitApps: 맥에서 cmd+Q를 누르면 아묻따 앱을 종료하는데, 이걸 깔면 n초 딜레이를 줄 수 있습니다 (인디케이터 표시됨)
   wifi-password: 현재 붙어있는 와이파이의 비밀번호를 평문으로 알려줍니다.
   Dozer: https://github.com/Mortennn/Dozer 맥에서 아이콘들을 가려주는 Bartender의 오픈소스 대체 앱으로 비슷한 오픈소스 중 가장 완성도가 높습니다.
   neofetch: 맥의 커맨드라인 시스템 정보 보여주기 앱 중 가장 확장성이 좋습니다.
   appcleaner: 맥의 앱은 그냥 휴지통으로 드래그하면 삭제되지만, 일부 찌꺼기가 남습니다. 이 앱은 찌꺼기까지 한꺼번에 지우게 해줍니다.
   iina: vlc보다 인터페이스가 좀더 유저프렌들리 한 미디어 플레이어입니다.
   keycastr: 맥에서 키입력을 화면에 표시해줍니다. 데모 비디오 찍을때 좋습니다.
   omnidisksweeper: 맥의 하드 용량관리 오픈소스 툴입니다.
   Amphetamine: 맥의 슬립을 막는 유틸 중 최고존엄입니다.
   EasyRes: 맥에서 해상도를 강제로 지정해야할 때 쓰기 좋습니다. 관련 유틸 몇개를 써봤는데 이게 제일 낫더군요.
   EdgeView2: 국내 개발자가 만드신 툴로 이미지 뷰어입니다. 만화책 볼때 특히 좋습니다.
   Monodraw: 텍스트로 그림을 그릴수 있습니다. 코드에 주석 달때 특히 유용
   Pine Player: 역시 국내 개발자가 만드신 툴로 음악 재생기입니다.
   * 윈도
   DisplayFusion: 멀티 모니터 관리 툴로 요새 윈도 10에서 멀티모니터 지원이 강화되서 쓰임새는 줄어들었지만, 비슷한 유틸리티 중 가장 쓰기 좋습니다. 스팀에서 사면 더 쌉니다.
   windirstat: 윈도 하드 용량관리 툴입니다.
   winmerge: 파일 비교 툴입니다.
   winscp: 윈도 FTP 앱 중 가장 좋습니다. 개인적으로는 파일질라보다 낫습니다.
   * 공용
   youtube-dl: 유튜브 영상 다운받을 때 최고의 툴입니다.
   lepton: github gist를 코드 스니펫 툴로 사용할 수 있습니다.
   bitwarden: 패스워드 매니징 툴로 오픈소스, 셀프 호스팅, 클라우드 관리가 가능하며 무료로 거의 대부분의 기능을 제공합니다.
   cryptomator: 파일 단위 암호화를 할 수 있어 클라우드에 개인적인 파일을 올릴 때 편합니다. 베라크립트는 컨테이너로 관리되서 통으로 올라가거든요.

   오오.. 엄청 방대하게 알려주셔서 감사합니다. 'ㅁ '. ThinkPad에 비해서 Macbook(M1 Pro) 이 거의 발열이 없어서 주력 랩톱으로 써보고 싶은데. 계속 Mac의 윈도우 매니징이나 유틸에는 적응이 안 되서 정착을 못하고 있었거든요. 위 리스트가 큰 도움이 될 것 같습니다. (__ )/

   윈도우 프로그램 파워토이의 팬시존 기능 추천합니다. 윈도우 창 배치 영역 미리 지정할 수 있는데 꽤 편하더군요
   https://github.com/microsoft/PowerToys

   이제 펜시 존 없이 윈도우를 쓰기 너무 어렵더라고요 ㅋㅋㅋ... Mac에서 가장 갈증났던 기능이었습니다. ARM64 서피스 프로 X랑..
   알려주셔서 감사합니다. 'ㅁ '/

   Rony Radio - MacOS/iOS 용 라디오/스트리밍 플레이어 추천합니다
   스트리밍 채널에 보면 장르별로 (클래식,재즈,팝,K-Pop) 계속 들을 수 있어 좋더라구요
   https://apps.apple.com/kr/app/…

   오오... 감사합니다. Spotify 라디오 질리면 들어봐야겠네요 'ㅁ '

   Listrary - osx의 spotlight 같은 기능인데 사실 이것보다는 기존에 열어놨던 파일탐색기 위치를 앱 내에서 파일 선택창과 동기화 시켜주는 기능이 제일 만족스럽습니다. 말보다는 동영상을 한번 보시면 이해가 빠르실듯 합니다: https://www.youtube.com/watch?v=9T9-OtRVeUw
   https://www.listary.com/
   StrokesPlus.net - 마우스 제스처를 윈도 어플리케이션 어디서든 다 사용할 수 있게 해줍니다. 설정법이 좀 복잡해서 그렇지 한번 설정해놓으면 아주 좋습니다.
   https://www.strokesplus.net/
   AltDrag - 정말 오래된 프로그램인데, 제목 그대로 alt+마우스 드래그 해서 창을 옮기거나, alt+우클릭 드래그 해서 창 사이즈를 조절시켜주는 프로그램입니다.
   https://stefansundin.github.io/altdrag/
   Dell Mobile Connect - Windows+ iPhone 의 경우에도 노티, 전화, 사진, 파일 등등을 확인할 수 있는 어플리케이션입니다.
   Dell 에서만 사용할수 있다고 하는데, registry 키 추가를 통해 dell 이외의 컴퓨터에서도 사용이 가능합니다. ㅎㅎ
   Bing Wallpaper - 하루에 한번씩 배경화면을 바꿔줍니다. 워터마크가 있지만 워낙 좋은 배경화면들이 많아서 쓰고 있습니다. 가끔 해당 배경화면이 궁금하면 클릭해서 추가정보를 볼수도 있습니다.
   https://www.microsoft.com/en-us/bing/bing-wallpaper?rtc=1#primaryR2
   SecretDNS - DNS 암호화
   제가 사는 나라가 인터넷 감시 국가라, medium같은 사이트가 블럭되는 경우가 많습니다. 이를 우회하기 위해 사용합니다.
   https://secretdns.kilho.net/
   엣지익스텐션 - Wikiwand: 위키피디아를 좀더 읽기 쉬운 포멧으로 바꿔줍니다.
   https://www.wikiwand.com/
   엣지익스텐션 - SimplePIP: PIP 기능을 활성화 시켜줍니다.
   https://microsoftedge.microsoft.com/addons/detail/…

   'ㅁ '/ 알려주셔서 감사합니다. 엣지 유저로써 줍줍할 만한 게 많군여 호홓..

   obsidian - 관계형 노트앱은 옵시디언으로 넘어왔습니다. 여러모로 맘에 들더라구요
   synergy - 재택하면서 윈도우랑 맥 오갈 경우 하나의 키/마로 왔다갔다 할 수 있어서 편합니다

   제가 Roam을 5년 구독을 끊어버려서(... ) 그리고 노트앱이 마이그레이션에 용기가 많이 필요하더라고요. 한번 몇몇 분야는 옮겨보면서 어떤 게 괜찮은지 저울질 해봐야겠네요.
   KVM 프로그램은 (시너지같은 프로그램은) 실망을 꽤 했는데. 한번 써봐야겠네요! 'ㅁ '/ 알려주셔서 감사합니다.

   다른 분들이 잘 안쓰시는지는 모르겠는데, 맥북에서 'Magent' 이라는 앱을 아주 잘 쓰고 있습니다.
   맥에서 윈도우와 같이 창을 모서리로 가져가면 자동으로 크기에 맞게 리사이즈 해주는 앱입니다.

   👍 알려주셔서 감사합니다. 'ㅁ '/ Reactgle과 다르게 창 포메터가 아니라 ... 윈도우에서 끝자락에 대면 짜잔해주는 앱이군여.

   저는 윈도우 리사이저로 맥을 쓸 때는 Reactagle 이라는 친구를 쓰는데, 사실 MS가 만든 윈도우용 PowerToys의 Pancy Editor 보다는 좀 더 구린 것 같아요(... )

   Geek News에서 소개해주셨던 FIG 입니다.
   터미널에서 자동완성을 도와주는 도구인데요.
   한번 사용해보고 너무 편해서 꼭 사용하고, 주변 동료에게도 추천하고 있습니다!
   예전에 zsh-autocomplete와 fig가 서로 충돌이 있어서 사용하기 불편했었는데요.
   해당 버그가 리포트 된지 얼마 안되서 금방 수정되어 릴리즈 되었습니다.
   이슈에 대해 대응도 빠르고 업데이트도 빨라서 더 애정하게 되었습니다.
   https://fig.io/
   https://news.hada.io/topic?id=4335

   오오... 지금 맥을 Notion 머신으로만 쓰고 있는데, 개발을 하게 되면 써보고 싶네요. 'ㅁ ' 알려주셔서 감사합니다. 'ㅁ '/

   Athens - Roam Research 오픈소스 대체 버전입니다. 기기 간 동기화 부분은 Adobe CC 동기화를 통해서 하고 있습니다.
   Sleep Cycle - iOS 앱으로 수면 기록을 위해서 구독해서 사용하고 있습니다.
   Day One - 아이폰에서만 사용하고 있습니다. 사용 빈도가 그렇게 높진 않지만, 뭔가 적고 싶어지는 날에 사용하고 있습니다.
   Concepts - iPad와 애플펜슬을 이용해서 종이 연습장, 메모장 대용으로 사용하고 있습니다. 가장 큰 특징은 무한 캔버스, 벡터 기반으로 확대/축소가 용이한 점이 좋아서 사용하고 있습니다.

   Sleep Cycle
   아이폰 3GS 때 구매해서 (그 때는 구독형이 아니었죠) 지금까지 잘 쓰고 있습니다.
   애플워치 연동도 되서 꽤 편리합니다.

   저는 수면 추적은 AutoSleep을 써보고 있는데, 혹시 써보셨다면 Sleep Cycle가 어떤 점이 더 좋았는지 알 수 있을까요 'ㅁ '? 유효 수면 시간을 찍어줘서 참 고맙게는 쓰고 있는데 더 좋으면 갈아 타려고요 (...)
   Roam Research는 계속 오픈소스 경쟁자가 등장하는군여. 5년 구독을 끊어버린 저로써는 계속 쓰고 있지만, 부디 좋은 경쟁이 되어 더 발전해갔으면 좋겠습니다.
   알려주셔서 감사합니다. 'ㅁ '/

   Sleep Cycle 초창기부터 사용하다가 애플워치 구매 이후 AutoSleep 으로 갈아탔습니다.
   Sleep Cycle 이 기능은 훨씬 다양하고, 적절한 시간에 깨워주는 점이 너무 좋지만 RAW 데이터를 빼는 게 어려워 보이더라구요 (가능한건지 모르겠습니다). 애플워치 연동 기능도 부족하구요.
   데이터 뽑아서 분석하려고 보니 AutoSleep 이 제일 괜찮게 뽑을 수 있어서 옮겨왔습니다.
   기능과 자체 분석만 두고 보면 무조건 Sleep Cycle 사용하겠다 싶습니다..

   AutoSleep은 사용해본적은 없구요. 검색해봤을 때 왓치용만 보여서 정확한 기능을 파악하지는 못했는데요. 앱 소개 페이지에서 확인 가능한 차이로는 Sleep Cycle에서는 수면 상태를 마이크로 모니터링해서 코골이나 무호흡, 잠꼬대 같은 걸 모니터링 해주고 있습니다. 수면 도우미라고해서 수면 유도 소리를 재생해주는 기능이 있지만 저는 오히려 방해하는 것 같아서 사용하고 있지는 않고 있구요. 알람은 2개의 모드로 특정 시간에 알람 해주는 것과 설정 시간대에서 수면이 가벼워지는 시기에 깨워주는 방식이 있습니다. 저는 알람은 따로 하지 않고 깨어나질 때 일어나는 수면을 하고 있어서 현재는 사용하고 있진 않네요. 홈킷 연동이나 수면 메모, 기상 컨디션 기록 등을 할 수 있지만 귀찮은 나머지 수면 모드만 사용하고 있습니다. 아, 저는 왓치는 사용하고
   있지 않아서 아이폰으로만 사용하고 있습니다.

   제가 요즘 가장 많이 쓰는 것 중에 하나는 Marcel 이라는 서비스인데요.
   iOS/Android 앱도 있고, 웹 플랫폼도 있습니다.
   아티스트 들이 자신의 작품을 등록해서 보여주고, 팔 수 있도록 해주는 서비스 입니다.
   - 웹 https://www.marcelforart.com/
   - iOS https://apps.apple.com/US/app/id1416032467?mt=8
   - Android https://play.google.com/store/apps/…
   저는 아티스트 정도까지는 아니고.. 취미삼아 보드게임 피겨들 도색을 하고 있는데요.
   완성작들을 보드게임별로 모아서 관리도 가능하고, 별도의 웹페이지도 만들어줘서 잘 활용하고 있습니다.
   ( 아직 도색 의뢰 받는데까지는 엄청 멀었지만.. 언젠가는? ㅎㅎ )
   - https://marcel.pt/xguru

   오오.. 멋있네요 'ㅁ 'b. 아티스트를 위한 플렛폼이라니. 도색 퀄도 완전 멋있어요! 제가 색깔을 넣으면 더 좋아지는 게 아니라 더 구려지는 경험을 초등학교 미술시간부터 고등학교 미술시간까지 꾸준히 해와서 그런가(... ) 색칠 하는데 부담감이 심해서... 글룸헤이븐 피규어들의 밋밋한 플라스틱 덩어리를 벗어나고는 싶은데 색칠은 못하겠더라고요 ;ㅁ ;.
   판매를 위한 플렛폼도 제공해주는 건 독특한 것 같아요. 저런 도색이나 아니면 보드게임 악세사리 같은 것들은 etsy 라는 걸 주로 이용하는 것 같던데. 그런 쪽은 판매를 위한 거라서 저런 소개는 또 따로 해야 했었는데, 저 플렛폼이 과연 두 개의 시너지를 어디까지 끌어올릴 수 있는지 기대됩니다.
"
"https://news.hada.io/topic?id=4710","Ask GN: 시니어가 주니어들에게 꼭 해주고 싶은 말은?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ask GN: 시니어가 주니어들에게 꼭 해주고 싶은 말은?

   취지? 꼭 주니어와 시니어의 관계가 아니어도, 누군가가 누군가에게 '조언'하는 것이 굉장히 어려운 시대가 되었다고 생각합니다. 모든 것이 '꼰대질'로 비춰질 수 있는 시대니까요. 하지만 그런 시대에도 누군가는 진심어린 조언을 하고 싶어하고, 또 누군가는 다소 따갑더라도 그런 조언을 필요로 합니다. 저는 후자이고, 전자의 사람들을 찾고 있습니다.
   -----
   누가? 시니어가.
   *시니어: 편의상 10년 이상 현업 경력을 시니어라고 부를게요. 하지만 이 조건을 충족하지 못하셨어도 본인이 시니어라고 생각하신다면 간단히 자신을 소개하고 써주시면 될 것 같습니다. 다만 경력이 10년 이상이라면 스스로를 주니어라고 생각하셔도 시니어입니다! (웃음)
   누구에게? 주니어에게.
   *주니어: 현업에 속해 있지만, 아직 주관적으로나 객관적으로나 주니어라고 불릴 수 밖에 없는 사람들. 시니어들은 무슨 말인지 아실겁니다.
   -----
   Q. 시니어인 당신이 지금 주니어에게 해주고 싶은 말이 있다면 그것은 무엇인가요?

   github 에 계정 파고 관심가는 오픈소스에 하루 1시간만 남에 코드 읽고 재구현 해본다면 2년차도 시니어

   내가 없어도 일은 돌아가야 합니다.
   그렇다면 내가 필요없는거 아닌가요?
   내가 있으면 일이 나아지는 그런 사람이 되어야 합니다.

   마음은 아직도 주니어인데 체력에서 점점 시니어가 되어가는가 싶은 10+년차입니다.
   꼭 신경 썼으면 하는 것은 건강 관리입니다. 정작 저도 잘 못하고 있는 부분인데요.
   잘 관리하지 않으면 손목, 손가락, 척추, 목, 악관절 등등 모두 고장날 수 있습니다.
   보통 증상이 나타나면 꽤 진행된 경우가 다반사입니다. 신호가 오기 전에 잘 관리하셔야 합니다.
   의식적으로 나쁜 자세를 피하시고, 커피와 탄산보다는 물을 많이 마시고, 적당한 운동을 챙겨주세요.
   적으면서 저도 반성을 다시 한번 하고 갑니다.

   벤처/중소기업/대기업/스타트업 창업 등등을 다 겪어본 현업 20+년차 입니다.
   제가 요즘 다른 개발자들에게 하는 조언은 ""나만의 정보 습득 채널 만들기와 소비 습관 만들기"" 입니다.
   개발자들은 자신의 일에 빠지다 보면 실제로는 다른 것들 과는 멀어지게 됩니다.
   이건 회사의 크기에 상관없이 다 그런 것 같아요. 계속 뭔가 바쁘거든요.
   근데 이렇게 바쁜 생활이 6개월 이상 지속되다 보면, 세상의 흐름과 단절되고 자신만 멈춰 있는 현상이 종종 발생합니다.
   지금 있는 분야가 아니더라도, 내가 당장 쓸 기술이 아니더라도, 계속 보고는 있어야 뒤쳐지지 않는 세상이 된 것 같아요.
   그래서 가능하면 나만의 정보 습득 채널을 만드는 게 중요합니다.
   - 긱뉴스를 보는 것도 좋겠지만,
   - 기술 뉴스 레터도 받아보고,
   - 블로그 구독도 하고 [1] ,
   - 해외 커뮤니티들도 가보고,
   하면서 나만의 채널을 만들어서 ""지속적으로 정보를 습득할 수 있는 환경""을 만들어 두는 거에요.
   그리고 나서는, ""나만의 소비 패턴""을 만들어야 합니다. 저렇게 구독만 한다고 아무 것도 되지 않아요.
   뉴스를 매일 소비하는 습관과, 머리에 기록해 두기 위해, 다시 언젠가 찾아 보기 위해, 아니면 테스트 해보기 위한 자신만의 패턴을 만듭니다.
   예를 들어 이런거죠.
   - 출/퇴근시에 뉴스를 훓어보고, 기록해 둘만한 건 Pocket 등에 저장한다.
   - 주말에는 Pocket 에서 꺼내어서 제대로 읽어두거나, 아니면 코드를 실행해보거나, 예제를 만들어 본다.
   - 이렇게 해본 것들은 가능하면 다시 기록이 남는 어딘가에 저장한다.
   ㅤ→ TIL(Today I Learned) [2] 같은 GitHub Repo 를 만들어서 기록
   ㅤ→ 또는 블로그에 간단히 요약해서 정리
   이렇게 얼마간 하다 보면 내가 새로운 정보를 계속 습득하면서도,
   그게 다시 남에게 보여줄 수 있는 소비 패턴이 되어서 도움이 될 거라고 봅니다.
   [1] 기술 & 스타트업 뉴스레터 및 블로그 모음 https://news.hada.io/topic?id=2505
   [2] 1년간의 TIL(Today I Learned) 기록 https://news.hada.io/topic?id=4189
"
"https://news.hada.io/topic?id=4780","Postgres.app - 맥용 PostgreSQL","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Postgres.app - 맥용 PostgreSQL

   - 표준 맥 앱처럼 패키징된 PostgreSQL 설치본
   ㅤ→ 전체 기능 지원
   ㅤ→ 편리한 GUI 제공
   ㅤ→ PostGIS, plv8(JavaScript), wal2json 등 확장 포함
   ㅤ→ 여러 pg버전 동시 실행 가능
   ㅤ→ 마이너 업데이트 자동 설치
   - 쉬운 설치
   ㅤ→ 다운로드 후 /Applications 에 복사후 실행
   ㅤ→ Initialize 눌러서 서버 생성
"
"https://news.hada.io/topic?id=4715","Mobian - 모바일용 Debian","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Mobian - 모바일용 Debian

   - 스마트폰/태블릿용 데비안 배포본
   ㅤ→ Phosh (Purism이 만드는 폰쉘) 사용
   ㅤ→ Pinephone, Pinetab, Librem 5, Oneplus 6 같은 기기들 지원
   - 변경사항들을 최대한 Upstreaming 하고 Debian Pure Blend* 중의 하나가 되는 것를 목표로 함
   * Debian Pure Blend : 특정 필요를 가진 사람들의 그룹을 위한 솔루션
   ㅤ→ 어린이, 과학자, 게이머, 법률가, 의료진, 시각 장애인 등을 위한 특수한 패키징들이 있음

   PinePhone Beta 프리오더 시작 https://news.hada.io/topic?id=3924
   - 오픈소스 스마트폰
   ㅤ→ $199 — 3GB 램; 32GB eMMC (USB-C 독 포함)
   ㅤ→ 쿼드코어 ARM Cortex A53 64-Bit SOC & Mali 400 MP2 GPU
"
"https://news.hada.io/topic?id=4754","Google Tensor는 올 가을 새로운 Pixel 6에서 데뷔합니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Google Tensor는 올 가을 새로운 Pixel 6에서 데뷔합니다

   AI는 우리 혁신 작업의 미래이지만, 문제는 우리가 우리의 사명을 완전히 추구하는 것을 방해하는 컴퓨팅 한계에 부딪혔다는 것입니다. 그래서 Pixel 사용자에게 가장 혁신적인 AI 및 머신 러닝(ML)을 제공할 수 있도록 모바일용으로 구축된 기술 플랫폼을 구축하기 시작했습니다. 우리는 Pixel 6을 구동하기 위해 자체 SoC(System on Chip)를 만들기 시작했습니다. 그리고 몇 년이 지난 지금, 거의 다 왔습니다.
   Tensor는 Pixel 휴대전화용으로 특별히 제작된 최초의 맞춤형 SoC이며 올 가을 말에 Pixel 6 및 Pixel 6 Pro에 전원을 공급할 예정입니다.
   우리의 실리콘을 설계한 팀은 Pixel을 더욱 강력하게 만들고 싶었습니다. 예를 들어 Tensor를 사용하여 칩의 모든 부분에 대해 생각하고 Google의 컴퓨터 사진 모델을 실행하도록 사용자 정의했습니다. 사용자에게 이는 완전히 새로운 기능과 기존 기능의 개선을 의미합니다.
   Tensor를 사용하면 우리가 항상 상상해 왔던 Google 휴대전화를 만들 수 있습니다. Google의 가장 강력한 기능을 활용하는 동시에 고도로 개인화된 환경에서 계속 개선되는 휴대전화입니다. 그리고 Tensor의 새로운 보안 코어와 Titan M2를 통해 Pixel 6은 모든 휴대전화에서 가장 많은 하드웨어 보안 계층을 갖게 됩니다.

   구글, Pixel및 크롬북용 자체 칩 개발 중 https://news.hada.io/topic?id=1898

   루머에 따르면 내부 코드명은 Whitechapel, 칩이름은 GS101로 불리고 있고, 2xCortex-A78, 2xCortex-A76, 4x Cortex-A55로 구성되고, Pixel 2의 Pixel Neural Core, Pixel 4의 Pixel Neural Core와 같은 NPU가 통합된 SoC로 구성된다고 하네요. AI Computing 성능이 얼마나 나올지 기대 됩니다.
   https://9to5google.com/2021/04/…
"
"https://news.hada.io/topic?id=4748","The Sample - 뉴스레터 추천받아 골라보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      The Sample - 뉴스레터 추천받아 골라보기

   - 관심분야를 선택하고 이메일 주소를 등록하면 매일 다른 뉴스레터를 추천해주는 서비스
   - 각각의 뉴스레터를 선 구독 안하고, 보내주는 이슈를 먼저 하나 읽어본 뒤에 관심 있으면 구독하는 방식
   - 현재 900+개의 뉴스레터에서 추천

   - 처음에 신청한 분야에서만 꼭 추천하지는 않습니다. 이유를 설명한 글 : https://jacobobryant.com/p/why-did-i-get-this/
   - 추천 횟수는 변경 가능 합니다 : 하루 한번, 일주일에 두번, 일주일에 한번 또는 구독 해지
"
"https://news.hada.io/topic?id=4723","생산적인 프로그래머를 위한 CLI 도구들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         생산적인 프로그래머를 위한 CLI 도구들

   - broot : 디렉토리 네비게이션
   - funky : 쉘 함수를 더 쉽게. 특정 폴더에 들어갈때 로드하고 벗어나면 언로드
   - fzf : 퍼지 파인더
   - McFly : 쉘 히스토리를 지능형 검색
   - zoxide : 더 나은 cd
   - gitupdate : 임시로 저장할때 파일제목(확장자 제외)으로 커밋 메시지 만들어 주는 도구

   - Broot - 복잡한 디렉토리 트리를 내비게이션 하는 새로운 CLI도구 https://news.hada.io/topic?id=1261
   - 생산성을 높여주는 rust command line 유틸리티 https://news.hada.io/topic?id=2958
   - 요즘 유용한 커맨드 라인 도구 모음 https://news.hada.io/topic?id=793
   - 나만의 쉘 자동완성 만들기 https://news.hada.io/topic?id=1670
"
"https://news.hada.io/topic?id=4698","IaaC 코드로 작성한 인프라의 비용 추산","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        IaaC 코드로 작성한 인프라의 비용 추산

   - 현재는 테라폼 지원 (추후 Pulumi, CloudFormation 등 지원 예정)
   - IaaC 코드 변경에 따른 비용 추산 가능
   - CI/CD 연동하여 실제 적용 전에 비용 측정하는데 유용할 듯
   - 향후에 엔터프라이즈 기능도 지원할 듯(웹 관리 및 팀 관리 기능 지원 등)
"
"https://news.hada.io/topic?id=4728","페이스북 캠페인 아이디어 생성기 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          페이스북 캠페인 아이디어 생성기 공개

   - 자신의 비즈니스에 맞는 페이스북 광고를 추천 받아서 아이디어를 얻을 수 있음
   ㅤ→ 자동차, 소비재, 이커머스, 교육, 엔터테인먼트, 게임, 재무, 정부, 헬스, 레스토랑, 리테일, 테크, 여행
   ㅤ→ 특정 기간에 맞도록 커스터마이징 가능 (전체, 연휴, 블프..)
   - 고객 인사이트 및 각종 리소스 포함
"
"https://news.hada.io/topic?id=4778","LineageOS - 안드로이드 기반의 오픈소스 OS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     LineageOS - 안드로이드 기반의 오픈소스 OS

   - 커스텀 ROM이었던 CyanogenMod 에서 포크
   - 2016년부터 릴리즈 되어, 현재 안드로이드 11에 기반한 18.1이 최신
   - AOSP*에 없는 기능
   ㅤ→ Rooting, 전화 녹음, LineageSDK (OS 기능 연동)
   ㅤ→ 개인화 : 버튼, 화면 테마, 색상, 락스크린 등
   ㅤ→ 보안 : PIN 스크램블, 특정 앱 감추기 등
   - 다양한 오픈소스 기본 앱들 내장
   ㅤ→ AudioFX, Jelly Browser, 계산기, 달력, 시계, 연락처, 갤러리, 음악, 메시징, 터미널 등
   - 구글 앱들(gApps)은 기본 설치에서 제거되어 있지만 설치 가능
   - 삼성,LG,구글을 포함한 다양한 안드로이드 기기 지원
   * AOSP : Android Open Source Project

   리니지OS도 훌륭합니다. 그런데 저는 Pixel Experience를 선호하는 편입니다: https://download.pixelexperience.org/
   그 이유는 좀 더 순정에 가깝고 그래서 더 가렵고 기반 안드로이드 버전도 더 빨리 올라가기 때문입니다.

   몇년전에 odroid xu4 에 LineageOS TV 설치해서 안드로이드 티비로 사용하려 했으나,
   최근에는 어떤지 모르겠는데 넷플릭스, 왓챠 등에서 DRM 문제로 재생이 원활하지 않았습니다 ㅜ

   지금도 DRM 문제가 있을 겁니다. 무엇보다 넷플릭스의 경우, 부트로더 락이 풀린 걸 확인하면 해상도를 낮춰버립니다.

   비슷한 계열로 https://crdroid.net/도 있습니다. 무려 Nesux5에 안드로이드 11을 지원 하는 Custom Rom입니다. 유튜브 머신으로 Nesux5애 적용해서 쓰고 있는데 안정성에 배터리도 상당히 오래가서 유용하게 쓰고 있스니다.

   나온지 꽤 오래되었는데요.
   긱뉴스에 소개를 안하기도 했고, 다른 오픈소스 안드로이드 OS 를 소개하려다 보니 필요해서 올려 봅니다.
   OS업데이트가 끊긴 예전 기종에 설치하거나 닌텐도 스위치 커스텀 펌웨어용으로도 이용됩니다.
"
"https://news.hada.io/topic?id=4782","코드베이스 시각화 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              코드베이스 시각화 하기

   - GitHub OCTO 개발자경험팀의 새 실험 프로젝트 (오픈소스로 공개)
   - 저장소를 한 눈에 볼 수 있는 ""fingerprint"" 이미지로 자동으로 만들어서 보기
   ㅤ→ 폴더 = 원, 파일 = Dot, 파일크기 = Dot 크기, 파일종류 = 색상
   - 자신의 Repo에 적용해서 보기 지원
   - GitHub Action을 이용해서 README에 최신 svg 파일로 보이도록 추가 가능
   - 차후엔 파일간의 연결, 최근 업데이트된 파일 보기, 코드 변경 이력 보기 등으로 확장 가능할 것

   비디오로 시각화 하는 도구도 있어요. https://gource.io/

   재밌네요!!

   기능이 더 추가된다면 깃허브 잔디심기마냥 코드베이스 꾸미기에 중독되는 사람도 나오겠군요 ㅋㅅㅋ
"
"https://news.hada.io/topic?id=4686","Oculus, Mixed Reality용 Passthrough API 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Oculus, Mixed Reality용 Passthrough API 공개

   - 실제와 가상현실을 부드럽게 연결
   ㅤ→ 피지컬 키보드와 책상을 이용하면서 가상 모니터를 통해 원격으로 동료들을 보며 협업
   ㅤ→ 실제세계를 이용한 게임 (내 집에 숨은 좀비)
   ㅤ→ 같은 장소에 있는 사람들이 같은 버츄얼콘텐츠 보기
   - Experimental 릴리즈
   ㅤ→ Composition : Passthrough 레이어랑 VR 레이어랑 합성
   ㅤ→ Styling : 실제 세계에 컬러오버레이, 투명도 조정, 포스터라이징등 스타일 적용
   ㅤ→ Custom Geometry : 평면 표면(Planar Surface)에 기본 스타일 메시 대신 사용자 정의 메시로 렌더링
   - Unity 개발자를 위해 공개될 예정이고, 다른 개발 플랫폼도 지원 예정
   - 모든 Passthrough API에서 사용하는 실제 환경 이미지/비디오는 개인정보 보호를 위해 온-디바이스로 처리
"
"https://news.hada.io/topic?id=4789","JSii - 어떤 언어든 JS 클래스와 인터랙션 가능하게 만드는 컴파일러","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                JSii - 어떤 언어든 JS 클래스와 인터랙션 가능하게 만드는 컴파일러

   - AWS CDK가 싱글 코드베이스에서 Polyglot 라이브러리를 제공할 수 있게 만드는 기술
   ㅤ→ TypeScript로 작성한 클래스 라이브러리 하나만 가지고 Python, Java, C#(.NET 패밀리), Go 등 다양한 언어에서 호출 가능하게 만듦
   ㅤ→ 각각의 언어용 SDK를 만들 필요가 없어서 빠르게 기능 추가 및 개선 가능
   - JSON 마샬링 비용 문제나, 분산GC 기능이 없어서 성능이 중요한 어플리케이션들 보다는 ""개발/빌드 도구""에 적합

   그러니깐 AWS CDK가 먼저 JS로 만드는 방식이었나 보네요? Boto같은거 보면 파이썬부터 지원하는줄 알았네요.
"
"https://news.hada.io/topic?id=4791","ElasticSearch 공식 파이썬 라이브러리가 더 이상 오픈소스 포크버전과 동작하지 않음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ElasticSearch 공식 파이썬 라이브러리가 더 이상 오픈소스 포크버전과 동작하지 않음

   - 첫번째 API 호출 전에 버전 번호와 특정 HTTP 헤더를 체크해서 에러를 발생시키도록 수정
   ㅤ→ 버전 필드 없거나 6.0 이하는 에러
   ㅤ→ 7.14 이상의 버전은 X-Elastic-Product HTTP 헤더가 없거나 값이 ""Elasticsearch"" 가 아니면 에러
   ㅤ→ 7.14.0 아래 7.x 버전은 tagline 에 ""You know, for Search"", build_flavor 가 ""default"" 값이 없으면 에러

   음 근데 이정도로는 포크들도 똑같은 헤더 구현하면 끝인 것 같은데...ES가 굳이 논란을 만들고 있네요

   음.. Elasticsearch 라는 헤더를 쓰면, ""상표권 위반""으로 걸 수 있지 않을까요? ㅎㅎ

   OpenSearch 에서 쓰지 말라는 거네요.
   - AWS, ElasticSearch와 Kibana의 포크버전 OpenSearch 공개 https://news.hada.io/topic?id=4064
   - AWS가 Elasticsearch와 Kibana의 오픈소스 fork 발표 https://news.hada.io/topic?id=3620
   - Elastic, AWS가 사용 못하게 라이센스 변경 https://news.hada.io/topic?id=3606
   - ElasticSearch를 둘러싼 AWS와 Elastic의 대립 https://news.hada.io/topic?id=3628
"
"https://news.hada.io/topic?id=4734","TypeScript Handbook 한글 번역본 (최신 기준)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   TypeScript Handbook 한글 번역본 (최신 기준)

   - 현재 TypeScript Handbook의 한글 완전 번역본은 3.x 버전으로 현재와 괴리감이 있음
   - 최신 TypeScript의 내용 및 기능을 담고 있음
   - 개인 프로젝트로 틈틈이 휴대폰으로 번역을 진행, 정리하였다고 함

   현재 공식 도큐먼트 번역이 진행되고 있는데 그곳에 기여를 해주시면 더 많은 분들이 보실 수 있을 것 같습니다.

   대단하시네요. 열정에 박수를 보냅니다.
   휴대폰으로 번역, 정리한 덕분에 휴대폰으로 보기에도 좋네요. ㅎ
"
"https://news.hada.io/topic?id=4677","Gaze - 파일 저장할 때마다 명령 실행하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Gaze - 파일 저장할 때마다 명령 실행하기

   - 코드 변경하면 테스트/린터/도커빌드 등을 자동으로 실행해주는 도구
   - 언어/에디터 무관
   ㅤ→ 기본적으로 Go,Python,Ruby,JS,PHP,Java,Kotlin,Rust,C++,Docker 등 지원
   ㅤ→ ?,*,** 등으로 파일 종류별 명령 지정 가능
   - 맥/윈/리눅스
   - 실행 옵션
   ㅤ→ -c : 변경되었을때 실행할 동작 지정. gaze a.py -c 'python ""{{file}}""'
   ㅤ→ -r : 기존 프로세스 죽이고 재시작
   ㅤ→ -t 1000 : 기존 프로세스 1000ms 기다렸다 죽임 (무한루프 등 테스팅할 때)
   - create-and-rename 방식인 Vim,Visual Studio 등의 세이브 동작도 지원
   - 훌륭한 병렬 처리
   ㅤ→ 업데이트후 프로세스 자동 실행중에 다시 업데이트 하면 첫 프로세스 실행 종료될 때 까지 기다림
   ㅤ→ 첫번째 프로세스 실행중 두번 업데이트 하더라도 최종본 한번만 더 실행
   ㅤ→ 한 파일 변경해서 프로세스 실행중, 다른 파일 변경되면 프로세스 하나 더 실행
   ㅤ→ ""파일이 아닌 명령단위로 프로세스 관리""
   - Go로 된 CLI 오픈소스
"
"https://news.hada.io/topic?id=4718","Windowsindows 96

   - Win9x UI를 에뮬레이팅하는 Web OS
   ㅤ→ 바이너리를 가져오거나 한것은 아니고 처음부터 개발
   ㅤ→ 모든 기능은 로컬(브라우저)에서 실행됨
   - 탐색기, 이미지 뷰어, MD 뷰어, 텍스트패드, 패키지매니저, 비디오 플레이어
   - NES, DOSBOX, Meme 등 게임 포함
   - 현재는 Closed-Source

   2000년대 초반에 보았던 비슷한 물건이 생각나는군요. 국내 업체가 ActiveX 기반으로 웹 데스크톱을 만든 것인데, 윈도우 2000과 비슷한 모양이었던 걸로 기억합니다.

   와... 웹에서 이런것도 할수 있군요!!

   잠시 가지고 놀아봤는데, 웹이 정말 할 수 있는 게 무궁무진하군여... 둠도 되고, 하프라이프도 되고..

   비슷하지만 다른 Windows 93 - https://www.windows93.net/
"
"https://news.hada.io/topic?id=4766","Ask GN: GeekNews를 운영하시는데 드는 비용이 얼마나 되나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Ask GN: GeekNews를 운영하시는데 드는 비용이 얼마나 되나요?

   이런 질문이 적절한지는 모르겠습니다만, 저도 다른 성격의 커뮤니티를 만들어 운영하고 싶습니다.
   1주년 회고글을 보니, AWS로 운영하고 계신것으로 아는데요, 운영/유지 비용이 얼마나 드시나요?
   궁금하기도 하고 Ask를 사용해보고 싶기도 해서 여쭈어 봅니다.

   긱뉴스에 대한 질문하는 곳은 아니지만, 기본적인 커뮤니티 운영비용에 대한 질문이라고 생각하고 답변 드리겠습니다.
   현재 긱뉴스는 텍스트 트래픽으로만 한정하고 있어서 아주 가볍게 운영이 가능합니다.
   (소셜 공유용 이미지 생성하는 서버가 따로 있어서 비용이 조금 더 들긴 하는데 얘는 논외로 하겠습니다.)
   초기 커뮤니티라면 EC2 서버 한대와 RDS 정도를 붙여서 운영할 경우 한달에 몇만원 내외로도 가능할 것 같습니다.
   이메일 발송도 AWS SES를 직접 사용하면 월 무료 한도(62000건)가 꽤 넉넉합니다.
   특별한 기능을 요구하는 커뮤니티가 아니라면, 요즘은 커뮤니티를 만들어 주는 플랫폼들도 꽤 여럿 나오고 있어서 그런 것을 활용하는 것도 괜찮지 않을까 합니다. https://www.mightynetworks.com/ , https://circle.so/ , https://tribe.so/ 같은 것들이요.

   답변 감사합니다.
   저는 현재 초기비용 거의 없이 테스트 해보고 싶어서 Next.JS기반으로 개발해서 Vercel에서 호스팅 하고 db는 supabase를 사용하려고 생각하고 있습니다. 다만, AWS에 다양한 기능도 사용해보고 싶어서 그런 경우 어느정도 비용이 드는지 궁금했습니다.
"
"https://news.hada.io/topic?id=4714","Postgres를 이용한 Full-Text Search","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Postgres를 이용한 Full-Text Search

   글의 대상
   - RDBMS에서 간단한 full-text검색 또는 검색기능을 넣고 싶다
   - 검색엔진을 개발하기에는 부담스럽다
   - 추가 소프트웨어 또는 라이브러리를 설치하기 싫다 (ES, SOLR등)
   - Postgres를 사용한다

   똑같은 상황이었는데 MySQL이라 눈물을 머금고 ES를 설치한 1ㅅ입니다

   저도 mysql에 ngram으로 잘 사용 중이네뇨

   궁금한게 있습니다.
   mysql도 full text search가 되는데 ES를 사용하신 이유를 알 수 있을까요?

   추가로, ""Ubuntu Postgresql에 한글 full text search 적용하기""
   https://velog.io/@shj5508/…
   사실은 CrunchyData 블로그에 ""Postgres Full-Text Search: A Search Engine in a Database"" 라는 글이 올라왔길래
   https://blog.crunchydata.com/blog/…
   이 글을 간단히 요약해서 올리려다가, 찾아보니 더 좋은 한국어 글이 있어서 위 링크로 올려봅니다.
"
"https://news.hada.io/topic?id=4729","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   저는 주말 내내 'Hell Let Loose' 라는 하드코어 FPS장르인 게임을 정말! 재미있게 플레이 했습니다. 게임의 주요 컨텐츠는 세계 2차대전 주요 전투들에 대한 50vs50 규모의 멀티플레이 입니다. 주말이 지났지만 오랜만에 정말 몰입도 높게 즐겼기에 적어봅니다. 추천드려요!

   - 4시간 정도는 생각을 모조리 꺼버린 다음 뒹굴거리면서 손에 잡히는 애니메이션이나 영화, 게임.. 을 하려고 했는데. 미리 뭘 할지 생각해둬야겠네요. 크흠. 용과 같이 7이나, 헤이트풀8과
   바스타드를 정말 재미있게 봐서, 쿠엔틴 감독의 다른 영화를 볼까 싶습니다.
   - 최근에 사이드 프로젝트를 전부 글 쓰는 것만 해서 (계획을 세우거나, 데일리 리뷰를 적거나, 소설을 적거나, 테스트 시나리오를 적거나...) 부족한 코딩을 보충하려고 합니다. 프로그래밍이 역시 가장 재미있어요.
   - 지금 쓰고 있는 Time Devider라는 웹앱의 UI와 기능을 손보려고 합니다. 처음 생각한 건 시간대별로 자동으로 돌아가는 뽀로모도 타이머인데. 까먹고 휴식기간을 안 만들었네요. 휴식기간이 없자 일하는 시간에 딴짓을 하는 큰 휴먼 에러가 있어서(... ) 뭐던 해도 되는 시간을 만들 예정입니다.
   - 게임보이 에뮬레이터의 입력 부분을 만들 수 있으면 좋을 것 같아요.
   - 전 2주마다 2주 동안 골이 뭔지 정하는데요. (스프린트라고 부릅니다) 이번 주차에 대해서 리뷰해보고, 다음 주차 떄는 뭐가 필요할 지 고민해볼 것 같습니다.
   - 도널드 커누스 옹의 구체 수학을 읽고 싶은데. 읽을 시간이 날지는 모르겠어요(... )

   저는 책 ‘눈 떠보니 선진국’ 을 읽으려고요. 머리말 먼저 봤더니 얼른 읽고 싶네요.
   그리고 오픈소스 BaaS 인 Daptin 을 세팅하고 간단히 둘러보려고 합니다~ https://news.hada.io/topic?id=4667

   긱뉴스 검색 창이 하단에 있어서 불편한거 같아서요. 상단으로 검색 창을 옮겨보려고 합니다.
   데스크탑에선 그냥 보이고, 모바일에선 클릭하면 창이 나오는 형태로 깔끔하게 하고 싶은데..
   UI는 너무 어려워요!

   일단 CSS 만으로 얼추 가능하게 만들어서 배포했습니다.
   더 이쁘게 만드는 건 언젠가의 주말 작업으로 미뤄두기!

   오오.. 지금도 예쁘네요 'ㅁ '!!! 감사합니다 ㅎㅎ 늘 밑으로 미는 게 추가 되고 나니 '아.. 불편하구나..' 라고 꺠달았어용

   검색창 위치 변경이라니! 감사합니다. 가끔 검색하려면 하단까지 내려야 해서 불편했는데 편해질 것 같아요.
"
"https://news.hada.io/topic?id=4761","The Cookieless World - 디지털 마케팅의 새 시대를 위한 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              The Cookieless World - 디지털 마케팅의 새 시대를 위한 가이드

   - 광고회사 Dentsu의 보고서 [42p PDF]
   - 인터넷 광고의 핵심이었던 쿠키가 사라지고 난 뒤의 변화와 데이터 전략 재수립방법에 대한 보고서
   목차
   - 소개 : 새로운 시대의 시작
   - 무슨 일이 일어나고 있나? 사용자 동의가 모든 걸 바꾼다
   - 무슨 일이 일어나고 있나? 결과의 요약
   - 데이터 관리 : 기술 그 이상
   - 오디언스 활성화 : 자사(First-Party) 데이터로 시작
   - 성과 측정 : 하이브리드 모델의 필요성
   - 예시 : 개인정보 보호 기술 스택에 모든 것을 결합
   - 미래의 방향 : 타사 쿠키(Third-Party) 사용 중단에 대한 준비 하기

   파일 링크 : https://assets-eu-01.kc-usercontent.com/7bf8ef96-9447-0161-1923-3ac692…
"
"https://news.hada.io/topic?id=4730","Ask GN: 여러분이 쓰는 노트 앱은 무엇인가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Ask GN: 여러분이 쓰는 노트 앱은 무엇인가요?

   Roam은 멋지지만, 몇몇 부분 이 걸립니다. 예를 들면
   - 개인 정보 보호 정책을 잘 모르겠음
   - 내 파일을 내가 관리 하지 못함
   - 긴 글을 쓰면 쓸 수록 느림 ( 평균적으로 50kb가 넘어가면, 블록 추가마다 1초씩 프리징이 걸립니다. )
   그래서 Obsidian으로 이주할까 고민중인데. 그 생각을 하니 여러분은 어떤 노트앱을 쓰고 계신 지가 궁금해졌어요.
   그래서 Notion은 노트 앱이기보단 이제 개인 DB가 되었기에(.. ) Notion은 일단 제치고, 이주 전에 하나 물어볼게요! 'ㅁ '!
   여러분이 쓰시는 노트앱인 무엇인가요? 그리고 그걸 왜 좋아하시나요?

   Joplin 이라는 앱 있던데, 사용해보신 분 있나요?

   공유하거나 공동 작업이 필요하면 Notion을 씁니다.
   개인적인 지식 저장소로는 Obsidian을 쓰고요. (링크나 그래프도 좋지만, 파일 기반이라 플러그인, vim 연동, 커스텀 등이 마음에 들더라고요)
   메모용으로는 구글 keep을 썼는데, obsidian 모바일 앱이 나와서 흔들리고 있습니다.

   워크플로위 - 요구사항/프로세스 아웃라인 정리
   노션 - 팀 위키 / 각종 노트류
   옵시디언 - 새로 알게된 지식 저장
   구글 킵 - 책 내용 북마크 / 기타 간단 메모

   Bear 쓰고 있었는데 (Mac만 지원하는 단점)
   Obsidian 한번 써봐야 겠네요
   Bear의 경우는 마크다운에 대한 내용을 몰라도 쉽게 작성이 가능해서
   쉽게 적응하고 잘 사용 해왔던 서비스 입니다.

   Obsidian 으로 완전히 정착했습니다. vscode 기반이라 그런지 다양한 플러그인들이 계속 개발되는게 맘에 들고 plain text기반으로 동작이 빠릿한것도 좋습니다.

   맞아요. Day Planner 쓰고 있는데 거의 궁극의 툴이 아닌가 싶을 정도로 빠릿하고 멋있네요. 특히 전부 .md로 관리되다보니까 뭔가 부족하면 (다중 커서같은 기능) 다른 에디터 열면되고.. Roam은 한 500 라인? 넘어가면 한번 라인 만들때마다 멈추는데. 이 친구는 그런 게 없어서 너무 좋네요. ㅎㅎ

   워크플로위
   Roam의 기능 백링크 포함 지원 거의 하고
   쾌적합니다
   따로 싱크 서비스를 고민할 필요도 없고요.

   Wrike , Google Keep 쓰고 있습니다. 앱/웹 모두 지원하는 서비스가 좋더군요

   저는 Foam 을 쓰고 있어요. roam 대체품의 개발자 버전 정도일 듯 하네요. vscode 확장으로 되어 있어요. 입력이 빠른 점에 있어서는 얘가 제일이지 않을까 싶어요.

   저는 오랜기간 에버노트 유료 유저였는데, 점점 이상해져서 버리고 이것 저것 찾다가 OneNote로 넘어왔습니다.
   제 사용패턴이 특이하지 않더라구요. 그냥 가끔 기록해놓고 찾아보는 용도로만 써서..
   저도 최근에 Obsidian 추천이 많아진듯 해서, 한번 트라이 해보려고는 합니다.

   Craft 씁니다.

   Mac 용앱이라는 단점이 있습니다. ㅎㅎ
   Table 지원이 안되는 점도 단점으로 꼽을 수 있습니다.
   다만, 업데이트를 지속적으로 해주고 있기 때문에 기대해볼만합니다.

   Roam 사용하다 요금이 너무 비싸서 Obsidian으로 넘어왔습니다.
   Sync 추가해서 사용하고 있는데
   유용한 플러그인이 많고, 모바일 앱을 지원해서 만족하면서 사용하고 있습니다.

   제가... 5년... 5년 구독을 끊었습니다 ㅋㅋㅋㅋㅋㅋㅋ Roam... 하지만 구리면 가차없이 버릴 듯한..
   - Obsidian을 만지고 있는데 엄청 잘 만들었네요. 퀄리티가... Roam이 위그직 에디터와 레퍼런스에 강점이 있다면, Obsidian은 마크다운 쪽이랑 최적화, 어.. 그리고 좀 더 예쁘네여. 게다가 무료라니!

   이것저것 쓰다가,,,,어짜피 회사에서 office365를 쓰기에 OneNote로 정착했습니다. 여러가지 불편한 점이 있지만 그런대로 쓸만해요 ㅋㅋ

   저는 한글 자음? 인가 모음이 사라지는 문제가 계속 발생해서. Office 2016 버전으로도 롤백해서 썼는데... 문제는 제가 사용하는 디바이스가 많았고, 2016 버전은 많은 디바이스에서 못 쓰는 것 같아 포기했습니다. 크흑...

   현재는 athens를 사용하고 있습니다. roam의 오픈소스 대체품이라고 보시면 될 것 같구요. local first라서 본인이 파일을 관리한다는 점이 좋습니다. 다만 동기화는 어도비 CC를 통해서 직접하고 있구요. 모바일 지원은 아직 안된다는 단점이 있습니다.
   유사한 노트앱들을 몇가지 써봤을 때 마크다운을 잘 지원하는 것보다는 빠르게 입력할 수 있는 쪽이 더 편해서 athens에 정착해 있습니다.

   Athens! 데이터를 본인이 관리하는 게 참 좋은 것 같아요. 최적화도 Roam에 비해서 괜찮으면 좋을 듯한...
   그런데 방향성을 Roam 같이 클라우드 웹앱이 아니라 로컬 앱으로 잡았나보군요! 알려주셔서 감사힙니다. 'ㅁ '/
"
"https://news.hada.io/topic?id=4762","MDN의 검색 자동완성 구현 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           MDN의 검색 자동완성 구현 방법

   - 사용자가 뭔가 검색하려고 할 때 11,690개의 글 제목 인덱스를 내려 받아서 로컬 검색을 진행
   ㅤ→ Brotli 로 압축한 144KB 짜리 JSON파일 (title,url)
   ㅤ→ 검색창에 onmouseover, onfocus 시, 또는 문서 전체에서 '/' 입력시 검색 시작으로 인식해서 파일 다운로드 (데이터 파일과 검색 함수 파일)
   - 데이터 파일을 다운 받아서 FlexSearch 라이브러리로 인덱스를 구성하고 downshift 로 UI처리
   ㅤ→ FlexSearch : 빠른 full-text 검색 라이브러리
   ㅤ→ downshift : React용 자동완성 컴포넌트
   ㅤ→ 어떤 결과가 먼저 보여질 지는 서버에서 JSON 데이터 구성시 PV에 따라서 정렬하고 그 순서에 따라서 나오게 함
"
"https://news.hada.io/topic?id=4772","replit, 빠른 웹앱 개발용 replit.web 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    replit, 빠른 웹앱 개발용 replit.web 공개

   - 브라우저만으로 쉽고 빠르게 웹앱을 개발 가능
   - 내장 DB와 Auth를 지원하는 Python 프레임워크
   ㅤ→ Repl Auth : Flask를 확장해서 몇줄의 코드로 손쉬운 인증 지원
   ㅤ→ Repl DB : 파이썬 딕셔너리 처럼 사용가능한 클라우드 DB
   - Rate Limiting 및 필수 Parameter 등의 유틸리티 내장
   ㅤ→ 약 150줄의 코드로 트위터 클론 생성하는 예제 제공
   - 가장 빠른 Python 웹앱 개발 환경을 목표로
"
"https://news.hada.io/topic?id=4700","Plate 1.0 - Slate & React용 에디터 플러그인 시스템","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Plate 1.0 - Slate & React용 에디터 플러그인 시스템

   - Low-level 에디터 프레임워크인 Slate 를 확장해서 자신만의 Rich Text Editor를 쉽게 만들게 해주는 오픈소스
   - 최소한의 코드로 다양한 기능을 구현 가능
   ㅤ→ 컴포넌트 하나만 사용
   ㅤ→ State Management
   ㅤ→ Design System 지원
   ㅤ→ 40+ 기본 패키지 : 텍스트 얼라인, 코드블록, Excalidraw, 헤딩1~6, 이미지, 링크, 리스트, 미디어 임베드, 테이블, 마크다운, 구문강조, 시리얼라이저 ..
   ㅤ→ 모든 플러그인 자체는 확장 가능
"
"https://news.hada.io/topic?id=4765","StackOverflow 개발자 설문조사 2021","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      StackOverflow 개발자 설문조사 2021

   - 8만명의 개발자가 참여
   - 60%의 개발자가 온라인에서 코딩을 배움
   ㅤ→ 젊을수록 온라인을 선호. 18세 이하는 30%가 온라인 비디오를 통해서
   - 클라우드 : AWS 54%, GCP 31%, Azure 30%, Heroku 24%
   - 사용중인 웹프레임워크 : React 40%, jQuery 34%, Express 23%, Angular 22%, Vue.js 18%
   ㅤ→ 올해 처음으로 React가 jQuery를 넘어섬
   - 선호하는 웹프레임워크 : Svelte 71%, ASP.NET Core 71%, FastAPI 70%, React 69%, Vue.js 64%
   - 가장 연봉이 높은 기술
   ㅤ→ 언어 : Clojure $95k, F# $81k, Elixir/Erlang/Perl/Ruby $80k, Scala/Rust $77k
   ㅤ→ DB : DynamoDB $80k, ElasticSearch $67k, Cassandra/Redis/DB2 $64k, PostgreSQL $59k, MySQL $43k
   ㅤ→ 플랫폼 : AWS $66k, Azure $64k, GCP $55k, IBM Cloud $52k
   ㅤ→ Web F/W : Ruby on Rails $77k, Svelte $62k, ASP.NET Core/Gatsby $60k, React.js $58k
   ㅤ→ Other : Apache Spark $67k, .NET Core $62k, Hadoop $60k, Numby/Pandas $54k
   ㅤ→ 도구 : Pulumi $100k, Terraform $90k, Chef $90k, Kubernetes $75k, Ansible $72k, Deno $64k, Docker $63k
   - 설문 참여자 8만명중:
   ㅤ→ 한국(189명), 북한(54명), 미국(15288명), 일본(429명), 중국(1055명)
   ㅤ→ 11~17년 경력 53%, 18~24년 24%, 5~10년 14%
   ㅤ→ 풀스택 개발자 49%, 백엔드 43%, 프론트엔드 27%, 모바일 14%, DevOps 10%, Data Scientist 6.9%
   ㅤ→ 학사 42%, 석사 20%
   ㅤ→ 25~34세 39%, 18~24세 25%, 35~44세 18%, 45~54세 6%, 18세 이하 6%, 55~64세 2%
   - 가장 많이 사용하는 기술
   ㅤ→ 사용중인 언어 : JavaScript 64%, HTML/CSS 56%, Python 48%, SQL 47%, Java 35%, Node.js 33%, TypeScript 30%, C# 27%
   ㅤ→ 선호하는 언어 : Rust 86%, Clojure 81%, TypeScript 72%, Elixir 72%, Julia 70%, Python 67%, Dart 63%, Swift 63%
   - 뭔가에 막혔을 때 : 구글링 89%, 스택오버플로우 79%, 다른거 하고 돌아고기 48%, 도움말/튜토리얼 비디오 보기 43%, 동료에게 묻기 39%, 나가서 걷기 37%, 게임 14%
   - 연봉 (글로벌 평균)
   ㅤ→ Eng. Manager $95k, 경영진(C~,VP) $94k, SRE $84k, DevOps $70k, Data Engineer $68k, Scientist $64k,
   ㅤ→ Product Manager $60k, Marketing $58k
   ㅤ→ Backend $56k, Full-Stack $56k, Front $49k
   - 연봉 (미국)
   ㅤ→ 경영진 (C~,VP) $177k, Eng. Manager $165k, SRE $150k, DevOps $135k, Backend $133k, Product Manager $130k
   ㅤ→ Data Eng. $129k, Game Developer $128k, Marketing $127k, Data Scientist $125k, Full-Stack $120k, Frontend $115k

   이런 설문조사를 볼 때마다 ASP.NET Core의 인기가 놀랍네요. 우리나라에선 좀처럼 사용하는 분들을 뵙기 어려워서,,,,

   아예 없는 건 아니라서요. 당장 저희 회사에서도 쓰고 있거든요.
"
"https://news.hada.io/topic?id=4787","소셜미디어 너머의 미래로 향하는 페이스북 [번역]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      소셜미디어 너머의 미래로 향하는 페이스북 [번역]

   - 광고 사업은 소셜 네트워크 기업인 페이스북을 수조 달러 규모의 공룡 기업으로 만든 원동력
   - 페이스북이 새로운 시도를 바탕으로 더 성장할 수 있을까?
   - 첫 번째 시도는 “크리에이터 경제”
   - 두 번째 프로젝트는 전자상거래 플랫폼
   - 가장 큰 프로젝트는 메타버스 : 게임과 몰입형 엔터테인먼트를 넘어 사람들이 생활하고 일하는 공간이 될 것
"
"https://news.hada.io/topic?id=4802","github.dev - GitHub코드를 VS Code로 1초만에 둘러보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               github.dev - GitHub코드를 VS Code로 1초만에 둘러보기

   https://news.hada.io/topic?id=3719
   (이 글과 제목을 맞추었습니다)
   위 링크에서도 소개되었던 github1s 라는 서비스가 있었는데, GH를 인수한 MS에서도 같은 서비스를 낸 듯 합니다. 일단은 github1s 가 오히려 더 안정적이라는 평이 있긴 하지만, GH와 VS Code를 둘 다 보유한 MS인만큼 앞으로가 기대되네요.

   9월 10일까지 무료라고 합니다. 사양에 비해서 가격이 크게 메리트가 있지는 않아 보이내요.

   원래 있던 Github Codespace Page로 보내주는거 같은데요, 저는. 다른 분들도 그러신가요?

   Codespace와 같게 VS Code가 웹에서 돌아가기는 하지만, 코드스페이스 베타가 없는 제가 들어갈 수 있는것으로 보아 코드스페이스는 아닌듯 하네요.

   github에서 키보드로 . 을 누르면 바로 넘어가는 단축키가 적용되어 있네요.
   github1s는 플러그인이 전혀 설치가 안되는데, github.dev는 플러그인 검색 시 사용 가능한 플러그인이 구분되어서 보이고 설치도 잘되서 개인적으론 github.dev가 훨신 좋은것 같습니다.

   오...
"
"https://news.hada.io/topic?id=4768","AdonisJS - Node.js용 웹 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      AdonisJS - Node.js용 웹 프레임워크

   - 웹앱 또는 API 서버를 개발하는데 필요한 모든 것 제공
   ㅤ→ Router, Controller, File Upload, Validator
   ㅤ→ Lucid: Active Record 기반 SQL ORM. PostgreSQL, MySQL, MSSQL, MariaDB, SQLite 지원
   ㅤ→ Authentication : 세션, Basic Auth, API Token, OAuth (Google, Twitter, Facebook, GitHub.. )
   ㅤ→ Bouncer: Authorization
   ㅤ→ Edge: Template Engine
   - CLI 프레임워크 내장. REPL 제공
"
"https://news.hada.io/topic?id=4708","Ask GN: 현재 어떤 개발 언어를 사용하고 계신가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ask GN: 현재 어떤 개발 언어를 사용하고 계신가요?

   저는 go를 dockerize 해서 배포하고 있습니다.
   go의 장점이라면 간단한 문법과 설정 없는 빌드, 간단하게 작성해도 일정 이상 높은 성능이 될 것 같습니다.
   필요에 따라 다른 도구들을 사용하기는 하는데요.
   메인은 당분간 go를 사용할 것 같아요.
   혹시 다른 분들은 어떤지 궁금합니다!
   아마 회사에서와 개인 프로젝트가 다를 수도 있겠는데요.
   각자 사용하실 때의 소감도 공유해 주시면 좋을 것 같아요!

   저도 회사에서는 주로 java 와 vue.js 로 일을 하기는 하는데
   개인적으로는 typescript로 하고 있습니다.
   이유는 풀스택으로 가벼운 프로젝트는 BE(nest.js), FE(next.js) 다 커버가 되세요
   참고로 nest.js는 anglar와 많이 비슷한데 FE는 아무래도 react.js가 대세라서

   타입스크립트가 확실히 js에서 많이 쓰이는 중인거 같습니다.
   nest가 엥귤러와 비슷했군요?! 저는 간단한게 서버 프레임워크라고만 생각했었는데, 살펴봐야겠네요 :)

   Unity3d로 개발이 주업무라서 거의 c#, 가끔 네이티브 코드 작성을 위해서 java, kotlin, objc, swift, c++, c로 작성하는 경우가 생기구요.
   내부 개발도구 개발을 위해서는 go (서버나 cli 도구), elm (웹 프론트)을 사용하고 있습니다.
   최근 업무는 flutter로 데스크탑 프로그램을 만들고 있는데요. 일부 성능이 나오지 않는 부분은 rust로 개선해서 처리하고 있습니다.
   c#은 좀 애증의 관계인 것 같은데. Unity3d를 위해서 사용하다보니 닷넷 버전을 아직 못 따라가고 있는 부분이 아쉬운 상태입니다. 최근 알파 릴리즈에서 .netstandard 2.1까지 적용될 예정인데 빠르게 정식 릴리즈가 되었으면 하는 바람입니다.
   go는 개발 기간을 단축하는 부분에 있어서 장점이 있는 것 같구요.
   elm은 에러 메세지가 굉장히 친절해서 다른 언어들에 비해 적응하는 시간이 짧았던 것 같아요. 물론 함수형 적응은 다른 함수형 언어를 몇 번 시도했던 것이 도움이 되었던 것 같구요.
   rust는 최적화가 필요한 부분에 적절하게 사용하면 좋은 것 같다는 생각이 들더라구요. 함수형 언어들에서 부러웠던 기능들을 잘 포함하고 있는 것도 매력적이었습니다. 물론 오너십과 스코프가 조금 덜 익숙한 상태에서 오는 허들이 있긴한데, 더 익숙해지면 해결되지 않을까 싶습니다. 러스트도 오류 메세지는 친절한 편인데. 스코프 지정이나 이런 부분에서 문법이 복잡하게 느껴지는 있어서 더 공부가 필요하다고 느끼고 있습니다.
   나머지 네이티브 작업을 위해서 사용하는 코드들은 다른 언어들에 비해서 굉장히 제한적으로 사용하고 있는 상태라 따로 코멘트를 적지 않았습니다.

   rust로 데스크탑 쪽 부분 작성은 어떻게 연결해서 사용하시나요?
   웹 어셈블리로 사용하거나, dart 쪽에서 연결해주는 도구가 있을것 같네요.
   elm 쓰시는 분 많지 않은 걸로 알고 있는데, 반갑습니다. :)

   rust cdylib으로 라이브러리 빌드하고 dart ffi로 동적 라이브러리 연결해서 구현하고 있습니다.

   답변 감사드립니다. :)

   조금 업데이트가 필요한 부분은 있지만 전체적인 그림은 아래 두 글이 도움이 될 것 같습니다.
   Dart Meets Rust: a match made in heaven - https://dev.to/sunshine-chain/…
   Dart and Rust: the async story - https://dev.to/sunshine-chain/rust-and-dart-the-async-story-3adk
"
"https://news.hada.io/topic?id=4794","Never Install - 데스크탑 앱을 설치없이 브라우저에서 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Never Install - 데스크탑 앱을 설치없이 브라우저에서 사용하기

   - 클라우드 기반 앱 스트리밍 플랫폼
   - 크롬,FF,IntelliJ,PyCharm,VS Code,Eclipse,Jupyter,Android Studio 등을 설치 없이 브라우저에서 실행
   ㅤ→ 실행시에 위치 지정가능 (미국,인도,싱가폴) : VPN 처럼 사용
   ㅤ→ 여러개의 워크스페이스 생성 지원
   - 무료사용자도 2vCPU, 4GB 램, 5GB 저장소를 무제한 사용 가능
   ㅤ→ 유료 플랜은 더 좋은 성능,램 제공 예정
   - 여러 사용자가 같이 보면서 사용하는 실시간 협업 기능 제공 (이메일로 초대)
   - 워크스페이스는 30분동안 미사용시 자동으로 멈추고, 4일간 사용 안하면 자동으로 삭제

   가끔 윈도 크롬 쓸일 있을때 편하게 사용중입니다~

   미국 리전에 크롬을 실행시켜보니 생각보다 빠른데요~
   근데 한글 입력 같은 건 안되는거겠죠?
   붙여넣기도 안되는 것 같고... ㅠ.ㅠ

   https://ohi.pat.im/ 이런 한글 입력기 쓰면 안될까요? ㅎㅎ

   와 이런게 다 있군요!
"
"https://news.hada.io/topic?id=4709","qiskit 양자 컴퓨터 입문","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            qiskit 양자 컴퓨터 입문

   - IBM 이 주도하는 양자컴퓨팅 프레임워크 qiskit 이 만든 양자컴퓨터 강의.
   - 유튜브 강의영상과 pdf 렉쳐노트를 제공.
   - 양자컴퓨팅의 기초 용어들(bra, ket, measurement)부터 시작해 양자알고리즘, 양자 컴퓨터 하드웨어, 양자컴퓨팅으로 화학 문제 풀기등을 망라하는 강의.

   좋습니다~~~!!!
"
"https://news.hada.io/topic?id=4702","직원들이 집에서 일하는 걸 포기하는 대신, 회사를 나가고 있습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 직원들이 집에서 일하는 걸 포기하는 대신, 회사를 나가고 있습니다.

   2021년 6월 1일 블룸버그에서 작성한 기사입니다.
   코로나-19 사태로 사회의 대부분이 크게 변했지만, 가장 큰 변화중 하나는 바로 원격 근무의 보편적 도입이라고 생각하는데요. 그런데 이제 미국에서는 점점 봉쇄가 풀리기 시작하자 점점 원래대로 복귀할 준비를 하고 있습니다. 사무실에도 다시 출근하기 시작했죠.
   그런데 블룸버그가 조사한 미국 성인 1000명을 대상으로 한 2021년 5월 설문조사에 의하면 39퍼센트가 원격 근무가 포기할 경우에 회사를 나갈 걸 고려한다고 응답했고. 밀레니엄 세대와 Z 세대는 49퍼센트 비중이 그렇게 응답했습니다.
   어떤 점이 그들이 그렇게 응답하게 된 계기가 되었을까요? 그리고 미국의 고위 임원들은 어느 정도가 적정 출근 일이라고 생각할까요? 마지막으로 미국 회사들은 어떻게 이를 생각하고 대응하고 있을까요?
   자세한 건 원문을 참조해주세요. 'ㅁ '/

   재택근무를 포기하는 대신 그만두는 직원들

   오오. 괜찮군여. 거기에 그만두는 대상을 넣으면.. 재택근무를 포기하는 대신 회사를 때려 치는 직원들(... )

   헤드라인만 보고 다시 출근을 한다고 이해했네요. 회사를 떠나고 있다고 하면 조금 더 명확했을거같기도 하네요.

   그러게요( ...) 회사를 나간다가 우리나라 말로는 출근 한다는 의미일지도 모른다는 게 글 올리기 버튼을 누르고서야 깨달았습니다. (....)
"
"https://news.hada.io/topic?id=4739","Ask GN: 이달의 구인공고 - 멤버를 찾고 계신가요 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ask GN: 이달의 구인공고 - 멤버를 찾고 계신가요 ?

   회사 소개, JD, 위치, 리모트 가능 여부, 연락방법(이메일,웹사이트) 등을 적어주세요.
   멤버를 찾고 계신 회사들이 댓글로 ""직접"" 홍보를 작성합니다. (서치펌 등은 불가)
   회사당 1개의 댓글만 허용합니다.
   이 글은 매월 첫번째 월요일에 고정적으로 올라옵니다.
   해당 공고에 관심있으시면 메일로 연락하시기 바랍니다.
   작성 예)
   하다 | 프론트엔드 개발자, 디자이너 | 서울 역삼 | Remote 가능 | https://hada.io | jobs@hada.io
   하다는 긱뉴스를 개발 및 운영하는 스타트업 입니다. 저희는 이러 저러 해서 엄청 좋은 회사입니다~~
   [1] 프론트엔드 개발자 JD : 내용 또는 URL
   [2] 디자이너 JD : 내용 또는 URL

   LG전자 | iOS developer | 서울 강서구 마곡동 LG 사이언스 파크 | https://www.lge.co.kr | hjean.choi@lge.com
   LG전자에서 개발하고 운영하는 LG ThinQ 앱은 대표 모바일 접점으로 스마트라이프를 즐길 수 있도록 고객을 지원하고 있습니다.
   Home 영역에서 고객에게 새로운 가치를 제공하고, LG전자 프리미엄 가전의 시크릿플랫폼을 매력적인 플랫폼으로 업그레이드하기 위한
   뉴프로젝트를 함께 진행 할 실력있는 iOS 개발자를 모집합니다
   [1] LG ThinQ App Senior iOS Engineer 모집 https://apply.lg.com/app/job/…

   프리윌린(매쓰플랫, 풀리) | 서비스기획자(PM), UX, 백엔드, 프론트엔드, iOS, flutter, 머신러닝/딥러닝, QA | 서울 관악구 서울대입구역 도보 10분 | https://abit.ly/e7i5r4 | recruit@mathflat.com
   프리윌린은 에듀테크 스타트업으로 ""매쓰플랫""과 ""풀리""를 서비스 중에 있습니다.
   창업 초기 손익분기점(BEP)를 돌파하였으며 4년간 매출 20배 증가, 총 이용자 수 50만명, 재구매율 97.1%로 업계 1위를 달성하였습니다.
   교육의 디지털 전환을 꿈꾸는 프리윌린에서 함께 미래를 선도할 분을 찾습니다!
   [1] 서비스 기획자(매쓰플랫) : https://freewheelin.notion.site/PM-85e33431cbea4ca0b6a03e5a9a2a0e3e
   [2] UX디자이너(매쓰플랫) : https://freewheelin.notion.site/UX-d4ccae3ed844423ebae44fd2bf2b3a83
   [3] 백엔드 개발자(매쓰플랫) : https://freewheelin.notion.site/0bf8e9c285834eaab1a02de940542c93
   [4] 백엔드 개발자(풀리) : https://freewheelin.notion.site/1d101fa70e1444d495a3d34640f0fb95
   [5] 프론트엔드 개발자(매쓰플랫) : https://freewheelin.notion.site/51ca36562a83473984cc20bbfade6e11
   [6] iOS 개발자(풀리) : https://freewheelin.notion.site/iOS-0af28782ddf94965b3352263b3fe3e16
   [7] Flutter 개발자(풀리) : https://freewheelin.notion.site/Flutter-ed34abb2957244fb97782d1c193f5e…
   [8] 머신러닝/딥러닝 연구원(경력) : https://freewheelin.notion.site/6c118e50675740888fc6d4713ca0e9fa
   [9] 머신러닝/딥러닝 연구원(석사신입) : https://freewheelin.notion.site/7551474c95d34a28800ff7f5934ec8da
   [10] QA Engineer : https://freewheelin.notion.site/QA-Engineer-c861ce048ed049099455df1e2d…

   해빗팩토리 | 안드로이드 엔지니어, 클라우드 엔지니어, 프론트엔드 엔지니어, 백엔드(API) 엔지니어, 디자이너, 서비스기획자, 콘텐츠마케터 | 서울 용산 패스트파이브 | Remote 가능 | https://signal-team.signalplanner.co.kr | hr@habitfactory.co
   해빗팩토리는 지금보다 더 많은 사람들이 금융과 가까워지도록 다양한 금융 분석 서비스를 제공하는 핀테크 스타트업입니다. 어렵고 복잡한 금융 정보를 쉽게 이해하고 더 나은 선택을 할 수 있도록 돕습니다.
   해빗팩토리는 확고한 비전과 명확한 미션, 신뢰할 수 있는 동료들의 뛰어난 팀워크를 바탕으로 계속 성장하고 있습니다. 구체적이고 실질적인 파트너십을 통해 이를 더 확장시키고 있으며, 해빗팩토리가 만드는 미래에 대한 확신과 신뢰를 가진 투자자들이 함께 하고 있습니다. 전체적인 회사 소개, 사내 분위기, 기업 문화 등은 https://signal-team.signalplanner.co.kr 에서 확인하실 수 있습니다.
   [1] 안드로이드 엔지니어 https://signal-team.signalplanner.co.kr/e13e18cb-08b7-4c4a-a062-b17704…
   [2] 클라우드 엔지니어 https://signal-team.signalplanner.co.kr/8bf390a4-b87c-4f64-9d3b-d52317…
   [3] 프론트엔드 엔지니어 https://signal-team.signalplanner.co.kr/9fba0aba-3c25-4937-aa29-32aa16…
   [4] 백엔드(API) 엔지니어 https://signal-team.signalplanner.co.kr/65e59b14-a63e-4039-a411-cba8be…
   [5] 디자이너 https://signal-team.signalplanner.co.kr/8a118826-0537-4a6b-bb63-adf413…
   [6] 서비스기획자 https://signal-team.signalplanner.co.kr/e1e6834f-2a4a-4745-8f4a-564769…
   [7] 콘텐츠마케터 https://signal-team.signalplanner.co.kr/3dacad4c-11af-4555-8821-933b6f…

   휴먼스케이프 | 소프트웨어 엔지니어 (상시 채용) | 서울 강남 (봉은사역 근처) | 재택, 재실근무 중 자유롭게 가능 (코로나 이슈로 재택근무 권장) | https://humanscape.io/ | recruit@humanscape.io
   [회사 소개]
   휴먼스케이프는 환자와 세상을 연결함으로써 질병으로 고통받는 사람이 건강한 일상을 향유할 수 있도록 힘쓰고 있는 6년차 IT 헬스케어 스타트업입니다. 희귀질환 환자를 위한 건강관리 서비스 '레어노트', 온라인 임상시험 정보 및 중개 웹 서비스 '한국임상정보'를 만들고 있습니다.
   [주요 업무]
   소프트웨어 엔지니어로서 제품이나 기능의 기술적 과제를 수행합니다. '레어노트' 혹은 '한국임상정보'의 프론트엔드 (React, React Native, Next.js) 및 백엔드 (Node.js (koa), Django) 개발을 담당하시게 됩니다. 원하는 부분에 스스로 기여해주시면 됩니다 :)
   [기술 스택]
   저희가 사용중인 기술들은 모두 StackShare에 정리해두고 꾸준히 업데이트하고 있습니다.
   https://stackshare.io/companies/humanscape/
   [채용 공고]
   Software Engineer: https://bit.ly/recruit_human_Dev
   이외 궁금한 점이 있으시면 언제나 henry@humanscape.io 혹은 recruit@humanscape.io 로 편하게 연락 주세요!

   STRA/스트라 | iOS, Android 개발자 각 1명 | 서울 양재 AI 허브 | 자율 출퇴근제, 재택 가능
   https://www.stra.ai | yongho@stra.ai
   삼성 출신 뮤직 테크 스타트업 스트라에서는 성장하는 비대면 음악 취미 시장을 타겟하여 소셜 레슨 플랫폼 CODA를 개발하고 있습니다. MVP 런칭 이후 앱의 고도화를 이끌어주실 모바일 앱 개발자 님(iOS/Android 4년차 이상, 최소 5천만원 이상)을 모시고 있어요!
   [채용 공고]
   https://stra.oopy.io
   https://www.rocketpunch.com/jobs/99312
   궁금하신 점 언제든 yongho@stra.ai / 010-9954-9930 연락 주세요~!

   딜라이트룸(알라미) | 소프트웨어 엔지니어(Infra, iOS, Android), 데이터 분석가 | 서울 신논현 | https://team.alar.my/ | operation@delightroom.com
   딜라이트룸이 서비스하고 있는 '알라미(Alarmy)'는 전세계 누적 5000만 다운로드, 400만 MAU, 97개국 앱스토어 1위를 달성하며 글로벌 사용자들의 성공적인 아침 습관 형성을 도와주고 있습니다.
   알라미와 함께 사용자들의 아침을 성공적으로 바꿔갈 딜라이터를 찾습니다 :)
   [1] Infra(Back-end) Engineer : https://team.alar.my/jd-backend-engineer
   [2] iOS Engineer : https://team.alar.my/jd-ios-engineer
   [3] Android Engineer : https://team.alar.my/jd-android-engineer
   [4] Data Analyst : https://team.alar.my//jd-data-analyst

   인덴트코퍼레이션 | 소프트웨어 엔지니어 (백엔드, 프론트, 데이터, 머신러닝) | 서울 성수 | 리모트 가능 | https://indentcorp.com/
   인덴트코퍼레이션은 국내 가입자수 1위 동영상 리뷰 플랫폼인 '브이리뷰'를 운영하고 있습니다. B2B 서비스인 리뷰 플랫폼에만 머물지 않고, 리뷰를 통한 커머스 생태계를 구축할 소프트웨어 엔지니어를 찾습니다.
   채용 페이지: https://notion.so/indent/…

   클래스팅 | 프론트엔드 개발자, 백엔드 개발자, 리액트네이티브 개발자, 프로덕트 디자이너 | 서울 선릉 | 부분 Remote 가능 | https://careers.classting.com/ | careers@classting.com
   클래스팅은 '교육 x 기술 = 더 나은 세상' 이라는 가치를 실현하는 회사입니다. 클래스팅은 700만이 넘는 교사, 학생, 학부모가 사용하며 특히, 전국 550만명의 초중고 학생 중 390만의 학생이 가입하여 사용할 만큼 독보적인 에듀테크 스타트업입니다.
   [1] 프론트엔드 개발자 : https://careers.classting.com/4278b85d-8602-45f2-8d9e-6e6f3bb0b3dc
   [2] 백엔드 개발자 : https://careers.classting.com/3c50cf88-8356-4027-a3c7-b05828c4b7f5
   [3] 리액트 네이티브 개발자 : https://careers.classting.com/96ea5d2c-2a63-47a3-bdfe-b45e1a18bb03
   [4] 프로덕트 디자이너 : https://careers.classting.com/0b0dc6d8-de8c-488a-b83a-1330137633d1

   AB180(에이비일팔공) | 소프트웨어 엔지니어 (백엔드, 데이터, 데이터베이스 엔진) | 서울 서초 | https://abit.ly/ab180-hiring-at-geeknews | hr@ab180.co
   유니콘부터 대기업까지 쓰는 제품을 만들며 함께 성장해요 —
   초당 10만 건의 트래픽 처리, 월 2,000만 MAU, 월 100억 이벤트 수집 및 분석, 실시간 대규모 데이터 분석 및 성과 극대화를 위한 머신러닝을 경험하실 수 있어요.
   AB180에서는 '에어브릿지'라는, 웹과 앱에서의 사용자 행동을 분석하고 마케팅 성과를 측정해서 더 좋은 퍼포먼스를 낼 수 있도록 돕는 도구를 만들고 있어요. GS SHOP, KB증권, 버거킹, 다노, 펫프렌즈 등 많은 기업들에서 저희의 제품을 사용하고 있어요.
   [1] Software Engineer - Backend (Junior) : https://abit.ly/ab180-backend-junior-gn
   [2] Software Engineer - Backend (Senior) : https://abit.ly/ab180-backend-senior-gn
   [3] Software Engineer - Data (Senior) : https://abit.ly/ab180-data-senior-gn
   [4] Software Engineer - Database Engine : https://abit.ly/ab180-dbe-gn

   버즈빌 | 클라이언트 개발자(Android,iOS), 서버개발자, Product Designer(Dash,App),프론트엔드개발자, 머신러닝엔지니어, 풀스택웹개발자,DevOps,데이터엔지니어 |서울 송파 | https://apply.workable.com/buzzvil/?lng=en | gloria.lee@buzzvil.com
   AI 기반의 리워드 광고 플랫폼 기업 버즈빌은 국내 이동통신 3사, SK, CJ, 롯데, 라인 등 전 세계 150개 이상의 초우량 퍼블리셔를 보유한 세계 최대의 리워드 광고 네트워크를 구축, 3,900만 명의 프리미엄 오디언스를 확보 중입니다. 또한 최근 5년간 연평균 33%의 높은 성장(CAGR 2016-2021)을 달성하고 있으며 2022년 IPO 예정인 국내 최고의 애드테크 스타트업입니다. 저희와 같이 성장할 버즈빌리언을 찾고 있습니다!!
   [1]클라이언트 개발자(Android,iOS) :https://apply.workable.com/buzzvil/j/E40F6FA7E0/
   [2]서버개발자 : https://apply.workable.com/buzzvil/j/001273F3E9/
   [3]Product Designer(Dash) : https://apply.workable.com/buzzvil/j/14E7A2FD41/
   [4]Product Designer(App) : https://apply.workable.com/buzzvil/j/491229D114/
   [5]프론트엔드 개발자 : https://apply.workable.com/buzzvil/j/C39E68F6C8/
   [6]머신러닝 : https://apply.workable.com/buzzvil/j/696B17D49D/
   [7]풀스택 웹개발자 : https://apply.workable.com/buzzvil/j/691F6C0F1A/
   [8]DevOps : https://apply.workable.com/buzzvil/j/F45A7AD4F9/
   [9]데이터엔지니어 : https://apply.workable.com/buzzvil/j/3FEE4ABD65/

   페이히어 | 서버 엔지니어 | 서울 삼성동 | Remote 가능 | https://payhere.in | career@payhere.in
   페이히어는 클라우드 기반의 모바일 POS 서비스를 만드는 스타트업입니다. 현재 30여명의 동료들과
   함께 하고 있으며, Early Stage 스타트업에 조인할 서버엔지니어를 기다리고 있습니다.😊
   [1] 서버 엔지니어 : https://notion.so/payhere/…

   클로아 | 백엔드 개발자, 프론트엔드 개발자, 데브옵스, 디자이너, 플랫폼, PM | 서울 강남 | Remote 가능 | https://cloa.notion.site/Job-Board-e01517c8d5ca4579b567e8791dc35ecd | careers@cloa.io
   ""Snowflake for Datalake"". 네이버가 창사 이래 처음 투자한 데이터 인프라 스타트업으로 마케터, 애널리스트도 데이터 레이크 환경에서 손쉽게 데이터를 정제하고 분석할 수 있는 플랫폼을 만들고 있습니다.
   [1] 백엔드: https://cloa.notion.site/Backend-Engineer-6467dc321e804da4a631319fdbe9…
   [2] 프론트엔드 : https://cloa.notion.site/Frontend-Enginee-e4695a29e36540f6af5acac8b219…
   [3] 데브옵스 : https://cloa.notion.site/DevOPs-Engineer-ee1c46a8f0624b26afe7e4da6b2d1…
   [4] 디자이너 : https://cloa.notion.site/Product-Designer-13c4a058084f475e97752cdfd23b…
   [5] 플랫폼 : https://cloa.notion.site/Platform-Engineer-d4a997da0cb3499bb2ea7b62f11…
   [6] PM : https://cloa.notion.site/Product-Manager-a0451feabdc148c69a823f1080bb8…

   우와 국내에도 데이터 인프라 스타트업이! 응원합니다.

   응원 감사합니다:)

   좋은 제품으로 하다에도 저희 글이 올라오기를…! 열심히 개발 중입니다

   식스샵 | 프론트엔드 엔지니어, 백엔드 엔지니어 | 서울 서초 | Remote 가능(거리두기 단계에 따라 1일~5일) | https://sixshop.com | job@sixshop.com
   식스샵은 누구나 쉽게 온라인 판매를 시작할 수 있도록 도와주는 올인원 이커머스 플랫폼입니다. 현재 13,000명의 브랜드 창업자가 식스샵을 통해 비즈니스를 키워가고 있습니다.
   식스샵에 합류하여 제품의 품질을 한층 업그레이드하고 성장하는 개발 문화를 함께 만들어가실, 소프트웨어를 사랑하는 엔지니어를 찾습니다.
   [1] 프론트엔드 엔지니어:
   - https://team.sixshop.com/recruit/frontend-engineer
   [2] 백엔드 엔지니어:
   - [Java] https://team.sixshop.com/recruit/java-backend-engineer
   - [node.js] https://team.sixshop.com/recruit/nodejs-backend-engineer
   - [Go] https://team.sixshop.com/recruit/go-backend-engineer

   엔비티 | 신규 서비스 백엔드 엔지니어 | 서울 서초 | Remote 가능 | http://nbt.com/ | ta@nbt.com
   NBT는 캐시슬라이드 제품을 넘어, 일상의 혜택을 주는 다양한 프로덕트를 가지고 있습니다.
   유저가 꾸준히 적립/사용할 수 있는 습관을 형성해, 포인트 생태계를 구축하는 플랫폼으로 자리잡고자 합니다.
   백엔드 엔지니어 JD: https://notion.so/Backend-Engineer-daadbd05c6bb45b09b7da9cc2dd68754/

   인프랩 | 백엔드 / 프론트엔드 개발자 | 판교 유스페이스 | https://www.inflearn.com | withus@inflearn.com
   인프런이라는 지식 공유 서비스를 운영하고 있습니다.
   누구나 경제적, 시간적 제약없이 양질의 지식으로 성장의 기회를 균등하게 만드는 일을 꿈꾸고 있어요!
   [1] 백엔드 개발자 JD : https://www.notion.so/NodeJS-c3df214ebb28423092f6798122156c4d
   [2] 프론트엔드 개발자 JD : https://inflab.notion.site/React-VanillaJS-9f7029657eaa48ef814c057a1f8…

   Superb AI (슈퍼브에이아이) | 백엔드 개발자, 풀스택 개발자 | 서울 강남 | Remote 가능 | http://careers.superb-ai.com | careers@superb-ai.com
   ""인공지능의 민주화(Democratize AI)""라는 미션 아래 누구나 쉽게 방대한 데이터를 다루고, 인공지능을 더 빠르고 편리하게 개발할 수 있는 머신러닝 데이터 플랫폼을 만들어 갈 개발팀 동료를 찾습니다. (feat ML옵스)
   [1] 백엔드: https://careers.superb-ai.com/de06fd12-7f11-41b0-ad23-3d972ebba34f
   [2] 풀스택: https://careers.superb-ai.com/269745c2-0d36-4a0e-a611-bdd803dd1411

   MXXR | Android | 서울 성수 | Remote 가능 | https://mxxr.app | join@qrio.xyz
   공간 컴퓨팅(XR) 기술을 기반으로 사용자에게 3D 콘텐츠를 전달하고, 새로운 환경에서 가장 좋은 사용자 경험을 만들어나갈 Android 개발자 분을 구합니다.
   [1] https://team.mxxr.app

   LINE | 백엔드, 프론트엔드, iOS/Android 클라우드 등 모든 분야 | 분당 서현 | 적극적 Remote 정책
   LINE에서는 글로벌 사용자들을 대상으로 메신저뿐 아니라 다양한 서비스와 기술 플랫폼 개발을 경험해보실 수 있습니다.
   https://careers.linecorp.com/jobs?ca=Engineering

   디플리 | iOS, Android developer | 서울 대방 스페이스살림 | https://deeplyinc.com | recruit@deeplyinc.com
   소리에 의미를 더하는 오디오 인공지능 스타트업, 디플리에서 함께 서비스를 만들어갈 iOS/Android 개발자 분을 구합니다.
   [1] https://www.rocketpunch.com/jobs/98976/iOS-개발자-iOS-Developer
   [2] https://rocketpunch.com/jobs/101596/…
"
"https://news.hada.io/topic?id=4800","PipeCD - 쿠버네티스용 CD 오픈소스 솔루션 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      PipeCD - 쿠버네티스용 CD 오픈소스 솔루션

   ""Continuous Delivery for Declarative Kubernetes""
   - 멀티 클라우드를 위한 통합 지속배포/GitOps 솔루션
   - Visibility
   ㅤ→ 배포 파이프라인 UI로 현황 표시
   ㅤ→ 각 독립 배포당 로그 뷰어
   ㅤ→ 어플리케이션 상태의 실시간 시각화
   ㅤ→ 슬랙 및 웹훅으로 배포 알림
   - Automation
   ㅤ→ 메트릭, 로그, 요청에 기반한 자동화된 배포 분석
   ㅤ→ 분석/파이프라인 실패시 자동 롤백
   ㅤ→ Configuration drift 자동 감지 및 알림
   ㅤ→ 특정 이벤트(컨테이너 이미지 푸시, Helm 차트 퍼블리시 등) 발생시 자동 배포 트리거 가능
   - Secure
   ㅤ→ SSO 및 RBAC 지원
   ㅤ→ Credential은 클러스터 외부에 노출안되고, Control-plane에 저장되지 않음
   ㅤ→ Secret 관리기능 내장
   - Multi-provider & Multi-Tenancy
   ㅤ→ 멀티 앱 on 멀티클라우드 지원 (k8s, Terraform, Cloud Run, AWS Lambda, Amazon ECS..)
   ㅤ→ 다수의 분석도구 지원 (Prometheus, Datadog, Stackdriver 등)
   ㅤ→ 멀티 클러스터, 멀티 테넌시의 쉬운 관리
"
"https://news.hada.io/topic?id=4693","AWS의 어처구니 없는(Egregious) Egress 비용","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   AWS의 어처구니 없는(Egregious) Egress 비용

   AWS가 자신들은 비용을 내지 않는 네트워크간 전송 비용에 대해서도 고객들에게 청구하고 있으며, 지속적으로 하락중인 전송비용을 고객에게는 적용하지 않고, 인위적으로 가격을 높게 유지하고 있다는 Cloudflare의 글
   - 1990년대 중반에 웹호스팅이 처음 나왔을 때엔 대역폭/저장소/CPU.메모리 각각에 대해서 요금을 냈음
   - 그걸 사용자들이 점점 싫어하게 되면서 고정요금제로 발전했고, 그 다음에 AWS가 출현
   - AWS는 유용성과 확장성에서는 매우 큰 진보를 했지만, 요금 측면에서는 엄청 퇴보 했음.
   - 특히 ""데이터 전송 요금""
   [Charging for Stocks, Paying for Flows]
   - AWS는 고객에게 전송한 데이터 양 만큼에 따라 비용을 청구 (월 1TB당 얼마)
   ㅤ→ 마치 양동이(Bucket)에 물을 담은다음 그 물의 양만큼 받는 방식
   ㅤ→ Charging for ""Stocks"" : 양 단위로 청구
   - AWS는 그들의 네트워크 용량(capacity)에 따라 대역폭 비용을 지불함.
   ㅤ→ 대역폭의 요금 기준은 월 1Mps당 얼마
   ㅤ→ AWS같은 공급자들은 월의 최대용량(Peak Capacity)의 Mbps 당 비용을 지불
   ㅤ→ 즉, 양동이에 들어가는 물의 양을 지불하지 않고, 물을 채우는데 사용되는 ""호스""의 직경을 기준으로 비용을 지불
   ㅤ→ Paying for ""Flows"" : 흐름 단위로 지불
   [Translating Flows to Stocks]
   - 1Mbps 연결은 한달 Full로 사용할 경우 0.3285TB(328GB)
   - 공급자들의 도매(Wholesale) 대역폭은 95%에서 청구되므로 실제로는 매월 0.3458(346GB)
   - 사용률과 지역별 코스트가 더 중요
   - 실제로 매일 100% 사용률을 보이긴 힘드므로, 월 평균 20~40% 정도로 추정하는 것이 합리적
   - 보수적으로 평균 사용률을 최하값인 20%으로 가정
   - Cloudflare 가 전세계 리전별로 받는 대역폭 가격보다 아마도 더 잘 받을 것으로 추측
   이 기준으로 계산해보면
   - 미국/캐나다/유럽은 아마존이 내는 대역폭 비용대비 80배를 고객이 부담함
   - 일본/싱가폴은 17배, 호주/인도는 8배
   - 한국은 유일하게 ""3.5배""
   ㅤ→ 하지만 안심하지 말아야 함. AWS는 시장이 오래될수록 더 많은 이그레스 비용을 부과함. 서울 리전은 4년밖에 안 되었음
   [AWS는 ""유일하게"" 고객에게 절감 비용을 적용하지 않음] (네트웍 연동으로 절감한 비용)
   - 위 계산한 비용은 AWS가 직접 대역폭에 내는 비용만 계산
   - PNI(Private Network Interface)로 직접 연결(무결제 연동)되는 Cloudflare 같은 네트웍과의 연동에 있어서는 비용이 들지 않으므로, AWS의 유효 수익이 무한대로 늘어날 수 있음
   - 게다가 아마존이 코로케이션 제공자로부터 받는 리베이트를 포함하면 수익율은 더 높을수 있음
   - Azure, Google Cloud 같은 다른 클라우드 공급자들은 Cloudflare와의 상호 고객(mutual customer)에 대해서는 Egress 요금을 대폭 할인 해줌
   - 또한 Bandwidth Alliance의 멤버인 알리바바, Tencent, Vultr 등은 상호 고객의 대역폭 요금을 면제 해주고 있음
   - 즉 업계 대부분의 호스팅 업체는 Cloudflare 같은 피어로 트래픽을 보낼때 egress 비용을 크게 할인하거나 면제해 줌
   - AWS만 예외이며, Bandwidth Alliance 에 초대했지만 거절했음
   - 퍼블릭 인터넷으로 전송되지 않는 호스팅 프로바이더 간에 전송되는 트래픽 비용은 서로간에 비용이 들지 않으므로, 고객에게 청구하지 말아야 하지만,
   - 아마존의 ""고객에게 옳은 일을 하겠다는 집념""은 Egress 비용까지는 확장되지 않는 듯
   [인위적으로 가격을 높게 유지]
   - 지난 10년간 전송 비용은 매년 평균 23% 하락 했음. 다 합치면 10년전보다 93% 저렴
   - 그러나 같은 기간 동안 AWS의 전송 비용은 25%만 하락 했음
   - 2018년 이후 북미와 유럽에서 AWS가 내는 Egress 비용은 도매가격이 절반 이상 하락했음에도 불구하고, AWS의 전송비용은 한푼도 떨어지지 않았음.
   [AWS의 호텔 캘리포니아 요금제]
   - AWS 요금의 또 이상한 점은 네트워크 밖으로 전송되는 데이터에 대해서는 요금을 부과하지만, 네트웍으로 수신되는 데이터에 대해서는 요금을 받지 않는 것
   - 가정용 비대칭 케이블 네트워크라면 의미가 있겠지만, Wholesale 대역폭은 대칭임
   - 즉 1Mbps 연결을 구입하면 1Mbps 를 보내고, 1Mbps를 받을수 있음. 즉 수신은 송신보다 비용이 많거나 적게 들지 않음
   - 하지만 AWS는 데이터를 넣는 것 보다, 꺼내는 것에 더 많은 비용을 청구함
   - 합리적으로 생각해보면, 그냥 고객을 자신들의 클라우드에 락인 시키기 위한 것 같음
   [It's Not Too Late!]
   - Cloudflare 와 AWS를 같이 사용하는 뮤추얼 고객들이 있음
   - AWS가 올바른 일을 해서, egress 비용을 낮추고, Bandwidth alliance 에 가입해서 다른 네트워크와의 피어링을 통해 얻는 비용 절감액을 고객에게도 전달하기를 희망함

   트래픽 비용이 너무 비싼건 맞는듯 합니다. 비싸다는 측면에서는 GCP나 Azure 역시 비싸긴합니다. AWS/GCP/Azure와 중소형 VPC를 제공하는곳과 단순 비교하기 어렵겠지만,
   대형 클라우드 서비스는 VM은 포함하지 않고, 1TB 트래픽 비용만으로 10만원 정도인데,
   소형 클라우드(linode,vultr)는 6vCPU, 16GB RAM인 VM과 5~8TB의 트래픽이 10만원입니다.
   그나마 AWS는 lightsail이 있어서 비용이 절감되기는 하는데, 트래픽 용량을 측정할때, IN/OUT 모두를 합산하여 트래픽 사용량으로 계산한다고 알고 있습니다.
   저는 개인적으로 운영하는건 한국리젼이 있는 vultr을 사용하고 있는데, linode가 더 많은 제품형태(Object Storage, Kubernetes 등)가 있어, 한국리젼이 없긴 하지만, 옮겨가는게 좋지 않을까 생각중입니다.

   AWS가 아마존 전체 영업이익의 66%를 내고 있습니다. 작년 4분기 기준 아마존 영업이익이 4조 6천억원 인데, AWS가 3조가 넘게 벌고 있어요.
   근데 같은 분기의 AWS 매출은 11조원인데, 아마존 전체 매출은 104조여서 11% 밖에 안되거든요. AWS가 가장 수익성 높은 사업이 된데에는 다 이유가 있는거 아닐까요? ㅎㅎ

   Bandwidth-Alliance : https://www.cloudflare.com/bandwidth-alliance/
   Azure, GCP, DigitalOcean, Alibaba, Tencent, Automattic, Backblaze, Vultr, Vapor, Packet등이 참여
"
"https://news.hada.io/topic?id=4737","Static Wiki - 읽기 전용 위키피디어 (43GB)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Static Wiki - 읽기 전용 위키피디어 (43GB)

   - 스태틱 파일로 변환한 위키피디어
   ㅤ→ 백엔드 필요 없이 정적 호스팅 가능
   - 2MB CSS,JS,WASM(SQLite) 파일과 43GB SQLite DB로 구성
   - 검색시 자동완성 지원하지만 매우 느림
   - 위키피디어 덤프 사이트의 XML을 SQLite DB로 변환하는 코드 제공
   ㅤ→ 영문 위키 43GB 파일의 경우 10시간 정도 소요

   - sql.js-httpvfs - GitHub Pages에서 SQLite DB 호스팅 하기 https://news.hada.io/topic?id=4226
"
"https://news.hada.io/topic?id=4777","LÖVR - 몰입형 3D 구축을 위한 오픈소스 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    LÖVR - 몰입형 3D 구축을 위한 오픈소스 프레임워크

   - VR 개발용 다양한 기능 지원
   ㅤ→ 스테레오 렌더링, 핸드 트래킹, 햅틱, 공간 오디오, 3D 물리엔진, PBR(물리기반 렌더링), SDF 폰트..
   - 초경량 : 전체 엔진이 1MB. LuaJIT 위에서 실행
   - 쉬움 : 3줄의 Lua 코드와 자료 폴더 만으로 VR 씬 구성 가능
   - 윈/맥/리눅스/안드로이드/웹
   - OpenVR/OpenXR/LibOVR/VrApi/Pico SDK/Web XR
   - Oculus Quest/Rift, HTC Vive, Valve Index, Windows MR, Pico Neo 2, Leap Motion

   LOVE2d에 많이 영향을 받았다고 하니 반갑네요. 간단하게 재밌는걸 만들어 볼 수 있을 것 같아요.
"
"https://news.hada.io/topic?id=4786","Unpaywall - 오픈 액세스 논문 검색엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Unpaywall - 오픈 액세스 논문 검색엔진

   원래 논문들의 오픈 액세스 버전을 찾아주는 사이트
   Sci-Hub와 같은 사이트를 사용하지 않고 저작권법을 준수
   직접 검색이나 Firefox/Chrome Extension, REST API를 통해 사용가능

   Sci-Hub 가 현재 8500만건인데, Unpaywall 은 2900만건 이네요. 이정도면 훌륭한듯
"
"https://news.hada.io/topic?id=4774","Wails - Go 사용 데스크톱 응용 프로그램 개발 프레임 워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Wails - Go 사용 데스크톱 응용 프로그램 개발 프레임 워크

   제가 요즘 golang에 관심이 많아 이것 저것 찾던 중 발견한 재미있는 프로젝트가 있어 소개해 드립니다.
   Golang을 백엔드로 사용하면서 프론트 엔드는 HTML/CSS/JS는 물론 React, Vue 등을 사용해서 크로스 플랫폼 (Mac, Linux, Windows) 데스크톱 응용 프로그램을 개발 할 수 있는 프레임 워크 입니다.
   - 백엔드 : Go
   - 프론트엔드 : HTML/CSS/JS, React, Vue
   - 크로스플랫폼 : Mac, Linux, Windows
   제가 아직 프론트 엔드 쪽을 잘 몰라서 더 자세한 설명을 못 드리 겠네요.
   링크된 git 에 가보시면 설치 방법 등 자세한 설명이 있으니 참고하세요.
   맥에서 예제를 잠깐 돌려보니, 단일 실행 바이너리로 된 깔끔한 앱이 딱!! 만들어 지네요.
   마치, electron과 비슷한 느낌입니다.
   저처럼 golang에 관심이 있으시고, 여기에 간단한 GUI를 꾸미고 싶으실 때 검토해 볼만한 솔루션일 것 같습니다. 단일 바이너리, 크로스 플랫폼이 맘에 드네요. 물론 JS/React/Vue 등을 공부해야 하지만요.

   비슷한 프로젝트들이 몇 개 더 있습니다.
   https://github.com/sciter-sdk/go-sciter
   https://github.com/ImVexed/muon

   공식 페이지 : https://wails.app
"
"https://news.hada.io/topic?id=4804","Slip - 프로그래밍 강의를 만들어서 판매하기 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Slip - 프로그래밍 강의를 만들어서 판매하기

   - 누구나 인터랙티브 프로그래밍 강의를 만들어서 팔 수 있게 해주는 SaaS
   ㅤ→ Python, Go, Ruby, Rust, Node/JavaScript 지원
   ㅤ→ 마크다운, 비디오, 코드 스니펫(ACE 에디터), CodeSandbox 및 Figma 임베딩 지원
   ㅤ→ 코드 실행은 원격 Docker로
   - 모바일 지원
   - 월 비용 없이 판매 수수료 10% + 결제 수수료(Stripe)

   오~ 이거 매력적이네요
   결제에서는 언제나 따라오는 Stripe 네요

   개발자가 VIM 온라인 강의인 https://vim.so 를 만들어서 한달만에 $10k 수익을 내고, 그 경험을 바탕으로 더 확장해서 만들었다고 하네요.
   특정 언어나 프레임워크에 능숙하신 분들은 한번 강의로 만들어서 팔아보면 좋을 듯 합니다.
"
"https://news.hada.io/topic?id=4757","위키미디어가 차세대 JS프레임워크로 Vue.js를 선정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     위키미디어가 차세대 JS프레임워크로 Vue.js를 선정

   - MediaWiki에서 사용할 차세대 프론트엔드 프레임워크 선정을 2019년 중반부터 시작
   - RFC를 만들고 기술 비교 및 Pilot 개발을 통해서 평가하고 선정완료 (문서들 모두 투명하게 공개)
   - 추가로 Wikimedia Design System 팀을 만들고
   ㅤ→ 공유 가능한 Vue.js UI 컴포넌트 라이브러리 준비
   ㅤ→ Vue 2 또는 Vue 3 로 갈지 결정
"
"https://news.hada.io/topic?id=4691","구글, 검색결과가 왜 나왔는지 보여주는 기능 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글, 검색결과가 왜 나왔는지 보여주는 기능 도입

   - 대부분의 검색 결과 옆에 보이는 ""⋮"" 점 3개 버튼을 눌러서 나오는 ""About this Result"" 패널에서 보기 가능
   - 내가 검색한 쿼리와 이 결과가 어떻게 연결 되었는지를 설명
   ㅤ→ 매칭된 키워드
   ㅤ→ 연관 검색어
   ㅤ→ 비슷한 단어로 검색된 다른 페이지들이 이 페이지를 링크하고 있는지 여부
   ㅤ→ 언어, 지역, 위치등에 대한 연관성
   - 검색 기술 팁 제공 및 원하는 검색 결과를 얻기 위한 설정방법 등을 제공
   - 영어/미국 지역부터 제공 시작하고 확대 예정

   XAI!!
"
"https://news.hada.io/topic?id=4752","Setups - 다른 사람의 책상은 어떨까 ?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Setups - 다른 사람의 책상은 어떨까 ?

   - 크리에이터 / 개발자 / 창업가 / 디자이너 들의 책상 사진 보기
   - 전체 책상 사진 및 컴퓨터 / 모니터 / 입력 장치 / 모바일 기기 / 음향 기기 / 가구 / 악세사리 / 문구 등으로 종류 별로 분류해서 볼 수 있음
   - 자신의 사진 등록 가능
   - 매주 금요일 이메일 뉴스레터로 받기

   geeknews에도 데스크셋업 올릴 수 있는 기능이 생기면 좋겠어요

   현재는 이미지 호스팅이 부담스러워서 ㅎㅎ
   뭔가 좋은 방법이 생길지 고민해보겠습니다.

   비슷한 프로젝트가 하나 더 생각이 났는데요. 2011년부터 진행된 데스크 프로젝트가 있었습니다. 아이폰/아이패드/안드로이드 앱과 홈페이지가 있었는데요. 앱들은 현재 스토어에서 검색이 되지 않고 홈페이지는 남아있지만 플래시로 제작되어 내용 확인은 실패했습니다. 이 프로젝트는 2014년에 국내에서 출판되기도 했습니다.
   - DESK where creativity is born https://blog.cmiscm.com/?p=2984
   - DESK – where creativity is born – for iPad https://blog.cmiscm.com/?p=2968
   - DESK Android App https://blog.cmiscm.com/?p=4031
   - DESK Project Book https://blog.cmiscm.com/?p=4069
   - 프로젝트 홈페이지 http://desk.cmiscm.com/
   - 데스크 프로젝트 (책) - http://www.yes24.com/Product/Goods/14130327

   https://officefetish.co/
   책상 포함 여러 오피스를 구경할 수 있습니다

   와 나중에 사무실 공간 꾸밀때 도움 많이 되겠네요. 고맙습니다!

   책상은 아니지만 다양한 분야의 대상자들의 사용중인 하드웨어/소프트웨어 소개와 ""Dream setup""을 소개하는 페이지도 있습니다.
   Uses This https://usesthis.com/
   (과거에는 The Setup 이라는 이름이었는데 어느 순간부터 Uses This로 리브랜딩한 것 같아요.)

   위와 비슷하지만, 각 책상의 주인과 인터뷰를 진행하는
   - Maker Stations https://www.makerstations.io/
"
"https://news.hada.io/topic?id=4743","Tech in Africa","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Tech in Africa

   아프리카의 기술산업 전반에 대한 소개
   1. 인구 통계
   2. 주요 시장
   3. 기술 업계를 정의하는 파워 브로커들
   4. 규제 기관 및 기술 플레이북
   5. 어떻게 확장할 것인가
   6. 중국과 미국 자본의 유입
   7. 에코시스템에 대한 오해
   8. 몇년간 오게될 기회들
   [ Demographics ]
   - 중국,미국,인도,유럽 전체를 다 합친 크기
   - 2000개가 넘는 언어를 사용하는 12억명이 거주하는 땅
   - 54개국에 걸친 3000개의 원주민 그룹
   인구의 성장
   - 앞으로 30년간 인구는 두배가 늘어 24억명이 될 것
   - 현재 전세계 인구의 16%를 차지하지만 2050년이 되면 25%를 차지
   - 24억의 절반은 나이지리아(4.1억), 에티오피아(1.9억), 이집트(1.5억), 콩고 민주 공화국(1.9억), 탄자니아(1.3억) 에 거주하게 될 것
   - 나이지리아와 이집트가 신흥 기술 산업을 대표함
   젊은 세대들과 도시화
   - 인구가 빠르게 증가한다는 건 시민들의 평균 연령이 감소한다는 것
   - 아프리카의 성장은 젊은 대륙이라는 걸 의미
   - 24억명중 절반이 25세 미만
   - 50년뒤를 놓고 보면 다른 모든 G20 국가를 합친 수준
   - 많은 선진국들이 인구증가가 정체되는 시기에 이건 중요함
   - 아프리가카 일할 인력을 찾기에 가장 큰 풀을 가지고 있음
   - 기술회사들의 가장 큰 기회중 하나는 젊은 아프리칸들이 미래의 노동수요에 적합한 필요한 기술과 훈련을 받게 하는 것
   - 이 새로운 세대들은 주로 도시에 밀집되어 상당한 소비력을 가진 경제강국을 만들게 될 것
   - 인구증가의 80%가 도시에 집중되어 세계에서 가장 큰 대도시가 될 것
   - 2050년까지 가장 큰 50개 도시중 10개가 아프리카
   - 앞으로 10년안에 아프리카의 가장 큰 도시 18개의 총 소비액은 $1.3t 정도(1조 3000억달러, 1470조원)
   ㅤ→ 새로운 벤처들을 지원하고 활력을 불어 넣기 충분한 상업적 규모
   - 인구 100만명 이상인 아프리카 도시의 갯수는 이미 미국보다 많음
   ㅤ→ 2015년 기준 천만이상 3개, 5백만 이상 5개, 백만이상 54개
   ㅤ→ 미국은 100만이상 도시가 10개 (뉴욕 8백만,LA 4백만,시카고,휴스턴,피닉스,필라델피아,샌 안토니오,샌디에고,댈러스,산호세)
   중산층의 성장
   - 중산층이 2030년까지 5.8억명에 이를 것이고 상류층이 1.16억명에 이를 것
   ㅤ→ 두 합이 현재 미국인구의 두배이상
   ㅤ→ 중상류층의 규모는 엄청나지만, 소비력은 동등하지 않음
   - 나라별로 중산층 구성이 다른 나라들과 같지 않음
   ㅤ→ 미국 가구 소득의 중앙값은 $74000, 하루에 약 $200
   ㅤ→ 아프리카의 중산층 보고서에 따르면 하한선을 하루에 $2로 설정
   ㅤ→ 같은 보고서에서 아프리카의 상류층에 속하려면 하루에 $20가 넘어야 한다고 주장
   - 아프리카의 소비자 지출은 2025년까지 $2.1t(2380조원), 2030년에는 $2.5t(2830조원)로 증가할 것
   - 미국의 소비자 지출은 $12t 를 넘었고, 인도가 $1t 에 가까워지는 중
   Connectivity의 증가
   - 아프리카는 인터넷 연결과 휴대전화 보급에 있어서 여전히 뒤쳐짐
   - 현재 아프리카인의 22%만이 인터넷에 접속
   ㅤ→ 유럽은 80%, 러시아/중앙아시아는 68%, 미국대륙 66%, 아시아태평양은 44%
   - 휴대폰 사용 인구 비율도 낮음
   ㅤ→ 사하라 사막 남부의 나라들(Sub-Saharan Africa, SSA)의 경우 45%(4.7억명) 만 기기를 소유
   - 그래도 많이 성장한 것. 2005년에는 2%의 아프리카인만 인터넷 접근이 가능했음.
   [ Key Markets ]
   - VC들은 ""아프리카""에 투자하지 않고, 특정 국가와 시장의 기업을 지원함
   - Partech의 2020년 보고서에 의하면
   ㅤ→ 아프리카 26개국이 총 1.4조 달러의 VC 펀딩을 받음
   ㅤ→ 전체 VC 펀딩금액인 300조 달러의 0.5% 밖에 되지 않음
   ㅤ→ 하지만 10년전에는 아프리카에는 스타트업/VC 에코시스템 자체가 없었음
   ㅤ→ 2015년부터는 VC 자금이 매년 40%씩 성장하는 중
   ㅤ→ 80%의 투자금액이 4개국에 감 : 나이지리아, 케냐, 이집트, 남아공
   - 나이지리아
   ㅤ→ 최고의 단일 국가 시장
   ㅤ→ 2억 인구, 강력한 기술인재, 단단한 엔젤 네트워크
   ㅤ→ Flutterwave 와 Interswitch 같은 훌륭한 핀테크 회사들
   ㅤ→ 두 회사에서 볼수 있듯 핀테크 분야에서 지속적으로 성장하는 시장으로 유명
   - 케냐
   ㅤ→ 5천만명 인구
   ㅤ→ 농업 기술의 허브 : 이 분야 투자금의 79%가 케냐 스타트업에 투자
   ㅤ→ Gro Intelligence 가 2020년에 8500만달러 투자를 유치 했음
   ㅤ→ 또한 핀테크도 뿌리 깊음 : Safaricom 의 M-Pesa
   - 이집트
   ㅤ→ 가장 빠르게 성장하는 시장
   ㅤ→ 세콰이아도 움직이기 시작해서 새로운 은행인 Telda 에 5백만 달러 투자
   ㅤ→ 이집트의 매력은 숙련된 창업자들과 운영자 네트워크
   ㅤ→ Uber에 매각된 Careem 과 IPO한 Fawry 등이 새로운 스타트업을 만들고 투자할수 있는 계층을 탄생시켰음
   ㅤ→ 핀테크 및 물류, 모빌리티, EdTech
   - 남 아프리카 공화국
   ㅤ→ 리스트중에서 1인당 GDP기준 가장 부유한 나라
   ㅤ→ 금융 부분의 중심
   ㅤ→ Naspers 와 같은 거대 미디어의 홈이기도 함 (Prosus : Tencent, Udemy, Stackoverflow.. )
   - 영어권과 불어권 국가가 받는 투자금 사이에 큰 차이가 있음
   ㅤ→ 2019년 기준 $54m 정도만 불어권 국가에 투자됨
   ㅤ→ 현명한 사람들은 여기서 기회를 인식할 것 : 불어권 아프리카는 4억 3천만 인구의 고향이며, 향후 몇년간 아프리카 성장의 62.5%를 차지할 것
   - 이렇게 거대하고 역동적인 나이지리아도 겨우 $307m 을 투자받았음
   ㅤ→ Hopin 의 시리즈C, GoPuff 의 시리즈 F 보다도 작은 수준임
   [ Key Players ]
   - Accelerators : Y-Combinator, 500 Startups, Techstars, Founders Factory, Catalyst Fund, Google Startups Accelarator for Africa
   - Corporates : MTN Group, Airtel Africa, Safaricom, Vodacom, Orage Group, Naspers
   - 주목할만한 스타트업과 Exit
   ㅤ→ Jumia : NYSE 2019/4 상장. 아프리카 회사중 처음으로 글로벌 거래소에 등록
   ㅤ→ Fawry : 이집트 증권거래소 2019/8 시총 $1B(1.1조원) 으로 상장
   ㅤ→ Stripe(US) 가 Paystack 을 $200m 에 인수
   ㅤ→ WorldRemit(UK) 가 SendWave 를 $500m 에 인수
   ㅤ→ 눈에 띄는 스타트업들 : Flutterwave ($1b 가치로 투자 받음), Chipper Cash ($100m 투자), OPay , Andela, TymeBank..
   - 허브와 네트워크들
   ㅤ→ 나이지리아의 Co-Creation Hub(CCHub) : 2011년 설립. 나이지리아의 많은 스타트업들이 여기서 시작
   ㅤ→ AfriLabs : 아프리카 전체 48개국에 240개의 허브 보유
   ㅤ→ Harambean Network : 멤버십 클럽가 비슷하지만, 많은 창업자들을 네트워크에 보유. Andelar, Flutterwave 같은 유니콘 탄생시킴
   ㅤ→ 글로벌 회사인 Endeavor 아프리카에 80개의 멤버를 보유
   - Venture Capital : Partech, Novastar Ventures, Knife Capital, ..
   [ Misconceptions ]
   오해 1: Africa is a unified market
   ㅤ→ 아프리카는 통일된 시장이 아님. 지역일 뿐. 회사들이 아프리카 전체를 커버하지 않음
   오해 2: All the startups are “X for Africa”
   ㅤ→ 아프리카는 독특한 에코시스템이 있음. 단순히 다른 곳의 것을 가져온다고 먹히지 않음.
   오해 3: You can use the same multiples to value African startups
   ㅤ→ 밸류에이션이 다른 지역과 전혀 다름. 소득 수준이 전혀 다름.
   ㅤㅤ(2억명 정도로 인구가 비슷한 나이지리아와 브라질을 비교했을때, 하루에 $10 이상 쓰는 인구가 브라질이 34배 많음)
   ㅤ→ 즉 LTV,CAC 등에 기반한 계산은 전혀 맞지 않음.
   [ 기회가 있는 분야 ]
   - 교육
   - Informal Sector : small to medium enterprises (SME)
   - 헬스케어
   - Financial Services and Identity
"
"https://news.hada.io/topic?id=4796","Vue 3.2 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Vue 3.2 릴리즈

   - SFC(Single File Components)
   ㅤ→

   사이트 이용법 FAQ About & ToS   | Blog Lists Podcast RSS   | Bookmarklet   | X (Twitter) Facebook   |   긱뉴스봇 : Slack 잔디 Discord Teams Google Chat Swit

   검색 ____________________
"
"https://news.hada.io/topic?id=4751","L0phtCrack 7, 오픈소스로 공개예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        L0phtCrack 7, 오픈소스로 공개예정

   - 1997년에 출시된 유료 암호 해독 도구로 윈도우즈 암호를 복구/해킹하는데 사용되었음
   ㅤ→ brute-force, dictionary, hybrid, rainbow table 등의 기법을 이용
   - 2020년 Terahash에 매각되었다가, 2021/7/1 자로 원 저작자에게 돌아간뒤 판매 중단
   - 내부에 사용된 상용 라이브러리 들을 제거/교체 한 후 오픈소스로 공개 예정

   개발자인 @DilDog 의 관련 트윗 쓰레드 https://twitter.com/dildog/status/1421830165911556099
   - 'John the ripper' 의 일부를 사용. hashcat도 지원예정
   - 플러그인 아키텍처
   - 리눅스/맥용 변환도 가능할 것으로 예상
   - GitLab에 공개할 것이라고
"
"https://news.hada.io/topic?id=4747","비슷한 명령어 추천은 어떻게 하는걸까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         비슷한 명령어 추천은 어떻게 하는걸까?

   터미널에서 여러 프로그램을 사용하다 보면 종종 명령어를 잘못 입력해 프로그램이 오류를 표시해줄 때가 있다. 그런데 Git이나 npm 같은 일부 프로그램들은 내가 잘못 입력한 명령어와 비슷한 명령어들을 추천해주거나 오히려 오타를 바로잡아주고 알아서 적당히 넘어가 줄 때도 있다. 이런 기능은 대체 어떻게 작동할까? 비슷한 명령어를 추천해주는 기능을 비슷하게 구현해보며 그 원리를 알아본다.
   - 문제 정의하기
   ㅤ→ 비슷한 명령어를 찾는다는 문제는 ""두 문자열의 유사도를 검사하는 문제""로 치환할 수 있다.
   - 편집 거리 (Edit distance)
   ㅤ→ 레벤슈타인 거리 (Levenshtein distance)
   - 문제 해결하기

   이 레포를 언급하지 않을 수가 없네요.
   https://github.com/nvbn/thefuck#how-it-works

   맨 위에 예제 보고 한참을 웃었내요 ㅋㅋ
   나만 틀리는게 아니였어..

   흥미로운 이야기였습니다. 레벤슈타인 거리......새로운걸 배웠네요

   재미있게 읽었습니다.
   그런데 git이 정말 이 방식으로 구현된 것인지 궁금하네요.
   통계적으로 사용자의 경험을 수집해서 처리하는 방식도 가능할 것 같네요

   git 은 레벤슈타인 거리를 이용합니다. 아래 링크의 git 항목에 보면 git 의 해당 부분 소스코드가 나옵니다. :)
   https://vishnubharathi.codes/blog/levenshtein-distance/
   통계적으로 사용자의 경험을 이용하는 방식도 흥미로울 것 같은데, a) git 명령어들의 길이가 짧고, b) 갯수가 제한되어 있어서 레벤슈타인으로 충분히 원하는 것을 수행할 수 있는 것 같습니다.
"
"https://news.hada.io/topic?id=4733","Yarn 3.0 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Yarn 3.0 릴리즈

   - Breaking Changes
   ㅤ→ Node 10 더이상 지원 안함
   ㅤ→ Plug'n'Play Hook이 .pnp.cjs 로 변경 (기존 .pnp.js)
   ㅤ→ Virtual Folder가 __virtual__ 로 변경 (기존 $$virtual)
   - Yarn 1 사용자도 쉽게 마이그레이션 지원
   - 새로운 node_modules 링커들
   - 쉘 개선 : 자체 쉘 인터프리터 이용
   - ESBuild 사용
   - 새로운 플러그인 API : CLI 프레임워크를 Clipanion 3 로 변경

   Yarn 2 릴리즈 https://news.hada.io/topic?id=1378
"
"https://news.hada.io/topic?id=4735","Firefox, 2019년부터 5천만명의 사용자 이탈 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Firefox, 2019년부터 5천만명의 사용자 이탈

   - Firefox Desktop 사용자 전세계 MAU 기준
   ㅤ→ 2019년 2.5억명에서 2021년 2억명으로 감소
   ㅤ→ 미국은 3400만에서 2400만으로 감소
   - 일간 평균 사용시간은 4.7 시간에서 5.2 시간으로 증가
   - 가장 많이 설치된 AddOn
   ㅤ→ uBlock Origin 4.374%
   ㅤ→ Video DownloadHelper 2.412%
   ㅤ→ Adblock Plus 2.409%
   ㅤ→ Cisco WebEx 2.372%
   ㅤ→ Facebook Container 1.694%
   - 가장 많은 해상도 1920x1080 38%

   예전 글[1]을 회상해 보면 예견된 미래 같습니다. 아마 거의 확실히 firefox는 사라질 것 같네요.
   [1] https://news.hada.io/topic?id=2660

   모질라는 수없이 많은 위기를 겪었었고 쉽게 사라지지 않을 것입니다.

   Firefox가 사용자를 후킹할 만한 요소가 부족한 것 같아요. 여타 크로미움 엔진에 비해서 플러그인 생테계가 좁다는 건 바로 보이는데. 이미 깔려 있는 크롬과 Edge를 지우고 왜 넘어가야 하는 지 큰 동기가 없으면 앞으로 유출이 계속 일어날 것 같습니다.
   저도 Firefox를 쓰다가 Edge로 넘어갔는데, 가끔 한글 사라지는 문제가 사라져서 참 기분이 좋습니다... 게다가 모든 기기에 이미 깔려 있고, 맞춤법 검사기 플러그인도 마음에 들고요. '브라우저 생테계의 비영리 기관'이라는 멋진 타이틀 외에도 제품 자체가 좀 더 매력적이었으면 좋겠습니다.

   파이어폭스는 원래부터 의식적으로 선택해서 사용하는 브라우저 였어요. 비영리, 공공성 이런 것이 선택의 이유였고요. 그런 이유로 쓰기 시작했더니 (지금은 많이 희석되어 버렸지만) 다양한 확장 기능의 편리함, 멀티 플래폼 호환 등 생각보다 넘 좋은데? 굳이 다른 거 같이 안써도 되겠는데? 라는 브라우저죠. 직원들이 일하는 이유도 그럴거고요. 제품 자체의 순수한 경쟁력으로 크로미움 계열 브라우저들과 경쟁할수 있는 가능성은 별로 없어보여요.

   저는 최소 5년은 파이어폭스를 기본 브라우저로 사용해오고 있는데, 멀티컨테이너와 트리스타일 탭이 가장맘에 들어요. 근데 최근 ms 가 내놓은 에지는 같은 크로미엄 기반인데도 크롬보다 가벼운 느낌이라서 흔들리고 있어요 ㅠㅠ

   지금은 많이 희석되고 있는 게 좀(... ) 우울하군여.... 저는 파이어폭스에 마음에 들었던 게 Pocket 기본 내장이랑, 뭔가 좀 더 프라이버시? 하고 가벼운 느낌이었는데.... MS Edge가 Firefox 보다 램도 덜 먹고... 더 쾌적하고... 특히 이미 있는 윈도우 계정이랑 연동도 되서. 완전히 넘어가버렸어요 ;ㅁ ;.
"
"https://news.hada.io/topic?id=4695","FZF for JavaScript - 브라우저에서도 퍼지 검색을","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  FZF for JavaScript - 브라우저에서도 퍼지 검색을

   - Go 로 작성된 CLI 도구인 fzf의 메인 ""퍼지 검색 메커니즘""을 JS로 구현해서 브라우저에서 사용가능하게 포팅한 오픈소스
   - 요즘 코드 에디터/디자인 도구/프로젝트 관리도구 등에서 많이 쓰이는 ""Command Pallete"" 기능 구현시 몇 글자의 입력만으로도 원하는 것을 쉽게 찾을 수 있게 구현 가능
   예)
   sear wh you → Search what you want
   real fast → really fast
   fzf js → with a fuzzy finder in javascript

   fzf 편리하죠.
   데비안 테스팅이나 최근 우분투 버전들도 다 기본 포함 되어 있어서, 새 시스템에는 필수 설치하는 툴 입니다.

   와 대박
"
"https://news.hada.io/topic?id=4720","No-Code 스타트업 Bubble, 1150억원(1억달러) 규모의 시리즈A 펀딩받아","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            No-Code 스타트업 Bubble, 1150억원(1억달러) 규모의 시리즈A 펀딩받아

   - 웹앱을 코딩 없이 개발할 수 있게 해주는 노코드 플랫폼
   ㅤ→ UX 설계, 데이터 및 계정 관리, 다양한 외부 서비스들과 연동, SEO 및 분석도구 연동 등
   ㅤ→ 팀 단위 협업 개발 지원(버전 관리 및 백업)
   - 2012년부터 7년간의 부트스트래핑 기간
   - 2019년에 $6.5M 시드라운드 투자
   - 현재 사용자 100+만명

   와아....올초에 회사분들이 NoCode 해커톤 참여하면서, 다들 '차라리 코딩 공부를 하자ㅠㅠ'로 가는 걸 봤는데, 대단하긴 하네요

   https://bubble.io/
   시리즈A인데 천억대의 투자가 나오기도 하는 군요.
   회사의 창업과정에 대한 것은 블로그에 잘 나와있네요
   - Goodbye, Tech Founders: The Bubble Origin Story https://bubble.io/blog/about-bubble/
   Plato ( https://www.platohq.com/ ) 는 Bubble로 서비스를 만들어서 Y Combinator에 들어가기도 했습니다. 그만큼 기능이 잘 되어있다는 거겠죠 ;)
"
"https://news.hada.io/topic?id=4760","SKT AI의 한국어 GPT2 모델을 웹페이지에서 테스트해보세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  SKT AI의 한국어 GPT2 모델을 웹페이지에서 테스트해보세요

   SKT AI가 한국어 GPT2 모델 (KoGPT2)를 Github에 공개했습니다. https://github.com/SKT-AI/KoGPT2
   이 모델을 Ainize.ai라는 서비스를 이용하여, OpenAPI의 형태로 공개하였습니다. https://github.com/scy6500/KoGPT2
   * Ainize.ai라는 서비스는 Github에 존재하는 FOSS리포에서 Dockerfile을 인식하여, 자동으로 빌드 후 배포해주는 Heroku-like 솔루션입니다. GPU-based base image를 인식하여 자동으로 GPU도 할당해줍니다.

   와우!

   현재 Twitter에서 해당 모델을 이용해, 소설을 작성하려는 시도가 많이 있습니다. https://twitter.com/search?q=ainize.ai&src=typed_query&f=live
"
"https://news.hada.io/topic?id=4803","OpenAI Codex 공개 및 파이썬 퍼즐 챌린지 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    OpenAI Codex 공개 및 파이썬 퍼즐 챌린지 예정

   - 자연어를 코드로 변환하는 AI 시스템
   ㅤ→ GitHub Copilot의 기반이 된 기술
   ㅤ→ 비공개 베타 API로 공개해서 다른 회사/개발자도 이용 가능
   - GPT-3를 확장
   ㅤ→ 기존 자연어 데이터와 공개 GitHub Repo의 코드를 포함하여 공개적으로 사용가능한 수십억줄의 코드 포함
   ㅤ→ Python 에서 가장 잘 동작하지만 Javascript, Go, Perl, PHP, Ruby, Swift, TypeScript 및 Shell 을 포함한 12개 이상의 언어를 지원
   ㅤ→ GPT-3는 4KB 였던데 반해, 파이썬 코드를 위해 14KB 메모리를 가지고 있어서 작업수행중 상황정보를 3배이상 고려 가능
   - OpenAI Codex 는 범용 프로그래밍 모델로 모든 프로그래밍 작업에 적용 가능
   ㅤ→ 언어간 번역, 코드 설명, 리팩토링등에 성공적으로 사용했지만, 이건 할 수 있는 일의 아주 일부만 건드린 것이라고 생각함
   ㅤ→ API를 통해서 빨리 안전하게 확장하는 것을 목표로 함
   ㅤ→ 초기 기간중에는 무료로 제공될 것
   - Waitlist 에 등록 받는 중
   - OpenAI Codex Challenge 예정
   ㅤ→ 8/12 오전 10~1시 (태평양 표준시)
   ㅤ→ Codex를 경쟁상대 또는 팀 동료로 삼아서 빠르게 Python 퍼즐을 푸는 대회
"
"https://news.hada.io/topic?id=4722","페이스북, iOS에 웹앱 방식으로 클라우드 게임 서비스 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   페이스북, iOS에 웹앱 방식으로 클라우드 게임 서비스 시작

   - 홈스크린에 아이콘 추가하는 방식으로 일반 앱과 비슷하게 이용 가능
   ㅤ→ 아마존 Luna / MS XCloud 도 비슷한 PWA 방식
   - 애플은 클라우드 게임들이 앱스토어에도 별도 앱으로 등록한다면 클라우드 게임으로도 열어준다고 앱스토어 가이드를 변경 했으나, 게임 회사들이 받아들이긴 어려워서 유명무실한 규칙
   - 현재 클라우드 게임들은 북미만 오픈, 기존 HTML 기반 게임들은 더 많은 국가에서 제공되므로 곧 더 확대 될 것

   페이스북 게이밍 링크 : https://www.facebook.com/gaming/play
"
"https://news.hada.io/topic?id=4801","TikTok, 2020년 다운로드 수 기준 페이스북 제치고 세계 1위","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 TikTok, 2020년 다운로드 수 기준 페이스북 제치고 세계 1위

   - AppAnnie 데이터 기준
   ㅤ→ 글로벌 : 틱톡 > 페이스북 > 왓츠앱 > 인스타그램 > 페이스북 메신저 > 스냅챗 > 텔레그램 > Likee(중국) > 핀터레스트 > 트위터
   ㅤ→ 미국 : 틱톡 > 페이스북 메신저 > 페이스북 > 인스타그램 > 스냅챗 > 왓츠앱 > 디스코드 > 핀터레스트 > 트위터 > 구글 Duo
   ㅤ→ 아시아(중국 제외) : 페이스북 > 틱톡 > 왓츠앱 > 인스타그램 > 페이스북 메신저 > 스낵 비디오(중국) > 텔레그램 > 스냅챗 > Truecaller(스웨덴) > Likee
   ㅤ→ 중국 : Douyin(틱톡) > WeChat > QQ > WeShow > RED > Weibo > Douyin Volano Edition > Sogou Pinyin Input Method > Zhihu > Soul
   ㅤ→ 일본 : LINE > 인스타그램 > 틱톡 > 트위터 > 핀터레스트 > 페이스북 > TownWiFi by GMO > Pairs > 디스코드 > Yahoo Mail
   - Likee 는 TikTok의 경쟁앱
   - 개인 정보 보호때문에 텔레그램도 순위권
   - RED(중국) : 전자상거래 + 소셜네트워킹, 주로 화장품, 패션, 건강 보조식품 및 소비재
   - Soul : 인공지능 심리테스트로 성격분석하여 이성 또는 친구를 찾아주는 앱
   - Snack Video 는 Kuaishou 의 숏비디오 앱. 방송 + 온라인 쇼핑 형태의 라이브 커머스
"
"https://news.hada.io/topic?id=4738","[동영상] CPU는 어떻게 작동할까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          [동영상] CPU는 어떻게 작동할까?

   예전에 제가 인텔에서 올린 [45분만에 보는 현대 CPU 아키텍쳐 정리] 영상을 이곳에 소개한 바가 있습니다. 그 영상에서는 ISA(명령어 집합 아키텍쳐)와 그 구현체인 마이크로아키텍쳐에 관한 내용이 집중적으로 소개되었지요. 해당 영상에서도 컴퓨터의 추상화 계층에 관해 설명하며 추상화의 가장 밑바닥에 있는 원자나 전자, 그것들이 모여 만들어진 트랜지스터 등에 대해 언급하기는 했습니다만, 그게 주된 내용은 아니었습니다.
   [동영상] 45분만에 보는 현대 CPU 아키텍쳐 정리
   https://news.hada.io/topic?id=4047
   여기서 좀 더 내려가, 반도체의 기본 원리에서부터 시작하여 논리 게이트와 반가산기(Half Adder) 등을 소개한 끝에 메모리 계층구조와 CPU의 4단계 명령 주기인 [인출 → 해독 → 실행 → 기록]의 예시까지 보여주는 영상을 소개합니다. (한국어) 말하자면 좀 더 로우레벨에 집중하여 보여주는 영상이라고 볼 수 있을 것 같습니다. 트랜지스터의 기본 원리는 예전에도 들어본 적은 있지만 이렇게 영상으로 보니 훨씬 이해가 잘 되는군요.
"
"https://news.hada.io/topic?id=4724","Clockwise - 회의 비용 계산기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Clockwise - 회의 비용 계산기

   - 회의 참석자의 평균 연봉을 통해서, 미팅에 들어가는 비용을 0.5초당 계산해서 보여줌
   - TUI로 표시되고, OBS Studio를 통하면 Zoom 화면 구석에 표시 가능
   - Zoom 미팅 URL을 주면 참석자 수를 자동으로 카운팅
   - 평균연봉은 $150,000이 기본값

   15만 달러가 기본값이라니... ㅋㅋㅋ 실리콘밸리인가요

   Jetbrains가 설문조사로 평균 IT 연봉 통계를 냈던 적이 있었는데...
   미국 - 96000$
   캐나다 - 34000$
   (...

   그러고보니 캐다나는 너무 심한데요. 같은 조사에서 캐나다가 이민율이 가장 높은걸로 나왔던데..

   뭔가 중간 값이 빠진 게 아니라 저게 1,2등이더라고여. 갭이 너무 무시무시해서 버그 난줄..
   https://news.hada.io/topic?id=4646

   모든 회의가 다 의미없다는 건 아니고.. 그냥 재미로 보면 될듯합니다 ㅎㅎ
   OBS에 텍스트파일로 연동하는 건 다른 기능에도 쓸만 할 것 같아요.
"
"https://news.hada.io/topic?id=4769","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   방금 사랑니를 빼서, 토요일은 애니메이션이나 영화를 보며 푹 쉬려고 합니다! 내일부터는…
   - 사내에서 제가 만들고 있는 사이드 프로젝트가 있는데요, 다른 팀에서도 사용 할 수 있게 스크립트 코드를 Lua에서 TS로 마이그레이션 후, 기존 팀은 TS to Lua로 스크립트를 쓰고, 다른 팀은 TS로 쓰는 게 될지 프로토타이핑을 해보려고 합니다.
   - 개인적으로 게임을 만들고 있는데. 이것도 열심히 해야 개인적인 마감기일을 맞출수 있겠네요.
   - 글도 쓸 것입니다! 판타지 소설이에요 ‘ㅁ ‘/

   한편씩 아껴보는(?) 넷플릭스 다큐인 '무비: 우리가 사랑한 영화들' 한편 보려고요.
   제목 그대로 지금은 너무나도 잘 알려진 영화들 이야기인데요.
   작가나 감독, 배우들 배경부터 우여곡절의 제작과정을 거쳐 상영되기까지를 영화 클립들과 인터뷰를 활용해서 재미있게 설명해줍니다.
   (헤드퍼스트 책 보는 것 같아서 처음엔 정신이 없었네요 ㅎㅎ)
   호흡은 더 짧겠지만 새로 시작하는 스타트업이나 프로젝트가 완성되는 과정이 살짝 오버랩 되면서, 또 이미 성공한 영화에 대한 얘길 보는거라 더 재미있는 것 같아요.

   중요한 릴리즈 건이 하나 있어서 주말에 회사 갑니다 흑흑..

   주말마다 친구들과 게임을 만들고 있습니다. 이번주는 캐릭터 액션들 코딩 마무리 짓는게 목표에요

   집 인테리어를 하고 있습니다. 어제 오늘 도배를 진행했는데 아직 가보지 못해서 주말에 가서 확인도 해봐야 될 것 같고,,, 가전도 새로 구입해야 해서 견적 받으러 돌아다닐 것 같네요.ㅋㅋ

   지난주에는 검색 기능을 넣겠다고 여기다 적었는데, 적고나니 정말로 꼭 해야지! 하는 생각이 들어서 어떻게든 만들게 되더군요. 긍정적인 효과인듯 ㅎㅎ
   그래서, 전 이번주에는 책 읽는 주간입니다.
   지인분들이 책을 내셔서 ""눈 떠보니 선진국"", ""코로나 시대의 역발상 트렌드"" 두가지 책을 읽어보려고 합니다.
   요즘은 활자책을 읽는 속도가 더 느리더라구요. 보다가 자꾸 다른 것에 신경을 빼앗겨서 그러는 것 같기도 합니다.
   꼭 두권 다 읽는 것을 목표로!
"
"https://news.hada.io/topic?id=4726","MS Beachball - Semantic Version Bumper","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 MS Beachball - Semantic Version Bumper

   - npm 퍼블리싱 자동화 도구
   ㅤ→ git 과 npm 버전을 싱크
   ㅤ→ 체인지로그 생성
   ㅤ→ 자동 버전 범핑
   ㅤ→ 싱글 / 모노 레포 지원
   ㅤ→ 퍼블리시 전 Validation 체크
   ㅤ→ Zero Config Versioning
   - Typescript 오픈소스 (MIT)
"
"https://news.hada.io/topic?id=4694","Angle-grinder - 실시간 로그 뷰어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Angle-grinder - 실시간 로그 뷰어

   - 로그를 실시간으로 파싱, 집계, 합계, 평균, 최대/최소, 정렬 가능한 뷰어
   ㅤ→ graphite/kibana/honeycomb/splunk 등이 없을 때 간단하게 정교한 분석 수행 가능
   - 초당 1M(간단한 경우 5M)단위의 로그 처리 가능
   - 실시간으로 업데이트 되는 UI 구현 가능
   - Rust 오픈소스. 리눅스/맥 바이너리 제공(다른 OS 컴파일 가능)
   예)
   - agrind '* | json | count by log_level'
   ㅤ→ JSON으로 로그레벨 단위로 로그 카운트 집계
   - '* | json | where status_code >= 400'
   - '* | json | where user_id_a == user_id_b'
   - '* | json | where url != ""/hostname""'
   - '* | json | count, p50(response_ms), p90(response_ms), count by status_code >= 400, url'

   The Logfile Navigator https://news.hada.io/topic?id=4606
   페이지 하단에도 있듯이 기존 lnav와 비교가 되는데,
   - Angle-grinder는 쏟아지는 로그에서 실시간으로 데이터를 취합해서 뭔가 처리해서 보고 싶을 때 사용
   - lnav 는 sqlite 를 통해서 이미 출력된 로그에서 SQL등을 통해서 쿼리 할때 사용
"
"https://news.hada.io/topic?id=4685","Typed(타입드) - 문서 작성과 연계되는 지식 수집/관리 툴","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Typed(타입드) - 문서 작성과 연계되는 지식 수집/관리 툴

   - 기존 Pocket, RainDrop 등과 달리 문서 작성과 연계되는 웹 클리퍼 제공
   - 현재 Google Docs 등 Google Workspace 연동 중이나 추가 문서 툴 지원 예정
   ㅤ→ 'Single Source of Truth' 철학을 기반으로 다양한 문서 툴에서 참고 가능한 하나의 지식관리 소스 지향
   - CBT 출시 1달 만에 ProductHunt 에서 Product of the Day에 선정
   - 올 연말 Open Beta 출시 예정으로 알려짐
   ㅤ→ 아직 CBT 단계로 사용성이 완벽하지는 않을 수 있으나 빠르게 개선되고 있음
   ㅤ→ 현재 국내에서 가장 주목 받는 생산성 SaaS 스타트업으로 알려짐
   ㅤ→ 북미법인 설립을 완료하며 북미시장에서도 적극적으로 사업 전개 중

   홍보를 위해서 올려주신 거라고 생각하고, 제가 둘러본 의견을 가감없이 적겠습니다. 이미 고려하고 계신거라면 무시하셔도 됩니다.
   영어/한국어 사용자를 명확히 분리하면 좋을 것 같습니다. GeoIP 나 브라우저 언어로 방문자를 구분할 수 있을텐데 무조건 양쪽 언어가 다 보이는 것은 영어권 사용자들에게도 한국 사용자에게도 어필하는데 전혀 도움이 안될 것 같습니다. EN / KR로 나눠지는 링크들은 가능하면 하나의 링크로 만들고 사이트 전체에 대한 언어 선택이 가능하게 만들어 주는게 다국어 지원을 잘하는 회사인 것 같은 느낌을 주지 않을까 합니다. 당연히 처음 방문시 GeoIP/Accept-Charset 을 통해서 맞는 언어를 보여주고요.
   피쳐들 소개 영상이 너무 작아서 어떤 기능인지 알아보기가 어렵습니다. 디자인을 살짝 바꿔서 영상의 기본 사이즈를 더 키우거나, 클릭하면 확대 재생할 수 있게 해주면 좋지 않을까 합니다.
   제공하는 기능에 대해서 브라우저 기반으로라도 데모형식으로 가입 전에 직접 경험하게 해줄 수 있으면 좋을 것 같습니다.
   베타 가입 이메일 입력창이 너무 페이지 앞 부분에 위치하는 것 같습니다. 기능을 먼저 어느정도 보여주고, 지금 베타 가입하면 뭔가 베네핏이 주어지는 것처럼 적어주면 좋지 않을까요 ? 모바일로 들어간 경우 첫 화면에서 영어/한국어 이메일 입력창 밖에 보이지 않습니다. 특히나 처음 영상은 모바일에선 아예 안보이구요.
   하단 링크의 서비스 브로셔 PDF도 처음 2장이 아무 정보도 없는 페이지여서, 읽는 재미가 떨어집니다. 적어도 첫장에는 이 서비스가 왜 좋은 지를 어필하는 문장과 이미지는 보여주면 좋을 것 같습니다.
   웹서비스 개발사가 Wix 같은 웹사이트 빌더로 웹사이트를 만들었다는걸 내비두는 것은 프로페셔널해 보이지 않습니다. SEO에 대한 고려도 거의 안되어 있구요. 사이트 타이틀,데스크립션에 Typed 라는 서비스 이름 및 쉬운 소개 문구가 없다는건 서비스 자체를 홍보하지 않겠다는 것과 같습니다. 영어권 서비스를 목표로 하신다면 SEO 고려는 필수 입니다.

   서비스 주소로 수정해두었습니다.

   감사합니다!!
"
"https://news.hada.io/topic?id=4793","Bytebase - 웹 기반 DB스키마 변경 및 버전 관리도구 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Bytebase - 웹 기반 DB스키마 변경 및 버전 관리도구 오픈소스

   - Team을 위한 DB 스키마 변경 관리도구
   ㅤ→ UI 기반의 SQL 리뷰
   ㅤ→ 버전관리 기반 스키마 마이그레이션 (Database-as-Code)
   - MySQL 지원. PostgreSQL 지원 예정
   - VCS : GitLab EE/CE 지원. GitHub/GitLab/GitHub Enterprise 지원 예정
   - Go + SQLite + Vue + TailwindCSS 오픈소스
"
"https://news.hada.io/topic?id=4740","ncc - Node.js 프로젝트를 1개 파일로 컴파일","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ncc - Node.js 프로젝트를 1개 파일로 컴파일

   - Next.js 개발팀의 프로젝트
   - gcc 스타일로 모든 디펜던시를 묶어서 Node.js 모듈을 한개의 파일로 만들어 주는 CLI
   - 만든 동기
   ㅤ→ 최소한의 패키지만 npm에 퍼블리시
   ㅤ→ 관련된 앱코드만 서버리스 환경에 배포
   ㅤ→ 더 빠른 시작 시간과 적은 I/O 오버헤드
   ㅤ→ go 같은 컴파일 언어와 같은 경험 제공
   - 디자인 목표
   ㅤ→ Zero Configuration
   ㅤ→ TypeScript 지원 내장
   ㅤ→ Node.js 프로그램만 input/output 으로 지원
   ㅤ→ 모든 Node.js 패턴과 npm 모듈 지원
"
"https://news.hada.io/topic?id=4788","Agile 20주년 : 실패한 반란","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Agile 20주년 : 실패한 반란

   - Agile Manifesto(애자일 선언문)가 발표된 지 20년이 지난 지금, 명백한 두가지 사실은
   ㅤ1. Agile이란 이름 붙이는데는 승리했음. 누구도 non-Agile 이라고 불리기를 원하지 않음
   ㅤ2. Agile의 실행에 있어서는, 파운더들의 혁명적인 아이디어에 비해 많이 부족함
   - ""모두가 Agile을 한다고 얘기하지만, Agile한 사람은 거의 없음"" 왜 이런 상황이 되었을까 ?
   [ Whence The Manifesto : 선언문은 어떻게 시작되었나 ]
   - 2001년 2월, 17명의 소프트웨어 전문가 그룹이 유타의 스키리조트에서 미팅
   - 며칠간의 토론을 통해 ""Agile Software Development Manifesto""를 공동으로 작성
   - 중요한 점은 그들이 ""Practitioner(실무자)"" 였다는것. 그들은 PM이나 CTO, VP Engs 등이 아니었음. 그들은 개발자, 프로그래머, 과학자, 엔지니어 였음. 그들은 그때도 계속 코드를 쓰고, 이해관계자들과 협력하여 문제를 해결하고 있었음. 이게 정말 중요함.
   - 다른 포인트는 Agile Manifesto가 아무것도 없는 상태에서 만들어지지 않았다는 것. 이들 중 여럿은 다들 자신이 만들었거나 전파중인 방법론을 가지고 있었음.
   ㅤ→ XP, Scrum, DSDM, Adaptive Software Development, Crystal, FDD, Progmatic Programming
   - 그룹의 모든 사람들이 소프트웨어 개발 경력이 많았고, 그들은 그 당시 시장의 주류였던 문서 주도의 무거운 소프트웨어 개발 프로세스를 대체할 것을 찾고 있었음.
   - 선언문의 핵심은 4가지의 가치에 대한 설명
   ""우리는 소프트웨어를 개발하고, 또 다른 사람의 개발을 도와주면서 소프트웨어 개발의 더 나은 방법들을 찾아가고 있다. 이 작업을 통해 우리는 다음을 가치 있게 여기게 되었다:
   - 공정과 도구(processes and tools)보다 개인과 상호작용(Individuals and interactions)을
   - 포괄적인 문서(comprehensive documentation)보다 작동하는 소프트웨어(Working software)를
   - 계약 협상(contract negotiation)보다 고객과의 협력(Customer collaboration)을
   - 계획을 따르기(following a plan)보다 변화에 대응하기(Responding to change)를
   가치 있게 여긴다. 이 말은, 왼쪽에 있는 것들도 가치가 있지만, 우리는 오른쪽에 있는 것들에 더 높은 가치를 둔다는 것이다.""
   [ A New Hope : 새로운 희망 ]
   - 2021년의 관점에서 보면 현대적인 소프트웨어 개발 관행을 당연한 것처럼 받아들이기 쉽지만, 2001년에는 이런 아이디어들이 매우 급진적이었음.
   - 요구사항을 모두 수집하고, 모든 기능을 평가하기전에 소프트웨어를 개발하기 시작한다구요? 미쳤군요!
   - 잊혀져 가는 중요한 점은 Agile이 초기에는 공개적이고 전투적으로 반 관리적(anti-management) 였다는 것
   - 예를 들어 Scrum의 공동 창시자인 Ken Schwaber는 모든 프로젝트 매니저를 없애자고 주장하면서 , 프로젝트에서 PM을 빼는 것만이 아니라, 업계 자체에서 해당 직업을 없애야 한다고 했음.
   ""우린 프로젝트 관리자의 역할이, 복잡하고 창의적인 작업에서는 비생산적이라는 것을 발견했습니다.
   프로젝트 계획으로 표출되는 프로젝트 매니저의 생각은,
   문제를 가장 잘 해결하기위해 모든 사람의 지능을 모으는 것이 아닌,
   계획에 적혀 있는 것으로 모든이의 창의성과 지능을 제한합니다.""
   - 스크럼 마스터는 거의 권한이 없었고, 이슈에 투표권도 없었습니다. 그들은 서번트 리더*였으며, 팀을 보호하고 장애물을 치워주지만, 팀을 관리하지 않았음.
   ㅤ→ 서번트 리더 : 부하를 섬기는 자세로 그들의 성장 및 발전을 돕고, 리더와 부하간의 신뢰를 형성시켜 조직 목표 달성에 부하 스스로 기여하도록 만드는 리더
   - XP에도 원래 Tracker 와 Coach가 있었는데, 비슷하게 동작했음.
   - Crystal과 Hexagonal 아키텍처의 창시자인 Alistair Cockburn은 최근 트윗 쓰레드에서 이런 얘기를 한바 있음
   ""스크럼은 적대적인 지역에서 엄청난 거래를 성사 시켰음:
   ㅤ- 경영진들은 1년에 12번, 각 스프린트후에 원하는 방식으로 방향을 바꿀 수 있었음
   ㅤ- 팀은 무거운 생각과 작업을 하기 위해 인터럽트나 방향 변경없이 완전히 조용한 한달이라는 기간을 얻었음
   ㅤ- 팀은 경영진의 간섭없이, Bid(우선순위를 결정하기 위한)에서 한달동안 할 수 있는 것과 할 수 없는 것을 발표할수 있었음
   ㅤ- 어떤 경영진도 이보다 더 나은 거래를 해본 적이 없었음
   ㅤ- 어떤 개발팀도 이보다 더 나은 거래를 해본 적이 없었음
   ""
   (역자 주: 이 트윗쓰레드는 처음에 ""스크럼 팀은 스프린트에 할당된 모든 아이템을 100% 끝내야 한다는 아이디어는 어디서 나온건가요? 이건 말도 안되는데요."" 라는 질문에서 시작된 답변입니다. 원문 쓰레드 전체를 보시는 걸 권해드립니다.)
   - 15년 이상 Agile 팀에서 일한 공인 스크럼 마스터이고, 이 분야의 인기 있는 책을 많이 있었지만, 스크럼에 대한 아이디어를 이렇게 명확하고 간결하게 설명한 것을 본적이 없음.
   - 스크럼은 적대적인 환경에서 작동하도록 만들어졌음. 생각하고 탐색할 시간이 필요한 개발자들과 강압적인 관리자들간의 계약임
   [ The Empire Strikes Back : 제국의 역습 ]
   - 어떤 면에서 Agile은 풀뿌리 노동 운동이었음. 실무자에서 시작해서 경영진까지 올라갔음. 이게 어떻게 성공했을까?
   - 부분적으로는 개발자의 수가 늘고, 비즈니스에 주는 가치가 증가했기 때문
   - 더 큰 이유는 전통적인 워터폴 개발방식이 제대로 작동하지 않았기 때문
   - 소프트웨어가 더 복잡해지고, 비즈니스의 속도가 빨라지고, 사용자의 수준이 높아지면서 모든 것을 미리 계획하는 것이 불가능 해짐.
   - 반복적인 개발은 수용하는 것은 논리적이었지만, 모든걸 계획했던 관리자들에게는 약간 두려운 일이 었음.
   - 2000년대 중반에는 경영진들이 받아들이지는 않았었음.
   - 그러다 ""엔지니어들이 계속 이야기 하는 이 미친 아이디어를 한번 시도해보자. 우리 지금 데드라인 어차피 못 맞추는데 얼마나 나빠지겠어?"" 라는 얘기가 나옴.
   - 하지만 놀랍게도 워킹하기 시작. 팀은 처음에는 살짝 움츠러 들었지만(느렸지만) 점차 어떤 패턴이 각 팀에 동작하는지 알게 되면서 속도가 붙기 시작했음
   - 몇번의 스프린트 후에는 작동하는 소프트웨어, 협업, 검사 및 적응하는데 시간을 들이는 것과, 그외 모든 것들의 우선순위를 정하는 것의 힘을 알게 됨
   - 약 5년간은 Agile은 들어봤던 방법론에서 모든 사람이 익숙하지는 않은 것으로 바뀌어 갔음.
   - 2005년에는 Agile과 TDD가 진정한 차별화 요소였음
   - 2010년에는 최신 소프트웨어팀들은 다 어떤 형태로든 Agile을 하고 있었음.
   - 적어도 컨설팅업계에서는 버블이었음. 대기업은 항상 느리게 움직였지만.
   ""우리가 해냈어요! 우리가 이겼어요! 모두 축하합시다""
   이게 이야기의 끝이고, 브라우저의 탭을 닫아도 됩니다.
   ""Winning was easy, young man. Governing’s harder.""
   ""이기는 건 쉬웠어, 젊은이. 통치가 더 어려워""
   ㅤ→ 해밀턴(뮤지컬) 에서 묘사된 조지 워싱턴
   - 불행하게도 많은 혁명과 마찬가지로, 애자일의 역사는 창시자들이 구상한 방식으로 전개되지 않았음.
   ㅤ→ ""개인과 상호작용""을 우선시 하는 것은 Sell하기 어려운 개념이라는 것이 밝혀졌음. 프로세스와 도구를 Sell하는 것이 훨씬 쉬움
   ㅤㅤ(역자 주 : 여기서 Sell 은 판매라기 보다는 남들에게 이해시킨다는 의미여서 그대로 뒀습니다.)
   ㅤ→ ""작동하는 소프트웨어""는 비현실적인 계획과 많은 문서보다 더 만들기가 어렵다는 것이 밝혀졌음.
   ㅤ→ ""고객과의 협업""은 신뢰와 취약성(vulnerability)이 필요하지만, 비즈니스에서 항상 존재하지는 않음.
   ㅤ→ ""변경에 대응하기""는 종종 장기계획을 세우고 통제해야하는 경영진들에게 더 무게가 실렸습니다.
   ""Agile이 제대로 수행되지 않으면 종종 혼돈처럼 느껴진다는 것이 밝혀졌음""
   - 하지만 이 4가지 가치가 잘못된 것은 아님
   - 이 모든 것이 제대로 되려면 약간의 노력이 필요하고, 소프트웨어가 본질적으로 어지럽고 혼란스럽다는 것을 받아들이는 용기가 필요하다는 것을 의미함
   - 계속 배우고 적응하고 개선하고 출시하다보면 결국에는 폭포수보다 훨씬 더 나은 곳, 훨씬 더 정직하고 현실적이고 생산적인 곳으로 갈 수 있다는 것을 이해하고 믿어야함.
   ""애자일 운동은 반방법론(Anti-methodology)이 아닙니다.
   실제로 우리중 많은 사람들은 ""방법론"" 이라는 단어에 대한 신뢰가 회복되기를 원합니다. 균형이 회복되기를 원합니다.
   모델링을 수용하지만, 먼지쌓인 회사 창고에 다이어그램을 넣어두기 위함이 아닙니다.
   문서화를 수용하지만, 유지보수 되지 않고 거의 사용 되지 않는 수백페이지의 책을 수용하는 것은 아닙니다.
   계획은 만들지만, 격동적인 환경에서 계획의 한계를 인식합니다.
   XP, Scrum 또는 기타 애자일 방법론의 지지자들을 'Hacker'로 낙인 찍는 사람들은 ""방법론""과 ""해커"" 용어의 원래 정의에 대해 무지한 것입니다.""
   - Jim Highsmith, History: The Agile Manifesto
   - 이게 중요한 포인트들임. 우리는 여전히 계획과 문서를 만들고, Agile에 엄격해야함. 이건 균형에 대한 것임.
   - 그러나 당신의 조직이 Agile 전환에 어려움을 겪고 있고, 혼돈에 빠져있다면, 누군가가 인증,프로세스,도구 같은 구명정을 제공한다면 그리로 점프하게 됨.
   - 경영진은 ""자기 조직화 팀"" 보다 프로세스와 도구를 훨씬 잘 이해함.
   [ R̶e̶t̶u̶r̶n̶ ̶o̶f̶ ̶t̶h̶e̶ Rogue One : 로그 원(의 귀환) ]
   - 여기서 내 3막 구조가 약간 무너짐. 왜냐면 Agile 이름을 달지 않고 돌아오는 용감한 반군은 보이지 않기 때문
   (역자 주: 스타워즈 시리즈 이름에 빗대어, Agile이 아닌 다른 무언가는 나오지 않았다는 것)
   - 도구 벤더, 프로세스 컨설턴트 및 전문가가 절대 제공할 수 없는 약속을 하는 경우가 많음.
   - 우리가 SAFe(Scale Agile Framework for Enterprise) 나 Scaled Scrum 및 다른 엔터프라이즈용 Agile 버전을 만들게된 이유
   - 이런 프레임워크들은 악의적인 의도로 만들어진게 아니고, 아마도 적절한 맥락에서는 어느정도 가치가 있을 것.
   - 하지만, 나는 그들을 Agile이라고 부르지 않을 것
   - 개인과 상호작용에 중점을 둔 방법론을 확장하려고 하면 필연적으로 문제가 발생하고 방법론의 원래 가치가 손상됨.
   - 애자일 선언문 서명자이자, XP 공동 창시자인 Ron Jeffries가 2018년에 쓴 유명한 글
   ""개발자는 Agile을 포기해야 합니다.
   'Agile' 아이디어가 제대로 적용되지 않으면, 개발자에게 더 많은 간섭을 하고, 작업시간을 더 적게 주고, 높은 압력을 주고, '더 빠르게 진행' 하는 것을 요구하게 됩니다. 이건 개발자들에게 좋지 않으며, 궁극적으로는 회사에도 좋지 않습니다. 'Agile'을 제대로 수행하지 않으면 실제 달성할 수 있는 것보다 훨씬 더 많은 결함과 더 느린 진행이 자주 발생하기 때문입니다. 종종 우수한 개발자가 그런 회사를 떠나게 되면서, 결과적으로는 ""Agile""을 도입하기 전보다 효율성이 떨어지는 기업이 됩니다.""
   - 다른 서명자이자, 실용주의 프로그래밍의 공동 창시자인 Dave Thomas가 2014년에 쓴 유명한 글
   ""Agile 은 죽었다. (Agility여 영원하라)
   'Agile' 이라는 단어는 사실상 의미가 없는 지경까지 전복(subvert) 되었고, 애자일 커뮤니티의 경우 대체로 컨설턴트와 벤더들이 서비스와 제품을 판매하는 장소가 되어버렸습니다. Manifest가 대중화 되면서 Agile 이라는 단어는 지지할 것이 있거나, 청구할 시간 이나 판매할 제품이 있는 모든 것들을 끌어들이는 자석이 되어버려서, 마케팅 용어가 되었습니다.
   그래서 'Agile' 이라는 말은 이제 은퇴시켜야할 때라고 생각합니다.""
   [ Retro : 과거로의 회귀 ]
   - 정말 슬픈 것은 젊은 개발자가 Agile을 폄하하고, 경영진들이 비현실적인 약속들을 도출하고, 개발자들이 엄청 많은 시간을 일하도록 부추기도록 하는 수단으로 생각하는 것을 보는 것.
   - 그들이 아는 유일한 Agile은 그들에게 부과된 통제 메커니즘이지, 기쁘게 받아들였던 자기 권한 부여의 도구가 아님.
   - 하지만, 역사와 원래의 비전에 대해 토론을 시작하는 것이 우리가 앞으로 어떻게 나아가야 할지를 기억하는데 도움이 되길 바람.
   - 이럼에도 좋은 소식은 Agile Manifesto의 원칙이 20년 전과 마찬가지로 오늘날에도 현명하고 적절하다는것. 그리고 Jeffreies 나 Thomas 같은 배교자(apostates, 종교를 버린사람) 로 추정되는 사람들도 여전히 그렇게 생각함.
   - 위에 언급된 글에서 Jeffries는 이렇게 얘기함
   ""그러나, Manifesto for Agile Software Development 의 가치와 원칙은 여전히 내가 아는 최고의 소프트웨어 구축 방법을 제공하며, 나의 길고 다양한 경험을 바탕으로 더 큰 조직에서 어떤 방법론을 사용하든 그 가치와 원칙을 따를 것입니다.""
   - 이 의견에 나는 동의함
   - 지금 애자일에 대해 이야기 하는 것은 힙하거나 멋진 일이 아님. 애자일은 지루함.
   ""다들 애자일 하시죠?""
   - 지금은 지난 20년을 되돌아보고 스스로에게 몇 가지 질문을 던질 수 있는 완벽한 시간
   ㅤ→ 무엇이 제대로 되었나요?
   ㅤ→ 무엇이 잘못되었나요?
   ㅤ→ 다음번에는 어떻게 다르게 하고 싶은가요?
   - 다음 몇달간 원래의 12 애자일 원칙을 다시 돌아보고, 원래 의미를 맥락화하고, 현재 소프트웨어 개발환경에서 그 가치를 고려하려고 계획중
   ""내 희망은 창립 원칙을 연구함으로써, 과거로부터 배우고, Dave Thomas 의 말처럼 'Agile'을 포기하더라도 'Agility(민첩성)'을 유지할 수 있기를 바랍니다.""

   저는 아래 설명에는 공감하며, 나머지는 그려러니 합니다.
   > ""'Agile' 이라는 단어는 사실상 의미가 없는 지경까지 전복(subvert) 되었고, 애자일 커뮤니티의 경우 대체로 컨설턴트와 벤더들이 서비스와 제품을 판매하는 장소가 되어버렸습니다.""
   그 이유는 이미 모두 아는 바와 같이 어떤 방법이 상업적(혹은 프로젝트)의 성공을 보장하지는 않기 때문입니다. 심지어 게임 한정으로 애자일이 다른 접근법들보다 통계적으로 더 유의미한 결과를 내지는 않는다는 연구도 있었습니다:
   ""위대한 게임 개발팀은 모든 구성원이 스튜디오의 개발 방법론을 잘 훈련하여 따르도록 합니다 [1]. 또한 게임 개발 중에도 지속적으로 수고를 들여 개발 방법을 갈고닦아 개선합니다. 그럼에도 불구하고 우리는 애자일과 애자일-스크럼, 혹은 워터폴 개발 방법 사이에서 통계적으로 유의미한 성과 차이를 발견하지 못 하였습니다 [2]. 개발 방법론 중 성과에 차이를 보인 것은 아무런 개발 방법론이 없는 경우였습니다: 우리의 연구는 팀원이 많던 적던 개발 방법론이 없는 것은 재앙적이라는 사실을 발견하였습니다.
   개발 방법론에 보편적인 정답은 없습니다. 스스로 생각하기에 여러분의 팀과 프로젝트에 가장 적절하다고 판단되는 개발 방법론을 선택하세요.""
   (출처: https://masterfarseer.blogspot.com/2015/03/5.html )
   그럼에도 불구하고 제가 애자일의 접근법(좀 더 정확히는 스크럼, XP와 칸반)을 선호하는 이유는 제가 당면한 문제를 해결해주기 때문입니다(It works!) 같은 이유로 ""애자일 선언문""에서 제가 가장 좋아하는 대목은 ""우리는 소프트웨어를 개발하고, 또 다른 사람의 개발을 도와주면서 소프트웨어 개발의 더 나은 방법들을 찾아가고 있다.""입니다. 그것은 어떤 이론에 근거해서 방법론을 만든 게 아니라, 실제로 '내가 해보고 효과를 봤고, 다른 사람들에게도 추천했더니 역시 효과가 있었다.'는 것을 기초로 하기 때문입니다. 켄 슈와버와 마이크 비들이 쓴 Agile Software Deveopment with Scrum에서도 실천법을 먼저 발명하고, 나중에 그 이론적 근거를 발견하는 여정이 언급됩니다. 그리고 그 관점이라면, 언젠가 누군가가 애자일을 더 발전시킬 수도 있고, 애자일보다 더 나은
   것을 발명할 수도 있다고 생각합니다.
   다른 모든 도구들과 마찬가지로 애자일은 만병통치약이 아니니, 누군가에게는 효과를 낼테고, 누군가에게는 효과가 없을 거라고 생각합니다. 그래서 이제는 누군가가 애자일로 성공했다고 특별히 더 용기를 얻거나, 혹은 실패했다고 해서 특별히 낙담하지 않습니다. 동시에 더 나은 방법이 있다면, 언제든 시험하고 적응할(inspect and adapt) 의사가 충만합니다. 그게 스크럼이 제게 준 진정한 교훈이니까요.

   - 공정과 도구 < 개인과 상호작용
   - 포괄적인 문서 < 작동하는 소프트웨어
   - 계약 협상 < 고객과의 협력
   - 계획을 따르기 < 변화에 대응하기
   여기서 부등호를 바꿔보면
   - 공정과 도구 > 개인과 상호작용
   - 포괄적인 문서 > 작동하는 소프트웨어
   - 계약 협상 > 고객과의 협력
   - 계획을 따르기 > 변화에 대응하기
   SI가 됩니다.
   요약 번역 감사합니다.

   - 왜 (일부) 개발자들은 Agile 을 싫어하는가 https://news.hada.io/topic?id=661
   - 왜 어떤 구글 개발자들은 애자일 개발이 무의미하다고 하는가에 대한 (전) 구글 엔지니어 디렉터의 답변 https://news.hada.io/topic?id=265
   - Spotify의 Squad 팀 모델은 실패였다 https://news.hada.io/topic?id=2191
   ㅤ→ 2012년 유명했던 스포티파이의 ""Scaling Agile"" 백서는 그들의 희망이었을 뿐 완전히 구현되지 않음.
   - What is Agile? | Atlassian - 아틀라시안이 알려주는 애자일 A to Z https://news.hada.io/topic?id=4389
"
"https://news.hada.io/topic?id=4705","Fullstack Boilerplate","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Fullstack Boilerplate

   - Typescript + React + React Native + GraphQL + Prisma
   - Expo, Next.js, Postgres, Apollo Client/Server, Chakra UI
   - 커스터마이징 가능한 테마 & 다크 모드
   - GraphQL Code Generator
   - Sendgrid SMTP, Sentry, Husky 지원
"
"https://news.hada.io/topic?id=4753","Coding Fonts - 코딩용 폰트 미리보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Coding Fonts - 코딩용 폰트 미리보기

   저처럼 코딩용 폰트를 끊임없이 바꾸는 분들을 위한(...)
   css-tricks에서 만든 코딩용 폰트 미리보기(?) 사이트입니다.
   각 폰트가 html, css, js 에디팅 환경에서 어떻게 보이는지 미리보기 할 수 있습니다.
   이런 사이트 중에서도 특히 편의성과 디자인 면에서 좋은 것 같아요. 검색에 잘 걸리지 않아 접하기 어려운 폰트들도 보여서 더욱 좋은 것 같습니다.

   오오... 한글도 섞어서 어울리는지 보고 싶네요 ㅎㅎ

   아쉽게도 렌더링 된 이미지라서 커스텀 텍스트 적용이 되지 않네요🤔 당연히 텍스트일 줄 알았는데!
"
"https://news.hada.io/topic?id=4717","Arm의 새로운 플라스틱 칩 PlasticARM, Internet of Everything 이 가능하게 될 수도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Arm의 새로운 플라스틱 칩 PlasticARM, Internet of Everything 이 가능하게 될 수도

   - IoT의 궁극적인 목표는 모든 물체가 인터넷 기능을 가지는 것 : 만물인터넷
   - ARM이 플라스틱 기판(필름)에 직접 32비트 마이크로프로세서를 제작한 PlasticARM을 Nature에 논문으로 발표
   ㅤ→ 현존 칩들보다 훨씬 저렴하고, 유연함(굽힐 수 있음)
   ㅤ→ 내용물이 상했는지 알 수 있는 우유병이나, 적절한 습윤환경을 모니터링하는 1회용 드레싱 처럼, 기존 칩들이 못들어가는 곳에도 가능
   - 기존에 Flexible(휠 수 있는) 전자기기들은 센서, 배터리, LED, 안테나 등은 가능했지만, 실제 사용 가능한 마이크로 프로세서들은 없었음
   ㅤ→ PlasticARM은 1제곱인치 안에 5만개의 트랜지스터를 집약
   ㅤ→ 18,000개의 로직 게이트로 기존 Flexible IC보다 12배
   - 영국회사인 PragmatIC Semiconductor가 Polyimide라고 부르는 플라스틱 기판에 박막 트랜지스터 인쇄하는 공정을 개발해서 그걸 사용
   - Arm의 초저전력 Cortex-M0+ 칩을 카피
   ㅤ→ 1Mhz 보다 30배쯤 느린 29kHz 에 2천배쯤 더 많은 전력을 사용
   ㅤ→ 아직은 Reprogrammable 메모리가 없어서 만들어진 동작만 수행가능
   ㅤ→ 하지만 현재는 PoC 일뿐이고, 개선 가능할 것
   - 기존 실리콘 칩만큼의 속도는 못내지만, PragmatIC 의 공정은 엄청 저렴해서 상용화 된다면 다양한 곳에 사용이 가능할 것

   우유병에서 둠을 ....!

   네이처나 사이언스에 실린 내용이 상용화 되는데 15년 정도 갭이 있다는데, 2035년 즈음에는 정말 입는 컴퓨터의 시대가 오는게 아닐지 기대되네요
"
"https://news.hada.io/topic?id=4707","GeekNews 2주년 회고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GeekNews 2주년 회고

   긱뉴스는 해외와 국내의 다양한 기술뉴스들을 보다 쉽게 접할 수 있는 사이트를 만들어서, 누구든지 제목과 요약만 계속 보면 업계와 기술의 흐름을 놓치지 않도록 도와주는 사이트가 되었으면 해서 시작했어요. 2년간의 회고를 적어봤습니다.
   - 활성사용자 : MAU 11만(작년 대비 2배), DAU 7천(작년대비 3.5배)
   - 슬랙봇 설치 731, 잔디/디스코드/팀스봇 추가
   - 작년 한해동안 전체 작성된 글 수 2225개
   - 가장 많이 즐겨찾기 한 글 Top 10
   - 팟캐스트와 유튜브 채널
   - Ask 오픈

   3주년 회고는 없나요? ㅎㅎㅎ

   정말 많은 도움 받고 있습니다. 감사합니다. 2주년 축하드립니다.

   축하드립니다 ㅎㅎ 항상 감사한 마음으로 잘 챙겨보고 있습니다

   축하드립니다~
   항상 많은 도움 받아가고 있습니다

   축하드립니다! 저도 2년간 거의 매일 방문한 것 같네요. 유용한 공유 및 요약 늘 감사드립니다!

   감사합니다!

   좋은 서비스에 늘 감사드립니다.

   항상 많은 도움을 받고 있습니다. 감사하며~ 축하드립니다~

   좋은 서비스 감사합니다!!! 축하드립니다!!!!

   축하드립니다. 🎂 좋은 서비스 감사합니다.

   2주년 축하 드립니다! 앞으로도 지속성장해 나가는 서비스가 되시길 바랍니다~

   축하드립니다~

   올려주신 글의 대시보드 너무 섹시하고 예쁘내요.! +.+

   2주년 축하드립니다. 저는 슬랙을 통해 잘 받아보고 있습니다. 감사드립니다!

   2주년 진심으로 축하드립니다.
   트위터, 디스코드, 슬랙으로 잘보고 있습니다. 기존에는 트위터를 연동해보았는데 웹훅으로 연결할 수 있도록 지원해주신 점 정말 감사합니다.
   덕분에 여러 사이트를 열심히 챙겨보던 것을 여유롭게 챙겨볼 수 있게 되었습니다.
   한국어로 소식을 접한다는 것도 좋고요.
   더욱 성장하는 서비스가 되길 기원합니다 😊

   매일매일 확인하는 긱뉴스. 2주년 축하드립니다.

   측하합니다~!

   잘 보고 있습니다~ 고맙습니다~

   좋은 서비스 만들어 주셔서 잘 이용하고 있습니다.
   감사드리며 2주년 축하드립니다.

   2주년 축하합니다. 지속하는 사이트로 남아주길 바라고 있습니다.

   축하드리고 항상 응원합니다!

   축하 드립니다!!

   축하드립니다!

   2주년 축하드립니다!

   감사합니다.

   축하드립니다~ 좋은 서비스 감사합니다 :)

   🎂 2주년을 축하합니다.
   좋은 서비스 감사합니다.

   항상 잘 보고 있습니다!

   👍👍👍

   좋은 서비스 제공해 주셔서 감사합니다! 저는 팀즈봇으로 보고 있어요.

   🎉🎉🎉
   2주년 축하드립니다.
   좋은 서비스 제공해 주셔서 감사합니다.

   많은 도움 받고 있습니다!
   더욱 성장하시기 바랍니다.

   국내 최고의 기술 뉴스!

   덕분에 많은 도움 받고 있습니다. 감사합니다. 2주년 축하 드립니다.

   슬랙봇으로 너무 잘보고 있습니다. 감사합니다!!

   'ㅁ '/ 축하드립니다! 야호!

   👍
"
"https://news.hada.io/topic?id=4721","오픈소스를 이용한 사설 LTE & 5G 네트워크 구축","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     오픈소스를 이용한 사설 LTE & 5G 네트워크 구축

   - 요즘엔 WiFi 구축은 쉽지만, 더 넓은 영역에 더 많은 장비를 접속하려면 비효율적
   - 오픈소스 기술을 이용해서 나만의 LTE 또는 5G 네트워크를 구축하면
   ㅤ→ 몇대의 장비로 넓은 지역을 커버 가능
   ㅤ→ 적당한 주파수를 선택하면 벽이나 지하에서도 훌륭한 성능
   ㅤ→ WiFi에 비해서 훨씬 보안도 좋음
   ㅤ→ 통신사들이 하는 1m내의 정확도를 가지는 위치 추적도 가능해짐
   - 기본 장비 비용은 비싸지 않음
   ㅤ→ LimeSDR mini + Raspberry Pi 4 = 약 $300 이하
   - Carrier Aggregation 같은 고급기능과 최고의 속도, 수백개의 IoT 장비를 붙여야 한다면 10k$ 정도의 추가 비용 필요
   ㅤ→ 하드웨어 : Ettus x310 + X86서버
   ㅤ→ 소프트웨어 : Ubuntu + srsRAN
   - 엔터프라이즈 수준의 사설망을 구축한다면
   ㅤ→ OpenRAN + Magma

   국가별 법적 제한은 없으려나요? sw 이니 인증 받은 기기를 쓰는 방식도 아니고 말이죠...

   https://m.blog.naver.com/ki630808/222136313746
   미국같은경우 특정 주파수를 무면허로 개방한다는것 같으나 한국은 면허 없이 주파수를 사용하면 불법입니다.(빈 주파수 대역이 거의 없으므로 불법 여부를 떠나 간섭 등 문제가 발생할 소지가 높습니다)

   아 고맙습니다. 한국은 상황이 많이 다르네요!

   참고로 아마추어 무선조차도 전파를 사용하기 위해서는 자격증과 주기적인 검사를 받아야 합니다. 이동통신 기지국도 과거에는 일일이 국가에서 허가를 받아야만 개설할 수 있었지만, 2008년 이후로는 이동통신 사업자에 한하여 신고만 하면 기지국을 개설할 수 있게 되었지요. 어쨌든 정부는 전파를 발신하는 기기의 설치 위치가 담긴 목록을 가지고 있는데, 이걸 구경하려면 아래 사이트에 들어가보시면 됩니다. 우리 주변에 통신사 기지국이 엄청 많다는 것을 알 수 있지요.
   https://spectrummap.kr/gis/wavemap.do?menuNo=300477

   전파(주파수)는 대부분의 국가에서 국가 자원으로 별도 사용 규제가 있어서, 실제로 이걸 실행하려면 여러모로 검토를 해야 할 거에요!
   그래서 와이파이나 블루투스, 아마추어 무선 통신 등은 비면허 주파수 대역을 사용하고요~

   https://www.spectrum.or.kr/bbs/content.php?co_id=overview

   LibreCellular - 오픈소스로 4G 셀룰러망 구축하기 https://news.hada.io/topic?id=4546
"
"https://news.hada.io/topic?id=4749","자율주행이 우리 생활에 가져올 변화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          자율주행이 우리 생활에 가져올 변화

   - 아마존에 인수된 Zoox(주크스)의 자율주행 택시는 차보다 최첨단 '마차'라는 표현이 적절
   ㅤ→ 처음부터 운전자를 배제하고 설계된 차량
   ㅤ→ 이 차는 소유를 할 수도 없음
   - 이 차가 업계와 우리의 이동 방식에 가져올 변화에 대해 CEO인 Aicha Evans와의 인터뷰
   - 주크스는 전기차 및 소프트웨어 분야의 신기술인 AI와 로봇공학을 활용하는 운송업체
   ㅤ→ “지금은 우리가 어딘가로 직접 가야만 할 수 있는 일이 많지만, 앞으로는 자율주행을 통해 [상품과 서비스가] 우리에게 올 것이다.”

   자율주행차로 인해 사람들이 차를 소유하지 않을 않을리 없고 상품, 서비스가 우리에게 온다고 해서 우리가 차를 필요로 하지 않을리는 없다는게 제 예측입니다. 다만 제 예측은 자율주행에 대한 법적 책임 소지 때문에 개인이 차를 완전히 소유하기보다는 탑승하는 공간만 소유하고 자율주행과 관련된 주행 부분은 업체를 통해 구독하는 형태로 바뀌어야 하지 않을까 생각합니다. 그래야지 사고시 책임을 온전히 자율주행 서비스 업체 책임으로 할 수 있으니까요.

   이런형태면 나중에는 바지선 같은 모양에 바퀴만 달린 컨테이너 운송수단이 나오겠군요.
"
"https://news.hada.io/topic?id=4712","Cloudflare: Arm CPU로 프로덕션 Edge 서버 배포, 와트 당 성능 57% 향상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Cloudflare: Arm CPU로 프로덕션 Edge 서버 배포, 와트 당 성능 57% 향상

   - 2017년 11월에 Arm CPU 첫 테스트
   - 이달 초인 2021년 7월, 첫 Arm CPU 배포
   - 가장 최근에 배포한 Arm Rome CPU를 사용하는 Gen X 서버 대비, 새로운 Arm 기반 CPU는 와트(W) 당 57% 더 많은 인터넷 요청을 처리할 수 있음
   - AMD의 후속작인 Milan(Cloudflare에서도 배포할 예정)도 Arm CPU 만큼의 에너지 효율을 내지는 못해 — Milan의 경우 기존 Rome CPU 대비 와트당 39% ​더 많은 요청을 처리 가능
   - Arm 기반 CPU가 더 많이 배포되고 Cloudflare에서 사용하는 소프트웨어 또한 Arm 아키텍처에 맞게 최적화됨에 따라 Arm 서버의 에너지 효율은 더 개선될 것이라 예상
   - Arm을 사용함으로 Cloudflare는 2013년에 디자인한 서버와 비교해 와트당 요청을 10배 이상 더 많이 처리할 수 있음
   - Arm 서버가 성능을 입증하고 더 많이 배포됨에 따라 인텔, AMD와 같은 x86 CPU 제조사가 에너지 효율성을 더 중요하게 생각해주기를 희망함, 이는 특히 x86 CPU가 계속해서 글로벌 데이터 센터 에너지 소비의 대다수를 차지하기 때문에 더 중요함
   - 인터넷 사용으로 인한 탄소 영향을 모두 함께 줄일 수 있을 것이라 생각함

   - Cloudflare와 함께 탄소 영향(carbon impact)에 대해 이해하고 탄소 영향 줄이기: https://blog.cloudflare.com/understand-and-reduce-your-carbon-impact-w…
   - Cloudflare Pages로 친환경 호스팅: https://blog.cloudflare.com/green-hosting-with-cloudflare-pages/
"
"https://news.hada.io/topic?id=4678","FNM - Fast Node Manager","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        FNM - Fast Node Manager

   - Rust로 작성된 빠르고 간결한 Node.js Version 매니저
   - 맥/윈/리눅스 지원
   - 싱글 파일, 쉬운 설치, 빠른 시작
   - .nodev-version 및 .nvmrc 이용
   - 쉘 자동완성 지원 : bash/zsh/fish/powershell, WinCMD(기본 커맨드)는 일부만 지원

   훨씬 빠르네요.
   nvm같은 경우 이런식으로 복잡한 메타 프로그래밍을 동원해 평가시킨후 eval값을 저장해 쓰고 있었거든요.
   https://github.com/black7375/BlaCk-Void-Zsh/…
   그리고 brew가 엄청 느리더군요.
   벤치마크해봤을때 $(brew --prefix)로 경로 찾는게 100ms가량 걸렸던 기억이..
"
"https://news.hada.io/topic?id=4783","LiaScript - 마크다운으로 온라인 강좌 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     LiaScript - 마크다운으로 온라인 강좌 만들기

   - 별도의 도구없이 텍스트 에디터 만으로 온라인 강좌를 만들수 있는 오픈소스
   ㅤ→ 마크다운으로 작성된 코스를 브라우저가 렌더링
   ㅤ→ 자바스크립트를 이용해서 자유롭게 확장 가능
   - 마크다운을 확장
   ㅤ→ 비디오/오디오 등 멀티미디어
   ㅤ→ Text2Speech & 애니메이션
   ㅤ→ 퀴즈 & 설문조사 : 텍스트 입력, 단일/다수 선택, 매트릭스 에서 선택, 힌트
   ㅤ→ 설문조사 기능
   ㅤ→ 코드블록 : 편집 및 실행가능
   ㅤ→ 테이블 데이터의 자동 시각화
   ㅤ→

   사이트 이용법 FAQ About & ToS   | Blog Lists Podcast RSS   | Bookmarklet   | X (Twitter) Facebook   |   긱뉴스봇 : Slack 잔디 Discord Teams Google Chat Swit

   검색 ____________________
"
"https://news.hada.io/topic?id=4703","엘리베이터 프로그래밍 게임","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             엘리베이터 프로그래밍 게임

   페이지에 들어가시면 엘리베이터의 알고리즘을 작성할 수 있는 JS 입력창 하나와, 엘리베이터를 시뮬레이팅하는 뷰 하나가 보이는데요. 이 게임은 알고리즘을 작성하여 특정 시간안에 특정 승객들을 원하는 층에 보내야 하는 게임입니다. 한 단계를 클리어하면 더 높은 층, 더 많은 엘리베이터, 더 많은 승객들을 제어 해야 하는데요. 매번 나만 놓치는 바보같은 엘리베이터를 한 번 직접 만들어 보세요!

   고층도 아니고 저층도 아닌 층에서 일을 하니 맨날 만원이라 놓치는 엘리베이터 열받아서 부셔버릴까 생각했었는데 ^^,,, 재밌겠네요!!!

   맨 마지막 문제는 엘리베이터 프로그래머의 고충이 담긴듯한 문제라서(... ) 스케일에 좀 기겁했습니다...

   오오 굉장히 재밌어보이네요 :)
   시각적으로 재미를 느끼게 해줘서 알고리즘 입문에고 큰 도움이 될 듯하네요!!
"
"https://news.hada.io/topic?id=4773","Ask GN: 어떤 키보드를 사용하고 계신가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Ask GN: 어떤 키보드를 사용하고 계신가요?

   당연히(?) 있을 줄 알았는데 아직 없길래 스타트를 끊어 봅니다 :)
   저는 회사와 집 모두 맥을 사용하고 있고, 맥북의 내장 키보드를 사용하거나 매직 키보드를 사용하고 있습니다.
   딱히 키보드에 관심이 없기도 했고, 애플 제품과 순정을 좋아해서 불만없이 잘 사용하고 있었는데요.
   최근에 동료가 한번 써보라며 기계식 키보드를 빌려줬는데, 이래서 쓰는건가?! 싶은 매력이 있더라구요.
   그래서 지금... 기계식 키보드를 알아보고 있습니다.
   개인적인 취향은 다음과 같은데,
   1. 맥에서의 사용성이 보장될 것
   2. 블루투스를 지원할 것(멀티 페어링)
   3. 디자인이 이쁠 것
   4. 너무 시끄럽지 않을 것
   5. 너무 비싸지 않을 것(10만원대)
   생각보다 이 기준을 충족하는 제품이 별로 없네요.
   여러분들은 어떤 키보드를 사용하고 있고, 어떤 점 때문에 정착(선택)하게 되었나요?

   해피해킹이랑 anne pro 2 두개 사용하고 있습니다. :-)

   키보드 없이 기본 맥북 키보드 사용합니다.
   저처럼 쓰는 사람이 별로 없군요. 이런;

   오래 치시다보면 손가락이 아프시지 않나여? 저는 너무 아파서... ;ㅁ;

   그러고 보니 오후만 되면 항상 손가락이 아픈데 이것 때문이려나요.
   다른 키보드 한번 써봐야겠네요.

   넵. 맥북 키보드는 특히 =ㅁ = 손가락에 진동이 더 강하게 오는 것 같아용. 오래치면 관절이 저려서.. 집에서 쓸 떄는 키보드 연결해서 쓰고 있습니당. 부드러운 키감을 가진 친구들로...

   Moonlander ZSA Mark I, Ergodox EZ 사용 중입니다.
   크게 분리형 어고노믹, 기계식이라는 이런저런 키보드들(Kinesis Advantage, UHK, Redox Wireless 등등...)을 써왔는데 현재는 저 2가지가 주력이네요 :)

   조건엔 안맞지만 저도 moonlander 쓰고있는데 아주 만족하고 있어요! 분리형 키보드 쓰고 확실히 손목 통증은 사라졌어요

   한성 TFG ART Wireless 체리 저소음 적축 사용 중입니다.

   저도 이거 사용중입니다. 만족합니다ㅎㅎ

   키크론 K2, Tokyo60, HHKB, TEX Shinobi 사용중입니다.
   각각 적축, DIY, 무접점, 배열에 호기심이 생겨 구매하게 되었습니다.
   현재는 손 안에 딱 들어오는 Tokyo60, HHKB를 사용하고있습니다.
   저에게 맞춘 레이어링을 통해서 3단계까지 레이어를 구축했습니다 ㅎㅎ

   무접접은 한성 GK888B을 35g 스위치로 썼었고 좋았던 기억이 있습니다. 빌려서 써 본 리얼포스랑 비교해도 크리티컬한 단점은 딱히 없었던 것 같아요.

   답변 감사합니다.
   한성 GK888B로 결정했습니다.
   지금 대여받아 사용중인 제품이 앱코의 무접점 키보드인 KN01BT인데 다양한 제품을 경험해보진 못했지만, 타건감이 만족스러워서 무접점 키보드 중에 골랐습니다.
   알아보니 한성과 앱코 모두 NIZ 사의 제품을 베이스로 하고 있다고 해서 NIZ Plum 84 같은 제품을 알아봤으나 일부 제품이 품절이기도 하고 해외 배송도 좀 걸려서 한성으로 결정했네요.
   이번에 키보드를 알아보다보니 저는 디자인을 제일 중요하게 여긴다는 것을 깨달았습니다ㅎㅎ
   그래서 GK888B가 매직키보드와 사이즈 및 배치가 비슷한 75% 제품군이라는 점도 크게 작용했습니다.
   디자인면에서 해외 커스텀 제품 중에 ""이건 사야 돼"" 싶은 제품을 발견했는데 이게 해피해킹과 비슷한(같은?) 배열을 가지고 있기에, 우선 GK888B로 75% 배열에 익숙해진 다음 구매할까 생각 중입니다.
   핫스왑이 가능한 제품이라 축도 바꿔가면서 써 볼 수 있을테니까요.
   우선 GK888B는 키캡이 구리다는 이야기가 많고, 좀 더 맘에 드는 디자인을 위해서 키크론의 XDA 프로파일 PBT 레트로 키캡 세트도 추가 구입했습니다.
   빨리 제품이 왔으면 좋겠네요...!

   K79 사용 중입니다.
   http://prod.danawa.com/info/?pcode=13065362

   한성 GK888B 무접점 쓰고 있습니다.
   1. 맥용 키캡이함께 제공됩니다.
   2. 멀티페이링은 3대 까지 지원합니다.
   3. 디자인은 음... 보통입니다.
   4. 무접점이라 조용합니다.
   5. 가격도 10만원 초반입니다.
   전 이걸로 집과 회사 다 천하통일했습니다 ㅎㅎㅎ

   제조사인 한성 컴퓨터의 홈페이지에 가보니, ""MAC전용 키캡을 더이상 제공하지 않습니다.""라고 나오네요.
   https://www.monsterlabs.co.kr/src/category/read.html?pn=29861

   사용하신 지 얼마나 되셨나요?

   1년 조금 넘었습니다.

   hhk, 키크론k2 핫스왑 적축, 리얼포스, fc750 갈축 이렇게 회사와 집에서 번갈아 쓰는데 키감은 hhk, 편리함은 리얼포스네요. 키크론은 이상하게 재밌네요 ㅎㅎ

   한성컴퓨터 고무판 하판 키보드 TFG ART 에 게이트론 백축 넣고 슈퍼루브 스프레이 윤활해서 쓰고 있습니다.
   키보드 오래 쓰시는 분, 손 아프신 분 기계식키보드 게이트론 백축 (게백) 키보드를 추천합니다. 입력압 27g 으로 제일 가벼운 축으로 손 부담 없이 빠른 입력 가능합니다.
   1. TFG ART http://prod.danawa.com/info/?pcode=7193884
   2. 게이트론 백축 추천 스레드 https://twitter.com/lunamoth/status/1302827399797563392
   3. 슈퍼루브 스프레이 윤활 관련 블로그 글 http://lunamoth.com/2289
   ---
   TFG ART Wireless 모델도 나왔는데 한번 시도해보셔도 좋을 것 같습니다

   다섯 가지 조건을 모두 충족하는 키보드로는 로지텍 K380이나 NIZ Plum75 키보드 정도가 생각납니다. 다만 K380은 기계식 키보드는 아니고, Plum75 같은 경우는 설정을 약간 손을 봐 줄 필요는 있습니다. 둘 다 맥북에 붙여서 썼었습니다.
   맥미니에서는 Lily58에서 TRRS 부분을 USB로 개변한 걸로 쓰고 있습니다. 다른 키보드들은 오른쪽 손목이 너무 꺾여서 아프던데 이런 스플릿 키보드류 들은 그런 부분에서 자유로운 게 좋더라구요.

   Royal Kludge RK855
   https://www.youtube.com/watch?v=_5Q_JfKml48
   가성비로 만족합니다. 이거사고 hhkb(+ble mod)안쓰네요.
   다만, 위 와캣맨처럼 스프레이작업했습니다.

   참. 저도 mac에서 사용중이고, 할인할때 5만원대에 구매했어요. banggood에서 구매했습니다.
   5개 페이링, 배터리는 몇일 가고,
   소음은 적축이라 괜춘하구요. (저 동영상 주인의 윤활작업동영상 찾아보시면 알수있을듯하네요)

   무접점을 쓰고 싶었는데 일제는 너무 비싸서
   중국산인 앱코 k945p 사용하고 있습니다.
   하나 사보고 마음에 들어서 회사랑 집에 하나씩 놓고 쓰고있네요.

   요즘은 노트북을 주로 사용하긴 하는데요. 데스크톱 쓸 때는 레오폴드 청축 썼었습니다.

   얼마 전에도 댓글로 제가 쓰는 키보드를 잠깐 언급한 적이 있었습니다만, 이 키보드는 위에서 나온 조건 중 충족한다고 볼만한 게 5번밖에 없네요.
   http://prod.danawa.com/info/?pcode=11889406
   이 제품을 쓰는 이유는 몇 가지 있습니다.
   1. 키압이 비교적 낮습니다. 지금도 손가락이 아프지만, 이걸 쓰고 나서는 통증이 덜하면서 훨씬 빠르게 타자를 칠 수 있더라고요. 물론 그 반대급부로 가끔 타자치는 중 스페이스를 잘못 누른다던가 하는 경우가 생기지만요. 그래도 이제는 키압 높은 키보드는 다시는 못 쓸 것 같습니다.
   2. 가격이 저렴합니다. 제가 다니는 회사는 [개발시 사용되는 장비는 모두 회사에서 지급된 것이어야만 한다]는 내규가 있어서 제가 직접 키보드를 구입해서 쓰지 못하는데, 이 키보드는 꽤나 저렴하다 보니 관련 부서의 부장님이 “5만원대? 그 정도는 내 선에서 바로 처리해줄 수 있어.”라고 하시더라고요. 그래서 이 키보드를 회사에서도 쓸 수 있게 되었습니다. 정 비싼 키보드를 쓰려면 사장님에게까지 결재가 올라가야 하는데, 그러면 사장님에게 직접 내가 왜 회사 기본 지급품 대신 이 키보드를 써야만 하는지 소명해야 하는 모양이더군요. 참고로 저희 팀장님이 리얼포스 키보드를 회사에서 쓰고 있는데, 그 과정을 직접 체험했다고 합니다. (!)
   3. 통울림 현상이 없고 잘 미끄러지지 않습니다. 이 제품의 특징 중 하나가 1.7kg에 달하는 묵직함인데, 안에 흡음재를 집어넣어서 그런 모양이더군요. 키 소리 자체는 키를 뗄 때 좀 나는 편인데, 어차피 회사 지급 키보드가 보급형 청축 키보드라서 타자 소음이 문제가 되지는 않아서 다행입니다.

   COX 엔데버 텐키리스 무접점이요.
   저는 키보드를 잘 모르고 맥북이나 매직 키보드 있는 것 그냥 썼었는데요, 나비식도 그렇고 ㅠ 점점 못 쓰겠더라고요.
   그래서 거의 입문한 키보드인데 괜찮아서 계속 쓰고 있어요.
   평소 키보드 누르는 습관상, 적축은 걸리는 게 없어서 어색하고 오타가 많이 나더라고요. 익숙해지려면 시간이 걸릴 것 같아 떠나보냈고, 청축은 좀 경쾌하면서도 시끄러웠어요. ㅎㅎ
   무접점이 소음이 없고 누르는 느낌이 좋은데, 이 모델이 가성비가 좋았어요.
   손가락이 요즘 안좋은데 의식하고 치니까 좀 무겁게 느껴지긴 하네요~ 유선이고 이쁘진 않지만 rgb led 가 있어요...하핫

   COX CK87 갈축
   비싸지 않으면서 적당한 키감이라 사무실이랑 집에서 사용중입니다.

   저는 해피해킹 하이브리드 타입s와 키크론 K8에 홀리판다를 껴서 사용중인데요.
   위 조건을 다 만족하려면 키크론 제품군에 갈축이나 적축 모델 아니면 핫스왑모델에 저소음적축을 사용하면 괜찮지 않을가 하네요.

   저도 5번 조건은 탈락이지만..
   해피해킹 하이브리드 저소음 모델 쓰고 있습니다.
   처음에는 vim 입문 하려고 구매 했다가 키감이 마음에 들어서 정착하게 되었습니다.

   저는 2/5번 조건에는 탈락이겠지만, 기본적으로는 리얼포스 10주년 기념판 사용중입니다.
   그 전에는 이거저거 사용했었는데, 이걸로 그냥 정착했습니다. 손이 가장 편한거 같아요.
   블루투스가 필요한 환경에서는
   - Keychron K2 RGB Aluminum(청축)
   - 앱코 블루투스 TKL 무접점 게이밍 키보드 45g
   요거 두가지를 바꿔가면서 사용합니다.
   키크론은 최고다 라는 느낌은 아닌데, 킥스타터로 펀딩했던거라 그냥 저냥 쓰고 있어요.
   사이즈나 디자인은 요즘 나오는 K4, K6도 땡기긴 하는데.. 더 사지는 않을려구요.
   앱코는 블루투스가 되면서 리얼포스랑 그나마 키감이 비슷해서 사용하고 있습니다.
   말씀하신 조건에는 가장 잘 어울리긴 할듯 합니다. 디자인은 이쁜건 아니에요 ㅎㅎ

   회사와 집에서 각각 레오폴드 FC660C, FC660M을 사용하고 있습니다.
   현재는 재택중이라 FC660C를 집으로 들고 와서 사용하고 있구요.
   적당한 타건감, 텐키리스, ctrl과 capsLock 위치가 변경 가능해야 할 것.
   이 세가지 기준을 만족하는 것에서 구입했었습니다.
   제일 중요한 기준은 ctrl과 capslock 위치가 변경 가능해야 하는 부분이었는데요.
   왼쪽 새끼 손가락이 ctrl을 누르기 위해서 많이 움직이다 보니 통증이 생겨서 이 문제를 해결하고자 꼭 필요한 기능이었습니다.
   다음번 키보드를 사게 된다면 키압이 조금 더 낮은 제품으로 하려고 합니다.
"
"https://news.hada.io/topic?id=4680","Audacity가 개인정보 보호 정책 업데이트 및 사과문을 올림","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Audacity가 개인정보 보호 정책 업데이트 및 사과문을 올림

   모호한 문구나 투명성을 해치는 문구를 수정함.
   13세 미만 사용자가 사용 불가능 하게 하는 조항을 삭제함.
   전체 IP 주소 수집 기능을 철회함.
   등의 변화가 있습니다.

   audacity의 포크 tenacity
   https://github.com/tenacityteam/tenacity

   https://news.hada.io/topic?id=4566
"
"https://news.hada.io/topic?id=4679","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.
   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않는 것도 훌륭합니다.

   Factorio

   친구들과 보드게임

   앗 부럽습니다 ㅠ

   💕👨‍👩‍👦‍👦🚴‍♂️

   가슴이랑 삼두요

   쿠베 노드에 이미지를 미리 다운로드 받는 파이프라인을 만들고, 애기 놀이 프로그램 따라가려구요.

   개발에 관심있는 학생을 멘토링 하게 되어 파이썬 강의를 유튜브로 같이 보기로 했어요. 👩🏻‍💻 이번 주말 진도는 수식과 문자열입니다. 가능하면 리스트까지요 ㅎㅎ 가을쯤 있을 교내 코딩대회에 파이썬 프로젝트를 내려고 하는데, 일주일에 두시간으로 어떤 걸 만들어야 들인 시간 대비 재밌는 게 나올 지 고민이에요~
   마법의 연금 굴리기라는 책을 한챕터 이상 보고, 엽서 사이즈 그림을 그리고, 낮잠을 가능하면 많이 잘 계획입니다.

   오 유튜브 강의는 어떤거 보시나요?

   나도코딩의 ""파이썬 코딩 무료 강의 (기본편) - 6시간 뒤면 여러분도 개발자가 될 수 있어요"" 로 하고 있어요.
   https://youtu.be/kWiCuklohdY
   가장 인기 댓글이 60세이신 분이 코딩을 여기서 시작했다고 재밌다고 하는 내용이에요.
   아직 다 본건 아니지만 쉽고 따라하기 좋게 잘 만들었더라고요. 챕터별 퀴즈가 있는 것도 좋고, 강사 얼굴이 안나와서 코딩 화면에만 집중되는 것도 좋았어요. 🤭

   이번 주말에는 강의 자료 마무리하려고 하고 있습니다.
   다 만들었다고 생각했는데 막상 까려면 아쉬워서 다시 개선하고를 무한 반복하게 되네요.

   강의자료는 전날 밤늦게 마무리하는게 국룰 아닌가요..? ㅎㅎ

   ㅋㅋㅋㅋㅋ 월요일까지 드리기로 했으니 최종_최종으로 전달드리려구요.

   토요일 오전에는 치과에 다녀올 생각이고, 그 뒤에는 밀린 빨래를 세탁기에 돌린 뒤 그동안 구입한 채 거의 읽지 않고 방치해두던 네트워크 및 인프라 관련 기초 책을 훑어보기라도 할 생각입니다. 지금 손가락이 아픈 게 도지는 바람에 IDE를 오래 붙잡고 있는 건 별로일 것 같아서요.
   조금 다른 이야기지만, 이곳에서 키압이 낮은 스위치를 사용한 키보드 사용을 추천하는 댓글을 본 뒤로 집에서는 키압이 비교적 낮은 키보드를 쓰기 시작했습니다. 제가 쓰는 건 키압이 35g 정도인 모양인데, 키압이 낮은 것 중에 적당히 저렴한 가격의 제품을 골랐지만 그래도 이전에 쓰던 것에 비하면 훨씬 가볍네요. 타이핑하는 느낌 자체가 확 달라집니다. 직장에서 지급해준 청축(키압 50g 정도) 키보드도 이걸로 바꿀지 진지하게 고민 중인데, 하여튼 다른 분들도 손이 아프기 전에 미리미리 예방하시는 것을 추천합니다. 한번 아프기 시작하니까 나아진다 악화된다만 있지 깨끗하게 낫는다는 건 없네요.
   제가 봤던 댓글: https://news.hada.io/comment?id=5269
   제가 바꾼 키보드: http://prod.danawa.com/info/?pcode=11889406

   저는 손가락 때문에 제 사랑하는 키보드들을( 리얼포스 35-45-55-차등(.. ), 해피해킹... ) 전부 방출하고 ;ㅁ ;.. Logictec EGRO K860로 모두 바꿨습니다. 덕분에 손목 아픈것과 손가락 아픈 건 모두 사라졌어요.

   키압은 어떤가요? 제가 손가락 통증을 얻게 된 계기가 당시 일터에서 지급된 키압 높은 멤브레인 키보드 때문이라, 키압도 이런 걸 볼 때 중요한 요소 중 하나가 아닌가 싶습니다. 그러고 보니 제 친구 녀석 중 하나는 MS의 인체공학 키보드를 10년 넘게 써서 너덜너덜해졌는데도 요즘 나오는 인체공학 키보드는 마음에 들지 않는다고 하여 결국 제품의 물리적 수명이 다할 때까지 쓰더라고요.
   제가 예전에 문림( https://moonrim.io/ ) 입력장치의 펀딩을 한 적이 있는데, 작년에 구입을 신청했지만 아직도 물건을 받지 못하고 있습니다. 홈페이지에 가 보니 오는 8월 말까지 물건이 안 나오면 프로젝트를 접고 전액 환불해 주겠다는군요. 만약 이 펀딩이 결국 무산된다면 스플릿 키보드에 한번 도전해 볼까 싶기는 합니다.

   키압은 45? 에서 조금 낮은 듯 한데 (35g 쓰다보면 높은 걸 알 수 있습니다) 펜타그래프 방식이라서 키스트로크 자체가 좀 낮아 멤브레인보다는 덜 아픈 것 같아요. 저는 파워타이핑이 습관화되서 키보드를 쌔게 치는 편인데, 이 키보드는 파워 타이핑 하는 동안 선가락 관절이 아픈 기억은 없습니다.

   좋은 정보 감사합니다.

   부디 손에 맞는 좋은 키보드를 찾으실 수 있으시길... 👍

   댓글 쓴 게이트론 백축 애호가인데 마음에 드신다니 다행이네요 😄😄

   백축 키보드를 쓰니까 의식적으로 손가락에 힘을 덜 주게 되더라고요.

   저도 연초부터 손가락에 통증이 오기 시작해서 ㅠ 손가락 관절 보호대라는 걸 가끔 써요. 저는 이게 효과가 있나 의심스럽게 생긴 것으로 샀는데 사이즈가 마침 잘 맞아서 도움이 되는 것 같아요. 압박이 되어서 시원(?)하고 무리가 덜 가는 느낌이에요.

   오호, 이런 것이 있군요. 그런데 제가 손이 큰 편이라 사이즈가 맞는 게 있을지 모르겠네요.

   저는 Realforce 쓰는데 꽤 만족하고 있거든요. 리얼포스는 어떠신가요 ?

   리얼포스 키보드도 고려했지만, 해당 키보드를 판매하는 사이트에 가 보니 죄다 품절이라고 뜨더라고요. 그래서 구입 자체가 불가능했습니다.
   http://www.leaderskey.com/shop/list.php?ca_id=1030

   글을 쓰고, 코딩을 하고, 시간이 남으면 용과 같이 7을 해보고 싶네요. 'ㅁ '!
   - 글쓰기는 판타지 소설도 적고, 일기 비스무리한 것도 적을 것 같아요.
   - 코딩은 ..
   -- 게임보이 에뮬레이터가 이제 입력만 받으면 게임을 할 수 있을 것 같아. 에뮬레이터의 입력 부분을 짤 예정입니다.
   -- 그리고 간단한 데모 게임을 만들고 있는데요. 이 데모 게임을 2주마다 빌드를 뽑는 걸 목표로 하고 있어서, 개인적으로 정한 빌드 마감일에 맞추기 위해 열심히 짜야 할 것 같네요. 'ㅁ '
   -- 시간이 남으면 사이드 프로젝트로 Notion 자동 문서 생성 Bot의 데모를 만들어보고 싶어요. 일주일마다 주기적으로 해야하는 걸 캘린더에 수동으로 추가해주고 있는데, 그게 너무 귀찮아서 이번에 나온 API로 자동 제너레이트 되게 하면 편하지 않을까... 라는 생각을 하고 있습니다.
   - GTA5를 최근에서야 직접 플레이해서 엔딩을 본 다음, 이제 용과 같이 7을 해보고 있는데요. 어우. 재미있네요. 다만 레벨링을 해야하는 파트가 슬슬 부담스러워서(... ) 켤 때 부담이 좀 됩니다. 페르소나 5도 재미있게 하다가, 레벨을 안 올리고 계속 스토리만 밀다보니 레벨이 부족해서 게임을 아예 못 깨는 시기에 와서 접었는데... 용과 같이 7도 그런 운명이 안 되길 간절히 바랄 뿐입니다.

   저도 GTA5는 유행 다 지나간다음에 엔딩봤어요 ㅎ
   유행 지나간 레데리2도 해야하는데, Oddworld 하느라 잠깐 멈췄네요.
   용과 같이는 이상하게 하다가 계속 포기하게 되네요. 뭔가 시스템이 저랑 안맞는 듯.

   레데리2는 정말 재미있게 했어요. 오픈 월드 겜이지만 풍경 감상 + 스토리 감상 쪽만해도 너무 아름다운 경험을 해줘서 좋았어요.
   저도 JRPG 중에 엔딩 본게 손에 꼽아서( ..) 이번에는 다를지...

   Oddworld: Soulstorm 이란 게임 엔딩 볼 예정입니다.
   PS5용으로 공짜로 풀렸길래 시작했는데 나름 재미있네요.
   주인공 및 캐릭터들이 너무 못?생겨서 인기가 없었던 듯.. 게임은 괜찮은데
"
"https://news.hada.io/topic?id=4727","TStream - 자신의 터미널을 라이브 스트리밍","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      TStream - 자신의 터미널을 라이브 스트리밍

   - 터미널을 스트리밍해서 라이브 코딩 또는 터미널 강의 세션 방송 진행
   ㅤ→ 시청자들은 웹페이지를 통해서 시청
   - 참여자들 간에 텍스트 채팅 및 음성 채팅 기능 내장
   - Go 오픈소스
   - 플레이백 기능 및 사용자 관리 기능 추가 예정

   Streamhut - Terminal을 스트리밍 하기 https://news.hada.io/topic?id=2206
   둘이 비슷한데 채팅 기능이 포함된 게 좋네요. 플레이백 기능이 들어가면 훨씬 좋아질 듯.
"
"https://news.hada.io/topic?id=4767","Android 12 베타 3 및 최종 API를 확인하세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Android 12 베타 3 및 최종 API를 확인하세요

   - 베타 3의 새로운 기능
   ㅤ→ 스크롤 스크린샷
   ㅤ→ 온디바이스 검색 : AppSearch
   ㅤ→ WindowInsets의 개인정보 보호 표시기 API
   ㅤ→ 엔터프라이즈용으로 구성 가능한 카메라 및 마이크 전환
   ㅤ→ 포그라운드 서비스를 시작하는 CDM 페어링된 앱에 대한 새로운 사용 권한
   ㅤ→ 더 우수하고 더 빨라진 자동 회전
   ㅤ→ 게임용 Android 12
   - 최종 API와 SDK 확인 및 앱 호환성 테스트 요청
   ㅤ→ 다음 릴리스인 베타 4에서 최종 마무리 될 예정
"
"https://news.hada.io/topic?id=4764","The Size of Space - 우주에 있는 것들의 크기 비교","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  The Size of Space - 우주에 있는 것들의 크기 비교

   - 작은 크기부터 스크롤 하면서 보기
   - 우주인 부터 인공위성, 소행성, 태양계 행성들, 시리우스, 알데바란, 베텔게우스, M87 블랙홀, 고양이 눈 성운, 케플러 초신성, 타란툴라 성운, 바너드 은하, 우리은하(Milky Way)...

   https://youtu.be/02Kgf9dCgME
   좀 더 (???) 작은 것부터 시작하는 버전 입니다.

   화성이 생각보다 안 크군요?!

   Milky Way를 우리은하 라고 하는군요.
   그 뒤에도 더 큰 것들이 있다는 게 재미나서 계속 눌러보게 됩니다.
"
"https://news.hada.io/topic?id=4725","유명 B2B 도구들의 오픈소스 대체제들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         유명 B2B 도구들의 오픈소스 대체제들

   - 카테고리별로 정리한 200+개의 오픈소스들 (B2B SaaS명으로도 검색가능)
   비즈니스 대화 : Mattermost, Zulip, RocketChat, Element
   프로젝트 관리 : OpenProject
   CRM : Odoo, ERPNext
   화상회의 : Jitsi
   노트 : Joplin, Athens
   칸반 : Kanboard, Focalboard, Wekan, Restyaboard
   No-Code DB : NocoDB, BaseRow
   캘린더 : FullCalendar
   스케줄링 : Calendso
   워크플로우 자동화 : n8n, Beehive, Flogo
   분석도구 : Fathom, Plausible Analytics, Rudderstack, Matomo, Posthog, Countly
   회사 내부용 도구 : Tooljet, Appsmith, Budibase
   세션 리플레이 : rrweb, Open Replay
   CMS : Wordpress, Ghost, WriteFreely, Strapi, Winter, LavaLite, Umbraco
   뉴스레터 : listmonk, Mailtrain
   협업 디자인 플랫폼 : Penpot
   API 문서화 : Docusaurus
   인증 & 접근관리 : Keycloak, SuperTokens, PrivacyIDEA
   온라인 폼 : OhMyForm
   팀 위키 : Outline
   검색 API : TypeSense, MeiliSearch
   데이터 처리 : Logstash
   모니터링 : Sentry
   CAD : Blender, FreeCAD
   이메일 마케팅 : Mautic
   Cloud 커뮤니케이션 : Plivo, Fonos
   파일 호스팅 : NextCloud, ownCloud
   제품 피드백 : Fider
   포럼 : Discourse, Flarum, Vanilla
   BaaS : Supabase, Appwrite, Nhost
   Business Intelligence : Metabase, Superset
   Observability : Grafana, Prometheus
   음성 채팅 : Mumble
   패스워드 관리자 : Padloc, Passbolt, Buttercup

   위에 있는 꽤 많은 오픈소스들이 각각 긱뉴스에서 별도 뉴스로 올라온 적이 있습니다.
   긱뉴스 검색을 이용해서 찾아보시면 간단한 설명을 보실 수 있습니다.
   예) Supabase https://news.hada.io/search?q=supabase
"
"https://news.hada.io/topic?id=4798","오픈소스 Health Icons","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           오픈소스 Health Icons

   - 자유롭게 편집 및 재배포 가능 (CC0)
   - 건강에 관련된 1000+개의 아이콘들
   ㅤ→ 혈액형 : ABO, RH+-
   ㅤ→ 신체 : 뇌,팔,다리,관절,심장/신장/폐/척추/간..
   ㅤ→ 컨디션 : 알러지, 기침, 요통, 설사, 감기, HIV, HPV, 비만, 구토..
   ㅤ→ 의료기기 및 용품 : 혈압계, CT, X-Ray, 제세동기, 침대, 산소통, 수액팩, 수술 마스크, 수술복, 주사, 휠체어..
   ㅤ→ 이모지 : 붕대, 기침, 열, 어지러움..
   ㅤ→ 사람 : 태아(8~12주, 24~26주), 아기(2~3개월,3~6개월,1~5세..), 의사, 간호사..
   ㅤ→ 진료과 : 중환자, 심장, 내분비, 산부인과, 혈액, 종양, 외래, 약국, 안과, 방사선과...
   ㅤ→ 진단, 가족계획, 약, 장소..
   - Figma 플러그인 제공
"
"https://news.hada.io/topic?id=4697","주니어 개발자의 스타트업 취업기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           주니어 개발자의 스타트업 취업기

   코로나, 개발자 확보 전쟁부터 다양한 뉴스들로 IT 취직 시장이 불끈불끈 움직이고 있는 요즘, 어느 한 주니어 개발자의 취직 여정 입니다!
   제가 생각하기로는 이 글은 아래와 같은 분들에게 어느 정도의 인사이트를 제공할 수 있을 거라고 생각해요.
   대기업과 스타트업 사이에서 고민하시는 분.
   에누마라는 회사에 지원하고 싶으신 분들.
   전반적으로 저란 사람에 대해 좀더 알고 싶으신 분.
   사회적 기업에 관심이 조금이라도 있으신분.
   직장 경험이 없어서 구직을 할 때 무엇을 어떻게 고민해야 하는지 감이 안잡히시는 분.

   글 내용만을 설명하는 제목으로 변경하였습니다.
"
"https://news.hada.io/topic?id=4775","애플, 아동 보호를 위한 새로운 안전기능 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       애플, 아동 보호를 위한 새로운 안전기능 도입

   - 메시징 도구를 이용해서 아동에게 성적인 사진을 전송하거나, 아동학대자료(CSAM) 배포를 하지 못하도록 막는 기술
   - 온디바이스 머신러닝을 통해서 CSAM인지 인식하여 경고한 뒤 집행기관에 알리는 기능
   ㅤ→ iCloud 사진에 대해서도 스캐닝
   ㅤ→ 해시정보를 통해 미국 실종학대아동방지센터(NCMEC) 등에서 제공하는 이미지 해시와 비교를 수행
   - 메시징 앱에서 노골적인 사진이 수신/전송 되는 경우 경고하는 기능을 도입
   ㅤ→ 블러처리한후 경고 메시지를 보여줌. 또한 이 사진을 볼 경우 부모에게 메시지가 간다는 알림 포함.
   - Siri 와 검색기능에도 CSAM 을 제보하고 관련 연락처를 제공하는 기능 포함

   https://apple.com/child-safety/pdf/…
   Apple이 공개한 PSI(Private Set Intersection)에 관한 문서입니다

   이번 icloud+ 로 아이클라우드에 종단간 암호화가 적용돼서 이런 사전검열 기술을 도입했다는 말이 있더라구요.
   수사기관의 협조요청이 와도 애플측에서 사용자의 아이클라우드를 복호화할 수 없으니 아예 올리기 전에 잡아버리자, 이런 논리인듯 한데... 그래도 사생활을 검열당하는 느낌이라 찜찜하네요.

   Apple의 개인 정보 침해 콘텐츠 검색 기술에 대한 공개 서한
   눈에 띄는 서명자로는 에드워드 스노든이 있습니다.
   https://appleprivacyletter.com

   이런 시도 자체가 개인의 사생활에 침투가 가능한 백도어를 만드는 것이라고 EFF는 경고 했습니다.
   Apple's Plan to ""Think Different"" About Encryption Opens a Backdoor to Your Private Life
   https://eff.org/deeplinks/2021/…
"
"https://news.hada.io/topic?id=4716","Discord, Threads 기능 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Discord, Threads 기능 공개

   - 채널에서 메인 대화 흐름에서 벗어난 특정 대화를 별도의 쓰레드로 시작 가능
   ㅤ→ 24시간(기본값)이 지나면 아카이빙
   - 모든 메시지에서 쓰레드를 시작하거나, Create Thread 로 별도 생성 가능
   - Level 2로 부스트 된 서버는 Private Threads 지원
   ㅤ→ 채널이나 쓰레드 디렉토리에서 안보이고, 참여 또는 멘션한 사람들에게만 보임
   ㅤ→ 이걸 통해서 Group DM 시 친구가 아닌 멤버도 대화에 참여가 가능해 짐
   ㅤ→ Tier 2 서버는 아카이브 되는 시간도 최장 7일까지로 지정 가능
   - 쓰레드 관련 권한들도 추가 : 퍼블릭 쓰레드 가능, 프라이빗 쓰레드 가능, 쓰레드 관리 가능
   - 8/17일까지 모든 디스코드 서버에 쓰레드 기능 배포 예정

   Slack For 커뮤니티!
   요즘 Discord의 기세가 무섭군여... 최근에 Slack에서 음성 채널 기능과 비슷한 허들을 냈는데, 점점 양측이 서로 비슷해져가고 있는 것 같습니다.

   쓰레드는 슬랙 사용자들에게는 이미 익숙한 기능이긴 한데, 디스코드 쪽이 좀 더 정리가 깔끔한 거 같네요.
   아예 처음부터 쓰레드를 시작하는 기능도 괜찮아 보이고, 역시나 유료 기능쪽에 뭔가를 더 주는 부분도 고려했네요.
   디스코드의 유료화 정책은 정말 훌륭한거 같아요. 아래 글도 참고하세요
   - Discord 는 어떻게 승리했나 https://news.hada.io/topic?id=3061
   위 글의 댓글에서 무료인 디스코드와 슬랙 비교중에 쓰레드 기능 부재가 아쉽다고 얘기 했는데 이제 그것 마저도 디스코드에 추가가 된거네요.
"
"https://news.hada.io/topic?id=4742","100% 한국인 - 숫자로 보는 한국인의 생각과 라이프스타일","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   100% 한국인 - 숫자로 보는 한국인의 생각과 라이프스타일

   - 한국갤럽이 한국인을 대상으로 조사한 결과를 0.1%에서 99%까지 수치 중심으로 볼 수 있음
   ㅤ→ 몇 %를 입력하고 알아보기 누르면 해당 %에 관련된 결과가 무작위로 표시
   - 단 한 명의 예외도 없는 일은 존재하지 않으므로 100% 결과는 싣지 않음
   - 평소 잘 드러나지 않았던 소수 의견을 통해 한국인의 다채로운 매력과 가능성을 발견하실 수 있기를 바랍니다
   - 친부모님 중 한 분 이상 생존해 계시는 40대 한국인 중 70%는 최근 6개월 내 부모님에게 '사랑합니다'라고 말한 적 없다
   - 60대 이상 한국인 중 62%가 가장 좋아하는 드링크제 브랜드로 '박카스'를 답했다(자유응답)
   - 기혼 한국인 중 95%는 배우자 혈액형이 무엇인지 알고 있다
   - 주식 투자자 중 3%는 최근 1년간 주식 투자 때문에 다툼이나 가정 불화를 경험한 적 있다
   - 만 13세 이상 한국인 중 3%는 가장 좋아하는 숫자로 '4'를 답했다(자유응답). '2'도 3%였다
   - 20%의 한국인은 사람들이 스스로 늙었다고 느끼는 나이가 대략 '60세'부터라고 본다(자유응답)
"
"https://news.hada.io/topic?id=4688","Fiddly - Readme를 예쁜 웹페이지로 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Fiddly - Readme를 예쁜 웹페이지로 만들기

   - Readme.md를 보기좋은 HTML페이지로 변환
   - 로고, 소셜이미지, Favicon 등 지정 가능
   - 다크테마 지원
   - Code Highlighting (Prism.js)
   - Emoji 지원
   - CodeSandbox 및 iframe 지원
"
"https://news.hada.io/topic?id=4711","Ask GN: 개인 할 일 관리 서비스로 어떤 서비스 쓰고 계신가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Ask GN: 개인 할 일 관리 서비스로 어떤 서비스 쓰고 계신가요?

   개인 할 일 관리 서비스로 어떤 서비스 쓰고 계신가요?
   저는 여러가지 서비스 쓰다가 프로젝트 관리 서비스 Wrike https://www.wrike.com/ 에 정착해서 개인 할 일 관리하고 있습니다.
   프로젝트 관리 서비스입니다만, 개인 할일 개인 정보 관리 PIMS 용도로도 쓸만하더군요. 무료 계정으로도 어느 정도 쓸만하고요.
   (위 서비스 외에 지금까지 시도해본 후보군으로는 Asana, Todoist, Trello 등 정도 있네요. 그래도 Wrike 저는 제일 마음에 들더군요)
   GeekNews 회원 분들은 개인 할 일 관리 서비스로 어떤 서비스 쓰고 계신지 궁금합니다.

   구글 스프레드시트

   멀티 계정 되어서 MS To Do 좋더라구요. 회사 꺼랑 개인꺼 나눠서 쓰고 싶어서...

   추천 감사드립니다. 윈도우 앱도 있더군요. 한번 써봐야겠네요

   remember the milk, todoist 등을 쓰다가 ticktick로 정착했습니다. todo 서비스를 쓰면 습관 기능이 아쉬워서 다른 앱을 찾아보곤 했는데, ticktick은 습관 앱이 포함되어 있어서 한번에 해결되더라구요. 뽀모도로 타이머도 내장되어 있습니다.

   할일 관리에서 습관 관리도 지원하는것 괜찮아보이는군요. 추천 감사드립니다

   노션과 투두이스트를 협업툴(슬랙과 디스코드)에 자동화 서비스로 연결하여 사용합니다.
   협업툴로 보내고 백업은 구글시트로 합니다.

   슬랙, 디스코드 연계도 괜찮을 것 같군요. 자세한 추천 감사드립니다

   캘린더는 구글캘린더를 선호하는데 최근 노션API 오픈으로 동기화가 지원되어서 그렇게 사용하고 있습니다. 구글캘린더로 해야 이곳저곳에 연동하기 좋아서요. 또한 구글캘린더는 일정반복도 가능하고 음력 일정을 넣기 좋습니다. 그리고 지메일에서 바로 추가가 되고 지메일 다시 알림이나 캘린더 내 다시알림 기능을 이용합니다.
   투두이스트를 서울비님이 올려주신 리딤코드로 사용하고 그후로도 찾아서 사용했는데 어느순간 제공하지 않고 태깅, 라벨 기능이 부족하여 MS To Do로 옮겼습니다. 삼성 갤럭시가 마소랑 협업이 되어 있어서 생각보다 편리합니다. 그런데 오랫동안 건의했던 투두이스트가 무료 기능에서 라벨 기능을 지원하여 다시 이용하기 시작했습니다. 서울비님 말씀처럼 일을 두 번 하는 기분이 들어서 하나는 그만 사용하거나 연동으로만 사용할 예정입니다.
   워크플로위는 노트로 사용하긴 하는데 To do(할 일) 용도로는 사용하지 않는 듯합니다. 노션이 그에 가깝습니다. 할 일과 대시보드, 웹 퍼블리싱 형태로 사용하며 워크플로위는 머릿속 생각들을 정리하거나 비즈니스 아이디어를 쏟아내어 그려볼 때 사용합니다. 그러다 구조화가 되면 노션에서 정리합니다.
   여러가지 도구를 사용해보고 있는데 자동화나 연동 부분에서 아쉬워 이용해보는 정도에 그치는 듯합니다.

   1. Workflowy에서 거의 모든 메모를 관리하다보니, 그 안에서 액션/행동이 요구되는 부분에 태그를 부여해서 필터링하는 게 편합니다. 장점은 작성한 문서의 맥락이 유지된 상태에서 할일을 점검할 수 있습니다.
   2. 오늘 집중할 일의 목록을 간단히 작성하거나, 반복 일정은 MS Todo에서 합니다. Todoist 좋은데, 점점 일을 두 번 하는 기분이 들어서 간단한 도구로 옮겼습니다.
   3. 아이폰에서 절대 잊지 말아야 할 시간 약속이나 소소하게 기억할 거리는 Due에 입력하고 반복 스누즈를 받습니다. (약 먹기, 전화하기)
   4. 최근에 습관관리 도구로 Ticktick를 사용하는데 좋네요. 위젯 화면이 마음에 듭니다.

   Workflowy, MS To Do, Ticktick 추천 감사드립니다.
   반복 일정은 확실히 iOS 미리 알림이 편하긴 하더군요

   저는 YouTrack InCloud로 이슈를 생성하고, 그걸 Notion 캘린더로 관리하고 있습니다.
   이러면 장점이...
   * YouTrack의 장점은.
   이슈 트래커의 장점, 장기적인 관점에서 프로젝트를 생각할 수 있고 + 빌드 주기를 정할 수 있습니다.
   어떤 일감이 많았는지, 현재 일감들이 어떤 상태인지 관리하는 건 이슈 트래커가 가장 잘 하는 일이고.
   사이드 프로젝트의 할 일들을 이걸로 관리하여 수정 계획이 잡혀있지 않았던 버그들이나 기능들을 잊지 않고 계속 추적할 수 있었습니다.
   * Notion의 장점은.
   동기가 부드럽게 되고, 통합 데이터베이스로 사용하고 있는데요.
   Notion이 캘린더로 제작된게 아니라 Notion 위에 캘린더가 올려져 있는 형태라, 다른 캘린더들은 날짜가 문서를 들고 있다는 개념이라서 문서를 작성하기가 Notion에 비하면 굉장히 불편했는데.
   Notion은 문서가 날짜를 들고 있고, 그거의 Viewer가 단지 캘린더일 뿐이라서. 문서 기반으로 작업하는 저에게는 아주 딱 맞는 도구였습니다.

   답변 감사드립니다. YouTrack, Notion 한 번 다시 써봐야겠네요. 😄😄

   아. YouTrack은 클라우드 버전이나 개인 호스트 버전을 10인 이하에게 무료로 뿌려서, 그냥 저 혼자 무료로 쓰고 있습니다. 돈을 내야했다면 그것보다 좀 덜 예쁜 Redmine을 선택했지 않았을까 하네요.
"
"https://news.hada.io/topic?id=4681","Framework Laptop 배송 시작 및 리뷰들 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Framework Laptop 배송 시작 및 리뷰들 공개

   - 오큘러스VR의 하드웨어 리드가 만든 새로운 형태의 노트북과 에코시스템
   ㅤ→ 확장 카드 시스템으로 자유롭게 업그레이드 및 커스터마이즈, 수리 가능
   - FTC가 Right to Repair에 힘을 실어주는 좋은 타이밍
   ㅤ→ CNET (8.5/10) ""Right-to-Repair 운동의 대표적인 모델, Framework 의 모듈형 노트북은 그동안 본 것중 가장 스마트한 디자인 중 하나""
   ㅤ→ PCWorld ""최고의 Right-to-Repair 노트북""
   ㅤ→ Digital Trends (4/5) ""모듈화에 대한 가치있는 실험 일뿐만 아니라, 훌륭한 노트북이기도 함""

   국내에 전파인증 받아서 나오면 더 좋겠네요. 그러면 나중에 부품 교환하고 남은거 중고거래 하기도 좋을 거 같아요

   하나 사보고싶네요

   화면도 서피스 식의 3:2 비율이라 눈에 가네요.

   이런 형태의 제품들이 초기 에코시스템을 만드는 데 실패하거나, 퀄리티가 낮아서 외면받거나 하는 문제가 많은데, 생각보다 괜찮게 나온 것 같아요.
   직접 조립하는 DIY 키트 형태로 약간 저렴하게 판매하는게 재밌내요.

   저 처음엔 응? 싶었는데.. 하나 사볼까로 기울고 있어요 ㅋㅋ

   모듈형 노트북, Framework Laptop 공개 https://news.hada.io/topic?id=3797
   - 13.5인치(2256x1504), 알루미늄 바디, 1.3kg, 55Wh 배터리, 1080p 60fps 웹캠
   - 인텔 11세대 CPU, Wi-Fi 6E, ~64GB DDR4, 4TB+ Gen4 NVMe
   - 확장 카드 시스템으로 자유롭게 업그레이드 및 커스터마이즈, 수리 가능
   ㅤ→ 4개의 확장 베이 슬롯 : USB-C, USB-A, HDMI, DisplayPort, MicroSD, 초고속 스토리지, 하이엔드 헤드폰 앰프 등 장착 가능
   ㅤ→ WiFi, 메모리, 메인보드도 모두 교체 가능
   ㅤ→ 배터리, 스크린, 키보드, 컬러교체 가능한 자석 베젤 등도 다 교체 가능(QR코드가 붙어서 교체방법 및 구매 링크 바로 접속)
   - 새로운 모델을 내놓는게 아닌 마켓과 에코시스템을 만들어서 커뮤니티와 파트너들이 호환 모듈을 자유롭게 만들고 팔수 있게 함
"
"https://news.hada.io/topic?id=4750","Sift.js - MongoDB의 쿼리를 JS에서 이용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Sift.js - MongoDB의 쿼리를 JS에서 이용하기

   - 몽고DB의 쿼리 연산자 지원
   ㅤ→ $in, $nin, $exists, $gte, $gt, $lte, $lt, $eq, $ne, $mod, $all, $and, $or, $nor, $not, $size, $type, $regex, $where, $elemMatch
   - 아래 함수를 통해서 몽고DB에서 검색 하는 방식을 그대로 사용
   ㅤ→ sift() : 위의 쿼리 연산자를 모두 이용하는 필터 생성
   ㅤ→ createQueryTester() : 특정 연산자만 이용하는 필터 생성
   ㅤ→ createEqualsOperation() : 커스텀 연산자 추가
   - 정규식 검색
"
"https://news.hada.io/topic?id=4741","Peanut - 개발 & 테스트 자동화를 위해 각종 DB와 서비스를 쉽게 배포하는 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Peanut - 개발 & 테스트 자동화를 위해 각종 DB와 서비스를 쉽게 배포하는 도구

   - REST API, Admin 대시보드, CLI 도구 제공
   ㅤ→ helm 같은 도구보다 훨씬 작고 간편
   ㅤ→ 간단히 배포 및 삭제(몇분 후 자동삭제 지원)
   - 지원 서비스
   ㅤ→ MySQL, MariaDB, PostgreSQL, Redis, MongoDB, Memcached
   ㅤ→ Etcd, Grafana, ElasticSearch, Graphite, Prometheus
   ㅤ→ Zipkin, Mailhog, Jaeger, RabbitMQ, Consul, Vault
"
"https://news.hada.io/topic?id=4755","WireGuardNT, 윈도우 커널용 고성능 WireGuard 구현체 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               WireGuardNT, 윈도우 커널용 고성능 WireGuard 구현체 공개

   - Windows NT 커널과 NDIS(윈도우 네트워킹 스택) API를 이용하도록 리눅스용 WireGuard를 포팅
   - Windows 7,9,8.1,10 및 AMD64,x86,ARM64 지원
   - 기존 Wintun 기반으로 실행되는 wireguard-go 는 userspace 에서 실행되지만, WireGuardNT 는 리눅스/BSD 에서 실행되는 것처럼 네트워킹 스택과 깊숙이 연동되어 실행
   - 작은 테스트 기기에서도 ~7.5Gbps TX 달성. 하지만 더 최적화 가능할 것
   ㅤ→ 윈도우 사용자들의 이더넷 연결은 1Gbps 까지 가지도 않기 때문에 기존의 느린 wireguard-go 로도 큰 문제가 없었지만, WiFi 에서는 성능이 안좋았음
   ㅤㅤ~600Mbps without WireGuard,
   ㅤㅤ~600Mbps with wireguard-go/Wintun over Ethernet,
   ㅤㅤ~95Mbps with wireguard-go/Wintun over WiFi,
   ㅤㅤ~600Mbps with WireGuardNT over WiFi
   ㅤ→ 윈도우즈 서버 사용자들에게 도움이 될 것

   윈도우의 리눅스화? ㅋ

   - WireGuard가 net-next에 커밋됨 https://news.hada.io/topic?id=1047
   - WireGuard가 드디어 Linus 트리에 등록 https://news.hada.io/topic?id=1404
   - WireGuard를 만든 Jason A. Donenfeld의 레딧 AMA가 진행 중 https://news.hada.io/topic?id=2555
   - WireGuardKit for iOS / macOS 릴리즈 https://news.hada.io/topic?id=3407
   위 뉴스의 ssssut 님 댓글을 가져와 봅니다.
   ""WireGuard는 안전한 P2P 연결을 통해 VPN을 구성할 수 있게 도와주는 소프트웨어이자 프로토콜입니다. 코어 부분은 C 및 Go로 짜여져 있고 수많은 아키텍쳐/플랫폼을 지원하고 있으며, 2020년 3월 리눅스 커널에 포함되기도 했습니다. OpenVPN 등의 솔루션이 있지만 다른 솔루션 대비 구성(구축)도 쉽고 연결 cost도 낮을 뿐더러 속도도 훨씬 빨라 날이 갈수록 뜨고 있는 VPN 프로토콜입니다. (+ OpenVPN 대비 중국 GFW 차단이 적다는 썰도..)""
"
"https://news.hada.io/topic?id=4770","Airyx - 오픈소스 데스크탑 OS","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Airyx - 오픈소스 데스크탑 OS

   - FreeBSD 기반으로 macOS 와 비슷한 경험 및 호환성을 제공하는 것을 목표
   ㅤ→ 비슷한 UI, HFS+ 와 APFS지원
   - .app 번들 및 AppImage 지원
   - Cocoa API를 통한 소스 수준의 호환
   ㅤ→ Cocoa 런타임을 제공해서, 오픈소스 코코아 앱을 Airyx 에서 컴파일하면 실행가능하게 지원
   ㅤ→ Darwin & macOS 바이너리 실행은 ""아직"" 지원 안함
   - FreeBSD 와 X11 호환성은 유지. Linux 호환도 FreeBSD의 지원을 통해 그대로 지원
"
"https://news.hada.io/topic?id=4746","Ask GN: 추천하고 싶은 유튜브 채널이 있으신가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask GN: 추천하고 싶은 유튜브 채널이 있으신가요?

   지식 습득용으로 화면을 안 봐도 가능한 말 위주인 채널을 좋아하는데요. (주로 운전이나 운동하면서 소리만 듣습니다)
   혹시 추천할 만한 채널이 있으신가요? 잡학사전 같은 느낌으로 이런 저런 얘기를 듣고 싶어서요.
   전 최근에 ""지식 브런치"" 라는 채널을 알게 되어서 구독하고 있는데요. 이런 채널이 몇 개 더 있으면 좋을 것 같아요.
   예전에 알쓸신잡 같은 것도 좋아했는데, 비슷한 다른 교양 프로들은 재미가 없더군요.
   지식브런치 채널 : https://www.youtube.com/channel/UCcYk_KPZZMLv_bcaSAWSSxA
   알고리즘 때문에 보게 된 이 채널의 ""맛의 역사(서양). 맛있게 먹는다는 것은 어떻게 시작되었을까"" https://www.youtube.com/watch?v=abZ_DdPnwtw 를 추천합니다.
   이거 보고 바로 구독했네요.

   저는 역사를 좋아해서 '함께하는 세계사' 라는 채널을 보고 있습니다. 다른 채널에 비해서 양념이 적은데, 아주 부드럽게 읽히도록 편집과 스토리텔링이 뛰어나셔서 매 영상마다 보고 있어요.
   https://www.youtube.com/channel/UCdop7AYwvReE6jK7M69MA2A

   KBS 다큐... 도 추천해드리고 싶은데, KBS 다큐는 제가 좋아하는 다큐 ( 88/18, 정성을 다하는 국민의 방송( 제목과 다르게 80년대 독제 정권에 '정성을 다했던' KBS를 까는 내용입니다 ) ) 뺴고는 본적이 없어서(.. ) 추천드리기는 좀 애매하네요.

   다양한 지식 습득이라면 [너 진짜 똑똑하다] 채널이 먼저 생각나는군요. 여러 책을 통해 정제된 지식을 사람들이 흥미있어할 주제와 엮어 10분 이내의 영상으로 녹여내는 채널입니다.
   https://www.youtube.com/channel/UCA4ZUofyfHIk-qXlAQQV5Hg
   제가 많이 본 건 아니지만, [슈카월드] 채널도 꽤 유명하지요. 경제를 중심으로 한 시사 및 세계사 등의 썰이 주로 올라오는 곳입니다.
   https://www.youtube.com/channel/UCsJ6RuBiTVWRX156FVbeaGg
   좀 더 잡다한 지식을 원한다면 [사물궁이 잡학지식] 채널도 괜찮습니다. 평소에는 아무 생각 없다가도 듣고 보면 궁금해지는 주제들을 설명하는 채널로, 요즘은 정부기관 등의 지원을 받은 컨텐츠도 제작하고 있습니다.
   https://www.youtube.com/channel/UC7F6UDq3gykPZHWRhrj_BDw
   특정 분야별로 특화된 채널을 추천해보는 것도 좋을 것 같아요. 예를 들면 [향문천 – 글과 울림의 샘] 채널에는 언어 및 역사 이야기가 주로 올라옵니다.
   https://www.youtube.com/channel/UCO0OSA5HfdLVrkqUCsNWYnQ

   우오 슈카월드 빼고는 다 모르는 채널들이네요. 고맙습니다!!

   Lex Fridman, MIT 교수님이 진행하시는 팟캐스트
   https://www.youtube.com/c/lexfridman
   IT와 관련된 다양한 분야의 사람들(그리고 다양한 국적)이 나오는데
   가끔 독특한 억양 혹은 구어체를 심하게 구사할때는 듣기 힘들지만
   그냥 영어듣기 삼아 틀어놓습니다ㅎㅎ

   운전하며 듣기엔 무리겠지만.. 잘 듣겠습니다! ㅎㅎ
"
"https://news.hada.io/topic?id=4690","Prepull - k8s 전체 노드에 미리 이미지를 다운로드 받는 helm chart","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Prepull - k8s 전체 노드에 미리 이미지를 다운로드 받는 helm chart

   - daemonset을 구성하여 이미지 풀 명령을 수행하고 종료
   - 종료후 릴리즈한 helm chart를 자체 정리하여 제거
   - 빌드 파이프라인 뒤로 연계하여 클러스터에 이미지 준비 가능
   - Private Registry 지원(with dockerconfigjson secret)
"
"https://news.hada.io/topic?id=4745","Copilot 설명 및 사용기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Copilot 설명 및 사용기

   - Copilot은 GPT-3를 기반으로 만들어진 Codex를 상품화한 서비스
   - Github에 있는 5,400만개의 Repo에서 추출해낸 159GB 데이터 셋으로 학습 진행
   - 164개의 벤치마크 데이터 셋을 만들었고, Codex는 그 중 28.8%를 해결함
   - LeetCode 문제와 같이 알고리즘 문제 잘품
   -> 알고리즘 문제 풀이를 올린 Repo들이 Github에 많고 그걸 학습해서 그런 것으로 판단됨

   --------
   GeekNews에 Copilot 관련 글들이 몇개 올라왔었죠.
   - GitHub CoPilot - AI 페어 프로그래머 https://news.hada.io/topic?id=4526
   - GitHub Copilot : 첫인상 https://news.hada.io/topic?id=4639

   이번에 회사분이 Copilot 관련 글을 쓰는데 Copilot Preview 계정이 있는게 저 뿐이라 제 컴퓨터에서 좀 도와 드렸습니다.
   테스트 좀 해보면서 놀랐던 지점이 코딩 문제를 3개 넣어 봤는데, 바로 통과되는 답이 나오더라구요.
   문제 하나는 백준에 있던 문제를 번역기 돌려서 넣었는데도 정답이 나오고요.
   온라인 코딩 테스트에서 치팅용으로 쓰는 사람도 있겠다 라는 생각이...
   제가 VSCode에 붙여서 한달간 써본 결론은
   - 대충 아는 언어나 환경에서 개발 할 때 쓰면 좋다.
   -> React 개발하는데 e.target.value 받아서 뭔가 해야 하는게 있었는데, 20글자짜리 추천이 나오길래 Tab 눌러서 자동완성 했더니 원하는대로 되더라고요.
   -> 물론 의심이 강해, StackOverFlow가서 확인해 봤는데 추천해준게 정확했습니다.
   - 잘 아는 언어나 환경이면, 추천이 최적은 아니어서 거슬릴 수 있다.
   - Inference를 위해 Code가 전송될텐데 괜찮으려나? 하는 걱정이 있지만, 파일 하나 하나에 있는 코드 가지고 뭐하겠어? 라는 마음에 그냥 쓰고 있습니다.

   https://www.youtube.com/watch?v=a9349pRiCRk
   이런 의견도 있더라구요.
   전 이거보고 급 관심이 떨어지긴 했습니다.

   제가 코드 저작권에 대해 잘 몰라서 그런데, 저작권으로 보호받는 코드를 변수명만 바꾼다던지, 함수이름을 바꾼다던지 살짝만 고쳐서 쓰면 라이센스 위반인가요?

   네. 위반입니다.

   코드가 완전히 동일한가 보다는... 코드의 출처가 어디인가? 가 코드 저작권에서 중요한 요소가 아닐까 싶네요.
   MIT 나 아파치 라이센스의 경우 가져다 변경 후 사용에 큰 문제가 되지 않겠지만...
   Copilot에서 추천한 코드가 GPL라이센스를 가지는 코드와 동일한 코드를 추천했고..
   개발자가 코드의 일부를 수정해서 개발한 프로젝트에 포함시켰다 라고하면..
   GPL 라이센스상으로 보면 해당 프로젝트는 소스코드 전체를 공개해야 되는게 아닌가 싶거든요.
   GPL 라이센스를 가진 코드를 사용하면 그걸 사용한 전체 코드를 공개하지 않으면 GPL 라이센스 위반인 걸로 알고 있거든요.
   극단적인 예시를 하나 소설로 써보자면...
   회사에 솔루션 개발하는데 개발자가 Copilot 사용했는데 재수없게 추천된 코드가 GPL 라이센스를 가진 곳의 코드를 AI가 러닝해서 그대로 뱉어 낸거라면...... 회사 솔루션 코드 전체 코드 공개 하던가 해야하는 이슈가 생기지 않을까 싶네요.

   궁금한게, 그럼 copilot 이 뱉어낸 코드를 사용자가 살짝 수정해서 쓴다고 했을때, 그걸 발견해 낼 수 있는 방법이 있나요? 같은 I/O, 같은 기능이라도 다양한 스타일의 코드가 나올수 있을텐데 그런 코드 표절은 어떻게 발견하는건지 궁금하네요(음악 표절 소송처럼 레퍼런스와 서로 비교하는 방법론이 있는걸까요?)

   글쎄요. 유사성을 어떻게 검증하고 어디까지 같은 코드로 볼지는 판단기준은 저도 잘 모르겠네요 ㅎㅎ

   관련 글이 GeekNews에서도 올라 왔었습니다
   https://news.hada.io/topic?id=4659
   해당 유튜브 영상에서 저작권 이야기를 하지만, 정작 영상에 있는 자료 화면(뉴스, 만화영화 등)에 대한 출처나 저작권 명시가 없는거 보면 참 어려운 일인거 같아요ㅠ

   지적하신 영상에 있는 뉴스/만화에 대한 저작권은 ... 쓴 당사자(영상 제작/배포 한사람)가 책임을 지면 될 문제지만..
   Copilot을 사용하다 저작권에 걸리는 코드가 내 코드에 포함되면 이라는 문제죠.
   난 툴을 썻을 뿐인데 내가 개발한 프로그램이 저작권 소송에 휘말리는 셈이니까요.

   저도 사용해보고 싶은데 언제쯤 할당받을 수 있을지 ㅠ

   +1 계속 기다리고 있네요

   Github를 많이 쓸수록, 더 빨리 주는걸로 알고있어요.

   어쩌다보니 작년에 코로나 때문에 급하게 만든 Repo가 Star 100개 넘게 받게 되어 있는데요. 그거 때문인지 저는 Copilot도 그렇고 Github Codespace도 그렇고 신청하면 잘 선정되긴 하더라고요.
"
"https://news.hada.io/topic?id=4776","KDash - 빠르고 심플한 쿠버네티스 대쉬보드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       KDash - 빠르고 심플한 쿠버네티스 대쉬보드

   - Rust로 작성된 터미널 기반의 K8s 대쉬보드
   - Mac/Linux(Homebrew), Windows(Scoop, Chocolatey)
   - 기능
   ㅤ→ CLI 버전 정보
   ㅤ→ Node 메트릭
   ㅤ→ Resource Watch (폴링 인터벌 조정 가능)
   ㅤ→ Resource describe 및 YAML 복사
   ㅤ→ 컨테이너 로그 스트리밍
   ㅤ→ Context : Info / Watch / Namespace / Switch
"
"https://news.hada.io/topic?id=4797","SMSHub - 안드로이드폰을 이용한 SMS 전송/수신용 Gateway","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                SMSHub - 안드로이드폰을 이용한 SMS 전송/수신용 Gateway

   - 안드로이드폰에 설치하는 SMS Gateway 앱 오픈소스
   - 정해진 시간마다 웹서버의 URL에서 JSON을 읽어서 자동으로 SMS를 송신
   ㅤ→ JSON : 보낼 내용, 전화번호, 메시지ID
   ㅤ→ 읽을 URL, 인터벌, 전송 결과 보고용 URL 설정 가능
   - SMS 수신시 특정 URL에 내용/전화번호 전달

   안드로이드 폰을 이용한 SMS Gateway들 앱은 여러개 있는데
   이건 앱 자체가 웹훅형태로 서버에 연동하는 거라, 폰과 서버의 연결부분이 간단해서 좋은거 같아요.
"
"https://news.hada.io/topic?id=4713","Oculus, 자체 API 중단하고 OpenXR에 올인","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Oculus, 자체 API 중단하고 OpenXR에 올인

   - v31 부터는 새로운 기능들을 OpenXR 확장으로 제공하고 Full Support
   ㅤ→ Passthrough API를 포함해서 앞으로 모든 새로운 어플리케이션에 대해 선호 API가 될 것
   ㅤ→ 오큘러스 개발자 사이트에서 OpenXR로 개발 및 QA 지원
   - 기존 Oculus Mobile & PC API 도 계속 동작은 하지만, Compatibility Support 단계로 변경
   ㅤ→ 2022년 8월말부터 지원단계도 중단 예정. (동작은 하지만 지원은 없음)
   - Unity용 Oculus XR 플러그인도 지속 지원하고, Unity용 OpenXR 플러그인이 2022년초 공식 지원될 예정
   - Unreal용 Oculus VR 플러그인도 OpenXR백엔드로 이관 예정(기존 CAPI/VRAPI 이용). Epic과 협력해서 공식 OpenXR을 통해서 Oculus 기기를 지원하게 지원 예정
   - MS, Steam, HTC 등을 포함해서 모두 OpenXR로 합쳐지고 있음
"
"https://news.hada.io/topic?id=4696","다음 스타트업의 대세는 커뮤니티 주도형이 될 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       다음 스타트업의 대세는 커뮤니티 주도형이 될 것

   - 커뮤니티를 먼저 만드는 것이 제품을 출시하고 판매하는 가장 빠른 방법
   ㅤ→ 입소문만으로도 마케팅 가능
   ㅤ→ 커뮤니티를 형성하면, 궁극적으로 미래의 제품을 만드는 데 도움이 됨
   - Audience와 Community 구축은 전혀 다름
   ㅤ→ 오디언스를 구축할 때는 ""개인""에게 초점을 맞추지만,
   ㅤ→ 커뮤니티를 구축할 때는 뭔가에 대해 멤버들이 서로 협력하고, 기여하고, 참여하는 ""그룹""에 초점
   - 커뮤니티 구축의 개념
   ㅤ→ 사용자가 돌아오지 않거나, 참여하지 않고, 성장률이 높아지지 않으면 제품이 실패할 위험에 처하게 됨
   ㅤ→ 당신의 MVP에 대해서 뭐가 부족한 지등을 적극적으로 공유하는 그룹이 있다면, 이탈률을 줄이고, 제품 아이디어를 검증 할 수 있게 됨
   ㅤ→ ""이를 통해 미래 멤버들(Future member, 차후에 회원이 될 사람들)이 제품 출시 전에 형태를 구체화 할 수 있게 됨""
   Greg Isenberg
   ""커뮤니티 주도(Community-led) 기업은 새로운 '린 스타트업'
   린 스타트업 : 소프트웨어를 만들고, 커뮤니티를 찾음
   커뮤니티 주도 : 커뮤니티를 구축하고, 소프트웨어를 만듦
   대규모 컨슈머 회사들의 다음 물결은 커뮤니티 주도가 될 것
   - 커뮤니티와 오디언스를 빠르게 구축하는 방법. 목표를 나누기
   ㅤ→ 어떤 사람을 대상으로 할 것인가?
   ㅤ→ 어떤 플랫폼에서 구축할 것인가 ? : 소셜미디어 , 뉴스레터, 슬랙, 디스코드, 텔레그램..
   ㅤ→ 많이 참여하는 탑 커뮤니티 멤버들을 커뮤니티 앰버서더로 만들어 활용할 것
   ㅤ→ 회원의 관심을 끌고, 참여를 유도하고 유지하는 콘텐츠를 만들 것
   - 커뮤니티 콘텐츠의 품질은 매우 중요. 모니터링하지 않으면 실패함. 주로 발생하는 문제점
   ㅤ→ 커뮤니티에 올라오는 콘텐츠 품질이 낮음
   ㅤ→ 부정적 의견(Negativity)과 스팸
   ㅤ→ 온보딩 및 기여하기 너무 어려움
   ㅤ→ 피드백을 줄 방법이 없음
   ㅤ→ 열악한 커뮤니티 관리
   ㅤ→ 다루는 주제가 니치(niche)하지 않고 너무 다양
   - 규칙에 따라 관리하고, 커뮤니티 사용 방법에 대한 문서를 작성할 것
   - 올바른 커뮤니티를 만들기 위해 invite-only 형태로 만들 수도 있음
   ㅤ→ 제한된 멤버에게 액세스 권한을 부여하고, 다른 사람을 초대하게 하고, 양질의 콘텐츠를 큐레이션하고, 이 사이클을 반복하도록 요청하기
   Jacob Peters
   ""성공적인 커뮤니티를 구축하려면 두 가지가 필요합니다.
   1. 사람들이 모이는 이유
   2. 사람들이 재참여할 이유""
   - 많이들 #2에서 실패함. 멤버들이 더 많은 것을 위해 돌아와야 할 이유를 알아야 함
   - 오디언스가 생기게 하는 것은 콘텐츠이고, 오디언스가 커뮤니티를 구축하는 데 도움이 됨
   - 그들이 참여하고 함께 모일 수 있도록 콘텐츠를 제공하는 것이 매우 중요함
   ""커뮤니티를 구축하려면 오디언스를 얻을 수 있는 콘텐츠가 필요하고, 오디언스는 커뮤니티 구축에 도움이 됨""
   - 교육 콘텐츠나 동영상을 통해서도 가능
   - 주제에 대해서 어울리고, 토론하는 커뮤니티
   - 문제를 해결하거나 지원을 제공
   - Gen Z Vcs는 Slack 에서 8000명 이상의 젊은 투자자, 창업자, 스타트업 열정가, VC 지망생 및 크리에이터로 이루어진 그룹을 보유
   - Women Make는 여성들이 메이커 공간에서 지원을 찾을 수 있는 공개 커뮤니티를 구축했음. 서로를 돕고 강력한 여성문화를 구축하는 여성들을 찾을수 있음.
   - Weekend Club은 부트스트래퍼를 위한 주간 공동 작업 커뮤니티를 결성. 계속 성장중
   - 성공하지 못한 나(필자)의 이전 제품은 아이디어를 검증할 사용자도, 커뮤니티 구축에도 집중하지 않았음. 이번엔 뉴스레터를 통해 커뮤니티와 함께 새로운 제품을 만들고 있음. 비 기술 창업자로서 스타트업을 구축하는 과정과 스타트업 운영 뒤에 숨겨진 비공개 사항들을 공유 중
   - 커뮤니티는 제품을 구축할 뿐만 아니라, 구축을 돕기위해 다른 사람들과 함께 작업할 수 있는 장소를 만듦
   - ""가장 중요한 것은 같은 생각을 하는 사람들의 문화를 구축하는 것""

   응원합니다!!
   화이팅

   응원합니다!!

   응원합니다 😊

   제가 GeekNews를 만들고 성장시키는 방법과 거의 같은 의견을 가지는 글이어서 재미나게 읽었습니다.
   저 역시도 이전 회사들에서 커뮤니티를 구축하지 못한 것이 매우 아쉬웠고, 이번에는 커뮤니티부터 만들어보자고 해서 시작을 했습니다.
   긱뉴스에 뉴스를 매일 빠지지 않고 올리는 것을 통해서 콘텐츠를 보급하고 있고,
   이 기사를 보러 오시는 많은 분을 통해서 긱뉴스만의 커뮤니티를 만들어 보려고 하는 중이고요.
   Ask를 통해서 참여율을 더 높이고, 차후엔 Show를 통해서 프로젝트를 공개하고 피드백을 주고받는 형태로 키워나갈 예정입니다.
   물론 그다음에 더 커지면 그 뒤 단계도 계획하고 있는데요. 조급하지 않게 천천히 준비하려고 합니다.
   (GeekNews의 제품화는 아니고, 스타트업 지원 에코시스템의 일부를 만들어나가려고 합니다.)
   요즘은 다른 분들이 뉴스도, 댓글도 많이 달아주셔서 천천히 나아가는 것 같아서 기분이 좋습니다. 앞으로도 잘 부탁드립니다.

   디스코드를 이용해서 커뮤니티를 잘 구축한 사례로 Spellbreak 도 있습니다.
   - 무명 게임을 바이럴하기 : Spellbreak의 성장 교훈 https://news.hada.io/topic?id=2794
   Vingle 을 통해 경험한 ""커뮤니티를 만들때 알아두면 좋은 것들""
   - 인터넷과 커뮤니티 https://news.hada.io/topic?id=240

   응원 합니다!

   저도 응원합니다!

   응원합니다 :)
"
"https://news.hada.io/topic?id=4744","더 빠른 CRDT를 위해 최적화 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          더 빠른 CRDT를 위해 최적화 하기

   - 기존 CRDT 라이브러리들의 문제점을 찾고 해결해서 더 빠르게 만드는 과정을 설명한 글
   ㅤ→ 테스트 벤치마크 : 18만자 입력, 7만자 삭제, 10만번 커서 이동
   ㅤ→ Automerge 대비 5000x 빠름 (5분 vs. 56ms)
   - Automerge가 느린 이유는?
   ㅤ→ 문서가 커질수록 내부의 트리기반 데이터 구조가 커지고 느려짐
   ㅤ→ ImmutableJS를 많이 사용하는데, 기능은 좋지만 느리고 메모리 사용량이 많음
   ㅤ→ 입력된 글자 각각을 별도의 아이템으로 처리
   ㅤ→ Automerge는 현재 성능을 개선한 Rust 버전을 별도로 구현중
   - Yjs 라이브러리는 Automerge 보다는 훨씬 빠름
   ㅤ→ 데이터 구조를 개선
   - Diamond Types : Rust 기반의 CRDT 구현체
   ㅤ→ Rust로 언어를 변경하고 Yjs처럼 데이터 구조를 개선해서 더 빠르게 만듬
   ㅤ→ 링크드 리스트 대신, Range Tree를 이용
   ㅤ→ Wasm 으로 실행시에 JS에서의 스트링 변경보다 3배 빠름 (0.19s, Automerge 보다 1500배)
   ㅤ→ Rust Native 로 실행시 0.056s 로 5000배 빠름
   부록 A - 내 앱에서 CRDT를 써야 한다면 뭘 쓰면 좋을까 ?
   - 문서 기반 협업 도구를 만든다면 ""Yjs를 추천"". 성능좋고 메모리 사용량 적음. 더 빨라질 예정
   - 물론 Automerge도 훌륭. 아마도 올해 더 빨라질 것
   - Diamond는 정말 빠르지만, 아직 기능을 많이 추가해야 함
   - 문서 시맨틱 보다 DB 시맨틱을 원하면, OT 기반이지만 ShareDB를 추천
   - Redwood를 기대 중

   이 글은 아래 글의 저자인 구글 Wave 개발자 Joseph Gentle의 최신 글입니다. 먼저 읽고 보시면 좋습니다.
   - 제가 틀렸었어요. CRDT가 미래입니다. https://news.hada.io/topic?id=2962

   Xi Editor의 개발자인 Raph Levien 글도 참고할만 합니다.
   https://github.com/xi-editor/xi-editor/…
"
"https://news.hada.io/topic?id=4699","Pyenv 를 활용한 파이썬 버전관리와 가상환경 구축하는 법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Pyenv 를 활용한 파이썬 버전관리와 가상환경 구축하는 법

   Pyenv 를 활용한 파이썬 버전관리와 가상환경 구축하는 법
"
"https://news.hada.io/topic?id=4763","Text Fish - 웹페이지의 중요 텍스트만 보기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Text Fish - 웹페이지의 중요 텍스트만 보기

   - 블로그/뉴스 사이트에서 광고 제거하고 주요 내용만 보기
   - 모든 URL 앞에 text.fish/ 만 붙이거나, 북마클릿 또는 크롬 확장으로 이용 가능
   - 폰트 크기 설정, 스타일(세피아,다크,라이트), 텍스트만 또는 이미지 포함해서 보기 지원

   아 요약해주는 줄 알고 이것 저것 테스트 해봤는데 이상하다 했더니 요약은 아니였군요 😅

   요약쪽은 https://tldrthis.com/ 이런게 있긴 한데.. 대부분 유료더군요. 유용한지도 잘 모르겠.. ㅎㅎ

   모바일에선 iOS 사파리의 읽기 모드가 정말 깔끔하고 국내 사이트도 잘 지원하는데,
   데스크탑 크롬/엣지의 리더모드는 국내에선 활성화 시켜도 적용이 잘 안되는 사이트가 많아서 그거 대신으로 사용할 만 하네요.
"
"https://news.hada.io/topic?id=4784","Modern Unix - 유닉스 명령들의 최신 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Modern Unix - 유닉스 명령들의 최신 대체제

   더 빠르고 쓰기 편한 대체 명령어들
   cat → bat
   ls → exa, lsd
   diff → delta
   du → dust
   df → duf
   tree → broot
   find → fd
   grep → ripgrep
   ack → ag
   history → mcfly
   cut,awk → choose
   sed (json) → jq
   sed → sd
   man → cheat, tldr
   top → bottom, glances, gtop
   ping → gping
   ps → procs
   curl → curlie
   cd → zoxide
   dig → dog
   fzf - fuzzy finder
   hyperfine - CLI benchmarking tool
   httpie - CLI HTTP client for API
   xh - 더 빠른 httpie

   bat, lsd, ripgrep, jq, hyperfine, httpie는 일상적으로 쓰고 있네요.
   그리고, ack -> ripgrep
"
"https://news.hada.io/topic?id=4795","Firefox 91, 향상된 쿠키 삭제 기능 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Firefox 91, 향상된 쿠키 삭제 기능 도입

   - 각 웹사이트에 대해서 브라우징 기록을 완벽히 삭제 가능
   - 86버전에 추가된 Total Cookie Protection 기능을 이용
   ㅤ→ 웹 사이트별로 생성되는 ""Cookie Jar"" 를 구성해서 데이터를 분리
   ㅤ→ 이 저장소안에 들어있는 쿠키, 슈퍼쿠키 및 모든 데이터를 삭제하여, 혹시 남아 있을지 모르는 써드파티 쿠키까지 모두 지움
   - 이전에는 웹사이트들이 남기는 ""Cross-site"" 이미지/비디오/스크립트 들 때문에 다 지우는게 어려웠음
   - 쿠키와 캐쉬를 지우는것 뿐만 아니라 방문 기록 까지 모두 지우고 싶다면 ""Forget About This Site"" 기능 사용
"
