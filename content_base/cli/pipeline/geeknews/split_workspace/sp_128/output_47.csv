"https://news.hada.io/topic?id=6127","CXX - Rust와 C++간의 안전한 Interop 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  CXX - Rust와 C++간의 안전한 Interop 라이브러리

     * Rust 에서 C++을, C++에서 Rust 코드를 안전하게 호출하는 메커니즘을 제공
       → Safe Binding을 위한 저수준 작업들을 처리
       → 타입 및 함수 시그니처를 정적 분석하고, 한쌍의 코드 생성기로 양쪽 경계를 채움
       → 생성된 FFI(foreign function interface) 브릿지 코드는 거의 오버헤드 없음 (no copying, no serialization, no memory allocation, no runtime checks)
"
"https://news.hada.io/topic?id=6176","DevTerm R-01 : 첫번째 RISC-V 기반 포터블 컴퓨터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  DevTerm R-01 : 첫번째 RISC-V 기반 포터블 컴퓨터

     * 전설적인 TRS-80 Model 100 디자인의 ""slabtop""
     * $239
     * RISC-V 싱글코어@1GHz, No GPU, 1GB DDR3
     * 6.86"" IPS 스크린
     * Clockwork 65% 키보드
     * 58mm 200dpi 써멀프린터
     * 32GB TF-Card
     * ClockworkPi v3.14 메인보드
     * 18650 배터리는 미포함

   GameShell과 DevTerm ARM버전을 질렀습니다. 후후.. 오면 한번 뜯어봐야겠네요.

   리눅스 & FOSS 에 대한 경험이 있는 사람만 주문하라는 경고가 붙어있긴 하네요.
   DevTerm의 폼팩터는 나름 이뻐서 ARM 기반의 A06 같은 모델을 사는 것도 괜찮아 보입니다.
   https://www.clockworkpi.com/product-page/devterm-kit-a06-series
"
"https://news.hada.io/topic?id=6116","구글, 사이버 보안회사 Mandiant를 6.67조원에 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   구글, 사이버 보안회사 Mandiant를 6.67조원에 인수

     * 모토로라 인수 이후 가장 큰 규모
     * Mandiant는 미국 공군 특수 요원과 CERT(Computer Emergency Response Team) 출신들이 모여 만든 사이버 보안 회사
     * 600명 이상의 보안 침해 대응 컨설턴트를 보유중이고, 300명 이상의 분석가들이 자동 방어/보안검증/위협분석 등의 기능을 제공하는 Mandiant Advantage Platform을 개발중
     * 구글 클라우드에 보안 기능을 강화할 것
     * Mandiant는 2020년에 큰 이슈가 되었던 SolarWinds 공격을 처음 발견한 회사
"
"https://news.hada.io/topic?id=6222","MPAA 2021 테마 보고서테마 보고서

   미국 영화 협회의 극장/홈/모바일 엔터테인먼트 시장 보고서 (67p PDF)
"
"https://news.hada.io/topic?id=6187","Awesome TUIs","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Awesome TUIs

     * 훌륭한 터미널 UI 제공 프로젝트들 모음
"
"https://news.hada.io/topic?id=6197","Next.js 공식 'Foundations' 코스 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Next.js 공식 'Foundations' 코스 공개

     * JavaScript로 간단한 프로젝트를 만들고, React로 전환하고, 다시 Next.js 로 만들면서 익히는 초보자용 코스
     * 주요 내용
          + About Next.js
          + From JavaScript to React
          + From React to Next.js
          + How Next.js Works
"
"https://news.hada.io/topic?id=6121","더 나은 REST API를 설계하는 법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         더 나은 REST API를 설계하는 법

     * 일관성 유지 : URL/헤더/인증/상태코드..
     * ISO8601 UTC 날짜 포맷 사용
     * Public Endpoint만 인증 예외. 나머지는 모두 인증 필수
     * 헬스 체크 Endpoint 제공
     * API 버저닝
     * API 키 인증 적용
     * 합리적인 HTTP 상태코드 와 메소드 사용
     * 각 Endpoint에 자체만으로 설명 가능한 간단한 이름을 사용
     * 표준 에러 응답 사용
     * POST에서 생성된 자원을 리턴
     * PUT 대신 PATCH
     * 최대한 구체적으로
     * Pagination 사용
     * 각 자원을 확장 가능하게 (expand 등의 쿼리 파람을 줘서 추가 정보도 리턴 가능하게 설계)

   요새 관련 내용을 이곳저곳에서 많이 접했는데, ""일상 속 사물이 알려주는 웹 API 디자인""을 추천해요. 제목과 표지 때문에 인터넷에 대한 쉬운 비유서 같은걸로 착각할 수 있는데, API 디자인을 업으로 삼고있는 저자님의 API 디자인에 대한 통찰력이 돋보이는 좋은 서적이에요.

   Microsoft REST API 가이드라인
   Stackoverflow의 REST API 가이드 라인
"
"https://news.hada.io/topic?id=6133","중앙 은행 디지털 통화들에게 해줘야 할 단 한 마디 : 안돼! ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   중앙 은행 디지털 통화들에게 해줘야 할 단 한 마디 : 안돼!

   중앙 은행 디지털 통화는 시민들을 억압할 수 있는 잠제력을 가지고 있다는 예를 들고. 우리가 NO라고 말하지 않으면 그걸 막을 수 있는 근거가 없다는 걸 설명한 글입니다.

   요약문에서는 중앙 은행 디지털 통화가 어떻게 위험하고, 그것이 어떤 장점을 가지고 있으며, 전자 결제와의 차별점과 구체적인 위험을 중심으로 요약했습니다.

   원문은 중앙 은행 디지털 통화가 실질적으로 위험하다는 근거들을 지금 벌어지고 있는 법안과 예를 들어 설명해주었기에, 더 세부적인 근거는 원문을 참고해주세요.


     * 잠에서 깨니 '재난지원금 데이!'[1] FedWallet을 통해 2000달러를 받았지만. 이 돈은 7일 동안만 유효하며. FedWallet은 '사회적 가치를 위해서' 한 주에 화석 연료를 400달러만 구매할 수 있었고, 이미 주간 한도를 넘어버렸음. 당신은 가난하기에 아직 저렴한 신재생 에너지 차량을 구매하지 못했기에 기름을 못 넣었고. 차는 안 움직이며. 그래서 비싼 요금의 택시를 타서 집으로 돌아옴.
     * 기분이 안 좋아서 기름진 육류 샌드위치를 먹으려고 했지만, FedWallet에서 '지속가능한 발전을 위한 구매 한도'를 넘었다면서 거절. 굶줄였기에 화가 나 'FedWallet은 형편없어!' 라고 올림. FedWallet은 '그러면 ESG 점수가 하락할 수 있다' 고 경고 후 메시지가 플래그 처리 됨.
     * 분노에 가득찼기에 다시 트위터에 'FedWallet은 끔찍하다'라고 올렸고. FedWallet은 '정부 기관에 대한 불화를 일으키거나 대중의 신뢰를 훼손하는 행동은 범죄로 분류하기에 (National Terrorism Advisory System Bulletin - February 07, 2022 | Homeland Security (dhs.gov)') 귀하의 FedWallet 계정을 국가보안을 위해 잠군다고' 통지.
     * 이런 미래는 단순한 꿈이 아닌, 지금 우리와 함께하고 있는 불길한 예감임.
     * 그럼 무엇이 중앙 은행 디지털 통화(CDBC)와 전자 결제를 다르게 만드는 것일까? 전자 결제가 사용자에게는 그저 계좌 A에서 B로 움직이는 것 같아 보이지만. 수많은 은행, 금융 거래서, 그리고 국경을 넘으면 SWIFT까지 끼어들고. 이 전자 결제로는 돈을 주겠다는 '약속'은 옮겨지는 것이지 실제 자금이 '이동'하는 건 아니기에 복잡한 계약들과 송금, 자금 수령 확인등 과정이 필요함.
     * CDBC는 이 과정을 단순화함. 중앙은행에 직접 계좌를 개설하면, 중앙은행은 거기 돈을 넣어주면 됨. 그러면 이제 민간 은행의 책임이 아니라, 연준의 책임. 디지털 화폐를 사용하면 즉시 한 쪽에서는 돈이 실제로 빠져나가고, 다른 계정에서는 추가됨. 이 과정에서는 비트코인처럼 거래 내역이 영구적으로 기록기에 약속과 신용은 필요 없음. 하지만 비트코인과 달리 중앙에서 통제되고, 그렇기에 중앙은행은 누가 돈을 '가지고' 있거나 '어디'에 있던 상관없이 화폐의 생성과 파괴. 그리고 이동까지 모든 감독과 통제를 할 수 있음.
     * 장점은 여기서 그치지 않음. SWIFT같은 복잡한 시스템도 필요 없이 중앙은행간의 합의만 있으면 됨. 그리고 마지막으로, 이 돈은 코드로 만들어질 것임. 그러므로 원하는 경우마다 작동하거나, 작동하지 않거나 수정할 수 있음.
     * 그런데 기존 현금이 수천년간 잘 작동했음에도 불구하고 CBDC들은 왜 나오게 된 걸까? 그건 비트코인이 세상에 나오고, 디지털 화폐가 현재 존재하는 것이라는 걸 깨닫자 은행가들은 수년간 연구를 했고. 연구 결과로 들어난 걸 보니. 할 수 있는 게 굉장히 많았기 떄문. 그리고 중국은 이미 디지털 위완화에 대한 작업을 시작했고. 미국은 그것으로 달러의 패권이 넘어가는 걸 원하지 않았기 때문임.
     * CBDC들로 할 수 있는 것들은 무엇이 있을까? 돈은 쉽게 옮겨지고, 지불 시스템은 훨씬 더 간단해지고, 그래서 저렴해지며. 중앙 은행은 복지가 필요하면 돈을 새로운 차원에서 찍어낼 수 있음. 만약 돈을 빠르게 쓰길 원할 때는 마이너스 금리나, 사람들의 모니터에 우유를 쏟아버리는 방법 대신, 중국 인민은행이 테스트했다는 소문처럼. 경제발전이 필요한 시기에 빨리 돈을 쓰도록 장려하기 위해 돈에 유효기간을 지정 해버릴 수 있음.
     * 게다가 CBDCs를 통한 모든 거래들은 깨끗하고 투명하게 장부로 남기에 탈세, 금융 범죄와 자금 세탁, 테러 자금 조달같은 것들은 영원히 작별을 고할 수 있음. 그리고 인터넷에만 연결만 되어있다면 언제든지 자유롭게 벌금을 매길 수 있으며, 결제 내용은 모두 장부에 남기에 특정 거래 품목에 대한 제한도 할 수 있으며, 개인화를 하여 특종 인종들에 친화적인 기업에는 보너스를 지급할수도 있고, 화석연료 소비를 막기위해 월 소비금액을 제한할수도 있음. 만약 중앙은행이 긴급하다고 필요하다면, 특정 개인에 대한 계정 차단을 하면 됨. 이건 다른 중개 금융 기관의 협력은 필요하지 않음.
     * 이 모든 것에 개입하기에는 중앙 정부가 작을지도 모르겠지만 거대한 블랙박스 AI로 모든 걸 세세하게 관리하고 감시할 수도 있을것임. 어떻게 동작하는지는 아무도 모를테지만, 사람들이 TikTok의 알고리즘이 어떻게 동작하는지 아무도 신경쓰지 않는것처럼 이것도 그럴 것임.
     * 미국에는 재산 거래의 자유를 보장하는 헌법상의 권리가 없음. 언론의 자유는 있겠지만, 재산 거래가 막히면 잉크 살돈도 없을 것임. 집회의 자유도 있을 것임. 걸을 수만 있다면. 중국에서는 신뢰할 수 있는 사람은 어디든지 돌아다닐 수 있고, 신뢰할 수 없는 사람은 한 발자국도 못 나가게 할 수 있는 (세서미 크래딧) 게 이미 있는데, 중앙은행이라고 못할 것은 없음.
     * CBDC는 인류 역사상 전체주의 권력의 최대 확장이 될 수도 있고. 그렇게 확장된 힘은 지금껏 어떤 정권도 누려보지 못한 것이 될 것임. 그렇지만 이것은 편리함과 사회 정의, 애국심이라는 이름으로 우리에게 슬그머니 들어고 있음.
     * 그렇기에 우리는 CBDC에게 '안돼.' 라고 말해야할 때가 온 것 같음.

   [1][역주] 본문에는 Stimmie Day라고 적혀 있었습니다. '미국 정부가 $600달러짜리 돈을 뿌린 날'이란 뜻이라서 '재난지원금 데이'로 번역했습니다. https://knowyourmeme.com/memes/600-stimmy

   뭔가 '빅브라더! 싫어!'라면서 우기는 느낌이 강한 글이군요.
   결국 지폐같은 익명성을 어느정도까지 제공할지 여부도 결정안된거 같은데요.
   화폐간의 가치비교도 현재와는 다른 기준이 생길것 같아서 결정이 쉽지 않을것 같아서요.

   절대권력은 절대부패한다는 rule of thumb 를 생각한다면.... 효율과 투명성, 안전과 자유의 trade off 는 늘 어려운 문제네요.

   팬데믹 초기에 하라리가 했던 말도 생각나구요

   ""문제는 감시 체계가 엄청나게 강화될 거라는 점입니다. 평소 같으면 큰 저항에 부딪혔을 이런 정책이 코로나19로 일어난 준전시 상황 때문에 용인되고 정당화될 수 있습니다. 특히 코로나19를 극복하고 난 다음에도 생체학 신호를 포착하고 추적해 기록하는 감시 체계는 계속 살아남아 우리를 옥죌 수 있습니다. 이런 감시 체계는 겉으로는 다음에 언제 또 발생할지 모르는 전염병의 창궐을 예방하기 위한다는 명목을 내세우겠지만, 실제로는 얼마든지 전체주의 정권의 탄생과 유지에 필요한 토대를 마련하는 데 악용될 수 있습니다.

   지금 우리는 개인의 프라이버시라 부르는 영역을 모두 지워내는 전례 없이 막강한 감시 체계의 등장을 목도하고 있습니다. 팬데믹이 온 상황에서 프라이버시를 지켜야 한다는 목소리는 지금 모두의 목숨이 달린 문제인 만큼 공중 보건을 지키는 일이 가장 중요하고 그를 위해 프라이버시 문제는 잠시 미뤄도 좋다는 목소리를 아마 이기지 못할 겁니다. 그 결과 사람들은 건강을 지키는 대신 프라이버시는 하나도 지켜내지 못한 환경에 살게 될 겁니다.

   물론 지금 인류가 개발한 기술은 대단히 뛰어난 수준에 이르렀습니다. 이제 인류는 기술을 이용해 새로운 전염병의 발발을 아주 일찍 감지하고 진단할 수 있고, 바이러스에 감염된 사람의 동선을 모두 파악해 바이러스가 퍼지는 걸 억제할 수 있을 만큼 모든 인류를 효과적으로 관찰하고 감시할 수 있습니다. 하지만 그 기술이 정확히 다른 걸 관찰하고 감시하는 데도 얼마든지 쓰일 수 있습니다. 우리가 무슨 생각을 하고 어떻게 느끼는지를 파악하는 데도 말이죠. 이런 감시 체계를 구축하는 데 걸림돌로 작용하던 것들을 어떤 의미에선 유례없이 빨리 퍼진 이번 전염병이 싹 치워줬고, 전체주의의 등장으로 이어질 길을 닦아줬다고 할 수 있습니다.""

   CBDC를 하지 않아도 비슷한 수준의 보고가 동작하거나 잠재적으로 동작하는 나라에서 살고 있는 입장에선 :)

   중앙은행과 연준을 섞어서 썼습니다. 번역할 때는 미국에만 적용되지 않는 내용일 것 같아서 Fed를 중앙은행으로 치환했는데, 몇몇 곳은 그러지 못했고. 사실 그냥 연준으로 할 걸 그랬습니다(... )
"
"https://news.hada.io/topic?id=6144","로컬 개발환경에서 HTTPS 이용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          로컬 개발환경에서 HTTPS 이용하기

     * 왜 로컬에서 HTTPS를 써야 할까
          + 프로덕션 환경과 최대한 비슷하게
          + 강력한 보안 정책 적용 - Content Security Policy(CSP)
          + 서비스 워커, Secure/Prefixed 쿠키 등 특정 브라우저 기능 이용
          + localhost 대신 특정 호스트명 이용
     * 로컬에서 HTTPS 사용하기
          + Self-Signed Certificate 생성하기
            → 가장 좋은 도구는 OpenSSL 이지만, 간단한 mkcert 만으로도 충분
            → mkcert -install 로 로컬 CA 설치하고 mkcert localhost 로 키 생성
          + Node.js 로 localhost 키 이용해서 HTTPS 서버 만들기

   CFSSL은 어떨까요? 저도 그냥 OpenSSL을 써오긴 했는데 최근 읽는 책에서 CFSSL을 소개하더라구요. 장단점이나 비교가 궁금하네요

   https://web.dev/i18n/ko/how-to-use-local-https/ 요런글도 있었군요

   로컬 서버에 스마트폰 연결 테스트를 할때는 HTTPS 가 필수 인것 같은데,
   제 응용 분야는 인터넷이 안되는 로컬 네트워크인 경우가 많아
   ngrok 류의 터널링을 사용할수 가 없네요.
   위의 인증서 생성 방법은 되긴 하지만 관리가 편하지는 않았습니다.
   혹시 다른 방법이 있을까요?

   개발머신이 windows 기반이라면 fiddler 같은 프록시를 띄우고 아이폰이나 안드로이드폰의 proxy 주소를 fiddler 접속 주소로 설정하면 개발머신의 hosts 파일 등이 적용됩니다.
   (fiddler 자체 서명 루트 인증서를 폰에 설치하는 과정이 필요함)
   mitmproxy 같은 것으로도 가능할 것 같습니다.

   https://news.hada.io/topic?id=6151

   저는 요 솔루션을 써봤습니다. 굉장히 행복하더라고요...

   전 ngrok 으로 인터넷도 안되는 로컬 환경에서는 안되는 것과,
   대역폭 한계로 테스트를 충분히 못하는 문제가 있었어요.;;

   참고로 Windows에도 PowerShell에 New-SelfSignedCertificate라는 명령어가 있어서, 별도의 외부 도구 설치 없이 자체 서명한 인증서를 만들 수 있습니다. 예전에 이걸로 인증서 파일을 뽑아내는 PowerShell 스크립트를 작성해서 썼던 적이 있네요.
   https://www.sysnet.pe.kr/2/0/12588
"
"https://news.hada.io/topic?id=6165","TikTok은 새로운 음악플랫폼이다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          TikTok은 새로운 음악플랫폼이다

     * 2021년에 10억 비디오 조회수를 넘은 노래가 430곡
       → 2020년 보다 약 3배
     * 이중 175곡은 빌보드 핫100에 들어갔음
     * 많은 아티스트들이 이를 통해서 메이저 레이블과 계약을 이끌어 냄
     * US내에서 라틴 뮤직 장르가 가장 빠르게 성장중
     * 가장 인기인 장르는 Hip-Hop/Rap
"
"https://news.hada.io/topic?id=6119","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   골프 연습하고. 엘든링 하고…

   다음주 중에 먹을 감자 샐러드 만들고… 이정도로 고민중이네요. 어디 가긴 여전히 부담스러운 시기고.
     * FMA! Find My Agreement라는 프로젝트를 심심할 때마다 만들어보려고 합니다. 적당한 때가 온다면 공개할 수 있었으면 좋겠네요.
     * 소설을 씁니다!
     * 테크니컬(... ) 글쓰기를 연습하고 있어요. 제가 개인적으로 하루에 하나씩 IT뉴스를 선정하는데, 그걸 계기로 연습하고 있습니다. 문장에서 정보 밀집력을 더 높히기 위해 고민중입니다.
     * 연간 보고서를 여전히 작성 중입니다.
     * 요즘 커뮤니티들을 모두 끊고, 대안으로 리디북스로 책을 읽고 있습니다. 스트레스가 훨씬 내려간 것 같아요. 오늘은 매종일각을 다 봤습니다. 최고에요..

   보다만 듄 책을 다시 펼치려고요~

   지난주에 호라이즌 포비든 웨스트는 스토리 엔딩을 봤네요. 수집퀘만 남았는데 심심하면 다시 들어가 보려고요.
   엘든링을 잠깐 잡아봤는데.. 역시나 프롬소프트웨어는 저랑 잘 안맞는듯. 일단 이번 주말엔 조금 더 달려보려고 합니다.

   그리고, 사무실 오픈 준비 중이라 배치할 물품들 쇼핑 리스트를 작성중입니다. 역시 쇼핑은 조사할 때가 제일 재미난 것 같아요
"
"https://news.hada.io/topic?id=6235","ReVanced - 광고차단 유튜브 앱 Vanced를 이어서 개발","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ReVanced - 광고차단 유튜브 앱 Vanced를 이어서 개발

     * ""Reverse Engineered Vanced""
     * 기존 Vanced 팀과 상관없이 Vanced 앱을 그대로 이어서 개발

     * Vanced - 광고를 차단해주는 안드로이드용 유튜브앱
     * 광고차단 유튜브앱 Vanced 개발 중단
"
"https://news.hada.io/topic?id=6199","웹 개발자의 비밀무기들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              웹 개발자의 비밀무기들

     * Loom
     * Markup.io
     * Hoverify
     * 크롬 확장들 : CSSPeeper, SVG Grabber, WAVE, CSS Magic, WhatFont,Full Page Screenshot Capture
     * Waapalyzer
     * PixelParallel
     * 구글 Lighthouse

   Loom은 왜 들어가 있는지 모르겠는데요. 혹시 이해하시는 분 있으실까요?

   만든 웹사이트 기능이 동작하는 모습을 후다닥 캡쳐하고 설명 추가해서 보내서 커뮤니케이션하는 용도로 이해했습니다.
"
"https://news.hada.io/topic?id=6178","shot-scraper-template - 웹 페이지 스크린샷을 저장하는 GitHub Repo만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        shot-scraper-template - 웹 페이지 스크린샷을 저장하는 GitHub Repo만들기

     * 특정 웹페이지의 스크린샷을 자동으로 찍어서 저장하는 GitHub Repo Template
     * 문서화를 위해서 웹사이트의 변경된 내용을 저장하는 용도로 사용
     * Run workflow 버튼 누르면 스크린샷을 저장
     * 한번에 여러 사이트 캡쳐하기, 레티나 해상도 모드, 캡쳐전 딜레이 지정, PDF로 저장하기 등 옵션

     ""GitHub Actions as a Platform""
"
"https://news.hada.io/topic?id=6151","ngrok - 로컬 개발을 위해 제공되는 공개 URL 생성 솔루션","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ngrok - 로컬 개발을 위해 제공되는 공개 URL 생성 솔루션

     * BOT이나 REST API에서 공개적으로 접근해야하는 URL이 요구되는 경우가 있지만. 보통 제가 작은 프로젝트나 실험을 할 때는 공개 URL을 만들기 귀찮았습니다.
     * ngrok은 그 귀찮음을 해결해줍니다. ngrok을 다운 받고, 'ngrok http 3000'을 하면 localhost 3000 포트와 연결된 공개 URL을 생성합니다.
     * 해당 공개 URL은 HTTP와 HTTPS 연결을 모두 지원해주며. 사용자는 로컬에 생성된 관리페이지에서 해당 URL로 들어오는 요청들을 볼 수 있습니다.
     * 무료버전은 연속으로 2시간동안 세션을 유지할 수 있으며, 유료 버전은 그보다 길 것 같습니다.
     * 저는 Slack API를 개발하면서 무료버전만 사용했고, API 도큐먼트에서 해당 솔루션을 쓰라고 해서(... ) 사용해보았을 때 멋지게 작동했습니다.

   참고로 Awesome Tunneling - ngrok 대체제 모음이 최근 이곳에 소개된 바 있습니다. 그리고 여기 소개된 것 중 Expose나 Sish 같은 것은 별도로 소개된 적도 있습니다.

   우와. 감사합니다. 제가 저런 솔루션을 처음 봐서 감격했었는데 (지금까지 공개 URL이 필요한 사이드 프로젝트를 거의 안 했어서요), 많은 대체제들이 나왔었군요 'ㅁ '!
"
"https://news.hada.io/topic?id=6161","GPT-3의 새 기능 : 편집과 삽입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          GPT-3의 새 기능 : 편집과 삽입

     * 텍스트를 편집 또는 삽입하는 기능을 추가
     * 기존 코드를 수정/리팩토링하는 용도로 사용 가능
       → 코드에 비어있는 부분만 채우기, Docstring 이나 빠진 import 문 추가
       → 파이썬 코드를 JavaScript로 변환하거나, One-liner로 수정하는등의 작업이 가능
     * 문장을 재작성 하거나, 긴 문장 중간에 채워넣기도 가능
       → 목차만 잡아두고 내용 채우기 등
"
"https://news.hada.io/topic?id=6196","Ask GN: 사무실에서 쓰기에 좋았던 물건이 있나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask GN: 사무실에서 쓰기에 좋았던 물건이 있나요?

   작은 사무실에 두면 쓰기에 좋았거나 만족감이 생겼던 물건들이 있으신가요?
   전자 제품이나 작은 소품, 쓰기에 편했던 집기 등을 추천해 주세요.

   회사에서는 따로 쓰지 않지만, 재택할 때 유용하게 썼던 발받침대 추천합니다! 제가 쓰는 의자가 높낮이 조절이 안 되서 더 유용하긴 했지만 자세 교정에도 좋아서 잘 쓰고 있습니다.

   저는 손톱깍기가 필수입니다.
   키보드 타이핑시에 손톱이 닫는걸 싫어하는 편이라, 자주 깍아줘야 해요.
   꼭 필요할때 언제든 깍을수 있게 열쇠고리에도 심지어 달고 다닙니다.

   월간 데굴데굴 Ep.05 : 직장인은 역시 장비빨이지. 회사 사람들의 추천템 모음 - 2900원부터 69만 원까지
   작년에 회사 유튜브 채널에서 공유한 영상인데 추천드려봅니다!

   오오오! 고맙습니다. 찬찬히 뜯어보겠습니다.

   9평 남짓한 오피스텔에서 하루에 거의 16시간을 일하다보니 아래와 같은 물건들이 젤 만족스럽더라구요 ㅎ
     * 간접조명: 밤에 작업할때 눈이 덜 피로, 분위기 👍
     * 대용량 가습기: 건강하게 겨울을 나려면 필수인듯
     * 3인용 소파: 잠깐 잠깐 누워서 휴식용으로 잘쓰고 있음
     * 페그보드: 찾기 쉽게 각종 케이블이나 공구 등등 깔끔하게 정리
     * 모니터암: 이거 쓰고 거북목 나았습니다 ㅎ 책상도 작은거 쓸수있어서 좁은 사무실 공간 활용에 도움도 되었구요
     * 삼성 플립: 아이디어 끄적이고 정리할때 너무 좋고 회의할때 활용도가 좋네요
       아무것도 없는 사무실에 이것저것 들여놓고 쓰는게 많지만 위에것들이 가장 만족도가 높은것 같습니다 :)

   우왓 고맙습니다. 페그보드랑 플립 좋네요!

   휴대폰-무선이어폰-스마트 워치 3단 무선 충전기가 소소하게 편하고 좋았습니다.
   그 외엔 노트북 받침대 정도가 떠오르네요..

   노트북 받침대!! 모니터랑 동시에 쓰려면 딱이었는데 까먹고 있었네요. 고맙습니다

   마우스패드에 연결된 무선 충전기가 매우 유용했습니다.
   휴대폰이나 에어팟 충전할때 그냥 마우스 옆에 두기만 해도 충전이 되어서 거의 충전에 신경쓰지 않았었네요.

   오 이런게 있네요. 추천 감사합니다

   여름철 한정이지만, [USB 미니 선풍기]가 유용했습니다.
   저는 더위를 잘 타는 편인데 사무실 에어컨은 약간 약하게 맞춰져 있는 편이라, USB 미니 선풍기 없이는 살짝 덥게 느껴지더라고요. 반대로 춥다 싶으면 선풍기를 끄면 되고요.

   집에서도 쓰긴 하는데 사무실에 더 유용하겠네요. 고맙습니다 ㅎㅎ
"
"https://news.hada.io/topic?id=6164","Webpack → Vite: 번들러 마이그레이션 이야기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Webpack → Vite: 번들러 마이그레이션 이야기

   서비스 출시 후 5년 동안 사용하던 Webpack을 Vite로 옮기며 있었던 이야기를 공유합니다. 부족한 부분이 많지만 재밌게 읽어주신다면 감사하겠습니다.


Webpack의 장점과 웹 생태계의 변화

   Webpack은 지난 10년간 개발, 관리되며 생태계가 잘 갖춰져 있음.
   Create React App 등 많은 곳에서도 쓰이고 있으며, IIFE 방식으로 모듈을 묶어주어 여러 브라우저를 지원함.

   하지만, 5년 간 서비스 내의 기능이 3배 가까이 늘어나며 빌드 시간이 늘어나는 등 개발 경험이 나빠짐. 그리고 웹 생태계 발전으로 ES Module의 지원 등 다양한 변화가 있었음.

Bundler + Native

   최근 1~2년 사이에 Native의 힘을 빌려 번들링, 트랜스파일링 하는 것이 떠오르기 시작함. 싱글 스레드인 JS의 처리 한계를 뛰어넘기 위한 시도가 이뤄짐.
   Golang 기반의 esbuild, Rust 기반의 SWC 등이 대표적임.

1차 시도: esbuild만을 사용한 번들링

   당시 안정성, 플러그인 등 생태계를 고려하여 esbuild를 기반으로 하는 번들러 사용을 결정함. 그리고 esbuild 자체의 성능이 어느 정도인지 알아보려고 함.
   패키지 설치 후 빌드 스크립트를 돌렸더니, 기존 210초 정도 소요되던 빌드가 2.16초 만에 끝남. 100배 정도 빠른 빌드 속도를 보임.

   하지만 EmotionJS 사용을 위해 Babel을 적용하면 10배 느려짐.
   그리고 esbuild가 HMR을 지원하지 않아 사용이 어렵다고 판단함. 직접 HMR을 구현할 수도 있었지만, 공수, 유지/보수/관리 비용이 많이 든다고 생각했음.

2차 시도: Vite를 사용한 번들링

   Vite의 컨셉은 Dependencies와 Source code를 분리한다는 점임.
   Dependencies는 설치 후 내용이 바뀌지 않으니 esbuild로 미리 트랜스파일링. Source code는 빈번하게 바뀌므로 ESM으로 로딩. 빌드 결과는 캐싱하여 빠른 개발 빌드가 가능하게 함.

   Vite에서 제공하는 템플릿 사용하여 쉽게 마이그레이션 진행. 몇 가지 이슈가 있었지만 금방 해결하였으며, Webpack보다 훨씬 짧고 간결한 설정을 할 수 있게 됨.


번들러 마이그레이션 결과

   Netlify에서의 빌드 시간 측정 시 평균 250초 → 평균 90초. 기존의 36% 수준으로 줄어듦.
   설정 파일이 간결해지면서 팀원들이 이를 활용한 커스텀 빌드 환경을 손쉽게 만들어 능률 향상됨.

   더 나은 개선을 위해 Babel 의존 없는 CSS-in-JS 라이브러리로 교체, Monorepo 적용을 해볼 수 있음.
   생태계의 경우, SWC가 안정화될 경우 Babel을 교체할 수 있을 것이며, TypeScript Type Checker 역시 Native로 포팅 중임.

교훈

     * 크게 보이던 작업도 작게 나누어 테스트하고 많이 의논하면 쉽게 풀린다.
     * 지금 메이저하게 쓰고 있는 도구도 생태계의 발전으로 금방 사라질 수 있다.
     * 좋은 접근성이 좋은 환경을 만들어준다.

   esbuild 속도 놀랍네요 .

   esbuild 메인 홈페이지에서도 10-100x 빠르다는 점을 내세우는 것을 보고 긴가민가했었는데, 실제로 보니까 충격적이더라고요!

   멋집니다~!! 개인적으로 swc, esbuild 의 고도화가 이루어져 완전히 바벨을 대체하는시대가 얼른 오길 기대하고 있어요~

   저도 그런 시대가 오길 정말 기대하고 있어요! 정말 개발하기 좋아질 것 같아요 :)
"
"https://news.hada.io/topic?id=6118","구글, 태블릿용 Android 12L 출시했으나 지원하는 기기는 미출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                구글, 태블릿용 Android 12L 출시했으나 지원하는 기기는 미출시

     * 태블릿용 기능을 포함한 12L 이 Android 12.1 버전으로 업데이트
     * 삼성,Lenovo,Microsoft가 올해 내로 이를 지원하는 폴더블/태블릿 출시 예정
     * 12.1 업데이트는 Pixel 3~5만 현재 지원되며 Pixel 6은 이달 안에 공개
       → 하지만 대부분의 기능 업데이트가 태블릿 용이라 폰에선 별 차이 없음
     * 가장 중요한 기능 중 하나는 태블랫용 태스크바 UI 및 알림/세팅을 위한 두줄 UI

   빨리 OS만이라도 업데이트 해 둬서 다른 태블릿 앱들이 준비하게 하는 건 좋은데.. 정작 쓸 기기가 없다고 하니 뭔가 타이밍이 어긋나는듯한 느낌이네요.
"
"https://news.hada.io/topic?id=6156","최고의 머신러닝 알고리듬들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             최고의 머신러닝 알고리듬들

    1. Transformers
    2. Generative Adversarial Networks (GANs)
    3. Support Vector Machine(SVM)
    4. K-Means Clustering
    5. Random Forest
    6. Naive Bayes
    7. K- Nearest Neighbors (KNN)
    8. Markov Decision Process (MDP)
    9. Term Frequency-Inverse Document Frequency
   10. Stochastic Gradient Descent

     * 각 알고리듬별 설명과 주요 사용처 등 정리
"
"https://news.hada.io/topic?id=6143","Physically-based GPU Raytracer from Scratch","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Physically-based GPU Raytracer from Scratch
"
"https://news.hada.io/topic?id=6216","2022 AI Index Reportndex Report

     * 스탠포드 인간 중심 인공지능 연구소(HAI)가 발행하는 AI 지수 보고서
     * 전세계의 AI 데이터를 추적,수집해서 시각화하여 연구자,정책 입안자,언론인,대중들이 AI를 이해하는데 도움이 되도록 구성한 자료
     * 230p PDF, Raw 데이터도 구글드라이브로 공개

Top Takeaways

     * AI에 대한 민간 투자가 급증, 투자 집중이 강화되어 펀딩받은 AI회사의 수는 줄어들고 큰 투자가 많아짐
          + 2021년 AI민간투자는 약 100조원($93.5b)으로 2020년의 두배
          + 펀딩받은 회사는 2019년 1051개, 2020년 762개, 2021년 746개
          + 2020년엔 $500m(6천억원) 이상 투자 받은 회사가 4개였지만, 2021년엔 15개
     * 미국과 중국이 국가간 AI 협력을 주도
          + 지정학적 긴장은 커지고 있지만, 두 국가간 AI 협력은 2010년에 비해서 5배 이상 많아짐
          + 두 국가의 협력은 2등인 영국와 중국 사이보다 2.7배나 많은 출판물을 만들어냄
     * 언어 모델이 예전보다 훨씬 더 커지고 유능해졌지만, 더 편향되고 있음
          + 큰 언어 모델들이 벤치마크에서 새로운 기록을 세우고 있지만, 또한 훈련데이터의 편향이 더 잘 반영된다는 것도 보여줌
          + 2021년에 만들어진 2800억개의 매개변수 모델은 2018년에 개발된 1.17억개의 매개변수 모델보다 유발 독성(elicited toxicity)이 29% 증가
          + 시스템은 점점 기능이 향상되고 있지만, 기능이 증가하면서 편향(Bias)의 잠재적 심각성도 증가
     * 모든 곳에서 AI 윤리(Ethics)가 거론됨
          + AI의 공정성과 투명성에 대한 연구가 2014년 이후 폭발적으로 증가해서 관련 출판물이 5배 증가
          + 알고리듬의 공정성과 편향에 대한 연구는 학문적 추구였다가 광범위한 적용이 가능한 주류 연구 주제가 됨
     * AI가 더 저렴해지고 성능이 향상됨
          + 2018년 부터, 이미지 분류시스템의 훈련 비용은 63% 감소하고, 훈련 시간은 94% 향상
          + 추천, 객체 인식 및, 언어 처리 같은 MLPerf 작업 전반에 걸쳐서 훈련비용은 낮아지고 훈련시간은 빨라지는 경향으로 AI 기술이 광범위하게 채택 되는 중
     * 데이터, 데이터, 데이터
          + 최고의 결과를 내기위해 점점 더 많은 추가 훈련 데이터를 사용
          + 이런 경향 때문에 방대한 데이터 세트에 접근 가능한 민간 섹터를 선호함
     * 그 어느때보다도 많아진 AI에 대한 글로벌 법안
          + 25개국 입법 기록에서 ""AI""가 포함된 법안이 2016년 1건에서 2021년 18건으로 늘어남
          + 스페인,영국,미국은 2021년에 각각 3개의 법안을 채택
     * 로봇팔(Arm)이 점점 더 저렴해 지는 중
          + 로봇팔의 가격 중간값이 2017년 한개당 42,000달러에서 2021년 22,600 달러로 5년간 46.2% 감소
          + 로봇 공학 연구가 더 접근하기 쉽고 저렴해짐
"
"https://news.hada.io/topic?id=6218","Mitmproxy 8 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Mitmproxy 8 릴리즈

     * HTTP 1/2, 웹소켓, SSL/TLS 등의 웹 트래픽을 인터셉트, 수정, 리플레이 하기 위한 오픈소스 인터랙티브 HTTPS Proxy
     * CLI + Web UI + Python API 제공 및 강력한 에코 시스템
     * 8.0 개선사항
          + Web UI 개선 : TCP / WebSocket 플로우 렌더링, cURL/HTTPie/Raw HTTP Export 지원
          + Async Event Hook 지원
          + 새로운 TLS Event Hook 지원 (TLS Handshake 성공/실패)
          + SOCKS v5 인증 지원
"
"https://news.hada.io/topic?id=6177","2022 Type Trends 보고서 [65p PDF]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     2022 Type Trends 보고서 [65p PDF]

    1. Neue Nouveau
    2. Svelte Serifs
    3. Loopy
    4. Mix-Up
    5. Organic-Mod
    6. Flux
    7. Throw-Up
    8. It's a Trap!
    9. Certified Gold
   10. NF-Type

   PDF 파일 : https://monotype.com/sites/monotype/…
"
"https://news.hada.io/topic?id=6167","Go 1.18 릴리즈 (제너릭 포함)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Go 1.18 릴리즈 (제너릭 포함)

     * Generic
          + 많은 분이 기다리던 제너릭이 드디어 릴리즈 되었습니다.
     * Fuzzing
          + Fuzzing을 기본으로 제공하는 최초의 major 언어 라고 하는군요
     * Workspaces
          + yarn, npm 과 유사한 workspace 기능도 추가되었습니다
          + 한 프로젝트에서 multiple module 을 더욱 쉽게 관리할 수 있습니다
     * 20% Performance Improvements
          + CPU 작업 성능이 최대 20%나 향상되었다고 합니다.
          + (20%성능향상이 네번째 피쳐일 정도로 엄청난 릴리즈 라고..)

   제너릭을 왜 기다렸나요? (초보)

   감사합니다 감사합니다

   야호

   V18! V18!
"
"https://news.hada.io/topic?id=6202","Vimeo: "우리는 B2B 솔루션이지, 인디 버전의 유튜브가 아니다"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Vimeo: ""우리는 B2B 솔루션이지, 인디 버전의 유튜브가 아니다""

     * Vimeo가 117명의 구독자, 영상당 평균 150뷰 나오는 비디오 창작자에게 연간 $3500 사용료를 청구한 사례가 기사화됨
       → 상위 요금제로 업그레이드 하거나, 사용량을 줄이거나, 떠나는 수 밖에 없음
     * 또한 Premium 에서 Basic으로 다운그레이드하면 비디오가 삭제되기에 비디오를 유지하려면 비용을 낼 수 밖에 없음
     * Vimeo 측에선 ""대부분 비디오 플랫폼은 내부 광고를 통해 무료 스토리지를 후원 가능하지만, Vimeo는 광고가 없고 구독자 플랫폼이기 때문에 무료 사용자에겐 제한이 있을 수 밖에 없다."" 라고 함
     * 즉 라이트 유저들도 비디오를 Vimeo 플랫폼에서 유지하려면 꽤 많은 돈을 내야함

     ""Vimeo는 B2B 회사가 되었다. 당신이 독립 창작자/영화 제작자/비디오그래퍼 라면 Vimeo는 이제 당신의 플랫폼이 아니다. 영화 제작을 위해 Vimeo를 써야할 필요는 없다. 느리고, 비싸고, 친절하지 않다(GUI 관점에서). 훨씬 품질 좋고, 빠르고, 잠재 고객에 비해 더 높은 노출을 제공하는 Youtube 보다 못하다.""

   음.. 이 방향이 맞나 궁금하긴하네요.

   관련 기사 : Vimeo가 갑자기 창작자들에게 수천달러를 내던지 떠나라고 하고 있다
"
"https://news.hada.io/topic?id=6149","Google Cloud 인프라 가격 변경 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Google Cloud 인프라 가격 변경

     * 스토리지, 컴퓨트, 네트워킹 제품들의 가격이 조정 될 예정
          + 인하/인상이 섞여 있어서 사용하는 제품군 별로 체크 해야함
          + 예) 멀티리전 Nearline/Coldline 스토리지는 가격 상승, Archive 스토리지는 가격 인하
     * 2022/10/1 부터 적용

   스토리지쪽 네트워크 가격이 엄청나게 인상된 듯 하네요. 어떤건 두 배로 올리고, 어떤 건 공짜였다가 유료되고...HN을 보니 난리난 분들이 좀 있는 듯 합니다.

   이런 소개글에 ""가격 인하""라고 강조하지 않고 ""가격 변동은 유스케이스에 따라 다르다. 오르는 고객들은 가격을 줄일 수 있도록 별도의 옵션을 제공한다."" 라는 말이 써있으면.. 전반적으로 인상된다고 보는게 맞겠죠.

   사용하시는 제품 별로 잘 확인하셔야 할듯
"
"https://news.hada.io/topic?id=6234","NVIDIA Instant NeRF - AI로 2D사진을 3D장면으로 즉시 렌더링","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             NVIDIA Instant NeRF - AI로 2D사진을 3D장면으로 즉시 렌더링

     * AI를 이용한 인버스 렌더링 기술 : NeRF(Nueral Radiance Fields)
     * 수십장의 사진으로 주변환경을 학습하는데 몇 초 정도 걸리고, 수십 밀리초내에 3D 화면을 생성
          + 예제에선 4장의 사진만으로 학습
     * NVIDIA GPU에서 최적화된 다중해상도 해쉬 그리드 인코딩 기술로, 기존 방식보다 1000배 이상 가속
     * NVIDIA CUDA 및 Tiny CUDA 신경망 라이브러리로 개발
"
"https://news.hada.io/topic?id=6180","Microsoft, 윈도우11 파일 탐색기에서 광고를 테스트중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Microsoft, 윈도우11 파일 탐색기에서 광고를 테스트중

   윈11 인사이더 빌드의 탐색기에서 다른 마이크로소프트 제품 홍보가 포착됨

   Windows릉 아예 무료화 하려는 포석일지도…

   음.. 그러게요 Windows 10 이 영원히 버전 10일거라고 선언했을 때 많은 사람들이 예상했던 전개이긴 합니다. (그런데 11이 나와버렸네요 ㅎㅎㅎ )

   오.. 재미난 예상이네요. 개인 사용자 대상으로는 정말 그렇게 하고 기업용이나 오피스만 열심히 파는 것도 좋은 방법일 것 같아요.

   MS의 최근 행보를 볼때 충분히 고려하고 있을 옵션인 것 같아서요. 아마도 유료형 에저 서비스 몇개 붙여 선택할 수 있는 OS 무료 버전을 기획하고 있을 듯 합니다. 단순 자사 광고로만 무료화하긴 아까울테니.
   MS 수익으로 봤을 때는 통크게 개인 사용자용은 무료도 충분히 가능한 옵션일 것 같기도 하고.

   마이크로소프트 요즘 잘 하고 있는것 같은데, 왜 이런 뻘짓들을 테스트 하는지..
"
"https://news.hada.io/topic?id=6175","Podman, Registry 없이 컨테이너 이미지 전송 가능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Podman, Registry 없이 컨테이너 이미지 전송 가능

     * Podman 4.0의 새로운 ""podman image scp"" 명령으로 같은 시스템의 사용자간 또는 네트웍 머신간에 이미지 전송 가능
     * SSH 지원 기능을 활용
          + root 계정에서 non-root 계정으로 이미지 복사
          + ""podman system connection add"" 로 추가된 기존 연결을 활용해서 네트웍을 통해 복사 가능
"
"https://news.hada.io/topic?id=6210","OpenBSD/Arm64를 애플 M1 에서 동작 성공","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     OpenBSD/Arm64를 애플 M1 에서 동작 성공

     * Asahi Linux Installer로 M1 머신에 UEFI 추가가 가능해졌음
     * 이 기능을 활용하여 USB에 담은 OpenBSD/Arm64 설치 프로세스 진행 가능
     * Mac Studio를 제외한 모든 M1 머신에서 동작하며, Asahi Linux와 동일한 기능들 지원
          + 키보드, 터치패드, 이더넷, WiFi, USB, NVMe..

   이건 어떤 의미를 가진다고 볼 수 있을까요?

   BSD 사용자도 이제 자신있게 M1 맥북을 살 핑계가 생겼다는...

   설득력 있습니다. @@
   솔직히 BSD를 어떤 분들이 쓰시는 지를 모릅니다. 하하

   Asahi Linux 알파 릴리즈 - 애플 M1칩용 리눅스
"
"https://news.hada.io/topic?id=6148","구글 스프레드 시트, 최대 셀수를 1천만개로 확장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글 스프레드 시트, 최대 셀수를 1천만개로 확장

     * 기존 5백만개에서 2배로 확장. 컬럼수는 여전히 최대 18278개(A 부터 ZZZ)
          + Excel/CSV 에서 임포트할 때도 마찬가지로 적용
          + 변환시에 한 셀에 5만글자 이상인 셀은 제거됨
     * Add Row 버튼 눌러서 바로 천만줄을 만드는건 불가(최대 500만줄씩 두번해야)

   흠.. 이런거보다 일단 읽기 모드에서 시작해서 편집 누르면 편집하는 모드 옵션이 좀 생겼으면 좋겠어요 ㅠㅠ

   전 모바일웹에서도 편집좀 되면 좋겠어요 ㅠ

   앱을 안쓰는 이유가 있으세요?

   가끔 링크공유로 누군가에게 간단한 편집을 요청할일이 있는데, 앱을 설치하라고 하기가 뭐하더라고요

   사내에서 공유해서 쓰다보니 실수로 셀을 날리는 경우가 많더라고요. 키 입력 지연 때문에 검색하려고 입력한게 셀에 들어가거나 하는데 사용자가 눈치 못채면 데이터가 막 사라지거든요 흑흑
"
"https://news.hada.io/topic?id=6241","Convoy - 빠르고 안전한 Cloud Native 웹훅 서비스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Convoy - 빠르고 안전한 Cloud Native 웹훅 서비스

     * HTTP API로 이벤트 데이터를 받아서 설정된 Endpoint로 전달하는 웹훅 인프라 오픈소스
     * 지원 기능
          + 보안 : 이벤트 페이로드를 Signing
          + 이벤트 타입별 URL : 한개의 이벤트를 받아서 여러 엔드포인트로 팬아웃. 원하는 이벤트를 설정할수 있고 중복도 지원
          + 재시도 : 특정 횟수 재시도 및 Exponential Backoff 지원
          + 관리 UI : 전달 시도 로그, 필터링, 이벤트 상태 등
          + 추가 예정 기능 : Convoy 대시보드를 자신의 대시보드에 추가 가능, Rate Limiting, Replay 공격 방어, Multiple Ingest 소스 지원
     * Go 오픈소스 : 바이너리, 도커이미지 및 소스에서 설치 가능
"
"https://news.hada.io/topic?id=6134","Show GN: MiroTalk - P2P - Open-Source - Simple, Secure, Fast WebRTC Up to 4k and 60fps","                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Show GN: MiroTalk - P2P - Open-Source - Simple, Secure, Fast WebRTC Up to 4k and 60fps

   Compatible with all browsers and platforms.
   Live demo: https://mirotalk.up.railway.app
   GitHub: https://github.com/miroslavpejic85/mirotalk
"
"https://news.hada.io/topic?id=6158","코드리뷰 관련해서 많이 받는 질문에 대한 답변","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       코드리뷰 관련해서 많이 받는 질문에 대한 답변

     ""코드 리뷰 좋은지 알겠는데, 시간이 없다. 리뷰 말고도 할 일이 많다.""

     * 코드리뷰 강의를 하는 필자가 가장 많이 받는 위 질문에 대한 답변 정리

    1. 코드 리뷰에 최소의 시간이 소요되도록 저자(PR 작성자)가 노력하자
    2. 매일 아침 10분 정도 스탠드업 미팅을 하듯 오전 30분, 점심 식사후 30분 정도 정해진 리뷰 시간을 갖자
    3. 품질과 생산성 :
       초반에 투자하면 후반에 발생하는 비용을 현저히 낮출수 있고, 향후 변경비용을 낮춰서 생산성 향상으로 이어짐
    4. 기타 :
       시간이 부족하면 버그/장애등 치명적인 부분만이라도 시작해서 점차 확대해 나가자.
       리뷰에 들이는 노력을 조직에서 성과로 인정하자

     ""지금 당장 우리가 행할 수 있는 성장을 위한 공유 활동, 품질 향상을 통해 생산성 향상을 위한 수단으로 코드리뷰를 수행했으면 한다.""

   코드리뷰 시간을 업무 시간으로 인정해주는 문화가 필요합니다.

   엄청 타이트한 일정으로 top-down 으로 떨어지는 경우 답이 없습니다. 또는 due date 를 찍어놓고 일을 시키거나요.

   그런 회사의 경우, 전반적인 문화가 top-down일 가능성이 높더라구요.
   하나의 업무만 조정하면 되는 경우는 상대적으로 쉽게 바뀌는데 전반적인 분위기의 경우 경영진이 마음을 먹어야 하는 것이라 어렵습니다.

   업무량에 대한 논의가 안되면 (초과근무로 설득하는 과정을 거쳐서) 문화를 바꿔보시다가
   한달이 지나도 안바뀌면 다른 조직/회사/업계를 찾아가는 게 효율적이긴 합니다.
   그 이상 노력하시면 내면부터 무너지는 자신을 발견하게 되더라구요.

   (업계는 SI, 스타트업, 대기업을 나누는 의도입니다. 하는 일, 업무방식, 팀원관계가 완전히 다르다고 느꼈습니다.)
"
"https://news.hada.io/topic?id=6128","A11y Automation Tracker","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        A11y Automation Tracker

     * 잠재적인 접근성(Accessibility) 위반 사항을 추적하고, 자동으로 Linting 및 테스트하는 도구들의 모음
     * Ember로 작성된 오픈소스
     * Potential A11y Violations DB를 관리
          + 실패하는 부분, 테스트 자동화 방법, 관련 링크등
"
"https://news.hada.io/topic?id=6198","오픈소스의 무기화에 대해","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             오픈소스의 무기화에 대해

     * 러시아 문제가 소프트웨어 개발 영역으로 변져서 의도치 않은 결과가 발생
          + MongoDB가 러시아에서 서비스 중단
          + 특정 Node 라이브러리가 러시아 IP일 경우 파일을 강제로 삭제하게 만든 것
          + 특정 테라폼 모듈이 라이센스 항목을 변경하여, 러시아의 침공을 인정하고 ""푸틴은 멍청이(Putin khuylo!)"" 라는 내용에 동의해야만 사용가능
     * 이런 것은 ""특정 개인/그룹에 대해서 차별을 금지한다""는 정신을 위배하기 때문에 오픈소스가 아니라고 생각
     * 신뢰가 사라지면 할수 있는 것은, 다른 라이브러리를 찾거나, 모든 커밋을 리뷰하거나, 라이브러리를 포크하는 수 밖에 없음

     ""무기화로 인해 신뢰가 무너지고 있음. 오픈소스 프로젝트를 러시아에 대한 무기로 사용하려는 유혹을 거부해야함. 이는 위험한 선례를 남기고, 궁극적으로 오픈소스운동을 후퇴시키고, 조직들이 상업용 소프트웨어로 돌아가도록 함""

   어처구니가 없네요. 이렇게 괴롭힐수록 푸틴을 도와줄 뿐이죠.

   어느 나라나 그렇겠지만 러시아 같이 큰 나라라면 더더욱 정부로서의 국가와 그 나라에서 살길 원했든 원하지 않았든 그 곳에서 살고 있는 사람들을 구분해서 바라봐야 한다고 생각합니다. 무슨 사변적인 오픈 소스 이념을 논하지 않더라도, 러시아 내에서도 적지 않은 반전 운동 단체가 존재할 것이고, 실제로 젊은 러시아 시민들 사이에서 반전 여론이 적지 않습니다. 오픈 소스 소프트웨어는 러시아가 전쟁을 수행하는 데에 직간접적으로 도움이 될 수도 있지만, 그에 못지 않게 이를 저지하고자 하는 사람들에게도 도움이 될 수 있을텐데요. 아무리 전쟁을 막기 위해서라고는 하지만 무작정 모든 러시아로부터의 이용을 아예 차단하는 것이 그 의도에 아주 잘 부합하는 것인지, 너무 나이브한 조치가 아닌지 숙려해 볼 수 있을 것 같습니다.

   오픈 소스 프로젝트가 완전히 비정치적이여야 한다는 얘기까지도 아닙니다 (완전한 비정치라는 것이 과연 가능한 것인지는 차치하더라도요). 그렇지만 오픈 소스 소프트웨어를 아예 쓰지도 못하게 막는 방식이 아니더라도, 이를테면 공식 웹사이트나 소프트웨어 설치 스크립트에서 반전 메시지를 보여주는 식의 방식만으로도 충분히 효과적이지 않을까요.

   동의합니다.
   실제로 Black Lives Matter 운동 때는 많은 프로젝트가 공식 홈페이지 등을 통해서 지지를 표명했었죠. 그리고 Notepad++ 같은 경우에는 업데이트 후 첫 실행 때 간혹 이런 메시지를 출력하는 경우가 있었습니다. 제가 직접 처음 봤던 경우는 샤를리 엡도 테러 사건 때였네요.

   동의합니다.

   Notepad++ Free 위구르 에디션 같은 방식이 생각나네요.
   https://news.hada.io/topic?id=822

   Vim도 오랫동안 (아마 요즘도 그렇죠?) 우간다의 빈곤 아동들에게 기부할 것을 독려하는 메시지가 프로그램 시작 화면 한 가운데에 떴던 게 떠오릅니다.

   node-ipc 건은 그냥 범죄죠.
   이걸 보니 근래에 있었던 Faker.js 무한루프 코드 삽입 사건도 문득 생각납니다.

   팔레스타인 공격 받을땐 아무말도 아무것도 안했던건 왤까요
"
"https://news.hada.io/topic?id=6150","광고차단 유튜브앱 Vanced 개발 중단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         광고차단 유튜브앱 Vanced 개발 중단

   곧 사이트의 다운로드 링크는 동작 안하게 되며, 이미 설치된 버전은 그대로 사용은 가능

   최근 Vanced 개발팀이 NFT 판매를 시도했었다는 기사가 있네요.
   https://www.makeuseof.com/youtube-vanced-shutting-down/
   https://www.thefocus.news/tech/vanced-nft/

   조금 더 찾아보니 Vanced 측은 해당 NFT(Vanced 로고)가 수익 창출 목적이 아니었다고 주장하긴 한 듯.
   https://it.donga.com/101903/

   그 트윗은 농담이었다고 Vanced 팀이 해명했습니다. 1시간만에 지워졌고요.
   https://twitter.com/YTVanced/status/1503408779274170380

   물론 농담처럼 보이지 않았기에 문제가 있었다는 얘기도 있지만, 본인들은 그게 중단의 이유는 아니라고 합니다.

   (앗 찌찌뽕)

   밴스드는 중단됐지만 NewPipe라는 선택지가 있습니다. 얘는 개조 앱이아니라 리버스 엔지니어링으로 만든 앱이라 법적인 문제에서 자유로운 편
   https://news.hada.io/topic?id=2500

   Vanced - 광고를 차단해주는 안드로이드용 유튜브앱
"
"https://news.hada.io/topic?id=6213","벤츠, 자율운전중 사고시 법적 책임을 지겠다고 밝혀","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      벤츠, 자율운전중 사고시 법적 책임을 지겠다고 밝혀

     * 메르세데스의 ""Drive Pilot"" 시스템은 고속도로에서 60km/h(40mph)에서 자율운전을 수행
     * 테슬라의 AutoPilot, GM의 SuperCruise와 달리 Drive Pilot이 운전중 사고가 나면 메스세데스가 법적인 책임을 진다고
     * 독일 고속도로에서는 승인이 났고, 미국에서는 2022년 말까지 적용 예정
     * 메르세데스는 작년 말까지 ""레벨 3"" 시스템에 대해 국제 인증을 받은 최초의 자동차 제조업체이며, 올해 말까지 캘리포니아와 네바다에서 이를 달성하는 것을 목표로 함
       → 테슬라의 AutoPilot, GM의 SuperCruise 은 레벨2 임
     * Drive Prilot은 고품질 이미지 처리, LiDAR 스캐너, GPS, Galileo 및 GLONASS 위성의 위치데이터를 수집해서 안내함

   이걸 구독료로 다 뽑지 않을까 싶네요..

   한국에서 리콜도 제대로 안하는데..ㅎㅎ

   벤츠 행보대로라면,,, 다달이 10만원씩 과금할 것 같은...

   지금은 마케팅 + 필드 테스트 아닐까요? 아마 어느정도 안정화되면 Lock(?) 도 차츰 풀릴 것 같기도 합니다.

   벤츠 자율주행 얘기 나올 때부터 들었던 생각이지만, 고속도로에서 시속60 이하가 무슨 의미가 있을지 잘 모르겠네요. 더 개선되어야 쓸만하지, 지금은 그냥 마케팅용 아닌가 하는 생각이..

   마케팅 차원이라고 해도 저는 좋은 시작이라고 봅니다. 경쟁하다보면 더 범위가 늘어나서 언젠가는 모든 도로의 모든 속도에서 커버 되지 않을까요? :)

   네 저도 좋은 시작이라고는 생각하는데, 저걸 예로 들면서 ""테슬라는 이제 끝이야"" 라는 댓글이나 기사가 많이 보여서 약간 반감?적인 생각이 들어서 그런 것 같아요. ㅎㅎ (전 국내에선 엄청 제한되어있는 테슬라 AutoPilot도 나름 편하게 잘 쓰고 있습니다. ^^;)

   고속도로 및 도로에서 사고율이 높은 것이 시속 60이하 일때를 고려해본다면 좀 더 의미가 있지 않을까요?

   근데 통상 신호등이 없는 고속도로라면 속도가 높을 때 사고율이 더 높지 않나 생각이 들어서요. 고속도로에서 60 이하면 출퇴근시의 막히는 상황밖에 못쓰는 거 아닐까요?
"
"https://news.hada.io/topic?id=6209","AWS Cloud Quest 공개 - 클라우드 기술 교육용 온라인 RPG","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                AWS Cloud Quest 공개 - 클라우드 기술 교육용 온라인 RPG

     * AWS 서비스를 이용한 인터랙티브 학습을 통해 클라우드 기술을 배우는 게임
     * 아바타로 도시를 돌아다니다가, NPC가 내는 문제들을 클라우드 솔루션을 이용해서 해결(퍼즐/시뮬레이션/핸즈온 랩 등의 방식)
     * 실제 비즈니스에서 발생하는 문제들로 구성

   이거랑 같이 2015년에 시작했던 AWS Educate도 확장해서 공개했습니다.
   학생이나 직업 교육자 같은 클라우드 미경험자를 대상으로 합니다.
   https://aws.amazon.com/ko/education/awseducate/

   게임은 영어만 지원하지만, AWS Educate 는 한국어도 잘 지원합니다.
   Cloud 101, Machine Learning Foundation, AWS DeepRacer Primer 같은 새 코스가 추가 되었고
   10개의 새로운 실험실과 함께 디자인도 개선되었습니다.
"
"https://news.hada.io/topic?id=6236","Overtone - 오픈소스 협업 프로그래머블 음악 환경 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Overtone - 오픈소스 협업 프로그래머블 음악 환경

     * 새로운 음악적 아이디어를 만들 수 있는 환경
       → 신디사이징/샘플링/악기 제작/라이브 코딩 및 협업 재밍을 지원
     * SuperCollider 엔진 + Clojure 로 만들어진 오픈소스
"
"https://news.hada.io/topic?id=6170","라이트 모드, 다크 모드, 그리고 Gen-Z 모드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      라이트 모드, 다크 모드, 그리고 Gen-Z 모드

     * 밀레니얼이나 그 이전 세대들은 의도적으로 심플하고 깔끔한 UI를 구성하지만,
       Gen-Z 세대에겐 Cheugy(Trendy의 반대말)하고, 지루하고(Boring), 멸균된것처럼(Sterile) 재미 없게 보인다 는 것
     * 비디오 데이팅 앱인 Filteroff가 라이트/다크 모드 외에 Gen-Z 모드라고 하는 별도의 화면 모드를 시험삼아 만들어 봄

   전 glitch.com 정도가 딱 좋더라구요.

   와.. 중간에 보이는 Partiful은 저에겐 정말로 머리가 아프네요.. 전 심각한 올드세대인듯

   츄기/cheugy ?
"
"https://news.hada.io/topic?id=6238","XDM - Xtreme Download Manager","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     XDM - Xtreme Download Manager

     * 다운로드 가속기 겸 비디오 다운로더 오픈소스
     * 윈도우/리눅스/맥 지원
     * 일반 다운로더보다 5-6배 빠른 속도
     * 다양한 비디오 스트리밍 사이트 지원
     * 크롬/FF/등의 브라우저와 잘 연동
     * 비디오 변환기능 내장
     * HTTP/S, FTP, MPEG-DASH, Apple HLS, Adobe HDS 지원

   다운로드 매니저들은 브라우저와 컴퓨터 재시작시에도 이어서 다운로드 받을 수 있는게 좋은 것 같아요.
"
"https://news.hada.io/topic?id=6171","Tailscale이 무료 요금제를 유지하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Tailscale이 무료 요금제를 유지하는 방법

   Tailscale의 구조는 control plane (중앙화된 node 탐색 서비스)와 data plane(비중앙화된 P2P 통신 서비스)로 구성됨 -> 중앙화된 관리, 레이턴시 최소화 외에도 큰 비용 절감 효과

   SaaS 회사에서 주로 지출하게 되는 3가지 비용: 제품 개발, 영업, 판매된 제품의 유지 비용

   유지 비용 (Cost of goods sold, COGS)은 Tailscale 지출의 대부분을 차지함 -> control plane의 스케일링과 운영, DERP 네트워크의 스케일링과 운영, 고객 지원

   Control plane의 사용 리소스(footprint)와 DERP 대신 가능한 많은 시나리오에서 P2P 통신을 사용하여 앞 2개의 비용을 최적화함

   Tailscale 정말 좋아요!

   유지비용 최소화는 SaaS들이 오래동안 버틸수 있게 하는데 정말 중요한 요소라고 생각합니다.
   스타트업이 처음에 일단 MVP를 만드는게 중요하다고는 하지만, 그 MVP 자체도 비용이 적게 들게 만드는 것도 경쟁력.
   그래서 다각도로 공부해봤거나, 이런 저런 경험 많은 사람을 조인 시키는게 스타트업에 큰 도움이 됩니다.
"
"https://news.hada.io/topic?id=6220","Qubes OS - 가장 안전한 운영체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Qubes OS - 가장 안전한 운영체제

   ""A Reasonably Secure OS""
     * Xen기반 가상화로 여러개의 운영체제(Qubes)를 동시에 실행하며 완전히 격리시킴
       → Fedora, Debian, Windows, Whonix
     * 각 OS가 완전 별도의 머신에 설치된 것처럼 동작
          + 사용자의 액션이 여러 기기에서 움직이는 것 처럼 보이게 만들어서 추적을 방지
          + 루트 파일시스템은 공유
          + 각VM에 실행되는 앱들을 동시에 한 화면에서 사용 (GuiVM - Xfce4)
     * 경량 Qube인 Disposable을 실시간 생성해서 뷰어/웹브라우저 같은 앱을 실행하고 자동 파괴하는 형식으로 보안을 강화
     * Whonix를 통해서 Tor 이용
     * U2F(Universal 2nd Factor) Proxy를 이용해서 USB 하드웨어 스택을 다 열어주지 않는 방식으로 2FA 하드웨어 인증 토큰을 안전하게 사용

   HN 댓글에 보니 실제로 매일 사용하는 사람들이 꽤 있습니다.
   https://news.ycombinator.com/item?id=30776103
   동시에 여러 고객들을 상대하면서 서로간에 완벽히 분리된 환경을 구성해야할 때는 괜찮을 것 같네요.
"
"https://news.hada.io/topic?id=6131","Twitter, Shops 기능 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Twitter, Shops 기능 공개

     * 프로필 페이지에서 View Shop 버튼을 눌러서 들어가면 50개까지의 상품을 등록하고 판매 가능
       → 기존 Shop Module 에서는 5개까지의 상품을 바로 노출했으나, Shops 에선 큰 화면에서 다양한 상품을 노출 가능
     * 사용료 없음
     * 현재는 미국 영어권 iPhone 사용자 및 일부 브랜드에만 적용
"
"https://news.hada.io/topic?id=6226","BoxyHQ - Auth0 / WorkOS 의 오픈소스 대체제","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   BoxyHQ - Auth0 / WorkOS 의 오픈소스 대체제

     * SaaS 스타트업에 필요한 엔터프라이즈 대응 기능을 몇 줄의 코드로 추가 가능
       → SAML 기반 Single Sign-On(SSO), Audit Logs, Privacy Vault, RBAC, Directory Sync 등
     * TypeScript + Go 오픈소스

   아직 Privacy Vault, RBAC, Directory Sync 는 Coming Soon 입니다.
   이쪽도 대체제가 여럿 나오고 있으니 비교해서 보시면 좋을것 같아요.
     * Keycloak - 오픈소스 IAM
     * Ory - 오픈소스 Identity 플랫폼
     * SuperTokens - 오픈소스 Auth 서비스

   Show HN 에 올라온건데 댓글에도 위 서비스들과 비교하는 글이 많습니다
   https://news.ycombinator.com/item?id=30767084
"
"https://news.hada.io/topic?id=6214","VRoom - 하이엔드 RISC-V 구현체 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      VRoom - 하이엔드 RISC-V 구현체 오픈소스

     * 클라우드 서버 클래스 수준의 RISC-V 구현체를 목표
     * Out of Order, Super Scalar, Speculative
     * 최대 8 IPC(Instructions per Clock), 목표는 ALU 헤비한 작업에도 평균 ~4 정도
     * 양방향 동시 멀티스레딩 가능
     * 멀티코어
     * 현재 AWS FPGA 인스턴스에서 리눅스 부팅 가능
     * GPL3 라이센스 및 듀얼라이센스 지원
"
"https://news.hada.io/topic?id=6115","ROAPI - 정적 데이터에 대한 Read Only API 생성도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ROAPI - 정적 데이터에 대한 Read Only API 생성도구

     * Apache Arrow 와 Datafusion을 이용하여 코드 작성없이 정적 데이터에 대한 읽기전용 API를 생성해주는 오픈소스
     * SQL/GraphQL/REST API를 Datafusion Plan으로 변환하여 쿼리를 실행
     * 데이터 레이어를 통해서 구글 스프레드시트, Airtable, S3, GCS, JSON, CSV, XLS, Parquet, MySQL 등에서 읽기
     * Arrow, JSON, MessagePack, Parquest 등으로 결과 출력
"
"https://news.hada.io/topic?id=6173","Googleoogle IO 2022

   2022년 5월 11일~12일, Shoreline과 온라인을 통해 라이브로 진행되는 I/O에 참여하세요.
   이제 등록을 마쳤으니 프로필을 사용하여 콘텐츠를 추천받고 이벤트가 진행되는 동안에도 그리고 그 후에도 진행 상황을 추적해 보세요.

   참가 등록하면 뱃지도 주네요.

   sundar pichai' 트윗:
   https://twitter.com/sundarpichai/status/…
"
"https://news.hada.io/topic?id=6215","NVIDIA, Hopper 아키텍처의 H100 GPU 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    NVIDIA, Hopper 아키텍처의 H100 GPU 발표

     * GTC 2022에서 차세대 Hopper™ 아키텍처 와 그 기반의 H100을 발표.
       → Grace Hopper의 이름을 따서 명명. Ampere 아키텍처를 계승
     * 대규모 AI와 HPC를 가속하는 6개의 기술 혁신
          + TSMC 4나노 공정으로 800억개의 트랜지스터를 집적. PCIe Gen5 지원 및 HBM3 메모리를 활용한 최초의 GPU(3TB/s 메모리 대역폭)
          + 새로운 Transformer 엔진으로 이전 세대보다 6배 가속
          + 2세대 보안 Multi-Instance GPU - MIG 기술로 한개의 GPU를 더 작은 조각으로 파티셔닝해서 격리된 작업 수행 가능. 호퍼 아키텍처로 기존세대보다 MIG를 7배 더 향상
          + 최초의 Confidential Computing 가속기로 처리중 AI 모델과 고객 데이터를 보호
          + 4세대 NVIDIA NVLink - 최대 256개까지의 H100 GPU를 9배 더 높은 대역폭으로 연결(기존 NVIDIA HDR Quantum InfiniBand 대비)
          + 새로운 DPX 명령어로 알고리듬/경로최적화/유전체학에 사용되는 ""동적 프로그래밍""을 가속. 이전 세대 GPU보다 7배, CPU보다는 40배 빠르게.
     * 언어 모델인 Megatron 530B를 이전 세대보다 최대 30배 많은 처리량으로 지원

   MS와 Nvidia가 세계 최대규모 언어 모델 MT-NLG 530B를 발표
"
"https://news.hada.io/topic?id=6130","tuql - SQLite DB로 GraphQL 서버 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    tuql - SQLite DB로 GraphQL 서버 만들기

     * 일반 형식의 SQLite DB를 GraphQL Endpoint로 만들어주는 도구
     * 객체간 관계를 추론(belongsTo, hasMany, belongsToMany)
     * 객체 생성,변경,삭제 및 Many-To-Many 관계를 연결하는데 필요한 기본 변환을 자동으로 처리
"
"https://news.hada.io/topic?id=6120","Yao - 웹서비스와 대시보드를 쉽게 생성하는 로우코드 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Yao - 웹서비스와 대시보드를 쉽게 생성하는 로우코드 엔진

     * Go 오픈소스
     * JSON 만을 이용해서 DB 생성, API 구현, 인터페이스 설명 문서 작성
     * GRPC 기반 프로세스 및 플러그인 메커니즘
     * IoT 지원(ARM 에서 실행)
     * CRM 시스템 데모, RFID를 이용한 창고관리 시스템 데모 제공

   중국인 개발자들이 만든 거라 주석이나 문서에서 중국어들이 튀어나오긴 합니다.
   요즘 깃헙에 중국 개발자들이 만든 오픈소스가 점점 더 많이 보이는 것 같아요.

   한국 분들이 만든 플랫폼/엔진 같은 오픈소스도 많아 지면 좋겠습니다.

   좋은 소식 감사합니다.

   요즘 비슷한 컨셉으로 YAML만을 이용해서 코드없이 어드민/백오피스를 만드는
   프로젝트를 하고있습니다. https://github.com/eces/select

   아직은 2명이서 개발중이고 영어 문서도 없지만 샘플도 잘 준비해서 얼른 노력해야겠네요!
   하루가 다르게 멋진 노코드 디자이너나 로우코드 빌더, 엔진이 계속 나오는거 같습니다.

   우와 멋지네요! 정리되시면 Show GN 에도 소개 한번 올려주세요
"
"https://news.hada.io/topic?id=6126","Substack iOS앱 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Substack iOS앱 공개

     * 구독하는 뉴스들을 한번에 볼 수 있는 inbox와 비슷한 앱
     * Substack은 ""유료 뉴스레터를 쉽게 만드는 도구""로 시작했지만, ""작가와 독자가 만나는 네트웍""이 되고자 함
       → 앱은 이 네트워크 비젼의 핵심
       → 기존 메일 구독은 그대로 유지하고, 콘텐츠도 IP도 다 작가가 소유
       → 하지만 더 쉽게 구독이 가능하고, 새로운 콘텐츠 발견이 쉽도록 추천하고, 사람들의 프로필을 보고, 앱내 노티피케이션등을 가능케 함
       → 일반 RSS 도 reader.substack.com 통해서 구독 가능
     * 안드로이드용 앱은 Waiting List 등록중

   Substack’s app: building the VC moat
   앱설치하고 ""앱 노티를 켜면 서브스택 이메일은 끄는 기능""이 있다는 것에 주의 해야 한다고

   제가 구독하는 이메일 뉴스레터중에 서브스택인 것은 30~40 퍼센트 밖에 되지 않아서 저는 그냥 메일 구독에 머무를 것 같기는 한데요. 정말 저 앱이 해자가 될지는 지켜봐야 할듯
   괜히 미디엄 같은 방향으로는 나가지 않기를..

   앱 발표하면서 HN에서 Subtack 창업자들이 Ask Us Anything을 진행했습니다.
   위 뉴스 내용중 비전 부분은 AUA 내용중에서 가져왔습니다.
   https://news.ycombinator.com/item?id=30632952

   Stibee, Heybunny 같은 국내의 뉴스레터 관련 플랫폼들도 잘 챙겨봐야 할 내용인듯 합니다.
"
"https://news.hada.io/topic?id=6232","LibreWolf - 개인정보 보호/보안/자유에 중점을 둔 Firefox 포크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              LibreWolf - 개인정보 보호/보안/자유에 중점을 둔 Firefox 포크

     * No Telemetry
     * Private Search : DuckDuckGo, Searx, Qwant
     * uBlock Origin 기본 포함
     * 개인정보 보호 향상
     * 항상 최신 버전의 Firefox 를 이용하여 빌드

   파이어폭스 프로필 생성기 (스폰서 광고, 사용 관련 데이터 전송, 각종 핑거프린팅 관련 API 비활성화) 생각나는군요 https://twitter.com/lunamoth/status/1456990261540638721

   파폭이 원래도 개인정보에 엄청 강점을 두고 있다가
   이번에 광고가 뜨기로 되어서 이런 포크도 생기는군요
"
"https://news.hada.io/topic?id=6136","Show GN: P2P Remote Desktop - Open Source - alternative to TeamViewer - AnyDesk ...","                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Show GN: P2P Remote Desktop - Open Source - alternative to TeamViewer - AnyDesk ...

   Portable, No Configuration or Installation Needed.
   GitHub: https://github.com/miroslavpejic85/p2p
"
"https://news.hada.io/topic?id=6204","dav1d 1.0.0 릴리즈 - 오픈소스 크로스플랫폼 AV1 디코더","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 dav1d 1.0.0 릴리즈 - 오픈소스 크로스플랫폼 AV1 디코더

     * 완전한 C 구현체
     * 속도를 위해 별도로 작성된 18.5만 라인의 손 작업 어셈블리 코드
          + x86_64(SSE3, AVX2), ARMv7 과 ARMv8 모두
     * AVX-512 가속 지원
     * GPU 가속을 위한 새 API 추가
     * 오류 발생시 디코딩 실패한 프레임 정보 리턴하는 API 추가

   Netflix, 안드로이드에서 AV1코덱으로 스트리밍 시작
"
"https://news.hada.io/topic?id=6191","Avvvatars - React용 Avatar 플레이스홀더 생성기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Avvvatars - React용 Avatar 플레이스홀더 생성기

     * 다양한 색상/모양의 아바타를 생성해주는 오픈소스
          + 40개의 유니크 컬러, 60개의 유니크 쉐이프
     * 사용자명/이메일 기반 문자 아바타 생성 (John Doe 는 JD)
     * 그림자, 크기 조절, 대체 텍스트등 커스터마이징 가능
"
"https://news.hada.io/topic?id=6224","모질라 개발자 사이트 MDN Plus 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        모질라 개발자 사이트 MDN Plus 공개

     * 프리미엄 구독 서비스
     * 3개의 기능 공개
          + Notification : 특정 문서 변경, CSS 기능 런치, API 사용 가능등의 알림 받기
          + Collections : 자주 보는 문서들 모아보기. 기기간 동기화
          + Offline : PWA로 오프라인 상태에서도 브라우징 지원
     * 3가지 구독 플랜
          + MDN Core : 기간제 무료 트라이얼
          + MDN Plus 5 : 위 3가지 기능을 무제한 이용 가능. 월 $5 / 년 $50
          + MDN Supporter 10 : Plus 5 및 신규 기능 얼리억세스와 MDN 팀과의 다이렉트 피드백 채널 제공. 월 $10 / 년 $100
"
"https://news.hada.io/topic?id=6132","Tygo - Go 소스에서 Typescript 타입들 생성하는 도구 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Tygo - Go 소스에서 Typescript 타입들 생성하는 도구

     * 백엔드 REST API를 Go로 개발하고, 프론트를 Typescript로 개발할 경우에 필요한 Type들을 자동으로 생성해주는 도구
     * Reflection 기반의 방법과 달리, 코멘트를 유지하고, 상수를 이해하며, 비구조체 type 표현식도 지원

   Golang 의 struct 를 통해서 API만들어내는 프로젝트가 꽤 있더라고요.

   Protocol Buffer 의 .proto 파일을 go struct 을 통해서 만들어내는 게 대표적이죠. 그러니깐 원래 protobuf의 사용의 반대 순서죠. Etcd와 k8s가 그렇게 하고 있는 모양입니다: https://github.com/gogo/protobuf
"
"https://news.hada.io/topic?id=6227","Payments가 세상을 먹어치우고 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Payments가 세상을 먹어치우고 있다

     * JP Morgan의 29p PDF 보고서
     * ""2010년에 뉴욕에서 런던으로 돈을 보내는 가장 빠른 방법은 JFK에서 히드로 공항으로 직접 돈을 들고 가는 것이었다""
     * POWER+ Framework를 통해 한 꼭지씩 설명
          + Platforms : 슈퍼앱, 중국 vs. 글로벌
          + Online : 이커머스, 디지털 아이덴티티, Gig 이코노미, 창작자 이코노미
          + Wallets : 지갑과 로열티, 암호화폐, 스테이블코인, CBDC(중앙은행 디지털 화폐)
          + Embedded : 커넥티드 카, 웨어러블, IoT, 가상세계, 네오뱅크, Banking-as-a-Service, 인프라와 오픈데이터, Buy Now Pay Later
          + Real time : 국제 무역, 돈 이체와 송금(Money transfer and remittances)

   PDF 파일 크기가 작아서, 구글 번역에 넣고 돌리면 대충 볼만하게 번역되네요. 후다닥 보실 분들은 참고하세요.

   보고서 맨 첫 문장인 ""뉴욕에서 런던으로 송금하는데 가장 빠른 건 비행기타고 가는거였다""를 보고 나니,
   넷플릭스의 Inventing Anna(애나 만들기)가 가능했던 이유 중 하나가 저거였겠구나 생각이 들었어요.
   안보신 분들께 추천합니다. ^^;
"
"https://news.hada.io/topic?id=6243","SaaS기업의 비밀 : 왜 멀티테넌시가 중요한가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       SaaS기업의 비밀 : 왜 멀티테넌시가 중요한가

   ""Multitenancy는 SaaS의 확장성을 훌륭하게 만드는 숨겨진 기반""
     * SaaS 모델의 높은 마진과 무한해 보이는 확장성은 주식시장/투자자/창업자들이 이 분야에 뛰어드는 이유
     * 그것을 가능하게 하는 것은 바로 인프라, 특히 ""멀티테넌시"" 개념
     * 오늘날 거의 모든 회사는 클라우드와 SaaS를 이용하며, 클라우드 솔루션 구현의 핵심은 바로 멀티테넌시임
     * 세일즈포스 창업자인 Marc Benioff는 ""멀티테넌시는 SaaS 벤더가 성공하기 위한 필수 사항"" 이라고 했음
     * 정확히 멀티테넌시는 무엇이고 왜 중요한가?

멀티테넌시 : 지하철 시스템 구축

     * 싱글 테넌시를 먼저 이해하자
          + 각 고객은 하나의 고유한 어플리케이션과 데이터베이스를 사용
          + 즉 100명의 고객이 있다면, 100대의 서버와 100개의 어플리케이션과 100개의 DB가 있다는 것
          + 싱글 테넌시는 대규모로 유지관리 하기 위해 많은 시간,돈,노력이 듬
     * 교통 관점에서 생각해보면 출근을 위해 차를 몰거나 지하철을 탈 수 있음
          + 차를 몰면 편하지만, 자동차 비용, 유류대, 주차비, 추가로 교통 체증과 공해등에 비용을 지불해야함
          + 지하철을 타면 비교적 저렴하고 도로를 깨끗하게 유지하고 오존층을 덜 파괴함
     * 세계 무역 센터(WTC)에 있는 5만 명의 모든 노동자가 차를 몰고 간다면 하나의 복잡한 시스템을 가지게 될 것
     * 그래서 지하철과 같은 멀티테넌시가 생성되어 비용과 간접비를 줄이고 환경의 '혼돈'을 크게 줄였음

왜 지금일까 ?

     * 지하철로 갈아타는 이유는? 그게 정말 좋다면 왜 지금까지 이것이 선택되지 않았을까 ?
     * 그 해답은 ""클라우드""에 있음. 클라우드 컴퓨팅과 SaaS 비즈니스의 인기가 폭발적으로 증가중
     * 퍼블릭 시장을 보면, 예전에 셀프호스팅 제품을 공급하던 회사들이 빠르게 클라우드로 눈을 돌리고 있음
     * Atlassian, Autodesk, Elastic, Microsoft 같은 회사들이 클라우드 호스팅 솔루션을 제공하여 폭발적인 매출 성장을 기록중
     * Atlassian은 지난 분기에만 1만명 이상의 고객을 추가했음. 1만명의 고객을 싱글테넌시로 유지한다면 개별 엔지니어링 작업, 자원 관리, 복잡성 및 핵심 비즈니스 문제를 해결할 인재의 고갈로 회사가 어려워 질 것
     * 따라서 초기 스타트업은 'Quick-and-Dirty(빠르게 간단히 만든)' 싱글 테넌시 환경에서 시작하는 것을 선택할 수는 있지만, 규모가 커지고 성장하기 시작하면 불가피하게 멀티테넌트 환경에서만 해결할 수 있는 기술적 부채에 직면하게 됨
     * 클라우드 컴퓨팅 및 SaaS 비즈니스가 성장하면서, 싱글 테넌트 솔루션의 오버헤드도 커지고, 멀티테넌시에 대한 요구도 커짐

멀티테넌시의 장점

     * 멀티테넌시는 SaaS 벤더들에게 많은 마법을 부여함
     * 고객 기반 전반에 걸쳐 인프라를 공유하는 능력은 게임체인저임
     * 멀티테넌시가 제공하는 장점은 스케일 말고도 몇 가지 비밀이 있음

  판매 수익(Margins)

     * 공유된 인프라를 활용하는 것은 인프라가 더 많이 사용될수록 공급업체의 수익에 직접적인 영향을 줌
     * 멀티테넌트는 인력과 소프트웨어/하드웨어 비용면에서 직접(판매된 제품의 비용 측면) 및 간접(주요 인력들이 에너지를 다른곳에 집중 가능하다는 측면)에서 더 적은 리소스를 요구
     * 이로인해, 총 마진이 증가하고 결국 시장에서 더 높은 밸류에이션을 받을 수 있는 잉여 현금 흐름(Free Cash Flow)이 발생

  가시성(Visibility)

     * 멀티테넌시의 사용은 인프라의 성능을 이해하거나 특정 고객 그룹에게 비용이 반영되는지를 아는데에 매우 유리
          + 데이터는 통합 또는 고객별로 쿼리가 가능해야함
     * 싱글테넌트 인프라에서는 고객 데이터가 분산되어 있기에 Cross-Customer 지표를 분석하는 것은 매우 어려움
     * 그러나 멀티테넌트 인프라에서는 전체 고객 기반을 보면서 거시적 트렌드를 확인할 수 있음
          + 이는 로깅, DB 단위나 어플레이션 성능 모니터링 수준에서 확인 가능하여 Cross-Functional Team에 큰 이점이 됨

멀티테넌시의 복잡성

     * 모든 '마법'에는 문제가 있고, 멀티테넌시도 예외는 아님

  문제1: 가용성과 시끄러운 이웃

     * 이커머스 하나가 모든 고객데이터를 한DB에 저장한다고 할 때, 대부분의 사용자가 한달에 한두개씩만 사지만, 한 사용자는 매일 5천개씩 산다고 가정해보면
          + DB가 이런 고객의 급증하는 부하를 처리 할만큼 충분히 강력하지 않으면 전체 DB가 다운되고 다른 고객이 구매를 못할 수 있음
     * 이건 큰 도전이고, 데이터 파티셔닝 결정으로 이어짐
          + Silo 파티셔닝(테넌트당 DB분리) vs. Pooled 파티셔닝(테넌트간 DB공유)
          + Silo 파티셔닝은 몇몇 고객의 문제를 해결할 수는 있으나, 그러면 원래의 문제로 돌아가서 수많은 인스턴스를 관리해야 함
          + Pooled 파티셔닝은 잘 동작하지만, 한 명의 고객이 부하를 일으켜서 문제가 생기면 느려지거나 시스템 다운으로 연결됨

  문제2: 공유 자원과 데이터 보안

     * 모든 고객이 같은 자원을 이용하며, 멀티테넌트의 표준 구현체 라는 것이 없기 때문에, 서로 다른 테넌트 간에 데이터가 교차되는 기술적 버그가 있을 수 있음.
     * 서로 경쟁하는 고객을 동시에 서빙하고 있다면 아주 위험할 수 있는 문제
     * 기술팀은 데이터 주권 법(Data Sovereignty Laws) 및 테넌트 격리에 영향을 미치는 규정 등을 평가 해야함

복잡성 해결

     * 멀티테넌트는 SaaS 어플리케이션의 주요 기둥(Pilar)중 하나가 되었지만, 아직 구현단계에서 고려해야할 복잡성이 많음.
     * Cloudinary의 CEO는 ""멀티테넌시는 운영 탁월성(Operational Excellence)을 달성하는 핵심이지만, 제대로 하기 위해서는 많은 지식과 투자를 필요로 한다""라고 강조.
     * (이 글을 쓴) Boldstart 와 F2는 이런 멀티테넌시의 문제점을 해결하는 스타트업(현재 스텔스 모드)에 투자했음
     * 멀티테넌트 시스템엔 복잡한 것이 많지만, 싱글테넌트 시스템에서 확장 시에 생기는 기술적 부채를 생각하면 더 이상 고민할 필요가 없음
          + 이 기술 부채를 해결하기 위해서 최고의 엔지니어 팀을 투입하고 핵심 비즈니스가 아닌 부분에 자원을 소비하게 되기 때문에
          + 똘똘한 스타트업들은 아예 처음부터 멀티테넌트 환경을 계획해서 만들고 유지하는 것을 선택함
"
"https://news.hada.io/topic?id=6225","Nebullvm - AI Inference(추론)를 5~20배 가속하는 오픈소스 라이브러리 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Nebullvm - AI Inference(추론)를 5~20배 가속하는 오픈소스 라이브러리

     * AI 모델을 입력 받아 빠르게 실행하는 최적화 버전을 만들어 줌
     * 여러개의 딥러닝 컴파일러를 테스트하여 특정 하드웨어에 최적의 방법을 찾아냄
          + 딥러닝 모델 Agnostic : 트랜스포머, LSTM, CNN, FCN 등 딥러닝 모델 상관없음
          + 하드웨어 Agnostic : 대부분의 CPU와 GPU 지원. 곧 TPU 및 딥러닝 전용 ASIC 도 지원 예정
          + 프레임워크 Agnostic : PyTorch, TensorFlow, HuggingFace 및 다른 것들도 곧 더 지원
     * 모든 것은 로컬에서 실행되어 안전함
     * 몇 줄의 코드만으로 사용 가능해서 쉬움

   (도서관 저자) 공유해주셔서 감사합니다! 즐겁게 작업하셨다니 다행입니다.
   계속 진화하고 성능이 향상될 것입니다... 행복한 가속!
"
"https://news.hada.io/topic?id=6114","트위터, Tor 용 Onion 서비스 시작 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        트위터, Tor 용 Onion 서비스 시작

     * Tor 브라우저에서 트위터 사이트 직접 접속 가능하도록 Onion 주소를 개설
     * 페이스북, BBC, NYT의 Onion 사이트 개설을 가이딩했던 Alec Muffett이 이번에도 참여
     * Alec의 EOTK(Enterprise Onion Toolkit)을 도입하여 트위터에 맞게 수정

   Alec은 트위터 직원이 아니고, 큰 회사들이 Onion 서비스를 도입하도록 돕는 일을 하고 있습니다.
   Browsing-Over-Tor 를 통해서 트위터 접속도 가능은 하지만, https://twitter3e4tixl4xyajtrzo62zg5vztmjuricljdp2c5kshju4avyoid.onion/… 라는 Onion 주소를 통해서 직접 접속할 수 있게 됩니다. ( Onion 링크는 Tor 브라우저에서만 접속 가능합니다 )
"
"https://news.hada.io/topic?id=6223","Kagi Search - 빠르고 사용자 중심적인 검색 엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Kagi Search - 빠르고 사용자 중심적인 검색 엔진

     * 텔레메트리, 광고가 없고 개인정보 수집하지 않는 깨끗한 인터페이스
     * 개인화된 검색 제공
     * 휴리스틱과 딥러닝을 이용하여 쿼리 의도를 이해하여, 최상의 정보 소스를 선택하고, API로 가져와 결과의 순위를 지정 ( ""검색 클라이언트"" 처럼 동작 )
          + 구글, 빙 같은 기존 검색 인덱스
          + 위키피디아, DeepL 및 기타 API 및 버티컬 소스들
          + 그외 다른 비 상업용 색인들을 사용(Teclis , TinyGem)
     * 사용자 프라이버시 존중
     * 프라이빗 베타 진행중에는 무료
          + 정식 런칭시 엔트리 레벨은 월/$10
          + 무제한 플랜은 이메일 및 다른 기능과 함께 월 $20~30 예상

   차라리 Perplexity.ai가 훨씬 낫습니다. 이건 억지로 LLM 기반 기능을 가져다 붙여놓은 느낌이네요

   6/1 부터 유료화가 시작되었네요. 갑자기 검색이 안되어서 깜짝 놀랐어요. 가격은 월에 $10 (한화로 13,400원) 입니다. (무료 검색 제공 범위가 어느정도인지는 눈에 잘 안 띄네요...)

   저는 몇주 써보니 검색 결과가 그다지 인상적이지 않아서, 다시 구글로 복귀했습니다.
   유료화 하기엔 아직 이른 것 같아요.

   저도 오늘 베타 가입되어서, Firefox 기본 검색엔진으로 놓고 써보겠습니다.
   site:hada.io kagi 같은 식으로 사이트 검색도 되고 깔끔하게 나와서 일단 첫인상은 좋네요.
   그런데 엔트리도 월 만원이라니... 고민되네요.

   베타신청했는데 초대장이 조금 늦는군요..ㅎㅎ
   구글 검색 상단에 공식사이트 보다 원하지 않는 검색결과들이 많이 나오고 있어서 피곤했는데,
   한번 써봐야겠습니다.

   이제는 이런 유료 검색엔진이 더 좋을 수 있다는 생각이 드는군요. 광고 기반의 무료 서비스들은 점점 뒤쳐지고 있는 것 같습니다.

   베타 가입해서 좀 써보고 올리려다 늦어졌는데요.
   한국어 검색에서도 꽤 괜찮은 검색 결과를 보여줍니다.

   구글 검색이 죽어가고 있다
   구글은 이제 꽤 많은 중요한 카테고리들에서 고품질 검색결과가 나오지 않는다
"
"https://news.hada.io/topic?id=6122","500라인으로 만드는 리눅스 컨테이너 (2016)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      500라인으로 만드는 리눅스 컨테이너 (2016)

     * C 코드
     * 리눅스 컨테이너를 구성하는데 필요한 기본 메커니즘을 소개하고, 구현한 코드에 대한 설명
       → Namespaces, Capabilities, cgroups , setrlimit, Mounts, System calls
     * orgmode 문서

   리눅스 컨테이너란?

   비슷한 내용이지만, Go 로 설명한 발표 동영상도 있습니다.

   GOTO 2018 - Container from Scratch https://www.youtube.com/watch?v=8fi7uSYlOdc
"
"https://news.hada.io/topic?id=6183","뉴비 PO 첫 2달간 뭐했니?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            뉴비 PO 첫 2달간 뭐했니?

   2개월차 PO, 무엇을 도전 했고 어떻게 하고 있나? 삽질은 삽질인데 과연 잘하고 있는 삽질인가?

   po 맞나요..?

   아 혹시 하는 일이 po의 범위를 벗어난거 같은 질문이었을까요? ㅎ

   product owner 맞습니다!
"
"https://news.hada.io/topic?id=6117","M1 Ultra Geekbench Scoreltra Geekbench Score 1793/24055

     * M1 Ultra (20코어) : 싱글코어 1793, 멀티코어 24055
     * 인텔 Xeon W-3275M (2019 Mac Pro,28코어) : 1152/19951
     * 인텔 i9-12900K (16코어) : 1997/17201
     * AMD Threadripper 3990x (64코어) : 1213/25133
     * AMD 5950x (16코어) : 1686/16564
"
"https://news.hada.io/topic?id=6154","Google Domains 베타 종료하고 정식 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Google Domains 베타 종료하고 정식 출시

     * 구글이 운영하는 도메인 레지스트라
     * 2015년 런치해서 7년간의 베타 종료하고 GA로
     * 26개국, 300개의 TLD 지원
     * 2FA, 프라이버시 보호, DNSSEC 등의 기능 기본 지원
     * 런칭 기념 할인 행사중 : 페이지에 나온 DOMAINS20 은 20% 코드(최대$5)이고, FRIENDSOFDOMAINS 를 넣으시면 25% 할인(최대 $10) 됩니다. 1개 도매인 등록 및 트랜스퍼에 적용됩니다.

   이미 사용중인 분들에겐 30%(최대 US$10) 쿠폰을 메일로 지급해주고 있습니다. 여태 베타인줄도 모르고 쓰고 있었네요.

   어차피 10달러 한정인데 막 공유 가능한 코드가 아니어서 아깝네요 ㅎㅎ

   26개국 리스트에는 한국은 없습니다. 빌링어드레스가 지원하는 26개 국가에 있을때만 도메인 구입이 가능하다고 나와있긴 한데요. 저는 잘 구입하고 쓰고 있어서.. 이유가 뭔지를 잘 모르겠습니다. ㅡ.ㅡ;

   Gmail 로 개인 도메인 이메일주소 만들기 https://xguru.net/1963
   위 작업 하면서 구글도메인으로 옮겨서 잘 쓰고 있습니다.
"
"https://news.hada.io/topic?id=6242","스타트업 피치 덱 체크포인트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            스타트업 피치 덱 체크포인트

    1. Cover page: 우리는 누구인가?
    2. Vision Statement: 우리는 무엇을 위해 존재하는 스타트업인가?
    3. Problem: 우리가 풀고자 하는 문제는 무엇인가?
    4. Solution: 우리의 솔루션은 고객에게 어떤 가치가 있는가?
    5. Why Now: 우리는 왜 지금 시장에 문을 두드리는가?
    6. Market Size Opportunity: 우리가 목표하는 시장이 우리를 채택해야 하는 이유는 무엇인가?
    7. Product: 우리의 제품은 남들과 무엇으로 구별되는가?
    8. Business Model: 우리는 어떻게 수익을 창출하고 있는가?
    9. Traction: 우리가 이 시장을 견인하고 있는 근거는 무엇인가?
   10. Competition: 우리의 경쟁자는 누구이고, 그 들과의 경쟁에서 어떻게 극복해오고 있는가?
   11. Unique Advantage: 우리가 경쟁자에게는 없는 특별한 이점은 무엇인가
   12. Team: 우리의 팀이 이루어낸 성과의 원동력은 무엇인가?
   13. Growth Road-map: 우리는 앞으로 어디까지 성장할 수 있는가?
   14. Financial plan: 우리의 경영의 제무 계획은 얼마나 합리적인가?
   15. Fundraising Closing: 우리에게 투자유치란 무엇인가?
"
"https://news.hada.io/topic?id=6162","ARM, 직원의 최대 15%(약1000명)를 감원 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ARM, 직원의 최대 15%(약1000명)를 감원 예정

     * CEO Rene Haas가 직원들에게 감원내용이 포함된 이메일 발송

     ""경쟁을 유지하기 위해 중복 작업을 제거해야 합니다. 미래 성공에 더 이상 중요하지 않은 작업을 중단합니다.""

     * CEO가 된지 한달된 Haas는 ""비용과 투자 대상을 좀 더 엄격해야 관리한다"" 라고 덧붙임
     * ARM의 직원은 전세계 6400명 가량으로 절반이 영국에 거주

   Nvidia, ARM 인수 중단 발표

   https://news.ycombinator.com/item?id=30684888
   HN 댓글에 보니.. ARM이 지난 5년간 직원수를 두배로 늘렸지만 한게 없다는 얘기도 있네요.

   RISC-V 쪽으로 옮기는 사람들이 더 많아 질지도 모르겠네요.
"
"https://news.hada.io/topic?id=6139","Undocumented Web API 사용하는 법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Undocumented Web API 사용하는 법

    0. 브라우저가 하는 동작을 분석해서 그대로 사용하기
       → 예제는 구글 Hangout
    1. 개발자 도구를 통해서 JSON 응답 찾기
    2. Copy as CURL로 복사하고 gunzip으로 풀기
    3. 관련없는 헤더 제거하기
    4. 파이썬으로 변환하기

     * CurlConverter를 이용하면 Curl을 자동으로 파이썬 코드로 변환가능
     * 챙겨야할 문제들 : 세션쿠키 만료 와 어뷰징
     * 누구든지 당신의 Undocumented API를 사용할 수 있다는 것을 명심할 것

   웹개발자 분들은 copy as fetch, copy as node.js fetch를 사용하면 거의 한번에 해결됩니다.
"
"https://news.hada.io/topic?id=6230","Librem 5 :  리눅스 스마트폰의 첫 인상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Librem 5 : 리눅스 스마트폰의 첫 인상

     * Debian 에서 파생된 PureOS 사용
     * 모뎀/마이크/WiFi/블루투스 하드웨어 킬스위치 제공
       → 이 폰의 중요 셀링 포인트는 ""Don't spy on you""
     * 필자는 이전에 Ubuntu Touch로 운영되는 OnePlus One 을 사용하다가 교체했음
       → ""예상외로 많은 것이 잘 동작하며 기존 폰보다 훨씬 빠르고 반응도 훌륭""
       → 알루미늄 바디라서 꽤 무거움
       → 배터리는 좀 더 빨리 다는 것 같고, 카메라도 느리고 성능이 좋지는 않음
"
"https://news.hada.io/topic?id=6152","AltDrag의 대체제 AltSnap","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          AltDrag의 대체제 AltSnap

   Alt-Drag(https://stefansundin.github.io/altdrag/)은 키보드 Alt +마우스 Click & Drag로 화면에 떠 있는 창들을 손쉽게 이동할 수 있는 방식을 사용할 수 있게 해주는 윈도용 유틸리티 입니다.

   반드시 창의 타이틀바를 클릭해서 창을 이동하는 불편함과는 달리 Alt-Drag를 이용하면 Alt키를 누르고 창의 아무곳에나 클릭해서 창을 이동할 수 있습니다.

   Alt-Drag는 2015년의 1.1버전 릴리즈를 끝으로 더 이상 개발되고 있지 않고 있어 최신 Win11등에서 사용하려면 몇가지 트윅이 필요한데 이 와중에 AltSnap이라는 대체제가 나타났습니다.

   주요 특징
     * AltDrag의 코드를 거의 그대로 이어 받기는 하지만 기존 코드베이스 중에서 가장 버그가 많았던 부분을 과감하게 제거
     * Windows 11과의 호환성 증가 (Win 11에서 Alt-Tab시 나타나는 화면 전환기를 블랙리스트 처리)
     * 임의로 창의 투명도 변경 가능
     * 다국어 지원 (한국어 포함)
     * 테스트 윈도우 여러개를 만들고 위치를 레이아웃으로 저장
     * Alt + 우클릭으로 창 사이즈 변경
"
"https://news.hada.io/topic?id=6181","구글 Universal Analytics 내년부터 지원 중단, Google Analytics 4로 전환하세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      구글 Universal Analytics 내년부터 지원 중단, Google Analytics 4로 전환하세요

     * 2년반 전에 GA4를 출시했고, 2023년부터 이전 세대인 Universal Analytics는 지원을 중단하기 시작할 예정
     * GA4는 여러 플랫폼에서 작동하며, 쿠키에만 의존하지 않고, 이벤트 기반 모델을 사용하여 사용자 중심 측정을 제공
          + 프라이버시 중점으로 설계. 더 이상 IP주소를 저장하지 않음(GDPR등 대응)
     * 모든 표준 UA속성들은 2023년 7/1부터 처리가 중단되며, 360 UA는 2023년 10/1부터 중단. 그 이후엔 6개월간만 기존 데이터 접속 가능
"
"https://news.hada.io/topic?id=6229","AI로 가짜뉴스, 딥페이크, 이를 전파하는 소셜 미디어 봇 판별하는 방식","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                AI로 가짜뉴스, 딥페이크, 이를 전파하는 소셜 미디어 봇 판별하는 방식

   1.영국 기업 로지컬리
     * 머신러닝과 자연어 처리 기술, 사람 지능을 결합해 언론 보도 신뢰성을 평가함
     * 로지컬리 웹 브라우저 확장 프로그램은 10만여 발행처에서 나온 믿을만한 기사와 함께 내용 맥락을 살펴봄
     * 이어 정보 출처와 기사 신뢰성 등을 평가함
     * 연구 파트너의 전문가 평가와 AI 예측에 기반해 믿을 수 있거나, 믿어선 안될 정보 출처를 사용자에게 알려줌.
     * AI는 기사 내용, 저자 평판과 전문지식, 기사가 소셜 미디어에 유통된 방식을 토대로 기사 신뢰성 여부도 예측함
     * 사용자가 사실 확인을 요청하면 팩트체크 팀이 조사해서 결과를 알려줌

   2.영국 기업 팩트마타
     * 머신러닝, 자연어 처리 기술로 온라인 콘텐츠를 분석해서 가짜 뉴스를 발견함
     * 팩트마타는 인터넷에서 만들어진 핵심 주장을 모두 추출하고 이를 한데 모으는 엔진을 구축함
     * 12가지 측면에 걸쳐 콘텐츠를 채점하고 분류하는 알고리즘도 설계함
     * 논란·비객관성·혐오 발언·인종차별·성 차별·독성·외설·언어 위협·지나친 당파성·낚시성 링크 등이 12가지 측면
     * 이는 선전, 허위정보 또는 가짜 뉴스가 될 수 있는 콘텐츠의 언어 특징임
     * 팩트마타는 해당 엔진과 알고리즘으로 브랜드, 상품, 온라인 현안에 대한 가짜 뉴스와 혐오 발언을 찾아냄

   3.미국 온라인 플랫폼 봇 센티넬
     * 머신러닝으로 누군가를 괴롭히는 계정, 허위정보를 퍼뜨리는 계정 등을 탐지함
     * 운영진은 계정 수천개와 트윗 수백만개를 이용해 트위터 계정을 분류하도록 머신러닝 모델을 학습시킴
     * 먼저 트위터 규정을 반복해서 어기는 계정을 찾음
     * 운영진이 ‘문제있다’고 확인한 계정과 비슷한 계정을 분류하도록 모델을 학습시킴
     * 계정은 ‘정상(normal)’, ‘충분한(satisfactory)’, ‘지장을 주는(disruptive)’, ‘문제있는(problematic)’으로 분류하고, 각 계정에 점수(%)를 매김
     * 점수가 높을수록 이 계정은 문제있을 가능성이 높음

   4.미국 기업 메타(페이스북)
     * AI로 딥페이크 비디오를 탐지하는 시스템을 개발함
     * ‘딥페이크 디텍션 챌린지’를 위해 의뢰한 데이터셋에 있는 비디오로 모델을 학습시킴
     * 다중 생성적 적대 신경망도 학습에 활용함
     * 메타는 자사 시스템이 이전에 못 본 새로운 딥페이크 비디오를 확인하도록 새 데이터 합성 기술을 사용해 모델을 거의 실시간 업데이트함
     * 새로운 딥페이크 비디오를 탐지하면 비슷한 딥페이크 사례를 새로 만듦
     * 이를 딥페이크 비디오 탐지 모델의 대규모 학습 데이터로 활용함
"
"https://news.hada.io/topic?id=6174","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.
     * 소설을 적고
     * 코딩을 합니다.
     * 요즘 데일리 리포트 / 스탠드업 미팅(1인용) 을 하고 있는데, 이걸 주말에 좀 더... 괜찮게? 하는 방법을 고민해보려고 해요.

   그리고 개인적인 목표로는... 제 글쓰기 실력을 좀 더 다듬어서 GN에 올릴만한 글을 만들어보는 것도 있습니다. 개인적인 습관 같은 걸 한번 올리고 싶네요.

   오랜만에 엄마보러 갑니당. 맛있는거 먹고 오겠읍니다..

   지인 찬스로 콘서트에 갑니다~

   10년전 같이 일했던 팀원들과 난지캠핑장으로 글램핑을 갑니다.
   간만에 고기 구우면서 불멍도 하고 늦게까지 보드게임을 할 것 같아요!
   난지캠핑장은 서울안에 있어서 가깝고 좋은듯합니다. 다만 예약하기가 아주 힘든게 문제
"
"https://news.hada.io/topic?id=6190","이 달의 CT 스캔 : 식품 포장재","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          이 달의 CT 스캔 : 식품 포장재

     * 매달 CT 스캐너로 특정 물품을 상세히 찍어서 공개하는 페이지
     * 스크롤 하면서 물체를 회전시키며 내부/관련기술/시장을 설명하는 형식
     * 플라스틱 병뚜껑 시장은 연 $40b(48조원)규모의 시장이며 계속 성장중
          + 하인즈 케첩 뚜껑
          + Huy Fong 스리라차 소스 뚜껑
          + Vita Coco 코코넛 워터 뚜껑

   아카이브에서 기존 것들을 모두 볼 수 있습니다. https://www.scanofthemonth.com/scans
"
"https://news.hada.io/topic?id=6219","Spotify와 구글, 결제 방식을 선택할 수 있는 User Choice Billing 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Spotify와 구글, 결제 방식을 선택할 수 있는 User Choice Billing 발표

     * 구글 플레이 스토어에서 다운받은 Spotify 앱에서 스포티파이 자체 결제 또는 구글 결제를 선택 가능
     * 이를 위해서 구글과 다년간의 계약을 했고, 전세계에서 이를 사용 가능하게 롤아웃 예정

   구글 플레이에서 대한민국 이용자를 위해 개발자 제공 결제 시스템 적용이 가능해집니다
   위 항목을 세계 최초로 적용한게 스포티파이가 되었네요.
   정기결제시 수수료는 15% 인데 자체 결제를 하게되면 11%로 해주니까, 매출이 큰 스포티파이 입장에서는 추가 수익분도 무시 못할 것 같긴 하네요.

   와~ 이런 딜이 가능했군요~ 대단!!!
"
"https://news.hada.io/topic?id=6186","Mage - AI로 데이터에서 예측 해주는 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Mage - AI로 데이터에서 예측 해주는 도구

     * AI에 대한 지식 없이도 제품 추천, 개인화, 분류 등에 필요한 예측 모델을 구축/훈련/배포 가능한 도구
     * 기본 유스 케이스 제공
          + Ranking, Churn Prediction, Categorization, Estimation, Customer Life Time Value, Lead Scoring 등
     * 몇줄의 코드만으로 실시간 AI 예측 기능 이용 가능
"
"https://news.hada.io/topic?id=6146","ws4sqlite - SQLite를 REST로 이용하게 해주는 서버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ws4sqlite - SQLite를 REST로 이용하게 해주는 서버

     * 한개 이상의 SQLite 파일에 대해서 REST(JSON over HTTP)로 쿼리 가능하게 해주는 Go 오픈소스
          + SQLite에 원격 접속 필요한 서버리스 등에서 사용 가능
     * 실행파일 1개로 바로 서버 실행
          + 여러개의 .db 파일 동시 서빙 가능
          + 인메모리 DB도 지원
     * Java/Go 클라이언트 라이브러리 제공
     * 각 JSON 호출이 트랜잭션으로 처리
     * CORS 모드 제공(각 DB당 설정가능)
     * WAL(Write Ahead Logging) 기본으로 활성화(비활성화 가능)
     * 약 900라인의 컴팩트한 코드베이스
     * amd64/arm32 도커이미지 제공
"
"https://news.hada.io/topic?id=6123","듀얼스크린 과 폴더블용 웹 레이아웃 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        듀얼스크린 과 폴더블용 웹 레이아웃 만들기

     * 갤럭시 폴드/플립, 서피스 듀오 같은 기기들을 웹에서 지원하기
     * CSS에서 horizontal-viewport-segments , vertical-viewport-segments 값이 ""2""인지 미디어쿼리로 체크
     * JS에서 window.visualViewport.segments 로 체크
       → Canvas2D 및 WebGL 등에 적용
     * env() 에서 viewport-segment-width/height/top/left/bottom/right 사용
       → Hinge의 넓이 계산 가능
"
"https://news.hada.io/topic?id=6166","아마존 실시간 오디오 앱 Amp 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          아마존 실시간 오디오 앱 Amp 공개

     * 아마존 버전의 ClubHouse
     * 자신만의 라디오 스타일 쇼 호스트가 가능한 서비스
          + 수백만곡의 음악 무료 사용 가능
          + DJ처럼 음악과 음성을 바꿔가며 쇼 구성
          + Call-in 기능으로 청취자 참여 가능
     * 라이브 전에 음악 플레이리스트를 작성하면 더 적합한 리스너들에게 추천
     * 아직 초기 버전이라 많은 기능이 추가될 것이라고
     * iOS용 베타 버전 먼저 출시
"
"https://news.hada.io/topic?id=6142","페어 프로그래밍 안티 패턴들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            페어 프로그래밍 안티 패턴들

네비게이터

     * 오류들을 너무 빨리 체크하는 것
          + 드라이버가 문법에러와 오타를 수정 할 시간을 주기
          + 너무 작은 에러를 계속 지적하는건 흐름을 끊고, 페어가 타인의 시선을 의식하게 됨
          + 당신의 임무는 틀린 단어를 바로 지적하는게 아니라 큰 그림을 고려하는 것
     * 로우레벨한 지시 하기
          + 운전자에게 제안할 사항이 있으면, 운전자가 이해할 수 있는 가장 높은 수준의 추상화로 전달할 것
          + 코드를 불러주는 것 같다면(심하면 각 키입력까지), 잠깐 멈추고 더 상위 레벨에서 얘기할 수 있는지 볼 것
          + 그게 실패하면 아이디어 스케치를 위해 잠시 drive 해달라고 요청할 것
     * 자신의 키보드를 사용하지 않는 것
          + 모든 페어링 세션에 자신의 키보드 가져와서 시작 전에 꼽기
          + 이러면 서로 역할 변경이 쉽고, 말 대신 보여주는게 가능
          + 자기 마우스가 있는 것도 좋지만, 필수는 아님

드라이버

     * 너무 빨리 드라이빙 하는 것
          + 에디터에 아주 능숙한 경우, 숙련된 네비게이터 조차 따라가기 힘들만큼 빨라지기 쉬움
          + 페어가 따라오고 있다는 확신이 없다면, 당신의 최고 속도로 코드를 조작하지 말 것
          + 하는 일을 입으로 얘기하면서 하면 좋음
     * 체크아웃된 네비게이터를 허용하는 것
          + 너무 빨리 하거나, 이해하지 못하는 일을 하면 내비게이터의 주의를 잃기 쉬움
          + 페어의 주의가 흐트러지고 있다면 멈추고 동기화 할 것
          + 나쁜 질문 : ""이거 이해하는거 맞죠?""
          + 좋은 질문 : ""어떤 부분이 팔로잉하기 어렵나요?""
          + 페어링은 지속적인 쌍방 커뮤니케이션이 이뤄져야 함. 당신이나 당신의 네비게이터가 조용하다면, 멈추고 체크인하게 만들기
     * 동등하지 않은 스크린 접근
          + 모니터가 두 사람 사이에 있게 하고, 둘 다 똑같이 보이는지 확인할 것(폰트를 키우는 것도 고려)
          + 한 사람이 옆으로 치우치면, 잠재의식 속 불평등 계층이 만들어짐
          + 페어는 하나의 단위임. 둘 중 누구도 더 중요하지 않음
     * 휴식하지 않는 것
          + 페어링은 소모하는 것. 일반적인 프로그래밍 보다 훨씬 더
          + 적절한 휴식을 취하는 좋은 방법은 뽀모도로 테크닉을 사용하는 것
          + 시작하기 전에 선호하는 작업/휴식의 길이에 대해 동의해둘 것
     * 경청하지 않고 듣기
          + 듣는 것과 타이핑을 동시에 하는 것은 어려움
          + 네비게이터가 제안을 할 때는, 키보드에서 손을 뗄 것. 더 좋은 건 몸을 돌려서 아이 컨택 을 할 것

둘 다 에게

     * 비생산적인 산만함을 허용하는 것
          + 페어링 시작하기 전에 모든 알림을 끌 것(컴퓨터와 폰 모두)
          + 세션 동안에는 어떤 알림/문자 메시지도 받으면 안됨. 혹시 놓쳐서 받게 되면, 사과하고 그 다음에는 안 울리게 할 것
          + 다른 모니터에 이메일 열어두기 않기
          + (페어링 안할 때도 이렇게 해야함. 생산성을 증대시키는 가장 빠른 방법은 인터럽트를 줄이는 것)
     * 역할을 바꾸지 않는 것
          + 드라이빙과 네비게이션은은 서로 다른 이유로 소모됨
          + 역할을 바꾸면 뇌의 피곤한 부분을 쉬게 하고, 쉬던 부분을 활성화 할 수 있음
          + 드라이버를 교체하는 것은 페어링 세션에 활력을 불어넣을 수 있는 좋은 방법. 전환해야할 때 마다 알려주도록 타이머 설정해 두기
     * 기술이라는 것을 잊어버리는 것
          + 페어프로그래밍은 배워야 하는 ""기술"" 임
          + 처음엔 잘 하기 힘들지만, 꾸준히 연습하면 향상 될 것
          + 어려운 첫 경험후에 포기하지 말기. 숙련된 개발자라고 좋은 파트너일거라고 단정하지 말기. 연습없이 잘 되기를 기대하지 말기
          + 각 세션후에 페어와 함께 피드백하고 반영하기. 어떻게 하면 더 잘할 수 있었을까 ?

   다른 모니터에 이메일 열어두기 않기
     * 이거 와 닿네요. 정말 필요한 앱들만 켜두고 하기.
"
"https://news.hada.io/topic?id=6189","Pockit : 손바닥 크기의 마그네틱 모듈형 컴퓨터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Pockit : 손바닥 크기의 마그네틱 모듈형 컴퓨터

     * 마그네틱 접합부
     * HDMI 포트 모듈
     * 스크린 모듈
     * 카메라, TPU accelerator 모듈을 이용한 물체 감지
     * 이 외에도 80 종류 이상의 기능
     * 현재 Raspberry Pi Compute Module 4 로 동작
     * 웹 기반 대시보드
     * 시연영상: https://youtu.be/b3F9OtH2Xx4
"
"https://news.hada.io/topic?id=6172","구글 "Immersive Stream for Games" 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   구글 ""Immersive Stream for Games"" 공개

     * 구글 게임 개발자 서밋에서 Stadia의 B2B 버전 발표
     * 구글 클라우드를 통해서 회사들이 스타디아 플랫폼을 이용, 직접 플레이어들에게 게임 스트리밍 가능
       → 평가판 게임이나, 구독 번들 또는 전체 게임 스토어 제공 가능
     * 파일롯으로 AT&T와 함께 배트맨:아캄 나이트를 가입자에게 무료로 제공
     * 윈도우 게임 포팅도 쉽게 가능하도록 작업중

   2019-11-20 Google Stadia ""스트리밍 기술은 훌륭, 게임이 얼마없고 기능이 부족. 아직 더 기다려야
   2021-02-03 구글 Stadia, 내부 게임 개발 스튜디오 닫고 플랫폼에만 집중하기로

   사실 스타디아 에서 가장 좋은 기능은 클라우드를 이용한 State Share 였는데, 이걸 다른 회사들도 쓰게 해주면 좋긴 하겠네요
   구글 Stadia, State Share기능으로 공유한 게임 스크린샷을 플레이 가능
"
"https://news.hada.io/topic?id=6231","AgnosticUI - 하나의 스타일시트로 모든 프레임워크 지원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  AgnosticUI - 하나의 스타일시트로 모든 프레임워크 지원

     * React, Vue 3, Svelte, Angluar를 모두 지원하는 UI 컴포넌트
     * 프레임워크간 테마 동기화 : 한번 브랜딩한 컴포넌트를 모든 프로젝트에서 같이 사용
     * Decoupled CSS + No Preprocessing

   tailwind의 utilityclass를 차용한 것 같네요.
"
"https://news.hada.io/topic?id=6217","Java 18 / JDK 18 : General Availability","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Java 18 / JDK 18 : General Availability

     * Java 18의 레퍼런스 구현체 JDK 18이 GA
     * 프로덕션 사용 가능
     * Oracle이 만든 OpenJDK 18 (GPL) 이 공개 되었고, 다른 벤더 빌드들도 곧 공개 될 것
     * 9개의 JEP 포함
       400: UTF-8 by Default
       408: Simple Web Server
       413: Code Snippets in Java API Documentation
       416: Reimplement Core Reflection with Method Handles
       417: Vector API (Third Incubator)
       418: Internet-Address Resolution SPI
       419: Foreign Function & Memory API (Second Incubator)
       420: Pattern Matching for switch (Second Preview)
       421: Deprecate Finalization for Removal

   Amazon Corretto 18 도 GA 되었습니다.
   https://aws.amazon.com/ko/about-aws/…

   Java 17 / JDK 17 : General Availability 후 6개월 만이네요.
"
"https://news.hada.io/topic?id=6194","Asahi Linux 알파 릴리즈 - 애플 M1칩용 리눅스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Asahi Linux 알파 릴리즈 - 애플 M1칩용 리눅스

     * M1, M1 Pro, M1 Max (Mac Studio는 제외)
     * macOS 12.3 이상에서 53GB 공간 필요
     * 기존 맥OS 파티션을 줄여서 설치하며, 맥OS로 듀얼부팅 지원
     * 세가지 모드 인스톨러
          + Asahi Linux Desktop : Arch Linux ARM + Plasma Desktop + 기본 패키지. 그래픽 설치 위자드 제공
          + Asahi Linux Minimal : Arch Linux ARM 미니멀 버전
          + UEFI 전용(M1n1 + U-Boot + ESP) : 최소의 UEFI 부트 환경만 제공. USB를 이용해서 다른 OS 인스톨러 실행 가능(그 OS가 M1을 지원한다면..)
     * 지원 기능들
          + Wi-Fi, USB2(썬더볼트), USB3(맥미니 TypeA), Screen(no GPU), NVMe, Lid Switch, Power Button
          + Built-in Display(framebuffer only), Built-in keyboard/touchpad
          + Display backlight on/off, Batter information/charge control
          + RTC, Ethernet, SD Card REader, CPU Frequency Switching
          + 헤드폰 잭(M1만, Pro/Max 불가)
          + HDMI Out(Mac Mini)
     * 곧 지원될 기능들
          + USB3, 스피커, Display Controller(백라이트 밝기 조절, V-Sync, DPMS)

   아사히 리눅스가 여기 소개된 것이 작년 초니까 1년 조금 넘게 지났는데, 개발이 조금씩 진척되고 있군요.
"
"https://news.hada.io/topic?id=6206","Android TV 와 Google TV의 애플 TV앱에서 더이상 iTunes 영화 구매/대여 불가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Android TV 와 Google TV의 애플 TV앱에서 더이상 iTunes 영화 구매/대여 불가

     * NVidia Shield 및 Chromecast 등에 사용 되는 Apple TV 앱은 iTunes 무비를 직접 구매 및 대여 가능했으나,
       최근 업데이트에서 이 구매/대여 버튼을 제거하고 ""How to Watch"" 버튼으로 변경됨
     * 이 버튼 클릭시 ""아이폰/아이패드 및 다른 스트리밍 기기의 애플TV앱에서 구매/대여 가능하다""는 메시지 표시
     * 구글이 인앱결제 수수료를 내는 것을 면제해주다가 이제 그 면제 조항이 사라진 것 때문인 듯

   앱스토어에서 했던 것 처럼, ""인앱결제 수수료 내기 싫으면 Reader Only 앱이 되세요"" 라고 하는 애플 자신들의 말을 지키는 것처럼 보이긴 하네요.
   앱스토어에선 ""How to Watch"" 버튼을 넣는 것 자체도 불법이긴 합니다만..
     * 구글 플레이, 인앱 결제 정책 업데이트
     * 안드로이드용 Apple Music 앱은 인앱결제를 사용하지 않음
     * 구글 플레이에서 대한민국 이용자를 위해 개발자 제공 결제 시스템 적용이 가능해집니다
"
"https://news.hada.io/topic?id=6157","Veloren - Rust로 작성된 멀티플레이어 Voxel RPG","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Veloren - Rust로 작성된 멀티플레이어 Voxel RPG

     * 젤다:야숨 및 마인크래프트, Cube World등에서 영향받은 게임
     * 오픈소스 (GPL3)
          + 모든 그래픽,음악,애셋들이 커뮤니티에 의해 개발됨
          + 약 20명의 개발자와 20명이 넘는 작가, 디자이너, 음악가가 참여
     * 오프라인 모드로 진행가능하고, 서버(오픈소스)에 접속해서 같이 플레이 가능
          + 마인크래프트 서버 운영방식과 비슷. 던전을 협동해서 깨기 등

   와 멋지네요...

   와~ rust 로 이런걸 만들었군요~ 멋지네요

   와.. 꾸준히 만들고 있나보네요. 교육할 때 함께할 공간으로 마크를 생각했었는데 MS 인수후에 제약사항 때문에 못했었는데 오픈소스로 서버 운영이 가능하면 관심이 있습니다 ㅎㅎ
"
"https://news.hada.io/topic?id=6195","OpenAI의 code-davici 모델 이용해서 자연어로 게임 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                OpenAI의 code-davici 모델 이용해서 자연어로 게임 만들기

     * OpenAI가 4000개의 토큰까지 가능하게 업데이트 됨
     * 이를 이용해서 코드 한줄 없이 텍스트 설명만으로 작은 게임을 몇가지 생성해봄
     * 미니 젤다의 전설, 5글자 워들, 매트릭스 레인 효과, 틱-택-토, 뱀파이어 헌터, VR 미로 빌더, 이미지 조작도구, 페인팅 앱
"
"https://news.hada.io/topic?id=6188","[ 번역글 ] ECMAScript 스펙을 읽는 법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      [ 번역글 ] ECMAScript 스펙을 읽는 법

   이전 GeekNews에 올라온 ECMAScript 스펙을 읽는 법을 번역한 글 입니다.
   https://news.hada.io/topic?id=6058

   번역 글과 원문을 함께 보시면 더욱 도움이 될 것 같습니다.

   흔히 자바스크립트 스펙 문서 (ECMA-262)라고 읽는 ECMAScript 언어 스펙 문서는 자바스크립트의 복잡한 동작 방식을 이해하는 데 훌륭한 도구입니다. 그러나, 처음에 마주하게 되는 방대한 양의 글이 우리를 더욱 혼란스럽게 만듭니다.

   이 문서는 가장 좋은 자바스크립트 참고 문헌인 ( ECMAScript )를 읽기 쉽게 하는 것을 목표로 합니다.

   우왕 고맙습니다!
"
"https://news.hada.io/topic?id=6205","예제로 배우는 Deno","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              예제로 배우는 Deno

     * ""Deno by example"" : 사용법을 알려주는 주석 달린 예제 모음
     * 레퍼런스 이자 교육용으로 사용 가능
          + Hello World
          + Logging with colors
          + Importing & Exporting
          + Dependency Management
          + Importing JSON
          + Parsing and serializing JSON
          + Timeouts & Intervals
          + Input Prompts
          + Getting the Deno version
          + Process Information
          + Environment Variables
          + Command Line Arguments
          + Reading Files
          + Writing Files
          + Moving/Renaming Files
          + Temporary Files & Directories
          + Creating & Removing Directories
          + HTTP Requests
          + Generating & Validating UUIDs
          + HTTP Server: Hello World
          + HTTP Server: Routing
          + HTTP Server: Streaming
"
"https://news.hada.io/topic?id=6207","Apple Studio Display엔 64GB가 있지만 2GB만 사용함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Apple Studio Display엔 64GB가 있지만 2GB만 사용함

     * 새로 출시된 애플 스튜디오 디스플레이엔 A13 Bionic 칩이 들어감(아이폰 11에서 사용되었던 칩)
     * 이 칩의 최저 용량이 64GB이므로, 별도로 만들지 않고 그걸 그대로 이용하면서 62GB는 사용하지 않는 듯
     * 즉, 이 디스플레이는 9세대 iPad와 똑 같은 A13칩, 같은 사양의 12MP 프론트 카메라, 64GB용량을 가진 것이며,
       A12 Bionic 에 32GB 용량을 가진 Apple TV 4K 보다도 높은 사양임

   ㅋㅋ 어제 저도 이거 보고 뭐지? 했는데...
   그냥 홈팟+애플TV 처럼 티비처럼 쓸 수 있도록 열어주면 좋겠네요
   그렇다고 사겠다는 얘기는 아니지만요

   그렇게 풀어준다면 저는 티비 대용으로 살 생각이 있.. ㅋㅋ

   대량 생산 체제 구축했으니 그냥 가져다 쓰겠다는 거네요.
   그러고 보니.. GOS된 갤럭시 S22보다도 빠른 디스플레이로군요..

   ㅋㅋㅋㅋㅋㅋㅋㅋ

   흠흠... gos 꺼도 못 이깁니다.ㅎ
"
"https://news.hada.io/topic?id=6240","컨테이너 기술 안 쓰고 대규모로 운영하시는 분 계신가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    컨테이너 기술 안 쓰고 대규모로 운영하시는 분 계신가요?

   HN에 올라온 질문과 답변들
     * Nix로 매월 페타 데이터를 처리하는 수천 CPU코어와 수백 종류의 데이터 파이프라인을 운영중
     * WhatsApp은 페북에 인수되기 전 베어메탈 서버에서 FreeBSD로 운영. BEAM 및 어플리케이션 코드를 rsync로 처리했음
     * Grooveshark는 소수의 물리 서버만으로 45M MAU를 처리. nginx + PHP + MySQL + 멤캐쉬 + Go로 작성된 실시간 메시징 서버
     * 2010년에 MySpace의 분석 시스템은 14개의 EC2 인스턴스로 동작했고, ESPN의 스트리밍 서비스도 수백만 동시 접속을 VM만으로 처리. 월 45M 방문자 웹사이트도 싱글 EC2인스턴스로
       → K8s + Docker는 알려진 것 보다 훨씬 무거움
     * Fly.io는 고객들에겐 컨테이너를 제공하지만, 자신들의 인프라에선 컨테이너를 많이 사용하지 않음(고객들 대상 API서버등을 제외하고)
     * Guardian은 수백대의 EC2 인스턴스를 공식 이미지로 만든 EC2 이미지를 설치해서 사용(도커가 De facto가 되기 전에 이미 구축). 도커로 옮기는 걸 고려했지만, 스택이 JVM기반이라 도커를 사용하는 것이 큰 이점이 없음.
     * 200여대의 서버를 베어메탈에서 Ansible로 관리중. PXE 부팅으로 이미지 관리. 커스텀 Arch 리눅스 이미지로 몇개의 스크립트를 사용하며, 20년째 이렇게 잘 쓰고 있음
     * 스택오버플로우는 2016년까지는 컨테이너를 사용하지 않았음
     * Freebsd Jails와 Rust로 작성된 경량 오케스트레이션 도구를 사용. 수백대의 64코어 라이젠 머신을 운영중이며, 아마존에서 운영하는 것에 비해 1/6 정도로 훨씬 저렴하며 성능은 훨씬 뛰어남

   관리의 편의를 위해 도커는 쓰지만 Kubernetes는 대부분의 경우 오버스펙이죠. 여러 노드를 운영한다 쳐도 대부분은 도커 스웜 레벨에서 다 커버 가능하다고 봅니다.

   최근에 HN에서 본 글입니다.
   반대로 쿠버네틱스를 고성능으로 운영하는 팁이네요.
   https://medium.com/pinterest-engineering/…

   대규모가 기준에 따라 다르겠지만 HPC는 아무래도 베어메탈 기반으로 운영했었죠..
   전 직장에서 Rack 42U사이즈 50개 분량을 HPC로 구성해서 운영했었으니까요.
   운영의 문제였죠. 문제 발생했을 때 기존 HW, OS, Grid Engine, User Script 에서만 찾을걸
   컨테이너에서까지 범위를 넓힐 이유가...
"
"https://news.hada.io/topic?id=6185","Arti 0.1.0 릴리즈 - Rust로 작성한 Tor 클라이언트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Arti 0.1.0 릴리즈 - Rust로 작성한 Tor 클라이언트

     * 아직 C로 되어있는 메인 Tor 구현체를 교체할 수준은 아니지만, 이게 미래라고 믿음
     * 고수준 API 는 ""대부분 안정적"" 이며, 다른 프로젝트에 시험적으로 임베드될 준비가 되었음
          + 호환이 깨지지 않을거라는 보장은 없지만, 특별한 이유없이 고수준 API를 변경하지는 않을 것
     * 1.0.0 릴리즈는 9월로 예정

   오, rust 로 구현되었군요
"
"https://news.hada.io/topic?id=6233","FastAPI의 시대. 아직도 Flask 쓰시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      FastAPI의 시대. 아직도 Flask 쓰시나요?

     * 파이썬 웹 어플리케이션 개발에 주로 사용되던 Flask의 단점을 보완한 프레임워크
     * DI 중심 설계 덕분에 버그 가능성은 낮고, 생산성과 성능은 높음
     * Flask의 각 구성요소들은 FastAPI에서 어떻게 대체할 수 있는지 정리
     * 성능도 성능이지만, 좋은 공식 문서, 프레임워크 수준의 OpenAPI Specification과 같은 강력한 편의 기능도 장점
     * Flask는 왜 이렇게 하지 못 했는지, 비슷한 부류인 Sanic은 왜 인기가 없었는지를 Python의 역사와 함께 풀어냄
"
"https://news.hada.io/topic?id=6212","Lapsus$, Microsoft의 소스코드와 LG 계정 해쉬 덤프도 훔쳤다고 밝혀","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Lapsus$, Microsoft의 소스코드와 LG 계정 해쉬 덤프도 훔쳤다고 밝혀

     * NVidia의 RTX GPU 코드, 삼성 갤럭시의 소스 코드를 훔쳤던 것에 이어
     * Microsoft의 Bing, Cortana 관련 소스코드를 훔쳐서 토렌트로 릴리즈
     * LG전자를 해킹해서 회사 직원 및 서비스 계정에 대한 모든 Hash를 덤프했다고 하면서, 새로 CSIRT(Computer Security Incident Response Team)을 꾸리는게 어떻냐며 권고
"
"https://news.hada.io/topic?id=6168","페이스북, TikTok에 공식 계정 개설","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         페이스북, TikTok에 공식 계정 개설

   ""We believe people can do more together, than alone.""

   뭐 그냥 마케팅 채널이라고 생각할 수도 있겠지만..
   페이스북은 틱톡이 이만큼 크기전에 샀어야 한다고 울고 있을 것 같기는 합니다.
"
"https://news.hada.io/topic?id=6147","2022년 가장 비싼 광고 키워드들 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          2022년 가장 비싼 광고 키워드들

     * 구글 검색 광고에서 가장 비싼 키워드들 정리 (US기준)
     * 탑 5000 키워드의 카테고리별 순위
          + 법률 19.4% > 교육 8.7% > 보험 6.1% > 중독 및 재활 프로그램 4.9% > 대출 1.1%
     * CPC 기준 가장 비싼 키워드
          + 1등 best motorcycle accident laywer : 클릭당 약 $900, 월 1300회 검색
          + 2등 18 wheeler accident attorney : 클릭당 약 $350, 월 1200회 검색
          + 3등 semi truck accident attorney : 클릭당 약 $345, 월 1100회 검색
     * 높은 이윤을 내는 고가의 서비스 기업들은 종종 더 많은 비용을 지출
          + 영리목적 온라인 대학들은 18.7%의 이윤과 약 4조의 세전이익을 내고 있음. 학생들이 평균 년 $15780(2천만원)을 내므로 키워드 하나당 10만원씩도 쓰는게 가능
          + 수해(Water Damage)관련 산업은 이익율이 75%에 달하고, 수리 한번에 평균 $2500 정도를 청구하니까, 클릭당 $50 정도는 충분히 써도 됨
     * 비싼 키워드를 피하는 법
          + 랜딩 페이지 경험을 최대화
          + 고퀄리티의 광고 크리에이티브에 집중 : 키워드 조사는 중요하지만, 예전 처럼 최고의 키워드를 찾는 것이 중요하지는 않음. 좋은 광고 문구가 캠페인 실적 향상에 도움됨
          + 클릭 사기 모니터링은 필수
          + 모바일에 최적화 하기

   18 wheeler 와 semi truck 은 사실 같은 키워드라.. 미국에선 트럭 사고 쪽이 가장 이슈가 많나 보군요.
"
"https://news.hada.io/topic?id=6141","PDF 번역 프로그램번역 프로그램

     * PDF의 페이지 레이아웃을 그대로 유지하면서 페이지 또는 문서 단위로 번역
          + 페이지 단위, 여러 페이지를 한번에, 페이지 내에서 특정 텍스트만 선택해서 번역
     * 자체 번역 엔진, 구글 번역 엔진, 카카오 번역 엔진을 선택해서 번역 가능
     * 영어,일본어,중국어를 포함한 18개 언어 지원

   5페이지씩 번역해서 파일로 저장됩니다. 도구->PDF합치기를 이용하면 하나의 PDF로 병합 가능

   카카오 번역 API를 이용하려면 별도 가입하고 키를 받아서 입력해야 합니다.

   https://translate.google.com/ 에서도 PDF번역이 되는데 10MB 이상은 처리가 불가능합니다.
   현재 수준에서는 레이아웃 인식은 구글쪽이 좀 더 뛰어난 것 같은데, 계속 개발중이시니 더 좋아질 것 같네요.
   응원합니다!
"
"https://news.hada.io/topic?id=6192","Faker v6 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Faker v6 릴리즈

     * ESM 지원
     * 패키지 명을 faker 에서 @faker-js/faker 로 변경
     * TypeScript 지원 : 자체 Types 같이 배포
     * 일부에 한해서 Tree-Shaking 지원
"
"https://news.hada.io/topic?id=6211","Lapsus$ 해킹그룹, Okta를 해킹했다고 주장 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Lapsus$ 해킹그룹, Okta를 해킹했다고 주장

     * Okta는 전세계 15000+개의 고객사를 보유한 세계 최대 SSO 보안 회사
     * Lapsus$에서 Okta의 사내 Slack,Cloudflare 및 내부 시스템 스크린샷을 텔레그램 채널에 게시
     * Okta쪽에선 1/5일 부터 5일간 직원 랩톱 하나에 억세스 한 걸 확인했지만, 권한은 제한적이었다고 밝힘
     * 다시 Lapsus$는 5일이 아니라 2달동안 슈퍼유저/관리자 권한으로 있었다고 하면서, Okta가 슬랙 채널에 AWS키를 저장했다고 추가 공개

   Okta 쪽의 분석 보고서 입니다. 타임라인 포함

   https://okta.com/blog/2022/…

   5일간 계약 업체인 Sitel의 직원이 자신들이 사용하는 도구의 슈퍼유저 계정을 얻기는 했지만, 권한은 제한적이어서 실제로 침해는 없었다고 얘기하네요.

   Okta 어제 주가가 10.74% 하락했네요.
   역시 보안은 이제 정말 중요한 이슈

   처음에 올라온 스크린샷을 가지고 HN에서 여러 얘기가 있네요.
   https://news.ycombinator.com/item?id=30762520
"
"https://news.hada.io/topic?id=6228","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   드디어 날이 따뜻해져서 밖에서 자전거를 타볼까 합니다.
   개처럼 헥헥대면서 자전거 탈 생각에 기분이 설레네요 ㅋㅋ

   친구랑 둘이서 모터싸이클 당일치기 여행갑니다.
   3년간 혼자 타고 다녔는데, 다른 사람과 가는 첫 라이딩이라 신나요. ㅎㅎ
     * 사내 사이드 프로젝트의 릴리즈 노트를 쓴 다음 사내 노션에 공유했습니다. (지금까지 작업했으니 주말로 치죠!) 정말 잘 적었다고 생각하는데.... 외부로 공개할 기회가 없을 것 같아 너무 안타깝네요. 크흡. 사이드 프로젝트인데.. 사내 코드 작업할 떄 엄청 편하게 도와주는 툴킷인지라 공개가 어려운 것 같습니다.
     * 사내 사이드 프로젝트들을 2주 단위 스프린트로 지켜볼 수 있는.... 노션 페이지를 작업할 예정입니다. 좀 더 재미있는 것들이 많이 생기면 즐거울 것 같아서요.
     * 그리고 개인 사이드 프로젝트들의 작년 결산을 이번주에는 꼭 끝낼겁니다. (... )

   11인치 m1 패드를 질렀습니다..(22개월 무이자 카드야 미아네...) 그 유명한 원신을 한번 해보려구요 ㅎㅎ

   대청소를 한번...

   그러고 보니 저도 봄맞이 책상청소를 ㅋㅋ

   보드겜 모임이 있어요~ 보통 모이면 4-5시간 하네요.
   지난주 가려던 콘서트는 출연자가 코로나 확진이라 취소되었네요 흑흑

   PDF정리, 만화책 정리, 그리고 Rust로 만든 Bevy 게임 엔진 공부요.
   남는 스팸이랑 감자로 감자전 해먹을 생각도 하고있어요~

   넷플릭스 f1 시즌 4 달릴 예정입니다. 최근에 86인치 티비와 스피커 하나 장만해서 보는게 기대되네요. ㅎㅎ

   비가 안온다면 포천아트리움을 여자친구와~
   일요일은 책읽기해야겟네요.

   지난주에 이어 이번주에도 난지 캠핑장으로 글램핑을 갑니다.
   이번엔 고등학교 때 친구들이랑 가서 사는 얘기 한참 하다 올 것 같아요.
   난지캠핑장 가까워서 좋더군요. 추천합니다!(매월 15일에 다음달 예약이 풀립니다)
"
"https://news.hada.io/topic?id=6184","Safari 15.4에 추가된 새 WebKit 기능들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Safari 15.4에 추가된 새 WebKit 기능들

HTML

     * img Lazy로딩
     * dialog, ::backdrop 지원

CSS

     * :has()
     * Cascade Layers
     * contain
     * 뷰포트 : svw,lvh,dvmin 같은 *vw, *vh, *vi, *vb, *vmin, *vmax 지원
     * :focus-visible
     * accent-color
     * calc() : sin, cos, tan, e, pi, exp, log, atan, acos, asin, atan2

Typography

     * font-palette, @font-palette-values
     * text-decoration-skip-ink
     * ic 유닛 추가 (CJK에 유용)

Web APIs

     * BroadcastChannel
     * Web Locks API
     * windows.scroll()/scrollTo()/scrollBy() 에서 CSS scroll-behavior 속성 지원

JavaScript

     * findLast(), findLastIndex()
     * at()
     * Obejct.hasOwn()

Internationalization

     * Intl Enumeration API
     * Intl.Locale V2
     * Intl.DisplayNames V2
     * Intl.NumberFormat V3

Web Apps

     * Web App Manifest 홈스크킨에 추가할때 만이 아니라 항상 가져오게 개선
          + 아이콘 지원
     * ServiceWorker 에서 Navigation Preload 활성화 가능

Media

     * WebRTC perfect negotiation 지원을 WebRTC 1.0 표준에 맞게
     * video 태그에 requestVideoFrameCallback() 지원

Security

     * Content Security Policy Level 3 지원 향상

WKWebView

     * WKPreferences 로 사용자 속성 제어
     * Fullscreen API 허용/불허 제어

Safari Web Extensions

     * manifest_version 3 지원 및 관련 API 변경 적용

Web Inspector

     * Styles 판넬에 Cascade Layer / @layer 지원
     * align-content, align-items, align-self, justify-content, justify-items, justify-self 의 값 설정을 쉽게
     * 새 속성 추가시 자동 완성 지원
"
"https://news.hada.io/topic?id=6169","KDE의 PDF 리더 Okular가 세계 최초로 "환경 인증"을 받음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 KDE의 PDF 리더 Okular가 세계 최초로 ""환경 인증""을 받음

     * Okular는 KDE의 오픈소스 PDF 리더 & 범용 문서 뷰어
     * ""Blue Angel Ecolabel"" 을 수상
       → 1978년 독일에 의해 도입된 세계 최초의 친환경 마크
     * 소프트웨어 제품으로는 첫번째로 인증을 받음
       → 자원 및 에너지 효율에 대한 투명성, 하드웨어 작동 수명, 사용자 자율성에 중점을 두고 평가
       → 2020년부터 소프트웨어가 포함되도록 수상기준을 확장

   자동화된 테스트 킷으로 매 릴리스마다 점검하는게 아니라면 과연 소프트웨어에 대한 인증이 의미가 있을까요 ^^;
"
"https://news.hada.io/topic?id=6208","CotEditor - macOS용 오픈소스 텍스트 에디터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    CotEditor - macOS용 오픈소스 텍스트 에디터

     * Swift로 작성된 네이티브 에디터라서 빠르고 경량
     * 앱스토어에서 다운 가능
     * CJK 언어 친화적(인코딩 처리, 세로 쓰기 및 라인 높이)
     * 50개 이상 언어의 구문 강조 지원, 강력한 검색&치환, GUI기반의 쉬운 설정, 자동 백업
     * 다양한 매크로 언어 사용 가능(Python/Ruby/PHP/Shell/AppleScript/JavaScript)

   저는 이거 굉장히 마음에 듭니다.
   vscode를 굳이 실행시키고 싶지 않은 텍스트들을 여기서 엽니다 ㅎㅎ
   좋은 소개 감사합니다.

   Mac OS 11 이상 지원이군요.

   vscode 보다 첫 스타트 시간이 짧아서 잠깐 잠깐 쓰기에 좋습니다.

   좋아보이는데 vscode 에서 갈아탈 요인은 잘 안보여요..

   역시 일본제품 믿음이 갑니다

   메인 개발자들이 일본인들이라 한글 폰트도 잘 지원되고 한글,한자,일본어 쓰기에 적합합니다.
"
"https://news.hada.io/topic?id=6140","Escape from the Office | Apple at Work","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Escape from the Office | Apple at Work

     * 애플이 Apple Business Essentials 를 홍보하기 위해 만든 8:50초 짜리 숏무비
     * 주인공들이 간단한 아이디어로 새 회사를 시작하는 스타트업 창업 홍보 영상 같은 분위기라 재미납니다

   이거 완전 재밌네요.
   미드로 런칭해도 좋겠는데요.

   하지만 애플은 출근을 하죠 https://www.yna.co.kr/view/AKR20220305028700091

   출근을 하라고 하니 퇴사 하는거 아닐까요 ㅎㅎ

   사직 권고를 숏무비 영상으로!

   Apple Business Essentials 공개
"
"https://news.hada.io/topic?id=6137","macOS가 사용하는 웹뷰 Inspect 하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       macOS가 사용하는 웹뷰 Inspect 하기

     * 맥 터미널에서 아래 커맨드를 입력하면 시스템이 사용하는 웹뷰에서 ""Inspect Element"" 메뉴가 활성화되어,
       시스템 대화 창의 모든 웹뷰를 기존 웹사이트 처럼 개발자도구로 살펴보기 가능
       defaults write NSGlobalDomain WebKitDeveloperExtras -bool true
       defaults write -g WebKitDeveloperExtras -bool YES
     * 애플 엔지니어들이 WebKit의 비표준 CSS키워드를 사용하여, 시스템 API로 개발된 macOS UI를 웹에서 그대로 구현한 방법들을 볼 수 있게 됨
       → 예) 애플 뮤직의 가족공유 탭에선 React를 쓴것도 볼 수 있고, 웹 컴포넌트 같은 것도 보임
     * 이를 통해서 Webkit/Safari 의 특정 기능들이 제공되는 이유를 살펴볼 수 있음
       → 예) CSS4 폰트 모듈이 시스템 폰트를 지원하는 것. font-family : -apple-system

   와 신기하네요. 그런데 이런 건 어떻게 알아내는 건지도 궁금했는데 그 얘기는 없어서 아쉽군요.

   답변 쓰레드: https://twitter.com/samhenrigold/status/1503179818879401987

     i was interested in figuring out how the itunes store app works. running a proxy and inspecting the HTML by hand was a pain in the ass so i started looking online for any pref values i could write to enable dev tools.

     I couldn’t find anything, so I juiced the strings (https://macworld.com/article/192447/findhidden.html) out of the itunes binary and webkit frameworks explicitly looking for keys that could be helpful. Couldn’t find anything for iTunes but the entries I found enabled the inspector elsewhere!

   찾아보니 WebkitDeveloperExtras 항목을 켜는건 꽤 오래전부터 알려져 있었던 것 같아요. Stackoverflow에 12년전 질문이 있네요.
   https://stackoverflow.com/questions/695038/…
   최근에 와서야 애플이 시스템에서 웹뷰를 쓰기시작한게 아닐까 생각이 듭니다.

   맥 기본 앱들을 어떻게 인스펙트할 생각을 했는지, 그래서 인스펙트 방법은 어떻게 알았는지 (저 커맨드의 존재 등) 사고 과정이 궁금해서 트위터로 물어봤는데.. 알려진 방법이었군요.
   답변을 해줄지 모르겠지만 답변이 달리면 여기에도 공유하겠습니다.
"
"https://news.hada.io/topic?id=6193","Deno 1.20 릴리즈","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Deno 1.20 릴리즈

     * Rust 호출을 더 빠르게
     * HTTP 응답 바디를 자동 압축
     * deno bench 벤치마킽 명령어 추가
     * deno task 태스크 러너 (npm scripts/makefile 과 비슷)
     * 설정파일에서 import map 지정 가능
     * TLS/HTTPS 용 PEM/키 정보를 텍스트로 로딩 가능
     * Deno.upgradeHttp() 로우레벨 API 추가
     * Foreign Function Interface API에서 전역 통계 읽기 가능
     * AbortSignal.timeout(ms) 지원
     * TypeScript 4.6 / V8 10.0 적용
"
"https://news.hada.io/topic?id=6201","35년간의 뉴스레터 운영에서 얻은 경험들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         35년간의 뉴스레터 운영에서 얻은 경험들

    1. 이메일은 계속 살아남을 것. 언젠가는 자신의 스타일에 잘 맞는 매체(비디오/오디오)를 갖게 되겠지만, 이메일은 보편적임. 여전히 King!
    2. 당신의 개인적인 목소리엔 경쟁이 없음
    3. 관계를 구축하는 것, 그게 다임. 다른 것을 시도하는 것은 자신이나 독자에게 거짓말을 하는 것.
       프로젝트, 경력 또는 삶을 변경하거나 구하는데(Save) 필요한 것은 단 하나의 ""관계""임.
       그럼 더 많이 만들어야 하지 않을까? 관계는 부자와 성공한 사람을 구분하는 것이기도 함.
    4. 인간적일 것. 사람들은 스팸을 인식하고, 세일즈 피치도 알아챔. 사람들은 정직하고 직접적인 의사소통도 인지함. 이 부분에서 뉴스레터가 탁월함.
       ""Be real. Be vulnerable""
    5. 최고의 지표는 회신(Reply)
    6. 완벽(Perfection)은 짜증나고 지루함
    7. 아무도 신경 쓰지 않음. 그들이 관심을 가져야 할 이유를 줘야 함. 그들에게서 5초간의 관심을 얻을 것. 그리고 다음 5초를 얻고, 반복할 것.
    8. 새로운 아이디어가 있다면 그냥 시작할 것. 그냥 두는 것 만으로는 관계를 만들 수 없음. 아이디어가 있다면 바로 꺼내서 보낼 것. 코스(Course)는 나중에 만약 필요하다면 수정할 수 있음. 모든 실패는 독자들에게 엔터테인먼트가 될 수 있으니, 바로 발송할 것(Ship)!
    9. 큐레이션은 중요함. 제작자는 너무 많지만, 편집자는 충분하지 않음. 이 희소성이 가치를 만들어 냄.
   10. 간결함 속에 용기가 있음. 작은 것은 사려 깊고, 어렵고, 가치 있음. 대부분의 책은 블로그 포스트여야 하고, 대부분의 블로그 포스트는 트윗이어야 함.
   11. 일관성을 유지할 것. 사람은 습관의 동물. 이게 일관성이 작동하는 이유. 독자들의 루틴 속 일부가 될 것
   12. 당신의 뉴스레터는 당신의 프로세스의 부산물임. 프로세스를 개선하는데 집중하면 다른 모든 것이 저절로 해결 됨. 여기서 일관성을 유지하고 번아웃을 피하는 방법을 배울 수 있음.
   13. 단어 수가 아닌 가치를 전달할 것. 다른 사람의 문제를 해결 할 것 - 클수록 더 좋음. 그것으로 당신의 문제가 해결되면 더 좋음.
   14. 멍청이가 되지 말 것. 구독 취소가 쉽게 가능하게 만들 것. 클릭 추적에 얽매이지 말고, 응답할 것. 사람들은 ""opens"" 도 ""clicks""도 아님
   15. 오직 한 명이 이 메일을 열어봄. 당신은 방송인이 아님. 당신의 이메일을 읽는 화면 주위에는 사람이 붐비지 않음. 당신은 한 명의 독자에게 글을 쓰는 것.
   16. 신경쓰세요(Give a Shit). 얼마나 많은 사람이 그러지 않는지 놀라울 정도임.
   17. Discovery is recovery. 수천 개의 주제에 대해서 다뤘지만, 그들이 어떻게 새롭고 흥미로운 방식으로 교차하는지 깨닫지 못하고 있음. 당신의 글을 다시 읽으면, 매번 새로운 것을 발견하게 될 것.
   18. 모든 사람에게 맞는 크기는 없음. 당신이 뭘 하든 모든 독자를 기쁘게 하지는 못함. 그건 좋은 것. 정직으로 신뢰를 구축하면, 미움을 받기 마련. 기억할 것: 사랑의 반대는 미움이 아니라 무관심임
   19. 다른 뉴스레터에서 당신을 Engage 시키는 것보다, 당신을 기쁘게(Delight) 하는 것이 무엇인지 추적할 것. Engagement는 몇 개의 문장에 좋지만, Delight는 다음 메일에 대한 기대감을 만듦. 당신은 아마도 충분한 기쁨을 만들어내지 못하고 있을 것이며, 그렇게 해야 함.
   20. 제목 라인은 보낸 사람(From) 라인만큼 중요하지 않음. 신뢰는 From 라인을 향상 시키는 유일한 것
   21. 모든 것에 당신의 뉴스레터 링크를 추가할 것. 거기가 관계가 구축되는 곳이므로, 온라인 세계의 중심으로 만들 것. 가치 있는 뉴스레터를 만들었다면, 가능하면 많은 독자에게 뉴스레터를 노출하는 것이 당신의 의무
   22. 최고의 링크를 앞에 걸 것. 가치 있는 것은 빨리 보여져야 함. 가장 먼저 있는 링크가 가장 많이 클릭됨. 독자들이 뉴스레터로 다시 돌아가고 싶어할 만큼 충분히 가치 있게 만들 것.
   23. 무자비하게 잘라낼 것. 프로젝트나 프로세스에서 먼저 삭제하고 나중에 구성하고 자동화 할 것. 적절하게 구성된 자동화는 시간이 지남에 따라 발생해야 하며, 독자와의 관계나 콘텐츠 품질을 희생 시키면 안됨.
   24. 당신의 두뇌는 무언가를 발표하는 것과 그것을 전달하는 것과의 차이를 알지 못함. 뉴스레터에서 발표는 쉽고, 유혹적인 콘텐츠임. 뭔가를 발표하는 내용을 포스팅 했다면, 독자가 실제로 전달 받을 수 있도록 무언가를 추가할 것(예: 사전 판매)
   25. 구독자를 만나볼 것. 독자를 직접 만나면, 당신이 하는 일이 그들의 세계에 어떻게 들어맞는지 더 잘 이해할 수 있음. 이는 게시 방식과 게시 대상을 결정함
   26. 수익 창출은 부산물임. 잠재 고객을 위한 서비스를 구축하면 수익 창출은 저절로 발생할 것. 그것을 좆을 필요가 없음. 추가되는 책임을 원하지 않는다면 그걸 받아들여야 할 필요도 없음.
   27. 원하는 날짜를 선택할 것. 일반 대중의 통계가 지시하는 것이 아닌 자신의 습관이나 전략에 가장 적합한 방식과 시간에 발송할 것. 당신의 독자는 다른 사람과 같지 않음. 게시 일정에 대해서는 당신이 제어할 수 있음.
   28. 후기를 요청할 것. 새로운 독자들은 이 뉴스레터에 관심을 가져야 할 이유를 알고 싶어함. 실제 독자들의 후기들로 이유를 보여줄 것.
   29. 더 많은 것을 무료로 제공할 것. 당신이 구축할 관계보다 더 가치 있는 것은 없음. 프로젝트는 왔다가 가고, 성공하거나 실패함. 청중(Audience)은 남음. 당신이 주는 것이 그들을 끌어들이고 유지 시킴. 아마도 당신은 충분히 주고 있지 않을 것임.
   30. 영감(Inspiration)은 예정되어 있음. 이건 일(work)이라고도 불림. 우리의 작업, 프로젝트, 전체 삶의 공통분모는 시간임. 당신의 일정은 당신을 일관되고 제정신으로 유지하기 위해 존재함. 이게 당신의 프로세스의 기초임.
   31. 노는(Play) 일정도 잡을 것. 일만 하고 놀지 않으면 지루한 뉴스레터가 됨. ""여가는 문화의 기초"" 여가시간을 계획하지 않는다면 얼마나 교양 있고 흥미로울 수 있을까? 창작자들은 자신이 엔터테인먼트 비즈니스에 있다는 것을 인정하고 싶어하지 않지만, 실제로는 그러함. 어떤 것이 당신을 즐겁게 하는가? 독자를 즐겁게 하는 것은 뭘까? 어떻게 하면 이 모든 것을 조금 더 재미있게 만들 수 있을까?
   32. 매일 창작(Create)할 것. 매일 퍼블리시할 필요는 없지만, 창작은 다른 모든 것을 가능하게 하는 습관임.
   33. 막혔을 때는 다른 제약 조건을 적용해 볼 것
   34. 항상 다른 사람의 승리를 축하하고 공유할 것. 당신의 주제에 대한 치어리더가 되세요.
   35. 잊어버리세요(Unlearn). ""모든 것은 변합니다."" 이 말만이 유일하게 변하지 않는 것. 새로운 정보가 제공되면 즉시 배운 것을 잊어버릴 수 있게 준비하세요.

   문장 하나하나가 무척 멋지네요.
   좋은 레퍼런스 공유 감사합니다!!!

   매일 창작(Create)할 것. 매일 퍼블리시할 필요는 없지만, 창작은 다른 모든 것을 가능하게 하는 습관임. 🤯 프로 작가들의 다른 말들과 일맥상통한 느낌이네요. 무엇인가를 만드는 사람이라면 꾸준함이 필수입니다.

   한국에선 email자체를 많이 이용안하는게 문제인데, 그래도 개발자들은 email을 많이 이용하겠죠? 미국인들은 정말 email을 많이 쓰는것 같습니다. 학교다니는 애라도 한명 있으면 email은 매일 챙겨봐야하죠...

   요즘 한국도 이메일 뉴스레터가 굉장히 많이 생기고 있기도 해서, 예전보다는 이메일 사용이 더 늘어나는 것 같습니다.
   아쉽지만 학교쪽에서는 이메일 보다는 모바일앱 이나 문자 메시지를 더 활용하는 것 같기는 합니다.

   GeekNews Weekly 를 발행하는 입장에서 보면 많은 부분 공감되기도 하고, 제가 해온 방식들이 어느 정도는 맞는 것이었구나 라고 칭찬 듣는 느낌의 글이네요.

   9번에 큐레이션이 중요하다는 것이 이 긱뉴스와 긱뉴스 위클리를 시작한 이유였던 것 같습니다. 기술 뉴스 중에서 꼭 알아야 할 것들을 골라내서 가능하면 한국어로 제목만이라도 알 수 있게 전달하는 것이 목표 였어요.
   10번 처럼 최대한 간결하게 요약하려고 노력하고 있고, 12번&23번 처럼 처음엔 수작업으로 발행하면서 프로세스화하고 자동화해서 지금은 나름 편하게 뉴스 레터를 작성합니다.
   22번에 중요 링크를 앞에 놓으라고 하는데, 긱뉴스 위클리도 지난주 올라온 기사 중 꼭 읽었으면 하는 3-4개의 기사를 따로 설명붙여서 앞에 배치합니다.
   32번 처럼 매일 여러 개의 기사를 찾고 요약하고 올리는 걸 습관처럼 2년 반째 하고 있고, 일요일날 한주간의 기사를 정리해서 위클리로 발행하고 있습니다.

   국내에도 많은 뉴스레터들이 생기고 있는데 참고하시면 좋을 것 같습니다.

   뉴스레터가 돈을 버는 방법
   뉴스레터에 대한 소고
"
"https://news.hada.io/topic?id=6160","DigitalOcean이 CSS-Tricks 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      DigitalOcean이 CSS-Tricks 인수

     * 클라우드 플랫폼 DigitalOcean이 프론트엔드 개발자용 정보 사이트인 CSS-Tricks를 인수
          + 약 6500개의 아티클,비디오,가이드
     * Chris Coyier가 2007년에 창업해서 작은 팀으로 운영되던 사이트
     * 계속 별도 사이트로 무료로 운영하며, Chris는 디오로 이관하는 동안 고문으로 있다가 자신의 다른 프로젝트에 집중할 예정

   Coinbase의 CTO였던 Balaji Srinivasan은 트윗에서 이런 말을 했습니다.
   https://twitter.com/balajis/status/1374363031417753609

     모든 SaaS 회사들은 업계 뉴스를 전달하는 뉴스레터를 가진 미디어들을 소유해야 합니다.
     당신의 분야에서 확고한 영역을 가진 인플루언서를 얻고, 그들을 편집장으로 만들고, 당신의 소프트웨어 구독에 그들의 콘텐트를 무료로 번들링 하세요. 모든 고객을 독자로 만드세요.

   State of JavaScript 2021 에서도 많이 보는 사이트중 1등이 CSS-Tricks 였고,
   긱뉴스에서도 사용자가 페이지를 떠날 때 안정적으로 HTTP 요청을 보내는 방법 비롯해서 CSS-Tricks의 링크가 몇번 올라왔었습니다.

   디오의 공지 글 제목도 좋네요. 요즘 개발자 대상 회사들에게 커뮤니티는 정말*100 중요!
   CSS-Tricks joins DigitalOcean, expanding our commitment to community
"
"https://news.hada.io/topic?id=6179","Solito : React Native + Next.js Unified","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Solito : React Native + Next.js Unified

     * React Native 와 Next.js 를 같이 사용하여 크로스 플랫폼앱을 개발할 수 있도록 도와주는 라이브러리
     * 여러 플랫폼간에 ""네비게이션 코드""를 공유 가능하게 만들어 주는 작은 Wrapper 를 제공
     * 패턴과 예제들 포함
"
"https://news.hada.io/topic?id=6125","Airbridge Data Pipeline에서 Serverless 활용 사례","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Airbridge Data Pipeline에서 Serverless 활용 사례

     * Intro
     * Data Pipeline에서 Serverless 기술 도입 배경: Hourly보다 더 짧은 주기로 코드를 실행하기 좋은 환경을 찾던 중 Serverless 기술을 활용하기로 함
     * 불편했던 Lambda 배포 환경: Terraform으로 IaC 했을 때 작성해야할 코드가 많아서 불편할 뿐만 아니라 lambda packaging 등도 불편했음
     * Serverless framework 도입: 적은 양의 코드로도 잘 구성하여 운영할 수 있고, Build나 Test가 용이함
          + 아쉬운 점: Plan을 볼 수 없고, CloudFormation의 불편한 점들이 그대로 있음
          + 결론: Serverless framework는 아쉬운 점보다 장점이 훨씬 많은 framework이기 때문에 앞으로도 계속 활용할 예정. 사실 Serverless framework보다 Lambda 환경의 문제가 더 많음.
     * 활용 사례
          + 사례1: Kafka Connect Manager
          + 사례2: Batch Job 실행
     * 마치며
"
"https://news.hada.io/topic?id=6135","Show GN: MiroTalk - SFU - Open-Source - Simple, Secure, Scalable, Fast WebRTC Up to 4k","                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Show GN: MiroTalk - SFU - Open-Source - Simple, Secure, Scalable, Fast WebRTC Up to 4k

   Compatible with all browsers and platforms.
   Live demo: https://sfu.mirotalk.org
   GitHub: https://github.com/miroslavpejic85/mirotalksfu
"
"https://news.hada.io/topic?id=6237","GitHub Issue 실물 티켓 프린터를 만들었어요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GitHub Issue 실물 티켓 프린터를 만들었어요

     * Repo에 새로운 이슈가 등록되면 자동으로 티켓을 프린터로 인쇄하기
     * Epson TM-T88IV(감열식 영수증 프린터) + 라즈베리 Pi Zero W
     * PHP 코드. ESC/POS 명령으로 인쇄하는 라이브러리 사용

   정말 재밌는 프로젝트군요~

   ㅎㅎㅎ 가상 공간과 오프라인을 연결하는 것은 늘 재미있는 것 같아요
"
"https://news.hada.io/topic?id=6145","Roland 50 Studio","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Roland 50 Studio

     * 롤랜드 50주년 기념 사이트
     * TR-808 드럼 머신, TB-303 베이스 신디사이저, SH-101 신디사이저 를 웹브라우저에서 구현
     * 음악을 만들고 다운로드 및 공유 가능
     * 추가로 4개의 장비가 더 공개예정(카운트다운 진행중)
     * 사운드 디자이너 Yuri Szuki가 만들었던 808303.studio 의 업데이트 버전

   오호 이거 재밌네요 ㅋㅋ

   네트웍 트래픽을 분석해서 카운트다운 후에 추가될 장비를 유추해냈네요.
     * SP404 Sampling Workstation 샘플러 2022-04-04T12:00:00.000Z
     * TR606 Drumatix 드럼 머신 2022-06-06T12:00:00.000Z
     * TR707 Rhythm Composer 드럼 머신 2022-07-07T12:00:00.000Z
     * TR909 Rhythm Composer 드럼 머신 2022-09-09T12:00:00.000Z

   롤랜드의 역사에 대해 알아보기
   Land of the Rising Sound | A Roland Retrospective

   카운트다운 했다는게 어떤 의미일까요?

   해당 페이지에 사람들이 계속 방문하도록 카운트다운을 추가해서 나중에 몇개의 머신이 추가되도록 했는데요.
   그 정보를 뒤벼파서 해당 정보를 찾은 것 같습니다.
"
"https://news.hada.io/topic?id=6129","딥러닝은 한계에 직면했다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             딥러닝은 한계에 직면했다

     * 글에서 설명하는 한계들은 : GPT-3는 문장을 이해하지 못하고 그저 자연스럽게 이어가는 데에 초점에 맞춰져있음. 테슬라의 자율 주행 모델은 STOP 표지판을 든 사람을 구분하지 못함. 눈에 파묻힌 버스를 제설차로 분류함. 이 원인은 딥러닝이 생각하는 게 아니라 암기한 다음 분류하는 것이기 때문.
     * 그렇기에 치명적이지 않고 이미 결정된 분야에 대해서, 다음 결과를 예측할 수 있는 분야에서는 딥 러닝이 탁월한 효과를 보이지만. 그러지 못하는 영역에서는 문제가 많음. 글쓴이는 NetHack을 예로 듬. 해당 게임을 플레이해서 클리어하는 AI를 고전적인 AI와 딥러닝 AI. 두 가지로 테스트를 했고. 고전적인 AI가 더 탁월한 성능을 보였음.
     * 고전적인 AI, 심볼 AI는 의미를 이해하고 진행할 수 있었음. 그렇기에 새로운 패턴이 등장해도 빠르게 대응함. 하지만 딥러닝은 기존 것에서 빈 것들을 분류하는데에는 유용하지만. 자동 생성되는 던전을 잘 해치우지는 못했음. 왜냐면 그게 무슨 의미를 가지는지는 알 수 없기 때문에.
     * 글쓴이가 대안으로 제시한 건 하이브리드 AI. ( 참고 : AI의 과거를 통해 AI의 미래를 본다 - MIT Technology Review ) 고전 AI의 심볼 분석과 정의가능한 규칙들로 딥러닝 AI의 한계를 극복하는 것임. 이렇게 하면 내부 동작 원인을 통제할 수 있을 것이고 부분적인 관계와 전체적인 관계를 좀 더 정확하게 다룰 수 있음.
     * 이런 AI는 단지 글쓴이의 주장 속에만 있는게 아니라 알파고와 AlphaFold2도 하이브리드 AI. 다른 기업들도 그런 방향으로 가고 있음.

   이거 어케 요약해서 올려야 하나해서, 아래 처럼 저자 소개만 적어놓고 고민중이었는데.. 감사합니다 ㅎㅎ

   Robust AI의 CEO이자 Rebooting AI 책의 처자인 Gary Marcus의 글입니다.

   이번 글이 다루는 부분이 엄청 많고, 재미있는 부분도 엄청 많아서 쉽지 않더라고요. 그래서 저자가 왜 하이브리드 AI가 필요한지 생각하는 가로만 요약을 했습니다.

   본문에는 딥러닝 AI와 전통적인 AI의 관계와 신경전(... ) 에 대해서도 다루고, 재미있는 이야기가 많아 읽으니 본문을 안 보신 분들은 본문도 보셨으면 좋겠습니다. (__ )/
"
"https://news.hada.io/topic?id=6200","네이버, 카카오, 엔씨소프트 임원은 연봉을 얼마나 받을까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    네이버, 카카오, 엔씨소프트 임원은 연봉을 얼마나 받을까?

     * 전자 공시 시스템(DART) 에 공시된 사업보고서 내용을 참고한 추정
     * 2014년도부터 상장사들은 5억 원 이상 상위 5명의 임직원의 연봉이 공개
          + 네이버 - 급여 보상 우선
          + 카카오 - 주식 보상 우선
          + 엔씨소프트 – 인센티브 보상 우선
     * ✓ 상세 금액은 원글을 참고하세요
"
"https://news.hada.io/topic?id=6182","Amazon, 10조원($8.5b)에 MGM 인수 완료","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Amazon, 10조원($8.5b)에 MGM 인수 완료

     * 4000개의 영화와 17000개의 TV 쇼가 아마존 프라임 비디오에 추가

   제임스 본드, 록키, 파고, 로보캅, 양들의 침묵 같은 클래식들만 적혀있어서 보니.. 최근에 그닥 성공한 영화들은 잘 안보이긴 하군요.

   https://en.wikipedia.org/wiki/Lists_of_Metro-Goldwyn-Mayer_films

   TV 시리즈들은 정말 많네요.

   https://en.wikipedia.org/wiki/List_of_MGM_Television_programs
"
"https://news.hada.io/topic?id=6153","Class Central - 온라인 강의 검색엔진","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Class Central - 온라인 강의 검색엔진

     * 약 5만개의 온라인 강의에서 검색
     * 주제별 또는 대학별로 브라우징 가능
          + CS, Biz, Art & Design, Engineering, Math, Science..
     * 17만개의 리뷰를 통해서 강의품질 확인 가능
     * 하버드/스탠포드/MIT 를 포함한 1000여개의 대학 강의들
     * Coursera / Udemy 등의 베스트 강의 큐레이션
"
"https://news.hada.io/topic?id=6239","Gefyra - 빠르고 안정적인 쿠버네티스 기반 로컬 개발환경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Gefyra - 빠르고 안정적인 쿠버네티스 기반 로컬 개발환경

     * K8s 개발자들에서 완전히 새로운 개발 환경을 제공하는 오픈소스
     * 개발자 머신에서 서비스를 로컬 실행
     * 피처 브랜치를 프로덕션과 비슷한 K8s 환경에서 운영
     * Telepresense 2의 대체제
          + 개발자 머신이 클러스터의 일부가 되는 T2와 달리, Gefyra는 Wireguard 기반의 VPN을 이용해서 K8s 클러스터에 제한된 연결을 수행
          + 사이드카 패턴을 이용해서 개발 프로세스중에 ""sudo"" 권한을 요구하지 않음
"
"https://news.hada.io/topic?id=6124","왜 Browsing-over-Tor 대신 Onion 주소를 제공하는 걸 권장할까","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              왜 Browsing-over-Tor 대신 Onion 주소를 제공하는 걸 권장할까

     * 페이스북, BBC, NYT, 트위터가 Onion 주소를 별도로 제공하는 이유

첫번째 이점은 신뢰성과 가용성

     * Tor 브라우저에서 클릭시 정확한 사이트로의 연결을 보장
     * 혹시 있을수도 있는 ""Tor Exit Node"" 공격을 완화(mitigate)
     * "".onion"" 주소를 사용하므로 여러가지가 완화됨
          + 국가적인 웹 블로킹
          + TLS Man-In-The-Middle
          + SNI 필터링
          + DNS 센서쉽과 트래킹
          + 수많은 쿠키 추적 및 디지털 핑거프린팅
          + 비 Tor 브라우저들이 가질수 있는 수많은 위험들
     * Onion 주소를 사용하도록 광고하는 것은 Tor 사용을 증대시키는 효과가 있음
     * 트래픽 많은 사이트가 Onion 주소를 사용하면, 더 크고 풍부한 중간 릴레이를 활용하게 되므로 Tor Exit Node에 대한 부담이 줄어듬

두번째 이점은 [플랫폼]이 Tor 사용자들도 동등하게 대하겠다는 의지의 표현(Commitment) 이라는 것

     * 보통은 Tor를 사용하는 사용자들은 Unwashed Internet에서 오는 사람들과 섞여 있고, 사이트 스크래핑 또는 불쾌한 행동을 하기위해 오는 나쁜 사용자라고 생각함
     * 하지만 Onion 주소를 제공하는 것은, 플랫폼이 Tor를 사용하는 사람들에게 서비스를 제공하는 것을 명확히 보여주게 되며 이를 통해서 문제가 반전됨.
       Onion 주소를 통해 이뤄지는 ""나쁜 행동""들은 이제 지켜볼 수 있게 되고 mitigate 되어서, Tor를 사용하는 사람들에겐 최대한의 자유를 허용하며, 평판 기반 필터로 인터넷 위험관리를 하게 함
     * 즉, Onion 주소는 Tor 사용자의 요구를 진지하게 받아들이고 있음을 보증하는 약속이자 메커니즘
       → 구글 처럼 Tor 사용자에게 IP-reputation 기반 CAPTCHA를 끊임없이 요구하는 것 대신

   트위터, Tor 용 Onion 서비스 시작 글과 묶어서 보면 좋습니다.

   두번째 이점 부분이 원문을 옮기다보니 조금 이해하기 복잡했는데, 기본적으로는 Tor 라는게 불법용도라고 인식이 되다 보니
   실제로 Browsing-Over-Tor 로만 접속하게되면 그냥 익명성을 원하는 사용자들과 나쁜 사용자들이 분리가 되지 않았는데,
   이렇게 직접 Onion 주소로 제공하면 그런 의도들을 가려낼 수 있게 되니까, 단순히 익명을 원하는 사람들이 더 자유롭게 쓸 수 있다 그런 의미로 해석됩니다.
"
"https://news.hada.io/topic?id=6138","Tiktok, 음악 마케팅/배포 플랫폼 SoundOn 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Tiktok, 음악 마케팅/배포 플랫폼 SoundOn 공개

     * 아티스트 들이 자신의 음악을 더 많이 홍보할수 있도록 도와주는 플랫폼
     * 자신의 음악을 직접 TikTok 에 업로드 가능하며, Apple Music/Spotify/Pandora/Deezer/Zoox/Resso 등의 음악 스트리밍 서비스도 지원
     * 배포는 무료고, 모든 거래수수료도 면제
          + 바이트댄스가 가진 플랫폼인 TikTok 및 Resso 등에서는 아티스트가 로열티 100%를 받음
          + 다른 글로벌 스트리밍 서비스에서는 첫해엔 100% 이며, 2년차 부터는 90%만 받을 수 있음

   경쟁자인 DistroKid는 아티스트가 100% 수익을 가져가지만 년간 구독형 서비스로 운영합니다.
   또 다른 경쟁자인 TuneCore는 소셜엔 무료고, 스트리밍 플랫폼에는 싱글/앨범당 돈을 내는 구조로 운영합니다.
"
"https://news.hada.io/topic?id=6203","기술 창업자들의 고객지원 실수와 해결책들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         기술 창업자들의 고객지원 실수와 해결책들

    1. 티켓이 아니라 사람
    2. 고객의 고통을 이해하고, 사과하고, 인내에 감사하기
    3. 버그 리포트를 받으면 수정될 때까지 기다렸다 회신하지 말고, 먼저 회신하면서 수정 예상 타임라인 알려주기
    4. 화나고 무례한 고객의 상황을 이해하기. 선을 넘으면 예의를 지키되, 경계를 정할 것
    5. 티켓 클로즈에 최적화 하지 말고, 고객과 더 많이 대화하기
    6. 사용자가 불가능한 상황을 설명해도 그들이 틀렸다 얘기하지 말고, 컨텍스트를 물어보고 조사할 것. 대부분의 경우 그들이 맞고 당신이 틀림
    7. 환불 요청시 왜 환불을 받아야 하는 지를 설명해 달라고 요청하고, 좋은 해결책을 찾기 위해 노력하기
    8. 계정 해지를 요청하는 고객들은 종종 실제로 계정 해지를 원하지 않는 경우가 있음. 먼저 해지는 가능하다는 것을 알리고, 왜 해지 하려고 하는 지를 물어볼 것
"
"https://news.hada.io/topic?id=6221","Fastcompany 선정 2022년 가장 혁신적인 회사 50","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Fastcompany 선정 2022년 가장 혁신적인 회사 50

     * Stripe : 온라인 페이먼트 회사. Climate 프로그램으로 자사 시스템 이용 회사들에게 CO2 제거에 동참하게 권유중 (10개중 1개는 가입)
     * Solugen : 옥수수 시럽을 산업용 화학물질로 바꾸는 공정을 개발해서 기름,석탄,천연가스 사용량을 줄이는 회사
     * Twelve : 금속촉매와 재생에너지를 이용하여 CO2와 물 분자를 더 작은 원자단위로 분해한 다음, 제조공정에 사용가능한 새로운 화학물질로 재형성
     * BlocPower : 히트 펌프같은 기기로 빌딩에 전기를 보급해서 저소득/중산층 가정의 기름/가스 사용량을 줄이는 회사
     * Climate Trace : 300+개의 위성과 11000+개의 센서로 국가별 온실가스 배출량을 트래킹 하는 회사
     * Watershed : 소프트웨어로 회사의 탄소 배출량을 측정해서 탄소 다이어트를 도와주는 회사
     * Doconomy : 라이프스타일 계산기로 개인의 여간 탄소배출량을 추적. 밸류체인 전반에 걸치는 영향을 수량화
     * Microsoft : 비즈니스 생산성 개선
     * SpaceX : 신뢰할 수 있는 저비용의 로켓
     * Canva : 모두를 디자이너로 만드는 플랫폼
     * Hybe : 뮤지컬 멀티버스. 글로벌 대중문화에 대한 미국의 지배는 끝났다. BTS를 비롯하여 지속적으로 콘텐츠를 출시하고 팬덤을 육성
     * AB InBev : 세계 최대의 brewer 지만 로컬 임팩트에 주력중
     * Miro : 멀리 떨어진 팀을 위한 전자 칠판 협업 도구
     * Fanatics : 팬덤을 위한 라이센스 머천다이징 회사
     * Snap : 얼굴에서 몸(의류)으로 증강현실 렌즈의 확장
     * Flexport : 서플라이 체인을 관리하는 소프트웨어 플랫폼
     * Dapper Labs : NFT
     * Back Market : 중고 전자제품
     * Farfetch : 명품 쇼핑
     * BYD : 전기차
     * LivePerson : 고객 서비스용 챗봇
     * Chipotle : 멕시칸 음식 체인이지만, 매출의 46%가 디지털. 소셜플랫폼을 런치패드로 전환
     * Fifteen Percent Pledge : 상점들이 15%의 진열대를 Black-owned Brand에게 커밋하도록 만들기
     * 그외 Deduce, Ramp, Faire, Roblox, Food52, WarnerMedia, GoodLeap, GlaxoSmithKline, Populous, Walgreens, Guardhat, Framework, Otoy, Bluedot, Shipper, Promise, Shopify, Lili, Arctic Wolf, Planet Labs, Biotricity, Grove Collaborative, Carrot Fertility, Brightline, Maven, Surfline, World of Wonder
"
"https://news.hada.io/topic?id=6155","Windows Defender면 충분합니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Windows Defender면 충분합니다

     * 설정만 잘 한다면, 추가로 안티바이러스 프로그램 사서 설치할 필요없음
     * 로컬 그룹 정책 설정
          + MAPS 활성화(Microsoft Advanced Protection Service)
     * 랜섬웨어 보호
     * 파워쉘을 통한 추가 설정
          + Signature Update Interval을 1시간으로, 매 스캔마다 강제 업데이트하게
          + MAPS 및 PUA 등도 가능
     * 현재는 이름이 Microsoft Defender로 변경

   “ 설정만 잘 한다면”이 문제일 것 같네요.

   다음 기사에 보안 강화를 몇 가지 설정 권장사항이 있더군요.
   https://www.itworld.co.kr/news/180924

   Microsoft Defender의 숨겨진 설정을 확인하고 변경할 수 있는 ConfigureDefender라는 포터블 유틸리티도 있습니다.
"
