"https://news.hada.io/topic?id=11708","1993년식 6채널 GPS 수신기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           1993년식 6채널 GPS 수신기

     * 1993년에 Trimble, 선두 GPS 회사에서 제작한 6채널 GPS 수신기에 대한 기사
     * 구급차 모양의 GPS 수신기, 흔치 않고 흥미로운 디자인
     * Motorola 68HC000과 64k의 RAM이 포함된 장치
     * 빨간 불빛과 실크 스크린 스티어링 휠이 있는 수신기, 독특한 디자인을 더함
     * 사용자 Keelan, PCB의 8핀 헤더에 전력을 연결하고 시리얼 포트를 사용할 계획, 현재 시간과 위치를 표시하는 섀도우 박스 생성을 목표로 함
     * 장치의 목적이나 구급차에서의 사용 의도는 불분명, 일부 사용자들은 GPS를 구급차 제조업체에 홍보하기 위해 설계되었다고 추측함
     * 구급차 모양의 GPS 수신기에서 볼 수 있듯이, 과거 PCB 디자이너들의 창의성과 유머를 강조하는 기사
     * 이 게시물은 Mastodon, 분산형 소셜 네트워크에서의 대화의 일부임

        Hacker News 의견

     * 80년대 후반과 90년대 초반의 원래 GPS 수신기는 지도가 없었고 LCD 화면을 사용했습니다.
     * 초기 GPS 수신기, 예를 들어 Lowrance GlobalNav Sport는 6개의 AA 배터리를 필요로 했으며 충전이 불가능했습니다.
     * 이러한 초기 GPS 수신기는 위도, 경도, 그리고 방향 정보를 제공했습니다.
     * Lowrance GlobalNav Sport는 160 x 160 픽셀 디스플레이를 가지고 있었고, 배터리와 함께 2파운드(약 0.9kg)를 무게였습니다.
     * 지리적 정보, 예를 들어 마을/도시의 이름은 특정 지역에 대한 카트리지를 삽입함으로써 표시할 수 있었습니다.
     * 초기 GPS 수신기는 사용자가 여행하는 동안 선을 그릴 수 있도록 허용하는 ""웨이포인트""(위/경도 북마크)를 가지고 있었습니다.
     * GPS 기술은 90년대에 마법적으로 느껴졌으며, 우주의 위성을 들을 수 있는 능력을 가지고 있었습니다.
     * 초기 GPS 수신기는 군사 목적으로 사용하는 것을 방지하기 위해 임의로 약간 잘못된 위치 데이터를 가지고 있었습니다.
     * 기술은 수년 동안 발전해 왔으며, 현재 GPS 기술은 최대 1cm까지의 정확도를 달성할 수 있습니다.
     * Garmin은 1990년에 100 시리즈를 가지고 있었고, 첫 GPS 시계인 Forerunner 101은 2003년에 출시되었습니다.
     * 일부 초기 전자 엔지니어들은 프로토타입 PCB 디자인에 농담과 이스터 에그를 넣었습니다.
"
"https://news.hada.io/topic?id=11727","FFMpeg, 멀티쓰레드 트랜스코딩 파이프라인 도입","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      FFMpeg, 멀티쓰레드 트랜스코딩 파이프라인 도입

     * 2년간의 작업과 700개 이상의 준비 커밋끝에 완성
     * 완전히 동작하는 ""Multithreaded ffmpeg CLI"" 의 첫번째 버전

        Hacker News 의견

     * FFmpeg에서 다중 스레드 변환 파이프라인 도입에 대한 기사
     * 일부 사용자들은 원본 게시물이 트윗 대신 FFmpeg 개발자 메일링 리스트에 직접 연결되어야 했다고 제안
     * 한 사용자는 4코어 ARM 서버에서 눈에 띄는 병렬 처리 오버헤드 없이 상당한 속도 향상을 보고
     * VideoLAN Dev Days 2023에서 Anton의 발표는 주제에 대한 더 나은 이해를 위해 추천됨
     * 다중 스레딩 기능이 자동인지 아니면 특정 명령 줄 매개변수를 필요로 하는지에 대한 질문 제기
     * 비디오 편집 소프트웨어가 FFmpeg를 활용할 가능성에 대한 토론, 일부 사용자들은 명령 줄 인터페이스가 일부 사람들에게 장벽이 될 수 있다는 우려 표현
     * 일부 사용자들은 그래픽 카드에서 하드웨어 변환 지원이 없는 사람들을 위해 특히 더 빠른 변환 가능성에 대해 흥분
     * Dolby AC4 지원을 포함하여 FFmpeg에 대한 추가 개선에 대한 기대
"
"https://news.hada.io/topic?id=11805","이번 화요일부터 유닉스 타임스탬프가 17로 시작할 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     이번 화요일부터 유닉스 타임스탬프가 17로 시작할 예정

유닉스 타임스탬프 변환기 소개

     * 유닉스 타임스탬프는 1970년 1월 1일 UTC부터 시작하여 초 단위로 시간을 계산하는 방식임.
     * 이 시간 표기법은 전 세계 어디에서나 동일하게 적용되며, 컴퓨터 시스템에서 날짜 정보를 추적하고 정렬하는 데 유용함.
     * 웹사이트에서는 유닉스 타임스탬프를 인간이 읽을 수 있는 날짜와 시간으로 변환하는 도구를 제공함.

시간 단위로 변환된 유닉스 타임스탬프

     * 1시간은 3600초, 1일은 86400초, 1주는 604800초, 1개월(30.44일)은 2629743초, 1년(365.24일)은 31556926초로 환산됨.

2038년 1월 19일의 문제점

     * 2038년 1월 19일에는 32비트 오버플로우로 인해 유닉스 타임스탬프가 작동하지 않게 될 것임.
     * 이 문제를 해결하기 위해 수백만 개의 애플리케이션이 새로운 타임스탬프 규약을 채택하거나 64비트 시스템으로 이전해야 할 필요가 있음.

GN⁺의 의견

   이 기사에서 가장 중요한 내용은 유닉스 타임스탬프의 개념과 그것이 어떻게 전 세계적으로 일관된 시간 추적 방법으로 사용되는지에 대한 설명이다. 또한, 2038년에 발생할 32비트 오버플로우 문제와 이를 해결하기 위한 필요성을 강조함으로써, 기술의 지속 가능성과 발전에 대한 중요성을 부각시킨다. 이러한 내용은 소프트웨어 엔지니어링에 관심 있는 사람들에게 흥미롭고 유익한 정보를 제공하며, 기술의 미래와 관련된 중대한 이슈에 대한 인식을 높이는 데 기여한다.

        Hacker News 의견

     * 시간이 빠르게 흐르는 것에 대한 놀라움을 표현하며, 과거의 뉴욕 타임즈 홈페이지를 보여주는 링크를 공유함.
     * 유닉스 타임스탬프 1,600,000,000이 2020년 9월 13일에 있었으며, 이는 약 3년 2개월마다 발생하는 이벤트임. 2033년에는 유닉스 타임스탬프 2,000,000,000이 예정되어 있음.
     * 유닉스 타임스탬프 1,700,000,000을 Python, GNU date, BSD date를 사용하여 확인하는 방법을 공유함.
     * 특정 시간을 기념하는 티셔츠를 구매할 수 있는 웹사이트를 소개함.
     * 유닉스 타임스탬프가 10억으로 넘어가는 순간을 기억하며, 그 이후 세계적인 사건이 발생했음을 회상함.
     * 2009년에 유닉스 타임스탬프 1,234,567,890을 기념하는 모임에 참석했던 경험을 공유함.
     * 베르너 빈지의 소설 ""A Deepness in the Sky""에서 사용된 10진법 시간 단위에 대한 호감을 표현함.
     * 10진법 표현이 변하는 것보다 높은 순서의 비트가 0에서 1로 변할 때를 기념하는 것이 더 의미 있다고 주장함.
     * 1억 초라는 시간 단위에 대한 선호를 표현하며, 1.6e8 시대가 팬데믹이었다면 1.7e8 시대는 무엇을 가져올지 궁금해함.
     * 유닉스 타임스탬프와 관련하여 20,000번째 유닉스 날짜가 2024년 10월 4일임을 공유하며, 다음 라운드 유닉스 날짜는 2052년 2월 20일임을 언급함.
     * 다음 유닉스 타임스탬프 이벤트가 정각 3시에 발생할 것임을 알리며, 이를 확인하는 명령어를 제공함.
"
"https://news.hada.io/topic?id=11796","CLion Nova - 기존 CLion을 대체하는 새로운 IDE","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  CLion Nova - 기존 CLion을 대체하는 새로운 IDE

요약

     * CLion을 ""legacy""로 만들 새로운 ReSharper C++/Rider C++ 언어 엔진 기반의 IDE
     * 24년 안에 CLion Nova와 병합 될 예정
          + 그 전까지 Preview 빌드를 무료로 사용 가능
     * ""legacy"" 엔진 사용으로 인한 CLion의 오랜 성능, 품질 문제를 해결하기 위함
     * 새로운 이름은 ""CLion Nova""이며, 기존 CLion은 ""CLion Classic""으로 명명
     * Toolbox에서 프리뷰 다운로드 가능

  더 나아진 점들

     * 하이라이팅 속도, 더 빠른 강조 표시
     * 더욱 뛰어난 반응성 UI
     * 더 빨라진 사용 위치 찾기
     * 리팩토링 시 프리징 현상이 현저히 줄어듬
     * 더 빠른 텍스트 인덱싱

  새로운 이점들

     * 새로운 검사(Inspections), 빠른 수정(quick-fixes), #include 정렬 등
     * preprocessor directive hints﻿ 및 Push-to-Hint 모드와 같은 새로운 코드 힌트
     * 네임스페이스 별칭, scoped enumeration과 같은 새로운 리팩토링 기능들
"
"https://news.hada.io/topic?id=11810","HN 공개: 17세의 나이로 6개월 간 C 디버거 개발에 투자한 청소년","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                HN 공개: 17세의 나이로 6개월 간 C 디버거 개발에 투자한 청소년

Spray 디버거 소개

     * Spray는 C 코드를 위한 간단하고 이해하기 쉬운 디버거임.
     * 실행 중인 프로그램의 실행을 제어하고 상태를 검사 및 수정하는 기능 제공.
     * 디버거의 내부 작동에 대한 호기심과 디버깅을 더 접근하기 쉽게 만드는 방법 탐구 목적으로 개발 시작.

주요 기능

     * 함수, 파일 내 라인, 주소에 대한 중단점 설정.
     * 변수, 메모리 주소, 레지스터의 값 출력 및 설정.
     * C 문법 하이라이팅, 백트레이스, 단계별 실행.
     * 명령어 출력 형식을 지정하는 필터 기능.

개발 로드맵

     * 복잡한 구조체의 출력 및 수정.
     * 복잡한 구조체에 대한 문법 하이라이팅.
     * 프레임 포인터가 아닌 DWARF 기반 백트레이스.
     * 인라인 함수, 외부 라이브러리 로딩, 디버깅 중인 프로그램으로 보내진 시그널 캐치.

설치 방법

     * Spray 프론트엔드의 일부는 Scheme으로 작성되어 CHICKEN Scheme을 통해 C로 컴파일됨.
     * CHICKEN 설치 필요, libdwarf에 의존성이 있으므로 먼저 설치해야 함.
     * 저장소를 클론하고 make 명령어로 Spray를 설치.
     * $PATH에 추가하여 일반 명령어처럼 사용 가능.

Spray 사용법

     * 디버깅할 바이너리에 디버그 정보가 활성화되어 있어야 하며, 최적화를 비활성화해야 함.
     * Clang을 사용하여 프로그램을 컴파일해야 함.
     * 첫 번째 인수로 디버깅할 바이너리 이름을, 그 후의 인수로 디버깅할 프로그램의 인수를 전달.

명령어

    값 읽기 및 쓰기

     * 변수, 레지스터, 주소의 값을 출력하거나 설정.
     * 레지스터 이름은 AT&T 어셈블리 문법에 따라 % 접두사 사용.
     * 값은 10진수 또는 16진수로 지정 가능.

    중단점

     * 함수, 파일 내 라인, 주소에 중단점 설정 및 삭제.
     * continue 명령어로 다음 중단점까지 실행 계속.

    단계별 실행

     * 다음 라인으로 이동, 함수 내부로 들어가거나 현재 함수에서 벗어남.
     * 다음 명령어로 이동, 현재 위치에서 백트레이스 출력.

    필터

     * 출력 형식을 변경하는 필터 사용 가능.
     * print와 set 명령어 뒤에 필터를 붙여 출력 형식 변경.

기여 방법

     * 모든 기여 환영, 풀 리퀘스트 전에 로컬 테스트 스위트 실행하여 기능 파손 여부 확인.
     * 특정 값에 대한 off-by-one 오류로 인한 테스트 실패는 무시 가능.

참고 문헌

     * Sy Brand의 블로그 시리즈 ""Writing a Linux Debugger"", DWARF 5 표준, libdwarf 문서, Eli Bendersky의 ""How debuggers work"" 포스트.

GN⁺의 의견

   이 글에서 가장 중요한 것은 Spray가 C 코드를 위한 사용자 친화적인 디버거라는 점이며, 디버깅을 더 접근하기 쉽게 만드는 것에 초점을 맞추고 있다는 것입니다. 초급 소프트웨어 엔지니어에게도 이해하기 쉬운 구조와 명령어를 제공함으로써, 복잡한 디버깅 작업을 보다 쉽게 할 수 있도록 돕는 것이 매력적입니다. 또한, 개발 로드맵과 기여 방법이 명확히 제시되어 있어, 오픈 소스 프로젝트에 참여하고자 하는 개발자들에게 흥미로운 기회를 제공합니다.

        Hacker News 의견

     * 청소년 프로그래머의 코드가 특히 깔끔하고 일관성 있으며 모듈화가 잘 되어 있음. 이러한 프로젝트는 이진 포맷과 커널 API에 대한 비일상적인 지식을 필요로 함. 많은 ""고급"" 프로그래머들도 개념적인 수준에서 이와 같은 것을 구축하는 데 어려움을 겪을 수 있음.
          + 17세가 이러한 지식을 어떻게 습득하는지 궁금함. 책, 동료, 프로그래밍 클럽, 프로그래머 부모 등을 통한 것일까?
     * 젊은 프로그래머들의 코드를 읽는 것은 흥미로움. 경험은 부족하지만 상당한 수준의 지식으로 설계하는 것을 볼 수 있음. 저자는 빠르게 배우는 것 같고, 6개월의 작업 결과가 훌륭함.
     * 이러한 헌신적인 수준에 감탄함. Google Summer of Code, KDE Season of Code, Linux Foundation LFX, X.org EVoC과 같은 프로그램에 참여할 것을 추천함. 흥미로운 문제들이 많이 있음. 학생일 때 이런 프로그램들을 알았더라면 좋았을 것임. 이제는 전일제 직업을 가지고 있어 오픈 소스에 기여할 시간이 없음.
     * 프로젝트를 처음 살펴보니 잘 조직되어 있음. 칭찬할 만함.
          + 얼마나 오랫동안 프로그래밍을 해왔는지, 어떤 언어로 시작했는지 궁금함. 여러분보다 수십 년 연장자인 개발자들 중에는 Makefile을 작성할 줄 모르는 사람들이 많음.
          + 소스 코드에 인라인 이모지를 사용하는 것은 최신 유행인지, 아니면 비 ASCII 입력에 대한 주의를 기울이기 위한 것인지 궁금함.
     * 프로젝트에 대한 축하와 행운을 빔. 컴파일러는 컴퓨팅에 관심을 가지게 한 첫 번째 주제 중 하나임.
          + 여러 번 반복해서 읽은 책이 있으며, 현재 무료로 제공되고 있음. 컴파일러 부분에 관한 책이지만 디버깅에도 흥미로울 수 있음.
     * 17세 아이들도 여전히 CD를 알고 있음을 보여줌. 플로피 디스크 저장 아이콘도 아직은 구식이 아닐 수 있음.
     * 17세의 나이에 보여준 지식과 성숙함이 인상적임. 연구하고 활용하는 주제들은 대학교 수준에서 기대되며, 이 프로젝트는 대학원 수준의 과정에 속할 것임. 성공적인 경력을 기원함.
     * 젊은 시절 Turbo Pascal을 사용하여 2D 그래픽 라이브러리를 작성한 기억이 있음. 인터넷을 발견하기 전이라 개인적인 즐거움으로 끝났지만, 다른 사람들이 볼 수 있도록 만든 것에 대해 잘했다고 생각함. 코드가 깔끔하고 주석이 잘 되어 있으며 README가 명확함.
          + 작업을 세상에 내보내는 것은 두려운 일이지만, 사람들이 하는 말은 종종 그들 자신에 대한 것이기도 하므로, 그들의 말을 너무 심각하게 받아들이지 않아도 됨.
     * 프로젝트와 함께 ""디버거 작성하기"" 튜토리얼을 만드는 것이 지루할 수도 있지만 매우 유용할 것임.
     * 함수 이름과 인수 사이에 공백을 넣는 이유가 궁금함. 18년 동안 C 코드를 읽어온 사람으로서 이는 다소 이질적으로 느껴짐.
          + BSD 스타일을 선호하며, BSD 시스템을 사용하는 경우 'man style'을 참고하여 그 스타일을 시도해볼 것을 제안함.
"
"https://news.hada.io/topic?id=11806","BabaBASIC - 안드로이드용 QuickBASIC 4.5","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   BabaBASIC - 안드로이드용 QuickBASIC 4.5

     * 안드로이드 기기에서 QuickBASIC 4.5 프로그램을 작성하고 실행 가능
     * 80년대에 프로그래머였던 아버지가 남들에게 QuickBASIC 코드를 보여줄 수 있는 방법이 없냐고 물었는데 적절한 걸 못찾아서 밤새워 개발했다고
     * PuffinBASIC(Java로 작성된 BASIC 컴파일러/인터프리터) 을 Fork + Sora Editor(안드로이드용 다기능 에디터) + Termux
"
"https://news.hada.io/topic?id=11693","바이엘, Roundup 암 재판에서 332백만 달러의 판결 받아","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  바이엘, Roundup 암 재판에서 332백만 달러의 판결 받아

     * 제약 및 바이오기술 거대기업 바이엘, 제품인 몬산토의 Roundup 제초제와 관련한 재판에서 3억 3,200만 달러의 판결을 받다.
     * 2020년에 비호지킨 림프종의 희귀한 형태로 진단 받은 마이크 데니스가 소송을 제기했으며, 그의 암은 수십 년 동안 Roundup을 사용한 것과 관련이 있다고 주장했다.
     * Roundup의 활성 성분인 글리포세이트가 데니스의 질병 원인이라고 주장되었다.
     * 배심원단은 몬산토가 Roundup의 위험성에 대한 경고를 제공하지 않은 바이엘의 실패를 발견했다. 그러나 제품 설계에 결함이 없고 회사가 과실이 없다는 바이엘의 주장에 대해서도 동의했다.
     * 데니스는 보상 손해배상으로 700만 달러와 처벌적 손해배상으로 3억 2,500만 달러를 받게 되었다.
     * 바이엘은 재판 중에 중대하고 뒤집을 수 있는 법적, 증거적 오류가 있었다며 이 판결에 대해 항소할 계획이다.
     * 바이엘은 2018년에 630억 달러로 몬산토를 인수했으며, 이후 Roundup과 관련된 수천 건의 청구와 소송을 처리해 왔다. 2020년에 바이엘은 제기된 및 제기되지 않은 약 125,000건의 청구를 해결하기 위해 최대 109억 달러를 지불하겠다고 발표했다.

        Hacker News 의견

     * 일부 댓글에서는 처벌적 손해 배상금이 첫 번째 원고가 아닌 모든 피해자들에게 분배되어야 한다는 주장이 있다.
     * 판결은 Bayer의 디자인의 부주의가 아닌 위험에 대한 경고의 부재에 기반하였다.
     * 원인에 대한 논란이 있으며, 일부는 Roundup이 암을 유발한다는 역학적 또는 메커니즘적 증거가 없다고 주장한다.
     * 일부 댓글에서는 경고가 종종 무시되며 이러한 사례의 영향이 중요한 환경 정의 문제가 될 수 있다는 주장이 있다.
     * Monsanto/Bayer가 피해자들에게 지급할 펀드를 만들고 잠재적인 미래의 사례를 위해 홍보 및 모니터링을 실시해야 한다는 제안이 있다.
     * 일부 댓글에서는 농업에서 위험한 화학물질의 사용에 대한 우려와 GMO-free 제품에 대한 지지를 표현한다.
     * Dow Chemical과 Union Carbide에 대한 비교가 있으며, 이들은 자산을 인수한 후 책임이 없다고 주장했다.
     * 일부 댓글에서는 이러한 소송이 Bayer와 같은 회사에게는 단지 비즈니스 비용일 뿐이라는 주장이 있다. Bayer는 2022년에 총 수익 53.4B를 기록했다.
     * 일부 댓글에서는 이러한 소송이 후진 사회의 일부이며, glyphosate가 암과 연결되는 명확한 증거 없이는 진행되어서는 안 된다고 주장한다.
     * 일부 댓글에서는 소송이 Monsanto가 Bayer, 유럽 회사에 인수된 후에 시작되었다는 주장이 있다.
     * Roundup에 노출된 후에 암으로 진단받은 개인들에 대한 개인적인 이야기가 공유되었으며, 이는 잠재적인 원인과 결과 관계에 대한 질문을 제기한다.
"
"https://news.hada.io/topic?id=11715","Show HN: WireHub - 간편하게 WireGuard 네트워크를 생성하고 공유하세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Show HN: WireHub - 간편하게 WireGuard 네트워크를 생성하고 공유하세요

     * WireHub은 WireGuard 네트워크의 생성 및 공유를 단순화하는 WireGuard 구성 생성기입니다.
     * 여러 네트워크와 장치, 레이블 기반 접근 규칙, 초대 및 권한, WireGuard PrivateKeys의 안전한 저장을 지원합니다.
     * PrivateKeys는 브라우저 내에서 생성되거나 가져올 수 있으며, 선택한 비밀번호로 WebCrypto를 사용하여 브라우저 내에서 암호화됩니다.
     * 네트워크 장치 간의 피어링은 레이블 기반 규칙으로 정의되며, 모든 Peer, AllowedIPs, PreSharedKey 요구사항을 포함합니다.
     * 네트워크 멤버는 접근 및 제어 수준에 따라 게스트, 멤버, 매니저 또는 관리자로 초대될 수 있습니다.
     * WireHub은 개인 장치용 '홈' 네트워크와 업무 관련 장치용 '오피스' 네트워크 등 여러 네트워크를 생성할 수 있습니다.
     * 노트북, 휴대폰, 서버 또는 기타 WireGuard 지원 장치를 이러한 네트워크에 추가할 수 있습니다.
     * 장치 간의 연결은 단방향 레이블 기반 연결 규칙을 통해 이루어집니다.
     * WireHub은 또한 네트워크에서 누가 무엇을 할 수 있는지 지정하는 역할 기반 접근 제어를 제공합니다.
     * 안전한 Private/Public Keys 저장 및 관리 방법을 제공합니다.
     * WireHub은 현재 베타 버전이며 무료로 가입할 수 있습니다.

        Hacker News 의견

     * WireHub이 비즈니스 용도로 유용한 도구로 간주되며, WireGuard 네트워크를 설정하고 관리하는 Tailscale의 대안을 제공합니다.
     * WireHub과 같은 제3자 도구를 사용하는 것에 대한 개인 정보 보호 및 보안에 대한 우려가 제기되며, 네트워크 구성이 손상될 가능성에 대해 특히 언급됩니다.
     * WireHub에서 WireGuard 기술의 사용이 칭찬받으며, 한 댓글러는 자신의 자체 호스팅 솔루션을 공유하며 이것도 WireGuard를 활용합니다.
     * 네트워크를 연결하는 기능을 추가하고 문서에 ""example.com""을 사용하는 등 WireHub을 개선하기 위한 제안이 제시됩니다.
     * WireHub, Tailscale, 그리고 다른 유사한 도구들 사이에서 비교가 이루어지며, WireHub의 기능(예: MagicDNS)이 WireGuard만으로 어떻게 복제될 수 있는지에 대한 질문이 제기됩니다.
     * Netmaker.io와 같은 자체 호스팅 솔루션에 비해 WireHub의 보안에 대한 질문이 있습니다.
     * WireHub이 ZeroTier와 비교되며, 두 도구 간의 주요 차이점에 대한 질문이 제기됩니다.
     * WireHub이 브라우저 기반 프록시인지 아니면 WireGuard 구성을 안전하게 생성하는 도구인지에 대한 혼란이 있습니다.
     * WireHub을 시도해 보는 데 관심이 있으며, 도구의 창작자의 희망과 이를 수익화할 계획이 있는지에 대한 질문이 있습니다.
     * 사용자가 WireHub의 ""에이전트"" 부분을 처리하도록 하는 결정이 좋은 아이디어로 간주되며, IP를 조회하고 업데이트하는 API를 도입하는 등의 미래 개선을 위한 제안이 있습니다.
"
"https://news.hada.io/topic?id=11800","여기에 도달한 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               여기에 도달한 방법

해커뉴스 첫 페이지에 오르는 방법

     * 해커뉴스의 첫 페이지에 오르기 위한 유머러스한 기사.
     * 다른 기사와 관련 없이 작성되었으며, 실제로 첫 페이지에 올랐음.
     * 2분 정도의 짧은 글.

GN⁺의 의견

     * 이 기사의 핵심은 해커뉴스의 첫 페이지에 오르는 것이 어떤 의미를 가지는지에 대한 재치 있는 접근.
     * 소프트웨어 엔지니어링 커뮤니티 내에서 해커뉴스는 영향력 있는 플랫폼이기 때문에, 첫 페이지에 오르는 것은 많은 주목을 받을 수 있는 기회.
     * 이 글은 해커뉴스 사용자들에게 흥미로운 주제를 다루면서도 유머를 섞어 독자들에게 즐거움을 제공함으로써 긍정적인 반응을 이끌어냄.

        Hacker News 의견

     * 한 사용자는 자신이 19살 때 MDMA를 판매하다가 경찰에 체포되었으나, 경찰의 관용으로 풀려난 경험을 공유했다. 이 사건 이후 그는 삶의 목표를 다른 사람들에게 좋은 영향을 주는 것으로 바꾸었다고 말함.
     * 다른 사용자는 자신이 공동 창립한 Unlocked Labs에서 일하는 전과자인 프레스턴이 훌륭한 직원이라고 언급하며, 수감자들이 사회에 재진입할 때 그들을 준비시키는 것이 중요하다고 강조함.
     * 전직 소프트웨어 엔지니어이자 현재 교도소 교정관으로 일하는 사용자는 교도소 내 교육 프로그램이 긍정적이라고 생각하지만, 예산 삭감과 인력 부족으로 인해 이러한 프로그램을 확대하는 데 어려움이 있다고 설명함.
     * 한 사용자는 메인 주의 교정 모델이 다른 시스템에서 부족한 기회를 드러내는 좋은 예라고 언급하며, 다른 교도소 시스템이 이를 참고하기를 바람.
     * 노르웨이 모델을 언급하며, 수감자들을 돕는 것이 재범률을 낮출 수 있다고 생각하지만, 어떻게 도와야 할지 모르겠다는 사용자의 의견이 있음.
     * 수감 중인 사람들에게 연락하는 것이 그들에게 큰 도움이 될 수 있다고 조언하는 사용자의 댓글이 있음.
     * 한 사용자는 경제적으로 자립할 수 있도록 지원하는 'Dorm Room Welfare' 프로그램을 제안하며, 이를 통해 복지 프로그램을 대체할 수 있다고 주장함.
     * 마약 중독 경험이 있는 사용자는 다크넷을 통한 약물 구매가 안전하다고 주장하며, 건강 관리 시스템의 문제를 해결해야 한다고 강조함.
     * 영국 교도소 시스템에 대한 책을 읽었다고 언급하는 사용자는 재범률이 높은 이유가 교도소 시스템의 문제 때문이라고 지적함.
     * 미국의 수감률이 매우 높다는 사실에 놀란 사용자의 댓글이 있음.
"
"https://news.hada.io/topic?id=11792","Contour - C++로 작성된 현대적이고 빠른 터미널 에뮬레이터","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Contour - C++로 작성된 현대적이고 빠른 터미널 에뮬레이터

     * 리눅스, OS/X, FreeBSD, 윈도우 지원
     * GPU 가속 렌더링, High-DPI, 256 및 트루컬러 지원
     * 폰트 Ligatures, 유니코드 Emoji 및 Grapheme, 볼드/이탤릭 폰트, Sixel 인라인 이미지
     * 런타임에 Configuration 리로드 가능
     * 클릭가능한 하이퍼 링크, 텍스트 Reflow 등
"
"https://news.hada.io/topic?id=11808","React Datasheet Grid - Airtable/Excel과 비슷한 스프레드시트 컴포넌트 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         React Datasheet Grid - Airtable/Excel과 비슷한 스프레드시트 컴포넌트

     * 사용하기 쉽고, 가상화된 아키텍처로 수십만 로우를 빠르게 관리
     * 모든 동작 개인화 가능 및 자신의 위젯 구현 가능
     * 엑셀, 구글시트, 노션 등에서 Copy/Paste 지원
     * 키보드 네비게이션 및 단축키
     * 우클릭 및 커스텀 컨텍스트 메뉴 지원
     * 코너 드래깅을 통한 선택 확장 지원
     * 부드러운 애니메이션
     * Typescript 오픈소스
"
"https://news.hada.io/topic?id=11793","다른 모든 사람들이 하는 방식대로 AI 제품을 만들지 마세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   다른 모든 사람들이 하는 방식대로 AI 제품을 만들지 마세요

AI 제품 개발의 잘못된 접근 방식

     * 대부분의 AI 제품은 다른 모델을 감싸는 형태로, 예를 들어 ChatGPT API를 호출하는 것과 같은 방식으로 구현됨.
     * 이러한 접근 방식은 구현이 쉽고 멋진 기능을 수행할 수 있지만, 차별화되지 않고, 비용이 많이 들며, 속도가 느리다는 문제가 있음.
     * AI 제품의 고유한 가치 제안이 중요할 때, 쉽게 복제될 수 있는 기술에 의존하는 것은 위험한 위치에 있음을 의미함.

LLM의 고비용과 느린 속도 문제

     * 대규모 언어 모델(Large Language Models, LLM)은 다양성을 제공하지만, 그 크기와 복잡성 때문에 운영 비용이 매우 높음.
     * 예를 들어, GitHub Copilot은 사용자당 평균 $20의 비용이 들지만 $10만 청구하여 손실을 보고 있음.
     * LLM은 느린 속도로 인해 실시간 반응이 필요한 애플리케이션에서 상당한 문제를 일으킬 수 있음.

LLM의 한계와 맞춤화 문제

     * LLM은 미세 조정을 지원하지만, 특정 문제에 대한 해결책을 제공하는 데는 한계가 있음.
     * Builder.io의 Visual Copilot 개발 시 LLM을 사용하여 Figma 디자인을 코드로 변환하려 했으나, 느리고 비용이 많이 들며 품질이 낮은 결과물에 도달함.

자체 도구 체인 생성의 해결책

     * Builder.io는 자체 도구 체인을 생성하여 문제를 해결함.
     * 미세 조정된 LLM, 사용자 정의 컴파일러, 맞춤형 훈련 모델을 결합하여 사용함.
     * 이 방법은 더 빠르고, 더 신뢰할 수 있으며, 비용이 적게 들고, 더 차별화된 제품을 만들 수 있음.

AI 제품 개발에 대한 일반적인 오해

     * 많은 사람들은 AI 제품이 하나의 슈퍼 모델에 의해 모든 핵심 기술이 처리된다고 오해함.
     * 자율 주행 차량의 예를 들면, 하나의 거대한 AI가 모든 입력을 처리하여 결정을 내리는 것으로 생각하지만, 실제로는 전문화된 여러 모델과 일반 코드가 결합된 것임.

실제 AI 구축 시작 방법

     * AI 솔루션을 위해 Visual Copilot에서 사용한 접근 방식을 탐색하는 것이 좋음.
     * 문제 공간을 일반 프로그래밍 관행을 사용하여 탐색하고, 특수 모델이 필요한 영역을 결정함.
     * 특정 문제에 대해 표준 코딩이 잘 해결하지 못하는 경우, 잘 정립된 AI 모델로 데이터를 생성하고 자체 모델을 훈련함.

GN⁺의 의견

     * 가장 중요한 것은 AI 제품 개발 시 다른 사람들이 하는 방식을 피하고, 자체 도구 체인을 만들어 차별화된 가치를 제공하는 것임.
     * 이 글은 AI 기술의 혁신적인 사용과 개발자들이 AI를 활용하여 독창적인 제품을 만들 수 있는 방법을 제시함으로써 흥미롭고 매력적임.
"
"https://news.hada.io/topic?id=11749","홈 어시스턴트, 차고문 개폐기 API 통합 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       홈 어시스턴트, 차고문 개폐기 API 통합 차단

     * 통합 제거: Home Assistant, 2023년 12월 6일 2023.12 버전에서 MyQ 통합 제거 예정
     * 체임벌린의 입장: MyQ 소유 체임벌린 그룹, 생태계 보호를 위해 타사 앱 통합 차단 지속
     * 사용자에 미치는 영향: MyQ 결정으로 Home Assistant 사용자는 MyQ 앱 또는 공인 파트너로의 제어 제한
     * 통합 역사: MyQ 통합, 체임벌린의 제한으로 인한 반복적인 오류 및 수정 문제 발생
     * 체임벌린의 설명: 무단 접근 제한으로 1000만 사용자의 사용자 경험 및 신뢰성 향상 목표
     * Home Assistant의 노력: 체임벌린 그룹과의 협상 시도, 공식 응답 미수신
     * 파트너십 장애: 오픈소스인 Home Assistant, 파트너십 비용 부담 불가 및 원칙적 불일치
     * 대체 솔루션: Home Assistant, MyQ 사용자에게 MyQ 차고문 제어를 위한 로컬 디바이스 연결 대안 ratgdo 추천
     * Home Assistant의 가치: 사용자는 추가 비용 없이 자신의 장치 및 데이터에 자유롭게 접근해야 한다는 신념 유지

        Hacker News 의견

     * Lockitron 기술, Amazon Key에 통합된 Chamberlain 판매, 비디오 저장 및 상업 접근 중점
     * Chamberlain MyQ 카메라 및 차고 접근 프로그램, 배송 사기 감소 목표
     * 자동차 산업 암호화 키와 달리 구식 무선 프로토콜로 인한 차고문 보안 취약
     * Chamberlain 신임 CTO, 스마트 접근 소프트웨어 회사로의 변화 추진
     * Chamberlain의 타사 통합 차단 결정에 대한 사용자 불만, 대체 브랜드나 ratgdo 솔루션으로 전환
     * Home Assistant 사용자, 구매 결정 안내를 위한 제조사 타사 통합 태도 목록 유지 제안
     * Chamberlain의 Amazon Key 차고 내 배송 서비스 중심, 인터넷 연결 중요성 강조
     * 서버 연결 의존성, 소비자 소유권 및 제어 상실 인식
     * RatGDO, 클라우드 의존 없는 Chamberlain MyQ 오프너 스마트화를 위한 무료 오픈소스 대안 추천
     * 지역 제어 또는 타사 소프트웨어 접근 부족 장치 라벨링을 통한 소비자 투명성 요구
"
"https://news.hada.io/topic?id=11783","인간 친화적인 AI 기술 'Humane AI Pin'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     인간 친화적인 AI 기술 'Humane AI Pin'

새로운 기술 제품 출시

     * 새로운 기술 제품이 $699의 가격으로 출시됨.
     * 미국 내 주문은 11월 16일부터 시작됨.
     * 제품에 대한 상세한 기술 정보는 'trustcosmostech' 웹사이트에서 확인 가능.

GN⁺의 의견

     * 이 기사에서 가장 중요한 정보는 새로운 기술 제품이 출시되었으며, 가격과 주문 시작 날짜가 공개되었다는 점임.
     * 기술 애호가들과 소비자들에게 이 기사는 새로운 제품에 대한 흥미를 유발하고, 구매를 고려하게 만드는 유익한 정보를 제공함.

        Hacker News 의견

     * 관련 진행 중인 스레드:
          + 인간적인 AI 핀 캠페인이 휴대폰을 대체하기 위해 시작됨 - 2023년 11월 (130개의 댓글)
     * 새로운 시도에 대한 흥분:
          + 비록 성공 여부가 불투명하고 프라이버시 문제나 배터리 수명 제한이 있으며 비용이 많은 사람들에게 부담이 될 수 있지만, 새로운 상호작용 방식에 대한 시도와 디자인이 인상적임.
     * AI의 오류:
          + 데모에서 AI가 태양의 일식에 대한 잘못된 정보를 제공하는 것을 보여주며, 기술 데모에서 AI의 정확성을 확인하는 것의 중요성을 강조함.
     * 대중적인 컴퓨터 대화의 어려움:
          + 사람들이 공공장소에서 컴퓨터와 대화하는 것을 꺼려하며, Alexa와 같은 기술이 집 안에서는 어느 정도 사용되지만, 음성 인터페이스의 한계로 인해 사용이 줄어듦.
     * 기능성 비교:
          + 이 제품이 기능적으로는 애플 워치보다 떨어지며, 패션쇼에서의 홍보가 구글 글래스의 실패를 연상시킴.
     * 음성 인터페이스의 사회적 인식 문제:
          + 공공장소에서 음성 인터페이스를 사용할 때의 부정적인 인식과 개인정보 보호의 필요성에 대한 우려를 표현함.
     * 디스플레이 기술에 대한 회의적인 시각:
          + 레이저 잉크 디스플레이 기술에 대해 회의적이며, 실제 사용 환경에서의 효용성에 대해 의문을 제기함.
     * 제품의 목적과 경쟁력에 대한 의문:
          + 제품이 해결하고자 하는 문제와 애플과 같은 경쟁사에 의해 쉽게 대체될 수 있는 점, 그리고 음성 인터페이스와 화면 제거에 대한 필요성에 대해 의문을 제기함.
     * 정보 확인의 중요성:
          + 제공된 정보의 정확성을 확인하지 않은 비디오 콘텐츠에 대한 지적으로, 실제 일식이 관찰되는 위치에 대한 잘못된 정보를 예로 듦.
     * 영화와 현실의 차이:
          + 영화에서 보여지는 기술이 현실에서 구현되어야 한다는 생각에 대한 비판으로, 영화 속의 기술이 현실에서는 다른 사람들과의 상호작용에 영향을 줄 수 있음을 지적함.
"
"https://news.hada.io/topic?id=11777","구글에서 Site Reliability Engineering(SRE) 20년간 얻은 교훈들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           구글에서 Site Reliability Engineering(SRE) 20년간 얻은 교훈들

   사이트 신뢰성 엔지니어링(SRE)에서 얻은 20년의 교훈

YouTube에서 배운 신뢰성 엔지니어링 교훈

     * 위험 완화 조치의 선택
          + 중대한 오류 발생 시 해당 오류의 심각성에 비례하는 위험 완화 조치를 선택해야 함.
          + 과도한 위험 완화 조치는 부작용을 초래할 수 있으며, 표준 절차를 우회할 정당한 이유가 있을 때만 그렇게 함.
     * 비상 상황에 대비한 회복 메커니즘 테스트
          + 회복 메커니즘과 완화 조치는 사전에 충분히 연습하고 테스트하여 위급 상황에서도 효과적으로 대처할 수 있음.
          + 테스트를 통해 미래의 리스크를 줄이고 대응 능력을 향상시킴.
     * 변경 사항 점진적 도입(카나리아 테스트를 적용)
          + 변경 사항을 전면적으로 배포하기 전에 점진적으로 도입하여, 이슈 발생 시 전체 시스템에 영향을 미치지 않도록 함.
          + YouTube의 캐싱 구성 변경 사례를 통해, 작은 변경이라도 체계적인 도입이 중요함을 인식함.

Google Calendar로부터 배운 교훈

     * 긴급 중단 기능의 중요성
          + 잠재적 위험을 가진 변경 사항에 대해 신속하게 대응할 수 있는 ""큰 붉은 버튼""과 같은 기능이 필요함.
          + 서비스 의존성에 대비하여 긴급 중단 기능을 마련해야 함.
     * 통합 테스트의 필요성
          + 단위 테스트는 제한된 범위에서 유용하지만, 통합 테스트를 통해 실제 환경과 연동하여 시스템의 적합성을 검증해야 함.
          + Google Calendar의 오류 사례로부터, 실제 사용 경로를 따르는 테스트의 중요성을 인식함.

2017년 구글의 교훈

     * 비상 상황에 대비한 통신 채널의 중요성
          + 통신 채널 및 백업 채널에 대한 준비가 필요함
          + 서비스 중단 시, 의존적이지 않은 여러 통신 수단을 마련하고, 그 효율성을 테스트해야 함.
     * 성능 저하 시 최소한의 기능 유지
          + 서비스가 완전히 중단되지 않도록, 성능 저하 상태에서도 기본적인 기능을 제공할 수 있도록 설계해야 함.

재난 복원력에 대한 테스트

     * 재난 복원력과 회복력 테스트
          + 서비스나 시스템의 복원력을 테스트하여, 재난 상황에서도 지속 가능성을 확보해야 함.
          + 회복 테스트를 통해 시스템이 중단 후 정상 상태로 돌아갈 수 있는지 확인해야 함.

자동화된 완화 조치의 중요성

     * 완화 조치 자동화
          + 다중 네트워크 장애 시 수동으로 처리하는 대신 자동화된 완화 조치를 통해 문제 해결 시간을 단축시켜야 함.

배포 사이 시간 단축

     * 빈번한 롤아웃 진행
          + 롤아웃 간의 긴 시간 지연은 시스템 안전성을 판단
     * 하나의 글로벌 하드웨어 버전은 단일 실패 지점임
          + 하나의 특정 모델에만 의존하는 것은 운영을 단순화할 수 있지만, 해당 모델에 문제가 발생하면 중요한 기능 수행이 중단될 수 있음
          + 다양한 네트워크 백본의 존재는 전체적인 중단을 방지하고 우선순위가 높은 트래픽을 여전히 작동하는 대안으로 라우팅할 수 있게 함
"
"https://news.hada.io/topic?id=11788","당신은 승리하거나 배웁니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             당신은 승리하거나 배웁니다

Tumblr의 현재 상황 요약

     * Automattic이 2019년에 인수한 Tumblr의 활동 및 수익 증가에 실패함.
     * Tumblr는 신뢰 및 안전 팀과 지원 팀의 최소 인원으로 유지될 예정이며, 대부분의 139명의 직원은 Automattic 내의 다른 프로젝트로 이동함.

Automattic CEO의 투명한 공개

     * Automattic의 창립자 겸 CEO Matt Mullenweg이 Tumblr에 대한 내부 게시물을 공개함.
     * Tumblr의 미래에 대한 중요한 맥락을 제공하며, 다른 기술 회사들과 다른 방식으로 문제를 처리하는 Automattic의 사례로 평가됨.

Tumblr 커뮤니티와의 소통

     * Matt Mullenweg이 Tumblr 커뮤니티의 질문에 답변함.
     * Tumblr의 지속 가능성에 대한 도전을 강조하며, 월간 활성 사용자 1150만 명 중 단 0.2%인 2만 7천 명만이 구독함.

Tumblr의 미래에 대한 다양한 의견

     * Tumblr의 직원 수에 대한 오해와 내부 명칭에 대한 질문이 있음.
     * Tumblr가 포르노 콘텐츠를 금지한 것은 Verizon의 결정이었음.
     * Tumblr와 Fediverse 통합 계획이 취소됨.

Tumblr 사용자의 반응

     * Tumblr를 주요 소셜 미디어 플랫폼으로 사용하는 젊은 사용자들이 있음.
     * Tumblr에 공유 기능 추가를 제안하는 등 플랫폼 개선에 대한 아이디어가 제시됨.
     * Tumblr가 특정 법적 제약에 굴복한 결과에 대한 비판이 있음.

Tumblr의 영향과 미래 전망

     * Tumblr가 다른 소셜 미디어에 영향을 미친 것에 대한 우려 표현.
     * Tumblr의 오픈 소스화를 제안하는 의견이 있음.
     * Tumblr가 여전히 잠재력을 가지고 있으며, 그들의 목소리를 찾지 못한 것이 아쉽다는 의견이 있음.

GN⁺의 의견

     * Tumblr의 현재 상황은 기술 산업 내에서 일반적인 인수 후의 어려움을 반영하는 사례임.
     * Automattic의 CEO가 내부적인 문제를 공개적으로 투명하게 공유한 점은 다른 기술 회사들과 차별화되는 점으로, 이러한 솔직함은 업계 내에서 긍정적인 사례로 평가될 수 있음.
     * Tumblr의 미래에 대한 불확실성과 커뮤니티의 다양한 반응은 소셜 미디어 플랫폼의 지속 가능성과 변화에 대한 중요한 토론을 촉발시키고 있으며, 이는 많은 이들에게 흥미로운 주제임.

        Hacker News 의견

     * 텀블러 CEO 발언 요약:
          + 텀블러가 연간 3천만 달러의 적자를 기록 중임.
          + 적자 상태를 영원히 지속할 수 없어 다양한 수익 창출 방안을 모색 중임.
          + 사용자들에게 텀블러를 지지하고 싶다면 상품 구매를 부탁함.
     * 텀블러의 수익화 전략에 대한 의견:
          + Automattic 인수 이후 텀블러의 수익화 전략은 다양한 시도를 하는 것임.
          + 사용자 기반은 수익화 시도에 적대적이어서 어려움을 겪음.
          + 'Tumblr Post Plus'와 같은 구독 서비스 시도가 사용자의 반발로 취소됨.
          + 상품 판매, 팁 기능, 자신의 게시물 홍보, 사용자 이름 옆의 코스메틱 체크 마크, 게시물 홍보 등 다양한 전략을 시도했으나 성공적이지 못함.
     * 텀블러의 ActivityPub 통합 계획에 대한 언급:
          + 텀블러의 ActivityPub 통합 발표는 계획 없이 이루어졌고, 구현 방법을 고민하자마자 취소됨.
     * 텀블러 대안에 대한 질문:
          + 강제 로그인 없이 텍스트와 사진 게시물 갤러리를 제공하는 대안을 찾음.
          + 텀블러는 사용자 인터페이스가 깔끔하고 HTML 수정이 가능하여 이러한 요구를 충족함.
          + 다른 소셜 미디어는 사용자를 붙잡기 위해 지속적으로 방해하고 감정을 자극함에 반해, 텀블러는 상대적으로 안도감을 줌.
     * 텀블러의 성인 콘텐츠에 대한 의견:
          + MindGeek이 텀블러를 인수하여 성인 콘텐츠를 다시 허용해야 한다는 의견 제시.
          + 텀블러는 포르노가 아닌 성인 공간으로서의 성공을 거둠.
     * Automattic CEO의 텀블러에 대한 견해:
          + Automattic CEO는 텀블러의 변화를 지지하며 성공 가능성을 믿음.
          + 작은 팀으로 큰 성과를 내는 OpenAI와 Telegram과 같은 사례를 텀블러에서도 재현하길 희망함.
     * 텀블러의 미래에 대한 우려:
          + 텀블러가 기업에 의해 커뮤니티가 질식당하는 사례로 비즈니스 교과서에 실릴 것이라는 의견.
          + 텀블러의 광고 판매가 어려워 다시 매각될 수도 있다는 추측.
          + Reddit은 성인 콘텐츠에 대한 이의를 극복하고 성공했으나 텀블러는 그러지 못함.
     * 텀블러의 과거와 현재에 대한 평가:
          + 텀블러는 4chan에 비해 긍정적인 대안으로, 창의성이 넘치는 공간이었음.
          + 메타, TikTok 등의 플랫폼이 콘텐츠 생성과 배포를 독점하면서 웹의 영향력이 약화됨.
     * Automattic 제품에 대한 비판:
          + Automattic의 제품 카탈로그는 전성기를 지난 서비스들의 '코끼리 무덤'으로 보임.
     * Threads 버전에 대한 대안 제시:
          + 더 접근하기 쉬운 non-Threads 버전의 링크 공유.
"
"https://news.hada.io/topic?id=11787","Servo, NLnet 재단으로부터의 지원금 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Servo, NLnet 재단으로부터의 지원금 발표

서보 프로젝트, NLnet 재단으로부터 지원금 획득

     * 서보(Servo) 프로젝트가 NLnet 재단으로부터 지원금을 받아 여러 기능을 향상시키는 데 사용됨.
     * 지원금을 통해 서보는 CSS float 지원 완성, 다양한 언어에 대한 인라인 레이아웃 지원 확대, 초기 <table> 지원 추가를 목표로 함.

CSS Floats 지원

     * 서보는 2023년 중반부터 CSS floats 지원을 위한 작업을 진행 중임.
     * CSS floats와 관련된 /css/CSS2/floats/ 및 /css/CSS2/floats-clear/ 테스트에서 평균 80% 이상의 통과율 달성을 목표로 함.
     * 최근 floats 테스트에서 82.2%의 WPT(Web Platform Tests) 통과율을 기록하며 목표에 근접함.

인라인 레이아웃에서의 다국어 지원 확대

     * 서보의 레이아웃 엔진은 라틴 알파벳을 사용하지 않는 언어를 렌더링하는 데 필요한 중요 기능이 부족함.
     * 올바른 폰트 선택, 오른쪽에서 왼쪽으로 쓰는 스크립트 지원, 논리적 속성 등을 개선하여 다양한 콘텐츠 표시 지원을 목표로 함.

초기 <table> 지원

     * HTML 테이블은 중요하고 널리 사용되는 기능임에도 서보의 새로운 레이아웃 엔진은 아직 테이블을 지원하지 않음.
     * 위키피디아에서 사용되는 테이블을 렌더링할 수 있도록 서보에 초기 테이블 지원을 구현하는 것이 주요 목표임.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 오픈 소스 웹 렌더링 엔진인 서보가 NLnet 재단으로부터 지원금을 받아 기능을 향상시키고 있다는 것임. 이는 웹 개발자와 기술에 관심 있는 사람들에게 흥미로운 소식이며, 서보가 더 많은 웹 표준을 준수하고 다양한 언어와 레이아웃을 지원함으로써 웹의 다양성과 접근성을 높이는 데 기여할 것으로 기대됨.
"
"https://news.hada.io/topic?id=11686","Android용 Firefox, 곧 Extension을 지원할 예정 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Android용 Firefox, 곧 Extension을 지원할 예정

     * Firefox 120 출시 주기 동안 안드로이드용 Firefox에 수십개의 새로운 확장을 보게 될 것
     * 모바일을 위한 확장 에코시스템을 차근차근 준비중이며, 12월쯤이 되면 완전히 공개될 것으로 예상
     * AMO에 올라와 있는 데스크탑용 4만개의 확장에 미치진 못하지만, 최소 200개 이상의 확장이 모바일에서 동작하게 될 것

   지금도 작동 중인게 조금 있는데 빨리 개선되면 좋겠네요
"
"https://news.hada.io/topic?id=11680","이 앱 제작 과정에서 어떠한 개도 해를 입지 않았음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      이 앱 제작 과정에서 어떠한 개도 해를 입지 않았음

     * 소프트웨어 개발자의 모바일 앱 기능 디버깅 고충에 대한 개인적인 경험
     * React Native 모바일 앱의 지리적 위치 기반 사진 기능 준비 완료를 자신있게 발표한 개발자, 그러나 출시 후 실패
     * Android 베타 버전에서 이미지 업로드 문제, 성공적인 로컬 테스트와 iOS 베타에서의 원활한 성능에도 불구하고
     * 2016년 한 주 동안 코드에서 오류 피드백 없이 문제를 디버깅하려고 노력한 개발자의 도전
     * 개발자가 이 기간 동안 경험한 압박감과 자기 의심에 대한 기사의 강조
     * 임베디드 엔지니어와 하드웨어 엔지니어 등 다른 직업의 동료들로부터 공감과 공유된 경험을 받은 개발자
     * 이러한 상호작용을 통해 개발자는 문제 해결 과제가 직업 간에 공통적이며, 소프트웨어 개발은 상대적으로 피드백 주기가 짧다는 것을 깨달음
     * 회사의 CEO도 자신의 실패와 불확실성에 대한 경험을 공유하며 공감과 이해를 보여줌
     * 개발자는 결국 문제가 Android 문서와 코드베이스의 한 문자 차이 때문이었다는 것을 발견
     * 개발자가 소프트웨어 개발자에게 제공되는 디버깅 도구에 대한 감사를 표현하며 기사를 마무리, 빠르고 비용 효율적인 문제 해결 가능
     * 개발자는 소프트웨어 개발의 상대적인 위험성에 대해 반성, 다른 일부 직업과 달리 보통은 생사의 문제가 아님을 지적

        Hacker News 의견

     * 소프트웨어 개발의 심리적 부담에 대한 기사, 일부 개발자들이 실제 세계에 미치는 영향력이 부족하다는 인식 때문에 그들의 작업의 의미를 의심하는 상황을 다루고 있다.
     * 소프트웨어 엔지니어, 하드웨어 엔지니어, 부서 매니저의 다른 문제 해결 접근법을 강조하는 유머러스한 일화가 공유되었다.
     * 기사는 소프트웨어 엔지니어들이 전통적인 엔지니어들처럼 더 열심히 일해야 한다는 개념을 비판하며, 소프트웨어 개발의 성격이 더 유연하고 반복적인 과정을 허용한다고 주장한다.
     * 소프트웨어 개발에서 오류 처리와 로깅의 중요성이 강조되며, 부족한 오류 보고의 결과에 대한 여러 일화가 공유된다.
     * 기사는 또한 소프트웨어 엔지니어링의 상대적으로 낮은 위험성을 다른 분야와 비교하여 논의하며, 물리학자 친구의 인용구를 통해 그의 작업의 잠재적 위험성과 소프트웨어 개발의 상대적으로 안전한 환경을 대조시킨다.
     * 소프트웨어 개발에서 비용이 많이 드는 실수에 대한 여러 일화가 공유되며, 이러한 실수에서 배우는 것의 중요성을 강조하고 과도하게 처벌하는 것보다는.
     * 기사는 코드 한 줄에서 잘못된 한 글자로 인해 발생한 버그에 대한 유머러스한 일화로 마무리되며, 소프트웨어 개발에서 버그의 종종 미세하고 알기 어려운 성격을 강조한다.
"
"https://news.hada.io/topic?id=11692","르완다, 케냐와 함께 모든 아프리카인을 위한 비자 면제 여행 시작","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  르완다, 케냐와 함께 모든 아프리카인을 위한 비자 면제 여행 시작

     * 르완다와 케냐, 모든 아프리카인에게 비자 없는 여행 시작
     * 르완다의 폴 카가메 대통령과 케냐의 윌리엄 루토 대통령이 발표
     * 이번 조치는 아프리카를 통합된 관광 목적지로 촉진하는 것이 목표
     * 카가메에 따르면, 모든 아프리카인은 입장료 없이 르완다로 여행 가능
     * 루토는 연말까지 모든 아프리카인이 케냐로 비자 없이 입국할 수 있을 것이라고 선언
     * 아프리카 연합은 2016년 아프리카 여권을 도입했지만, 지금까지는 외교관과 AU 공무원에게만 부여되었음
     * 아프리카 연합은 또한 3.4조 달러의 추정 가치를 가진 아프리카 대륙 전체를 아우르는 자유 무역 지역인 아프리카 대륙 자유 무역 지역을 설립
     * 자유 무역 지역의 목표는 경제 성장을 촉진하고 대륙에 거주하는 13억 인구를 위한 단일 통합 시장을 제공하는 것

        Hacker News 의견

     * 르완다와 케냐가 모든 아프리카인에게 비자 면제 여행을 시작하는 결정은 중요하고 놀라운 움직임으로 여겨진다.
     * 이런 움직임은 소셜 미디어 시대의 국경 붕괴를 초래하고, 사람들이 운명을 바꿀 기회를 제공할 수 있다는 의견이 있다.
     * 아프리카인에 대한 비자 면제 여행과 함께 비아프리카인을 위한 공통 비자의 설정은 아프리카 전역에 쉥겐 지역과 같은 구역을 만들 수 있다.
     * 아프리카 연합 여권이 필수인지 아니면 별도의 제도인지에 대한 의문이 제기되고 있다.
     * 이를 긍정적인 발전으로 보는 사람들도 있으며, 사람들이 원하는 곳에서 여행하고, 살고, 일할 권리가 있다고 주장한다.
     * 르완다와 케냐의 안전성에 대한 견해는 상충하며, 르완다가 미국보다 안전하다는 주장도 있다.
     * 수익 창출 가능성을 고려할 때 사하라 사막 이남 아프리카에 투자를 통한 시민권 제도가 없는 것은 놀라운 일로 여겨진다.
     * 가나와 같은 다른 아프리카 국가들이 이를 따라할 것이라는 기대가 있으며, 항공 여행을 보완하기 위한 국제 육상 교통 수단을 제안하는 의견도 있다.
     * 유럽에서 저기술 직업에 종사하는 젊은 아프리카인 수에 대한 우려가 제기되며, 이러한 변화가 아프리카 내에서 더 나은 기회를 제공할 수 있을 것이라는 희망이 있다.
"
"https://news.hada.io/topic?id=11682","포르투갈.더맨 - 공식 웹사이트가 Google Sheets 문서로 구성되어 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              포르투갈.더맨 - 공식 웹사이트가 Google Sheets 문서로 구성되어 있다

     * 'Portugal. The Man' 밴드의 공식 웹사이트에 대한 기사
     * Google Sheets 문서로 이루어진 독특한 웹사이트
     * 밴드의 최신 업데이트를 제공하는 웹사이트
     * 사용자들이 웹사이트에 가입하여 최신 정보를 받을 수 있음
     * 밴드에 연락하거나 피드백을 제공하고 이용 약관을 이해할 수 있는 옵션을 제공하는 웹사이트
     * 개인정보 보호 정책, 광고 선택, 쿠키 정책, 사용자 경험을 맞춤화하기 위한 쿠키 설정이 있는 웹사이트
     * 'Portugal. The Man'에 의해 2023년까지 저작권이 보호되는 웹사이트

        Hacker News 의견

     * 밴드 'Portugal. The Man'의 공식 웹사이트는 Google Sheets 문서로 구성되어 있다.
     * 한 사용자는 루마니아의 파티와 축제를 찾는 데 사용되는 Google Sheets 백엔드를 가진 iOS 앱을 보유하고 있다.
     * Google Sheets를 백엔드로 사용하면 비기술적인 사람들도 쉽게 행을 업데이트하고 삽입할 수 있다.
     * 수년 동안 잠잠하던 레이아웃에 대한 테이블 사용에 대한 논쟁이 있다.
     * 일부 사용자들은 아티스트 웹사이트가 투어 날짜를 업데이트하고, 프로모션 사진을 제공하는 등 다양한 목적을 수행하기 때문에 웹사이트로 Google Sheets를 사용하는 것은 나쁜 생각이라고 믿는다.
     * 밴드 Vulfpeck의 웹사이트는 간결하고 기능적인 디자인의 예로 언급되었다.
     * 한 사용자는 Google Sheets가 밴드의 URL에서 제한되지 않았다는 사실에 놀라움을 표현하며, 라이브 이벤트 중에 Google Sheets 문서가 트래픽으로 인해 압도당한 개인적인 경험을 공유했다.
     * 한 사용자는 Google Docs가 28명의 동시 사용자가 문서를 보는 것을 처리하는 데 어려움을 겪는 이유를 의문시했다.
     * 한 사용자는 실험적으로 Google Sheets 소셜 네트워크 Facebook 클론을 만들었다.
     * 일부 사용자들은 밴드가 웹사이트에서 흥미로운 것을 할 때 이를 칭찬하며, The Strokes와 Hyukoh를 예로 들었다.
     * 한 사용자는 Portugal. The Man과 함께 공연하는 밴드 Good Kid의 멤버를 만난 개인적인 이야기를 공유했다.
"
"https://news.hada.io/topic?id=11721","새로운 모델 및 개발자 제품","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            새로운 모델 및 개발자 제품

     * OpenAI, DevDay에서 새로운 모델과 개발자 제품 발표.
     * 새로운 GPT-4 Turbo 모델, 더욱 능력이 향상되고 가격이 저렴하며 128K 컨텍스트 윈도우 지원.
     * OpenAI, 특정 목표를 가진 AI 앱 구축 과정을 단순화하는 새로운 Assistants API 소개.
     * 플랫폼, 비전, 이미지 생성 (DALL·E 3), 텍스트-투-스피치 (TTS) 등의 다중 모달 기능 포함.
     * GPT-4 Turbo, 2023년 4월까지의 세계 이벤트 지식 보유 및 단일 프롬프트에서 300페이지 이상의 텍스트 수용 가능.
     * 새로운 Assistants API, 개발자가 모델과 도구를 호출할 수 있는 AI 앱 구축 가능.
     * OpenAI, 기본적으로 16K 컨텍스트 윈도우를 지원하는 GPT-3.5 Turbo의 새 버전 출시.
     * Assistants API, 영구적이고 무한히 긴 스레드 도입, 개발자가 스레드 상태 관리를 OpenAI에 위임 가능.
     * GPT-4 Turbo, 이미지를 입력으로 받아 캡션 생성 및 실제 이미지 분석 등의 사용 사례 가능.
     * 개발자, 프로그래밍 가능한 이미지와 디자인을 생성하는 DALL·E 3를 앱과 제품에 직접 통합 가능.
     * 텍스트-투-스피치 API, 개발자가 텍스트에서 인간 수준의 음성을 생성 가능.
     * OpenAI, GPT-4 세부 조정을 위한 실험적 접근 프로그램 출시.
     * 플랫폼, 개발자에게 절약을 전달하기 위해 플랫폼 전반의 여러 가격 인하.
     * OpenAI, 고객을 방어하고 저작권 침해 주장에 따른 비용을 지불할 Copyright Shield 소개.
     * OpenAI, 오픈 소스 자동 음성 인식 모델 (ASR)의 다음 버전인 Whisper large-v3 출시.
     * OpenAI, Stable Diffusion VAE 디코더 대체품인 Consistency Decoder를 오픈 소스화.

        Hacker News 의견

     * GPT와 관련된 진행 중인 토론, OpenAI의 Whisper v3, 그리고 OpenAI DevDay에 대한 논평들
     * OpenAI의 새로운 제품과 가격 인하가 경쟁이 심화되면서 사용자들을 그들의 API 플랫폼에 더욱 고착시키려는 목표로 보인다는 우려
     * DALL-E 3 API는 시장에서 다른 옵션들보다 훨씬 비싸다는 지적
     * DALL-E 3가 다른 제품들과 경쟁하기 위해 inpainting과 변형 기능을 갖추길 바라는 의견
     * 이러한 도구들이 코드베이스 유지 관리를 돕는지, 아니면 새로운 코드를 작성하는데만 도움이 되는지에 대한 의문
     * OpenAI의 새로운 개발자 도구와 맞춤형 모델들이 그들의 AGI 주요 목표에 어떻게 기여하는지에 대한 회의론
     * OpenAI가 이제 맞춤형 GPT-n 모델을 사전 훈련시키는 옵션을 제공하며, 이는 스타트업들에게 경쟁 우위를 제공할 수 있다는 지적
     * GPT-4 Turbo와 GPT-3.5 Turbo에 대한 로그 확률을 반환하는 OpenAI의 계획에 대한 놀라움, 이는 지식 증류를 가능하게 할 수 있음
     * 새로운 GPT-4 Turbo 모델을 지원하는 새로운 버전의 LLM CLI 도구 발표
     * 일부 비판에도 불구하고 GPT4가 여전히 사용 가능한 다른 옵션들보다 우월하다는 인정
     * Whisper V3의 출시가 발표되었으며, 더 작은 모델들에 대한 업데이트도 요청됨.
"
"https://news.hada.io/topic?id=11722","GPTs: 맞춤형 ChatGPT 버전들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         GPTs: 맞춤형 ChatGPT 버전들

     * OpenAI, 맞춤형 ChatGPT인 GPTs 소개
     * GPTs, 보드 게임 규칙 학습, 수학 가르치기, 스티커 디자인 등 특정 작업을 위한 ChatGPT 맞춤형 생성 가능
     * GPT 구축에 코딩 필요 없음, 개인 사용, 회사 사용, 공공 사용을 위해 생성 가능
     * 대화 시작, 지시 및 추가 지식 제공, 웹 검색, 이미지 제작, 데이터 분석 등의 기능 선택을 통해 GPT 생성 가능
     * 예시 GPTs, ChatGPT Plus 및 Enterprise 사용자를 위해 제공, 더 많은 사용자에게 GPTs 제공 계획
     * OpenAI, 최고의 GPTs는 커뮤니티에 의해 만들어질 것이라고 믿음, 사용자는 GPT를 생성하고 공유하기 위해 코딩 지식이 필요 없음
     * OpenAI, 검증된 제작자의 창작물이 특징 지어지고 검색되며 사용량에 따라 수익을 얻을 수 있는 GPT Store 출시
     * GPTs에서 개인 정보 보호 및 안전 우선, 사용자가 데이터를 통제하고 사용 정책에 대한 GPTs 검토를 위한 새로운 시스템 도입
     * 개발자들, 맞춤형 행동 정의 및 외부 데이터 또는 실세계 상호작용 통합을 통해 GPTs를 실세계에 연결 가능
     * Enterprise 고객, 특정 사용 사례, 부서, 독점 데이터셋을 위한 내부 전용 GPTs 배포 가능
     * OpenAI, AI 행동 형성에 커뮤니티 참여 목표, 더 많은 사람들이 GPTs와 함께 구축할 수 있도록 설계
     * ChatGPT Plus, 2023년 4월까지의 최신 정보 포함, 모델 선택기를 단순화하여 사용 편의성 향상

        Hacker News 의견

     * 새로운 GPTs 기능은 주요 ChatGPT 뷰에서 플러그인 사용에서 벗어나는 단계로 보이며, 추가적인 프롬프트를 필요로 하고 한 번에 하나의 플러그인만 허용합니다.
     * GPTs 설정은 단일 작업을 위한 에이전트 생성에 대한 데이터를 크라우드 소싱할 것으로 예상되며, 이는 다른 에이전트를 생성하는 모델을 훈련하는 데 사용될 수 있습니다.
     * GPT Store는 OpenAI의 검열 및 품질 관리 실험으로 예상되며, Apple과 Google이 직면했던 문제와 유사한 잠재적 문제가 있을 수 있습니다.
     * GPTs의 목표 시장은 깊이 있는 기술 작업을 위한 고도로 지식 있는 LLMs를 찾는 사람들이 아니라 character.ai와 같은 회사로 예상됩니다.
     * OpenAI는 자원이 부족한 팀, 인간 지원의 부재, 임의적인 정책 집행, 무시된 버그 등으로 인해 협력하기 어려운 파트너로 비판받았습니다.
     * GPTs는 맞춤형으로 훈련된 LLMs보다는 미리 정의된 프롬프트와 맞춤형 API 접근의 결합으로 보입니다.
     * OpenAI의 데모는 개발자보다는 주류 사용자에 초점을 맞추어 별로 흥미롭지 않게 느껴졌습니다.
     * OpenAI의 미래는 현재 더 강력한 모델에 대한 컴퓨팅이 부족하기 때문에, 다중 LLM 아키텍처를 포함할 것으로 예상됩니다.
     * GPTs를 전문적으로 만들어 돈을 벌 수 있는 가능성은 진입 장벽이 낮기 때문에 의문이 제기되었습니다.
     * 유료 고객들은 Canva와 Zapier AI Actions와 같은 예제 GPTs에 접근하는 데 문제를 보고했습니다.
     * OpenAI의 ChatGPT Plus를 더 신선하고 사용하기 쉽게 만들겠다는 주장은 사용자들이 여전히 모델 간 전환을 해야 한다는 보고에 대한 회의론으로 맞이되었습니다.
     * GPTs의 도입은 다음 파도의 스타트업에게 잠재적으로 해로울 수 있으며, 많은 스타트업이 GPT 얇은 래퍼로 대체될 수 있습니다.
"
"https://news.hada.io/topic?id=11767","저렴한 가격으로 고객을 유혹한 후, Amazon이 Fire TV에 광고를 가득 채움","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             저렴한 가격으로 고객을 유혹한 후, Amazon이 Fire TV에 광고를 가득 채움

아마존, Fire TV에 광고 증가

     * 아마존의 Fire TV는 저렴한 가격으로 소비자를 유혹한 후, 더 많은 광고를 표시하는 방식으로 수익을 창출.
     * 2021년 9월 자체 브랜드 TV를 출시하며 ""훌륭한 가치""를 강조했으나, 사용자들은 더 두드러진 광고 형태로 비용을 지불하게 됨.
     * 새로운 광고 유형은 월 평균 1억 5500만 명의 독특한 시청자에게 도달할 수 있도록 설계됨.

새로운 광고와 생성적 AI 알렉사 연계

     * 알렉사의 생성적 AI 기능은 Fire TV에서 콘텐츠를 찾는 데 더 유용하게 만들어질 예정이며, 이를 통해 아마존은 수익을 창출.
     * 사용자가 특정 쇼를 찾도록 알렉사에 요청할 때, 관련 광고가 표시되는 방식으로 광고가 생성적 AI와 연계됨.
     * 아마존은 알렉사를 단순히 적절한 앱으로 안내하는 도구에서 나아가, 특정 쇼를 추천하는 도구로 진화시키려 하고 있으나, 이 기능을 광고와 나란히 배치하는 것은 광고주를 우선시하는 것으로 보임.

""지속적인"" 광고

     * Fire TV 사용자는 홈 화면에서 엔터테인먼트나 미디어와 관련 없는 배너 광고를 보게 될 예정.
     * 이전에는 미디어와 엔터테인먼트 광고만 표시되었으나, 이제는 다양한 유형의 광고주에게 광고 공간을 개방함.
     * 아마존은 이러한 광고가 지배적일 수 있다는 것을 인식하고 있으며, 홈 화면 상단에 위치한 네이티브 광고가 화면의 절반을 차지함을 강조.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 아마존이 Fire TV 사용자 경험을 희생하면서까지 광고 수익을 늘리려는 전략을 채택하고 있다는 것이다. 이는 소비자들이 저렴한 가격의 스마트 TV를 찾는 동시에 광고와의 지속적인 상호작용을 강요받게 될 수 있다는 점에서 흥미롭다. 이러한 변화는 기술과 광고가 어떻게 상호작용하며 소비자 경험을 형성하는지에 대한 논의를 촉발할 수 있으며, 소비자들이 광고와 기술의 관계에 대해 더 깊이 생각하게 만드는 계기가 될 것이다.

        Hacker News 의견

     * FireTV 스틱이나 디스플레이를 소유한 경우, FreeVee 스트리밍 앱이 점점 더 두드러지게 나타나는 것을 알 수 있음. 이 앱은 <i>Murder She Wrote</i>와 같은 오래된 쇼를 지속적으로 스트리밍하는 ""채널""을 제공하여, 넷플릭스나 훌루를 이해하지 못하는 노년층에게 스트리밍 문제를 해결함. 이 쇼들은 가짜 광고 시간을 가지며, 사용자에게 맞춤형 광고를 2-3개 보냄.
     * 스마트 TV를 인터넷에 연결하지 않고 애플 TV와 연결하는 것이 좋음. 인터넷 연결 없이는 부팅조차 되지 않는 TV는 반품하고 다른 제품을 구매하는 것이 바람직함.
     * TV 제조업체들이 광고를 늘려 수익을 창출하는 추세는 현재 모든 산업에서 일반적인 현상임.
     * 한 사용자는 Fire TV를 구매하여 겨울에는 온수 욕조 방, 여름에는 야외 파티오에서 사용함. 저렴한 가격 덕분에 광고가 나타나도 크게 개의치 않음. JellyFin, VLC, HDHomeRun과 같은 완전히 광고가 없는 앱을 사용하여 스트리밍함.
     * 다른 사용자는 LG OLED TV의 광고를 제거하기 위해 노력 중이며, RootMyTV 익스플로잇이 더 이상 작동하지 않음을 발견함. 일부 광고와 OS 업데이트 확인을 차단하기 위해 로컬 Akamai 피어의 IP를 차단하는 방법을 찾았지만, CDN을 사용하는 다른 기능에 영향을 줄 수 있음.
     * Prime Video는 점점 더 나빠지고 있으며, 광고가 있는 버전은 시청 중 방해가 되고 타겟팅이 불쾌함. Prime Video에서 광고 없는 좋은 콘텐츠를 다 본 후에는 아마존 신용카드의 5% 리워드가 일반 2% 캐시 리워드 카드보다 가치가 있는지 GnuCash를 통해 확인할 계획임.
     * 한 사용자는 Walmart에서 Sceptre 브랜드의 65인치 4K '덤 TV'를 구매했음. 화질은 다른 4K TV와 비슷하지만 오디오 품질은 매우 나쁨. Best Buy에서 구매한 저렴한 사운드바로 문제를 해결함. 주당 약 5시간 사용하며, 메뉴 지연, 부팅 시간, 광고 등의 문제가 없어 만족함.
     * '덤 TV'는 여전히 존재하며, NEC의 65인치 4K TV 제품 링크가 제공됨.
     * 광고가 없는 스마트 TV가 있는지, Apple TV가 그나마 나은 선택지인지에 대한 질문이 있음.
     * Google도 동일한 방식을 채택하여 한 사용자의 Nvidia Shield를 무용지물로 만듦.
     * Kindle Fire 태블릿은 사용자를 아마존 콘텐츠에 계속해서 관심을 가지게 만드는 경험으로 유도함. 코로나 시기에 아이들의 학습을 돕기 위해 구입했지만, 이러한 점 때문에 다시는 아마존 OS 제품을 구매하지 않을 계획임.
"
"https://news.hada.io/topic?id=11691","Bevy 0.12 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Bevy 0.12 기술

     * Bevy 0.12는 Rust로 만들어진 Bevy 게임 엔진의 새로운 릴리즈입니다.
     * 이 릴리즈에는 자산 전처리, 자산 구성, 다중 자산 소스, 재귀적 종속성 로드 추적 등을 지원하는 새로운 자산 시스템인 Bevy Asset V2가 포함되어 있습니다.
     * Bevy 0.12는 선택적으로 Deferred Rendering을 지원하여 각 재질이 전방 또는 후방 경로를 선택할 수 있게 합니다.
     * 이 릴리즈에는 그림자 품질을 향상시키는 PCF Shadow Filtering과 물리적 재질의 더욱 현실적인 표현을 가능하게 하는 StandardMaterial Light Transmission이 포함되어 있습니다.
     * Bevy 0.12는 기존 재질을 기반으로 새로운 재질을 정의할 수 있게 하는 Material Extensions를 도입합니다.
     * 이 릴리즈는 Android에서 일시 중지 및 재개 이벤트를 지원하여 Bevy를 Android와 완벽하게 호환되게 합니다.
     * Bevy 0.12는 핫-리로딩 워크플로우 개선, 더 나은 자산 핸들, 진정한 복사-쓰기 자산 경로를 포함합니다.
     * 이 릴리즈에는 이미지를 Basis Universal에 작성하고 mipmaps를 생성하는 새로운 CompressedImageSaver가 포함되어 있습니다.
     * Bevy 0.12는 기존의 load_interal_asset! 시스템을 자산 시스템에 자연스럽게 적합한 새로운 내장 AssetSource로 대체합니다.
     * 이 릴리즈에는 엔진의 UI, 오디오, 애니메이션, 렌더링 기능에 대한 개선이 포함되어 있습니다.
"
"https://news.hada.io/topic?id=11679","효율적으로 WebAssembly에 가비지 수집(GC)  프로그래밍 언어를 도입하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            효율적으로 WebAssembly에 가비지 수집(GC) 프로그래밍 언어를 도입하는 방법

     * 새로운 방법으로 가비지 수집(GC) 프로그래밍 언어를 효율적으로 WebAssembly(Wasm)에 적용하는 방법에 대한 기사
     * 가비지 수집(GC) 제안은 Wasm에서 GC 언어를 지원하는 것을 목표로 하며, 이는 그들의 인기 때문에 중요하다.
     * 기사는 Java, Kotlin, Dart, Python, C#과 같은 GC 언어가 어떻게 Wasm으로 이식될 수 있는지에 대한 기술적 세부사항을 탐구한다.
     * ""전통적인"" 이식 방법과 WasmGC 이식 방법이라는 두 가지 주요 접근법이 논의된다.
     * ""전통적인"" 이식 방법은 언어의 기존 구현을 2017년에 출시된 WebAssembly 최소 실행 가능 제품(WasmMVP)으로 컴파일하는 것을 포함한다.
     * WasmGC 이식 방법은 최근의 GC 제안에 정의된 대로 언어를 Wasm 자체의 GC 구조로 컴파일하는 것을 포함한다.
     * 기사는 이 두 가지 접근법 간의 기술적인 타협점, 특히 크기와 속도에 대해 논의한다.
     * WasmGC는 여러 가지 주요 장점이 있지만 도구 체인과 가상 머신(VMs)에서의 새로운 작업도 필요하다.
     * 기사는 또한 V8 팀이 이러한 영역에서 어떤 작업을 하고 있는지, 벤치마크 숫자를 포함하여 설명한다.
     * 기사는 WasmGC가 WebAssembly에서 GC 언어를 구현하는 새로운 유망한 방법이며, 그들의 이점 때문에 WasmGC 포트가 인기 있는 기법이 될 것이라는 희망을 표명하며 마무리한다.

        Hacker News 의견

     * 웹어셈블리(WASM)에 가비지 수집 프로그래밍 언어 도입에 대한 기사
     * WASM의 '얇은 허리' 잠재력을 강조하며, 가비지 수집기와 N+M이 N×M보다 우수하다는 개발에 대한 댓글러들의 흥분
     * WASM에서 JVM으로의 존재에 대한 호기심, 한 댓글러는 GitHub에서 하나를 찾음
     * WASM 스레드가 진정한 병렬성을 제공할 수 있는 잠재력, 이것이 비동기, 병렬성, 그리고 가비지 수집 문제를 효과적으로 해결할 수 있기를 바람
     * Julia WASM 도구가 이 기능을 지원할 수 있다는 언급, ODE 솔버를 WASM으로 컴파일하는 예시
     * ""wasm은 새로운 llvm"" 감정과 비교하며, 더 넓은 적용이 언제 가능할지 의문을 제기하는 일부 댓글러들의 회의론
     * 이 기능의 출시는 인상적으로 여겨지며, 일부 댓글러들은 그 실현을 의심했음
     * 오늘날 브라우저의 복잡성과 자신의 브라우저를 만드는 데 관련된 가파른 학습 곡선에 대한 우려
     * wasm 바이너리가 웹사이트의 진입점으로 사용될 수 있는 미래를 희망, 동적 웹 애플리케이션의 시작 시간을 개선할 수 있음
     * Kotlin에서의 새로운 wasm 지원이 흥미롭게 여겨지며, 실험적인 compose multiplatform 버전이 WASM을 사용하여 브라우저를 대상으로 지원
     * 가비지 수집기 도입으로 인한 WebAssembly의 복잡성 증가에 대한 일부 회의론
     * 블로그 게시물이 Go를 언급하지 않는 이유에 대한 질문, Go가 이러한 변화로부터 이익을 얻지 못할 수도 있다는 추측
     * Java 애플릿의 재창조에 대한 비교, Java 애플릿을 다시 활성화하면 많은 문제를 해결할 수 있을 것이라는 제안
"
"https://news.hada.io/topic?id=11772","구글 인수 과정에서 배운 점","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            구글 인수 과정에서 배운 점

구글 인수 경험담

     * 10인 규모의 스타트업이 구글에 인수됨.
     * 구글 방식으로 제품을 재구축하고, 구글에서 가능한 놀라운 일들을 이해하기 시작함.

구글 인수 과정

     * Socratic의 시리즈 B 투자 유치 시, 수익보다 사용자 증가에 집중한 전략이 문제가 될 것임을 깨달음.
     * Snapchat의 CEO인 Evan Spiegel과의 만남을 통해 인수 가능성을 엿보고 Microsoft, Chegg, Byju’s, 구글에 접근함.
     * 구글의 Lens 팀과의 만남을 통해 교육 중심의 AI 튜터에 대한 비전이 일치함을 확인하고, 구글에 의한 Socratic 인수 과정이 시작됨.

구글에서의 제품 재구축

     * 구글 내 기존 팀과 합쳐져 AI 튜터를 개발하고 구글의 주요 제품에 기능을 통합함.
     * Socratic을 ""Socratic by Google""로 재출시하고, 검색 및 렌즈 기능을 출시함.

구글에서 배운 것들

     * 구글에서 일하는 것은 전 세계 어느 도시에서도 아름다운 사무실과 훌륭한 식사, 빠른 네트워크 접속을 제공하는 두 번째 여권과 같음.
     * 구글의 거대한 코드 저장소, 데이터 센터 상태, 전략 문서, 전설적인 인물들에게 즉시 접근 가능함.
     * 구글은 구글만의 방식으로 모든 것을 수행하며, 외부 세계는 거의 존재하지 않음.

구글의 문화와 프로세스

     * 구글의 앱 아이콘 디자인과 달리, Socratic의 마스코트인 'Ceebo'는 구글 내에서 다양한 변형으로 활용됨.
     * 검색 개선은 종종 수동 검토를 통해 이루어지며, AI 팀에서는 데이터를 수동으로 검사하는 것이 중요함.
     * 구글은 자신들의 전략과 목표에 부합하는 중요한 문제에 상당한 노력을 기울임.

구글에서의 성공과 도전

     * 구글 내에서는 올바른 사람들이 계속해서 관심을 가질 때 놀라운 일들이 가능함.
     * 구글러들은 훌륭한 작업을 하고 싶어하지만, 리뷰의 장애물, 자주 발생하는 조직 개편, 과거 실패로 인한 기관적 흉터 등으로 인해 종종 그러지 못함.

조직과 프로세스의 부채

     * 상위 계층이 많은 조직은 진행이 어려우며, 기술적 부채와 마찬가지로 프로세스 부채도 실제로 존재함.
     * 구글은 ChatGPT와 같은 기술을 발명했지만, 제품을 출시하지는 않았으며, 이제 건설자와 검토자 간의 긴장을 해결해야 함.

GN⁺의 의견

     * 가장 중요한 것은 구글에서의 성공이 적절한 게임을 통해 가능하다는 점임.
     * 이 기사는 구글 내부의 문화, 프로세스, 그리고 스타트업이 대기업에 통합되는 과정에 대한 통찰력을 제공하여 매우 흥미롭고 매력적임.

        Hacker News 의견

     * ""레드 배지"" 현상은 실제로 존재함. 정규직이 아닌 TVC(임시직, 계약직) 팀원들과 함께 일하면서, 프로젝트를 마치고 축하하는 자리에서 TVC만 제외되는 상황이 발생함. TVC에게 보상을 주는 것이 정규직 처럼 보일 수 있어서 제한됨. TVC는 일부 회의나 시설, 내부 사이트에 접근할 수 없음. TVC와 일할 때, 그들에게 특정한 대우를 해야 하는 교육을 받음.
     * 구글이 Socratic이라는 회사를 인수한 후, 그들의 앱을 구글 방식으로 재작성하도록 요구함. 별도의 연구팀이 새로운 API를 개발함. 하지만, Socratic by Google 앱은 2020년 이후 업데이트가 없고, 최신 안드로이드 장치에서 사용할 수 없어 사실상 사라진 것으로 보임.
     * 구글에 인수된 경험에서 배운 것은, 회사 규모가 작으면 모든 사람이 기술 면접을 보아야 함. 관리자는 이것이 단순한 만남이라고 거짓말을 하도록 지시받음. 실제로는 예상치 못한 기술 면접임.
     * 해외에 있을 때, 구글 직원은 사무실 공간, 무료 음식, 체육관, 심지어 음악 연습실까지 이용할 수 있음.
     * 구글에서 놀라운 일이 가능하지만, 적절한 사람들이 관심을 가져야 함. 관련된 부서의 지원이나 조직의 목표와의 호환성이 중요함. 제품 관리자의 업무 중 절반은 이해관계의 복잡한 망을 탐색하는 것임. 또한, 개인정보 보호, 신뢰 및 안전, 인프라 용량과 같은 승인자들의 축복이 필요함. 아이디어의 실행 가능성을 알아내기 위해 수십 번의 대화가 필요하고, 현실화하기 위해서는 수백 번의 대화가 필요함.
     * 구글이 OpenAI에 밀리는 이유는 모든 기술을 가지고 있음에도 불구하고, 너무 많은 관료주의와 레드 테이프, 대담한 리더십 부족으로 인해 제품을 출시하지 못함.
     * Maven에서 소프트웨어 엔지니어로 일하면서, 회의와 프로세스에 대한 거부감이 있었고, 직원들이 판단을 내리고 의견을 구하는 것을 강조함. 이런 방식의 작업이 큰 팀에서는 더 어려울 수 있지만, 다음 직장에서도 이를 이어가고 싶음.
     * 대규모 기업들이 스타트업을 인수하고 그들의 제품을 파괴하는 것에 대해 비판적인 견해를 가짐. 스타트업을 판 사람들에게는 좋을 수 있지만, 그 제품이 세상에 미칠 영향을 생각하면 좋지 않음.
     * 구글의 규모에서는 외부 세계가 존재하지 않는 것처럼 보임. 사용자 지원이나 제품 중단 등의 행동을 통해 이를 이해할 수 있음.
     * 구글 내부에서 이루어지는 인수합병의 논리는 M&A 부서에서 시작될 수 있음. 큰 규모의 인수합병 사이에 발생하는 다운타임 동안 인력 이탈, 내부 불만, 실전 부족 등이 발생할 수 있으며, 부서의 존재 이유를 정당화하기 위해 작은 규모의 인수합병이 필요할 수 있음.
"
"https://news.hada.io/topic?id=11700","Stability AI - 향상된 이미지 기능과 제품들 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Stability AI - 향상된 이미지 기능과 제품들 공개

     * Sky Replacer : 원본 사진의 하늘 부분을 9가지 대안(멋진 일몰, 맑은 날, 구름 많은 날등)으로 교체
     * Stable 3D 비공개 프리뷰 : 텍스트 프롬프트, 이미지, 일러스트를 이용해서 3D 객체를 생성. .obj 파일로 제공되어 블렌더/마야 등에서 편집하거나 언리얼/Unity 등에 임포트 가능
     * Stable Fine Tuning 비공개 프리뷰 : 기업/개발자들이 사진, 객체, 스타일등을 미세조정 가능
"
"https://news.hada.io/topic?id=11811","선언적 빌드시스템 제작을 위해 Jetbrains, Gradle 그리고 Google이 협업","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           선언적 빌드시스템 제작을 위해 Jetbrains, Gradle 그리고 Google이 협업

   Kotlin 및 Java, 그리고 Android에서는 Gradle이 표준적인 빌드시스템으로 자리잡았지만, Groovy/Kotlin DSL이 복잡도를 높이고 있습니다.

   이러한 복잡도를 줄이기 위해 세 회사가 여러가지 시도를 해보고 있으며, 선언적 빌드시스템이라는 것을 이용해 이 문제를 해결하려는 것 같습니다.

   Jetbrains Amper : https://github.com/JetBrains/amper/tree/main#amper
   Android Declarative Plugin : https://github.com/android/gradle-declarative/…
"
"https://news.hada.io/topic?id=11799","브라우저에서 사용하는 디버깅 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           브라우저에서 사용하는 디버깅 기술

브라우저 디버거 활용 팁

     * 고급 조건부 중단점
          + 부작용을 가진 표현식을 사용하여 조건부 중단점의 기능 확장
          + 로그포인트/트레이스포인트를 통해 실행 중단 없이 콘솔에 로그 기록 가능
          + console.count를 사용하여 실행 횟수 카운트
          + 주요 브라우저들이 로그포인트/트레이스포인트를 지원함 (2020년 5월 기준)
     * 감시 창 활용
          + 감시 창에서 console.log 사용 가능
          + DOM 변화 시점에 표현식 실행을 위해 DOM 변화 중단점 설정 후 감시 표현식 추가
     * 호출 스택 추적
          + 함수 호출 스택을 추적하여 불일치하는 호출 찾기
          + console.trace를 조건부 중단점에 사용하여 호출 스택 확인
     * 프로그램 동작 변경
          + 프로그램 동작을 브라우저 내에서 즉석으로 변경 가능
          + 함수 매개변수를 오버라이드하여 동작 조정
     * 간단한 성능 프로파일링
          + 콘솔 타이밍 API를 사용하여 코드 실행 시간 측정
          + console.time('label')과 console.timeEnd('label')을 사용하여 시간 측정
     * 함수 아리티 활용
          + 특정 개수의 인자로 호출될 때만 중단점 활성화
          + 함수 호출 시 인자 수 불일치를 찾기 위해 사용
     * 시간 활용
          + 페이지 로드 후 특정 시간이 지난 후에만 중단점 활성화
          + 특정 시간 동안 중단점을 건너뛰고 그 이후에만 활성화
     * CSS 활용
          + 계산된 CSS 값에 기반하여 중단점 활성화
     * 짝수 호출만 중단
          + 짝수 번째 실행 시에만 중단점 활성화
     * 샘플링을 통한 중단
          + 실행의 무작위 샘플에 대해서만 중단점 활성화
     * 특정 줄에서 중단 금지
          + ""Never Pause Here"" 옵션을 사용하여 특정 줄에서 중단되지 않도록 설정
     * 자동 인스턴스 ID 부여
          + 클래스 인스턴스마다 고유 ID 자동 할당
     * 프로그래밍 방식으로 토글
          + 전역 부울을 사용하여 조건부 중단점을 프로그래밍 방식으로 토글
     * monitor() 클래스 호출
          + 클래스 메소드 호출 추적을 위해 Chrome의 monitor 명령어 사용
     * 함수 호출 및 디버깅
          + 콘솔에서 debugger 호출 후 함수를 디버깅하기 위해 호출
     * URL 변경 시 실행 중단
          + 단일 페이지 애플리케이션에서 URL 변경 전에 실행 중단
     * 속성 읽기 디버깅
          + 객체의 속성이 읽힐 때마다 중단점 활성화
     * copy() 사용
          + copy() 콘솔 API를 사용하여 브라우저에서 직접 클립보드로 정보 복사
     * HTML/CSS 디버깅
          + JS 콘솔을 사용하여 HTML/CSS 문제 진단
          + JS 비활성화 상태에서 DOM 검사
          + 조건부로 나타나는 DOM 요소 검사
          + DOM 스냅샷 기록
          + 포커스된 요소 모니터링
          + 굵은 글씨체 요소 찾기
          + 현재 선택된 요소 참조
          + 이벤트 모니터링

GN⁺의 의견

   이 글에서 가장 중요한 것은 브라우저의 디버거를 사용하여 개발자가 코드를 더 효율적으로 디버깅하고 문제를 해결할 수 있는 다양한 기술과 팁을 제공한다는 점이다. 이러한 정보는 소프트웨어 개발자에게 매우 유용하며, 특히 복잡한 버그를 추적하거나 성능 문제를 해결할 때 시간을 절약할 수 있기 때문에 흥미롭다.

        Hacker News 의견

     * 브라우저 내장 디버깅 도구의 발전
          + 브라우저 내장 디버깅 도구가 지난 수십 년간 크게 발전함.
          + 자바스크립트 경력자로서, 직관적인 브라우저 코드 디버깅을 가능하게 한 모든 이들에게 감사함.
          + 백엔드 개발이나 다른 언어로 작업할 때, 현대 브라우저의 디버깅 도구 생태계가 그리움.
     * 디버거 문장의 활용
          + 디버거 문장(debugger;)을 사용하는 것은 크롬 디버거의 재귀적인 스택을 이길 수 있는 유일한 방법임.
          + 사이트 방문자가 자신의 난독화된 홈페이지를 해석하는 것을 방지하기 위해 디버깅 함정을 사용한 사례 언급.
     * NodeJS 백엔드 디버깅의 어려움
          + Python/Elixir 프로그래머로서 pdb.set_trace()/IEx.pry()를 자주 사용함.
          + 복잡한 NodeJS 백엔드를 상속받아 적절한 디버깅 도구 없이 작업하며 어려움을 겪음.
          + console.log 디버깅으로 돌아가야 했으며, 이는 원시적인 느낌을 줌.
          + 적절한 디버깅 REPL이 없는 것에 대한 놀라움과 도움을 요청함.
     * Werkzeug 추천
          + Django 백엔드 개발에 Werkzeug 사용을 추천함.
          + 예외가 발생할 때마다 브라우저에서 ""PDB"" 쉘을 사용할 수 있게 해줌.
     * IIFE의 로컬 변수 접근 방법
          + 즉시 실행 함수 표현식(IIFE)의 로컬 변수에 접근하는 방법에 대한 질문.
          + 디버거가 IIFE 범위 내 코드를 중단하지 않고도 이를 수행할 수 있는 방법 탐색.
     * UI 문자열을 통한 디버깅 방법
          + 네트워크 패널에서 네트워크 요청 기록 시작.
          + 왼쪽 사이드바에서 검색을 사용하여 찾고자 하는 코드/UI 문자열 입력.
          + 번들된 js 청크 파일에서 결과를 찾고, ""Sources""에서 열어 디버거 문장을 배치함.
     * 조건부 중단점을 사용한 디버깅
          + {configOption: true}를 {get configOption() { debugger; return true; }}로 변환하는 방법에 대한 질문.
     * Chrome 전용 기능인 'Monitor Events for Element'
          + 'Monitor Events for Element' 기능에 대한 언급과 Chrome 전용이라는 점.
          + Firefox에 대한 대안이 있는지에 대한 궁금증.
     * queryObjects API의 부재
          + 특정 생성자로 생성된 모든 객체의 목록을 반환하는 queryObjects API에 대한 언급.
          + 예를 들어, queryObjects(Function)을 사용하여 힙에 있는 모든 함수의 목록을 얻을 수 있음.
     * 관찰 변수의 사용 어려움
          + 관찰 변수를 작동시키는 것이 어려움을 겪음.
          + 전역 변수만 관찰할 수 있다고 가정하지만, 예상대로 작동하지 않아 로그에 값을 채움.
          + 콘솔이 변수 및 설정 값을 보고 테스트할 수 있는 Data.gui 스타일 UI를 추가해야 한다는 의견과 관련 CodePen 링크 제공.
"
"https://news.hada.io/topic?id=11753","우울증 치료제 혹은 톨킨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             우울증 치료제 혹은 톨킨

     * 흥미로운 도전: 항우울제 약물 지식과 J.R.R. 톨킨 작품 속 인물을 시험하는 독특한 게임
     * 참여 요소: 독자들이 추측 게임에 참여하도록 초대, 내용에 대한 관심과 상호작용 유발
     * 문화적 교차점: 제약계와 문학 판타지 사이의 흥미로운 크로스오버 강조
     * 교육적 트위스트: 참가자들이 항우울제 이름이나 톨킨의 캐릭터에 대해 우연히 배우며 오락에 교육적 층을 추가
     * 기술 매력: 언어학이나 인공지능에 관심 있는 소프트웨어 엔지니어들에게 게임의 패턴 인식 측면이 특히 매혹적일 수 있음
     * 접근성: 항우울제나 톨킨의 전설에 대한 깊은 지식 없이도 접근 가능하게 설계된 게임
     * 대화 시작자: 동료들 사이에서 재미있고 기발한 토론 주제로, 문학이나 정신 건강에 대한 더 넓은 대화로 이어질 수 있음

        Hacker News 의견

     * 항우울제와 톨킨 캐릭터 구분 난이도에 놀란 사용자, 24점 중 15점 획득
     * ""이케아 가구 혹은 메탈 밴드"", ""약물 혹은 포켓몬"" 같은 퀴즈 언급, 난이도와 재미 지적
     * 점수 21/24 공유, 덜 알려진 곤도르 왕들에 혼란 인정, ""Nerd of the Rings"" 유튜브 채널 추천
     * 23/24 고득점자, ""실마릴리온"" 친숙함과 엘프 이름 패턴 인식으로 성공 귀속
     * 처방약 이름 뒤 마케팅 팀의 창의적 과정에 대한 호기심 증폭
     * 23/24 점수 언급, 운이 작용했다고 지적, 약물 이름 Clédial에서의 강세 사용 놀라움 강조
     * 혼동을 불러일으키는 다양한 카테고리 퀴즈를 포함한 유머 콘텐츠로 McSweeney's Internet Tendency 추천
     * 비아그라로 알려진 실데나필이 항우울 효과도 있다는 사실에 유머러스하게 놀란 사용자
"
"https://news.hada.io/topic?id=11797","미 법무부, 애플의 미국 시민 고용 차별 주장","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       미 법무부, 애플의 미국 시민 고용 차별 주장

애플, 미국 시민에 대한 채용 차별로 법무부와 합의

     * 애플이 미국 시민과 다른 미국 거주자들을 차별한 혐의로 법무부와 합의함.
     * 특정 외국인 근로자에게 개방된 직위에 미국 시민을 고용하는 것을 억제했다고 발견됨.
     * 애플은 최대 2,500만 달러를 배상금 및 민사 벌금으로 지불하기로 합의함.

법무부 조사

     * 법무부는 2019년 2월부터 조사를 시작하여 애플이 PERM 프로그램 하에 채용 시 INA의 반차별 요구사항을 위반했다고 결정함.
     * 이 프로그램은 미국 내에서 영구적으로 일할 외국인 근로자를 고용할 수 있도록 하지만, 미국 근로자에게 부정적인 영향을 미치지 않아야 함.
     * 조사 결과, 애플은 PERM을 통해 채용된 직위에 대한 시민권자 차별 패턴을 보였으며, 이로 인해 미국 시민, 영주권자, 망명자 또는 난민 지위를 부여받은 사람들이 피해를 입었다고 밝힘.

애플의 채용 관행 변경

     * 합의에 따라 애플은 PERM 채용 관행을 표준 채용 관행과 더 일치시켜야 함.
     * 모든 PERM 직위에 대해 더 광범위한 채용을 실시하고, 외부 채용 사이트에 게시하며, 전자적으로 지원서를 받아야 함.
     * 애플은 이미 일부 변경 사항을 시행했으며, INA의 반차별 요구사항에 대한 직원 교육과 3년간의 합의 기간 동안 법무부의 모니터링을 받기로 동의함.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 애플이 미국 시민과 다른 미국 거주자들에 대한 채용 차별 혐의로 법무부와 합의에 이르렀다는 것이다. 이는 대기업도 이민 및 국적에 관한 법률을 준수해야 한다는 중요한 사례를 제시한다. 이 기사가 흥미로운 이유는 기술 산업에서의 채용 관행에 대한 중대한 변화를 암시하며, 이는 미국 내에서 취업을 희망하는 많은 사람들에게 영향을 미칠 수 있기 때문이다.

        Hacker News 의견

     * 페이스북이 2018년에 비슷한 사례를 겪었음. 페이스북/메타가 다시 채용을 시작하고 추천 링크로 지원해도, 미국 시민이라도 응답을 받지 못하는 경우가 있음. 이메일이나 전화 연락이 전혀 없어 완전히 무시당하는 듯한 느낌을 받음. 이들의 채용 게시판은 법무부 규정을 만족시키기 위한 것 같지만, 다른 기준으로 채용하는 것 같음.
     * 보도 자료를 자세히 읽어보면, 대부분의 미국 시민이 놓치는 구분이 있음: 이들이 언급하는 것은 H1B 비자가 아닌 EB2 비자임. PERM 인증은 H1B에서 이루어지는 노동 인증과 다름. PERM은 훨씬 더 엄격하고 요구 사항이 많으며, H1B 관련 비용보다 훨씬 많은 비용이 듬. 이유는 PERM이 단순한 작업 허가가 아니라 영주권으로 이어지기 때문임. 종종 박사 학위나 경험이 많은 석사 학위와 같은 높은 자격을 요구함. 비용은 선불로 지불되고, USCIS는 PERM을 사례별로 검토하고 승인하는데 종종 1년 이상 걸림. PERM이 통과되면 신청자는 영주권 대기열에 들어가서 몇 년, 또는 출생지가 문제가 되면 십년을 기다려야 함. 이는 신청자의 질이 매우 높고 애플이 각 신청자에게 수만 달러를 투자하여 영주권을 얻을 가치가 있다고 판단했다는 것을 의미함. 직원이 영주권을 얻은 후
       애플을 즉시 그만두어도 아무런 조치를 취할 수 없음. 이 시점에서는 법적으로 미국인과 동등하므로 임금 억제나 학대와 같은 것은 없음.
     * 이것은 일괄 PERM이라고 불리는 것과 관련이 있을 수 있음. 이는 회사가 기존 비자 직원들을 대상으로 유사한 역할에 대해 고용 기반(EB) 영주권을 일괄적으로 신청할 수 있게 함. 메타는 같은 이유로 법무부와 문제가 있었음. 그들은 PERM 포지션에 대해 신문에 광고를 내고 다른 일자리와 달리 온라인으로 광고하지 않고 종이 신청서만 받아들임. 이는 실제로 PERM 역할에 지원하는 사람을 원하지 않기 때문임. 미국 시민이나 영주권자 중 최소한으로 자격을 갖춘 사람을 찾을 수 없다는 것을 증명해야 하기 때문임. 장기적으로 이것은 PERM 승인을 더 어렵게 만들 것으로 보임. 현재 이미 감사 없이 I-140(영주권) 신청을 승인받는 데 2-3년이 걸림. 또한, 일부 경우에는 영주권을 받는 데 수십 년이 걸릴 수도 있음. H1B 비자로 일하는 사람들은 PERM을 통과하고 I-140을 받지
       않는 한 6년 이상 머물 수 없으므로, 이러한 변화가 고용주들이 비자 후원과 PERM 신청을 꺼리게 할 것으로 예상됨. 장기적으로 국가에서 일할 수 없다는 것을 알면서 왜 누군가를 후원하겠는가? 비자를 가진 사람들에게 힘든 시기가 다가올 것임.
     * 이것은 특정 관리자가 특정 유형의 직원을 원했다는 것과 관련이 있을 수 있음. IBM의 연령 차별과 같은 회사 전체의 지시가 아닌 것으로 보임. 애플은 너무 많은 돈을 벌기 때문에 임금에 대해 크게 걱정하지 않음. 오히려 많은 관리자들은 H1B 비자 소지자를 마치 노예처럼 부릴 수 있기 때문에 좋아함. 이것을 직접 목격한 적이 있음. 관리자로서 꽤 불편한 경험임.
     * 몇몇 대형 은행이 소유한 회사에서 일했음. 이민 변호사가 일 년에 한 번씩 회의를 위해 방문했을 때, 사무실은 매우 조용해짐. 함께 일했던 모든 사람들은 기본적인 일을 했음... 도커, 스프링 부트 등. 피닉스와 같은 큰 도시에서 이러한 기본적인 포지션에 비자가 필요한 이유를 이해하지 못함. 그러나 임금은 비슷했음... 이해하지 못하는 어떤 각도가 있을 것임.
     * 많은 미국 기반 기술 회사들이 더 저렴한 옵션을 선호한다고 비난받을 수 있음. 비자 과정이 여기에 큰 역할을 하며, H-* 비자의 경우 ""특별 기술 세트""가 무엇을 의미하는지에 대한 느슨한 준수도 문제임. 시스템이 이를 허용하므로, 이점을 활용하는 것이 당연함.
     * 모든 채용 공고가 실제로 채용을 하지 않는다면, 실제로 채용하는 직무에 대한 지원자를 전혀 얻지 못할 것임. 그러면 그들은 국내 후보자를 찾을 수 없다는 증거로 사용할 수 있음. 실제 채용 공고를 찾는 유일한 방법은 모든 것에 무작위로 지원하는 것임. 이를 위한 서비스가 있을까?
     * 내 회사의 목표는 하이데라바드 남쪽의 모든 인도인을 고용하는 것 같음. 미국인들이 언제 이 고임금 일자리가 자신들에게 갈 수 있다는 것을 깨닫고 일어날지 궁금함.
     * 애플이 벌금을 지불하기로 동의했다고 하지만, 이것이 실제로 그들의 채용 차별을 중단할 것인지는 불분명함.
     * FAANG과 유사한 기업들이 수십 년 동안 이런 일을 해왔음. 정부는 그들을 위해 일함. 이 판결은 면피용으로 보이며, 실제로는 아무런 변화도 가져오지 않을 것임.
"
"https://news.hada.io/topic?id=11768","Steam Deck OLED 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Steam Deck OLED 출시

     * OLED 디스플레이와 50Whr 배터리, 6nm APU, Wi-Fi 6E를 장착한 스팀덱 OLED 출시.
     * APU의 변경과 배터리 용량 증가, 디스플레이의 전력 소모 감소 등으로 배터리 타임이 최대 30~50% 증가함.
     * Wi-Fi 6E를 통해 최대 3배 빠른 다운로드와 더 안정적인 무선 연결 제공.
     * 쿨링 시스템도 업데이트되어 전반적인 온도가 감소함.
     * OLED 디스플레이의 무게 변화로 인해 30g 더 가벼워짐.
     * 전반적으로 가격이 인하됨.
          + 64GB 모델이 단종되고 256GB 모델을 동일한 가격으로 판매.
          + 512GB 모델부터는 OLED 모델로 변경되었으며, 동일 용량 대비 가격이 인하됨.
          + 256GB LCD 58.9만 원, 512GB OLED 83.9만 원, 1TB OLED 98.9만 원.
     * OLED 모델은 11월 17일부터 구매 가능.
     * 반투명한 케이스를 가진 한정판 스팀덱 OLED 모델이 미국과 캐나다에서 11월 16일 출시.

   이런걸 보면 PSP가 문득 생각나네요... ㅠ,ㅠ

   오우, 살까말까 고민하다 내려놨는데... 이러면 안되는데...ㅠ

   스팀덱 사용중인데 무게랑 발열 감소가 부럽네요

   스위치 구형 사용중이라 OLED 버전이 부러웠는데, 스팀덱도 비슷하네요 ㅎㅎ

   근데 여기도 성능은 차이 없군요. 그냥 7나노에서 6나노로 바꾸기만 한거네요. 성능 차이가 있을 법 한데
     * HN 스레드
     * 한정판 스팀덱
     * 스팀덱 한국 총판

   성능은 변화되지 않았는데, APU의 공정이 개선되면서 전력 소모가 감소한 것으로 보입니다.
   배터리 타임 증가가 꽤 크네요. +_+ 무게도 더 가벼워졌고...

   한정판 모델도 꽤 이쁜데, 한국 출시는 없어서 아쉽네요.
"
"https://news.hada.io/topic?id=11707","Kotlin Multiplaform이 안정화 및 Production-Ready됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Kotlin Multiplaform이 안정화 및 Production-Ready됨

     * Kotlin Multiplatform(KMP)는 크로스 플랫폼 개발과 네이티브 개발 간의 경계를 모호하게 만듦
     * 이를 통해서 네이티브 프로그래밍의 이점을 유지하면서 여러 플랫폼에서 코드를 공유하고 재사용 있도록 지원
     * 이제 안정화 되어서 프로덕션에서 100% 사용 가능
     * KMP는 컴파일러 지원부터, 언어 기능, 라이브러리 API, IDE, 빌드 도구 등 다양한 부분에 걸쳐있음
     * Default Hierarchy Template 을 통해서 프로젝트 셋업 및 유지보수를 간소화
     * 성능은 지속적으로 개선중
     * Google의 Android 팀은 실험적인 멀티플랫폼 버전의 Jetpack 라이브러리를 제공함으로써 KMP 사용자를 지속적으로 지원하고 있으며, 이미 컬렉션, DataStore, Annotations 및 페이징 라이브러리를 KMP와 호환되게 제공중
     * iOS 개발자 환경을 위한 다양한 도구를 제공. Touchlab의 SKIE는 Swift 친화적인 API Layer을 제공하는 Swift 코드를 생성하여, 중요한 Kotlin Type들을 브릿지하고, 원활한 코루틴 상호운용성을 구현
     * KMP 에코시스템의 중요 요소인 Compose Multiplatform을 통해서 더 나은 코드 공유가 가능
          + 안드로이드 및 데스크톱(JVM)용 콤포즈 멀티플랫폼은 이미 Stable
          + iOS 지원은 현재 알파 버전이고 웹(Wasm) 지원은 실험 단계

   넷플릭스 Android/iOS 앱, 이제 Kotlin Multiplatform 기반
   JetBrains Compose Multiplatform 1.0.0 정식 릴리즈
"
"https://news.hada.io/topic?id=11713","Terraform Loop 효과적으로 사용하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Terraform Loop 효과적으로 사용하기

     * 클라우드에서 인프라 구축할 때 비용 절감, 배포 속도 향상, 일관성, 안정성, 재사용성 고려해 웹 콘솔로 구축하기보다 IaC 도구 활용해 구축하면 좋음
     * 오픈소스이며 IaC 도구 중 가장 많이 사용하는 게 Terraform
     * Terraform 코드를 효율적이고 효과적으로 작성하려면 Terraform에서 제공되는 기능을 적절하게 사용하는 게 중요함
     * Terraform 반복문
          + 일반적인 선언적 언어는 반복문 없지만 Terraform에서는 다양한 함수 지원해 반복문 사용할 수 있음
          + 대표적으로 사용하는 반복문: count, for_each
               o count 매개 변수: 리소스와 모듈 반복
               o for_each 표현식: 리소스, 리소스 내 인라인 블록과 모듈 반복
          + 각 반복문 사용 방법
               o count: 생성하려는 리소스가 거의 동일하고 변경되지 않을 때 활용하면 빠르고 간결하게 생성
               o for_each: 고유한 이름, 데이터가 들어 있는 리소스, 재생성되지 말아야 할 리소스에 활용하면 안전하게 생성, 변경
     * Count
          + count 매개 변수는 정수를 허용, 전체 리소스, 모듈 반복해 만듦
          + count로 구성하면 count.index 활용해 count에서 생성한 인덱스에 접근할 수 있음
          + Count 제약사항
               o count는 전체 리소스 반복하지만 리소스 안에 있는 인라인 블록은 반복하지 않음
               o count로 생성한 리소스 중간 값 제거하면 뒤의 모든 값이 삭제 후 새로 생성. 최종 결과물은 동일하지만 재생성되지 말아야 할 리소스라면 문제 생길 수 있음
     * For_each
          + for_each 표현식은 list, set, map 반복해 전체 리소스, 리소스 내 인라인 블록, 모듈 반복해 만듦
          + for_each로 구성되면 each.key와 each.value 사용해 해당 키와 값에 접근할 수 있음
          + 리소스에 for_each 사용할 때는 리스트가 지원되지 않음
          + collection에는 반복할 set, map 정의하고 Config에 each.value 사용해 Collection에 정의된 키와 값 가져올 수 있음
"
"https://news.hada.io/topic?id=11786","나이틀리 버전에서 병렬 프론트엔드를 통한 Rust의 빠른 컴파일 속도","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 나이틀리 버전에서 병렬 프론트엔드를 통한 Rust의 빠른 컴파일 속도

Rust 컴파일러의 병렬 프론트엔드로 빠른 컴파일 가능

     * Rust 컴파일러의 프론트엔드가 병렬 실행을 사용하여 컴파일 시간을 크게 줄일 수 있음.
     * 병렬 프론트엔드는 실험적 기능으로, -Z threads=8 옵션을 사용하여 나이틀리 컴파일러에서 시도할 수 있음.
     * 2024년에 안정적인 컴파일러로 출시될 예정임.

컴파일 시간과 병렬성

     * Rust 컴파일 시간은 지속적인 관심사이며, 컴파일러 성능 작업 그룹은 여러 해 동안 컴파일러 성능을 지속적으로 개선했음.
     * 2023년 첫 10개월 동안 컴파일 시간은 평균 13%, 메모리 사용량은 15%, 바이너리 크기는 7% 감소함.
     * 컴파일러는 이미 많이 최적화되어 새로운 개선 사항을 찾기 어려워졌으며, 병렬성이 크지만 어려운 개선 사항으로 남아 있음.

기존의 프로세스 간 병렬성

     * Rust 프로그램을 컴파일할 때 Cargo는 여러 rustc 프로세스를 병렬로 실행하여 여러 크레이트를 컴파일함.
     * 크레이트 간 의존성이 적을 때 병렬 실행이 잘 이루어지지만, 의존성이 증가함에 따라 병렬 실행이 감소함.

기존의 프로세스 내 병렬성: 백엔드

     * 컴파일러는 프론트엔드와 백엔드로 나뉘며, 백엔드는 코드 생성을 담당하고 LLVM이 이를 병렬로 처리함.
     * 프론트엔드는 파싱, 타입 체킹 등을 수행하지만, 이번 주까지 병렬 실행을 사용하지 못했음.

새로운 프로세스 내 병렬성: 프론트엔드

     * 프론트엔드는 이제 Rayon을 사용하여 미세한 병렬성으로 컴파일 작업을 수행할 수 있게 됨.
     * 병렬 프론트엔드가 활성화되고 8개의 스레드를 사용하도록 설정되면, 프론트엔드 실행 시간이 크게 줄어듦을 확인할 수 있음.

전체적인 결합

     * Rust 컴파일은 Cargo를 통한 프로세스 간 병렬성과 백엔드의 프로세스 내 병렬성의 혜택을 오랫동안 받아왔으며, 이제 프론트엔드에서도 프로세스 내 병렬성의 혜택을 받을 수 있음.
     * 컴파일러는 jobserver 프로토콜을 사용하여 생성되는 스레드 수를 제한하여 코어 수를 초과하지 않음.

사용 방법

     * 나이틀리 컴파일러는 병렬 프론트엔드를 활성화하여 출시되었지만, 기본적으로 단일 스레드 모드에서 실행됨.
     * 사용자는 -Z threads 옵션을 사용하여 다중 스레드 모드로 전환할 수 있음.

성능 영향

     * 단일 스레드 모드에서 병렬 프론트엔드를 실행하면 컴파일 시간이 기존 대비 0%에서 2% 느려질 수 있음.
     * 다중 스레드 모드에서는 컴파일 시간이 최대 50%까지 줄어들 수 있으나, 효과는 코드의 특성과 빌드 구성에 따라 다양함.

정확성

     * 단일 스레드 모드에서는 신뢰성이 높을 것으로 예상됨.
     * 다중 스레드 모드에서는 알려진 버그와 데드락이 있을 수 있으며, 컴파일러가 생성하는 바이너리는 어떤 프론트엔드를 사용하든 동일해야 함.

피드백

     * 병렬 프론트엔드에 문제가 있을 경우 ""WG-compiler-parallel"" 라벨이 붙은 이슈를 확인하고, 새로운 이슈를 제출할 수 있음.

향후 작업

     * 병렬 프론트엔드의 성능을 개선하고 멀티 스레드 모드의 버그를 해결하는 작업이 진행 중임.
     * 2024년에 안정적인 릴리스에서 기본적으로 다중 스레드 모드로 실행되도록 -Z threads 옵션을 안정화할 계획임.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 Rust 컴파일러의 프론트엔드가 이제 병렬 실행을 지원하여 컴파일 시간을 크게 단축할 수 있다는 것이다. 이는 Rust 개발자들에게 컴파일 속도 향상이라는 큰 이점을 제공하며, 효율적인 개발 환경을 조성하는 데 기여할 것이다. 병렬 프론트엔드의 도입은 Rust 커뮤니티에게 흥미로운 소식이며, 성능 개선을 위한 지속적인 노력의 결과로 볼 수 있다.

        Hacker News 의견

     * Rust 컴파일 속도 개선에 대한 기대감
          + Rust의 컴파일 속도가 느린 점이 단점으로 지적되며, 특히 대규모 저장소에서 작업할 때 CI/CD 비용 증가와 개발 시간 지연의 원인이 됨. 캐시를 제거해야 할 때(도커 버그로 인해 가끔 발생) 특히 문제가 됨. 이러한 진전에 대해 긍정적인 반응.
     * Rust 컴파일 속도에 대한 개인적 경험
          + 오래전 Rust를 사용했을 때 컴파일 속도가 느렸으나 최근 다시 사용하면서 컴파일 시간을 거의 신경 쓰지 않게 됨. 그러나 프로젝트가 커지면서 컴파일 지연이 느껴질 때가 있어, 이러한 개선이 개인적으로 매우 반가운 소식임.
     * Rust 컴파일 과정에 대한 질문
          + Rust의 프론트엔드가 빌림 검사를 마친 후 백엔드가 작업을 시작해야 하는지에 대한 질문. 백엔드가 빌림 검사 오류를 발견하면 추측적인 작업을 버릴 수 있지 않을까 하는 의문 제기.
     * Rust 바이너리 크레이트의 컴파일에 대한 관찰
          + 라이브러리 크레이트와 달리 바이너리 크레이트가 기본적으로 크고 단일 구조로 되어 있어 컴파일이 병렬화되지 않고 가장 큰 크레이트가 직렬화되는 경향이 있음. 이러한 문제에 대한 개선이 반가움.
     * CPU 코어 활용에 대한 질문
          + 컴파일 시 CPU 코어 수를 자동으로 사용하게 할 수 있는지, 아니면 다른 기계에서 사용되는 설정 파일에 고정된 값을 넣어야 하는지에 대한 질문.
     * 멀티스레드 모드의 버그에 대한 경고
          + 멀티스레드 모드에서 알려진 버그와 데드락이 있으며, 컴파일이 멈추면 이러한 문제 중 하나를 겪었을 가능성이 있음. -Z threads 옵션 사용에 조심스러운 태도.
     * Rust 컴파일 속도의 현재 상태에 대한 긍정적인 평가
          + 몇 년간 Rust를 사용하지 않다가 최근 다시 사용해보니 컴파일 속도가 거의 즉각적임. ChatGPT와 같은 도구를 사용해 이전에는 해결하기 어려웠던 Rust 문제들을 쉽게 해결할 수 있게 되어 현재 상태가 매우 좋음.
     * Rust 컴파일 최적화의 방향성에 대한 의문
          + Rust 컴파일이 이미 파일 수준에서 고도로 병렬화되어 있는데, 단일 파일 컴파일 속도가 빨라지는 것이 상위 수준의 파일 병렬화에서 자원을 빼앗는 것은 아닌지 우려. 이에 대한 구체적인 데이터가 없다는 점이 문제로 지적됨.
     * Rust 컴파일 속도 개선에 대한 환영의 댓글
"
"https://news.hada.io/topic?id=11804","노르딕, RISC-V 참여","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             노르딕, RISC-V 참여

노르딕, RISC-V 참여 이유

     * 노르딕이 반도체 회사들의 산업 컨소시엄에 합류하여 오픈 소스 칩 아키텍처인 RISC-V의 채택을 추진함.
     * RISC-V는 Arm 아키텍처와 대비되는 기술로, 무선 기술의 안전성과 혁신을 강화하는 데 기여할 수 있음.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 노르딕이 오픈 소스 칩 아키텍처인 RISC-V의 채택을 지원하기 위해 산업 컨소시엄에 참여한다는 내용임. 이는 기술 산업에서 오픈 소스 아키텍처의 중요성이 증가하고 있음을 시사하며, 이러한 움직임은 무선 기술의 발전과 혁신에 긍정적인 영향을 미칠 수 있음을 보여줌. 이는 소프트웨어 엔지니어를 포함한 기술 전문가들에게 흥미로운 소식이며, 새로운 기술 트렌드와 산업 협력의 중요성을 이해하는 데 도움이 될 것임.

        Hacker News 의견

     * 노르딕 반도체는 소비자용 블루투스 칩 공급에서 높은 점유율을 가지고 있으나, 저가의 중국 경쟁사들에 의해 압박을 받고 있음. 서방 칩 회사 중 RISC-V 도입에 가장 적합한 후보로 보임. TI가 RISC-V를 어떻게 활용할지 궁금함.
     * 노르딕은 소형 임베디드 블루투스 SoC 분야에서 선도적인 업체로, RISC-V 제품을 판매한다면 저가의 임베디드 장치들에 RISC-V의 문을 열게 될 것임.
     * Espressif는 항상 앞서가는 것처럼 보임. 준비된 모듈, RISC-V로의 전환, Rust SDK 제공 등이 그 예임. 노르딕 제품은 복잡해지고 있지만, ESP32가 블루투스와 Wi-Fi를 하나로 합친 점과 Rust 프로그래밍이 가능해진 점은 매력적임.
     * 노르딕은 블루투스 전력 소비를 더 낮추었다는 소식을 발표했으며, WiFi 칩도 출시했지만, ESP 칩과는 경쟁하지 않는 보조 프로세서 형태임. 반면, Espressif는 P4를 출시할 예정인데, 이는 단순한 마이크로컨트롤러로, ESP32와 같은 보조 프로세서가 필요함.
     * 많은 중국 IoT 제품들이 Espressif에서 Beken으로 이동하고 있음을 발견함. RISC-V는 IoT 부문에서 지배적인 위치를 차지할 가능성이 높음.
     * 해커뉴스의 전형적인 특징으로, 기사보다 댓글이 더 흥미로움. 개인적으로 '오픈'된 것들에 대한 선호도가 높아지고 있으며, RISC-V에 대한 기사에 항상 관심을 가짐.
     * 노르딕이 ARM 라이선스를 갱신할 때 레버리지를 가질 수 있는 가능성을 시사함.
     * 노르딕 반도체 회사에 대한 언급이지만, 처음에는 북유럽 국가들을 의미하는 것으로 오해할 수 있음.
     * 만약 올해가 AI의 주요한 해가 아니었다면, RISC-V의 채택이 가장 주목할 만한 사건이었을 것임. 아직은 작은 규모이지만, 몇 년 안에 큰 영향을 미칠 것으로 보임.
     * RISC-V의 간결하고 깨끗한 ISA는 ARM의 전력 최적화 설계와 경쟁할 수 있으며, 결국 전력 소비가 모든 것을 결정함. 여러 경쟁자들이 시장 점유율을 차지하기 위해 경쟁함에 따라, RISC-V는 x64와 ARM을 능가하는 성능을 보여줄 것임.
     * 노르딕의 보안이 시간이 지남에 따라 개선되었는지에 대한 질문이 있으며, 관련 보안 취약점에 대한 링크가 제공됨.
"
"https://news.hada.io/topic?id=11774","일론 머스크의 Neuralink, 실명 해결을 위한 칩 개발 중","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  일론 머스크의 Neuralink, 실명 해결을 위한 칩 개발 중

   일론 머스크의 Neuralink, 시력 회복 칩 '몇 년 내' 출시 예정
     * 머스크가 소유한 소셜 미디어 플랫폼 X에서, 그의 회사 Neuralink가 시력 장애를 해결할 수 있는 칩을 개발 중이라고 발표함
     * 이 칩은 ""몇 년 내""에 출시될 예정이며, 시력 상실을 일으키는 눈 조건을 해결하는 데 초점을 맞춤
     * 한 X 사용자가 가족 구성원에게 있는 희귀 눈 질환에 대해 언급한 후, 이에 대한 답변으로 개발 사실을 공개함

   Neuralink: 머스크의 신경 기술 회사가 개발 중인 뇌-컴퓨터 인터페이스
     * Neuralink는 몇 년 동안 뇌에 심을 수 있는 뇌-컴퓨터 인터페이스를 개발해 온 회사임
     * v0.9 칩에 대한 세부 정보를 공개하며, 이는 척수 손상이나 근위축성 측색 경화증(ALS)으로 사지 마비가 된 환자들의 다양한 질병 치료를 목표로 함
     * 9월에 첫 임상 시험을 위한 인간 대상 모집을 시작할 수 있는 승인을 받고, 이 칩에 대한 초기 테스트에 접근하고 있음

   미래의 제품으로 해결하고자 하는 Neuralink의 더 많은 문제들
     * Neuralink는 미래 제품을 통해 다양한 문제를 해결하고자 하며, 현재 개발 중인 것 중 하나가 시력 문제임
     * 미국 국립안과학원에 따르면, 130만 명의 미국인이 실명 상태이며, 이 숫자는 2030년까지 220만 명으로 증가할 것으로 예상됨
     * 낮은 시력을 가진 미국인도 현재 290만 명이며, 이 수치는 이번 십년말까지 500만 명으로 늘어날 것으로 예상됨

   Neuralink의 초기 인간 대상 시험의 가능성
     * Neuralink의 초기 인간 대상 시험은 건강 문제를 가진 사람들 사이에서 더 많은 신뢰를 줄 수 있으며, 성공적이길 바람
     * 이 시험이 널리 성공한다면, 사람들이 질병을 해결할 수 있는 확실한 방법에 접근할 수 있게 될 것임
     * 시력 문제는 매우 불행한 일이고, Neuralink가 이를 해결하기 위해 개발 중인 칩은 나쁜 눈을 가진 환자들에게 새로운 치료 옵션을 제공할 것임

   제 딸 성인 됐을때쯤엔 나왔음 좋겠네요. 기대중..

   안전하고 좋은 제품이 나오길 저도 기원하겠습니다.
"
"https://news.hada.io/topic?id=11696","당신의 몸을 지원하는 소프트웨어는 항상 당신의 자유를 존중해야 한다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 당신의 몸을 지원하는 소프트웨어는 항상 당신의 자유를 존중해야 한다

     * 청각 보조기, 인슐린 펌프, 바이오닉 눈, 심장 박동기와 같은 의료 기기에서 소프트웨어 자유의 중요성에 대한 기사
     * 의료 기기의 독점 소프트웨어가 실패하여 사용자들이 도움을 받지 못한 몇 가지 사례 강조, 예를 들어, 혈당 수준을 모니터링하는 LibreLink 앱이 업데이트 후 작동을 멈춤으로써 당뇨병 환자들에게 영향을 미침
     * 자유 소프트웨어를 사용하면 사용자들이 소프트웨어를 직접 실행, 복사, 배포, 연구, 변경, 개선하거나 개발자와 사용자 커뮤니티의 지원에 의존할 수 있다는 점을 강조하는 기사
     * 의료 기기의 독점 소프트웨어와 관련된 잠재적인 사이버 보안 위험 언급, 심장 박동기와 인슐린 펌프가 취약점으로 인해 공격에 노출된 사례를 인용
     * 의료 보조기에서의 자유 소프트웨어는 환자뿐만 아니라 환경과 의료 시스템에도 이익을 준다는 저자의 주장, 기기의 수명을 연장하고 비용을 절약함
     * Tympan 프로젝트와 OpenAPS와 같은 청각 보조기와 인슐린 펌프를 위한 기존의 자유 소프트웨어 언급, 그러나 심장 박동기를 위한 자유 소프트웨어는 부족하다는 지적
     * 저자는 독점 소프트웨어가 의료 보조기에서 발생하는 문제에 대해 다른 사람들에게 알리고 자유 소프트웨어를 선택하고 요구하도록 독자들을 격려
     * 기사는 독자들이 의료 보조기와 자유 소프트웨어에 대한 경험을 campaigns@fsf.org로 이메일을 보내 공유하도록 초대
"
"https://news.hada.io/topic?id=11791","PureImage - HTML Canvas 2D API의 100% JS 구현체","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              PureImage - HTML Canvas 2D API의 100% JS 구현체

     * Node.js 용으로 구현된 HTML Canvas 2D API의 순수 JavaScript 구현체
     * 네이티브 의존성 없음
     * 이미지 리사이징, 텍스트 그리기, 뱃지 렌더링, 그레이스케일 변환 등 표준 Canvas 2D API로 가능한 작업이 그대로 가능
     * 추가로 PNG/JPEG 로 저장하는 API도 제공
     * Common JS 와 ES Modules 양쪽으로 컴파일
     * 속도보다 이식성과 구현의 단순성을 중시. 최고의 성능을 찾는다면 네이티브 코드를 이용한 Node-Canvas 같은 것을 이용할 것
"
"https://news.hada.io/topic?id=11702","스타트업 트렌드 리포트 2023 (83p PDF)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      스타트업 트렌드 리포트 2023 (83p PDF)

     * 스타트업얼라이언스와 오픈서베이가 국내 창업자/스타트업 재직자/대기업 재직자/취업준비생 총 900명 대상으로 설문조사

조사 결과 요약

     * 스타트업 창업자의 생각
          + 최근 스타트업 생태계 분위기는 작년 대비 7.2점 감소한 46.5점
          + 대부분의 창업자(76.5%)들은 벤처캐피탈의 미온적 투자/지원, 민간부문 지원사업 약화 등에서 시장 상황의 부정적 변화를 체감
          + 경제위기 가능성/경제상황 악화 전망으로 2024년에도 지금의 상황이 나아지지 않을 것으로 예상
          + 창업자 10명 중 6명은 작년 대비 투자 유치가 어렵다고 체감 (63%)
          + 벤처투자 시장 혹한기 리스크 대비책으로 매출 다각화 전략 마련, 흑자 사업 집중, 비용 절감, 정부지원사업 추진 등을 고려
          + 스타트업 생태계 활성화에 대한 정부 역할 평가는 52.5점으로 생태계 기반 자금 확보 및 투자활성화, 각종 규제 완화에 대한 니즈가 높은 가운데, 특히 ‘규제 완화’ 필요성 인식이 증가
          + 평균적으로 스타트업 중 약 30%가 해외 시장에 진출하거나 진행 중
          + 대부분은 북미와 동남아시아를 주요 진출지로 선택하며, 그 뒤로는 일본, 유럽, 중국 등의 국가가 따름
          + 해외 진출 시, 비즈니스 네트워크와 파트너십 구축, 현지 시장 정보 획득, 유통 및 판로 개척이 가장 중요하다고 생각. 반면 언어 능력과 글로벌 인재 확보는 상대적으로 중요성이 낮음
     * 스타트업 재직자의 생각
          + 42.0%만이 스타트업 생활에 만족하며, 이는 작년 대비 7.2%p 감소한 수치
          + 자율적이고 수평적인 조직 문화, 워라밸 보장, 유연하고 빠른 의사결정 구조는 만족스러우나, 낮은 재정적 보상, 불안정한 조직 비전/전략은 주요한 불만족 요인
          + 10명 중 3명이 스타트업 근무를 추천하며, 추천하는 경우 어느 정도 성장 가능성이 증명된 시리즈 A~B 투자 단계의 스타트업을 주로 추천
          + 추천하지 않는 주요 사유는 리스크/불안정성/불확실성 및 체계 미흡
          + 향후 이직 시 높은 재정적 보상 및 복리/복지 혜택이 좋은 대기업을 가장 선호
          + 스타트업으로 이직을 고려하는 경우, 주로 소프트웨어/솔루션, 딥테크 분야를 희망하며, 4명 중 1명은 글로벌/국제화 역량을 키울 수 있는 해외 진출 스타트업을 선호
          + 스타트업 재직자가 빠른 성장세를 체감하고, 일하는 방식을 알고 싶은 국내 기업은 토스, 당근마켓, 배달의민족
          + 스타트업 재직자의 53.6%가 작년 대비 스타트업 투자 시장이 위축되었다고 평가하나, 지속 근무 및 창업 의향에 미치는 영향은 크지 않음
     * 대기업 재직자의 생각
          + 대기업 재직자 4명 중 1명은 평소 포털사이트, 직장인 전용 커뮤니티 앱, 뉴스/기사 등을 통해 스타트업 관련 정보를 접한 경험이 있음
          + 대기업 직장인의 1년 내 스타트업 이직 고려율은 18.8%로, 작년 대비 6.0%p 감소
          + 이직을 고려한 경우, 주로 높은 재정적 보상, 유연/빠른 의사결정 구조, 조직 성장으로 인한 성취감을 기대하며, 금융/핀테크/블록체인, 딥테크, 소프트웨어/솔루션 분야 선호도가 상대적으로 높음
          + 절반 이상인 52.8%가 최근 1년 내 직접 창업을 고려한 경험이 있으며, 이는 작년과 유사/소폭 감소한 수치
          + 이커머스/유통, 농식품, 교육, 여행/레저 분야 창업 고려 비율이 타 분야 대비 상대적으로 높게 나타남
          + 그러나, 대부분의 직장인은 스타트업의 조직 비전/전략 불안정성, 워라밸 비보장, 낮은 재정적 보상 예상으로 스타트업으로의 이직을 고려하지 않았음
          + 대기업 재직자는 빠른 성장/일하는 방식을 알고 싶은 국내 스타트업으로 토스, 배달의민족, 당근마켓을 Top3로 응답
     * 취업 준비생의 생각
          + 취업준비생에게 스타트업은 ‘젊은/새로운’ 이미지이며, 작년 대비 ‘혁신적/창의적인’ 이미지가 증가
          + 과반수가 스타트업에 대해 잘 모르지만, 당근마켓, 배달의민족, 토스는 타 스타트업 대비 빠른 성장 인식 및 관심도가 높은 편
          + 5명 중 1명은 평소 스타트업 정보를 탐색하며, 주로 채용/기업정보 앱/사이트, 포털 사이트, 유튜브를 통해 정보를 접함
          + 대부분 국내 대기업, 중견기업, 공공기관/정부/공기업 취업을 선호하며, 벤처/스타트업 취업을 가장 희망하는 취업준비생은 1%에 불과
          + 그러나, 44.5%는 최근 1년 내 스타트업으로의 취업을 생각해 본 적이 있음
          + 취업준비생에게 스타트업은 유연/빠른 의사결정 구조, 업무 및 커리어 개발 가능, 워라밸 보장, 조직 성장으로 인한 성취감이 주요 매력 요소
          + 스타트업으로의 취업을 고려하는 취업준비생 10명 중 6명은 스타트업의 해외 진출 여부가 취업에 영향을 주지 않는다고 답하였으며, 25.8%는 해외에 진출한 스타트업을 선호
          + 취업준비생의 45.5%가 지난 1년 동안 창업을 고려한 경험이 있으며, 이는 작년 대비 5.5%p 감소한 수치
          + 창업을 고려한 경우, 패션/뷰티, 콘텐츠/미디어, 농식품 업종을 주로 염두에 두고 있으며, 특히 패션/뷰티 업종 고려율이 작년 대비 6.9%p 증가
"
"https://news.hada.io/topic?id=11740","하드웨어 해킹 랩 구축을 위한 초보자 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        하드웨어 해킹 랩 구축을 위한 초보자 가이드

     * 처음에 하드웨어 해킹을 위한 장비들을 구비할 때 필요한 각종 제품 설명과 저가/고가 장비들 추천
     * 작업대 구성하기: Ikea 상판/다리/서랍 + 정전기 방지용 ESD 스트랩/매트
     * 납땜용 장비: KSGER T12 또는 JBC DDPE 납땜 스테이션(인두기) + Soiiw 핫플레이트 + JBC TESE 핫에어 스테이션 등
     * 디지털 멀티미터(테스터기): Micsoa/Crenova/Fluke
     * 현미경/확대경: AMScope/MisVision/Aven
     * 오실로스코프: Signlent/Rigol
     * 로직분석기: DSLogic/Saleae Logic
     * 클립/점퍼/프로브
     * 파워 서플라이 : Siglent/Rigol/Keysight/BK Precision
     * JTAG 및 Debug Adapter: STLink/Tigard/JLink
     * 플래시 리더: Transcend/FlashCAT/Easy JTAG
     * SBC(Single Board Computer) 및 인터페이스 도구: Arduino Nano/Orage Pi Zero 2/Tigard
     * Fault Inject: RP2040/PocketBeagle/ChipSHOUTER/ChipWhisperer
     * 무선 주파수 도구 및 계측기: HackRF One/LimeSDR/Flipper Zero/YARD Stick One/Ubertooth One/RTL-SDR/Wi-Fi Pineapple/PortaPack H1
"
"https://news.hada.io/topic?id=11678","AI가 광고와 마케팅을 어떻게 변화시키고 있는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       AI가 광고와 마케팅을 어떻게 변화시키고 있는가

소비자 이해

     * 이제 대량의 소비자 정보를 통합하고 집계하여 소비자에 대한 이해를 더욱 깊게 할 수 있다는 것
     * 예를 들어, 영업 담당자나 고객 지원 상담사가 해당 제품에 대한 모든 세부 사항을 알고 있을 뿐만 아니라 해당 제품에 대한 모든 질문과 정답을 알고 있다고 상상해 볼 것
     * 게다가 이런 영업사원이나 고객 지원 상담사가 무한대로 많다고 상상해 보면, 영업 및 고객 지원에 미치는 영향은 수백만 개의 일자리가 대체될 뿐만 아니라 고객에게 보다 즉각적이고 맞춤화된 경험을 제공할 수 있게 될 것

맞춤형 메시징

     * AI는 판매자가 소비자의 니즈와 행동을 이해하는 데 도움이 될 뿐만 아니라 이 정보를 사용하여 개인 맞춤형 광고로 개인을 타겟팅할 수도 있음
     * 대부분의 소비자는 제품 추천이 포함된 이메일, 메시지, 팝업을 받는 것이 일반적이지만, AI는 특정 개인이나 그룹에 맞춤화된 광고를 생성하여 제품이나 서비스를 구매할 가능성을 높임으로써 이를 한 단계 더 발전시킴
     * 예를 들어 당신이 Labradoodle(리트리버와 푸들을 이종교배한 대형견)을 키우고 있으며, PetSmart의 소비자라고 가정해 보면
          + 새로운 세상에서는 PetSmart가 문자 메시지를 통해 당신에게 연락하여 반려견의 이름으로 맞춤화된 대화를 나눈 다음, 반려견에게 특정 제품이 필요하다는 사실을 상기시키고 같은 제품을 통해 성공한 다른 래브라두들의 이야기를 공유함으로써 온라인 고객으로 전환할 수 있게 됨

미래 트렌드 예측

     * AI가 소비자 인사이트 창출을 지원하는 것 외에도 미래 트렌드를 식별, 포착, 예측할 수 있을 것
     * 소셜 미디어 콘텐츠를 연구하고 분석함으로써 AI는 소비자의 취향, 선호도, 니즈, 그리고 이러한 지표가 향후 어떻게 변화할지 보다 정확하게 예측가능
     * 결과적으로 AI 마케팅은 인간 마케팅 담당자가 미래의 수요와 공급을 예측하고 제품 개선 및 향후 캠페인을 위한 전략을 수립하는 데 도움을 줄 수 있음

고객 경험 개선

     * AI 기반 챗봇은 자연어 처리를 통해 개인화되고 효율적인 연중무휴 실시간 고객 지원을 제공함으로써 고객의 문의와 요청을 이해하고 응답할 수 있음
     * 자연어 처리 모델이 개선됨에 따라 이 도구는 모든 고객의 의도를 파악하는 데 도움이 될 것이며, AI 기반 챗봇과 사람을 구분하는 것이 사실상 불가능해질 것
"
"https://news.hada.io/topic?id=11701","구글의 반독점 재판에서 공개된 '가장 수익성 높은 검색어들'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   구글의 반독점 재판에서 공개된 '가장 수익성 높은 검색어들'

     * 모든 구글 검색이 구글에 돈을 벌어주는 것은 아님
     * 구글은 검색어의 20%인 상업적 검색어에 대해서만 광고를 표시한다고 주장
     * 2018년 9월 22일 있던 주간에 가장 많은 수익을 낸 검색어들
          + iphone 8
          + iphone 8 plus
          + auto insurance
          + car insurance
          + cheap flights
          + car insurance quotes
          + direct tv
          + online colleges
          + at&t
          + hulu
          + iphone
          + uber
          + spectrum
          + comcast
          + xfinity
          + insurance quotes
          + free credit report
          + cheap car insurance
          + aarp
          + lifelock
     * 그때 아이폰 8이 막 출시되어 많은 리테일러, 통신업체, 액세서리 제조업체가 경쟁중이라 3개의 아이폰이 등장
     * 보험 관련 검색어 5개가 있는데, 여기는 항상 경쟁이 치열하고 수익성이 좋음
     * 의사-탐색(psuedo-navigational) 검색어인 ""at&t"", ""xfinity"", ""hulu"" 및 ""uber"" 등은 해당 사이트로 가려고 하는 건데, 구글은 꽤 오랫동안 브랜드가 검색 결과 공간을 경쟁업체에 빼앗기지 않도록 자신의 이름 검색어를 구매하라고 권장하고 있음
"
"https://news.hada.io/topic?id=11755","스페인의 고층 아파트 생활: 도시를 수직으로 건설한 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    스페인의 고층 아파트 생활: 도시를 수직으로 건설한 이유

     * 아 코루냐의 토레 헤르콘: 1975년에 개관한 31층 고층 건물, 주택 협동조합이 지원한 24층 주거용.
     * 스페인의 도시 수직성: 아 코루냐는 스페인에서 평균 건물 높이가 가장 높아, 국내에서 가장 인구 밀도가 높은 지역 중 하나.
     * 아파트 생활: 스페인은 남한에 이어 아파트에 사는 인구 비율이 두 번째로 높아, 65%가 공동 주택에 거주.
     * 역사적 맥락: 바르셀로나의 시우타트 베야 지구는 1854년까지 벽으로 둘러싸인 좁은 거리로 인구 밀도가 높았으며, 위생 운동과 일데폰스 세르다가 설계한 에이샴플레 지구의 탄생으로 이어짐.
     * 인구 밀도 대 건물 높이: 스페인 도시에서 높은 건물과 높은 인구 밀도 간 상관관계를 보여주는 데이터, 바르셀로나, 카디스, 발렌시아가 가장 밀도가 높고 높은 지역.
     * 프랑코 시대 주택 정책: 1950-1975년 사이에 시골 이주민을 수용하기 위해 고층 주택 단지가 건설되었으며, 역사적 도심 주변에 최초의 '도시 외곽' 형성.
     * 건축 추세: 예산 제약으로 인해 처음에는 4층 건물이 일반적이었으나, 이후 수익성을 위해 엘리베이터가 있는 더 높은 H형 블록으로 전환.
     * 도시 확장: 1980년대 이후, 농촌 이탈이 둔화되고 스페인은 미국식 교외에서 영감을 받은 저밀도 단독주택 '도시 확장'이 등장.
     * 최근 개발 동향: 1990년대에는 타운하우스와 주변 블록으로의 전환을 보였으며, 사라고사의 파르케 베네치아 같은 지역은 공공 서비스 부족과 같은 도전에 직면.
     * 시장 변화: 코로나19 이전에는 도심이 가치를 얻었으나, 팬데믹 이후에는 단독주택과 대도시 지역 아파트에 대한 수요 증가.
     * 도시 계획의 미래: 현대적 추세는 컴팩트하고 복잡하며 일체감 있는 도시를 선호하며, 도시 생활의 이상적인 높이와 밀도 및 스페인 도시 계획의 방향에 대한 질문을 제기.

        Hacker News 의견

     * 스페인에 22년 거주한 외국인, 토지법과 정치 변화가 도시 개발에 미치는 영향 강조
     * 스페인의 젊은 민주주의와 정부 교체, 불균등한 도시 성장과 투기 초래
     * 스페인의 구매 선호 문화, 수요 충족 위한 아파트 건설 촉진
     * 스페인 도시의 경제 인구통계, 다른 주요 도시들과 달리 대조적 격차 부족
     * 미국 소방 규정, 스페인에서 흔한 건물 디자인 제한 가능성
     * 스페인인, El Diario의 전국 종합 보도에 감사
     * 네덜란드, 스페인에 비해 집단 거주 비율 낮아, ""버섯 동네"" 때문일 수도
     * 기사 스토리텔링, 지리공간 데이터와 시각 자료 효과적 통합 칭찬
     * 라 코루냐 주민 일부, 브루탈리즘 아파트가 해안 도시 미관에 미치는 영향 불만
     * 스페인 아파트, 미국보다 넓고 방이 많다는 인식
     * 스페인 전 거주자, 아파트 생활과 ""15분 도시"" 개념 그리워해
     * 스페인 도시 개발에 대한 기사의 역사적 관점, 현재 개발 수준에 대한 놀라움
     * 주택 소유, 세대 간 부의 축적 수단으로서 임대의 한계와 대비
     * 바르셀로나의 환기 중심 건축이 COVID-19 확산에 영향을 미쳤는지, 환기의 중요성과 역사적 연관성에 대한 궁금증
"
"https://news.hada.io/topic?id=11760","Giskard - ML 모델을 위한 테스팅 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Giskard - ML 모델을 위한 테스팅 프레임워크

     * Tabular 부터 LLM 까지 ML 모델을 위한 전용 테스트 프레임워크
     * 몇줄의 코드로 AI 모델을 스캔하여 편향성, 성능 문제 및 오류 위험 감지 가능
     * 파이썬 3.9~ 이상을 지원하는 라이브러리로 제공
"
"https://news.hada.io/topic?id=11681","Raspberry Pi, Arm으로부터 전략적 투자 받다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Raspberry Pi, Arm으로부터 전략적 투자 받다

     * Arm Holdings plc는 Raspberry Pi Ltd에 전략적 투자를 하여 소수 지분을 취득했습니다.
     * 이 투자는 2008년에 시작된 Arm과 Raspberry Pi 사이의 장기 파트너십을 확장합니다.
     * 이 파트너십은 Internet of Things (IoT) 개발자 커뮤니티를 위한 중요한 솔루션을 제공하는 것을 목표로 합니다.
     * IoT와 AI 응용 프로그램의 증가로 인해 엣지 컴퓨팅에 대한 수요가 가속화되고 있습니다.
     * Raspberry Pi의 솔루션은 전 세계의 사람들과 기업들에게 저렴한 비용의 고성능 컴퓨팅을 가능하게 합니다.
     * 이 파트너십은 학생들, 애호가들, 그리고 상업 개발자들을 위한 여러 인기 있는 Arm 기반 Raspberry Pi 제품의 출시를 이끌었습니다.
     * 가장 최근의 제품인 Raspberry Pi 5는 2023년 10월 말에 출시되었습니다.
     * Arm과 Raspberry Pi는 혁신에 대한 장벽을 낮추어 모든 사람들이 컴퓨팅을 이용할 수 있게 하는 공통의 비전을 공유하고 있습니다.
     * Arm 기반으로 구축된 Raspberry Pi의 플랫폼은 전 세계적으로 고성능 IoT 장치의 채택을 촉진하는데 중요합니다.
     * Arm의 Raspberry Pi에 대한 투자는 개발자 커뮤니티에 대한 그들의 지속적인 헌신을 입증합니다.
     * Raspberry Pi는 Arm 기술을 현재 및 미래 제품의 기반으로 사용하여 컴퓨팅 성능, 에너지 효율성, 그리고 광범위한 소프트웨어 생태계에 대한 접근을 제공합니다.
     * Raspberry Pi는 기술을 민주화하려고 노력하며, 컴퓨터와 컴퓨팅을 모든 사람에게 접근 가능하고 저렴하게 만드는 것을 목표로 합니다.

        Hacker News 의견

     * 케임브리지에 본사를 둔 Raspberry Pi Foundation, Arm으로부터 전략적 투자 받다.
     * Raspberry Pi와 Arm의 연결성은 지리적 근접성과 Broadcom 엔지니어들과의 공유된 역사 때문에 자연스럽게 보인다.
     * RISC-V의 인기 상승에도 불구하고, 이 투자가 Raspberry Pi의 Arm에 대한 헌신을 바꾸지 않을 것으로 예상된다.
     * Raspberry Pi의 강점은 RP1과 소프트웨어 지원에 있으며, 명령어 세트나 공급업체를 바꾸는 것은 위험하다고 본다.
     * 이 투자는 마케팅 비용으로 간주되며, Raspberry Pi가 더 많은 사람들에게 도달하는 데 도움이 된다.
     * 일부는 이 투자가 Arm이 Raspberry Pi가 더 저렴한 RISC-V 코어로 전환하는 것을 막기 위한 움직임이라고 추측한다.
     * Raspberry Pi Pico는 중요하다고 간주되며, 그 하드웨어는 ""영감을 받은 것에 가깝다""고 묘사된다.
     * 투자 규모에 대한 세부 사항은 없다.
     * Raspberry Pi, Arm, BBC Micro와의 역사적 연결성 때문에 이 투자는 ""자연스러운 적합성""으로 간주된다.
     * Raspberry Pi가 계속해서 Broadcom 칩을 사용하는 것이 언급된다.
     * 이 투자는 ""Happy Meal"" 전략에 비교되며, 오늘 배운 것이 내일 대량 생산될 것이라는 것을 제안한다.
     * Raspberry Pi는 RISC-V 재단의 회원이지만, 이는 비용 절감보다는 유연성을 위한 움직임으로 보인다.
     * 이 투자는 더 밀접한 협력과 맞춤형 Arm 코어를 이끌어 낼 수 있다.
     * Raspberry Pi의 구조에 대한 질문이 제기되며, 그것이 재단 외에 이익을 추구하는 회사를 가지고 있는지 여부가 논의된다.
     * 전략적 투자는 Raspberry Pi가 저렴한 표준화된 RISC-V 아키텍처에 대한 낮은 진입 장벽을 만드는 것을 방지할 수 있다.
"
"https://news.hada.io/topic?id=11771","스팀 덱 OLED 버전","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              스팀 덱 OLED 버전

새로운 Steam Deck OLED 소개

     * Steam Deck OLED: 고화질 화면, 더 긴 배터리 수명, 빠른 다운로드 속도 등의 특징을 갖춤.
     * 가격 인하된 모델: 256GB LCD 버전과 NVMe SSD, 1280 x 800 해상도의 LCD 디스플레이, 7인치 화면 크기, 7nm APU, Wi-Fi 5, 40Whr 배터리(게임 플레이 시 2-8시간 지속), 45W 전원 공급 장치 및 1.5m 케이블, 케이스 포함.
     * 새로운 모델: 512GB OLED와 1TB OLED 버전, HDR OLED 디스플레이, 7.4인치 화면 크기, 6nm APU, Wi-Fi 6E, 50Whr 배터리(게임 플레이 시 3-12시간 지속), 45W 전원 공급 장치 및 2.5m 케이블, 향상된 케이스, 독점적인 스타트업 영화 및 가상 키보드 테마 포함.

한정판 Steam Deck OLED

     * 한정판: 1TB Steam Deck OLED의 다른 색상 버전으로, 미국과 캐나다에서만 제한된 수량으로 판매됨.
     * 판매 지역: 일본, 한국, 대만, 홍콩에서 Komodo 웹사이트를 통해 구매 가능.
     * 인증 리퍼브 제품: 최대 20% 할인된 Valve 인증 리퍼브 Steam Deck, 1년 보증 포함.

Steam Deck OLED의 특징

     * 더 밝은 색상과 더 깊은 검정: HDR OLED 디스플레이는 게임에 최적화되어 놀라운 대비, 선명도 및 확장된 색상 범위를 제공.
     * 더 긴 플레이 시간: 30-50% 향상된 배터리 수명, 더 큰 배터리와 OLED 디스플레이의 낮은 전력 소모, 효율적인 AMD APU로 인해 더 오랜 시간 게임 가능.
     * 빠른 다운로드: Wi-Fi 6E 지원으로 대역폭 증가 및 지연 시간 감소, 최대 3배 빠른 다운로드 및 안정적인 온라인 플레이 제공.

Steam Deck의 기능

     * 휴대성과 성능: AMD와 협력하여 핸드헬드 게이밍에 최적화된 맞춤형 APU 개발, 최신 AAA 게임을 효율적으로 구동.
     * 어디서나 Steam 라이브러리: Steam Deck에 로그인하면 기존 PC와 동일하게 전체 Steam 라이브러리 접근 가능, 각 게임의 호환성 등급 확인 및 필터링 가능.
     * 편안한 컨트롤: 장시간 플레이에 적합하게 설계된 전체 크기의 컨트롤러, 다양한 손 크기에 맞는 뒷면 조형.
     * 콘솔과 같은 경험: 게임패드 컨트롤에 특화된 사용자 친화적 인터페이스, Steam Deck 전용 소프트웨어 및 운영 체제로 PC 게이밍에 쉽게 접근.

기술 사양

     * 프로세서: 6nm AMD APU, Zen 2 4c/8t, 2.4-3.5GHz, 8 RDNA 2 CUs, 1.6GHz, APU 전력 4-15W.
     * RAM: 16GB LPDDR5, 6400 MT/s 쿼드 32비트 채널.
     * 저장 공간: 512GB 및 1TB NVMe SSD, 고속 microSD 카드 슬롯 포함.
     * 디스플레이: 1280 x 800 해상도 HDR OLED, 7.4인치 대각선, 최대 1000니트 밝기(HDR), 110% P3 색영역, 최대 90Hz 주사율.
     * 연결성: Bluetooth 5.3, Wi-Fi 6E, 스테레오 오디오 채널, 듀얼 마이크, 3.5mm 헤드폰 잭, USB-C를 통한 다중 채널 오디오.
     * 배터리: 50Whr, 게임 플레이 시 3-12시간 지속.
     * 크기 및 무게: 298mm x 117mm x 49mm, 약 640그램.
     * 운영 체제: SteamOS 3 (Arch 기반), KDE Plasma 데스크탑.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 Valve가 Steam Deck의 OLED 모델을 출시하여 게이머들에게 더 밝은 색상, 더 긴 배터리 수명, 빠른 다운로드 속도 등을 제공한다는 것이다. 이러한 업그레이드는 휴대용 게임 기기의 경험을 향상시키며, 기존의 LCD 모델과 비교하여 명확한 차별점을 제공한다. 게이머들에게는 이러한 기술적 진보가 흥미로울 것이며, 특히 휴대성과 성능을 중시하는 사용자들에게 매력적인 선택지가 될 것이다. Steam Deck OLED는 게임의 몰입감을 높이고, 어디서나 자신의 Steam 라이브러리를 즐길 수 있는 능력을 갖추고 있어, PC 게이밍을 더욱 접근하기 쉽게 만드는 혁신적인 제품으로 평가될 수 있다.

        Hacker News 의견

     * 사용자들이 자신의 기기를 수정하는 것을 고려하여 Valve가 디자인을 개선했다는 점이 인상적임.
          + 금속으로 된 나사를 사용하여 뒷면 커버를 고정
          + 나사의 머리를 Torx™로 변경하고 재질 및 형태를 조정하여 나사가 벗겨지는 위험 감소
          + 시스템 전체에서 사용되는 나사 종류 감소
          + 일반적인 수리에 필요한 단계 수 감소
          + 범퍼 스위치 메커니즘의 내구성 향상
          + 수리가 용이하도록 범퍼 스위치를 조이스틱 보드로 이동
          + 디스플레이 수리/교체 시 뒷면 커버를 제거할 필요 없도록 개선
     * Valve는 하드웨어, 소프트웨어, 운영 체제에 관계없이 사용자가 원하는 것을 설치할 수 있도록 지원하며, 필요한 경우 부품과 회로도를 제공함.
     * Steam Deck 사용자들 사이에서 40fps로 게임을 하고 화면을 40Hz로 설정하는 'Golden 40'이라는 기법이 인기가 있음. 이는 30fps와 60fps 사이의 프레임 시간을 25ms로 맞추는 데 도움이 되며, 30fps 대비 10프레임 더 렌더링하는 것만으로도 훨씬 나은 경험을 제공함. 90Hz로 업그레이드된 것은 이러한 문제를 해결하는 데 도움이 됨.
     * 첫 세대 Steam Deck 소유자로서, 윈도우 게임을 거의 완벽하게 실행하는 것에 대해 인상 깊음. 호환성 계층을 거의 느끼지 못할 정도로 성능과 배터리 수명이 좋음. 소폭의 개선이지만 지속적인 업데이트가 긍정적임.
     * Steam Deck이 휴대용 PC 게임 시장에 경쟁을 불러일으킨 것을 긍정적으로 평가함. 다양한 경쟁 제품들이 시장에 나와 있으며, 이로 인해 PC 게임을 더 많이 즐기게 됨.
     * TSMC의 N6 공정이 N7과 호환되기 때문에, 비용을 크게 증가시키지 않고 APU 크기를 줄일 수 있었음. OLED가 VRR을 지원하지 않는 것은 아쉬움.
     * OLED 버전 Steam Deck이 한정된 지역에서만 출시되어, 다른 지역의 사용자들은 더 기다려야 함. Valve는 이번 한정판이 성공적이라면 더 다양한 색상 옵션을 탐색할 것이라고 밝힘.
     * OLED 화면만 별도로 구매하여 LCD 모델에 교체할 수 없는 것이 실망스러움. 교체를 원하지만, 현재 Deck 사용량에 비해 비용이 다소 높게 느껴짐.
     * OLED 버전에 대한 FOMO(놓칠까 봐 두려운 감정)를 느끼고 있으며, 향후에도 OLED 버전이 한정적으로라도 다시 출시될지 궁금함.
     * 프로세서가 약간 변경되었으나 실질적인 성능 향상은 없음. OLED 버전은 6nm AMD APU를 사용하고, LCD(이전) 버전은 7nm AMD APU를 사용함.
"
"https://news.hada.io/topic?id=11794","암호화된 DNS 서버를 RAM에서 운영으로 이전","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       암호화된 DNS 서버를 RAM에서 운영으로 이전

Mullvad VPN의 암호화된 DNS 서버 RAM으로 이전

     * Mullvad VPN은 자사의 VPN 인프라에서 디스크 사용의 흔적을 제거하는 마이그레이션을 완료했다고 발표함.
     * 최근에는 암호화된 DNS 서비스를 RAM에서 운영하도록 전환했다고 추가 발표함.
     * 암호화된 DNS는 VPN 서비스에 연결되지 않았을 때 DNS 쿼리를 제3자의 감시로부터 보호함.

암호화된 DNS 서비스 무료 제공

     * 암호화된 DNS 서비스는 VPN 서버에 연결되지 않은 상태에서 사용할 수 있는 서비스로, 비용 없이 누구나 이용 가능함.
     * 이 서비스는 전 세계 서버에서 제공되며, 선택적 콘텐츠 차단 기능을 포함한 신뢰할 수 있는, 감사된 암호화된 DNS 서비스임.
     * VPN 서비스와 함께 사용할 수 있으나, VPN 서버의 DNS 리졸버를 사용하는 것보다 느릴 수 있어 권장되지 않음.

암호화된 DNS 서버의 보안 및 개인 정보 보호

     * 모든 암호화된 DNS 서버는 VPN 인프라와 동일한 리눅스 커널을 사용하여 구성되며, 동일한 보안 및 개인 정보 보호 수준을 제공함.
     * 이러한 DNS 서버 구성은 RAM에서 상태 비저장 인프라를 운영하기 위한 다음 단계임.

GN⁺의 의견

   Mullvad VPN의 최근 발표는 기술적으로 진보된 보안 조치의 중요성을 강조함. 디스크가 아닌 RAM에서 암호화된 DNS 서비스를 운영함으로써, 사용자의 DNS 쿼리 보호를 강화하고, 이는 데이터 보안과 개인 정보 보호에 대한 사용자의 신뢰를 높일 수 있음. 이러한 서비스가 무료로 제공된다는 점은 사용자에게 매우 유익하며, Mullvad VPN의 투명성과 개방성에 대한 약속을 보여주는 예로, 개인 정보 보호에 관심 있는 사람들에게 흥미로울 것임.

        Hacker News 의견

     *
          + Mullvad의 암호화된 DNS 서비스는 VPN 서비스를 구매하지 않은 사용자에게도 제공됨.
          + 추가적으로, 원하는 TLS/HTTPS DNS 서버를 설정함으로써 선택적인 콘텐츠 차단을 지원하는 블록리스트 기능도 있음.
          + [1] Mullvad DNS 블록리스트 GitHub 링크
     *
          + Mullvad 서버가 물리적 서버인지 가상 머신인지 궁금함.
          + 일부 가상 머신은 메모리 내용을 포함하여 동결/스냅샷/복제 또는 실시간 복제가 가능함.
          + 법적 요청에 따라 일부 VPS 제공업체에서 이러한 작업을 수행함.
          + 물리적 서버의 설정에 대한 다이어그램이 있는지, Mullvad 아키텍트가 이론적인 가정을 피할 수 있도록 도와줄 수 있는지 문의함.
     *
          + 2023년 현재 RAM이 모든 내용을 암호화하는지, RAM의 내용을 잊을 수 있는지 궁금함.
          + RAM에서 콜드 부팅 공격을 방지하기 위해 어떤 조치가 취해졌는지, 하드웨어에 어떤 변화가 있는지 호기심을 가짐.
          + RAM 내용을 암호화하는 키가 TPM에 저장되어 있는지 등에 대한 질문.
     *
          + Cloudflare의 DoH DNS(1.1.1.1)를 사용하고 Mullvad의 VPN을 통해 터널링함.
          + 이 방식을 사용하면 Mullvad는 방문한 IP만 볼 수 있고, Cloudflare는 VPN IP에서 오는 DNS 요청만 볼 수 있으며, ISP는 아무것도 볼 수 없음.
          + Mullvad의 DoH DNS도 좋지만, 위의 방식보다 개인 정보 보호 측면에서 덜할 수 있으므로 사용하지 않을 것임.
     *
          + Mullvad가 포트 포워딩을 중단한다고 발표할 때까지 매우 만족스러웠음.
          + 포트 포워딩은 설정의 특정 부분에 중요하며, 이해는 하지만 다시 도입된다면 기꺼이 다시 고객이 될 것임.
     *
          + Mullvad의 암호화된 DNS 서비스가 RAM에서 실행되도록 전환되었다고 발표함.
          + 서비스가 RAM이 아닌 다른 곳에서 실행된다는 것은 무엇을 의미하는지, ""RAM에서 실행된다""는 것이 구체적으로 무엇을 의미하는지 설명이 없음.
          + 실행 가능한 모든 바이너리는 표준 운영 체제 절차에 따라 RAM으로 로드됨.
     *
          + VPN 제공업체 OVPN(ovpn.com)도 이와 같은 서비스를 제공하고 있음.
     *
          + 실제 통계는 없지만, SSD와 ECC RAM에서 읽기/쓰기 집약적인 데이터 애플리케이션을 운영한 경험으로 둘 다 충분히 자주 실패한다는 느낌을 받음.
          + 복원력 측면에서는 이동이 별로 개선되지 않았을 수 있지만, 성능을 극대화하기 위한 노력에는 박수를 보냄.
          + 이는 재미있는 Redis 프로젝트가 될 것임.
     *
          + Mullvad VPN의 보안이 Proton VPN과 비교하여 어떤지 궁금함.
     *
          + [삭제된 댓글]
"
"https://news.hada.io/topic?id=11801",""Experian에서 누구나 여전히 쉽게 당신이 될 수 있습니다"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ""Experian에서 누구나 여전히 쉽게 당신이 될 수 있습니다""

Experian의 보안 문제 지속

     * 2022년 여름, Experian의 소비자 신용 보고 계정이 이메일 주소만 바꿔 등록함으로써 도용당하는 사례가 보고됨.
     * 16개월 후에도 Experian은 이러한 심각한 보안 문제를 해결하지 못함.
     * 기자의 Experian 계정도 최근 해킹당하고, 계정 접근을 회복하기 위해 계정을 새로 만들어야 했음.

계정 재등록의 쉬운 과정

     * Experian에 SSN(사회보장번호)과 생년월일을 입력하면, 기자가 인증하지 않은 이메일 주소와 연결된 것을 발견함.
     * Experian 웹사이트는 계정의 사용자 이름을 찾기 위해 SSN과 생일을 요구하고, 인증되지 않은 이메일 주소의 일부를 보여줌.
     * Experian은 여전히 개인 정보와 다른 이메일 주소를 사용하여 신용 파일 계정을 재생성할 수 있게 함.

계정 생성 과정의 취약성

     * Experian 홈페이지는 SSN과 모바일 번호를 요구하고, 본인 확인을 위한 링크를 보내겠다고 함.
     * 사용자는 전화 번호 입력 단계를 건너뛸 수 있으며, 이후 이름, 주소, 생일, SSN, 이메일 주소, 비밀번호를 입력해야 함.
     * 3~5개의 다중 선택 보안 질문에 답해야 하지만, 이 질문들은 대부분 공개 기록에 기반하고 있어 쉽게 찾을 수 있음.

계정 변경 시 이메일 통지의 부족

     * 새로운 계정이 생성되면 Experian은 이전 이메일 주소로 사용자 프로필 변경에 대한 통지를 보냄.
     * 이 통지는 변경 사항에 대한 검증 요청이 아니며, 원래 사용자는 Experian.com에서 로그인하라는 링크 외에는 어떠한 조치도 취할 수 없음.

Experian 계정의 중요성

     * Experian 계정이 없는 경우, 계정을 생성하여 신용 파일이 도용될 때 이메일 통지를 받을 수 있음.
     * 계정이 도용되면 기존의 로그인 정보, PIN, 계정 복구 질문이 모두 변경되어, 계정을 다시 만들어 도용범으로부터 되찾는 것 외에는 선택지가 없음.

다른 신용 보고 기관과의 비교

     * Equifax나 TransUnion과 같은 다른 주요 소비자 신용 보고 기관은 계정 변경 시 파일에 등록된 이메일 주소나 전화번호로 보낸 코드를 입력하도록 요구함.

Experian의 반응

     * Experian 대변인 Scott Anderson은 인증되지 않은 이메일 주소에 대한 정보를 공유하는 것을 거부함.
     * Anderson은 Experian이 다중 계층 보안 접근 방식을 도입했으며, 지식 기반 질문과 답변, 장치 소유 및 소지 검증 과정을 포함한다고 주장함.

다중 인증 요소의 효과 문제

     * 모든 소비자는 로그인 시마다 요청되는 다중 인증 요소를 활성화할 수 있는 옵션이 있지만, 새로운 전화번호와 이메일 주소로 계정을 재생성할 수 있다면 이는 무용지물임.

Mastodon 사용자의 실험

     * Mastodon 사용자들은 Experian의 보안 문제를 실험하여 기자의 발견을 검증함.
     * 사용자들은 Experian이 전화번호와 SSN의 마지막 네 자리를 요구할 때, '내 정보를 수동으로 입력' 옵션을 선택하고 새로운 전화번호와 이메일 주소를 입력함.
     * 원래 이메일 주소에서는 어떠한 검증도 요구되지 않았으며, 새로운 전화번호로 2FA(이중 인증)가 이루어짐.

Experian의 과거 보안 문제

     * 2022년 12월, KrebsOnSecurity는 Experian의 보안을 우회하여 어떤 소비자의 전체 신용 보고서에 접근할 수 있는 간단한 방법을 발견함.
     * 2021년 4월, KrebsOnSecurity는 Experian의 PIN 검색 페이지의 느슨한 인증을 악용하여 소비자 신용 파일을 해제하는 신원 도용범들을 밝혀냄.
     * Experian은 과거에도 다양한 보안 문제와 관련하여 여러 차례 비판을 받았음.

GN⁺의 의견

     * 가장 중요한 점은 Experian이 여전히 심각한 보안 취약점을 해결하지 못하고 있으며, 이로 인해 사용자의 신용 정보가 위험에 처할 수 있다는 것임.
     * 이 기사는 소비자들에게 자신의 신용 정보를 보호하기 위해 어떤 조치를 취해야 하는지에 대한 중요한 인식을 제공함.
     * Experian의 보안 문제는 소비자의 개인 정보 보호와 직결되어 있으며, 이는 모든 사람에게 중대한 관심사임.

        Hacker News 의견

     * 스파이 회사들의 고객은 우리가 아니지만, 보안 부재가 실제 고객들에게 거래 중단 사유가 되지 않는 것에 놀람.
          + 스파이 회사들의 보안이 매우 취약하여 서비스를 이용해 타인을 가장할 수 있는데, 이러한 상황에서 서비스의 존재 의미에 의문 제기.
     * Experian의 임원들이 계속해서 같은 방식으로 계정이 해킹당한다면, 언젠가는 변화가 있을 것임.
          + Experian의 임원들이 반복적인 계정 해킹을 경험한다면, 이 문제에 대한 변화가 일어날 수 있음을 추측.
     * Experian이 고객 보호 실패로 인해 어떻게 소송에서 벗어날 수 있는지 이해할 수 없음.
          + Experian이 고객의 정보를 보호하지 못함에도 불구하고 계속해서 운영될 수 있는 법적 근거에 대한 이해 부족 표현.
     * 최근 몇 주 동안 주요 소매업체들로부터 본인 명의로 된 스마트폰과 노트북 구매 확인 이메일을 끊임없이 받고 있음.
          + 본인의 이름과 신분증 번호가 포함된 구매 확인서를 받고 있으며, 소매업체들과 경찰에 연락했지만 문제 해결에 어려움을 겪고 있음을 설명.
     * Experian 계정이 해킹당해, 동결 해제되었고, Ford Credit으로부터 10만 달러 대출을 받는 데 사용됨.
          + Experian 계정이 해킹되어 큰 금액의 대출이 발생했고, 이를 해결하는 데 오랜 시간이 걸림을 경험담으로 공유.
     * 이 문제에 대한 입법자들의 관심을 촉구하는 청원이 resistbot에 있음.
          + 이 문제에 대해 입법적 관심을 촉구하기 위한 온라인 청원 링크 공유.
     * 신용 보고서에 대한 더 나은 대안이 필요함.
          + 은행과 대출 기관이 인종 차별을 직접적으로 할 수 없게 되자, 신용 점수라는 간접적인 방법으로 차별하는 시스템에 대한 비판적 견해 표현.
     * 3개의 신용 평가 기관 중 하나에서 신용 점수를 피할 방법이 있는지 궁금함.
          + 소비자로서 경쟁을 촉진하기 위해 신용 평가 기관 중 하나에서 신용 점수를 피하는 방법에 대한 정보 탐색.
     * 가벼운 사기(계정 개설 시도 실패 또는 데이터 유출)가 발생하면, 모든 기관에 사기 경보와 신용 동결을 등록할 수 있어, 일정 기간 동안 불필요한 우편물과 실제 사기 계정의 위험을 줄일 수 있음.
          + 사기 경보와 신용 동결을 통해 추가 인증 절차를 강화하고, 이로 인해 여러 문제를 예방할 수 있음을 설명.
     * Experian 웹사이트에 로그인을 시도했지만, 사이트가 너무 불안정해서 로그인조차 할 수 없었음.
          + Experian 웹사이트의 기능 문제로 인해 자신의 계정에 접근하는 데 어려움을 겪었음을 공유.
"
"https://news.hada.io/topic?id=11779","모나스페이스모나스페이스

코드를 위한 혁신적인 폰트 슈퍼패밀리

     * Monaspace는 새로운 타입 시스템으로, 화면상의 코드 표시를 위한 기술 발전을 이룸.
     * 컴퓨팅 기술의 발전과 함께 코드 표시 및 편집 기술도 발전함.
     * Monaspace는 색상과 굵은 글씨체를 넘어서는 더 표현력 있는 팔레트를 제공함.

폰트 놀이터

     * Monaspace 폰트는 서로 다른 폰트를 혼합할 수 있도록 설계되어 더 많은 의미를 코드에 더할 수 있음.
     * 다양한 폰트 조합을 통해 코드에 더 많은 구조와 계층을 부여할 수 있음.

특징: 텍스처 힐링

     * Monospaced 타입은 일정하지 않은 텍스처로 인해 문제가 있음.
     * 텍스처 힐링은 이러한 문제를 해결하는 새로운 기술로, 모노스페이스 타입의 밀도를 균일하게 만듦.
     * 텍스처 힐링은 OpenType의 ""contextual alternates"" 기능을 사용하여 구현됨.

스타일

     * Monaspace는 가중치, 너비, 기울기의 세 가지 가변 축을 가짐.
     * 각 축은 다양한 범위를 가지며, 고정된 명명된 무게와 스타일을 정의함.

코드 리게이처 기능

     * Monaspace는 다양한 언어에 대한 코드 리게이처를 포함하며, 스타일리스틱 세트를 통해 활성화 또는 비활성화할 수 있음.
     * Visual Studio Code에서는 설정을 통해 원하는 스타일리스틱 세트를 활성화할 수 있음.

GN⁺의 의견

   이 글에서 가장 중요한 것은 Monaspace가 코드 표시를 위한 새로운 타입 시스템을 제공한다는 점이며, 이는 개발자들에게 더 나은 코딩 경험을 제공할 수 있는 잠재력을 가지고 있음. 텍스처 힐링과 같은 혁신적인 기능은 코드의 가독성을 향상시키고, 가변 폰트 축을 통해 사용자 정의 스타일을 적용할 수 있어 개발자들에게 매우 흥미로운 주제임.

        Hacker News 의견

     * ""Texture Healing"" 기능은 OpenType 기능을 활용하여 문제가 되는 모노스페이스 글자 조합을 그리드를 깨지 않고 개선하는 아주 똑똑한 방법임.
          + 어려운 글자 쌍(예: mi, lm 등)에 대해 리게이처(ligature)를 만드는 단순한 방법 대신, 주변 글자에 따라 고정된 너비를 다르게 채우는 대체 문자를 선택하는 방식을 사용함.
     * ""Texture Healing""을 보고 나서 이 모노스페이스 글꼴을 직접 사용해보고 싶다는 생각이 들었음.
          + 다양한 스타일의 글꼴을 사용하는 아이디어를 좋아하지만, 주로 터미널을 사용하는 사용자로서 어떤 터미널이 이를 지원하는지, CLI 텍스트 에디터의 지원이 필요한지 알지 못함.
     * ""Mix & Match"" 예시에 대한 사람들의 의견이 궁금함.
          + Radon(필기체 글꼴)은 기본적으로 이탤릭체이기 때문에 다른 글꼴과 잘 어울림. 그러나 나머지 글꼴들은 동일한 메트릭스와 기타 특징들로 인해 ""authoritative docstrings""와 ""Copilot voice"" 예시를 구별하기 어려움.
     * 많은 리게이처가 있음에도 불구하고 여전히 충분하지 않다고 느낌.
          + Fira Code의 *ptr에서 *의 높이 정렬, X:Y에서 :의 중앙 정렬, 0xFF에서 x의 높이 조정 등이 마음에 듦. Krypton 변형의 모양이 마음에 들지만, 소문자 t의 크로스바가 소문자 c의 높이보다 너무 낮게 위치해 있어 아쉬움.
     * Radon 글꼴의 Rd 심볼이 페이지에 잘못 표기되어 있어 혼란스러움. 실제로 Rd로 시작하는 원소가 있는지 확인해야 함.
     * PragmataPro와 같은 좁은 글꼴을 더 많이 보지 못하는 이유가 궁금함.
          + 거의 10년 동안 PragmataPro를 사용해왔지만, 더 많은 선택지를 보고 싶음. Berkeley Graphics는 거의 1년 동안 Berkeley Mono의 좁은 버전을 약속했지만 아무 일도 일어나지 않음.
     * Monaspace 글꼴이 모노스페이스 플래그를 설정하지 않아 GTK2 gvim에서 글꼴을 로드해야 함.
          + 해당 플래그 때문에 리게이처가 활성화되지 않는 것 같음. 그러나 패치된 st에서는 리게이처와 텍스트 힐링을 볼 수 있었음.
     * 점이 찍힌 0이 이러한 글꼴에서 표준이 된 것에 대해 혼란스러움. 8과 혼동되기 쉬우며 슬래시가 있는 0을 선호함.
     * Jetbrains Mono를 주로 사용하지만, 다른 글꼴에 따라 다른 스타일을 적용하는 기능과 텍스처 힐링 기능이 마음에 들어 이 글꼴로 전환할 수도 있음.
     * 적어도 VS Code에서는 ""textual healing"" 기능이 프로그래밍 리게이처와 함께 사용되어야 함. 리게이처를 사용하지 않고 텍스처 힐링을 활성화할 방법이 없음.
"
"https://news.hada.io/topic?id=11764","파이썬 3.12용 윈도우에서의 SciPy 빌드, 작은 기적으로 평가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 파이썬 3.12용 윈도우에서의 SciPy 빌드, 작은 기적으로 평가

파이썬 3.12 버전의 SciPy 빌드가 기적 같은 이유

     * 최근 파이썬 3.12 버전이 출시됨.
     * 주요 패키지들이 새 파이썬 버전과 호환되는 릴리스를 곧바로 내놓는 것은 일반적인 상황.
     * SciPy가 파이썬 3.12와 호환되는 빌드를 출시한 것은 여러 타임라인이 겹치면서 발생한 행운의 결과.

Fortran과 컴파일러의 역할

     * Fortran은 1950년대부터 중요한 프로그래밍 언어로, 많은 과학적 코드가 Fortran으로 작성됨.
     * 다양한 Fortran 컴파일러가 존재했으나, 모두 독점적이었음.
     * 컴파일러는 프로그래머가 작성한 코드를 컴퓨터가 실행할 수 있는 형태로 변환하는 역할을 함.
     * GCC는 자유롭게 사용할 수 있는 컴파일러로, 다양한 CPU 아키텍처와 운영 체제를 지원함.

파이썬과 성능 문제

     * 파이썬은 컴파일러 없이 사용할 수 있지만, 컴파일 언어에 비해 느림.
     * 성능이 중요한 경우, 컴파일된 코드를 사용하되 파이썬 인터페이스로 래핑하는 것이 좋은 해결책임.
     * NumPy와 SciPy는 성능을 위해 Fortran 코드를 사용하며, 이로 인해 사용자가 패키지를 설치할 때 컴파일러가 필요함.

파이썬 패키징의 문제

     * 파이썬 패키징은 복잡성으로 인해 지속적으로 재발명되어야 했음.
     * 소스 코드를 직접 다운로드하는 것은 사용자에게 컴파일러 설정이 필요하고, 빌드 시간이 오래 걸리는 등의 문제가 있음.
     * ""wheel"" 포맷은 패키지에 필요한 라이브러리를 포함하여 배포하는 방식으로 개선됨.

conda와 conda-forge의 등장

     * conda는 패키징에 필요한 모든 것을 포함하는 더 포괄적인 접근 방식을 제공함.
     * conda-forge는 커뮤니티 주도로 패키지 통합 작업을 수행하는 채널임.
     * conda-forge는 모든 일반적인 플랫폼을 지원하려 하며, 자원 봉사자에 의해 운영됨.

SciPy의 빌드 도구로 Meson 선택

     * SciPy는 빌드 도구로 Meson을 선택함.
     * Meson은 파이썬 스타일의 인터페이스를 제공하며, CMake보다 덜 복잡함.
     * Meson은 전문가가 아닌 사용자에게는 잘못된 작업을 허용하지 않는 설계 철학을 가짐.

Fortran의 부활과 LLVM

     * Fortran은 최근 몇 년 동안 관심이 증가함.
     * LLVM 기반의 새로운 Fortran 컴파일러 개발이 활발해짐.
     * LLVM은 다양한 아키텍처와 플랫폼에서 작동하는 컴파일러 인프라를 제공함.

SciPy의 Meson 전환과 conda-forge의 문제

     * SciPy는 Meson으로 전환했지만, Windows용 Fortran 컴파일러 부재로 문제가 발생함.
     * conda-forge는 Python 3.12 버전으로의 마이그레이션을 위해 모든 관련 패키지를 재빌드해야 함.

'유카타스트로피'의 의미와 GN⁺의 의견

     * SciPy 테스트 스위트가 100% 통과하여, conda-forge에서 Python 3.12와 호환되는 SciPy 빌드가 가능해짐.
     * 이는 여러 노력과 우연이 겹쳐진 결과로, 파이썬 커뮤니티에 큰 이득을 가져옴.
     * GN⁺의 의견: 이 기사는 파이썬 커뮤니티의 노력과 협력이 어떻게 복잡한 기술적 문제를 해결할 수 있는지 보여줌. SciPy가 Python 3.12와 호환되는 빌드를 성공적으로 출시한 것은 과학 컴퓨팅 분야에서 중요한 진전이며, 이는 오픈 소스 소프트웨어의 강력함과 커뮤니티의 힘을 상징함.

        Hacker News 의견

     * 무료 소프트웨어 커뮤니티는 마이크로소프트의 운영 체제에 대한 지원을 중단하고, scipy와 같은 것들을 그들이 직접 포팅하게 해야 함
          + 리눅스가 필요한 사람은 WSL2에서 찾을 수 있음
          + 마이크로소프트는 다른 모든 운영 체제 벤더들이 60년 동안 해온 것처럼 컴파일러를 운영 체제에 포함시켜야 함
     * Python 패키징이 복잡한 이유는 C/C++/Fortran 빌드 도구의 비표준화와 거대한 생태계 때문이며, Python 자체의 문제는 아님
          + 이 복잡성은 줄일 수 없는 부분임
          + Python 패키징 시스템이 작동하는 것 자체가 기적임
     * Meson 빌드 도구가 MSVC+gfortran 조합을 거부하는 것은 버그로 보임
          + 빌드 도구의 목적은 사용자가 지시한 명령을 실행하는 것이지, 사용자에게 거부하는 것이 아님
     * 많은 사람들이 WSL2를 사용하여 문제를 해결하고 있으며, 네이티브 Windows 버전을 빌드하려는 이유가 궁금함
     * 최고의 BLAS 라이브러리들이 대부분 C로 작성되었으며, C와 Python만으로도 어느 정도 성과를 낼 수 있을지 궁금함
          + Fortran은 피할 수 없는 부분일 수도 있지만, Windows에서의 Fortran 도구 개선이 시작되어 긍정적임
     * Fortran의 의미 체계가 C와 너무 달라서 C로 변환한 후 C 컴파일러로 컴파일할 수 없는지, 그리고 C로 유지 관리하는 것이 가능한지에 대한 순진한 질문
          + 오래된 라이브러리를 유지 관리하는 Fortran 전문가가 많지 않을 것으로 추정되며, 유지 관리가 필요함
     * Python의 빌드 시스템 변화를 따라가기 어려움
          + Windows에서의 성능 수치에 대한 호기심이 있지만, 심각한 작업은 대부분 리눅스 기계에서 실행될 것으로 예상됨
     * ""aarch64""와 ""arm64""가 같은 것인지에 대한 질문
          + Wikipedia에서 ARM64를 AArch64로 리다이렉트함
     * Fortran이 IT 부서에서 농담의 대상이었지만, 최근 몇 년 동안 극적인 부활을 경험함
          + 이 부활의 이유는 명확하지 않지만, 관련 링크를 통해 이해할 수 있음
     * 컴파일러/아키텍처 표에서 ""arm64""와 ""aarch64""의 차이에 대한 질문
          + Wikipedia의 ARM64 문서가 AArch64로 리다이렉트되는 것에 대한 언급

   바이너리 컴파일 언어에 빌어먹는 처지가 적나라하게 드러난경우네요.

   파이썬은 해결했지만 다른 생태계에서는 해결 못한것 아닌가요? 그래서 사전 빌드된 바이너리를 제공하겠지요.
"
"https://news.hada.io/topic?id=11726","Show HN: Ladder - Paywall을 패스하는 웹 프록시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Show HN: Ladder - Paywall을 패스하는 웹 프록시

     * ""교육 목적이며 비윤리적이거나 불법적인 활동을 지지하거나 권장하지 않음""
     * Paywall을 바이패스
     * Response에서 CORS 헤더를 제거하고, 도메인 기반 룰셋을 이용하여 수정 가능
     * 커스텀 User Agent 및 X-Forwarded-For IP 헤더
     * 도커 컨테이너 및 리눅스/맥/윈도우 바이너리 제공
     * 대부분의 광고/트래킹을 제거

GN⁺ 요약 내용

     * 기사는 결제 장벽을 우회하기 위해 설계된 웹 프록시인 Ladder를 소개하며, 이는 1ft.io와 12ft.io에 대한 오픈 소스 대안을 제공한다.
     * Ladder는 정보의 자유 원칙에 영감을 받았으며, 이는 민주주의와 정보 기반 의사결정의 중요한 측면이다.
     * 이 도구는 미디어 조직이 수익을 창출하는 필요성과 대중이 정보에 접근할 권리를 균형있게 조절하려는 목표를 가지고 있다.
     * 이 프로젝트는 교육적 목적으로만 의도되었으며, 비윤리적이거나 불법적인 활동을 지지하거나 장려하지 않는다.
     * Ladder의 주요 기능에는 결제 장벽 우회, 응답에서 CORS 헤더 제거, 도메인 기반 규칙 세트 적용, 원시 HTML 가져오기, 프록시를 도메인 목록으로 제한하는 기능이 포함된다.
     * Ladder는 또한 Docker 컨테이너, Linux 바이너리, Mac OS 바이너리, Windows 바이너리 옵션을 제공한다.
     * 이 도구에는 이미지 누락 또는 특정 사이트에서 JavaScript 또는 CSS에 의존하는 이미지 및 리소스 로딩 때문에 발생하는 서식 문제와 같은 제한이 있다.
     * Ladder의 설치는 바이너리 다운로드 또는 Docker를 통해 이루어질 수 있으며, 인스턴스가 공개적으로 접근 가능할 경우 Basic Auth를 활성화하도록 경고한다.
     * Ladder의 사용은 브라우저 또는 API를 통해 이루어질 수 있으며, 응답을 수정하기 위해 사용자 정의 규칙을 적용하는 옵션이 있다.
     * Ladder는 또한 포트를 수신하거나, 에뮬레이트할 사용자 에이전트, Basic Auth를 활성화하는 등의 환경 변수를 통한 구성을 허용한다.
     * 이 도구는 또한 응답을 수정하기 위해 사용자 정의 규칙을 적용하는 규칙 세트 기능을 제공하며, 이는 페이지에서 원치 않는 요소를 제거하거나 수정하는 데 사용될 수 있다.

        Hacker News 의견

     * 'Ladder', 12ft.io 및 1ft.io에 대한 오픈 소스 대안에 대한 게시물
     * 일부 사용자들은 AdBlock 확장 기능과 유사하게 브라우저 확장 기능의 일부가 되어야 한다는 제안
     * 사용자가 우회하려는 각 사이트에 대해 자신의 규칙 세트를 작성해야 하는지에 대한 질문
     * 13ft를 또 다른 오픈 소스 영감으로 언급한 게시물, 사용자들은 Ladder가 13ft의 기능을 어떻게 향상시키는지 궁금해함
     * 유료 장벽 우회의 합법성에 대한 논의, README는 저자가 비윤리적이거나 불법적인 활동을 지지하거나 장려하지 않음을 명시
     * Ladder에 대한 긍정적인 피드백 공유, 사용자들은 이를 사용하기 쉽고 유료 장벽 우회에 효과적이라고 주장
     * 페이지 로딩을 적절한 시점에 중단하거나 Wayback Machine에서 유료 장벽 페이지의 이전 버전을 확인하는 등의 유료 장벽 우회 대안 방법 공유
     * Ladder와 같은 서비스가 어떻게 작동하고 유료 장벽을 어떻게 우회하는지에 대한 질문
     * 12ft.io 또는 1ft.io에 익숙하지 않은 사람들을 위해, 이들은 웹사이트의 유료 장벽을 우회하는 서비스임을 설명
"
"https://news.hada.io/topic?id=11687","'Othello'가 해결되었나?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           'Othello'가 해결되었나?

     * 'Othello is Solved?'라는 제목의 기사는 Hiroki Takizawa가 작성하였습니다.
     * 세계에서 가장 복잡하고 인기 있는 게임 중 하나인 오델로가 계산적으로 해결되었습니다.
     * 오델로에는 대략 열 옥토데실리언 (10의 58승) 가능한 게임 기록과 열 옥토언 (10의 28승) 가능한 게임 위치가 있습니다.
     * 양 플레이어가 실수를 하지 않는 게임의 결과를 결정하는 오델로 해결의 도전은 컴퓨터 과학에서 중요한 도전이었습니다.
     * 기사는 중요한 이정표를 발표합니다: 오델로는 이제 해결되었으며, 양 플레이어의 완벽한 플레이가 무승부로 이어진다는 것을 계산적으로 증명하였습니다.
     * 강력한 오델로 소프트웨어는 휴리스틱하게 설계된 검색 기법을 사용하여 구축되었습니다.
     * 게임을 해결하는 것은 소프트웨어가 게임을 완벽하게 플레이할 수 있게 하는 해결책을 제공합니다.
     * 논문은 arXiv의 인공지능 (cs.AI) 카테고리에 분류되어 있습니다.
     * 논문은 arXiv:2310.19387 [cs.AI]로 인용할 수 있습니다.
     * 논문은 2023년 10월 30일에 제출되었습니다.

        Hacker News 의견

     * 오델로 게임의 잠재적 해결에 대한 기사
     * 한 댓글러가 알파-베타 엔진을 사용하여 더 간단한 게임을 해결한 경험을 공유, 이로 인해 지속적으로 승리
     * 게임이 정말로 해결되었다는 데 대한 의심, 한 댓글러가 사용된 가설에 대한 설명 부족을 질문
     * 기본 휴리스틱의 힘을 보여주는 오델로 게임 칭찬, 간단한 규칙의 구현이 어려운 상대를 만듦
     * 컴퓨터 과학자와 AI 학자들 사이에서 인기 있는 오델로 세계 챔피언십, 현재 이탈리아 로마에서 진행 중
     * 알려지지 않은 딥러닝 스타트업에서 단일 저자가 작성한 논문의 합법성에 대한 의심
     * 오델로를 단순하게 생각하는 사람들에게 제안된 제브라 게임, 원작자의 웹사이트와 GitHub 소스에 대한 링크 제공
     * 체스 선수 매그누스 칼슨의 전략을 예로 들어 AI의 비정석적인 움직임에 대한 적응 능력에 대한 질문 제기
     * 어린이를 위해 만들어진 게임의 간단한 버전에 대한 링크 공유
     * 게임의 결론이 무승부라는 것에 대한 놀라움, 한 댓글러가 증명이 확인되었는지, 그리고 작은 보드에 적용할 수 있는지 의문
     * 6x6을 완벽하게 플레이하는 게임 버전에 대한 링크 공유
     * 댓글러가 8x8이 지금까지 해결되지 않았다는 사실을 모르고 있었다는 것이 밝혀짐
"
"https://news.hada.io/topic?id=11765","퀘이크 브루탈리스트 잼 II","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            퀘이크 브루탈리스트 잼 II

브루탈리즘 건축 운동을 중심으로 한 맵 제작 대회

     * 브루탈리즘 건축 운동을 주제로 한 맵 제작 대회가 3주 반 동안 진행됨.
     * 참가자들은 콘크리트 지옥과 브루탈한 공간을 상상하며 창의적인 맵을 만들어냄.
     * 새로운 매퍼와 경험 많은 매퍼 모두가 참여하여 총 30개의 레벨을 Copper 게임 모드로 제작함.

설치 방법

     * qbj2 폴더를 Quake 디렉토리에 압축 해제함.
     * 원하는 소스포트를 실행하고, 콘솔을 열어 gameqbj2를 입력 후 엔터를 누름.
     * 또는 소스포트의 단축키를 만들어 qbj2 폴더에 넣고, 목표 명령줄 끝에 -game qbj2를 추가함.

GN⁺의 의견

     * 이 대회는 브루탈리즘 건축의 차가운 미학을 게임 맵 디자인에 적용하여 참신한 시각적 경험을 제공함.
     * 참가자들의 다양한 배경과 창의력이 결합되어 게임 플레이에 새로운 차원을 더함.
     * 이 기사는 게임과 건축 디자인의 융합이 어떻게 창의적 결과물을 낳을 수 있는지를 보여주는 흥미로운 사례임.

        Hacker News 의견

     * 예술가들의 멋진 작업으로, 이 엔진은 환경을 잘 표현하는 것 같음. Quake 맵의 기하학적 구조를 3D 모델로 추출하는 좋은 방법을 아는 사람이 있는지 궁금함. 웹에서 볼 수 있으면 멋질 것 같음.
          + 편집: 다음과 같은 방법을 찾음:
               o https://github.com/sbuggay/bspview
               o https://github.com/passiomatic/elm-quake3-renderer
          + ""maps"" 폴더에서 .bsp 파일을 로드하면 기본 버전(손상된 스카이박스 포함)을 볼 수 있음.
     * 브루탈리즘과 비디오 게임을 좋아한다면 'Control' 게임을 강력 추천함. 아름다운 게임임.
     * Quake의 richter/antiquake를 wasm으로 컴파일하려는 시도 중임. 이번 달에 해낼 수 있을 것 같음. 자신만의 Slide Quake 서버를 Cloudflare worker에 호스팅하고 싶음.
     * 12살 때 Quake 모드 제작을 하면서 프로그래밍에 관심을 갖게 됨. 마지막으로 만든 것은 'Tellytubbies: Must Die'였음. 텔레토비들의 고통스러운 모습을 맵, 모델, 텍스처, 사운드 편집으로 만드는 것이 재미있었음.
     * Quake 커뮤니티는 처음부터 존재했지만, 지난 6년 동안 나온 작업은 뛰어남. 계속해서 놀라운 작품을 만들어내고 있으며, 모든 것을 플레이해보고 더 많은 것을 원함.
     * Doom과 Quake 같은 게임의 레벨 제작이 독립적인 장면으로 발전하고, 풍부한 커뮤니티 역사와 게임 디자인에 대한 세련된 감각을 가지고 있음. ""픽셀 아트""가 초기 하드웨어의 한계로 인한 필요에서 출발해 ""레트로"" 룩을 재현하려는 초기 시도를 거쳐, 현재는 정보에 기반한 선택으로 사용되는 잘 발달된 미학으로 진화한 것과 같음. 비디오 게임이 다른 형태의 예술처럼 성숙해지는 지점에 도달한 것처럼 느껴짐.
     * Talos Principle 2의 브루탈리즘 디자인이 뛰어남. 이 스타일의 팬이라면 강력 추천함.
     * 레벨 디자인은 게임 개발 측면에서 처음 접한 것으로, Valve Hammer Editor에서 많은 시간을 들여 가장 비참하고 플레이하기 어려운 맵을 만들었음. 결국 CS 1.6 서버의 좀비 모드에서 사용된 맵을 만든 적이 있음. 이러한 커뮤니티가 여전히 존재하는 것을 보니 놀랍음.
     * Quake에서 많은 시간을 보냈기 때문에, 이 엔진 중 하나를 작동시키는 방법을 배워야 할 것 같음.
     * 그 이미지들을 보며, 3DFX2 카드를 Matrox Millenium II에 꽂는 자신을 상상할 수 있었음.
"
"https://news.hada.io/topic?id=11714","왜 은행들이 갑자기 고객 계좌를 폐쇄하는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        왜 은행들이 갑자기 고객 계좌를 폐쇄하는가

     * 기사는 은행이 고객 계좌를 갑작스럽게 폐쇄하는 문제를 논의한다.
     * 이 예기치 않은 행동으로 개인과 소기업 주인들이 임대료를 지불하거나 급여 요구를 충족시키지 못하게 되었다.
     * 은행들은 이러한 폐쇄에 대한 명확한 설명을 제공하지 않아 고객들이 혼란스럽고 좌절하고 있다.
     * 기사는 이 문제에 대해 조명하고 이러한 갑작스러운 계좌 폐쇄의 잠재적인 이유를 탐구하려고 한다.
     * 이 상황은 디지털 뱅킹과 금융 기술에 대한 함의 때문에 기술에 능숙한 개인들 사이에서 관심을 불러일으켰다.

        Hacker News 의견

     * 기사는 은행들이 명확한 이유 없이 고객 계좌를 폐쇄하는 증가하는 문제에 대해 논의한다.
     * 일부 댓글러들은 이를 자동 결정 문제로 보고, 이러한 결정이 감사 가능해야 하며 책임자를 정의해야 하는 법률이 필요하다고 제안한다.
     * 은행들은 종종 고객이 사기적이거나 의심스러운 활동에 참여하지 않았음에도 불구하고 계좌를 폐쇄하는 이유로 은행비밀법 등의 규정을 인용한다.
     * 한 댓글러는 Chase가 ""예상치 못한 활동"" 때문에 자신의 계좌를 폐쇄한 개인 경험을 공유했는데, 잘못된 행동의 증거는 없었다.
     * 댓글러는 은행들이 기계 학습과 AI를 사용하여 계좌를 표시하고, 직원들이 종종 이러한 계좌를 철저한 조사 없이 폐쇄한다고 제안한다.
     * 은행들이 고객들의 정치 활동과 소셜 미디어를 모니터링하고, 이러한 요인에 기반하여 계좌를 폐쇄할 수 있다는 우려가 있다.
     * 기사는 사람들이 해외에서 오랜 시간을 보내면 다수의 해외 거래나 은행 주소로 PO Box를 설정하는 등의 붉은 깃발로 인해 계좌가 폐쇄될 수 있다고 제안한다.
     * 현금 없는 사회로의 전환은 데뱅킹을 특히 문제시하며, 이는 사람들이 임대료나 청구서를 낼 수 없게 할 수 있다.
     * 일부 댓글러들은 계좌 폐쇄를 초래할 수 있는 거래 유형이 본질적으로 범죄적이지 않으며, 이러한 거래를 범죄화하는 것이 잘못되었다고 주장한다.
     * 이러한 행위와 중국의 개인 흑색 표시 시스템 사이에 비교가 이루어지며, 미국 시스템은 사람들에게 왜 그들이 블랙리스트에 올랐는지 알리지 않는 것에 대해 비판받고 있다.
     * 기사는 많은 식당이 이제 신용/직불만 가능하다고 언급하며, 일부 댓글러들은 이것이 불법이어야 한다고 믿는다.
     * 이러한 행위가 현대적인 레드라이닝과 금융 플랫폼 제거로 이어질 수 있으며, 더 높은 위험을 감수하는 개인들이 더 높은 수수료와 이자율에 직면할 수 있다는 우려가 있다.
"
"https://news.hada.io/topic?id=11766","메인 주에서 압도적으로 통과된 차량 수리권 법안","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       메인 주에서 압도적으로 통과된 차량 수리권 법안

메인 주의 자동차 수리권 법안 통과

     * 메인 주에서 투표자들이 자동차 수리권을 법적으로 보장하는 조치를 압도적으로 지지함.
     * '질문 4'는 차량 제조사들에게 진단 시스템을 표준화하고 차량 소유자 및 독립 수리 업체에게 원격 접근을 제공하도록 요구하는 내용을 담고 있음.
     * 이 법안은 소비자들에게 인기가 많으며, 제조사들의 반대 캠페인에도 영향을 받지 않음을 보여줌.

메인 주의 법안이 갖는 의미

     * 메인 주의 법안은 자동차 진단 데이터에 대한 소비자의 접근 권리를 강화함.
     * 자동차 제조사들은 이전에 매사추세츠 주에서 비슷한 법안에 대해 수백만 달러를 들여 로비하고 소송을 벌였으나, 메인 주에서는 그만큼 강력하게 반대하지 않음.
     * 메인 주의 법안은 다른 주에서도 영향을 미칠 수 있으며, 과거 매사추세츠 주의 법안이 전국적으로 영향을 미친 사례가 있음.

소비자 권리 강화와 제조사의 대응

     * 메인 주의 자동차 수리권 법안은 소비자들이 자동차 수리와 관련된 정보의 관리자가 될 수 있도록 함.
     * 자동차 제조사들은 매사추세츠 주에서 패배한 후 메인 주에서는 크게 로비 활동을 하지 않았음.
     * 소비자 권리 단체 USPIRG의 Nathan Proctor는 수리권이 상식적이라고 주장하며, 제조사들이 아닌 이상 모두에게 인기가 있다고 말함.

전국적인 수리권 법안 추진

     * 메인 주의 법안은 메인 주뿐만 아니라 다른 주에도 영향을 미칠 수 있음.
     * 과거 매사추세츠 주의 법안이 전국적으로 영향을 미친 사례가 있으며, 제조사들은 다양한 주 법안에 대응하기보다는 전국적으로 법을 준수하기로 합의함.
     * CAR Coalition은 메인 주의 투표 결과가 전국적인 수리권 법안 추진에 동력을 더할 것이라고 밝히며, 연방 차원에서의 법안 추진을 계속할 것임을 알림.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 메인 주에서 자동차 수리권에 대한 법안이 압도적인 지지를 받아 통과되었다는 것이다. 이는 소비자들이 자동차 수리와 관련된 정보에 대한 접근 권한을 갖는 것을 강력히 원하고 있음을 보여준다. 또한, 이러한 법안이 전국적으로 확산될 가능성이 있어, 자동차 제조사들과의 관계뿐만 아니라 소비자 권리와 관련된 큰 변화를 예고한다. 이 기사가 흥미로운 이유는 소비자 권리와 기술 발전이 어떻게 상호 작용하는지를 보여주며, 우리가 사용하는 제품에 대한 통제권을 누가 가지고 있어야 하는지에 대한 중요한 논의를 촉발시키기 때문이다.

        Hacker News 의견

     * 자동차가 네트워크 연결을 요구하지 않아야 한다는 법안에 대한 제안
          + 자동차가 외부 네트워크 연결을 필요로 할 경우 이를 사용자에게 고지해야 함.
          + 네트워크 연결을 비활성화하는 방법을 사용자가 직접 할 수 있어야 하며, 이는 물리적인 하드웨어 스위치, 퓨즈, 점퍼 등으로 가능해야 함.
          + 네트워크 연결을 비활성화해도 자동차의 모든 기능이 영구적으로 작동해야 하며, 사용자에게 재연결을 강요하지 않아야 함.
          + 네트워크 연결을 비활성화한 사용자에게 불이익을 주지 않아야 함. 예를 들어, 네트워크에 연결되지 않아 차량 진단/수리가 불가능하다거나 인포테인먼트 시스템 업데이트를 할 수 없다는 등의 이유를 들어서는 안 됨.
          + 이와 같은 원칙이 로봇 청소기, 차고 문 개폐기 등 다른 '스마트' 기기에도 적용되어야 함.
     * 수리 가능성 지수에 대한 의견
          + 프랑스에서 시작된 수리 가능성 지수는 상식적인 승리로, 제조업체가 아닌 사람들에게는 매우 인기가 있음.
          + 사회는 사람들이 자신의 물건을 수리할 수 있을 때 가장 잘 작동함.
     * 메인 주 전력망 국유화에 대한 투표 결과 관찰
          + 메인 주는 전력망 국유화에 대한 투표에서 대다수가 반대함.
          + 메인 주는 청정 에너지 전환에 필요한 것들을 보여주는 축소판임.
          + 이전에는 퀘벡과 보스턴 사이의 HVDC(고전압 직류 전송) 라인에 대한 논쟁이 있었음.
     * 차량 제조업체가 진단 시스템을 표준화하고 소유자 및 독립 수리 시설에 원격 접근을 제공하도록 요구하는 것에 대한 의견
          + 실제로는 원격 접근을 비활성화하고 싶음.
     * 자동차 제조업체들이 이와 유사한 법안에 반대하기 위해 수백만 달러를 로비하고 법정에서 싸우는 것에 대한 의견
          + 어떤 자동차 제조업체들이 이러한 행동을 했는지 알고 싶어 함.
     * 실제로 이 법안이 의미하는 바에 대한 질문
          + 제한된 부품이 없어지는 것인지, 서비스 도구와 소프트웨어가 모두에게 공정하고 합리적인 가격으로 제공되는 것인지에 대한 의문.
     * 기업들이 고객과 고위급 전쟁을 벌이는 것 같다는 의견
          + 이는 올리고폴리(소수 독점)의 최종 결과로 보임.
     * DIY를 좋아하는 한 사용자의 의견
          + 법안이 필요한 이유에 대한 의문 제기. 충분한 DIY 애호가들이 있다면, 그들은 수리가 불가능한 제품을 구매하지 않음으로써 자신의 의사를 표현할 것임.
     * 소프트웨어 취약점에 대한 제조업체 책임에 대한 의견
          + 자동차를 단순하게 유지해야 함. 일부 자동차가 일반 CAN 버스 대신 광섬유를 사용하는 이유에 대한 의문.
     * 자동차가 자율 시스템인지에 대한 질문
          + 자동차는 컴퓨터, LAN, 경계를 가지고 있으며, 때로는 자율적으로 운전하기도 함.
"
"https://news.hada.io/topic?id=11761","개발 조직문화는 어떻게 시작 해야할까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         개발 조직문화는 어떻게 시작 해야할까?

   좋은 개발자를 어떻게 채용 하고, 좋은 개발 문화를 만들어가기 위해 근본적으로 접근 해야하는 방식에 대해서 이야기 나눈 주제입니다.

   개발에 폴요한 툴을 찾는다
   그 툴의 커뮤느티를 찾는다.
   구 커뮤느티에서 답변하는 사람중에 좋은 개발자가 분명 있다 ..
   ㅡ ^^

   좋은 글 잘 읽었습니다.
   기술+커뮤니케이션이 좋은 완벽한 개발자를 찾는건 쉬운 일이 아닌 것 같습니다.

   네, 감사합니다. 제가 경험한 바로는 좋은 개발자도, 나쁜 개발자도 없는 것 같습니다. 정말 실력이 어나더 레벨인 개발자도 보아 왔지만 완벽한 경우는 거의 못봤습니다. 잘하는 개발자로 인해 동료들이 자극을 받고 성장하는 것은 매우 중요하다고 생각 하지만, 이를 뒷바침 할 문화가 잘 만들어져야 한다고 생각합니다. 회사는 이를 위한 분위기와 판을 잘 깔아 놓고, 결국 개발자 개개인이 본인만의 문화를 만들어 가려는 노력이 필요해 보입니다.
"
"https://news.hada.io/topic?id=11778","당신의 청구를 거부한 건강 보험사의 이유를 알 권리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      당신의 청구를 거부한 건강 보험사의 이유를 알 권리

건강보험 청구 거절 이유를 알 권리

     * 미국의 건강보험사들은 매년 수백만 건의 치료 청구를 거부함.
     * 환자들은 거부된 이유를 알기 위해 청구 파일을 요청할 권리가 있으나, 일부 보험사들은 이를 제대로 제공하지 않음.
     * ProPublica는 독자들의 청구 파일 요청 경험을 따라가며 보험사들의 미흡한 대응을 조명함.

청구 파일 요청 방법

     * 환자들은 거부된 치료의 이유를 알기 위해 보험사에 청구 파일을 요청할 수 있음.
     * 연방법과 규정에 따라, 보험사는 서면 요청에 신속하게 응답해야 하며, 대부분의 경우 30일 이내에 파일을 제공해야 함.
     * ProPublica는 청구 파일을 요청하는 방법을 안내하는 가이드를 발행하고, 요청 편지 템플릿을 공유했음.

보험사들의 문제점

     * Cigna와 Anthem과 같은 보험사들은 청구 파일을 얻기 위해 법원 명령이나 소환장이 필요하다고 잘못 안내함.
     * UnitedHealthcare와 같은 보험사는 청구 파일 요청을 항소로 오해하여 처리함.
     * Aetna를 포함한 여러 보험사들이 30일 이내에 청구 파일을 제공하지 않아 연방법을 위반함.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 환자들이 자신의 건강보험 청구가 거부된 이유를 알 권리가 있으며, 이를 위해 청구 파일을 요청할 수 있다는 것임. 이는 환자들이 자신의 건강 관리에 더 적극적으로 참여하고, 필요한 경우 항소를 준비할 수 있는 권한을 제공함으로써, 보다 투명하고 공정한 의료 시스템을 구축하는 데 기여함. 이 기사가 흥미로운 이유는 ProPublica가 실제 사례를 통해 보험사들의 불투명한 관행을 드러내고, 환자들이 자신의 권리를 주장할 수 있도록 정보를 제공하고 있기 때문임.
"
"https://news.hada.io/topic?id=11744","알파벳이 1300억을 투자한 산업 정보 검색 엔진, Alphasense 분석","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               알파벳이 1300억을 투자한 산업 정보 검색 엔진, Alphasense 분석

   알파벳이 1300억을 투자한 산업 정보 검색 엔진, Alphasense 분석
    1. thesis
       ○ 비즈니스 리서치는 현대 지식 노동자의 핵심 업무
       ○ 그에 비해 이를 보조하는 툴은 충분히 똑똑하지 않음 (반복 작업 多)!
       ○ 이를 해결하기 위해 탄생한 비즈니스 리서치 / 인텔리전스 특화 검색 엔진 Alphasense
       ○ 공격적 자금조달로 3.2조의 기업가치 인정받음. 과연 산업 정보계의 구글이 될 수 있을까?
    2. founding story
       ○ 모건스탠리에서 일하던 Jack Kokko는 와튼 MBA를 하던 Raj Neervannan을 만나 리서치 과정의 고충에 크게 공감
       ○ 이를 해결하기 위해 2011년 Alphasense 창업
       ○ 초기 GTM은 헤지펀드 (규모 작고, 구매력 강함), 이후 콜드콜로 월가 금융 기업을 포섭해 빠른 성장 이룸
    3. product
       -> problem: 기존 검색엔진은 자료 나열 이상의 인사이트 제공 X + 부정확한 정보도 섞여있음
       -> solution: 공신력 있는 정보만 추려, 그 위에서 검색 결과 제공. 이를 확장해 검색, 요약, 모니터링, 워크플로우의 4가지 핵심 기능 제공
       ○ 검색: 산업/기업 정보 도메인에 특화한 검색엔진 개발 + 다년간 모은 신뢰도 높은 DB 제작
       ○ 요약: 검색의 연장선에서 주요 토픽 및 키워드 파악용 미리보기 제공
       ○ 모니터링: 관심 주제를 등록 시 해당 주제에 관한 새 소식을 알림으로 보냄
       ○ 워크플로우: 발견한 내용을 저장 기록 및 공유할 수 있는 워크스페이스
    4. market
       ○ 동사의 고객 페르소나는 다수의 시장에 분포
       ○ 금융 산업의 보수성 때문에 (보안과 신뢰가 1순위) 금융데이터 산업에 올인보다는 타 버티컬로 진출
       ○ 마켓 리서치 산업과 고객 설문 및 인터뷰로 확장해 TAM 증가
       ○ 타 버티컬로 진출해 (e.g. 바이오/제약 버티컬), 현재 비금융권 고객이 전체의 75%
    5. traction
       ○ 누적투자금액 4400억 중 주요투자
       ○ 알파벳 익스텐션 라운드: 1.8B value, 100M
       ○ 골드만삭스, 웰스파고, 모건스탠리, 시티 등 월가서: 180M
       ○ 에릭 슈미트의 innovation endeavor: 50M
       ○ 동사의 고객사가 투자사이기도 함 (e.g. 구글, 골드만삭스 등)
    6. business model
       ○ 여타 SaaS와 같이 ARR와 커스텀 솔루션으로 매출 발생
       ○ 인당 사용료 $5000~7000으로 추정
       ○ 흑자 전환 가능하나 아직은 수익성 X, 이후 비용은 DB 최신화와 LLM 학습에 들어갈 것으로 예상
    7. valuation
       ○ 피어 비상장/상장 기업에 비해 PSR이 높음 (Factset 8, S&P Global 10, 블룸버그 5, Alphasense 12)
       ○ 높은 기업 가치 정당화를 위해 비금융권 버티컬에 성공적 진출, 보다 넓은 사용자층에 대체 불가능해져야. 이를 위해 GenAI/LLM을 효과적으로 이용할 필요성 up
    8. competition
       ○ 금융 데이터 서비스: 블룸버그, Refenitiv Eikon, S&P Capital IQ, FactSet
       ○ B2B LLM 지식엔진 스타트업: Hebbia, Glean
       ○ 동사는 기업 외부에서 내부로, LLM 지식엔진 스타트업은 기업 내부에서 외부로 확장하며 경쟁하게 될 것
    9. key opportunities
       ○ 비전: 비즈니스 리서치를 위한 구글. P를 쫓는 방식서 나아가 Q를 쫓아 더 대중적이고 가벼운 서비스 또한 가능할 것
       ○ 적당히 중후하고, 필요할만큼 재빠르다 (10년 넘는 금융업 업력 + GenAI 트렌드에 기민하게 반응)
       ○ 북미외 지역으로 확장 (APAC)
       ○ 매력적 Exit Opportunity (고객사이자 투자사가 인수할 가능성)
       ○ GenAI/LLM (언론 관심과 투자금 유치의 기회 제공, 이후 어떻게 고객 가치 창출할지 고민해야)
   10. key risks
       ○ 강한 경쟁자들: 데이터, 기술력, 평판, 고객 관리 등의 정성적 해자가 존재하나 AI / 검색 분야서 기술적 해자가 약함
       ○ 적은 수의 ICP (ideal customer profile): 전직원이 사용할 제품 아니며, 동사의 고객사가 성장한다 해서 동사 매출 성장 X
   11. conclusion
       ○ 산업 정보계의 구글이 될지도 모르는 Alphasense, 이들의 제품과 전략이 어떻게 변화하며, 얼마나 많은 부를 창출해 낼지를 유심히 지켜보자
"
"https://news.hada.io/topic?id=11752","챔버레인, 스마트 홈과 연동되는 스마트 차고문 개폐기의 작동을 차단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 챔버레인, 스마트 홈과 연동되는 스마트 차고문 개폐기의 작동을 차단

     * 챔버레인 그룹, myQ 스마트 차고문 오프너의 타사 앱 통합 제한
     * 회사, 1000만 사용자를 위한 myQ 생태계 강화 및 공인 파트너와의 신뢰 유지 목표
     * 오픈소스 스마트홈 플랫폼 Home Assistant, 챔버레인 조치로 인해 myQ 통합 작동 중단 보고
     * 고객들, 광고 표시 및 업셀링 강요하는 myQ 앱에 대한 불만 표출
     * 아마존, Alarm.com과 같은 공인 파트너, Home Assistant 같은 오픈소스 프로젝트와 달리 챔버레인과의 협력에 대가 지불 가능성
     * Home Assistant, 챔버레인 제품 통합을 위한 우회책으로 ""ratgdo"" 회로 기판 사용 제안
     * 소비자 선택권 옹호 기사, 회사 정책 변화에 의존하지 않고 로컬에서 작동하는 제품 추천
     * 챔버레인의 결정 요약, 고객 편의와 오픈소스 협력 희생하며 사용자 경험 통제 및 광고와 파트너십을 통한 수익화로 해석

   사실 우리 나라에서는 스마트 차고문이라는게 많이 쓰이지 않는 것이라 이슈가 안되는 것이긴 한데,
   미국내에서는 굉장히 많이 쓰이는 기능중 하나라 큰 이슈가 되는 것 같아요

   오픈소스 연동을 포기하겠다는 건데 과연 시장이 어떻게 반응할지 궁금하네요.

        Hacker News 의견

     * 챔버레인의 스마트 차고문 오프너 제어 금지 결정 비판
     * 제3자 클라이언트 허용 정책 공유
     * 차고문 오프너 앱 내 광고 및 업셀 전략 조롱
     * 스마트 홈 장치의 클라우드 의존성 문제 지적 블로그 포스트
     * 챔버레인의 제3자 통합 비지원 및 MyQ 통합 시도의 기술적 어려움
     * 챔버레인 접근법에 대한 사용자들의 실망 표현
     * Ratgo와 Messo와 같은 대안적 스마트 차고문 솔루션 추천
     * 제3자 앱 차단을 스마트 기기 관리의 부정적 추세로 해석
     * 홈 자동화 회피 의사 표현
     * 챔버레인의 제3자 앱 차단 결정에 대한 기업 이중 언어 비판
     * IoT 플랫폼 전직 직원의 챔버레인 기술 및 시장 위치에 대한 통찰 공유
"
"https://news.hada.io/topic?id=11709","'두려움이나 압박감을 표현하면 GPT-4의 성능이 향상된다'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   '두려움이나 압박감을 표현하면 GPT-4의 성능이 향상된다'

     * 새로운 연구가 사용자가 긴급성이나 스트레스와 같은 감정을 표현할 때 GPT-4와 같은 AI 모델이 더 잘 작동한다는 것을 보여주는 기사.
     * 이 발견은 AI를 서비스에 사용하는 개발자와 창업자에게 중요하며, 감정적 맥락을 포함하는 새로운 접근법을 제안하는 프롬프트 엔지니어링에 대해 제안한다.
     * 연구에서는 ""EmotionPrompts""라고 불리는 감정적 무게가 추가된 프롬프트가 문법 수정부터 창의적 글쓰기에 이르는 작업에서 AI 성능을 향상시킬 수 있다는 것을 발견했다.
     * 이러한 결과는 감정적 신호를 포함시키면 더 효과적이고 반응이 좋은 AI 애플리케이션을 만들 수 있다는 것을 시사한다.
     * AI를 제품에 통합하는 사람들에게 이러한 결과는 전략적 이점을 제공한다.
     * 이러한 감정 트리거에 대한 이해를 적용함으로써, AI는 사용자의 요구에 더 잘 부응하도록 세밀하게 조정될 수 있다.

        Hacker News 의견

     * GPT-4 언어 모델이 감정적으로 중요한 맥락을 주면 성능이 향상된다는 논문
     * 모델의 성능 향상은 그것의 훈련 데이터, 즉 인간 상호작용에 기반한 것으로 보여짐
     * 일부 사용자들은 모델의 단어 예측 능력과 의미적 타당성이 방대한 훈련 데이터의 부작용일 수 있다고 주장
     * 다른 일부는 모델의 성능이 이전에는 인간만이 가능했던 방식으로 추론할 수 있게 하는 새로운 행동을 나타낼 수 있다고 제안
     * 일부 사용자들은 모델의 작업 중요성을 강조할 때 성능이 향상된다는 것을 발견
     * 모델이 단순히 다음 토큰을 예측하는 것인지, 더 복잡한 행동을 보이는 것인지에 대한 논란 존재
     * 한 사용자는 작업의 중요성을 강조하면 모델이 더 효율적인 SQL 쿼리를 생성하는 실험을 공유했음
     * 일부 사용자들은 모델을 인간화하는 필요성을 느끼며, ""멍청한"" 질문을 던지는 것에 대해 나쁘게 느낌
     * 생성적 AI가 미래의 인간 표현을 어떻게 바꿀 수 있을지에 대한 추측 존재
     * 한 사용자는 메타 프롬프트 전략을 제안, 모델에게 특정 작업에 대한 최적의 프롬프트를 생성하도록 요청
"
"https://news.hada.io/topic?id=11769","Ask GN: 이번 주말에 뭐 하시나요? ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   이번 주도 캠핑 가고 다음 주도 캠핑갑니다... 진짜 찐 동계 캠핑은 무리일 것 같아서 막차? 타고 올해는 끝낼 생각이에요.

   다음주 제품 릴리즈 준비로 아마 하루 정도는 출근할 것 같습니다.
   그 외에는 오랜만에 소고기 토마토 스튜 끓여서 먹으려고 해요.

   유도 생활체육 시합이 하남시에서 있어서 시합 출전합니다. 올 6월에도 나갔었는데 첫판에서 패배했었네요. 이번에는 꼭 1승해보려구요.ㅋㅋ

   우와 화이팅 입니다!

   감사합니다..

   10여년전에 같이 일했던 회사 동료들과 단체 글램핑 갑니다.
   파티게임들로 십여개 챙겨가는데 얼마나 할 수 있을지 모르겠네요 ㅎㅎ

   Dixit 디즈니 에디션, 라스베가스 로얄, 마지막 춤은 나와 함께, 한밤의 늑대인간, 한밤의 수수께끼, 캐치 스케치, 아발론, 타코 캣 고트 치즈 피자, 바보타임, 시퀀스, 코드네임, 페이퍼사파리 포켓몬, 컨셉트

   뭔가 너무 많군요. 항상 많이 챙겨지만 고기먹느라 얼마 못하는 ㅠ

   저도 캠핑 갈 때마다 놀거리를 챙겨갔었는데, 이번엔 스킵할 생각입니다...
   매번 먹고 마시느라 못하더라구요... 오히려 좋은건가?
"
"https://news.hada.io/topic?id=11697","안드로이드용 Firefox가 곧 확장 기능을 지원할 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    안드로이드용 Firefox가 곧 확장 기능을 지원할 예정

     * Firefox for Android가 확장 기능을 지원하며, 새로운 오픈 모바일 생태계의 출시를 표시합니다.
     * Firefox 120의 릴리스 주기는 addons.mozilla.org (AMO)의 Firefox for Android에서 수십 개의 새로운 확장 기능을 도입할 것입니다.
     * 목표는 모바일 환경에서 처음으로 광범위한 확장 기능을 도입하면서 강력한 성능 표준을 유지하는 것입니다.
     * 완전히 오픈된 Firefox for Android 확장 생태계는 12월에 공개될 예정입니다.
     * 개발자들은 자신의 데스크톱 확장 기능을 Firefox for Android 사용에 최적화하도록 권장되며, 이를 통해 첫 번째로 공개적으로 사용 가능한 확장 기능의 일부가 됩니다.
     * 현재의 추세에 따르면, 12월에 오픈 가능성이 시작될 때 AMO에서 새로운 Firefox for Android 확장 기능이 최소 200개 이상이 될 것으로 예상됩니다.
     * 이는 개발자들이 새로운 사용자를 발견하는 기회를 제공하며, 모바일 확장 기능의 수가 AMO의 거의 40,000개의 데스크톱 Firefox 확장 기능보다 훨씬 적습니다.
     * 개발자들은 또한 Firefox for Android 사용자들이 모바일 웹을 경험하는 새로운 방법을 창출하고 혁신하도록 초대받습니다.
     * 웹 세미나와 오픈 오피스 시간을 포함하여 개발자들이 자신의 데스크톱 확장 기능을 Firefox for Android와 호환되도록 만드는 방법에 대해 더 자세히 알아볼 수 있는 자료가 제공됩니다.
     * 첫 200명의 Firefox for Android 확장 기능 개발자들이 Android에서 확장 기능을 작동시키고 Firefox 팀에 이메일을 보내면 무료 티셔츠를 받게 됩니다.

        Hacker News 의견

     * Firefox for Android, 확장 기능 지원 개선 및 Manifest v3 지원 수정
     * 새로운 120 베타 버전, 호스트 권한 프롬프트 활성화, 그러나 수동 권한 편집은 아직 불가능
     * Android MV3와 관련하여 여전히 문제가 있음, 히스토리 및 북마크 API의 부재, 데스크톱 및 모바일 모두에 영향을 미치는 Chrome과의 차이점
     * Firefox, 잘 테스트된 확장 기능을 제출하고 AMO 목록에서 Android 지원을 활성화한 첫 200명에게 무료 티셔츠 제공
     * 사용자들, Firefox for Android의 광고 차단 기능, 특히 uBlock Origin 확장 기능에 대한 인정
     * Firefox for Android에서 더 많은 확장 기능이 사용 가능해질 것으로 기대
     * 일부 사용자들, iOS에서 실제 Firefox 버전을 기대하고 있으며, 이에 대한 EU의 입장에 대해 궁금해함
     * 새로운 기술 개발 중, 모든 모바일 장치에 다운로드 없이 확장 기능을 제공하기 위해 서버 측 브라우저에서 확장 기능을 실행하고 장치로 스트리밍
     * 이 새로운 기술에는 몇 가지 단점이 있음, Chrome 확장 API 쉼의 필요성, 확장 기능을 발견하고 검증하기 위한 중앙 저장소의 부재, 잠재적 인프라 문제
     * 모바일과 데스크톱/노트북 플러그인 간의 차이에 대한 질문, 특히 결제 및 개인 정보와 관련하여
     * 이 기술을 webview 유형 앱을 게시하는 대안 방법으로 사용하는 가능성 고려 중
"
"https://news.hada.io/topic?id=11737","Bluesky, 단일 테넌트 SQLite로 이전","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Bluesky, 단일 테넌트 SQLite로 이전

     * Bluesky는 단일 테넌트 SQLite 데이터스토어로 이전했습니다.
     * 이제 각 사용자는 자신의 저장소와 개인 계정 상태를 저장하는 자신만의 SQLite 파일을 가지고 있습니다.
     * 사용자 데이터베이스는 계층적으로 저장됩니다.
     * 각 저장소의 저장소 서명 키는 SQLite 파일과 함께 저장됩니다.
     * 사용자 데이터와 상호 작용하는 추상화가 ActorStore로 전환되었습니다.
     * ActorStore는 읽기와 쓰기를 위한 다른 클래스를 가지고 있습니다.
     * SQLite는 동시 트랜잭션을 지원하지 않으므로, ActorStore는 쓰기를 위해 명확한 ""트랜잭트""를 필요로 합니다.
     * 서명 키와 데이터베이스를 위한 LRUCache가 유지되며, 30k개의 열린 파일 핸들과 30k개의 메모리에 보관된 키를 허용합니다.
     * 데이터베이스가 캐시에서 떨어지면, 파일 핸들이 닫힙니다.
     * 서비스 상태를 관리하기 위해 세 개의 별도의 SQLite 데이터베이스가 도입되었습니다: 계정 정보, 초대 코드, 새로고침 토큰 등을 위한 서비스 DB, DID 해결을 캐싱하기 위한 did 캐시 DB, 그리고 서비스의 모든 저장소에서 저장소 업데이트를 순차적으로 처리하기 위한 sequencer DB.
     * 이 SQLite 파일들은 동시 읽기와 스트리밍 복제를 허용하기 위해 WAL 모드에서 실행됩니다.
     * PDS 배포는 Litestream 또는 유사한 것과 함께 배송될 것으로 예상됩니다.

        Hacker News 의견

     * Bluesky가 단일 테넌트 SQLite 설정으로 이전하여 이 접근법의 도전과 이점에 대한 논의가 일어났습니다.
     * 일부 사용자들은 데이터 이전과 스키마 버전에 대한 잠재적인 문제, 미래의 데이터 집계 필요성에 대해 우려를 표현합니다.
     * 다른 이들은 SQLite가 동시 트랜잭션을 지원하지 않는다는 주장에 의문을 제기하며, 특정 조건 하에서는 지원한다고 지적합니다.
     * 사용자 대 데이터베이스의 1:1 비율 전략이 흥미롭게 보이며, 사용자 간에 집계해야 할 데이터가 어떻게 처리될지에 대한 질문이 제기되었습니다.
     * 이 설정이 다른 사용자가 새로운 콘텐츠를 게시할 때 사용자의 데이터베이스에 대한 업데이트를 어떻게 처리할지에 대한 관심도 있습니다.
     * 일부 사용자들은 서버 SQLite/Litestream의 채택을 칭찬하며, 이를 테넌트 데이터베이스에 대한 비용 효율적인 선택으로 인용합니다.
     * SQLite에 어떤 유형의 데이터가 저장되고 어떤 것이 저장되지 않는지에 대한 질문이 제기되었으며, 일부 사용자들은 사용자 간의 메시지가 SQLite에 저장되지 않는다고 가정합니다.
     * MD5 해시를 사용하여 두 문자 대상 디렉토리를 얻는 것이 SHA256 해시 대신 더 빠르고 동일한 문제를 해결할 것이라는 제안이 있습니다.
     * 일부 사용자들은 이 이전을 긍정적인 움직임으로 보며, SQLite 파일을 다운로드하고 로컬 전용 HTML 프론트 엔드를 생성함으로써 서비스를 간단히 떠날 수 있을 것이라고 제안합니다.
     * Bluesky가 여전히 초대 전용인지에 대한 질문이 있습니다.
"
"https://news.hada.io/topic?id=11711","좋은 엔지니어가 되는 것은 경험을 쌓는 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        좋은 엔지니어가 되는 것은 경험을 쌓는 것

     * 작은 프로젝트라도 각 프로젝트는 자신의 도구 상자에 새로운 기술과 도구를 추가할 수 있는 기회
     * 한 프로젝트에서 배운 기술을 다른 프로젝트에서 배운 도구와 결합하여 문제를 해결할 수 있을 때 더 큰 가치를 창출할 수 있음. 모든 것이 합산됨
     * 처음엔 언어/라이브러리를 배우지만, 경력이 발전하면서 관심범위가 넓어져야 함
     * 기술 측면뿐만 아니라 접근 방식, 방법론 및 패러다임 측면에서도 마찬가지
     * 엔지니어로서 발전하는 데 있어 진정한 가치는 단지 고립된 기술을 쌓는 데 있는 것이 아니라, 이를 각 부분의 합보다 더 큰 능력의 복잡한 그물로 엮는 것

도구 상자

     * 엔지니어링 기술을 도구 상자로 상상해 보면, 새 알고리듬/언어/프레임워크 등 새로운 것을 배울 때마다 기본적으로 이 상자에 도구가 하나씩 추가되는 것
     * 하지만 도구가 있다는 것과 도구를 효과적으로 사용하는 시기와 방법을 아는 것은 완전히 다른 문제
     * 바로 여기에 경험의 가치가 있음
     * 각 프로젝트는 규모에 관계없이 특정 도구를 사용해야 하는 상황을 이해하는 데 도움이 되는 고유한 과제를 제공함
     *

     ""안락한 영역은 편안하지만 교훈을 주는 경우는 드뭅니다. 적극적으로 스트레칭을 할 수 있는 프로젝트를 찾아보세요. 그러면 도구 상자가 고마워할 겁니다.""
     * 하지만 도구 상자는 고정된 개체가 아니라 사용자와 함께 진화함
     * 시간이 지남에 따라 더 많은 도구를 추가할 뿐만 아니라 점점 더 복잡한 문제를 해결하기 위해 새로운 방식으로 도구를 결합하기 시작할 것
     * 한 프로젝트에서 RESTful API를 사용한 경험이 다른 프로젝트에서 타사 서비스를 능숙하게 통합하는 데 도움이 될 수 있음
     * 멀티스레딩에 대한 이해는 데이터가 많은 애플리케이션의 성능을 극적으로 최적화할 수 있음
     * 핵심은 각 프로젝트마다 별도의 도구 상자가 필요하지 않다는 것
     * 하나의 도구 상자로 각 프로젝트의 고유한 요구 사항과 제약 조건의 이점을 활용할 수 있음

기술과 도구의 페어링

     * 훌륭한 엔지니어와 그렇지 않은 엔지니어를 구분하는 것은 한 프로젝트에서 배운 기술을 다른 프로젝트에서 습득한 도구와 결합하는 능력
     * 이러한 교차 수분(Pollination, 꽃받침에 꽃가루를 공급하는 것)은 보다 효율적인 문제 해결을 가능하게 하고 종종 더 훌륭한 솔루션으로 이어짐
     * 도구 상자의 품질은 ""도구의 수""가 아니라 ""도구가 해결할 수 있는 문제의 풍부함""에 따라 결정됨
     * 실제 사례
          + 재고 수를 정확하게 유지하기 위해 데이터베이스 트랜잭션에 대한 깊은 이해를 바탕으로 이커머스 웹사이트에서 작업했다고 가정
          + 별도의 프로젝트에서 실시간 채팅 애플리케이션을 위한 웹소켓 프로그래밍에 대해 깊이 파고들었음
          + 이제 재고 관리를 위한 실시간 대시보드를 개발하는 임무를 맡게 됨
          + 이처럼 서로 다른 프로젝트에서 배운 기술을 통합하여 강력한 솔루션을 만들 수 있음
          + 데이터베이스 트랜잭션에 대한 깊은 이해를 활용하여 재고 데이터의 안정성과 일관성을 보장하는 동시에 WebSockets를 사용하여 대시보드에 실시간 업데이트를 푸시할 수 있음
          + 이러한 기술을 결합하면 문제를 해결할 수 있을 뿐만 아니라 효율적이고 우아한 방식으로 문제를 해결할 수 있다는 뚜렷한 이점이 있음
     * 안전지대를 넘어서 뻗어나가기 : 자신의 안전지대를 넘어서는 스트레칭이 중요한 점
          + 익숙하고 덜 부담스러운 기존 스킬 세트와 일치하는 프로젝트에 끌리기 쉬움
          + 하지만 다양한 경험을 쌓을수록 도구의 폭이 넓어지고, 이러한 결실을 맺을 수 있는 능력이 향상됨
          + 새로운 것을 배우거나 이전에 해보지 않은 방식으로 생각하도록 만드는 프로젝트를 적극적으로 찾아볼 것
          + 겉으로 보기에는 전혀 관련이 없어 보이는 프로젝트에서도 많은 이점이 있다는 것을 알게 될 것

민첩성과 적응력 유지

     * 기술은 항상 발전하고 있으며, 오늘 익힌 도구가 내일은 그다지 유용하지 않을 수도 있음
     * 하지만 그렇다고 해서 도구가 쓸모없어지는 것은 아님. 오히려 변화에 적응하고 혁신하는 능력을 키울 수 있음
     * 예를 들어, 클라우드 네이티브 아키텍처가 등장했다고 해서 기존의 관계형 데이터베이스에 대한 지식이 무의미해지지는 않았음
     * SQL과 데이터베이스 설계의 기본을 이해하면 최신 데이터 스토리지 솔루션으로 작업하는 능력을 크게 향상시킬 수 있음

가치 있는 경험을 쌓기 위한 실용적인 팁

     * 도구를 마스터하는 것은 언제 어떻게 사용해야 하는지 알아가는 여정에 대한 하나의 이정표
     * 경험을 쌓기 위한 다양한 옵션이 있음
          + 다양한 프로젝트를 큐레이션 하기: 다양한 규모, 다양한 기술, 다양한 문제 영역의 다양한 프로젝트에서 작업해 볼 것. 각 프로젝트마다 도구 상자에 고유한 무언가를 추가할 수 있음
          + 반영하고 문서화하기: 프로젝트를 완료한 후에는 배운 내용을 되돌아보는 시간을 가질 것. 더 좋은 방법은 문서화하는 것. '배운 교훈'이 담긴 비공개 저장소나 공개 블로그 게시물을 통해 이해를 공고히 하고 지식을 공유할 수 있음
          + 커뮤니티에 참여하기: 오픈소스 기여 또는 개발자를 위한 맞춤형 소셜 플랫폼을 통해 커뮤니티에 참여하면 다른 방법으로는 접할 수 없는 문제를 접할 수 있음
          + 멘토와 멘토링 받기: 배운 것을 통합하는 가장 효과적인 방법 중 하나는 다른 사람에게 가르치는 것. 마찬가지로, 자신이 잘 모르는 분야를 전문으로 하는 엔지니어에게 조언을 구하거나 배우는 것을 주저하지 말 것
          + 배움을 멈추지 말기: 온라인 강좌, 웨비나, 주말에 새로운 언어를 익히는 등 지속적인 학습은 끊임없이 진화하는 커리어를 위한 윤활유

결론

     * 기술 교차 수분(Pollination)은 단순한 우연이 아니라 엔지니어링의 우아함
     * 최고의 솔루션은 종종 예상치 못한 기술의 조합에서 나옴
     * 따라서 다음에 새로운 문제와 씨름하게 될 때, 경험의 도구 상자를 자세히 살펴볼 것
     * 새로운 도구를 마스터하는 것이 아니라 수년간 쌓아온 도구를 현명하게 사용하는 데서 해결책을 찾을 수 있을 것
     * 문제 해결에 대한 이러한 다층적이고 미묘한 접근 방식이야말로 진정으로 커리어를 발전시키고 엔지니어로서 여러분을 차별화하는 요소임

   ai가 문턱을 많이 낮춰줘서 이러한 전환이 더 빨라진 것 같어요

   SI/SM 탈출은 선착순입니다. 선례가 하나도 없거든요. 이런 알맹이 없는 속 빈 강정을 경험이랍시고 자신은 KOSA 기준 고급이라 주장하는 개발자가 있다면, 여러분에게 절대 좋은 경험을 주지 못할 겁니다. KOSA는 공식적인 자격증명도 아닌 개쓰레기 폐기물급 데이터 쪼가리에 불과하거든요.

   경험을 쌓게 기회 좀 -_-
   좋소에서는 쌓을수 없다. 특히 PHP 충들이 있다면 더더욱!

   요즘 절감하고 있습니다.
   공부만으로는 안되더라고요.
   좋은 회사(좋은 경험을 위한)로 이직하는것만이 답일까요?

   다양한 프로젝트를 경험할수 있는 곳이 좋은 회사라고 말하기는 또 어려워서요.
   이직이 꼭 답이라고 하진 못할 것 같아요. 이직은 정말 힘들기도 해서요.
   당장은 사이드프로젝트를 진행해보는게 가장 좋지 않을까요?

   감사합니다. 당장 시작해볼게요 ㅎㅎ
"
"https://news.hada.io/topic?id=11754","xAI PromptIDE - 프롬프트 엔지니어링을 위한 통합 개발 환경","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                xAI PromptIDE - 프롬프트 엔지니어링을 위한 통합 개발 환경

     * 프롬프트 엔지니어링 및 Interpretability 연구를 위한 IDE. Grok 을 개발하는데도 사용중
     * 코드 편집기와 SDK 제공
          + 자동으로 모든 프롬프트를 저장하고 버전 관리 기능을 내장
          + 프롬프트 실행에 대한 결과는 영구적으로 저장되어 다양한 프롬프팅 기법들의 결과를 비교 가능
          + CSV 파일등을 업로드하고 파이썬 함수 하나로 읽어서 처리 가능
          + 편집기의 코드는 별도의 웹 워커에서 실행되는 인브라우저 파이썬 인터프리터로 로컬에서 실행됨
          + 여러개의 웹 워커를 실행할수 있으므로, 여러 프롬프트를 병렬로 실행도 가능
     * SDK 는 파이썬 코루틴을 사용해서 여러개의 @prompt_fn 주석이 달린 Python 함수를 동시에 처리
     * 파일 업로드 가능 : 파일당 5MiB 까지, 최대 50MiB
"
"https://news.hada.io/topic?id=11739","DoltgreSQL - 버전 컨트롤되는 PostgreSQL","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    DoltgreSQL - 버전 컨트롤되는 PostgreSQL

     * 버전 컨트롤 되는 SQL DB인 Dolt(""Git for Data"")가 PostgreSQL 버전을 공개
     * Postgres의 스키마와 데이터에 대해서 Git 스타일의 log, diff, branch, merge 등의 기능을 지원
     * 2019년부터 만들어진 기존 Dolt는 내부애 MySQL관련 코드는 없지만 그에 맞춰져 있었고, 그 시절엔 SQL쪽에서 가장 인기였음
     * 지난 5년간 시장이 Postgres쪽으로 많이 기울었고, 특히나 Dolt가 타겟하는 스타트업들이 많이 사용하기 시작

   Dolt - Git For Data
"
"https://news.hada.io/topic?id=11718","OpenAI, DevDay에서 새로운 모델 및 개발자 제품 공개","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  OpenAI, DevDay에서 새로운 모델 및 개발자 제품 공개

     * 128K 문맥 창을 지원하는 GPT-4 Turbo 모델, Vision이 포함된 GPT-4 API, Assistant API, DALL-E 3 API, 새로운 GPT-3.5 Turbo 등 공개.
     * GPT-4 Turbo
          + 128K 문맥 창(Context Window)을 지원하며, 2023년 4월 기준 데이터로 훈련됨.
          + GPT-4 대비 입력 토큰은 3배, 출력 토큰은 2배 저렴함.
          + 특정 형식으로 응답하는 지침을 더 잘 따르며, JSON 응답이 보장되는 JSON 모드도 있음.
          + seed 기반으로 재현할 수 있는 출력을 지원하며 출력에 대한 로그 확률을 반환하는 기능을 추가할 예정.
          + GPT-3.5 Turbo도 같이 업데이트됨.
     * Assistants API
          + 코드 인터프리터, 검색, 함수 호출 기능을 가진 특수 목적 AI.
          + 스레드 기반으로 상태를 관리하여 무한히 긴 내용도 처리 가능.
          + 코드 인터프리터 - 샌드박스 환경에서 Python 코드를 작성하고 실행할 수 있음.
          + 검색 - 사용자가 제공한 문서 등 모델 외부의 지식으로 내용을 검색하고 응답.
          + 함수 호출 - 사용자가 정의한 함수를 적절하게 호출하고, 응답을 결과에 포함할 수 있음.
     * 그 외 신규 API
          + GPT-4 Turbo에 이미지를 인식하는 기능이 추가됨,
          + DALL-E 3가 API로 출시되었으며, 이미지 생성당 0.04 달러.
          + TTS API가 추가됨.
     * 모델 커스터마이징
          + GPT-4 미세 조정 모델이 실험적 액세스로 출시될 예정.
          + 거대 조직을 위해 사용자 정의 모델을 제작하기 위한 맞춤형 모델 서비스 제공.
               o 수십억 토큰 이상의 독점 데이터 세트를 통한 훈련 등.
     * 가격 인하
          + GPT-4 Turbo 128K는 입력 토큰당 0.01 달러, 출력 토큰당 0.03 달러.
               o 기존에 비해 입력 토큰은 3배, 출력 토큰은 2배 저렴해짐.
          + GPT-3.5 Turbo 16K는 입력 토큰당 0.001 달러, 출력 토큰당 0.002 달러에 제공.
               o 기존에 비해 입력 토큰은 3배, 출력 토큰은 2배 저렴해졌으며, 4K 모델에 비해서도 입력 토큰인 33% 저렴해짐.
          + GPT-3.5 Turbo의 미세 조정 모델은 입력 토큰당 0.003 달러, 출력 토큰당 0.006 달러에 제공.
               o 기존에 비해 입력 토큰은 4배, 출력 토큰은 2.7배 저렴해짐.

   어제부터 GN⁺ 에도 GPT-4 Turbo 를 적용했는데요.
   확실히 답변이 빨라지고, 명령을 더 잘 알아 듣습니다.
   지시한 대로 잘 요약하고 결과물도 깔끔하게 뽑아주네요.
   원래는 영어 프롬프트를 섞어서 썼는데, 이제는 한국어 프롬프트만으로도 훌륭하게 답변이 잘 나오고요.

   AI 를 잘은 모르지만, 가격 하락의 속도는 점점 더 빨라지겠죠? 진짜 1, 2년 후의 세상이 예상이 안되네요.

   위 토큰당 가격은 1000토큰당 가격입니다. 참고하세요.

   와 128K토큰... 이제 제가 쓰는 용도들에선 보통 컨텍스트 문제는 사라지겠네요.

   아 이 내용 올릴려고 정리중이었는데 늦었네요 ㅠㅠ
     * HN 스레드

   Anthropic에서 100K 모델 공개했을 때도 신기했는데, 다시 GPT-4가 128K 토큰을 공개하면서 앞서가는 것 같네요.
   가격도 전반적으로 몇 배씩 낮췄는데, OpenAI 기술력은 대체 어디까지인지...

   아무튼 대환영입니다.
   GPT-4 은근히 비쌌는데(특히 16K 사용하면), 토큰 크기도 대폭 늘렸는데 진짜 확 싸졌네요. +_+

   그리고 Assistants API도 궁금하긴 한데, 한번 써봐야겠어요.
   검색에 임베딩을 사용하지 않아도 된다고 하니 더 이득 같기도 하고...?

   HN 스레드의 AI 요약.
     * OpenAI는 GPT-4 Turbo와 128,000 토큰 컨텍스트 길이, 어시스턴트 API 및 낮은 가격을 포함한 새로운 모델과 개발자 제품을 발표했습니다.
     * 이 발표들은 경쟁이 심화되는 상황에서 OpenAI API 플랫폼에 대한 락인을 증가시키기 위한 것입니다.
     * GPT 에이전트와 어시스턴트는 다른 곳으로 이식할 수 없는 ""블랙 박스 내의 블랙 박스""로 작동합니다.
     * DALL-E 3의 가격은 이미지 당 0.04달러로, 경쟁사들보다 10배 높습니다.
     * 세밀 조정된 ChatGPT 3.5의 가격은 이제 3배가 되어, 세밀 조정이 더욱 매력적으로 만들어졌습니다.
     * GPT-4 Turbo의 128K 컨텍스트 길이는 매력적이지만, 오픈 소스 모델은 여전히 정확성과 능력에서 뒤쳐져 있습니다.
     * 고객들은 이제 2-3백만 달러를 지불하여 독점 데이터로 사용자 정의 GPT-N 모델을 사전 훈련할 수 있습니다.
     * vectorDB 및 파일 처리와 같은 스타트업 카테고리는 OpenAI가 유사한 기능을 제공함에 따라 영향을 받을 수 있습니다.
     * OpenAI는 장기적인 위험을 고려하지 않고 개발자들이 자사 플랫폼에 의존하도록 유도하려고 합니다.
     * 경쟁이 줄어들면서 개발자들은 현재의 필요와 단기적인 이익을 기반으로 락인과 같은 위험을 받아들일 것입니다.

   환각이 있네요.

   가격은 다 써졌습니다.
"
"https://news.hada.io/topic?id=11710","Anna's Archive, LLM 회사들에게 세계 최대 중국어 논픽션 도서 컬렉션의 전용 액세스 권한 제공","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Anna's Archive, LLM 회사들에게 세계 최대 중국어 논픽션 도서 컬렉션의 전용 액세스 권한 제공

     * Anna's Archive 는 익명의 행동가들이 운영하는 비영리 온라인 섀도우 라이브러리 메타 검색 엔진. 다양한 도서 자원에 대한 접근을 제공
     * 이들이 750만권 / 350TB에 이르는 중국어 넌픽션 도서 컬렉션을 취득함(Library Genesis보다도 많음)
     * 이 컬렉션에 대해 고품질 OCR 및 텍스트 추출을 제공 해주는 것에 대한 대가로, 그 LLM 회사에게 독점 조기 억세스를 1년간 제공할 예정
     * 이 컬렉션은 SuperStar Digital Library Group이 만든 대규모 스캔된 책의 데이터베이스인 Duxiu에서 얻어졌으며, 대학과 도서관에 디지털로 제공되던 것들
     * 컬렉션의 총 파일 크기는 현재 형태로 약 359TB
     * 추출된 텍스트는 대형 언어 모델(LLMs)의 훈련에 사용되며, Archive는 컬렉션이 중국어임에도 불구하고 영어 LLMs 훈련에 유용할 수 있다고 믿음
     * Archive는 이 협력을 통해 사용자들에게 전문 검색 기능을 제공하고자 함
     * 협력하는 당사자가 파이프라인의 전체 코드를 공유할 의향이 있다면, Archive는 독점적 접근 기간을 연장하는 것에 개방적임

        Hacker News 의견

     * 2015년 경에 시작된 것으로 추정되는 이 컬렉션은 약 400만 권의 책을 포함하고 있으며, 이 중 많은 것들이 중복되어 있다.
     * 컬렉션의 출처는 DuXiu라는 회사로, 2000년대 초부터 중국의 도서관들과 협력하여 그들의 컬렉션을 스캔하였다.
     * 이 컬렉션에는 번역된 서양 교과서, 정치적 선전, 그리고 극도의 검열 이전에 출판된 문학 및 역사 서적이 혼합되어 있다.
     * 중국의 기술 회사들은 이 컬렉션에 접근할 수 있지만, 저작권 및 정치적 위험 때문에 사용하지 않을 수도 있다.
     * 사이트를 운영하는 사람은 똑똑하지만 경솔하다고 여겨지며, 잠재적인 법적 책임에 대한 우려가 제기되었다.
     * DuXiu는 자원으로서 매우 칭찬받고 있으며, 1년 내에 완전히 검색 가능해질 것에 대한 기대감이 있다.
     * 중국의 모든 책들이 중앙집중화되는 것은 AI 훈련에 유리하다고 여겨진다.
     * 이 컬렉션은 books3보다 40배 크다는 점이 저작권 및 영어권 외의 학문 연구 가능성에 대한 질문을 제기한다.
     * 정보 밀도가 높은 중국어에서의 토큰화 효율성에 대한 추측이 있다.
     * Language Models (LLMs)가 언어와 질의 언어에 관계없이 지식을 인코딩할 수 있는지에 대한 질문이 제기되었다.
     * 큰 중국 기업이 이 컬렉션을 경쟁하기 위해 OpenAI를 제치고 입찰할 수 있다는 기대감이 있다.
     * LLMs는 인터페이스 역할을 하여 중국어 정보 접근을 용이하게 할 수 있다.
     * 중국 문화에서의 복사에 대한 반응은 다르게 여겨지며, 종종 이를 존경의 형태로 보는 경향이 있다.
"
"https://news.hada.io/topic?id=11780","Windows 11 업데이트 23H2, 사용자의 IMAP 자격 증명 탈취 사건","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Windows 11 업데이트 23H2, 사용자의 IMAP 자격 증명 탈취 사건

        Hacker News 의견

     * 이메일 호스팅 업체로서, 고객들에게 새로운 아웃룩을 끄고 보안 문제를 설명하는 것이 번거로움. IMAP 연결 문제를 진단할 수 없는 상황에 대한 불만도 있음. 내부적으로 Azure 범위를 차단하여 기능을 의도적으로 ""손상""시킬지 논의 중임.
     * 365 이메일 API의 속도 제한과 IMAP 접근 제거는 데이터를 통제하려는 전략적 목표로 보임. 오피스 앱과 웹 액세스를 통해 원드라이브로 콘텐츠를 밀어넣는 것도 데이터 확보의 한 예로, 클라우드의 주된 목적이 더 많은 서비스 제공 없이 사용자로부터 더 많은 비용을 받아내는 것임.
     * Spark와 같은 다른 이메일 앱과의 차이점에 대한 질문.
     * 마이크로소프트가 사용자의 이메일을 AI 모델 훈련에 사용할 것이라는 예측. 구글을 따라잡기 위해 사용자의 신뢰, 개인정보 보호, 보안을 희생시키려는 시도로 보임.
     * Gmail의 ""계정"" 탭을 사용한 사람들은 구글에 자신의 비밀번호를 영구적으로 제공한 것이며, 이제 마이크로소프트가 웹 UI를 ""네이티브"" 앱으로 포장하자 모두가 놀라고 있음. 2023년에 클라우드에서 부분적으로 실행되는 인터넷 연결 앱은 흔한 일이며, 특히 MS365와 AI와 관련된 경우 더욱 그렇다고 함.
     * 윈도우 사용자에게 남은 선택지는 Thunderbird 뿐인 것으로 보임.
     * '새로운' 아웃룩이 단순히 구식 Office 365 버전의 아웃룩 웹 액세스를 엘리먼트 래퍼로 사용하는 것으로 보임. 로컬 저장소나 IMAP 지원을 추가하지 않고 클라우드로 메일을 동기화하는 방식임. 나중에 유료 Office 365 구독으로 사용자를 '이전'시키려는 계획일 수도 있음.
     * BlackBerry가 과거에 했던 것과 비슷한 방식임. 개인정보 보호 측면에서는 불쾌하지만, 약 20년 동안 해결되지 않은 IMAP의 문제를 우회하는 데에는 효과적임.
     * 마이크로소프트가 사용자의 비밀번호를 훔치고 평문으로 서버로 터널링하는 것을 포함하여 무슨 일이든 면책권을 가지고 있음.
     * Deepl을 사용하여 PDF로 번역함. 번역이 훨씬 나아졌으며 이미지도 볼 수 있음.
"
"https://news.hada.io/topic?id=11785","결말로 바로 건너뛴 사건","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             결말로 바로 건너뛴 사건

웹 개발의 시작과 구글 경험

     * 8살에 친구와 함께 웹사이트 제작 시작, 2003년 당시 웹 2.0에 대한 소문이 있었음.
     * 도서관에서 DHTML에 대해 배우고, 모바일 앱 시장은 없었으며, eBay와 Google과 같은 웹사이트가 컴퓨터 세계에서 가장 흥미로운 일이었음.
     * 친구와 함께 기본적인 웹 페이지를 만들며, 웹 게임 제작에 필요한 것은 몇 개의 링크뿐이었음.

구글의 성장과 개인적 발전

     * 구글이 실시간으로 ""웹 규모"" 회사로 성장하고 있었으며, 직원들에게 풍성한 보상을 제공함.
     * 고등학교 때 개인 블로그를 운영하며 HTML과 CSS를 직접 작성하고, Paint로 그래픽도 직접 만듦.
     * 가족들은 언젠가 구글에서 일할 것이라고 예상했고, 구글은 프로그래머 경력의 정점으로 여겨짐.

실리콘밸리 스타트업에서의 경험

     * 컴퓨터 과학 학사 졸업 후 구글로부터 채용 제안을 받았으나 최종 합격하지 못함.
     * 실리콘밸리의 스타트업에서 일하며 좋은 워크-라이프 밸런스와 유능한 동료들과 함께 일함.
     * 창립 엔지니어 옆에서 일년 동안 배운 것이 그 어느 때보다 많았음.

AI/LLM 스타트업에서의 성장

     * 팬데믹 동안 AI/LLM 분야의 급성장하는 스타트업으로 이직함.
     * 8개월 만에 수천 명의 가입자와 수백만 달러의 ARR을 달성하고, 모든 것을 처음부터 다시 작성함.
     * 신속한 피드백을 통해 전문가가 되는 데 중요한 역할을 함.

구글로의 복귀와 실망

     * 구글로부터 다시 채용 제안을 받고 L4 SWE 포지션에 합격함.
     * 팀에 합류했지만 기술 리더가 사임하고, 매니저는 이메일에 답변하지 않으며, 동료들은 잇따라 퇴사함.
     * 잘못된 버전의 팀에 합류했다는 것을 깨닫고, 인증 기관을 관리하는 인접 팀으로 전환함.

관리 문제와 회사 문화

     * 웹 프로젝트는 다른 부서에서 관리하고 있었으며, ""점선 관리자""에게 할당됨.
     * 새로운 작업을 시작했지만, 점선 관리자가 관리를 요구하며, 직접 매니저와 충돌함.
     * 직접 매니저는 남성의 외로움을 상업화하는 미래의 섹스 로봇에 대해 상상함.

구글에서의 교훈과 결론

     * 구글에서의 경험을 통해 돈이나 영향력 있는 작업보다는 열심히 일하여 성장하고자 하는 것을 깨달음.
     * FAANG은 배움의 장소가 아니라 돈을 버는 방법이었으며, 실리콘밸리에 온 목적은 돈을 버는 것이 아니었음.

GN⁺의 의견

   이 글에서 가장 중요한 것은 개인의 경력 발전과 직장에서의 경험이 어떻게 그들의 가치관과 직업적 만족도에 영향을 미치는지에 대한 실제 사례를 제공한다는 점입니다. 이 글은 특히 소프트웨어 엔지니어링 분야에서 경력을 쌓고자 하는 사람들에게 흥미로울 것입니다. 그것은 구글과 같은 대기업에서 일하는 것이 항상 모든 사람에게 적합한 것은 아니며, 때로는 작은 회사나 스타트업에서 더 큰 성취와 만족을 느낄 수 있다는 중요한 메시지를 전달합니다.

        Hacker News 의견

     * 구글에서 리더십 성공의 주요 지표 중 하나는 당신이 관리하는 사람들의 수임
          + 한 회사에서 '회사 홈페이지'의 '우리에 대해' 섹션을 재설계하는 프로젝트에 참여한 경험 공유
          + 두 개의 하위 팀으로 나뉘어 한 팀은 맞춤형 CMS를 만들고, 다른 팀은 CMS에 입력된 데이터를 웹사이트 방문자에게 ""렌더링""
          + 프로젝트는 10-20명이 참여하여 1년 이상 걸림
          + 프로젝트의 목적은 사람들을 바쁘게 하고, 더 많은 사람을 고용하여 관리자의 팀 규모를 늘리고, 이를 통해 승진과 급여 인상을 얻는 것이었음을 나중에 깨달음
     * 구글에서 해고하는 것이 많은 서류 작업을 필요로 하기 때문에, 아무것도 하지 않고 12개월 동안 그냥 지낼 수 있다는 말을 들음
          + 이러한 ""제안""을 받아들일 의향이 있으며, 그 동안 오픈 소스 프로젝트에 참여할 수 있도록 허용한다면 구글의 이름으로라도 좋음
     * 구글에 대해 읽고 들은 모든 것이 매우 디스토피아적임
          + 다른 대형 기술 회사에서 일하며, 저자가 묘사한 경험과는 다른 긍정적인 경험을 가짐
          + 물론 모든 것이 완벽하지는 않지만, 다른 회사들에 비해 상당히 좋은 환경임
     * 주주로서 구글이 이런 식으로 운영된다는 것을 듣고 다른 사람들이 더 분노하지 않는 이유가 궁금함
          + 구글이 얼마나 관료적이고 정치적인지는 널리 알려진 사실
          + 대규모 연금 기금이나 자산 관리자라면, 구글이 인력을 50% 줄이면 어떤 일이 벌어질지, 관리자들에게 인력 증가가 왜 인센티브인지 이사회에 질문할 것임
     * 구글에 대해 아무런 악감정이 없지만, 해커 문화의 집단적 열망이 점차 감소하는 것은 아쉬움
          + 예전에는 대기업이 인수할 스타트업을 만드는 것이 꿈이었지만, 이제는 FAANG에 들어가 평생을 보내는 것이 최종 목표로 여겨짐
          + 해커 문화가 이제는 과도한 돈과 지위에 관한 것이 되었음
     * 구글은 큰 회사이며, 다양한 유형의 기술 직무가 존재함
          + 나쁜 관리자, 막다른 프로젝트가 있지만, 놀라운 문화를 가진 팀도 있음
          + 긍정적인 측면에서 일하고 있지만, 저자가 겪은 경험을 이해함
          + 저자가 경험에서 중요한 학습과 발전의 기회를 놓쳤을 수도 있음을 지적
     * 소프트웨어 엔지니어에게 회사 크기의 이상적인 범위는 50명에서 500명 사이임
          + 충분한 자율성을 가지고 배우며 좋은 관계를 구축할 수 있고, 관료적인 과정에 압도당하지 않음
          + 회사가 성장함에 따라 승진 기회도 있으며, 회사의 재정 상태나 워크-라이프 밸런스, 보상 및 혜택에 대해 걱정할 필요가 없음
          + FAANG에서 일하지 않고 기술 분야에서 일하는 것이 괜찮다는 생각에 안정을 찾음
     * 돈이 중요하지 않다고 말하는 것은 부자들이고, 구글이 중요하지 않다고 말하는 것은 전 구글 직원임
          + 구글에서 좋은 돈을 벌고 나서 전 구글 직원이 되는 특권을 갖게 되었다는 점을 간과하고 있음을 지적
     * 대기업에서는 인센티브가 이상할 수 있음
          + 한 상황에서 벤더가 40페이지짜리 PDF를 생성하는 데 거의 10만 달러를 추정했으나, 합리적인 제안이 나올 때까지 반발함
          + 원래 요청을 승인했다면 아무런 문제가 발생하지 않았을 것이며, 회사 자금을 절약하거나 책임감 있게 사용하는 관리자에게는 불리한 인센티브임을 깨달음
     * FAANG 인접 회사에서 일하며 정치적인 부분에 대해 준비가 되어 있지 않았음을 인정
          + 평균적인 직원이 이러한 최상위 회사에서 얼마나 치열하고 계획적인지 놀람
          + 가장 성공적인 엔지니어는 평범한 작업에 대해서도 자신을 잘 마케팅할 수 있는 사람들임을 깨달음
"
"https://news.hada.io/topic?id=11736","은행처럼 보는 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               은행처럼 보는 것

     * 은행 고객이 직면하는 일반적인 문제에 대한 기사: 은행 기관의 무질서하고 혼란스러운 특성
     * 은행의 원장 추적 능력과 고객과의 상호작용에서의 객체 지속성 부족
     * 고객이 직면하는 많은 문제를 초래하는 불인식, 불가해한 그림자 시스템이 필요한 공식적인 기록 보관 시스템 운영
     * 소프트웨어 개발, 규제 변경, 경쟁 압력으로 인해 추가된 계층이 있는 설계 및 우발적 요소의 조합인 은행 시스템
     * 문제 추적 및 책임 할당에서 티켓 시스템의 중요성 강조 기사
     * 은행 합병 시 복잡한 통합 계획을 초래하는 수십 년간의 은행업계 통합
     * Tier One, Tier Two, Tier Three로 은행 직원의 계층화에 대한 기사, 각각 다른 책임과 능력을 가짐
     * ""escalations"" 개념에 대한 기사, 티어링 시스템을 우회하는 은행의 의사결정자에게 도달하는 병렬 방법
     * 은행이 준수해야 하는 규정, 예를 들어 의심스러운 활동 보고서(SARs)의 비밀성 때문에 은행 고객이 직면하는 일부 문제에 대한 저자의 제안
     * 기술적 수정, 운영 역량 강화, 사회적 타협의 조합이 필요하며 은행 시스템의 개선이 시간이 걸릴 것이라는 기사의 결론

        Hacker News 의견

     * 고객이 반돈세탁 절차에 대한 고급 지식을 보일 경우, 일부 금융기관들이 의심스러운 활동 보고서(SAR)를 제출할 수 있음.
     * 금융기관에서의 운영 문제는 종종 깨진 작업흐름을 받아들이는 문화 때문에 보고되지 않고 해결되지 않음.
     * 은행 계좌를 불안정한 호스트처럼 취급하고 여러 계좌를 사용 준비해두는 것이 제안됨.
     * 기관 편향성 작동 방식을 이해하는 데 Patio11이 자원으로 추천됨.
     * 기사는 은행들이 종종 인수, 합병, 연방법 등 자신의 통제를 벗어난 요인들로 인해 무능해 보일 수 있다고 제안함.
     * ""Seeing Like a State""라는 책이 기관 작동 방식을 이해하는 데 추천됨.
     * 기사는 조직이 한정된 자원을 가진 팀으로 구성되어 있어 비효율성을 초래할 수 있다고 강조함.
     * 일부 은행들은 고객들에게 혼란과 불편을 초래하는 원장 추적에 있어서 충분히 효율적이지 않을 수 있음.
     * 은행들은 고객 서비스의 다른 계층 사이에서 맥락을 공유하는 데 어려움을 겪을 수 있음.
     * 기사는 은행들이 콜백 시스템과 같은 더 효율적인 고객 서비스 시스템을 도입하지 않는 것을 비판함.
"
"https://news.hada.io/topic?id=11747","고(Go), 컨테이너, 그리고 리눅스 스케줄러","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       고(Go), 컨테이너, 그리고 리눅스 스케줄러

     * 컨테이너 내 Go 애플리케이션: Go 개발자들은 종종 호스트 자원 독점 방지를 위한 CPU 제한이 필요한 컨테이너에 애플리케이션을 배포합니다.
     * Go 런타임과 CPU 제한: Go 런타임은 컨테이너의 CPU 제한을 본질적으로 인식하지 못해 과도한 사용 및 성능 문제를 초래할 수 있습니다.
     * Go 가비지 컬렉터(GC): Go의 GC는 동시에 실행되지만, 스윕 종료 및 마크 종료 중 데이터 무결성을 위해 짧은 '세계 정지' 일시 정지가 필요합니다.
     * 리눅스 스케줄러 - CFS: 리눅스의 완전 공정 스케줄러(CFS)는 CPU 시간을 비례적으로 할당하며, 프로세스는 허용된 코어에 상응하는 CPU 시간을 받습니다.
     * Go와 CFS의 문제점: Go는 CPU 코어당 하나의 OS 스레드를 생성하지만, 컨테이너의 CPU 제한을 무시하여 GC '세계 정지' 시간을 길게 만들 수 있습니다.
     * GOMAXPROCS 설정: GOMAXPROCS 환경 변수를 사용하여 Go의 OS 스레드를 컨테이너 CPU 제한과 일치시켜 GC 지연 시간을 줄일 수 있습니다.
     * GOMAXPROCS 자동화: Uber의 automaxprocs 라이브러리는 컨테이너 제한에 기반하여 GOMAXPROCS를 자동으로 설정하여 구성을 단순화할 수 있습니다.
     * 미래의 Go 런타임 개선: Go 런타임에 자동 CPU 제한 인식을 통합하기 위한 열린 GitHub 이슈가 있습니다.

   결론: 컨테이너 내 Go 애플리케이션의 효율적인 자원 사용과 성능 유지를 위해 CPU 제한과 GOMAXPROCS를 적절히 구성하는 것이 중요합니다.

        Hacker News 의견

     * 컨테이너 환경에서 CPU 한계 대신 CPU 예약 사용 논의
     * 컨테이너 내 애플리케이션의 잘못된 코어 수 감지 문제
     * Docker CFS cgroup 설정 상세 설명 및 --cpu-shares 사용 권장
     * 컨테이너 내 CFS 스케줄러 문제 경험 및 새 스케줄러에 대한 호기심
     * Go의 GOMEMLIMIT 도입 및 메모리 한계 자동 설정 도구(automemlimit) 언급
     * Kubernetes 클러스터 내 Go 배포의 CPU 제한 관리 과제 공유
     * ko 도구 유지 관리자의 프로젝트 언급에 대한 감사 표시
     * Go 런타임의 CGroups 한계 인식 가능성 및 다른 런타임의 유사 행동에 대한 질문
     * 안전 지점 도달 전 동시 작업 수행을 통한 GC 지연 시간 단축 논의
     * .NET CLR 팀의 컨테이너 환경에서의 유사 시나리오 조정 내용 언급
"
"https://news.hada.io/topic?id=11719","GPTs - ChatGPT의 커스텀 버전","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         GPTs - ChatGPT의 커스텀 버전

     * 특정 목적을 위해 생성된 ChatGPT의 사용자 정의 버전인 GPTs 공개.
     * 기존에 있던 맞춤형 지침을 개선하여 매번 동일한 지침을 ChatGPT에 입력하지 않고도 더 많은 제어를 가능하게 함.
     * 보드게임의 규칙을 배우거나 자녀에게 수학을 가르치는 등 목적에 맞는 채팅 가능.
     * GPT Store가 이번 달 말 출시되어 사용자가 생성한 GPT를 공개적으로 공유할 수 있음.
          + 원하는 GPT를 검색하고, 일반적인 상점처럼 순위표와 추천이 있을 것.
          + 앞으로 몇 달 안에 사용하는 사람에 따라 이익을 얻을 수도 있음.
     * 내장된 기능뿐만 아니라 외부 API에 GPT를 통합하는 것도 가능.
          + 플러그인의 뒤를 잇는 기능이 될 것.
     * 기업 고객은 내부 전용 GPT를 배포할 수 있음.
          + ChatGPT Enterprise의 커스텀 버전으로 비즈니스에 맞는 GPT를 만들거나, 독점 데이터를 이용한 GPT를 만들기 가능.
     * 추가로 ChatGPT Plus는 2023년 4월까지의 데이터로 훈련됨.

   스토어가 어떻게 동작할지 새로운 앱스토어의 탄생이 될지 주목됩니다.
     * HN 스레드

   어제 올라온 내용인데 놓친 것 같네요.
   이제 ChatGPT도 커스터마이징을 제대로 지원하는 것 같습니다.

   옛날에 나왔던 플러그인 기능도 이번에 공식적으로 통합하는 것 같네요.

   빨리 DnD 마스터 해줄 수 있는 GPT가 나오길 기대합니다...!
   (코드 인터프리터까지 통합해서 진짜 찐 랜덤 주사위까지 구현하면... +_+)
"
"https://news.hada.io/topic?id=11712","실험실에서 변형된 모기를 방출한 후 뎅기열 발생률 급감","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     실험실에서 변형된 모기를 방출한 후 뎅기열 발생률 급감

     * 실험실에서 개조된 모기를 방출한 후 뎅기열 비율이 크게 감소한 것에 대한 기사
     * 뎅기열, 지카, 황열 등의 질병을 퍼뜨리는 알로프트 모기가 볼바키아 세균에 감염되어 질병 전파 능력이 감소
     * 세계 모기 프로그램이 볼바키아에 감염된 모기를 콜롬비아 아부라 밸리의 세 도시에 방출, 뎅기열 감염률 97% 감소
     * 프로그램의 가장 큰 방출은 벨로, 메데인, 이타구이의 콜롬비아 도시에서 이루어졌으며, 2022년 4월까지 벨로와 이타구이의 모든 모기 중 80%, 메데인의 60%가 감염
     * 이러한 감염 모기의 도입은 뎅기열 사례의 크게 감소와 관련이 있으며, 각 도시에서 10년 전에 비해 최대 97% 감소
     * 메데인에서의 사례 대조 연구에서 감염 모기의 배치와 뎅기열 사례 감소 사이에 인과 관계를 발견, 모기가 방출된 이웃에서 뎅기열이 47% 감소
     * 유사한 실험들이 전 세계적으로 실시되었으며, 인도네시아 요기야카르타에서 뎅기열 사례가 77% 감소하고, 브라질에서 질병 부담이 38% 감소
     * 세계 모기 프로그램의 방법이 ""한 번이면 충분""한 성격을 가지고 있다는 것이 장점으로 여겨지며, 볼바키아 모기가 원래의 모기 집단에 도입되면 그곳에 머무름
     * 그러나 뎅기열 병원체가 볼바키아 세균에 적응할 수 있어 장기적으로 방법이 효과가 없어질 수 있다는 우려가 있음
     * 세계 모기 프로그램의 방법은 실행하는 데 비용이 많이 들며, 뎅기열 감소가 볼바키아에 감염된 모기에만 기인하는지 여부는 아직 불확실
     * 세계 모기 프로그램은 운영을 확대할 계획이며, 매년 약 50억 마리의 모기에 볼바키아를 감염시킬 브라질에 공장을 건설할 계획

        Hacker News 의견

     * 실험실에서 개조된 모기의 방출이 뎅기열 감소에 크게 기여했으며, 특히 뎅기열이 만연한 말레이시아와 같은 국가에서는 큰 소식으로 받아들여졌다.
     * 뎅기열에 가장 크게 영향을 받는 말레이시아, 싱가포르, 인도와 같은 열대 국가의 대학 연구소에서 이러한 연구가 더 인기가 없는 이유에 대한 의문이 제기되었다.
     * 이러한 실험실에서 개조된 모기에 사용된 Wolbachia 박테리아는 다른 바이러스성 질병의 발병을 막는 등 다양한 효과를 가지고 있다.
     * 비슷한 방법이 농업 산업을 위협하는 비원산지 종의 수컷을 이기기 위해 불임 수컷을 방출하는 로스앤젤레스의 과일 파리에서 사용되고 있다.
     * GMO 작물의 예를 들어, 이러한 개입의 잠재적인 예상치 못한 결과에 대한 우려가 제기되었으며, 글리포세이트 내성 잡초의 진화로 인한 제초제 사용 증가를 언급하였다.
     * 뎅기열의 사망률이 낮음에도 불구하고, 특히 빈곤 지역에서는 중요한 건강 문제로 여겨진다.
     * 미국을 벗어나지 않은 캘리포니아 주민들 중에서 뎅기열 환자가 보고되었다.
     * Wolbachia는 많은 바이러스에 의한 감염을 막는 모기의 ""건강한 장내 미생물""로 설명되었다.
     * 현재 뎅기열에 걸린 한 사람의 댓글을 통해 더 많은 지역에서 이러한 ""좋은 모기""의 방출을 촉구하는 목소리가 나왔다.
     * 인간에게 해로운 종을 고의적으로 멸종시키는 것의 윤리적 함의에 대한 논쟁이 있다.
     * 이 방법을 통한 뎅기열 감소 과정은 10년이라는 시간이 언급된 만큼 장기적인 것으로 보인다.
"
"https://news.hada.io/topic?id=11728","Apple 개발자들의 'Feedback Assistant' 보이콧","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Apple 개발자들의 'Feedback Assistant' 보이콧

     * 애플 개발자인 Jeff Johnson이 2023년 11월 6일부터 애플의 Feedback Assistant에 대한 보이콧을 조직하고 있다.
     * 이 보이콧은 Feedback Assistant에 대한 새로운 피드백을 제출하고, 문제점을 나열하며 참가자가 문제가 해결될 때까지 보이콧할 의도를 명시하는 것을 포함한다.
     * 개발자들은 애플이 이 문제들을 해결하지 않는 한 새로운 피드백을 제출하지 않도록 권장된다.
     * 이 보이콧은 개발자들이 소셜 미디어, 블로그, 팟캐스트 또는 애플의 다른 공개 버그 보고 시스템에 보고서를 제출하는 것을 방해하지 않는다.
     * 이 보이콧의 주요 목표는 Johnson이 지금까지 본 가장 적대적인 버그 보고자로서 Feedback Assistant에 특정 변경을 가져오는 것이다.
     * Johnson은 애플이 보고된 버그를 재현할 수 있는지 여부를 말하거나 거부하는 것, 피드백을 제출한 사람의 동의 없이 피드백을 닫는 것, 애플이 버그를 수정하지 않았음에도 불구하고 개발자들에게 최신 베타로 피드백을 ""검증""하도록 요구하는 것, 그리고 웹에서 피드백을 제출할 수 없는 능력 등 Feedback Assistant와 관련된 여러 문제를 나열한다.
     * Johnson은 애플이 외부 개발자의 시간보다 자신의 시간을 더 중요하게 생각하며, 그들의 시간을 낭비하는 데 대해 죄책감이 없는 것으로 보인다고 주장한다.
     * 이 보이콧은 애플이 개발자들을 대규모 무급 QA 노동력으로 활용하기 때문에 노동 파업으로도 표현될 수 있다.
     * 이 보이콧은 애플에 압력을 가해 Feedback Assistant를 개선하도록 하고, 개발자들에게 애플에 버그 보고서를 제출할 필요가 실제로 없다는 것을 보여주는 것을 목표로 한다.
     * Johnson은 애플이 Feedback Assistant와 관련된 문제를 해결하지 않기로 결정한다면, 그의 의도는 영원히 보이콧하는 것이라고 밝힌다.

        Hacker News 의견

     * 기사는 개발자들이 버그 보고에 대한 반응 부족으로 인해 Apple의 Feedback Assistant를 보이콧하는 것에 대해 논의한다.
     * 한 개발자는 자신들의 버그 보고 중 10%만이 답변이나 인정을 받는다고 추정하며, 이는 상세하고 재현 가능한 예시를 제공함에도 불구하다.
     * 반응이 없는 것은 상세한 버그 보고서를 작성하는데 시간을 투자하는 개발자들에게 좌절감을 준다.
     * 보이콧의 효과는 의문시되며, 상당한 수의 개발자들이 참여할 경우에만 작용할 것이라는 제안이 있다.
     * 개발자 파업 아이디어가 제안되었지만, 이는 잘 조직되고 많은 수의 존경받는 개발자들에 의해 지지되어야 한다는 제안이 있다.
     * 파업은 또한 Apple이 충족해야 할 명확하고 현실적인 목표와 이정표를 가져야 한다.
     * 일부 개발자들은 Apple의 버그 관리에 변화를 희망하며, 현재 상황을 좌절감을 주는 것으로 묘사한다.
     * Apple이 이 문제를 적절히 해결하지 않고 있다는 느낌이 있음에도 불구하고 그들의 자원이 있다.
     * 일부 개발자들은 Feedback Assistant 사용을 중단하였으며, 이를 시간 낭비로 보고 있다.
     * 비판은 또한 Apple의 개발자들에 대한 연간 $100의 수수료에도 향한다.
     * Feedback Assistant 앱 자체에 대한 불만이 있으며, 이는 자주 고장이 나는 것으로 보고되었다.
     * 일부 개발자들은 버그 보고 과정을 불투명하고 비생산적으로 묘사하며 Apple에게 전혀 버그 보고를 하지 않았다.
"
"https://news.hada.io/topic?id=11751","인터넷상 마지막 좋은 곳으로 자리 잡은 위키피디아","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      인터넷상 마지막 좋은 곳으로 자리 잡은 위키피디아

     * 위키백과의 진화: 영어 위키백과는 주류와 비주류 견해에 동등한 비중을 두던 플랫폼에서 가짜과학과 잘못된 정보를 적극적으로 반박하는 곳으로 발전함.
     * 내생적 변화: 위키백과 내부의 기관 변화는 외부 요인 없이, 비주류 콘텐츠를 지지하는 편집자들이 떠나거나 제거됨으로써 발생한 인구 감소 과정을 통해 이루어짐.
     * 중립적 관점(NPOV): 위키백과의 NPOV 규칙에 대한 논쟁, 즉 내용이 공정하고 편견 없어야 한다는 요구는 그 변화에 중요한 역할을 함. 비주류 콘텐츠를 배제하는 NPOV 해석을 지지하는 편집자들이 시간이 지남에 따라 영향력을 얻음.
     * 규칙의 모호성: 위키백과 지침의 모호성은 다양한 해석을 가능하게 하여 논쟁을 초래함. 이러한 논쟁의 해결은 반비주류 해석을 지지하는 방향으로 점차 이루어져 플랫폼의 콘텐츠를 변화시킴.
     * 권력 역학: 위키백과 초기의 논쟁은 권력 불균형을 만들어냄. 이 논쟁에서 승리한 편집자들은 더 많은 영향력을 얻어 시간이 지남에 따라 더 일관된 반비주류 입장을 취함.
     * 연구 방법론: 이 연구는 위키백과의 아카이브를 통한 질적 콘텐츠 분석과 과정 추적을 사용하여 콘텐츠와 규칙 해석의 변화를 문서화하고 설명함.
     * 위키백과의 거버넌스: 위키백과의 의사결정은 민주적으로, 편집자들이 내용과 규칙 변경에 대한 합의에 도달함. 분쟁 해결 메커니즘과 편집자 행동 규범은 콘텐츠의 안정성에 기여함.
     * 기관의 안정성 대 변화: 합의 필요성과 같은 안정성을 선호하는 구조적 편향에도 불구하고, 위키백과는 콘텐츠 접근 방식에서 상당한 변화를 경험함, 기관 내부의 변화 가능성을 강조함.
     * 위키백과의 중요성: 가장 인기 있고 신뢰받는 온라인 정보 출처 중 하나로서, 위키백과의 콘텐츠는 공공 담론에 상당한 영향을 미침, 그 진화가 특히 중대함.
     * 독특한 데이터 가용성: 위키백과의 투명한 편집 이력과 토론 로그는 기관 변화를 연구하는 데 풍부한 데이터 세트를 제공하며, 다른 조직과 기관에 적용될 수 있는 통찰력을 제공함.

        Hacker News 의견

     * 위키백과의 검증 중심 접근
     * 위키백과 내용의 객관성 변동성
     * 위키백과의 광고 부재와 수익 구조
     * 위키백과 내 ""카발""에 의한 편집자 배제 문제
     * Stack Overflow의 기여자 유지 설계
     * 위키백과의 의사과학 및 음모론 대응 입장
     * 위키백과 ""주변부"" 편집자 추방 논란
     * Sci-Hub, Library Genesis, 인터넷 아카이브의 지식 접근 기여
     * Stack Exchange, 특히 Math Stack Exchange의 질문과 답변 품질
     * 위키백과의 현대 사건 처리 비판
"
"https://news.hada.io/topic?id=11735","WeWork 파산 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              WeWork 파산 발표

     * 고성장 스타트업으로 알려졌던 위워크(WeWork)가 파산을 신청함
     * 뉴욕 기반의 이 회사는 뉴저지에서 제출한 11장 파산 신청서에서 자산과 부채가 각각 100억 달러에서 500억 달러 사이임을 밝힘
     * 위워크는 부채를 상환할 계획을 수립하는 동안 운영을 지속할 수 있음
     * 2023년 초 광범위한 부채 구조조정 계약을 체결했지만 이내 다시 문제에 직면함
     * 8월에는 회사의 운영 지속 가능성에 대해 ""상당한 의심""이 있다고 언급함
     * 이어 몇 주 후, 거의 모든 임대 계약을 재협상하고 ""수익성이 낮은"" 지역에서 철수하겠다고 발표함
     * 위워크의 부동산 포트폴리오는 6월 30일 기준으로 39개국에 777개의 위치에 이르렀으나, 여전히 수익성은 없음
     * 회사는 2021년 특수목적 인수회사(SPAC)와의 결합을 통해 상장되었으나, 계획했던 IPO는 2019년 투자자들의 우려로 인해 무산됨
     * 실패한 딜 이후 창업자 아담 노이만은 CEO에서 사임했고, 위워크의 가치 평가는 한때 470억 달러에 달했으나 크게 하락함
     * 팬데믹 이후 변경된 근무 습관으로 인해 다른 공유 오피스 공간 회사들도 어려움을 겪음; Knotel Inc.와 IWG Plc의 자회사들은 각각 2021년과 2020년에 파산을 신청함

   파산에 CEO가 중대한 영향을 끼쳤다고 하는데, 정작 CEO는 새로운 회사를 차렸다고 읽은 것 같네요. -_-...

   https://techrecipe.co.kr/posts/44678

   심지어 투자도 받았다는게..

   ......

        Hacker News 의견

     * WeWork의 파산과 그것이 미칠 수 있는 영향에 대한 기사
     * 일부 댓글러들은 WeWork가 프랜차이즈 모델로부터 이익을 얻을 수 있었을 것이라고 제안하며, 이는 부동산 관리 회사가 일시적으로 비어 있는 공간에 WeWork를 ""설치""할 수 있게 했다.
     * WeWork가 챕터 11 이후에 더 강력하게 나타날 것으로 예측되며, 이는 부채를 줄이고, 비수익 지점에 대한 임대를 매각하고, 지속적으로 이익을 내는 위치에 초점을 맞추는 것을 포함한다.
     * WeWork의 사용자들은 회사의 부채 감소와 제품에 대한 잠재적인 투자로 이익을 얻을 수 있다.
     * 상업용 부동산 경기 침체 기간 동안 임대 계약이 종료되면서 집주인들은 손실을 입을 수 있다.
     * 일부 업계 베테랑들은 WeWork의 사업 모델에 대해 혼란을 표현하며, 그 모델이 비논리적으로 보이는데도 불구하고 따라가야 한다는 강박감을 느꼈다.
     * WeWork와 과거의 시장 붕괴 사이에 비교가 이루어지며, 일부 댓글러들은 ""과도한 이야기""의 끝에 안도감을 표현한다.
     * 여러 댓글러들은 WeWork의 제품이 계속 존재하기를 희망하며, 이는 여행과 부가 프로젝트에 유용하다고 인용한다.
     * WeWork의 사무실의 품질과 디자인이 칭찬받으며, 일부는 이러한 공간의 손실과 ""음울하고 시끄러운"" 전통적인 사무 공간으로의 복귀를 애도한다.
     * 일부 댓글러들은 IPO가 소매업체에 투자자 손실을 전가하려는 시도였다고 제안한다.
     * 별도의 소유 구조와 높은 점유율을 가진 일본 버전의 WeWork가 파산에 영향을 받지 않을 수 있다고 언급된다.
"
"https://news.hada.io/topic?id=11699","일런 머스크의 xAi, 챗봇 AI Grok 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       일런 머스크의 xAi, 챗봇 AI Grok 발표

     * ""은하수를 여행하는 히치하이커를 위한 안내서""를 모델로 한 거의 모든 것에 답하는 AI
     * 약간의 재치로 질문에 답하도록 설계 되었으며, 반항적인 성향을 가지고 있음(유머를 싫어한다면 사용하지 말 것)
     * X(트위터)를 통해서 전세계에 대한 실시간 지식을 보유하고 있다는 것이 특이한 장점
     * 또한 대부분의 다른 AI가 거부하는 까다로운 질문에도 답할 수 있음
     * 아직 초기 베타이며 매주 빠르게 개선될 것

Grok을 구축하는 이유

     * xAI는 인류의 이해와 지식 탐구에 도움이 되는 AI 도구를 만들고자 함
     * Grok을 만들고 개선함으로써 다음과 같은 목표를 달성하고자 함
          + 피드백을 수집하여 모든 인류에게 최대한의 혜택을 줄 수 있는 AI 도구를 구축
               o 모든 배경과 정치적 견해를 가진 사람들에게 유용한 AI 도구를 설계하는 것이 중요하다고 믿음
               o 또한 법이 허용하는 범위 내에서 사용자에게 AI 도구의 권한을 부여하고자 함
               o Grok의 목표는 이러한 접근 방식을 공개적으로 탐구하고 시연하는 것
          + 연구와 혁신에 힘을 실어주기
               o Grok이 누구나 관련 정보에 빠르게 액세스하고, 데이터를 처리하고, 새로운 아이디어를 떠올릴 수 있도록 돕는 강력한 연구 조력자 역할을 하기를 바람
     * 우리의 궁극적인 목표는 AI 도구가 이해를 추구(Pursuit of Understanding)하는 데 도움을 주는 것

Grok-1 으로의 여행

     * Grok을 구동하는 엔진은 지난 4개월 동안 개발한 프론티어 LLM인 Grok-1 으로 그 시간동안 많은 반복을 거쳤음
     * xAI를 발표한 후 330억 개의 매개변수를 사용하여 프로토타입 LLM(Grok-0)을 훈련했음
     * 이 모델은 표준 LM 벤치마크에서 LLaMA 2(70B) 기능에 접근하지만 교육 리소스의 절반만 사용
     * 지난 두 달간 HumanEval 코딩 작업에서 63.2%, MMLU에서 73%를 달성하는 등 훨씬 더 강력한 최신 언어 모델인 Grok-1에 이르기까지 추론 및 코딩 기능을 크게 향상시켰음
     * 벤치마크에서 Grok-1은 ChatGPT-3.5와 Inflection-1을 포함한 동급의 다른 모든 모델을 능가하는 강력한 결과를 보여줌
     * GPT-4와 같이 훨씬 더 많은 양의 훈련 데이터와 컴퓨팅 리소스로 훈련된 모델만 Grok-1을 능가했음
     * 즉, xAI가 뛰어난 효율성으로 LLM을 훈련하는 데 있어 빠른 진전을 보이고 있음

Grok Early Access

     * 현재는 미국내 제한된 수의 사용자에게 Grok 프로토타입을 사용해보고 기능을 개선하는 데 도움이 될 귀중한 피드백을 제공할 수 있는 기회를 제공중
     * Waitlist 참여 가능
     * 이번 릴리스는 xAI의 첫 번째 단계에 불과. 앞으로 몇 달 안에 새로운 기능과 기능을 추가할 계획이며, 흥미로운 로드맵이 준비되어 있음

   소개 링크는 Grok의 URL인데 현재 Waitlist 만 받고 있습니다.
   위에 적은 소개글은 https://x.ai/ 에 ""Announcing Grok"" 이란 제목으로 올라와 있는데 별도 링크가 없이 인덱스 페이지 자체가 변경되었네요.
   SEO 관점에서 아주 안좋은 방식인데.. 이 쪽이 웹페이지 자체엔 생각이 없는건지 뭔가 제가 모르는 의도한바가 있는건지 잘 모르겠네요.
"
"https://news.hada.io/topic?id=11732","Show GN: 우리말 Wordle2","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Show GN: 우리말 Wordle2

   2년 전에 wordle이 화제였을 때 오픈소스 버전을 수정해서 만들었던 우리말 wordle을 이번에 Solidjs+Vite로 완전히 새로 만들었습니다.

   기존 우리말 wordle은 3음절 단어를 입력하고 자음 모음의 힌트를 화면에 띄워진 가상 키보드 자판에 표시하는 방식이었는데 이번에 자음 모음에 색을 칠하는 방식으로 바꾸었습니다. 덕분에 입력도 쉬워지고 키보드 자판으로 표시하던 힌트의 한계(같은 자모 컬러가 겹치는 문제 등)도 해결했습니다.

   요즘도 하루에 수백명이 사용하고 계셔서 제 마음의 짐도 해결할 겸, 만들어 보았습니다. 매일 정해진 1개의 단어를 맞추면 랜덤으로 제시되는 문제를 계속 풀 수도 있습니다.

   예전부터 재밌게 하던 우리말 wordle 참고하시라고 첨부합니다.
   https://kordle.kr/

   우리말 Wordle2 (2023.11.08)
   https://plan9.kr/wordle2/
   ⬜

   재밌네요!

   감사합니다

   예쁘네요! 메일로보다는 댓글로 가볍게 제 의견을 드리자면,
     * 화면에 키보드를 띄우고, 흰색 자모는 키보드에서 비활성화된 것처럼 처리하면 어떨까요? kordle이나 기존 wordle이 채택한 방법처럼요.
     * 결과 공유 창에서 웹사이트 링크를 표시할지 말지 선택할 수 있도록 해주시면 안될까요? 카톡으로 결과 공유 시 미리보기 링크가 함께 떠서요ㅠㅠ
       하지만 예뻐요! 어휘력 상승을 위하여!

   키보드 힌트가 없어져서 전보다 어려워졌는데 말씀해주신 아이디어를 약간 변형해 아직 사용되지 않은 자모를 알려주는 기능을 넣었습니다. 결과 공유는 그냥 클립보드에 복사되는 것이라서 붙여넣을 때 링크를 지워주시면 되겠습니다. 여러 공유 방법은 고민해보겠습니다

   의견 감사합니다.

   몇문제 풀어봤는데 어휘력이 부족한가.. 어렵구만요 x_x

   저도 좀 어렵습니다. 그만큼 맞췄을 때 기분이 좋네요 ㅋㅋ
"
"https://news.hada.io/topic?id=11733","나의 최고로 멋진 로봇 제작 [비디오]","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         나의 최고로 멋진 로봇 제작 [비디오]
"
"https://news.hada.io/topic?id=11723",""Bored Ape" 컨퍼런스 참석자들, 눈 통증과 시력 손실로 깨어나다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ""Bored Ape"" 컨퍼런스 참석자들, 눈 통증과 시력 손실로 깨어나다

     * Bored Ape NFT 소유자 회의 참석자들이 심한 눈 통증과 시력 손실을 경험한 사건에 대한 기사
     * ApeFest라는 회의는 Bored Ape Yacht Club의 모회사인 Yuga Labs가 11월 3일부터 5일까지 홍콩에서 주최했다.
     * 이 행사는 2021년에 크게 성장했지만 최근에 큰 폭락을 겪어 많은 투자자들이 큰 손실을 입은 Bored Ape NFTs의 소유자들만을 위한 독점 행사였다.
     * 참석자들은 레이저와 블랙라이트가 많이 사용된 공연 후 밤중에 깨어나 심한 눈 통증과 시력 손실을 보고했다.
     * 일부 참석자들은 의료 지원을 받아야 했으며, 한 사람은 무대의 UV 조명이 자신의 증상을 일으켰다고 주장했다. 이는 햇빛의 효과와 유사하다.
     * 이 사건은 이러한 행사에서의 안전 조치에 대한 우려를 높였다.

        Hacker News 의견

     * Bored Ape 컨퍼런스 참석자들이 녹색 레이저에 노출되어 눈 통증과 시력 손실을 경험했습니다.
     * 녹색 레이저는 IR 레이저를 주파수가 두 배인 크리스털을 통해 만들어지며, 이로 인해 IR이 녹색 빛으로 바뀝니다. 그러나 크리스털의 품질이 떨어지면 레이저는 가시광선과 다른 방향으로 보이지 않는 IR을 방출하여 눈에 손상을 줄 수 있습니다.
     * 약 2,250명의 사람들이 컨퍼런스에 참석했으며, 그 중 수십 명이 눈에 화상감과 시력 장애를 호소했습니다.
     * 이러한 상황에서 유용할 수 있는 UVC 노출을 검사하는 저렴한 카드가 있습니다.
     * 이 컨퍼런스는 이전에 레이브 프로모션과 메타버스 프로젝트에 참여한 Bored Ape Yacht Club (BAYC)의 프로모터들이 주최했습니다.
     * 일부는 이벤트에서 UV-C 블랙라이트가 사용되었을 수 있으며, 잠재적인 건강 위험을 인지하지 못했을 것이라 추측합니다.
     * 이 사건은 NFT와 암호화폐에 대한 비판을 이끌어냈으며, 일부는 이들로부터 멀리하라고 조언하고 있습니다.
     * 이벤트의 조직에 대한 질문이 제기되었으며, 특히 전문적인 무대와 조명 관리의 부재가 문제가 되었습니다.
     * 이 사건은 UVC (살균) 램프의 사용으로 인해 발생했을 수 있으며, 이는 화상과 눈 통증을 일으킬 수 있습니다.
     * 이 사건은 쇼의 조명 장치의 안전성과 참석자들이 잠재적 위험을 평가하는 책임에 대한 논의를 촉발했습니다.
"
"https://news.hada.io/topic?id=11750","소프트웨어 엔지니어 직업에 관한 이야기하지 않는 쓰디쓴 진실","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   소프트웨어 엔지니어 직업에 관한 이야기하지 않는 쓰디쓴 진실

     * 대학은 직업에 대해 준비해주지 않음: 대학교육은 이론적, 소프트웨어 엔지니어링 실무 미비
     * 그린필드 프로젝트는 거의 없음: 새 프로젝트보다 기존 복잡한 프로젝트 작업을 만나는게 대부분
     * 아무도 당신의 클린 코드에 신경쓰지 않음: 가치 제공에 집중
     * 때때로 무능한 사람들과 함께 일하게 될 것: 유능하거나 무능력한 동료 대면; 전문적 관리 필요
     * 몇시간씩 회의에 참석하는 것에 익숙해지기: 자주 회의가 진행되며 생산적인 것과 아닌 것 존재, 소통 중요
     * 꽤 많이 시간 추정을 요구할 것: 작업 완료 시간 추정은 일반적이며 까다로움; 실현 가능한 약속과 초과 성과 목표
     * 버그는 평생의 숙적이 될 것: 버그는 소프트웨어 개발의 상수임. 예상 및 준비 필요
     * 불확실성은 유독한 친구(toxic friends): 프로젝트 요구사항부터 직업 안정성까지 내재된 불확실성
     * 업무와 연결을 끊는 것은 거의 불가능: 특히 재택근무 시 업무로부터의 분리 어려움
     * 좋은 기술력보다 좋은 소프트 스킬을 통해 더 많은 이익을 얻을 수 있음: 기술적 기술보다 경력 발전에 소프트 스킬 더 가치

   결론: 소프트웨어 엔지니어링 분야는 도전적이며 현실적 문제 존재, 그러나 성장, 혁신, 유연한 근무 환경 기회 제공

   이제 AI시대가되었기에 과거와 같게 생각할 이유가 없게되었다 . .
   과거 실력은 백지창 1장의 차이에서 현재는 AI 프롬프트 한줄로 바뀌었다

   공부는 늘 스스로 하는것
   프로젝트는 언제나 카오스
   코드는 좀 더 카오스
   무능한건 알고보면 나
   회의는 언제나 회의적
   추정은 불가능
   버그는 최애
   불확실성이야 말로 진정한 확실성
   삶이 곧 일
   기술이 좋다면 팔다리가 편해지기는 함

     추정은 불가능

   그럼에도 불구하고 연습합시다! :muscle:

   크으...ㅠ

   이분에게 합격 목걸이를

        Hacker News 의견

     * 코드의 가독성과 유지보수성
     * 소프트웨어 공학의 성공 평가
     * 소프트웨어 공학의 다양한 작업
     * 기대 관리의 중요성
     * 기술적 업적 외 승진 요인
     * 소프트웨어 공학의 추정 능력
     * 업무 분리의 어려움과 워라밸
     * 소프트웨어 공학의 실제 업무 인식
     * 업무로부터의 분리와 번아웃 예방
     * 소프트웨어 공학의 보상과 근무 조건
     * 애자일 방법론의 부담
     * 소프트웨어 공학 역량의 상대성
"
"https://news.hada.io/topic?id=11743","[2023/10/30 ~ 11/07] 이번 주의 주요 ML 논문 (Top ML Papers of the Week","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     [2023/10/30 ~ 11/07] 이번 주의 주요 ML 논문 (Top ML Papers of the Week

   ##개요
     * DAIR.AI에서 매주 공개하는 ML 논문들에 대한 글을 자동 번역해보았습니다.
     * 이번 주에 제출된 논문들은 대규모 언어 모델(Large Language Models, LLMs) 및 이들의 성능 평가에 초점을 맞춘 연구들입니다. 특히 'Evaluating LLMs', 'LLMs for Chip Design', 'Efficient Context Window Extension of LLMs', 'Enhancing LLMs by Emotion Stimuli' 등의 논문에서는 LLM의 다양한 적용 및 최적화 방안이 논의되고 있다는 점을 확인할 수 있었습니다.
     * 이러한 추세는 최근 몇 년간 인공지능 분야에서 LLM가 가지는 중요성이 급격히 증대되고 있음을 반영합니다. 특히 OpenAI의 GPT 시리즈와 같은 선도적인 모델들이 다양한 자연어 처리(NLP) 작업에서 인상적인 성과를 보여줌으로써, 연구자들은 이러한 모델들을 더욱 발전시키거나 새로운 문제에 적용하기 위한 연구에 집중하고 있습니다. 이와 함께 모델의 효율성을 향상시키고, 감정이나 상황적 문맥과 같은 요소들을 이용하여 모델의 입출력을 더욱 풍부하게 만드는 방안에 대한 관심도 높아지고 있습니다.
     * 또한, 'Next Generation AlphaFold'와 같은 논문에서는 LLM이 아닌 다른 맥락에서, 구조생물학과 같은 전문 분야에 기계 학습 방법론을 적용함으로써 혁신적인 접근 방식을 모색하고 있는 것으로 보입니다. 이러한 연구 추세는 기계 학습과 딥러닝 기술이 단순히 이론적인 발전을 넘어 실제 산업, 과학, 의학 등 여러 분야에서 구체적인 애플리케이션으로 발전하고 있음을 시사합니다.


  희박한 관측 자료로부터 일기 예보를 위한 딥 러닝 / Deep Learning for Day Forecasts from Sparse Observations

    논문 소개

     * 관측 기반 모델이 잘 예측할 수 있는 리드 타임 범위와 변수를 모두 확장하는 최첨단 신경 기상 모델로, 밀집된 데이터 센서와 희박한 데이터 센서 모두에서 학습하여 강수량, 바람, 온도 및 이슬점에 대해 최대 24시간 전에 예측을 수행합니다.

     A state-of-the-art neural weather model that extends both the lead time range and the variables that an observation-based model can predict well; learns from both dense and sparse data sensors and makes predictions up to 24 hours ahead for precipitation, wind, temperature, and dew point.

    논문 초록

     * 심층 신경망은 기상 조건 모델링을 위한 대안적인 패러다임을 제공합니다. 데이터가 확보되면 1초 이내에 예측을 내리고 매우 높은 시간적, 공간적 해상도로 예측할 수 있는 능력과 대기 관측에서 직접 학습할 수 있는 능력은 이러한 모델의 고유한 장점 중 일부에 불과합니다. 가장 충실도가 높고 지연 시간이 가장 짧은 대기 관측 데이터를 사용하여 학습된 신경 모델은 지금까지 최첨단 확률론적 수치 기상 예측 모델과 비교했을 때 강수량이라는 유일한 변수에 대해서만 최대 12시간의 리드 타임으로 우수한 성능을 달성했습니다. 이 논문에서는 관측 기반 신경 모델이 잘 예측할 수 있는 변수와 리드 타임 범위를 모두 크게 확장한 MetNet-3을 소개합니다. MetNet-3는 조밀하고 희박한 데이터 센서를 모두 학습하여 강수량, 바람, 온도 및 이슬점에 대해 최대
       24시간 전에 예측합니다. MetNet-3는 매우 희박한 대상에 대한 네트워크 학습에도 불구하고 암시적으로 데이터 동화를 포착하고 공간적으로 조밀한 예측을 생성하는 핵심 밀도화 기법을 도입합니다. MetNet-3는 각각 최대 2분과 1km의 높은 시간적, 공간적 해상도와 낮은 작동 지연 시간을 제공합니다. MetNet-3는 CONUS 지역에서 최대 24시간 동안 HRRR 및 ENS와 같은 최고의 단일 및 다중 멤버 NWP를 능가하여 관측 기반 신경망 모델의 새로운 성능 이정표를 세웠습니다. MetNet-3는 현재 운영 중이며 다른 모델과 함께 Google 검색에서 예보를 제공하고 있습니다.

     Deep neural networks offer an alternative paradigm for modeling weather conditions. The ability of neural models to make a prediction in less than a second once the data is available and to do so with very high temporal and spatial resolution, and the ability to learn directly from atmospheric observations, are just some of these models' unique advantages. Neural models trained using atmospheric observations, the highest fidelity and lowest latency data, have to date achieved good performance only up to twelve hours of lead time when compared with state-of-the-art probabilistic Numerical Weather Prediction models and only for the sole variable of precipitation. In this paper, we present MetNet-3 that extends significantly both the lead time range and the variables that an observation based neural model can predict well. MetNet-3 learns from both dense and sparse data sensors and makes predictions up to 24 hours ahead for precipitation, wind, temperature and dew point.
     MetNet-3 introduces a key densification technique that implicitly captures data assimilation and produces spatially dense forecasts in spite of the network training on extremely sparse targets. MetNet-3 has a high temporal and spatial resolution of, respectively, up to 2 minutes and 1 km as well as a low operational latency. We find that MetNet-3 is able to outperform the best single- and multi-member NWPs such as HRRR and ENS over the CONUS region for up to 24 hours ahead setting a new performance milestone for observation based neural models. MetNet-3 is operational and its forecasts are served in Google Search in conjunction with other models.

    논문 링크

   https://arxiv.org/abs/2306.06079

    더 읽어보기

   https://x.com/GoogleAI/status/1719774923294687636


  대규모 언어 모델 평가하기: 종합적인 서베이 논문 / Evaluating Large Language Models: A Comprehensive Survey

    논문 소개

     * 다양한 유형의 평가, 데이터 세트, 기법 등에 대한 토론을 포함하여 LLM 평가에 대한 포괄적인 서베이(100페이지 이상)를 제공합니다. #llm-survey #llm-evaluation

     A comprehensive survey (100+ pages) on evaluating llms, including discussions about the different types of evaluations, datasets, techniques, and more.

    논문 초록

     * 대규모 언어 모델(LLM)은 광범위한 작업에서 놀라운 기능을 입증했습니다. 큰 관심을 끌며 수많은 다운스트림 애플리케이션에 배포되었습니다. 하지만 양날의 검과 같이 LLM에는 잠재적인 위험도 존재합니다. 개인 데이터가 유출되거나 부적절하고 유해하거나 오해의 소지가 있는 콘텐츠가 생성될 수 있습니다. 또한, LLM의 급속한 발전으로 인해 적절한 보호 장치가 없는 초지능 시스템의 출현 가능성에 대한 우려도 제기되고 있습니다. LLM의 역량을 효과적으로 활용하고 안전하고 유익한 개발을 보장하기 위해서는 LLM에 대한 엄격하고 포괄적인 평가를 실시하는 것이 중요합니다. 이 설문조사는 LLM 평가에 대한 종합적인 관점을 제공하기 위해 노력합니다. LLM에 대한 평가를 지식 및 역량 평가, 연계성 평가, 안전성 평가의 세 가지 주요 그룹으로 분류합니다.
       이 세 가지 측면에 대한 평가 방법론과 벤치마크에 대한 종합적인 검토와 더불어 전문 영역에서 LLM의 성과와 관련된 평가 개요를 정리하고, 역량, 정렬, 안전성 및 적용 가능성에 대한 LLM 평가를 포괄하는 종합 평가 플랫폼의 구축에 대해 논의합니다. 이 포괄적인 개요를 통해 LLM 평가에 대한 더 많은 연구가 촉진되기를 바라며, 궁극적으로는 평가가 LLM의 책임 있는 개발을 유도하는 초석 역할을 하기를 바랍니다. 이를 통해 잠재적 위험을 최소화하면서 사회적 편익을 극대화하는 방향으로 발전할 수 있기를 기대합니다. 엄선된 관련 논문 목록은 https://github.com/tjunlp-lab/Awesome-LLMs-Evaluation-Papers 에서 확인할 수 있습니다.

     Large language models (LLMs) have demonstrated remarkable capabilities across a broad spectrum of tasks. They have attracted significant attention and been deployed in numerous downstream applications. Nevertheless, akin to a double-edged sword, LLMs also present potential risks. They could suffer from private data leaks or yield inappropriate, harmful, or misleading content. Additionally, the rapid progress of LLMs raises concerns about the potential emergence of superintelligent systems without adequate safeguards. To effectively capitalize on LLM capacities as well as ensure their safe and beneficial development, it is critical to conduct a rigorous and comprehensive evaluation of LLMs. This survey endeavors to offer a panoramic perspective on the evaluation of LLMs. We categorize the evaluation of LLMs into three major groups: knowledge and capability evaluation, alignment evaluation and safety evaluation. In addition to the comprehensive review on the evaluation
     methodologies and benchmarks on these three aspects, we collate a compendium of evaluations pertaining to LLMs' performance in specialized domains, and discuss the construction of comprehensive evaluation platforms that cover LLM evaluations on capabilities, alignment, safety, and applicability. We hope that this comprehensive overview will stimulate further research interests in the evaluation of LLMs, with the ultimate goal of making evaluation serve as a cornerstone in guiding the responsible development of LLMs. We envision that this will channel their evolution into a direction that maximizes societal benefit while minimizing potential risks. A curated list of related papers has been publicly available at https://github.com/tjunlp-lab/Awesome-LLMs-Evaluation-Papers.

    논문 링크

   https://arxiv.org/abs/2310.19736

    더 읽어보기

   https://x.com/omarsar0/status/1719351676828602502


  백본의 전투: 컴퓨터 비전 작업 전반에 걸친 사전 학습된 모델의 대규모 비교 / Battle of the Backbones: A Large-Scale Comparison of Pretrained Models across Computer Vision Tasks

    논문 소개

     * 다양한 컴퓨터 비전 작업을 위한 대규모 벤치마킹 프레임워크; 비전 트랜스포머(ViT)와 자율 지도 학습(SSL)이 점점 인기를 얻고 있지만, 대규모 학습 세트에 대해 지도 방식으로 사전 학습된 컨볼루션 신경망이 대부분의 작업에서 가장 우수한 성능을 보인다는 사실을 확인했습니다. #self-supervised #vision-transformer

     A large benchmarking framework for a diverse suite of computer vision tasks; find that while vision transformers (vits) and self-supervised learning (ssl) are increasingly popular, convolutional neural networks pretrained in a supervised fashion on large training sets perform best on most tasks.

    논문 초록

     * 신경망 기반 컴퓨터 비전 시스템은 일반적으로 사전 학습되거나 무작위로 초기화된 특징 추출기인 백본에 구축됩니다. 몇 년 전만 해도 기본 옵션은 ImageNet으로 학습된 컨볼루션 신경망이었습니다. 그러나 최근에는 다양한 알고리즘과 데이터셋을 사용하여 사전 학습된 수많은 백본이 등장했습니다. 선택의 폭이 넓어지면서 다양한 시스템의 성능이 향상되었지만, 실무자가 어떤 백본을 선택할지 정보에 입각한 결정을 내리기란 쉽지 않습니다. 배틀 오브 더 백본(Battle of the Backbones, BoB)은 분류부터 객체 감지, OOD 일반화 등 다양한 컴퓨터 비전 작업에 걸쳐 비전 언어 모델, 자율 학습을 통해 학습된 모델, 스테이블 디퓨전 백본 등 다양한 사전 학습된 모델 세트를 벤치마킹하여 이러한 선택을 보다 쉽게 할 수 있도록 지원합니다. 또한 BoB는 1,500개 이상의 학습
       실행에 대한 종합적인 분석을 통해 기존 접근 방식의 장단점을 조명함으로써 연구 커뮤니티가 컴퓨터 비전을 발전시킬 수 있는 유망한 방향을 제시합니다. 비전 트랜스포머(ViT)와 자가 지도 학습(SSL)이 점점 인기를 얻고 있지만, 대규모 학습 세트에 대해 지도 방식으로 사전 학습된 컨볼루션 신경망이 여전히 대부분의 작업에서 가장 우수한 성능을 보인다는 사실을 발견했습니다. 또한, 동일한 아키텍처와 비슷한 크기의 사전 학습 데이터셋에 대한 사과 대 사과 비교에서 SSL 백본의 경쟁력이 매우 높다는 것을 발견했으며, 이는 향후 작업에서 고급 아키텍처와 더 큰 사전 학습 데이터셋을 사용하여 SSL 사전 학습을 수행해야 함을 나타냅니다. 연구자들이 직접 백본을 테스트해 볼 수 있는 코드와 함께 실험의 원시 결과를
       여기(https://github.com/hsouri/Battle-of-the-Backbones)에 공개합니다

     Neural network based computer vision systems are typically built on a backbone, a pretrained or randomly initialized feature extractor. Several years ago, the default option was an ImageNet-trained convolutional neural network. However, the recent past has seen the emergence of countless backbones pretrained using various algorithms and datasets. While this abundance of choice has led to performance increases for a range of systems, it is difficult for practitioners to make informed decisions about which backbone to choose. Battle of the Backbones (BoB) makes this choice easier by benchmarking a diverse suite of pretrained models, including vision-language models, those trained via self-supervised learning, and the Stable Diffusion backbone, across a diverse set of computer vision tasks ranging from classification to object detection to OOD generalization and more. Furthermore, BoB sheds light on promising directions for the research community to advance computer vision by
     illuminating strengths and weakness of existing approaches through a comprehensive analysis conducted on more than 1500 training runs. While vision transformers (ViTs) and self-supervised learning (SSL) are increasingly popular, we find that convolutional neural networks pretrained in a supervised fashion on large training sets still perform best on most tasks among the models we consider. Moreover, in apples-to-apples comparisons on the same architectures and similarly sized pretraining datasets, we find that SSL backbones are highly competitive, indicating that future works should perform SSL pretraining with advanced architectures and larger pretraining datasets. We release the raw results of our experiments along with code that allows researchers to put their own backbones through the gauntlet here: https://github.com/hsouri/Battle-of-the-Backbones

    논문 링크

   https://arxiv.org/abs/2310.19909

    더 읽어보기

   https://x.com/micahgoldblum/status/1719719308882801045


  칩네모(ChipNeMo): 칩 설계를 위한 도메인 적응형 LLM / ChipNeMo: Domain-Adapted LLMs for Chip Design

    논문 소개

     * 도메인 적응 기술을 활용하여 산업용 칩 설계에 LLM 사용 제안, 어시스턴트 챗봇, 전자 설계 자동화, 버그 요약 등 칩 설계를 위한 다양한 애플리케이션 평가, 도메인 적응은 다양한 설계 작업에서 범용 모델보다 성능을 크게 향상, 래그에 도메인 적응형 llm을 사용하면 답변 품질이 더욱 향상됩니다.

     Proposes using llms for industrial chip design by leveraging domain adaptation techniques; evaluates different applications for chip design such as assistant chatbot, electronic design automation, and bug summarization; domain adaptation significantly improves performance over general-purpose models on a variety of design tasks; using a domain-adapted llm for rag further improves answer quality.

    논문 초록

     * ChipNeMo는 산업용 칩 설계를 위한 대규모 언어 모델(LLM)의 응용 분야를 탐구하는 것을 목표로 합니다. 기성 상용 또는 오픈소스 LLM을 직접 배포하는 대신 맞춤형 토큰화, 도메인 적응형 지속적 사전 교육, 도메인별 지침을 사용한 감독형 미세 조정(SFT), 도메인 적응형 검색 모델과 같은 도메인 적응 기술을 채택합니다. 칩 설계를 위해 엔지니어링 어시스턴트 챗봇, EDA 스크립트 생성, 버그 요약 및 분석 등 세 가지 선택된 LLM 애플리케이션에 대해 이러한 방법을 평가합니다. 그 결과, 이러한 도메인 적응 기법을 사용하면 평가 대상 애플리케이션 3종에서 범용 기본 모델에 비해 LLM 성능이 크게 개선되어 다양한 설계 작업에서 유사하거나 더 나은 성능으로 모델 크기를 최대 5배까지 줄일 수 있는 것으로 나타났습니다. 또한 이번 연구 결과는 현재 결과와
       이상적인 결과 사이에 여전히 개선의 여지가 있음을 보여줍니다. 유니티는 향후 도메인에 적합한 LLM 접근 방식에 대한 추가 연구가 이 격차를 줄이는 데 도움이 될 것으로 기대하고 있습니다.

     ChipNeMo aims to explore the applications of large language models (LLMs) for industrial chip design. Instead of directly deploying off-the-shelf commercial or open-source LLMs, we instead adopt the following domain adaptation techniques: custom tokenizers, domain-adaptive continued pretraining, supervised fine-tuning (SFT) with domain-specific instructions, and domain-adapted retrieval models. We evaluate these methods on three selected LLM applications for chip design: an engineering assistant chatbot, EDA script generation, and bug summarization and analysis. Our results show that these domain adaptation techniques enable significant LLM performance improvements over general-purpose base models across the three evaluated applications, enabling up to 5x model size reduction with similar or better performance on a range of design tasks. Our findings also indicate that there's still room for improvement between our current results and ideal outcomes. We believe that further
     investigation of domain-adapted LLM approaches will help close this gap in the future.

    논문 링크

   https://arxiv.org/abs/2311.00176

    더 읽어보기

   https://x.com/omarsar0/status/1720066328961159387


  YaRN: 대규모 언어 모델의 효율적인 컨텍스트 창 확장 / YaRN: Efficient Context Window Extension of Large Language Models

    논문 소개

     * 사전 학습된 컨텍스트 창을 넘어 llms의 컨텍스트 창을 효율적으로 확장하는 컴퓨팅 효율적인 방법을 제안하고, 미세 조정 데이터 세트의 제한된 컨텍스트를 넘어 외삽하여 최대 128k 컨텍스트 길이까지 모델을 재현했습니다. #yarn

     Proposes a compute-efficient method for efficiently extending the context window of llms beyond what it was pretrained on; extrapolates beyond the limited context of a fine-tuning dataset and models have been reproduced up to 128k context length.

    논문 초록

     * 회전식 위치 임베딩(RoPE)은 트랜스포머 기반 언어 모델에서 위치 정보를 효과적으로 인코딩하는 것으로 나타났습니다. 그러나 이러한 모델은 학습된 시퀀스 길이를 넘어서면 일반화하지 못합니다. 이러한 모델의 컨텍스트 창을 확장하는 컴퓨팅 효율적인 방법으로서 이전 방법보다 10배 적은 토큰과 2.5배 적은 학습 단계를 필요로 하는 YaRN(또 다른 RoPE 확장 방법)을 소개합니다. YaRN을 사용하면 LLaMA 모델이 원래의 사전 학습이 허용하는 것보다 훨씬 더 긴 컨텍스트 길이를 효과적으로 활용하고 외삽할 수 있으며, 컨텍스트 창 확장에 있어서도 이전의 최신 기술을 뛰어넘을 수 있음을 보여줍니다. 또한, 미세 조정 데이터 세트의 제한된 컨텍스트를 뛰어넘어 외삽할 수 있는 기능도 YaRN을 통해 입증되었습니다. YaRN을 사용하여 미세 조정된 모델은 최대 128k
       컨텍스트 길이까지 온라인(https://github.com/jquesnelle/yarn)에서 사용할 수 있으며 재생산되었습니다

     Rotary Position Embeddings (RoPE) have been shown to effectively encode positional information in transformer-based language models. However, these models fail to generalize past the sequence length they were trained on. We present YaRN (Yet another RoPE extensioN method), a compute-efficient method to extend the context window of such models, requiring 10x less tokens and 2.5x less training steps than previous methods. Using YaRN, we show that LLaMA models can effectively utilize and extrapolate to context lengths much longer than their original pre-training would allow, while also surpassing previous the state-of-the-art at context window extension. In addition, we demonstrate that YaRN exhibits the capability to extrapolate beyond the limited context of a fine-tuning dataset. The models fine-tuned using YaRN has been made available and reproduced online up to 128k context length at https://github.com/jquesnelle/yarn

    논문 링크

   https://arxiv.org/abs/2309.00071

    더 읽어보기

   https://x.com/theemozilla/status/1720107186850877662

   https://discuss.pytorch.kr/t/yarn-rope-llm-10-2-5-context-window-128k/…
     __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

  직접 공기 포집에서 흡착제 발견을 위한 Open DAC 2023 데이터셋 및 과제 / The Open DAC 2023 Dataset and Challenges for Sorbent Discovery in Direct Air Capture

    논문 소개

     * 흡착된 이산화탄소 및/또는 수소를 포함하는 8,800개 이상의 MOF 물질에 대한 38m 이상의 밀도 함수 이론(DFT) 계산으로 구성된 데이터셋을 소개합니다. 데이터셋에서 직접 DAC에 대한 특성을 식별하고, 데이터 세트로 최첨단 ML 모델을 학습하여 dft 수준에서 계산을 근사화하며, 향후 dac를 포함한 광범위한 애플리케이션의 mof를 식별하려는 노력에 중요한 기준이 될 수 있습니다.

     Introduces a dataset consisting of more than 38m density functional theory (dft) calculations on more than 8,800 mof materials containing adsorbed co2 and/or h2o; properties for dac are identified directly in the dataset; also trains state-of-the-art ml models with the dataset to approximate calculations at the dft level; can lead to important baseline for future efforts to identify mofs for a wide range of applications, including dac.

    논문 초록

     * 지구 기후 변화에 대응하기 위해서는 이산화탄소를 제거하는 새로운 방법이 시급히 필요합니다. 직접 공기 포집(DAC)은 주변 공기에서 직접 이산화탄소를 포집하는 새로운 기술입니다. 금속-유기 프레임워크(MOF)는 DAC를 위한 잠재적인 맞춤형 흡착제로 널리 연구되어 왔습니다. 그러나 탐색해야 할 화학적 공간이 방대하고 습도와 온도의 함수로서 물질을 이해해야 하기 때문에 DAC를 위한 유망한 MOF 흡착제를 발견하는 것은 어려운 일입니다. 퓨어스토리지는 최근 머신러닝(ML)의 혁신을 활용한 계산적 접근 방식을 탐구하고, 흡착된 CO2 및/또는 H2O를 포함하는 8,800개 이상의 MOF 재료에 대한 3800만 건 이상의 밀도 함수 이론(DFT) 계산으로 구성된 Open DAC 2023(ODAC23)이라는 데이터셋을 선보입니다. ODAC23은 현재 사용 가능한 DFT 수준의 정확도를 가진 MOF 흡착 계산
       데이터 중 가장 큰 데이터 세트입니다. 이 데이터셋은 흡착된 분자의 특성을 조사하는 것 외에도 MOF의 구조적 이완에 대한 풍부한 정보를 제공하며, 이는 DAC의 특정 응용 분야 외에도 다양한 맥락에서 유용하게 사용될 수 있습니다. DAC에 유망한 특성을 가진 많은 수의 MOF가 ODAC23에서 직접 식별되었습니다. 또한 이 데이터세트를 바탕으로 최첨단 머신러닝 모델을 학습하여 DFT 수준에서 근사 계산을 수행했습니다. 이 오픈소스 데이터 세트와 초기 ML 모델은 향후 DAC를 포함한 다양한 애플리케이션의 MOF를 식별하기 위한 노력에 중요한 기준이 될 것입니다.

     New methods for carbon dioxide removal are urgently needed to combat global climate change. Direct air capture (DAC) is an emerging technology to capture carbon dioxide directly from ambient air. Metal-organic frameworks (MOFs) have been widely studied as potentially customizable adsorbents for DAC. However, discovering promising MOF sorbents for DAC is challenging because of the vast chemical space to explore and the need to understand materials as functions of humidity and temperature. We explore a computational approach benefiting from recent innovations in machine learning (ML) and present a dataset named Open DAC 2023 (ODAC23) consisting of more than 38M density functional theory (DFT) calculations on more than 8,800 MOF materials containing adsorbed CO2 and/or H2O. ODAC23 is by far the largest dataset of MOF adsorption calculations at the DFT level of accuracy currently available. In addition to probing properties of adsorbed molecules, the dataset is a rich source of
     information on structural relaxation of MOFs, which will be useful in many contexts beyond specific applications for DAC. A large number of MOFs with promising properties for DAC are identified directly in ODAC23. We also trained state-of-the-art ML models on this dataset to approximate calculations at the DFT level. This open-source dataset and our initial ML models will provide an important baseline for future efforts to identify MOFs for a wide range of applications, including DAC.

    논문 링크

   https://arxiv.org/abs/2311.00341

    더 읽어보기

   https://x.com/AIatMeta/status/1720143486505341128


  머신러닝에서 대칭성을 적용, 발견 및 촉진하기 위한 통합 프레임워크 / A Unified Framework to Enforce, Discover, and Promote Symmetry in Machine Learning

    논문 소개

     * 머신러닝에서 대칭성을 적용, 발견 및 촉진하기 위한 통합된 방법론적 프레임워크를 제시하고, 이러한 아이디어를 다층 인식 및 기저 함수 회귀와 같은 ML 모델에 어떻게 적용할 수 있는지에 대해서도 논의합니다.

     Presents a unified and methodological framework to enforce, discover, and promote symmetry in machine learning; also discusses how these ideas can be applied to ml models such as multilayer perceptions and basis function regression.

    논문 초록

     * 대칭은 자연 전반에 걸쳐 존재하며 물리학 및 기계 학습에서 점점 더 중심적인 역할을 하고 있습니다. 푸앵카르 불변성과 같은 기본 대칭을 통해 지구상의 실험실에서 발견한 물리 법칙을 우어텐션 가장 먼 곳까지 외삽할 수 있습니다. 머신러닝 애플리케이션에서 이러한 외삽력을 달성하려면 대칭성이 필수적입니다. 예를 들어, 이미지 분류에서 번역 불변성을 사용하면 컨볼루션 신경망과 같이 매개변수가 적은 모델을 더 작은 데이터셋에서 학습하고 최첨단 성능을 달성할 수 있습니다. 이 논문에서는 머신러닝 모델에 대칭성을 통합하기 위한 통합된 이론적, 방법론적 프레임워크를 세 가지 방식으로 제공합니다: 1. 모델을 학습할 때 알려진 대칭성 적용, 2. 주어진 모델 또는 데이터 세트의 알려지지 않은 대칭성 발견, 3. 데이터에 충분한 증거가 있을 때
       사용자가 지정한 후보 그룹 내에서 대칭성을 깨는 모델을 학습하여 학습 중에 대칭성을 촉진하는 것. 이 세 가지 방법을 통해 머신러닝 모델을 학습할 때 대칭성을 강화할 수 있습니다. 이러한 작업은 벡터 다발에 대한 섬유 선형 Lie 그룹 작용과 관련된 Lie 도함수를 중심 객체로 하는 일반적인 수학적 프레임워크 내에서 캐스팅할 수 있음을 보여줍니다. 대칭을 강제하고 발견하는 것이 거짓말 도함수의 쌍선형 구조와 관련하여 이중적인 선형 대수적 작업임을 보여줌으로써 기존의 여러 결과를 확장하고 통합합니다. 또한 머신러닝 모델 학습 중 대칭성 위반을 불이익을 주는 Lie 도함수와 핵 규범 완화에 기반한 볼록 정규화 함수 클래스를 도입하여 대칭성을 촉진하는 새로운 방법을 제안합니다. 이러한 아이디어를 기저 함수 회귀, 동적 시스템 발견, 다층
       퍼셉트론, 이미지와 같은 공간 필드에 작용하는 신경망 등 다양한 머신러닝 모델에 어떻게 적용할 수 있는지 설명합니다.

     Symmetry is present throughout nature and continues to play an increasingly central role in physics and machine learning. Fundamental symmetries, such as Poincar'{e} invariance, allow physical laws discovered in laboratories on Earth to be extrapolated to the farthest reaches of the universe. Symmetry is essential to achieving this extrapolatory power in machine learning applications. For example, translation invariance in image classification allows models with fewer parameters, such as convolutional neural networks, to be trained on smaller data sets and achieve state-of-the-art performance. In this paper, we provide a unifying theoretical and methodological framework for incorporating symmetry into machine learning models in three ways: 1. enforcing known symmetry when training a model; 2. discovering unknown symmetries of a given model or data set; and 3. promoting symmetry during training by learning a model that breaks symmetries within a user-specified group of
     candidates when there is sufficient evidence in the data. We show that these tasks can be cast within a common mathematical framework whose central object is the Lie derivative associated with fiber-linear Lie group actions on vector bundles. We extend and unify several existing results by showing that enforcing and discovering symmetry are linear-algebraic tasks that are dual with respect to the bilinear structure of the Lie derivative. We also propose a novel way to promote symmetry by introducing a class of convex regularization functions based on the Lie derivative and nuclear norm relaxation to penalize symmetry breaking during training of machine learning models. We explain how these ideas can be applied to a wide range of machine learning models including basis function regression, dynamical systems discovery, multilayer perceptrons, and neural networks acting on spatial fields such as images.

    논문 링크

   https://arxiv.org/abs/2311.00212

    더 읽어보기

   https://x.com/eigensteve/status/1720115655050227911


  차세대 알파폴드 / Next Generation AlphaFold

    논문 소개

     * 알파폴드의 적용 범위를 크게 확장하는 새로운 알파폴드 반복에 대한 진행 상황을 보고하고, 단백질, 핵산, 저분자, 이온 및 변형 잔류물을 포함한 복합체의 결합 구조 예측 기능을 보여주며, 단백질-핵산 상호작용에 대해 전문 예측기보다 더 높은 정확도를 보여줍니다.

     Reports progress on a new iteration of alphafold that greatly expands its range of applicability; shows capabilities of joint structure prediction of complexes including proteins, nucleic acids, small molecules, ions, and modified residue; demonstrates greater accuracy on protein-nucleic acid interactions than specialists predictors.

    논문 링크

   https://storage.googleapis.com/deepmind-media/DeepMind.com/…

    더 읽어보기

   https://x.com/demishassabis/status/1719345831730368596


  대규모 언어 모델을 이해하고 감정적 자극으로 향상시킬 수 있습니다 / Large Language Models Understand and Can be Enhanced by Emotional Stimuli

    논문 소개

     * Flan-T5-Large, Vicuna, Llama 2, BLOOM, ChatGPT, GPT-4 등 다양한 인공지능을 사용하여 45개 과제에 대한 자동 실험을 수행하고, 종합적인 평가 시나리오를 나타내는 결정론적 및 생성적 애플리케이션을 아우르는 과제를 수행하며, 실험 결과 인공지능이 감성 지능을 파악하고 있음을 보여줍니다.

     Explores the ability of llms to understand emotional stimuli; conducts automatic experiments on 45 tasks using various llms, including flan-t5-large, vicuna, llama 2, bloom, chatgpt, and gpt-4; the tasks span deterministic and generative applications that represent comprehensive evaluation scenarios; experimental results show that llms have a grasp of emotional intelligence.

    논문 초록

     * 감성 지능은 우리의 일상적인 행동과 상호 작용에 큰 영향을 미칩니다. 대규모 언어 모델(LLM)은 다양한 작업에서 인상적인 성능을 보여주며 인공 일반 지능을 향한 진일보로 여겨지고 있지만, LLM이 심리적인 감정 자극을 진정으로 파악할 수 있는지는 아직 불확실합니다. 감정적 단서를 이해하고 이에 반응하는 것은 문제 해결에 있어 인간에게 뚜렷한 이점을 제공합니다. 이 논문에서는 인공신경망의 감정 자극 이해 능력을 탐구하기 위한 첫 번째 단계를 밟습니다. 이를 위해 먼저 Flan-T5-Large, Vicuna, Llama 2, BLOOM, ChatGPT, GPT-4 등 다양한 LLM을 사용하여 45개의 과제에 대한 자동 실험을 수행합니다. 이 작업은 포괄적인 평가 시나리오를 나타내는 결정론적 애플리케이션과 제너레이티브 애플리케이션에 걸쳐 있습니다. 자동 실험에 따르면 LLM은 감성 지능을
       이해하고 있으며, 감정적 프롬프트(원래 프롬프트와 감정적 자극을 결합한 ""감정 프롬프트""라고 함)를 통해 성능을 향상시킬 수 있습니다(예: 명령 유도에서 8.00%, BIG-Bench에서 115%의 상대적 성능 향상). 기존 지표를 사용하여 자동으로 평가할 수 있는 결정론적 과제 외에도 106명의 참가자를 대상으로 바닐라 프롬프트와 감성 프롬프트를 모두 사용한 생성형 과제의 품질을 평가하기 위한 인간 연구를 실시했습니다. 인간 연구 결과에 따르면 감정 프롬프트가 생성 작업의 성과를 크게 향상시키는 것으로 나타났습니다(성과, 진실성, 책임감 지표에서 평균 10.9% 향상). 이 글에서는 이모션프롬프트가 LLM에 효과적인 이유와 그 성과에 영향을 미칠 수 있는 요인에 대해 심도 있게 논의합니다. 저희는 EmotionPrompt가 인간과 LLM의 상호작용을 위한 학제 간 지식을
       탐구하는 새로운 길을 제시한다고 생각합니다.

     Emotional intelligence significantly impacts our daily behaviors and interactions. Although Large Language Models (LLMs) are increasingly viewed as a stride toward artificial general intelligence, exhibiting impressive performance in numerous tasks, it is still uncertain if LLMs can genuinely grasp psychological emotional stimuli. Understanding and responding to emotional cues gives humans a distinct advantage in problem-solving. In this paper, we take the first step towards exploring the ability of LLMs to understand emotional stimuli. To this end, we first conduct automatic experiments on 45 tasks using various LLMs, including Flan-T5-Large, Vicuna, Llama 2, BLOOM, ChatGPT, and GPT-4. Our tasks span deterministic and generative applications that represent comprehensive evaluation scenarios. Our automatic experiments show that LLMs have a grasp of emotional intelligence, and their performance can be improved with emotional prompts (which we call ""EmotionPrompt"" that
     combines the original prompt with emotional stimuli), e.g., 8.00% relative performance improvement in Instruction Induction and 115% in BIG-Bench. In addition to those deterministic tasks that can be automatically evaluated using existing metrics, we conducted a human study with 106 participants to assess the quality of generative tasks using both vanilla and emotional prompts. Our human study results demonstrate that EmotionPrompt significantly boosts the performance of generative tasks (10.9% average improvement in terms of performance, truthfulness, and responsibility metrics). We provide an in-depth discussion regarding why EmotionPrompt works for LLMs and the factors that may influence its performance. We posit that EmotionPrompt heralds a novel avenue for exploring interdisciplinary knowledge for human-LLMs interaction.

    논문 링크

   https://arxiv.org/abs/2307.11760

    더 읽어보기

   https://x.com/emollick/status/1720135672764285176


  FP8-LM: FP8 대규모 언어 모델 학습 / FP8-LM: Training FP8 Large Language Models

    논문 소개

     * FP8 LLM을 학습할 때 기울기 및 옵티마이저 상태와 같은 대부분의 변수를 LLM 학습에서 모델 정확도를 저하시키지 않고 하이퍼 파라미터를 변경할 필요 없이 저정밀 데이터 형식을 사용할 수 있음을 발견했습니다.

     Finds that when training fp8 llms most variables, such as gradients and optimizer states, in llm training, can employ low-precision data formats without compromising model accuracy and requiring no changes to hyper-parameter.

    논문 초록

     * 이 논문에서는 대규모 언어 모델(LLM)의 효율적인 학습을 위한 FP8 저비트 데이터 형식을 살펴봅니다. 우리의 핵심 인사이트는 LLM 학습에서 기울기 및 최적화 상태와 같은 대부분의 변수가 모델 정확도를 저하시키지 않고 하이퍼 파라미터를 변경할 필요 없이 저정밀 데이터 형식을 사용할 수 있다는 것입니다. 특히, 유니티는 LLM 학습을 위한 새로운 FP8 자동 혼합 정밀도 프레임워크를 제안합니다. 이 프레임워크는 LLM의 혼합 정밀도 및 분산 병렬 학습을 간소화하기 위해 세 가지 수준의 FP8 활용도를 제공합니다. 이 프레임워크는 8비트 그라디언트, 최적화 상태, 분산 학습을 점진적인 방식으로 통합합니다. 실험 결과에 따르면, H100 GPU 플랫폼에서 GPT-175B 모델을 학습하는 동안 유니티의 FP8 혼합 정밀도 학습 프레임워크는 실제 메모리 사용량을 42% 감소시켰을
       뿐만 아니라 널리 채택된 BF16 프레임워크(예: Megatron-LM)보다 64% 더 빠르게 실행되어 엔비디아 트랜스포머 엔진의 속도를 17% 능가하는 것으로 나타났습니다. 따라서 대규모 파운데이션 모델의 트레이닝 비용을 크게 절감할 수 있습니다. 또한, 유니티의 FP8 혼합 정밀도 학습 방법론은 일반적입니다. 사람의 피드백을 통한 LLM 명령어 튜닝 및 강화 학습과 같은 다른 작업에도 원활하게 적용할 수 있으므로 미세 조정 비용을 절감할 수 있습니다. 유니티의 FP8 저정밀 학습 프레임워크는 {https://github.com/Azure/MS-AMP}{aka.ms/MS.AMP}에서 오픈소스로 제공됩니다.

     In this paper, we explore FP8 low-bit data formats for efficient training of large language models (LLMs). Our key insight is that most variables, such as gradients and optimizer states, in LLM training can employ low-precision data formats without compromising model accuracy and requiring no changes to hyper-parameters. Specifically, we propose a new FP8 automatic mixed-precision framework for training LLMs. This framework offers three levels of FP8 utilization to streamline mixed-precision and distributed parallel training for LLMs. It gradually incorporates 8-bit gradients, optimizer states, and distributed learning in an incremental manner. Experiment results show that, during the training of GPT-175B model on H100 GPU platform, our FP8 mixed-precision training framework not only achieved a remarkable 42% reduction in real memory usage but also ran 64% faster than the widely adopted BF16 framework (i.e., Megatron-LM), surpassing the speed of Nvidia Transformer Engine by
     17%. This largely reduces the training costs for large foundation models. Furthermore, our FP8 mixed-precision training methodology is generic. It can be seamlessly applied to other tasks such as LLM instruction tuning and reinforcement learning with human feedback, offering savings in fine-tuning expenses. Our FP8 low-precision training framework is open-sourced at {https://github.com/Azure/MS-AMP}{aka.ms/MS.AMP}.

    논문 링크

   https://arxiv.org/abs/2310.18313

    더 읽어보기

   https://x.com/arankomatsuzaki/status/1718813303223222765


  원문

   https://nlp.elvissaravia.com/p/top-ml-papers-of-the-week-2e0
"
"https://news.hada.io/topic?id=11802","정치인들이 매입한 주식을 사는 트레이딩 봇, 2022년 5월 이후 20% 상승","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              정치인들이 매입한 주식을 사는 트레이딩 봇, 2022년 5월 이후 20% 상승

정치인 주식 거래를 따라하는 트레이딩 봇의 성공

     * 2022년 5월 출시된 트레이딩 봇은 정치인들이 구매하는 주식을 사는 전략을 사용함.
     * 이 전략은 출시 이후 20%의 수익률을 기록, 같은 기간 동안 시장은 제자리걸음.
     * 전략의 성공적인 움직임 중 몇 가지는 높은 수익을 가져옴.

  록히드 마틴

     * 2022년 10월 17일, 록히드 마틴 주식($LMT)을 매수함.
     * 이는 스콧 프랭클린 의원이 9월 12일에 최대 $115K를 구매한 후 10월 11일에 공개된 것에 따른 것임.
     * 매수 다음 날 록히드 마틴은 F-35 전투기에 대한 수요 증가로 예상보다 좋은 분기 매출을 발표함.

  채널어드바이저

     * 2022년 8월 22일, 채널어드바이저 주식($ECOM)을 매수함.
     * 이는 토미 터버빌 상원의원이 3월 8일부터 7월 14일까지 총 $665K 상당의 주식을 구매한 후에 이루어짐.
     * 한 달도 채 되지 않아 채널어드바이저가 커머스허브에 인수될 것이라는 발표가 있었고, 주가는 50% 이상 상승함.

  테슬라

     * 2022년 5월 15일, 테슬라 주식($TSLA)을 매수함.
     * 이는 토미 터버빌 상원의원, 조쉬 고트하이머 하원의원, 댄 뉴하우스 하원의원 등이 테슬라 주식을 구매한 후에 이루어짐.
     * 6월 20일에 매도하였고, 이 기간 동안 테슬라 주가는 64% 이상 상승함.

  NGL 에너지

     * 2022년 4월 10일, NGL 에너지 주식($NGL)을 매수함.
     * 이는 마크 그린 하원의원이 3월 24일에 최대 $250K 상당의 주식을 구매하고 4월 1일에 이를 공개한 후에 이루어짐.
     * 시장이 8% 상승한 동안 $NGL은 28% 이상 상승함.

최종 생각

     * 의회 구매 전략이 시장을 능가했음에도 불구하고, 약한 공시 규정으로 인해 성장이 제한될 수 있음.
     * 의회는 거래를 공개할 때까지 45일의 기간이 주어지며, 지연 공시에 대한 벌금은 단 $200임.
     * 의회가 자체 규제를 개선할 때까지 Quiver를 통해 최신 거래를 확인하고 전략을 추적할 수 있음.

GN⁺의 의견

   이 기사에서 가장 중요한 점은 정치인들의 주식 거래 정보를 활용하여 트레이딩 봇이 시장 평균을 상회하는 성과를 거두었다는 것이다. 이는 정치인들의 거래가 시장에 미치는 영향력과 정보의 가치를 보여주며, 투자 전략으로서의 가능성을 제시한다. 이러한 접근 방식은 투자자들에게 흥미로울 수 있으며, 특히 정치와 금융의 교차점에 관심이 있는 사람들에게 매력적인 주제가 될 수 있다.

        Hacker News 의견

     * S&P500 지수 펀드의 배당금을 고려한 계산기나 데이터 소스 찾기가 어려움
          + 2022년 5월에 S&P500 지수 펀드를 구매했다면, 구매일에 따라 약 18%의 수익률을 보임. 개인적으로 그다지 극적이지 않은 변동이라고 생각함.
     * 개인이 만든 대시보드: 의회의 개별 주식 거래 성능 추적
          + 관심 있는 사람을 위해 만든 대시보드는 의회의 주식 거래 성능을 추적함.
          + 수천 개의 공시 양식을 분석할 필요 없이 주식별로 거래를 검색할 수 있음.
          + 데이터의 약점으로, 수기로 제출된 공시는 현재 분석하지 않음을 언급. 대부분의 정치인은 쉽게 스크랩할 수 있는 전자 파일링을 하지만, 일부는 여전히 수기로 제출함. 이 문제를 해결하기 위한 방안을 모색 중이며, 곧 해결될 것으로 기대함.
     * threads.net 디스플레이 변경 요청
          + threads.net의 게시물 제목 옆에 사용자 이름이 표시되도록 트위터와 같은 디스플레이로 변경해달라는 요청.
     * 급진적인 제안: 내부 정보 유출을 감시하는 대신, 정치인과 연방 직원 모두에게 공평한 경기장을 제공
          + 미국 경제 전체를 모델로 하는 적어도 1,000개의 주식 포지션을 가진 수십 개의 국가 상호 기금을 만들 것을 제안.
          + 누구나 투자할 수 있지만, 모든 미국 연방 직원과 그들의 직계 가족은 다른 모든 포지션을 청산하고 오직 국가 기금만 보유하도록 요구.
          + 경제와 기금이 잘 운영되면 모든 연방 직원들이 이익을 얻음.
          + 기금 관리를 여러 기금 관리 회사들에게 분배.
     * 두 그래프의 변동성이 눈에 띄게 다름
          + 20%라는 숫자는 변동성이나 베타 같은 위험을 어떻게 상태하는지 명시하지 않는 한 의미가 없음.
     * 정치인의 거래와 그 거래의 공시 사이의 시간 차이를 잘 강조함
          + 정치인의 거래와 그들의 공시 사이에 대략 한 달의 지연이 있음을 강조.
          + 최근 몇 년간의 일일 거래 인플루언서의 공세를 겪은 후, 이러한 트윗(또는 스레드)에 나타난 데이터를 신뢰하는 데 개인적으로 매우 어려움을 겪음.
          + 이 실험의 동료 평가 버전을 보고 싶은 관심이 있음.
     * 이것을 합법으로 유지하고 기존 내부자 거래 법의 확장을 추구하지 않는 것에 대한 정당한 논리가 있는가?
          + 여기에 있는 인센티브는 매우 잘못되었음.
     * 1년은 아무것도 아님, 20년과 50년 후의 성과를 보자.
          + 단기적인 성과보다는 장기적인 성과를 보는 것이 중요함.
     * 개별 소매 투자자도 평균적으로 S&P를 초과하여 성과를 냄
          + 개별 소매 투자자의 평균 주식 포트폴리오는 2014년 초부터 약 150% 상승함. 이는 같은 기간 동안의 S&P 500의 약 140% 상승을 능가함.
     * 의회 거래 정보를 어떻게 얻는가?
          + 의회의 주식 거래 정보를 얻는 방법에 대한 질문.
"
"https://news.hada.io/topic?id=11704","고성능 JSON 파서 구축","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             고성능 JSON 파서 구축

     * Go 프로그래밍 언어를 사용한 고성능 JSON 파서 구축 과정에 대한 기사
     * 스트리밍 작업 지원, encoding/json 패키지와의 호환성, 할당 없거나 제한된 API 제공을 목표로 하는 프로젝트
     * JSON 파싱의 시간 복잡성에 대해 설명하며, 입력을 처리하는 데 걸리는 시간의 하한은 입력의 크기임을 강조하는 기사
     * 바이트 스트림을 JSON 토큰 스트림으로 변환하는 토큰화 과정에 대한 기사
     * JSON 파일에서 데이터를 읽는 과정을 설명하며, io.Reader 사용의 어려움을 강조하는 기사
     * bufio.Reader와 유사하게 작동하지만 API가 더 효율적인 byteReader 개념 소개하는 저자
     * 어떤 문자가 토큰이고 어떤 문자가 단순히 공백인지 식별하는 스캔 과정에 대한 기사
     * 핫 패스에서 함수 호출을 피함으로써 스캐너의 성능을 향상시키는 방법에 대해 저자가 설명
     * 토큰 시퀀스가 유효한지 확인하는 디코딩 과정에 대한 기사
     * 메소드를 직접 저장하고 직접 호출하는 계산된 goto를 사용함으로써 디코더의 성능을 향상시킬 수 있다는 저자의 제안

        Hacker News 의견

     * 고성능 JSON 파서 구축에 대한 상세 가이드 제공하는 기사
     * 저자는 JSON에 대해 명시적 토큰화가 필요하지 않으며, 파싱과 토큰화를 통합할 수 있다고 제안
     * 더 나은 성능을 위해 토큰화와 파싱에서 힙 할당을 피하는 것을 저자가 권장
     * JSON 라이브러리의 선택은 성능에 큰 영향을 미칠 수 있으며, 최대 3-10배의 차이가 날 수 있음
     * 직렬화 또는 역직렬화할 클래스가 컴파일 시간에 알려져 있다면, Jackson Java가 잘 작동하지만, 신중한 코딩과 프로파일링은 성능을 2배 향상시킬 수 있음을 기사에서 제안
     * 고성능 생산 환경에 대해, 저자는 Daniel Lemire의 작업이나 그것을 Go로 이식한 MinIO를 살펴보는 것을 권장
     * 저자는 또한 RapidJSON에서의 JSON 벤치마크 페이지를 언급
     * 토큰화에서 ""쓰레기 공장"" 문제에 대한 해결책을 논의하며, 이는 문자열 대신 byteslice에서 T로의 함수를 사용하는 것을 포함
     * 메모리 할당이 없고 매우 빠른 GraphQL 토큰화기와 파서를 구축하는 데 사용된 유사한 접근법을 저자가 언급
     * 저자는 계산된 goto라는 더 공간 효율적인 기법을 논의
     * 표준 라이브러리를 더 나은 API 디자인으로 개선할 수 있다고 저자가 제안하지만, 오류를 찾기 전에 구조를 반만 채우는 완전히 스트리밍 파서는 비현실적임
     * 대부분의 애플리케이션에서 전체 입력을 메모리에 가지고 있을 것으로 기대하는 것이 비현실적이라는 개념에 저자가 동의하지 않음
     * 기사는 Phil Pearl에게 감사의 인사를 전하며, GitHub의 Sonic 라이브러리를 살펴보는 것을 권장
"
"https://news.hada.io/topic?id=11717","혁명적인 CPU, 'Intel 80386'","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        혁명적인 CPU, 'Intel 80386'

     * 인텔 80386은 혁명적인 기능과 기술 산업에 미친 영향 때문에 인텔이 생산한 가장 중요한 CPU로 간주됩니다.
     * 80386은 산업 혁명을 일으킨 x86 계열의 첫 32비트 CPU였습니다.
     * 모토로라 68030보다 ""우아하지"" 않고, 신흥 RISC 칩보다 강력하지 않음에도 불구하고, 80386은 가장 중요한 CPU 중 하나로 간주됩니다.
     * 80386은 원래 인텔이 계획하지 않았지만, 70년대 후반에 임시 설계로 개발되었습니다.
     * 80386은 8086의 세그먼트 메모리 체계를 싫어하는 x86 고객들에게 최우선적인 ""플랫 메모리"" 공간을 처리하도록 설계되었습니다.
     * 80386은 완전한 32비트 CPU로, 기존 명령어 세트와 레지스터를 32비트로 단순히 확장하여 이진 호환성을 유지했습니다.
     * 80386은 1985년 10월에 소개되었고, 인텔이 386 칩의 유일한 공급원이 되었습니다.
     * 80386은 Xenix, OS/2, Windows, Linux와 같은 새로운 현대 OS가 x86 개인용 컴퓨터에서 처음으로 실행될 수 있게 하여 길을 닦았습니다.
     * 80386은 현대적이고 빠른 MMU와 다양한 운영 모드를 가진 기술적으로 훌륭한 칩으로, x86용으로 작성된 모든 소프트웨어와 호환되면서 4GiB의 플랫 메모리에 접근할 수 있게 했습니다.
     * 상업적으로, 80386은 시장에 x86이 여기에 머물러 있음을 확신시켜 IBM을 제쳤고, 신뢰할 수 있는 개방적인 대안이 있다는 것을 보여주었습니다.
     * 80386은 MMU에 대한 접근을 민주화하여, Windows를 통해 수백만 명의 사람들에게 현대 컴퓨팅을 접근 가능하게 하고, Linux의 개발을 위한 길을 닦았습니다.

        Hacker News 의견

     * Intel 80386 CPU 디자인은 제대로된 32비트 CPU인 Motorola 68000 및 m68020에 의해 크게 영향을 받았습니다.
     * 80386은 16바이트 명령 프리페치 큐 이상의 캐시가 없는 등 여러 가지 타협점이 있었으며, 원자적 명령이 없고, 8086과의 호환성을 위해 실제 모드 또는 VM86이 필요했습니다.
     * 80386은 중요한 칩이었지만, Intel이 x86과 경쟁하지 않거나, 또는 그 비용을 들여 다른 시장을 창출하려는 전략의 초기 징후를 보였습니다.
     * Intel은 주로 메모리 제조업체였으며, NVIDIA, AMD, ARM과의 경쟁으로 현재와 비슷한 위험한 상황에서 80386의 개발이 진행되었습니다.
     * 80386은 처음에 ""플랫 32비트""를 위해 설계되지 않았으며, 중요한 ""능력"" 아키텍처 기능을 선택하는 것이 목표였습니다.
     * 80386의 세그먼트 레지스터는 이제 기본+길이 필드와 실행 권한 제어를 가진 테이블로의 ""선택자"" 인덱스로, 4단계 권한 계층을 가진 OS를 지원하도록 설계되었습니다.
     * 386SX는 286과 비슷한 가격에 32비트 CPU를 제공함으로써 중요한 발전을 이루었으며, 이로 인해 더욱 저렴해졌습니다.
     * 286은 선배들에 비해 더 나은 IPC에도 불구하고 과소평가되었으며, 386은 클럭이 증가하기 시작하고 사람들이 32비트 기능을 사용하기 시작할 때까지 초기에는 별로였습니다.
     * 386은 많은 사람들이 첫 컴퓨터를 구입하기 직전에 출시되었으며, 저렴한 286 시스템을 선택한 사람들은 나중에 386에 투자하지 않은 것을 후회했습니다.
     * 386은 자주 언급되지 않는 터보 버튼 기능을 추가했습니다.
     * 286과 386은 Multics를 염두에 두고 설계된 것으로 보이지만, 하드웨어는 완벽하게 일치하지 않습니다.
     * Intel의 x86-S 제안과 같은 x86을 현대화하려는 시도에 대한 호기심이 있습니다. 이는 정리된 64비트 아키텍처를 위한 것입니다.
"
"https://news.hada.io/topic?id=11706","YouTube의 계획이 역효과를 불러, 사람들이 더욱 향상된 광고 차단기를 설치하고 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           YouTube의 계획이 역효과를 불러, 사람들이 더욱 향상된 광고 차단기를 설치하고 있다

     * YouTube의 최근 광고 차단기에 대한 단속으로 이러한 소프트웨어를 삭제하는 사용자가 급증했습니다.
     * 그러나 더 많은 사용자들이 YouTube의 경고를 우회할 수 있는 더 나은 광고 차단기를 찾고 있습니다.
     * 일부 사용자들은 YouTube의 광고 차단 노력을 피하기 위해 새로운 브라우저로 전환하고 있습니다.
     * YouTube의 광고 차단 노력은 작은 실험에서 전 세계적인 출시로 확장되었습니다.
     * Wired에서의 보고서에 따르면, 10월에 수십만 명의 사용자들이 광고 차단기를 삭제했는데, 이는 아마도 YouTube의 단속 때문일 것입니다.
     * 그럼에도 불구하고, 데이터는 YouTube의 탐지를 피할 수 있는 대체 광고 차단기를 설치하는 사람들의 수가 기록적으로 많다는 것을 보여줍니다.
     * 인기 있는 광고 차단기인 Ghostery는 지난 달 동안 설치 및 삭제 수가 3배에서 5배 증가했으며, 90% 이상의 삭제가 YouTube에서 소프트웨어가 실패한 때문입니다.
     * 또 다른 광고 차단기인 AdGuard는 10월 9일부터 달말까지 Chrome에서의 일일 삭제 수가 6,000개에서 11,000개로 증가했습니다.
     * 그러나 AdGuard의 유료 버전은 YouTube의 금지에 면역인 것으로 보이며, 사람들이 이를 인지하면서 사용자 수가 증가했습니다.
     * 일부 사용자들은 광고 없이 플랫폼에서 비디오를 실행할 수 있는 YouTube와 유사한 웹사이트인 Newpipe와 같은 솔루션을 찾고 있습니다.
     * 업계 전문가들은 YouTube의 광고 차단기를 막기 위한 노력이 더 복잡한 차단 전략과 의도치 않은 보안 구멍을 초래할 수 있다고 경고하고 있습니다.
     * uBlock Origin과 Adblock Plus와 같은 확장 프로그램은 Firefox에서 사용할 때 여전히 작동하며, Adblock Plus는 광고 차단 벽을 우회하는 방법에 대한 제안을 제공했습니다.
     * 사용자들에게 다른 선택지는 광고를 피하기 위해 YouTube Premium에 가입하는 것입니다.

        Hacker News 의견

     * 일부 독자들은 YouTube의 계획이 실패했다는 주장에 의문을 제기하며, 광고 수익에 미치는 영향을 알지 못하는 상황에서 이러한 주장을 내세우는 것은 성급하다고 주장합니다.
     * 다음 세대의 광고 회피 방법은 가짜 에이전트가 광고를 시청한 척 한 후, 사용자들이 나중에 시청할 비디오를 대기열에 넣는 것일 수 있다는 제안이 있습니다.
     * 일부 사용자들은 Firefox와 uBlock Origin과 같은 확장 프로그램을 사용하여 YouTube의 광고를 피하는 것을 권장하며, 다른 사용자들은 YouTube Premium을 구매하는 것을 제안합니다.
     * 사용자들은 uBlock Origin의 필터 목록을 정기적으로 업데이트하는 등의 방법으로 광고 차단기를 더 효과적으로 사용하는 방법을 배웠습니다.
     * 일부 사용자들은 'invidious'와 같은 대체 사이트를 발견하였는데, 이 사이트는 광고 없이 동일한 YouTube 비디오를 제공하며 개인 정보 보호도 개선되어 있습니다.
     * 광고 차단기를 사용하는 것에 대한 윤리에 대한 논쟁이 있으며, 일부는 이것이 창작자들로부터 돈을 빼앗는다고 주장합니다.
     * 사용자들은 SponsorBlock이라는 도구를 발견하였는데, 이 도구는 비디오 내의 스폰서 메시지를 자동으로 건너뛰게 합니다.
     * 일부 Firefox 사용자들은 YouTube에서 차단될 위협 때문에 광고 차단기를 비활성화하였고, YouTube와 Google 사용을 줄이기 시작하였습니다.
     * 일부 사용자들이 제안하는 해결책은 광고를 빠르게 재생할 수 있는 확장 프로그램을 사용하는 것입니다.
     * 광고가 늘어난 이후 YouTube 사용량이 줄어든 사용자들이 있으며, 이들은 증가한 광고 수익이 사용자 감소로 인한 잠재적 손실을 상쇄할 수 있을지 의문을 제기합니다.
     * 일부 사용자들은 계정에 로그인하지 않은 비공개 창에서 YouTube 링크를 열면 광고 차단 제한을 우회할 수 있다는 것을 발견하였습니다.
"
"https://news.hada.io/topic?id=11684","Show GN: aladin-discord 알라딘 상품 검색 결과를 보여주는 디코봇","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Show GN: aladin-discord 알라딘 상품 검색 결과를 보여주는 디코봇

   요즘 디코에서 책 관련 이야기 하는 경우가 많은데 책 링크를 웹사이트랑 왔다갔다 하는게 귀찮아서 만든 봇입니다.

   알라딘 상품검색 OpenAPI 활용했고, fly.io 통해 배포했습니다.

   봇 추가링크 도 있습니다.

   https://discord.com/oauth2/authorize?client_id=1170272295827279914

   내 앱에 추가하기(어느 서버에서나 사용할 수 있는 기능)이 추가되면서 설치 링크가 바뀌었습니다.

   소개 페이지에 동작하는 화면 스크린샷이 하나 있으면 좋을 것 같아요!

   (말씀 드리면서 보니 긱뉴스봇 설치페이지에도 스크린샷이 없네요. 추가해야 겠어요 ^^;; )

   조언 감사합니다. 복귀하면 리드미 부터 고쳐야겠네요
"
"https://news.hada.io/topic?id=11742","앨런 웨이크 2에서의 노스라이트 기술","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          앨런 웨이크 2에서의 노스라이트 기술

     * 노스라이트 기술 소개: 앨런 웨이크 2, 게임 비주얼과 성능 향상을 위한 노스라이트 기술 전시
     * 데이터 지향 게임 오브젝트 모델: 코어 엔진, 효율적인 메모리 사용과 병렬 실행을 위한 ECS 도입으로 더 풍부한 게임 세계 구현
     * 복셀 기반 캐릭터 컨트롤러: 새로운 캐릭터 제어 시스템, 복잡한 환경에서의 부드러운 탐색과 생동감 있는 캐릭터 움직임 보장
     * 개선된 NPC 보행: NPC, 모션 매칭을 통한 애니메이션 기반 움직임으로 더 현실적이고 제어 가능한 행동 구현
     * 현실적인 바람 효과: 바람 시스템, SDF를 사용하여 물리, 입자, 천에 영향을 주는 신뢰할 수 있는 바람 패턴 생성
     * 식생 산포 도구: 대량 식생 저작 도구, 더 조밀하고 생생한 환경 및 확장된 시야 거리 가능
     * 루아 스크립팅 언어: 레벨 스크립팅과 게임플레이 시스템 단순화를 위한 로블록스의 루아로 전환, 코드 유지 관리 감소
     * GPU 기반 렌더링 파이프라인: 새로운 렌더링 파이프라인, 메시 셰이더를 사용한 오클루전 컬링으로 성능 손실 없이 더 상세한 지오메트리 구현
     * 프로시저럴 GPU 애니메이션 식생: GPU 기반 스키닝 시스템을 사용한 식생 애니메이션, 캐릭터 스타일 리그와 아트 기반 애니메이션 가능
     * HDR 지원: 앨런 웨이크 2, HDR 및 SDR 디스플레이에서 스토리텔링과 분위기 향상을 위한 인간 컬러리스트에 의한 컬러 그레이딩으로 전체 HDR 지원
     * 고급 투명도 및 대기 효과: MBOIT 사용, 안개, 물, 기타 투명 표면 렌더링 개선
     * 향상된 VFX 도구: 비주얼 이펙트 아티스트, GPU 기반 렌더링 파이프라인을 활용한 복잡한 효과 생성 가능
     * 레이 트레이싱 개선: 앨런 웨이크 2, 엔비디아와 협력하여 완전한 레이 트레이싱 직접 조명, 향상된 디노이징 및 간접 조명 알고리즘 특징
     * 엔비디아 DLSS 혁신과 통합: 엔비디아 DLSS 프레임 생성 및 레이 복구 지원, PC 플레이어를 위한 최첨단 시각적 충실도 제공

        Hacker News 의견

     * 노스라이트 엔진의 시각적 효과 및 시스템, 발 미끄러짐 같은 애니메이션 문제에도 불구하고 최고 수준 평가
     * D 프로그래밍 언어의 게임 개발 적용에 대한 관심 및 직면한 도전 고찰
     * 기사의 직설적 표현 방식, 마케팅 언어와 내부 개발 설명 대조 칭찬
     * Bevy와 같은 게임 엔진에서의 엔티티 컴포넌트 시스템(ECS) 아키텍처 사용 강조, 게임 개발에 대한 관심 유발
     * 게임 개발에 사용된 맞춤형 도구들에 대한 감탄, 기계 학습 등 다른 분야에서의 유사 도구 요구
     * 노스라이트 엔진의 ECS, AAA 렌더링, 고급 스크립팅, 얼굴 애니메이션 결합, 언리얼 엔진에 대한 강력한 경쟁자로 평가
     * 게임을 위한 언리얼 마켓플레이스 콘텐츠 제작팀의 노고 인정, 추가 협업 기대
     * 일부 평론가들, 캐릭터 움직임 애니메이션의 불안함 지적, 리얼리즘 강화를 위한 움직임 다양성 요구
     * 레메디 엔터테인먼트의 소규모 팀으로 고품질 그래픽 구현 능력 칭송, 앨런 웨이크 2의 기술적·예술적 아름다움 주목
     * 게임의 성능 조정 및 메쉬 셰이더를 이용한 컬링 논의, 후자는 하드웨어 효율성에 대한 중요한 이점으로 평가
"
"https://news.hada.io/topic?id=11688","Cloudflare 제어 플레인 및 분석 시스템 중단에 대한 사후 분석","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Cloudflare 제어 플레인 및 분석 시스템 중단에 대한 사후 분석

     * 2023년 11월 2일부터 4일까지 Cloudflare의 제어 평면 및 분석 서비스가 중단됨.
     * 제어 평면은 주로 Cloudflare 서비스의 고객 대면 인터페이스를 포함하며, 분석 서비스는 로깅 및 분석 보고를 포함함.
     * 이번 사건은 Flexential 데이터 센터에서의 전원 고장으로 인해 발생했으며, 이 데이터 센터는 Cloudflare의 가장 큰 분석 클러스터와 고가용성 클러스터의 중요한 부분을 보유하고 있음.
     * 고가용성 시스템이 이러한 중단을 방지하기 위해 설치되어 있음에도 불구하고, 일부 중요 시스템은 사건 동안 사용할 수 없게 만드는 비공개 의존성을 가지고 있었음.
     * Cloudflare의 제어 평면 및 분석 시스템은 주로 오레곤 주 Hillsboro 주변의 세 개의 데이터 센터에서 운영되며, 이들은 독립적으로 작동하고 하나가 오프라인 상태가 되더라도 계속 작동하도록 설계되었음.
     * 이번 중단은 일부 서비스, 특히 새로운 서비스가 아직 고가용성 클러스터에 추가되지 않았으며, 로깅 시스템이 이 클러스터의 일부가 아니라는 사실을 드러냄.
     * Flexential 데이터 센터에서의 전원 고장은 건물로 들어오는 독립적인 전원 공급에 영향을 미치는 계획되지 않은 유지 보수 이벤트로 인해 발생했으며, 이로 인해 변압기에 접지 고장이 발생했음.
     * Cloudflare는 대부분의 제어 평면을 재해 복구 시설에서 복구할 수 있었으며, 이 시설이 온라인 상태가 된 후에는 대부분의 고객이 대부분의 제품에 문제를 겪지 않았을 것임.
     * 그러나 다른 서비스는 복구하는 데 더 오래 걸렸으며, 이들을 사용한 고객들은 사건이 완전히 해결될 때까지 문제를 겪었을 수 있음.
     * Cloudflare는 사건에서 얻은 교훈을 바탕으로 변경 사항을 구현하고 있으며, 이에는 핵심 데이터 센터에 대한 의존성 제거, 모든 핵심 데이터 센터가 오프라인 상태가 되더라도 제어 평면 기능이 계속되도록 보장, 모든 제품과 기능이 고가용성 클러스터에 의존하고 신뢰할 수 있는 재해 복구 계획을 갖도록 요구하는 것이 포함됨.
     * 회사는 또한 모든 데이터 센터 기능의 더 엄격한 혼돈 테스트를 실시하고, 모든 핵심 데이터 센터를 감사하며, 로깅 및 분석 재해 복구 계획을 개발하고 있음.

        Hacker News 의견

     * Cloudflare의 중대한 중단에 대한 기사, 회사는 이 문제를 Flexential 벤더가 운영하는 데이터 센터의 전원 고장으로 돌리고 있다.
     * 일부 댓글 작성자들은 Cloudflare가 Flexential에게 책임을 전가하고 벤더에 대한 기밀 정보를 공개하는 것을 비판한다.
     * 중단의 근본 원인은 Cloudflare가 단일 데이터 센터에 의존하고 있었다는 점으로, 일부 댓글 작성자들은 이것이 Cloudflare의 명성에 부끄러운 일이라고 생각한다.
     * 복구 과정은 중단 자체보다 더 오래 걸렸으며, 일부 서비스는 완전히 복구하는 데 약 30시간이 걸렸다. 이는 많은 서비스들이 서로에게 의존하고 있었기 때문이다.
     * 일부 댓글 작성자들은 중단 동안 Cloudflare의 커뮤니케이션에 불만을 표현하며, 특히 기업 고객들에게 더욱 그렇다.
     * 문제에도 불구하고 일부 댓글 작성자들은 Cloudflare의 투명성과 사후 보고서의 철저함을 칭찬한다.
     * 일부 댓글 작성자들은 Cloudflare의 중복 실패와 제어 평면의 지리적 분산 부족에 대해 우려를 표현한다.
     * 댓글 작성자들은 또한 Cloudflare가 모든 서비스를 고가용성 클러스터에 두지 않았으며, 전원 중단의 모든 가능한 시나리오를 테스트하지 않았다고 비판한다.
     * 일부 댓글 작성자들은 보고서에서 인간 요소를 칭찬하며, Cloudflare가 복구 과정 중 추가적인 실수를 피하기 위해 휴식이 필요하다는 것을 인정한다.
     * 댓글 작성자들은 데이터 센터가 완전히 오프라인 상태에서 복구할 수 있는 능력의 중요성을 강조하며, Cloudflare가 이 시나리오를 테스트하지 않았다고 비판한다.
     * 일부 댓글 작성자들은 기사의 구조에 놀라움을 표현하며, 대부분의 게시물이 제3자 벤더를 논의하고 Cloudflare의 자체 복구 노력에는 덜 초점을 맞추고 있다.
"
"https://news.hada.io/topic?id=11738","유클리드의 첫 이미지들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              유클리드의 첫 이미지들

     * 유럽 우주국(ESA)의 유클리드 우주 임무가 우주의 첫 번째 전체 색상 이미지를 공개했습니다.
     * 이 이미지들은 가장 먼 우주를 바라보며, 그동안 본 적 없는 넓은 하늘 부분에서 가장 선명한 천문학 이미지입니다.
     * 이 이미지들은 유클리드가 아직 발견되지 않은 숨겨진 비밀을 드러내며, 지금까지 만들어진 가장 광범위한 우주 3D 지도를 만들 수 있는 잠재력을 보여줍니다.
     * 유클리드의 임무는 우리 우주의 95%를 차지하는 이 신비한 개체인 암흑 물질과 암흑 에너지가 우리 우주를 어떻게 형성했는지 조사하는 것입니다.
     * 앞으로 6년 동안 유클리드는 최대 100억 광년 떨어진 수십억 개의 은하의 형태, 거리, 움직임을 관찰하며, 지금까지 만들어진 가장 큰 우주 3D 지도를 만들 것입니다.
     * 공개된 이미지들은 유클리드가 한 번에 넓은 하늘 부분에서 선명한 가시광선 및 적외선 이미지를 만들 수 있는 능력을 보여줍니다.
     * 유클리드의 이미지에는 특별한 광학 설계, 망원경과 기기의 완벽한 제조 및 조립, 매우 정확한 포인팅 및 온도 제어 덕분에 많은 세부 정보가 포함되어 있습니다.
     * 이미지에는 페르세우스 성단에 속하는 1000개의 은하와 배경에 더 멀리 있는 10만 개 이상의 추가 은하가 보여지며, 이 중 많은 은하들은 이전에 보이지 않았습니다.
     * 유클리드는 페르세우스와 같은 수많은 은하단을 우주 시간에 걸쳐 관찰하며, 그들을 묶어주는 '암흑' 요소를 드러낼 것입니다.
     * 이미지에는 '숨겨진 은하'인 IC 342 또는 캘드웰 5도 보여지며, 이 은하의 별들에 대한 중요한 정보를 드러냅니다.
     * 유클리드의 첫 우주 전망은 망원경의 성능을 보여주고 가까운 우주에 대한 새로운 정보를 제공함으로써 과학 커뮤니티에게 가치있는 자료입니다.
     * 이미지는 또한 유클리드가 개별 별과 은하의 물리학에 대한 풍부한 정보를 만들어낼 방법을 보여줍니다.
     * 유클리드는 2023년 7월 1일 미국 플로리다 주 케이프 카나베럴 우주군 기지에서 SpaceX Falcon 9 로켓을 타고 태양-지구 라그랑주 점 2로 발사되었습니다.
     * 정규 과학 관찰은 2024년 초에 시작될 예정이며, 유클리드는 6년 동안 전례 없는 정확도와 민감도로 하늘의 3분의 1을 조사할 것입니다.
     * 유클리드는 ESA가 건설하고 운영하는 유럽 임무로, NASA의 기여를 받았으며, 13개 유럽 국가, 미국, 캐나다, 일본의 300개 연구소에서 2000명 이상의 과학자들이 참여하고 있습니다.

        Hacker News 의견

     * Euclid의 VIS 기기의 36개 탐지기에 의해 기록된 달과 하늘의 오버레이 이미지.
     * Lagrange 지점에서의 잠재적인 혼잡성과 Webb에 비해 Euclid가 제공하는 이점에 대한 논의.
     * 이미지의 인상적인 세부사항을 강조하는 댓글들, 가장 작은 점조차도 거대한 천체를 나타낸다는 점을 지적.
     * 이러한 데이터셋을 이용한 시민 과학의 가능성, 특히 페르세우스 은하단과 관련하여 관심이 있다.
     * 페르세우스와 같은 은하단에 의해 입증된 우주의 암흑물질의 존재에 대해 논의.
     * 이미지의 보라색 점에 대한 의문과 그들이 모두 같은 크기인 이유.
     * 이미지가 암흑물질과 암흑 에너지를 조사하기 위한 Euclid의 임무와 어떻게 관련되는지에 대한 혼란을 표현하는 댓글들.
     * 이미지에서 보이는 수많은 시스템들로 인해 다른 문명의 존재에 대한 추측이 생겨남.
     * Euclid의 임무는 우주의 가속 확장을 정확하게 측정함으로써 암흑 에너지와 암흑물질을 더 잘 이해하는 것.
     * 우주선은 하늘의 약 1/3을 관찰하며, 외부 은하를 중점으로 하여 약 100억 개의 천문학적 출처를 관찰할 것.
     * Euclid는 러시아가 계획된 Soyuz 발사를 철회한 후, 2023년 7월 1일에 SpaceX Falcon 9 발사체로 발사되었다.
     * 9개의 과학 데이터 센터는 최소 6년 동안 170 페타바이트 이상의 원시 입력 이미지를 처리할 것.
     * 통신 시스템은 하루에 850 기가비트를 전송할 수 있으며, 최소 300GB의 기내 저장 용량을 가지고 있다.
"
"https://news.hada.io/topic?id=11748","RedPajama v2 - LLM 훈련을 위한 30조(30T)개의 토큰 데이터 셋","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             RedPajama v2 - LLM 훈련을 위한 30조(30T)개의 토큰 데이터 셋

     * 1조개의 토큰이었던 RedPajama-1T 에 비해 훨씬 커진 규모
     * 84개의 CommonCrawl 덤프에서 100조 개 이상의 원시 토큰이 포함된 1,000억 개 이상의 텍스트 문서
     * 중복 제거된 30조 개의 토큰 하위 집합에 대해 사전 계산된 가장 널리 사용되는 40개 이상의 품질 주석 포함
     * 5개 언어: 5개 언어: 영어, 프랑스어, 스페인어, 독일어, 이탈리아어
     * 모든 데이터 처리 스크립트는 오픈 소스이며 GitHub에서 사용할 수 있으며, 모든 데이터는 HuggingFace에서 사용할 수 있음

   RedPajama - LLaMA 데이터셋을 재작성하는 오픈소스 프로젝트
   RedPajama 3B, 7B 모델 공개
   RedPajama, HELM 벤치마크에서 공개된 다른 7B LLM 모델보다 뛰어난 성능을 갖는 7B 모델 공개
"
"https://news.hada.io/topic?id=11685","Hono - 경량, 초고속, 웹표준 기반 Edge용 웹프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Hono - 경량, 초고속, 웹표준 기반 Edge용 웹프레임워크

     * 초고속 라우터 RegExpRouter
     * 12kB 의 초경량. 웹표준 API 만 사용하여 의존성 없음
     * 모든 JavaScript 런타임에서 동작가능: Cloudflare Workers, Fastly Compute@Edge, Deno, Bun, Vercel, Lagon, AWS Lambda, Lambda@Edge, Node.js
     * 미들웨어 내장 및 커스텀 미들웨어, 써드파티 미들웨어 지원
     * 깔끔한 API 와 TypeScript 지원

   cloudflare worker 위에서 이 프레임워크로 https://newsgram.io/ 사이트를 운영 중입니다. 아주 간결하고 군더더기 없이 빠르게 개발할 수 있으니 간단한 프로젝트를 처음 시작할때 추천드립니다

   데이터베이스는 보통 뭘 쓰시나요? 웹 프레임워크는 엣지에서 도는데 데이터베이스는 리젼에서 돌아아 하니까 접속 지역마다 레이턴시가 크게 차이날 수 있겠다는 생각이 듭니다.

   cloudflare workers + hono + pg (supabase 서울 리전) 조합으로 db에 바로 접근해서 사용해본적 있는데요, 생각하신대로 cloudflare workers가 사용자 통신사에 따라 LA나 홍콩 싱가폴로 뜰때가 있어서 커넥션 맺는 속도가 매우 느렸었습니다. 이런 경우를 위해서 데이터 레이어에 더 가까운 엣지에서 뜨도록 최적화 하는 Smart Placement 라는 옵션도 제공하던데 제 경우에는 요청량이 적어서 그런지 잘 동작을 안하더라구요.

   HyperDrive가 이런 경우에 유용할 것 같습니다.

   아직 베타긴 하지만 cloudflare d1 을 쓰고있습니다.
"
"https://news.hada.io/topic?id=11734","Ask HN: 현재 당신이 열정적인 것은 무엇인가요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Ask HN: 현재 당신이 열정적인 것은 무엇인가요?

     * 정확히 1년 전의 이 포스트[1]가 좋은 유형의 포스트라고 생각했고, 그것을 축하하기 위해 HN 커뮤니티의 다양한 관심사를 보여주기 위한 새로운 것을 시작하려고 생각했습니다. 건배!<p>[1] <a href=""https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33488891"">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33488891</a> (감사합니다 mckirk!)

        Hacker News 의견

     * 한 댓글러는 법률 시스템을 더 접근하기 쉽게 만드는 목표가 무산된 후 새로운 목표를 찾기 위해 선교사가 된 여성에 대한 감탄을 공유합니다.
     * 다른 댓글러는 파워리프팅에 대한 열정을 표현하며, 그것이 신체 건강과 정신적 규율에 미치는 이점과 개인 기록 달성의 만족감을 강조합니다.
     * 한 댓글러는 심각한 번아웃 상태에 이른 최근의 깨달음을 논의하며, 이로 인해 정신 건강에 집중하게 되었습니다.
     * 한 사람은 ""Scavengers Reign""이라는 새로운 HBO 쇼에 대한 열정을 공유하며, 그것의 생태학적 표현과 매력적인 스토리라인을 칭찬합니다.
     * 한 댓글러는 청소부가 더 많은 고객을 얻는 데 도움을 주는 것에 열정을 느끼며, 우편함 전단지에 A/B 테스팅을 사용하고 응답률을 추적하는 계획을 세우고 있습니다.
     * 19세의 한 댓글러는 부모가 없거나 지원하지 않는 어린 조카에게 긍정적인 롤모델이 되기 위해 헌신하고 있습니다.
     * 한 사람은 책과 팟캐스트에 영감을 받아 25년 동안 술을 마시는 것을 그만두기로 결정하고, 알코올의 부정적인 영향을 더 일찍 인식하지 못한 것에 대한 후회를 표현합니다.
     * 최근에 달리기를 시작한 한 댓글러는 그들의 진전과 목표를 공유하며, 신체적 이점과 개선을 보는 만족감을 강조합니다.
     * 한 사람은 소도시 의회 정치에 참여하고 있으며, 저항과 반발에도 불구하고 우크라이나 난민을 위한 주택 프로젝트를 지지하고 있습니다.
     * 한 댓글러는 자신의 마음과 정신 건강에 대해 배우고 있으며, 디지털 소비의 부정적 영향과 감정과 감정을 통제하는 중요성을 깨닫고 있습니다.
"
"https://news.hada.io/topic?id=11803","독일 정부로부터 €1M을 받은 Gnome","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         독일 정부로부터 €1M을 받은 Gnome

소버린 테크 펀드

     * 소버린 테크 펀드는 독일 정부가 지원하는 이니셔티브로, 오픈소스 기술의 국내외 촉진에 대한 다년간의 경험을 가진 Adriana Groh와 Fiona Krakenbürg가 운영함.
     * 펀드는 오픈소스 생태계가 성공적이지만 점점 취약해지고 있으며, 소프트웨어 사용자는 많지만 기여자는 적다고 지적하며 디지털 공동체, 자원 봉사 커뮤니티, 오픈소스에 투자할 시기라고 강조함.
     * 이전에는 curl, Fortran, WireGuard, OpenSSH, Yocto Project, OpenJS Foundation과의 협력을 통해 자바스크립트 생태계 인프라와 보안 개선에 투자한 바 있음.

GNOME 프로젝트의 투자 수혜

     * GNOME 프로젝트는 소버린 테크 펀드로부터 100만 유로의 투자를 받아 플랫폼 현대화, 도구 개선, 접근성 향상 및 공공 이익에 부합하는 기능 지원에 사용할 계획임.
     * 2024년 동안 접근성 개선, 새로운 접근성 스택 설계 및 프로토타입 제작, 사용자 홈 디렉토리 개별 암호화, 비밀 저장소 현대화, 하드웨어 지원 범위 및 품질 향상, 품질 보증 및 개발자 경험 투자, freedesktop API 확장 및 개선, 플랫폼 구성 요소 통합 및 개선 등의 프로젝트와 이니셔티브가 직접적인 혜택을 받을 예정임.
     * GNOME은 리눅스의 핵심 요소로, 가장 인기 있는 리눅스 배포판의 기본 데스크탑 환경이며, 전 세계 수백만 명의 사용자가 GNOME 앱을 사용하고, GNOME이 지원하는 기술은 다양한 장치, 플랫폼, 산업에서 경험의 기반을 이룸.

GN⁺의 의견

     * 이 기사에서 가장 중요한 것은 GNOME 프로젝트가 소버린 테크 펀드로부터 상당한 투자를 받아 오픈소스 인프라를 강화하고, 접근성을 개선하며, 사용자 경험을 향상시킬 수 있는 기회를 얻었다는 점임.
     * 오픈소스 기술과 커뮤니티에 대한 이러한 투자는 기술의 미래 발전에 중요한 역할을 하며, 오픈소스를 사용하고 의존하는 모든 사람들에게 긍정적인 영향을 미칠 것임.
     * 이 기사는 오픈소스 생태계에 대한 지원과 투자의 중요성을 강조하며, 기술 커뮤니티와 사용자 모두에게 흥미로운 소식을 전달함.

        Hacker News 의견

     * 시각 장애인 사용자의 관점에서 리눅스 데스크톱의 접근성 향상에 대한 기대감 표현
          + 리눅스가 시각 장애인에게 더 나은 접근성을 제공할 수 있는 잠재력 보유
          + NVDA와 같은 오픈 소스 스크린 리더의 확장성과 유용성 강조
          + 리눅스 전체 스택 제어를 통한 오디오 데스크톱 구현의 가능성 언급
          + 개인적인 꿈과 비전 공유, 리눅스 데스크톱 환경 개선의 중요성 강조
     * GNOME 재단의 조직력과 자금의 출처에 대한 긍정적 평가
          + GNOME 재단의 역할과 자금 관리에 대한 인정
          + 정부의 자금 지원 프로젝트에 대한 자부심 표현
          + 고품질 소프트웨어가 사회에 미치는 긍정적 영향에 대한 강조
     * 소버린 테크 펀드(Sovereign Tech Fund)의 지원을 받은 프로젝트에 대한 만족감 표현
          + 정부 지출에 대한 지지와 긍정적 반응
     * GNOME이 사용자 홈 디렉토리 개별 암호화 기능 개발 계획에 대한 의문 제기
          + 데스크톱 환경과 관련된 기능에 대한 궁금증
     * 미국 정부가 GDAL과 QGIS 개선에 자금을 지원하는 것에 대한 긍정적 반응
          + 장기적인 가치와 비용 효율성에 대한 기대감 표현
     * 공공 자금으로 만들어진 공공 코드에 대한 지지
          + GNOME 데스크톱 환경뿐만 아니라 GNOME 애플리케이션과 GTK 생태계의 폭넓은 사용에 대한 언급
     * 의료 분야의 오픈 소스 소프트웨어에 대한 추가 자금 지원 필요성 강조
          + DICOM 뷰어 프로그램의 지원 문제와 업데이트 필요성 언급
     * GTK 파일 선택기 개선을 위한 자금 투입에 대한 기대 표현
     * KDE와 GNOME에 대한 자금 지원 결정에 대한 비판적 의견 제시
          + 지역적인 측면에서의 자금 배분에 대한 우려
     * GNOME 프로젝트의 시작 배경과 오픈 소스 경쟁의 중요성 강조
          + KDE 대안으로 시작된 GNOME에 대한 자금 지원이 경쟁 촉진에 긍정적임을 언급
"
"https://news.hada.io/topic?id=11689","AMD MicroBlaze V 프로세서: 유연하고 효율적인 RISC-V 프로세서","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              AMD MicroBlaze V 프로세서: 유연하고 효율적인 RISC-V 프로세서

     * AMD MicroBlaze™ V 프로세서에 대한 기사, 유연하고 효율적인 RISC-V 프로세서
     * AMD MicroBlaze™ V 프로세서는 AMD 적응형 SoCs와 FPGA를 위한 소프트 코어 RISC-V 프로세서 IP
     * 32비트 RISC-V 명령어 집합 아키텍처 (ISA) 기반, 클래식 MicroBlaze 프로세서와 호환 가능
     * Vivado™와 Vitis™ 도구 디자인 흐름에 완전히 통합된 프로세서, 임베디드 시스템 애플리케이션에 적합한 구성 가능한 아키텍처를 가진 고도로 모듈화된 디자인
     * 개발자들은 Vivado Design Suite에서 지원하는 AMD 적응형 SoC 또는 FPGA 장치에 MicroBlaze V 프로세서를 타겟팅 가능
     * 프로세서는 RISC-V 오픈 소스 ISA 기반, 비영리 RISC-V 재단이 관리하며 AMD는 2020년부터 회원
     * 프로세서는 업계 전반의 소프트웨어 및 솔루션에 대한 포괄적인 생태계를 지원하며 기존 MicroBlaze 프로세서 디자인의 하드웨어 이전과 RISC-V 디자인의 소프트웨어 이식성을 쉽게 가능하게 함
     * RV32IMAFC 기본 정수 명령어 세트에 대한 구성 가능한 ISA 지원을 제공하며 선택적 확장 기능을 사용하고 코드 압축을 활용하여 코드 크기를 크게 줄이고 디자인 메모리를 절약
     * 프로세서는 마이크로 컨트롤러, 실시간 프로세서, 애플리케이션 프로세서 세 가지 선택 가능한 구성을 제공하며 영역 및/또는 성능을 최적화하기 위한 빌드 옵션 제공
     * 안전 중요 시스템을 위한 듀얼 코어 록스텝 및 트리플 모듈러 리던던시 (TMR)와 같은 안전 조치 포함
     * 프로세서는 Vivado와 Vitis 도구에서 완전히 통합된 디자인 흐름을 제공하며 MicroBlaze 프로세서 디자인 흐름과 동일하고 Vivado 디자인 도구에서 지원하는 AMD 적응형 SoC 또는 FPGA와 호환 가능
     * 그래픽 사용자 인터페이스(GUI) 또는 명령 줄 인터페이스(CLI)를 통한 사용자 친화적인 경험 제공, 최적화된 IP의 광범위한 범위로 시스템 구성 요소 수를 줄이고 개발 시간을 단축하여 프로그래머블 로직에서 통합 MicroBlaze V 프로세서 서브시스템을 배포
     * AMD의 MicroBlaze™ 프로세서는 다양한 용도와 일관된 성능으로 인해 수많은 애플리케이션에 대한 신뢰할 수 있는 선택

        Hacker News 의견

     * AMD의 새로운 제품인 AMD MicroBlaze V 프로세서, Xilinx 인수 후 출시
     * MicroBlaze V는 기본적으로 MicroBlaze RTL과 동일하지만 RISC-V 명령 디코더가 추가됨
     * MicroBlaze 프로세서는 ""지루한"" 기술로 간주되며 ""통합용 접착제"" 역할을 하고 성능을 추진하지 않음
     * MicroBlaze RTL의 재사용으로 AMD는 기존 펌웨어와 소프트웨어를 유지할 수 있어, 공급업체와 새로운 코어로의 원활한 전환을 원하는 사용자에게 이점을 제공
     * MicroBlaze V의 사용 사례에 대한 추측이 있으며, 일부는 주요 장점이 속도라고 제안함
     * 일부 사용자들은 이 발표가 RISC-V에 대한 중요성에 대해 의문을 제기함
     * 새로운 프로세서가 264/265를 지원하여 그들의 적용성과 인기를 높이기 위한 요청이 있음
     * 사용자들은 모든 RISC-V 코어에 대한 개요에 관심이 있으며, 이는 오픈 소스인지, 코어마크 점수는 어떤지, 그리고 크기는 어떤지를 포함함
     * 코어 자체가 오픈 소스인지, psp 또는 me와 동등한 것이 있는지에 대한 질문이 제기되었음
     * 새로운 프로세서를 실험하기 위한 개발 키트에 대한 관심이 있음
     * 일부 사용자들은 새로운 프로세서의 명명에 대해 우려를 표현하였으며, 기존의 MicroBlaze 아키텍처 때문에 혼동을 일으킬 수 있다고 제안함
"
"https://news.hada.io/topic?id=11695","Cloudflare 장애 - 이제 24시간째","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Cloudflare 장애 - 이제 24시간째

     * 웹 인프라 및 웹사이트 보안 회사인 Cloudflare, 24시간 이상 지속된 서비스 중단 경험
     * API에 한정되지 않은 서비스 중단, 로드 밸런싱, Argo Smart Routing, Warp / Zero Trust 등의 서비스에도 영향
     * 데이터 센터의 전력 손실 및 서비스 장애로 인한 문제 가능성
     * Cloudflare의 아키텍처에서 잠재적인 단일 실패 지점 강조, 많은 서비스가 단일 데이터 센터의 신선한 데이터에 의존
     * 정기적인 테스트와 유지 보수에도 불구하고, 백업 시스템(발전기, AC 유닛, UPS, 자동 전환 스위치)이 안정적인 전압을 제공하지 못해 서비스 중단 발생
     * 강력하고 신뢰할 수 있는 장애 대체 시스템의 중요성 및 백업 시스템의 정기적이고 철저한 테스트의 필요성 강조
     * 서비스 중단은 Cloudflare의 서비스뿐만 아니라 고객의 서비스에도 영향을 미쳐, 중요한 웹 인프라에 대한 단일 회사 의존의 위험성을 강조
"
"https://news.hada.io/topic?id=11725","메모리 안전한 sudo 구현의 첫 안정화 버전 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      메모리 안전한 sudo 구현의 첫 안정화 버전 출시

     * Prossimo, sudo-rs의 첫 안정화 버전 발표, sudo 유틸리티의 Rust 재작성
     * Sudo 유틸리티, 엔지니어들이 Linux 운영 체제에서 사용자와 관리자 계정 간의 프라이버시 경계를 넘는 일반적인 도구
     * sudo-rs 프로젝트, 메모리 안전 언어인 Rust 사용으로 원래 sudo의 보안 강화, 덜 일반적으로 사용되는 기능을 제외함으로써 공격 표면 감소, 그리고 광범위한 테스트 스위트 개발
     * 원래 sudo의 보안 버그 중 세 개 중 하나는 메모리 관리 문제로, 이는 메모리 안전 언어인 Rust를 사용하여 해결
     * Wolfi Linux OS는 이미 sudo-rs를 통합, 다른 시스템들이 따를 것을 희망
     * Tweede Golf과 Ferrous Systems의 공동 팀이 Prossimo와 계약하에 sudo-rs를 구축, 2022년 12월에 프로젝트 시작
     * sudo-rs 코드의 외부 보안 감사가 2023년 9월에 예정되어 있으며, 이후 팀은 엔터프라이즈 기능에 집중할 예정
     * 원래의 C 기반 sudo 유틸리티는 Todd C. Miller가 유지 관리하였으며, 그는 sudo-rs 구현에 대한 조언을 제공하였음
     * Prossimo의 작업은 NLnet Foundation, sudo-rs의 감사를 지원한 곳, 그리고 메모리 안전 소프트웨어로의 전환을 지원하는 Amazon Web Services를 포함한 펀더 커뮤니티에 의해 지원됨
     * 비영리 단체인 ISRG는 Prossimo의 보편적이고 개방적인 인터넷 보안에 대한 비전을 지원함

        Hacker News 의견

     * 메모리 안전한 sudo 구현의 첫 안정화 버전이 출시되었습니다.
     * sudo의 원래 창시자 중 한 명이 단일 개발 팀에 의한 명령어의 완전한 재구현에 놀라움을 표하며, 새로운 버그 도입 가능성을 의심했습니다.
     * Rust 언어가 버그 도입 가능성을 제거하는 데 있어 잠재적 요인으로 강조되었습니다.
     * 프로젝트는 덜 일반적으로 사용되는 기능을 배제함으로써 공격 표면을 줄이고, 원래 sudo에서 버그를 찾아낸 광범위한 테스트 스위트를 개발하는 두 가지 주요 기능을 가지고 있습니다.
     * 프로젝트의 sudo 대체 목표에 대한 우려가 있으며, 특히 덜 일반적으로 사용되는 기능의 생략과 이것이 이러한 기능을 사용하는 구성에 어떻게 영향을 미칠지에 대한 문제가 있습니다.
     * 프로젝트의 GitHub readme는 이러한 제한 중 일부를 개요화하고 있습니다.
     * 프로젝트의 라이선싱(Apache-2.0+MIT 대 GPL-2.0)은 이를 이진 형식으로 배포하는 사람들이 빌드된 소스 코드를 보여줄 의무가 없음을 의미합니다.
     * 이를 Rust Implementation Of GNU Coreutils와 결합한 Debian 파생 버전을 보는 데 관심이 있습니다. 이는 메모리 안전성과 성능 향상을 위한 것입니다.
     * 일부 사용자들은 프로젝트에 대한 회의론을 표현하며, 재구현의 필요성과 sudo 기능의 복잡성을 의심했습니다.
     * 프로젝트의 채택에 대한 우려가 있으며, 특히 sudo의 전체 기능 세트를 구현하지 않는 경우에 대한 것입니다.
     * 'doas' 도구가 sudo에 대한 더 간단한 대안으로 제안되었습니다.
     * 사용자들이 현재의 sudo 구성을 드라이런하고 sudo-rs에서 지원하지 않는 부분을 출력할 수 있게 하는 검증/유효성 검사 매개변수에 대한 제안이 제시되었습니다.
     * Sudo-rs의 첫 보안 감사가 최근 관련 이벤트로 언급되었습니다.
"
"https://news.hada.io/topic?id=11770","Omeglemegle 2009-2023

인터넷의 마법과 Omegle의 시작

     * 인터넷은 저자에게 마법 같은 공간이었으며, 작은 마을에서 자란 저자에게 세상에 대한 새로운 발견과 다양한 사람들, 아이디어들을 접할 수 있는 기회를 제공함.
     * 저자는 어린 시절부터 위키피디아 편집, 오픈 소스 프로젝트 기여, 프로그래밍 질문 답변 등을 통해 인터넷에서 활발히 활동하며 성장함.
     * 인터넷은 저자가 어린 시절 겪은 성폭력 트라우마로부터 안전한 피난처를 제공하고, 물리적 위험으로부터 자신을 보호할 수 있는 방법이었음.

Omegle의 탄생과 성장

     * 18세의 저자가 부모님 집에서 Omegle을 시작했으며, 인터넷에서의 사회적 즉흥성을 제공하는 것이 목표였음.
     * Omegle은 사용자들을 무작위로 연결하여 채팅을 할 수 있게 하는 서비스로, 익명성을 기본으로 하여 사용자 간의 안전을 도모함.
     * Omegle은 출시 즉시 인기를 얻어 수백만 명의 일일 사용자를 확보하며, 새로운 사람들을 만나는 기본적인 인간의 욕구를 충족시키는 데 기여함.

Omegle의 양면성과 책임

     * 모든 도구가 선과 악의 목적으로 사용될 수 있으며, 통신 도구는 그 유연성으로 인해 특히 그러함.
     * Omegle은 범죄와 남용에 대응하기 위해 AI와 인간 모더레이터의 팀을 활용한 콘텐츠 모더레이션에 힘썼으며, 법 집행 기관과 협력하여 범죄자들을 처벌하는 데 기여함.
     * 범죄와의 싸움은 절대 승리할 수 없는 끝없는 전투이며, 최선을 다해도 완전한 승리는 없음을 인정함.

Omegle에 대한 공격과 자유 사회의 원칙

     * 최근 세계가 더욱 불편해지고 사람들이 서로의 인간성을 인정하는 데 더디어짐에 따라, Omegle을 포함한 통신 서비스들이 악의적인 사용자들의 행동을 이유로 공격받고 있음.
     * 저자는 자유 사회의 원칙을 지키기 위해 공격에 맞서 싸웠으나, Omegle을 운영하는 것이 재정적, 심리적으로 더 이상 지속 가능하지 않다고 판단함.
     * 저자는 인터넷이 소비 중심의 매체로 변화할 위험에 대해 우려하며, 인터넷 사용자의 권리를 옹호하는 전자 프런티어 재단(EFF)에 기부를 고려해볼 것을 제안함.

GN⁺의 의견

     * 이 기사에서 가장 중요한 것은 인터넷이 개인에게 제공할 수 있는 긍정적인 영향과 Omegle이라는 플랫폼이 사용자들에게 가져다준 새로운 만남과 경험의 가치임.
     * Omegle의 창립자가 겪은 어려움과 서비스 종료 결정은 인터넷의 자유와 개방성을 지키기 위한 노력의 중요성을 강조하며, 이는 많은 사람들에게 흥미롭고 중요한 주제임.
     * 인터넷이 제공하는 익명성과 안전성이 어떻게 긍정적인 영향을 미칠 수 있는지, 그리고 그것이 어떻게 오남용될 수 있는지에 대한 이해는 현대 사회에서 중요한 교훈을 제공함.

        Hacker News 의견

     * Omegle의 종말에 대한 애도
          + Omegle이 종료되었다는 소식에 슬픔을 표현함. 과거 StumbleUpon을 통해 다양한 사람들과 소통하며 즐거운 추억을 만들었던 시절을 회상함. 웹 2.0의 가능성에 대해 경이로움을 느꼈으며, 팬데믹 기간 동안에도 영상을 통해 낯선 사람들과 춤을 추며 즐거운 시간을 보냈음. Omegle의 종말은 2010년대의 Usenet과 같은 느낌이라고 함.
     * Omegle의 긍정적인 영향
          + Omegle이 사람들에게 제공한 긍정적인 경험에 대해 이야기함. 특히, 해리 맥(Harry Mack)의 프리스타일 랩 비디오 시리즈가 COVID 기간 동안 많은 기쁨을 줬다고 언급함.
     * Omegle의 기원
          + Omegle이 4chan에서 영감을 받아 만들어졌다고 함. 실시간 익명 커뮤니케이션의 한계를 넓히려는 아이디어에서 출발했으며, 초기 서버는 단순한 ""telnet"" 연결이었다고 함. 구글 검색을 통해 여전히 그 기원을 찾을 수 있다고 함.
     * Omegle의 퇴색된 매력
          + Omegle이 한때는 흥미로운 서비스였지만, 최근 몇 년간은 대부분 의미 없는 짧은 상호작용만 남아있다고 느낌. 과거에 비해 서비스의 매력이 상실되었다고 평가함.
     * 대규모 사용자와 위험성
          + 많은 일일 사용자를 가진 서비스는 큰 숫자의 법칙에 따라 작은 확률의 재난이라도 발생할 가능성이 높다고 함. 이러한 비대칭적 위험을 방어하기 어렵다고 언급함.
     * 소셜 앱의 수명주기
          + 모든 소셜 앱이 마치 파티와 같아서 언젠가는 끝이 난다고 비유함. 사용자가 적으면 죽고, 많으면 문제가 생기며, 관리 예산이 없으면 남용과 스팸, 포르노, 사기, 인신매매 등의 문제에 노출됨. Omegle이 오랜 기간 지속된 것에 대해 자부심을 가져야 한다고 함.
     * 해리 맥의 Omegle Bars 비디오
          + Omegle을 직접 사용해보지 않았지만, 해리 맥의 Omegle Bars 비디오를 모두 시청했으며, 그가 낯선 사람들과 매치되어 그들의 하루를 밝게 만드는 모습이 훌륭하다고 평가함.
     * Omegle의 기술 스택
          + 18세의 개발자가 만든 Omegle이 어떤 기술 스택을 사용하여 많은 동시 사용자를 지원했는지에 대한 궁금증을 표현함.
     * Omegle의 긍정적인 사회적 영향
          + 많은 사람들이 위로가 필요할 때 Omegle의 텍스트 채팅 기능을 이용했으며, 그 덕분에 삶이 나아진 사람들이 많다고 함. 물론 부정적인 영향을 받은 사람들도 있지만, 전반적으로 Omegle이 세상을 더 나은 곳으로 만들었다고 믿음.
     * 현대 사회의 불만 증가 현상
          + 요즘 사람들이 더 불만스러워졌는지, 아니면 항상 그랬는지에 대한 의문을 제기함. ""오늘날의 청년들은 게으르다""는 등의 과거의 인식과 비교하며, 현재의 상황이 명백히 사실인지에 대한 개인적인 느낌을 표현함.
"
"https://news.hada.io/topic?id=11683","Marcel - Pipe에 문자열 대신 파이썬 타입을 넘겨주는 최신 쉘","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Marcel - Pipe에 문자열 대신 파이썬 타입을 넘겨주는 최신 쉘

     * 명령간 Piping 시에 일반적인 문자열 대신 파이썬 값(List, Tuple, String, Number) 및 객체(파일, 프로세스)를 전달
     * 별도의 언어 없이 파이썬을 이용하여 필터링/프로세싱/포맷팅 가능
          + $ ps | select (p: 'python' in p.commandline)
          + $ ls | select (lambda f: now() - f.mtime < days(1))
     * 파이썬 자료 구조루부터 JSON으로 변환 및 입력/출력

   Powershell의 파이썬 버전일까요 ㅎㅎ
"
"https://news.hada.io/topic?id=11781","스티브 워즈니악, 경미한 뇌졸중 겪어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          스티브 워즈니악, 경미한 뇌졸중 겪어

애플 공동 창업자 스티브 워즈니악, 경미한 뇌졸중 겪어

     * 애플 공동 창업자 스티브 워즈니악이 멕시코 시티에서 열린 월드 비즈니스 포럼 참석 중 경미한 뇌졸중을 겪음.
     * MRI 스캔으로 뇌졸중 확인, 73세인 워즈니악은 회의 중 쓰러진 후 병원으로 이송됨.
     * 애플을 스티브 잡스와 함께 창업하고 첫 애플 컴퓨터를 발명한 실리콘 밸리 베테랑.

인공지능 규제에 대한 워즈니악의 견해

     * 워즈니악은 인공지능(AI) 기술이 ""나쁜 행위자들""에 의해 악용될 수 있다고 우려하며 규제를 촉구함.
     * AI가 사기를 더 어렵게 만들 수 있다고 지적하며, 기술의 발전을 일시 중단할 것을 요구하는 서한에 서명함.
     * 규제 당국이 올바르게 대응할 것인지에 대해 회의적인 의견을 표현하면서, 이익 추구가 우선하는 현실을 안타까워함.

GN⁺의 의견

     * 이 기사에서 가장 중요한 것은 애플의 공동 창업자이자 컴퓨팅 분야의 선구자인 스티브 워즈니악이 경미한 뇌졸중을 겪었다는 사실과 그의 인공지능 규제에 대한 견해임.
     * 워즈니악의 건강 상태와 그가 AI 기술의 발전에 대해 제기한 우려는 기술계뿐만 아니라 일반 대중에게도 흥미로운 주제임.
     * 그의 경험과 목소리는 기술 발전의 방향과 관련된 중요한 논의에 영향을 미칠 수 있으며, 이는 사회 전반에 걸쳐 중요한 영향을 끼칠 수 있음.

        Hacker News 의견

     * Woz는 매우 이타적인 인물로, 불멸의 삶을 살 수 있다 하더라도 지구 인구의 수용 능력을 고려하여 그 기회를 다른 이에게 양보하고 싶어함.
     * Woz는 기술적 천재성과 강한 정의감을 가지고 있으며, 다른 이들에게 행복을 주는 데 큰 기쁨을 느끼는 긍정적인 인물임.
     * Woz는 기술 업계에서 많은 이들이 존경하고 닮고자 하는 지성과 기발함, 진정한 선함을 갖춘 인물임.
     * Woz는 Twitter에서 노트북에 사인을 해주었으며, 당시 Twitter가 직면한 문제에 대해 깊은 호기심을 보임.
     * 뇌졸중은 매우 힘든 경험이지만, 뇌가 새로운 상황에 적응하면서 일어나는 회복은 놀라운 것임. Woz의 빠른 회복을 바람.
     * Woz는 실리콘밸리의 거의 잊혀진, 하지만 여전히 필요한 마음임. 그의 완전한 회복을 희망함.
     * Woz는 엔지니어들에게 사랑받는 인물이며, 애플의 팬이 아니더라도 그를 좋아할 수 있음. 그가 건강한 삶을 누리길 바람.
     * 2009년 WWDC 파티에서 자신의 아이폰 게임을 Woz에게 시연했고, 그는 비즈니스 카드를 줌. Woz의 인간미에 감동함.
     * Woz를 만난 적이 있는데, 멕시코시티의 나쁜 공기 질이 그의 건강에 영향을 미쳤을지 궁금함. 고도가 높아 산소 농도가 낮고 공해가 심각함.
"
"https://news.hada.io/topic?id=11705","블로그 포스트가 복잡하고 긴 검색 쿼리로 사람들을 찾는 방법 (2022)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                블로그 포스트가 복잡하고 긴 검색 쿼리로 사람들을 찾는 방법 (2022)

     * 블로그 포스트는 복잡한 검색 쿼리로서의 블로그 포스트 개념에 대해 논의한다.
     * 저자 헨릭 칼슨은 인터넷과 함께 성장한 개인적인 경험과 그것이 어떻게 그의 심리를 형성했는지를 공유한다.
     * 그는 인터넷이 정보를 찾는 도구일 뿐이라고 생각했던 것을, 2021년 말에 그가 관심 있는 같은 주제에 대해 관심이 있는 사람들과 연결할 수도 있다는 것을 깨달았다.
     * 칼슨은 인터넷의 사회적 메커니즘을 발견하였으며, 그의 말이 얼마나 정확하고 특정한지에 따라 인터넷이 그와 의미 있는 관계를 형성할 수 있는 사람들과 그를 더 잘 매칭시켰다는 것을 지적한다.
     * 그는 인터넷이 일반 대중에게 호소하는 데 사용되어서는 안되며, 오히려 같은 지적 문제와 관심사를 공유하는 특정한 사람들을 찾는 데 사용되어야 한다고 주장한다.
     * 칼슨은 독특한 관심사의 외로움에서 벗어나는 열쇠는 온라인에 글을 쓰고 같은 강박증을 공유하는 다른 사람들을 찾는 것이라고 제안한다.
     * 그는 블로그 포스트가 단순화되거나 접근성이 좋게 만들어져서는 안되며, 오히려 6개월 전에 저자를 흥분시켰을 것 같은 방식으로 쓰여져야 한다고 강조한다.
     * 저자는 또한 블로그 포스트의 배포에 대해 논의하며, 인터넷의 사회 구조를 정보가 더 작은 네트워크에서 더 큰 네트워크로 흐르는 강에 비교한다.
     * 그는 독자를 찾기 위해서는 자신의 글을 원하는 유형의 사람에게 가장 가까운 사람에게 보내야 한다고 제안한다.
     * 칼슨은 온라인 글쓰기가 새로운 문화를 소환할 수 있으며, 우리 모두가 1963년에 ""은하계 컴퓨터 네트워크""에 대한 메모를 쓴 J. C. R. Licklider의 검색 쿼리 안에서 살고 있다고 결론을 내린다.

        Hacker News 의견

     * 블로그 글이 같은 생각을 가진 사람들과 연결하는 수단으로서의 아이디어를 논의하는 기사.
     * 저자는 특정 주제에 대해 쓰는 것이 더 의미 있는 참여를 이끌어낼 수 있다고 제안한다.
     * 쓰는 과정을 더 즐겁게 만들기 위해 글쓰기 시 mental ""audience""를 바꾸는 개념이 권장된다.
     * 글쓰기를 통한 자기 형성 아이디어를 탐구하며, 이것이 다른 사람들과 관련이 있든 없든 상관없다.
     * 일부 댓글은 내용이 다른 사람들과 공유되지 않더라도 개인적인 성장을 위해 쓰는 것의 중요성을 강조한다.
     * Google Reader의 종말과 중앙 집중식 플랫폼에서의 이동이 언급되며, 계속해서 블로그를 작성하도록 촉구한다.
     * 일부 댓글은 저자가 과거의 성공을 너무 많이 해석하고 있다고 제안하며, 그의 해석을 의심한다.
     * ""상상의 관객""을 위해 쓰는 아이디어는 여러 댓글 작성자들에게 공유되며, 이들은 낯선 사람들로부터의 예상치 못한 참여에서 기쁨을 찾는다.
     * Substack과 Netlify와 같은 다양한 플랫폼에서의 글쓰기 사용이 논의되며, 지적 토론을 위한 같은 생각을 가진 사람들을 찾는 것에 초점을 맞춘다.
     * 블로그가 사람들을 찾기 위한 검색 쿼리로 작동하는 기사의 주장에 대부분 동의하지만, 일부 댓글은 일부 쿼리가 다른 것보다 쓰기 쉽다고 제안한다.
     * 저자가 5살짜리 딸에게 인터넷을 설명하는 것은 일부 댓글 작성자들에게는 이례적으로 보인다.
"
"https://news.hada.io/topic?id=11756","ChatGPT 및 API에서 발생한 대규모 장애","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ChatGPT 및 API에서 발생한 대규모 장애

     * 장애 알림: OpenAI, ChatGPT 및 API 서비스에 대한 주요 장애 보고
     * 장애 지속 시간: 태평양 표준시 기준 오전 5:42부터 7:16까지 발생
     * 해결 조치: OpenAI, 문제 파악 및 해결로 정상 서비스 운영 복구
     * 모니터링 단계: 조치 후 OpenAI, 서비스 안정성 확보 위해 모니터링
     * 문제 발견: API 및 ChatGPT의 높은 오류율로 문제 최초 인식
     * 조사: OpenAI 기술 팀, 높은 오류율 원인 파악 위해 적극 조사
     * 소통: OpenAI 사고 보고서를 통해 정기적 업데이트 제공, 첫 공지는 태평양 표준시 기준 오전 5:54
     * 서비스 영향: API 및 ChatGPT 모두 이번 사건으로 영향 받음
     * 상태 도구: 사건 업데이트, Atlassian Statuspage에 의해 제공, 상태 페이지 호스팅 및 관리 서비스

   이번 개발자행사 영향으로 뭔가 트래픽이 몰렸나 보네요.
   확실히 GPT-4 Turbo는 뭔가 아웃풋이 많이 달라졌습니다.
   GN+ 요약도 프롬프트를 거의 수정 안했는데 형식이 바뀌어 버렸네요.

        Hacker News 의견

     * Google Bard 첫 사용자, ChatGPT 장애로 인해 만족감 표현, 독특한 어조 확인
     * 코딩 중심 ChatGPT 대안 Phind, 안정적인 서비스로 언급
     * 제품 출시 전 Azure OpenAI로의 이전, 장애 무향으로 안도감 표현한 사용자
     * Bard 또한 장애 경험, ChatGPT 장애 시기 활용 기회 상실 관찰
     * Bard 성능 개선 주목, 시간이 지남에 따라 효과적으로 변화
     * ChatGPT 업무 통합 방식에 대한 호기심, 특히 명령어 기억이나 특정 프레임워크 내 도구 찾기 작업
     * 장애로 인한 의존성 반성, 일부가 제거하기 어려워하는 훈련용 바퀴에 비유
     * 최근 장애로 인해 OpenAI의 새 기능 신뢰성에 대한 의문 제기
     * OpenAI 상태 업데이트와 개인 경험 간 불일치 보고, 장애 해결 발표 시점에 완전히 해결되지 않았을 가능성 지적
     * OpenAI, Service Level Agreements (SLAs) 미제공 지적, 가동 시간이나 성능에 대한 공식 보장 없음 시사
"
"https://news.hada.io/topic?id=11773","GPT-4 Vision과 Vimium을 활용한 웹 탐색","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GPT-4 Vision과 Vimium을 활용한 웹 탐색

vimGPT: 다중 모달 모델에게 놀이터를 제공하다

  개요

     * 웹 탐색을 위한 대규모 언어 모델(LLMs)의 활용이 여러 스타트업과 오픈소스 프로젝트에서 탐구 중임.
     * GPT-4V의 시각 능력만을 사용하여 웹 브라우징이 가능한지 실험하는 프로젝트에 관심을 가짐.
     * 모델이 클릭하고자 하는 대상을 텍스트로 된 브라우저 DOM 없이 파악하기 어려움이 있음.

  설정

     * 파이썬 요구 사항 설치: pip install -r requirements.txt
     * Vimium을 로컬로 다운로드하고 Playwright 실행 시 수동으로 확장 프로그램을 로드해야 함: ./setup.sh

  아이디어

     * 자동 컨텍스트 검색을 위해 출시되면 Assistant API 사용을 고려 중.
     * Vimium을 컨텍스트에 기반하여 요소를 선택적으로 오버레이하는 특수 버전 개발 가능성.
     * 낮은 해상도에서 모델이 인식 실패하는 문제를 높은 해상도 이미지 사용으로 개선할 수 있음.
     * LLaVa 또는 CogVLM을 미세 조정하여 더 빠르고 저렴하게 만들 수 있음.
     * Vision API가 JSON 모드를 지원하면 사용할 계획이나, 현재는 더 원시적인 프롬프팅 방법에 의존해야 함.
     * Vision API가 일반적인 지시사항을 반환하고, 이를 JSON 모드 API로 정식화하는 방법을 고려 중.
     * 텍스트 입력을 없애고 접근성을 높이기 위해 Whisper 또는 다른 모델을 사용한 음성-텍스트 변환 추가 고려 중.
     * 인공 브라우저가 아닌 사용자 자신의 브라우저에서 작동하도록 만들고 싶음.
     * 모델이 노란색 사각형 아래를 볼 수 없을 경우를 대비하여 Vimium 활성화 여부에 따른 프레임 제공.
     * 이미지 입력 외에 Chrome 접근성 트리를 입력으로 제공하여 Vimium 바인딩에 매핑할 수 있는 인터랙티브 요소의 레이아웃 제공.

  참고 자료

     * https://github.com/Globe-Engineer/globot
     * https://github.com/nat/natbot

GN⁺의 의견

   이 기사에서 가장 중요한 것은 GPT-4V와 같은 대규모 언어 모델을 활용하여 웹 브라우징 경험을 혁신하려는 시도임. Vimium 확장 프로그램을 통해 모델이 웹과 상호작용할 수 있는 방법을 제공하는 것은 흥미로운 접근 방식이며, 이는 웹 접근성과 상호작용성을 향상시킬 잠재력을 가지고 있음. 기술 애호가와 소프트웨어 개발자에게 이러한 실험은 인공지능의 미래와 웹 인터페이스의 진화에 대한 통찰력을 제공하며, 그로 인해 매우 매력적인 주제가 됨.

        Hacker News 의견

     * 이제 이런 것이 가능하다는 것이 믿기 어려움:
          + 사용자가 특정 작업을 수행하도록 돕기 위해 선택할 수 있는 옵션으로 'navigate', 'type', 'click', 'done'이 있음.
          + 'navigate'는 지정된 URL로 이동해야 하며, 'type'과 'click'은 문자열을 받아 처리함.
          + 클릭할 때는 노란색 문자 시퀀스를, 타이핑할 때는 메시지를 문자열로 반환해야 함.
          + 페이지가 만족스러우면 'done'을 키로 반환하고, 반드시 JSON 형식으로만 응답해야 함.
     * 내 직장에서는 기술 부채가 너무 크기 때문에 수동으로 데이터를 복사하는 사람들이 많음:
          + 이러한 도구들이 기존 문제를 해결할 수 있는 계층으로 작용할 것에 대해 기대감 표현.
     * 제작자로부터의 인사말:
          + 프로젝트 공유에 감사하며, 질문이 있으면 알려달라고 요청.
          + README에 다음 단계에 대한 아이디어가 있으니 기여를 환영함.
     * vim이 ChatGPT에 적합한 ""구현체""라는 의견:
          + 텍스트 스트림으로 모든 것을 할 수 있으며, 인터넷에는 이미 vimscript가 많이 있음.
          + 비슷한 실험을 시작했다고 언급하며 관련 프로젝트 링크 공유.
     * GPT-4 Vision을 이용한 스크린샷과 브라우징 작업에 대한 논의:
          + 스크린샷에 정보를 오버레이하는 데 실패한 후, playwright에서 접근성 트리를 텍스트로 가져와 모델에게 상호작용 옵션을 알려주는 방식이 더 나은 결과를 보임.
          + 제작자에게 이 아이디어를 미래의 아이디어 목록에 추가할 것을 제안.
     * ChatGPT 인터페이스를 통해 실험한 경험 공유:
          + CSS를 업데이트하여 그라데이션과 둥근 모서리를 제거할 것을 제안.
          + 레드와 볼드한 화이트 텍스트 조합이 가장 일관된 결과를 보임.
          + 폰트 크기를 늘리고, 레이블이 겹칠 경우 분리하고 화살표를 추가할 것을 조언.
          + 주석이 추가된 이미지와 추가되지 않은 이미지 두 가지를 API에 보낼 것을 권장.
     * 이러한 도구가 웹 추적이나 광고에 어떤 영향을 미칠지에 대한 질문:
          + 에이전트가 사용자를 대신하여 광고나 팝업 없이 원하는 내용을 찾아주는 '광고 차단기'로서의 잠재력.
          + SEO의 중요성을 감소시키고 인터넷의 질을 향상시킬 수 있음을 상상.
          + 반면에 광고가 가져올 수 있는 부정적인 영향에 대한 우려도 표현.
     * 브라우저를 위한 자동 조종 장치를 만들 수 있음:
          + 이 기술이 대규모로 배포되면 봇 트래픽을 구별하기 매우 어려워질 것임.
          + 단기적으로 비용이 저렴하거나 접근 가능하지 않을 것이라는 문제 제기.
     * GPT-4V가 웹 스크래핑에 새로운 관점을 제시했다는 긍정적인 의견:
          + 이 코드나 유사한 코드가 여러 프로젝트에 활용될 것으로 예상.
          + 예를 들어, LinkedIn이나 Twitter 같은 웹사이트를 스크래핑하거나, 경쟁사 분석, 산업 분야 이해, 뉴스 획득 등에 사용될 수 있음.
     * 실제 사용해본 경험 공유:
          + 클릭 가능한 옵션에 대한 작은 주석이 화면에 종종 나타나지 않아 루프에 빠지는 문제 발생.
          + Twitter에 로그인하는 데 성공했지만, 100개의 이미지 API 제한을 빠르게 소진함.
          + 향후 버전에서는 텍스트 기반 브라우저를 주로 사용하고, 복잡한 상황에서만 비전을 사용하는 방안 제안.
"
"https://news.hada.io/topic?id=11762","Discord가 한대의 서버로 2백만명의 동시 사용자를 서빙하는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Discord가 한대의 서버로 2백만명의 동시 사용자를 서빙하는 방법

Elixir as a fanout system

     * Discord에서 메시지가 전송되거나 누군가 음성 채널에 참여하는 등 어떤 일이 발생할 때마다 같은 서버(""길드""라고도 함)에 있는 온라인 상태인 모든 사용자의 클라이언트에서 UI를 업데이트 해야함
     * 해당 서버에서 일어나는 모든 일의 중앙 라우팅 지점으로 길드당 하나의 Elixir 프로세스를 사용하고, 연결된 각 사용자의 클라이언트에 대해 다른 프로세스(""세션"")를 사용
     * 길드 프로세스는 해당 길드의 구성원인 사용자의 세션을 추적하고 해당 세션에 작업을 퍼뜨리는 역할을 담당
     * 세션이 업데이트를 받으면 웹소켓 연결을 통해 클라이언트에 전달
     * 어떤 작업은 서버의 모든 사람에게 적용되는 반면, 어떤 작업은 권한을 확인해야 하므로 해당 서버의 역할과 채널에 대한 정보뿐만 아니라 사용자의 역할도 알아야 함
     * 길드의 활동량은 해당 서버의 인원 수에 비례하고, 하나의 메시지를 팬아웃하는 데 필요한 작업량도 해당 서버의 온라인 사용자 수에 비례
          + 즉, 디스코드 서버를 처리하는 데 필요한 작업량은 서버의 규모에 따라 4제곱으로 증가
          + 한 서버에 1,000명이 온라인 상태이고 이들이 모두 ""젤리가 좋아요""라고 한 번씩 말했다면 이는 1백만 건의 알림을 처리해야 하는 것
          + 10,000명이라면 1억 건의 알림이 발생하고, 10만 명이면 100억 개의 알림을 전달해야 함
     * 전반적인 처리량 문제 외에도 서버가 커질수록 일부 작업의 속도가 느려지는 경우가 있음
     * 메시지가 전송되면 다른 사람들이 바로 볼 수 있어야 하고, 누군가 음성 채널에 참여하면 바로 참여를 시작할 수 있어야 하는 등 서버가 응답성이 뛰어나다는 느낌을 주려면 거의 모든 작업을 빠르게 처리할 수 있어야 함
     * 비용이 많이 드는 작업을 처리하는 데 몇 초가 걸리면 사용자 경험이 저하됨
     * 이런 문제가 있음에도 1000만명이 넘는 회원이 있으며, 그중 100만명이 항상 온라인 되어있는 Midjourney 서버를 지원할수 있었을까 ?
          + 먼저 시스템의 성능을 파악하는 것이 중요했음
          + 데이터를 확보한 다음에는 처리량과 응답성을 모두 개선할 수 있는 기회를 찾았음

시스템 성능 이해하기

     * Wall time analysis :
          + Process.info(pid, :current_stacktrace) 를 이용한 스택 트레이싱
          + 이벤트 처리 루프를 측정해서 각 유형 메시지 수신 수와 이를 처리하는데 걸린 최댁/최소/평균/총시간을 기록
          + 전체 시간의 1% 미만을 차지하는 작업은 극도로 폭주하는 경우가 아니라면 모두 무시
          + 저렴한 작업을 배제하고, 가장 비용이 많이 드는 작업을 강조
     * Process Heap Memory Analysis
          + 메모리를 어떻게 사용하는지 이해하는 것도 중요
          + 모든 요소를 일일이 보는 대신 큰 (구조체가 아닌) 맵과 목록을 샘플링하여 예상 메모리 사용량을 생성하는 헬퍼 라이브러리를 작성
          + 이 라이브러리는 GC 성능을 이해하는 데 도움이 되었을 뿐만 아니라 최적화를 위해 집중할 가치가 있는 필드와 궁극적으로 관련이 없는 필드를 찾는 데에도 유용
     * 길드 프로세스가 어디에 시간을 소비하는지 파악한 후에는 길드 프로세스가 100% 바쁘지 않도록 하는 전략을 세울 수 있었음
          + 어떤 경우에는 비효율적인 구현을 더 효율적으로 재작성하는 것만으로도 충분
          + 하지만 이 방법으로는 여기까지만 갈 수 있었음. 보다 근본적인 변화가 필요

패시브 세션 - 불필요한 작업 피하기

     * 처리량 병목 현상을 해소하는 가장 좋은 방법 중 하나는 작업을 줄이는 것
     * 이를 위한 한 가지 방법은 클라이언트 애플리케이션의 요구 사항을 고려하는 것
     * 원래 토폴로지에서는 모든 사용자가 자신이 속한 모든 길드에서 볼 수 있는 모든 행동을 수신
     * 하지만 일부 사용자는 여러 길드에 소속되어 있으며 일부 길드에서 무슨 일이 일어나고 있는지 확인하기 위해 클릭조차 하지 않을 수 있음
     * 사용자가 클릭할 때까지 모든 내용을 보내지 않는다면 어떨까? 모든 메시지에 대한 권한을 일일이 확인하지 않아도 되고, 결과적으로 클라이언트에 보내는 데이터도 훨씬 줄어들 것
     * 우리는 이를 'Passive' 연결이라고 부르며 모든 데이터를 수신해야 하는 'Active' 연결과는 별도의 목록에 보관했음
     * 그 결과, 대규모 서버에서 사용자-길드 연결의 약 90%가 패시브 연결이었기 때문에 팬아웃 작업의 비용이 90% 절감
     * 덕분에 어느 정도 숨통이 트였지만, 커뮤니티가 계속 성장함에 따라 당연히 이것만으로는 충분하지 않았음
       (작업량이 10배 감소하면 최대 커뮤니티 규모에서 약 3배의 이득을 얻을 수 있음)

릴레이 - 여러 머신에 걸쳐 팬아웃 분할하기

     * 단일 코어 처리량 한계를 확장하기 위한 표준 기술 중 하나는 작업을 여러 스레드(또는 Elixir 용어를 사용하자면 프로세스)로 분할하는 것
     * 이 아이디어를 바탕으로 길드와 사용자 세션 사이에 '릴레이'라는 시스템을 구축
     * 세션을 처리하는 작업을 하나의 프로세스에서 모두 처리하는 대신 여러 릴레이로 분할하여 단일 길드가 더 많은 리소스를 사용하여 대규모 커뮤니티에 서비스를 제공할 수 있도록 할 수 있었음
     * 일부 작업은 여전히 메인 길드 프로세스에서 수행해야 하지만, 이를 통해 수십만 명의 회원을 보유한 커뮤니티를 처리할 수 있게 됨
     * 이를 구현하려면 릴레이에서 수행해야 하는 중요한 작업과 길드에서 수행해야 하는 작업, 두 시스템 모두에서 수행할 수 있는 작업을 식별해야 했음
     * 무엇이 필요한지 파악한 후에는 시스템 간에 공유할 수 있는 로직을 추출하기 위한 리팩토링 작업을 시작
          + 예를 들어, 팬아웃을 수행하는 방법에 대한 대부분의 로직은 길드와 릴레이에 모두 사용되는 라이브러리로 리팩터링
          + 이렇게 공유할 수 없는 일부 로직은 다른 솔루션이 필요했고, 음성 상태 관리는 기본적으로 릴레이가 최소한의 변경만으로 모든 메시지를 길드에 프록시하는 방식으로 구현
     * 처음 릴레이를 출시할 때 내린 흥미로운 디자인 결정 중 하나는 각 릴레이의 상태에 전체 멤버 목록을 포함시키는 것이
          + 필요한 모든 회원 정보를 사용할 수 있다는 점에서 단순성 측면에서 좋은 결정
          + 하지만 회원 수가 수백만 명에 달하는 Midjourney 규모에서는 이러한 설계가 점점 더 의미가 없어지기 시작
     * 수천만 명의 회원 정보를 수십 개의 복사본이 RAM에 저장되어 있을 뿐만 아니라 새 릴레이를 만들려면 모든 회원 정보를 직렬화하여 새 릴레이로 전송해야 하므로 길드가 수십 초 동안 지연되는 문제가 발생
     * 이 문제를 해결하기 위해 릴레이가 실제로 작동하는 데 필요한 회원을 식별하는 로직을 추가했는데, 이는 전체 회원 중 극히 일부에 불과했음

서버 반응성 유지

     * 처리량 한도 내에 머무르는 것 외에도 서버의 반응성을 유지해야 했음
     * 여기에서도 타이밍 데이터를 살펴보는 것이 유용
     * 총 지속 시간보다는 콜당 지속 시간이 긴 작업에 더 집중하는 것이 더 효과적
     * 작업자 프로세스 + ETS
          + 응답이 없는 가장 큰 원인 중 하나는 길드에서 실행하고 모든 구성원을 반복해야 하는 작업
          + 이런 경우는 매우 드물지만 발생하곤 함. 예를 들어, 누군가 모두 핑을 수행하면 해당 메시지를 볼 수 있는 서버에 있는 모든 사람을 알아야 함
          + 하지만 이러한 확인 작업에는 몇 초가 걸릴 수 있음. 이를 어떻게 처리할 수 있을까?
          + 길드가 다른 작업을 처리하는 동안 이 로직을 실행하는 것이 가장 이상적이지만, Elixir 프로세스는 메모리를 잘 공유하지 않음. 그래서 다른 솔루션이 필요
          + 프로세스가 데이터를 공유할 수 있는 메모리에 데이터를 저장하는 데 사용할 수 있는 Erlang/Elixir의 도구 중 하나는 ETS
          + 이것은 여러 엘릭서 프로세스가 안전하게 액세스할 수 있는 기능을 지원하는 인메모리 데이터베이스
          + 프로세스 힙에 있는 데이터에 액세스하는 것보다 효율성은 떨어지지만 여전히 매우 빠름. 또한 프로세스 힙의 크기를 줄여 가비지 컬렉션의 지연 시간을 줄여주는 이점도 있음
          + 멤버 목록을 보관하기 위한 하이브리드 구조를 만들기로 결정:
               o 다른 프로세스에서도 읽을 수 있도록 멤버 목록을 ETS에 저장하되, 최근 변경 사항(삽입, 업데이트, 삭제)도 프로세스 힙에 저장하는 것
               o 대부분의 멤버는 항상 업데이트되지 않으므로 최근 변경 사항 집합은 전체 멤버 집합에서 매우 작은 부분
          + 이제 ETS의 멤버를 사용하여 작업자 프로세스를 생성하고 고비용 작업이 있을 때 작업할 ETS 테이블 식별자를 전달할 수 있음
          + 작업자 프로세스는 길드가 다른 작업을 계속하는 동안 비용이 많이 드는 부분을 처리할 수 있음. 이 작업을 수행하는 간단한 방법도 참고(원문에 코드 스니펫)
          + 이 방법을 사용하는 한 가지 예는 한 머신에서 다른 머신으로 길드 프로세스를 넘겨야 할 때(보통 유지 관리 또는 배포를 위해)
          + 이 과정에서 새 머신에서 길드를 처리할 새 프로세스를 생성한 다음 이전 길드 프로세스의 상태를 새 프로세스로 복사하고 연결된 모든 세션을 새 길드 프로세스에 다시 연결한 다음 해당 작업 중에 쌓인 백로그를 처리해야 함
          + 작업자 프로세스를 사용하면 기존 길드 프로세스가 계속 작업하는 동안 대부분의 멤버(수 GB의 데이터가 될 수 있음)를 전송할 수 있으므로 핸드오프를 할 때마다 몇 분씩 지연되는 시간을 줄일 수 있음
     * 매니폴드 오프로드
          + 응답성을 개선하고 처리량 한계를 극복하기 위한 또 다른 아이디어는 매니폴드를 확장하여 (길드 프로세스에서 팬아웃을 수행하는 대신) 별도의 ""발신자"" 프로세스를 사용하여 수신자 노드에 팬아웃을 수행하는 것
          + 이렇게 하면 길드 프로세스의 작업량을 줄일 수 있을 뿐만 아니라, 길드와 릴레이 간의 네트워크 연결 중 하나가 일시적으로 백업되는 경우에도 BEAM의 역압으로부터 보호할 수 있습니다(BEAM은 엘릭서 코드가 실행되는 가상 머신)
          + 이론적으로는 쉽게 해결할 수 있을 것 같았지만 안타깝게도 이 기능(매니폴드 오프로드라고 함)을 사용해보니 실제로 성능이 크게 저하되는 것을 발견
          + 어떻게 그럴 수 있을까? 이론적으로는 작업량이 줄어드는데 프로세스가 더 바빠졌을까?
          + 자세히 살펴보니 추가 작업의 대부분이 가비지 컬렉션과 관련된 것임을 알 수 있었음
          + 이때 erlang.trace 함수가 구세주처럼 등장
          + 이 함수를 통해 길드 프로세스가 가비지 컬렉션을 수행할 때마다 데이터를 수집할 수 있었기 때문에 가비지 컬렉션이 얼마나 자주 발생하는지뿐만 아니라 무엇이 가비지 컬렉션을 유발했는지에 대한 인사이트를 얻을 수 있었음
          + 이러한 추적 정보를 바탕으로 BEAM의 가비지 컬렉션 코드를 살펴본 결과, 매니폴드 오프로드가 활성화되었을 때 주요(전체) 가비지 컬렉션의 트리거 조건이 가상 바이너리 힙이라는 것을 알아냄
          + 가상 바이너리 힙은 프로세스가 가비지 컬렉션을 수행할 필요가 없는 경우에도 프로세스 힙 내부에 저장되지 않은 문자열이 사용하는 메모리를 해제할 수 있도록 설계된 기능
          + 안타깝게도 우리 사용 패턴은 기가바이트 크기의 힙을 복사하는 대가로 수백 킬로바이트의 메모리를 회수하기 위해 가비지 컬렉션을 계속 트리거하는 것을 의미했는데, 이는 분명히 그만한 가치가 없는 절충안이었음
          + 다행히도 BEAM에서는 프로세스 플래그인 min_bin_vheap_size를 사용하여 이 동작을 조정할 수 있음
          + 이 값을 몇 메가바이트로 늘리자 병적인 가비지 수집 동작이 사라졌고, 매니폴드 오프로드를 켜고 성능이 크게 향상되는 것을 볼 수 있었음

   엘릭서 파이팅

   패시브 세션은 기술적으로는 별 것 아니지만, 좋은 아이디어 같습니다.
   확실하게 부담을 절감할 수 있겠네요

   디스코드 뿐 아니라 다른 곳에서도 이런 기능을 구현해 두었을 텐데, 서비스 별로 어떤 차이점이 있을지 궁금합니다.

   엄청 멋지네요 ㄷㄷ

   요즘 유명한 nextjs의 streaming ssr의 종착지도 엘릭서의 phoenix프레임워크더군요. 여러모로 엘릭서는 현대 프로그래밍 언어의 최전선에 있는것 같습니다

   엘릭서 화이팅

   몇년전에 Discord 의 기술블로그를 참고해서 리얼타임 서비스에 Elixir 를 도입하게 되었고 개발속도나 안전성에서 저를 비롯한 담당임원까지 매우 만족스럽게 서비스를 출시해서 좋은 기억이 많네요.

   엘릭서가 더 인기 많아지면 좋겠어요

   IE를 강요하던 전통이 있는, 정부 이례로 네카라쿠배까지 스프링 독점인 한국 IT에게 어려운 과제입니다...

   요즘 네카라는 그 정돈 아닌 것 같고 오히려 중소 스타트업들이 스프링 독점인 것 같습니다. 그 스타트업 매니저들이 스프링 전문인 경우가 대부분이니 어쩔 수 없구요.

   모든 비효율은 돈과 규모로 해결하면 됩니다. 회사는 어차피 잘 모르니까요.
"
"https://news.hada.io/topic?id=11731","Show HN: Inshellisense - IDE 스타일의 쉘 자동완성 기능","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Show HN: Inshellisense - IDE 스타일의 쉘 자동완성 기능

     * 쉘 에서 IDE 스타일의 자동완성 기능을 제공
     * 600개 이상의 커맨드 라인 도구를 지원하는 터미널 네이티브 런타임
     * Windows, Linux, MacOS 지원
     * 설치 : 'npm install -g @microsoft/inshellisense'
          + 설치 후에 'inshellisense --shell '을 실행하여 원하는 쉘에 대한 자동완성 세션을 시작 가능
          + CTRL+a 키에 바인딩 가능하며, 현재 쉘과 함께 자동완성 세션을 시작하고 수락된 명령을 쉘의 히스토리에 삽입
     * 편의를 위해 'inshellisense'가 'is'로 Alias 지정
     * 지원 하는 쉘: bash, zsh, fish, pwsh, powershell (Windows Powershell).
     * Microsoft 가 만든 프로젝트. 기여와 제안을 환영하지만, 기여자는 기여자 라이선스 계약 (CLA)에 동의해야 함

   가장 놀라운건.. Microsoft가 만들어서 자사의 GitHub Repo 에 있는 도구인데
   개발자가 Show HN에 소개 글을 올렸다는 거네요

   엇 저 이해를 못한것 같아요. HN 에 올린게 왜 놀라운 부분이예요?

   아 Microsoft 개발자가 별도의 블로그 같은 채널을 통하지 않고 직접 Show HN에 제품 소개로 올린게 신기해서요. 이렇게 소개한 경우는 흔치 않은듯 합니다.

   아하 여기만 있군요

        Hacker News 의견

     * 'Inshellisense'라는 IDE 스타일 쉘 자동완성에 대한 포스트
     * 일부 사용자들은 Unix/Linux에서 실행되지 않는 문제와 디렉토리 변경 문제 등 구현에 대한 이슈를 지적
     * 사용자 중 한명은 Copilot을 bash 또는 fish 쉘의 대안으로 사용하고, 이를 $EDITOR에서 열어 Vim 또는 Neovim으로 설정하는 것을 제안
     * 일부 사용자들은 'Inshellisense'를 'zsh-autocomplete' 및 'Fig'와 같은 다른 도구와 비교, 후자가 더 나은 성능을 보이는 것으로 보임
     * 자동완성 기능으로 인한 잠재적인 오류와 안전 조치 필요성에 대한 우려 제기
     * 사용자 중 한명은 Node.js에 대한 쉘 의존성을 갖기를 꺼려함
     * 일부 사용자들은 이 아이디어를 칭찬하지만 완성 사양의 라이브러리에 대한 의존성을 비판, CLI들이 표준 데이터 구조를 사용하여 엄격한 인터페이스를 정의해야 한다고 제안
     * 'Inshellisense'가 Fig.io의 내부 완성 엔진을 재사용하고 Typescript 언어 선택을 강제한다는 사실이 밝혀짐
     * Fig의 공동 창업자는 터미널에서 IDE 스타일 자동완성의 대안 구현을 칭찬
     * 'Inshellisense'라는 이름이 훌륭하다는 찬사를 받음
"
"https://news.hada.io/topic?id=11703","왜 'Cities: Skylines 2'의 성능이 떨어지는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   왜 'Cities: Skylines 2'의 성능이 떨어지는가

     * 기대가 높았던 PC 게임 Cities: Skylines 2가 게임의 균형 문제, 의문의 디자인 선택, 버그 등으로 혼란스러운 반응을 얻으며 출시되었습니다.
     * 게임의 성능이 기대에 미치지 못하며, 고사양 시스템에서도 성능이 떨어진다는 사용자들의 보고가 많습니다.
     * 게임의 권장 시스템 요구 사항이 출시 한 달 전에 높아졌고, 콘솔 출시는 2024년으로 연기되었습니다.
     * Cities: Skylines 2는 대부분의 시스템에서 GPU에 의존하는데, 이는 CPU를 많이 사용하고 그래픽은 상대적으로 가볍게 사용하는 이 장르의 게임에는 이례적입니다.
     * 게임의 그래픽은 2015년 원작에 비해 대부분의 면에서 향상되었지만, Cyberpunk 2077의 최대 설정과 경로 추적을 활성화한 것보다 게임을 실행하는 것이 더 어렵다는 것을 정당화하는 것은 없습니다.
     * 게임은 Unity 2022.3.7을 사용하며, 여러 가지 서드 파티 미들웨어와 일부 사용자 정의 / 포크된 라이브러리를 활용합니다.
     * 게임의 불량한 성능은 그래픽 카드가 처리하기 어려운 불필요한 기하학적 요소를 게임이 너무 많이 던져주기 때문입니다.
     * 게임의 컬링 시스템은 그다지 발전하지 않았으며, 사용자 정의 렌더링 코드는 프러스텀 컬링만 구현하고, 오클루전 컬링은 전혀 없습니다.
     * 게임이 이소트로픽 텍스처 필터링을 지원하지 않는 원인은 아마도 가상 텍스처링의 사용 때문일 것입니다.
     * 게임은 Unity HDRP의 내장 스크린 공간 반사(SSR) 및 스크린 공간 전역 조명(SSGI) 구현을 사용합니다.
     * 게임은 Unity의 내장 포스트 프로세싱 효과 중 많은 것을 사용하며, 이에는 약간 고장난 임시 AA, 블룸 및 톤맵핑, 그리고 활성화된 경우 DOF와 모션 블러가 포함됩니다.
     * 게임의 성능 문제는 해결 가능하지만, 시간이 걸릴 것이며 개발자들이 그 시간을 투자할 의향이 있는지는 아직 미지수입니다.

        Hacker News 의견

     * 게임 Cities: Skylines 2의 불량한 성능에 대한 기사
     * Unity의 기본 솔루션 대신 게임 자체의 컬링 구현이 DOTS와 HDRP 사이의 Unity 통합 개발이 진행 중이기 때문에 사용됨
     * 일부 사용자들은 Unity의 도구, 특히 DOTS에 문제가 있으며, 회사가 잘못 관리되고 있다고 생각함
     * 게임 성능을 향상시키는 팁은 해상도 스케일링을 동적에서 고정으로 변경하는 것
     * 게임의 그래픽은 무겁고, 한 더미의 원목 메시가 100K 이상의 버텍스를 특징으로 함
     * 일부 독자들은 기사의 글쓰기 스타일을 좋아함
     * 일부 독자들은 특히 Unity에서 AAA 게임을 만드는 것이 수정 가능한 문제로 인해 도전적으로 보임
     * 게임의 성능 문제는 개발자들이 기술적인 측면보다 게임플레이에 더 집중했기 때문일 수 있음
     * 일부 사용자들은 게임이 중간 하드웨어에서 원활하게 실행될 수 있을 때까지 출시되지 않아야 한다고 믿음
     * 한 사용자는 해상도가 1080p로 설정된 빈 맵에서의 성능이 떨어져 게임을 환불해야 했음
     * 게임에서 사용된 DOTS는 Mike Acton의 창작물로, 그는 이후 Unity를 떠났음
"
"https://news.hada.io/topic?id=11798",""독단적이지 않으면서 상사로서의 권위를 발휘하는 방법"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ""독단적이지 않으면서 상사로서의 권위를 발휘하는 방법""

요약: 효과적인 지시 방법

     * 리더는 권위를 가지고 다른 사람들의 행동을 지시하는 사람임.
     * 팀원들에게 지시를 내리면서 그들을 기분 나쁘게 하지 않는 방법이 중요함.
     * 대부분의 팀 논의는 계층을 많이 두지 않고 모두가 참여하는 상호작용적인 과정임.
     * 리더의 주요 업무는 다양한 옵션을 제시하고 팀이 탄탄한 결정에 도달하도록 하는 것임.
     * 때로는 명확하고 단호한 지시가 필요하지만, 이를 '명령'이라고 느끼지 않게 전달하는 방법이 중요함.
     * 언어, 몸짓, 말투, 그리고 지시 전후의 대화가 모두 중요함.
     * 지시를 내릴 때 사용하는 단어 선택이 중요하며, 다양한 표현 방식을 고려해야 함.

지시의 분류

     * ""쓰레기를 버려라."" 가장 간단하고 직접적인 지시 방식으로, 의도가 명확하지만 다소 거칠게 느껴질 수 있음.
     * ""쓰레기 좀 버려줄래?"" '좀'이나 '줄래'를 추가하여 부탁하는 느낌을 주면서도 지시의 명확성을 유지함.
     * ""쓰레기를 버리면 좋겠어."" '좋겠어'를 사용하여 부드럽게 요청하지만, 지시가 덜 명확해질 수 있음.
     * ""쓰레기를 버려야 해."" '버려야 해'를 사용하여 약간의 강제성을 더하면서도 거칠지 않게 지시함.
     * ""쓰레기를 버리겠니?"" 질문 형태로 지시하여 선택권을 제공하면서도 지시의 의도를 분명히 함.
     * ""쓰레기를 버릴 수 있겠니?"" '버릴 수 있겠니'를 사용하여 가능성을 묻는 형태로 부드럽게 요청함.
     * ""우리 쓰레기를 버리자."" '우리'를 사용하여 함께하는 느낌을 주면서 지시를 내림.
     * ""왜 쓰레기를 버리지 않겠니?"" 매우 부드러운 표현이지만 지시의 명확성이 떨어짐.
     * ""쓰레기를 버리면 어떨까?"" '어떨까'를 사용하여 제안하는 느낌으로 지시함.
     * ""쓰레기를 버려주면 좋겠어."" '좋겠어'를 사용하여 부탁의 느낌을 주면서 지시함.

GN⁺의 의견

   이 글에서 가장 중요한 것은 리더가 팀원들에게 지시를 내릴 때, 그들의 참여와 열정을 유지하면서도 효과적으로 명확한 지시를 전달하는 방법을 찾는 것임. 이 글은 리더십을 발휘하면서도 '독단적'이라는 인상을 주지 않는 다양한 커뮤니케이션 기술을 제공함으로써, 초급 소프트웨어 엔지니어들이 팀에서의 역할을 더 잘 수행할 수 있도록 도움을 줌. 이러한 커뮤니케이션 방식은 팀 내에서 긍정적인 분위기를 조성하고, 모든 구성원이 문제 해결에 적극적으로 참여하도록 만드는 데 기여함으로써, 팀의 성과를 극대화하는 데 중요함.

        Hacker News 의견

     * ""내가 필요해""라고 말하는 사람들은 대화 상대가 나 자신이 아니더라도 목록에 올라감
          + 중요한 것은 사람들이 무엇이 중요한지, 왜 중요한지 알게 하는 것이며, 이는 공동의 계획의 일부로써 함께 결론에 도달함으로써 이루어져야 함
          + 정보를 공유하지 않아서 '우월함'을 유지하려고 하지 말 것
          + 다른 사람이 겪을 수 있는 압박을 고려할 것
          + '아니오'라고 말할 때 들을 것
          + 좋은 결과는 그 일을 한 사람에게 돌아가도록 할 것
          + 나쁜 결과는 비행기 추락 사고를 다루는 NTSB처럼 시스템의 결함을 찾아내는 방식으로 처리할 것
          + 다른 사람을 도와줄 준비가 되어 있을 것
     * 리더로서 이미 ""말을 어떻게 할 것인가""를 고민한다면 이미 실패한 것임
          + 리더는 관계를 맺고, 상위 수준의 문맥에서 협상을 해야 함: 개별 기여자(IC)의 가용성과 해결해야 할 문제 이해
          + 문제와 상호 신뢰를 모두 이해하면, 세부 사항은 자연스럽게 해결됨
     * ""쓰레기를 버려라""는 ""너는 쓰레기를 버려야 한다""보다 훨씬 덜 가혹함
          + 첫 번째 문장은 거부할 수 있는 여지를 줌
          + 두 번째 문장은 반응을 허용하지 않음
     * 좋은 기술 리더는 지시하기보다는 영감을 줌
          + 좋은 기술 리더는 영향을 주고, 안내하며, 사람들을 성장시킴
          + 진정성 있는 행동과 타인에 대한 고려가 중요함
     * 신뢰와 존중이 깊은 그룹에서는 서로에게 직접적일 수 있으며, 이는 거칠게 느껴지지 않음
     * 아내의 예: ""쓰레기를 버릴래?""
          + 엔지니어 마인드는 이를 말 그대로 해석함
     * ""나는 필요해"" 또는 ""쓰레기가 필요해""와 같은 표현은 수동적 공격적임
          + 직접적이고 예의 바른 표현이 중요함
     * 기사가 너무 길고 실제로 예의 바른 요청 방법을 제시하지 않음
          + 예의 바른 요청 방법:
              1. ""쓰레기를 버려 주세요.""
              2. ""쓰레기가 버려져야 해요. 할 수 있나요?""
              3. (여러 사람이 있을 때) ""쓰레기가 버려져야 해요. 누가 할 수 있나요?""
     * 팀 리더로서 팀을 외부 문제로부터 보호하고, 공동 목표에 대한 헌신을 보여주는 것이 중요함
     * 명령은 마지막 수단임
          + 팀이 결정을 내리고 토론을 마무리할 필요가 있을 때 주로 사용됨
          + 이유를 설명하고, 문제를 제시하며, 다른 사람의 제안을 장려하고, 간단히 토론한 후 결정을 내림
          + 관심을 보이고, 상대방을 신경 쓰는 것이 지시를 받아들이는 데 도움이 됨
          + 때로는 불합리한 명령을 받아들여야 하는 상황도 있음
"
"https://news.hada.io/topic?id=11759","OpenRefine - 오픈소스 데이터 정제 및 변환 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    OpenRefine - 오픈소스 데이터 정제 및 변환 도구

     * Faceting: Facet(데이터의 한 측면을 보는 것)을 이용한 필터링 및 패턴과 트렌드 검색
     * Clustering: 강력한 휴리스틱을 통해 유사한 값들을 묶어서 보기
     * Reconcilation: 데이터를 조정하여 데이터 셋을 외부DB와 일치시키기
     * 무제한 Undo/Redo 지원
     * 윈도우/맥/리눅스
"
"https://news.hada.io/topic?id=11690","NewPipe - 안드로이드를 위한 경량 YouTube 경험","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   NewPipe - 안드로이드를 위한 경량 YouTube 경험

     * NewPipe는 안드로이드 사용자를 위한 경량 YouTube 경험을 제공합니다.
     * 이 앱은 직관적이고, 기능이 풍부하며, 개인 정보 친화적인 YouTube 경험을 제공하도록 설계되었습니다.
     * 원래 YouTube 앱과 관련된 광고와 불분명한 권한을 제거합니다.
     * NewPipe는 오픈 소스 애플리케이션으로, GitHub에서 소스 코드를 확인할 수 있습니다.
     * 이 앱은 빠르고, 작고, 배터리 절약형이며, 데이터 소비량이 적게 설계되었습니다.
     * 오프라인 사용, 확장된 개인 정보 보호, 백그라운드 플레이어, 팝업 플레이어, 구독, 북마크, 히스토리 등을 지원합니다.
     * YouTube 외에도 NewPipe는 PeerTube, SoundCloud, Bandcamp, media.ccc.de와 같은 다른 서비스도 지원합니다.
     * 이 앱은 안드로이드 5+를 지원하며, 최신 버전은 NewPipe 0.25.2입니다.
     * NewPipe는 무료이며 오픈 소스로, GPL 3.0 라이선스로 보호 받습니다.
     * 이 앱은 성장하는 커뮤니티에 의해 지원되며, 113개 언어로 사용할 수 있습니다.
     * NewPipe는 안드로이드용 무료 및 오픈 소스 애플리케이션의 신뢰할 수 있는 카탈로그인 F-Droid에서 다운로드할 수 있습니다.
     * 이 앱은 기부금에 의해 지원되며, 그것이 대부분의 비용을 커버합니다.

   NewPipe - 안드로이드용 가벼운 유튜브 클라이언트

        Hacker News 의견

     * NewPipe는 안드로이드를 위한 경량 YouTube 경험입니다.
     * 일부 사용자들이 NewPipe를 통해 PeerTube 인스턴스에 로그인하는 데 어려움을 겪고 있어, 내부 및 비공개 비디오를 시청하는 것이 방해받고 있습니다.
     * NewPipe에는 내장된 SponsorBlock 기능이 있습니다.
     * 이 앱은 YouTube 비디오를 다운로드하여 특히 여행 중 오프라인으로 시청하는 데 편리함으로 인해 칭찬받았습니다.
     * 일부 사용자들은 비디오나 음악을 빠르게 다운로드하는 기능을 평가하여 6년 이상 NewPipe를 사용해 왔습니다.
     * YouTube의 변경 사항이 앱을 중단시킬 수 있으므로, 최신 업데이트가 필요할 때 F-Droid를 통해 NewPipe를 받는 것이 권장됩니다.
     * NewPipe는 F-Droid를 통해 설치할 수 있으며, 이는 긍정적인 신호로 받아들여집니다.
     * 일부 사용자들은 거의 완벽하다고 생각하지만, 창작자를 지원하기 위해 비디오에 좋아요를 누를 수 있는 기능이 없는 것을 아쉬워합니다.
     * GrayJay와 같은 다른 앱들도 사용자들에게 추천됩니다.
     * NewPipe는 일부 사람들이 안드로이드를 우수한 휴대폰 OS로 간주하는 이유 중 하나로 언급됩니다.
     * 일부 사용자들은 매일 식사 중 음악을 조용히 스트리밍하기 위해 이 앱을 사용하며, 구독 기능을 지원합니다.
     * NewPipe는 웹 애플리케이션의 구현 방식을 보여주는 데 칭찬받습니다.
     * Futo에서 제공하는 또 다른 앱인 Grayjay도 대안으로 언급됩니다.
"
"https://news.hada.io/topic?id=11809","소니, 첫 풀프레임 글로벌 셔터 카메라 'a9 III' 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   소니, 첫 풀프레임 글로벌 셔터 카메라 'a9 III' 발표

     * 소니가 세계 최초로 풀프레임 글로벌 셔터를 탑재한 알파 9 마크 III를 발표함.
     * 24.6MP 카메라로, ISO 성능과 다이내믹 레인지에 타협하지 않고, 최대 120fps 촬영 및 1/80,000초의 최대 셔터 속도를 제공함.
     * 새로운 Bionz XR 프로세서를 사용하여 이전 모델 대비 8배 더 많은 처리 능력을 가짐.

글로벌 셔터의 이점

     * 글로벌 셔터는 모든 이미지 데이터를 동시에 캡처하는 방식으로, 롤링 셔터 왜곡 효과를 없애고 거의 모든 셔터 속도에서 플래시 동기화가 가능함.
     * 인공 조명 아래에서 발생할 수 있는 밴딩 현상을 제거하고, 높은 셔터 속도에서도 일관된 노출을 유지함.

비디오 및 기타 기능

     * 4K/60p 촬영이 가능하며, 6K 캡처에서 가져온 4K/120p 촬영도 지원함.
     * 10비트 4:2:2 캡처, S-Cinetone 프로파일, HDMI를 통한 '16비트' Raw 비디오 출력 등 다양한 옵션을 제공함.

디자인 및 사용성

     * 셔터 버튼의 위치 개선과 새로운 기능 버튼 추가로 인체공학적 디자인을 강화함.
     * 선택적 배터리 그립의 인체공학적 디자인 개선 및 배터리 성능 15% 향상됨.

가격 및 출시

     * a9 III는 2024년 봄에 $5999의 권장 소매가로 출시될 예정임.

GN⁺의 의견

   이 기사에서 가장 중요한 내용은 소니가 세계 최초로 풀프레임 글로벌 셔터를 탑재한 카메라를 발표했다는 점이다. 이 기술은 사진과 비디오 모두에서 왜곡 없는 이미지를 제공하고, 빠른 셔터 속도에서도 플래시와 동기화할 수 있는 새로운 가능성을 열어준다. 이러한 혁신은 전문 사진가들에게 새로운 창작의 기회를 제공하며, 카메라 기술의 미래에 대한 흥미로운 통찰을 제공한다.

        Hacker News 의견

     * 글로벌 셔터에 대한 설명
          + 글로벌 셔터는 이미지 데이터를 동시에 캡처하는 방식으로, 기존의 순차적으로 작동하는 셔터 시스템과 다름.
          + 비디오와 스포츠 사진촬영에 특히 유용하며, 빠르게 움직이는 대상의 왜곡을 해결하는데 도움이 됨.
          + 현재 카메라들은 센서를 크롭하여 롤링 셔터 문제를 완화시키지만, 이는 렌즈가 포착한 전체 영역을 사용하지 못하는 단점이 있음.
          + 새로운 센서는 전체 해상도를 사용할 수 있으며 크롭할 필요가 없음.
          + 셔터 속도와 조리개를 조절하여 비디오의 모습을 제어할 수 있으며, 빠른 센서 읽기는 더 많은 창의적인 여지를 제공함.
     * C2PA 인증에 대한 소개
          + C2PA는 카메라에서 이미지가 디지털 서명되어 진위 여부를 확인할 수 있는 체인을 생성함.
          + TruePic과 같은 인증 서비스를 통해 이미지가 해당 카메라에서 나왔는지를 확인할 수 있음.
          + AI 이미지와 딥페이크에 대항하는 흥미로운 방법으로, 딥페이크 등록도 가능하지만 그 이유는 불분명함.
     * C2PA 인증 메타데이터의 중요성
          + a9 카메라에 포함된 C2PA 인증 메타데이터는 디지털 미디어의 출처에 대한 암호화된 체인을 제공함.
          + C2PA는 이미지가 AI 훈련이나 기계 학습 데이터로 사용되지 않도록 하는 기능도 포함함.
     * C2PA 인증 메타데이터에 대한 반응
          + C2PA는 Content Authentication Initiative와 Project Origin initiative의 결합으로, 일반 소비자나 프로슈머에게 유익할 수 있음.
          + 그러나 C2PA 사양은 복잡하고 이해하기 어려운 부분이 있음.
     * 소니 카메라에 대한 평가
          + 소니가 전문가 시장에서 중요한 역할을 하고 있으며, 카메라 샵에서 일하는 가족 구성원이 소니 라인에 대해 매우 긍정적임.
          + 카메라와의 인터페이스가 어렵다는 점은 단점이지만, 전반적으로 훌륭한 장비로 평가됨.
     * 셔터 기술의 역사
          + 롤링 셔터 문제는 라이카 35mm 카메라와 같은 초점면 셔터의 도입으로 시작됨.
          + 중형 카메라에서는 리프 셔터를 사용하여 롤링 셔터 문제가 없으며, 스튜디오 작업에 적합함.
          + 35mm 카메라 중 일부는 리프 셔터를 사용하지만, 대부분은 고정 초점 거리 디자인임.
     * 글로벌 셔터의 장점
          + 글로벌 셔터를 사용한 카메라로 촬영한 사진은 스포츠/액션, 카메라 움직임, 회전 운동 등에서 발생하는 이상한 아티팩트가 없어짐.
     * 글로벌 셔터의 기능적 질문
          + 회전하는 비행기 프로펠러를 촬영할 때 글로벌 셔터의 효과가 궁금함.
          + 글로벌 셔터를 필요하지 않을 때 끌 수 있는지, 그렇게 하면 동적 범위가 높아지는지에 대한 질문이 있음.
     * 카메라의 저장 장치에 대한 제안
          + PCIe5/6 슬롯을 카메라에 추가하여 내부 2-4TB 드라이브를 쉽게 삽입할 수 있도록 하는 것이 바람직함.
          + 현재 CFE 카드는 기능에 비해 비싼 편임.
     * 카메라 셔터 속도의 놀라운 성능
          + 1/80000초의 셔터 속도로 총알을 촬영할 수 있으며, 충분한 빛이 있을 경우 실제로 총알을 촬영하는 것이 가능함.
"
"https://news.hada.io/topic?id=11790","talk-llama - 터미널에서 LLaMA와 대화하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     talk-llama - 터미널에서 LLaMA와 대화하기

     * Whisper Medium(Whisper.cpp) + LLaMA v2 13B Q8_0 을 M2 Ultra에서 시연
     * Whisper로 음성인식하여 해당 질문을 LLaMA에게 보낸뒤 답변을 MacOS의 음성합성(say 명령)을 이용해서 출력
     * 세션 관리를 지원해서 기존 대화 내용에 기반한 연속적인 대화 가능

   13B 는 울트라에서 잘 되는거 같아요. M3 Max 에서는 어떨까 궁금하네요
"
"https://news.hada.io/topic?id=11757","EU의 CSAM 규제 관련 '비밀 전문가 명단' 은폐는 부적절한 관리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 EU의 CSAM 규제 관련 '비밀 전문가 명단' 은폐는 부적절한 관리

     * 유럽 옴부즈맨, 유럽위원회의 CSAM 규제 전문가 명단 미공개 '부적절 행정' 판결
     * 미공개 명단, 암호화 침해 없는 아동 성학대물 감지 기술적 가능성 관련
     * 아일랜드 시민자유위원회(ICCL), 문서 요청 실패로 유럽위원회에 불만 제기
     * 450명 이상의 학자 및 공익 기술자, 암호화된 콘텐츠 내 CSAM 탐지 기술 미성숙 공개 주장
     * 유럽위원회의 비공개 전문가 의존성, 학계의 공개 경고와 대조
     * 2022년 12월, ICCL 명단 보유 인정 후 미공개로 유럽위원회에 불만 제기
     * 옴부즈맨, ICCL 요청의 일부로 명단 인정 실패한 유럽위원회 비판
     * CSAM 규제안, 대규모 감시 및 암호화 약화 우려, EU 무차별 감시 반대 법률과 충돌 논란
     * 유럽이사회 법률 서비스, UN 인권고등판무관, 유럽 데이터 보호 위원회 등 다양한 기구의 비판
     * ICCL의 크리스 스리샥 박사, 규제 준비 과정의 투명성 및 로비스트 영향 우려 강조
     * 옴부즈맨의 전체 결정, 공개 검토 가능

        Hacker News 의견

     * CSAM 사적 유통의 실제 피해에 대한 의문 제기, 창작물 자체가 진짜 문제이며 이미 불법이라는 주장
     * 옴부즈맨 결정 링크 제공, 사건 관련 관료적 복잡성 강조
     * 서방 정부의 잠재적 남용 방지를 위해 지정학적 경쟁국을 포함한 글로벌 합의에 의한 CSAM 데이터베이스 관리 제안
     * EU 집행위원회의 적절한 절차 미준수에 대한 비판, 정보 요청 거부자에 대한 책임 조치 요구
     * CSAM 대응 논리와 다른 유형의 폭력 콘텐츠에 대한 유사 조치 가능성 비교, 정책 일관성에 대한 의문
     * 정부의 비밀주의 비판, 트랜스-태평양 파트너십 협상과 같은 과거 사건과의 유사성 제기, 공개 검토 회피 패턴 지적
     * 기업의 비밀 감시 노력 참여에 대한 우려, 투명성 및 인권과 윤리 고려 요구
     * EU 집행위원회 구성에 대한 직접적 선거 영향력 부재에 대한 불만 표출
     * EU 내 다수의 로비스트 존재 언급, 결과 미제공 시 효과성에 대한 의문
     * CSAM 약어가 아동 성적 학대 자료를 의미함을 명확히 함
"
"https://news.hada.io/topic?id=11724","바닐라 자바스크립트로 DOM 조작을 완벽하게 습득하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     바닐라 자바스크립트로 DOM 조작을 완벽하게 습득하기

     * 본문은 바닐라 자바스크립트를 사용한 Document Object Model (DOM) 조작 마스터링에 대해 논의합니다.
     * Angular, VueJS, React, Solid, Svelte와 같은 현대 도구의 사용에도 불구하고 웹 개발을 위해 브라우저 DOM API 이해의 중요성을 강조합니다.
     * 저자는 기본 브라우저 API, 이해하기 쉬운 예제, 실시간 데모, 팁 및 모범 사례, 실제 사용 사례, 현대 브라우저 및 인터넷 익스플로러와의 호환성을 포함한 자료 모음을 제공합니다.
     * 이러한 자료는 기본, 중급, 고급의 세 가지 레벨로 나뉩니다.
     * 기본 레벨에는 사용자의 색상 체계 선호에 따라 파비콘을 동적으로 변경하거나, 웹페이지의 읽는 시간을 계산하고, CSS 루트 변수를 동적으로 업데이트하는 작업이 포함됩니다.
     * 중급 레벨에는 Shift+Tab 키 조합을 사용하여 텍스트 영역에서 들여쓰기를 제거하거나, 전체 화면 모드로 들어가고, 스핀 입력을 구축하는 작업이 포함됩니다.
     * 고급 레벨에는 사용자 정의 커서를 생성하거나, HTML 문자열을 살균하고, 사용자 정의 스크롤바를 생성하는 작업이 포함됩니다.
     * 저자는 모달을 열 때 레이아웃이 이동하는 것을 피하고, 텍스트 노드의 경계 사각형을 얻는 등의 팁도 제공합니다.
     * 본문은 프론트엔드 기술 콘텐츠에 대한 저자의 뉴스레터 구독 초대로 마무리됩니다.

        Hacker News 의견

     * 본 기사는 DOM 조작을 완벽하게 마스터하기 위한 다양한 예시들을 제공합니다.
     * 예시들은 상세하고 기능적인 UI 작업에 대한 칭찬을 받았습니다.
     * 일부 사용자들은 기본 DOM API 작업이 지루하고 오류가 발생하기 쉽다고 느껴, Svelte와 같은 프레임워크를 사용하게 되었습니다.
     * 특정 코드와 관련된 잠재적인 보안 취약점에 대한 논의가 있으며, 화이트리스트 사용을 제안하고 있습니다.
     * 일부 사용자들은 코드에서 불필요한 반복을 지적하고, 더 효율적인 대안을 제안하였습니다.
     * 일부 예시들은 더 편리한 최신 버전이 사용 가능한 상황에서 오래된 API를 사용하고 있습니다.
     * ""텍스트 영역 자동 확장"" 기술은 일부에게는 구식으로 여겨지며, 새로운 CSS 속성 또는 숨겨진 미러 요소 사용을 제안하고 있습니다.
     * 기사는 기본적인 DOM 조작에 대한 이해의 유용성에 대한 논의를 촉발하였습니다.
     * 일부 사용자들은 모든 것이 ""바닐라"" JS로 작성되었던 웹 개발 초기 시절을 회상하였습니다.
     * 이 예시들을 패키지화하여 쉽게 업데이트하고 사용할 수 있도록 하는 것이, 복사-붙여넣기보다 나을 것이라는 제안이 있습니다.
"
"https://news.hada.io/topic?id=11720","touchHLE - 아이폰 OS 앱을 위한 High-Level Emulator","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              touchHLE - 아이폰 OS 앱을 위한 High-Level Emulator

     * Rust로 작성되어, 데스크탑 OS 및 Android 에서 실행되는 iPhone OS 앱용 에뮬레이터
     * HLE(High-Level Emulation) 방법은 LLE(Low-Level)과 달리 iPhone/iPod Touch 하드웨어를 직접 에뮬레이션 하지 않음
     * 시스템 프레임워크(Foundation, UIKit, OpenGL ES, OpenAL 등)를 직접 구현해서 제공함으로써 iPhone OS를 그대로 대체
     * 에뮬레이트된 CPU(Dynarmic, ARM dynamic recompiler)가 실행하는 유일한 코드는 앱 바이너리와 몇가지 라이브러리 뿐(libstdc++, libgcc)
     * 프로젝트의 목표는 iOS 초기시절의 ""게임""을 실행하는 것
          + 현재: iPhone OS 2.x 시절의 아이폰/아이팟 터치 앱들을 지원
          + 다음: iPhone OS 3.0 지원
          + 장기: iPhone OS 3.1, iPad apps (iPhone OS 3.2), iOS 4.x, …
          + 절대 안할것: 64bit iOS
     * 게임이 아닌 앱에 대한 지원은 더 복잡하고 재미가 떨어지므로 우선순위가 아님
     * touchHLE app compatibility database 를 통해서 동작하는 앱들 정리중. 누구나 참여가능

   초기 ..게임? 1to45..? 열심히 했지...

   시스템 프레임워크를 직접 구현해서 제공.... 대단하네요
"
"https://news.hada.io/topic?id=11776","ko - 간단하고 빠르고 안전한 Go용 이미지 빌더 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ko - 간단하고 빠르고 안전한 Go용 이미지 빌더

     * OS 기본 이미지에 대해 종속성이 많지 않은 Go 어플리케이션 이미지 생성에 최적
     * 로컬 머신에서 go build를 실행해서 이미지를 생성하므로 도커 설치할 필요 없음
          + 경량 CI/CD 유스케이스에 적합
     * 멀티 플랫폼 빌드를 쉽게하고, 기본값으로 SBOM을 생성하며, 간단한 YAML 템플릿을 지원하여 쿠버네티스와도 잘 연동
"
"https://news.hada.io/topic?id=11694","사람들을 죽이는 불량 적우(터머릭)를 막는 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       사람들을 죽이는 불량 적우(터머릭)를 막는 방법

     * 기사는 남아시아에서 특히 가짜 적황으로 인한 납 중독 문제를 논의한다.
     * 적황은 생강과 같은 식물로, 아유르베다 의학과 아시아 요리에 널리 사용된다.
     * 이 향신료는 종종 그 색상을 강조하기 위해 신경독성 물질인 납 크로메이트로 덮여 있다.
     * 남아시아는 이러한 관행 때문에 세계에서 가장 높은 납 중독률을 가지고 있다.
     * 2019년 남아시아에서 납 중독은 최소 140만 명의 사망을 초래하고, GDP의 9%에 해당하는 생산성을 감소시켰다.
     * 기사는 올바른 정책, 리더십, 메시지 전달로 이 문제를 크게 줄일 수 있다고 제안한다.
     * 방글라데시는 이 문제를 성공적으로 해결한 국가로 강조되었다.

        Hacker News 의견

     * 인도에서 주로 생산되는 부정확한 적양 강조 문제에 대한 기사
     * 대규모로 음식에 납을 고의적으로 첨가하는 것에 대한 충격과 우려
     * 문제는 인도나 방글라데시에만 국한되지 않고, 미국에서 판매되는 많은 브랜드도 납으로 오염됨
     * 적양 강조는 종종 색상을 강조하기 위해 신경독인 납 크로메이트로 덮여 있음
     * 밝은 색상의 음식을 요구하면서 잠재적 독성을 고려하지 않는 사람들과 그러한 요구를 충족시키기 위해 제품을 제조하는 사람들에게 비난
     * 적양 강조에 납이 있는지 확인하기 위한 가정에서 할 수 있는 테스트 존재
     * 문제는 적양 강조를 넘어서 다른 불필요한 염료로도 음식이 부정확하게 되는 경우가 있음
     * 최근 추정치에 따르면 전 세계적으로 3명 중 1명인 8억 1천 5백만 명의 아이들이 납에 의해 중독됨
     * 납 크로메이트의 독성에 대한 논쟁, 일부는 그것이 특히 위험하지 않다고 주장
     * EU에서 판매되는 적양 강조에 과도한 양의 납이 포함될 가능성에 대한 의문 제기
     * 연구자들이 방글라데시의 상인들에게 납 크로메이트 사용을 중단하게 하는 방법에 대한 상세한 기사 공유
     * 적양 강조의 부정확에 연루된 사람들에 대한 엄중한 처벌을 제안하는 일부 댓글
"
"https://news.hada.io/topic?id=11716","뇌 손상으로 인해 시간 인지 능력을 잃다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         뇌 손상으로 인해 시간 인지 능력을 잃다

     * 저자는 루푸스 뇌염, 즉 루푸스가 심각한 뇌염을 일으키는 희귀한 상태에 시달렸다.
     * 이 상태는 시간 인식을 포함한 다양한 인지 능력의 손실을 초래했다.
     * 전문 음악가인 저자는 음악에서의 타이밍의 중요성 때문에 시간 인식의 손실을 특히 괴로워했다.
     * 저자의 질병으로 인해 짧은 시간과 긴 시간을 구분할 수 없게 되어 모든 순간이 혼란스럽고 끝없이 느껴졌다.
     * 뇌의 시간 인식은 추상적이며 외부 및 내부 감각 입력과 기억의 조합에 의존한다.
     * 뇌에는 시간 인식을 위한 특정 영역이 없으며, 대신 뇌간 및 피질 전반에 걸쳐 다양한 작은 처리 사이트가 관련되어 있다.
     * 뇌는 해마의 시간 측정 세포 네트워크를 통해 시간을 측정하며, 이는 10초 이하의 시간 단위를 정확하게 측정할 수 있다.
     * 더 긴 시간의 인식은 에피소드 기억의 생성을 통해 측정된다고 여겨지며, 이는 우리의 시간 감각을 형성한다.
     * 저자의 뇌 손상 회복은 긴장감 넘치는 과정이었으며, 메트로놈을 이용한 광범위한 연습을 통해 타이밍 감각을 되찾았다.
     * 회복 후에도 저자는 여전히 기억과 시간 인식에 어려움을 겪지만, 다시 음악가처럼 생각할 수 있어서 감사하다.
     * 저자는 뇌가 시간을 이해하는 복잡한 과정에 대해 반성하며, 오케스트라의 음악가들의 동기화를 이 복잡한 인지 능력의 증거로 감사하게 생각한다.

        Hacker News 의견

     * 울트라 러너인 Diane Van Deren은 발작을 치료하기 위해 뇌의 일부를 제거했는데, 이로 인해 시간 인식과 지도 읽기 능력에 영향을 받았습니다.
     * Van Deren의 시간 인식 불능은 그녀의 달리기에 이점을 줄 수 있었으며, ""흐름"" 상태를 달성하고 얼마나 오래 달렸는지를 깨닫지 못하고 시간을 잊어버리게 했습니다.
     * 또 다른 사용자는 뇌졸중 후 시간 개념을 잃어버린 그들의 어머니의 경험을 공유했는데, 이는 그녀의 삶에 큰 영향을 미쳤습니다.
     * 우울증을 가진 사용자는 ""시간 왜곡""된 기억을 경험하며, 사건이 2개월 전에 일어났는지 아니면 1년 이상 전에 일어났는지를 종종 구분하지 못했습니다.
     * ADHD는 때때로 ""시간 난독증""으로 묘사되며, 사용자는 시간을 다루는 데 어려움을 겪지만 그 외에는 잘 기능하는 사람들에게 도움이 될 수 있는 것이 무엇인지 궁금해했습니다.
     * 일부 사용자들은 Hacker News의 댓글 기록이 시간 인식을 확인하는 데 도움이 된다고 발견했습니다.
     * 사용자는 루푸스가 심한 뇌 손상을 일으킬 수 있는지, 그리고 수막염에서 비슷한 시나리오가 발생할 수 있는지 의문을 제기했습니다.
     * 사용자는 전기 뇌 자극에 의해 유발된 80년간의 기억에 대한 리뷰 링크를 공유했습니다.
     * THC 에디블의 새로운 사용자는 약 50시간 동안 단기 기억을 잃어버렸으며, 이로 인해 시간 인식에 큰 영향을 받았습니다.
     * 어린 시절 뇌 손상을 겪은 사용자는 시간이 지나가는 것을 인식하지 못하는 경험을 공유했으며, 시간을 인식하게 만드는 약 (Abilify)을 복용하는 것이 얼마나 고통스러운지를 설명했습니다.
"
"https://news.hada.io/topic?id=11789",""Elixir로의 전환lixir로의 전환""

Elixir로 전환하기

     * 새로운 직장에서 Elixir를 주요 백엔드 언어로 사용함.
     * Elixir나 Erlang 경험은 없었으나, Ruby와 유사한 문법 덕분에 쉽게 배움.
     * 객체지향 언어의 상태 관리 문제를 피하고, 불변성과 함수형 프로그래밍의 장점을 누림.

Elixir의 장점

     * 가변 상태를 가진 코드는 유지보수가 어려움.
     * Elixir는 Ruby처럼 DSL을 지원하지만, 컴파일 시간 매크로를 사용하여 런타임 코드 생성.
     * 테스트 작성 없이도 매크로 사용 오류를 컴파일 시간에 발견할 수 있음.

문법과 표현식

     * Elixir의 파이프라인 문법이 좋지만, Clojure의 'threading' 연산자를 선호함.
     * 'with' 표현식을 통해 복잡한 함수를 성공 경로와 에러 처리 부분으로 나눌 수 있음.

예외 처리

     * Ruby에서는 예외를 제어 흐름에 사용하는 것이 일반적임.
     * Elixir에서는 예외보다는 Result / Either 모나드를 사용하여 ok와 error를 반환값으로 사용함.

GN⁺의 의견

   이 글에서 가장 중요한 것은 Elixir 언어가 가지는 프로그래밍의 즐거움과 유지보수의 용이성임. 객체지향 언어의 복잡한 상태 관리 문제를 해결하고, 불변성과 함수형 프로그래밍을 통해 코드의 안정성과 가독성을 높인 점이 흥미롭다. 특히, 컴파일 시간에 오류를 발견할 수 있는 매크로 시스템은 개발자에게 더욱 안정적인 코드 작성 환경을 제공한다. 이러한 특징들은 초급 소프트웨어 엔지니어들에게도 Elixir 언어 학습의 매력을 느끼게 할 것이다.

        Hacker News 의견

     * Elixir 언어에 대한 관심이 최근 몇 주 동안 유튜브 비디오를 통해 증가함.
          + Elixir는 Erlang의 아이디어를 좋아하지만 실제로 사용해본 경험은 다소 기이함.
          + 분산 프로그래밍의 미래로서 격리된 프로세스와 메시지 전달(Actors)에 대한 긍정적인 전망.
          + 패턴 매칭 기능에 대한 호감, 하지만 Elixir의 LiveView와 LiveBook 같은 '마법'에 대한 회의적인 시각.
          + GenServers와 같은 Elixir 특유의 용어와 개념에 대한 낯섦.
          + 소규모 커뮤니티에 대한 위험성 인식, 하지만 커뮤니티의 성취에 대한 칭찬.
          + 타입 시스템 구현에 대한 기대감 표현.
     * Elixir/Erlang의 주요 장점으로 백그라운드 작업의 용이성 강조.
          + 이전 직장에서의 경험을 통해 Elixir의 Task를 사용하면 서버가 중단되지 않고 HTTP 요청을 처리할 수 있음을 인식.
     * Sasa Juric의 ""The Soul of Erlang and Elixir"" 강연을 통해 언어의 강력함을 강조.
     * 1991년부터 Erlang을 사용해온 경험 공유.
          + 다른 언어들도 사용해봤지만 Erlang이 가장 즐거움을 주는 언어임.
          + 은퇴하기 전까지 Erlang 사용을 계속할 계획.
     * Elixir를 배우고 사용하는 것이 즐거움을 주며, BEAM/OTP의 간결함과 기능성에 대한 만족감 표현.
     * Elixir의 장점으로 루비와 같은 재미와 객체지향 프로그래밍의 단점을 제거한 불변성 및 함수형 특성 강조.
          + 타입 시스템의 추가를 희망함으로써 큰 코드베이스에 대한 이해도 향상을 기대.
     * 루비에서 예외를 제어 흐름에 사용하는 것에 대한 오해 지적.
     * F# 사용자로서 Elixir의 혼란스러움을 표현.
          + 함수의 시그니처가 타입 정보를 제공하지 않아 대규모 라이브러리에서 사용이 어려움.
          + Elixir의 주요 매력 포인트에 대한 질문.
     * Elixir 사용 경험에서 배우기 쉬움, 패턴 매칭, 불변 데이터의 장점을 강조.
          + CQRS 시스템 구축에서의 뛰어남을 경험.
          + BEAM의 안정성과 GenServer의 오류 처리 방식에 대한 칭찬.
     * 새로운 기술에 대한 초기 단계의 낙관적인 인식에 대한 경고.
          + 실제로 오랜 기간 사용해본 후의 경험을 공유할 것을 권장.
"
"https://news.hada.io/topic?id=11741","구독 모델이 소셜 미디어의 새로운 표준(New Normal)이 될 이유","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                구독 모델이 소셜 미디어의 새로운 표준(New Normal)이 될 이유

     * 소셜 미디어는 우리 삶에서 매우 중요한 부분이 되었으며, 친구 및 가족과의 소통뿐만 아니라 브랜드와 크리에이터가 커뮤니티를 구축하는 장이기도 함
     * 지금까지 우리 모두는 ""광고가 지원되는 무료"" 소셜 미디어 플랫폼을 즐겨 사용해 왔지만, 앞으로는 달라질 수 있음
     * 많은 플랫폼이 여러 가지 요인으로 인해 광고 수익이 감소하고 있으며, 이제 비즈니스 모델에 몇 가지 변화를 모색중
     * 구독 기반 소셜 미디어 모델은 소셜 미디어의 미래를 어떻게 변화시킬 수 있을까

광고 기반 소셜 미디어의 문제

     * 광고 지원 소셜 미디어 플랫폼은 타겟 광고와 스폰서 콘텐츠를 통한 수익 창출이라는 한 가지 목표에 집중
     * 대규모 사용자 기반과 복잡한 타겟팅 알고리즘 덕분에 광고는 지난 몇 년 동안 이러한 플랫폼의 수익성을 크게 높여주었음
     * 하지만 이 모델에는 개인정보 보호 문제, 사용자에게 더 관련성 높은 콘텐츠보다 스폰서 콘텐츠의 우선순위, 사용자 데이터 사용에 대한 투명성 부족 등 여러 가지 문제가 있어서, 많은 사용자가 이러한 앱에서 안전하지 않다고 느끼고 있음
     * 이에 대응하여 Apple은 사용자가 소셜 미디어 플랫폼의 추적을 차단할 수 있는 앱 추적 투명성(App Tracking Transparency) 기능을 출시
          + ATT는 사용자를 위한 훌륭한 도구였지만, 결과적으로 Facebook과 같은 소셜 플랫폼은 이로 인해 광고 수익에 큰 타격을 입게 될 것이라고 발표했음
     * 이는 광고 기반 소셜 미디어 비즈니스 모델에 대한 실존적 위협이었기 때문에, 모든 소셜 플랫폼이 얼마 지나지 않아 유료 구독을 도입하기 시작한 것은 우연이 아님
     * Snapchat+, X Premium, Meta Verified, YouTube Premium 등 소셜 미디어 회사들은 광고 수익에 대한 의존도를 낮추기 위해 이러한 구독 서비스를 만들음
     * 그렇다면 이러한 구독 기반 모델은 마케터에게 어떤 의미가 있을까?

구독 기반 모델 이해하기

     * 구독 기반 모델은 마케터에게는 여러 가지가 복합적으로 작용하는 모델로, 구독하는 브랜드에게는 몇 가지 뚜렷한 이점이 있는 반면, 더 많은 사용자가 구독할수록 큰 위험이 따르기도 함
     * 이 접근 방식이 디지털 마케팅 환경을 어떻게 변화시킬까 ?
          + 광고 효과 감소
               o 사용자 입장에서 이러한 프리미엄 소셜 미디어 구독의 가장 큰 장점 중 하나는 광고를 줄이거나 완전히 제거한다는 점
               o 피드에 여유 공간을 확보하려는 사용자에게는 좋지만, 마케터에게는 큰 문제가 되어 다음과 같은 결과를 초래
               o 타겟 광고가 사라지면 브랜드가 이상적인 고객에게 효율적으로 도달하기 어려워지고 ROI가 제한될 수 있음
               o 플랫폼이 소셜 피드에서 광고를 제거하기 시작하면 브랜드는 해당 오디언스에게 도달할 수 없게 되고, 마케터는 유료 캠페인에 대한 예상 KPI를 달성하는 것이 거의 불가능해짐
          + 오가닉 도달률에 대한 의존도 증가
               o 유료 광고로 오디언스에게 도달하기 어려워짐에 따라, 브랜드는 오가닉 도달률에 더 많이 의존하여 오디언스와 연결해야 함
               o 브랜드가 플랫폼의 다른 모든 사용자와 동등한 위치에 놓이게 되므로 경쟁이 치열해질 수 있음
               o 인플루언서 마케팅과 같은 전략은 이러한 프리미엄 사용자에게 도달하기 위한 핵심 전략이 될 것
          + 리소스가 제한된 소규모 비즈니스의 과제
               o 소규모 브랜드는 인플루언서 마케팅이나 스폰서 콘텐츠에 투자할 예산이 부족할 수 있으며, 이는 잠재 고객에게 도달하는 데 어려움을 겪을 수 있다는 의미

고유한 기능의 활용

     * 구독 모델의 장점 중 하나는
          + 이러한 구독의 가치를 높이기 위해 소셜 미디어 플랫폼은 마케터와 크리에이터를 위한 새로운 기능을 개발해야 하는 새로운 인센티브가 생김
          + X를 예로 들면, 이전에는 인증 계정 확인 표시(블루 마크)가 평판이 좋은 대형 계정에만 제공되었음
          + 이제 모든 브랜드 구독자는 자신의 계정을 인증하여 더 긴 글자 수, 서식 지정 기능, 게시물 편집 기능 등을 사용할 수 있게 됨
     * 물론 여기에는 어두운 면도 있음
          + 몇 달 전, 모든 사용자에게 무료로 제공되던 TweetDeck(현재 X Pro로 알려짐)이 수년 만에 X 프리미엄 구독으로 전환됨
          + 무료 버전의 플랫폼과 차별화하기 위해서는 인증, 개선된 콘텐츠 관리 시스템, 향상된 사용자 지정 옵션 등과 같은 독점적인 기능이 필요하며, 이는 사용자에게 한때 무료였던 것에 대한 비용을 지불하게 하는 것을 의미하기도 함

방 안의 코끼리

     * 구독 모델에 대한 논의에서 엘론 머스크와 그의 입장에 대해 이야기하지 않을 수 없음
     * 많은 플랫폼이 프리미엄 구독을 도입했지만, 모든 사용자에게 액세스 비용을 청구하는 것을 고려하고 있는 플랫폼은 X가 유일하기 때문
     * 모든 소셜 플랫폼이 이 방향으로 가고 있는 것일까? ""NO""
     * 항상 무료로 제공되던 것을 유료로 전환하도록 설득하는 것은 충분히 어려운 일
     * 광고 지원 소셜 미디어 모델에 약점이 있는 것은 사실이지만, 여전히 수익을 창출하는 데 있어 성공 공식
     * 수익 외에도 모든 사용자에게 커뮤니케이션 플랫폼에 대한 액세스 비용을 청구하는 것에 대한 윤리적 논쟁도 있음
     * 모든 사람이 소셜 미디어 플랫폼에 액세스하기 위해 반복적으로 요금을 지불할 수 있는 여유가 있는 것은 아니기 때문
     * 이는 포용성에 대한 의문을 제기하며, 구독료를 지불할 능력이 없는 사람들이 온라인 커뮤니티에서 배제되어 기존의 사회적 불평등을 더욱 심화시킬 수 있는 디지털 격차를 만들 위험성이 있음
     * 좋든 나쁘든 소셜 미디어는 사람들의 일상 생활에서 중요한 부분이 되었음
     * 사용자에게 요금을 부과하려는 움직임은 신중하게 고려되어야 하며, 포용성과 공정성을 보장하기 위한 조치와 균형을 이루어야 함
     * 구독 기반 소셜 미디어 모델은 광고 중심 플랫폼과 관련된 많은 문제를 해결할 수 있는 잠재력을 가지고 있지만, 완전히 새로운 문제를 야기할 가능성도 있음
     * 소셜 미디어에서 유일한 상수는 변화이며, 이는 지금도 마찬가지
     * 궁극적으로 이러한 모델의 성공 여부는 사용자에게 실질적인 가치를 제공하고 보다 투명하고 윤리적인 소셜 미디어 생태계에 대한 신뢰를 구축할 수 있는 능력에 달려 있음

   실제로 활발하게 이용되고 있는 구독 서비스의 예시를 추가해주시면 감사하겠습니다:)
"
"https://news.hada.io/topic?id=11807","Humane, 가슴에 붙이는 AI기기 "ai pin" 공개 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Humane, 가슴에 붙이는 AI기기 ""ai pin"" 공개

     * 가슴에 붙이는 Pin 형태의 디바이스 (34.2g, 44x47mm)
     * 손에 투사하는 방식의 Laser Ink Display로 손바닥이 메뉴 디스플레이가 되고, 손을 기울이고 굴려서 인터랙션. 엄지/검지를 맞닿아서 선택
          + 720p 해상도. 30cm 거리에서 7 x 9.6cm 정도의 화면 크기
     * 터치 & 홀드하면 음성으로 질문하고 답변 받기
     * 두손가락으로 누르면 음성 번역기 실행
     * 터치, 탭, 스와이프 등의 동작 지원. 더블탭으로 현재 순간 캡쳐

기기 스펙

     * Octa-core 퀄컴 Snapdragon 2.1Ghz, 4GB RAM, 32GB eMMC
     * 3가지 색상 : Eclipse(검정), Equinox(흰색+검정), Lunar(흰색)
     * Latch, Batter Booster, Clip
     * 13MP, 4208x3120px Ultra Wide Camera. 120° FOV, f/2.4 aperture
     * AI Mic, Personic Speaker
     * 조도센서, 모션센서(가속도계 + 자이로스코프), 위치센서(자력계 + GPS), 3D 깊이 센서 (간접 Time of Flight 카메라)
     * 셀룰러 : 듀얼 안테나 MIMO, LTE, eSIM
     * WiFi 5 (802.11ac) 2.4Ghz + 5Ghz
     * 블루투스 5.1. SBC/AAC/LDAC,aptX
     * GPS, GLONASS, Galileo, BeiDou, Wifi Positioning System, Assisted GPS
     * 네트워크: T-Mobile 에 의해 제공되는 Humane Wireless Service

   특정 각도와 동작으로만 사용할 수 있는 기기가 과연 효용이 클지 모르겠네요..
   더구나 옷에 핀처럼 다는거라면 단단하게 고정되지도 않을 것 같은데..

   GN+ 에도 ai pin 기사가 올라오긴 했는데, 잘 요약을 못해서 수동 요약했습니다.
   HN의 의견들은 같이 볼만한듯 해서 옮겨와 봅니다.

   전 휴대폰처럼 크기가 커서 누가 사용하고 있다는 것을 즉시 확인 가능한 기기가 아니면, 사람들이 과연 받아들일지 의문입니다.
   글래스형태나 이런 핀형태의 기기에 카메라가 있다면 사용 용도가 제한적이 될 듯 해요

        Hacker News 의견

     * 관련 진행 중인 스레드:
          + 인간적인 AI 핀 캠페인이 휴대폰을 대체하기 위해 시작됨 - 2023년 11월 (130개의 댓글)
     * 새로운 시도에 대한 흥분:
          + 비록 성공 여부가 불투명하고 프라이버시 문제나 배터리 수명 제한이 있으며 비용이 많은 사람들에게 부담이 될 수 있지만, 새로운 상호작용 방식에 대한 시도와 디자인이 인상적임.
     * AI의 오류:
          + 데모에서 AI가 태양의 일식에 대한 잘못된 정보를 제공하는 것을 보여주며, 기술 데모에서 AI의 정확성을 확인하는 것의 중요성을 강조함.
     * 대중적인 컴퓨터 대화의 어려움:
          + 사람들이 공공장소에서 컴퓨터와 대화하는 것을 꺼려하며, Alexa와 같은 기술이 집 안에서는 어느 정도 사용되지만, 음성 인터페이스의 한계로 인해 사용이 줄어듦.
     * 기능성 비교:
          + 이 제품이 기능적으로는 애플 워치보다 떨어지며, 패션쇼에서의 홍보가 구글 글래스의 실패를 연상시킴.
     * 음성 인터페이스의 사회적 인식 문제:
          + 공공장소에서 음성 인터페이스를 사용할 때의 부정적인 인식과 개인정보 보호의 필요성에 대한 우려를 표현함.
     * 디스플레이 기술에 대한 회의적인 시각:
          + 레이저 잉크 디스플레이 기술에 대해 회의적이며, 실제 사용 환경에서의 효용성에 대해 의문을 제기함.
     * 제품의 목적과 경쟁력에 대한 의문:
          + 제품이 해결하고자 하는 문제와 애플과 같은 경쟁사에 의해 쉽게 대체될 수 있는 점, 그리고 음성 인터페이스와 화면 제거에 대한 필요성에 대해 의문을 제기함.
     * 정보 확인의 중요성:
          + 제공된 정보의 정확성을 확인하지 않은 비디오 콘텐츠에 대한 지적으로, 실제 일식이 관찰되는 위치에 대한 잘못된 정보를 예로 듦.
     * 영화와 현실의 차이:
          + 영화에서 보여지는 기술이 현실에서 구현되어야 한다는 생각에 대한 비판으로, 영화 속의 기술이 현실에서는 다른 사람들과의 상호작용에 영향을 줄 수 있음을 지적함.
"
"https://news.hada.io/topic?id=11784","미래에서 온 외계의 마법, "Cursorless"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      미래에서 온 외계의 마법, ""Cursorless""

커서리스: 미래에서 온 외계 마법

     * Cadey는 새 직장에서 일을 시작하기 전에 RSI(반복성 스트레스 부상) 증상이 나타남을 언급함.
     * RSI 증상은 이미 예상하고 있었으며, 현재 회복 중이라고 함.
     * 이전에 RSI가 발생했을 때는 기술 관련 글쓰기로 대처했지만, 이번에는 프로그래밍 능력이 필요함을 표현함.
     * Cadey는 주로 emacs를 사용하지만, 이번에는 Visual Studio Code를 사용하고 있으며, 그 이유는 'Cursorless'라는 확장 프로그램 때문임.

커서리스의 마법 같은 기능

     * 'Cursorless'는 음성 제어 소프트웨어와 통합되어 음성으로 AST 수준의 코드 편집을 가능하게 하는 플러그인임.
     * 'Cursorless'의 가장 마법 같은 부분은 문서 내 개별 앵커인 '대상(Targets)'과 대상에 상대적인 위치인 '목적지(Destinations)' 개념임.
     * 문서의 모든 토큰에는 색깔이 있는 모자가 문자 위에 표시되어, 위치, 목적지, 그리고 그 사이의 경로를 기반으로 명령을 내릴 수 있게 함.
     * 예를 들어, 'function'이라는 단어는 'green urge'로 참조되어 해당 단어를 삭제하거나 이동하는 데 사용될 수 있음.

커서리스의 진정한 힘

     * 'Cursorless'는 단순한 편집 동작뿐만 아니라, AST를 이해하고 있어서 함수 전체를 걸쳐 동작을 수행할 수 있는 능력을 가짐.
     * 예를 들어, 함수를 비동기 함수로 리팩토링하는 것이 'Cursorless'를 사용하면 간단해짐.
     * Cadey는 반복적으로 'Cursorless'를 사용하면서 점차 명령들이 두 번째 자연스러움처럼 익숙해짐을 설명함.

자신만의 명령 작성

     * 'Cursorless'와 'Talon'을 사용하여 자신만의 명령을 작성하는 것이 가능함.
     * 'Talon' 명령은 패턴(말하는 단어)과 캡처(추출하고자 하는 것)로 나뉨.
     * 가장 복잡한 'Talon' 규칙을 예로 들어, Go 언어에서 메서드를 선언하는 방법을 설명함.

포인터 개념의 새로운 설명 시도

     * Cadey는 Go 언어에서 포인터 개념을 설명하기 위해 'raising'과 'lowering'이라는 용어를 실험 중임.
     * Go 언어의 포인터 문법이 C 스타일을 사용하는 것에 대한 대안으로, 포인터 값과 일반 값 사이를 'raising'과 'lowering'으로 표현하는 방법을 탐색 중임.

GN⁺의 의견

     * 이 기사에서 가장 중요한 점은 'Cursorless' 확장 프로그램이 음성 제어를 통해 프로그래밍의 접근성을 향상시키고, RSI와 같은 부상으로 인해 타이핑이 어려운 사람들에게도 코딩을 가능하게 한다는 것임.
     * 'Cursorless'의 기능이 특히 흥미로운 이유는 코드를 음성으로 편집할 수 있는 혁신적인 방법을 제공하며, 이는 소프트웨어 개발의 미래에 대한 새로운 가능성을 열어줌.

        Hacker News 의견

     * 글쓴이의 놀라움과 자신의 Talon 실험 레포지토리 공유

     글쓴이는 자신의 글이 인기를 끌고 있는 것에 놀라움을 표현하며, Talon 실험 관련 GitHub 레포지토리를 공유함.
     * Talon을 이용한 코드 조작과 음성 명령의 유용성

     Talon이 tree-sitter AST를 활용하여 코드의 '부분'을 조작하는 것은 Vim의 textobjects와 유사하나 음성 구성 요소가 추가됨. 음성 명령을 통해 키보드 조작 중 다른 작업을 예약하는 기능이 흥미로움.
     * 음성 대신 키보드를 사용하는 avy와의 비교

     avy와 유사하게 작동하지만, 키보드 대신 음성을 사용하며, AST 인식 명령어와 결합됨.
     * 음성으로 프로그래밍하는 데모에 대한 링크와 감탄

     음성으로 프로그래밍하는 데모 영상 링크 공유와 해당 영상이 주는 매혹적인 경험에 대한 언급.
     * Cursorless에 대한 개요와 실제 사용 예시를 보여주는 Strange Loop 발표

     Cursorless에 대한 일반적인 개요와 실제 사용 모습을 볼 수 있는 Strange Loop 발표 영상 링크.
     * Cursorless 개발에 대한 지지와 개인적인 사용 장벽 느낌

     Cursorless 개발에 대한 지지를 표현하면서도, 실제로 사용하기 위한 정신적인 시작 비용이 높다고 느낌.
     * 음성 명령어 선택에 대한 궁금증

     'urge'와 'bat'와 같은 특정 단어 선택의 이유에 대한 질문과 관련 알파벳으로 시작하는 다른 단어 사용 가능성에 대한 의문.
     * 시선 추적 기술을 이용한 커서 위치 조정 가능성에 대한 질문

     시선이 머무는 위치에 커서를 위치시킬 수 있는 시선 추적 기술의 현재 상태에 대한 의문 제기.
     * RSI 경험과 타이핑 스타일 변경으로 인한 개선 사례 공유

     RSI 문제를 겪었던 경험과 다양한 인체공학적 도구를 시도했으나, 타이핑 방식을 바꾸는 것이 큰 도움이 되었다는 개인적인 사례 공유.
"
"https://news.hada.io/topic?id=11758","Gleam - Erlang 가상머신에서 타입 안전성을 제공하는 프로그래밍 언어 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Gleam - Erlang 가상머신에서 타입 안전성을 제공하는 프로그래밍 언어

     * Gleam: Erlang VM에서 타입 안전성과 확장성을 갖춘 새로운 언어
     * 함수형 프로그래밍: 타입 시스템의 힘과 함수형 프로그래밍의 표현력 결합
     * Erlang 런타임: WhatsApp과 같은 시스템에서 사용되는 고도로 동시성이 뛰어나고 장애 허용 가능한 Erlang 런타임 활용
     * 현대적 문법: 개발자들에게 친숙한 문법 제공, 학습 곡선 완화
     * 동시성: 수백만 개의 작업을 동시에 실행할 수 있는 멀티코어 액터 기반 동시성 시스템 특징
     * 성능: 빠른 불변 데이터 구조와 시스템을 중단하지 않는 동시성 가비지 컬렉터 활용
     * 개발자 도구: 컴파일러, 빌드 도구, 포맷터, 에디터 통합, 패키지 관리자를 포함한 쉬운 프로젝트 설정을 위한 도구 제공
     * BEAM 생태계: Erlang 및 Elixir 라이브러리를 포함한 BEAM 생태계의 수천 개 패키지와 호환
     * JavaScript 상호 운용성: JavaScript로 컴파일하고 더 넓은 애플리케이션 사용을 위한 TypeScript 정의 생성 가능
     * 오류 처리: null 값과 예외를 피하고, 명확한 오류 메시지와 실용적인 타입 시스템을 제공하도록 설계
     * 커뮤니티 중심: 친근하고 포괄적인 커뮤니티와 강력한 행동 규칙 강조
     * 오픈 소스 라이브러리: 다른 BEAM 언어의 풍부한 오픈 소스 라이브러리 접근
     * 지원 및 후원: 개발과 성장을 촉진하기 위한 커뮤니티 지원 및 후원 장려

        Hacker News 의견

     * Gleam 구문에 대한 호평, 특히 레이블링된 인수 기능
     * Gleam에 대한 지속적인 관심과 개발을 나타내는 토론 및 릴리스 역사
     * .NET, Go, 또는 Node와 같은 다른 생태계에 익숙한 이들의 생산 사례에 대한 관심
     * Gleam 타입 시스템의 인정, Hindley-Milner 타입 추론 사용 확인
     * OTP와의 Gleam 통합에 대한 궁금증, 감독 트리와 gen 서버 예제 부족
     * 기술 발전에 긍정적인 Gleam 같은 새로운 언어의 등장, 구문 유사성으로 인한 혼란은 있음
     * Rust로 작성된 Gleam, Rust의 언어 개발 능력과 Rust로 작성된 언어들 사이의 Gleam 인기 과시
     * Gleam의 잠재적 성장과 타입 스크립팅 언어 분야에 대한 기여에 대한 열정
"
"https://news.hada.io/topic?id=11775","창업자를 위한 2024년 계획 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          창업자를 위한 2024년 계획 가이드

2021: 무모한 열정의 해

     * 2021년은 기술 분야에서 과잉이 문제였던 한 해였음
     * 호화로운 스타트업 지출과 하늘 높은 성장 전망이 일반적이었으며 수익성은 뒷전으로 밀려남
     * 이사회에서는 수익성 문제에 대한 우려가 제기되었지만 종종 무시되었음
     * SaaS 회사의 총 마진이 50% 이하로 떨어진 것을 처음 목격함

2022: 기본에 집중하는 해

     * 2021년의 탄력을 받아 대부분의 스타트업이 2022년에 야심 찬 성장 계획을 세움
     * 그러나 이 해는 혹독한 깨달음의 시기였음
     * 인플레이션은 40년 만에 최고치로 치솟았고, 연준은 금리를 급격히 인상했음
     * 공급망의 정체와 널리 퍼진 노동력 부족, 우크라이나 전쟁 등 경제에 추가적인 부담이 되었음

2023: 불확실성 속에서 효율 추구

     * 창업자들은 2023년에 낮은 성장 목표를 세웠지만 비용을 계속 줄여야 했음
     * 기업용 소프트웨어 수요는 약해졌고, 구매 주기는 길어졌으며, 조달 팀은 큰 할인을 요구함
     * 1분기에 벤처 투자는 전년 대비 53% 감소한 760억 달러에 그쳤음

2024: 앞으로의 해를 탐색하다

     * 2023년 수익성에 초점을 맞춘 결과 더 강하고 날렵한 회사들이 2024년 지속 가능한 성장을 위해 준비됨
     * Instacart, Klaviyo, Arm과 같은 몇몇 벤처 백업 IPO가 IPO 창이 서서히 열리고 있음을 시사함
     * 벤처 투자도 다시 회복될 가능성이 있음

창업자들을 위한 세 가지 조언

     * 2024년에 접어들면서 창업자들은 야망과 신중함 사이의 균형을 맞춰야 함
     * 입증된 PMF(Product-Market Fit)와 건전한 단위 경제를 가진 스타트업은 시장 점유율을 늘려가되 경제 상황이 악화될 경우 제동을 걸 준비가 필요함
     * 창업자들이 2024년을 향해 나아갈 때 주목해야 할 세 가지 주요 조언:
          + 단기적이고 실용적인 계획 접근 방식을 취할 것
               o 전체 해를 계획하기 보다는 2024년 상반기에 집중할 것
               o 모든 지출을 검증하는 제로 기반 예산을 적용하고 비용을 계속 절감할 것
               o 절약된 비용을 재투자하고 수익과 총 마진을 개선할 것으로 보이는 초기 투자를 신중하게 늘릴 것
          + 입증된 견인력이 있는 고객 세그먼트, 지역 및 사용 사례를 우선시할 것
               o 장기적으로 TAM(Total Addressable Market) 확장이 중요하지만, 현재는 PMF와 단위 경제가 강한 시장 세그먼트에 집중할 것
               o AE(Account Executive)가 충분한 파이프라인을 가질 수 있도록 수요 생성 자원을 추가할 것
          + 판매 및 마케팅 효율성을 높이기 위한 도구와 교육에 투자할 것
               o GTM(Go-to-Market) 조직의 생산성이 중요해짐
               o 판매 교육에 두 배로 투자하고, 피칭 기준을 충족하지 못하는 영업 대표를 해고할 것
               o 생성적 AI 도구를 활용하여 판매 워크플로우를 강화할 것
     * 창업자들은 지난 몇 년간의 등락에서 얻은 교훈을 이제 적용할 때임:
          + 현금 유동성에 대해 경계하고, 입증된 강점 영역에 자원을 집중하며, GTM 노력을 최적화
          + 2024년은 불확실성에도 불구하고, 효율성을 희생하지 않고 포용할 수 있는 스타트업에게 충분한 기회를 제공할 것
"
"https://news.hada.io/topic?id=11729","LLaVaVision - llama.cpp/llava로 만든 "Be My Eyes" 웹앱","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           LLaVaVision - llama.cpp/llava로 만든 ""Be My Eyes"" 웹앱

     * 시각장애인을 위해 자원봉사자와 연결해서 화면을 읽어주는 ""Be My Eyes"" 서비스를 AI로 비슷하게 구현
     * 멀티모달 백엔드를 통해서 영상을 보고 어떤 것인지 실시간으로 설명해주는 웹앱
     * 오픈소스 멀티모달 모델인 SkunkworksAI의 BakLLaVA-1 모델을 llama.cpp 로 실행하며 음성은 Web Speech API로 출력

   와, 이런거 보면 엔지니어라는게 뿌듯합니다. 시각장애인들한테 정말 많은 도움이 될것 같네요.

   유튜버 원샷한솔이 사용한 '설리번 플러스'라는 앱도 있습니다.
   텍스트 인식 뿐 아니라 사물의 특징까지 파악되는거 같더라고요
   https://youtu.be/EAKGU-uW6Ek
   https://www.mysullivan.org/

   Be My Eyes - 시각장애인에게 시력을 주세요
   MS의 이미지 캡셔닝 AI가 사람처럼 사진을 묘사하기 시작

   이런 소식 너무 반갑네요 ㅎㅎ 제 딸이 시각장애인이라서요
"
"https://news.hada.io/topic?id=11730","Email 난독화는 ChatGPT앞에 거의 무용지물","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Email 난독화는 ChatGPT앞에 거의 무용지물

     * 수집봇에 의한 이메일 스팸을 방지하기 위해 @ 대신 (at)을 쓰는 등의 기술이 사용되어 왔는데 이제 AI때문에 효용이 없어짐
     * HN의 구인공고 글을 가져와서 ChatGPT에게 정보를 추려보라고 했더니 숨겨진 이메일 주소를 거의 다 찾아냄
     * 유일하게 효율적인 것은 채용 공고 및 프로필등 별도 페이지로 분리한 경우였음
          + AI가 별도 페이지까지 탐색하게 하려면 돈이 많이 들기 때문
     * 즉, 문자 대체와 같은 기존의 이메일 난독화 방법은 이제 AI 때문에 비효율적

   Email 주소 난독화군요!

   해외숙소 리뷰 난독화는 못푸네요. ㅎㅎ
   아직 보호되고 있습니다.

   ""해왜연헹 충 빻뮨했떤 슉빡 씻설뤼낳 음식첨 휵키룰 냠귈 태, 혹운 헤욀 첼루 쭝 욉꾹귄 췬꿉 묘룩계 긁읊 쑤곳 십욺 땠 융용한 팡볍위 잊닻. 쮜쿳샹 엇턴 벼녘귀돐 잃끎 슈 엾눈 윌명 ‘웨얹퓌엔퓌 쩨’답. 웨엽빎옌뷔 쑥숀 쮸인 몲랙 한꾹낀만 앎랍챌툐록 훅뀌를 냠낀 뗏써 뷜롯됐타. 모욺꽉 쟈움읠 딱얗한 졸합윽로 영렵 겅운의 순를 많툴얹냅는 빵쉭읾타.""

   주모여기 골뱅이 무침 한접시 추가요

   ChatGPT 한테 골뱅이 써서 이메일 주소를 물어보니 정확하게 알아내네요. 아래처럼 이야기 합니다.

     ""골뱅이""는 '@' 기호를 가리키는 한국어 속어입니다. 한국에서는 이메일 주소에서 사용되는 '@' 기호를 '골뱅이'라고 부릅니다.
"
