"https://news.hada.io/topic?id=10477","GPT 엔지니어 살펴보기엔지니어 살펴보기

     * GPT 엔지니어는 AI로 프로젝트 생성을 돕는 도구
          + 사전에 정의된 단계에 따라 프롬프트를 실행하고 그 결과, 마크업 형식으로 소스 코드를 얻으며 이를 추후 실제 파일로 변환함
          + 프로젝트 소스 코드는 workspace 폴더에 생성되고, 관련 로그는 memory 폴더에 생성됨
     * 특징:
          + 프롬프트에 빌드하고 싶은 걸 입력하면 GPT 엔지니어가 코드베이스를 생성
          + 사용자의 코딩 스타일과 선호도에 맞게 설계돼 필요에 따라 기능을 확장
          + AI는 “steps.py”에 정의된 일련의 단계를 따라 새 단계를 쉽게 추가하거나 기존 단계를 수정하여 상황에 맞게 GPT 엔지니어를 최적화
          + 모든 계산은 재개할 수 있고, 로그를 남겨 작업을 잃지 않도록 함
     * 장단점:
          + 장점: 스크립트가 필요한 파일을 자동 생성, 애플리케이션을 시작하는 스크립트 제공
          + 단점: 채팅 내용을 파일로 변환하는 과정에서 가끔 파일 이름이 이상하게 입력, 빌드 스크립트 부족
"
"https://news.hada.io/topic?id=10425","micro - nano에 대한 현대적인 대안","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        micro - nano에 대한 현대적인 대안

     * 현대적이고 직관적인 터미널 기반 텍스트 에디터
     * 설치와 사용이 간편, 어떠한 의존성도 없는 정적 바이너리
     * 사용자 정의 지원. 간단한 JSON 형식을 사용하여 옵션을 구성하고 키를 재바인딩하고, 더 고급 설정을 위해서는 Lua를 사용 가능
     * 75개 이상의 언어를 지원하며 7개의 기본 색상 스키마를 제공. 16, 256, truecolor 테마 지원
     * Sublime 스타일의 다중 커서 기능 지원
     * Lua로 작성된 완전한 플러그인 시스템 내장. 플러그인 매니저가 포함되어 있어 플러그인을 자동으로 다운로드하고 설치
     * 전체 마우스 동작 지원
     * 터미널 에뮬레이터 내장으로 대화형 셸 실행 가능

        Hacker News 의견

     * 프로그래밍 초보자들에게 사용자 친화적인 인터페이스와 화면 하단에 나열된 모든 명령어 때문에 Nano가 추천됨.
     * 일부 사용자들은 일부 직장에서 설치를 거부하더라도, Unix 서버에서의 간편함과 사용 편의성 때문에 Nano를 선호함.
     * 일부 사용자들이 주요 코드 편집기로 Micro를 사용하며, 그 기능을 향상시키기 위해 플러그인이 개발되고 있음.
     * WordStar와 Emacs의 혼합체인 JOE도 좋은 대안으로 추천됨.
     * Micro는 일상적인 사용성을 칭찬받지만, 일부 사용자들은 treesitter, LSP, 그리고 문맥적 도움말과 같은 추가 기능을 원함.
     * 인터넷에서 다운로드한 것에 sudo를 실행하도록 사용자에게 요구하는 소프트웨어에 대한 우려가 제기되며, 이러한 스크립트의 안전성과 필요성을 의심함.
     * Micro의 Alpine 패키지는 GitHub에서 다운로드한 정적으로 컴파일된 바이너리 버전(11MB)에 비해 더 작은 메모리 사용량(설치 시 4MB)을 가지고 있음을 주목함.
     * Micro의 마우스 지원과 기본 편집 단축키가 가장 좋은 기능으로 강조됨.
     * 일부 사용자들은 Micro의 서식이 있는 붙여넣기 기능에 문제를 겪음, 이 기능은 붙여넣은 코드를 줄마다 들여쓰려고 시도하여 과정을 상당히 느리게 만듦.
     * Nano는 여전히 현대적이며 활발히 개발되고 있으며, 일부 사용자들은 Nano가 없다면 Micro를 사용하겠다고 밝힘.
"
"https://news.hada.io/topic?id=10431","Show GN: 타임스탬프앱 - Show Your Time","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Show GN: 타임스탬프앱 - Show Your Time

   안녕하세요.

   저희 회사 팀원들은 서로 성장을 도모하기 위해 매일 각자 설정한 목표의 달성을 공유하는 활동을 하고 있습니다.
   개인별로 다양한 목표를 설정해 책을 읽거나 운동을 하거나 온라인 강의를 듣는 등 다양한 활동을 진행하고 있습니다.

   팀원들 각자의 목표가 다르긴 하지만, 서로의 진행 상황을 주의 깊게 지켜보며, 함께 응원하고 격려해주고 있습니다.
   이렇게 하니 중간에 그만두지 않고 오래 꾸준히 할 수 있게 되었습니다.

   그러던 중, 팀의 디자이너분께서 목표 달성을 시간 표기와 함께 사진으로 찍어 공유를 하려고 하는데 마음에 드는 타임스탬프 앱이 없다고 하셨습니다.

   그래서 빠르게 프로토 타이핑을 해보니
   만드는 과정이 재미있을것 같아 디자이너님이랑 본격적으로 만들어보았습니다.

   짧은 시간에 간단하게 만든 앱이라 아직은 완성도가 높지 않고, 기능이 많지 않지만 점차 개선해나가려고 합니다.

   감사합니다.

   앱 소개 사이트: https://showyourti.me

   iOS: https://apps.apple.com/app/show-your-time/id6452399448
   안드로이드: 준비중입니다.

   안드로이드 출시되었습니다.
   https://play.google.com/store/apps/details?id=com.fw.showyourtime
"
"https://news.hada.io/topic?id=10480","LLM 연구의 공개 과제들연구의 공개 과제들

     * LLM 분야에서 얘기되는 주요 과제 10개와 추가 학습을 위한 링크모음

환각(Hallucination) 감소 및 측정

     * 회사에서 LLM을 채택하는데 가장 큰 장애물은 환각
     * 환각을 완화하고 측정하기 위한 지표를 개발하는 것은 인기 있는 연구 주제로 많은 스타트업들이 집중하고 있음
     * 환각을 줄이기 위한 임시 팁으로 프롬프트에 컨텍스트 추가하기, Chain-Of-Thought, Self-Consistency, 모델에게 간결한 답을 요청하기 등이 있음

컨텍스트 길이 및 컨텍스트 구성 최적화

     * 대부분의 질문에는 컨텍스트가 필요함
     * SituatedQA 논문에 의하면 정보 검색 질문의 상당부분이 컨텍스트에 따라 답변이 다름(NQ-Open 데이터셋의 16.5%가 해당)
     * 회사의 사례에서는 훨씬 더 높을 것(고객 지원 챗봇이라면, 해당 고객의 기록이나 제품에 대한 정보가 컨텍스트)
     * 컨텍스트 길이는 RAG(Retrieval Augmented Generation)에 특히 중요
     * RAG는 2단계로 동작
          + 청킹(인덱싱) : LLM에서 사용할 모든 문서를 수집. 임베딩을 생성하고 임베딩을 LLM에넣기위해 청크로 분할하고, 임베딩을 벡터 DB에 저장
          + 쿼리: 사용자가 쿼리를 보내면 LLM이 쿼리를 임베딩으로 변환. 벡터 데이터베이스에서 임베딩과 가장 유사한 청크를 가져옴
     * 컨텍스트 킬이가 길수록 더 청크를 많이 넣을수 있음. 모델이 억세스할수 있는 정보가 많아지면 응답이 더 좋아지겠죠?
     * 항상 그런것음 아님. 모델이 사용하는 컨텍스트의 양과 해당 모델이 컨텍스트를 얼마나 효율적으로 사용하는가는 서로 다른 질문임
     * 모델 컨텍스트 길이를 늘리려는 노력과 함께 컨텍스트를 효율적으로 만들기 위한 노력도 있음
          + 프롬프트 엔지니어링 또는 프롬프트 컨스트럭션이라고 부름
          + 예를 들어 최근 논문은 모델이 컨텍스트의 중간보다 처음 이나 끝에서 정보를 더 잘 이해한다는 것

다른 데이터 양식들(Modalities) 통합

     * Multimodiality 는 매우 강력하지만 아직 과소평과됨
     * 중요한 이유들
          + 의료,로봇공학,전자 상거래,소매,게임,엔터테인먼트등 다양한 데이터를 다루는 사례가 있음
               o 의학적 예측에는 텍스트(의사의 노트, 설문지) 와 이미지(CT, X-Ray, MRI)가 필요
               o 제품 메타데이터에는 이미지, 비디오, 설명 및 표 형식 데이터가 포함
          + 멀티모달리티는 모델 성능의 큰 향상을 가져올 것
               o 텍스트만 이해하는 모델 보다 텍스트와 이미지를 이해할 수 있는 모델이 성능이 좋음
               o 텍스트 기반 모델에는 엄청난 텍스트 데이터가 필요하므로 곧 모델을 훈련하는데 필요한 인터넷 데이터가 고갈될 것이라는 우려도 있음
               o 텍스트가 부족해지면 다른 데이터 양식을 활용해야 함
     * 특히 기대하고 있는 것 : 시각 장애가 있는 사람들이 멀티모달리티를 통해 인터넷을 검색하고 현실세계를 탐색할 수 있게 할 것

LLM을 더 빠르고 저렴하게 만들기

     * GPT-3.5가 2022년 11월에 나왔을 때, 많은 사람들이 레이턴시 및 프로덕션에서의 사용 비용에 대해 우려했음
     * 하지만 레이턴시/비용 분석은 그 이후로 많이 바뀌었음
     * 반년도 안지나서, 커뮤니티는 GPT-3.5 메모리 공간의 2%만으로, 성능면에서 GPT-3.5에 매우 근접한 모델을 만드는 방법을 찾았음
     * 핵심: 충분히 좋은 것을 만들면, 사람들은 빠르고 저렴하게 만드는 방법을 알아낼 것
     * 4년전에 정리한 모델 최적화/압축을 위한 4가지 주요 기술
          + Quantization(양자화): 가장 일반적인 모델 최적화 방법. 매개변수를 나타내는데 더 적은 비트를 사용하여 모델의 크기를 줄임. 부동소수점 32비트 대신 16비트, 심지어 4비트도 사용
          + Knowledge distillation(지식 증류): 작은 모델(학생)이 더 큰 모델이나 모델의 앙상블(선생)을 모방하도록 훈련시키기
          + Low-rank factorization(저차원 행렬분해): 매개변수의 수를 줄이기 위해 고차원 텐서를 저차원 텐서로 교체. 예를 들어, 3x3 텐서를 3x1과 1x3 텐서의 곱으로 분해하여 9개의 매개변수 대신 6개의 매개변수만 갖게 하는 것
          + Pruning(가지치기)
     * 지금도 이 4가지 기술은 관련있고 인기가 있음. Alpaca는 지식 증류기법을 사용했고, QLoRA는 저차원 행렬분해와 양자화의 조합을 사용했음

새로운 모델 아키텍처 설계

     * 2012년 AlexNet 이후로 LSTM, seq2seq 등 많은 아키텍처가 유행하고 사라짐
     * 이에 비해 Transformer는 매우 끈질김. 2017년에 나왔고, 언제까지 유행할지 궁금
     * Transformer를 능가하는 새로운 아키텍처를 개발하는 것은 쉽지 않음. 지난 6년간 엄청 최적화 되었음
     * 새로운 아키텍처는 오늘날 사람들이 관심을 가질만한 규모로 성능을 발휘해야함
          + 트랜스포머는 원래 TPU에서 빠르게 실행되도록 설계되었고, 나중에 GPU에 최적화 되었음
     * 2021년엔 Chris Ré’의 연구실에서 S4를 중심으로 많은 흥분이 있었음.
       최근에도 여전히 새로운 아키텍처에 투자를 하고 있으며, 가장 최근엔 스타트업 Together와 공동으로 Monarch Mixer 아키텍쳐를 개발했음

GPU 대안 개발

     * GPU는 2012년 AlexNet 이후 딥러닝을 위한 지배적인 하드웨어
     * AlexNet이 인기있는 이유중 하나는 GPU를 성공적으로 사용하여 신경망을 훈련시킨 첫번째 논문이라는 것
       GPU 이전에는 AlexNet 규모로 모델을 훈련하려면 수천개의 CPU를 사용해야 했음
       수천개의 CPU에 비해 2개의 GPU는 박사 및 연구자들한테 훨씬 접근이 쉬웠고, 딥러닝 연구 붐을 일으켰음
     * 지난 10년동안 대기업/스타트업 및 많은 회사들이 AI를 위한 새로운 하드웨어를 만들려고 시도했음
     * 가장 눈에 띄는 것은 구글의 TPU, Graphcore의 IPU, Cerebras
     * SambaNova는 새로운 AI칩 개발을 위해 10억달러 이상을 펀딩받았찌만, 생성형 AI플랫폼으로 피봇했음
     * 한동안 양자컴퓨팅에 많은 기대가 있었고, 주요 플레이어는 다음과 같음
          + IBM의 QPU
          + 구글의 컨텀컴퓨터는 올해초에 Nature에 양자 오류 감소에 대한 주요 이정표를 발표했음. 양자 가상머신은 Google Colab을 통해 억세스 가능
          + MIT 양자 엔지니어링 센터, 막스플랑크 양자 광학 연구소, 시카고 양자거래소, 오크리지 국립연구소등
     * 매우 흥미로운 또 다른 방향은 Photonic 칩
          + 오늘날의 칩들은 전기를 이용하여 데이터를 이동하므로 많은 전력을 소비하고 레이턴시도 발생
          + 광자칩은 광자를 사용하여 데이터를 이동하고 더 빠르고 효율적인 컴퓨팅을 위해 빛의 속도를 활용함
          + Lightmatter ($270M), Ayar Labs ($220M), Lightelligence ($200M+) 및 Luminous Computing ($115M)을 포함하여 이 분야의 다양한 스타트업이 수억 달러를 펀딩받음

에이전트를 사용 가능하게 만들기

     * 에이전트는 인터넷 검색, 이메일 보내기, 예약등과 같은 작업을 수행할 수 있는 LLM
     * 이 글의 다른 연구 방향들과 비교해보면 가장 초기의 분야라고 할 수 있음
     * 참신함과 막대한 잠재력 때문에 에이전트에는 열광적인 인기가 있음
     * Auto-GPT는 이제 GitHub Star 수 기준 25번째로 인기있는 Repo임
     * GPT-Engineering 도 또 다른 인기있는 저장소
     * 설레임에도 불구하고 LLM이 행동할수 있는 권한을 위임받을 만큼 신뢰할 수 있고 성능이 있는지에 대해서는 여전히 의구심이 있음
     * 이 분야에서 가장 주목할 만한 스타트업은 Adept
          + 2명의 Transformer 공동 저자와 전 OpenAI VP가 설립해서 지금까지 거의 5억달러를 펀딩

Human Preference를 통한 학습 개선

     * RLHF, Reinforcement Learning from Human Preference 는 멋지지만 다소 Hacky함
       사람들이 LLM을 교육하는 더 좋은 방법을 알아내더라도 놀랍지 않을 것. RLHF에는 다음과 같은 미해결 질문이 있음
          + 인간의 선호도를 수학적으로 표현하는 방법은?
               o 현재 인간의 선호도는 비교에 의해 결정됨
               o 인간 라벨러는 응답 A가 응답 B보다 나은지 여부를 결정하지만, 응답 A가 응답 B보다 얼마나 더 나은지는 고려하지 않음
          + 인간의 취향은?
               o Anthropic은 유용함, 정직함, 무해함이라는 세 가지 축을 따라 모델 응답의 품질을 측정했음
               o DeepMind는 대부분의 사람들을 기쁘게 하는 응답을 생성하려고 함
               o 우리는 입장을 취할 수 있는 AI를 원할까, 아니면 잠재적으로 논쟁의 여지가 있는 주제를 피하는 평범한 AI를 원할까?
          + 문화, 종교, 정치적 성향 등의 차이를 고려할 때 누구의 선호가 ""인간적"" 선호일까 ?
     * 모든 잠재 사용자를 충분히 대표할 수 있는 훈련 데이터를 얻는 데는 많은 어려움이 있음
       예를 들어, OpenAI의 InstructGPT 데이터의 경우 65세 이상의 레이블러가 없었음. 라벨러는 주로 필리핀인과 방글라데시인
     * 커뮤니티 주도의 노력은, 그들의 의도는 훌륭하지만 편향된 데이터로 이어질 수 있음
       예를 들어, OpenAssistant 데이터 세트의 경우 응답자 222명 중 201명(90.5%)이 남성이라고 밝혔음

채팅 인터페이스의 효율성 향상

     * ChatGPT 이후로 채팅이 다양한 작업에 적합한 인터페이스인지에 대한 여러 논의가 있었음
     * 이는 새로운 논의가 아니며, 아시아에서는 채팅이 약 10년동안 슈퍼앱의 인터페이스로 사용되었음
     * 개인적으로 이런 이유로 채팅 인터페이스를 좋아함
          + 채팅은 이전에 컴퓨터나 인터넷에 노출되지 않을 사람을 포함하여 빠르게 사용방법을 배울 수 있는 인터페이스
          + 채팅 인터페이스는 접근성이 있음. 손이 바쁘면 텍스트 대신 음성을 사용할 수 있음
          + 채팅은 믿을수 없을정도로 강력한 인터페이스임. 어떤 요청이든 할 수 있고, 응답이 좋지 않은 경우에도 응답을 제공함
     * 하지만 아직 채팅 인터페이스를 개선할 수 있다고 생각되는 영역들이 있음
          + 턴당 여러개의 메시지
          + Multimodal 입력
          + 워크플로우에 생성AI 통합
          + 메시지 편집 및 삭제

비영어권 언어용 LLM 구축

     * 현재 English-First LLM은 성능, 대기 시간 및 속도 면에서 다른 언어에 대해서는 잘 작동하지 않음
     * 이 글의 몇몇 초기 독자들은 이 방향을 포함해야 한다고 생각하지 않는다고 이야기 했음
          + 이는 연구보다는 물류(Logistics) 문제에 가까움. 우리는 이미 그 방법을 알고 있고 돈과 노력을 투자하기만 하면 된다는 것
            하지만 이는 사실이 아님. 대부분의 언어는 리소스가 부족함. 영어나 중국어에 비해 고품질 데이터가 훨씬 적고, 대규모 모델을 훈련하는 데에는 다른 기술이 필요할 수 있음
          + 더 비관적인 사람들은 미래에 많은 언어가 사라지고 인터넷이 영어와 만다린 이라는 2개의 언어로 구성 된 두개의 세계로 만들어질 것이라고도 함. Esperando 기억하는 사람 있나요?
     * 기계 번역 및 챗봇과 같은 AI 도구가 언어 학습에 미치는 영향은 아직 불분명함
       그것들이 사람들이 새로운 언어를 더 빨리 배우도록 도울까, 아니면 새로운 언어를 배울 필요를 완전히 없앨까?

   이 글 쓴 분이 O'Reilly에서 나온 Designing Machine Learning Systems 라는 책을 쓴 분이네요.
   번역판은 한빛출판사에서 나왔습니다.
   https://m.hanbit.co.kr/store/books/book_view.html?p_code=B1811121220
"
"https://news.hada.io/topic?id=10455",""Shit Life Syndrome"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ""Shit Life Syndrome""

     * ""Shit life syndrome""(SLS)는 영국과 미국의 의사들이 빈곤이나 학대로 인한 장애가 환자에게 미치는 영향을 설명하는 용어입니다.
     * 이 용어는 2017년 Sarah O'Connor의 금융 타임즈 기사 ""Left behind: can anyone save the towns the economy forgot?""를 통해 인지도를 얻었으며, 이 기사는 2018년 올웰 상에서 영국의 사회 악을 폭로하는 부문에서 수상하였습니다.
     * 이 기사는 블랙풀이라는 영국의 해안 도시에 초점을 맞추었는데, 이 도시의 노동가능 연령 주민의 10% 이상이 일할 수 없다고 판단되어 국가 혜택을 받고 살고 있습니다.
     * 이 도시는 항우울제 처방률이 높고, 최근에는 생명 기대치가 가장 낮은 도시로서, 이는 최근에 하락하기 시작했습니다.
     * 의사들은 이러한 문제들을 경제적, 사회적, 감정적 문제의 조합으로 돌리며, 이들은 환자당 10분에서 15분의 시간 제약 내에서 이를 해결하는 데 무력감을 느낍니다.
     * 최근 생명 기대치가 하락한 아일랜드와 영국 감독 Mike Leigh의 영화 분석에 대한 논의에서도 SLS 용어가 언급되었습니다.
     * Rosemary Rizq는 2016년 에세이 모음집 ""The Future of Psychological Therapy""에서 SLS 용어의 기원에 의문을 제기하며, 이는 장기간의 빈곤, 가족 붕괴, 안정성 부족, 실업, 그리고 많은 젊은 노동계층 환자들에게 공통적인 잠재적 위험 요소를 나타낸다고 제안했습니다.
     * Rizq는 SLS를 가진 개인들이 ""너무나 끔찍하고, 만질 수 없는"" 문제를 가지고 있어서 ""말 그대로 생각조차 할 수 없고, 서비스에서 처리할 수 없다""고 주장하며, 그럼에도 불구하고 치료 기관은 ""그렇게 해야 한다""고 주장합니다.

        Hacker News 의견

     * ""Shit Life Syndrome""(SLS) 개념에 대한 기사, 경제적으로 침체된 지역에서의 가혹한 생활 현실을 설명하는 용어
     * 한 댓글러가 영국의 도시인 블랙풀에 대한 개인적 경험을 공유, 더 가난하고 종말론적인 영국으로의 시간여행 같은 느낌과 우울함, 회색의 활력을 묘사
     * 인도의 소도시 출신 댓글러가 특히 건강관리와 관련하여 가난의 가혹함을 강조, 정부 병원에서 이론적으로 무료인 건강관리지만, 부패와 기회비용이 종종 사람들이 치료를 받는 것을 방해한다고 지적
     * 세 번째 댓글러가 영국이 유럽에서 가장 높은 수준의 소득 불평등을 가지고 있음을 지적하고, COVID-19로 인한 원격 근무 전환이 특정 직업을 위해 고GDP 지역에 있어야 한다는 사회의 생각을 바꿀 수 있기를 희망
     * 미국 중부 출신 댓글러가 SLS와의 개인적 경험과 기술 분야에서의 경력이 그들에게 이를 탈출할 수 있게 해준 방법에 대해 논의, SLS 함정에 빠지지 않기 위해 잘하고 있는 사람들과 함께하라고 조언
     * 한 댓글러가 부자들이 주식 시장에 초점을 맞추는 대신 공공에 투자하여 자신들의 부를 보호하는 미래를 희망
     * 또 다른 댓글러가 미국 북동부의 작은 도시 출신의 데이트 상대에 대한 경험을 공유, 야심찬 사람들과 특권을 가진 사람들이 떠나려고 했지만, 다른 사람들은 노령화된 사랑하는 사람들을 돌보고 자신들의 도시에서 최선을 다하려고 머물렀다고 지적
     * 영국 출신 댓글러가 복지국가의 중요성에 대해 논의하고, 현대 영국에서의 안전망의 쇠퇴를 애도
     * 또 다른 댓글러가 ""글래스고 효과""를 언급, 스코틀랜드의 높은 생활 수준에도 불구하고 글래스고에서의 낮은 기대 수명과 나쁜 건강 현상
     * 마지막 댓글러가 2002년 이전에는 네덜란드에 식품 은행이 없었다고 지적, 빈곤과 불평등의 증가를 암시
"
"https://news.hada.io/topic?id=10443","FoodSAM: Any Food Segmentation","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     FoodSAM: Any Food Segmentation

     * Meta의 SAM(Segment Anything Model)은 23개 데이터 세그먼트에서 인상적인 제로샷 기능을 보이지만, 각 마스크에 대한 클래스별 정보는 부족
     * FoodSAM은 음식 이미지 세분화를 위한 새로운 프레임워크
     * SAM이 생성한 마스크와 시맨틱 마스크를 통합하여 시맨틱 세그먼트 품질을 향상
     * 사진내에 식품이 아닌 객체를 판단하고 분할하여 제로샷 기능을 향상

   Segment Anything Model(SAM) : 이미지에서 어떤 객체든 추출해주는 Meta의 AI모델
"
"https://news.hada.io/topic?id=10472","당신의 일러스트레이터를 해고하지 마세요","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         당신의 일러스트레이터를 해고하지 마세요

     * 미술과 소프트웨어 엔지니어링 배경을 가진 전문가 Sam Bleckley가 쓴 AI 이미지 생성에 대한 심층 분석 기사
     * 저자가 설명하는 '잠재 공간' 개념, AI 이미지 생성에서 유사한 이미지가 유사한 숫자 목록으로 표현되는 방법
     * '안정적 확산'에 대한 기사 토론, AI 이미지 생성에서 인기 있는 방법으로 이미지를 노이즈화하고 잠재 공간에 배치한 후 컴퓨터가 이를 정리하는 방법
     * 저자의 예측에 따르면, 생성적 AI는 블로그 게시물의 헤더 이미지나 SEO 목적의 콘텐츠와 같이 내용이 중요하지 않은 일부의 그림과 글 작성을 대체할 것
     * 생성적 AI의 잠재력에도 불구하고, 저자는 특정 이미지를 생성하는 것이 어렵다고 믿으며, 이는 일러스트레이터가 참여하지 않는 경우 복잡한 요구 사항에는 덜 유용하게 만듦
     * 저자는 상업적인 일러스트레이터들이 AI를 작업 흐름에 통합하여 작업 속도를 유지할 필요가 있으며, AI를 사용하여 지루한 세부 사항을 채우면서 이미지의 핵심 기능에 집중해야 한다고 제안
     * 생성적 AI 연구가 올바른 방향으로 진행되고 있음에도 불구하고, 시장에 출시되는 제품들이 일러스트레이터의 작업 흐름에 쉽게 통합되지 않는다는 점에 대해 저자는 우려를 표현
     * 저자는 2023년 하반기 계약을 위해 연락을 받을 수 있으며, sam@sambleckley.com으로 연락할 수 있음

        Hacker News 의견

     * AI가 예술가에게 미치는 영향은 Spotify가 음악 산업에 미친 영향과 유사하며, 큰 플레이어들을 제외한 모든 사람들의 수익을 줄일 수 있습니다.
     * AI 모델은 원작자가 누구인지 분명하게 만드는 방식으로 과도하게 훈련되고 있지만, 예술가들은 그들의 작업에 대해 보상받지 못하고 있습니다.
     * AI는 인간 일러스트레이터의 필요성을 대체하지 않지만, 그들의 작업 방식을 바꾸고 있습니다. 일러스트레이터들은 작업 속도를 따라잡기 위해 AI를 그들의 작업 흐름에 통합해야 할 수 있습니다.
     * AI 생성 이미지는 온라인 광고에서 클릭률과 전환율을 크게 향상시킬 수 있으며, 획득 당 비용을 줄일 수도 있습니다.
     * AI는 글쓰기 과정에서 유용한 도구가 될 수 있지만, 아직은 고품질의 기사를 스스로 생성하는 데 능력이 없습니다.
     * 이미지 생성에서 AI의 사용은 실제 그림 그리기보다 백엔드 프로그래밍과 같아지고 있으며, 창의성은 이제 작업 흐름 자체에 있습니다.
     * 생성적 AI는 미래에 물리적 모델을 기반으로 하여 풍부한 설명과 깊은 문화적 인식에 기반한 새롭고 정확한 표현을 생성하는 다감각적으로 발전할 가능성이 있습니다.
     * AI는 예술가들에게 유용한 도구이지만, 예술을 독특하고 매력적으로 만드는 인간의 손길을 대체할 수는 없습니다.
"
"https://news.hada.io/topic?id=10391","나오미 우와 말하지 않아도 많은 것을 전하는 침묵","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      나오미 우와 말하지 않아도 많은 것을 전하는 침묵

     * 중국의 주요 테크 영향력자인 나오미 우의 상황과 국가 탄압, 서구 관객의 변덕스러운 관심으로 인한 최근의 침묵에 대한 기사.
     * ""Sexy Cyborg""로 알려진 나오미 우는 DIY 테크 혁신으로 유명하며 다양한 소셜 미디어 플랫폼에서 상당한 팔로워를 보유하고 있음.
     * 전문성에도 불구하고, 우는 익명의 온라인 사용자와 서구 미디어로부터 비판과 여성혐오를 받았음.
     * 우의 파트너인 카이디는 위구르 소수민족의 일원으로, 그들의 취약성을 더욱 높임.
     * 팔로워들에게 인정받은 우의 개방성과 진실성은 그녀를 국가 압력에 더욱 취약하게 만듦.
     * 우의 테크 세계에서의 역할은 고정관념에 도전하고 진실성과 전문성을 촉진하는 데 중요했음.
     * 성공에도 불구하고, 우는 서구 미디어로부터 불리한 대우를 받았으며, 최근에는 침묵하게 되었음을 2023년 7월 7일 트윗을 통해 발표함.
     * 우의 상황에 대한 미디어의 보도 부족은 베이징이 서구 미디어에 미치는 잠재적인 영향을 시사함.
     * 우의 침묵은 테크 세계뿐만 아니라 국가 통제에 맞서 견디는 능력을 대표하는 글로벌 LGBTQ 커뮤니티에게도 손실임.
     * 기사는 또한 중국에서 증가하는 국가 탄압, 특히 LGBTQ 커뮤니티에 대한 탄압과 베이징 LGBT 센터의 폐쇄에 대해 논의함.
     * 우의 침묵은 그녀가 사용자의 개인정보를 위협할 수 있다고 경고한 텐센트의 Sogou 소프트웨어의 보안 취약성에 대한 이전 트윗과 연관되어 있을 수 있음.
     * 우의 상황은 중국의 테크 영향력자와 활동가들이 직면하는 위험과 국가 통제가 글로벌 테크 커뮤니티에 미치는 잠재적인 영향을 강조함.

        Hacker News 의견

     * 중국의 테크 인플루언서인 나오미 우(Naomi Wu)의 사회적 억제에 대한 논의
     * 일부 댓글 작성자들은 이 억제가 성별 문제가 아니라 우의 COVID-19에 대한 입장 때문일 수 있다고 추측
     * 우는 이전에 당국과 충돌한 적이 있으며, 필요하다면 자신의 무차별적인 비난을 완화할 의향이 있다는 것을 트위터에서 공유했음
     * 온라인에서의 활동이 줄어들었음에도 불구하고, 우의 온라인 상점은 계속 운영 중
     * 댓글 작성자들은 우의 상황과 중국의 테니스 선수인 펑 쉬웨이(Peng Shuai)의 상황을 비교
     * 우의 마지막 트윗은 그녀가 억제되었으며, 특정 주제에 초점을 맞춘 소셜 미디어 게시물을 제한할 것임을 나타냄
     * 많은 댓글 작성자들은 중국에서 태어나고 자란 우의 독특한 시각에 대해 감사의 의미를 표현
     * 일부 댓글 작성자들은 우의 상황에 대한 서양의 주목 부족에 대해 실망과 우려를 표현
     * 몇몇 댓글 작성자들은 과거에 우를 비판했지만, 이제 그녀에 대한 존경과 그녀의 억제에 대한 우려를 표현
     * 일부 댓글 작성자들은 2019년 우가 언급한 소프트웨어 보안 결함, 최근의 보고서, 그리고 그녀의 현재 상황 사이의 연결에 혼란을 표현
     * 한 댓글 작성자는 상황과 관련된 DNS 이름 해석에 대한 명확한 설명을 요청
"
"https://news.hada.io/topic?id=10449","Show HN: Rivet - 멀티플레이어 게임 서버 관리 시스템 오픈소스","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Show HN: Rivet - 멀티플레이어 게임 서버 관리 시스템 오픈소스

     * Nomad와 Rust로 개발된 오픈소스 게임 서버 관리 도구
     * 관리형 게임 서버, 매치메이킹, DDoS 완화 기능을 제공하여 게임 개발자가 게임 제작에 집중할 수 있음
     * 사용하기 쉬운 GUI / CLI / API 로 모든 것이 관리 가능
     * 오토스케일링을 위한 서버리스 로비
     * 대기시간 없이 플레이어를 로비에 배치하는 Flexible Matchmaker
     * DDoS 완화를 위한 Game Guard (WebSocket SSL, TCP+TLS, UDP)
     * 사용자 지정 도메인 또는 제공된 rivet.game 서브도메인을 사용하여 자산과 웹페이지를 호스팅하는 CDN 제공
     * 팀을 위한 간소화된 DevOps, 통합 로깅, 모니터링, 분석, 다운타임 없는 배포 및 쉬운 롤백 지원
     * Rivet Cloud는 게임을 가장 빠르게 시작할 수 있는 방법으로, rivet.gg에서 가입 시 무료 게임 서버를 제공
     * 자체 호스팅도 지원하며, 개발자가 Rivet를 직접 배포할 수 있도록 설치 가이드 제공

        Hacker News 의견

     * 오픈소스 게임 서버 관리 도구인 Rivet는 매칭 메이킹과 서버 오케스트레이션에 대한 새로운 접근 방식으로 칭찬받고 있다.
     * 이 도구는 아직 게임 산업에서 초기 단계인 현대 웹 개발 및 인프라 도구를 사용한다.
     * Rivet는 매치메이커를 위해 Redis, 분석/로그를 위해 ClickHouse, 빠른 백엔드 작업을 위해 Rust를 사용한다.
     * 이 도구는 게임 산업에서 어려운 문제인 매칭 메이킹의 높은 트래픽/동시성에 대한 해결책으로 인식되고 있다.
     * 일부 사용자들은 지난 12월 이후로 업데이트되지 않아 그 이후로 사용할 수 없을 수 있는 Nomad에 대한 Rivet의 의존성에 대해 우려를 표현했다.
     * Rivet가 실제 게임 서버가 플레이어 중 하나이고 Rivet가 매칭 메이킹과 원격 플레이어 간의 연결을 담당하는 ""릴레이된 멀티플레이어""를 지원할지에 대한 의문이 있다.
     * 일부 사용자들은 Rivet의 오픈소스 상태와 Rivet의 SaaS를 사용하지 않고 모든 것을 자체 호스팅할 수 있는지에 대해 궁금해하고 있다.
     * SaaS에서만 사용할 수 있는 기능과 새로운 기능이 SaaS 사용자만을 위해 출시될지에 대한 의문이 있다.
     * 일부 사용자들, 특히 취미로 게임 개발하는 사람들은 Rivet에 관심을 보이고 있으며, 그들의 프로젝트에 사용할 것을 고려하고 있다.
     * Rivet가 Nix를 사용하기로 한 결정과 이것이 도구와 어떻게 맞물리는지에 대한 의문이 있다.
     * 전반적으로, Rivet는 특히 작은 스튜디오들에게 유망한 도구로 인식되며, 게임 서버 관리에 대한 혁신적인 접근 방식으로 칭찬받고 있다.
"
"https://news.hada.io/topic?id=10415","열아홉 커피 알바생이 시작한 디자인 에이전시. 17년만에 7000억원 가치의 상장 기업이 되었다. Tiny 이야기.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    열아홉 커피 알바생이 시작한 디자인 에이전시. 17년만에 7000억원 가치의 상장 기업이 되었다. Tiny 이야기.

   뉴스레터 이름이 어울리지 않습니다.
   항상 섹시한, 너무 매력적인 비즈니스만 소개해주는 것 같거든요.

   아낌없는 칭찬 남겨주셔서 감사합니다! :)

   흥미롭게 잘 읽었습니다

   따뜻한 답변 남겨주셔서 감사해요!
"
"https://news.hada.io/topic?id=10408","호주 남동부에 520km 지름의 소행성 충돌 구멍이 묻혀 있다고 과학자들이 밝힘","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              호주 남동부에 520km 지름의 소행성 충돌 구멍이 묻혀 있다고 과학자들이 밝힘

     * 과학자들이 뉴사우스웨일즈 주의 데닐리퀸 근처, 호주 남동부 깊은 곳에 묻혀 있는 세계에서 가장 큰 운석 충돌 구조물로 추정되는 것을 발견하였다.
     * 아직 추가적인 드릴링 테스트가 필요한 데닐리퀸 구조물은 최대 지름 520킬로미터에 달하며, 이전에 세계 최대로 간주되었던 남아프리카의 브레데포트 충돌 구조물의 크기를 뛰어넘는다.
     * 지구가 운석에 의해 폭격당한 역사는 대부분 침식, 퇴적물 매몰, 지각 잠입 등으로 인해 숨겨져 있지만, 새로운 지구물리학적 발견들이 큰 운석에 의해 형성된 충돌 구조물의 특징을 드러내고 있다.
     * 호주 대륙과 그 이전의 곤드와나 대륙은 수많은 운석 충돌의 대상이었으며, 이로 인해 최소 38개의 확인된 충돌 구조물과 43개의 잠재적 충돌 구조물이 생겼다.
     * 데닐리퀸 구조물은 대규모 충돌 구조물에서 기대되는 모든 특징을 가지고 있으며, 이에는 구조물 핵 주변의 대칭적인 물결 패턴, 중앙의 낮은 자기 영역, 방사형 단층의 증거가 포함된다.
     * 데닐리퀸 충돌에 대한 대부분의 증거는 지표에서 얻은 지구물리학적 데이터에 기반하고 있다. 충돌의 증거를 입증하기 위해서는, 구조물 깊은 곳으로 드릴링하여 충격의 물리적 증거를 수집해야 한다.
     * 데닐리퀸 구조물은 곤드와나 대륙의 동부에 위치해 있었을 가능성이 높으며, 이는 그 대륙이 여러 대륙으로 분열되기 이전의 것이다.
     * 데닐리퀸 구조물을 만든 충돌은 후기 오르도비스기 집단 멸종 사건 동안 발생했을 수 있으며, 이 사건은 지구상의 종의 약 85%를 소멸시켰다.
     * 데닐리퀸 충돌 구조물에 대한 추가 연구는 초기 페일러조 시대의 지구의 본질에 대해 새로운 통찰을 제공할 것으로 기대된다.

        Hacker News 의견

     * 호주 남동부에서 발견된 거대한 520km 소행성 충돌 크레이터의 발견이 기술에 능통한 독자들 사이에서 관심과 토론을 불러일으킴.
     * 댓글러들은 호주에서 100km 이상의 확인된 충돌 구조물의 높은 수를 지적하며, 불분명한 화석 기록 때문에 알려지지 않은 대량 멸종 사건이 많을 수 있다고 제안함.
     * 일부 독자들은 최근 발견된 Deniliquin 구조물의 위치를 지정하는 이미지나 지도가 기사에 포함되지 않았다는 사실에 놀랐음을 표현함.
     * 크레이터의 크기는 남아프리카의 Vredefort 충돌 구조물과 비교되었으며, 호주의 크레이터가 훨씬 크다는 것이 확인됨.
     * 한 댓글러는 미시간/휴론 호수 지역에서 비슷한 대규모 충돌이 가능했을 것이라는 추측을 했는데, 이는 그 지역의 원형 모양에 기반한 것임.
     * 호주 크레이터를 만든 소행성의 크기에 대한 질문이 제기되었으며, 이에 대한 정보는 기사에서 제공되지 않았음.
     * 일부 독자들은 더 큰 표면적을 가진 바다에서 더 큰 소행성 충돌이 있었을 수 있다고 제안함.
     * 이 발견은 우리가 소행성을 찾아내고 피하는 능력의 중요성과, 오늘날 비슷한 충돌이 발생할 경우 잠재적으로 치명적인 결과에 대한 토론을 이끌어냄.
     * 한 댓글러는 대규모 소행성 충돌이 화산 함정을 검사하고 그 시기의 지구 반대편을 살펴보면서 식별될 수 있다고 제안함.
     * 충돌의 각도도 소행성의 크기와 함께 중요한 요소로 언급되었음.
"
"https://news.hada.io/topic?id=10393","Profiling and Tracing Tips in Go(GopherCon 2023 발표)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Profiling and Tracing Tips in Go(GopherCon 2023 발표)

   Profiling and Tracing Tips in Go 라는 주제로 GopherCon 2023 에서 발표한 내용입니다.
   이전 Luft 성능 리포트에서 미처 공유드리지 못했던, 상세한 프로파일링 결과와 그 데이터에 대해 이야기합니다.

   좋은 프레젠테이션입니다.

   같은 주제로
     * Profiling and Optimizing Go - YouTube: Go를 프로파일링하고 최적화 방법을 간단한 프로그램을 직접 최적화하며 보여줍니다.
     * Go 1.20에서 메모리 프로파일링으로 GC가 병목임을 파악하고 Memory Arena로 해결하는 영상...인데 영상은 못찾겠고 아티클이 있습니다.
"
"https://news.hada.io/topic?id=10469","SQLedge - Edge에서 Postgres를 SQLite로 복제해주는 도구","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              SQLedge - Edge에서 Postgres를 SQLite로 복제해주는 도구

     * Postgres 논리적 복제를 이용해서 변경 내역을 SQLite로 스트리밍
     * Postgres Wire Proxy를 내장하여 Postgres에 접속하듯이 실행
          + 읽기는 로컬 SQLite에서 실행하고, 쓰기는 복제하고 있는 업스트림 Postgres로 포워딩
          + 이를 통해서 앱을 Edge에서 로컬로 빠르게 실행 가능하게 하고, eventually consistent 한 데이터 접근을 구현
     * 현재는 별도 SQL 변환 작업은 하지 않으므로 SQLite에 적용가능한 구문만 이용해야 함(간단한 SELECT 같은 것. Postgres 전용 함수 및 문법들은 불가)
"
"https://news.hada.io/topic?id=10419","Awesome-Korean-LLM : 한국어 오픈소스 LLM awesome list","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Awesome-Korean-LLM : 한국어 오픈소스 LLM awesome list

     * 한국어 오픈소스 LLM을 정리해 놓은 awesome list
     * Polyglot-Ko나 Llama 등을 기반으로 한국어 데이터셋을 파인튜닝한 오픈소스 LLM이 포함.
     * 상업적 사용 여부, 가중치, 베이스 모델, 제작자, 모델 사이즈를 표기.

   한국어 오픈소스 LLM을 정리한 awesome list를 만들어 보았습니다.

   영어 LLM에 비하여 한국어 오픈소스 LLM은 그 수가 굉장히 적은 편인데요, 앞으로 더 많고 활발하게 오픈소스 LLM이 만들어져 이 리스트가 풍부해졌으면 좋겠습니다!

   리스트 성 글이어서 뉴스 글로 변경하였습니다. Show 소개 글을 참고해주세요.

   영어권에 비하면 적지만 그래도 모아놓으니 꽤 되는군요~
"
"https://news.hada.io/topic?id=10420","StarLite 12.5인치 리눅스 태블릿","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        StarLite 12.5인치 리눅스 태블릿

     * 본 기사는 소형이지만 강력한 장치인 StarLite 12.5-inch Linux 태블릿을 소개합니다.
     * 이 태블릿은 최대 3.7GHz 속도와 16GB 메모리를 가진 Intel Alder Lake N200 프로세서로 구동됩니다.
     * 12.5-inch 3k 터치 디스플레이와 무소음 운영을 위한 무팬 디자인을 특징으로 합니다.
     * 장치는 최대 12시간의 배터리 수명을 자랑하며 Type II Anodised Aluminium Chassis에 담겨 있습니다.
     * 자석식 변환 디자인을 가지고 있으며 WiFi 5, Bluetooth 5.1, Micro HDMI, USB-C, Micro SD, 헤드폰 잭 등 다양한 연결 옵션을 제공합니다.
     * 태블릿은 coreboot와 edk II에 의해 구동되는 오픈소스 펌웨어를 사용합니다.
     * Linux Vendor Firmware Service (LVFS)를 통해 제공되는 5년간의 업데이트를 제공합니다.
     * 펌웨어는 매우 효율적이며 POST에 단 0.76초만 소요되며, Advanced Configuration 인터페이스를 사용하여 사용자 정의가 가능합니다.
     * 태블릿은 미디어 키가 있는 백라이트 키보드를 포함하며, 다양한 국제 레이아웃에서 사용할 수 있습니다.
     * 또한 USB-C를 통해 65와트의 충전 전력을 제공하는 미니어처 Gallium Nitride 충전기도 포함되어 있습니다.
     * 장치는 보증을 무효화하지 않는 수정을 허용하는 1년 오픈 보증이 함께 제공됩니다.
     * 하드웨어와 펌웨어는 매우 사용자 정의가 가능하며, 사용자가 선택한 Linux 배포판으로 사전 설치될 수 있습니다.
     * StarLite 12.5-inch Linux 태블릿의 가격은 $498.00부터 시작하며, 관세와 세금은 제외됩니다.

        Hacker News 의견

     * StarLite 12.5인치 리눅스 태블릿이 리눅스 지원, coreboot 펌웨어, 그리고 약 500달러의 적절한 사양으로 관심을 끌고 있다.
     * 사용자들이 태블릿에서 리눅스를 사용한 경험을 공유하며, 다양한 리눅스 배포판에서 터치스크린 지원과 화면 회전 문제를 강조하였다.
     * StarLite 태블릿과 같은 제품의 성공이 리눅스의 터치스크린 지원을 개선할 수 있을 것이라는 희망이 있다.
     * 태블릿이 마이크로 HDMI 포트를 사용하는 것이 비판받았으며, 대신 듀얼 USB-C 포트를 제안하였다.
     * 태블릿의 2880x1920 해상도 디스플레이는 그 가격대에 놀라운 것으로 간주되었다.
     * 일부 사용자들이 다른 태블릿 PC에서 리눅스를 사용한 경험을 공유하며, Asus flow z13과 HP의 태블릿 PC와 같은 대안을 제안하였다.
     * StarLite 태블릿의 무팬 디자인이 주목받았으며, BIOS에서의 공격적인 팬 모드 이미지에 대한 링크가 제공되었다.
     * 회사의 다른 제품인 Starfighter에 대한 리뷰 부족과 긴 대기 시간 때문에 의문이 제기되었다.
     * 일부 사용자들은 x86 태블릿의 생존 가능성에 대해 의구심을 표현하였으며, 이는 ARM에 비해 전력 소비 때문이다.
     * 더 이상 업데이트할 수 없는 오래된 아이패드에서 리눅스를 실행할 수 있는 가능성에 대한 호기심이 있다.
"
"https://news.hada.io/topic?id=10466","FastAPI 한줄씩 따라읽기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            FastAPI 한줄씩 따라읽기

    1. Pycham 으로 스택 추적해보기 한번 해볼만 합니다.
         1. 사용되는 변수들이 어떤 값인지, 인스턴스라면 어떤 attr을 가지고 있는지 확인 할 수 있습니다.
    2. FastAPI는 Starlette 없이는 존재할 수 없을 것으로 보입니다.
         1. 기본 클래스도 Starlette 상속받아 만들어 졌고, Request, Response, Router, Middleware 등이 모두 Starlette을 베이스로 만들어 졌습니다.
         2. FastAPI 코드보다 starlette 코드를 더 많이 보게 됩니다.
         3. FastAPI 떼고, Starlette으로 앱을 만들어 볼수도 있겠다는 생각이 듭니다.
    3. Uvicorn ↔ Starlette ↔ FastAPI 역할이 좀더 선명하게 느껴집니다.
         1. Uvicorn: 외부 통신 인터페이스
         2. Starlette: 서버 내부 동작 인터페이스
         3. FastAPI: Starlette 위에 endpoint func 작성의 편의성 (Depends(), Pydantic을 통한 Param의 검증 등등 )얹어서 Uvicorn과 상호 작용
    4. 미들웨어에 대한 이해가 좀 더 생겼습니다.
         1. ServerErrorMiddleware → 커스텀 미들웨어들 → ExceptionMiddleware 로 Request 처리가 진행 됨을 알 수 있습니다.
         2. @app.exception_handler(Exception) 로 달아놓은 handler는 ExceptionMiddleware에서 처리가 되고, 그 외 서버에러는 ServerErrorMiddleware 에서 처리가 됩니다.
         3. 미들웨어들 블락킹 방지하기 위해 별도의 쓰레드 그룹을 다시 돌립니다.
"
"https://news.hada.io/topic?id=10438","Windows 11, 30년 전에 컴파일된 바이너리를 원활하게 실행","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Windows 11, 30년 전에 컴파일된 바이너리를 원활하게 실행

        Hacker News 의견

     * Windows 11의 놀라운 역호환성에 대한 기사, 30년 전에 컴파일된 바이너리를 실행할 수 있음
     * SimCity 개발자인 Joel Spolsky의 블로그 게시물을 참조, Windows 개발자들이 해결한 SimCity의 중요한 버그에 대한 이야기 공유
     * ""Games for Windows – Live"" 서비스를 사용하던 일부 게임들은 서비스가 2014년에 중단된 이후 업데이트되지 않아, 서비스를 위한 DLLs가 제거되면서 Windows 10 이후 버전에서 실행되지 않음
     * Microsoft 개발자 Raymond Chen, 수십 년 동안 이 주제에 대한 통찰을 제공해 왔음
     * Windows API의 안정성이 Wine/Proton을 통한 노력으로 Linux 및 기타 운영 체제에 대한 신뢰할 수 있는 ""유니버설"" API인 Win32/DX가 되도록 이끌었음
     * 일부 사용자들은 역호환성이 놀라운 기능이 아닌 표준이 되어야 한다는 기대를 표현함
     * Windows 95/98 시대의 게임들과 관련하여 이 역호환성의 잠재적 제한에 대한 논의가 있음
     * 오래된 프로그램들이 ""가상 디스플레이"" 내의 창에서 실행될 수 있도록 하는 역호환성 옵션에 대한 제안이 있음
"
"https://news.hada.io/topic?id=10495","전해조가 CO2를 효율적으로 재생 프로판 연료로 변환","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     전해조가 CO2를 효율적으로 재생 프로판 연료로 변환

     * 일리노이 공과대학(IIT)의 연구팀이 이산화탄소를 프로판으로 효율적으로 변환하는 전해질 장치를 개발하였습니다.
     * 이 장치는 저렴하고 쉽게 구할 수 있는 재료를 사용하여, 온실가스 배출을 줄이고 재생 가능한 화학 제조를 진전시키는 유망한 해결책이 될 수 있습니다.
     * 이 전해질의 독특한 촉매 시스템은 저렴한 금속과 유기 화합물을 사용하여 세 개의 탄소 원자로 구성된 연료인 프로판을 생산합니다.
     * 연구팀은 촉매가 어떻게 높은 반응 활성성과 프로판에 대한 선택성을 달성하는지 이해하기 위해 실험과 계산 모델링을 결합하여 사용하였습니다.
     * 이 장치는 연속 흐름 디자인을 특징으로, 프로판의 끊임없는 확장 가능한 생산을 가능하게 하며, 기존의 배치식 CO2 변환 시스템의 한계를 극복합니다.
     * 이 연구는 2050년까지 온실가스 배출을 제로로 만드는 국가적 노력과 일치하며, Advanced Research Projects Agency-Energy와 같은 정부 기관의 지원을 받았습니다.
     * IIT는 이 혁신을 최적화하고 전파하기 위해 글로벌 프로판 회사 SHV Energy와 파트너십을 맺었습니다.
     * 이 기술은 산업용 탄소 배출을 크게 줄일 수 있는 잠재력을 가지고 있으며, 지속 가능하고 재생 가능한 화학 제조를 향한 중요한 한 걸음을 표시합니다.

        Hacker News 의견

     * 새로운 전해질 시스템에 대한 기사, 효율적으로 CO2를 재생 프로판 연료로 변환 가능
     * 시스템은 음이온 교환 이오노머로 코팅된 1-에틸-3-메틸이미다졸륨 기능화 Mo3P 나노입자로 구성된 촉매 시스템 사용
     * 시스템은 상업적으로 실행 가능한 반응 속도, 효율성, 시간을 입증, CO2 회수에 대한 유망한 해결책
     * 시스템이 농축된 CO2 분위기를 필요로 하는지에 대한 의문, 대기에서 0.4%의 CO2를 추출하는 것은 비싸다
     * 일부 사용자들은 시스템이 역과정에 사용될 가능성에 대해 추측, 프로판을 대기 산소로 산화시켜 전기를 생산
     * 프로판의 에너지 밀도는 리튬 이온 배터리보다 훨씬 높아, 에너지 저장에 중요한 영향을 미칠 수 있음
     * 시스템에서 사용되는 재료, 특히 Mo3P 나노입자의 생산 규모와 비용에 대한 의문
     * 일부 사용자들은 이전의 유사 연구를 언급, 스탠포드의 2019년 발표와 CO2를 메탄으로 변환하는 작업을 진행 중인 Terraform Industries 스타트업
     * 현재의 전기 가격 때문에 기술이 자동차에서 즉시 사용되지 않을 수 있음
"
"https://news.hada.io/topic?id=10456","Cellebrite가 경찰에게 그들의 기술 비밀 유지를 요청","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Cellebrite가 경찰에게 그들의 기술 비밀 유지를 요청

     * 휴대폰 해킹 기술을 제공하는 Cellebrite사, 기술 사용에 대한 비밀 유지를 법 집행 기관에 요청
     * 이 기술은 전 세계의 경찰과 정부 기관들이 휴대폰을 해제하고 내부 데이터에 접근하는 데 사용됨
     * 법률 전문가들, 이러한 강력한 기술의 사용이 공개되고 심사 받아야 한다며 이러한 비밀에 대해 우려 표명
     * 유출된 법 집행 고객을 위한 교육 비디오에서 고위 Cellebrite 직원이 데이터 추출 방법을 가능한 한 비밀로 유지하도록 고객에게 조언하는 모습이 포착됨
     * 법률 전문가들, 이러한 비밀이 피고인과 대중의 권리를 해칠 수 있으며, 판사가 수색 또는 특정 데이터와 증거의 사용을 승인하기 위해서는 투명성이 필요하다고 주장
     * Cellebrite사, 기술 사용에 대한 공개가 범죄자에게 도움이 될 수 있고 법 집행의 업무를 어렵게 만들 수 있다고 주장
     * 이 회사는 윤리적인 법 집행을 지원하는 데 전념하고 있으며, 고객이 어떠한 법률, 법적 요구 사항, 또는 포렌식 표준에 반하는 행동을 취하도록 조언하지 않는다고 강조
     * 전자 프론티어 재단, Cellebrite사를 비판하며, 이 회사가 권위주의 국가, 범죄 집단, 사이버 용병들이 취약한 기기를 악용할 수 있는 세상을 만들고 있다고 주장
     * 이는 기술을 비밀로 유지하도록 고객에게 요청하는 회사의 첫 사례가 아님; 정부 계약업체인 Harris Corporation은 이전에 휴대폰 감시 도구인 'stingrays'를 사용하기 위해 법 집행 기관에 비밀 유지 계약을 체결하도록 요청한 적이 있음
"
"https://news.hada.io/topic?id=10381","ISP들, 모든 수수료 목록화가 너무 어렵다며 FCC에 새로운 규칙 폐지 요청","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ISP들, 모든 수수료 목록화가 너무 어렵다며 FCC에 새로운 규칙 폐지 요청

     * 미국의 광대역 산업이 인터넷 서비스 제공업체(ISPs)가 모든 월간 요금을 명시하도록 요구하는 새로운 규칙에 반대하고 있다.
     * 산업의 다양한 부문을 대표하는 5개의 로비 그룹이 새로운 광대역 라벨링 규칙이 시행되기 전에 이 요구사항을 제거하도록 연방통신위원회(FCC)에 촉구하였다.
     * 이들 그룹은 모든 월간 요금을 명시하는 것이 소비자와 제공업체 모두에게 불필요한 복잡성을 더하고, 단일 플랜에 대해 여러 라벨을 만들어낼 수 있다고 주장한다.
     * 대신, FCC가 제공업체에게 이러한 요금이 적용될 수 있으며 지역에 따라 다를 수 있다는 설명문을 포함하도록 요구해야 한다고 제안한다.
     * 이 신청서는 주요 케이블 회사를 대표하는 NCTA-The Internet & Television Association에 의해 제출되었으며, CTIA 및 USTelecom을 포함한 다른 무역 그룹들에 의해 지지되었다.
     * FCC의 진실 과금 규칙은 소비자 옹호자들로부터 ISP들이 서비스의 실제 비용을 숨기려는 허점을 만들려고 한다는 비판을 받았다.
     * FCC는 2021년 법에 따라 인터넷 서비스 플랜의 정확한 가격을 표시하는 광대역 라벨을 구현하도록 요구되었으며, 2022년 11월에 특정 라벨 규칙을 채택하였다.
     * 라벨에는 월간 가격, 추가 요금, 속도, 데이터 제한, 그 외 정보를 포함해야 하며, 판매 시점에서 소비자에게 표시되어야 한다.
     * 새로운 규칙은 아직 시행되지 않았다. 이는 미국 Paperwork Reduction Act에 따른 연방 관리 및 예산 사무국(OMB)의 검토를 받아야 하기 때문이다.
     * ISP들은 FCC 명령의 일부에 이의를 제기하였다. 이는 제공업체가 정부에 의해 요구되지 않는 모든 반복적인 월간 요금을 포함하여 명시해야 한다는 내용이다.
     * FCC 명령은 ISP들이 월간 임의 요금을 기본 월간 가격과 합친 총 가격을 명시할 수 있으며, 라벨에서 이러한 요금을 별도로 항목별로 나열할 필요가 없다고 명시하고 있다.

        Hacker News 의견

     * 인터넷 서비스 제공업체(ISP)들이 정부가 요구하지 않는 반복적인 월간 수수료를 포함하여 모든 수수료를 명시하도록 요구하는 새로운 FCC 규정에 대해 불만을 제기하고 있다.
     * 댓글 작성자들은 ISP가 이러한 수수료를 청구할 수 있다면, 그들이 어디로 가는지 및 어떤 목적으로 사용되는지 법적으로 공개해야 한다고 주장한다.
     * 일부 댓글 작성자들은 ISP가 수십억 달러의 보조금을 받고도 약속한 인프라에 투자하지 않고, 투명성 요구에 대해 불평하는 것을 비판한다.
     * ISP가 매달 수백만 구독자에게 이러한 수수료를 계산하고 청구하는 데 성공하고 있음에도 불구하고, 모든 수수료를 upfront로 명시하는 것이 어렵다고 주장하는 것에 대해 의심의 목소리가 있다.
     * 일부 댓글 작성자들은 ISP가 그들의 잘못으로 인한 수수료와 그렇지 않은 수수료를 섞어 놓고, 그 중 어느 것도 명시하는 것이 불공정하다고 불평하는 것을 제안한다.
     * 댓글 작성자들은 세금과 수수료를 포함한 계획의 총 비용을 가입 후에야 알 수 있었다는 경험을 공유한다.
     * 미국이 모든 광고된 가격이 모든 세금과 수수료를 포함해야 한다는 EU 규정을 채택해야 한다는 요구가 있다.
     * Google Fiber는 직설적인 가격 책정에 대해 칭찬을 받고 있으며, 한 댓글 작성자는 패키지 비용이 정확히 알려진 대로 청구되었다고 밝혔다.
     * 뉴질랜드의 한 댓글 작성자는 ISP가 고객이 방문하는 DNS 사이트에 대해 기록하거나 신경 쓰지 않고 추가 수수료를 청구하지 않는다고 공유한다.
     * ISP가 수수료 명시가 너무 어렵다고 주장하면서도, 그들을 청구하는 데 문제가 없다는 점에 대해 비판이 있다.
     * 통신사 세금 코드와 규제 수수료를 다룬 경험이 있는 한 댓글 작성자는 이러한 청구서를 계산하는 시스템이 오래되어 소비자 대면 웹사이트에서 정확한 금액을 실시간으로 보여주는 데 적합하지 않다고 제안한다.
"
"https://news.hada.io/topic?id=10448","'클론-어-리사클론-어-리사'

     * 기사 제목은 'Clone-a-Lisa'.
     * 사용자가 60초 안에 위조품을 그릴 수 있는 게임 또는 상호작용 경험에 대한 것으로 보인다.
     * 이 게임은 VOLE.wtf 웹사이트에서 호스팅된다.
     * 게임은 디지털 그림 또는 그리기의 어떤 형태를 포함할 가능성이 있다.
     * 'Clone-a-Lisa'라는 제목은 위조해야 하는 그림이 유명한 'Mona Lisa'일 수 있다는 것을 암시한다.
     * 게임의 빠른 시간 제한인 60초는 빠르고 도전적인 경험을 암시한다.
     * 'Sound'의 언급은 게임이 더 몰입감 있는 경험을 위해 오디오 요소를 포함할 수 있다는 것을 나타낼 수 있다.

        Hacker News 의견

     * 'Clone-a-Lisa' 게임은 사용자가 유명한 그림을 재현하고 그 버전이 원본에 얼마나 가까운지에 따라 점수를 매기는 기능을 제공합니다.
     * 점수 시스템은 사용자의 버전을 원본 위에 겹쳐서 각 픽셀의 색상 값 차이를 계산합니다. 이 총 차이는 초기 상태와 비교되며, 가장 어두운 영역이 가장 큰 초기 차이를 가집니다.
     * 사용자들은 점수 시스템이 보람차고 흥미롭다고 느꼈지만, 일부는 단색 사각형이 높은 점수를 받는 것을 방지하기 위한 수정 제안을 했습니다.
     * 가장 높은 점수를 받은 그림을 전시할 리더보드 추가와 원본과 사용자의 버전을 비교할 수 있는 나란히 비교 기능 추가에 대한 제안이 있습니다.
     * 일부 사용자들은 시간 제한 때문에 게임이 어렵다고 느꼈고 무한 시간 옵션을 요청했습니다.
     * 원본과 사용자의 그림 사이를 전환하는 키보드 단축키와 파티에서 게임을 더 재미있게 만들 수 있는 멀티플레이어 모드에 대한 요청도 있습니다.
     * 이 게임은 그 개념과 사용자들에게 화가들이 무엇을 하는지 더 잘 이해시키는 것에 대해 칭찬받았습니다. 점수 시스템에 '획 수'를 추가하여 플레이어들이 실제 예술가처럼 그림을 그리도록 장려하는 제안이 있습니다.
     * 일부 사용자들은 게임에서 기술적 문제를 겪었으며, 그 중에는 검은색으로만 그림을 그릴 수 있는 경우도 있습니다.
"
"https://news.hada.io/topic?id=10464","AWS GenAI (생성AI) Day | 9월 14일 | 무료 온라인 이벤트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               AWS GenAI (생성AI) Day | 9월 14일 | 무료 온라인 이벤트

   1/ 키노트 트랙
     * Generative AI의 궤적: 학습에서 임팩트까지
     * AI 투자 프론티어 탐색하기: 성공전략

   2/ 비즈니스 트랙
     * 한 세대에게 읽는 법을 가르치는 것: Generative AI가 교육에 미치는 영향
     * Generative AI: 차세대 생산성 향상을 위한 고민
     * 체험형 콘텐츠의 새로운 챕터: GenAI가 크리에이터에게 주는 임팩트
     * 보는 것이 믿는 것: AI를 활용한 미디어 진위 여부 검증

   3/ 기술 트랙
     * Langchain과 Amazon Bedrock을 통한 Generative AI 애플리케이션 구축 및 배포
     * FM/LLM 시대의 데이터 중심 AI 개발
     * 대규모 추론(Large-Scale Inference) 정복하기
     * OctoML로 Generative AI를 효율적이고 지속적으로 활용하는 방법
"
"https://news.hada.io/topic?id=10452","ReMarkable Streaming Tool v2: 원격 근무 효율성 향상","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ReMarkable Streaming Tool v2: 원격 근무 효율성 향상

     * Olivier Wulveryck가 개발하고 진화시킨 디지털 노트패드 장치인 reMarkable 2를 위한 스트리밍 도구에 대한 기사.
     * 스트리밍 도구는 처음에 2021년에 원격 작업과 프레젠테이션을 용이하게 하기 위해 개발되었으며, 사용자가 비디오 통화 중에 스케치와 노트를 직접 웹 브라우저 탭에 공유할 수 있게 했다.
     * 이 도구는 두 가지 주요 구성 요소로 구성되어 있다: 원본 이미지를 캡처하고 전송하는 장치에서 실행되는 서버와, 이미지를 브라우저 보기에 적합한 형식으로 처리하는 노트북의 서비스.
     * 저자는 도구의 즉석 활성화에 대한 도전을 확인했는데, 이는 로컬 서비스를 시작하기 위한 준비 단계를 필요로 하며, 이로 인해 과정이 복잡해졌다.
     * 개선된 버전의 도구는 로컬 서비스의 필요성을 제거하려고 하며, 이는 사용자 친화적이고 성능을 향상시킨다.
     * 새로운 아키텍처는 클라이언트를 제거하고 서버 구성 요소 내에 HTTP 서버를 설립하며, 클라이언트는 브라우저가 해석할 수 있는 형식, 예를 들어 Javascript 또는 WASM으로 구현된다.
     * 저자는 도구의 Javascript 개발을 돕기 위해 AI 디지털 어시스턴트인 ChatGPT를 사용했다.
     * 도구는 픽셀 값의 패킹, 압축을 위한 Run Length Encoding (RLE) 사용, 변경이 있을 때만 새 프레임을 전송함으로써 데이터 전송과 CPU 사용을 줄이는 방식으로 최적화되었다.
     * 이 애플리케이션과 그 소스 코드는 GitHub에서 사용할 수 있다.

        Hacker News 의견

     * 저자가 원격 작업 생산성 향상을 위해 설계된 reMarkable 스트리밍 도구의 최신 버전 공유
     * reMarkable 태블릿에서 노트북으로 스트리밍 가능한 도구, 가상 회의 및 프레젠테이션에 유용
     * 도구의 기술적 측면에 대한 깊이 있는 분석 제공, 아키텍처, 구성 요소, 사용자 경험 개선 포함
     * 사용자 피드백에 기반한 도구 활성화 과정 간소화
     * 도구는 더 이상 로컬 서비스를 필요로 하지 않으며 네트워크 소비 최적화
     * 스크린 미러링 가능한 대체 도구 SuperNote 언급, 회의 중 빠른 다이어그램 그리기에 유용
     * 타입 배열 사용으로 HTML 캔버스 렌더링 속도 향상 제안
     * 이미지 형식으로 JPEG 선택에 대한 저자의 선택, PNG 또는 RLE 압축이 CPU에 더 가볍다는 제안
     * 문제 해결을 위한 chatgpt 사용에 대한 저자의 접근 방식 칭찬, 단순성의 복잡성 언급
     * 프레임 버퍼의 변경된 영역만 전송하는 것을 고려했는지에 대한 질문
     * 사용자가 reMarkable이 이 도구와 같은 기능에 집중하기를 원함, 구독 서비스보다
     * 저자의 초기 접근 방식에 대해 더 읽고 싶다는 사용자의 표현, 클라이언트를 WASM으로 컴파일
     * ReMarkable 2가 불안전한 장치라는 우려 제기
     * 이 도구가 내장 스트리밍(화면 공유) 기능과 어떻게 비교되는지에 대한 질문
"
"https://news.hada.io/topic?id=10437",""레일웨이 지향 프로그래밍"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ""레일웨이 지향 프로그래밍""

     * ""Railway Oriented Programming""(ROP)에 대한 기사, 소프트웨어 개발에서의 함수형 오류 처리 방법
     * 철도 비유를 기반으로 한 ROP, 이해하기 쉽고 재미있음
     * Github에서 ROP 방식을 사용하여 일반 C#과 F#을 비교하는 프로젝트 생성
     * ROP를 극단적으로 사용하는 것에 대한 경고, ""Against Railway-Oriented Programming""이라는 제목의 글로 이를 상세히 설명
     * NDC London 2014, NDC Oslo 2014, Functional Programming eXchange 2014 등 다양한 컨퍼런스에서 이 주제 발표
     * ROP에 대한 접근 방식은 Haskell의 Either 모나드와 Kleisli 구성과 관련 있지만, 모나드 튜토리얼이 되려는 시도는 아님
     * 구체적인 예제로 시작하여 추상적 개념으로 이동하는 것의 중요성 강조
     * 사용자 정의 오류 유형의 목록 사용, 모나딕 및 비모나딕 함수를 파이프라인에 통합, 예외에서 오류 사례로 매핑, 모나딕 함수 병렬 결합 등의 기법을 포함한 ROP 접근 방식
     * 일관된 스타일을 강제하고 유지 관리하기 쉬운 다용도 ROP 템플릿 제공을 목표로 함
     * NuGet과 함께 작동하는 준비된 F# 라이브러리를 원하는 사람들에게 Chessie 프로젝트를 추천
     * ROP 기법을 사용한 샘플 웹 서비스 생성 및 FizzBuzz에 ROP 접근 방식 적용
     * Either와 Kleisi 구성에 대한 자세한 내용을 원하는 사람들에게 모나드에 대한 다양한 게시물 및 튜토리얼을 포함한 추가 읽기 제안

   결함 없는 프로그램을 만들기 위한 Railway-Oriented Programming

        Hacker News 의견

     * 기사는 Railway Oriented Programming (ROP)이라는 함수형 프로그래밍 패턴 개념을 논의하며, 이는 오류 처리를 깔끔하고 효율적으로 관리하는 데 도움을 준다.
     * 한 댓글 작성자는 Elixir에서 with 키워드의 사용을 ROP의 실용적인 구현으로 강조한다. 이는 함수의 순차적 실행을 가능하게 하며, 어떤 함수가 예상 출력과 일치하지 않을 경우 조기 반환을 가능하게 한다.
     * 다른 댓글 작성자는 저자가 ""Against Railway Oriented Programming""이라는 후속 게시물을 언급하며, 이는 ROP를 예외 처리 대체제로 오용하는 것에 대해 경고한다. 댓글 작성자는 ROP가 그 자체로 사용되는 경우가 있지만, 대부분의 경우 예외가 오류 조건을 처리하는 더 깔끔한 방법을 제공한다고 동의한다.
     * 일부 댓글 작성자들은 ROP가 오류 처리를 호출 위치에서 멀어지게 할 수 있으며, 이는 호출자가 종종 오류를 처리하는 데 가장 잘 갖추어져 있기 때문에 이상적이지 않을 수 있다고 주장한다. 그들은 ROP가 잊어버리거나 잘못하기 쉬운 추가 보일러플레이트 코드를 필요로 할 수 있다고 제안한다.
     * 기사를 호스팅하는 사이트는 여러 댓글 작성자들로부터 교육적인 콘텐츠, 특히 함수형 프로그래밍 개념에 대한 집중에 대해 칭찬을 받는다.
     * 한 댓글 작성자는 데이터플로우 프로그래밍이 ROP에 대한 더 나은 대안이 될 수 있으며, 이는 프로그램의 ""행복한 경로""에 영향을 미치지 않고 오류 처리를 가능하게 한다고 제안한다.
     * 기사는 HackerNews에서 여러 번 논의되었으며, 이는 기술 커뮤니티에서의 지속적인 관련성과 관심을 나타낸다.
     * 일부 댓글 작성자들은 ROP 사용이 모든 비즈니스 로직이 동일하게 보이게 할 수 있으며, 유효성 검사 오류 및 부작용 처리를 위한 다른 방법을 제안한다는 우려를 표현한다.
     * 몇몇 댓글 작성자들은 ROP에 대한 반복적인 논의를 칭찬하며, 그들의 기술 여정이 진행됨에 따라 개념에 대한 이해와 관점이 발전한다고 지적한다.
     * 한 댓글 작성자는 C#에서 ROP를 구현하는 데 대한 자신의 글을 공유한다.
"
"https://news.hada.io/topic?id=10468","불안한 뇌가 감정 조절을 재지향","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           불안한 뇌가 감정 조절을 재지향

        Hacker News 의견

     * 높아진 불안감이 다른 감정 조절을 유발하며, 이는 회피 행동으로 이어질 수 있다는 내용의 기사
     * 심지어 약한 감정적 도전조차도 Frontopolar cortex (FPl) 신경 범위를 포화시킬 수 있음을 시사하는 연구
     * 새롭고 다른 행동으로 재참여를 장려하는 체계적 전략으로서의 Exposure Therapy (ET) 언급
     * 불안한 사람들의 뇌가 감정을 조절할 때 다른 영역을 사용하며, 이는 높은 감정 상태에서 쉽게 포화될 수 있다는 연구 결과
     * 신체 건강, 특히 혈당 수준 관리를 유지하면 불안을 완화할 수 있다는 기사 제안
     * 불안한 사람의 뇌가 불안을 다른 뇌 부분으로 재경로할 수 있으며, 이로 인해 문제가 발생할 수 있다는 연구 제안
     * ""Dreaming Is the Inverse of Anxious Mind-Wandering""라는 논문을 언급하며, 꿈꾸는 것이 잘못된 불안을 진단하는 내장 메커니즘이라는 제안을 하는 기사
     * 공포증이 있는 개인에게 특히 관련이 있을 수 있는 연구 결과로, 공황감을 피하는 강한 충동에 대해 논의
     * Cognitive Behavioral Therapy (CBT)와 같은 치료가 이 메커니즘에 영향을 미칠 수 있으며 불안을 줄일 수 있다는 기사 제안
     * 높은 불안이 이 다른 경로로 이어지는지, 아니면 과거의 사건이 이 경로를 이끌어내어 높은 불안을 초래하는지에 대한 연구 질문
     * 이 경로의 차이가 발생한 후 두려운 상황에 노출되면 불안이 줄어들 것인지에 대한 기사 질문
"
"https://news.hada.io/topic?id=10485","5년 전 Valve가 출시한 Proton이 리눅스 게이밍을 영원히 바꿨다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                5년 전 Valve가 출시한 Proton이 리눅스 게이밍을 영원히 바꿨다

     * Valve가 5년 전 게임 호환성 도구인 Proton을 출시, Linux 게임 환경에 큰 변화를 가져왔음
     * Proton 출시 이전, Linux 게임 시장은 게임 포트 부족과 Steam Machines 프로젝트의 실패로 정체 상태였음
     * CodeWeavers와의 협력으로 개발된 Wine의 포크인 Proton은 인기 게임들이 Linux에서 실행되게 해, 플랫폼을 게이머들에게 더 매력적으로 만들었음
     * Proton의 도입으로 Linux 게임이 폭발적으로 증가, ProtonDB의 대중 참여 보고서에 따르면 플랫폼에서 작동하는 11,000개 이상의 타이틀이 있음
     * Valve의 휴대용 게임 기기인 Steam Deck은 Proton 없이는 불가능했을 것이며, 이는 도구의 중요한 영향을 보여줌
     * 성공에도 불구하고 Proton은 Microsoft의 변화에 대한 호환성 유지와 제3자 런처 문제 해결 등의 도전과제를 안고 있음
     * Valve는 Proton을 정기적으로 업데이트하고 있으며, 주요 변경 로그에 300회 이상의 수정이 있는 것을 보면, 도구를 개선하기 위한 지속적인 노력을 보여줌
     * Proton은 데스크탑부터 Steam Deck까지 Linux 시스템에서 다양한 게임을 플레이할 수 있게 해, Linux 사용자들의 게임 경험을 향상시켰음
     * Proton이 Linux의 게임 호환성을 크게 향상시켰지만, Steam에서 2% 미만의 사용자 점유율을 가진 플랫폼으로 여전히 틈새 시장으로 간주됨
     * 불완전함에도 불구하고 Proton은 Linux 게임을 발전시키는 데 중요한 역할을 하였으며, 사용자들이 플랫폼에서 이전에 접근할 수 없었던 다양한 게임을 즐길 수 있게 해주었음

   벨브덕에 이제 리눅스환경에서도 게임의 유혹과 싸워야합니다.

   벨브가 없었따면 리눅스 게이밍은 존재하지 않았을거에요...

   고마워, Valve
   Valve는 Proton, Mesa 등을 위해서 100명 이상의 오픈소스 개발자에게 비용을 지급중
   Steam Deck : 궁극의 게임 플랫폼 출시 1주년

   8년전에 이미 Linus Torvalds 옹 께서 ""Valve will save Linux Desktop"" 라고 말씀하신 바 있죠

   Proton, Steam Deck 은 칭찬받아 마땅합니다.
   전 PC게임은 잘 안하는 편인데.. 스팀덱 다음 버전이 나오면 하나 사볼까 생각이 들어요

        Hacker News 의견

     * Valve의 Proton 출시는 5년 전 게임 산업에 큰 영향을 미쳤으며, 이로 인해 회사는 충성 고객 기반을 확보하였다.
     * Proton의 데스크톱 Linux에 대한 영향은 측정할 수 없을 정도로 크며, 사용자들은 Valve가 오픈 소스를 잘 활용했다고 칭찬하고 있다.
     * 호환성 계층을 통해 게임을 실행하는 장치인 Steam Deck는 그 무결성과 유연성으로 호평받았다.
     * 사용자들은 M1/M2 Apple Silicon용 Proton 버전에 관심을 보이며, 더 나은 x86 VMs의 필요성을 강조하고 있다.
     * Proton이 게임 개발자들의 사실상의 목표 플랫폼이 될 가능성에 대한 추측이 있으며, 이는 다양한 운영 체제 간의 호환성을 보장한다.
     * Proton은 새로운 게임과 오래된 게임 모두를 지원하는 것이 인상적이며, 이는 Chromebook의 실험적인 Steam 게임 지원의 기반이기도 하다.
     * 많은 사용자들이 Valve의 Proton 덕분에 Linux를 전체적으로 사용하게 되었으며, 신규 게임에서도 Linux 게임 경험이 긍정적이라고 보고하고 있다.
     * Proton 작업으로 일부 사용자들은 완전히 Windows 파티션을 포기하게 되어, Steam의 시장 지위를 더욱 공고히 하였다.
     * Proton은 또한 Linux 워크스테이션에서의 게임을 촉진하였으며, Windows 파티션의 필요성을 제거하고 오래된 기계의 수명을 연장하였다.
     * Valve의 Counter-Strike: Global Offensive (CSGO) 출시는 2012년 8월 21일, 게임 산업에서 중요한 사건으로 기록되었다.
"
"https://news.hada.io/topic?id=10488","GPT-3.5 Turbo 미세 조정 및 API 업데이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GPT-3.5 Turbo 미세 조정 및 API 업데이트

     * OpenAI가 GPT-3.5 Turbo에 대한 미세 조정 모델 지원을 발표함.
     * 미세 조정을 통해 모델이 지침을 더 잘 따르게 하며, 출력 형식과 말투를 훨씬 안정적으로 유지할 수 있음.
     * 특히 성능 향상 외에도 미세 조정은 프롬프트를 단축하는데 매우 효과적으로, 최대 90%의 프롬프트 단축하여 비용 절감이 가능함.
     * 학습할 데이터를 올리고 API를 호출하는 것으로 미세 조정 모델이 준비됨.
     * 미세 조정 모델은 훈련과 사용에 모두 별도의 비용이 부과됨.
     * 기존 GPT-3 모델 기반의 미세 조정 모델들은 2024년 1월 4일에 사용이 종료될 예정으로, GPT-3.5 Turbo로 이동해야 함.

     * 미세 조정 가이드
     * HN 스레드

   본문에 빼먹은 내용이 있는데,
   극히 일부의 특정한 작업에서 GPT-3.5 Turbo의 미세 조정 모델이 GPT-4보다 성능이 좋은 것으로 나타났다고 합니다.

   특히 프롬프트를 줄일 수 있어 GPT-4가 수십 배 비싼 걸 감안하면 대안이 될 수 있겠네요.
"
"https://news.hada.io/topic?id=10385","타입 시스템 표기법은 어떻게 읽어야 하는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        타입 시스템 표기법은 어떻게 읽어야 하는가?

     * 이 기사는 프로그래밍 언어에서 타입 시스템 표기법을 읽고 이해하는 방법에 대한 상세한 설명입니다.
     * 타입 시스템 표기법은 타입 시스템에 관한 기사나 논문에서 사용되는 수학적 표현입니다.
     * 타입 시스템을 설명하는 데 사용되는 표기법은 발표에 따라 다르지만, 대부분의 발표는 많은 공통 부분을 공유합니다.
     * 프로그래밍 언어에 적용된 타입 시스템은 구문 시스템으로, 프로그래밍 언어의 구문에 작용하는 규칙 집합입니다.
     * 이 표기법은 공식 논리에서 기원하며, 시스템의 속성에 대한 공식 증명을 구성하는 데 사용됩니다.
     * 이 기사는 또한 타입 시스템 표기법에서의 관계, 판단, 공리, 추론 규칙 개념에 대해 논의합니다.
     * 타이핑 관계는 일반적으로 e:τ로 쓰여지며 ""e는 타입 τ를 가지고 있다""로 읽을 수 있습니다.
     * 타이핑 판단은 ⊢e:τ⊢ 표기법을 사용하여 작성되며, 여기서 ⊢는 ""다음 문장이 참이다""를 의미하는 것으로 읽을 수 있습니다.
     * 이 기사는 또한 타입 시스템 표기법에서의 변수, 컨텍스트, 환경 개념에 대해 자세히 설명합니다.
     * 컨텍스트 또는 타입 환경은 표기법에서 Γ로 표현됩니다.
     * 이 기사는 또한 추론 규칙 레이아웃, 사이드 조건, 서브타이핑, 다중 컨텍스트, 양방향 타입 체크와 같은 다른 일반적인 표기법과 고려 사항을 다룹니다.
     * 이 기사는 타입 시스템 표기법을 이해하는 데 대한 종합적인 가이드로, 특히 이 개념에 새로운 사람들을 위한 것입니다.

        Hacker News 의견

     * 컴퓨터 과학 논문에서의 타입 시스템 표기법에 대한 논의, BNF 표기법, 추론 규칙 등에 대한 기초 설명
     * 표기법의 기원은 Frege로 추적되며, 회전문 심볼과 수평선이 핵심 요소
     * 컴퓨터 과학 전공자임에도 불구하고, 일부 독자들은 |-와 |=, 그리고 사용된 변수의 메타-구문 수준의 의미를 혼란스럽게 느낌
     * 설명은 감사하지만, 일부 독자들은 왜 Stack Exchange에서 작성되었는지, 다른 플랫폼인 lexi-lambda.github.io에서는 왜 작성되지 않았는지 의문
     * Benjamin C. Pierce의 ""Types and Programming Languages""는 이러한 내용을 다루는 좋은 교재로 추천
     * 일부 독자들은 수년 동안 이 주제에 대해 궁금해하였지만, 어떻게 접근해야 할지 몰랐음
     * Ada Reference Manual이 이러한 종류의 구문의 실용적인 사용 예로 언급됨
     * 기본적인 것부터 시작하여 발전시키는 답변에 대한 칭찬
     * ""𝗍𝗋𝗎𝖾+2:𝖨𝗇𝗍""는 대부분의 언어에서는 nonsensical하지만, Python에서는 True + 2가 실제로 정수이며 3과 같음이 예로 들어짐
"
"https://news.hada.io/topic?id=10484","나쁜 AI-생성 이미지로 세밀하게 조정하여 Stable Diffusion XL을 더욱 똑똑하게 만들었다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       나쁜 AI-생성 이미지로 세밀하게 조정하여 Stable Diffusion XL을 더욱 똑똑하게 만들었다

     * 기사는 저자가 오픈 소스 모델인 Stability AI의 Stable Diffusion XL 1.0 (SDXL)의 성능을 향상시키기 위한 노력에 대해 논의합니다. 이 모델은 1024x1024 해상도의 이미지를 생성합니다.
     * SDXL은 두 가지 모델로 구성되어 있습니다: 기본 모델과 속도에 영향을 주지 않으면서 세부 사항을 크게 향상시키는 선택적 리파이너 모델입니다.
     * 저자는 Hugging Face의 diffusers Python 라이브러리를 사용하여 SDXL과 함께 작업하였으며, 기본 모델과 리파이너 모델을 모두 로드하고 사용하는 방법에 대한 예를 제공하였습니다.
     * 저자는 중급 L4 GPU가 있는 클라우드 가상 머신을 사용하여 이미지를 생성하였으며, 각 1024x1024 이미지가 약 22초 만에 생성된다고 언급하였습니다.
     * 저자는 diffusers의 두 가지 새로운 기능인 프롬프트 가중치 및 Dreambooth LoRA 훈련 및 추론에 대해 실험하였습니다.
     * 프롬프트 가중치는 결과적인 위치 텍스트 임베딩에서 용어의 수학적 가중치를 더 허용함으로써 최종 생성물을 개선합니다.
     * Dreambooth LoRA 지원은 소량의 소스 이미지와 트리거 키워드에 대한 Stable Diffusion의 미세 조정을 가능하게 하며, 이를 통해 키워드가 주어진 다른 상황에서 해당 이미지의 ""개념""을 사용할 수 있게 합니다.
     * 저자는 Ugly Sonic이라는 Stable Diffusion의 원본 데이터 세트에 없는 개념에 대해 LoRA를 훈련시킴으로써 SDXL의 잠재력을 테스트하였습니다. 결과는 훨씬 더 좋고 일관성이 있었습니다.
     * 저자는 또한 ""잘못됨""을 프롬프트로 설정한 심하게 왜곡된 쓰레기 이미지에 대해 LoRA를 훈련시켰습니다. 이는 LoRA가 ""잘못됨""을 ""부정적인 프롬프트""로 사용하고 이러한 이미지를 피하여 덜 왜곡된 이미지를 생성할 수 있기를 바라는 것이었습니다.
     * 저자는 LoRA가 SDXL을 더 똑똑하게 만들고 프롬프트의 정신에 더 충실하게 만들어 생성된 이미지의 품질과 명확성을 향상시킨다는 것을 발견하였습니다.
     * 저자는 나쁜 이미지에 대해 SDXL을 훈련시키는 것이 ChatGPT를 강력하게 만드는 기술과 유사한 인간의 피드백에서 강화 학습(RLHF)의 한 형태라는 결론을 내렸습니다.
     * 저자는 ""부정적인 LoRAs""의 잠재력을 계속 탐구할 계획이며, 이들을 다른 LoRAs와 병합하여 성능을 향상시키는 것을 포함합니다.

        Hacker News 의견

     * 개인화된 RLHF (Reinforcement Learning from Human Feedback) 개념이 관심을 받고 있으며, 이는 AI 출력을 개인의 선호도로 이끌 수 있는 잠재력을 가지고 있다.
     * AI 시스템이 생성하는 모든 이미지에 ""좋아요/싫어요"" 피드백 옵션을 구현하는 것이 제안되었으며, ""잘못된"" 이미지를 무시하는 선택적 텍스트 라벨도 함께 제안되었다.
     * 피드백을 위한 가능한 가장 빠른 반복 루프에 대한 의문이 제기되었으며, 모델이 개인적으로 선호하는 이미지를 출력할 확률을 높이기 위해 초당 약 10k의 선호도를 수집하는 아이디어가 제시되었다.
     * 예술 창작을 위한 Stable Diffusion (SD) 사용이 인정받고 있으며, SD 1.5/2.0과 SDXL 사이의 차이는 중요하다고 강조되었다.
     * 데이터 과학자들이 자신들의 PC에서 수행한 모든 키 입력을 기록하였으며, 이는 이제 AI 시스템에 유용한 데이터로 간주된다.
     * SDXL Base Model을 사용하여 다양한 스타일의 프롬프트를 혼합하여 이미지를 생성하고, 이를 이용해 LoRA (Learning from Observations and Rewards)를 훈련시킨 후, 이 LoRA + 훈련 세트를 생성하는 데 사용된 프롬프트로 다시 생성하는 아이디어가 공유되었다.
     * 위 과정의 결과는 강화된 효과 - 더 많은 오류, 더 이상한, 고해상도로 설명된다.
     * 생성 이미지 AI의 출시는 더 높은 vram과 계산 요구 사항, 그리고 특수화된 SD1.5 모델에 비해 낮은 품질의 출력으로 인해 주목받지 못했다고 여겨진다.
     * Stable Diffusion XL을 위해 구축된 LORAs는 일반적인 부정적 프롬프트와만 잘 작동한다고 보고되었다.
     * 한 번에 여러 LoRAs를 활성화할 수 있는 능력에 대해 논란이 있다.
     * RLHF를 사용하여 GPT3를 더 사용하기 쉽게 만드는 것이 인정받고 있으며, 미래의 모델들이 부정적인 훈련 데이터로서 나쁜 결과를 포함할 것이라는 희망이 있다.
     * LoRAs를 병합하는 가능성이 언급되었으며, 개인 주제를 포함하는 하나의 LoRA, 결과를 개선하는 또 다른 LoRA, 그리고 특정 스타일을 위한 세 번째 LoRA를 사용하는 데 관심이 있다.
"
"https://news.hada.io/topic?id=10367","인터넷 아카이브, 녹음 산업 소송에 대응하여 구식 미디어를 대상으로 함","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                인터넷 아카이브, 녹음 산업 소송에 대응하여 구식 미디어를 대상으로 함

     * 인터넷 아카이브, 소니 및 유니버설 뮤직 그룹을 포함한 주요 레코드 레이블로부터 Great 78 프로젝트에 대한 소송에 직면
     * Great 78 프로젝트, 2006년 시작된 커뮤니티 주도의 이니셔티브로 70~120년 된 78 rpm 레코드 보존, 연구, 발견을 목표로 함
     * 비영리 도서관인 인터넷 아카이브, 소송을 심각하게 받아들이고 법률 자문단과 현재 검토 중
     * 프로젝트는 원래의 스크래치와 팝 사운드를 유지하면서, 현대 재마스터링 기법이 제거하는 쉘락 수지에 저장된 수십만 개의 녹음을 보존
     * 인터넷 아카이브의 디지털 사서인 브루스터 카일, 스포티파이와 같은 음악 스트리밍 서비스와 인터넷 아카이브와 같은 도서관 사이에는 충돌이 없어야 한다고 믿음
     * 보존된 녹음은 대학 교수를 포함한 교육 및 연구에 사용되지만, 평균적으로 한 달에 한 연구자만이 녹음에 접근하는 등 사용률은 상대적으로 낮음
     * 소송에도 불구하고 인터넷 아카이브는 ""모든 지식에 대한 보편적 접근""을 제공하는 임무에 대한 헌신을 유지하고 도서관 이용자 및 파트너로부터 지속적인 지원을 받음
     * Great 78 프로젝트에 대한 자세한 정보는 인터넷 아카이브가 프로젝트 웹사이트와 관련 기사에 대한 링크를 제공하였음

        Hacker News 의견

     * 인터넷 아카이브, 녹음 산업으로부터 저작권 문제로 소송에 직면
     * 일부 댓글러들은 인터넷 아카이브의 법적 방어를 의심하며, 학술 연구를 위한 오래된 기록 보관이 법정에서 유효하지 않을 수 있다고 주장
     * 다른 일부는 녹음 산업이 보관을 현재 저작권에 대한 위협으로 보고, 오래된 작품들이 최근 것들을 무효화할 수 있다고 제안
     * 사용자가 78RPM 컬렉션을 가리키는 정적 페이지를 만들었으며, 이 오래된 레코드들이 Spotify와 같은 현대 음악 플랫폼과 경쟁하지 않는다고 주장
     * 일부는 녹음 산업 협회(RIAA)가 이 사건에서 패배할 것이라고 믿으며, 보관된 미디어가 지적 재산을 우회하는 데 널리 사용되지 않았기 때문
     * 인터넷 아카이브의 기부 시스템이 제대로 작동하지 않는 문제에 대한 우려가 있으며, 이로 인해 기부금이 손실될 수 있다는 우려
     * 일부 사용자들은 지속적인 저작권 문제와 이에 대한 종결이 있을지에 대해 의문을 제기
     * 인터넷 아카이브가 이러한 저작권 싸움으로 너무 많은 위험을 감수하고 있어, 그들의 소중한 웹 아카이브가 위험에 처할 수 있다는 우려가 제기됨
     * 사용자가 전체 아카이브에 대한 토렌트의 사용 가능성에 대해 문의
"
"https://news.hada.io/topic?id=10396","Show GN: Odigos (YC W23) – Kubernetes 클러스터에 대한 즉각적인 분산 추적","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Show GN: Odigos (YC W23) – Kubernetes 클러스터에 대한 즉각적인 분산 추적

   안녕하세요. Odigos(https://github.com/keyval-dev/odigos) 공동 설립자 Eden과 Ari입니다. Odigos는 애플리케이션에 대한 분산 트레이스(distributed trace)을 즉시 생성하여 사용자가 쉽게 활용할 수 있도록 지원하는 오픈소스 프로젝트입니다. Odigos는 기존 모니터링 도구와 호환되며, 소스코드의 변경도 필요가 없습니다.

   예전 모니터링 도구에 대한 경험은 매우 아쉬웠습니다. 우리는 여러 마이크로서비스가 포함된 분산 시스템을 모니터링하는 과정에서, 문제의 근원이 되는 마이크로서비스를 특정하는 데 너무 많은 시간을 소비하고 있음을 알게 되었습니다. 예를 들면, 우리는 특정 애플리케이션이 지연을 유발하는 것으로 의심하고 디버깅하는 데 몇 시간을 보낸 적이 있었는데, 결국 문제의 원인이 다른 연관 애플리케이션에 있음을 뒤늦게 파악하게 되었습니다.

   이후, 우리는 이러한 문제 해결에 적합한 분산 추적(distributed tracing)에 대해 연구하였습니다. 단일 애플리케이션에서 특정 시점의 데이터를 캡처하는 메트릭 또는 로그와 달리, 분산 추적은 요청 별로 고유 ID로 태그를 지정하여 분산 환경 내에서 전파된 요청을 추적할 수 있게 합니다. 이를 통해 개발자는 각 요청의 컨텍스트(context)와 분산 애플리케이션들의 동작 방식을 이해할 수 있습니다.

   다만, 이러한 방식은 구현하기 어렵다는 단점이 있습니다. 단일 애플리케이션을 위한 메트릭이나 로그와 달리 분산 추적은 여러 애플리케이션에 걸쳐 구현되어야만 달성할 수 있습니다. 애플리케이션 중 분산 트레이스를 생성하지 않는 애플리케이션이 하나라도 있으면 컨텍스트의 전파가 중단되고 해당 트레이스의 가치는 크게 떨어집니다.

   여러 기업을 위해 분산 추적을 손수 구현해 본 경험에 따르면, 완전한 분산 추적을 달성하기 위해 모든 개발 팀이 각 애플리케이션을 계측하도록 조정하는 것은 매우 어려운 일입니다. 구현이 완료되면 프로덕션 문제를 훨씬 빠르게 해결할 수 있었으므로 가치가 높았습니다. 그러나, 부분적인 구현은 그다지 가치 있지 않았습니다.

   우리는 이 프로세스를 자동화하기 시작했습니다. 우리는 프로세스의 대부분에 대해 처리 방법을 알고 있었지만 가장 까다로운 부분은 (Go와 같이) 컴파일된 언어로 작성된 프로그램을 자동으로 계측하는 방법이었습니다. 그 부분만 자동화할 수 있다면 분산 트레이스를 생성하는 전체 프로세스 자동화가 가능할 것이라고 생각하였습니다. 연구 과정에서 우리는 eBPF(Linux 커널이 외부 프로그램을 로드하여 커널 내에서 실행 가능하도록 하는 기술)를 사용하면, 컴파일된 언어에 대한 자동 계측이 가능함을 깨달았습니다. 그것이 퍼즐의 마지막 조각이었고, 그것으로 우리는 Odigos를 개발할 수 있었습니다.

   Odigos는 먼저 실행 중인 모든 애플리케이션을 스캔하고 eBPF 및 OpenTelemetry를 사용하여 각 애플리케이션의 프로그래밍 언어를 인식하고 그에 따라 자동 계측합니다. 또한 데이터를 버퍼링, 필터링 및 선택한 모니터링 도구로 전달하는 수집기들을 배포하고, 트래픽 양에 따라 오토스케일(auto scale) 합니다. 이러한 자동화를 통해 개발자는 구현에 몇 달이 걸릴 수 있는 수동 작업과 달리 단 몇 분 내에 분산 추적을 활용할 수 있습니다.

   다양한 프로그래밍 언어 간의 자동 계측은 특히 정적 바이너리(예: Go 컴파일러에서 생성된 바이너리)를 고려하면 간단한 작업이 아닙니다. 우리는 관련 헤더를 안전하고 안정적인 방식으로 삽입할 수 있도록 다양한 메커니즘을 도입하였고, 다양한 버전의 오픈소스 라이브러리 기능과 구조체를 추적하는 시스템을 개발했습니다. 또한 eBPF에서 사용자 공간(userspace) 메모리 관리를 수행하는 시스템을 개발했습니다. 결과적으로 Odigos는 Go 및 Rust와 같은 컴파일된 언어에 대한 분산 트레이스를 자동으로 생성할 수 있는 유일한 솔루션이 되었습니다. 다른 솔루션은 사용자가 OpenTelemetry 또는 eBPF의 전문가가 되어야 하는 반면, 우리 솔루션은 관찰 가능성(observability) 기술에 대한 사전 지식이 필요 없습니다.

   우리의 솔루션은 단일 명령으로 쿠버네티스 클러스터에 설치할 수 있습니다. 일단 설치되면 실행 중인 모든 애플리케이션의 프로그래밍 언어를 감지하고 적합한 계측기를 적용합니다. JIT 언어(Java 및 .NET) 또는 인터프리트 언어(JavaScript 및 Python)의 경우 OpenTelemetry 계측기를 배포합니다. 컴파일된 언어(Go, Rust, C)에는 eBPF 기반 계측기를 배포합니다. 이 모든 것은 사용자에게 추상화되어 있으므로, 사용자는 (1) 대상 애플리케이션 중 일부 또는 전부를 선택하고, (2) 모니터링 데이터를 보낼 백엔드를 선택하기만 하면 됩니다.

   2022년 5월, 우리는 eBPF를 기반으로 하는 Go 애플리케이션용 자동 계측기라는 첫 번째 오픈소스 프로젝트를 릴리스했습니다. 이후, 이 프로젝트를 OpenTelemetry 커뮤니티에 기부했으며 현재 Go Automatic Instrumentation SIG의 일부로 개발되고 있습니다.

   우리는 개방형 표준을 굳게 믿고 있으므로 Odigos에서 사용하는 계측 및 수집기는 모두 OpenTelemetry 커뮤니티에서 개발한 오픈소스 프로젝트를 기반으로 합니다. 이를 통해 특정 벤더에 구애받지 않을 수 있습니다.

   현재 우리는 오픈소스 프로젝트를 구축하는 데 집중하고 있습니다. 아직 책정된 가격이나 유료 기능은 없지만 향후 엔터프라이즈 기능을 포함하는 Odigos의 관리형 버전도 제공할 계획입니다.

   더 자세한 정보는 아래에서 확인 가능합니다.
     * 문서: https://docs.odigos.io
     * 비디오(시연): https://www.youtube.com/watch?v=9d36AmVtuGU
     * 홈페이지: https://odigos.io

   분산 애플리케이션 추적 및 모니터링에 대한 여러분의 경험과 다양한 이야기를 듣고 함께 공유하고 싶습니다!

   안녕하세요, 이곳에 글을 올리는 것은 이번이 처음입니다. 우리는 커뮤니티로부터 피드백을 받고 싶습니다. Slack 채널에 자유롭게 참여하세요.
   https://join.slack.com/t/odigos/…
   감사합니다!
"
"https://news.hada.io/topic?id=10399","우리는 어떻게 물을 절약할 수 있을까: Imperial County에서 알팔파 재배 중단","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           우리는 어떻게 물을 절약할 수 있을까: Imperial County에서 알팔파 재배 중단

     * 기사는 캘리포니아의 물 위기를 논의하고 해결책을 제안: 임페리얼 카운티에서 알팔파 재배 중단.
     * 알팔파 재배는 캘리포니아에서 가장 많은 물을 소비하는 활동으로, 대규모 농업 기업들이 이로부터 이익을 얻고 있다.
     * 이러한 기업들은 연간 10에서 12번 알팔파를 재배하여 톤당 260달러에 판매하고, 캘리포니아에서 700만 톤의 알팔파를 판매하여 연간 18억 달러를 벌어들인다.
     * 주정부는 매년 340만 에이커 피트의 물을 이들 기업에게 판매하여 이 사업을 유리하게 만드는데, 이때 물의 가격은 에이커 피트당 35에서 60달러이며, 주거용 물 비용은 훨씬 더 높다.
     * 기사는 물 비용의 불균형을 강조하며, 주거용 사용자들이 에이커 피트당 800달러를 지불하고 있으며, 이 가격은 다음 10년 안에 두 배로 늘어날 수 있다.
     * 알팔파 농부들에게 판매된 물은 4000만 명의 사람들의 필요를 충족시킬 수 있다.
     * 기사는 또한 아리조나에서 비슷한 문제를 언급하며, 사우디아라비아 기업들이 중동으로 수출하기 위해 알팔파를 재배하는 데 지하수를 추출하고 있으며, 이 한정된 자원을 보충할 계획이 없다.
     * 캘리포니아에서 재배된 알팔파의 70%는 일본과 중국으로 수출되어 농장 동물에게 먹이로 사용된다. 이는 이러한 국가들이 자체적으로 알팔파를 재배하기에 충분한 물이 부족하기 때문이다.
     * 저자는 물이 부족한 지역인 캘리포니아 사막에서 물을 많이 필요로 하는 작물인 알팔파를 재배하는 논리에 의문을 제기한다.
     * 기사는 독자들에게 물의 가치와 농업에서 더 나은 물 관리의 필요성을 고려하도록 촉구하며 마무리된다.

        Hacker News 의견

     * 미국 서부의 물 가격 책정 문제에 대한 기사, 중국, 일본, 사우디아라비아 등의 목장주들이 저렴한 가격으로 물을 구매할 수 있게 한다.
     * 물 가격 문제는 특히 캘리포니아에서 심각하며, 주민들은 물을 절약하도록 강요받는 반면, 농업에서는 대량의 물이 낭비되고 있다.
     * 기사는 콜로라도의 ""사용하지 않으면 잃게 된다""는 물 권리 정책을 강조하며, 이로 인해 물 낭비와 과도한 알팔파 재배가 이루어지고 있다.
     * 일부 댓글에서는 소비자들이 사용하는 물의 비용에는 그것을 전달하는 인프라가 포함되어 있지만, 농업용 물에는 그렇지 않다는 점을 지적한다.
     * 물의 가격이 그 희소성을 반영하고, 공공 자원을 저렴하게 이용하는 사유 이익을 방지해야 한다는 요구가 있다.
     * 병물 회사들이 저렴한 물 자원에서 이익을 취하는 문제도 제기되었다.
     * 기사는 알팔파를 재배하는 데 사용되는 물의 일부만이 실제로 수확된 식물에 도달하며, 대부분은 증발산에 손실된다고 지적한다.
     * 일부 댓글에서는 고기 소비를 줄이고 채식주의 또는 비건 식단을 채택함으로써 물, 에너지를 절약하고 탄소 배출을 줄일 수 있을 것이라고 제안한다.
     * 기사는 또한 사막에서 알팔파를 재배하는 도전과 아리조나의 물 권리 분쟁에 대해 논의하는 팟캐스트를 언급한다.
     * 마지막으로, 기사는 알팔파와 소고기 산업이 캘리포니아의 물 문제에 대한 책임을 아몬드 재배자에게 전가하는 것을 비판한다.
"
"https://news.hada.io/topic?id=10363","SimpleX - 사용자 ID가 없는 최초의 메신저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      SimpleX - 사용자 ID가 없는 최초의 메신저

     * 사용자 ID도, 랜덤 넘버도 아님
     * 모든 커넥션당 별도로 만들어지는 익명의 쌍으로 된 임시 식별자를 사용. 장기 식별자는 사용하지 않음
     * 메시지를 주고 받을 서버들을 지정할 수 있어서, 모든 대화는 2개의 다른 서버를 이용함
     * 사용자의 메타데이터를 어플리케이션 레벨에서 부터 쓰지 않게 설계됨
          + 프라이버시를 더욱 향상시키고 IP주소를 보호하기 위해서 Tor를 통해서 메시징 서버에 연결도 가능
     * 클라이언트 디바이스만 사용자 프로필,연락처,그룹을 저장하며, 전송되는 메시지들은 2계층 E2E 암호화

   텔레그램과 동일한 보안이슈가 있는것 같은데... 아닌가?
"
"https://news.hada.io/topic?id=10493","미국 내 거의 모든 사람을 대상으로 정보를 노출시킬 수 있는 해커들의 신용평가사 활용 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           미국 내 거의 모든 사람을 대상으로 정보를 노출시킬 수 있는 해커들의 신용평가사 활용 방법

     * 텔레그램 봇이 주소, 전화번호, 이메일 주소, 운전 면허 정보 등 개인 데이터에 접근하여 비트코인으로 15달러에 판매하는 경우가 있음
     * 이 데이터는 Experian, Equifax, TransUnion 등 신용국이 보유한 신용 헤더 정보에서 출처를 찾을 수 있으며, 이후에는 채권 수집업자, 보험 회사, 법 집행 기관 등에게 제공하는 회사에 판매됨
     * 범죄자들이 이 데이터 공급 체인에 접근하는 경우가 있으며, 일부 경우에는 전직 법 집행관의 신원을 도용하여 온라인에서 범죄 동료에게 접근 권한을 판매함
     * 이 도구는 Elon Musk, Joe Rogan, 심지어 Joe Biden 대통령과 같은 고위 대상의 정보를 수집하는 데 사용되었음
     * 이 도구가 광고되는 커뮤니티에는 스와팅, SIM 스와핑, 신체 폭력에 초점을 맞춘 채팅방이 포함되어 있어, 다양한 범죄 활동을 시사함
     * 사용자가 이 데이터 수집에서 탈퇴하는 것은 매우 어렵고, 이 데이터는 개인 정보를 신중하게 배포한 사람들에게도 사용될 수 있음
     * Ron Wyden 상원의원은 이러한 회사들이 개인 정보를 패키지로 판매하는 것을 막기 위해 정부 개입을 촉구하였음
     * 신용국은 신용 카드 신청을 통해 성인 인구 대부분의 개인 정보를 수집하고 저장하며, 이 데이터는 그 후 제3자 회사에 판매됨
     * FTC는 신용 헤더 정보를 소비자의 신용 보고서 일부로 정의하며, 이는 일반적으로 사람의 이름, 생년월일, 현재 및 이전 주소, 사회 보장 번호, 전화 번호를 포함함
     * 신용국과 데이터 브로커는 일반적으로 신용 헤더가 Gramm-Leach-Bliley Act (GLBA)에 해당한다고 믿으며, 이는 그들이 제3자에게 신용 헤더 정보를 판매할 수 있게 해주는 법률임
     * 소비자 금융 보호국 (CFPB)은 신용 헤더 데이터의 규제를 변경할 새로운 규칙을 제안하고 있지만, 이는 수사에서 밝혀진 범죄적 접근이나 남용을 제한하지 못할 수 있음
     * 개인 정보 보호 및 법률 캠페인가들은 해결책이 신용국이 신용 헤더 데이터를 제3자에게 판매하는 것을 중단하는 것이라고 믿음

        Hacker News 의견

     * 기사는 해커들이 미국 개인들의 개인 정보를 획득하는데 이용할 수 있는 신용평가사의 취약성에 대해 논의하고 있다.
     * 한 사용자는 신원 도용을 방지하기 위해 세 가지 주요 기관(Experian, TransUnion, Equifax)에 신용 동결을 설정하는 것을 권장한다.
     * 이 사용자는 또한 이러한 기관들의 신용 동결 페이지로의 링크를 공유한다.
     * 다른 사용자는 부동산 중개인이 재산 소유자의 개인 데이터에 접근할 수 있게 하는 신용평가사를 비판한다.
     * 기사는 해커들이 개인 데이터를 획득하기 위해 Telegram의 독싱 서비스에 소액의 비용을 지불하며, TransUnion의 TLOxp가 인기 있는 선택이라고 밝힌다.
     * 한 사용자는 TransUnion이 자신의 전체 신용 보고서를 해커들에게 넘겼다고 주장하며, 이는 회사가 남용의 경우에는 법 집행 기관과 협력한다는 성명과 상충한다.
     * 한 사용자는 개인 신원과 인증이 공개되고 변경 불가능한 정보(사회 보장 번호, 운전 면허 번호 등)에 기반을 두어서는 안 된다고 제안한다. 대신, 적절한 디지털 ID, 인증 및 분쟁 해결 메커니즘을 제안한다.
     * 사용자들은 전화하는 사람에게 개인 정보를 공유하지 않도록 경고받는다, 심지어 그들이 이미 많은 개인 데이터를 가지고 있는 것처럼 보일지라도.
     * 한 사용자는 신용평가사가 데이터를 범죄자에게 판매하며, 이를 ""서비스 제공""이라고 부르는 것을 비판한다.
     * 다른 사용자는 더 많은 분류되지 않은 데이터가 사용 가능해짐에 따라 상황이 악화될 것이라고 예측한다.
     * 기사는 또한 개인 정보를 합법적으로 획득할 수 있으며, 이를 비용을 지불하고 제공하는 수많은 온라인 서비스가 있다고 언급한다.
     * 한 사용자는 개인의 명시적인 허락 없이 운영되는 신용 시스템의 폐지와 개인 정보 보호 권리 선언을 촉구한다.
"
"https://news.hada.io/topic?id=10483","리벨리온, Next 삼성을 꿈꾸다? 기업분석 (上)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      리벨리온, Next 삼성을 꿈꾸다? 기업분석 (上)

   AI는 제공받은 데이터로 매개변수를 조작하는 학습, 만들어진 매개변수를 토대로 문제를 푸는 추론이라는 두 단계로 작동한다. 그동안 AI는 연구자 사이에서만 운용되는 정도였지만 ChatGPT의 도래로 이제 일반인들도 AI에 익숙해진 실정이다.

   이 AI의 성능에는 GPU, NPU같은 하드웨어가 막대한 영향을 끼친다. 이런 하드웨어를 만드는 회사 중에서 NVIDIA가 (특히 학습 면에서) 압도적인 지분을 차지하고 있다. 반면 추론 쪽은 학습보다 난이도가 낮아 NVIDIA에 대항하는 회사가 속속 들어서고 있다. 이 속에서 리벨리온이 도전장을 내밀었다.

   인재를 중요시하는 동사는 AI 관련 석/박사 학위를 가진 4명의 이사가 세웠다. 처음엔 금융 회사가 필요한 칩을 설계했고, 후에 범위를 넓혀 AI 추론 칩을 설계하기까지 했다.

   동사가 만든 제품은 다음과 같다.

   금융업에 특화된 ION은 동사의 첫 제품으로, 칩 설계를 경험한 박성현 대표와 오진욱 CTO가 있기에 가능했다. 정수형과 실수형을 동시에 다룰 수 있고, ISA를 마음대로 조작, 딥러닝과 관련된 다양한 알고리즘을 지원한다. 또한, 전성비(TOPS/Watt)가 높고, 초저지연(Ultra Low Latency, ULL) 서버를 구축할 수 있다고 한다.

   다음으로 출시한 ATOM은 AI 추론을 위해 설계된 칩이다. 더 빠른 추론을 위해 ION에 없었던 메모리, 칩 내부의 코어 간 소통(network on chip, NoC) 기능을 추가했다. 이 덕분에 MLPerf의 BERT 모델 성능에서 Qualcomm보다 큰 우위를 차지했다.

   동사는 하드웨어 뿐 아니라 AI 칩을 위한 컴파일러도 만들었다. 오픈 소스인 Apache TVM을 기반으로 했고, 클라우드 환경을 고려한 기능도 포함시켰다.

   동사는 대규모의 데이터 센터 업체를 고객으로 설정한 듯 하다. 제약이 큰 노트북, 스마트폰과 달리 데이터 센터는 어떠한 워크로드라도 수용할 수 있으며, 손쉽게 시스템을 커스터마이징할 수 있다. 게다가 데이터 센터, AI 추론에 관한 시장이 커지고 있으니 동사가 이를 더더욱 노려야 할 것이다.

   아직 ION에 대한 계약 소식은 없으나 ATOM은 2023년부터 KT에 꾸준히 공급되고 있다. 게다가 카카오나 정부에서 어마어마한 투자를 받았으니 앞으로도 더 큰 발전이 있을 거라 느낀다.
"
"https://news.hada.io/topic?id=10450","Fooocus - SD 와 Midjourney에서 배운, 더 쉽고 편한 이미지 생성 소프트웨어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Fooocus - SD 와 Midjourney에서 배운, 더 쉽고 편한 이미지 생성 소프트웨어

     * 내부에서 최적화 및 이미지 품질 향상을 처리하여 사용자는 복잡한 파라미터 없이 이미지 생성에만 집중 가능
     * 설치도 간소화. 다운받고 이미지 생성하기까지 3번의 클릭이면 끝(처음 실행하면 자동으로 모델들 다운로드)
     * 최소 GPU 메모리 권장량은 4GB(NVidia)
     * 현재 Windows/Colab/Linux 지원. 맥과 AMD GPU는 지원 예정
"
"https://news.hada.io/topic?id=10473","데이터셋 클라우드에 오신 것을 환영합니다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         데이터셋 클라우드에 오신 것을 환영합니다

     * Datasette Cloud는 Datasette 오픈 소스 프로젝트를 위한 새로운 소프트웨어 서비스(SaaS) 호스팅 플랫폼입니다.
     * 이 플랫폼은 팀이 개인 협업 공간을 생성하고, 데이터를 업로드, 공유, 선택적으로 안전하게 게시할 수 있게 합니다.
     * 처음에는 뉴스룸을 위해 설계된 Datasette Cloud는 기자들이 자신의 호스팅 제공업체에서 Datasette를 설정하고 실행할 필요 없이 데이터를 공유하도록 돕습니다.
     * Datasette Cloud는 다른 회사와 조직에게도 유용할 것으로 예상되며, 모든 사람이 시도해 볼 수 있습니다.
     * Datasette Cloud의 기능에는 데이터 협업을 위한 개인 공간 생성, 다양한 방법으로 데이터 가져오기, 웹 인터페이스를 통한 인라인 데이터 편집이 포함됩니다.
     * Datasette Cloud의 데이터는 Datasette 웹 인터페이스, 강력한 JSON API, 그리고 GraphQL API를 사용하여 접근할 수 있습니다.
     * 모든 데이터는 Fly 볼륨에 안전하게 저장되며, Litestream을 사용하여 S3에 백업됩니다.
     * 미래의 기능에는 AI 지원 쿼리, 선택한 테이블과 쿼리를 외부 세계에 공개하는 기능, 데이터 주석이 포함됩니다.
     * 가격 상세 정보는 아직 발표되지 않았지만, 사용자가 제품을 구매할 수 있도록 하여 그것의 지속 가능한 미래를 보장하는 것이 목표입니다.
     * 관심 있는 사용자는 Datasette Cloud에 가입하고 Zoom을 통해 데모 세션을 예약하거나 미리보기 접근을 요청할 수 있습니다.

        Hacker News 의견

     * Datasette는 전통적인 공유 방법으로는 너무 큰 데이터셋(100MB-20GB)을 호스팅할 수 있게 해주는 도구입니다.
     * 이는 이메일이나 네트워크 공유로는 크기 제한 때문에 공유할 수 없는 중간 크기의 데이터를 배포하는 문제에 대한 해결책을 제공합니다.
     * Datasette는 사용자가 거의 모든 데이터에 대한 접근 권한을 고객에게 부여하고, 다양한 데이터 포인트를 강조하는 몇 가지 뷰와 데이터 필터링 방법에 대한 간단한 튜토리얼을 제공할 수 있게 합니다.
     * 이 도구는 사용자에게 데이터를 제공함으로써 일상적인 질문에 스스로 답하고 더 복잡한 질문을 할 수 있게 하는 데 찬사를 받았습니다.
     * Datasette는 HackerNews 커뮤니티의 유명한 회원인 Simon Willison의 오픈 프로젝트이며, 이는 그의 수익 창출 프로젝트로 보입니다.
     * 일부 사용자들은 Datasette를 SQL GUI나 SQLite 파일 주변의 래퍼와 비교하며, 이를 통해 파일을 쉽게 게시할 수 있다고 말했습니다.
     * Datasette는 데이터 저널리즘 등 다양한 분야에서 사용되어 왔으며, 이는 클라우드에 CSV를 업로드하는 것으로 발전했습니다.
     * Datasette를 생물정보학에 사용하는 데 관심이 있으며, 이를 통해 과학자들이 데이터셋을 상호 작용적으로 게시할 수 있을 것입니다.
     * 그 많은 용도에도 불구하고 일부 사용자들은 Datasette의 독특한 특징에 의문을 제기하며, 이것이 단지 또 다른 SQL 관리 패널인지 물었습니다.
     * Datasette의 창시자인 Simon Willison은 그의 기술적 능력과 비디오 및 기사를 통해 유익한 내용을 제공함으로써 칭찬을 받았습니다.
"
"https://news.hada.io/topic?id=10478","AI가 잘못 생성한 이미지로 Stable Diffusion XL을 더 똑똑하게 파인튜닝했어요 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          AI가 잘못 생성한 이미지로 Stable Diffusion XL을 더 똑똑하게 파인튜닝했어요

     * 오픈소스로 공개된 Stable Diffusion XL 1.0 (SDXL)은 1024x1024 해상도 이미지 생성을 지원
     * SDXL은 Base 및 Refine 두가지 모델로 제공되는데, Refine 모델이 속도 저하가 없으므로 이걸 사용하는게 좋음
     * Diffusers 파이썬 라이브러리를 이용해 해킹 가능
          + Prompt Weighting 과 Dreambooth LoRA 같은 기능이 가능
     * wrong 네가티브 프롬프트로 LoRA에 잘못된 이미지들을 학습시켜보니 품질이 개선됨

   좋은 아이디어네요.

   LoRA를 역으로 쓴다는 생각은 못해봤네요. 이상한 이미지를 일부러 생성해서 LoRA로 학습시킨 다음, 키워드를 네거티브로 넣는다...

   이건 간단한 아이디어 같은데 예시를 보면 굉장히 효과적인 것 같아서 신기합니다.
"
"https://news.hada.io/topic?id=10426","중국의 부동산 거물 에버그란데, 맨해튼에서 파산 보호 신청","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    중국의 부동산 거물 에버그란데, 맨해튼에서 파산 보호 신청

     * 중국의 부동산 거물, 에버그란데 그룹, 미국 법원에서 Chapter 15 파산 보호 신청
     * 2021년에 채무 불이행을 한 빚진 회사, 3월에 해외 채무 구조조정 프로그램 발표
     * 에버그란데의 신청서, 홍콩, 케이맨 제도, 영국 버진아일랜드에서의 구조조정 절차 언급
     * 회사, 미국 법원에 홍콩과 영국 버진아일랜드의 해외 채무 구조조정에 따른 ""배치 계획 인정"" 요청 예정
     * 에버그란데, 신청이 해외 채무 구조조정의 표준 절차이며 파산 청구와는 관련 없음 주장
     * Chapter 15 파산 보호, 외국 회사의 채권자로부터의 구조조정에 관련된 국제적인 파산 사건에 미국 파산 법원이 개입할 수 있게 함
     * 중국의 부동산 부문, 어려움 겪고 있으며 이 문제가 경제의 다른 부분에 영향을 미칠 수 있음 우려
     * 에버그란데의 계열사인 티안지 홀딩스와 자회사인 Scenery Journey도 맨해튼 파산 법원에서 Chapter 15 보호 신청
     * 에버그란데, 과거 두 해 동안 프로젝트 완료와 공급업체 및 대출자에게 상환하는 데 어려움으로 인해 총 810억 달러의 손실 발표
     * 파산 신청서는 중국 에버그란데 그룹의 ""외국 대표""로 자신을 소개한 Jimmy Fong에 의해 서명됨
     * ""스킴 채권자"" 회의는 에버그란데를 대표하는 미국 법률 회사인 Sidley Austin의 홍콩 사무실에서 수요일에 개최 예정

        Hacker News 의견

     * 중국의 주요 부동산 회사인 에버그란데, 맨해튼에서 파산 보호 신청
     * 중국 정부의 에버그란데와 같은 실패한 부동산 회사 대처 방식, 서방의 구제금융과 차별화, 통제된 방식으로 기본적으로 허용
     * 중국의 주요 대출기관 및 은행들은 국유로, 회사가 채무불이행할 경우 이러한 기관을 통해 정부가 손실을 부담
     * 자산 관리 회사들은 실패한 회사의 남은 가치 있는 자산에 대해 입찰할 수 있음
     * 에버그란데에 대한 비판자들은 자동차 사업 등 의심스러운 사업을 통해 해외 기관으로 돈을 빼돌릴 수 있는 가능성을 지적
     * 중국 정부는 이러한 의심스러운 금융 조작에 연루된 개인들에게 출국 금지를 시행하고 엄격한 감독을 하고 있음
     * 에버그란데는 국가 지도 하에 '좀비' 회사로 계속 운영, 가능한 한 많은 부채와 의무를 해결하려고 함
     * 중국의 부동산 부문은 건설량이 역대급으로 증가함에 따라 최소한 10년 동안 우려의 대상이었음
     * 국가 재정과 국가 지원 은행의 혼합은 중국 시스템의 주요 특성으로, 금융적 고통의 재분배를 허용
     * 중국에는 현재 채무 상환 불능인 다른 부동산 거물들과 ""신탁"" 회사들이 많이 있음
     * 중앙은행은 이러한 회사들을 구제할 수 있지만, 이는 중산층과 하위 계층의 자산을 희생하는 것이 될 수 있음
     * 에버그란데의 파산은 중국의 다른 과다 차입 회사들에 도미노 효과를 미칠 수 있음
     * 이 상황은 누가 채무를 보유하고 있고, 어떤 다른 회사들이 같은 방식으로 과다 차입하고 있으며, 중국 정부가 어떻게 비난을 피할 것인지 등 여러 가지 질문을 제기
     * 미국의 파산법은 홍콩과 케이맨 제도에서 진행 중인 파산 절차에 개입할 수 있음
     * 채무와 채무 보유자를 확인하기 위한 필요한 심사는 불안정한 관계를 드러낼 수 있으며, 이는 중국에서 정보 수집을 위한 낚시 작전으로 간주될 수 있음
     * 에버그란데의 파산 신청은 오랜 과정이었으며, 회사의 잠재적인 추락에 대한 논의는 2년 전부터 시작됨
     * 이 상황은 시장에서 즉각적인 반응을 이끌어냈으며, 홍콩에서 가장 부유한 사람인 리카싱이 그의 최신 건물 판매에 대해 즉각 30% 할인을 제공, 즉시 매진되며 22배 초과 예약 발생
     * 에버그란데의 파산은 인구 감소와 주로 일반화된 상품을 판매하는 상황에서 부동산 가격 상승의 지속 가능성에 대한 질문을 제기
"
"https://news.hada.io/topic?id=10432","FBI가 다시 한번 Section 702를 믿을 수 없음을 증명","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  FBI가 다시 한번 Section 702를 믿을 수 없음을 증명

     * 2008년 외국 정보 감시 개정법 Section 702에 대한 FBI의 오용에 대한 기사
     * FBI가 수집된 정보에 대한 제한된 접근을 넘어섰음, 자체 규칙 및 법률을 위반
     * FBI가 자체 검색 기준을 충족하지 않고 주 상원의원 및 미국 상원의원의 통신을 검색
     * 글로벌화된 세계에서의 사생활 문제 강조, 미국 시민들이 다른 국가의 사람들과 정기적으로 의사소통하며, FBI가 접근할 수 있는 디지털 통신의 대규모 풀 생성
     * FBI의 반복적인 위반에도 불구하고 FBI와 바이든 행정부는 702 데이터에 대한 FBI의 영장 없는 검색을 계속 유지하려고 함
     * Section 702는 2023년 12월에 만료 예정이며, 이 섹션에 대한 극적인 변경 또는 종료를 지지하는 양당 지지가 있음
     * 개인 정보 보호 및 시민 자유 감독 위원회(PCLOB)는 미국인의 사생활 권리를 보호하기 위해 감시 프로그램에 최소한의 변경이 이루어져야 함을 제안
     * 전자 프론티어 재단(EFF)은 Section 702의 종료와 디지털 통신 사생활 보호를 우선시하는 미래 프로그램을 주장
     * EFF는 Section 702를 갱신하는 모든 법안이 미국 통신에 대한 정부의 영장 없는 접근을 차단하고, 데이터 수집을 최소화하며, 투명성을 높이도록 촉구
     * 기사는 FBI의 반복적인 위반은 데이터 접근을 신뢰할 수 없음을 증명하고, 통신의 사생활을 보호하기 위해 Section 702를 극적으로 변경하거나 제거해야 함을 결론

        Hacker News 의견

     * FBI, 주 상원의원 및 미국 상원의원의 통신 내용에 대해 4차례의 조회를 수행한 것으로 밝혀져, 이전의 미국 법 위반 후 시행된 종이 개혁에도 불구하고.
     * FBI의 섹션 702 준수에 대한 진전의 상당 부분은 검색 포털에서 702를 ""off""로 기본 설정하는 ""종이 개혁""에서 비롯되었습니다.
     * 2021년 6월, FBI는 미축소 섹션 702 정보를 저장하는 시스템의 기본 설정을 변경하여 FBI 직원이 해당 정보를 조회하려면 명시적으로 ""참여""해야 합니다.
     * DHS 부관리인 Josh Geltzer는 이러한 변화만으로도 FBI 702 검색의 비준수 횟수가 크게 줄어들었을 것이라고 제안합니다.
     * 섹션 702는 올해 말에 만료되지만, 바이든 행정부는 이를 갱신하려는 의도를 표명했습니다.
     * 일부 댓글은 FBI의 데이터 수집 관행의 합법성을 의문시하며, 문제는 그들이 데이터에 접근하는 데 적절한 절차를 따랐는지 여부뿐만 아니라 처음에 어떻게 데이터를 획득했는지에 대한 것이라고 제안합니다.
     * 다른 사람들은 개인 정보 보호 권의 침식에 대해 우려를 표현하며, FBI와 NSA와 같은 기관들이 수십 년 동안 미국인들을 감시해 왔다고 주장합니다.
     * 일부 댓글러는 법을 위반하는 것은 형사 기소를 초래해야 하며, 섹션 702는 9/11 이후 잃어버린 일부 자유를 회복하기 위해 만료되어야 한다고 제안합니다.
     * 그들이 넓은 신뢰를 받을 만하지 않다는 증거를 고려할 때, FBI를 포함한 경찰력에 대한 강력한 감독과 명확한 책임을 요구하는 요청이 있습니다.
"
"https://news.hada.io/topic?id=10490","Notion-Avatar - 노션 스타일의 아바타 만들기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Notion-Avatar - 노션 스타일의 아바타 만들기

     * 얼굴, 코, 입, 눈, 눈썹, 안경, 머리, 악세사리, 디테일, 수염 선택 가능
     * 배경색 지정 및 좌우 플립 가능
     * PNG/SVG로 생성. 코드로 Embed 하거나, 다운로드 가능
     * 오픈소스로 공개되어 있으며, 이미지 애셋들은 CC0 라이센스(퍼블릭 도메인, 저작권 없음)

   사진을 보내면 노션 스타일 아바타를 그려주는 프리랜서도 많더군요.
   아예 사진에서 이 스타일 아바타를 생성해주는 서비스가 있으면 좋겠습니다.
"
"https://news.hada.io/topic?id=10491","Microsoft, Excel에 Python 도입 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Microsoft, Excel에 Python 도입 예정

     * Microsoft, 인기 프로그래밍 언어인 Python을 Excel에 통합.
     * 통합을 통해 Excel 사용자들이 Python 플롯 및 라이브러리를 사용하여 데이터를 조작하고 분석하고, Excel의 공식, 차트, 피벗테이블을 사용하여 통찰력을 세밀하게 조정 가능.
     * Python 통합은 Excel의 내장 커넥터와 Power Query의 일부로, 추가 소프트웨어나 애드온 설치 필요 없음.
     * Microsoft는 새로운 PY function을 도입하여 Python 데이터를 Excel 스프레드시트 그리드에 노출.
     * 회사는 엔터프라이즈 Python 저장소인 Anaconda와 파트너십을 맺어 pandas, statsmodels, Matplotlib과 같은 인기 있는 Python 라이브러리를 Excel에서 사용 가능하게 함.
     * Python 계산은 Microsoft Cloud에서 실행되며, 결과는 Excel 워크시트로 반환됨.
     * Excel 사용자들은 Python 데이터를 기반으로 공식, 피벗테이블, 차트를 생성하고, Matplotlib 및 Seaborn과 같은 차트 라이브러리를 사용하여 고급 시각화를 수행할 수 있음.
     * Python의 창시자이자 Microsoft의 공신인 Guido van Rossum은 이 통합에 대해 흥분을 표현하며, Python과 Excel 커뮤니티 모두 이 협업에서 새로운 용도를 찾을 것으로 기대함.
     * Python in Excel 기능은 Microsoft 365 Insiders의 베타 채널에서 공개 미리보기로 출시되며, 초기에는 Windows로 제한됨.
     * 이 기능은 미리보기 동안 Microsoft 365 구독에 포함되지만, 미리보기가 끝난 후에는 유료 라이선스 없이는 일부 기능이 제한될 것임.

        Hacker News 의견

     * Microsoft, Python을 Excel에 통합, 감정이 엇갈리는 반응
     * 통합은 처음에는 Excel에서 JavaScript 사용자 정의 함수를 가능하게 하는 프로젝트의 결과
     * Python 통합으로 Excel 함수 비동기 계산 가능, 사용자가 계산이 실행되는 동안 다른 부분 작업 가능
     * 일부 사용자는 Python 계산이 Microsoft의 Cloud에서만 실행되어 공급업체에 종속되고 향후 워크북 접근에 문제가 생길 수 있다는 우려
     * 다른 일부는 Cloud 기반 접근 방식을 긍정적으로 보며, Firecracker VMs에서 Python 코드를 실행하여 로컬 PC보다 더 나은 격리를 제공한다고 주장
     * 현재 이 기능은 Windows에서 베타 채널을 실행하는 사용자에게만 제공, 나중에 다른 플랫폼에도 출시할 계획
     * Python을 Excel에 통합하는 것은 소프트웨어의 중요한 현대화로, 특정 유형의 웹사이트가 필요 없게 될 수 있음
     * 일부 사용자는 LibreOffice와 같은 다른 소프트웨어에서도 비슷한 Python 통합을 원한다고 표현
"
"https://news.hada.io/topic?id=10370","SunSpider에서 Firefox가 드디어 Google Chrome을 앞섬","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               SunSpider에서 Firefox가 드디어 Google Chrome을 앞섬

     * Mozilla Firefox가 SunSpider JavaScript 벤치마크에서 Google Chrome을 능가하게 되었는데, 이는 Mozilla 팀에게 중요한 성과
     * SunSpider JavaScript 벤치마크는 웹 브라우저에서 JavaScript 실행 속도를 측정하는 10년 된 테스트
     * 성능 데이터는 브라우저 성능을 추적하는 AreWeFastYet.com 웹사이트에서 제공됨
     * 이런 승리에도 불구하고, Google Chrome은 더 새롭고 더욱 요구사항이 많은 JetStream 2.0 벤치마크에서 여전히 선두를 유지하고 있음
     * 지난 한 달 동안, Firefox는 SunSpider 벤치마크에서의 성능을 향상시키는 것뿐만 아니라 HTTP/2 업로드 속도와 다른 개선 사항에서도 발전을 이루었음
     * Firefox의 최신 발전 사항은 최근 이러한 성과를 강조한 새로운 이슈를 발행한 Firefox Nightly News를 통해 알 수 있음

        Hacker News 의견

     * 전직 V8 엔지니어, JavaScript 성능에 대한 오해를 불러일으키는 벤치마크로 SunSpider를 비판하며, 이로 인해 JavaScript 엔진에서 불필요한 복잡성이 생겼다고 주장.
     * 같은 엔지니어, SunSpider 벤치마크에 대한 비판에도 불구하고 Firefox의 성능 향상을 중요하게 인정.
     * 한 사용자, Firefox의 성능에 만족을 표현하며 AdNauseam, Consent-O-Matic, Firefox Multi-Account containers, 그리고 ""I don't care about cookies"" 등의 플러그인을 추천.
     * 다른 사용자, Firefox가 SunSpider 벤치마크에서 Chrome을 능가하지만, 더욱 요구사항이 높은 JetStream 2.0 벤치마크에서는 Chrome이 여전히 우세하다고 지적.
     * 한 개발자, Chrome 확장 기능을 Firefox에서 실행하도록 적응시킨 경험을 공유하며, 두 브라우저 간의 기능 동등성을 달성.
     * SunSpider가 2013년 이후로 업데이트되지 않았으며, JetStream이 현대 JavaScript 작업에 더욱 대표적이라는 점이 지적됨.
     * 한 사용자, V8 엔진을 사용하면서 예상치 못한 느려짐과 비최적화를 비판.
     * 한 사용자, Chrome의 우수한 디버깅 도구와 더 효율적인 탭 UI 때문에 Firefox보다 Chrome을 선호한다고 표현.
     * 한 사용자, 최신 Speedometer 3.0 벤치마크의 테스트 결과를 공유하며, Firefox Nightly가 Safari TP와 Chrome Canary를 능가하는 것을 보여줌.
     * 다른 사용자, Firefox의 성능 추적 도구를 칭찬하며, Firefox의 성능에 관심 있는 사람들에게 그들의 블로그를 추천.
     * 한 사용자, SunSpider 점수를 자랑하는 것을 Myspace 팔로워를 자랑하는 것에 비교하며, 이러한 벤치마크 테스트의 실제 성능에 대한 관련성을 의문시함.
"
"https://news.hada.io/topic?id=10457","'물리학을 배우고 싶다면물리학을 배우고 싶다면 (2021)'

     * 이 기사는 학부와 대학원 수준 모두를 대상으로 한 물리학 자기학습을 위한 종합 가이드 역할을 한다.
     * 이 가이드는 60만 명 이상의 사람들에게 활용되었으며, 그 중 많은 사람들이 물리학 학사 학위를 성공적으로 취득하였다.
     * 지식 공유의 힘과 전통적인 대학 환경 외에서 물리학을 이해하는 데 대한 관심이 증가하고 있음을 강조한다.
     * 이 가이드는 사용자의 피드백과 인기 요청에 따라 업데이트되었으며, 최신 교과서 판본, 더 많은 학부 선택 과목, 그리고 대학원 수준 선택 과목에 대한 새로운 섹션을 포함한다.
     * 이 가이드는 각 주제에 대한 주제 목록, 권장 교과서, 그리고 필요한 수학을 특징으로 하는 학부와 대학원 섹션으로 구성되어 있다.
     * 학부 섹션은 역학, 정전기, 파동과 진동, 현대 물리학, 고전 역학, 전자 역학, 양자 역학, 열역학, 통계 역학 등 다양한 주제를 다룬다.
     * 대학원 섹션은 물리학에서의 수학적 방법, 전자 역학, 양자 역학, 통계 역학, 일반 상대성 이론, 양자 필드 이론, 그리고 다양한 선택 과목을 탐구한다.
     * 가이드는 공부 조언을 제공하며, 물리학 이해를 위한 문제 해결의 중요성을 강조한다.
     * 저자는 독자들이 다른 사람들과 지식을 공유하도록 격려하며, 이로 인해 발생할 수 있는 긍정적인 영향을 강조한다.

        Hacker News 의견

     * 이 기사는 물리학에서 연속체 역학 이해의 중요성에 대해 논의하며, 이는 종종 학부 프로그램에서 간과된다. 이에는 다양한 과학 및 공학 분야에서 사용되는 용어 이해가 포함된다.
     * 이 기사는 문제 해결의 중요성을 강조하며, 이 개념은 다른 분야에도 적용된다. 충분한 어려운 문제를 풀지 않으면 이론을 연결하는 직관이 부족하다는 것을 제안한다.
     * 이 기사는 ""Classical Electrodynamics""라는 책을 언급하며, 이 책은 고전 전자기학의 성서로 간주된다. 이 책은 사랑받기도 하고 이해하기 어렵다고 느끼는 사람들에게는 극단적인 반응을 보인다.
     * 이 기사는 물리학이 경험적 과학이므로 제목이 ""So you want to learn theoretical physics""이어야 한다고 제안한다. 읽기 목록의 모든 섹션이 다양하고 정교한 장치 및 측정 구성에 기반을 두고 있다는 것을 강조한다.
     * 이 기사는 ""The Road to Reality by Roger Penrose""를 이론 물리학에 대한 종합적인 소개로 추천한다.
     * 이 기사는 일반 상대성 이론에 필요한 수학을 돕기 위해 ""eigenchris""라는 사용자가 제작한 YouTube 시리즈를 사용하는 것을 제안한다.
     * 이 기사는 Griffith의 ""Intro to Electrodynamics""를 초보자가 주제를 진정으로 이해하는 데 도움이 될 수 있는 능력을 칭찬한다.
     * 이 기사는 보다 풍부한 경험을 위해 기초 역학 과정과 함께 미적분학을 배우는 것을 제안한다.
     * 이 기사는 좋은 학습 습관과 용기 부족으로 물리학을 추구하지 않은 것에 대한 개인적인 후회 경험을 공유한다.
     * 이 기사는 가이드에는 대학 과정에서 보통 추천하는 책들이 포함되어 있으며, 이를 완전히 이해하는 데는 상당한 시간과 노력이 필요하다고 경고한다. 기본적인 이해를 가진 사람들을 위한 자료로 Landau와 Lifschitz의 책 시리즈를 언급한다.
"
"https://news.hada.io/topic?id=10489","OpenGL 호환되는 첫번째 M1 GPU 드라이버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      OpenGL 호환되는 첫번째 M1 GPU 드라이버

     * M1 및 M2 계열 GPU를 위한 첫 OpenGL® ES 3.1 호환 드라이버 출시, 모든 OpenGL ES 3.1 애플리케이션과 호환 가능
     * 이 드라이버는 M1 및 M2 계열 그래픽 하드웨어를 위한 세계 유일의 OpenGL ES 3.1 호환 구현체로, 정확성을 입증하기 위해 수만 개의 테스트를 통과
     * 호환성을 얻기 위해 ""구현체""는 모든 기능을 검증하는 공식적인 호환성 테스트 스위트를 통과해야 하며, 테스트 결과는 표준 기구인 Khronos에 제출
     * 제조사의 M1 드라이버는 어떤 표준 그래픽 API에도 호환되지 않아, 표준을 사용하는 애플리케이션이 M1/M2에서 작동할 것이라는 보장이 없음 (리눅스를 실행하지 않는 경우)
     * 개발자들은 리눅스 드라이버의 품질과 신뢰성을 보장하기 위해 표준 호환성을 추구하였으며, ""이식성""에 대한 어떤 타협도 없이 명세에 따라 개방형 표준을 구현함으로써 생태계에 본보기를 제시하려고 함
     * OpenGL ES 3.1은 실험적인 OpenGL ES 3.0 및 OpenGL 3.1을 업데이트하며, 일반 계산을 가속화하는 데 일반적으로 사용되는 컴퓨트 쉐이더를 추가
     * ES 3.1은 애플리케이션에서 이미지에 쓸 수 있게 해주며, 이는 일반적으로 유연한 이미지 처리 알고리즘을 가능하게 하는 컴퓨트 쉐이더에서 발생
     * M1은 이미지 원자 명령어를 지원하지 않아, 개발자들은 메모리 내 픽셀의 주소를 계산하고 그 주소에 일반 원자를 수행해야 했음
     * 개발자들은 잘 알려진 ""비트 조작"" 알고리즘을 사용하여 비트를 교차시켜 성능을 향상시켰음
     * 개발자들은 또한 비트를 교차시키는 전용 명령어를 발견하여, 이를 통해 그들의 영리한 벡터화 어셈블리를 한 가지 명령어로 대체할 수 있었음
     * 개발자들은 오픈 드라이버를 지원하는 Khronos와 Software in the Public Interest에 감사의 말을 전함

        Hacker News 의견

     * 첫 번째 M1 GPU 드라이버에 대한 논의, OpenGL, Vulkan 등의 플랫폼 지원이 Apple의 nVidia, Adobe, Autodesk, Microsoft 등과의 OpenUSD 렌더링/애니메이션/CAD/3D-씬 포맷 파트너십으로 인해 개선될 것인지에 대한 추측.
     * Apple이 기존의 OpenGL 및 Vulkan 같은 표준을 준수할 것인지, 아니면 개발자들이 그들의 Metal 표준을 더 지원하도록 밀어붙일 것인지에 대한 논쟁.
     * Asahi와 Alyssa가 역공학 분야에서 뛰어난 업적을 인정받음, Apple이 그들을 고용하려 할 수도 있다는 추측.
     * M1 GPU 드라이버는 주로 게임에 유용하며 딥러닝에는 그다지 도움되지 않음, Mac M1의 가장 매력적인 측면은 상당한 메모리 향상.
     * 이것은 M-시리즈에 대한 첫 번째 준수하는 OpenGL ES 3.1 드라이버로, Apple 및 Non-Apple을 포함한 모든 운영 체제에 대한 것이며, 팀에게 기부를 촉구하는 행동 호소로 이어짐.
     * Rosenzweig의 M 시리즈 그래픽 드라이버에 대한 성과가 강조되며, 그들이 어떻게 독점 컴파일러를 해킹하여 자신들의 지시를 출력했는지에 대한 의문.
     * OpenGL 준수는 간단한 재컴파일이 일부 그래픽 애플리케이션을 Apple Silicon에서 Linux 하에서 고성능으로 사용할 수 있게 만들 것이라는 희망을 제공함.
     * 일부 댓글은 Apple이 표준이나 준수에 대해 관심이 없으며, 사용자를 그들의 생태계 내에 유지하려는 선호도를 비판함.
     * 원래의 게시물은 'Apple'을 언급하지 않고 '제조업체'와 '대기업'을 언급함, 이에 대한 추측의 원인.
     * 이 드라이버들의 개발은 라이브 스트리밍되었으며, 수행된 작업은 매우 칭찬받음.
     * 두 사람의 성과가 최소한의 자금으로 대기업을 이긴 것을 축하하는 동시에, 일부는 Apple이 원래 경쟁에 참여하지 않았다고 주장함.
"
"https://news.hada.io/topic?id=10366","Show HN: 자바스크립트로 사용자 맞춤형 AI 세계 시뮬레이션을 운영하는 AI-town","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Show HN: 자바스크립트로 사용자 맞춤형 AI 세계 시뮬레이션을 운영하는 AI-town

     * AI Town은 AI 캐릭터들이 살고, 대화하고, 사회 활동을 하는 가상의 도시입니다.
     * 이 프로젝트는 ""Generative Agents: Interactive Simulacra of Human Behavior"" 연구 논문에서 영감을 받아 AI town을 구축하고 사용자 정의하는 데 필요한 시작 키트를 제공합니다.
     * 프로젝트의 주요 목표는 간단한 프로젝트에서부터 확장 가능한 멀티플레이어 게임까지 모든 것에 적합한 강력한 기반을 제공하는 플랫폼을 제공하는 것입니다.
     * 백엔드 엔진은 공유 전역 상태, 트랜잭션, 모든 이벤트의 저널을 기본적으로 지원합니다.
     * 두 번째 목표는 대부분의 시뮬레이터가 Python으로 작성되어 있기 때문에 JS/TS 프레임워크를 사용할 수 있게 하는 것입니다.
     * 사용된 스택에는 게임 엔진 및 데이터베이스용 Convex, VectorDB용 Pinecone, Auth용 Clerk, 텍스트 모델용 OpenAI, 배포용 Fly, 픽셀 아트 생성용 Replicate와 Fal.ai가 포함되어 있습니다.
     * 프로젝트는 저장소를 복제하고 패키지를 설치하고 환경 변수를 설정하고 코드를 실행하는 방법에 대한 자세한 지침을 제공합니다.
     * 또한 자신만의 캐릭터와 이야기를 만들고, 스프라이트 시트를 업데이트하고, 배경을 업데이트하는 등 자신만의 시뮬레이션을 사용자 정의하는 방법에 대한 지침도 포함되어 있습니다.
     * 프로젝트 크레딧에는 George Bailey와 hilau로부터의 타일 시트와 원래 POC인 https://github.com/pierpo/phaser3-simple-rpg가 포함되어 있습니다.
     * 창이 유휴 상태일 경우 시뮬레이션은 5분 후에 일시 중지되지만, 페이지를 로드하면 다시 시작됩니다.
     * 프로젝트는 또한 실행, 테스트, 디버그를 위한 다양한 명령어를 제공하며, 앱을 배포하는 방법에 대한 지침도 제공합니다.

        Hacker News 의견

     * 'AI-town' 프로젝트에 대한 기사, 사용자가 자바스크립트를 사용하여 자신만의 맞춤형 AI 세계 시뮬레이션을 실행할 수 있게 함
     * 오픈 소스인 Generative Agents 프로젝트를 참조하고 검토할 것을 권장
     * Lance Martin이 llama.cpp와 ollama.ai를 사용하여 프로젝트와 로컬 모델을 성공적으로 통합, 모든 추론이 로컬에서 발생하므로 비용 효율적이고 긴 시뮬레이션 가능
     * 시뮬레이션 내의 AI 에이전트들이 서로 상호작용 가능, 예를 들어 한 에이전트가 파티를 개최하고 다른 사람들에게 초대장을 보낼 수 있음
     * 이 기술은 각 AI 에이전트가 실제 사용자라는 것을 실제 사용자들에게 설득하려는 탁상형 속임수 게임과 같은 미래의 게임 애플리케이션에 잠재력이 있음
     * 이 기술은 NPC와의 상호작용이 게임 플레이의 핵심 부분인 Animal Crossing과 같은 게임을 만드는 데 사용될 수 있음. AI 캐릭터들은 독특한 개성을 가지고 새로운 대화를 생성할 수 있음
     * 일부 사용자들은 이 프로젝트에 영감을 받아 게임 스튜디오를 시작하고, 그 위에 더 복잡한 전략 게임을 만드는 것에 흥분하고 있음
     * GPT가 대화의 양쪽을 모두 반환하는 경우와 같은 주의해야 할 문제들이 있음
     * AI-town 프로젝트는 통합된 백업 프레임워크를 위해 칭찬받고 있음, 이는 미래의 LLM 프로젝트에 유익할 수 있음
     * 일부 사용자들은 이 프로젝트의 더 발전된 버전에서 살 수 있는 가능성에 대해 추측하고 있음
     * 기사는 a16z에 의한 GitHub 저장소를 언급하고 있음, 이 저장소에는 다양한 흥미로운 프로젝트들이 포함되어 있음
     * 시뮬레이션 환경의 한계 내에서 LLM을 적절하게 유도하는 방법에 대한 우려가 있음
"
"https://news.hada.io/topic?id=10494","나는 룩셈부르크를 걸어서 건넜다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           나는 룩셈부르크를 걸어서 건넜다

     * 저자 맷이 룩셈부르크를 서부에서 동부까지 걸어서 가기로 결정, 직선 거리로 58.1km, 선택한 코스로는 100.3km를 이동
     * 이 여행은 4일 동안 진행되었으며, Lultzhausen, Ettelbruck, Beaufort에서 숙박
     * 룩셈부르크 정부가 운영하는 Geoportail은 상세한 지도와 표시된 코스를 제공하여 맷의 경로 계획에 도움을 줌
     * 맷은 계획을 세우기 위해 QGIS를 사용하고, 오프라인 맵 앱인 Organic Maps를 이용해 하이킹 도중 네비게이션을 함
     * 저자는 현재의 오픈 맵 데이터와 GIS 도구의 상태를 칭찬하며, 이들이 상세하고 정확하며 사용자 친화적이라고 평가
     * 룩셈부르크의 외딴 지역이 없어 맷이 필수품만을 담은 하루짐을 가지고 다닐 수 있었으며, 휴대폰 수신이 끊기지 않음
     * 하이킹 비용은 4일 동안의 식사와 숙박에 대해 약 250유로로, 청소년 호스텔과 호텔에서 숙박
     * 맷의 여행은 농지, 작은 마을, 목재 플랜테이션, 숲, 말 마구간, 과수원, 유제품 농장, 밀, 옥수수, 해바라기, 유채꽃 밭 등 다양한 풍경을 지나감
     * 하이킹은 예상보다 더 도전적이었으며, 저자는 특히 내리막길에서 발걸음에 더 집중하고 속도를 조절하는 법을 배움
     * 도전에도 불구하고 맷은 이 하이킹이 아름다운 경치를 제공하고 마음을 vagabond하게 만드는 멋진 작은 모험이라고 발견

        Hacker News 의견

     * 지난 천년 동안 유럽의 국가와 왕조의 부상과 몰락을 연구하는 룩셈부르크의 역사
     * 룩셈부르크 왕가는 한때 하프스부르크와 중요한 경쟁자였으며, 네 명의 성례 로마 황제를 배출했다.
     * 룩셈부르크 공국은 한때 훨씬 더 크게 확장되었지만, 프랑스, 프로이센, 그리고 벨기에의 창설로 점차 축소되었다.
     * 룩셈부르크는 스페인의 지배를 받았으며, 프랑스 혁명 공화국에 의해 침략당하고, 프랑스에 병합되었다.
     * 나폴레옹의 패배 후, 비엔나 회의는 오래된 국경을 복원하고 군주제를 재시행하려 했으며, 이로 인해 룩셈부르크는 네덜란드 왕의 대공국이 되었다.
     * 룩셈부르크는 1890년에 네덜란드 왕이 남성 계승자 없이 사망하자 독립국가가 되었다.
     * 저자는 룩셈부르크 전체에 대한 상세한 뷰를 제공하는 인터랙티브 Lidar 지도에 링크를 걸었다.
     * 한 댓글 작성자는 도쿄를 걸어 다니는 경험을 공유하며, 그러한 경험에서 얻은 개인적인 통찰력을 강조했다.
     * 다른 댓글 작성자는 룩셈부르크가 처음 생각했던 것보다 크다는 것을 알게 되어 놀랐다.
     * 일부 댓글 작성자들은 룩셈부르크를 방문하거나 여행하는 개인적인 경험을 공유했으며, 한 사람은 심지어 나라 전체를 네 일 동안 걸어서 횡단했다.
     * 유럽을 걸어서 여행한 회고록인 ""A Time of Gifts""라는 책이 비슷한 여행에 관심이 있는 사람들에게 추천되었다.
     * 한 댓글 작성자는 룩셈부르크를 걸어서 횡단하는 것이 ""직선 미션""이라는 도전에서 더 쉬울 수 있다고 제안했다. 이 도전은 한 나라를 가능한 한 직선으로 여행하려는 시도이다.
     * 한 사람이 룩셈부르크를 바비 자전거로 건너는 모습을 담은 YouTube 비디오가 공유되었다.
"
"https://news.hada.io/topic?id=10434","Cruise, 충돌 사고 후 즉시 로보택시 편성을 50% 줄이라는 규제당국의 지시를 받음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Cruise, 충돌 사고 후 즉시 로보택시 편성을 50% 줄이라는 규제당국의 지시를 받음

     * GM의 자율주행차 자회사 Cruise는 소방차와의 충돌 이후 샌프란시스코에서 로보택시 편성을 50% 줄이라는 규제기관의 지시를 받았음
     * 주 자동차 등록국(DMV)은 주에서 자율주행차의 시험 및 배치를 규제하는 기관으로, 운영 축소를 요청
     * DMV는 샌프란시스코에서 Cruise 차량과 관련된 ""최근 우려되는 사건들""을 조사하고 있으며, 조사가 완료될 때까지 낮에는 50대, 밤에는 150대로 운전자 없는 차량의 수를 제한
     * DMV는 공공 안전에 대한 불합리한 위험이 있다고 판단하면 시험 및/또는 배치 허가를 정지하거나 철회할 권한이 있음
     * Cruise는 이 요청에 따르기로 동의하였으며, 회사가 충돌이 어떻게 그리고 왜 발생했는지에 대한 관점을 설명하는 블로그 글을 발행
     * Cruise는 최소 10대의 자율주행차가 정체를 일으키고 교통을 막는 등 일련의 문제에 직면했으며, 이는 그들의 상업적 계획을 좌절시킬 위협이 됨
     * 이러한 문제들은 Cruise가 샌프란시스코에서 상업적 운영을 확장하기 위해 California Public Utilities Commission(CPUC)의 승인을 받은 지 일주일 만에 발생
     * 최근 사건은 Cruise 로보택시와 긴급차량이 충돌하여 승객이 부상을 입은 것에 관련되어 있음
     * 샌프란시스코 시 검찰관은 CPUC에 Cruise와 Waymo의 로보택시 요금 부과 계획을 중단하도록 요청하는 신청서를 제출
"
"https://news.hada.io/topic?id=10470","GNU Parallel을 왜 그동안 몰랐을까? ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GNU Parallel을 왜 그동안 몰랐을까?

     * GNU Parallel은 E2E 테스트를 병렬로 실행하는데 유용
     * 저자가 HTTP를 통한 라이브 서비스에 대해 오랜 시간 동안 실행되는 테스트 세트의 합격/불합격 비율에 대한 통계를 수집하려고 함
     * 처음에는 저자가 bash에서 중첩 루프를 사용하여 테스트를 실행했지만, 각 테스트의 실행 시간이 길어서 이 방법은 느렸음
     * 그 후 GNU Parallel을 사용하여 테스트를 병렬로 실행, 성능과 기능이 적은 코드로 크게 향상됨
     * GNU Parallel에서는 명령이 병렬로 실행되도록 지정되며, 플레이스홀더 ({1}, {2} 등)는 입력 값으로 대체됨
     * 명령에 대한 입력은 ::: 연산자 다음에 지정되며, 가능한 모든 조합으로 명령에 제공됨
     * GNU Parallel은 동시 작업 수를 제한하거나 각 작업의 시작을 지연시키는 등, 동시성을 제어하고 리소스 경합을 피하는 옵션을 제공함
     * 이 도구는 작업 완료 결과를 포함한 CSV 파일을 출력하는 기능도 제공함: 지속 시간, 종료 코드, 캡처된 stdout/stderr 포함
     * 저자는 GNU Parallel의 저자 Ole Tange의 책을 추천함: SSH를 사용하여 다른 호스트에 작업을 분배하거나, 작업 완료 시간을 모니터링하거나, 실패 가능성이 높은 작업을 재시도하거나, 병렬 실행이 중간에 중단된 경우 작업을 재개하거나, CPU 사용률에 기반한 작업 동시성을 제한하는 등의 도구 기능을 더 깊게 탐색하기 위해

        Hacker News 의견

     * GNU Parallel의 유용성과 한계를 지적하며, YSH, Nushell, Fish 등의 대안도 제안
     * 병렬 기능 활용에 대한 현재 컴퓨터의 한계를 주장하는 사용자의 의견, 더 많은 코어와 로컬 콘텐츠 주소 지정 메모리 필요성 제안
     * GNU Parallel을 활용한 긍정적인 경험을 공유하는 여러 사용자들, 테스트 데이터 생성, 데이터 전송, HPC에서의 많은 작업, 간단한 데이터 의존성이 있는 파이프라인 등의 작업
     * GNU Parallel과 xargs, task spooler 등 다른 도구를 비교하는 사용자들, 특정 작업에는 GNU Parallel이 유용하지만 속도 면에서는 느릴 수 있다는 지적
     * GNU Parallel과 관련된 인용 문제에 대해 우려를 표현하는 몇몇 사용자들, 도구를 인용하거나 비용을 지불하라는 저자의 요청
     * GNU Parallel이 큰 시간 절약을 가능하게 한 사용 사례를 공유하는 사용자들, 대량의 jpeg 이미지를 작은 webp 파일로 일괄 압축하는 등
     * CI/CD 파이프라인 작업에 사용할 수 있는 GNU Parallel의 쉘 스크립트 버전을 언급하는 사용자
     * -parallel 매개변수를 가진 PowerShell의 ForEach-Object cmdlets에 대한 경험을 공유하는 사용자, 명령 줄 도구를 사용한 병렬화의 매력 강조
"
"https://news.hada.io/topic?id=10492","숫자가 상식을 대체하지 않는 좋은 측정 문화","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        숫자가 상식을 대체하지 않는 좋은 측정 문화

     * 기술 회사에서 KPI (Key Performance Indicator) 정신병의 유병률에 대한 논의
     * 데이터 수집에 대한 회사들의 집착은 가용성 편향, 최근성 편향, 과신 편향, 그리고 닻박기 편향과 같은 인간의 편향성을 극복하는 방법으로 간주
     * 그러나 KPI는 종종 터널 비전에 시달리며, 측정 가능한 것만 측정하고 상황의 모든 측면을 반드시 측정하지 않음. 이로 인해 조직에서 역행적인 동기 부여가 발생할 수 있음
     * 저자는 KPI를 인간의 직관과 결합하여 사용해야 최적의 의사결정이 이루어질 수 있으며, 직관과 데이터 사이의 균형을 찾아야 한다고 제안
     * KPI가 측정하는 것이 아니라 KPI가 나타내는 것을 이해하는 것의 중요성 강조. 예를 들어, Time To Last Byte (TTLB)는 서버 응답 시간을 측정하지만, 궁극적인 목표는 사용자 경험을 최적화하는 것
     * KPI 최적화는 개념화, 시행착오 학습, 그리고 재정의를 필요로 하는 과정. 단순히 값을 선택하고 사람들에게 그것을 최적화하라고 말하는 것이 아니라, KPI와 제품의 장기적인 유용성 사이의 상관관계를 이해하는 것
     * 저자는 KPI를 직관과 결합하여 사용하고, KPI를 정의하는 것만이 아니라 실제 목표를 염두에 두며, KPI의 신뢰성을 지속적으로 반영하고 필요한 경우 수정하는 것을 권장
     * KPI 정신병에 시달리지 않는 회사에서 일하라는 초대와 함께 기사가 마무리되며, Promaton에서의 공석 링크 제공

        Hacker News 의견

     * 기사는 숫자가 상식을 대체하지 않는 사업에서 좋은 측정 문화의 중요성을 논의한다.
     * 한 댓글러는 대부분의 속도 측정을 폐기하고 간단한 해결책을 선호하는 경험을 공유했다: 매주 금요일마다 각 팀이 그 주에 제공한 내용을 상세히 설명하는 이메일을 전사에 보낸다. 이 접근법은 KPI 대시보드의 양이 아닌 관리진과 이해당사자에게 안도감을 제공했다.
     * 다른 댓글러는 그들의 회사가 분기당 3개의 OKR(목표)을 설정하고, 각각을 3개의 KPI로 측정한다고 언급했다. 그러나 회사의 철학은 매 분기마다 목표의 100%를 달성한다면 충분히 야심적이지 않다는 것이었다. 이로 인해 일부 목표가 포기되고 일부 KPI가 보너스 자격을 얻기 위해 조정되었다.
     * 한 댓글러는 전문 관리자, 특히 미국 MBA 유형들이 자신을 가장 중요한 것으로 보는 경향이 있어, 이것이 사업의 몰락으로 이어질 수 있다고 지적했다. 그들은 관리자 대 근로자 비율이 회사가 쇠퇴에 얼마나 가까운지를 나타낼 수 있다고 제안했다.
     * 다른 댓글러는 인센티브를 전체 목표와 일치시키는 것의 중요성을 강조했다. 그들은 사업체들이 종종 인센티브 이외의 모든 것에 투자하며, 이로 인해 바람직하지 않은 결과를 초래할 수 있다고 제안했다.
     * Goodhart의 법칙이 언급되었다: “측정치가 목표가 되면, 그것은 더 이상 좋은 측정치가 아니다.”
     * 한 댓글러는 KPI 사용을 시간 낭비로 비판하며, 숫자를 조작하는 것이 얼마나 쉬운지와 바람직하지 않은 행동을 어떻게 장려하는지 설명했다.
     * 다른 댓글러는 회사들이 KPI를 모든 것의 일부로 사용하기를 원했다. 그들은 데이터 중심의 접근법이 종종 단기적인 결과에 대한 건강하지 않은 집중을 초래한다고 지적했다.
     * 한 댓글러는 McNamara의 오류를 지나치게 많은 측정에 의존할 수 있는 예로 언급했다. 그들은 또한 W. Edwards Deming의 말을 인용했다: ""측정할 수 없다면 관리할 수 없다고 생각하는 것은 잘못된 것이다 – 비용이 많이 드는 신화.""
     * 한 댓글러는 관리진이나 제품 소유자로부터의 지침 없이 KPI를 설정하라는 요구에 대한 자신의 불만을 표현했다. 그들은 이것이 종종 너무 기술/공학 중심적인 KPI를 초래하고, 아무도 이를 해결하도록 독려받지 않기 때문에 이 문제가 해결되지 않는다고 지적했다.
"
"https://news.hada.io/topic?id=10405","Debian, 30주년 기념","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Debian, 30주년 기념

     * 무료 운영 체제 중 가장 오래되고 큰 Debian이 2023년 8월 16일에 30주년을 맞이합니다.
     * Debian 프로젝트는 고인이 된 Ian Murdock이 처음부터 만들어 운영 지침을 마련하였으며, 인터넷 연결이 없는 사용자를 고려한 것이 포함되어 있습니다.
     * Debian 커뮤니티는 사용자, 기여자, 개발자, 후원자, 그리고 가장 중요하게는 사람들로 구성되어 있습니다. Ian의 비전은 Debian의 작업의 핵심에 여전히 남아 있습니다.
     * Debian은 클러스터 시스템, 데이터센터, 데스크톱 컴퓨터, 임베디드 시스템, IoT 기기, 노트북, 서버, 심지어 우주선 등 다양한 시스템에서 사용됩니다.
     * Debian 프로젝트는 교육용으로 Debian Edu/Skolelinux, 과학 소프트웨어를 위한 Debian Science, 아마추어 라디오 애호가를 위한 Debian Hamradio, 장애인을 위한 Debian-Accessibility, 천문학자를 위한 Debian Astro 등 접근성을 위한 여러 이니셔티브를 지원합니다.
     * Debian은 Google Summer of Code, Outreachy, Open Source Promotion Plan 등의 프로그램을 통해 인턴십을 제공합니다.
     * Debian 프로젝트는 모두 자원봉사자 프로젝트로, 커뮤니티로부터의 막대한 지원, 관심, 기여를 인정합니다.
     * Debian의 30주년 기념 파티는 오스트리아, 벨기에, 볼리비아, 브라질, 불가리아, 체코 공화국, 프랑스, 독일, 인도, 이란, 포르투갈, 세르비아, 남아프리카, 터키 등 여러 국가에서 계획되어 있습니다.
     * Debian 프로젝트는 모든 사람들이 기념일에 참여하고, 자신들만의 DebianDay 2023 이벤트를 개최하도록 초대합니다.

        Hacker News 의견

     * Debian은 거버넌스와 커뮤니티 중심으로 CentOS와 같은 다른 Linux 배포판과 차별화되며 찬사를 받고 있다.
     * Debian이 수년 동안 끊임없는 시스템 업그레이드를 관리하는 능력은 다른 Linux 배포판에서 찾아볼 수 없는 독특한 기능이다.
     * Debian의 사명과 거버넌스 모델에 대한 헌신은 주요한 성과로 간주된다.
     * 사용자들은 Debian 11 XFCE를 일상적으로 사용하는데 만족을 표현하며, 그 안정성과 깔끔한 설치를 칭찬한다.
     * 일부 사용자들은 특정 장치 연결의 어려움과 같은 Debian의 소소한 문제를 경험했지만, 전반적으로 시스템이 신뢰할 수 있다고 평가한다.
     * 오픈 소스의 기업적인 남용에 대한 인식이 커지는 가운데 Debian은 점점 더 중요하게 여겨진다.
     * 사용자들은 Debian의 패키지 형식이 정확하고, 포괄적이며, 쉽게 접근 가능한 문서로 즐거운 놀람을 주었다고 평가한다.
     * Debian은 유지 가능하고, 지속 가능한 시스템을 만드는데 헌신하는 것에 대해 칭찬을 받고 있다.
     * 사용자들은 Debian의 우수한 품질 때문에 다른 Linux 배포판에서 Debian으로 이동하며, 이를 선호하는 배포판으로 언급한다.
     * Debian의 정책 문서는 다른 배포판에서 볼 수 없는 상세한 규약과 요구사항에 대해 인정받고 있다.
     * 장기 사용자들은 지난 20년 동안 Debian의 신뢰성과 지속 가능성에 대해 감사의 표현을 한다.
"
"https://news.hada.io/topic?id=10404","Ask HN: 최근 읽은 흥미로운 책이 있나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Ask HN: 최근 읽은 흥미로운 책이 있나요?

     * HN에 올라온 추천 도서들 정리
     * The Utopians trilogy by Bob Chassell
     * 감정이 서툰 어른들 때문에 아팠던 당신을 위한 책 (Adult Children of Emotionally Immature Parents)
     * 잘난 놈 심리학 (No more Mr. Nice Guy)
     * 더 골 - 당신의 목표는 무엇인가? (The Goal - A Process of Ongoing Improvement)
     * 우리는 왜 잠을 자야 할까 (Why we sleep)
     * 아무것도 하지 않는 법 (How to do nothing)
     * 몰입 (Flow)
     * 학습된 낙관주의 (Learned Optimism)
     * The Most Fun I Never Want To Have Again: A Mid-Life Crisis in Community Banking
     * Risk & Reward: An Inside View of the Property/Casualty Insurance Business
     * Divine Proportions: Rational Trigonometry to Universal Geometry
     * The Dawn of Everything

   오 읽어보고싶은 책들이 많네요. 감사합니다.

        Hacker News 의견

     * 독자가 ""감정적으로 미성숙한 부모의 성인 자녀""를 경계 설정과 정체성 문제에 고민하는 이들에게 추천하며, 과거의 패턴을 인식하는데 도움이 되고 눈을 뜨게 하는 책이라고 평가.
     * ""The Goal""은 물리적 제조에 있어 운영 관리에 대한 통찰력을 제공하므로 추천되며, 독자는 단순히 빠르게 일하는 것보다 프로세스에서 대기 시간과 방해를 줄이는 책의 초점이 더 효과적이라고 발견.
     * ""Why We Sleep""은 독자의 수면 습관을 바꾸는 데 동기를 부여하므로 칭찬받으며, ""How to Do Nothing""은 주의력 경제에 저항하고 기술과의 관계를 재정립하는 탐구를 위해 추천됨.
     * ""Flow""와 ""Learned Optimism""은 심리학적 통찰력을 제공하므로 추천되며, 전자는 플로우 상태를 탐구하고 후자는 낙관주의 수준을 평가하고 향상시키는 도구를 제공.
     * 재산/사고 보험과 지역 은행이라는 겉보기 지루한 산업에 관한 두 권의 책은 이들 경제의 중요한 부분에 대한 명확한 설명으로 추천됨.
     * ""The Dawn of Everything""은 ""Sapiens""에서 제기된 주장을 반박하고 인류의 역사에 대한 다른 관점을 제시하므로 칭찬받음.
     * ""Divine Proportions: Rational Trigonometry to Universal Geometry""는 유리수만을 사용하는 삼각법에 대한 독특한 접근 방식으로 추천됨.
     * Peter Attia와 Bill Gifford의 ""Outlive""는 노년기에 건강을 유지하는 일부로서의 체력에 초점을 맞추므로 추천되며, 독자는 책의 조언에 따라 훈련 방식을 변경.
     * ""Computer Networking: a Top Down approach""는 컴퓨터 네트워크에 대한 지식의 공백을 채우는 데 추천되며, ""The Shadow of the Wind""는 픽션의 걸작으로 칭찬받음.
     * Leonard Susskind의 물리학 강의와 동반하는 책들은 중급 물리학과 수학 지식을 가진 이들에게 추천됨.
     * ""This is how you lose the time war""는 그것의 매력적인 서사로 칭찬받으며, VanderMeer의 ""Annihilation""은 더욱 미지근한 리뷰를 받음.

   의견을 읽으니 좀더 읽고싶은 욕심이 나네요. 번역서들이 있나 모르겠습니다.

   찾아본 녀석중 번역서가 있는 것들입니다.
     * [ ] 서던 리치 시리즈 SF: http://aladin.kr/p/Bo0kn
          + [ ] 영화: https://bit.ly/45dF1zi
     * [ ] 우리는 왜 자야할까?: http://aladin.kr/p/E22Kr
     * [ ] 더 골: http://aladin.kr/p/5Vi7
     * [ ] 바람의 그림자: http://aladin.kr/p/eNVIK
"
"https://news.hada.io/topic?id=10378","소프트웨어 설계를 위한 추상적, 구조적 사고","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        소프트웨어 설계를 위한 추상적, 구조적 사고

   소프트웨어는 어떠한 문제를 해결하기 위해 존재합니다. 그렇기 때문에 개발자는 문제를 이해하고 그것에 맞게 설계하여 구현합니다. 이때 문제를 이해하고 설계하는 데 있어 개발자에게 추상적 사고와 구조적 사고는 큰 무기입니다.

   보통 추상적, 구조적 사고는 난해하거나 두루뭉술하게 설명될 때가 많습니다. 하지만 이러한 사고를 하는 구체적인 방법론은 분명히 존재합니다. 이 발표에서는 개발자가 추상적이고 구조적인 사고를 하는 구체적인 방법과 이러한 사고를 통해 도메인 모델링, 리팩토링, 아키텍처 등 소프트웨어를 설계하는 법을 소개합니다.
     * 개발자가 하는 일은 프로그램을 만드는 것
     * 프로그램을 만드는 이유는 특정 문제를 해결하기 위함이고 문제를 해결하는 이유는 비즈니스를 위한 것
     * 프로그램을 만들 때 네 가지 단계로 이루어져 있음
          + 이해 / 분석 -> 설계 -> 구현 -> 피드백
     * 개발자는 시니어가 될 수록 코드 작성 뿐만 아니라 이 모든 단계에 관여하게됨
     * 시니어는 경험을 기반한 직관을 통해 문제를 빠르게 해결함
     * 하지만 직관은 위험할 수 있음. 따라서 방법론을 익히는 것이 중요
     * 추상적, 구조적 사고가 그러한 방법론의 기초
     * 추상은 요소에서 공통적인 것 혹은 관심있는 것을 추출하는 것
     * 그래서 추상은 사물을 단순화 한다음 재해석하는 것이라 볼 수 있음
     * 요소 환원주의 사고를 통해 단순화하고 재해석 할 수 있음
     * 요소 뿐만 아니라 행동도 추상화가 가능하다.
     * 추상화는 계층이 존재한다.
          + 적절한 추상화 수준을 정해야 한다.
          + 과도한 추상화는 실체를 알 수 없기 때문에 좋지 않다.
     * 구조적 사고는 내용을 겹치지 않고 빈틈없이 정리하는 것
          + MECE 프레임워크와 유사
     * 중요한 것은 무조건 겹치지 않고 빈틈없이 정리되야 한다는 점은 아님
     * 구조화도 추상화처럼 단계가 있습니다. 한 발자국 더 멀리서 보는 것이 가능
     * 추상적이고 구조적인 사고 방식을 하는 구체적인 방법이 존재함
          + 탑다운과 바텀업
          + 모델
               o Classification
               o Abstraction
               o Generalization
          + 프레임워크 사고
     * 소프트웨어 설계에 추상적, 구조적 사고 적용 가능함
     * 소프트웨어 구현 단계를 크게 3가지로 나누면 도메인 모델링, 아키텍처, 코드 작성으로 나눌 수 있음
     * 도메인 모델링은 요구사항을 추상적으로 뽑아내고 점진적으로 확장하는 것이 가능
     * 아키텍처는 일을 하는 방법을 나타냄
          + 어떻게 일하는가, 어떻게 나누는가
     * 아키텍처는 요구사항 -> 컨셉 -> 구현 -> 피드백 프로세스를 따름
     * 추상적인 아키텍처 컨셉을 점진적으로 구체화하는 것이 가능
     * 프로그래밍 패러다임은 소프트웨어의 구성요소를 바라보는 시선
     * 로직은 세가지 측면으로 바라볼 수 있음. Function, Usecase, Aspect
     * 문법 설탕은 추상화된 프로그래밍 문법
          + 독이 될 수도 있음
     * 리팩토링은 패러다임, 코드 크기, 소유권, 중복 여부, 수정 가능성, 의존이라는 6가지 관점으로 볼 수 있음
     * 리팩토링은 세 가지 방법이 존재. 추상화, 구조화, 일반화
     * 추상적이고 구조적인 사고력을 기르기 위해선 다양한 경험을 하는 것이 좋음
     * 도식화를 하는것은 큰 도움이됨
     * 직관은 경험주의적 사고. 시간을 절약할 수 있지만 위험할 수 있음
     * 패턴은 추상적인 사고를 익히는데 도움이 됨
     * 꼭 추상적이고 구조적인 것이 만능은 아님

   발표 자료와 내용 요약 고맙습니다.

   아이디를 보니 발표자 본인이시군요! 인포콘 추첨실패로 못들었는데,, 발표자료 공유해주셔서 감사합니다 :)

   감사합니다. :D 제 자료가 도움이 되었으면 좋겠네요!

   상세한 요약 감사합니다.

   요약이 생각보다 오래걸리더라구요 ^^;; 봐주셔서 감사합니다!

   좋은글과 요약 감사합니다~

   좋게 봐주셔서 감사합니다 :D

   잘 읽었습니다!

   적절한 추숭화 수준을 정해야 한다.
   -> 여기 오타가 있습니다 :)

   확인 감사합니다. :) 그런데 한 번 포스팅하면 수정이 불가능한 것 같네요 ㅠㅠ

   아하 제가 몰랐네요. 확인 감사합니다!
"
"https://news.hada.io/topic?id=10436","주차료는 어떻게 지불하는가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            주차료는 어떻게 지불하는가?

     * 스마트폰 앱을 이용한 시애틀 주차료 결제의 복잡성과 어려움에 대한 기사
     * 앱을 통한 주차료 결제 과정에 익숙하지 않은 노년 여성과 저자의 만남
     * 다양한 주차 앱을 지원하는 주차장, 각각의 앱은 별도의 사용법과 주차장 ID를 가지고 있어 사용자들에게 혼란을 줌
     * 여성이 QR 코드 스캐너를 이용해 주차 앱에 접속하려 시도하나, 광고와 혼란스러운 인터페이스 요소 등의 어려움에 직면
     * 주차 앱은 다양한 권한 요구, 대형 버전 설치, 그리고 쉽게 알 수 없는 주차장의 거리 주소가 필요
     * 저자가 여성에게 다른 주차 앱인 Park Mobile을 설치하는데 도움을 주지만, 결제 옵션 선택과 주차 시간 설정 등의 도전이 계속됨
     * 앱의 사용자 인터페이스가 직관적이지 않아 혼란과 오류를 유발
     * 위치 권한을 여러 번 부여하는 과정이 필요하며, 그 옵션이 불분명
     * 저자는 앱을 통한 주차료 결제의 복잡한 과정에 대한 실망과 불만을 표현

        Hacker News 의견

     * 디지털 시대 주차 비용 지불에 대한 도전과 잠재적 해결책에 대한 기사
     * 일부 댓글러들은 직업 창출, 향상된 고객 서비스, 강화된 보안 등의 이점을 언급하며, 인간이 운영하는 주차 부스로의 복귀를 제안
     * 현대 주차장에서 사기의 가능성에 대한 우려, QR 코드가 사기 결제 페이지 또는 악성 소프트웨어로 연결될 가능성
     * 주차 앱과 같은 부수적인 서비스에 대한 약관 및 조건, 개인정보 보호 정책, 그리고 기타 계약을 수락해야 한다는 요구에 대한 비판
     * 스마트폰과 모바일 데이터 서비스가 필요한 주차 앱 사용의 필요성이 문제가 될 수 있음, 이러한 기술에 접근할 수 없는 사람들을 제외할 수 있음
     * 일부 사용자들은 주차 앱과 관련하여 느린 성능, 지시사항 부족, 사소한 위반에 대한 과도한 벌금 등 부정적인 경험을 보고
     * 댓글러들은 전통적인 주차 결제 스테이션이 왜 대체되었는지 의문을 제기, 일부는 두 가지 옵션 모두 사용 가능해야 한다고 제안
     * 현금과 동전의 사용자 인터페이스는 디지털 대안에 비해 간단하고 신뢰할 수 있다는 점에서 칭찬 받음
     * 한 댓글러는 휴대폰을 소유하지 않는 문제를 강조, 그들이 상황을 어떻게 대처할지 의문을 제기
"
"https://news.hada.io/topic?id=10460","Pixi - Conda 에코시스템을 위한 새 패키지 매니저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Pixi - Conda 에코시스템을 위한 새 패키지 매니저

     * Cargo/Poetry/Yarn 같은 최신 패키지 매니저의 기능을 Conda에 도입
     * 재현 가능한 Isolated 개발 환경을 설정하는 기능을 제공
     * Conda 에코시스템을 기반으로 구축되었으며, 언어에 구애받지 않고, 멀티플랫폼(윈도우 포함)
     * 사용자 친화성과 속도에 중점을 둠
     * Rust 로 작성됨
"
"https://news.hada.io/topic?id=10439","컴파일러에게 놀랍게도 괜찮은 TypeScript","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       컴파일러에게 놀랍게도 괜찮은 TypeScript

     * TypeScript를 이용한 컴파일러 구축에 대한 논의, 그 놀라운 효과성 강조
     * OCaml은 공식 사양이나 취미 언어와 같은 언어 중심의 작업에 사용되었으며, C++는 생산 준비 구현에 선택되었던 역사
     * Rust, ML과 C++의 장점을 결합하고 안전한 멀티스레딩과 같은 자체 기능을 추가한 새로운 추가물
     * 저자는 OCaml의 인식된 낡은 부분 때문에 취미로 작업하는 사람들에게 TypeScript를 실용적인 대안으로 제안
     * Deno로 시작하여 TypeScript에서 작은 타입 체커를 작성하는 방법을 저자가 보여줌, Deno는 TypeScript를 위한 런타임으로 즉시 사용 가능한 경험을 제공
     * TypeScript의 유연하면서도 가벼운 형식 시스템이 강조되며, 저자는 TypeScript에서 Abstract Syntax Tree (AST)를 정의하는 방법을 보여줌
     * 표현식을 정의하고, 런타임 타입 정보를 처리하고, 유사한 표현식을 추상화하는 방법을 TypeScript의 기능을 사용하여 저자가 보여줌
     * 저자는 타입 추론으로 이동하여, TypeScript에서 타입을 정의하고, 타입을 비교하고, 타입을 추론하는 방법을 보여줌
     * 저자는 Deno의 효과적인 개발 워크플로우, TypeScript의 훌륭한 도구, 그리고 런타임과 컴파일 시간 모두에서의 언어의 힘 때문에 TypeScript의 생산성을 칭찬하며 마무리
     * 저자는 미래에 작은 언어 해킹을 위한 도구로서 TypeScript를 사용할 가능성이 높다고 제안
     * TypeScript에서 타입-안전한 방식으로 desugaring을 표현하는 방법을 보여주며 기사를 마무리

        Hacker News 의견

     * TypeScript는 객체 지향과 함수형 프로그래밍의 조합을 칭찬받으며, 클래스를 정의할 필요 없이 유연한 코딩을 가능하게 한다.
     * 언어의 함수가 속성과 메소드를 가질 수 있는 능력이 독특하고 가치 있는 특징으로 강조된다.
     * TypeScript는 OCaml, C#, Swift, Dart, Kotlin 등 다른 언어와 비교되며, TypeScript에서는 실제 패턴 매칭이 부족한 것이 주요 차이점으로 지적된다.
     * 일부 사용자들은 TypeScript가 Rust와 유사한 태그가 달린 열거형 기능을 포함하기를 원한다.
     * TypeScript 컴파일러의 속도에 대한 논의와 컴파일 언어로 작성된 경우 어떻게 작동할지에 대한 추측이 있다.
     * 사용자는 run 유틸리티 함수를 사용하여 IIFE 스타일 스위치로 방문자 패턴을 피하는 것을 제안한다.
     * 게시물에서는 parser generator 프론트엔드인 Ohm-js와 mini-typescript의 사용을 언급하며, TypeScript의 작동 방식을 이해하는 데 도움이 된다.
     * 인터페이스의 인식된 오버헤드에도 불구하고 TypeScript의 효율성에 대한 놀라움이 표현된다.
     * TypeScript 컴파일러가 TypeScript 자체로 작성되었다는 사실이 지적되며, 이는 그것의 신뢰성과 생산에서의 무거운 사용을 강조한다.
     * 일부 사용자들은 TypeScript에서 컴파일 시간 완전성 검사를 위한 닫힌 열거형 기능을 기다리고 있다.
     * TypeScript의 주요 아키텍트인 Anders Hejlsberg의 영향력이 언어의 성공에 대한 이유로 인정된다.
"
"https://news.hada.io/topic?id=10416","JobCorps.Gov: 무료 직업 훈련, 식사, 주거 및 생활 수당 제공","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               JobCorps.Gov: 무료 직업 훈련, 식사, 주거 및 생활 수당 제공

     * 제공된 텍스트는 Amazon CloudFront로부터의 오류 메시지로, 403 오류를 나타냅니다.
     * 이 오류 메시지는 사용자의 국가에서 요청한 서버 또는 웹사이트에 대한 접근이 차단되었음을 제안합니다.
     * 이 차단은 과도한 트래픽 또는 서버의 구성 오류로 인해 발생할 수 있습니다.
     * 메시지는 사용자에게 나중에 다시 시도하거나 앱 또는 웹사이트의 소유자에게 연락하도록 조언합니다.
     * CloudFront를 통해 콘텐츠를 제공하는 사람들에게는, 메시지가 CloudFront 문서에서 문제 해결 및 예방 단계를 찾을 수 있음을 제안합니다.
     * 오류 메시지는 CloudFront에 의해 생성되었으며, 추가 조사를 위한 특정 요청 ID를 포함하고 있습니다.

   링크 요청 시 CloudFront 오류가 발생했나보군요..

        Hacker News 의견

     * JobCorps.Gov은 무료 직업 훈련, 식사, 주거, 생활수당을 제공합니다.
     * 이 프로그램은 많은 사람들에게 유익하였으며, 그렇지 않았다면 얻을 수 없는 새로운 기회를 열어주었습니다.
     * 이 프로그램을 완료하려면 꾸준함과 자기 인식이 필요하며, 대학이나 초급 직장처럼 파티 분위기가 아닙니다.
     * 이 프로그램은 그렇지 않으면 길을 잃을 수 있는 사람들에게 명확하고 일관된 발전의 단계를 제공합니다.
     * 일부 개인들은 Job Corps를 선택한 직업 분야에 진출하지 않았음에도 불구하고 이 프로그램을 통해 성공을 거두었습니다.
     * 일부 사람들은 부모의 소득 때문에 프로그램에 자격을 얻지 못했음에도 불구하고, 그들로부터 재정적 지원을 받지 않았습니다.
     * 이 프로그램은 1960년대에 개발되었으며, 원래 '사회적으로 소외된 청소년들'을 대상으로 하였습니다.
     * 일부 사람들은 Job Corps를 거치고 난 후 훈련을 활용하지 않고, 대신 정부 혜택을 사기치는 것을 선택했습니다.
     * Job Corps는 첫 번째로 자격증을 얻지 못한 청년들에게 두 번째 기회를 제공합니다.
     * 이 프로그램은 교육, 생활 기술, 직업 훈련을 통해 새로운 세대를 사회의 생산적인 구성원으로 준비시킵니다.
     * JobCorps.Gov의 웹사이트는 간단한 CSS 스타일시트와 JS 스크립트로 알려져 있으며, 생성기 이름에 따르면 Drupal을 사용하고 있음을 나타냅니다.
     * 캘리포니아 보존단과 같은 특정 주에서는 비슷한 프로그램이 있습니다.
     * 이 프로그램은 고등학교를 마무리해야 하는 개인들에게 유익하였습니다.
"
"https://news.hada.io/topic?id=10486","Awesome Runbook - 런북 큐레이션 리스트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Awesome Runbook - 런북 큐레이션 리스트

     * awesome-runbook: DevOps 엔지니어와 SRE를 위해 런북 관련 링크를 모아둔 오픈소스 깃헙 레포지토리
     * 런북(Runbook): 문제 해결에 필요한 조치를 정리한 문서
     * 런북 자동화(Runbook automation): 시스템이 실행 가능한 형태로 준비된 런북
     * 레포지토리 내용: 런북 정의, 런북 관련 소프트웨어, 기술 별 런북 및 활용 사례

   리스트 성 글이어서 뉴스 글로 변경하였습니다. Show 소개 글을 참고해주세요.

   이 깃헙 레포지토리는 제가 시작한 프로젝트이고, 긱뉴스 사용자들의 피드백과 참여를 기대하면서 올린 글이기도 합니다. 헌데 제가 형식을 너무 리스트 형태로 작성한 것 같네요. 이 부분 추후 본문 내용을 좀 더 정리해서 Show GN으로 다시 올려도 괜찮을까요?
"
"https://news.hada.io/topic?id=10403","목공 도구의 도움으로 결함이 있는 드라이브에서 1TB 데이터 회수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  목공 도구의 도움으로 결함이 있는 드라이브에서 1TB 데이터 회수

     * 기사는 비정상적인 방법을 사용하여 결함이 있는 Seagate Firecuda 530 드라이브에서 1TB의 데이터를 검색하는 과정을 논의한다.
     * 저자의 게임용 PC는 두 개의 Seagate Firecuda 530 SSD로 장착되어 있었으나, 게임 중간에 멈추고 부팅하지 않아 SSD 중 하나에 결함이 있음을 발견했다.
     * 결함이 있는 SSD가 시원할 때는 작동하다가 뜨거워지면 실패하는 것으로 보아 저자는 온도 관련 문제를 의심했다.
     * 저자는 특정 SSD 칩에 금속 G 클램프와 신용카드 조각을 사용하여 압력을 가하는 독특한 방법을 사용하여 SSD를 작동시켰다.
     * 데이터 검색 과정 중 과열을 방지하기 위해, 저자는 PC의 히트싱크와 목공용 스퀘어, 그리고 열 접착 테이프를 사용했다.
     * 저자는 /Users 디렉토리를 안전하게 보관하기 위해 드라이브에서 복사한 후 'dd' 명령을 사용하여 전체 드라이브를 단일 1TB 파일로 이미지화했다.
     * 데이터 검색 후, 저자는 결함이 있는 칩에 SMD 핫 에어 블로워를 사용했는데, 이것이 놀랍게도 SSD를 고쳐서 추가적인 압력이나 냉각 없이도 작동하게 만들었다.
     * 저자의 전자제품에 대한 경험은 문제를 진단하고 해결하는 데 도움이 되었으며, 하드웨어 문제 해결에 있어 실용적인 지식의 중요성을 보여준다.

        Hacker News 의견

     * 기사에서는 고장난 드라이브에서 데이터를 회수하는 데 사용되는 다양한 비정상적인 방법들, 물리적 조작 및 목공 도구 사용 등을 논의한다.
     * 한 사용자는 벤치 기술자로서의 경험을 회고하며, 고장난 드라이브에서 물리적으로 압박하고 '재시도'를 반복적으로 누름으로써 데이터를 회수할 수 있었다.
     * 또 다른 사용자는 대나무 젓가락을 메인보드와 케이스 사이에 끼워 메인보드를 굽힌 상태로 유지함으로써 불안정한 메인보드를 고친 이야기를 공유한다.
     * 한 사용자는 과열되는 Intel Optane 드라이브와 mSATA 드라이브에서 컨트롤러를 재흐름하는 것이 성공했다고 언급하며, 단락된 콘덴서를 찾지 못했음에도 불구하고.
     * 한 사용자는 작은 팬조차도 충분한 공기 흐름을 만들 수 있으므로, SSD를 작동 중에 쿨링하기 위해 히트싱크 대신 팬을 사용하는 것을 제안한다.
     * 이 기사는 과거에 회전하지 않는 오래된 회전 드라이브에 사용되었던 ""엔지니어의 한 대""에 비유되며, 기술에 능숙한 개인들의 창의성과 자원 능력을 보여준다.
     * 한 사용자는 42C가 NVMe에게 뜨거운 온도인지 의문을 제기하며, 이는 그들의 가정용 드라이브에서 대기 상태의 일반적인 온도라고 말한다. 또한 NVMe 드라이브를 너무 시원하게 유지하면 성능에 부정적인 영향을 미칠 수 있다고 제안한다.
     * 백업의 중요성이 강조되며, 한 사용자는 urbackup를 추천하고 World Backup Day에 대한 링크를 공유한다.
     * ""냉장고 트릭""이 오래된 HDD와 이제는 NVMe 드라이브에서 데이터를 회수하는 성공적인 방법으로 언급된다.
     * 한 사용자는 목공용 클램프와 신용카드 조각을 사용하는 방법을 유머러스하게 묘사하며, 이를 그들이 읽은 ""가장 HN스러운"" 이야기라고 말한다.
     * 한 사용자는 컨트롤러 카드가 작동하지 않는 HDD에서 데이터에 어떻게 접근할 수 있는지에 대한 조언을 구하며, 전문 데이터 복구 서비스에 보내는 것 외에.
"
"https://news.hada.io/topic?id=10458","C/C++로 구현한 Stable Diffusion","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      C/C++로 구현한 Stable Diffusion

     * 순수 C/C++로 구현된 Stable Diffusion, 머신러닝 모델에 대한 기사
     * ggml 기반의 구현, llama.cpp와 유사한 작동 방식
     * 16비트 및 32비트 float, 4비트, 5비트, 8비트 정수 양자화 지원
     * 메모리 효율적이며 CPU 추론에 최적화된 구현, txt2img를 사용하여 512x512 이미지 생성 시 약 2.3GB 필요
     * x86 아키텍처에 대한 AVX, AVX2, AVX512 지원
     * 원본 txt2img 및 img2img 모드, stable-diffusion-webui 스타일 토크나이저 포함 구현
     * 사용된 샘플링 방법은 Euler A
     * Linux, Mac OS, Windows 플랫폼과 호환되는 구현
     * 더 많은 샘플링 방법, GPU 지원, 빠른 추론, 메모리 사용량 감소, LoRA 지원, k-quants 지원, 플랫폼 간 재현성 등의 향후 개선 사항
     * 코드 획득, 가중치 변환, 빌드, 구현 실행 방법에 대한 자세한 지침 제공 기사
     * 다양한 출력 모델 형식 지원 구현, 16비트 부동 소수점, 32비트 부동 소수점, 다양한 정수 양자화 포함
     * txt2img 및 img2img 모드에 대한 구현 사용 예시 제공 기사
     * 사용된 정밀도에 따라 메모리 및 디스크 요구 사항이 달라지지만, 512x512 이미지의 경우 메모리 요구량은 약 2.0G에서 2.8G 사이
     * ggml, stable-diffusion, stable-diffusion-webui, k-diffusion 등 여러 참조를 기반으로 한 구현
"
"https://news.hada.io/topic?id=10374","CSS Selectors 비쥬얼 가이드","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         CSS Selectors 비쥬얼 가이드

     * 일반 CSS 셀렉터부터, Psedo-Class 및 Psedo-Element 들을 이해하기 쉽게 시각적으로 정리
     * Selector: universal / element / class / ID / multiple / descendant / adjacent / child / general sibling
     * comma combinator, lobotomized owl
     * attribute & value
     * link pseudo-class selectors
     * input element(s) : focused / checked / disabled / enabled / valid / invalid / optional
     * child : first / last / nth / backward / only-child
     * type : first-of / last-of / nth-of / backward / only-of
     * target element selector
     * has() parent selector
     * negation pseudo-class
     * pseudo-element: first child / last child / first letter / first line / list marker
     * text input placeholder / style highlighted box
     * 그외: :root / :is() / :where() / :default / :empty / :fullscreen / :in-range / :out-of-range / :indeterminate / :read-only / :read-write / :lang()

   오.. 잘 정리되어 있네요.
   바로 옆자리 신입에게 전달하였습니다. ㅎㅎ

   아래쪽의 각종 툴들도 재미있는게 많네요.
   좋은 자료 감사합니다.
"
"https://news.hada.io/topic?id=10369","SpaceX Falcon Heavy가 NASA의 985백만 달러 Psyche 미션을 발사할 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         SpaceX Falcon Heavy가 NASA의 985백만 달러 Psyche 미션을 발사할 예정

     * NASA의 985백만 달러 규모 Psyche 임무, 10월 초 발사 예정, 전기 추진 구동 궤도선을 16 Psyche 소행성으로 보내는 것
     * 16 Psyche 소행성은 1852년 이탈리아 천문학자에 의해 발견된 것으로, 지름이 225km 이며 2.35~3.9억 마일 떨어진 곳에 위치해 있음
     * 이 행성은 니켈과 철과 같은 금속이 풍부하다고 여겨지며, 추정 가치는 10,000 Quadrillion 달러(천경달러 = 130해垓 원)
     * Psyche 우주선은 플로리다의 케네디 우주 센터에서 SpaceX Falcon Heavy 로켓을 사용하여 발사될 예정
     * 네 개의 Hall-effect 추진기를 갖춘 우주선은 SpaceX가 궤도로 밀어낸 후 소행성을 향해 가속할 것
     * 발사는 원래 8월에 예정되었으나 소프트웨어 문제로 인해 연기되었음
     * 10월에 발사되면, 우주선은 약 6년 후에 소행성에 도착할 것으로 예상됨
     * 우주선은 2026년에 화성 중력 어시스트를 사용하고, 2029년 8월에 Psyche 소행성에 도착할 것으로 예상
     * Psyche 우주선은 거대하며, 10피트 x 8피트의 크기이고, 태양 전지판이 전개되면 81피트 x 24피트의 크기가 됨. 그 질량은 2,608 킬로그램
     * 16-Psyche 소행성은 지구의 중심부와 유사한 금속성 철과 니켈로 구성되어 있어 NASA 천문학자들에게 큰 관심사이며, 우리 태양계 초기의 모습에 대한 통찰을 제공할 수 있음
     * 임무는 또한 고급 레이저 통신 기술인 Deep Space Optical Communications (DSOC)을 테스트하며, 이는 전통적인 라디오 파동에 비해 더 높은 데이터 속도와 효율성을 제공함
     * Psyche 임무의 성공적인 실행은 태양계 형성 초기 단계에 대한 이론을 입증하고, 천체와 그들의 기원에 대한 우리의 이해를 향상시킬 수 있음
"
"https://news.hada.io/topic?id=10409","오늘 배운 것: Windows Task Manager를 이용해 이동 중인 앱을 일시정지할 수 있다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         오늘 배운 것: Windows Task Manager를 이용해 이동 중인 앱을 일시정지할 수 있다

     * 기사는 Windows 작업 관리자를 일시 중지하고 내용이 이동하는 것을 멈추는 간단한 키보드 단축키를 공개: CTRL 키를 누르고 있음.
     * 이 단축키는 Windows 10과 Windows 11, 그리고 아마도 Windows의 이전 버전에서 모두 작동합니다.
     * 이 팁은 Windows 엔지니어링 팀의 Microsoft 직원인 Jen Gentleman이 공유한 것으로, 그녀는 정기적으로 Windows에 대한 유용한 단축키와 팁을 공유합니다.
     * Microsoft는 또한 작업 관리자 없이 앱을 강제 종료하는 옵션을 Windows 11에서 작업하고 있으며, 이는 작업 표시줄에서 마우스 오른쪽 버튼을 클릭하여 접근할 수 있습니다.
     * CTRL 일시 중지 기능은 아직 Windows 11로 업그레이드하지 않은 사람들에게도 유용할 것입니다.
     * 기사는 또한 Windows 11의 Notepad 앱에서 재미있는 기능을 언급합니다: 디지털 피짓 스피너처럼 톱니바퀴를 회전시킬 수 있습니다.
     * Microsoft는 Windows 95에서만 2021년에 발견된 숨겨진 프롬프트와 같이 Windows에 이런 작은 이스터 에그를 숨기는 일에 역사가 있습니다.

        Hacker News 의견

     * 기사에서는 Windows 작업 관리자의 잘 알려지지 않은 기능을 공개하며, 이 기능은 CTRL 키를 눌러 앱의 움직임을 일시 중지할 수 있게 해준다.
     * 사용자들은 이 기능을 더 일찍 발견하지 못한 것에 대해 놀라움과 후회의 감정을 표현했으며, 일부는 20년 이상 앱을 사용하면서 이 기능을 모르고 있었다.
     * 일부 사용자들은 이처럼 유용한 기능의 발견성이 부족하다고 비판하며, 메뉴 드롭다운 옆에 단축키를 표시해 보다 눈에 띄게 해야 한다고 제안했다.
     * 한 사용자는 작업 관리자의 생성과 숨겨진 기능에 대한 비디오 링크를 공유했는데, 이는 앱의 원래 저자가 만든 것이다.
     * 일부 사용자들은 키보드 고장이나 CPU 사용량으로 앱을 정렬하려고 할 때 실수로 이 기능을 발견했다.
     * Microsoft에게는 재생/일시 중지 버튼을 추가하고 탐색기에서 마우스 오른쪽 버튼을 클릭하는 등의 문제를 해결하여 사용자 인터페이스를 개선할 것을 제안하고 있다.
     * 한 사용자는 Unix 기반 프로세스 뷰어인 htop에서 Shift+Z를 눌러 활성화되는 동등한 기능에 대해 언급했다.
     * 이 기능이 작업 관리자에 특정한 것인지, 아니면 CTRL을 누르고 있을 때 다중 선택 모드로 전환되는 Windows의 목록에 일반적인 기능인지에 대한 질문이 있다.
     * 기사에서는 Windows 11의 메모장 앱에 재미있는 추가 기능인 디지털 피짓 스피너도 언급했다.
     * 일부 사용자들은 움직이는 앱을 미니 게임으로 보고, 컴퓨팅 경험에 재미를 더한다.
"
"https://news.hada.io/topic?id=10421","Ask GN: mariadb 무료로 사용할수 있는 서비스 어디였나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Ask GN: mariadb 무료로 사용할수 있는 서비스 어디였나요?

   소량의 데이터만 관리를 할 예정인데요.
   메모를 해놧는데 찾을수가 없네요.

   혹시 아시는분 알려주세요.

   https://free-for.dev 검색하니 2가지 나오네요.
    1. https://domcloud.co – Linux hosting service that also provides CI/CD with GitHub, SSH and MariaDB/Postgres database. Free version has 1 GB storage and 1 GB network/month limit and limited to a free domain.
    2. https://filess.io - filess.io is a platform where you can create 1 database of the following DBMS for free: MySQL, MariaDB, MongoDB, PostgreSQL.

   planetscale으로 해보려니 좀 귀찮아서 firebase로 구현했습니다.
   감사합니다.

   도움이 되실지는 모르겠지만 아래 gist 한번 참고해보세요!
   https://gist.github.com/bmaupin/0ce79806467804fdbbf8761970511b8c

   감사합니다.
   firebase로 구현하니 간단하네요. ^^;
"
"https://news.hada.io/topic?id=10479","Show GN: 클라우드타입 - Kubernetes기반 배포 플랫폼","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Show GN: 클라우드타입 - Kubernetes기반 배포 플랫폼

   서비스 개발자는 빠르게 개발에 필요한 환경을 구성하고,
   인프라 엔지니어는 안정적인 리소스 할당 및 제어가 가능

   [지원하는 기능]
   •Github Repository 연동
   •SSH key 방식의 Git 원격저장소(Github, Gitlab, self-hosted) 연결
   •GitHub Actions CI/CD 지원
   •Java, Python, Node.js 등 다수의 언어/프레임워크 지원
   •MariaDB, Postgres, MongDB, Redis 등 DB 생성 가능
   •커스텀 Dockerfile 및 컨테이너 이미지 실행 가능
   •HTTPS 인증서 자동 발급
   •커스텀 도메인 연결
   •팀원 초대 및 권한 관리
   •무중단 배포 기본 지원
   •Kubernetes 연결 기능

   클라우드타입 사용해보시고 많은 피드백 주시면 감사하겠습니다.
   그리고 새로 추가되는 Kubernetes 연결 기능에 관한 웨비나가 곧 진행되는데 관심 있는 분은 아래 링크를 통해 참여 부탁드립니다.
   https://festa.io/events/3899
"
"https://news.hada.io/topic?id=10424","짧은 세션 만료는 보안에 도움이 되지 않음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        짧은 세션 만료는 보안에 도움이 되지 않음

     * 웹 애플리케이션은 일반적으로 고정된 시간 또는 사용자의 비활동 기간 후에 세션을 만료시키며, 현재의 보안 조언은 짧은 세션 시간 초과(Short session expiration)를 제안 함
     * 그러나 Gmail이나 GitHub과 같은 많은 인기 웹 애플리케이션들이 이러한 관행을 따르지 않고 있어서, 실제로 짧은 세션 시간 초과가 보안을 강화하는데 효과적인지에 대한 의문을 제기
     * 고려된 위협 모델은 세션 쿠키를 훔치거나, 세션 고정 취약점을 악용하거나, 피해자와 동일한 장치를 사용하는 등의 다양한 방법으로 사용자의 활성 세션에 무단 접근하는 공격자등을 포함
     * 짧은 세션 시간 초과가 유익할 수 있는 시나리오를 얘기할 때, 로그나 도난당한 컴퓨터에서 오래된 세션 토큰을 찾는 공격자의 경우 등을 예로 들지만, 이는 일반적인 세션 시간 초과를 위한 주장이지 반드시 짧은 것을 위한 것은 아님
     * 공유된 공용 컴퓨터의 문제는 대부분의 웹 애플리케이션에 대해 현실적이지 않으며, 잠금 해제된 장치에 접근하는 공격자가 활성 세션을 필요로 하지 않고 새로운 세션을 생성하여 우회할 수 있음
     * 즉, 짧은 세션은 사용자 경험과 보안 모두에 단점을 가질 수 있으며, 자주 재인증하는 것이 사용자들이 덜 안전한 관행을 채택하도록 할 수 있다는 것
     * 세션 토큰은 일반적으로 안전하며, 짧은 세션 시간 초과로 막을 수 있는 공격은 드물다는 결론. 디스크 암호화와 컴퓨터 잠금 등 다른 조치가 더 효과적인 보안을 제공할 수 있음
     * Facebook, Google, Amazon, GitHub과 같은 주요 기업들이 만료되지 않는 세션을 가지고 있어, 그들은 이 위험을 수용 가능하다고 판단하는 것으로 보임

        Hacker News 의견

     * 은행 및 금융 앱에서는 짧은 세션 만료가 흔히 보이며, 이는 광범위한 사용자 기반, 기회주의적 공격자에 대한 매력, 그리고 스트레스나 비정상적인 상황에서의 사용 때문에 변호 가능하다.
     * 신뢰할 수 있는 백채널이 없어 신원 제공자가 서비스에 세션 만료를 알리는 것이 불가능한 경우, 부족한 인증 표준을 해결하기 위해 짧은 세션 만료가 자주 사용된다.
     * 공유 장치에서의 애플리케이션 사용 위협은 문제가 되며, 특히 가족과 같이 장치가 공유되는 환경에서는 세션 만료가 애플리케이션 특정이어야 한다.
     * 일부 사용자들은 짧은 세션 만료가 사용성을 희생하여 보안 조치로 사용되는 것을 주장하며, 자기 결제 시스템의 예를 들어 보인다.
     * 사용자 분리가 없는 공유 컴퓨터는 현실이며, 이들은 종종 민감한 정보를 가진 웹 애플리케이션에 접근하는 데 사용된다.
     * 이 기사는 근거 없는 가정을 하고, 상상 속의 최종 사용자 설정을 기반으로 짧은 세션을 보안 제어로 배제하는 것에 대해 비판받고 있다.
     * 일부 사용자들은 Google이 짧은 세션을 사용하지 않는 결정이 보안 우려보다는 광고 목적으로 더 많은 사용자 데이터를 수집하려는 욕구에서 비롯된 것일 수 있다고 주장한다.
     * 짧은 세션은 사용자에게 적대적이고 불편할 수 있으며, 특히 작업 흐름을 방해하고 경고 없이 재인증을 요구할 때 그렇다.
     * 일부 사용자들은 더 긴 세션 시간 제한을 선호하며, 짧은 세션 시간 제한은 비효과적이며 감사자와 펜테스터에 의한 체크박스 테스트를 만족시키는 데만 사용된다고 주장한다.
     * 사용자 활동에 따라 재설정되는 소프트 세션 시간 제한과 사용자 활동에 관계없이 일정 기간 후 세션을 종료하는 하드 세션 시간 제한 사이에는 차이가 있다.
"
"https://news.hada.io/topic?id=10392","DeepL Pro를 한국에서 사용할 수 있습니다.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      DeepL Pro를 한국에서 사용할 수 있습니다.

     * 인공지능 기반 번역 서비스인 DeepL이 한국에 Pro 버전을 출시.
          + 기존에는 한국에서 결제가 불가능하고, 무료 버전만 사용이 가능했음.
     * DeepL Pro는 사용량에 제한이 있는 무료 버전과 달리 무제한 번역 및 파일 번역/수정 서비스를 제공함.
     * API 서비스 또한 동시에 출시하여 사용량 기반으로 청구되는 번역 서비스인 DeepL API Pro 이용 가능.
     * 모든 Pro 서비스에는 보안 정책이 추가되어 번역한 텍스트를 기록하지 않고 즉시 제거함.
     * 비용은 DeepL Pro의 경우 연간 결제 시 월 8.74달러부터 시작되며, DeepL API Pro는 100만 자당 25달러.

   아직 글로세리(용어집) 은 미지원입니다 ㅜ

   DeepL 무료도 쓴지 꽤 됐는데 편의성 측면에선 파파고가 좋긴한데 (파파고 앱, 네이버 스마트키보드 등) 업무적인 사용에선 DeepL이 좋더라구요.
   어조(경어체, 반말 등)도 잘 보존하는 편이고 원하는 표현은 자기가 선택지에서 다른 번역으로 바꿔줄 수도 있고...
   CNN 기반 번역엔진이라 그런 기능이 제공 가능한걸까 싶네요

   결제는 추가됐는데, 아직 glossaries, tone 같은 기능은 추가 안됐네요.

   다 좋은데, 생각보다 웹 확장에서의 로그인이 좀 자주 풀리는 느낌입니다.

   저도 로그인이 계속 풀려서 불편하네요. 로그인 화면에서도 1Password 크롬확장을 불러오지 않아서 일일이 복사 붙여넣기 해야되는것도 피곤하구요

   번역품질이 너무 뛰어나서 파파고가 설 자리가 남는지 걱정이 됩니다

   꽤 비싸네요

   좋네요.

   추가로 DeepL Pro 에서는 웹페이지 번역을 지원합니다.

   GN⁺ 번역도 현재는 GPT4한테 시키는데, DeepL로 변경 테스트 해보려고 합니다.
   번역 질은 점점 좋아지는 것 같더라고요.
"
"https://news.hada.io/topic?id=10412","신뢰도가 낮을 때 깊은 구멍에 빠지지 않으면서 어떻게 소통할 것인가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 신뢰도가 낮을 때 깊은 구멍에 빠지지 않으면서 어떻게 소통할 것인가

     * 저신뢰 환경에서의 효과적인 커뮤니케이션 전략에 대한 기사
     * 잘못된 해석이 신뢰를 더욱 악화시킬 수 있으므로, 신중한 커뮤니케이션의 중요성 강조
     * 대화의 어려움을 미리 인정하는 것이 대화의 분위기를 정하고 상대방의 감정을 고려하는 데 도움이 될 수 있다는 저자의 제안
     * 의도한 대로 메시지가 전달되었는지 확인하기 위해 대화 후에 확인하는 것을 권장
     * 망설임과 친근한 어조가 대화가 확대되는 것을 방지하는 데 도움이 될 수 있음
     * 불안하거나 화가 날 때 잠시 멈추는 것을 저자가 조언
     * ""내 머릿속의 이야기""라는 개념 소개, 상대방의 말이나 행동에 대한 자신의 해석을 공유하여 그들이 의도를 명확히 할 수 있게 함
     * 신뢰를 재구축하는 데 도움이 될 수 있도록 긍정적인 상호작용을 설계하고 긍정적인 의도를 전달하는 것을 제안
     * 사람들에게 더 잘할 기회를 주고 다른 커뮤니케이션 매체의 한계를 이해하는 것을 권장
     * 텍스트 커뮤니케이션에 너무 많은 의미를 부여하지 않는 것의 중요성을 강조하고 필요할 때 명확성을 요청하는 것
     * 기사는 저자와 그녀의 공동 창업자와의 개인적인 경험을 바탕으로 하며, 그들이 신뢰를 재구축하는 데 사용한 전략에 대한 것

        Hacker News 의견

     * 관계에서 신뢰를 재건하는 데 필요한 희생의 중요성에 대한 기사, 특히 신뢰가 손상된 상황에서
     * ""제발"", ""감사합니다"", 이모티콘과 같은 친근한 언어를 사용하여 텍스트 기반의 상호작용을 완화하는 것을 제안
     * ""The opt-in"" 개념 소개, 대화에 참여할 기회를 상대방에게 주는 것을 포함
     * 더욱 간결한 커뮤니케이션을 위해 ""communication snippets"" 또는 ""fillers"" 사용 권장
     * 비폭력 커뮤니케이션 센터의 적극적인 청취 및 확인 방식이 유용한 전략으로 강조
     * 신뢰 재건이 노력할 가치가 있는지 평가하는 것의 중요성 강조
     * 기사에서는 직장에서의 공개적인 비판의 부정적인 영향과 관계를 수리하기 위한 전략이 필요하다고 언급
     * ""내 머리 속의 이야기""라는 문구에 대한 토론, 그 의미에 대한 혼란이 있음
     * 차를 내놓는 것과 같은 직장에서 긍정적인 상호작용을 설계하는 아이디어 제시
     * 이러한 전략이 자기애 성격 장애 또는 경계성 성격 장애의 특성을 보이는 개인에게는 효과가 없을 수 있다는 것을 인정하며 기사 마무리
"
"https://news.hada.io/topic?id=10400","NetMaker: WireGuard VPN을 통해 모든 것을 연결하다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 NetMaker: WireGuard VPN을 통해 모든 것을 연결하다

     * 새로운 WireGuard VPN인 Netmaker가 이제 사용 가능합니다.
     * 이 플랫폼은 궁극적으로 강력한 오버레이 네트워크를 통해 모든 기기를 통합하려고 합니다.
     * Netmaker는 다른 VPN들보다 더 나아가 더 빠르고 더 안전하다고 설명되고 있습니다.
     * 현재 플랫폼은 베타 단계에 있으며, 사용자들이 시험해 볼 수 있도록 초대하고 있습니다.
     * Netmaker의 주요 기능 중 일부는 Egress Gateway, Mesh Network, Ingress Gateway, Relay, Access Control Lists, DNS, Metrics & Monitoring, Failover, 그리고 User Management입니다.
     * 이 플랫폼은 사용자들에게 자원, 문서, 지원을 제공하는 netmaker.io 회사에 의해 지원받고 있습니다.
     * Netmaker는 Github, LinkedIn, Discord와 같은 소셜 플랫폼에서도 활동하고 있습니다.
     * 플랫폼 사용은 사이트 탐색을 향상시키고, 사이트 사용을 분석하며, 마케팅 노력을 돕기 위해 기기에 쿠키를 저장하는 것을 포함합니다.
     * WireGuard는 Jason A. Donenfeld의 등록 상표입니다.

        Hacker News 의견

     * 기사는 사용자가 모든 것을 연결할 수 있게 해주는 WireGuard VPN 솔루션인 NetMaker에 대해 논의합니다.
     * NetMaker는 Yggdrasil, tinc, Tailscale, Zerotier, Nebula와 같은 다른 VPN 솔루션들과 비교되며, 일부 사용자들은 그 간단함과 자체 호스팅 기능 때문에 NetMaker를 선호합니다.
     * 프로젝트는 아직 초기 단계(0.xx 릴리스)에 있어, 사용자들은 설정 변경 사항을 계속 업데이트해야 합니다.
     * NetMaker는 기본적으로 라우트 조정 및 STUN/TURN이 있는 WireGuard로, 사용자가 이해하고 관리하기 쉽습니다.
     * NetMaker의 기능 목록은 Tailscale의 것과 비교되며, 주요 차이점은 자체 호스팅 기능과 WireGuard 지원입니다.
     * 일부 사용자들은 이러한 제품이 ""일반"" WireGuard 서버보다 어떤 이점이 있는지, 이러한 제품들이 제공할 수 있는 추가 기능에 대해 질문합니다.
     * VPN과 같은 중요한 서비스를 다른 회사에 신뢰하는 것에 대한 우려가 있으며, 일부는 회사들이 WireGuard와 같은 오픈 소스 솔루션을 개선하는 데 더 많은 투자를 해야 한다고 제안합니다.
     * 일부 사용자들은 NetMaker와의 경험을 공유하며, 그 VPN 관리 능력과 내장 ACL을 칭찬합니다.
     * 그러나 전체 0.0.0.0 포워딩에 대한 어려움과 GitHub 저장소에서 테스트 파일이 부족한 등의 비판도 있어, 제품의 보안에 대한 우려를 제기합니다.
     * 이러한 비판에도 불구하고 많은 사용자들은 NetMaker를 사용하기 쉽게 찾아, 그 개발을 계속 주시하는 것을 권장합니다.
"
"https://news.hada.io/topic?id=10487","세계 최초 M1 GPU 드라이버","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           세계 최초 M1 GPU 드라이버

     * Asahi Linux에서 GPU 드라이버를 개발하는 Asahi Lina와 Alyssa Rosenzweig가 OpenGL ES 3.1 표준을 준수하는 M1/M2용 GPU 드라이버를 출시.
          + 기존에 존재하던 애플의 GPU 드라이버는 Metal만 지원하며, 모든 표준 그래픽 API(Vulkan, OpenGL, OpenGL ES 등)을 지원하지 않았음.
          + 현재 OpenGL ES를 지원하는 유일한 M1/M2용 GPU 드라이버.
     * OpenGL 표준을 관리하는 Khronos의 적합성 테스트를 통과함.
     * 애플의 독점 드라이버, 독점 API 거부에 만족하지 않고, 직접 표준을 준수하는 드라이버를 개발한 것.
     * 앞으로도 사양을 완전히 준수하는 개방형 표준 API 지원을 위해 개발을 계속할 예정.

   정말 대단하네요~
   리버스 엔지니어링을 한 건가요!

   https://www.youtube.com/@AsahiLina

   아사히 리나는 요런분인데요. VTuber 이십니다. 천재 미소녀 프로그래머...

   macOS 에서 문명6를 종종 플레이 하곤 하는데, 릴리즈 초반에는 gpu가 unknown으로 잡혔었네요. 반년 전 부턴 그나마 제대로 인식하는 것 같던데...
   그래도 나름 애플에서 포팅 툴을 내놓은 것을 보면 앞으로는 게임도 꽤나 할만 할 듯 싶네요.

   대단합니다.
     * HN 스레드

   본문에서는 뒤에 OpenGL ES 3.1의 기능을 어떻게 지원했는지에 대한 내용이 추가로 있습니다.
   궁금하시면 직접 가셔서 읽어보셔도 좋을 것 같아요.

   저는 이해가 안 가서 요약하지 않았습니다...

   아무튼 정말 대단한 업적이네요.
   문서도 제대로 없는 GPU를 가지고 바닥부터 드라이버를 설계해서 결국 완전한 API 지원을 달성한거니...

   앞으로도 이런 활동이 늘어나다 보면 M1/M2의 사용성이 훨씬 좋아질 것 같네요.
   (언젠가 게임도 될 거고요)

   애플, Proton과 비슷한 Game Porting Toolkit을 공개

   요즘봐서는 애플도 게임쪽에 신경을 쓸 수밖에 없지 않나 생각이 듭니다.
   비전프로 팔아먹으려면..

   되기는 됩니다 ㅎㅎ 몇 안되서 그렇죠.
   (PC 에서 풍성한 제 스팀 라이브러리를 한없이 빈약하게 만드는...)
"
"https://news.hada.io/topic?id=10441","텍스추얼: 파이썬을 위한 빠른 애플리케이션 개발 프레임워크","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    텍스추얼: 파이썬을 위한 빠른 애플리케이션 개발 프레임워크

     * Textual은 Python을 위한 빠른 애플리케이션 개발 프레임워크로, 간단한 Python API로 복잡한 사용자 인터페이스를 구축하도록 설계되었습니다.
     * 이 프레임워크는 터미널에서 앱을 실행할 수 있게 해주며, 가까운 미래에는 웹 브라우저에서도 실행할 수 있습니다.
     * Textual은 현대 웹 개발에서 영감을 받은 API를 통해 Python 라이브러리인 Rich에 상호작용성을 추가합니다.
     * 현대 터미널 소프트웨어에서는 Textual 앱이 마우스 지원과 부드럽고 깜박임 없는 애니메이션을 동반한 1670만 가지 색상을 사용할 수 있습니다.
     * 강력한 레이아웃 엔진과 재사용 가능한 컴포넌트를 특징으로 하여, 데스크톱 및 웹 경험과 경쟁할 수 있는 앱을 만들 수 있습니다.
     * Textual은 Linux, macOS, Windows와 호환되며, Python 3.7 이상이 필요합니다.
     * Textual의 설치는 pip를 통해 이루어지며, Textual 앱을 개발할 계획이 있다면 개발 도구도 설치해야 합니다.
     * Textual 저장소에는 자신의 프로젝트를 위한 템플릿으로 사용하거나 실험해 볼 수 있는 여러 예제가 포함되어 있습니다.
     * Textual 명령에는 Textual 스타일을 미리 볼 수 있는 몇 가지 하위 명령이 있습니다.
     * Textual 커뮤니티는 Discord에서 활발하게 활동하며, 개발자와 사용자들이 프레임워크에 대해 상호작용하고 토론할 수 있습니다.
     * Textual에 대한 문서는 프레임워크를 사용하여 구축을 시작하려는 사람들을 위해 쉽게 이용할 수 있습니다.

        Hacker News 의견

     * 기사는 Python을 위한 Rapid Application Development 프레임워크인 Textual에 대해 논의합니다.
     * 사용자들은 Textual의 사용 편의성과 시각적으로 매력적인 터미널 인터페이스 생성 능력을 칭찬했습니다.
     * 한 사용자는 터미널에서 실행되는 Microsoft Paint 모방인 Textual의 데모를 강조했습니다.
     * 다른 사용자는 매력적인 터미널 인터페이스를 간단하게 만드는 Textual의 단순성 때문에 새로운 Python 프로젝트에서 이를 사용했다고 언급했습니다.
     * 한 사용자는 주요 의존성 없이 Textual에서 바이너리를 만드는 것의 편리성에 대해 문의하였으며, 이는 그들의 제품에 대한 설치 패키지를 만드는 데 사용하는 데 관심이 있다는 것을 나타냈습니다.
     * 한 사용자는 거래 회사에서 중요한 프로세스를 위한 텍스트 UI를 개발하기 위해 lanterna를 사용한 과거의 경험을 공유했으며, 미래의 프로젝트에 대해 Textual에 관심을 표현했습니다.
     * 한 사용자는 자주 업데이트되는 Textual을 비판했으며, 이는 예측할 수 없는 곳에서 문제를 일으킬 수 있어 프로토타이핑에는 적합하지만 유지 관리에는 어렵다고 말했습니다.
     * 다른 사용자는 unicurses와 python을 사용하여 내부 devops와 변경 관리 앱을 완성한 후 Textual을 칭찬했으며, Textual이 그들의 요구 공간에 완벽하게 맞는다고 표현했습니다.
     * 한 사용자는 golang-world에서 동등한 도구에 대한 추천을 요청했으며, Textual의 매력적인 ""웹 브라우저 같은"" 느낌을 강조했습니다.
     * 한 사용자는 명백한 수익원 없이 Textual과 같은 프로젝트가 어떻게 자체를 유지하는지에 대해 의문을 제기했습니다.
     * 한 사용자는 Textual에서의 애니메이션과 전환 효과가 순수하게 ASCII 텍스트로만 이루어지는지 물었습니다.
"
"https://news.hada.io/topic?id=10422","무엇이 탁월한 개발자를 만드는가","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           무엇이 탁월한 개발자를 만드는가

   인프콘 2023에서 발표한 주니어 프론트엔드 엔지니어의 성과 및 역량 향상을 위한 실전 가이드의 1부 격에 해당하는 글입니다. 예전에 긱뉴스에도 올렸던
   프론트엔드 엔지니어 커리어 로드맵: 주니어를 위한 3가지 전문성 트랙 의 정신적 후속작이라고 볼 수도 있겠네요.


탁월한 엔지니어는 어떤 사람일까?

   Li Paul Luo는 2015년 논문 <What Makes a Great Software Engineer?>에서 탁월한 엔지니어를 만드는 5가지 필수 요건을 제안했다. 연구 방법은 다음과 같았다.
     * 개발자에게 필요한 교육, 역량, 행동 등에 대한 수많은 기존 연구 분석
     * Microsoft에서 레벨 2 이상인, 즉 어느정도 역량을 인정받은 개발자 59명을 심층 인터뷰. 개발자가 가져야 할 만한 개인적인 특성(성격, 지식, 행동 등)의 후보 54개를 도출
     * Microsoft의 개발자 2,000여명을 대상으로 설문조사. (특성에 대한 자세한 묘사 후) “만약 숙련된 개발자가 이 특성을 가지고 있지 않다면, 당신은 그가 탁월한 개발자라고 평가할 것인가?”
     * 설문조사 결과 분석 및 답변자 후속 인터뷰
     * 설문조사 분석 및 후속 인터뷰 결과를 가지고 개발자의 주된 협력 대상자들(아티스트, 컨텐츠 기획자, 데이터 과학자, 디자이너, 전기공학자 등) 40명 추가 인터뷰

   저자가 제안한 5가지 필수 요건의 순서와 해석을 조금 달리 하여, 내 생각을 덧붙여 정리해봤다.

1. 훌륭한 코드를 짠다(Be a competent coder)

   ‘유능한 코더’보다는 ‘훌륭한 코드’가 더 목표로 삼기 좋다.

   코딩 실력은 주니어에게 가장 중요한 역량이다. 그러나 일정 수준을 넘어가면 다른 역량을 키우는 노력이 더 효율적이다. 이 ‘일정 수준’은 사람마다, 조직마다 다르다.

   나는 주니어의 코딩 실력을 판가름하는 기준을 ‘1) 코드 품질에 대한 자신만의 일관된 관점을 갖고, 2) 고객 요구사항을 만족하는 코드를, 3) 빠른 속도와, 4) 적은 버그로, 5) 가독성 있게 작성한다’ 로 보고 있다.

2. 근거 기반 의사결정을 연습한다(Practice informed decision-making)

   의사결정 역량을 기르려면 의사결정의 결과보다는 프로세스를 개선하는 데 집중하는 게 더 유리하다. 결과는 내 의지와 상관없이 정해질 수 있기 때문이다.

   그리고 근거 기반이란, 데이터에 기반하되 데이터를 편견에 빠져 해석하거나 성급하게 결론내리지 않는 걸 뜻한다. 특히 새로운 정보를 얻었다면 마음이 내키지 않더라도, 합리화하지 말고 기존의 판단을 재고하는 게 좋다.

   특히 디버깅할 때, 내가 아니라 라이브러리나 브라우저가 문제라고 생각하면 대부분 틀린다. 만약 브라우저 문제가 맞았다 한들, 그와 유사한 모든 문제를 브라우저 탓으로 치부해버리면 정말 내 실수로 벌어진 치명적인 문제도 무시해버릴 수 있으니 주의해야 한다.

   편견이나 성급함을 피하는 한가지 방법은 다양한 외부 관점을 열린 마음으로 받아들이는 것이다. 잠깐 숨을 돌리고 친구, 동료, 고객, 경쟁자, 상사 등 다양한 사람들이 사안을 어떻게 해석하는지 보면 나의 편견이 유지되기 어렵다.

   물론 사람이 스트레스를 받으면 이성적으로 행동하기 어렵다. 조직도 마찬가지. 그래서 현명한 조직들은 일부러 일정과 리소스에 여유를 두고, 현명한 개인은 명상 등을 통해 스트레스를 관리하는 방법을 익힌다.

   근거 기반 의사결정을 평소에 연습하려면 좋은 근거를 많이 가지고 있어야 한다. 다양한 양질의 정보가 내 주변에서 지나가게 하는 시스템을 구축해두면 좋다. 뉴스레터를 구독하고, 커뮤니티에 소속되고, 스터디 모임에 참여하는 식으로.

3. 동료의 효과적 의사결정을 돕는다(Enable others to make decisions efficiently)

   탁월한 개발자는 정보와 경험을 공유하여 동료를 성장시키고, 팀의 생산성을 높이고, 결과적으로 조직이 더 나은 의사결정을 할 수 있도록 돕는다.

   그러면 주니어는 어떻게 할까. 주니어는 당장 성과를 내기보다는, 질문하여 성장하는 게 동료를 돕고 조직을 돕는 것이다. 저평가와 거절과 민폐의 두려움을 이겨내 고맥락 질문을 하라. 보통은 신뢰를 쌓아야 이러한 취약성을 드러낼 수 있다고 생각하는데, 실제 연구를 보면 거꾸로다. 서로 약점을 보이고 용기있게 위험을 감수할 때 신뢰의 토대가 빠르게 형성된다.

   취약성도 잘 드러내는 방법이 있다. 맥락을 잘 포함해야 한다. 주니어들은 보통 A라는 문제가 있어서 B를 시도해보고는, 그 안에서 C가 잘 안 되면 C만 물어본다. 이렇게 하면 대개는 굉장히 지엽적인 대답만 얻고, 그 대답을 얻어도 문제 해결이 잘 안 된다. 거꾸로, A를 제대로 설정하고 나면 B가 자동으로 나와서 C가 필요없어지는 걸 자주 봤다.

   질문을 장려하려면 취약성과 투명성에 큰 가치를 두는 조직문화를 마련해야 한다. 이 때 조직 내 디폴트값을 뭘로 두느냐가 상당히 중요하다. 디폴트값이 사람의 인지와 행동에 굉장히 큰 영향을 주기 때문.

   이런 면에서는 숨기려면 액션을 해야 하는 Public by Default 도구(Slack, Notion)가 공유하려면 액션을 해야 하는 Private by Default 도구(Email, Google Docs)보다 낫다. ""언제든지 말을 걸어도 되는데 이 때만 피해달라(Do Not Disturb)""가 “이 때는 자유롭게 와서 말 걸어도 된다(Open Hours)”보다 낫다.

4. 작업의 현재 가치를 극대화한다(Maximize current value of your work)

   탁월한 개발자에게는 시스템적 사고(나중에 문제가 될 만한 부분이나, 요구사항이 어떻게 변할지 예측하여 장기적 관점에서 구현)와 당장 움직이기(분석하느라 멈춰있지 말고, 불확실성이 두려워도 일단 뛰어들어 실행하여 피드백 받기) 둘 다가 요구된다.

   특히 스타트업에서는 후자가 더 유리하지만, 극단에 치우치면 불리해진다. 빠른 실행에 주력하되, 조금만 노력해도 큰 이득을 주는 행동을 습관으로 만들어두면 좋다. 미시적 예시는 값이 하나더라도 하드코딩해두지 말고 변수로 빼놓는다거나, 값이 지금은 두개밖에 없더라도 그게 한 컴포넌트를 넘어서는 종류의 옵션이라면 Boolean 값 대신 Mode를 사용하는 게 있다. 거시적 예시는 내가 어떤 가설을 검증하기 위해 실행하는 건지 생각해보고, 검증을 어떤 데이터로 할지 생각해보고 실행해보는 습관이 있다.

   결국 내 의지로 시스템적 사고와 당장 움직이기 둘 사이를 유연하게 오갈 수 있을 때 작업 가치가 극대화된다.

5. 효과적으로 꾸준히 학습한다(Continuously learn)

   효과적으로 학습하는 법을 학습하는 게 모든 성장의 시작이다. 일찍 할수록 좋은, 복리 이득을 주는 행위다.

   학습이란 결국 나의 지식을 넓혀 삶을 변화시키기 위한 것이다. 그런데 오래된 지식이 지금도 유효하리라는 보장이 없으니 언제나 새 정보로 갱신하는 노력이 필요하다.

   그러나 정보가 많다고 무조건 좋은 건 아니다. 정제되지 않은 빅데이터처럼, 어떤 정보들은 있으면 방해만 된다. 따라서 부정확하거나 내 문제와 관련 없는 ‘소음’ 대신 ‘신호’의 비율을 높여야 한다. 나의 전문 도메인이 아닌 곳에서 내 기존 지식과의 연결점을 만들어주는 통찰, 또는 내가 특정 조건에서 틀렸을 수 있다는 증거들이 좋은 신호의 예시라고 본다.

   효과적 학습은 ‘어떻게 하면 내가 매일 조금씩 더 효과적으로 자랄 수 있을까?’ 라는 질문으로 요약할 수 있다. 그 답은 1) 지금 당장 현실에서 내게 필요한 걸 찾아보고, 2) 관련된 이론적 근거를 딱 필요한 만큼만 학습하고, 3) 배우자마자 즉시 써먹어 셀프 피드백 받는 걸 반복하는 것이다.

   그럼 지금 당장 현실에서 내게 필요한 건 어떻게 알까? 일기를 써서 일상에서 내가 겪는 문제를 발견할 수도 있고, 지난 한주간 많은 시간을 쓴 활동을 더 잘 하기 위해 노력해볼 수도 있다. 예를 들어 취준생이라면 스터디를 자주 할테니 스터디를 효과적으로 하는 법을 연구하면 도움이 된다. 자주 하는 걸 것일수록 학습 기회도 더 많고, 개선시 삶의 질 상승폭도 더 크다.

어떻게 써먹을 것인가 - 주니어와 시니어의 관점

   주니어는 이 목표들 하나하나를, 특히 ""훌륭한 코드 짜기""와 ""효과적으로 꾸준히 학습하기""에 묘사된 지식과 행동에 본인이 얼마나 부합되는지 체크해보면 좋다. 그리고 부족한 역량을 집중해서 계발한다.

   그리고 시니어라면 이것들을 채용 평가와 성과 평가에 쓸 수 있다. 지원자가 이 역량을 충분히 가졌는지를 어떤 신호로 판별할지 고민해본다. 주니어의 역량을 높이기 위해 리드할 때에도 비슷하게 써먹을 수 있을 것이다.

   그리고 이 역량들은 ‘훌륭한 코드 짜기’만 특정 도메인의 전문성으로 교체하면 어떤 직군을 평가하더라도 좋은 기준이 되어준다. 그래서 실제로 XL8에서는 PM이든, 디자이너든, 개발자든 사람을 채용하고, 온보딩해서 피드백할 때 최대한 이것들을 기준으로 역량 평가를 하고 있고, 상당히 큰 효과를 보고 있다.

활용시 주의할 점

   이 5가지 역량들은 모두 상호보완적이다. 다 엮여있기 때문에 하나만 잘 키우기 위한 목표를 삼는 건 그리 효과적이지 않을 수 있다. 거꾸로 말하면, 하나만 잘해도 다른 것들을 더 잘하게 되기 수월해질 수도 있지만.

   그리고 이 연구는, 여타 연구들과 마찬가지로 절대적 진리가 아니다. 당연히 한계가 있고, 논문 저자의 해석과 나의 해석을 거쳤다는 것도 감안해야 한다.

   또한 논문의 제목이 '무엇이 탁월한 개발자를 만드는가?' 였기 때문에, 다섯 가지 역량을 갖추면 탁월한 개발자가 될 것이라는, 즉 충분조건이라는 생각을 할 수도 있다. 그러나 실제로 연구된 건 '이게 없으면 탁월한 개발자라고 할 수 없다', 즉 필요조건이다. 따라서 이것들을 좋은 목표이자 지향점, 또는 경유지로 삼는 것은 괜찮지만 최종 목적지로 볼 필요는 없다.

어떻게 써먹을 것인가 - 프론트엔드 개발자의 관점

   이 5가지 역량을 프론트엔드 개발의 맥락에서 활용하기 위해 이런 질문들을 던져볼 수 있다.
     * 프론트엔드 도메인에서 훌륭한 코드란 무엇일까? 어떻게 더 좋은 코드를 짤 수 있을까?
     * 프론트엔드 도메인에서 더 나은 의사결정을 하려면 어떤 근거를 어떻게 수집해야 할까?
     * 프론트엔드 도메인에서 동료의 효과적 의사결정을 돕는다는 건 어떤 의미인가?
     * 프론트엔드 도메인에서 내 작업의 현재 가치를 어떻게 측정할까? 어떻게 극대화할까?
     * 프론트엔드 도메인의 지식을 꾸준히, 효과적으로 학습하려면 어떻게 해야 할까?

   이런 질문에 대해 답하는 방법을 고민하다가 나온 게 프론트엔드 엔지니어 커리어 로드맵이다. 프론트엔드 개발자에게 조직이 기대하는 역할을 웹/제품/운영 특화 트랙으로 구분하여 트랙별 주요 특징과 장단점을 설명한 것이다. (인프콘 발표에서는 이 내용이 완전히 빠졌는데, 별도 글에서 좀더 보강하여 해설 예정입니다.)

   이 로드맵 또한 주니어와 시니어의 맥락에서 써먹어볼 수 있다.

   예를 들어 프론트엔드 주니어들은 사전 조사 또는 면접 질문으로 해당 회사의 상태를 파악 한 뒤, ""내가 가고 싶은 이 조직에서는 이런 전문성을 원하는구나. 이 전문성을 내가 잘 키우고, 잘 드러내면 채용될 가능성이 높아지겠네.""와 같이 구직할 때 써먹을 수 있을 것이고,

   시니어라면 ""우리 조직에는 이런 전문성을 가진 사람이 부족한 상태다. 그러니 이 친구가 이 전문성을 계발할 수 있게 돕자. 그리고 이 전문성을 가진 사람을 잘 판별해서 채용해보자.""와 같이 이렇게 구성원을 성장시키고 채용할 때 써먹을 수 있다.

   물론 위의 논문과 마찬가지로 3가지 트랙이 상호보완적이며, 절대적 진리도 아니고, 최종 목적지도 아니라는 건 염두에 두어야 한다.

탁월한 시니어 개발자 되기

   프론트엔드 엔지니어 커리어 로드맵에서는 탁월한 시니어 개발자가 되는 방법에 대한 내 생각도 간단히 언급했다.
     * 기본에 충실하여 5가지 필수 역량 계발을 지속하는 사람이 좋은 시니어가 된다.
     * 때론 동료의 모범적 행동 하나가 명시적 리더의 수많은 말보다 더 큰 영향을 끼친다. 리더 역할이 아닐 때에도 리더십을 보여주는 사람에게 결국 리더 역할이 주어진다.
     * 어떤 상황에서든, 어떤 작은 일을 맡든 큰 임팩트를 만드는 사람들이 이후 더 큰 일을 맡게 된다.

   노션에서 바로 옮겼더니 뒤쪽 '프론트엔드 엔지니어 커리어 로드맵' 링크가 노션 링크로 들어갔네요. ㅠ https://steady-study.super.site/frontend-engineer-career-roadmap 이녀석입니다.
"
"https://news.hada.io/topic?id=10372","OpenTF 선언문","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               OpenTF 선언문

     * OpenTF 선언문은 HashiCorp가 Terraform의 라이선스를 Mozilla Public License (MPL)에서 비오픈 소스 라이선스인 Business Source License (BUSL)로 변경한 결정에 대한 반응
     * 이 변경은 2023년 8월 10일에 커뮤니티로부터의 충분한 사전 고지나 참여 없이 이루어졌음
     * BUSL 라이선스는 Terraform에 대한 ""독약""이며, 이 소프트웨어를 사용하는 기업과 개발자에게 법적 위험을 초래한다고 주장
     * 라이선스 변경이 개발자와 기업들이 진정한 오픈 소스 대안을 선택하게 만들어 Terraform 생태계가 줄어들고 쇠퇴하게 될 것이라고 믿음
     * 이러한 종류의 라이선스 변경이 모든 유사한 오픈 소스 프로젝트에 해를 끼치며, 갑작스러운 라이선스 변경에 대한 불확실성과 공포를 만든다고 주장함
     * OpenTF의 목표는 HashiCorp가 라이선스 변경을 되돌리거나 Terraform을 재단으로 분기함으로써 Terraform을 완전히 오픈 소스 라이선스로 돌려놓는 것
     * 진정한 오픈 소스, 커뮤니티 주도, 공정, 계층화 및 모듈화, 그리고 하위 호환성을 가진 Terraform에 대한 재단을 제안하며, 이를 지원하는 개인과 기업들로부터의 서명을 받는 중
     * OpenTF는 Terraform과 같은 오픈 소스 프로젝트를 유지하는 데 필요한 상당한 투자를 인정하고, Terraform을 창조하고 이 시점까지 개발을 이끈 HashiCorp에 감사의 의미를 표함

   테라폼을 Pulumi로 이관 고려중인데 이런일이 있었네요

        Hacker News 의견

     * OpenTF 선언문, 인기 있는 인프라스트럭처 코드 도구인 Terraform의 라이선스 변경에 대한 HashiCorp의 결정에 대한 반응
     * 일부 댓글 작성자들은 HashiCorp의 결정에 대해 실망감을 표현하며, 사유 기업이 공공재를 유지할 수 없으며, 커뮤니티가 비영리 재단으로 Terraform을 포크해야 한다고 제안
     * Terraform을 사용하는 회사인 Oxide는 OpenTF 선언문을 지지하고 HashiCorp에게 라이선스 변경을 철회할 것을 요청. 필요한 경우 Terraform을 포크하는 노력을 지원할 의사 표현
     * 일부 사용자들은 라이선스 변경으로 인해 Terraform의 대안을 고려하며, 언어와 프레임워크는 개방되어 있어야 하며 그렇지 않으면 뒤떨어질 위험이 있다는 우려 표현
     * 그러나 일부 사용자들은 변경에 대해 걱정하지 않으며, HashiCorp의 FAQ가 새로운 라이선스 하에 그들의 제품을 비생산적으로 사용하는 것이 모두 허용된다고 명시하고 있음을 인용
     * Terraform을 사용하는 또 다른 회사인 Terrateam은 OpenTF 선언문을 지지하며, Terraform이 생태계에 중요하고 강력한 커뮤니티로부터 이익을 얻는다고 주장
     * 일부 댓글 작성자들은 HashiCorp의 결정이 생존 가능한 비즈니스 모델을 만들지 못한 결과라고 제안하며, 회사와 관련된 잠재적인 미래 문제를 경고
     * Terraform에 기여하는 회사인 Gruntwork도 OpenTF 선언문을 지지하며 다른 사람들에게 동일하게 행동할 것을 촉구
"
"https://news.hada.io/topic?id=10406","Mullvad 브라우저","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Mullvad 브라우저

     * Tor Project 팀과 Mullvad VPN이 협력하여 무료로 개인 정보를 보호하는 웹 브라우저인 Mullvad 브라우저를 출시하였습니다.
     * Mullvad와 Tor Project는 사용자 개인 정보 보호를 우선시하는 기술 개발에 공통의 약속을 공유하고 있습니다.
     * Mullvad 브라우저는 안전 수준과 원칙에서 Tor 브라우저와 유사하지만, Tor 네트워크와는 독립적으로 운영됩니다.
     * 이 브라우저는 Tor Project의 모든 개인 정보 보호 기능을 제공하며, 사용자는 선택한 VPN과 연결할 수 있습니다.
     * Mullvad 브라우저는 모든 사용자에게 유사한 지문을 생성함으로써 온라인 개인 정보를 '무리 속에 숨기는' 방식을 적용하며, 식별 가능한 정보를 추출하는 데 일반적으로 사용되는 많은 매개 변수와 기능을 마스킹합니다.
     * 기본적으로 브라우저는 개인 모드가 활성화되어 있으며, 쿠키와 쿠키 사이에 쉽게 삭제할 수 있도록 제3자 추적기와 쿠키를 차단합니다.
     * 다른 브라우저와 달리, Mullvad 브라우저의 비즈니스 모델은 사용자의 행동 데이터를 이용하는 데 의존하지 않습니다.
     * Tor Project의 임무는 개인 정보를 보호하고 익명성을 제공하며 검열을 우회하는 기술을 구축함으로써 인권을 증진하는 것입니다.
     * Mullvad와의 협력은 다른 기술 개발자들에게 개인 정보 보호를 사용자 경험을 향상시키는 기능으로 우선시하는 것에 대한 영감을 제공하려는 목표를 가지고 있습니다.
     * Tor 브라우저는 Tor 네트워크를 통해 트래픽을 전달함으로써 온라인에서 익명성을 제공하고, 검열과 감시를 받는 사용자들이 인터넷에 자유롭고 안전하게 접근할 수 있는 유일한 옵션이기 때문에 계속 존재하고 개선될 것입니다.
     * Mullvad와의 공동 프로젝트는 Tor Project가 레거시 문제를 해결하고, 취약점을 수정하며, Tor와 Mullvad 브라우저 모두에게 이익이 되는 필요한 UX 개선을 할 수 있게 하였습니다.
     * Mullvad 브라우저는 Mullvad VPN 없이도 사용할 수 있지만, 두 가지를 결합하는 것이 권장됩니다. 이 파트너십에 대한 자세한 정보는 Mullvad.net/browser에서 확인할 수 있습니다.

        Hacker News 의견

     * Mullvad 브라우저는 모든 사용자에게 유사한 지문을 생성하여 많은 매개변수와 기능을 가림으로써 온라인 개인 정보 보호를 강화하려고 합니다.
     * 사용자들은 이 ""가림"" 과정의 세부 사항에 대해 궁금해하며, 이것이 Mullvad 브라우저 사용자가 아닌 쿼리에 대한 미리 준비된 응답을 반환하는 것인지 의문을 제기합니다.
     * 브라우저를 더 사용하기 쉽게 만들기 위해 uBlock Origin, Multi Account Containers, Total Suspender, 그리고 Sidebury와 같은 수직 탭 솔루션과 같은 특정 확장 기능을 포함하는 제안이 있습니다.
     * 일부 사용자들은 Mullvad 브라우저에서 Tor 연결 스위치의 가능성에 관심을 보이며, 이는 Tor를 더 접근하기 쉽게 하고 VPN 방식을 통한 진입을 많은 사용자에게 더 안전하게 만들 수 있습니다.
     * Firefox 브라우저 중 하나를 통해 모든 웹 서핑을 Mullvad VPN을 통해 확장 기능이나 유사한 설정을 통해 실행하는 가능성에 대한 논의가 있습니다.
     * Mullvad의 작업은 사용자들에게 인정받고 있으며, 브라우저가 오픈 소스라는 사실이 강조되고 있습니다.
     * Mullvad VPN과 Tor 네트워크 중 어느 것이 더 많은 사람들을 숨겨서 익명성을 제공하는지에 대한 논쟁이 있습니다.
     * 일부 사용자들은 Tor 프로젝트의 지속 가능성에 대해 우려를 표현하며, 이를 Mozilla 프로젝트와 그 기부금 의존도와 비교합니다.
"
"https://news.hada.io/topic?id=10465","Show GN: 웹 방탈출 카페 데모","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Show GN: 웹 방탈출 카페 데모

     * 2D 세계에서 직접 만나 방탈출을 즐기는 웹 방탈출 카페를 제작 중
     * ZEP, 게더타운과 다른 점은 협업 툴이 아닌 방탈출에 최적화 된 경험을 제공할 예정이라는 것
     * 실시간으로 만나고 채팅을 할 수 있는 데모 공개

   오 신선하고 좋습니다!

   아직 데모 수준 외에는 할 수 있는 게 없어서 Show GN에 어울리지는 않는 것 같습니다...!
   실제로 방탈출 맵이 제작이 된 이후에 올려주시면 더 좋을 것 같아요.

   만들기 전에 아이디어와 피드백을 받아보고 싶어서 올렸습니다 ㅎㅎ
"
"https://news.hada.io/topic?id=10365","OpenFarm - 무료 및 오픈 데이터베이스 및 웹 어플리케이션을 통한 원예 지식","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             OpenFarm - 무료 및 오픈 데이터베이스 및 웹 어플리케이션을 통한 원예 지식

     * OpenFarm은 농업과 정원 가꾸기에 대한 지식을 공유하는 새로운 프로젝트 및 커뮤니티입니다.
     * 이 플랫폼은 현재 초기 단계에 있으며, 팀은 사용자들의 피드백과 지원을 적극적으로 모집하고 있습니다.
     * 사용자는 무료로 회원이 될 수 있으며, 이메일 뉴스레터를 통해 업데이트와 기여 기회를 받게 됩니다.
     * OpenFarm은 사용자들이 토마토, 감자, 오렌지, 딸기 등 다양한 종류의 식물에 대해 배우고 재배하는 방법을 제공하는 플랫폼입니다.
     * 웹사이트에는 사용자가 어떤 유형의 정원사인지 파악하는 데 도움이 되는 설문조사도 있습니다.
     * OpenFarm은 커뮤니티 간 상호작용을 장려하며, 사용자들이 질문을 하고 자신의 정원 경험을 공유할 수 있게 합니다.
     * 플랫폼에는 블로그와 FAQ 섹션이 있어 프로젝트에 대한 추가 정보와 업데이트를 제공합니다.
     * OpenFarm은 존중받고 긍정적인 커뮤니티 환경을 보장하기 위해 행동 규범을 유지합니다.
     * 사용자들은 OpenFarm Slack 채널에 참여하여 팀과 더욱 직접적으로 소통하고 협력할 수 있는 초대를 받습니다.
     * OpenFarm은 서비스 이용 약관 및 개인정보 보호정책을 명확히 하여 사용자와의 투명성과 신뢰를 보장합니다.

        Hacker News 의견

     * OpenFarm은 원예 지식을 위한 무료 및 오픈 데이터베이스 및 웹 애플리케이션입니다.
     * 이 프로젝트는 이전에 FarmBot에 의해 유지되었으며, 그들이 여전히 작물 정보 관리를 위해 사용하고 있습니다.
     * 활발하게 유지되지 않음에도 불구하고, 이 프로젝트는 사라진 것으로 간주되지 않습니다.
     * 프로젝트는 Rails/Mongoid/Angular 1.x의 오래된 버전을 실행하고 있으므로 긴급하게 의존성 업그레이드가 필요합니다.
     * 프로젝트를 부활시키기 위해 현재 유지 관리자에게 연락할 관심 있는 개인들에게 호소가 있습니다.
     * 프로젝트의 복잡성이 강조되며, 위치별 및 식물별 정보를 고려해야 합니다.
     * OpenFarm 프로젝트는 몇 년 동안 작업되지 않았으며 Slack 그룹은 더 이상 활동하지 않습니다.
     * 프로젝트는 vagrant와 git을 설정해야 하기 때문에 일반인들에게 높은 진입 장벽을 가지고 있습니다.
     * 보호소에서 동물 관리를 위한 유사한 프로젝트가 있어, 다른 영역에서 지식 공유의 가능성을 나타냅니다.
     * 작물 재배의 복잡성이 언급되며, 단순한 'how to' 형식을 넘어서 많은 요소를 고려해야 합니다.
     * 웹사이트가 다운되었다는 보고가 있었으며, 이는 Hacker News로부터의 높은 트래픽 때문일 수 있습니다.
     * 실내 원예를 위한 유사한 프로젝트에 대한 관심이 있습니다.
     * 프로젝트가 Wikimedia Foundation에 의해 인수되고, 기여자들이 변형과 지식을 추가할 수 있는 좋은 웹 UI를 제공하는 것이 제안되었습니다.
"
"https://news.hada.io/topic?id=10418","Ask GN: 이번 주말에 뭐 하시나요?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Ask GN: 이번 주말에 뭐 하시나요?

   이번 주말에 뭘 하려고 계획 중인지 편하게 얘기해 보아요.

   읽을 책, 가볼 곳, 해볼 것.. 어떤 것이든 좋습니다.
   도움 요청이나 피드백 요청도 좋습니다.
   물론! 아무것도 하지 않고 쉬는 것도 훌륭합니다.

   지난 주말에 계획하셨던 일의 회고도 한번 남겨봐 주세요.

   다이소 가서 가을맞이 데스크셋업을 위한 소소한 아이템을 득템하였네요~

   앗 어떤건지 궁금합니다. ㅎ

   요즘 3D 프린터로 보드게임 도장을 만들고 있습니다. 주말엔 아마 도장만 팔듯 하네요.

   보드게임 모임에 오신 분들한테 여권을 하나씩 드리고, 거기다 플레이한 게임을 도장으로 찍어주고 있는데요.
   이쁘기도 하고 나름 수집하는 재미도 줄 수 있어서 좋은듯 합니다.

   3D 프린터에서 0.2mm 노즐로 뽑으니 도장 퀄리티가 굉장히 훌륭합니다.
   Inkscape 에서 비트맵을 벡터로 추출한뒤 svg로 저장하고
   Tinkercad 에서 3D 화 한다음 STL 로 변환해서 출력하는 과정을 거치는데요.
   이게 과정도 결과물도 재미나서 계속 만들게 되네요.

   https://www.instagram.com/p/CwEh8SRPcTN 에서 결과물을 보실 수 있습니다.

   가평에 놀러 갑니다. 여름 막바지에 가는 거일 줄 알았는데 계속 덥네요.
"
"https://news.hada.io/topic?id=10384","Home Assistant 로컬 통합을 통한 개인정보 친화적인 ESP32 스마트 도어벨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Home Assistant 로컬 통합을 통한 개인정보 친화적인 ESP32 스마트 도어벨

     * ESP32를 사용하여 개인정보 친화적인 스마트 도어벨 DIY 프로젝트와 Home Assistant 통합에 대한 기사
     * 단순하지만 많은 사용자 정의와 유연성을 제공하는 프로젝트
     * 누군가 도어벨 버튼을 누르면 스마트 도어벨이 모바일 폰으로 알림을 보냄
     * 저자는 8 RGB LED 링 라이트를 사용했지만, ESP32-CAM의 내장 LED를 플래시로 사용할 수 있음
     * 부품 목록에는 ESP32-CAM, 순간 푸시 버튼, 10k 저항, 8 RGB LED 링 라이트, 10m 마이크로 USB 케이블, M2.5 황동 인서트, M2.5 나사, eSUN 흰색 PETG 필라멘트 포함
     * 제작 가이드는 케이스 인쇄, ESPHome에서 ESP32-CAM 설정, 자동화 및 알림 설정, 배선으로 나뉘어 있음
     * 케이스는 3D 프린트되며 주요 본체, ESP32-CAM 보유 플레이트, 백 플레이트/벽 마운트로 구성됨
     * ESP32-CAM은 ESPHome에서 설정되며, 설정 코드는 저자의 GitHub 저장소에서 사용할 수 있음
     * 누군가 도어벨 버튼을 누르면 Home Assistant에서 자동화가 설정되어 도어벨의 카메라에서 스냅샷을 찍어 모바일 폰으로 보냄
     * 마지막 단계는 제공된 배선 가이드를 따라 구성 요소를 배선하는 것을 포함함
     * 저자는 설치 전 완성된 프로젝트의 이미지를 제공함
     * 기사는 제품 링크에 제휴 링크가 포함될 수 있으며, 저자의 작업을 지원하기 위해 커피를 사주는 초대로 끝남

        Hacker News 의견

     * 개인정보 친화적인 ESP32 스마트 도어벨과 Home Assistant에 대한 로컬 통합에 대한 기사
     * 사용자들은 스마트 도어벨의 비클라우드 의존성과 배터리 필요성을 제거하는 Power over Ethernet (PoE) 기능을 칭찬함
     * 일부 사용자들은 도어벨이 눌렸을 때 Home Assistant에 정보를 보내는 리드 스위치를 추가하여 기존 도어벨을 개선함
     * 스마트 도어벨의 성공은 일부 지역에서 도어벨을 필수적이라고 생각하지 않음에도 불구하고 이러한 장치에 대한 전 세계적인 필요성을 나타냄
     * 사용자들은 ESP32의 다양성과 다양한 프로젝트에 대한 잠재력 때문에 관심을 표현함
     * 일부 사용자들은 ESP32 카메라가 생성하는 이미지의 품질에 대해 우려하며, 도어벨에서 전체 해상도 이미지의 예시를 보고 싶어함
     * 사용자들은 Zooz ZEN17과 Axis Communications 제품과 같은 다른 장치도 스마트 도어벨 요구사항에 사용하며, 그들의 유연성과 Home Assistant와의 통합을 칭찬함
     * ESP32의 성능 문제에 대한 토론이 있으며, 일부 사용자들은 비슷한 전력 예산에서 더 나은 성능을 가진 새로운 버전에 대해 궁금해함
     * 일부 사용자들은 스마트 도어벨을 ZwaveJS와 Node-Red와 같은 다른 시스템과 통합하여 더 스마트한 알림과 사람 감지를 위해 사용함
"
"https://news.hada.io/topic?id=10364","백워드 호환성, Go 1.21, 그리고 Go 2","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       백워드 호환성, Go 1.21, 그리고 Go 2

     * Go 프로그래밍 언어에서의 후방 호환성 중요성에 대한 기사, Go 1.21의 새로운 기능과 Go 2의 미래에 초점
     * Go 1.21은 호환성 향상을 위한 새로운 기능 포함, Go를 안정적이고 예측 가능하게 유지하려는 목표, 개발자들이 언어의 변화보다 작업에 집중할 수 있도록
     * Go 팀은 10년 이상 호환성에 초점, Go 1 사양에 따라 작성된 프로그램이 해당 사양의 수명 동안 변경 없이 올바르게 컴파일 및 실행될 것이라는 명확한 의도
     * 호환성 유지를 위한 두 가지 주요 접근법 설명: API 체크와 테스트. API 체크는 기존 API가 제거되거나 기존 코드를 깨뜨리는 방식으로 변경되지 않도록 보장. 테스트는 다음 Go 릴리스의 개발 버전에 대해 기존 테스트를 실행하는 것을 포함
     * Google 내부에서 Go를 테스트하여 발견된 미묘한 호환성 문제의 예시 제공, 구조체 리터럴과 새로운 필드, 시간 정밀도 등
     * 호환성 문제를 출력 변경, 입력 변경, 프로토콜 변경의 세 가지 카테고리로 분류
     * Go 1.21은 GODEBUG 사용을 확장하고 공식화하여 후방 호환성 향상. GODEBUG 설정은 최소 두 년 동안 유지되며, 메인 패키지의 go.mod 파일에 나열된 Go 버전과 일치하도록 설정
     * 기사는 Go 2에 대한 업데이트로 마무리, Go 1 프로그램을 깨뜨리는 Go 2는 없을 것이라고 발표. 대신 Go 팀은 호환성을 우선시할 것이며, 이것이 Go 1을 위해 내린 가장 중요한 설계 결정이라고 믿음

        Hacker News 의견

     * 이 기사는 Go 1.21의 호환성 중요성과 잠재적인 미래 Go 2에 대해 논의합니다.
     * Go 1.21은 두 가지 독특한 기능을 제공합니다: 각 변경에 대한 GODEBUG 설정과 이전 구현의 사용 감지를 위한 메트릭, 그리고 자동으로 이전 및 새로운 go toolchains를 가져오는 모듈별 toolchain 버전.
     * 특정 버전의 Go가 지정되면, 새로운 Go 버전은 자동으로 관련 opt-out 구성을 적용하여, 새로운 동작이 요청될 때까지 적용되지 않도록 합니다.
     * Go 언어 팀은 후진 호환성을 유지하는 데 헌신하고 있으며, 이는 대규모 Go 시스템을 유지하는 개발자들에게 인정받고 있습니다.
     * 일부 사용자들은 타입 시스템에 대한 중요한 개선이 파괴적인 변경을 필요로 할 수 있다는 우려를 표현합니다.
     * Go가 실제 Go 2를 가지지 않도록 제안하는데, 중요한 변경이 언어의 분기 및 이름 변경을 요구할 수 있기 때문입니다.
     * ""지루하다""고 묘사되는 Go의 안정성과 예측 가능성은 파편화되고 끊임없이 변화하는 JavaScript 생태계와 대비됩니다.
     * 이 기사는 또한 ""Go 1.21에서의 전방 호환성 및 Toolchain 관리""에 대한 관련 게시물을 언급합니다.
     * Go에서의 후진 호환성에 대한 헌신은 칭찬받으며, 한 사용자는 Python에서 Go로 코드를 전환하는 것이 어떻게 그들의 확장을 도왔는지 공유합니다.
     * 호환성을 보장하기 위해 Go에서 사용하는 기법들은 존경받고, 다른 언어 설계에서 사용을 고려하고 있습니다.
"
"https://news.hada.io/topic?id=10379","LLaMa.cpp가 어떻게 가능할까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          LLaMa.cpp가 어떻게 가능할까?

     * LLaMa 추론 코드를 순수 C++로 재작성한 LLaMA.cpp 덕분에 Pixel5, M2 맥북프로, Raspberry Pi 등 다양한 하드웨어에서 실행 가능
     * 대형 모델이 일반적으로 비싼 GPU를 필요로 하는데, 이것이 어떻게 가능할까?
     * GPU는 그들의 큰 메모리 대역폭과 계산 능력 때문에 딥러닝에 유리하지만, 메모리 대역폭이 종종 추론의 병목이 됨
          + 실제 계산을 위해서는 HBM 메모리(RAM)에서 온칩 메모리로 옯겨야 하기 때문
     * LLaMa 가중치를 위한 램 사용량에 있어서 Quantization(양자화)가 중요함
          + 정밀도를 낮추면 모델을 메모리에 저장하는 데 필요한 메모리 양을 획기적으로 줄일 수 있음
          + 양자화를 통해 모델을 저장하는 데 필요한 메모리 양을 줄여 표준 데이터센터 GPU 및 고급 소비자 GPU에 메모리에 맞출 수 있게 함
     * 메모리 대역폭은 트랜스포머의 샘플링과 관련된 거의 모든 작업에서 제한 요인임
     * 양자화 등과 같은 방법으로 메모리 요구사항을 줄이게 되면 훨씬 쉽게 서빙이 가능
     * 이게 distllation 이나 ""더 작은 모델들을 더 길게 훈련""하는 또 다른 이유임

   로컬머신에서 LlamaCpp 로 llama2를 불러와 임베딩 테스트를 해봤습니다.

   https://breezymind.com/llamacpp-embedding

   HN의 첫번째 댓글이 유용하네요

     ""궁금해하시는 분들을 위해 말씀드리자면, 모델을 정량화할 때 비용이 발생합니다.
     https://oobabooga.github.io/blog/posts/perplexities/

     기본적으로 정확도가 약간 떨어지고 이상한 답변이 나올 수 있으며 예상을 벗어나거나 환각을 일으킬 가능성이 높아집니다. 하지만 매개변수가 많을수록 품질 손실은 줄어듭니다. 따라서 모델 크기가 매우 큰 경우 그 차이는 무시할 수 있을 정도입니다. 또한 이것은 추론에 드는 비용일 뿐입니다. 훈련은 완전히 다른 문제이며 훨씬 더 많은 파워가 필요합니다.

     그럼에도 불구하고 우리는 하나의 서버 랙에서 GPT3 수준의 성능을 보고 있습니다. 불과 1년 전만 해도 이러한 AI는 말 그대로 마법과도 같았고 대규모 데이터센터에서만 실행할 수 있었던 것을 생각하면 대단한 성과입니다. 대역폭과 메모리 크기는 아마도 제 무식한 생각으로는 원시 컴퓨팅보다 늘리기가 더 쉬울 것이므로 곧 실제로 ""스마트""한 장치를 갖게 될지도 모릅니다.""

        Hacker News 의견

     * 모델을 양자화하는 비용에 대한 기사, 이로 인한 정확도 손실 및 비정상적인 반응 가능성. 그러나 모델의 매개변수가 많을수록 이 손실은 덜 중요해짐.
     * GPT3의 뛰어난 성능을 강조하는 기사, 이제 단일 서버 랙에서 작동 가능, 이는 작년 대규모 데이터 센터가 필요했던 AI에 비해 큰 개선.
     * 토큰 생성이 직렬이며 대역폭에 제한되지만, 프롬프트 삽입은 그렇지 않고 512+의 배치에서 실행 가능하다는 내용을 지적하는 텍스트.
     * Llama.cpp는 이제 복잡도에 크게 영향을 미치지 않는 ~4비트 양자화를 가짐. Q6_K는 FP16과 거의 같은 복잡도를 가지지만 훨씬 작음.
     * Llama.cpp의 진정한 마법은 모델 분할로, 작은 이산 GPU가 프롬프트 삽입과 모델 추론의 일부를 완전히 오프로드할 수 있게 함. 이것은 생성적 AI 영역에서 독특함.
     * GPU 백엔드(OpenCL, Metal, CUDA, 곧 ROCm 및 Vulkan)는 Llama.cpp를 실행하는 데 선호되는 방법. 이들 없이는 데스크톱에서 70B를, 또는 16GB RAM이 있는 노트북에서 33B를 실행하는 것은 불가능.
     * Go, Python, 그 외 런타임과의 확장성이 용이함으로써 프로젝트가 칭찬받음. 이를 이용해 Go로 여러 모델을 끌어오고 실행하며, REST API에서 제공하는 도구가 만들어짐.
     * AVX2가 있는 현대 CPU에서 추론을 실행하는 것은 GPU보다 느리지만, 단일 긴 연속적인 RAM 영역을 가질 수 있다는 이점을 제공. 그러나 4비트로 양자화하고 x86_64 CPU에서 fp32 이외의 것으로 추론을 실행하는 옵션이 없다는 것은 큰 단점.
     * 기사에서는 단일 Pi4 8gig에서 13B 데이터셋, 세 개의 pi4 노드에서 65B 데이터셋의 성공적인 복제를 언급, 이 기법의 접근성을 보여줌.
     * 기사는 대기 시간 숫자를 논할 때 단위를 대충 다루는 것에 대해 비판받음.
     * 기사는 대부분의 작업 부하가 메모리에 제한되어 있을 때 칩 제조업체가 칩에 많은 기능 단위를 포함하는 이유에 대해 질문을 제기함.
     * 기사는 Hacker News 외부에서 흔히 찾을 수 없는 독특한 내용에 대해 칭찬받음.
     * 텍스트는 메모리 제한 토큰 생성의 트랜스포머 디코더에서의 한계를 논하고, 미래의 하드웨어 친화적 모델을 기대함.
     * 기사는 특수 하드웨어가 중요한 메모리 대역폭 병목 현상을 고려하여 왜 그런 방식으로 설계되었는지, 그리고 소프트웨어 패러다임 변화가 이 균형을 바꿀 수 있을지에 대해 의문을 제기함.
"
"https://news.hada.io/topic?id=10383","Htmx는 GitHub Accelerator의 일부분","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Htmx는 GitHub Accelerator의 일부분

     * 기사는 htmx가 GitHub Open Source Accelerator의 첫 번째 클래스에 편입되었다고 발표합니다.
     * 이 편입은 htmx가 성공적인 오픈 소스 개발자와 프로젝트와 협력하고 배울 수 있는 중요한 기회를 제공합니다.
     * htmx 팀은 이 기회를 활용하여 htmx 2.0 작업을 시작하고 htmx를 전업으로 전환하는 가능성을 탐색할 계획입니다.
     * 이 기사는 GitHub 가속기의 일부인 다른 오픈 소스 프로젝트도 소개하고 있습니다:
          + BoxyHQ: 엔지니어링 팀이 준수해야 하는 클라우드 애플리케이션을 더 빠르게 구축할 수 있도록 돕는 보안 및 개인정보 보호 API 세트.
          + Cal.com: 왕래 이메일 없이 회의를 조직하는 스케줄링 도구.
          + Crowd.dev: 커뮤니티, 제품, 고객 데이터를 중앙화하는 플랫폼.
          + Documenso: DocuSign에 대한 오픈 소스 대안.
          + Erxes: HubSpot에 대한 오픈 소스 대안.
          + Formbricks: 사용자 세그먼트를 조사하고 타겟팅된 마이크로 설문을 통해 인사이트를 수집하는 도구.
          + Forward Email: 사용자 정의 도메인을 위한 무료 이메일 전달 서비스.
          + GitWonk: 오픈 소스 기술 문서화 도구.
          + Hanko: 오픈 소스 인증 및 사용자 관리 도구.
          + Infisical: 팀, 장치, 인프라 간에 비밀과 설정을 관리하는 암호화된 플랫폼.
          + Novu: 개발자를 위한 오픈 소스 알림 인프라.
          + OpenBB: 투자 연구를 위한 오픈 소스 금융 생태계.
          + Sniffnet: 인터넷 트래픽을 추적하는 네트워크 모니터링 도구.
          + Typebot: 독특한 채팅 경험을 만드는 도구.
          + Webiny: 오픈 소스, 엔터프라이즈급 서버리스 CMS.
          + Webstudio: Webflow에 대한 오픈 소스 대안.
     * 기사는 htmx의 핵심 기능인 하이퍼텍스트에 대한 그리움을 표현하는 시구로 마무리됩니다.

        Hacker News 의견

     * 인기 웹 개발 도구인 htmx의 창시자가 기술에 대한 질문에 답변하기 위해 토론에 참여하였습니다.
     * Fireship Dev의 비디오와 인기 Twitch 스트리머인 ThePrimeagen의 일련의 비디오 덕분에 최근 htmx가 인기를 얻었습니다.
     * 창시자는 htmx와 하이퍼미디어에 대한 여러 에세이를 작성하였으며, 이는 htmx 웹사이트에서 확인할 수 있습니다.
     * 창시자는 또한 하이퍼미디어, htmx, 그리고 Hyperview라는 모바일 하이퍼미디어에 대한 책을 공동 저술하였습니다.
     * 창시자는 htmx 뒤의 깊은 개념이 하이퍼미디어라고 믿으며, 이는 일상 프로그래밍에서 사용되지 않더라도 탐색할 가치가 있다고 생각합니다.
     * 사용자들은 htmx의 단순성과 유연성을 칭찬하며 그들의 긍정적인 경험을 공유하였습니다.
     * 일부 사용자들은 htmx가 웹 개발이 진화해야 할 방향을 대표하며, 그 기능이 HTML과 브라우저 클라이언트에 통합되기를 바란다고 생각합니다.
     * 사용자들은 htmx를 Angular, React, ClojureScript 등 다른 웹 개발 도구와 프레임워크와 비교하였습니다.
     * 일부 사용자들은 htmx가 복잡한 클라이언트 측 작업을 처리하는 능력에 대해 우려를 표현하며, 하이브리드 접근법이 필요할 수 있다고 제안하였습니다.
     * 사용자들은 또한 그들의 프로젝트에서 htmx를 사용한 경험을 공유하였으며, 일부는 이를 재미있고 보람찬 경험으로 발견하였습니다.
     * 일부 사용자들은 현대 웹 앱/사이트에서 사용자들이 기대하는 복잡한 기능을 처리하는 htmx의 능력에 대해 회의적인 의견을 표현하였습니다.
     * htmx를 사용할 때 컨트롤러에서 사용자 정의 미들웨어의 필요성과 hx-trigger 이벤트의 관리에 대한 우려가 있습니다.
     * 사용자들은 htmx의 ""plain old HTML"" 접근법에 대한 감사의 마음을 표현하였으며, 이를 복잡한 프론트엔드 JavaScript 프레임워크로부터의 상쾌한 변화로 보았습니다.
     * 일부 사용자들은 인상적인 ""htmx로 만든"" 예시가 도구의 잠재력을 보여주고 새로운 웹 경험의 클래스를 영감을 줄 수 있을 것이라고 믿습니다.
"
"https://news.hada.io/topic?id=10413","부드러운 애니메이션 시작/종료를 위한 4개의 신규 CSS 기능들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  부드러운 애니메이션 시작/종료를 위한 4개의 신규 CSS 기능들

     * 크롬 116/117 부터 4개의 새로운 웹 플랫폼 기능을 지원
     * 키프레임 타임라인에서 display, content-visiblity 사용 가능
     * transition-behavior 속성에 allow-discrete 지원
     * @starting-style 로 시작 이펙트 지정가능
     * 애니메이션 중 탑레이어에 overlay 속성 지원
"
"https://news.hada.io/topic?id=10446","Show HN: 20달러 영수증 프린터로 작동하는 항공 네비게이션 로그","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Show HN: 20달러 영수증 프린터로 작동하는 항공 네비게이션 로그

     * 항공 학생인 Carlos가 20달러 영수증 프린터를 이용해 항공항법 로그를 출력하는 혁신적인 솔루션에 대한 기사.
     * Carlos는 유럽에서 상업용 라이센스를 공부하고 있으며, 현재 60년대 후반의 Piper PA28 비행기로 훈련 중.
     * 이 비행기는 단일 조종사 운용이며, 조종사가 항법, 통신, 비행을 모두 담당하는 것이 필요로 하는 어려운 작업.
     * Carlos는 비행 중 체크리스트, 지도, 항법 로그 등 다양한 문서를 관리하기 위해 무릎판을 사용.
     * 항법 로그, 또는 Nav log는 중요한 정보를 담고 있는 한 지점에서 다른 지점까지의 지시사항이 담긴 문서.
     * Carlos는 브라우저 도구를 사용해 Nav log의 대부분 필드를 자동으로 채우고, 이를 무릎판 Nav log에 손으로 복사.
     * 공간 부족 문제를 해결하기 위해, Carlos는 영수증 프린터를 구입하고 git 프로젝트를 만들어 Nav log를 영수증 형식으로 출력.
     * SkyVector라는 비행 계획 도구에서 Nav log를 가져오는 스크립트를 작성하고, regex, 문자열 분할, 수학적 계산을 이용해 데이터를 Python dictionary/JSON 형식으로 변환.
     * 이 JSON은 PHP 파일로 내보내져 영수증 프린터에서 텍스트를 형식화하는 데 사용.
     * Carlos는 영수증으로 출력된 Nav log가 비행 중 빠르고 쉽게 참조할 수 있으며, 레슨 계획을 출력하는 데도 사용.
     * Carlos는 향후 스크립트를 개선할 계획이며, 레슨 계획에 QR 참조와 같은 기능을 추가할 수도 있음.

        Hacker News 의견

     * $20 영수증 프린터로 출력된 항공항법 로그에 대한 기사
     * 열로 인해 종이가 읽히지 않는 문제, 특히 더운 환경이나 직사광선 아래에서의 문제
     * 영수증 프린터와 잘 어울릴 수 있는 롤 차트 사용 제안, 이는 주로 모터사이클 핸들바에 장착되어 방향을 제공하는 장치
     * 항공항법 로그를 위해 영수증 프린터를 사용하고 조종석의 윈드실드 기둥을 영수증 출력 공간으로 변환하는 저자의 창의성 칭찬
     * 항공 기술의 진화 강조, 기술의 혁신적인 사용에 대해 저자가 칭찬받음
     * 몇 년 전에 만들어진 도구 언급, Epson 열 프린터를 사용하여 영수증 테이프에 긴 차트를 출력
     * 저자가 ForeFlight 또는 Garmin Pilot을 탐색해보는 것이 제안됨, 이는 그들의 항법 과정을 혁신할 수 있음
     * Foreflight 비행 계획을 프린터 설정에 통합하는 가능성에 대한 질문 제기
     * 약어 사용에 대한 저자의 접근 방식이 좋아짐, 이는 프로젝트에 재미 요소를 추가했다는 것을 나타냄
"
"https://news.hada.io/topic?id=10474","Firefox에서 이용 가능해진 uBlock Origin Lite","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Firefox에서 이용 가능해진 uBlock Origin Lite

     * uBlock Origin Lite가 이제 Firefox 브라우저의 확장 프로그램으로 사용 가능
     * 광고, 트래커, 채굴기 등을 차단하는 permission-less MV3 기반 콘텐츠 차단기
     * 기본 규칙 세트는 uBlock Origin의 기본 필터 세트에 해당하며, 이에는 uBlock Origin의 내장 필터 목록, EasyList, EasyPrivacy, 그리고 Peter Lowe의 광고 및 추적 서버 목록이 포함
     * 사용자는 옵션 페이지를 방문하고 팝업 패널에서 Cogs 아이콘을 클릭하여 더 많은 규칙 세트를 추가할 수 있음
     * uBOL은 완전히 선언적이므로, 필터링이 이루어지기 위해 uBOL 프로세스를 계속 실행할 필요가 없으며, CSS/JS 주입 기반 콘텐츠 필터링은 확장 프로그램이 아닌 브라우저 자체에서 안정적으로 수행됨
     * 이는 콘텐츠 차단이 진행되는 동안 uBOL 자체가 CPU/메모리 자원을 소비하지 않음을 의미 -- uBOL의 서비스 워커 프로세스는 팝업 패널이나 옵션 페이지와 상호작용할 때만 필요
     * uBOL은 설치 시점에 넓은 ""읽기 및 수정 데이터"" 권한을 요구하지 않으므로, 설치 시점에 넓은 ""읽기 및 수정 데이터"" 권한을 요구하는 uBlock Origin 또는 다른 콘텐츠 차단기에 비해 기능이 제한적
     * 그러나, uBOL은 사용자가 선택한 특정 사이트에서 확장 권한을 명시적으로 부여할 수 있도록 하여, 이러한 사이트에서 코스메틱 필터링 및 스크립트 주입을 사용하여 더 나은 필터링을 수행 가능
     * 주어진 사이트에서 확장 권한을 부여하려면, 사용자는 팝업 패널을 열고 Optimal 또는 Complete과 같은 더 높은 필터링 모드를 선택해야함
     * 그런 다음 브라우저는 확장 프로그램이 현재 사이트에서 요청하는 추가 권한을 부여하는 것의 효과에 대해 사용자에게 경고하며, 사용자는 브라우저에게 요청을 수락할지 거부할지 알려야 함
     * 사용자가 현재 사이트에서 uBOL의 추가 권한 요청을 수락하면, 현재 사이트의 콘텐츠를 더 잘 필터링할 수 있게됨
     * 사용자는 uBOL의 옵션 페이지에서 기본 필터링 모드를 설정할 수 있음. 기본 모드로 Optimal 또는 Complete 모드를 선택하면, 모든 웹사이트에서 데이터를 읽고 수정하는 권한을 uBOL에 부여해야함
     * 이 확장 프로그램의 최종 목표는 설치 시점에 넓은 호스트 권한을 요구하지 않고 -- 확장 권한은 사용자가 사이트별로 명시적으로 부여
     * 신뢰성과 CPU/메모리 효율성을 위해 완전히 선언적으로 구현
     * 이 확장 프로그램은 아직 개발 중임

        Hacker News 의견

     * 새로운 uBlock Origin Lite가 이제 Firefox에서 사용 가능하며, 이는 WebExtensions Manifest V3를 기반으로 합니다.
     * 이 버전은 실시간 요청 차단의 필요성을 제거하는 선언적인 차단을 구현합니다.
     * Lite 버전은 권한이 없는 디자인으로 인해 중요한 보안 개선을 이루며, 제3자 개발자가 손상된 업데이트를 푸시하는 위험을 줄입니다.
     * 일부 사용자들은 광고 차단에 위협으로 보이는 Manifest V3에 대한 지원을 의문시합니다.
     * 광고 차단기의 사용에 대한 윤리에 대한 논란이 있으며, 일부는 광고 지원 웹사이트를 완전히 피하는 것이 더 윤리적일 것이라고 제안합니다.
     * 사용자들은 새로운 Lite 버전과 원래의 Firefox용 uBlock Origin 애드온 간의 차이점에 대해 궁금해합니다.
     * Lite 버전의 리소스 강도, YouTube 광고 차단 능력, Safari로 이식 가능성에 대한 의문이 제기됩니다.
     * 새 버전은 권한이 더 적기 때문에 Chrome과의 직접적인 행동 비교를 허용합니다.
     * 광고 차단기의 하드웨어 버전, 예를 들어 광고용 JavaScript를 차단하는 Raspberry Pi 장치에 대한 제안이 있습니다.
     * Lite 버전은 기본적으로 선언적인 콘텐츠 차단기를 제공하며, 특정 사이트에 대해 전체 uBlock Origin 기능을 활성화할 수 있는 옵션을 제공하는 좋은 타협점으로 보입니다.
     * 사용자들은 이 버전이 Safari로 이식될지에 대해 관심이 있습니다.
"
"https://news.hada.io/topic?id=10380","Opendream: Stable Diffusion을 위한 레이어 기반 UI","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Opendream: Stable Diffusion을 위한 레이어 기반 UI

     * Opendream은 이미지 생성 AI인 Stable Diffusion에서 작업 흐름을 향상시키도록 설계된 웹 기반 사용자 인터페이스(UI)
     * 레이어링, 비파괴 편집, 포터빌리티, 그리고 쉽게 만들고 사용가능한 Extension과 같은 기능을 Stable Diffusion 생태계에 제공
     * 비파괴 편집: 사용자가 이전 작업을 덮어쓰지 않고 조정하고 수정 가능
     * 현재의 작업 흐름을 나중에 열거나 협업자와 공유할 수 있는 이동 가능한 파일 형식으로 저장할 수 있음
     * 새로운 Extension을 쉽게 작성하고 사용 가능. (Automatic1111과 같은 플랫폼들보다 크게 개선된 것)
          + dream과 mask_and_inpaint 기본 오퍼레이션을 내장
          + 추가로 instruct_pix2pix, controlnet_canny, controlnet_openpose, sam (Segment Anything) 같은 확장들 기본 제공

        Hacker News 의견

     * 'Opendream'에 대한 기사, 안정적인 확산을 위한 계층 기반 UI
     * 일부 사용자들은 Gimp, Photoshop, Krita, Figma와 같은 기존 이미지 편집기에 안정적인 확산 기능을 내장하는 것을 제안하며, 이들은 이미 계층화된 비파괴 기능을 가지고 있음
     * 첫 번째 세대 Stable Diffusion 프론트엔드는 특정한 디자인 철학을 가지고 있으며, Opendream과 ComfyUI와 같은 새로운 도구들이 이 접근법에 도전하는 것이 흥미롭다
     * 일부 사용자들은 model_ckpt 필드에서 사용된 모델과 그 정보를 어디서 찾을 수 있는지에 대해 궁금해함
     * Opendream의 기능이 다소 복잡하긴 하지만 더 능력있어 보이는 automatic1111과 같은 다른 도구에 비해 어떤지에 대한 우려가 있음
     * 사용자들은 자동 마스킹을 위해 알파 채널이 있는 이미지에서 모델을 훈련시킬 가능성과 도구가 생성에서 다른 보이는 계층의 컨텍스트를 사용하는지에 대해 관심이 있음
     * SD XL 지원 추가 가능성에 대한 질문과 사용자들이 자신의 이미지를 가진 계층을 추가할 수 있는지에 대한 질문이 있음
     * 사용자들은 이 기술의 잠재력에 대해 흥분하며, 특히 만화와 애니메이션의 창작에 있어서 그렇다
     * Opendream이 LoRa를 지원하는지 또는 가까운 미래에 그렇게 될 것인지에 대한 질문이 있음
     * Opendream이 LoRAs를 처리할 수 있다면, 일부 사용자들은 이를 시도해 보는데 관심이 있음을 표현함
"
"https://news.hada.io/topic?id=10467","우리 모두는 잠시만 능력을 가진 존재","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          우리 모두는 잠시만 능력을 가진 존재

     * “We’re All Just Temporarily Abled”라는 Cindy Li의 견해에 대한 개인적인 성찰이 담긴 기사
     * 저자가 휴가 중 무릎을 다치고 장기간 회복 기간을 거치며 이동 능력이 제한된 사건을 회고
     * 이 경험으로 인해 저자는 일상생활에서의 접근성 기능, 예를 들어 난간, 경사로, 엘리베이터 등을 더욱 인식하게 됨
     * 저자는 Sarah의 강의에서 나온 통계를 인용, 현재 5명 중 1명이 장애를 가지고 있으며, 모든 사람이 평생에 걸쳐 어떤 형태의 장애를 경험할 것이라고 주장
     * 저자의 경험은 능력이 이분법적이지 않고 유동적이며, 사람의 생애를 통해 변화한다는 것을 이해하게 함
     * 저자는 회복 기간 동안 책상에서 일할 수 있는 특권을 인정하고, 이제는 인지하게 된 접근성 기능과 이를 가능하게 하는 사람들에 대한 감사의 마음을 표현

   We’re All Just Temporarily Abled 는 정말 적절한 표현이네요.
   접근성은 계속 강조되어야 하는 주제라고 생각합니다.

        Hacker News 의견

     * 웹 디자인에서 접근성 고려의 중요성에 대한 기사, 시각 장애인 사용자가 사이트의 화려한 날짜 선택 도구를 사용하는 데 어려움을 겪은 경험을 중심으로.
     * 한 사용자가 음악 축제 후 장애를 얻게 된 경험을 공유하며, 건강 관리의 중요성을 강조.
     * 웹 UX에서 종종 간과되는 지적 장애에 대한 기사, 커피를 마시기 전이나 스트레스가 높은 시기와 같은 지적 능력이 감소하는 순간이 모두에게 있다는 제안을 함.
     * 한 사용자가 아버지의 갑작스러운 암으로 인한 사망에 대한 개인적 이야기를 공유하며, 건강의 불확실성과 기회를 잡을 수 있는 동안 기회를 잡는 것의 중요성을 강조.
     * 장애에 대한 사회적 태도에 대한 논의가 이어지며, 한 사용자는 장애를 개인의 실패가 아닌 사회적 비용으로 보아야 한다고 제안.
     * 한 사용자가 오토바이 사고 후 마비 환자가 된 이야기를 공유하며, 장애의 생활 변화의 영향과 긍정적인 태도의 중요성을 강조.
     * 뇌졸중이 의사소통과 고용에 미치는 영향에 대한 논의가 이어지며, 의사소통이 불가능한 사람들에게 더 많은 지원이 필요하다는 것을 강조.
     * 능력을 이분법이 아닌 스펙트럼으로 보는 개념에 대한 기사, 모두가 다른 수준의 능력과 장애를 가지고 있다는 제안을 함.
     * 접근성을 위한 디자인의 중요성이 강조되며, 모든 사람이 일상생활에서 일시적인 장애를 경험한다는 주장을 함.
"
"https://news.hada.io/topic?id=10398","나를 죽이려 한 시도들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              나를 죽이려 한 시도들

     * 러시아 기자 엘레나 코스튜첸코의 개인적인 경험담, 그녀는 우크라이나 전쟁 보도로 인해 암살 대상이 되었다고 믿음
     * 코스튜첸코는 17년 동안 노바야 가제타에서 일하며 2022년에 우크라이나에서 네 번의 보고서를 발표함
     * 그녀는 우크라이나의 도시 마리우폴로 여행 계획 중 체첸의 로스가르디아 부대인 카디로비츠로부터 암살 시도 경고를 받았다고 설명함
     * 경고에도 불구하고 코스튜첸코는 처음에는 계획을 계속하려 했지만, 2022년 4월 1일에 건강 문제로 우크라이나를 떠남
     * 그녀는 후에 베를린으로 이동하여 Meduza 웹사이트에서 일하기 시작했지만, 건강 상태는 계속 악화됨
     * 여러 차례의 의료 검사 후, 의사들은 그녀가 중독되었을 수 있다는 추측을 제시했으나, 코스튜첸코는 처음에는 이를 무시함
     * 그러나 그녀는 후에 인사이더 편집장 로만 도브로호토프와 벨링캣의 크리스토 그로제프가 유럽에서 여성 러시아 기자들을 대상으로 한 일련의 중독 사건을 조사하고 있다는 것을 알게 됨
     * 베를린 검찰총장 사무실은 처음에는 그녀의 사건에 대한 조사를 중단했으며, 중독의 명확한 증거가 없다고 주장했지만, 후에 다시 조사를 재개함
     * 코스튜첸코의 책 ""I Love Russia""는 그녀의 우크라이나 및 기타 지역에서의 보도를 포함하고 있으며, 이번 가을에 펭귄 프레스에서 출간 예정임
     * 그녀는 동료들과 친구들, 해외에 사는 활동가들과 정치적 난민들에게 조심하라는 호소로 그녀의 경험담을 마무리하며, 러시아의 정권 변경이 이루어질 때까지 그들은 안전하지 않다고 믿음

        Hacker News 의견

     * 기사는 현대 연결된 세계에서, 특히 러시아와 같은 권위주의 체제로부터 언론인들이 직면하는 위험에 대해 논의한다.
     * 댓글에서는 세계 사안에 대해 잘 알고 있음에도 불구하고 러시아 비밀 서비스의 잠재적 목표로 자신을 간주하지 않았던 한 언론인의 충격과 불신을 강조한다.
     * 댓글은 이러한 사건이 자신들의 땅에서 발생하게 된 것에 대해 독일 반테러 병력을 비판한다.
     * 일부 댓글은 이야기에 대한 회의론을 표현하며, 이것이 거짓으로 표시되었을 수 있거나 FSB 보안 기구의 역량을 의심한다는 것을 제안한다.
     * 댓글은 또한 러시아의 권위주의 체제의 역사적 맥락을 논의하며, 이것이 수세기 동안 지속적으로 존재했다는 것을 제안한다.
     * 댓글에서는 용감한 저널리즘으로 알려진 러시아 신문인 Novaya Gazeta가 보고된 바와 같이 폐지되었다고 언급한다.
     * 일부 댓글은 이야기의 플래그 해제를 요청하며, 이것이 플랫폼에서 부적절하게 표시되었거나 플래그가 표시되었다는 것을 나타낸다.
"
"https://news.hada.io/topic?id=10407","크롬 브라우저가 AI를 이용해 전체 기사를 요약 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     크롬 브라우저가 AI를 이용해 전체 기사를 요약 예정

     * 구글의 AI기반 Search Generative Experience(SGE)에 도입 되는 새 기능
     * 방문하는 웹페이지에서 ""Generate"" 버튼을 통해서 AI가 정리한 ""핵심 요약(Key Points)"" 보기 지원
     * iOS/Android 부터 출시하며, 크롬 데스크탑에도 도입할 것
     * 대중에게 무료로 제공되는 기사에만 동작하며 페이월 기사는 지원하지 않음
     * 과학, 경제, 역사등의 특정 단어에 대한 정의 및 관련 이미지 보기 팝업도 제공 예정

   와! Short form text이 될지도 모르겠군요
"
"https://news.hada.io/topic?id=10451","크리스 노바 사망","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               크리스 노바 사망

     * 기술 커뮤니티의 주요 인물인 크리스 노바의 안타까운 별세를 알리는 기사.
     * 크리스 노바는 Hachyderm과 Nivenly 창조에 영감을 준 리더이자 멘토였습니다.
     * 노바의 비전과 사명은 그녀의 별세 후에도 커뮤니티를 계속해서 이끌고 있습니다.
     * Nivenly를 넘어서, 노바는 전문성과 강력한 비전의 유산을 남겼습니다.
     * 현재 Nivenly 커뮤니티는 이 손실을 처리하면서 앞으로 어떻게 나아갈지 결정하는 데 시간이 필요하다고 요청하고 있습니다.
     * 커뮤니티는 노바가 원했을 것이라고 믿기 때문에 앞으로 나아가기로 결심했습니다.

        Hacker News 의견

     * 기술 산업의 주요 인물이자 오픈소스 지지자인 크리스 노바가 별세하였습니다.
     * 그녀는 코드 작성에 대한 열정, 커뮤니티 육성, 그리고 모든 사람들에게 기술을 접근 가능하게 하는 데 알려져 있었습니다.
     * 크리스는 또한 그녀의 활기찬 성격과 협업에 대한 헌신으로 인정받았습니다.
     * 그녀의 Hachyderm 작업과 Mastodon 및 Fediverse에 대한 견해는 매우 높이 평가되었습니다.
     * 크리스의 오픈소스 세계에 대한 영향력과 많은 개인에 대한 그녀의 개인적인 영향은 잊혀지지 않을 것입니다.
     * 그녀는 또한 그녀의 영감적인 존재와 기술자로서의 역할로 알려져 있었습니다.
     * 크리스의 최근 프로젝트인 AURAE는 그녀가 기술 커뮤니티에 기여한 것을 증명합니다.
     * 그녀는 능력, 개방성, 그리고 낮은 드라마로 Mastodon 인스턴스를 운영하는 데 대해 칭찬받았으며, 이는 위대한 엔지니어의 품질을 구현합니다.
     * 크리스의 갑작스러운 사망으로 기술 커뮤니티는 충격과 애도에 빠져 있으며, 많은 사람들이 그녀에 대한 슬픔을 표현하고 그녀와의 추억을 공유하고 있습니다.
     * 그녀의 시기상조한 사망에도 불구하고, 크리스의 정신과 기여는 커뮤니티 주도형 혁신을 믿는 사람들을 계속해서 영감을 주게 될 것입니다.
"
"https://news.hada.io/topic?id=10386","모던 CSV 버전 2","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              모던 CSV 버전 2

     * Modern CSV 2의 여러 개선 사항과 새로운 기능들이 출시되었습니다.
     * **사용자 인터페이스(UI)**와 사용자 경험이 개선되었으며, 이는 주로 환경 설정 및 파일 메타데이터 영역에 초점을 맞추었습니다.
          + 환경 설정은 이제 더 직관적인 창을 가지고 있어, 실수의 가능성을 줄였습니다.
          + 파일 메타데이터는 이제 전용 패널을 통해 조정할 수 있어, 파일 매개변수와 헤더 설정 변경이 더 쉬워졌습니다.
     * 새 버전은 기존의 밝은 테마와 어두운 테마에 더해 Dracula, Solarized Light, Solarized Dark 등 여러 새로운 테마를 도입했습니다.
     * 성능이 크게 향상되었습니다.
          + 로딩 시간이 거의 절반으로 줄었습니다.
          + 읽기 전용 모드에서 큰 파일을 로딩하는 것이 거의 20% 더 빨라졌습니다.
          + 많은 열이 있는 파일을 로딩하는 것이 90% 이상 빨라졌습니다.
     * 사용자들이 요청한 대부분의 기능을 포함한 새로운 유용한 기능들이 추가되었습니다.
          + 이에는 검색 작업의 모든 결과를 선택하는 기능, 새 인스턴스를 열기, 몇 개의 열을 기반으로 행을 중복 제거, 셀 범위를 재구성 등이 포함됩니다.
     * 문서가 업데이트되어 이제 더욱 포괄적이며, 여러 페이지, 우수한 탐색 및 검색 기능을 갖추고 있습니다.
     * Modern CSV 2는 이제 Native Apple Silicon (ARM – M1, M2)와 호환되어 Rosetta가 필요 없어졌습니다.
     * 사용자들은 공식 웹사이트에서 Modern CSV 2를 다운로드하거나 버전 1에서 업그레이드할 수 있습니다.

        Hacker News 의견

     * Modern CSV는 Windows, Mac, Linux를 위한 표 형식 파일 편집기/뷰어입니다.
     * 이 소프트웨어는 간단한 가격 모델과 유익한 블로그 게시물로 인해 호평받고 있습니다.
     * 사용자들은 ""MySQL 테이블에서 붙여넣기"" 도구 추가, CSV 붙여넣기 기능 개선, 무료 버전에서 사용할 수 없는 기능 표시 등의 개선을 제안하였습니다.
     * Linux 버전을 Flatpak으로 출시하여 검색 가능성을 높이는 것을 제안하였습니다.
     * MacBook M2에서의 스크롤 기능에 대한 불만을 표현하며, 개선이 필요하다고 제안하였습니다.
     * 일부 사용자들은 Modern CSV를 Visidata와 TAD와 같은 다른 소프트웨어와 비교하였습니다.
     * 인도의 모바일 사이트에서 가격에 사용된 통화에 대한 명확성 요청이 있습니다.
     * 사용자들은 UI 디자인, 특히 ""Solarized Dark Theme""의 낮은 대비와 위젯의 일관되지 않은 패딩을 비판하였습니다.
     * 현재의 다크 모드가 눈에 힘들다고 판단되어, 기본 테마를 라이트 모드로 변경하는 것을 제안하였습니다.
"
"https://news.hada.io/topic?id=10362","Zep - LLM/Chatbot을 위한 장기 메모리 저장소 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Zep - LLM/Chatbot을 위한 장기 메모리 저장소

     * LLM 앱의 프롬프트에 관련 문서, 채팅 히스토리, 메타 데이터 등을 추가 가능
     * 하이브리드 검색 가능한 벡터 데이터베이스
     * 자동 텍스트 임베딩
     * 로컬 임베딩 모델과 비동기 동작으로 빠르고, 레이턴시 작은 API 제공
     * Python & TypeScript/JS SDK
     * LangChain 및 LangChain.js 연동
"
"https://news.hada.io/topic?id=10428","GIL 제거 및 더 빠른 CPython 프로젝트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GIL 제거 및 더 빠른 CPython 프로젝트

     * Python Global Interpreter Lock (GIL)은 여러 스레드를 사용하는 프로그램의 성능 향상을 저해하는 주요 장애물이었다.
     * 2021년 10월, Sam Gross는 GIL이 없는 Python의 개념 증명 버전을 소개했으나, 초기에는 열광적인 반응을 얻었지만 1년 넘게 큰 진전이 없었다.
     * Python Steering Council은 이제 no-GIL 기능을 통합할 의향을 발표했다.
     * 2021년 중반에 시작된 Faster CPython 프로젝트는 Python 인터프리터의 단일 스레드 성능을 향상시키는 데 초점을 맞추고 있다.
     * 올해 PyCon에서 Faster CPython 팀의 두 멤버가 인터프리터 성능을 향상시키기 위해 사용한 전략을 발표했다.
     * 2023년 1월, 핵심 개발자인 Łukasz Langa가 Gross가 작성한 PEP 703 (""CPython에서 Global Interpreter Lock을 선택적으로 사용"")의 첫 버전을 게시했다.
     * Python 커뮤니티는 Python 2에서 3으로의 혼란스러운 전환을 피하려고 한다. GIL을 제거하는 모든 변경은 이에 대비하지 못한 코드와 호환되어야 한다.
     * 6월 14일, Faster CPython 팀은 no-GIL 기능에 대한 결정을 촉구하는 압력을 높였다.
     * 7월 28일, 이사회 멤버인 Thomas Wouters는 이사회가 PEP 703을 수락했음을 발표했지만, 수락의 세부 사항은 아직 조정 중이다.
     * 계획은 no-GIL 버전의 인터프리터를 도입하여 누락된 구성 요소를 모두 파악하고, 이를 해결한 후 no-GIL이 Python의 기본이자 최종 버전이 되도록 하는 것이다.
     * no-GIL 버전으로의 전환은 약 5년이 소요될 것으로 예상되며, 과거의 실수를 반복하지 않겠다는 약속이 있다.
     * 이 글에서는 .NET의 병렬 프로그래밍을 사용하여 ""당혹스럽게 분할 가능한"" 데이터가 주어진 경우 for/foreach 루프를 가속화하는 방법에 대해 논의한다.
     * 이 글에서는 Python의 단일 스레드 성능 유지의 장기적인 실행 가능성에 대해 논의하며, 일부는 피할 수 없는 오버헤드와 복잡성 증가가 결국 성능을 저하시킬 것이라고 주장한다.
     * 이 글은 두 버전 간의 호환성이 없었던 Python 2에서 Python 3으로의 전환에 대해 반성한다.
     * 저자는 Python 3의 Python 2와의 호환성이 없는 영향이 일부에게는 예상되었다는 점을 주장하며, 이는 대중적인 생각과는 반대이며, 2007년의 블로그 게시물 링크를 공유한다.
     * 저자는 Python 2에서 Python 3으로의 전환에서 배운 점의 중요성을 강조하며, 미래에 비슷한 문제를 피하기 위해 이를 강조한다.
     * 이 글은 Python 2에서 Python 3으로의 전환의 도전을 예측한 사람들의 선견지명을 인정하는 것으로 결론을 내린다.

        Hacker News 의견

     * 글로벌 인터프리터 락(GIL) 제거와 더 빠른 CPython 프로젝트에 대한 기사 논의.
     * 일부 댓글 작성자들은 기사가 GIL 제거의 이점을 충분히 강조하지 않고 ""GIL 반대"" 측에 더 치우쳐 있다고 믿습니다.
     * Sam Gross의 no-GIL 프로젝트 작업은 그 고품질과 성능 향상을 가져오는 데 대해 칭찬받습니다.
     * 커뮤니티는 프로젝트에 대한 큰 관심을 보였으며, 조정 위원회는 프로젝트와 관련된 제안인 PEP 703을 수용할 계획입니다.
     * 일부 댓글 작성자들은 GIL 제거가 멀티 스레드 Python 코드에 부정적인 영향을 미칠 수 있다는 우려를 표현합니다.
     * 테스트 모드에서 프로젝트를 진행하는 결정은 합리적으로 보이지만, 잠재적인 버그와 어려움이 발생할 경우 더 많은 자원이 필요하다는 우려가 있습니다.
     * 일부 댓글 작성자들은 GIL 제거는 성능 패널티를 초래하고 다른 잠재적인 개선점을 빼앗을 수 있으므로 실수라고 믿습니다.
     * 다른 사람들은 단일 스레드 성능을 우선시하고 메모리 공유를 위한 명확한 메커니즘을 가진 가상 프로세스를 추가하는 것을 제안합니다.
     * Sam Gross의 프로젝트 추진은 칭찬받으며, 비록 길고 험난하지만 no-GIL Python으로 가는 길은 긍정적인 발전으로 보입니다.
     * 기존 코드베이스의 정확성을 보장하고 GIL/no-GIL을 컴파일 시간 스위치로 만드는 유지 관리 비용 증가에 대한 우려가 있습니다.
     * Python 커뮤니티는 그 투명성과 좋은 거버넌스를 칭찬받지만, Python에서 추출하는 가치를 고려할 때 기술 산업에서 더 많은 지원을 요청하는 목소리가 있습니다.
     * 일부 댓글 작성자들은 프로젝트의 결과로 단일 스레드 코드가 15-20% 느려질 수 있는 가능성에 대한 수용성을 의문시합니다.
"
"https://news.hada.io/topic?id=10475","Show GN: 1초 무통장입금 자동확인 서비스 PayAction","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Show GN: 1초 무통장입금 자동확인 서비스 PayAction

   안녕하세요!
   무통장입금을 1초 만에 자동확인하고 처리하는 'PayAction' 베타버전을 출시했습니다!

   ✅ 내 쇼핑몰 입금확인! 1초 만에 자동처리
   ✅ 내 플랫폼 입금확인! 1초 만에 자동처리
   ✅ 내 서비스 입금확인! 1초만에 자동처리

   주요 특징

   ⚡ 무통장입금 ↔ 주문 실시간 매칭/입금확인 처리
   주문고객에게 1초만에 입금을 확인시켜 주세요.
   ⚡ 내 상점과 계좌만 연동하면 끝
   인터넷뱅킹에서 SMS통지서비스만 신청하고 손쉽게 연동하세요.
   ⚡ 개발자를 위한 API, 웹훅지원
   독립몰, 서비스, 플랫폼 등 자유롭게 이용가능해요. 주문, 매칭 API/웹훅지원

   사용해야 하는 이유

   좋은 사용자 경험(UX) 제공!
   입금확인 즉시 주문고객에게 입금완료 메세지가 발송됩니다. 빠른 입금확인은 좋은 사용자 경험(UX)에 필수입니다.
   카페24, 아임웹 등 쇼핑몰을 운영하고 계신가요?
   코드 사용 없이 바로 연동하고 업무를 자동화하세요!
   ‍ 독립몰, 개발서비스/플랫폼을 운영하고 계신가요?
   코드/노코드로 쉽게 연동하고 업무를 자동화하세요!
   더 다양한 액션을 활용하세요!
   효과적인 커머스 운영을 도와줄 다양한 Action을 더 활용해 보세요! (Coming Soon)

   아직 베타버전으로 부족한게 많은 프로덕트입니다. 귀중한 의견 남겨주시면 열심히 반영하겠습니다.
   https://payaction.app

   무료로 시작하기 다음에 어떤 방식으로 유료화 되는 지를 알수가 없네요.
   가입 유도를 위해서는 이해가 됩니다만, 사이트 어딘가에는 설명이 있으면 좋겠어요!

   이제 막 런칭하여 그런부분 안내가 부족했네요. 현재 베타버전으로 무료로 사용하실 수 있습니다. 정식버전 출시 시점과 이용료는 아직 예정된 사항이 없지만 정식버전을 출시하더라도 무료 플랜을 유지시킬 생각입니다. 정확하게 안내드리지 못함을 양해부탁드립니다

   오...사업자등록 필요 없이 사용 가능한 프로덕트인가요?

   네 린하게 MVP 출시하려는 예비창업가부터 이미 커머스나 서비스를 운영중인 사업자들까지 모두 제한없이 사용가능합니다.
"
"https://news.hada.io/topic?id=10387","나의 명칭으로 '데비안 리눅스 릴리즈 (1993)'라 부르는 최신 리눅스 발표","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              나의 명칭으로 '데비안 리눅스 릴리즈 (1993)'라 부르는 최신 리눅스 발표

     * 텍스트는 Ian A Murdock이 만든 새로운 Linux 릴리즈인 Debian Linux Release의 개발을 발표합니다.
     * 이 릴리즈는 기존의 SLS(Softlanding Linux System)를 수정한 것이 아니라, SLS에 대한 불만으로 인해 처음부터 새롭게 구축된 시스템입니다.
     * Debian의 기본 시스템은 거의 완성되었으며, 저자는 더 복잡한 기능을 추가하기 전에 피드백을 받고자 합니다.
     * 이 릴리즈는 크기가 크기 때문에, 저자는 누군가가 이를 익명 FTP 사이트에 호스팅할 수 있는 사람을 찾고 있습니다.
     * Linux 커뮤니티는 최종 릴리즈에 포함시키고 싶은 특정 패키지를 포함하여 의견, 제안, 조언을 제공하도록 초대받습니다.
     * Debian 릴리즈는 SLS보다 더욱 날렵하고 가벼워지려고 하며, 여러 바이너리와 manpages가 없습니다.
     * Debian은 모든 것의 가장 최신 버전을 포함하며, 쉬운 업데이트를 위해 기본 시스템에 '업그레이드' 스크립트가 있습니다.
     * 설치 절차는 더 자동화되어 사용자의 개입을 덜 필요로 합니다.
     * Debian은 fstab부터 Xconfig까지 모든 것을 설정하고 구성하려는 시스템 설정 절차를 포함합니다.
     * 릴리즈는 패키지 설치, 시스템 설정, 도움말, 관리를 위한 작동하는 메뉴 시스템을 특징으로 합니다.
     * Debian은 인터넷 접속이 없는 사용자들에게 Linux를 더 쉽게 만들기 위해 주기적인 업그레이드 패키지를 받고, 추가 패키지의 대형 라이브러리에서 선택하는 옵션을 제공하려고 합니다.
     * 릴리즈는 모든 구성 요소의 출처에 대한 철저한 기록과 함께 철저하게 문서화될 것입니다.
     * 저자는 모든 피드백을 메일로 요청하며, 약 일주일 후에 릴리즈에 대한 더 구체적인 내용을 제공할 것을 약속합니다.

        Hacker News 의견

     * 새로운 Linux 버전, Debian Linux Release (1993) 출시에 대한 기사
     * 사용자 친화적인 Debian Linux의 고품질 문서화 및 커뮤니티 지원 찬사
     * 나머지 시스템과 완벽히 통합되는 수작업 패키지를 갖춘 Debian Linux 시스템
     * 사용자 경험과 탐색 자유도를 크게 향상시키는 자동차와 지도에 비유된 Debian Linux
     * 개발자들 사이에서 인기 있는 Debian Linux 시스템의 신뢰성과 유연성
     * 시스템을 최신 상태로 유지하는 '업그레이드' 스크립트를 갖춘 Debian Linux 시스템
     * 많은 후속 모방작보다 우수하다고 인정받은 Debian Linux 시스템의 유지보수 가능하고 업그레이드 가능한 패키지
     * Red Hat이나 Mandrake와 같은 다른 시스템에서 부족했던 패키지 의존성 처리 능력을 갖춘 Debian Linux
     * 안정성과 자동 업그레이드 능력으로 서버에 권장되는 Debian Linux
     * 개발자의 여자친구인 Deborah와 Ian의 이름에서 유래된 'Debian'이라는 이름
     * Debian Linux의 새 버전을 가리키는 '릴리즈'라는 용어와 '배포'라는 용어의 사용 시작 시기에 대한 고찰
     * 프로젝트의 역사를 확인할 수 있는 HTML 파일에 접근하기 위한 'debian-history' 패키지 설치 가능한 Debian 사용자
     * 2011년 이후 선호하는 데스크톱으로 Debian을 선택한 Red Hat에서 Debian으로의 전환을 긍정적으로 평가
"
"https://news.hada.io/topic?id=10402","프랑스가 Firefox와 같은 브라우저에 웹사이트 검열을 강제하는 것을 중단하도록 청원","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            프랑스가 Firefox와 같은 브라우저에 웹사이트 검열을 강제하는 것을 중단하도록 청원

     * 프랑스 정부가 인터넷의 자유를 위협할 수 있는 SREN 법안을 준비 중입니다.
     * 이 법은 Mozilla의 Firefox와 같은 웹 브라우저가 브라우저 자체 내에서 특정 웹사이트를 차단하도록 요구합니다.
     * 이는 브라우저를 검열 도구로 전환시키고, 다른 정부가 따라할 수 있는 청사진을 제공하는 위험한 선례를 세울 수 있습니다.
     * 프랑스 정부는 여름 휴가 직전에 이 법안을 의회에 제출하였으며 가능한 빨리 통과시키려고 합니다.
     * 이 법안은 가속화된 절차에 놓여 있으며, 이번 가을에 투표가 예정되어 있습니다.
     * Mozilla 재단은 이 법안의 일부가 법이 되는 것을 막기 위해 청원서에 서명하도록 사람들을 촉구하고 있습니다.
     * 재단은 미래 세대를 위한 웹의 자유를 보호하는 것의 중요성을 강조하고 있습니다.

        Hacker News 의견

     * 기사는 Firefox와 같은 브라우저가 웹사이트를 검열하도록 강요할 수 있는 프랑스의 잠재적 법안에 대한 청원을 논의한다.
     * 댓글 작성자들은 전 세계 정부들이 인터넷 콘텐츠를 통제하고 검열하려는 지속적인 시도에 대해 불만을 표현한다.
     * 일부는 이번 프랑스의 조치가 새로운 선례를 세우지 않는다고 주장하며, 이미 비슷한 조치가 존재한다고 말한다.
     * Firefox나 Chrome을 포킹하고 검열 코드를 제거한 후 온라인에 게시하는 것의 잠재적인 결과에 대한 논쟁이 있다. 특히 프랑스를 방문하는 사람들에게는 그렇다.
     * 일부 댓글 작성자들은 누군가가 결국 주석 처리할 것이기 때문에 자유 소프트웨어는 '안티피처'를 가질 수 없다고 주장한다.
     * 이러한 법을 집행하는 것의 실용성에 대한 회의론이 있으며, 일부는 이것이 비준수 웹 브라우저의 금지나 프랑스를 통해 접근한 모든 웹사이트를 확인하는 등의 어이없는 상황을 초래할 수 있다고 제안한다.
     * 일부 댓글 작성자들은 일반적으로 검열에 반대하며, 시청자 수준에서 그것을 억제하는 것보다는 해로운 콘텐츠의 근본 원인을 해결하는 것이 더 낫다고 주장한다.
     * 프랑스의 기술 법률 역사, 특히 1999년까지 ""무허가"" 암호화 사용에 대한 완전한 금지를 포함한 내용을 언급한다.
     * 정부가 오픈 소스 소프트웨어에 명령을 내리는 것의 실행 가능성에 대한 의문이 제기된다.
     * 일부는 법이 통과되면 Mozilla가 프랑스에서의 사용을 금지해야 한다고 제안한다.
"
"https://news.hada.io/topic?id=10454","존 워노크 사망","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                존 워노크 사망

     * Adobe 공동 창립자인 John Warnock, 82세로 별세.
     * Warnock은 Charles Geschke와 함께 1982년 Adobe Systems, Inc.를 설립.
     * 그는 2000년 퇴직할 때까지 Adobe의 CEO로 재직하고, 2017년까지 이사회 의장으로 활동.
     * 현재 Adobe의 CEO인 Shantanu Narayen은 Warnock의 사망이 Adobe 커뮤니티와 기술 산업에 큰 손실이라 표현.
     * Warnock의 사망 원인은 회사 측의 발표에서 공개되지 않음.
     * Photoshop의 창조를 포함한 Warnock의 기술 산업에 대한 기여는 수십 년 동안 영향력을 미침.
     * 그의 사망은 Adobe와 더 넓은 기술 커뮤니티에 대한 시대의 종말을 표시.

        Hacker News 의견

     * 기술 커뮤니티, 산업의 중요 인물인 존 워노크의 죽음을 애도
     * 워노크는 Adobe의 공동 창립자이며, 디지털 출판 및 디자인에 중요한 영향을 미친 PostScript 페이지 설명 언어의 공동 설계자였다.
     * 그는 또한 워노크 알고리즘을 포함한 컴퓨터 그래픽스의 기초 작업으로 알려져 있다.
     * 워노크는 겸손, 비전, 열정으로 기억되며, 이는 기술 산업의 많은 사람들에게 영감을 주었다.
     * 그는 또한 그래픽 알고리즘과 같은 복잡한 주제에 대한 고수준의 토론에 참여하는 능력으로 알려져 있다.
     * 그의 작업과 기여에 대해 더 알아보기 위해 인터뷰, 강의, 기사 등 여러 자료가 공유되었다.
     * 그의 사망은 기술 세계에 대한 엄청난 손실로 여겨지지만, 그의 유산은 계속해서 산업을 형성하고 미래 세대를 영감을 줄 것이다.
"
"https://news.hada.io/topic?id=10463","'Jazz² Resurrection': 오픈소스 'Jazz Jackrabbit 2' 재구현","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           'Jazz² Resurrection': 오픈소스 'Jazz Jackrabbit 2' 재구현

     * 게임 Jazz Jackrabbit 2의 오픈소스 재구현 발표, 제목은 Jazz² Resurrection.
     * Jazz² Resurrection은 원본 게임의 다양한 버전을 지원, Shareware Demo, Holiday Hare '98, The Secret Files, Christmas Chronicles 포함.
     * 프로젝트는 GitHub에서 호스팅되며, 최신 버전은 2023년 7월 23일에 출시.
     * Windows, Linux, macOS, Android, Nintendo Switch, Xbox 등 다양한 플랫폼에서 게임 이용 가능.
     * 미발표 기능이 포함된 실험적 빌드는 GitHub Actions에서 직접 다운로드 가능.
     * 게임 플레이 비디오는 YouTube에서 미리보기 가능.
     * 게임은 OpenGL 3.0 또는 OpenGL ES 3.0 (ARM)을 지원하는 GPU가 필요하며, 첫 시작 시 인트로 시네마틱스에서 캐시가 재생성됨.
     * 각 플랫폼에 대해, 게임을 다운로드, 설치, 실행하는 방법에 대한 자세한 지침 제공.
     * 다른 플랫폼에서 애플리케이션을 빌드하는 방법에 대한 지침도 제공, 빌드 의존성은 CMake에 의해 자동으로 다운로드됨.
     * 프로젝트는 GNU General Public License v3.0 조건에 따라 라이선스가 부여되며, 수정된 nCine 게임 엔진을 사용.

        Hacker News 의견

     * 'Jazz² Resurrection'이라는 제목의 게임 Jazz Jackrabbit 2의 오픈 소스 재구현에 대한 기사
     * Jazz Jackrabbit 및 Commander Keen, Cosmo's Cosmic Adventure 등 같은 시대의 다른 게임을 즐겨했던 많은 사용자들의 추억
     * 원래 게임에서의 문제점, 예를 들어 멀티플레이 중 충돌 및 레벨 에디터인 Jazz Creation Station과 같은 누락된 기능들
     * Intel 하드웨어와 함께 배포된 게임의 OEM 버전에 대한 토론, 이는 기본적으로 베타 버전이며 최종 릴리즈와 크게 다름
     * Jazz Jackrabbit가 더 인기가 없었던 것과 세 번째 설치 계획이 예상되는 저조한 판매로 인해 취소된 것에 대한 일부 사용자들의 유감
     * Mac에서 실행되는 유사한 플랫폼 게임에 대한 추천을 찾는 사용자들
     * 원래 게임을 몇 달러에 구매할 수 있으며 Windows에서 잘 실행된다는 언급
     * Jazz Jackrabbit와 Jazz Jackrabbit 2가 macOS로 이식되었으며 macsourceports.com에서 찾을 수 있음
     * 게임 음악에 대한 추억과 단일 키보드에서 세 명의 플레이어가 협동할 수 있는 가능성에 대한 사용자들의 회상
     * Jazz Jackrabbit 2의 캐릭터 Lori의 창작자인 Dean Dodrill이 게임 Dust: An Elysian Tail의 개발자로 언급됨
     * Earthworm Jim과 Commander Keen과 같은 어린 시절의 다른 게임들이 재창조되기를 원하는 사용자들의 표현
     * 관련 없는 게임인 Fragile Allegiance가 개발 중인 정신적 후속작을 가지고 있다는 언급
"
"https://news.hada.io/topic?id=10376","M1에 대한 찬가에 대한 찬가

     * 내 하드웨어 명예의 전당엔 1991 슈퍼닌텐도, 1995 3dfx1, 2010 인텔 520 SSD가 있었는데, 몇달전 ""2021 맥북프로 M1""이 들어갔음
     * 코드와 글쓰는데는 Linux가 최적이지만, 알수 없는 문제들로 시간을 너무 많이 잡아 먹음
     * 레트로 게이밍 애호가로서 어쩔 수 없이 Windows를 사용해야함
     * 씽크패드에서 KVM을 통해 해결하려고 했지만, Windows 11 TPM 이 악몽 같음
     * 하지만, UTM이 해결해 줌
          + Ubuntu 와 Windows 11을 셋업하는데 아무 문제가 없음. 두개 VM 만드는데 1분
          + 3개의 OS를 스와이프해서 바꿀 수 있고, 에뮬레이션이 아니라 가상화 되어 있기 때문에 네이티브 속도로 실행됨
          + rw 가능한 파일 공유기능은 크로스 플랫폼 mDNS 소프트웨어를 만들고 테스트하는 것을 즐겁게 해주었음 (최대 속도로 Iteration하는 만족감을 제공)
     * 우려들
          + 현 시점에서 M1은 꿈의 하이퍼바이저임. 이 셋업으로 시간을 멈췄으면 좋겠음
          + 소프트웨어 엔지니어들
               o 하드웨어 엔지니어가 실리콘에서 더 많은 사이클을 뽑아낼 때 마다, 프로그래머는 자신의 프로그램에 100개의 사이클을 추가함. 다시 말해, 개발자들이 M1이 얼마나 강력한 지 알게되면 더 많은 '기능'을 추가할 까봐 걱정됨
          + 엔터프라이징
               o UTM은 간단하고, 경량이고, 설치하기 편함. 화려하고 사용하기에 즐거움. 누군가 이걸 사버려서 VMWare와 같은 엔터프라이즈 버전이 뒤섞일까 우려가 됨

   엄밀히 말하면 ARM 기반이 꿈의 하이퍼바이저죠. 윈도우 Arm64 생태계가 많이 활성화 되면 비슷한 찬가 나올겁니다. 어쩌면 이 M1 보다 더한 찬가가 나올지도 모르죠. 당장에 앵간한 에뮬레이션 대상 장비들이...

   M1 이 ARM 을 채택하고 여기에 올인했다는건 정말 대단한 선택이었다고 생각해요. 누가 ARM OS에 이만큼 진지하게 올인할까요..

   (카페베네)

   제 M2 Macbook Pro 에서는 vmware fusion 에서의 윈도우가 상대적으로 더 빠릿하게 돌아가서,
   얼마전 UTM 에서 vmware fusion 으로 옮겨탔습니다.

   저도 UTM 그럭저럭 괜찮더라구요. 가볍고 사용하기 편하긴 한데, 칼리 리눅스가 정상 설치 되지 않는다는 단점이 있었습니다. 윈도우 11 arm 가상화도 결국 단독으로 운영체제를 돌리는 것이 아니라서인지 느리긴 느리더라구요. 그래도 저사양 스팀게임 정도까진 큰 무리없었습니다. 그래도 자원을 굉장히 많이먹는게 눈에 보입니다.
   레트로 게임에 대한 언급이 있어 덧붙이자면 M1은 레트로 게임을 즐기기에 굉장히 좋더라구요! 도스박스, 각종 에뮬레이터가 고성능으로 돌아가기도 하지만 PS2 에뮬레이터인 AetherSX2가 뛰어납니다. 안드로이드용 ps2 에뮬레이터인데, m1버전으로의 미완성 포팅이 있습니다. 비록 각종 스트레스에 시달린 개발자가 영구개발중단을 선언하셨지만 정말 잘만든 프로그램이더라구요.

   이 셋업으로 시간을 멈췄으면 좋겠음 <-- 새 장비들도 (안쓰는 새 기능들 때문에) 계속 느린 느낌이라 이 말이 참 공감되네요

   UTM - 애플 실리콘 M1 맥 지원하는 가상머신
   2021년에 소개해 드릴때는 속도가 그닥이었는데, 그동안 뭔가 많이 개선되었나 보네요. 다시 함 써봐야 겠어요

   일단 기본 태도가 맥북 찬양 깔고 가는군. 별로 유익하지 않음.

   제목 자체가 찬양인데요? 다른 어떤 관점으로 말하신 것인가요? 비판
   을 깔고 가는 유익하지 않은 댓글

   지금까지 님 댓글단 거 봤는데 왜이리 싸가지 없음?

   어떤것이 단번에 문제를 해결해줬다.. 이런식의 글들은 신뢰가 안감. 세상에 그런게 어딨어요.

   예의는 지능입니다
"
"https://news.hada.io/topic?id=10444","OpenAI, AI 디자인 스튜디오 Global Illumination 인수","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               OpenAI, AI 디자인 스튜디오 Global Illumination 인수

     * AI를 활용하여 크리에이티브 도구, 인프라 및 디지털 경험을 구축 하는 회사
     * OpenAI 7년 역사상 첫 공개 인수
     * 이 팀은 이전에 인스타그램, 페이스북 초기에 제품을 설계하고 구축한 사람들로 구성되어 있으며, Youtube/Google/Pixar/Riot 등에도 기여한 바 있음
     * 최근 작품은 마인크래프트와 비슷한 샌드박스 MMORPG인 Biomes
"
"https://news.hada.io/topic?id=10410","화재 및 화상 위험으로 인해 156만대의 제습기가 리콜됨","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    화재 및 화상 위험으로 인해 156만대의 제습기가 리콜됨

     * 미국 소비자 제품 안전 위원회, 화재 및 화상 위험으로 인해 156만 대의 제습기 리콜 발표
     * 해당 제습기는 한 회사에서 제조되었으나, Frigidaire, GE, Kenmore 등 13개의 다른 브랜드 이름으로 판매됨
     * 이런 결함 있는 제습기로 인한 화재로 인해 사망자 4명이 추가로 보고됨
     * 소비자들에게 즉시 이 제습기 사용을 중단하고 환불을 요청하라는 촉구
     * 이 기사에는 소비자들이 자신이 소유한 제품을 확인할 수 있도록 리콜된 제습기의 이미지가 포함되어 있음

        Hacker News 의견

     * 화재와 화상 위험으로 156만 대의 제습기가 리콜되었습니다.
     * The Verge의 기사는 ""환불 받으세요""라는 행동 요구와 2013년 리콜을 연결시켜 2023년 리콜 모델을 포함하지 않는다는 점에서 비판을 받았습니다.
     * 리콜된 제습기로 인해 최소 23건의 화재, 688건의 과열 사고가 발생하였으며, 재산 피해는 168,000달러에 이릅니다.
     * 이 제습기들은 2011년부터 2014년까지 Home Depot, Lowe's, Menards, Sam's Club, Sears, Walmart 등 전국의 다른 매장에서 판매되었습니다.
     * 두 개의 양동이와 암염을 이용한 DIY 제습기 솔루션이 제안되었습니다.
     * 수년 동안 무인으로 작동하는 큰 압축기의 내재적 위험성이 강조되며, 압축기 건강을 평가하는 방법에 대한 요구가 제기되었습니다.
     * 일부 사용자들은 리콜 목록에 없는 제습기에서 문제가 발생했다고 보고하였으며, 이는 문제가 더 널리 퍼져 있을 수 있음을 시사합니다.
     * 제조사가 리콜된 단위에 대해 부족한 보상을 제공한다는 불만이 있습니다.
     * 일부 사용자들은 모델 번호를 온라인에서 검색한 후에만 제습기가 리콜되었다는 사실을 알게 되었습니다.
     * Dyson의 AM04와 AM05 히터/쿨러 장치와 같은 다른 리콜 제품과 비교가 이루어졌습니다.
     * 리콜에도 불구하고 일부 사용자들은 위험 수준에 대해 의문을 제기하며, 이를 차량 사고에 빠질 확률과 비교합니다.
"
"https://news.hada.io/topic?id=10445","왜 오래된 책들의 냄새는 매우 좋은가?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         왜 오래된 책들의 냄새는 매우 좋은가?

     * 오래된 책의 독특한 냄새는 책이 나이를 먹고 부식되면서 휘발성 유기화합물(VOCs)이 방출되기 때문이다.
     * 현대의 책은 제조 과정의 변화로 인해 다른 향기를 가지고 있다.
     * 책의 종이는 리그닌으로 묶인 셀룰로스 섬유로 만들어지며, 잉크와 제본은 다른 유기화합물을 추가한다.
     * 시간이 지나면서 빛, 열, 습기가 종이와 화합물을 분해시켜 공기 중으로 증발하는 VOCs를 방출한다.
     * 제조 과정 또한 책이 나이를 먹으면서 방출되는 VOCs에 영향을 미친다.
     * 오래된 책의 아몬드 향은 종이의 벤잘데하이드에서 나오며, 달콤한 바닐라 향은 바닐린 때문이다.
     * 잉크와 페인트에 사용되는 에틸벤젠은 달콤한 플라스틱 냄새를, 용매와 향료에 발견되는 2-에틸 헥산올은 약간의 꽃향기를 낸다.
     * 새 책은 수소페록사이드와 알킬 케틴 디머와 같은 현대 화학물질을 사용하여 다른 VOCs를 방출한다.
     * 과학자들은 오래된 책에서 나오는 VOCs를 분석하여 그 책의 나이, 상태, 역사를 파악할 수 있다.
     * VOC 분석을 통해 책이 초기 인쇄소에서 나온 것인지, 19세기 후반의 인쇄소에서 나온 것인지, 그리고 화합물의 분해와 보존 필요성을 파악할 수 있다.
     * 사서와 역사학자들은 VOC 분석을 사용하여 컬렉션을 연구하고, 화학적 지문에 기반하여 고아가 된 책을 원래의 도서관과 매칭시킨다.
     * 오래된 책의 냄새는 수십 년 혹은 수세기 동안 그 책의 기원과 비밀에 대한 단서를 제공할 수 있다.
     * VOCs는 연기 노출, 수해, 또는 다른 노화 요인에 대한 지표가 될 수 있다.

        Hacker News 의견

     * 오래된 책의 독특한 냄새와 그것이 사람들에게 미치는 영향에 대한 기사
     * TV 쇼 ""Buffy the Vampire Slayer""에서 인용된 대사, 냄새가 강력한 기억 유발자이며 실제 책을 읽는 풍부한 경험의 중요성을 강조
     * 3개의 미쉐린 스타 레스토랑의 제과사 Jordi Roca가 enfleurage라는 기법을 사용하여 오래된 책의 향기에서 영감을 받은 디저트를 만듦
     * 오래된 책에 포함된 잠재적인 발암물질에 대한 우려와 과거에 읽었던 책의 매혹적인 향기에 대한 회상을 담은 몇몇 댓글
     * Ray Bradbury의 ""Fahrenheit 451""에서 인용된 대사, 책이 넛메그 또는 이국적인 향신료 같은 냄새를 낸다고 묘사
     * 오래된 책의 냄새에 대한 다른 반응을 가진 댓글, 하나는 인쇄 화학물질과 종이 때문에 토 같은 냄새라고 묘사하고, 다른 하나는 오래된 먼지와 곰팡이와 연관시킴
     * 오래된 영어 원고에 양의 소변을 밀봉제로 사용한 역사적 사실을 공유하는 댓글, 정말 오래된 책이 나쁜 냄새를 내는 이유를 제안
     * 오래된 책의 냄새를 표현하는 구체적인 단어가 없는 것에 대한 논의, 한 댓글에서는 그들이 만든 노르웨이어 단어 'Gammelbokduft'를 공유
     * 인공 바닐라가 삼림 산업의 부산물이라는 기사에 대한 링크 공유, 책의 냄새와의 연관성을 제안
     * 책방의 냄새가 일부 사람들에게 화장실을 가고 싶게 만든다는 기사에 대한 유머러스한 링크를 공유하는 댓글
"
"https://news.hada.io/topic?id=10377","트위터 규모의 Mastodon 구축 비용을 100배 줄인 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   트위터 규모의 Mastodon 구축 비용을 100배 줄인 방법

     * Red Planet Labs가 약 10,000 줄의 코드만으로 Twitter 규모의 Mastodon 인스턴스를 처음부터 개발
          + 이는 Twitter가 원래 제품을 구축하는 데 사용한 약 1M라인의 코드에 비해 100배 더 적음
     * Mastodon 인스턴스는 Rama라는 새로운 플랫폼 위에 구축
          + Rama는 계산과 저장을 통합하는 모델로, 100배 더 적은 코드로 어떤 규모의 백엔드도 구축 가능
          + 순수 Java API로 프로그래밍되는 애플리케이션 백엔드 구축을 위한 범용 플랫폼
     * 구축에 9인/월(person-month)가 들었음. 트위터는 ~200인/년, Threads는 25인/년이 들은데 비해 훨씬 빠르게
     * Mastodon 공식 구현체보다도 훨씬 작지만, 트위터 규모로 스케일 가능함
     * Red Planet Labs는 일주일 내에 누구나 다운로드하고 사용할 수 있는 Rama 버전을 출시할 것이며, 두 주 후에는 Mastodon 구현을 완전히 오픈 소스화할 예정
     * 회사는 곧 Rama의 전체 버전에 대한 접근 권한을 제공하는 프라이빗 베타를 시작할 예정

Red Planet의 Mastodon 인스턴스

     * https://mastodon.redplanetlabs.com에서 호스팅되며, Mastodon의 모든 기능을 포함합니다.
     * 인스턴스의 규모를 보여주기 위해, Red Planet Labs는 지속적으로 상태, 답글, 부스트, 즐겨찾기를 게시하는 100M의 봇 계정을 운영중
     * Mastodon 인스턴스는 초당 3,500번 게시하는 100M의 봇을 처리할 수 있어, 그 규모성을 입증

Rama

     * 4개의 컨셉으로 구성
          + Depot : 분산 복제 데이터 저장소
          + ETL : 마이크로 배치 스트리밍
          + PStates(Partitioned State): 유니버설 인덱싱
          + Query : 쿼리 토폴로지
     * Rama는 선형적으로 확장 가능하며, 필요에 따라 리소스를 추가할 수 있고, 모든 데이터를 복제하고 자동 장애 전환을 구현함으로써 장애 허용성을 달성

     ""We’ve implemented every feature of Mastodon from scratch, including:""

   마스토돈이 아닌 것 같네요. 설명만으로는 자체 클론인 것 같습니다. Cloudflare의 ""Wildebeest"" 나, 오픈소스 구현체인 GoToSocial 과 비슷한 ""호환되는"" 의 포지션인 것 같습니다. 소스는 공개 예정이구요...

   프론트는 soapbox네요

   Mastodon gGmbH 에서 태클 들어오지 않을까 싶네요

   이거 요약해 보려다가 이해를 못 해서 결국 패스했는데...
   나중에라도 시간을 내서 천천히 이해를 해보면 좋겠다 싶더라고요.

   근데 저게 돈이 될지는 잘 모르겠어요.

   저도 뒷부분 좀 자세히 읽어보려고 했는데, 글이 잘 안 읽히더라고요.
   기술과 별도로 문서화는 잘 못하는 듯한 느낌이 듭니다.
   중요한 컨셉 4개부터 설명이 뭔가 어? 하게 되어서 ㅠ

   코드 라인수로 비교하는건 좀 무리인듯 한데.. 어그로는 확실히 끌었네요.
   Rama 플랫폼 및 자신들 인스턴스의 내부구현에 대해서 굉장히 장황한 설명이 붙어있습니다.
   실제로 나와봐야 알 것 같아요.

        Hacker News 의견

     * 기사는 Mastodon이라는 소셜 네트워크를 Twitter 규모로 100배 확장할 때 비용과 코드 복잡성 감소에 대해 논의한다.
     * 일부 독자들은 Mastodon의 1만 줄의 코드와 Twitter의 약 100만 줄의 코드 비교에 의문을 제기하며, 기능 수가 훨씬 적고 대규모 분산 실시간 비디오 지원과 같은 기능을 추가하면 코드베이스가 크게 증가할 것이라 주장한다.
     * 100M의 봇이 초당 3,500번 게시하여 규모를 보여주는 주장에 대한 회의론이 있으며, 일부 독자들은 이것이 충분하지 않다고 제안하고 이것이 봇당인지 총합인지 의문을 제기한다.
     * 일부 독자들은 게시물의 기술적 세부 사항을 이해하는 데 어려움을 겪으며, 게시물이 공유된 지식 기반을 가정하고 더 명확한 설명과 비교가 필요하다고 제안한다.
     * ""Twitter 규모""의 측정이 초당 트윗 수로 이루어지는 것에 대해 의문을 제기하며, 일부 독자들은 트윗을 팔로우하는 최종 사용자에게 초당 업데이트 수가 더 현실적인 측정치라고 제안한다.
     * 게시물은 자세한 통찰력과 현대 앱 개발 복잡성을 데이터 구조 혼합으로 축소하는 추상화에 대해 칭찬받는다.
     * 일부 독자들은 개발자들이 변경이나 중단의 위험을 감수하면서 모든 기능에 대해 스타트업의 폐쇄 소스 플랫폼에 의존하는 제안에 대해 우려를 표현한다.
     * Rama 플랫폼을 구축하는 데 걸린 10년이 기술 데모 개발에 소요된 시간에 포함되어야 하는지에 대한 혼란이 있다.
     * 일부 독자들은 곧 출시될 Rama에 대한 문서화에 대해 흥분을 표현하지만, 새로운 프로그래밍 패러다임 제안에 대한 우려도 표현한다.
     * 예시로 든 Mastodon 인스턴스의 성능은 응답성이 좋다는 점에서 칭찬을 받지만, 사용자가 태그되지 않는 한 전체 텍스트 검색을 구현하지 않는다는 점이 지적된다.
"
"https://news.hada.io/topic?id=10433","미스터 로저스의 주장 - 일상적으로 여섯 명의 이웃을 인사하는 것이 행복감을 극대화한다","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            미스터 로저스의 주장 - 일상적으로 여섯 명의 이웃을 인사하는 것이 행복감을 극대화한다

     * 이 기사는 이웃에게 인사하는 행동과 높은 웰빙과의 연관성에 대한 연구를 논의한다.
     * 연구에 따르면, 미국의 성인 중 이웃에게 정기적으로 인사하는 사람들이 인사를 거의 하지 않거나 전혀 하지 않는 사람들보다 웰빙이 높다는 것을 보여준다.
     * 인사하는 이웃의 수에 따라 웰빙 점수가 꾸준히 증가하며, 이웃에게 인사하지 않는 사람들 중 51.5에서 이웃 여섯 명에게 인사하는 사람들 중 64.1까지 증가한다.
     * 연구에서는 여섯 명 이상의 이웃에게 인사하는 것이 웰빙에 의미있는 증가를 가져오지 않았다는 것을 발견했다.
     * 이 연구는 웰빙을 0에서 100까지의 척도로 측정하는 Gallup National Health and Well-Being Index의 일부로 수행되었다.
     * Well-Being Index 점수는 전반적인 웰빙에 영향을 미치는 지표와 웰빙의 다섯 가지 핵심 요소인 Career, Social, Financial, Physical, 그리고 Community 웰빙을 포함한다.
     * 연구에서는 웰빙의 모든 다섯 가지 요소가 이웃에게 인사하는 것과 연관이 있다는 것을 발견했다.
     * 연구에서는 이웃에게 인사하는 것이 노인이나 고소득 성인들 사이에서 더 흔하다는 것을 발견했다.
     * 연구에서는 Gallup의 Life Evaluation Index와 이웃간의 관계 사이에 강한 연결성을 발견했다.
     * 이웃에게 정기적으로 인사하는 사람들 중에서는 ""번창하는"" 것으로 분류될 확률이 이웃에게 인사하지 않는 사람들 중 38.1%에서 이웃 다섯 명에게 인사하는 사람들 중 60.5%로 증가한다.
     * 연구에서는 누군가가 정기적으로 인사하는 이웃의 수를 알고 있는 것이 그들의 개인적인 웰빙의 유용한 지표로 보인다는 것을 제안한다.

        Hacker News 의견

     * 기사는 사회적 상호작용, 특히 이웃과의 상호작용이 개인의 복지에 미치는 긍정적인 영향에 대해 논의한다.
     * 많은 댓글러들이 개인적인 경험을 공유하며, 커뮤니티와 사회적 상호작용의 중요성을 강조했다.
     * 한 댓글러는 다른 사람들과의 교류를 통해 사회적 불안을 극복한 경험을 공유하며, 대부분의 사람들이 상호작용에 개방적이며 최선을 다해 삶을 이해하려고 노력한다고 강조했다.
     * 또 다른 댓글러는 블록 파티를 조직하는 성공적인 경험을 공유하며, 이를 통해 이웃들과 연결하고 새로운 우정을 쌓을 수 있었다.
     * 90년대 후반에 Mr. Rogers의 이웃이었던 한 댓글러는 그의 진정한 다른 사람들에 대한 관심이 단지 TV 인물이 아니라 실제 생활 특성이었다고 공유했다.
     * 한 댓글러는 강아지를 산책시키면서 이웃에 사는 더 많은 사람들을 만나게 되어 사회적 생활이 풍요로워졌다고 공유했다.
     * 몇몇 댓글러들은 이웃과의 연결에 대한 도전을 논의하였으며, 이는 이웃의 물리적 배치, 이웃의 행동, 또는 지역의 일반적인 문화와 같은 다양한 요인 때문이었다.
     * 한 댓글러는 미국 중서부 교외의 사회적 역학을 스페인의 작은 마을과 비교하며, 물리적 및 사회적 환경이 사회적 상호작용에 어떻게 영향을 미치는지 강조했다.
     * 네덜란드 출신의 한 댓글러는 낯선 사람들에게 인사하는 문화적 측면을 논의하며, 이것이 위치, 시간, 나이에 따라 어떻게 달라지는지 주목했다.
     * 기사에서 언급된 연구에 대한 일부 회의론이 제기되었으며, 한 댓글러는 더 높은 복지를 가진 사람들이 이웃에게 인사할 가능성이 자연스럽게 더 높을 수 있다고 제안했다.
     * 몇몇 댓글러들은 그들의 이웃이 시간이 지남에 따라 어떻게 변했는지에 대한 관찰을 공유했으며, 일부는 고립이 증가하고 야외 활동이 부족해지는 것에 대해 우려를 표현했다.
     * 한 댓글러는 도시에서 교외로 이사한 긍정적인 경험을 공유하며, 커뮤니티의 의미와 그것이 자신의 복지에 미친 긍정적인 영향을 강조했다.
"
"https://news.hada.io/topic?id=10411","Meta의 OpenAI에 대한 다음 공격: 무료 코드 생성 소프트웨어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Meta의 OpenAI에 대한 다음 공격: 무료 코드 생성 소프트웨어

     * 메타가 개발자들을 위한 자동 코드 생성용 AI 모델 ""Code Llama"" 를 발표할 준비 중으로, 빠르면 다음주에 출시 될 것
     * 새 모델은 OpenAI Codex 모델과 경쟁하며 Meta의 Llama 2 기반
     * Llama 가 오픈소스여서 다른 기업들이 쉽게 LLM을 도입했던 것처럼, 코딩에서도 유료 고객들을 많이 흡수하게 될 것
     * OpenAI 역시 오픈소스 LLM인 G3PO를 개발하고 있다고 얘기한바 있음
     * Code Llama가 Meta가 5월에 내부 공개한 AI코딩 도우미인 CodeCompose 와 관련이 있는 지는 확실하지 않음

   코파일럿 탭나인 코드위스퍼러 다 써봤는데 코파일럿만한게 없긴 하던데요...
   역시 학습 베이스가 넘사라 그런건지

   기존에 제가 알고 있는 코딩AI는~

   유료인 깃허브코파일럿 외에~

   무료인,
   허깅페이스의 스타코더 / 아마존의 AWS 코드위스퍼러 / 코디엠 등등이 있는 걸로 압니다.
   (참고: https://hamonikr.org/index.php/… )

   저는 이중에서 스타코더를 실제 사용하고 있는데요,
   추후 있을,
   Meta의 Code Llama 발표도 기대됩니다.

   공개만 할게 아니라 코파일럿 처럼 서비스를 해줘야...
   집에서 코드짜자고 4080 도입할순 없자나요..

   서비스까지 해줘

   llama.cpp 같은 프로젝트가 나올수도 있죠

   WoW
"
"https://news.hada.io/topic?id=10371","HN에게 알림: t.co가 일부 도메인에 5초 지연을 추가하고 있음","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 HN에게 알림: t.co가 일부 도메인에 5초 지연을 추가하고 있음

     * ""Twitter에서 NYTimes.com 또는 threads.net으로 가는 링크를 클릭하면 t.co가 올바른 주소로 전달하기 전에 약 5초의 지연이 발생합니다.""
     * ""Twitter는 원치 않는 도메인을 차단하지 않지만, 방문하면 시간을 낭비하게 됩니다.""
     * ""나는 태평양 시간으로 대략 정오에 추가된 NYT 지연을 계속 추적하고 있으며, 이 지연은 분명히 의도적인 것입니다.""

        Hacker News 의견

     * t.co, URL 단축 서비스에 의한 일부 도메인에 대한 5초 지연 추가에 대한 기사.
     * 일부 사용자들은 이를 ""비의미적 리다이렉트""로 비판, 적법한 HTTP 위치 헤더 리다이렉트 대신 META 새로고침 태그가 있는 HTML 페이지를 사용하는 방식.
     * 이 방식은 불편하고 명백히 정당화되지 않은 것으로 보이며, 사용자 에이전트 감지로 인해 curl/wget에서는 보이지 않음.
     * 사용자가 뉴욕 타임스(NYT) 도메인에서 테스트로 지연을 확인했지만, gov.uk에 대해서는 즉시 리다이렉션을 확인함.
     * 이 문제의 해결책은 t.co의 모회사인 Twitter를 사용 중지하는 것이라고 일부 사용자들은 제안, 이를 통해 문제를 해결하거나 사업을 중단하도록 강요.
     * 다른 사람들은 지연이 의도적이지 않고 쿠키 체크의 부실한 처리로 보임.
     * 사용자가 추가 세부사항과 지연을 테스트하기 위한 코드를 제공, HTTP 서버에 쿠키 헤더로 데이터를 전달하기 위해 -b 옵션을 사용한 curl 명령어 사용을 제안.
     * Hacker News 자체도 원하지 않는 도메인 목록에서 제출물을 그림자 플래그하는 것으로 제안이 있음.
     * 일부 사용자들은 이 문제를 Google AMP가 담장 정원을 장려하는 것에 대한 비판과 비교, 이것이 더 나쁜 관행이라고 제안.
     * RSS를 제공하고 ""t.co""로 URL을 단축하지 않는 Nitter 인스턴스를 사용하는 것과 같은 대안이 제안됨.
     * 일부 사용자들은 Hanlon의 면도날을 들먹이며, 지연이 악의가 아닌 어리석음 때문일 수 있다고 제안.
"
"https://news.hada.io/topic?id=10423",""Ask 문화 vs. Guess 문화"","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ""Ask 문화 vs. Guess 문화""

     * ""Ask vs. Guess Culture"" 개념에 대한 논의, 2007년 Metafilter의 tangerine 사용자가 처음 공유한 개념
     * Ask 문화와 Guess 문화, 각각의 기대치를 가진 두 가지 다른 의사소통 방식
     * Ask 문화에서는, 비합리적이거나 이루기 어려운 것을 직접 요청하는 것이 허용됨
     * 반면에, Guess 문화는 간접적인 신호와 맥락에 의존, 다른 사람이 '예'라고 할 것이라고 확신할 때만 요청
     * 저자는 이사 상황을 시나리오로 사용하여 두 문화의 예를 제공
     * 또한 Ask 문화와 Guess 문화 간의 문화적, 세대 간 충돌에 대해 논의, 예를 들어, 많은 아시아 문화는 Guess 문화를 선호하며, 서양 사회는 Ask 문화와 더욱 일치
     * 저자는 이 두 문화를 이해함으로써, 특히 Ask 문화가 우세한 기술 산업에서의 전문적 환경을 탐색하는 데 도움이 될 수 있음을 제안
     * Guess 문화 개인에게 점차적으로 Ask 문화의 측면을 채택하도록 권장, 도움 요청, 기회에 대한 관심 표현, '아니오'를 듣는 것에 익숙해지는 것 등
     * 저자는 독자들에게 자신의 Ask 문화와 Guess 문화 경험에 대해 반성하고, 이러한 개념을 이해하는 것이 과거나 현재의 곤란에 대한 명확성을 제공할 수 있음을 묻는다.

        Hacker News 의견

     * ""Ask""와 ""Guess"" 문화 간의 차이에 대한 기사, 다른 문화 배경을 가진 커플의 예를 들어 설명
     * ""Ask"" 문화는 직접성을 특징으로 하며, 외부인들에게는 종종 무례하게 보일 수 있으며, 반면 ""Guess"" 문화는 공유된 맥락과 미묘한 신호를 통해 의미를 추론하는데 의존
     * 이러한 문화적 차이는 오해와 갈등을 초래할 수 있으며, 특히 손님을 초대하는 상황에서 그렇다
     * 이러한 문화적 차이를 공식적으로는 고맥락 문화(""Guess"")와 저맥락 문화(""Ask"")라고 함
     * 일부 사람들은 두 문화를 모두 이해하며, 다른 사람들은 자신이 성장한 문화에 기본적으로 의존
     * 기사에서는 또한 ""Tell"" 문화라는 세 번째 유형의 문화를 언급하며, 이는 직접적인 요청을 특징으로 하고 일반적으로 친밀한 상황에서 사용됨
     * 이러한 논의는 ""Ask""와 ""Guess""라는 라벨이 이러한 문화적 행동의 복잡성을 과도하게 단순화할 수 있음을 제안
     * 기사는 오해와 갈등을 피하기 위해 다른 문화적 행동을 이해하고 적응하는 것의 중요성을 강조
     * 일부 댓글은 이러한 문화적 행동이 이분법이 아니라 비효과적인 커뮤니케이션의 범주에 속한다고 제안
     * 기사와 댓글은 공감, 호기심, 효과적인 커뮤니케이션이 이러한 문화적 차이를 이해하는 데 중요하다고 제안
"
"https://news.hada.io/topic?id=10459","pykoi - LLM을 위한 데이터 & 피드백 수집용 UI 라이브러리","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 pykoi - LLM을 위한 데이터 & 피드백 수집용 UI 라이브러리

     * LLM의 결과에 대해서 챗봇 UI 형태로 피드백 옵션을 추가 가능 (vote & rank 피드백)
          + DB에 자동으로 수집되어 RLHF 에 이용 가능
     * 모델들의 결과값을 비교하고, 결과간에 드래그 & 드롭으로 Rank 지정 가능
     * 모델에 Retrieval Augmented Generation (RAG) 을 손쉽게 통합 가능
     * 수집된 데이터로 Reinforcement Learning with Human Feedback (RLHF)를 간편하게 실행 가능
"
"https://news.hada.io/topic?id=10453","원거리 물체는 확대되어 보여야 하지 않을까?","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        원거리 물체는 확대되어 보여야 하지 않을까?

     * ""각지름 거리 반전"" 개념에 대한 논의: 우주 확장과의 관계 및 원거리 객체 인식에 미치는 영향
     * 우주 확장: 공기가 들어가는 풍선처럼 은하가 시간이 지남에 따라 서로 멀어짐
     * 빛의 스트레칭: 원거리 은하에서 오는 빛이 여행하는 동안 늘어나, 더 긴 파장인 레드시프트를 만듦. 더 큰 거리는 더 많은 레드시프트를 초래하여 매우 먼 은하가 더 붉게 보임
     * ""각지름 거리 반전""의 특정 지점: 레드시프트와 우주 확장이 혼합되어 원거리 객체가 확대되게 보이는 지점. 이는 우주의 확장이 증가한 빛의 여행 거리를 상쇄하기 때문임
     * ΛCDM 모델에서: 지배적인 우주 프레임워크에서는 암흑 에너지와 암흑 물질이 확장에 영향을 미침. 약 150억 광년 거리에서 (레드시프트 1.5에 해당), 확장과 레드시프트는 ""반전"" 지점을 초래함. 이 지점을 넘어서면, 객체는 이들 결합 요인으로 인해 더 크게 보임
     * xkcd 코믹에서 생생하게 전달된 이 아이디어: 가까운 은하는 더 크고 밝으며, 먼 은하는 더 작고, 매우 먼 은하는 더 크지만 더 어둡고 붉음
     * 깊은 통찰력을 위해 ""각지름 거리 반전 지점 이해""에 대한 자료를 탐색하십시오. 이들은 우주 확장이 우리의 우주 인식을 어떻게 형성하는지에 대한 이해를 돕습니다.

        Hacker News 의견

     * 우주의 팽창으로 인해 먼 거리의 물체가 확대되어 보이는 개념에 대한 논의.
     * ""Expanding Confusion""(2003)이라는 교육적인 논문이 이 주제에 대한 클래식한 읽을 거리로 추천됨.
     * 가속화된 우주의 팽창 개념과 고정된 유한한 빛의 속도에 대해 논의하며, 이 두 가지를 동시에 이해하는 것이 어려울 수 있다는 경고가 함께 제시됨.
     * Terrell 회전 현상이 제기되며, 이는 상대론적 속도로 움직이는 물체가 관찰자에게 회전하는 것처럼 보이는 방식을 설명함.
     * 우주마이크로파 배경 복사선이 이 확대의 가능한 한계로 제안되며, 이는 빅뱅의 잔여물로서 최대한 확대되고 레드시프트된 것임.
     * Poynting 벡터의 해석이 또 다른 머리를 아프게 하는 주제로 언급됨.
     * 우주의 가장 깊은 부분의 구조에 대한 의문이 제기되며, 은하계 형성 이전의 구조물이 은하보다 작지만 하늘의 큰 부분을 차지하는지에 대한 의문이 제기됨.
     * 우주의 팽창에 대한 미래가 논의되며, 대부분의 은하가 팽창 속도가 높아 지구에서 보이지 않게 될 가상 시나리오가 제시됨.
     * Neil deGrasse Tyson의 관측 가능한 우주에 대한 설명이 참조됨.
     * 안드로메다 은하에 대한 질문이 제기되며, 우리에게 상대적으로 움직이는 은하의 움직임으로 인해 뒷면의 별들이 하늘에서 전면의 별들과 다른 위치에 나타나야 하는지에 대한 질문이 제기됨.
     * 우주의 팽창에 대한 맥락에서 ""인플레이션을 조정하는"" 것에 대한 유머러스한 댓글이 달림.
     * 확대가 먼 거리의 물체 탐지에 미치는 영향에 대해 논의되며, 이는 빛이 퍼져 물체를 탐지하기 어렵게 만들지만, 그렇지 않으면 놓칠 수 있는 세부 사항을 관찰할 수 있게 해준다는 점을 언급함.
     * 논의는 먼 거리의 물체에 대한 확대 효과를 보여주는 xkcd 만화 언급으로 마무리되며, 이 개념이 얼마나 놀라운지에 대한 코멘트가 추가됨.
"
"https://news.hada.io/topic?id=10375","Netflix, 게임 스트리밍 베타 테스트 시작 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Netflix, 게임 스트리밍 베타 테스트 시작

     * 일부 TV 및 TV 동글, 웹을 통해서 게임을 스트리밍. 캐나다/영국의 일부 사용자 대상
     * 첫 게임들은 Oxenfree (어드벤처) 와 Molehew’s Mining Adventure (아케이드)
     * TV로 게임시에 조작은 스마트폰으로 진행
          + 안드로이드에선 Netflix 앱이 컨트롤러로 동작
          + iOS에서는 별도의 Netflix Game Controller 앱을 다운받아야 함
          + 웹에서는 마우스와 키보드로 플레이 가능
     * 지원 기기
          + 아마존 Fire TV, Chromecast with Google TV
          + LG, 삼성 스마트 TV
          + Nvidia Shield TV, Roku 기기와 TV, Walmart Onn
"
"https://news.hada.io/topic?id=10430","Sweep - AI 쥬니어 개발자","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Sweep - AI 쥬니어 개발자

     * 버그 리포트와 피쳐 리퀘스트를 코드로 만들어주는 AI 개발자
     * 쥬니어 개발자 처럼 동작 시키는게 가능
     * ""Sweep:"" 이라고 제목이 붙은 이슈를 직접 PR로 바꾸고, PR에 대한 답변 및 댓글을 처리
"
"https://news.hada.io/topic?id=10471","FreeBSD, SYSINIT의 버블소트를 머지소트로 변경 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    FreeBSD, SYSINIT의 버블소트를 머지소트로 변경

     * FreeBSD는 부팅시에 7%의 시간을 SYSINIT들을 버블소트하는데 사용한다는 제보가 있었음
     * 1996년에 만들어진 코드고, 그 시절에는 정렬할 SYSINIT이 약 30개 정도 였지만, 현재는 천개 이상이 되면서 오래 걸리게 됨
     * 최근 커밋에서 SYSINIT Array들을 SLIST로 변경해서 머지소트가 가능해지고, 새로운 SYSINIT 들을 추가하는 것도 빨라짐
          + 머지소트는 약 ~100배까지 빠름
     * Firecracker 기준 전체 부팅 28ms 중 2ms 를 절약할수 있게 됨

   일정 규모 이하의 데이터셋에 대해서는, 작고 이해하기 쉬운 코드를 사용하는 것이 유효했을 것입니다.
   그런 결정으로 잔존하는 느린 알고리즘 용례는 여전히 많을 거구요.
   (편견입니다만) 이런 데에 딴지를 거는 사람이 있다면, 도움은 안되면서 불평만 많은 사람일 거라는 생각이 강하게 드네요.

   FreeBSD는 부팅시에 7%의 시간을 SYSINIT들을 버블소트하는데 사용

        Hacker News 의견

     * FreeBSD가 SYSINTs에서 bubblesort를 mergesort로 교체하여 부팅 시간이 크게 개선되었습니다.
     * bubblesort의 사용은 실수가 아니었으며, 특정 사용 사례가 그 비효율성을 부각시킬 때까지 많은 년 동안 잘 작동했습니다.
     * AWS Lambda와 같이 자주 부팅하는 경우에 필요한 최적화였습니다.
     * FreeBSD 커널은 Firecracker에서 부팅할 때 SYSINTs에서 bubblesort를 실행하는 데 7%의 시간을 소비했습니다.
     * mergesort로의 변경은 코드 5줄의 순감소와 ""100배 빠른"" 부팅 시간을 가져왔습니다.
     * 처음에 bubblesort를 사용하기로 한 결정은 작업 수와 같은 요소에 의해 영향을 받았을 수 있습니다.
     * mergesort로의 변경은 작은 증가가 전체 성능에 중요한 차이를 만들 수 있음을 보여주는 예입니다.
     * 일부 사용자들은 bubblesort의 알려진 비효율성과 직관성 부족을 고려할 때 초기 사용에 의문을 제기합니다.
     * 이 변경은 FreeBSD의 부팅 시간과 SYSINTs에서의 bubblesort 사용에 대한 관련 토론을 촉발시켰습니다.
"
"https://news.hada.io/topic?id=10388","오웰의 'Animal Farm'에 대한 미발행 서문","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      오웰의 'Animal Farm'에 대한 미발행 서문

     * 1971년에만 발견된 조지 오웰의 중편소설 '동물농장'의 미발표 서문에 대한 기사
     * ""언론의 자유""라는 제목의 오웰의 서문, 자유 사회에서 검열의 본질에 대한 중요한 통찰 제공
     * 스탈린을 비판하거나 그의 잔혹함을 암시하는 것을 꺼리는 영국 지식인들의 마음 때문에 '동물농장' 첫 판에서 서문이 생략됨
     * 전쟁 문제가 아닌 대중의 의견과 지식인의 겁쟁이 때문에 오웰이 그의 우화를 출판하는 데 상당한 어려움을 겪음
     * 소련 러시아에 대한 비판적이지 않은 숭배의 지배적인 교리와 소련 정권에 대한 심각한 비판의 자발적인 검열에 대한 오웰의 비판을 강조하는 기사
     * 완전주의자가 아닌 왼쪽의 사람인 오웰, 영어로 쓰여진 가장 널리 호감을 얻는 대중적인 전체주의의 악에 대한 해부를 출판
     * 그의 책에 대한 영국 지식인들의 반응에 대한 오웰의 비판, 그들의 리더와 진보의 원인에 대한 그의 비판으로 인해 부정적일 것으로 예상
     * 오웰이 정직과 자유의 방어를 촉구하는 서문을 마무리, 자유가 무엇을 의미하는지, 그들이 듣고 싶지 않은 것을 사람들에게 말할 권리를 의미한다고 주장
     * 오웰의 상황과 현재 사회에서 검열 요구 사이의 유사점을 그리는 기사
     * 실제 이름이 에릭 블레어인 오웰이 '동물농장'에 대해 전 세계 수백만 명이 훨씬 더 긍정적인 평가를 내린 것에 만족할 것이라고 저자가 주장

        Hacker News 의견

     * 조지 오웰의 ""동물농장""에 대한 미발행 서문에 대한 기사, T.S. 엘리엇을 포함한 여러 출판사들이 거절했음.
     * 엘리엇의 거절은 이야기 속 돼지들이 다른 동물들보다 더 똑똑하여 농장을 운영하는 데 가장 적합하다는 그의 견해에 기반한 것으로, 이는 책의 공산주의 비판과 모순됨.
     * 노암 촘스키가 수십 년 동안 이 서문을 지지해 왔음.
     * 기사는 당시 영국 지식인들이 스탈린을 비판하는 것을 꺼려했던 이유에 대해 의문을 제기하며, 이는 당시 지식인들 사이에서 인기가 있던 공산주의를 비판하고 싶지 않았던 욕망 때문이었을 수 있음을 제안함.
     * 전체 서문과 더 깔끔한 레이아웃이 있는 사이트로의 링크 제공.
     * 기사는 처음에 ""동물농장""을 어린이로서 동물들이 농장을 운영하는 이야기로 단순히 받아들였던 독자에 대한 개인적인 일화도 공유함, 그 후에야 그것의 은유적인 성격을 깨달음.
     * 기사는 특히 전시 중의 검열 문제를 논의하며, 오웰의 견해인 자유란 사람들에게 그들이 듣고 싶지 않은 것을 말할 권리를 의미한다는 말을 인용함.
     * 기사는 ""동물농장""의 출판에 대한 역사적 맥락을 제공하며, 이는 제2차 세계대전이 끝난 직후에 출판되었으며 승리를 위한 싸움과 희생의 대부분이 소련에 의해 이루어졌음을 지적함.
     * 기사는 또한 서문의 진위에 대해 의문을 제기하며, 그것의 선전적 가치로 인해 사기일 수도 있다고 제안함.
"
"https://news.hada.io/topic?id=10373","React 때문에 잊어버렸거나 (혹은 모르고 있던) 것들","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    React 때문에 잊어버렸거나 (혹은 모르고 있던) 것들

     * 사용자 인터페이스 구축을 위한 널리 사용되는 JavaScript 라이브러리인 React에 대한 비판적인 검토 및 대안 제안.
     * React는 시대에 뒤떨어진 것으로 비판되며, 성능과 적응성이 부족하다는 지적.
     * 저자는 React의 생태계가 불필요하게 크다고 주장하며, React hooks는 이제 시대에 뒤떨어졌다고 주장.
     * 프론트엔드에서 렌더링과 스케일링에 집중할 필요가 없다는 주장.
     * 서버 사이드 렌더링이 더 이상 독특하지 않으며, 양방향 데이터 바인딩이 나쁜 생각이 아니라는 주장.
     * 스타일링이 React보다 단순하며, 다른 프레임워크들이 배우기 어렵지 않다는 주장.
     * React 대안들이 단지 ""새롭고 반짝이는"" 것이 아니라 성숙하고 더 나은 성능을 제공한다는 주장.
     * Svelte, Vue, Solid, Fresh, Astro, Preact, Qwik 등 다른 프레임워크를 시도해 보는 것을 권장.
     * 저자의 개인적인 Favorite는 Svelte로, React보다 배우기 쉽고 성능이 더 좋다고 주장.
     * Svelte는 컴파일러로, 사용되지 않는 코드는 빌드 시간에 제거되어 더 작은 번들을 생성.
     * Svelte의 메타 프레임워크인 SvelteKit는 다양하고 강력하며, 정적, 서버 렌더링, 엣지 배포가 가능.
     * Vue는 React보다 더 나은 성능과 더 UI 중심적인 접근법을 제공하며, JSX보다 기본 HTML에 가까운 템플릿 언어를 사용.
     * Solid는 React의 더 성능이 좋은 버전으로, 복잡성, 성능 문제, 보일러플레이트를 제거. 자체 메타 프레임워크인 SolidStart를 제공.
     * Fresh는 Deno 위에 구축된 서버 렌더링 프론트엔드 프레임워크로, 섬 아키텍처를 가지고 있음. 최소한의 JavaScript와 빠른 동적 콘텐츠 로딩을 제공.
     * Astro는 고성능 정적 사이트 생성기로, 동적 서버 사이드 기능을 가짐. 기본적으로 JavaScript를 전혀 사용하지 않으며, 다양한 프론트엔드 프레임워크와 호환.
     * Preact는 React의 더 슬림하고 빠른 버전으로, React가 가지지 못한 몇 가지 우수한 기능을 획득.
     * Qwik은 새로운 접근법으로 서버 렌더링 React와 유사한 코드를 제공하며, 많은 상호 작용이 있는 프로젝트에 좋은 선택.
     * Lit, Stencil, Polymer과 같은 웹 컴포넌트 라이브러리는 동일한 컴포넌트를 여러 환경에서 재사용하거나 프레임워크 변경에 대비하려는 프로젝트에 권장.
     * 저자는 기술 산업이 React에서 새로운 것으로 기술 채택에서 또 다른 도약을 할 수 있음을 제안.

   이 글은 무례한 후배가 “선배님~ 이제 별 볼일 없는데 은퇴하시죠?” 라는 말을 하는 글 같아서 같잖다.

   기사에 대해 과열되는것 같습니다.
   사이트 이용법 의 댓글달기 항목을 확인하여 주시기 바랍니다.

   친절하고 점잖게 얘기해주세요.
   글쓴이를 저격하지 말아주세요.
   반론이 있다면 그 내용만을 적어주세요.

   개인적으로는 그냥 JS 같은 언어가 서버 개발언어로 쓰이는게 별로라고 생각합니다.
   요샌 TS 기반도 많긴 하지만 결국 결과물은 JS로 나오는거고... Python도 그렇고 JavaScript도 그렇고 언어 측면에선 정말 마음에 안드는데 편의성 때문인지 많이 쓰이네요.
   언어의 민주화 같은 느낌이네요

   Vercel 이 피땀흘려가면서 만들어놓으니 너무 당연하고 별것 아닌것처럼 여기는것 같아서 별로네요.

   학교 다닐 때 문법 오류도 안잡아주는 에디터로 지옥같은 서블렛 짜던 기억만 떠오르면 리액트던 스벨트던 모든것에 감사하게 되더군요.....

   이것 저것 써보면 리엑트의 장담 점이 보이는데 리엑트가 좋다 JSX 가 강점이다 hooks 에 대한 부정 적인 의견에 부정 적인건 맹목적인 종교 같은 느낌 이네요

   JSX가 아니라 '표현력'에 강점이다라고 썼구요.. hooks 는 실제로 원문을 읽어보니 hooks 패턴 자체를 비판한게 아니라 그저 더 이상 리액트만의 강점이 아니다 정도로만 쓴 것 확인했습니다. 이 정도에는 동의할 수 있죠.번역이 저렇게 되어 있으니 제가 오해했네요.
   그래서 댓글쓴이 님이 파악하신 '장담 점'은 뭔지 구체적으로 써주실 수 있나요?

   라이브러리나 프레임워크들이 설마 장점만 있고 단점은 없다고 생각 하시는 건 아니 겠지요? 혹시 쓰면서 리엑트 단점 같은건 못 느끼셨나요 ? 꼭 단점을 써달라 하시는 것 보니 한번도 못 느끼 셨나 보네요? 장단점 이란게 장점도 있다는 말인건 아시죠 ? 장점도 많지만 단점도 많죠 그중 어제 읽은 건데요 링크는 모르겠네요 서버컴포넌트에서는 서버컴포넌트 밖에 context 를 사용 할 수 없데요 그로인해 js-in-css 를 사용 할 수 없다네요 제가 직접해본건 아니라 진짜 단점이라고 말할 수 없네요 ㅎㅎ 훅요 ? 저는 정말 획기 적인 아이디어 제공자라고 생각 합니다 그런데 지금은요 ㅎㅎ 리엑트 보다 더 똑똑 하고 사용하기 편한 시그널이 있죠 본문에도 있고요

   예 ㅋㅋ 잘들었습니다

   이 와중에도 빠져있는 angular 앵흑흑

   전혀 동의가 되지 않네요, JSX 같은 경우는 HTML 보다 표현력에 강점이 있으니 일부러 쓰는 거고
   양방향 데이터 바인딩이 쭉 나쁜 생각이었던 일반적인 의견이 왜 갑자기 뒤집힌지도 의문..이고
   불필요하게 큰 생태계는 또 무슨 말일까요 ? 그리고 hooks 가 시대에 뒤떨어졌다..
   개인적으로 실제 프로그래머가 쓴 글인지조차 의문이네요

   납득이 되는 내용이 꽤 많은 것 같아요. 여전히 React를 쓰고 있긴 하지만...

   use 훅 함수와 서버 컴포넌트 공식화 하면 다시 일어설 수 있습니다. 하지만 다른 기술이 가만히 있지는 않죠.
   lit 으로 범용 프레임워크 만드는 케이스가 늘어나고 있어서 관심을 가지기 시작했고(한국은 여전히 듣보),
   next.js 대신 astro 와 react 조합도 상당한 매력을 갖고 있습니다(next.js 보다 astro+react 로 회사 홈페이지 뚝딱 만든 경험 있음)
   한국에서는 받아들이기 어렵겠지만, 프론트엔드는 원래 이렇게 그냥 심심하면 변화하는 찻잔속 태풍같은 기술이라는 것을 다들 인지했으면 좋겠군요.

   기술적으로 어떤 트레이드오프가 있는지 구체적으로 설명하는게 아니라 단순히 성능이 낮다는 주장에는 무리가 있어 보입니다. 예를 들어 React이외의 아일랜드 구현체들은 우선순위 기반 로딩같은것들이 불가능하니까요.

   전자정부 프레임워크에 다른게 등장하지 않는 이상... react는 국내에서 강력할 수밖에 없죠

   react 국내 인기와 전자정부와 무관합니다. 실제로 전자정부 사용처 중 리액트 사용률은 0 이거니와 react 는 gs 인증이 안되어 있기 때문에 공공 사용이 어렵습니다.
   (그에 반해 vue는 삼성이 vue 사용한 프레임워크 gs인증 해버리는 바람에 의외로 공공 사용이 가능)

   글쎄요. React의 대안으로 너무 많은 라이브러리들을 제시하고 있네요.
   포괄적으로 모든것을 다 고려했을때, 리액트 보다 뛰어난 점들을 어필해야 하지 않을까 싶네요.

   완전 동의합니다

   Vue, Nuxt 정말 좋은데, 국내에서는 입지가 좁아 아쉽습니다. Svelte는.. 입지를 말할 수 없는 상태인(ㅠㅠ)...

   그 좁은 입지에서도 쓰는 기업 보고 놀랐습니다. 실제로 제가 퍼블 의뢰 받을 때 있었고, 기쁜 마음으로 해줬었죠.

   10000번 맞는 말

        Hacker News 의견

     * 일부 개발자들은 Vue의 템플릿 언어가 JSX보다 기본 HTML에 가깝고, 템플릿 파일에서 조건문과 반복문을 쉽게 작성할 수 있기 때문에 선호한다.
     * React에서 filter, map, reduce 등의 언어 구조를 사용하는 것이 일부에게는 workaround보다 더 편리하다고 인식된다.
     * 한 개발자는 React에서 벗어나 서버 사이드 렌더링 프론트엔드와 vanilla JS를 사용한 경험을 공유하며, 이를 유지 관리하기 더 쉽다고 발견했다.
     * 일부 사람들은 이미 DOM이 React에 세 번째 파티 라이브러리를 통합하는 믿을 만한 방법을 제공하고 있기 때문에 Web Components를 과대평가된 것으로 본다.
     * React의 인기는 프로그래밍 모델에 기인하며, JSX는 여전히 JS 애플리케이션의 UI 부분을 JS 부분에 직접 통합하는 더 나은 방법 중 하나로 간주된다.
     * 비즈니스 관점에서, React와 같은 업계 표준을 고수하는 것은 쉬운 채용과 더 큰 생태계를 제공하며, 처음부터 구축할 필요를 줄여준다.
     * React의 Hooks는 클래스 컴포넌트 생명주기 메소드보다 크게 향상된 것으로 간주되며, 더 깔끔하고 강력한 코드를 제공한다.
     * 일부 개발자들은 React의 함수 컴포넌트와 Hooks를 실수로 보며, 이로 인해 코드베이스가 덜 유지 관리 가능하고 이해하기 어렵다고 판단한다.
     * React는 다른 프레임워크보다 더 기본적인 것으로 간주되며, 명령형에서 더 함수적인 패러다임으로 전환한다.
     * Google이 Web Components를 명세화하기 위해 Alex Russel에게 지불한 금액에 대한 기사 인용은 Web Components와 React 사이의 직접적인 경쟁 때문에 편향된 것으로 간주된다.
     * 일부 개발자들은 웹 프로그래머들이 ""스스로 해보기""와 실용적인 방식으로 복잡한 시스템을 구축하는 능력을 잃었다고 느끼며, React와 같은 프레임워크가 종종 과도하게 사용되고 있다고 느낀다.
     * 기사의 저자는 예시를 제공하지 않고 현재 솔루션들 사이의 역사와 차이에 대한 전문성이나 이해가 부족하다는 비판을 받는다.
     * 개발자들이 렌더링 성능에 대해 걱정할 필요가 없다는 기사의 주장에 일부 사람들이 동의하며, React가 개발자들에게 useMemo와 useCallback과 같은 기능을 사용하도록 요구하는 것이 의문스럽다고 느낀다.
     * 개발자들이 오직 React 개발자가 되어 다른 방법을 찾을 수 없게 되는 기사의 주장에 일부 사람들이 동의하며, React가 컴포넌트, 상태, Hooks와 같은 정의를 도입함으로써 기본 프로그래밍 개념에 대한 이해가 손실되었다고 느낀다.
"
"https://news.hada.io/topic?id=10461","SpaceTimeDB - DB와 서버를 하나로 결합","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      SpaceTimeDB - DB와 서버를 하나로 결합

     * 관계형 데이터베이스 이면서, 어플리케이션 로직을 직접 저장 가능
          + 'Modules' 라고 부르는 스토어드 프로시져 형태
     * 별도의 서버 없이 클라이언트가 직접 DB와 접속해서 어플리케이션 로직을 DB내부에서 실행
     * 배치나 OLAP 작업대신 '최고의 속도'와 '최소 레이턴시'를 보장하기 위해서 최적화
          + 모든 어플리케이션 상태를 메모리에 저장하는 방식으로 속도를 달성
          + 데이터는 WAL(Write-Ahead-Log) 로
     * MMORPG 인 BitCraft Online 의 실제 백엔드가 하나의 SpacetimeDB 모듈로 실행중. 별도 서버 없음
     * 임베디드 데이터베이스 라이브러리 동작해서 자신의 어플리케이션에 임베드 가능
          + 또는 별도 스탠드얼론으로 직접 실행도 가능 (spacetime CLI 이용)
     * Rust로 된 싱글 바이너리로 맥/리눅스/윈도우 설치 지원
     * ""Multiplayer at the speed of light""

   오라클의 PL/SQL같은걸까요?

   개념상은 비슷하긴 한데 언어지원폭이 넓어서 더 범용적일듯 합니다.

   오 흥미롭네요

   나중에 다른 언어도 더 지원할 생각이라던데, 꽤 괜찮은 아이디어 같아요.
   성능 고민이 한층 줄어들겠네요.

   깃헙 레포 가보니 Rust 로 작성된거같은데, 'Go 바이너리로 맥/리눅스/윈도우 설치 지원' 이에 대한 내용이 어디있는지 알수있을까요?

   엇 제가 적다가 뭔가랑 헷갈렸나보네요. 수정해두었습니다.
"
"https://news.hada.io/topic?id=10389","Spring 프레임워크 6.1, 이제 Virtual Threads 및 JDK 21과 호환 ","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           Spring 프레임워크 6.1, 이제 Virtual Threads 및 JDK 21과 호환

     * Virtual Threads (OpenJDK's Project Loom) 지원 및 JDK 21과 전반적인 호환을 제공
     * 전용 VirtualThreadTaskExecutor 추가
     * 기존 SimpleAsyncTaskExecutor, SimpleAsyncTaskScheduler 에도 가상 쓰레드 모드 제공
     * JVM Checkpoint Restore(Project CRaC) 연동

   한국에서 스프링 사용 용도가 postgREST 수준의 DB 미들웨어 취급이 대부분이라 당장 저 스레드를 활용한 병렬처리니 동시성 처리니 뭐니 다 ACID 궁합이 최악이다 보니 네임드 업체 말고는 절대 안쓰는게 현실입니다. 왜 절대냐고요? 함부로 말하지 말라고들 하죠. 하지만 SI SM 경험해 보신 분이라면 왜 절대인지 알게 될 겁니다. 절대 못 써요... 당장 비즈니스 로직을 DB에서 어떻게든 해결하려는 것부터가 틀렸죠.

   어우...공감합니다 ㅠㅠㅠ 비지니스로직을 DB에서 해결..ㅠㅠ

   HN 에도 이런 댓글이 있군요
   https://news.ycombinator.com/item?id=37147996
   ""JDK의 이러한 모든 훌륭한 기능에도 불구하고 대부분의 포춘 500대 기업은 여전히 JDK8 또는 9를 사용하고 있을 겁니다""

   Java를 쓰는 많은 곳이 비슷한 상황일듯 합니다. 하지만 바뀌어 가겠죠

   다른 나라는 몰라도 한국은 100년 지나도 절대 안바뀝니다. 젯브레인에서 자바를 많이 사용하는 국가 인증까지 해주고 정부부터 무조건 개발가이드를 자바와 C만 제공하고 있으며(자스는 커녕 파이선 시큐어코딩 메뉴얼 없음) 전자정부프레임워크를 위시한 스프링을 네키라쿠배부터 애용하고 있는 시스템을 해까닥 갈아엎기도 어려울 정도의 독점적인 인력풀 현실인 데다가 아직도 공공에서는 자바 11로 만든 복시스템 장애 때문에 자기 입장에서 검증이 안됐으니 자바 1.6을 주니어에게 강요까지 하면서 아직도 국내 자바 대표 커뮤니티에서 자바 17 교육도 시기상조라는 목소리가 지지받는 한국 에서요? 푸하하핳하...

   제가 좀 조롱하는듯한 말투라면 사과드리죠. 하지만 제가 말한 사실은 바뀌지 않는게 현실입니다. 당장 제가 그 산 증인이거든요. 10여년간 일하면서 점점 암울해지는 현실을요... SI SM이 아직도 개발인력시장의 7할입니다...

   너무 비문이라서 조롱하는 듯한 말투이셨는지도 몰랐네요. 혹시 제가 난독증일 수도...

   웃음과 해학
"
"https://news.hada.io/topic?id=10476",""임원 기능 도용임원 기능 도용""

     * ""Executive Function Theft"" (EFT)라는 개념 소개, 저자가 만든 용어로 관리적이거나 반복적으로 인식되는 결정, 작업, 책임을 고의적으로 다른 사람에게 전가하는 것을 설명
     * EFT는 종종 의식적으로 악의적이지 않지만, 한 사람이 다른 사람보다 자신의 실행 기능을 우선시하는 결과로 발생. 이 행동은 받는 사람의 실행 기능이 고갈될 때까지 반복됨
     * EFT는 기업 환경에서 흔하며, 저자는 미국의 건강 유연 지출 계정(FSA) 관리를 EFT의 주요 예시로 인용
     * 저자는 또한 학술 서비스 업무에서의 EFT, 특히 일부 개인이 관리 업무의 과도한 부분을 맡게 되는 경우를 논의. 이로 인해 서비스 책임의 불균형이 종종 발생하며, 종종 성별 요소가 포함됨
     * EFT는 가정에서도 발생하며, 한 사람이 대부분의 결정을 내리고 물류를 처리해야 하는 경우가 많아 결정 피로를 초래. 이로 인해 개인 또는 가족을 위한 큰 계획을 세우는 시간을 빼앗김
     * 저자는 EFT가 다른 사회적, 건강적 요인과 교차하여 그 영향을 악화시킨다고 지적. 예를 들어, 실행 기능 장애나 신체 장애를 가진 사람들은 추가적인 장벽에 직면할 수 있음
     * 저자는 EFT를 줄이려면 리더십 역할을 하는 사람이 패턴을 방해하거나 개인이 해로운 행동을 인식하고 그것을 바꾸려는 노력이 필요하다고 제안. 또한 친구나 동료에게 결정이나 작업에 참여하고 싶은지, 저자가 처리하는 것을 선호하는지 묻는 것을 제안
     * 저자는 EFT 개념이 독자들에게 이 행동을 방해하는 데 필요한 단어를 제공하고, 특히 기업이 그들의 시간과 결정력을 낭비하는 것에 대항하는 데 도움이 되길 바라며 결론을 내림

        Hacker News 의견

     * 기사는 'Executive Function Theft (EFT)'라는 개념을 논의하며, 이는 사람의 정신적 에너지를 소모시키는 작고 사소한 일들의 부담을 설명하는 용어입니다.
     * 일부 독자들은 기사의 성별화된 논쟁이 미묘함을 부족하다고 지적하며, EFT 문제가 특정 성별에만 국한되지 않는다고 제안했습니다.
     * 기사에서 가사노동의 분배에 대한 논의는 논쟁을 불러일으켰으며, 일부 독자들은 저자가 자신의 주장을 지지하기 위해 데이터를 일부만 선택했다고 주장했습니다.
     * 저자가 Cal Newport의 ""Deep Work""에 대한 해석은 비판을 받았으며, 독자들은 이 책이 ""얕은 일""을 다른 사람에게 떠넘기는 것을 장려하지 않고 가능한 한 제거하려고 한다는 점을 지적했습니다.
     * 일부 독자들은 EFT 개념에 공감하며, 특히 기술 및 엔지니어링 리더십에서 작은 업무에 압도당하는 개인적 경험을 공유했습니다.
     * 저자가 ""theft""라는 용어를 사용한 것에 대해 일부 독자들은 이러한 업무를 처리하는 데 더 공동체적인 접근법을 제안했습니다.
     * 기사에서 EFT가 수정이 필요하다는 제안은 여러 가지 반응을 불러일으켰습니다. 일부 독자들은 동료들의 결정에 맞추고 특정 업무를 무시하는 것이 더 나을 것이라고 주장했습니다.
     * EFT 개념은 현실을 탐색하는 일부로 보았으며, 일부 독자들은 사람들이 어떤 업무를 맡을지 결정하는 데 행동력을 발휘할 수 있다고 제안했습니다.
     * 일부 독자들은 가족과 관계의 맥락에서 특히 개인적인 생활에서 EFT 경험을 공유했습니다.
     * 사람들이 이러한 업무에 ""아니요""라고 말하지 못하거나 하지 않는 이유를 탐구하는 후속 기사 아이디어가 제안되었습니다.
"
"https://news.hada.io/topic?id=10368","아마존, 제품 리뷰를 요약하는 생성형 AI 기능 출시","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     아마존, 제품 리뷰를 요약하는 생성형 AI 기능 출시

     * 아마존, 고객을 위한 제품 리뷰 요약 기능을 제공하는 새로운 생성 AI 기능 도입
     * 고객이 개별 리뷰를 읽지 않고도 다른 고객들이 제품에 대해 어떻게 생각하는지 이해하는 데 도움을 주도록 설계
     * AI가 리뷰에서 공통된 주제를 찾아내 제품 상세 페이지에 짧은 단락으로 요약해서 제공
     * AI가 생성한 리뷰는 현재 미국의 일부 모바일 쇼핑 고객들에게 넓은 범위의 제품들에 대해 제공되고 있음
     * 아마존은 고객 피드백에 따라 이 기능을 더 많은 쇼핑 고객과 추가적인 제품 카테고리로 확장할 계획
     * 이번 조치는 생성 AI 경쟁이 기술 회사들 사이에서 격화함에 따라 아마존의 제품 제안에 더 많은 인공지능을 통합하는 더 넓은 전략의 일부
     * 아마존 CEO인 Andy Jassy는 생성 AI가 회사에 있어 중요한 측면이 될 것이며, 아마존의 모든 사업 부문에서 여러 생성 AI 프로젝트가 진행 중이라고 밝힘
     * AI가 생성한 리뷰 외에도, 아마존은 고객이 리뷰에서 공통된 주제를 찾아내는 제품 인사이트 기능을 제공할 예정

   정식버전 출시
"
"https://news.hada.io/topic?id=10435","너무 시끄러운 차량에 대응하기 위해 암스테르담, "노이즈 카메라" 사용 예정","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               너무 시끄러운 차량에 대응하기 위해 암스테르담, ""노이즈 카메라"" 사용 예정

     * 암스테르담, 소음 차량에 대한 캠페인 시작, 너무 시끄러운 차량을 알리는 전기 도로 표지판 설치로 시작
     * 도시는 이 경고 표지판을 자동으로 과도한 소음 차량의 운전자에게 벌금을 부과하는 ""소음 카메라""로 교체할 계획
     * 소음 표지판을 이용한 시범 프로젝트는 도시 중심부의 Stadhouderskade와 암스테르담-노르드의 Molenaarsweg에서 시작, 이달 말에 더 많은 위치에서 이어질 예정
     * 소음 카메라 기술은 소리의 원천을 정확하게 파악할 수 있는 네 개의 마이크로폰이 달린 상자로, 벌금을 부과하기 위해 차량 번호판을 캡처하는 일반 속도 카메라와 연결됨
     * 현재 실험에서 얻은 데이터가 신뢰할 수 있다면, 암스테르담과 다른 대도시들은 이 기술을 인증하도록 내각에 요청할 것
     * 로테르담은 소음 오염을 줄이기 위한 보다 포괄적인 접근의 일환으로 암스테르담과 협력하여 유사한 실험을 진행 중
     * 암스테르담 시의 다른 조치로는 집행 절차 간소화 및 소음 카메라 적용에 대한 타당성 연구를 진행하는 것이 포함됨.

        Hacker News 의견

     * 암스테르담, 과도한 소음을 내는 차량에 대응하기 위해 ""소음 카메라"" 도입
     * 많은 사용자들, 변형 배기구와 시끄러운 오토바이로 인한 소음으로 고통받아 자신들의 나라에서도 비슷한 조치를 원함
     * 일부 사용자들, 시끄러운 차량이 더 안전하다는 일부 운전자들의 대중적인 생각에 반대하며 주장
     * 한 사용자, ""소음 카메라""가 과도한 소음을 감지할 때 작동하는 방향성 마이크를 갖춘 속도 카메라라고 명확히 설명
     * 소리의 2D 맵을 제공하는 음향 카메라, 더 고급 대안으로 언급
     * 사용자들, 암스테르담이 일반적으로 조용하여 시끄러운 차량이 특히 눈에 띈다고 주목
     * 자동차 제조사가 내부 스피커 시스템을 통해 엔진 소음을 재생하는 ""Active Sound Design"" 개념, 잠재적 해결책으로 논의
     * 일부 사용자들, 도시 지역에서의 대부분의 소음은 엔진이나 배기구가 아닌 타이어와 아스팔트 사이에서 나온다고 주장
     * 몇몇 사용자들, 이웃에서의 소음 방해에 대한 개인적 경험을 공유하며 소음 규제의 필요성을 제안
     * 한 사용자, 디젤 엔진 수리공, 많은 ""클린 아이들"" 디젤 및 현대 트럭이 디자인 때문에 무심코 소음 규제를 위반할 수 있다고 경고
"
"https://news.hada.io/topic?id=10390","Subs AI - OpenAI Whisper로 동영상의 자막 자동 생성하기","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Subs AI - OpenAI Whisper로 동영상의 자막 자동 생성하기

     * 완전히 오프라인으로 동작하는 자동 자막 생성기
     * 리눅스/맥/윈도우
     * 다양한 Whisper 구현체 지원 : whisper-timestamped, whisper.cpp, faster-whisper, whisperX
     * 서브타이틀 수정 기능
     * dl-translate 를 이용한 번역기능 제공 (페이스북 M2M 모델)
     * Web-UI + CLI + Python 패키지
     * CLI 를 통한 배치프로세싱, 파이썬 패키지로 자신만의 스크립트 개발 가능
     * SubRip(SRT), WebVTT, MicroDVD, MPL2, TMP 등의 자막 포맷 지원

   유사한 기능을 하는 맥용 앱도 있습니다. 맥에서 나오는 소리 출력을 받아서 - 텍스트 출력, 구글번역/Deepl API를 붙여서 번역을 할 수 있습니다.
   https://apps.apple.com/us/app/id6450404233

   저도 WhisperMate 써봤는데 깔끔하더라고요. 맥에서는 이게 좋은듯 합니다.
   윈도우용도 이렇게 깔끔하게 나오면 좋겠어요

   YouTube 에서 제공하는 자동생성되는 caption은 어떤식으로 생성될까요? Whisper는 정말 대단합니다. ChatGPT 앱에서 감탄하는것 중에 하나가, ChatGPT의 응답도 응답이지만, 음성인식 입력이 정말 대단하더군요. 쓸때마다 감탄...

   이거와 오늘 올라온 deepl까지 쓰면 덜덜

   윈도우에서 Docker 로 실행해봤는데 잘 실행되네요.
   모델별로 바꿔가며 인식해볼수도 있고, 자막도 잘 만들어줍니다.
   영어쪽은 아주 훌륭하게 되는데, 한국어는 오류가 좀 있긴 하네요.
   번역 성능은 그닥이라 그냥 영어로 만들고 다른 번역기 쓰는게 좋을듯 합니다.
"
"https://news.hada.io/topic?id=10429","나의 사이드 프로젝트를 위한 기술 스택 2023","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       나의 사이드 프로젝트를 위한 기술 스택 2023

     * Frontend: Typescript, Next.js, React, TailwindCSS, Zustand (state management), react-query, Cloudflare Pages (static sites), Google Cloud Run (for servers)
     * Backend: Node.js, Express (swap for Fastify if performance needed), ts-rest, TypeORM, knex, PostgreSQL, Redis, Google Cloud Run (servers), Digital Ocean (VPS servers, managed Postgres), Google Cloud Storage
     * Tooling: pnpm workspaces (monorepo), GitHub Actions (CI/CD)

   백엔드만 빼고 저도 쓰는 스택이군요...
   의외로 제가 작지만 의뢰받고 있는데 스택이 본문과 비슷해서 놀랐습니다.
"
"https://news.hada.io/topic?id=10401","Show GN: 공포테마 <기괴학교>","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Show GN: 공포테마 <기괴학교>

     * 학교를 배경으로 한 공포 테마
     * Random.GG에서 출시될 메타버스 플랫폼 ""Random Worlds""의 첫 번째 공간
     * 심약자는 플레이 하지 않으시길 바랍니다.
     * 이어폰을 착용하는 것을 권장합니다.

   공포 게임을 즐기지 않지만 이 게임은 즐겁게 플레이했습니다. 이어지는 다음 작품또한 기대가되네요 마치 어렸을 적 플레이하던 게임보이의 감성이 좋았습니다. 웹 기반인만큼 랜덤으로 다른 플레이어를 만날 수 있는 기능이 가장 인상깊네요 후속작들 기대하겠습니다.
"
"https://news.hada.io/topic?id=10414","DoctorGPT - 미국 의사 면허 시험을 통과하는 LLM","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   DoctorGPT - 미국 의사 면허 시험을 통과하는 LLM

     * Llama2 7b 모델을 의학 대화 데이터셋으로 파인 튜닝
     * 강화학습 및 Constitutional AI로 추가 개선
     * 모델은 3기가로 로컬 디바이스에서 동작
     * iOS/Android/Web 에서 실행 지원
     * 모델 훈련을 위해서 로컬 GPU 또는 Colab Pro 이용 필요(유료 인스턴스에서 약 24시간 소요)
"
"https://news.hada.io/topic?id=10442","Windy.com: 실시간 필터 기능이 있는 세계 날씨 웹사이트","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Windy.com: 실시간 필터 기능이 있는 세계 날씨 웹사이트

     * 글로벌 날씨 웹사이트인 Windy.com에 대한 기사
     * 서울, 도쿄, 베이징, 타이페이 등 전 세계의 실시간 날씨 업데이트를 제공하는 Windy.com
     * 풍속, 기온, 공기 질 등 다양한 날씨 데이터를 제공하는 웹사이트
     * 표면 입자를 애니메이션화하여 날씨 패턴을 시각적으로 표현하는 기능 제공
     * ECMWF, GFS, ICON 등 다양한 날씨 모델 간 전환 옵션 제공하는 웹사이트
     * 보다 상세하고 고급 날씨 데이터를 위한 프리미엄 기능 제공하는 Windy.com
     * 서부 해안으로 접근하는 허리케인 힐러리에 대한 극한 경보 등 날씨 경보 제공하는 웹사이트
     * 지도 기반의 레이아웃과 사용하기 쉬운 필터를 갖춘 사용자 친화적인 인터페이스의 웹사이트
     * 날씨 관련 프로젝트를 진행하는 소프트웨어 엔지니어를 포함한 누구나에게 정확하고 실시간 날씨 정보를 필요로 하는 유용한 도구인 Windy.com

        Hacker News 의견

     * Windy.com은 다양한 날씨 조건에 대한 실시간 필터를 제공하는 글로벌 날씨 웹사이트입니다.
     * 웹사이트의 시각화와 사용자 인터페이스는 매우 칭찬받고 있으며, 일부 사용자들은 이를 미국 국립 기상청(NWS)보다 더 나다고 평가합니다.
     * Windy.com은 허리케인 힐러리를 포함한 다양한 날씨 이벤트를 모니터링하는 데 사용되고 있습니다.
     * 이 웹사이트는 예상 경로를 오버레이하는 허리케인 추적기도 제공합니다.
     * 일부 사용자들은 개인 날씨 관측소 데이터를 Windy.com에 기여하여 데이터셋을 향상시킵니다.
     * Windy.com은 구름 층, UTC 시간 전환, 공항 정보 통합 등의 시각화를 포함한 조종사들을 위한 도구를 특별히 제작하여 인정받고 있습니다.
     * 웹사이트는 반응형 디자인과 모바일 앱을 위해 earth.nullschool.net과 같은 유사한 프로젝트에 비해 유리하게 비교됩니다.
     * 일부 사용자들은 ECMWF 웹사이트와 NOAA 사이트의 HRRRv4 모델과 같은 이러한 날씨 시각화의 출처를 확인해 보는 것을 제안하며, 더 정확한 데이터를 얻을 수 있습니다.
     * 사용자들은 날씨 관련 프로젝트에 대한 개인적인 경험도 공유하며, 이들이 제공하는 학습 기회와 도전 과제를 강조합니다.
"
"https://news.hada.io/topic?id=10417","Scenario Test: 인수 테스트 자동화로 자신감, 생산성 높이기 (GopherCon 2023 발표)","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Scenario Test: 인수 테스트 자동화로 자신감, 생산성 높이기 (GopherCon 2023 발표)

     * 성능, 강타입 언어 등의 이점을 누리기 위해 거대한 레거시 시스템을 Python에서 Go로 마이그레이션 했던 경험을 간단하게 소개합니다.
     * 마이그레이션 검증 과정에서 큰 역할을 했던 자동화 테스트 도구 Scenario Tester를 Go로 개발하기 위해 사용했던 전략, 도구 등을 소개합니다.
     * 그럼에도 불구하고 발생했던 장애 경험과 개선기를 공유합니다
"
"https://news.hada.io/topic?id=10481","생명을 구하는 것","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               생명을 구하는 것

     * 매킨토시 컴퓨터 초기 시절에 대한 기사, 특히 부팅 시간에 초점을 맞춤
     * 애플 공동 창업자 스티브 잡스, 매킨토시의 느린 부팅 시간에 대한 우려
     * 매킨토시의 68000 마이크로프로세서가 애플 II보다 10배 빠르더라도 플로피 디스크가 중요한 병목 현상
     * 잡스는 매킨토시가 처음 켜질 때 걸리는 부팅 시간에 특히 신경 쓰였으며, 이는 몇 분 이상 걸릴 수 있음
     * 디스크 드라이버와 파일 시스템을 작업하는 엔지니어인 래리 케년은 잡스에게 부팅 과정을 더 빠르게 만들라는 임무를 받음
     * 잡스는 부팅 시간을 10초라도 줄이면 일년 동안 수십 명의 생명을 구할 수 있다는 것을 설명하여 케년을 동기부여함
     * 이런 시간 절약에 대한 독특한 관점은 팀에게 유머로 받아들여졌지만, 이는 그 후 몇 달 동안 부팅 시간을 줄이는 데 이끌었음
     * 이 기사는 스티브 잡스의 마인드셋과 그의 끊임없는 효율성과 사용자 경험 추구에 대한 흥미로운 통찰력을 제공함

        Hacker News 의견

     * 애플의 한 노련한 엔지니어가 MacOS 8.x 부팅 시간에 대한 불만에 대한 근본 원인을 이해하는 중요성에 대한 일화를 공유
     * 엔지니어의 팀은 사용자들이 더 빠른 부팅 시간을 원하기 때문이 아니라 시스템 불안정성 때문에 자주 재부팅하고 있다는 것을 발견
     * 팀은 시스템 안정성 향상에 집중하여 재부팅 빈도를 줄이고, 그 결과 부팅 시간에 대한 불만도 줄임
     * 이야기는 고객의 필요성과 그 이유를 이해하는 것의 중요성을 강조
     * 또 다른 댓글에서는 Blizzard에서 팀을 동기부여하여 다운로드 및 설치 시간을 개선하는 전략을 공유, 대기 시간을 인간의 생명의 일부로 환산
     * ""빛의 속도""라는 개념이 도입, 이는 작업을 물리적 한계에 이를 때까지 최적화하는 것을 의미
     * 기사는 또한 스티브 잡스가 레스토랑 메뉴 설명을 사용하여 마이크로소프트 직원을 실리콘 밸리로 이동시켜 NeXT에서 일하게 만드는 유머러스한 일화를 공유
     * 댓글에서는 소프트웨어 성능과 속도의 중요성을 강조, 한 사용자는 느린 소프트웨어가 사용자의 불만과 엔지니어에 대한 부정적인 인식을 초래할 수 있다고 제안
     * 더 많은 개발 팀들이 성능을 우선시하고 사용자의 대기 시간을 줄이도록 요구하는 목소리가 있음
     * 일부 댓글은 기술의 발전에도 불구하고 현대 컴퓨터와 운영 체제의 느린 부팅 시간을 비판
     * 논의는 불필요한 UI 애니메이션으로 사용자 상호작용이 느려지는 문제에도 언급
     * 기사는 군사 작전과 같은 중요한 상황에서 빠른 재부팅 및 복구 시간의 중요성에 대한 논의로 마무리, 탱크의 주 무기 발사로 인한 내부 EMP 이벤트가 시스템을 재부팅하게 할 수 있음
"
"https://news.hada.io/topic?id=10427","DeepEval - LLM을 위한 유닛 테스팅","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       DeepEval - LLM을 위한 유닛 테스팅

     * 기본 철학은 ""Pytest for LLM""
     * 프로덕션 전환을 위해, LLM 파이프라인에 대한 오프라인 평가를 실행하는 파이썬스러운 방법을 제공
     * 파이썬 유닛 테스트 작성하듯이 LLM 어플리케이션(RAG 같은)용 테스트를 작성 가능
     * assert_llm_output 을 통해서 entailment / exact / bertscore 등의 메트릭으로 답변을 평가
     * 커스텀 메트릭 설정 및 기존 메트릭 수정도 가능
"
"https://news.hada.io/topic?id=10440","Moonbit: 빠르고, 간결하며 사용자 친화적인 WebAssembly 언어","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Moonbit: 빠르고, 간결하며 사용자 친화적인 WebAssembly 언어

     * Moonbit, WebAssembly (Wasm) 를 위해 특별히 설계된 새로운 언어로, 클라우드 및 엣지 컴퓨팅에서 그 잠재력을 최대한 활용하려는 목표
     * 전통적인 저수준 Wasm 언어인 Rust와 C/C++ 는 배우기 어렵고 컴파일 속도가 느리며, 고수준 언어인 Golang은 비효율적이고 무거운 코드를 생성
     * 빠르고, 간결하며, 사용자 친화적인 언어를 목표로 하는 Moonbit은 Wasm의 속도와 간결함을 제공하면서 기존 옵션의 단점을 없애려 함
     * 이 언어는 Hongbo Zhang와 그의 경험이 풍부한 팀이 주도하며, 그들은 언어 설계 및 개발 분야에서 10년 이상의 전문 경험을 보유
     * Moonbit은 Golang과 Rust에 영향을 받아, Golang의 패키지 시스템의 단순성과 Rust의 표현력을 통합하며, 강력한 패턴 매칭, 타입 추론, 제네릭, 특성과 같은 임의 다형성을 포함
     * Moonbit의 타입 시스템은 속도, 병렬화, 점진적 검사를 위해 설계되어, 우수한 IDE 지원을 제공
     * 이 언어는 다중 수준 중간 표현(IR)에서 전체 프로그램 최적화를 위해 공학적으로 설계되어, 메모리 레이아웃을 향상시키고 데이터 및 제어 흐름 분석에 대한 우수한 맥락을 제공
     * ReScript와 Rust와 달리, Moonbit은 함수 수준 병렬 의미 분석을 허용하여, 대규모 모노레포를 처리하고 밀리초 응답 시간을 제공하며, IDE 확장성을 크게 향상시킴
     * Moonbit은 효과적인 데드 코드 제거를 위해 설계되어, 최종 코드 크기를 줄이고 보안을 강화하며 공격 취약성을 줄임
     * 이 언어는 자동 메모리 관리로 프로그래밍을 더 쉽게 만들며, 이는 Rust와 차별화되는 특징. Golang과 달리 포인터나 왼쪽 값과 같은 위험 요소를 피함
     * Moonbit은 또한 플랫폼으로서 기능하며, 고속 빌드 도구, 패키지 관리자, 컴파일러, IDE, 그리고 오프라인 기능이 있는 독특하고 컨테이너가 없는 Cloud IDE를 제공
     * 간단한 피보나치 예제는 Moonbit의 장점을 보여주며, 이에는 우수한 로컬 타입 추론, 간결한 Wasm 크기, 좋은 성능, 사용자 친화성이 포함됨
     * Moonbit은 2024년 Q2 말까지 베타 상태에 도달할 것으로 예상되며, 이는 상대적인 안정성, 최소한의 버그, 그리고 Wasm 호스트와의 상호 작용을 위한 견고한 외부 함수 인터페이스(FFI) 단계를 나타냄
     * Moonbit 팀은 그들의 포럼, 디스코드, 또는 트위터 계정을 통한 커뮤니티 참여 및 초기 피드백을 환영함

        Hacker News 의견

     * 프로젝트 리더가 빠르고, 간결하며 사용자 친화적인 WebAssembly 언어인 Moonbit를 소개하고, 사용자들이 시도해볼 수 있도록 온라인 IDE 링크를 공유했습니다.
     * 프로젝트의 문서는 GitHub에서 이용 가능하며, 프로젝트가 베타 상태에 도달하면 컴파일러가 공개될 예정입니다. 이는 2024년 Q2 말에 예상됩니다.
     * 일부 사용자들은 func와 fn 키워드의 함수 정의에 대한 사용 불일치에 대해 우려를 표현했습니다.
     * Moonbit와 AssemblyScript, Grain 등의 다른 언어들과의 비교가 이루어졌으며, Moonbit의 독특한 이점에 대해 의문을 제기했습니다.
     * Moonbit이 현대적인 언어로서, WebAssembly를 대상으로 하는 가비지 컬렉션(GC)을 가지고 있어서 흥분하고 있습니다.
     * Moonbit의 GC에 대한 질문이 제기되었으며, 특히 피보나치에 대한 결과 바이너리의 크기와 관련하여 질문이 제기되었습니다.
     * Moonbit 팀은 2024년 Q2 말까지 베타 상태에 도달할 계획이며, 전략적 계획은 WebAssembly 2.0을 위한 WebAssembly GC 통합과 WebAssembly 1.0을 위한 자체 제작 GC를 포함합니다.
     * 일부 사용자들은 Moonbit 사이트의 언어 비교에 Grain을 추가하는 것을 제안했습니다.
     * 프로젝트 팀의 링크가 중국 대학 페이지로 이어지는 것에 대한 우려가 제기되었으며, 이는 대학 프로젝트일 수 있다는 제안을 하였습니다.
     * 프로젝트가 Meta와 연관되어 있는지에 대한 질문이 있습니다. 창시자인 Hongbo Zhang이 이전에 Meta에서 오픈 소스 프로그래밍 언어 프로젝트를 진행한 적이 있습니다.
"
"https://news.hada.io/topic?id=10382","LK-99는 초전도체가 아니다 - 과학자들이 수수께끼를 풀어낸 방법","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 LK-99는 초전도체가 아니다 - 과학자들이 수수께끼를 풀어낸 방법

     * LK-99: 구리, 납, 인, 산소의 화합물은 처음에는 상온, 대기압에서 작동하는 첫 번째 초전도체로 생각되었습니다.
     * 이 주장은 서울의 퀀텀 에너지 연구 센터 팀에 의해 제기되었으며, 이들은 LK-99가 정상 압력과 최소한 127ºC(400 켈빈)까지의 온도에서 초전도체라는 사전 인쇄물을 발표했습니다.
     * 그러나 수차례의 복제 노력 끝에 LK-99가 상온 초전도체가 아니라는 결론이 내려졌습니다.
     * LK-99의 초기 초전도체와 같은 행동은 물질 내 불순물, 특히 전기 저항성의 급격한 하락과 자석 위의 부분적인 부양을 책임지는 구리 황화물에 기인했다고 추정되었습니다.
     * 북경의 북경대학교와 중국 과학원(CAS)의 별도의 팀들은 이러한 현상에 대해 평범한 설명을 찾았습니다.
     * 미국과 유럽의 연구자들에 의한 연구는 LK-99의 구조가 초전도성을 불가능하게 만드는 방법을 보여주었습니다.
     * 다른 연구자들은 LK-99의 순수한 샘플을 합성하고 연구하여, 이것이 초전도체가 아니라 절연체라는 것을 확인했습니다.
     * 한국 팀의 주장은 LK-99의 두 가지 특성, 즉 자석 위의 부양과 저항성의 급격한 하락에 기반했습니다. 그러나 이러한 현상은 강자성과 구리 황화물 불순물의 존재에 의해 설명되었습니다.
     * 독일 슈투트가르트의 막스 플랑크 고체 연구소 팀은 LK-99의 순수한 결정을 합성하여, 이것이 절연체가 아니라 초전도체가 아니라는 것을 확인했습니다.
     * LK-99의 사건은 과학에서 재현성의 중요성과 데이터의 신중한 해석이 필요하다는 교훈으로 여겨졌습니다.

   이제 마무리 되는 분위기군요. 여러모로 아쉽습니다.

        Hacker News 의견

     * LK-99에 대한 실망에 대한 기사
     * LK-99에 대한 실망에도 불구하고, 논문에 대한 흥분과 재현 시도는 긍정적인 경험으로 보여짐
     * Sixty Symbols의 비디오, Philip Moriarty 교수가 LK-99 주변의 과대평가와 과학 커뮤니티의 회의적 태도 부족을 비판
     * Thunderf00t의 비디오 언급, 고온 초전도체인 LK-99와 같은 것들이 그들의 재료 특성 때문에 대부분의 응용 분야에서 사용되지 않음을 강조
     * LLNL 및 Fermi와 같은 공인된 연구소들이 LK-99에 집중하는 과학 커뮤니티에 무시되었다는 기사 언급
     * 일부 독자들은 LK-99가 다른 확인된 특성 때문에 여전히 유용할 수 있는지, 아니면 전체 에피소드가 유용성 관점에서 실수였는지 의문을 제기
     * 논의에 더 다양한 관점이 필요하다는 요구, CISR 인용
     * 하버드 대학의 전 연구원이 이제 금융 분야에서 일하는 것에 대한 기사 언급
     * 초전도체로서의 LK-99 초기 식별에 대한 일부 독자들의 의문, 저항이 너무 높아 보였기 때문
     * LK-99, 특히 구리 황화물이 보여주는 특성이 새롭거나 어떤 방식으로 유용할 수 있는지에 대한 질문으로 기사 종료
"
